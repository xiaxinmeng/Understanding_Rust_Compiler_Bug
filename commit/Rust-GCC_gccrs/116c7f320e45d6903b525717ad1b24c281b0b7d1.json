{"sha": "116c7f320e45d6903b525717ad1b24c281b0b7d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE2YzdmMzIwZTQ1ZDY5MDNiNTI1NzE3YWQxYjI0YzI4MWIwYjdkMQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2018-08-13T13:37:19Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2018-08-13T13:37:19Z"}, "message": "config.gcc (rs6000-ibm-aix4.x): Delete.\n\n        * config.gcc (rs6000-ibm-aix4.x): Delete.\n        (rs6000-ibm-aix5.1): Delete.\n        (rs6000-ibm-aix5.2): Delete.\n        (rs6000-ibm-aix5.3): Delete.\n        * config/rs6000/aix43.h: Delete.\n        * config/rs6000/aix51.h: Delete.\n        * config/rs6000/aix52.h: Delete.\n        * config/rs6000/t-aix43: Delete.\n\nFrom-SVN: r263506", "tree": {"sha": "3a432f4c574641b01c4b676a98be8eab1bf43933", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a432f4c574641b01c4b676a98be8eab1bf43933"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/116c7f320e45d6903b525717ad1b24c281b0b7d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/116c7f320e45d6903b525717ad1b24c281b0b7d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/116c7f320e45d6903b525717ad1b24c281b0b7d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/116c7f320e45d6903b525717ad1b24c281b0b7d1/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f"}], "stats": {"total": 781, "additions": 11, "deletions": 770}, "files": [{"sha": "855da9d03d7a34de62f2620e386bc397fc5cd1ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116c7f320e45d6903b525717ad1b24c281b0b7d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116c7f320e45d6903b525717ad1b24c281b0b7d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=116c7f320e45d6903b525717ad1b24c281b0b7d1", "patch": "@@ -1,3 +1,14 @@\n+2018-08-13  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config.gcc (rs6000-ibm-aix4.x): Delete.\n+\t(rs6000-ibm-aix5.1): Delete.\n+\t(rs6000-ibm-aix5.2): Delete.\n+\t(rs6000-ibm-aix5.3): Delete.\n+\t* config/rs6000/aix43.h: Delete.\n+\t* config/rs6000/aix51.h: Delete.\n+\t* config/rs6000/aix52.h: Delete.\n+\t* config/rs6000/t-aix43: Delete.\n+\n 2018-08-13  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* config/s390/s390.c (s390_decompose_constant_pool_ref):"}, {"sha": "17ca0cf061508df74a98259fbf9bebaab713dd58", "filename": "gcc/config.gcc", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116c7f320e45d6903b525717ad1b24c281b0b7d1/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116c7f320e45d6903b525717ad1b24c281b0b7d1/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=116c7f320e45d6903b525717ad1b24c281b0b7d1", "patch": "@@ -2635,42 +2635,6 @@ powerpcle-*-eabi*)\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \tuse_gcc_stdint=wrap\n \t;;\n-rs6000-ibm-aix4.[3456789]* | powerpc-ibm-aix4.[3456789]*)\n-\ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/aix.h rs6000/aix43.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n-\ttmake_file=\"rs6000/t-aix43 t-slibgcc\"\n-\textra_options=\"${extra_options} rs6000/aix64.opt\"\n-\tuse_collect2=yes\n-\tthread_file='aix'\n-\tuse_gcc_stdint=provide\n-\textra_headers=\n-\t;;\n-rs6000-ibm-aix5.1.* | powerpc-ibm-aix5.1.*)\n-\ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/aix.h rs6000/aix51.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n-\textra_options=\"${extra_options} rs6000/aix64.opt\"\n-\ttmake_file=\"rs6000/t-aix43 t-slibgcc\"\n-\tuse_collect2=yes\n-\tthread_file='aix'\n-\tuse_gcc_stdint=wrap\n-\textra_headers=\n-\t;;\n-rs6000-ibm-aix5.2.* | powerpc-ibm-aix5.2.*)\n-\ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix52.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n-\ttmake_file=\"rs6000/t-aix52 t-slibgcc\"\n-\textra_options=\"${extra_options} rs6000/aix64.opt\"\n-\tuse_collect2=yes\n-\tthread_file='aix'\n-\tuse_gcc_stdint=wrap\n-\textra_headers=\n-\t;;\n-rs6000-ibm-aix5.3.* | powerpc-ibm-aix5.3.*)\n-\ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix53.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n-\ttmake_file=\"rs6000/t-aix52 t-slibgcc\"\n-\textra_options=\"${extra_options} rs6000/aix64.opt\"\n-\tuse_collect2=yes\n-\tthread_file='aix'\n-\tuse_gcc_stdint=wrap\n-\textra_headers=altivec.h\n-\t;;\n rs6000-ibm-aix6.* | powerpc-ibm-aix6.*)\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix61.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n \ttmake_file=\"rs6000/t-aix52 t-slibgcc\""}, {"sha": "bac8b53a31d9a1996c1f1764ffabd448d1f6e283", "filename": "gcc/config/rs6000/aix43.h", "status": "removed", "additions": 0, "deletions": 167, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f/gcc%2Fconfig%2Frs6000%2Faix43.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f/gcc%2Fconfig%2Frs6000%2Faix43.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix43.h?ref=bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f", "patch": "@@ -1,167 +0,0 @@\n-/* Definitions of target machine for GNU compiler,\n-   for IBM RS/6000 POWER running AIX version 4.3.\n-   Copyright (C) 1998-2018 Free Software Foundation, Inc.\n-   Contributed by David Edelsohn (edelsohn@gnu.org).\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-/* The macro SUBTARGET_OVERRIDE_OPTIONS is provided for subtargets, to\n-   get control in TARGET_OPTION_OVERRIDE.  */\n-\n-#define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_64BIT && ! TARGET_POWERPC64)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      rs6000_isa_flags |= OPTION_MASK_POWERPC64;\t\t\t\\\n-      warning (0, \"-maix64 requires PowerPC64 architecture remain enabled\"); \\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_SOFT_FLOAT && TARGET_LONG_DOUBLE_128)\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      rs6000_long_double_type_size = 64;\t\t\t\t\\\n-      if (global_options_set.x_rs6000_long_double_type_size)\t\t\\\n-\twarning (0, \"soft-float and long-double-128 are incompatible\");\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_POWERPC64 && ! TARGET_64BIT)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      error (\"-maix64 required: 64-bit computation with 32-bit addressing not yet supported\"); \\\n-    }\t\t\t\t\t\t\t\t\t\\\n-} while (0)\n-\n-#undef ASM_SPEC\n-#define ASM_SPEC \"-u %{maix64:-a64 %{!mcpu*:-mppc64}} %(asm_cpu)\"\n-\n-/* Common ASM definitions used by ASM_SPEC amongst the various targets\n-   for handling -mcpu=xxx switches.  */\n-#undef ASM_CPU_SPEC\n-#define ASM_CPU_SPEC \\\n-\"%{!mcpu*: %{!maix64: \\\n-  %{!mpowerpc64: %(asm_default)} \\\n-  %{mpowerpc64: -mppc64}}} \\\n-%{mcpu=power3: -m620} \\\n-%{mcpu=power4: -m620} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=rs64a: -mppc} \\\n-%{mcpu=601: -m601} \\\n-%{mcpu=602: -mppc} \\\n-%{mcpu=603: -m603} \\\n-%{mcpu=603e: -m603} \\\n-%{mcpu=604: -m604} \\\n-%{mcpu=604e: -m604} \\\n-%{mcpu=620: -m620} \\\n-%{mcpu=630: -m620}\"\n-\n-#undef\tASM_DEFAULT_SPEC\n-#define ASM_DEFAULT_SPEC \"-mppc\"\n-\n-#undef TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS()     \\\n-  do                                 \\\n-    {                                \\\n-      builtin_define (\"_AIX43\");     \\\n-      TARGET_OS_AIX_CPP_BUILTINS (); \\\n-    }                                \\\n-  while (0)\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE}\\\n-   %{ansi: -D_ANSI_C_SOURCE}\\\n-   %{maix64: -D__64BIT__}\\\n-   %{mpe: -I%R/usr/lpp/ppe.poe/include}\\\n-   %{pthread: -D_THREAD_SAFE}\"\n-\n-/* The GNU C++ standard library requires that these macros be \n-   defined.  */\n-#undef CPLUSPLUS_CPP_SPEC\t\t\t\n-#define CPLUSPLUS_CPP_SPEC\t\t\t\\\n-  \"-D_ALL_SOURCE\t\t\t\t\\\n-   %{maix64: -D__64BIT__}\t\t\t\\\n-   %{mpe: -I%R/usr/lpp/ppe.poe/include}\t\t\\\n-   %{pthread: -D_THREAD_SAFE}\"\n-\n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT 0\n-\n-#undef PROCESSOR_DEFAULT\n-#define PROCESSOR_DEFAULT PROCESSOR_PPC604e\n-\n-/* AIX does not support Altivec.  */\n-#undef  TARGET_ALTIVEC\n-#define TARGET_ALTIVEC 0\n-#undef  TARGET_ALTIVEC_ABI\n-#define TARGET_ALTIVEC_ABI 0\n-#undef  TARGET_EXTRA_BUILTINS\n-#define TARGET_EXTRA_BUILTINS 0\n-\n-\n-/* Define this macro as a C expression for the initializer of an\n-   array of string to tell the driver program which options are\n-   defaults for this target and thus do not need to be handled\n-   specially when using `MULTILIB_OPTIONS'.\n-\n-   Do not define this macro if `MULTILIB_OPTIONS' is not defined in\n-   the target makefile fragment or if none of the options listed in\n-   `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n-\n-#undef\tMULTILIB_DEFAULTS\n-#define\tMULTILIB_DEFAULTS { \"mcpu=common\" }\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \"%{pg:-L%R/lib/profiled -L%R/usr/lib/profiled}\\\n-   %{p:-L%R/lib/profiled -L%R/usr/lib/profiled}\\\n-   %{!maix64:%{!shared:%{g*:-lg}}}\\\n-   %{mpe:-L%R/usr/lpp/ppe.poe/lib -lmpi -lvtd}\\\n-   %{pthread:-L%R/usr/lib/threads -lpthreads -lc_r %R/usr/lib/libc.a}\\\n-   %{!pthread:-lc}\"\n-\n-#undef LINK_SPEC\n-#define LINK_SPEC \"-bpT:0x10000000 -bpD:0x20000000 %{!r:-btextro} -bnodelcsect\\\n-   %{static:-bnso %(link_syscalls) } %{shared:-bM:SRE %{!e:-bnoentry}}\\\n-   %{!maix64:%{!shared:%{g*: %(link_libg) }}} %{maix64:-b64}\\\n-   %{mpe:-binitfini:poe_remote_main}\"\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"%{!shared:\\\n-   %{maix64:%{pg:gcrt0_64%O%s}%{!pg:%{p:mcrt0_64%O%s}%{!p:crt0_64%O%s}}}\\\n-   %{!maix64:\\\n-     %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n-     %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}\"\n-\n-/* AIX 4.3 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n-\n-#undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"long int\"\n-\n-/* AIX 4.2 and above provides initialization and finalization function\n-   support from linker command line.  */\n-#undef HAS_INIT_SECTION\n-#define HAS_INIT_SECTION\n-\n-#undef LD_INIT_SWITCH\n-#define LD_INIT_SWITCH \"-binitfini\"\n-\n-/* The IBM AIX 4.x assembler doesn't support forward references in\n-   .set directives.  We handle this by deferring the output of .set\n-   directives to the end of the compilation unit.  */\n-#define TARGET_DEFERRED_OUTPUT_DEFS(DECL,TARGET) true\n-\n-/* This target uses the aix64.opt file.  */\n-#define TARGET_USES_AIX64_OPT 1\n-\n-#define TARGET_AIX_VERSION 43\n-\n-#undef TARGET_LIBC_HAS_FUNCTION\n-#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function"}, {"sha": "457d4118dab781268de64dedc9f05c14e2677f60", "filename": "gcc/config/rs6000/aix51.h", "status": "removed", "additions": 0, "deletions": 169, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f/gcc%2Fconfig%2Frs6000%2Faix51.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f/gcc%2Fconfig%2Frs6000%2Faix51.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix51.h?ref=bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f", "patch": "@@ -1,169 +0,0 @@\n-/* Definitions of target machine for GNU compiler,\n-   for IBM RS/6000 POWER running AIX V5.\n-   Copyright (C) 2001-2018 Free Software Foundation, Inc.\n-   Contributed by David Edelsohn (edelsohn@gnu.org).\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-/* The macro SUBTARGET_OVERRIDE_OPTIONS is provided for subtargets, to\n-   get control in TARGET_OPTION_OVERRIDE.  */\n-\n-#define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_64BIT && ! TARGET_POWERPC64)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      rs6000_isa_flags |= OPTION_MASK_POWERPC64;\t\t\t\\\n-      warning (0, \"-maix64 requires PowerPC64 architecture remain enabled\"); \\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_POWERPC64 && ! TARGET_64BIT)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      error (\"-maix64 required: 64-bit computation with 32-bit addressing not yet supported\"); \\\n-    }\t\t\t\t\t\t\t\t\t\\\n-} while (0)\n-\n-#undef ASM_SPEC\n-#define ASM_SPEC \"-u %{maix64:-a64 %{!mcpu*:-mppc64}} %(asm_cpu)\"\n-\n-/* Common ASM definitions used by ASM_SPEC amongst the various targets\n-   for handling -mcpu=xxx switches.  */\n-#undef ASM_CPU_SPEC\n-#define ASM_CPU_SPEC \\\n-\"%{!mcpu*: %{!maix64: \\\n-  %{!mpowerpc64: %(asm_default)} \\\n-  %{mpowerpc64: -mppc64}}} \\\n-%{mcpu=power3: -m620} \\\n-%{mcpu=power4: -m620} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=rs64a: -mppc} \\\n-%{mcpu=601: -m601} \\\n-%{mcpu=602: -mppc} \\\n-%{mcpu=603: -m603} \\\n-%{mcpu=603e: -m603} \\\n-%{mcpu=604: -m604} \\\n-%{mcpu=604e: -m604} \\\n-%{mcpu=620: -m620} \\\n-%{mcpu=630: -m620} \\\n-%{mcpu=970: -m620} \\\n-%{mcpu=G5: -m620}\"\n-\n-#undef\tASM_DEFAULT_SPEC\n-#define ASM_DEFAULT_SPEC \"-mppc\"\n-\n-#undef TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS()     \\\n-  do                                 \\\n-    {                                \\\n-      builtin_define (\"_AIX43\");     \\\n-      builtin_define (\"_AIX51\");     \\\n-      TARGET_OS_AIX_CPP_BUILTINS (); \\\n-    }                                \\\n-  while (0)\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE}\t\\\n-  %{ansi: -D_ANSI_C_SOURCE}\t\t\t\\\n-  %{maix64: -D__64BIT__}\t\t\t\\\n-  %{mpe: -I%R/usr/lpp/ppe.poe/include}\t\t\\\n-  %{pthread: -D_THREAD_SAFE}\"\n-\n-/* The GNU C++ standard library requires that these macros be \n-   defined.  */\n-#undef CPLUSPLUS_CPP_SPEC                       \n-#define CPLUSPLUS_CPP_SPEC\t\t\t\\\n-  \"-D_ALL_SOURCE\t\t\t\t\\\n-   %{maix64: -D__64BIT__}\t\t\t\\\n-   %{mpe: -I%R/usr/lpp/ppe.poe/include}\t\t\\\n-   %{pthread: -D_THREAD_SAFE}\"\n-\n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT 0\n-\n-#undef PROCESSOR_DEFAULT\n-#define PROCESSOR_DEFAULT PROCESSOR_PPC604e\n-\n-/* AIX does not support Altivec.  */\n-#undef  TARGET_ALTIVEC\n-#define TARGET_ALTIVEC 0\n-#undef  TARGET_ALTIVEC_ABI\n-#define TARGET_ALTIVEC_ABI 0\n-#undef  TARGET_EXTRA_BUILTINS\n-#define TARGET_EXTRA_BUILTINS 0\n-\n-\n-/* Define this macro as a C expression for the initializer of an\n-   array of string to tell the driver program which options are\n-   defaults for this target and thus do not need to be handled\n-   specially when using `MULTILIB_OPTIONS'.\n-\n-   Do not define this macro if `MULTILIB_OPTIONS' is not defined in\n-   the target makefile fragment or if none of the options listed in\n-   `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n-\n-#undef\tMULTILIB_DEFAULTS\n-#define\tMULTILIB_DEFAULTS { \"mcpu=common\" }\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \"%{pg:-L%R/lib/profiled -L%R/usr/lib/profiled}\\\n-   %{p:-L%R/lib/profiled -L%R/usr/lib/profiled}\\\n-   %{!maix64:%{!shared:%{g*:-lg}}}\\\n-   %{mpe:-L%R/usr/lpp/ppe.poe/lib -lmpi -lvtd}\\\n-   %{pthread:-lpthreads} -lc\"\n-\n-#undef LINK_SPEC\n-#define LINK_SPEC \"-bpT:0x10000000 -bpD:0x20000000 %{!r:-btextro}\\\n-   %{static:-bnso %(link_syscalls) } %{shared:-bM:SRE %{!e:-bnoentry}}\\\n-   %{!maix64:%{!shared:%{g*: %(link_libg) }}} %{maix64:-b64}\\\n-   %{mpe:-binitfini:poe_remote_main}\"\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"%{!shared:\\\n-   %{maix64:%{pg:gcrt0_64%O%s}%{!pg:%{p:mcrt0_64%O%s}%{!p:crt0_64%O%s}}}\\\n-   %{!maix64:\\\n-     %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n-     %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}\"\n-\n-/* AIX V5 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n-\n-#undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"long int\"\n-\n-/* Type used for wchar_t, as a string used in a declaration.  */\n-#undef  WCHAR_TYPE\n-#define WCHAR_TYPE (!TARGET_64BIT ? \"short unsigned int\" : \"unsigned int\")\n-\n-/* Width of wchar_t in bits.  */\n-#undef  WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE (!TARGET_64BIT ? 16 : 32)\n-\n-/* AIX 4.2 and above provides initialization and finalization function\n-   support from linker command line.  */\n-#undef HAS_INIT_SECTION\n-#define HAS_INIT_SECTION\n-\n-#undef LD_INIT_SWITCH\n-#define LD_INIT_SWITCH \"-binitfini\"\n-\n-/* This target uses the aix64.opt file.  */\n-#define TARGET_USES_AIX64_OPT 1\n-\n-/* This target defines SUPPORTS_WEAK and TARGET_ASM_NAMED_SECTION,\n-   but does not have crtbegin/end.  */\n-\n-#define TARGET_AIX_VERSION 51\n-\n-#undef TARGET_LIBC_HAS_FUNCTION\n-#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function"}, {"sha": "7a8589774ac021dbee179b64f17ffc0ac12fe27e", "filename": "gcc/config/rs6000/aix52.h", "status": "removed", "additions": 0, "deletions": 179, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f/gcc%2Fconfig%2Frs6000%2Faix52.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f/gcc%2Fconfig%2Frs6000%2Faix52.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix52.h?ref=bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f", "patch": "@@ -1,179 +0,0 @@\n-/* Definitions of target machine for GNU compiler,\n-   for IBM RS/6000 POWER running AIX V5.2.\n-   Copyright (C) 2002-2018 Free Software Foundation, Inc.\n-   Contributed by David Edelsohn (edelsohn@gnu.org).\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-/* The macro SUBTARGET_OVERRIDE_OPTIONS is provided for subtargets, to\n-   get control in TARGET_OPTION_OVERRIDE.  */\n-\n-#define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_64BIT && ! TARGET_POWERPC64)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      rs6000_isa_flags |= OPTION_MASK_POWERPC64;\t\t\t\\\n-      warning (0, \"-maix64 requires PowerPC64 architecture remain enabled\"); \\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_SOFT_FLOAT && TARGET_LONG_DOUBLE_128)\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      rs6000_long_double_type_size = 64;\t\t\t\t\\\n-      if (global_options_set.x_rs6000_long_double_type_size)\t\t\\\n-\twarning (0, \"soft-float and long-double-128 are incompatible\");\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_POWERPC64 && ! TARGET_64BIT)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      error (\"-maix64 required: 64-bit computation with 32-bit addressing not yet supported\"); \\\n-    }\t\t\t\t\t\t\t\t\t\\\n-} while (0)\n-\n-#undef ASM_SPEC\n-#define ASM_SPEC \"-u %{maix64:-a64 %{!mcpu*:-mppc64}} %(asm_cpu)\"\n-\n-/* Common ASM definitions used by ASM_SPEC amongst the various targets\n-   for handling -mcpu=xxx switches.  */\n-#undef ASM_CPU_SPEC\n-#define ASM_CPU_SPEC \\\n-\"%{!mcpu*: %{!maix64: \\\n-  %{mpowerpc64: -mppc64} \\\n-  %{!mpowerpc64: %(asm_default)}}} \\\n-%{mcpu=power3: -m620} \\\n-%{mcpu=power4: -m620} \\\n-%{mcpu=power5: -m620} \\\n-%{mcpu=power5+: -m620} \\\n-%{mcpu=power6: -m620} \\\n-%{mcpu=power6x: -m620} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=rs64a: -mppc} \\\n-%{mcpu=603: -m603} \\\n-%{mcpu=603e: -m603} \\\n-%{mcpu=604: -m604} \\\n-%{mcpu=604e: -m604} \\\n-%{mcpu=620: -m620} \\\n-%{mcpu=630: -m620} \\\n-%{mcpu=970: -m620} \\\n-%{mcpu=G5: -m620}\"\n-\n-#undef\tASM_DEFAULT_SPEC\n-#define ASM_DEFAULT_SPEC \"-mppc\"\n-\n-#undef TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS()     \\\n-  do                                 \\\n-    {                                \\\n-      builtin_define (\"_AIX43\");     \\\n-      builtin_define (\"_AIX51\");     \\\n-      builtin_define (\"_AIX52\");     \\\n-      TARGET_OS_AIX_CPP_BUILTINS (); \\\n-    }                                \\\n-  while (0)\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE}\t\\\n-  %{ansi: -D_ANSI_C_SOURCE}\t\t\t\\\n-  %{maix64: -D__64BIT__}\t\t\t\\\n-  %{mpe: -I%R/usr/lpp/ppe.poe/include}\t\t\\\n-  %{pthread: -D_THREAD_SAFE}\"\n-\n-/* The GNU C++ standard library requires that these macros be \n-   defined.  Synchronize with libstdc++ os_defines.h.  */\n-#undef CPLUSPLUS_CPP_SPEC                       \n-#define CPLUSPLUS_CPP_SPEC\t\t\t\\\n-  \"-D_ALL_SOURCE\t\t\t\t\\\n-   %{maix64: -D__64BIT__}\t\t\t\\\n-   %{mpe: -I%R/usr/lpp/ppe.poe/include}\t\t\\\n-   %{pthread: -D_THREAD_SAFE}\"\n-\n-#undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT 0\n-\n-#undef  PROCESSOR_DEFAULT\n-#define PROCESSOR_DEFAULT PROCESSOR_POWER4\n-#undef  PROCESSOR_DEFAULT64\n-#define PROCESSOR_DEFAULT64 PROCESSOR_POWER4\n-\n-/* AIX does not support Altivec.  */\n-#undef  TARGET_ALTIVEC\n-#define TARGET_ALTIVEC 0\n-#undef  TARGET_ALTIVEC_ABI\n-#define TARGET_ALTIVEC_ABI 0\n-#undef  TARGET_EXTRA_BUILTINS\n-#define TARGET_EXTRA_BUILTINS 0\n-\n-/* Define this macro as a C expression for the initializer of an\n-   array of string to tell the driver program which options are\n-   defaults for this target and thus do not need to be handled\n-   specially when using `MULTILIB_OPTIONS'.\n-\n-   Do not define this macro if `MULTILIB_OPTIONS' is not defined in\n-   the target makefile fragment or if none of the options listed in\n-   `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n-\n-#undef\tMULTILIB_DEFAULTS\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \"%{pg:-L%R/lib/profiled -L%R/usr/lib/profiled}\\\n-   %{p:-L%R/lib/profiled -L%R/usr/lib/profiled}\\\n-   %{!maix64:%{!shared:%{g*:-lg}}}\\\n-   %{mpe:-L%R/usr/lpp/ppe.poe/lib -lmpi -lvtd}\\\n-   %{pthread:-lpthreads} -lc\"\n-\n-#undef LINK_SPEC\n-#define LINK_SPEC \"-bpT:0x10000000 -bpD:0x20000000 %{!r:-btextro}\\\n-   %{static:-bnso %(link_syscalls) } %{shared:-bM:SRE %{!e:-bnoentry}}\\\n-   %{!maix64:%{!shared:%{g*: %(link_libg) }}} %{maix64:-b64}\\\n-   %{mpe:-binitfini:poe_remote_main}\"\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"%{!shared:\\\n-   %{maix64:%{pg:gcrt0_64%O%s}%{!pg:%{p:mcrt0_64%O%s}%{!p:crt0_64%O%s}}}\\\n-   %{!maix64:\\\n-     %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n-     %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}\"\n-\n-/* AIX V5 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n-\n-#undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"long int\"\n-\n-/* Type used for wchar_t, as a string used in a declaration.  */\n-#undef  WCHAR_TYPE\n-#define WCHAR_TYPE (!TARGET_64BIT ? \"short unsigned int\" : \"unsigned int\")\n-\n-/* Width of wchar_t in bits.  */\n-#undef  WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE (!TARGET_64BIT ? 16 : 32)\n-\n-/* AIX 4.2 and above provides initialization and finalization function\n-   support from linker command line.  */\n-#undef HAS_INIT_SECTION\n-#define HAS_INIT_SECTION\n-\n-#undef LD_INIT_SWITCH\n-#define LD_INIT_SWITCH \"-binitfini\"\n-\n-#ifndef _AIX52\n-extern long long int    atoll(const char *);  \n-#endif\n-\n-/* This target uses the aix64.opt file.  */\n-#define TARGET_USES_AIX64_OPT 1\n-\n-/* This target defines SUPPORTS_WEAK and TARGET_ASM_NAMED_SECTION,\n-   but does not have crtbegin/end.  */\n-\n-#define TARGET_AIX_VERSION 52"}, {"sha": "e708108ce9c2b940f5f53a4e4fb0b7a1c7340d4c", "filename": "gcc/config/rs6000/aix53.h", "status": "removed", "additions": 0, "deletions": 180, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f/gcc%2Fconfig%2Frs6000%2Faix53.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f/gcc%2Fconfig%2Frs6000%2Faix53.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix53.h?ref=bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f", "patch": "@@ -1,180 +0,0 @@\n-/* Definitions of target machine for GNU compiler,\n-   for IBM RS/6000 POWER running AIX V5.3.\n-   Copyright (C) 2002-2018 Free Software Foundation, Inc.\n-   Contributed by David Edelsohn (edelsohn@gnu.org).\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-/* The macro SUBTARGET_OVERRIDE_OPTIONS is provided for subtargets, to\n-   get control in TARGET_OPTION_OVERRIDE.  */\n-\n-#define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_64BIT && ! TARGET_POWERPC64)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      rs6000_isa_flags |= OPTION_MASK_POWERPC64;\t\t\t\\\n-      warning (0, \"-maix64 requires PowerPC64 architecture remain enabled\"); \\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_SOFT_FLOAT && TARGET_LONG_DOUBLE_128)\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      rs6000_long_double_type_size = 64;\t\t\t\t\\\n-      if (global_options_set.x_rs6000_long_double_type_size)\t\t\\\n-\twarning (0, \"soft-float and long-double-128 are incompatible\");\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_POWERPC64 && ! TARGET_64BIT)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      error (\"-maix64 required: 64-bit computation with 32-bit addressing not yet supported\"); \\\n-    }\t\t\t\t\t\t\t\t\t\\\n-} while (0)\n-\n-#undef ASM_SPEC\n-#define ASM_SPEC \"-u %{maix64:-a64 %{!mcpu*:-mppc64}} %(asm_cpu)\"\n-\n-/* Common ASM definitions used by ASM_SPEC amongst the various targets for\n-   handling -mcpu=xxx switches.  There is a parallel list in driver-rs6000.c to\n-   provide the default assembler options if the user uses -mcpu=native, so if\n-   you make changes here, make them there also.  */\n-#undef ASM_CPU_SPEC\n-#define ASM_CPU_SPEC \\\n-\"%{!mcpu*: %{!maix64: \\\n-  %{mpowerpc64: -mppc64} \\\n-  %{maltivec: -m970} \\\n-  %{!maltivec: %{!mpowerpc64: %(asm_default)}}}} \\\n-%{mcpu=native: %(asm_cpu_native)} \\\n-%{mcpu=power3: -m620} \\\n-%{mcpu=power4: -mpwr4} \\\n-%{mcpu=power5: -mpwr5} \\\n-%{mcpu=power5+: -mpwr5x} \\\n-%{mcpu=power6: -mpwr6} \\\n-%{mcpu=power6x: -mpwr6} \\\n-%{mcpu=power7: -mpwr7} \\\n-%{mcpu=power8: -mpwr8} \\\n-%{mcpu=power9: -mpwr9} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=rs64a: -mppc} \\\n-%{mcpu=603: -m603} \\\n-%{mcpu=603e: -m603} \\\n-%{mcpu=604: -m604} \\\n-%{mcpu=604e: -m604} \\\n-%{mcpu=620: -m620} \\\n-%{mcpu=630: -m620} \\\n-%{mcpu=970: -m970} \\\n-%{mcpu=G5: -m970}\"\n-\n-#undef\tASM_DEFAULT_SPEC\n-#define ASM_DEFAULT_SPEC \"-mppc\"\n-\n-#undef TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS()     \\\n-  do                                 \\\n-    {                                \\\n-      builtin_define (\"_AIX43\");     \\\n-      builtin_define (\"_AIX51\");     \\\n-      builtin_define (\"_AIX52\");     \\\n-      builtin_define (\"_AIX53\");     \\\n-      TARGET_OS_AIX_CPP_BUILTINS (); \\\n-    }                                \\\n-  while (0)\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE}\t\\\n-  %{ansi: -D_ANSI_C_SOURCE}\t\t\t\\\n-  %{maix64: -D__64BIT__}\t\t\t\\\n-  %{mpe: -I%R/usr/lpp/ppe.poe/include}\t\t\\\n-  %{pthread: -D_THREAD_SAFE}\"\n-\n-/* The GNU C++ standard library requires that these macros be \n-   defined.  Synchronize with libstdc++ os_defines.h.  */\n-#undef CPLUSPLUS_CPP_SPEC                       \n-#define CPLUSPLUS_CPP_SPEC\t\t\t\\\n-  \"-D_ALL_SOURCE\t\t\t\t\\\n-   %{maix64: -D__64BIT__}\t\t\t\\\n-   %{mpe: -I%R/usr/lpp/ppe.poe/include}\t\t\\\n-   %{pthread: -D_THREAD_SAFE}\"\n-\n-#undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT 0\n-\n-#undef  PROCESSOR_DEFAULT\n-#define PROCESSOR_DEFAULT PROCESSOR_POWER5\n-#undef  PROCESSOR_DEFAULT64\n-#define PROCESSOR_DEFAULT64 PROCESSOR_POWER5\n-\n-/* Define this macro as a C expression for the initializer of an\n-   array of string to tell the driver program which options are\n-   defaults for this target and thus do not need to be handled\n-   specially when using `MULTILIB_OPTIONS'.\n-\n-   Do not define this macro if `MULTILIB_OPTIONS' is not defined in\n-   the target makefile fragment or if none of the options listed in\n-   `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n-\n-#undef\tMULTILIB_DEFAULTS\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \"%{pg:-L%R/lib/profiled -L%R/usr/lib/profiled}\\\n-   %{p:-L%R/lib/profiled -L%R/usr/lib/profiled}\\\n-   %{!maix64:%{!shared:%{g*:-lg}}}\\\n-   %{fprofile-arcs|fprofile-generate*|coverage:-lpthreads}\\\n-   %{mpe:-L%R/usr/lpp/ppe.poe/lib -lmpi -lvtd}\\\n-   %{pthread:-lpthreads} -lc\"\n-\n-#undef LINK_SPEC\n-#define LINK_SPEC \"-bpT:0x10000000 -bpD:0x20000000 %{!r:-btextro}\\\n-   %{static:-bnso %(link_syscalls) } %{shared:-bM:SRE %{!e:-bnoentry}}\\\n-   %{!maix64:%{!shared:%{g*: %(link_libg) }}} %{maix64:-b64}\\\n-   %{mpe:-binitfini:poe_remote_main}\"\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"%{!shared:\\\n-   %{maix64:%{pg:gcrt0_64%O%s}%{!pg:%{p:mcrt0_64%O%s}%{!p:crt0_64%O%s}}}\\\n-   %{!maix64:\\\n-     %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n-     %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}\"\n-\n-/* AIX V5 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n-\n-#undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"long int\"\n-\n-/* Type used for wchar_t, as a string used in a declaration.  */\n-#undef  WCHAR_TYPE\n-#define WCHAR_TYPE (!TARGET_64BIT ? \"short unsigned int\" : \"unsigned int\")\n-\n-/* Width of wchar_t in bits.  */\n-#undef  WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE (!TARGET_64BIT ? 16 : 32)\n-\n-/* AIX 4.2 and above provides initialization and finalization function\n-   support from linker command line.  */\n-#undef HAS_INIT_SECTION\n-#define HAS_INIT_SECTION\n-\n-#undef LD_INIT_SWITCH\n-#define LD_INIT_SWITCH \"-binitfini\"\n-\n-#ifndef _AIX52\n-extern long long int    atoll(const char *);  \n-#endif\n-\n-/* This target uses the aix64.opt file.  */\n-#define TARGET_USES_AIX64_OPT 1\n-\n-/* This target defines SUPPORTS_WEAK and TARGET_ASM_NAMED_SECTION,\n-   but does not have crtbegin/end.  */\n-\n-#define TARGET_AIX_VERSION 53"}, {"sha": "5c243d42858376ac4ae02d2f79013cd5db93dafb", "filename": "gcc/config/rs6000/t-aix43", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f/gcc%2Fconfig%2Frs6000%2Ft-aix43", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f/gcc%2Fconfig%2Frs6000%2Ft-aix43", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-aix43?ref=bd9b3d3d1a8d33e460ae137da0cb0d5a919e8f8f", "patch": "@@ -1,39 +0,0 @@\n-# Copyright (C) 1998-2018 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-# Build the libraries for pthread and all of the \n-# different processor models\n-\n-MULTILIB_OPTIONS\t= pthread \\\n-\t\t\t  mcpu=common/mcpu=powerpc/maix64\n-\n-MULTILIB_DIRNAMES\t= pthread \\\n-\t\t\t  common powerpc ppc64\n-\n-MULTILIB_MATCHES\t= mcpu?powerpc=mcpu?power3 \\\n-\t\t\t  mcpu?powerpc=mcpu?power4 \\\n-\t\t\t  mcpu?powerpc=mcpu?powerpc \\\n-\t\t\t  mcpu?powerpc=mcpu?rs64a \\\n-\t\t\t  mcpu?powerpc=mcpu?601 \\\n-\t\t\t  mcpu?powerpc=mcpu?602 \\\n-\t\t\t  mcpu?powerpc=mcpu?603 \\\n-\t\t\t  mcpu?powerpc=mcpu?603e \\\n-\t\t\t  mcpu?powerpc=mcpu?604 \\\n-\t\t\t  mcpu?powerpc=mcpu?604e \\\n-\t\t\t  mcpu?powerpc=mcpu?620 \\\n-\t\t\t  mcpu?powerpc=mcpu?630"}]}