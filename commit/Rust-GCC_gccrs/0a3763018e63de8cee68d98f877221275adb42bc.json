{"sha": "0a3763018e63de8cee68d98f877221275adb42bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEzNzYzMDE4ZTYzZGU4Y2VlNjhkOThmODc3MjIxMjc1YWRiNDJiYw==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2013-04-11T15:26:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T15:26:40Z"}, "message": "check.ads, [...] (Install_Null_Excluding_Check): No check in interface thunks since it is performed at the caller side.\n\n2013-04-11  Javier Miranda  <miranda@adacore.com>\n                                  \n\t* check.ads, exp_ch6.adb (Install_Null_Excluding_Check): No check in    \n\tinterface thunks since it is performed at the caller side.\n\t(Expand_Simple_Function_Return): No accessibility check needed in thunks\n\tsince the check is done by the target routine.\n\nFrom-SVN: r197810", "tree": {"sha": "a69b7ae2c1ed79773224e0cd8aef8c47533b5a94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a69b7ae2c1ed79773224e0cd8aef8c47533b5a94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a3763018e63de8cee68d98f877221275adb42bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a3763018e63de8cee68d98f877221275adb42bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a3763018e63de8cee68d98f877221275adb42bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a3763018e63de8cee68d98f877221275adb42bc/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5bfc86d857f1a267404164ad255b770c08b51d6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bfc86d857f1a267404164ad255b770c08b51d6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bfc86d857f1a267404164ad255b770c08b51d6e"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "53784aa4733144479a0c571c9c33087285350a2b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3763018e63de8cee68d98f877221275adb42bc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3763018e63de8cee68d98f877221275adb42bc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0a3763018e63de8cee68d98f877221275adb42bc", "patch": "@@ -1,3 +1,10 @@\n+2013-04-11  Javier Miranda  <miranda@adacore.com>\n+\n+\t* check.ads, exp_ch6.adb (Install_Null_Excluding_Check): No check in\n+\tinterface thunks since it is performed at the caller side.\n+\t(Expand_Simple_Function_Return): No accessibility check needed in thunks\n+\tsince the check is done by the target routine.\n+\n 2013-04-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_prag.adb (Analyze_Pragma, case Priority): pre-analyze"}, {"sha": "39325af1e25215538b69d781104cb93a0f79d3f4", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3763018e63de8cee68d98f877221275adb42bc/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3763018e63de8cee68d98f877221275adb42bc/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=0a3763018e63de8cee68d98f877221275adb42bc", "patch": "@@ -6583,6 +6583,13 @@ package body Checks is\n          return;\n       end if;\n \n+      --  No check needed in interface thunks since the runtime check is\n+      --  already performed at the caller side.\n+\n+      if Is_Thunk (Current_Scope) then\n+         return;\n+      end if;\n+\n       --  No check needed for the Get_Current_Excep.all.all idiom generated by\n       --  the expander within exception handlers, since we know that the value\n       --  can never be null."}, {"sha": "5c5c809e880faa057e52ca7bd136bad8d04dd5bc", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3763018e63de8cee68d98f877221275adb42bc/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3763018e63de8cee68d98f877221275adb42bc/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=0a3763018e63de8cee68d98f877221275adb42bc", "patch": "@@ -7485,12 +7485,16 @@ package body Exp_Ch6 is\n       --  return expression has a specific type whose level is known not to\n       --  be statically deeper than the function's result type.\n \n+      --  No runtime check needed in interface thunks since it is performed\n+      --  by the target primitive associated with the thunk.\n+\n       --  Note: accessibility check is skipped in the VM case, since there\n       --  does not seem to be any practical way to implement this check.\n \n       elsif Ada_Version >= Ada_2005\n         and then Tagged_Type_Expansion\n         and then Is_Class_Wide_Type (R_Type)\n+        and then not Is_Thunk (Current_Scope)\n         and then not Scope_Suppress.Suppress (Accessibility_Check)\n         and then\n           (Is_Class_Wide_Type (Etype (Exp))"}]}