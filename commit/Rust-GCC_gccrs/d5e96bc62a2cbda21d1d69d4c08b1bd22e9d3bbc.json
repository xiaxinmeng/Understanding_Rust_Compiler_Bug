{"sha": "d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVlOTZiYzYyYTJjYmRhMjFkMWQ2OWQ0YzA4YjFiZDIyZTlkM2JiYw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2007-08-31T10:20:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-31T10:20:54Z"}, "message": "einfo.ads, einfo.adb: New flag Is_Raised (Flag224).\n\n2007-08-31  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.ads, einfo.adb: New flag Is_Raised (Flag224). Update the\n\tstructure of E_Exception to reflect the new flag.\n\t(Is_Raised, Set_Is_Raised): New inlined routines.\n\tUpdate the usage of available flag to reflect the addition of Is_Raised.\n\t(Is_Raised, Set_Is_Raised): Bodies of new routines.\n\t(Write_Entity_Flags): Write the status of flag Is_Raised.\n\t(Is_Descendent_Of_Address): New entity flag, to simplify handling of\n\tspurious ambiguities when integer literals appear in the context of an\n\taddress type that is a visible integer type.\n\n\t* sem_ch11.adb (Analyze_Exception_Handler): Add code to warn on local\n\texceptions never being raised.\n\t(Analyze_Raise_Statement): When analyzing an exception, mark it as being\n\texplicitly raised.\n\nFrom-SVN: r127970", "tree": {"sha": "ee49770d0d5c5a94700cc68331253d52a4803116", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee49770d0d5c5a94700cc68331253d52a4803116"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb6e3d4145581f36d908c9a0868d6b72f3503176", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb6e3d4145581f36d908c9a0868d6b72f3503176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb6e3d4145581f36d908c9a0868d6b72f3503176"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "7b705b02f20d5da02cc2aacfa4fc2c0779970582", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc", "patch": "@@ -480,8 +480,8 @@ package body Einfo is\n \n    --    Has_Pragma_Preelab_Init         Flag221\n    --    Used_As_Generic_Actual          Flag222\n-   --    (unused)                        Flag223\n-   --    (unused)                        Flag224\n+   --    Is_Descendent_Of_Address        Flag223\n+   --    Is_Raised                       Flag224\n    --    (unused)                        Flag225\n    --    (unused)                        Flag226\n    --    (unused)                        Flag227\n@@ -1634,6 +1634,12 @@ package body Einfo is\n       return Flag176 (Id);\n    end Is_Discrim_SO_Function;\n \n+   function Is_Descendent_Of_Address (Id : E) return B is\n+   begin\n+      pragma Assert (Is_Type (Id));\n+      return Flag223 (Id);\n+   end Is_Descendent_Of_Address;\n+\n    function Is_Dispatching_Operation (Id : E) return B is\n    begin\n       pragma Assert (Nkind (Id) in N_Entity);\n@@ -1894,6 +1900,12 @@ package body Einfo is\n       return Flag189 (Id);\n    end Is_Pure_Unit_Access_Type;\n \n+   function Is_Raised (Id : E) return B is\n+   begin\n+      pragma Assert (Ekind (Id) = E_Exception);\n+      return Flag224 (Id);\n+   end Is_Raised;\n+\n    function Is_Remote_Call_Interface (Id : E) return B is\n    begin\n       return Flag62 (Id);\n@@ -3913,6 +3925,12 @@ package body Einfo is\n       Set_Flag74 (Id, V);\n    end Set_Is_CPP_Class;\n \n+   procedure Set_Is_Descendent_Of_Address (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Is_Type (Id));\n+      Set_Flag223 (Id, V);\n+   end Set_Is_Descendent_Of_Address;\n+\n    procedure Set_Is_Discrim_SO_Function (Id : E; V : B := True) is\n    begin\n       Set_Flag176 (Id, V);\n@@ -4195,6 +4213,12 @@ package body Einfo is\n       Set_Flag189 (Id, V);\n    end Set_Is_Pure_Unit_Access_Type;\n \n+   procedure Set_Is_Raised (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Ekind (Id) = E_Exception);\n+      Set_Flag224 (Id, V);\n+   end Set_Is_Raised;\n+\n    procedure Set_Is_Remote_Call_Interface (Id : E; V : B := True) is\n    begin\n       Set_Flag62 (Id, V);\n@@ -7168,6 +7192,7 @@ package body Einfo is\n       W (\"Is_Constructor\",                  Flag76  (Id));\n       W (\"Is_Controlled\",                   Flag42  (Id));\n       W (\"Is_Controlling_Formal\",           Flag97  (Id));\n+      W (\"Is_Descendent_Of_Address\",        Flag223 (Id));\n       W (\"Is_Discrim_SO_Function\",          Flag176 (Id));\n       W (\"Is_Dispatching_Operation\",        Flag6   (Id));\n       W (\"Is_Eliminated\",                   Flag124 (Id));\n@@ -7215,6 +7240,7 @@ package body Einfo is\n       W (\"Is_Public\",                       Flag10  (Id));\n       W (\"Is_Pure\",                         Flag44  (Id));\n       W (\"Is_Pure_Unit_Access_Type\",        Flag189 (Id));\n+      W (\"Is_Raised\",                       Flag224 (Id));\n       W (\"Is_Remote_Call_Interface\",        Flag62  (Id));\n       W (\"Is_Remote_Types\",                 Flag61  (Id));\n       W (\"Is_Renaming_Of_Object\",           Flag112 (Id));"}, {"sha": "924472bc1839163edb8f062329164c69f3295d58", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc", "patch": "@@ -1997,6 +1997,12 @@ package Einfo is\n --       Applies to all entities. Determine if given entity is a derived type.\n --       Always false if argument is not a type.\n \n+--    Is_Descendent_Of_Address (Flag223)\n+--       Applies to all types. Indicates that a type is an address type that\n+--       is visibly a numeric type. Used for semantic checks on VMS to remove\n+--       ambiguities in universal integer expressions that may have an address\n+--       interpretation\n+\n --    Is_Discrete_Type (synthesized)\n --       Applies to all entities, true for all discrete types and subtypes\n \n@@ -2481,6 +2487,10 @@ package Einfo is\n --       subtype appears in a pure unit. Used to give an error message at\n --       freeze time if the access type has a storage pool.\n \n+--    Is_Raised (Flag224)\n+--       Present in entities which denote exceptions. Set if the exception is\n+--       thrown by a raise statement.\n+\n --    Is_Real_Type (synthesized)\n --       Applies to all entities, true for real types and subtypes\n \n@@ -4745,6 +4755,7 @@ package Einfo is\n    --    Exception_Code                      (Uint22)\n    --    Discard_Names                       (Flag88)\n    --    Is_VMS_Exception                    (Flag133)\n+   --    Is_Raised                           (Flag224)\n \n    --  E_Exception_Type\n    --    Equivalent_Type                     (Node18)\n@@ -5734,6 +5745,7 @@ package Einfo is\n    function Is_Public                           (Id : E) return B;\n    function Is_Pure                             (Id : E) return B;\n    function Is_Pure_Unit_Access_Type            (Id : E) return B;\n+   function Is_Raised                           (Id : E) return B;\n    function Is_Remote_Call_Interface            (Id : E) return B;\n    function Is_Remote_Types                     (Id : E) return B;\n    function Is_Renaming_Of_Object               (Id : E) return B;\n@@ -5871,6 +5883,7 @@ package Einfo is\n    function Is_Concurrent_Type                  (Id : E) return B;\n    function Is_Decimal_Fixed_Point_Type         (Id : E) return B;\n    function Is_Digits_Type                      (Id : E) return B;\n+   function Is_Descendent_Of_Address            (Id : E) return B;\n    function Is_Discrete_Or_Fixed_Point_Type     (Id : E) return B;\n    function Is_Discrete_Type                    (Id : E) return B;\n    function Is_Elementary_Type                  (Id : E) return B;\n@@ -6223,6 +6236,7 @@ package Einfo is\n    procedure Set_Is_Constructor                  (Id : E; V : B := True);\n    procedure Set_Is_Controlled                   (Id : E; V : B := True);\n    procedure Set_Is_Controlling_Formal           (Id : E; V : B := True);\n+   procedure Set_Is_Descendent_Of_Address        (Id : E; V : B := True);\n    procedure Set_Is_Discrim_SO_Function          (Id : E; V : B := True);\n    procedure Set_Is_Dispatching_Operation        (Id : E; V : B := True);\n    procedure Set_Is_Eliminated                   (Id : E; V : B := True);\n@@ -6271,6 +6285,7 @@ package Einfo is\n    procedure Set_Is_Public                       (Id : E; V : B := True);\n    procedure Set_Is_Pure                         (Id : E; V : B := True);\n    procedure Set_Is_Pure_Unit_Access_Type        (Id : E; V : B := True);\n+   procedure Set_Is_Raised                       (Id : E; V : B := True);\n    procedure Set_Is_Remote_Call_Interface        (Id : E; V : B := True);\n    procedure Set_Is_Remote_Types                 (Id : E; V : B := True);\n    procedure Set_Is_Renaming_Of_Object           (Id : E; V : B := True);\n@@ -6826,6 +6841,7 @@ package Einfo is\n    pragma Inline (Is_Decimal_Fixed_Point_Type);\n    pragma Inline (Is_Discrim_SO_Function);\n    pragma Inline (Is_Digits_Type);\n+   pragma Inline (Is_Descendent_Of_Address);\n    pragma Inline (Is_Discrete_Or_Fixed_Point_Type);\n    pragma Inline (Is_Discrete_Type);\n    pragma Inline (Is_Dispatching_Operation);\n@@ -6895,6 +6911,7 @@ package Einfo is\n    pragma Inline (Is_Public);\n    pragma Inline (Is_Pure);\n    pragma Inline (Is_Pure_Unit_Access_Type);\n+   pragma Inline (Is_Raised);\n    pragma Inline (Is_Real_Type);\n    pragma Inline (Is_Record_Type);\n    pragma Inline (Is_Remote_Call_Interface);\n@@ -7216,6 +7233,7 @@ package Einfo is\n    pragma Inline (Set_Is_Constructor);\n    pragma Inline (Set_Is_Controlled);\n    pragma Inline (Set_Is_Controlling_Formal);\n+   pragma Inline (Set_Is_Descendent_Of_Address);\n    pragma Inline (Set_Is_Discrim_SO_Function);\n    pragma Inline (Set_Is_Dispatching_Operation);\n    pragma Inline (Set_Is_Eliminated);\n@@ -7264,6 +7282,7 @@ package Einfo is\n    pragma Inline (Set_Is_Public);\n    pragma Inline (Set_Is_Pure);\n    pragma Inline (Set_Is_Pure_Unit_Access_Type);\n+   pragma Inline (Set_Is_Raised);\n    pragma Inline (Set_Is_Remote_Call_Interface);\n    pragma Inline (Set_Is_Remote_Types);\n    pragma Inline (Set_Is_Renaming_Of_Object);"}, {"sha": "884620338010de0df1b6e25f77bf33d69576dc30", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=d5e96bc62a2cbda21d1d69d4c08b1bd22e9d3bbc", "patch": "@@ -264,6 +264,17 @@ package body Sem_Ch11 is\n                      Error_Msg_N (\"exception name expected\", Id);\n \n                   else\n+                     --  Emit a warning at the declaration level when a local\n+                     --  exception is never raised explicitly.\n+\n+                     if Warn_On_Redundant_Constructs\n+                       and then not Is_Raised (Entity (Id))\n+                       and then Scope (Entity (Id)) = Current_Scope\n+                     then\n+                        Error_Msg_NE\n+                          (\"?exception & is never raised\", Entity (Id), Id);\n+                     end if;\n+\n                      if Present (Renamed_Entity (Entity (Id))) then\n                         if Entity (Id) = Standard_Numeric_Error then\n                            Check_Restriction (No_Obsolescent_Features, Id);\n@@ -513,6 +524,8 @@ package body Sem_Ch11 is\n          then\n             Error_Msg_N\n               (\"exception name expected in raise statement\", Exception_Id);\n+         else\n+            Set_Is_Raised (Exception_Name);\n          end if;\n \n          if Present (Expression (N)) then"}]}