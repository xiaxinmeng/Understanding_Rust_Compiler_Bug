{"sha": "33477fb7d8d4d1eff8a4a669265ab240377ec5af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM0NzdmYjdkOGQ0ZDFlZmY4YTRhNjY5MjY1YWIyNDAzNzdlYzVhZg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-05-28T15:55:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-28T15:55:20Z"}, "message": "sem_ch5.adb (Analyze_Assignment): If the name is of a local anonymous access type...\n\n2008-05-28  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Assignment): If the name is of a local anonymous\n\taccess type, wrap the expression in a conversion to force an\n\taccessibility check.\n\n\t* sem_aggr.adb (Aggegate_Constraint_Checks): Apply conversion to force\n\taccessibility checks even when expansion is disabled in order to\n\tgenerate messages in the presence of previous errors or in\n\tsemantics-only mode.\n\nFrom-SVN: r136108", "tree": {"sha": "d3a3a6e7c59a2ff74487d36a4e13f282c67f3d27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3a3a6e7c59a2ff74487d36a4e13f282c67f3d27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33477fb7d8d4d1eff8a4a669265ab240377ec5af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33477fb7d8d4d1eff8a4a669265ab240377ec5af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33477fb7d8d4d1eff8a4a669265ab240377ec5af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33477fb7d8d4d1eff8a4a669265ab240377ec5af/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8250171ba3fa889f20d239acdc3f447476029d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8250171ba3fa889f20d239acdc3f447476029d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8250171ba3fa889f20d239acdc3f447476029d58"}], "stats": {"total": 38, "additions": 23, "deletions": 15}, "files": [{"sha": "4f50dc017898e4f774a1d4db1140a7dd36a308ea", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33477fb7d8d4d1eff8a4a669265ab240377ec5af/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33477fb7d8d4d1eff8a4a669265ab240377ec5af/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=33477fb7d8d4d1eff8a4a669265ab240377ec5af", "patch": "@@ -414,6 +414,22 @@ package body Sem_Aggr is\n          return;\n       end if;\n \n+      --  Ada 2005 (AI-230): Generate a conversion to an anonymous access\n+      --  component's type to force the appropriate accessibility checks.\n+\n+      --  Ada 2005 (AI-231): Generate conversion to the null-excluding\n+      --  type to force the corresponding run-time check\n+\n+      if Is_Access_Type (Check_Typ)\n+        and then ((Is_Local_Anonymous_Access (Check_Typ))\n+                    or else (Can_Never_Be_Null (Check_Typ)\n+                               and then not Can_Never_Be_Null (Exp_Typ)))\n+      then\n+         Rewrite (Exp, Convert_To (Check_Typ, Relocate_Node (Exp)));\n+         Analyze_And_Resolve (Exp, Check_Typ);\n+         Check_Unset_Reference (Exp);\n+      end if;\n+\n       --  This is really expansion activity, so make sure that expansion\n       --  is on and is allowed.\n \n@@ -486,20 +502,6 @@ package body Sem_Aggr is\n             Check_Unset_Reference (Exp);\n          end if;\n \n-      --  Ada 2005 (AI-230): Generate a conversion to an anonymous access\n-      --  component's type to force the appropriate accessibility checks.\n-\n-      --  Ada 2005 (AI-231): Generate conversion to the null-excluding\n-      --  type to force the corresponding run-time check\n-\n-      elsif Is_Access_Type (Check_Typ)\n-        and then ((Is_Local_Anonymous_Access (Check_Typ))\n-                    or else (Can_Never_Be_Null (Check_Typ)\n-                               and then not Can_Never_Be_Null (Exp_Typ)))\n-      then\n-         Rewrite (Exp, Convert_To (Check_Typ, Relocate_Node (Exp)));\n-         Analyze_And_Resolve (Exp, Check_Typ);\n-         Check_Unset_Reference (Exp);\n       end if;\n    end Aggregate_Constraint_Checks;\n "}, {"sha": "11439419a25ea1ccc6d29aaeda0fdb921dd72f48", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33477fb7d8d4d1eff8a4a669265ab240377ec5af/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33477fb7d8d4d1eff8a4a669265ab240377ec5af/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=33477fb7d8d4d1eff8a4a669265ab240377ec5af", "patch": "@@ -582,9 +582,15 @@ package body Sem_Ch5 is\n       --  Ada 2005 (AI-230 and AI-385): When the lhs type is an anonymous\n       --  access type, apply an implicit conversion of the rhs to that type\n       --  to force appropriate static and run-time accessibility checks.\n+      --  This applies as well to anonymous access-to-subprogram types that\n+      --  are component subtypes.\n \n       if Ada_Version >= Ada_05\n-        and then Ekind (T1) = E_Anonymous_Access_Type\n+        and then\n+          Is_Access_Type (T1)\n+            and then\n+             (Is_Local_Anonymous_Access (T1)\n+               or else Can_Never_Be_Null (T1))\n       then\n          Rewrite (Rhs, Convert_To (T1, Relocate_Node (Rhs)));\n          Analyze_And_Resolve (Rhs, T1);"}]}