{"sha": "0532452dcd17910dfd3d2b0df50dfe3ef1194bf7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUzMjQ1MmRjZDE3OTEwZGZkM2QyYjBkZjUwZGZlM2VmMTE5NGJmNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-18T13:46:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-18T13:46:58Z"}, "message": "libstdc++: Replace incorrect static assertion in std::reduce [PR95833]\n\nThe standard does not require the iterator's value type to be\nconvertible to the result type, it only requires that the result of\ndereferencing the iterator can be passed to the binary function.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/95833\n\t* include/std/numeric (reduce(Iter, Iter, T, BinaryOp)): Replace\n\tincorrect static_assert with ones matching the 'Mandates'\n\tconditions in the standard.\n\t* testsuite/26_numerics/reduce/95833.cc: New test.", "tree": {"sha": "1e83ebd675e81f64de4d88fe60115ca2fb9a0697", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e83ebd675e81f64de4d88fe60115ca2fb9a0697"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0532452dcd17910dfd3d2b0df50dfe3ef1194bf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0532452dcd17910dfd3d2b0df50dfe3ef1194bf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0532452dcd17910dfd3d2b0df50dfe3ef1194bf7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0532452dcd17910dfd3d2b0df50dfe3ef1194bf7/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f58d03b5df25f9eab06b7eacea8da780fc2e0219", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f58d03b5df25f9eab06b7eacea8da780fc2e0219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f58d03b5df25f9eab06b7eacea8da780fc2e0219"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "2ab337a0f3abe9a1560303b82eb6e71f6abc3f64", "filename": "libstdc++-v3/include/std/numeric", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0532452dcd17910dfd3d2b0df50dfe3ef1194bf7/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0532452dcd17910dfd3d2b0df50dfe3ef1194bf7/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric?ref=0532452dcd17910dfd3d2b0df50dfe3ef1194bf7", "patch": "@@ -278,9 +278,11 @@ namespace __detail\n     reduce(_InputIterator __first, _InputIterator __last, _Tp __init,\n \t   _BinaryOperation __binary_op)\n     {\n-      using value_type = typename iterator_traits<_InputIterator>::value_type;\n+      using __ref = typename iterator_traits<_InputIterator>::reference;\n+      static_assert(is_invocable_r_v<_Tp, _BinaryOperation&, _Tp&, __ref>);\n+      static_assert(is_invocable_r_v<_Tp, _BinaryOperation&, __ref, _Tp&>);\n       static_assert(is_invocable_r_v<_Tp, _BinaryOperation&, _Tp&, _Tp&>);\n-      static_assert(is_convertible_v<value_type, _Tp>);\n+      static_assert(is_invocable_r_v<_Tp, _BinaryOperation&, __ref, __ref>);\n       if constexpr (__is_random_access_iter<_InputIterator>::value)\n \t{\n \t  while ((__last - __first) >= 4)"}, {"sha": "cf4644f53c9a2388486a857cfd8e94ebe6e1ffd7", "filename": "libstdc++-v3/testsuite/26_numerics/reduce/95833.cc", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0532452dcd17910dfd3d2b0df50dfe3ef1194bf7/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Freduce%2F95833.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0532452dcd17910dfd3d2b0df50dfe3ef1194bf7/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Freduce%2F95833.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Freduce%2F95833.cc?ref=0532452dcd17910dfd3d2b0df50dfe3ef1194bf7", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do compile { target c++17 } }\n+// PR libstdc++/95833 - Incorrect static_assert in std::reduce overload\n+\n+#include <numeric>\n+\n+struct A { };\n+struct B { };\n+\n+struct binop\n+{\n+  template<typename T, typename U>\n+    A operator()(T&&, U&&) const { return A{}; }\n+};\n+\n+B b;\n+A a = std::reduce(&b, &b + 1, A{}, binop{});"}]}