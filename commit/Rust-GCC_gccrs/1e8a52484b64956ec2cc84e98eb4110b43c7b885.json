{"sha": "1e8a52484b64956ec2cc84e98eb4110b43c7b885", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU4YTUyNDg0YjY0OTU2ZWMyY2M4NGU5OGViNDExMGI0M2M3Yjg4NQ==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2003-10-16T19:37:53Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2003-10-16T19:37:53Z"}, "message": "cygming.h (ASM_OUTPUT_DEF_FROM_DECLS): Define.\n\n\t* config/i386/cygming.h (ASM_OUTPUT_DEF_FROM_DECLS): Define.\n\n\t* config/i386/winnt.c (gen_stdcall_suffix): Make static\n\t(gen_fastcall_suffix): Likewise.\n\t(i386_pe_dllexport_p): Likewise.\n\t(i386_pe_dllimport_p): Likewise.\n\t(i386_pe_mark_dllexport): Likewise.\n\t(i386_pe_mark_dllimport): Likewise.\n\t(i386_pe_asm_named_section): Fix formatting.\n\nFrom-SVN: r72566", "tree": {"sha": "86cb70f7016073e0da016f62c10f8580fad723c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86cb70f7016073e0da016f62c10f8580fad723c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e8a52484b64956ec2cc84e98eb4110b43c7b885", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e8a52484b64956ec2cc84e98eb4110b43c7b885", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e8a52484b64956ec2cc84e98eb4110b43c7b885", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e8a52484b64956ec2cc84e98eb4110b43c7b885/comments", "author": null, "committer": null, "parents": [{"sha": "8f850e49a04af5adfcc3621b6fbf4a142c9aff07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f850e49a04af5adfcc3621b6fbf4a142c9aff07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f850e49a04af5adfcc3621b6fbf4a142c9aff07"}], "stats": {"total": 68, "additions": 47, "deletions": 21}, "files": [{"sha": "d9c52aa9aedbdb9e6c4d41b1ac3f1dc87bc89d57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e8a52484b64956ec2cc84e98eb4110b43c7b885/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e8a52484b64956ec2cc84e98eb4110b43c7b885/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e8a52484b64956ec2cc84e98eb4110b43c7b885", "patch": "@@ -1,3 +1,15 @@\n+2003-10-16  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* config/i386/cygming.h (ASM_OUTPUT_DEF_FROM_DECLS): Define.\n+\n+\t* config/i386/winnt.c (gen_stdcall_suffix): Make static\n+\t(gen_fastcall_suffix): Likewise.\n+\t(i386_pe_dllexport_p): Likewise.\n+\t(i386_pe_dllimport_p): Likewise.\n+\t(i386_pe_mark_dllexport): Likewise.\n+\t(i386_pe_mark_dllimport): Likewise.\n+\t(i386_pe_asm_named_section): Fix formatting.\n+\n 2003-10-16  Zack Weinberg  <zack@codesourcery.com>\n \n \t* configure.in: Add snprintf to gcc_AC_CHECK_DECLS list."}, {"sha": "8ed30443bc806f26bcc18b10ef251a5329494070", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e8a52484b64956ec2cc84e98eb4110b43c7b885/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e8a52484b64956ec2cc84e98eb4110b43c7b885/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=1e8a52484b64956ec2cc84e98eb4110b43c7b885", "patch": "@@ -364,9 +364,24 @@ extern int i386_pe_dllimport_name_p (const char *);\n #ifndef SET_ASM_OP\n #define SET_ASM_OP \"\\t.set\\t\"\n #endif\n+/* This implements the `alias' attribute, keeping any stdcall or\n+   fastcall decoration.  */\n+#undef\tASM_OUTPUT_DEF_FROM_DECLS\n+#define\tASM_OUTPUT_DEF_FROM_DECLS(STREAM, DECL, TARGET) \t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      const char *alias;\t\t\t\t\t\t\\\n+      rtx rtlname = XEXP (DECL_RTL (DECL), 0);\t\t\t\t\\\n+      if (GET_CODE (rtlname) == SYMBOL_REF)\t\t\t\t\\\n+\talias = XSTR (rtlname, 0);\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+\tabort ();\t\t\t\t\t\t\t\\\n+      ASM_OUTPUT_DEF (STREAM, alias, IDENTIFIER_POINTER (TARGET));\t\\\n+    } while (0)\n \n #undef TREE\n \n #ifndef BUFSIZ\n # undef FILE\n #endif\n+"}, {"sha": "486fc5a10f82a3499f576dfd06780fc256083671", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 20, "deletions": 21, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e8a52484b64956ec2cc84e98eb4110b43c7b885/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e8a52484b64956ec2cc84e98eb4110b43c7b885/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=1e8a52484b64956ec2cc84e98eb4110b43c7b885", "patch": "@@ -47,12 +47,12 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n */\n \n static tree associated_type (tree);\n-const char * gen_stdcall_suffix (tree);\n-const char * gen_fastcall_suffix (tree);\n-int i386_pe_dllexport_p (tree);\n-int i386_pe_dllimport_p (tree);\n-void i386_pe_mark_dllexport (tree);\n-void i386_pe_mark_dllimport (tree);\n+static const char * gen_stdcall_suffix (tree);\n+static const char * gen_fastcall_suffix (tree);\n+static int i386_pe_dllexport_p (tree);\n+static int i386_pe_dllimport_p (tree);\n+static void i386_pe_mark_dllexport (tree);\n+static void i386_pe_mark_dllimport (tree);\n \n /* This is we how mark internal identifiers with dllimport or dllexport\n    attributes.  */\n@@ -182,7 +182,7 @@ associated_type (tree decl)\n \n /* Return nonzero if DECL is a dllexport'd object.  */\n \n-int\n+static int\n i386_pe_dllexport_p (tree decl)\n {\n   tree exp;\n@@ -208,7 +208,7 @@ i386_pe_dllexport_p (tree decl)\n \n /* Return nonzero if DECL is a dllimport'd object.  */\n \n-int\n+static int\n i386_pe_dllimport_p (tree decl)\n {\n   tree imp;\n@@ -308,7 +308,7 @@ i386_pe_dllimport_name_p (const char *symbol)\n /* Mark a DECL as being dllexport'd.\n    Note that we override the previous setting (eg: dllimport).  */\n \n-void\n+static void\n i386_pe_mark_dllexport (tree decl)\n {\n   const char *oldname;\n@@ -350,7 +350,7 @@ i386_pe_mark_dllexport (tree decl)\n \n /* Mark a DECL as being dllimport'd.  */\n \n-void\n+static void\n i386_pe_mark_dllimport (tree decl)\n {\n   const char *oldname;\n@@ -406,11 +406,10 @@ i386_pe_mark_dllimport (tree decl)\n    prefix consisting of FASTCALL_PREFIX and a suffix consisting of an\n    atsign (@) followed by the number of bytes of arguments.  */\n \n-const char *\n+static const char *\n gen_fastcall_suffix (tree decl)\n {\n   int total = 0;\n-\n   const char *asmname = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n   char *newsym;\n \n@@ -446,7 +445,7 @@ gen_fastcall_suffix (tree decl)\n    suffix consisting of an atsign (@) followed by the number of bytes of\n    arguments */\n \n-const char *\n+static const char *\n gen_stdcall_suffix (tree decl)\n {\n   int total = 0;\n@@ -717,14 +716,14 @@ i386_pe_asm_named_section (const char *name, unsigned int flags)\n       *f++ ='r';\n     }\n   else\t\n-  {\n-    if (flags & SECTION_CODE)\n-      *f++ = 'x';\n-    if (flags & SECTION_WRITE)\n-      *f++ = 'w';\n-    if (flags & SECTION_PE_SHARED)\n-      *f++ = 's';\n-  }\n+    {\n+      if (flags & SECTION_CODE)\n+        *f++ = 'x';\n+      if (flags & SECTION_WRITE)\n+        *f++ = 'w';\n+      if (flags & SECTION_PE_SHARED)\n+        *f++ = 's';\n+    }\n \n   *f = '\\0';\n "}]}