{"sha": "f99c355797e5abf81ebad09eaa8ec0e2af224756", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk5YzM1NTc5N2U1YWJmODFlYmFkMDllYWE4ZWMwZTJhZjIyNDc1Ng==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2016-02-23T15:07:54Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2016-02-23T15:07:54Z"}, "message": "Use plain -fopenacc to enable OpenACC kernels processing\n\n\tgcc/\n\t* tree-parloops.c (create_parallel_loop, gen_parallel_loop)\n\t(parallelize_loops): In OpenACC kernels mode, set n_threads to\n\tzero.\n\t(pass_parallelize_loops::gate): In OpenACC kernels mode, gate on\n\tflag_openacc.\n\t* tree-ssa-loop.c (gate_oacc_kernels): Likewise.\n\tgcc/testsuite/\n\t* c-c++-common/goacc/kernels-counter-vars-function-scope.c: Adjust\n\tto -ftree-parallelize-loops/-fopenacc changes.\n\t* c-c++-common/goacc/kernels-double-reduction-n.c: Likewise.\n\t* c-c++-common/goacc/kernels-double-reduction.c: Likewise.\n\t* c-c++-common/goacc/kernels-loop-2.c: Likewise.\n\t* c-c++-common/goacc/kernels-loop-3.c: Likewise.\n\t* c-c++-common/goacc/kernels-loop-g.c: Likewise.\n\t* c-c++-common/goacc/kernels-loop-mod-not-zero.c: Likewise.\n\t* c-c++-common/goacc/kernels-loop-n.c: Likewise.\n\t* c-c++-common/goacc/kernels-loop-nest.c: Likewise.\n\t* c-c++-common/goacc/kernels-loop.c: Likewise.\n\t* c-c++-common/goacc/kernels-one-counter-var.c: Likewise.\n\t* c-c++-common/goacc/kernels-reduction.c: Likewise.\n\t* gfortran.dg/goacc/kernels-loop-inner.f95: Likewise.\n\t* gfortran.dg/goacc/kernels-loops-adjacent.f95: Likewise.\n\tlibgomp/\n\t* oacc-parallel.c (GOACC_parallel_keyed): Initialize dims.\n\t* plugin/plugin-nvptx.c (nvptx_exec): Provide default values for\n\tdims.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-2.c: Adjust to\n\t-ftree-parallelize-loops/-fopenacc changes.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-3.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-2.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-3.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-4.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-5.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-6.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-collapse.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-g.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-mod-not-zero.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-n.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-nest.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-reduction.c:\n\tLikewise.\n\nFrom-SVN: r233634", "tree": {"sha": "2254ef08257dd66588405e88271ecffacfbad76a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2254ef08257dd66588405e88271ecffacfbad76a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f99c355797e5abf81ebad09eaa8ec0e2af224756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f99c355797e5abf81ebad09eaa8ec0e2af224756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f99c355797e5abf81ebad09eaa8ec0e2af224756", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f99c355797e5abf81ebad09eaa8ec0e2af224756/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43331dfbb8266227a13bb5919dd9f1c4b74a8d16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43331dfbb8266227a13bb5919dd9f1c4b74a8d16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43331dfbb8266227a13bb5919dd9f1c4b74a8d16"}], "stats": {"total": 201, "additions": 114, "deletions": 87}, "files": [{"sha": "0b2149d2913178a5d88a5472d2f415d2eb1f1cc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,3 +1,12 @@\n+2016-02-23  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* tree-parloops.c (create_parallel_loop, gen_parallel_loop)\n+\t(parallelize_loops): In OpenACC kernels mode, set n_threads to\n+\tzero.\n+\t(pass_parallelize_loops::gate): In OpenACC kernels mode, gate on\n+\tflag_openacc.\n+\t* tree-ssa-loop.c (gate_oacc_kernels): Likewise.\n+\n 2016-02-23  Richard Biener  <rguenther@suse.de>\n \n \t* mem-stats.h (struct mem_usage): Use PRIu64 for printing size_t."}, {"sha": "17cf40c05269511c9d01e92fa47b49a93287f4c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,3 +1,21 @@\n+2016-02-23  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c-c++-common/goacc/kernels-counter-vars-function-scope.c: Adjust\n+\tto -ftree-parallelize-loops/-fopenacc changes.\n+\t* c-c++-common/goacc/kernels-double-reduction-n.c: Likewise.\n+\t* c-c++-common/goacc/kernels-double-reduction.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-2.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-3.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-g.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-mod-not-zero.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-n.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-nest.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop.c: Likewise.\n+\t* c-c++-common/goacc/kernels-one-counter-var.c: Likewise.\n+\t* c-c++-common/goacc/kernels-reduction.c: Likewise.\n+\t* gfortran.dg/goacc/kernels-loop-inner.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-loops-adjacent.f95: Likewise.\n+\n 2016-02-23  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.target/i386/chkp-hidden-def.c: Require alias support."}, {"sha": "17f240e5a83369c67e4e6298af560fdff9d5597f", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-counter-vars-function-scope.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-counter-vars-function-scope.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-counter-vars-function-scope.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-counter-vars-function-scope.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n /* { dg-additional-options \"-O2\" } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-fdump-tree-parloops1-all\" } */\n /* { dg-additional-options \"-fdump-tree-optimized\" } */\n \n@@ -51,4 +50,4 @@ main (void)\n /* Check that the loop has been split off into a function.  */\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*main._omp_fn.0\" 1 \"optimized\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(32,\" 1 \"parloops1\" } } */\n+/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(0,\" 1 \"parloops1\" } } */"}, {"sha": "750f576e4cb035ef2e7694f0afca4e13639eb164", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-double-reduction-n.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-double-reduction-n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-double-reduction-n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-double-reduction-n.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n /* { dg-additional-options \"-O2\" } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-fdump-tree-parloops1-all\" } */\n /* { dg-additional-options \"-fdump-tree-optimized\" } */\n \n@@ -34,4 +33,4 @@ foo (unsigned int n)\n /* Check that the loop has been split off into a function.  */\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*foo.*._omp_fn.0\" 1 \"optimized\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(32,\" 1 \"parloops1\" } } */\n+/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(0,\" 1 \"parloops1\" } } */"}, {"sha": "df60d6a51c1fc59a7b9dadfbbfee7f585880e43d", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-double-reduction.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-double-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-double-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-double-reduction.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n /* { dg-additional-options \"-O2\" } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-fdump-tree-parloops1-all\" } */\n /* { dg-additional-options \"-fdump-tree-optimized\" } */\n \n@@ -34,4 +33,4 @@ foo (void)\n /* Check that the loop has been split off into a function.  */\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*foo.*._omp_fn.0\" 1 \"optimized\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(32,\" 1 \"parloops1\" } } */\n+/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(0,\" 1 \"parloops1\" } } */"}, {"sha": "913d91f5fb6b7c6e63c0092a8ac659e045a57719", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-loop-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-2.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n /* { dg-additional-options \"-O2\" } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-fdump-tree-parloops1-all\" } */\n /* { dg-additional-options \"-fdump-tree-optimized\" } */\n \n@@ -67,4 +66,4 @@ main (void)\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*main._omp_fn.1\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*main._omp_fn.2\" 1 \"optimized\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(32,\" 3 \"parloops1\" } } */\n+/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(0,\" 3 \"parloops1\" } } */"}, {"sha": "1822d2a6871794fe512f2aa8303d3cf4bbf5653b", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-loop-3.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-3.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n /* { dg-additional-options \"-O2\" } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-fdump-tree-parloops1-all\" } */\n /* { dg-additional-options \"-fdump-tree-optimized\" } */\n \n@@ -45,5 +44,4 @@ main (void)\n /* Check that the loop has been split off into a function.  */\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*main._omp_fn.0\" 1 \"optimized\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(32,\" 1 \"parloops1\" } } */\n-\n+/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(0,\" 1 \"parloops1\" } } */"}, {"sha": "e946319e2d7a54b5b67e4534d9aaa55dddf64b67", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-loop-g.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-g.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-g.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-g.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,5 @@\n /* { dg-additional-options \"-O2\" } */\n /* { dg-additional-options \"-g\" } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-fdump-tree-parloops1-all\" } */\n /* { dg-additional-options \"-fdump-tree-optimized\" } */\n \n@@ -13,5 +12,4 @@\n /* Check that the loop has been split off into a function.  */\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*main._omp_fn.0\" 1 \"optimized\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(32,\" 1 \"parloops1\" } } */\n-\n+/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(0,\" 1 \"parloops1\" } } */"}, {"sha": "9b63b45f711e40bb0ccbb3e1ffa94ab08efa104c", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-loop-mod-not-zero.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-mod-not-zero.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-mod-not-zero.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-mod-not-zero.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n /* { dg-additional-options \"-O2\" } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-fdump-tree-parloops1-all\" } */\n /* { dg-additional-options \"-fdump-tree-optimized\" } */\n \n@@ -49,4 +48,4 @@ main (void)\n /* Check that the loop has been split off into a function.  */\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*main._omp_fn.0\" 1 \"optimized\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(32,\" 1 \"parloops1\" } } */\n+/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(0,\" 1 \"parloops1\" } } */"}, {"sha": "279f7976ada388c2c1cd923e3a4444c185bdb363", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-loop-n.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-n.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n /* { dg-additional-options \"-O2\" } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-fdump-tree-parloops1-all\" } */\n /* { dg-additional-options \"-fdump-tree-optimized\" } */\n \n@@ -52,5 +51,4 @@ foo (COUNTERTYPE n)\n /* Check that the loop has been split off into a function.  */\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*foo.*._omp_fn.0\" 1 \"optimized\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(32,\" 1 \"parloops1\" } } */\n-\n+/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(0,\" 1 \"parloops1\" } } */"}, {"sha": "db1071f7dd272b2c6ce98f9f009318984988edc1", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-loop-nest.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-nest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-nest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop-nest.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n /* { dg-additional-options \"-O2\" } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-fdump-tree-parloops1-all\" } */\n /* { dg-additional-options \"-fdump-tree-optimized\" } */\n \n@@ -36,4 +35,4 @@ main (void)\n /* Check that the loop has been split off into a function.  */\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*main._omp_fn.0\" 1 \"optimized\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(32,\" 1 \"parloops1\" } } */\n+/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(0,\" 1 \"parloops1\" } } */"}, {"sha": "abf7a3c3c65acb22107cf104a09a916b0d5cb414", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-loop.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-loop.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n /* { dg-additional-options \"-O2\" } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-fdump-tree-parloops1-all\" } */\n /* { dg-additional-options \"-fdump-tree-optimized\" } */\n \n@@ -52,5 +51,4 @@ main (void)\n /* Check that the loop has been split off into a function.  */\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*main._omp_fn.0\" 1 \"optimized\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(32,\" 1 \"parloops1\" } } */\n-\n+/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(0,\" 1 \"parloops1\" } } */"}, {"sha": "95f4817906de607c5e0629f0ad89d8932cd8f89d", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-one-counter-var.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-one-counter-var.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-one-counter-var.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-one-counter-var.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n /* { dg-additional-options \"-O2\" } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-fdump-tree-parloops1-all\" } */\n /* { dg-additional-options \"-fdump-tree-optimized\" } */\n \n@@ -50,5 +49,4 @@ main (void)\n /* Check that the loop has been split off into a function.  */\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*main._omp_fn.0\" 1 \"optimized\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(32,\" 1 \"parloops1\" } } */\n-\n+/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(0,\" 1 \"parloops1\" } } */"}, {"sha": "6f5a418a4625ca9d71cf130205bb12520798662e", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-reduction.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-reduction.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n /* { dg-additional-options \"-O2\" } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-fdump-tree-parloops1-all\" } */\n /* { dg-additional-options \"-fdump-tree-optimized\" } */\n \n@@ -32,5 +31,4 @@ foo (void)\n /* Check that the loop has been split off into a function.  */\n /* { dg-final { scan-tree-dump-times \"(?n);; Function .*foo.*._omp_fn.0\" 1 \"optimized\" } } */\n \n-/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(32,\" 1 \"parloops1\" } } */\n-\n+/* { dg-final { scan-tree-dump-times \"(?n)oacc function \\\\(0,\" 1 \"parloops1\" } } */"}, {"sha": "333474141526a696597dc792bb9f7ada80fcc9c3", "filename": "gcc/testsuite/gfortran.dg/goacc/kernels-loop-inner.f95", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-loop-inner.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-loop-inner.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-loop-inner.f95?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n ! { dg-additional-options \"-O2\" }\n-! { dg-additional-options \"-ftree-parallelize-loops=32\" }\n \n program main\n    implicit none"}, {"sha": "fb92da8c08ba6e00662bd0f1777c99f9f4eeab29", "filename": "gcc/testsuite/gfortran.dg/goacc/kernels-loops-adjacent.f95", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-loops-adjacent.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-loops-adjacent.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-loops-adjacent.f95?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,4 @@\n ! { dg-additional-options \"-O2\" }\n-! { dg-additional-options \"-ftree-parallelize-loops=10\" }\n \n program main\n    implicit none"}, {"sha": "e498e5b62b7b7d2af1ea768e1b428c0e8960d3b2", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -2016,7 +2016,8 @@ transform_to_exit_first_loop (struct loop *loop,\n /* Create the parallel constructs for LOOP as described in gen_parallel_loop.\n    LOOP_FN and DATA are the arguments of GIMPLE_OMP_PARALLEL.\n    NEW_DATA is the variable that should be initialized from the argument\n-   of LOOP_FN.  N_THREADS is the requested number of threads.  */\n+   of LOOP_FN.  N_THREADS is the requested number of threads, which can be 0 if\n+   that number is to be determined later.  */\n \n static void\n create_parallel_loop (struct loop *loop, tree loop_fn, tree data,\n@@ -2049,6 +2050,7 @@ create_parallel_loop (struct loop *loop, tree loop_fn, tree data,\n       basic_block paral_bb = single_pred (bb);\n       gsi = gsi_last_bb (paral_bb);\n \n+      gcc_checking_assert (n_threads != 0);\n       t = build_omp_clause (loc, OMP_CLAUSE_NUM_THREADS);\n       OMP_CLAUSE_NUM_THREADS_EXPR (t)\n \t= build_int_cst (integer_type_node, n_threads);\n@@ -2221,7 +2223,8 @@ create_parallel_loop (struct loop *loop, tree loop_fn, tree data,\n }\n \n /* Generates code to execute the iterations of LOOP in N_THREADS\n-   threads in parallel.\n+   threads in parallel, which can be 0 if that number is to be determined\n+   later.\n \n    NITER describes number of iterations of LOOP.\n    REDUCTION_LIST describes the reductions existent in the LOOP.  */\n@@ -2318,6 +2321,7 @@ gen_parallel_loop (struct loop *loop,\n       else\n \tm_p_thread=MIN_PER_THREAD;\n \n+      gcc_checking_assert (n_threads != 0);\n       many_iterations_cond =\n \tfold_build2 (GE_EXPR, boolean_type_node,\n \t\t     nit, build_int_cst (type, m_p_thread * n_threads));\n@@ -3177,7 +3181,7 @@ oacc_entry_exit_ok (struct loop *loop,\n static bool\n parallelize_loops (bool oacc_kernels_p)\n {\n-  unsigned n_threads = flag_tree_parallelize_loops;\n+  unsigned n_threads;\n   bool changed = false;\n   struct loop *loop;\n   struct loop *skip_loop = NULL;\n@@ -3199,6 +3203,13 @@ parallelize_loops (bool oacc_kernels_p)\n   if (cfun->has_nonlocal_label)\n     return false;\n \n+  /* For OpenACC kernels, n_threads will be determined later; otherwise, it's\n+     the argument to -ftree-parallelize-loops.  */\n+  if (oacc_kernels_p)\n+    n_threads = 0;\n+  else\n+    n_threads = flag_tree_parallelize_loops;\n+\n   gcc_obstack_init (&parloop_obstack);\n   reduction_info_table_type reduction_list (10);\n \n@@ -3361,7 +3372,13 @@ class pass_parallelize_loops : public gimple_opt_pass\n   {}\n \n   /* opt_pass methods: */\n-  virtual bool gate (function *) { return flag_tree_parallelize_loops > 1; }\n+  virtual bool gate (function *)\n+  {\n+    if (oacc_kernels_p)\n+      return flag_openacc;\n+    else\n+      return flag_tree_parallelize_loops > 1;\n+  }\n   virtual unsigned int execute (function *);\n   opt_pass * clone () { return new pass_parallelize_loops (m_ctxt); }\n   void set_pass_param (unsigned int n, bool param)"}, {"sha": "4c39fbc8cc39fbe26d5c2d77a8a188d273c65290", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -148,7 +148,7 @@ make_pass_tree_loop (gcc::context *ctxt)\n static bool\n gate_oacc_kernels (function *fn)\n {\n-  if (flag_tree_parallelize_loops <= 1)\n+  if (!flag_openacc)\n     return false;\n \n   tree oacc_function_attr = get_oacc_fn_attrib (fn->decl);\n@@ -230,10 +230,9 @@ class pass_ipa_oacc : public simple_ipa_opt_pass\n   virtual bool gate (function *)\n   {\n     return (optimize\n-\t    /* Don't bother doing anything if the program has errors.  */\n-\t    && !seen_error ()\n \t    && flag_openacc\n-\t    && flag_tree_parallelize_loops > 1);\n+\t    /* Don't bother doing anything if the program has errors.  */\n+\t    && !seen_error ());\n   }\n \n }; // class pass_ipa_oacc"}, {"sha": "e6a708255b086589a957eded44220f1ced573833", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,3 +1,35 @@\n+2016-02-23  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* oacc-parallel.c (GOACC_parallel_keyed): Initialize dims.\n+\t* plugin/plugin-nvptx.c (nvptx_exec): Provide default values for\n+\tdims.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-2.c: Adjust to\n+\t-ftree-parallelize-loops/-fopenacc changes.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-3.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-2.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-3.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-4.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-5.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-6.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-collapse.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-g.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-mod-not-zero.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-n.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-nest.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-reduction.c:\n+\tLikewise.\n+\n 2016-02-22  Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* testsuite/libgomp.oacc-c-c++-common/vprop.c: New test."}, {"sha": "f795bf7f92c8e0adaf5edeb2c221060c6d995ffe", "filename": "libgomp/oacc-parallel.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Foacc-parallel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Foacc-parallel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-parallel.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -103,6 +103,10 @@ GOACC_parallel_keyed (int device, void (*fn) (void *),\n       return;\n     }\n \n+  /* Default: let the runtime choose.  */\n+  for (i = 0; i != GOMP_DIM_MAX; i++)\n+    dims[i] = 0;\n+\n   va_start (ap, kinds);\n   /* TODO: This will need amending when device_type is implemented.  */\n   while ((tag = va_arg (ap, unsigned)) != 0)"}, {"sha": "3f1bb6d90e92fe1881b8537097bb4d6eea155ed3", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -894,9 +894,21 @@ nvptx_exec (void (*fn), size_t mapnum, void **hostaddrs, void **devaddrs,\n   /* Initialize the launch dimensions.  Typically this is constant,\n      provided by the device compiler, but we must permit runtime\n      values.  */\n-  for (i = 0; i != 3; i++)\n-    if (targ_fn->launch->dim[i])\n-      dims[i] = targ_fn->launch->dim[i];\n+  int seen_zero = 0;\n+  for (i = 0; i != GOMP_DIM_MAX; i++)\n+    {\n+      if (targ_fn->launch->dim[i])\n+       dims[i] = targ_fn->launch->dim[i];\n+      if (!dims[i])\n+       seen_zero = 1;\n+    }\n+\n+  if (seen_zero)\n+    {\n+      for (i = 0; i != GOMP_DIM_MAX; i++)\n+       if (!dims[i])\n+         dims[i] = /* TODO */ 32;\n+    }\n \n   /* This reserves a chunk of a pre-allocated page of memory mapped on both\n      the host and the device. HP is a host pointer to the new chunk, and DP is"}, {"sha": "c7592d6a34066b04c809809f035f49b0d843db09", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-2.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-2.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N (1024 * 512)"}, {"sha": "31114ac86d7149cf719dd761d77e94b9149b1bcf", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-3.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-3.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N (1024 * 512)"}, {"sha": "d36592f7233c51abd5fddc34d99ac1d2e63436e5", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-2.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-2.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N 32"}, {"sha": "e62297129fd07794fcb553db2dd392ad4dc12623", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-3.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-3.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N 32"}, {"sha": "c73127897a927af2fcb0092be0e1aa7bcc30aef2", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-4.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-4.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N 32"}, {"sha": "67dcce26c894ec758c6ee22f7379d8e3f585f4dd", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-5.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-5.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N 32"}, {"sha": "b8b5ddeab833a5adda9baee36898445d0948e8a7", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-6.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-6.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N 32"}, {"sha": "9d9308a4a1f3ad5a05fbd4f526b242d4eef69008", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N 32"}, {"sha": "997d6c7aad2f2d2128c0e54e4d9a17ec45347226", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-collapse.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-collapse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-collapse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-collapse.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N 100"}, {"sha": "88258be16bda2f3f88dc04aecb21d791b24a83d4", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-g.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-g.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-g.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-g.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,5 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n /* { dg-additional-options \"-g\" } */\n \n #include \"kernels-loop.c\""}, {"sha": "147ebb5994536c1ececa8f868885a90674b7dea8", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-mod-not-zero.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-mod-not-zero.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-mod-not-zero.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-mod-not-zero.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N ((1024 * 512) + 1)"}, {"sha": "9a3eaca13803584d8222b15cadf0771db67207f0", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-n.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-n.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N ((1024 * 512) + 1)"}, {"sha": "28c725a61a208a9ea5cea6828e264b32b8324eb8", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-nest.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-nest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-nest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-nest.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N 1000"}, {"sha": "355123c6088461cb4fe9c6515d1e9fdd071cd723", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define N (1024 * 512)"}, {"sha": "8647a9432fc6cacee993491ebf06a1fec56743d0", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-reduction.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99c355797e5abf81ebad09eaa8ec0e2af224756/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-reduction.c?ref=f99c355797e5abf81ebad09eaa8ec0e2af224756", "patch": "@@ -1,6 +1,3 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n-\n #include <stdlib.h>\n \n #define n 10000"}]}