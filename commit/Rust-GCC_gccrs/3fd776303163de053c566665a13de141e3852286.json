{"sha": "3fd776303163de053c566665a13de141e3852286", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZkNzc2MzAzMTYzZGUwNTNjNTY2NjY1YTEzZGUxNDFlMzg1MjI4Ng==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-02-26T02:37:40Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-02-26T02:37:40Z"}, "message": "Set default arch/cpu for i[34567]86-*-*|x86_64-*-* targets.\n\n2010-02-25  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config.gcc: Set arch/cpu for i[34567]86-*-*|x86_64-*-*\n\ttargets.  Set the default with_cpu/with_arch from arch/cpu.\n\tAllow x86-64 and native for with_cpu/with_arch.\n\nFrom-SVN: r157081", "tree": {"sha": "08d866590657d351c8cd0672eed0cf6c89c79e89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08d866590657d351c8cd0672eed0cf6c89c79e89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fd776303163de053c566665a13de141e3852286", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd776303163de053c566665a13de141e3852286", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fd776303163de053c566665a13de141e3852286", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd776303163de053c566665a13de141e3852286/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b9c60758401aedf9e992c588f595e7ecf1a5235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9c60758401aedf9e992c588f595e7ecf1a5235", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b9c60758401aedf9e992c588f595e7ecf1a5235"}], "stats": {"total": 296, "additions": 190, "deletions": 106}, "files": [{"sha": "8f04378c9a245696a4d42e2e9dc425573c6b9cbf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd776303163de053c566665a13de141e3852286/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd776303163de053c566665a13de141e3852286/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3fd776303163de053c566665a13de141e3852286", "patch": "@@ -1,3 +1,9 @@\n+2010-02-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config.gcc: Set arch/cpu for i[34567]86-*-*|x86_64-*-*\n+\ttargets.  Set the default with_cpu/with_arch from arch/cpu.\n+\tAllow x86-64 and native for with_cpu/with_arch.\n+\n 2010-02-25  Nicolas Benoit  <nbenoit@tuxfamily.org>\n \n \t* ebitmap.c: Change calls to verify_popcount with calls to"}, {"sha": "65578f36da714c08c00a351e4e98f5c966d8756f", "filename": "gcc/config.gcc", "status": "modified", "additions": 184, "deletions": 106, "changes": 290, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd776303163de053c566665a13de141e3852286/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd776303163de053c566665a13de141e3852286/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=3fd776303163de053c566665a13de141e3852286", "patch": "@@ -2621,105 +2621,151 @@ case ${with_cpu} in\n     ;;\n esac\n \n+# Set arch and cpu from ${target} and ${target_noncanonical}.  Set cpu\n+# to generic if there is no processor scheduler model for the target.\n+arch=\n+cpu=\n+case ${target} in\n+  i386-*-*)\n+    arch=i386\n+    cpu=i386\n+    ;;\n+  i486-*-*)\n+    arch=i486\n+    cpu=i486\n+    ;;\n+  i586-*-*)\n+    case ${target_noncanonical} in\n+      k6_2-*)\n+\tarch=k6-2\n+\tcpu=k6-2\n+\t;;\n+      k6_3-*)\n+\tarch=k6-3\n+\tcpu=k6-3\n+\t;;\n+      k6-*)\n+\tarch=k6\n+\tcpu=k6\n+\t;;\n+      pentium_mmx-*|winchip_c6-*|winchip2-*|c3-*)\n+\tarch=pentium-mmx\n+\tcpu=pentium-mmx\n+\t;;\n+      *)\n+\tarch=pentium\n+\tcpu=pentium\n+\t;;\n+    esac\n+    ;;\n+  i686-*-* | i786-*-*)\n+    case ${target_noncanonical} in\n+      amdfam10-*|barcelona-*)\n+\tarch=amdfam10\n+\tcpu=amdfam10\n+\t;;\n+      k8_sse3-*|opteron_sse3-*|athlon64_sse3-*)\n+\tarch=k8-sse3\n+\tcpu=k8-sse3\n+\t;;\n+      k8-*|opteron-*|athlon64-*|athlon_fx-*)\n+\tarch=k8\n+\tcpu=k8\n+\t;;\n+      athlon_xp-*|athlon_mp-*|athlon_4-*)\n+\tarch=athlon-4\n+\tcpu=athlon-4\n+\t;;\n+      athlon_tbird-*|athlon-*)\n+\tarch=athlon\n+\tcpu=athlon\n+\t;;\n+      geode-*)\n+\tarch=geode\n+\tcpu=geode\n+\t;;\n+      pentium2-*)\n+\tarch=pentium2\n+\tcpu=pentium2\n+\t;;\n+      pentium3-*|pentium3m-*)\n+\tarch=pentium3\n+\tcpu=pentium3\n+\t;;\n+      pentium4-*|pentium4m-*)\n+\tarch=pentium4\n+\tcpu=pentium4\n+\t;;\n+      prescott-*)\n+\tarch=prescott\n+\tcpu=prescott\n+\t;;\n+      nocona-*)\n+\tarch=nocona\n+\tcpu=nocona\n+\t;;\n+      atom-*)\n+\tarch=atom\n+\tcpu=atom\n+\t;;\n+      core2-*)\n+\tarch=core2\n+\tcpu=core2\n+\t;;\n+      pentium_m-*)\n+\tarch=pentium-m\n+\tcpu=pentium-m\n+\t;;\n+      pentiumpro-*)\n+\tarch=pentiumpro\n+\tcpu=pentiumpro\n+\t;;\n+      *)\n+\tarch=pentiumpro\n+\tcpu=generic\n+\t;;\n+    esac\n+    ;;\n+  x86_64-*-*)\n+    case ${target_noncanonical} in\n+      amdfam10-*|barcelona-*)\n+\tarch=amdfam10\n+\tcpu=amdfam10\n+\t;;\n+      k8_sse3-*|opteron_sse3-*|athlon64_sse3-*)\n+\tarch=k8-sse3\n+\tcpu=k8-sse3\n+\t;;\n+      k8-*|opteron-*|athlon_64-*)\n+\tarch=k8\n+\tcpu=k8\n+\t;;\n+      nocona-*)\n+\tarch=nocona\n+\tcpu=nocona\n+\t;;\n+      atom-*)\n+\tarch=atom\n+\tcpu=atom\n+\t;;\n+      core2-*)\n+\tarch=core2\n+\tcpu=core2\n+\t;;\n+      *)\n+\tarch=x86-64\n+\tcpu=generic\n+\t;;\n+    esac\n+    ;;\n+esac\n+\n # If there is no $with_cpu option, try to infer one from ${target}.\n # This block sets nothing except for with_cpu.\n if test x$with_cpu = x ; then\n   case ${target} in\n-    i386-*-*)\n-      with_cpu=i386\n-      ;;\n-    i486-*-*)\n-      with_cpu=i486\n-      ;;\n-    i586-*-*)\n-      case ${target_noncanonical} in\n-        k6_2-*)\n-          with_cpu=k6-2\n-          ;;\n-        k6_3-*)\n-          with_cpu=k6-3\n-          ;;\n-        k6-*)\n-          with_cpu=k6\n-          ;;\n-        pentium_mmx-*|winchip_c6-*|winchip2-*|c3-*)\n-          with_cpu=pentium-mmx\n-          ;;\n-        *)\n-          with_cpu=pentium\n-          ;;\n-      esac\n-      ;;\n-    i686-*-* | i786-*-*)\n-      case ${target_noncanonical} in\n-        amdfam10-*|barcelona-*)\n-          with_cpu=amdfam10\n-          ;; \n-        k8_sse3-*|opteron_sse3-*|athlon64_sse3-*)\n-          with_cpu=k8-sse3\n-          ;;\n-        k8-*|opteron-*|athlon64-*|athlon_fx-*)\n-          with_cpu=k8\n-          ;;\n-        athlon_xp-*|athlon_mp-*|athlon_4-*)\n-          with_cpu=athlon-4\n-          ;;\n-        athlon_tbird-*|athlon-*)\n-          with_cpu=athlon\n-          ;;\n-\tgeode-*)\n-\t  with_cpu=geode\n-\t  ;;\n-        pentium2-*)\n-          with_cpu=pentium2\n-          ;;\n-        pentium3-*|pentium3m-*)\n-          with_cpu=pentium3\n-          ;;\n-        pentium4-*|pentium4m-*)\n-          with_cpu=pentium4\n-          ;;\n-        prescott-*)\n-          with_cpu=prescott\n-          ;;\n-        nocona-*)\n-          with_cpu=nocona\n-          ;;\n-\tcore2-*)\n-\t  with_cpu=core2\n-\t  ;;\n-        pentium_m-*)\n-          with_cpu=pentium-m\n-          ;;\n-        pentiumpro-*)\n-          with_cpu=pentiumpro\n-          ;;\n-        *)\n-          with_cpu=generic\n-          ;;\n-      esac\n-      ;;\n-    x86_64-*-*)\n-      case ${target_noncanonical} in\n-        amdfam10-*|barcelona-*)\n-          with_cpu=amdfam10\n-          ;;\n-        k8_sse3-*|opteron_sse3-*|athlon64_sse3-*)\n-          with_cpu=k8-sse3\n-          ;;\n-        k8-*|opteron-*|athlon64-*|athlon_fx-*)\n-          with_cpu=k8\n-          ;;\n-        nocona-*)\n-          with_cpu=nocona\n-          ;;\n-\tcore2-*)\n-\t  with_cpu=core2\n-\t  ;;\n-        *)\n-          with_cpu=generic\n-          ;;\n-      esac\n+    i[34567]86-*-*|x86_64-*-*)\n+      with_cpu=$cpu\n       ;;\n     alphaev6[78]*-*-*)\n       with_cpu=ev67\n@@ -2763,16 +2809,48 @@ if test x$with_cpu = x ; then\n   # Avoid overriding --with-cpu-32 and --with-cpu-64 values.\n   case ${target} in\n     i[34567]86-*-*|x86_64-*-*)\n-      if test x$with_cpu != x; then\n-        if test x$with_cpu_32 != x || test x$with_cpu_64 != x; then\n-          if test x$with_cpu_32 = x; then\n-            with_cpu_32=$with_cpu\n-          fi\n-          if test x$with_cpu_64 = x; then\n-            with_cpu_64=$with_cpu\n-          fi\n-          with_cpu=\n-        fi\n+      if test x$with_cpu_32 != x || test x$with_cpu_64 != x; then\n+\tif test x$with_cpu_32 = x; then\n+\t  with_cpu_32=$with_cpu\n+\tfi\n+\tif test x$with_cpu_64 = x; then\n+\t  with_cpu_64=$with_cpu\n+\tfi\n+        with_cpu=\n+      fi\n+      ;;\n+  esac\n+fi\n+\n+# Support for --with-arch and related options (and a few unrelated options,\n+# too).\n+case ${with_arch} in\n+  yes | no)\n+    echo \"--with-arch must be passed a value\" 1>&2\n+    exit 1\n+    ;;\n+esac\n+\n+# If there is no $with_arch option, try to infer one from ${target}.\n+# This block sets nothing except for with_arch.\n+if test x$with_arch = x ; then\n+  case ${target} in\n+    i[34567]86-*-*|x86_64-*-*)\n+      with_arch=$arch\n+      ;;\n+  esac\n+\n+  # Avoid overriding --with-arch-32 and --with-arch-64 values.\n+  case ${target} in\n+    i[34567]86-*-*|x86_64-*-*)\n+      if test x$with_arch_32 != x || test x$with_arch_64 != x; then\n+\tif test x$with_arch_32 = x; then\n+\t  with_arch_32=$arch\n+\tfi\n+\tif test x$with_arch_64 = x; then\n+\t  with_arch_64=$arch\n+\tfi\n+\twith_arch=\n       fi\n       ;;\n   esac\n@@ -3001,7 +3079,7 @@ case \"${target}\" in\n \t\t\t\tesac\n \t\t\t\t# OK\n \t\t\t\t;;\n-\t\t\t\"\" | amdfam10 | barcelona | k8-sse3 | opteron-sse3 | athlon64-sse3 | k8 | opteron | athlon64 | athlon-fx | nocona | core2 | atom | generic)\n+\t\t\t\"\" | amdfam10 | barcelona | k8-sse3 | opteron-sse3 | athlon64-sse3 | k8 | opteron | athlon64 | athlon-fx | nocona | core2 | atom | x86-64 | generic | native)\n \t\t\t\t# OK\n \t\t\t\t;;\n \t\t\t*)"}]}