{"sha": "200feb074bdd154bb04c3da339224b37997a8f6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAwZmViMDc0YmRkMTU0YmIwNGMzZGEzMzkyMjRiMzc5OTdhOGY2Yw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-11-07T17:14:32Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-11-07T17:14:32Z"}, "message": "Append to HOST_LIBGCC2_CFLAGS in libgcc\n\n\t* config.host (tmake_file): Correct comment.\n\t(bfin*-elf*): Remove bfin/t-elf from tmake_file, add\n\tt-libgcc-pic.\n\t(bfin*-uclinux*): Likewise.\n\t(bfin*-linux-uclibc*): Likewise.\n\t(xstormy16-*-elf): Add stormy16/t-stormy16 to tmake_file.\n\n\t* config/arm/t-elf (HOST_LIBGCC2_CFLAGS): Append instead of\n\tassigning.\n\t* config/arm/t-strongarm-elf (HOST_LIBGCC2_CFLAGS): Likewise.\n\t* config/avr/t-avr (HOST_LIBGCC2_CFLAGS): Likewise.\n\t* config/c6x/t-elf (HOST_LIBGCC2_CFLAGS): Likewise.\n\t* config/h8300/t-h8300 (HOST_LIBGCC2_CFLAGS): Likewise.\n\t* config/lm32/t-elf (HOST_LIBGCC2_CFLAGS): Likewise.\n\t* config/m32r/t-m32r (HOST_LIBGCC2_CFLAGS): Likewise.\n\t* config/mcore/t-mcore (HOST_LIBGCC2_CFLAGS): Likewise.\n\t* config/mips/t-elf (HOST_LIBGCC2_CFLAGS): Likewise.\n\t* config/mmix/t-mmix (HOST_LIBGCC2_CFLAGS): Likewise.\n\t* config/pdp11/t-pdp11 (HOST_LIBGCC2_CFLAGS): Likewise.\n\t* config/picochip/t-picochip (HOST_LIBGCC2_CFLAGS): Likewise.\n\t* config/stormy16/t-stormy16 (HOST_LIBGCC2_CFLAGS): Likewise.\n\t* config/t-openbsd-thread (HOST_LIBGCC2_CFLAGS): Likewise.\n\n\t* config/bfin/t-elf: Remove.\n\t* config/t-vxworks (HOST_LIBGCC2_CFLAGS): Remove.\n\nFrom-SVN: r181098", "tree": {"sha": "23c3c8f74a52fda40ea70c5c9ce2408deb045674", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23c3c8f74a52fda40ea70c5c9ce2408deb045674"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/200feb074bdd154bb04c3da339224b37997a8f6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200feb074bdd154bb04c3da339224b37997a8f6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/200feb074bdd154bb04c3da339224b37997a8f6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200feb074bdd154bb04c3da339224b37997a8f6c/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9cd1a07b0f5da2a2c4942478fa6b8129407529b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9cd1a07b0f5da2a2c4942478fa6b8129407529b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9cd1a07b0f5da2a2c4942478fa6b8129407529b"}], "stats": {"total": 74, "additions": 48, "deletions": 26}, "files": [{"sha": "a0b5a89b84963352352db4511d1b7c8267adc826", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -1,3 +1,31 @@\n+2011-11-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config.host (tmake_file): Correct comment.\n+\t(bfin*-elf*): Remove bfin/t-elf from tmake_file, add\n+\tt-libgcc-pic.\n+\t(bfin*-uclinux*): Likewise.\n+\t(bfin*-linux-uclibc*): Likewise.\n+\t(xstormy16-*-elf): Add stormy16/t-stormy16 to tmake_file.\n+\n+\t* config/arm/t-elf (HOST_LIBGCC2_CFLAGS): Append instead of\n+\tassigning.\n+\t* config/arm/t-strongarm-elf (HOST_LIBGCC2_CFLAGS): Likewise.\n+\t* config/avr/t-avr (HOST_LIBGCC2_CFLAGS): Likewise.\n+\t* config/c6x/t-elf (HOST_LIBGCC2_CFLAGS): Likewise.\n+\t* config/h8300/t-h8300 (HOST_LIBGCC2_CFLAGS): Likewise.\n+\t* config/lm32/t-elf (HOST_LIBGCC2_CFLAGS): Likewise.\n+\t* config/m32r/t-m32r (HOST_LIBGCC2_CFLAGS): Likewise.\n+\t* config/mcore/t-mcore (HOST_LIBGCC2_CFLAGS): Likewise.\n+\t* config/mips/t-elf (HOST_LIBGCC2_CFLAGS): Likewise.\n+\t* config/mmix/t-mmix (HOST_LIBGCC2_CFLAGS): Likewise.\n+\t* config/pdp11/t-pdp11 (HOST_LIBGCC2_CFLAGS): Likewise.\n+\t* config/picochip/t-picochip (HOST_LIBGCC2_CFLAGS): Likewise.\n+\t* config/stormy16/t-stormy16 (HOST_LIBGCC2_CFLAGS): Likewise.\n+\t* config/t-openbsd-thread (HOST_LIBGCC2_CFLAGS): Likewise.\n+\n+\t* config/bfin/t-elf: Remove.\n+\t* config/t-vxworks (HOST_LIBGCC2_CFLAGS): Remove.\n+\n 2011-11-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.host (*-*-rtems*): Add t-rtems to tmake_file."}, {"sha": "8af99f57987abdeb1fa7836446f1c72b3c3fac4f", "filename": "libgcc/config.host", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -58,8 +58,7 @@\n #  \t\t\tDefaults to \"$cpu_type/sfp-machine.h\" if it exists,\n #\t\t\tno-sfp-machine.h otherwise.\n #  tmake_file\t\tA list of machine-description-specific\n-#\t\t\tmakefile-fragments, if different from\n-#\t\t\t\"$cpu_type/t-$cpu_type\".\n+#\t\t\tmakefile fragments.\n #  tm_defines\t\tList of target macros to define for all compilations.\n #  tm_file\t\tA list of target macro files used only for code\n #\t\t\tbuilt for the target, not the host.  These files\n@@ -402,16 +401,16 @@ avr-*-*)\n \ttm_file=\"$tm_file avr/avr-lib.h\"\n \t;;\n bfin*-elf*)\n-\ttmake_file=\"bfin/t-bfin bfin/t-elf bfin/t-crtlibid bfin/t-crtstuff t-fdpbit\"\n+\ttmake_file=\"bfin/t-bfin bfin/t-crtlibid bfin/t-crtstuff t-libgcc-pic t-fdpbit\"\n \textra_parts=\"$extra_parts crtbeginS.o crtendS.o crti.o crtn.o crtlibid.o\"\n         ;;\n bfin*-uclinux*)\n-\ttmake_file=\"bfin/t-bfin bfin/t-elf bfin/t-crtlibid bfin/t-crtstuff t-fdpbit\"\n+\ttmake_file=\"bfin/t-bfin bfin/t-crtlibid bfin/t-crtstuff t-libgcc-pic t-fdpbit\"\n \textra_parts=\"$extra_parts crtbeginS.o crtendS.o crtlibid.o\"\n \tmd_unwind_header=bfin/linux-unwind.h\n         ;;\n bfin*-linux-uclibc*)\n-\ttmake_file=\"$tmake_file bfin/t-bfin bfin/t-elf bfin/t-crtstuff t-fdpbit bfin/t-linux\"\n+\ttmake_file=\"$tmake_file bfin/t-bfin bfin/t-crtstuff t-libgcc-pic t-fdpbit bfin/t-linux\"\n \t# No need to build crtbeginT.o on uClibc systems.  Should probably\n \t# be moved to the OS specific section above.\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n@@ -1099,7 +1098,7 @@ vax-*-netbsdelf*)\n vax-*-openbsd*)\n \t;;\n xstormy16-*-elf)\n-\ttmake_file=t-fdpbit\n+\ttmake_file=\"stormy16/t-stormy16 t-fdpbit\"\n \t;;\n xtensa*-*-elf*)\n \ttmake_file=\"$tmake_file xtensa/t-xtensa xtensa/t-elf\""}, {"sha": "d9e8064e4deaaf3a436f0710d121c3263f78863c", "filename": "libgcc/config/arm/t-elf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Farm%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Farm%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-elf?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -15,4 +15,4 @@ LIB1ASMFUNCS += _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func \\\n # Currently there is a bug somewhere in GCC's alias analysis\n # or scheduling code that is breaking _fpmul_parts in fp-bit.c.\n # Disabling function inlining is a workaround for this problem.\n-HOST_LIBGCC2_CFLAGS = -fno-inline\n+HOST_LIBGCC2_CFLAGS += -fno-inline"}, {"sha": "45d1b9932189426d72b9c28bcd8a5d5ea8ea3451", "filename": "libgcc/config/arm/t-strongarm-elf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Farm%2Ft-strongarm-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Farm%2Ft-strongarm-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-strongarm-elf?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -3,4 +3,4 @@ LIB1ASMFUNCS += _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func _clzsi\n # Currently there is a bug somewhere in GCC's alias analysis\n # or scheduling code that is breaking _fpmul_parts in fp-bit.c.\n # Disabling function inlining is a workaround for this problem.\n-HOST_LIBGCC2_CFLAGS = -fno-inline\n+HOST_LIBGCC2_CFLAGS += -fno-inline"}, {"sha": "cd529ae860657c1cfa0f3c09889479f70724e55d", "filename": "libgcc/config/avr/t-avr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Favr%2Ft-avr?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -53,7 +53,7 @@ LIB2FUNCS_EXCLUDE = \\\n # We do not have the DF type.\n # Most of the C functions in libgcc2 use almost all registers,\n # so use -mcall-prologues for smaller code size.\n-HOST_LIBGCC2_CFLAGS = -DDF=SF -Dinhibit_libc -mcall-prologues -Os\n+HOST_LIBGCC2_CFLAGS += -DDF=SF -Dinhibit_libc -mcall-prologues -Os\n \n # Extra 16-bit integer functions.\n intfuncs16 = _absvXX2 _addvXX3 _subvXX3 _mulvXX3 _negvXX2 _clrsbXX2"}, {"sha": "cb243e6040127e9adaa57e532ddcba128927f186", "filename": "libgcc/config/bfin/t-elf", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9cd1a07b0f5da2a2c4942478fa6b8129407529b/libgcc%2Fconfig%2Fbfin%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9cd1a07b0f5da2a2c4942478fa6b8129407529b/libgcc%2Fconfig%2Fbfin%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fbfin%2Ft-elf?ref=c9cd1a07b0f5da2a2c4942478fa6b8129407529b", "patch": "@@ -1 +0,0 @@\n-HOST_LIBGCC2_CFLAGS = $(PICFLAG)"}, {"sha": "c58c614849cb5c27589d8cf56a5c870f9777b777", "filename": "libgcc/config/c6x/t-elf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fc6x%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fc6x%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fc6x%2Ft-elf?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -20,7 +20,7 @@ LIB2ADD = $(srcdir)/config/c6x/gef.c \\\n           $(srcdir)/config/c6x/eqd.c\n \n # Avoid failures when the user's GOT becomes too large.\n-HOST_LIBGCC2_CFLAGS = -msdata=none\n+HOST_LIBGCC2_CFLAGS += -msdata=none\n \n LIB2ADDEH = $(srcdir)/config/c6x/unwind-c6x.c \\\n   $(srcdir)/config/c6x/libunwind.S \\"}, {"sha": "b6448523e344242199e33a2c821add795acb3cc3", "filename": "libgcc/config/h8300/t-h8300", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fh8300%2Ft-h8300", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fh8300%2Ft-h8300", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fh8300%2Ft-h8300?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -10,4 +10,4 @@ LIB2ADD = \\\n \t$(srcdir)/config/h8300/fixunssfsi.c\n \n # We do not have DF type, so fake out the libgcc2 compilation.\n-HOST_LIBGCC2_CFLAGS = -DDF=SF\n+HOST_LIBGCC2_CFLAGS += -DDF=SF"}, {"sha": "f96c0988b075e42caf1c99ffe2e2fe9458dfb929", "filename": "libgcc/config/lm32/t-elf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Flm32%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Flm32%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Flm32%2Ft-elf?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -1,2 +1,2 @@\n CRTSTUFF_T_CFLAGS = -G 0 -msign-extend-enabled\n-HOST_LIBGCC2_CFLAGS = -G 0 -msign-extend-enabled\n+HOST_LIBGCC2_CFLAGS += -G 0 -msign-extend-enabled"}, {"sha": "861044b15b9ca8efc9555881010861da4d191f33", "filename": "libgcc/config/m32r/t-m32r", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fm32r%2Ft-m32r", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fm32r%2Ft-m32r", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm32r%2Ft-m32r?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -1,6 +1,6 @@\n # Turn off the SDA while compiling libgcc2.  There are no headers for it\n # and we want maximal upward compatibility here.\n-HOST_LIBGCC2_CFLAGS = -G 0\n+HOST_LIBGCC2_CFLAGS += -G 0\n \n # We need to use -fpic when we are using gcc to compile the routines in\n # initfini.c.  This is only really needed when we are going to use gcc/g++"}, {"sha": "8268a17e7adfc806f7c8a30433732f146aed9a1a", "filename": "libgcc/config/mcore/t-mcore", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fmcore%2Ft-mcore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fmcore%2Ft-mcore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmcore%2Ft-mcore?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -2,4 +2,4 @@ LIB1ASMSRC    = mcore/lib1funcs.S\n LIB1ASMFUNCS  = _divsi3 _udivsi3 _modsi3 _umodsi3\n \n # could use -msifilter to be safe from interrupt/jmp interactions and others.\n-HOST_LIBGCC2_CFLAGS = -O3 -DNO_FLOATLIB_FIXUNSDFSI #-msifilter\n+HOST_LIBGCC2_CFLAGS += -O3 -DNO_FLOATLIB_FIXUNSDFSI #-msifilter"}, {"sha": "651f10a530387ec2ae2c94f27694cf39440430d7", "filename": "libgcc/config/mips/t-elf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fmips%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fmips%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Ft-elf?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -1,3 +1,3 @@\n # We must build libgcc2.a with -G 0, in case the user wants to link\n # without the $gp register.\n-HOST_LIBGCC2_CFLAGS = -G 0\n+HOST_LIBGCC2_CFLAGS += -G 0"}, {"sha": "2ee4f001ad695d9b8b80515fc1dcb019eac71986", "filename": "libgcc/config/mmix/t-mmix", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fmmix%2Ft-mmix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fmmix%2Ft-mmix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmmix%2Ft-mmix?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -1,4 +1,4 @@\n-HOST_LIBGCC2_CFLAGS = -mlibfuncs -O2\n+HOST_LIBGCC2_CFLAGS += -mlibfuncs -O2\n \n # We need to turn off some assumptions on normality for code in crtstuff.c\n # and crt{i,n}.S, specifically about execution not continuing past the"}, {"sha": "7cadae11a2adcbb1a24bf0804af6bb4bd2a89fb9", "filename": "libgcc/config/pdp11/t-pdp11", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fpdp11%2Ft-pdp11", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fpdp11%2Ft-pdp11", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpdp11%2Ft-pdp11?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -5,4 +5,4 @@ LIB2ADD = $(srcdir)/udivmod.c \\\n \t  $(srcdir)/memmove.c \\\n \t  $(srcdir)/memset.c\n \n-HOST_LIBGCC2_CFLAGS = -O2 -mfloat32\n+HOST_LIBGCC2_CFLAGS += -O2 -mfloat32"}, {"sha": "4de5dbbdcd3462d0736cdea8a5033cb40e675f4f", "filename": "libgcc/config/picochip/t-picochip", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fpicochip%2Ft-picochip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fpicochip%2Ft-picochip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Ft-picochip?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -25,7 +25,7 @@ LIB2ADD = \\\n \n # Special libgcc setup. Make single/double floating point the same,\n # and use our own include files.\n-HOST_LIBGCC2_CFLAGS = -DDF=SF -I../../includes/\n+HOST_LIBGCC2_CFLAGS += -DDF=SF -I../../includes/\n \n # Switch off all debugging for the embedded libraries.\n # (embedded processors need small libraries by default)."}, {"sha": "efbaff8479ea62b89598fc62afb772135917bee8", "filename": "libgcc/config/sh/t-sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fsh%2Ft-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fsh%2Ft-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Ft-sh?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -59,5 +59,5 @@ div_table-4-300.o: $(srcdir)/config/sh/lib1funcs-4-300.S\n libgcc-4-300.a: div_table-4-300.o\n \t$(AR_CREATE_FOR_TARGET) $@ div_table-4-300.o\n \n-HOST_LIBGCC2_CFLAGS = -mieee\n+HOST_LIBGCC2_CFLAGS += -mieee\n "}, {"sha": "d62d167d93d455ffd149316d92ca89c59a4619ba", "filename": "libgcc/config/stormy16/t-stormy16", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fstormy16%2Ft-stormy16", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Fstormy16%2Ft-stormy16", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fstormy16%2Ft-stormy16?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -36,4 +36,4 @@ LIB2ADD = \\\n \t$(srcdir)/config/stormy16/cmpsi2.c \\\n \t$(srcdir)/config/stormy16/ucmpsi2.c\n \n-HOST_LIBGCC2_CFLAGS = -O2\n+HOST_LIBGCC2_CFLAGS += -O2"}, {"sha": "50b61e5865f8ed11becfa8291d08a9203021ea61", "filename": "libgcc/config/t-openbsd-thread", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Ft-openbsd-thread", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Ft-openbsd-thread", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-openbsd-thread?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -1,3 +1,3 @@\n # This is currently needed to compile libgcc2 for threads support\n-HOST_LIBGCC2_CFLAGS=-pthread\n+HOST_LIBGCC2_CFLAGS += -pthread\n "}, {"sha": "3647f75d572bcd1e2419e1c991e8133b73caecc2", "filename": "libgcc/config/t-vxworks", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200feb074bdd154bb04c3da339224b37997a8f6c/libgcc%2Fconfig%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-vxworks?ref=200feb074bdd154bb04c3da339224b37997a8f6c", "patch": "@@ -1,7 +1,3 @@\n-# FIXME: Need to specify the next two?\n-# No special flags needed for libgcc.a\n-HOST_LIBGCC2_CFLAGS =\n-\n # Don't build libgcc.a with debug info\n LIBGCC2_DEBUG_CFLAGS =\n "}]}