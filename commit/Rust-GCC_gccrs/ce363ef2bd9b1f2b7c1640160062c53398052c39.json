{"sha": "ce363ef2bd9b1f2b7c1640160062c53398052c39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UzNjNlZjJiZDliMWYyYjdjMTY0MDE2MDA2MmM1MzM5ODA1MmMzOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-07-23T20:19:22Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-07-23T20:19:22Z"}, "message": "dwarf2cfi: Remove dw_cfi_row_ref typedef.\n\n        * dwarf2cfi.c (dw_cfi_row_ref): Remove.  Update all users.\n\nFrom-SVN: r176701", "tree": {"sha": "715efa8b763d4f45ec84fd10cb7db61defa1d08f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/715efa8b763d4f45ec84fd10cb7db61defa1d08f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce363ef2bd9b1f2b7c1640160062c53398052c39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce363ef2bd9b1f2b7c1640160062c53398052c39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce363ef2bd9b1f2b7c1640160062c53398052c39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce363ef2bd9b1f2b7c1640160062c53398052c39/comments", "author": null, "committer": null, "parents": [{"sha": "57e16c9625e094c687dbf8eef226905b48b26541", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e16c9625e094c687dbf8eef226905b48b26541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57e16c9625e094c687dbf8eef226905b48b26541"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "910edd197cbf021b80a96acdcfec86070759c561", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce363ef2bd9b1f2b7c1640160062c53398052c39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce363ef2bd9b1f2b7c1640160062c53398052c39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce363ef2bd9b1f2b7c1640160062c53398052c39", "patch": "@@ -1,3 +1,7 @@\n+2011-07-23  Richard Henderson  <rth@redhat.com>\n+\n+\t* dwarf2cfi.c (dw_cfi_row_ref): Remove.  Update all users.\n+\n 2011-07-23  Richard Henderson  <rth@redhat.com>\n \n \t* dwarf2cfi.c (add_cfi_args_size): Split out from..."}, {"sha": "51fb8249d05bc7064235493dc985d5734294fcd5", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce363ef2bd9b1f2b7c1640160062c53398052c39/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce363ef2bd9b1f2b7c1640160062c53398052c39/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=ce363ef2bd9b1f2b7c1640160062c53398052c39", "patch": "@@ -74,14 +74,13 @@ typedef struct GTY(()) dw_cfi_row_struct\n   HOST_WIDE_INT args_size;\n } dw_cfi_row;\n \n-typedef dw_cfi_row *dw_cfi_row_ref;\n \f\n /* A vector of call frame insns for the CIE.  */\n cfi_vec cie_cfi_vec;\n \n /* The state of the first row of the FDE table, which includes the\n    state provided by the CIE.  */\n-static GTY(()) dw_cfi_row_ref cie_cfi_row;\n+static GTY(()) dw_cfi_row *cie_cfi_row;\n \n static GTY(()) unsigned long dwarf2out_cfi_label_num;\n \n@@ -209,10 +208,10 @@ new_cfi (void)\n \n /* Return a newly allocated CFI row, with no defined data.  */\n \n-static dw_cfi_row_ref\n+static dw_cfi_row *\n new_cfi_row (void)\n {\n-  dw_cfi_row_ref row = ggc_alloc_cleared_dw_cfi_row ();\n+  dw_cfi_row *row = ggc_alloc_cleared_dw_cfi_row ();\n \n   row->cfa.reg = INVALID_REGNUM;\n \n@@ -221,10 +220,10 @@ new_cfi_row (void)\n \n /* Return a copy of an existing CFI row.  */\n \n-static dw_cfi_row_ref\n-copy_cfi_row (dw_cfi_row_ref src)\n+static dw_cfi_row *\n+copy_cfi_row (dw_cfi_row *src)\n {\n-  dw_cfi_row_ref dst = ggc_alloc_dw_cfi_row ();\n+  dw_cfi_row *dst = ggc_alloc_dw_cfi_row ();\n \n   *dst = *src;\n   dst->reg_save = VEC_copy (dw_cfi_ref, gc, src->reg_save);\n@@ -235,7 +234,7 @@ copy_cfi_row (dw_cfi_row_ref src)\n /* Free an allocated CFI row.  */\n \n static void\n-free_cfi_row (dw_cfi_row_ref row)\n+free_cfi_row (dw_cfi_row *row)\n {\n   if (row != NULL)\n     {\n@@ -311,7 +310,7 @@ add_cfi_restore (unsigned reg)\n    that the register column is no longer saved.  */\n \n static void\n-update_row_reg_save (dw_cfi_row_ref row, unsigned column, dw_cfi_ref cfi)\n+update_row_reg_save (dw_cfi_row *row, unsigned column, dw_cfi_ref cfi)\n {\n   if (VEC_length (dw_cfi_ref, row->reg_save) <= column)\n     VEC_safe_grow_cleared (dw_cfi_ref, gc, row->reg_save, column + 1);\n@@ -466,10 +465,10 @@ lookup_cfa_1 (dw_cfi_ref cfi, dw_cfa_location *loc, dw_cfa_location *remember)\n }\n \n /* The current, i.e. most recently generated, row of the CFI table.  */\n-static dw_cfi_row_ref cur_row;\n+static dw_cfi_row *cur_row;\n \n /* The row state from a preceeding DW_CFA_remember_state.  */\n-static dw_cfi_row_ref remember_row;\n+static dw_cfi_row *remember_row;\n \n /* The register used for saving registers to the stack, and its offset\n    from the CFA.  */\n@@ -2316,7 +2315,7 @@ dwarf2out_frame_debug (rtx insn, bool after_p)\n /* Emit CFI info to change the state from OLD_ROW to NEW_ROW.  */\n \n static void\n-change_cfi_row (dw_cfi_row_ref old_row, dw_cfi_row_ref new_row)\n+change_cfi_row (dw_cfi_row *old_row, dw_cfi_row *new_row)\n {\n   size_t i, n_old, n_new, n_max;\n   dw_cfi_ref cfi;"}]}