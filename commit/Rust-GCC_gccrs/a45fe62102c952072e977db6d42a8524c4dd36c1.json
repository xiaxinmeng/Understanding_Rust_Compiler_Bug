{"sha": "a45fe62102c952072e977db6d42a8524c4dd36c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ1ZmU2MjEwMmM5NTIwNzJlOTc3ZGI2ZDQyYTg1MjRjNGRkMzZjMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-04-08T14:00:04Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-04-08T14:00:04Z"}, "message": "testsuite: Fix Advanced SIMD failures for SVE\n\nThis patch just adds some missing +nosve directives to Advanced\nSIMD vectorisation tests.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/asimd-mull-elem.c: Add +nosve.\n\t* gcc.target/aarch64/pr98772.c: Likewise.\n\t* gcc.target/aarch64/simd/vect_su_add_sub.c: Likewise.", "tree": {"sha": "f8e00665e5a0b1711195e2bb6ffc332e0da8d749", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8e00665e5a0b1711195e2bb6ffc332e0da8d749"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a45fe62102c952072e977db6d42a8524c4dd36c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a45fe62102c952072e977db6d42a8524c4dd36c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a45fe62102c952072e977db6d42a8524c4dd36c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a45fe62102c952072e977db6d42a8524c4dd36c1/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3f78917e1310d7d00e4f955c8e5d30a777f7d35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f78917e1310d7d00e4f955c8e5d30a777f7d35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f78917e1310d7d00e4f955c8e5d30a777f7d35"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "8ee7d118251d1f7c17f228a182afd065d8596415", "filename": "gcc/testsuite/gcc.target/aarch64/asimd-mull-elem.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a45fe62102c952072e977db6d42a8524c4dd36c1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fasimd-mull-elem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a45fe62102c952072e977db6d42a8524c4dd36c1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fasimd-mull-elem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fasimd-mull-elem.c?ref=a45fe62102c952072e977db6d42a8524c4dd36c1", "patch": "@@ -3,6 +3,8 @@\n /* { dg-require-effective-target vect_float } */\n /* { dg-options \"-Ofast\" } */\n \n+#pragma GCC target \"+nosve\"\n+\n #include <arm_neon.h>\n \n void s_mult_i (int32_t* restrict res, int32_t* restrict a, int32_t b)"}, {"sha": "8259251a7c0b64ae8362ea29ec3cf1d2a9d63547", "filename": "gcc/testsuite/gcc.target/aarch64/pr98772.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a45fe62102c952072e977db6d42a8524c4dd36c1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr98772.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a45fe62102c952072e977db6d42a8524c4dd36c1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr98772.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr98772.c?ref=a45fe62102c952072e977db6d42a8524c4dd36c1", "patch": "@@ -1,5 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -save-temps\" } */\n+\n+#pragma GCC target \"+nosve\"\n+\n #include <stdint.h>\n #include <string.h>\n "}, {"sha": "4abb8e92cb43e140600caa7d6f3fba3614247783", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vect_su_add_sub.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a45fe62102c952072e977db6d42a8524c4dd36c1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvect_su_add_sub.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a45fe62102c952072e977db6d42a8524c4dd36c1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvect_su_add_sub.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvect_su_add_sub.c?ref=a45fe62102c952072e977db6d42a8524c4dd36c1", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3\" } */\n \n+#pragma GCC target \"+nosve\"\n+\n typedef int __attribute__ ((mode (SI))) int32_t;\n typedef int __attribute__ ((mode (DI))) int64_t;\n typedef unsigned __attribute__ ((mode (SI))) size_t;"}]}