{"sha": "d564c5e254df744a470a658690753dc193a4fa78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU2NGM1ZTI1NGRmNzQ0YTQ3MGE2NTg2OTA3NTNkYzE5M2E0ZmE3OA==", "commit": {"author": {"name": "Matthew Malcomson", "email": "matthew.malcomson@arm.com", "date": "2020-03-11T14:06:21Z"}, "committer": {"name": "Matthew Malcomson", "email": "matthew.malcomson@arm.com", "date": "2020-03-11T14:06:21Z"}, "message": "[testsuite] Add @ lines to check-function-bodies fluff\n\nWhen using `check-function-bodies`, the subroutine `parse_function_bodies` uses\nthe `fluff` regexp to remove uninteresting assembly lines.\n\nArm targets generate assembly with some lines prefixed by `@`, these lines are\nleft by this process.\n\nAs an example of some lines prefixed by `@': the assembly output from the\n`stacktest1` function in \"bfloat16_simd_3_1.c\" is:\n\n        .align  2\n        .global stacktest1\n        .arch armv8.2-a\n        .syntax unified\n        .arm\n        .fpu neon-fp-armv8\n        .type   stacktest1, %function\nstacktest1:\n        @ args = 0, pretend = 0, frame = 8\n        @ frame_needed = 0, uses_anonymous_args = 0\n        @ link register save eliminated.\n        sub     sp, sp, #8\n        add     r3, sp, #6\n        vst1.16 {d0[0]}, [r3]\n        vld1.16 {d0[0]}, [r3]\n        add     sp, sp, #8\n        @ sp needed\n        bx      lr\n        .size   stacktest1, .-stacktest1\n\nIt seems that previous uses of `check-function-bodies` in the arm backend have\navoided problems with such lines since they use the `...` regexp in each place\nsuch fluff occurs.\n\nI'm currently writing a patch that I'd like to match the entire function body,\nso I'd like to remove such `@` lines automatically.\n\ngcc/testsuite/ChangeLog:\n\n2020-03-11  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* lib/scanasm.exp (parse_function_bodies): Lines starting with '@' also\n\tcounted as fluff.", "tree": {"sha": "19d081578a058fce5f9fb07e527218f896af87e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19d081578a058fce5f9fb07e527218f896af87e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d564c5e254df744a470a658690753dc193a4fa78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d564c5e254df744a470a658690753dc193a4fa78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d564c5e254df744a470a658690753dc193a4fa78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d564c5e254df744a470a658690753dc193a4fa78/comments", "author": {"login": "mmalcomson", "id": 57484298, "node_id": "MDQ6VXNlcjU3NDg0Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmalcomson", "html_url": "https://github.com/mmalcomson", "followers_url": "https://api.github.com/users/mmalcomson/followers", "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}", "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions", "organizations_url": "https://api.github.com/users/mmalcomson/orgs", "repos_url": "https://api.github.com/users/mmalcomson/repos", "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}", "received_events_url": "https://api.github.com/users/mmalcomson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmalcomson", "id": 57484298, "node_id": "MDQ6VXNlcjU3NDg0Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmalcomson", "html_url": "https://github.com/mmalcomson", "followers_url": "https://api.github.com/users/mmalcomson/followers", "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}", "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions", "organizations_url": "https://api.github.com/users/mmalcomson/orgs", "repos_url": "https://api.github.com/users/mmalcomson/repos", "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}", "received_events_url": "https://api.github.com/users/mmalcomson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e835226bab5b3575c8a55c048dcfed3d4cde5e0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e835226bab5b3575c8a55c048dcfed3d4cde5e0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e835226bab5b3575c8a55c048dcfed3d4cde5e0e"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "0e8d77ab9ddf01545ddf1fc9cfdb66b5bd9df43a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d564c5e254df744a470a658690753dc193a4fa78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d564c5e254df744a470a658690753dc193a4fa78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d564c5e254df744a470a658690753dc193a4fa78", "patch": "@@ -1,3 +1,8 @@\n+2020-03-11  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* lib/scanasm.exp (parse_function_bodies): Lines starting with '@' also\n+\tcounted as fluff.\n+\n 2020-03-11  Richard Wai  <richard@annexi-strayline.com>\n \n \t* gnat.dg/subpools1.adb: New test."}, {"sha": "f7d27735112f8edd8a39a326020c3d08dd36e765", "filename": "gcc/testsuite/lib/scanasm.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d564c5e254df744a470a658690753dc193a4fa78/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d564c5e254df744a470a658690753dc193a4fa78/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanasm.exp?ref=d564c5e254df744a470a658690753dc193a4fa78", "patch": "@@ -569,7 +569,7 @@ proc parse_function_bodies { filename result } {\n     set terminator {^\\s*\\.size}\n \n     # Regexp for lines that aren't interesting.\n-    set fluff {^\\s*(?:\\.|//)}\n+    set fluff {^\\s*(?:\\.|//|@)}\n \n     set fd [open $filename r]\n     set in_function 0"}]}