{"sha": "7988c76ebacd66741110886c3dc7a4f0245ba9b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk4OGM3NmViYWNkNjY3NDExMTA4ODZjM2RjN2E0ZjAyNDViYTliNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-11-04T08:42:27Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-11-04T08:42:39Z"}, "message": "Fix duplicate ChangeLog entries.", "tree": {"sha": "6f23f7310dd4c9a3ebf0cfdf72768c7347954220", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f23f7310dd4c9a3ebf0cfdf72768c7347954220"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7988c76ebacd66741110886c3dc7a4f0245ba9b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7988c76ebacd66741110886c3dc7a4f0245ba9b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7988c76ebacd66741110886c3dc7a4f0245ba9b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7988c76ebacd66741110886c3dc7a4f0245ba9b5/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d887367a7a3bc2cf1ca926899567aeeba915e44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d887367a7a3bc2cf1ca926899567aeeba915e44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d887367a7a3bc2cf1ca926899567aeeba915e44"}], "stats": {"total": 113, "additions": 4, "deletions": 109}, "files": [{"sha": "93d6b0f961228f27dc5fe41df39cfcdd2fda0659", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7988c76ebacd66741110886c3dc7a4f0245ba9b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7988c76ebacd66741110886c3dc7a4f0245ba9b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7988c76ebacd66741110886c3dc7a4f0245ba9b5", "patch": "@@ -184,16 +184,6 @@\n \t* config/arm/arm_neon.h (vld1_lane_bf16, vld1q_lane_bf16): Add\n \tintrinsics.\n \n-2020-11-03  Dennis Zhang  <dennis.zhang@arm.com>\n-\n-\t* config/aarch64/aarch64-simd-builtins.def(vbfcvt): New entry.\n-\t(vbfcvt_high, bfcvt): Likewise.\n-\t* config/aarch64/aarch64-simd.md(aarch64_vbfcvt<mode>): New entry.\n-\t(aarch64_vbfcvt_highv8bf, aarch64_bfcvtsf): Likewise.\n-\t* config/aarch64/arm_bf16.h (vcvtah_f32_bf16): New intrinsic.\n-\t* config/aarch64/arm_neon.h (vcvt_f32_bf16): Likewise.\n-\t(vcvtq_low_f32_bf16, vcvtq_high_f32_bf16): Likewise.\n-\n 2020-11-03  Richard Biener  <rguenther@suse.de>\n \n \tPR bootstrap/97666\n@@ -260,32 +250,6 @@\n \tOnce any outermost loop gets unrolled, flag cfun pending_TODOs\n \tPENDING_TODO_force_next_scalar_cleanup on.\n \n-2020-11-03  Dennis Zhang  <dennis.zhang@arm.com>\n-\n-\t* config/aarch64/aarch64-simd-builtins.def (vget_lo_half): New entry.\n-\t(vget_hi_half): Likewise.\n-\t* config/aarch64/aarch64-simd.md (aarch64_vget_lo_halfv8bf): New entry.\n-\t(aarch64_vget_hi_halfv8bf): Likewise.\n-\t* config/aarch64/arm_neon.h (vget_low_bf16): New intrinsic.\n-\t(vget_high_bf16): Likewise.\n-\n-2020-11-03  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n-\n-\tPR target/97205\n-\t* cfgexpand.c (align_local_variable): Make SSA_NAMEs\n-\tat least MODE_ALIGNED.\n-\t(expand_one_stack_var_at): Increase MEM_ALIGN for SSA_NAMEs.\n-\n-2020-11-03  Dennis Zhang  <dennis.zhang@arm.com>\n-\n-\t* config/aarch64/aarch64-simd-builtins.def(vbfcvt): New entry.\n-\t(vbfcvt_high, bfcvt): Likewise.\n-\t* config/aarch64/aarch64-simd.md(aarch64_vbfcvt<mode>): New entry.\n-\t(aarch64_vbfcvt_highv8bf, aarch64_bfcvtsf): Likewise.\n-\t* config/aarch64/arm_bf16.h (vcvtah_f32_bf16): New intrinsic.\n-\t* config/aarch64/arm_neon.h (vcvt_f32_bf16): Likewise.\n-\t(vcvtq_low_f32_bf16, vcvtq_high_f32_bf16): Likewise.\n-\n 2020-11-02  Alan Modra  <amodra@gmail.com>\n \n \tPR middle-end/97267\n@@ -2146,29 +2110,6 @@\n \t(vrp_simplify_cond_using_ranges): Move...\n \t* tree-vrp.c (vrp_simplify_cond_using_ranges): ...to here.\n \n-2020-10-22  Dennis Zhang  <dennis.zhang@arm.com>\n-\n-\t* config/arm/mve.md (mve_vmaxq_<supf><mode>): Replace with ...\n-\t(mve_vmaxq_s<mode>, mve_vmaxq_u<mode>): ... these new insns to\n-\tuse smax/umax instead of VMAXQ.\n-\t(mve_vminq_<supf><mode>): Replace with ...\n-\t(mve_vminq_s<mode>, mve_vminq_u<mode>): ... these new insns to\n-\tuse smin/umin instead of VMINQ.\n-\t(mve_vmaxnmq_f<mode>): Use smax instead of VMAXNMQ_F.\n-\t(mve_vminnmq_f<mode>): Use smin instead of VMINNMQ_F.\n-\t* config/arm/vec-common.md (smin<mode>3): Use the new mode macros\n-\tARM_HAVE_<MODE>_ARITH.\n-\t(umin<mode>3, smax<mode>3, umax<mode>3): Likewise.\n-\n-2020-10-22  Dennis Zhang  <dennis.zhang@arm.com>\n-\n-\t* config/arm/mve.md (mve_vmulq<mode>): New entry for vmul instruction\n-\tusing expression 'mult'.\n-\t(mve_vmulq_f<mode>): Use mult instead of VMULQ_F.\n-\t* config/arm/neon.md (mul<mode>3): Removed.\n-\t* config/arm/vec-common.md (mul<mode>3): Use the new mode macros\n-\tARM_HAVE_<MODE>_ARITH. Use mode iterator VDQWH instead of VALLW.\n-\n 2020-10-20  Andrew MacLeod  <amacleod@redhat.com>\n \n \tPR tree-optimization/97505\n@@ -4384,10 +4325,6 @@\n \t* doc/invoke.texi: Add z15/arch13 to the list of documented\n \t-march/-mtune options.\n \n-2020-10-05  Dennis Zhang  <dennis.zhang@arm.com>\n-\n-\t* config/arm/arm.c (arm_preferred_simd_mode): Enable MVE SIMD modes.\n-\n 2020-10-05  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* value-range.cc (irange::legacy_intersect): Only handle"}, {"sha": "402002224469456637af93e40084df4ec4527790", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 46, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7988c76ebacd66741110886c3dc7a4f0245ba9b5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7988c76ebacd66741110886c3dc7a4f0245ba9b5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7988c76ebacd66741110886c3dc7a4f0245ba9b5", "patch": "@@ -30,7 +30,7 @@\n \ta superflous target test in the dg-do compile\n \tdirective while at it.\n \n-2020-11-03  Dennis Zhang  <denzha01@e124712.cambridge.arm.com>\n+2020-11-03  Dennis Zhang  <dennis.zhang@arm.com>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/bf16_get.c: New test.\n \t* gcc.target/aarch64/advsimd-intrinsics/bf16_get-be.c: New test.\n@@ -40,11 +40,6 @@\n \tPR c++/97632\n \t* g++.dg/warn/Winit-list4.C: New test.\n \n-2020-11-03  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n-\n-\tPR target/97205\n-\t* gcc.c-torture/compile/pr97205.c: New test.\n-\n 2020-11-03  Andrea Corallo  <andrea.corallo@arm.com>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_bf16_indices_1.c:\n@@ -97,7 +92,7 @@\n \t* gcc.target/arm/simd/vld1_lane_bf16_indices_1.c: Likewise.\n \t* gcc.target/arm/simd/vld1q_lane_bf16_indices_1.c: Likewise.\n \n-2020-11-03  Dennis Zhang  <denzha01@e124712.cambridge.arm.com>\n+2020-11-03  Dennis Zhang  <dennis.zhang@arm.com>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/bfcvt-compile.c\n \t(test_vcvt_f32_bf16, test_vcvtq_low_f32_bf16): New tests.\n@@ -229,22 +224,11 @@\n \t* gcc.dg/vect/bb-slp-41.c: Likewise.\n \t* gcc.dg/tree-ssa/pr96789.c: New test.\n \n-2020-11-03  Dennis Zhang  <dennis.zhang@arm.com>\n-\n-\t* gcc.target/aarch64/advsimd-intrinsics/bf16_get.c: New test.\n-\t* gcc.target/aarch64/advsimd-intrinsics/bf16_get-be.c: New test.\n-\t\n 2020-11-03  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR target/97205\n \t* gcc.c-torture/compile/pr97205.c: New test.\n \n-2020-11-03  Dennis Zhang  <dennis.zhang@arm.com>\n-\n-\t* gcc.target/aarch64/advsimd-intrinsics/bfcvt-compile.c\n-\t(test_vcvt_f32_bf16, test_vcvtq_low_f32_bf16): New tests.\n-\t(test_vcvtq_high_f32_bf16, test_vcvth_f32_bf16): Likewise.\n-\t\n 2020-11-02  Alan Modra  <amodra@gmail.com>\n \n \tPR middle-end/97267\n@@ -1150,7 +1134,7 @@\n \t* gcc.dg/pr43783.c: ... here.  Add dg-do compile, dg-options and\n \tdg-error directives.\n \n-2020-10-23  Dennis Zhang  <dennis.zh@live.com>\n+2020-10-23  Dennis Zhang  <dennis.zhang@arm.com>\n \n \t* gcc.target/arm/simd/mve-vsub_1.c: New test.\n \n@@ -1162,10 +1146,6 @@\n \tPR middle-end/97521\n \t* gcc.target/i386/pr97521.c: New testcase.\n \n-2020-10-23  Dennis Zhang  <dennis.zhang@arm.com>\n-\n-\t* gcc.target/arm/simd/mve-vsub_1.c: New test.\n-\n 2020-10-22  Alan Modra  <amodra@gmail.com>\n \n \t* gcc.target/powerpc/vec-splati-runnable.c: Don't abort on\n@@ -1258,15 +1238,11 @@\n \n \t* gcc.target/i386/pr97249-1.c: New test.\n \n-2020-10-22  Dennis Zhang  <dennis.zh@live.com>\n-\n-\t* gcc.target/arm/simd/mve-vminmax_1.c: New test.\n-\n 2020-10-22  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* gcc.dg/pr97520.c: New.\n \n-2020-10-22  Dennis Zhang  <dennis.zh@live.com>\n+2020-10-22  Dennis Zhang  <dennis.zhang@arm.com>\n \n \t* gcc.target/arm/simd/mve-vmul_1.c: New test.\n \n@@ -1399,10 +1375,6 @@\n \n \t* gcc.target/arm/simd/mve-vminmax_1.c: New test.\n \n-2020-10-22  Dennis Zhang  <dennis.zhang@arm.com>\n-\n-\t* gcc.target/arm/simd/mve-vmul_1.c: New test.\n-\n 2020-10-20  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/Wbuiltin-declaration-mismatch-9.c: Improve pruning of\n@@ -2489,20 +2461,6 @@\n \t* gcc.target/arm/cortex-m55-nomve.fp-flag-softfp.c: New test.\n \t* gcc.target/arm/multilib.exp: Add tests for -mcpu=cortex-m55.\n \n-2020-10-05  Dennis Zhang  <dennis.zhang@arm.com>\n-\n-\t* gcc.target/arm/mve/intrinsics/vreinterpretq_f16.c: Use additional\n-\toption -fno-ipa-icf and change the instruction count from 8 to 16.\n-\t* gcc.target/arm/mve/intrinsics/vreinterpretq_f32.c: Likewise.\n-\t* gcc.target/arm/mve/intrinsics/vreinterpretq_s16.c: Likewise.\n-\t* gcc.target/arm/mve/intrinsics/vreinterpretq_s32.c: Likewise.\n-\t* gcc.target/arm/mve/intrinsics/vreinterpretq_s64.c: Likewise.\n-\t* gcc.target/arm/mve/intrinsics/vreinterpretq_s8.c: Likewise.\n-\t* gcc.target/arm/mve/intrinsics/vreinterpretq_u16.c: Likewise.\n-\t* gcc.target/arm/mve/intrinsics/vreinterpretq_u32.c: Likewise.\n-\t* gcc.target/arm/mve/intrinsics/vreinterpretq_u64.c: Likewise.\n-\t* gcc.target/arm/mve/intrinsics/vreinterpretq_u8.c: Likewise.\n-\n 2020-10-05  Nathan Sidwell  <nathan@acm.org>\n \n \t* c-c++-common/spellcheck-reserved.c: Restore diagnostic."}]}