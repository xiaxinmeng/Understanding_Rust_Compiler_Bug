{"sha": "faf318664d85a4bfcf278a4475904ec850b4efb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFmMzE4NjY0ZDg1YTRiZmNmMjc4YTQ0NzU5MDRlYzg1MGI0ZWZiNw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-12-16T13:58:07Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-12-16T13:58:07Z"}, "message": "c-lex.c (lex_number): Use ISXDIGIT/hex_value.\n\n\t* c-lex.c (lex_number): Use ISXDIGIT/hex_value.\n\t* vax/xm-vms.h (FILE_NAME_NONDIRECTORY): Use ISUPPER/TOLOWER.\n\t* fold-const.c (real_hex_to_f): Use hex_value.\n\t* real.c (asctoeg): Use hex_value & ISXDIGIT.\n\t* toplev.c (toplev_main): Call hex_init.\n\t* tradcpp.c (main): Call hex_init.\n\nFrom-SVN: r48068", "tree": {"sha": "98edefa5013064e1fe081d29fa44021bb5888015", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98edefa5013064e1fe081d29fa44021bb5888015"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/faf318664d85a4bfcf278a4475904ec850b4efb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf318664d85a4bfcf278a4475904ec850b4efb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faf318664d85a4bfcf278a4475904ec850b4efb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf318664d85a4bfcf278a4475904ec850b4efb7/comments", "author": null, "committer": null, "parents": [{"sha": "15bc166fa03cdd7ab76c21ed2165b1f024042322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15bc166fa03cdd7ab76c21ed2165b1f024042322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15bc166fa03cdd7ab76c21ed2165b1f024042322"}], "stats": {"total": 95, "additions": 37, "deletions": 58}, "files": [{"sha": "3841b9d6e2b1ae27e7ae0b005c9f422b0b475dc6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=faf318664d85a4bfcf278a4475904ec850b4efb7", "patch": "@@ -1,5 +1,12 @@\n 2001-12-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* c-lex.c (lex_number): Use ISXDIGIT/hex_value.\n+\t* vax/xm-vms.h (FILE_NAME_NONDIRECTORY): Use ISUPPER/TOLOWER.\n+\t* fold-const.c (real_hex_to_f): Use hex_value.\n+\t* real.c (asctoeg): Use hex_value & ISXDIGIT.\n+\t* toplev.c (toplev_main): Call hex_init.\n+\t* tradcpp.c (main): Call hex_init.\n+\n \t* nextstep-protos.h: New file.\n \t* nextstep.c: Include \"rtl.h\", \"output.h\" & \"tm_p.h\".\n \t* nextstep.h (INCLUDE_DEFAULTS): Delete LOCAL_INCLUDE_DIR and"}, {"sha": "7d532b25237e3fe77e0e47999d3d256bb318b218", "filename": "gcc/c-lex.c", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=faf318664d85a4bfcf278a4475904ec850b4efb7", "patch": "@@ -904,9 +904,10 @@ lex_number (str, len)\n \t  /* It is not a decimal point.\n \t     It should be a digit (perhaps a hex digit).  */\n \n-\t  if (ISDIGIT (c))\n+\t  if (ISDIGIT (c)\n+\t      || (base == 16 && ISXDIGIT (c)))\n \t    {\n-\t      n = c - '0';\n+\t      n = hex_value (c);\n \t    }\n \t  else if (base <= 10 && (c == 'e' || c == 'E'))\n \t    {\n@@ -919,14 +920,6 @@ lex_number (str, len)\n \t      floatflag = AFTER_EXPON;\n \t      break;   /* start of exponent */\n \t    }\n-\t  else if (base == 16 && c >= 'a' && c <= 'f')\n-\t    {\n-\t      n = c - 'a' + 10;\n-\t    }\n-\t  else if (base == 16 && c >= 'A' && c <= 'F')\n-\t    {\n-\t      n = c - 'A' + 10;\n-\t    }\n \t  else\n \t    {\n \t      p--;"}, {"sha": "eaf5f3bf510ae51a377dd7748c1f003e2b68e83c", "filename": "gcc/config/vax/xm-vms.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Fconfig%2Fvax%2Fxm-vms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Fconfig%2Fvax%2Fxm-vms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fxm-vms.h?ref=faf318664d85a4bfcf278a4475904ec850b4efb7", "patch": "@@ -66,7 +66,7 @@ Boston, MA 02111-1307, USA.  */\n    char * pnt_ = (C), * pnt1_;\t\t\t\t\t\\\n    pnt1_ = pnt_ - 1;\t\t\t\t\t\t\\\n    while (*++pnt1_)\t\t\t\t\t\t\\\n-     if ((*pnt1_ >= 'A' && *pnt1_ <= 'Z')) *pnt1_ |= 0x20;\t\\\n+     if (ISUPPER (*pnt1_)) *pnt1_ = TOLOWER (*pnt1_);\t\t\\\n    pnt1_ = strrchr (pnt_, ']'); \t\t\t\t\\\n    pnt1_ = (pnt1_ == 0 ? strrchr (pnt_, '>') : pnt1_);\t\t\\\n    pnt1_ = (pnt1_ == 0 ? strrchr (pnt_, ':') : pnt1_);\t\t\\"}, {"sha": "6dfb6b8adffed20a6f7265acc22e50338e345b71", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=faf318664d85a4bfcf278a4475904ec850b4efb7", "patch": "@@ -1,3 +1,9 @@\n+Sun Dec 16 08:52:48 2001  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* lex.c (ffelex_backslash_, ffelex_cfebackslash_): Use hex_value.\n+\t* target.c (ffetarget_integerhex, ffetarget_typeless_hex): Use\n+\thex_p/hex_value.\n+\n 2001-12-14  Roger Sayle <roger@eyesopen.com>\n \n \t* com-rt.def: Use __builtin_sqrt instead of __builtin_fsqrt."}, {"sha": "616965642a119e90b42dcc889f03d5d01ac7fd56", "filename": "gcc/f/lex.c", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Ff%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Ff%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flex.c?ref=faf318664d85a4bfcf278a4475904ec850b4efb7", "patch": "@@ -396,13 +396,7 @@ ffelex_backslash_ (int c, ffewhereColumnNumber col)\n     case 2:\n       if (ISXDIGIT (c))\n \t{\n-\t  code *= 16;\n-\t  if (c >= 'a' && c <= 'f')\n-\t    code += c - 'a' + 10;\n-\t  if (c >= 'A' && c <= 'F')\n-\t    code += c - 'A' + 10;\n-\t  if (ISDIGIT (c))\n-\t    code += c - '0';\n+\t  code = (code * 16) + hex_value (c);\n \t  if (code != 0 || count != 0)\n \t    {\n \t      if (count == 0)\n@@ -603,13 +597,7 @@ ffelex_cfebackslash_ (int *use_d, int *d, FILE *finput)\n \t      *d = c;\n \t      break;\n \t    }\n-\t  code *= 16;\n-\t  if (c >= 'a' && c <= 'f')\n-\t    code += c - 'a' + 10;\n-\t  if (c >= 'A' && c <= 'F')\n-\t    code += c - 'A' + 10;\n-\t  if (ISDIGIT (c))\n-\t    code += c - '0';\n+\t  code = (code * 16) + hex_value (c);\n \t  if (code != 0 || count != 0)\n \t    {\n \t      if (count == 0)"}, {"sha": "11fb0b1d83bb18849aca87dc5995612aa44cd900", "filename": "gcc/f/target.c", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Ff%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Ff%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftarget.c?ref=faf318664d85a4bfcf278a4475904ec850b4efb7", "patch": "@@ -1447,12 +1447,8 @@ ffetarget_integerhex (ffetargetIntegerDefault *val, ffelexToken integer)\n   bad_digit = FALSE;\n   while (c != '\\0')\n     {\n-      if ((c >= 'A') && (c <= 'F'))\n-\tc = c - 'A' + 10;\n-      else if ((c >= 'a') && (c <= 'f'))\n-\tc = c - 'a' + 10;\n-      else if (ISDIGIT (c))\n-\tc -= '0';\n+      if (hex_p (c))\n+\tc = hex_value (c);\n       else\n \t{\n \t  bad_digit = TRUE;\n@@ -2482,12 +2478,8 @@ ffetarget_typeless_hex (ffetargetTypeless *xvalue, ffelexToken token)\n       new_value <<= 4;\n       if ((new_value >> 4) != value)\n \toverflow = TRUE;\n-      if (ISDIGIT (c))\n-\tnew_value += c - '0';\n-      else if ((c >= 'A') && (c <= 'F'))\n-\tnew_value += c - 'A' + 10;\n-      else if ((c >= 'a') && (c <= 'f'))\n-\tnew_value += c - 'a' + 10;\n+      if (hex_p (c))\n+\tnew_value += hex_value (c);\n       else\n \tbad_digit = TRUE;\n       value = new_value;"}, {"sha": "79387fbc6bc92ac19baae4c7a46b61c99aff368c", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=faf318664d85a4bfcf278a4475904ec850b4efb7", "patch": "@@ -1170,13 +1170,7 @@ real_hex_to_f (s, mode)\n     {\n       if (ISXDIGIT (c))\n \t{\n-\t  k = c & CHARMASK;\n-\t  if (k >= 'a' && k <= 'f')\n-\t    k = k - 'a' + 10;\n-\t  else if (k >= 'A')\n-\t    k = k - 'A' + 10;\n-\t  else\n-\t    k = k - '0';\n+\t  k = hex_value (c & CHARMASK);\n \n \t  if ((high & 0xf0000000) == 0)\n \t    {"}, {"sha": "8436c52d78a71703cdbc63eef7995c2547cbcc96", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=faf318664d85a4bfcf278a4475904ec850b4efb7", "patch": "@@ -1,3 +1,7 @@\n+2001-12-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* lex.c (java_read_unicode, java_lex): Use hex_p/hex_value.\n+\n 2001-12-16  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n \t* decl.c (java_init_decl_processing): Build otable_type correctly."}, {"sha": "36e3827dea8509eade151602eb9b6304d9daf505", "filename": "gcc/java/lex.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=faf318664d85a4bfcf278a4475904ec850b4efb7", "patch": "@@ -567,10 +567,8 @@ java_read_unicode (lex, unicode_escape_p)\n \t    {\n \t      if ((c = java_read_char (lex)) == UEOF)\n \t        return UEOF;\n-\t      if (ISDIGIT (c))\n-\t\tunicode |= (unicode_t)((c-'0') << shift);\n-\t      else if ((c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'))\n-\t        unicode |= (unicode_t)((10+(c | 0x20)-'a') << shift);\n+\t      if (hex_p (c))\n+\t\tunicode |= (unicode_t)(hex_value (c) << shift);\n \t      else\n \t\tjava_lex_error (\"Non hex digit in Unicode escape sequence\", 0);\n \t    }\n@@ -1064,7 +1062,7 @@ java_lex (java_lval)\n \t{\n \t  /* We store in a string (in case it turns out to be a FP) and in\n \t     PARTS if we have to process a integer literal.  */\n-\t  int numeric = (ISDIGIT (c) ? c-'0' : 10 +(c|0x20)-'a');\n+\t  int numeric = hex_value (c);\n \t  int count;\n \n \t  /* Remember when we find a valid hexadecimal digit */"}, {"sha": "dd62aeca23a521448e555f3bf3cb27f86d4fbe08", "filename": "gcc/real.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=faf318664d85a4bfcf278a4475904ec850b4efb7", "patch": "@@ -5190,12 +5190,7 @@ asctoeg (ss, y, oprec)\n   trail = 0;\n \n  nxtcom:\n-  if (ISDIGIT (*s))\n-    k = *s - '0';\n-  else if (*s >= 'a' && *s <= 'f')\n-    k = 10 + *s - 'a';\n-  else\n-    k = 10 + *s - 'A';\n+  k = hex_value(*s);\n   if ((k >= 0) && (k < base))\n     {\n       /* Ignore leading zeros */\n@@ -5205,9 +5200,7 @@ asctoeg (ss, y, oprec)\n       if ((trail == 0) && (decflg != 0))\n \t{\n \t  sp = s;\n-\t  while (ISDIGIT (*sp)\n-\t\t || (base == 16 && ((*sp >= 'a' && *sp <= 'f')\n-\t\t\t\t    || (*sp >= 'A' && *sp <= 'F'))))\n+\t  while (ISDIGIT (*sp) || (base == 16 && ISXDIGIT (*sp)))\n \t    ++sp;\n \t  /* Check for syntax error */\n \t  c = *sp & CHARMASK;"}, {"sha": "1f9a7411b101da1b8564081a18abe445eb56a9dc", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=faf318664d85a4bfcf278a4475904ec850b4efb7", "patch": "@@ -5154,6 +5154,8 @@ toplev_main (argc, argv)\n      int argc;\n      char **argv;\n {\n+  hex_init ();\n+\n   /* Initialization of GCC's environment, and diagnostics.  */\n   general_init (argv [0]);\n "}, {"sha": "c7af4c72d4fd71bf5fd49552d6fcb8eba7354f69", "filename": "gcc/tradcpp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Ftradcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf318664d85a4bfcf278a4475904ec850b4efb7/gcc%2Ftradcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftradcpp.c?ref=faf318664d85a4bfcf278a4475904ec850b4efb7", "patch": "@@ -515,6 +515,8 @@ main (argc, argv)\n   pending_dir *pend = (pending_dir *) xcalloc (argc, sizeof (pending_dir));\n   int no_standard_includes = 0;\n \n+  hex_init ();\n+\n #ifdef RLIMIT_STACK\n   /* Get rid of any avoidable limit on stack size.  */\n   {"}]}