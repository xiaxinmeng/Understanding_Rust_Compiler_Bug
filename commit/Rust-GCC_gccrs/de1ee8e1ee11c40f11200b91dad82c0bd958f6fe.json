{"sha": "de1ee8e1ee11c40f11200b91dad82c0bd958f6fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUxZWU4ZTFlZTExYzQwZjExMjAwYjkxZGFkODJjMGJkOTU4ZjZmZQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-08-24T03:41:56Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-08-24T03:41:56Z"}, "message": "re PR fortran/37446 (Diagnostic of edit descriptors, esp. EN)\n\n2009-08-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/37446\n\t* io.c (enum format_token): Change FMT_EXT to FMT_EN and FMT_ES.\n\t(format_lex): Likewise.\n\t(token_to_string): New function.\n\t(check_format): Use the new tokens and the new function. Add\n\tcheck for positive width.\n\nFrom-SVN: r151043", "tree": {"sha": "b53bece69770488a18ee0cea71bf15d73271bed2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b53bece69770488a18ee0cea71bf15d73271bed2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de1ee8e1ee11c40f11200b91dad82c0bd958f6fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1ee8e1ee11c40f11200b91dad82c0bd958f6fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de1ee8e1ee11c40f11200b91dad82c0bd958f6fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1ee8e1ee11c40f11200b91dad82c0bd958f6fe/comments", "author": null, "committer": null, "parents": [{"sha": "287043384564993d081a309b6aacfa5783dd3dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/287043384564993d081a309b6aacfa5783dd3dda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/287043384564993d081a309b6aacfa5783dd3dda"}], "stats": {"total": 72, "additions": 60, "deletions": 12}, "files": [{"sha": "1ac306615d717a6e8ea7f3c0abdf96f497d26354", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1ee8e1ee11c40f11200b91dad82c0bd958f6fe/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1ee8e1ee11c40f11200b91dad82c0bd958f6fe/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=de1ee8e1ee11c40f11200b91dad82c0bd958f6fe", "patch": "@@ -1,3 +1,12 @@\n+2009-08-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/37446\n+\t* io.c (enum format_token): Change FMT_EXT to FMT_EN and FMT_ES.\n+\t(format_lex): Likewise.\n+\t(token_to_string): New function.\n+\t(check_format): Use the new tokens and the new function. Add\n+\tcheck for positive width.\n+\n 2009-08-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* fortran/decl.c: Disallow procedure pointers with -std=f95."}, {"sha": "456a38c67bb1ab86882626e8742259adaa733c88", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 51, "deletions": 12, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1ee8e1ee11c40f11200b91dad82c0bd958f6fe/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1ee8e1ee11c40f11200b91dad82c0bd958f6fe/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=de1ee8e1ee11c40f11200b91dad82c0bd958f6fe", "patch": "@@ -110,8 +110,8 @@ typedef enum\n   FMT_NONE, FMT_UNKNOWN, FMT_SIGNED_INT, FMT_ZERO, FMT_POSINT, FMT_PERIOD,\n   FMT_COMMA, FMT_COLON, FMT_SLASH, FMT_DOLLAR, FMT_LPAREN,\n   FMT_RPAREN, FMT_X, FMT_SIGN, FMT_BLANK, FMT_CHAR, FMT_P, FMT_IBOZ, FMT_F,\n-  FMT_E, FMT_EXT, FMT_G, FMT_L, FMT_A, FMT_D, FMT_H, FMT_END, FMT_ERROR, FMT_DC,\n-  FMT_DP, FMT_T, FMT_TR, FMT_TL, FMT_STAR\n+  FMT_E, FMT_EN, FMT_ES, FMT_G, FMT_L, FMT_A, FMT_D, FMT_H, FMT_END,\n+  FMT_ERROR, FMT_DC, FMT_DP, FMT_T, FMT_TR, FMT_TL, FMT_STAR\n }\n format_token;\n \n@@ -417,8 +417,10 @@ format_lex (void)\n \n     case 'E':\n       c = next_char_not_space (&error);\n-      if (c == 'N' || c == 'S')\n-\ttoken = FMT_EXT;\n+      if (c == 'N' )\n+\ttoken = FMT_EN;\n+      else if (c == 'S')\n+        token = FMT_ES;\n       else\n \t{\n \t  token = FMT_E;\n@@ -486,6 +488,26 @@ format_lex (void)\n }\n \n \n+static const char *\n+token_to_string (format_token t)\n+{\n+  switch (t)\n+    {\n+      case FMT_D:\n+\treturn \"D\";\n+      case FMT_G:\n+\treturn \"G\";\n+      case FMT_E:\n+\treturn \"E\";\n+      case FMT_EN:\n+\treturn \"EN\";\n+      case FMT_ES:\n+\treturn \"ES\";\n+      default:\n+        return \"\";\n+    }\n+}\n+\n /* Check a format statement.  The format string, either from a FORMAT\n    statement or a constant in an I/O statement has already been parsed\n    by itself, and we are checking it for validity.  The dual origin\n@@ -634,7 +656,8 @@ check_format (bool is_input)\n     case FMT_IBOZ:\n     case FMT_F:\n     case FMT_E:\n-    case FMT_EXT:\n+    case FMT_EN:\n+    case FMT_ES:\n     case FMT_G:\n     case FMT_L:\n     case FMT_A:\n@@ -737,7 +760,8 @@ check_format (bool is_input)\n     case FMT_D:\n     case FMT_E:\n     case FMT_G:\n-    case FMT_EXT:\n+    case FMT_EN:\n+    case FMT_ES:\n       u = format_lex ();\n       if (t == FMT_G && u == FMT_ZERO)\n \t{\n@@ -771,20 +795,35 @@ check_format (bool is_input)\n \t  break;\n \t}\n \n+      if (u != FMT_POSINT)\n+\t{\n+\t  format_locus.nextc += format_string_pos;\n+\t  gfc_error_now (\"Positive width required in format \"\n+\t\t\t \"specifier %s at %L\", token_to_string (t),\n+\t\t\t &format_locus);\n+\t  saved_token = u;\n+\t  goto finished;\n+\t}\n+\n       u = format_lex ();\n       if (u == FMT_ERROR)\n \tgoto fail;\n       if (u != FMT_PERIOD)\n \t{\n \t  /* Warn if -std=legacy, otherwise error.  */\n-\t  if (mode != MODE_FORMAT)\n-\t    format_locus.nextc += format_string_pos;\n+\t  format_locus.nextc += format_string_pos;\n \t  if (gfc_option.warn_std != 0)\n-\t    gfc_error_now (\"Period required in format specifier at %L\",\n-\t\t\t   &format_locus);\n+\t    {\n+\t      gfc_error_now (\"Period required in format \"\n+\t\t\t     \"specifier %s at %L\", token_to_string (t),\n+\t\t\t     &format_locus);\n+\t      saved_token = u;\n+\t      goto finished;\n+\t    }\n \t  else\n-\t    gfc_warning (\"Period required in format specifier at %L\",\n-\t\t\t &format_locus);\n+\t    gfc_warning (\"Period required in format \"\n+\t\t\t \"specifier %s at %L\", token_to_string (t),\n+\t\t\t  &format_locus);\n \t  saved_token = u;\n \t  break;\n \t}"}]}