{"sha": "701b7fbbffdff1ebfe06bc014257e3e18abc93ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAxYjdmYmJmZmRmZjFlYmZlMDZiYzAxNDI1N2UzZTE4YWJjOTNlZg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-04-10T13:48:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-10T13:48:37Z"}, "message": "sem_ch6.adb: Minor code clean up.\n\n2009-04-10  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch6.adb: Minor code clean up.\n\n\t* einfo.ads, sem_attr.adb: Minor comment fixes.\n\n\t* sem_ch8.adb: Minor reformatting\n\nFrom-SVN: r145905", "tree": {"sha": "aea29383a371ba36e68d8769a2e6aec3a3708a40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aea29383a371ba36e68d8769a2e6aec3a3708a40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/701b7fbbffdff1ebfe06bc014257e3e18abc93ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/701b7fbbffdff1ebfe06bc014257e3e18abc93ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/701b7fbbffdff1ebfe06bc014257e3e18abc93ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/701b7fbbffdff1ebfe06bc014257e3e18abc93ef/comments", "author": null, "committer": null, "parents": [{"sha": "7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ca78bba4d3036c0a7257fcebc7c5ba79ad0dcad"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "f53f1d26db577d60f1755e43e291efa7e50f6012", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/701b7fbbffdff1ebfe06bc014257e3e18abc93ef/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/701b7fbbffdff1ebfe06bc014257e3e18abc93ef/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=701b7fbbffdff1ebfe06bc014257e3e18abc93ef", "patch": "@@ -1,3 +1,13 @@\n+2009-04-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch6.adb: Minor code clean up.\n+\n+\t* einfo.ads, sem_attr.adb: Minor comment fixes.\n+\n+2009-04-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch8.adb: Minor reformatting\n+\n 2009-04-10  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.ads, einfo.adb (Postcondition_Proc): New attribute for"}, {"sha": "48d2e20a7cd2c7a7c4f8a064866c059f03e52ee0", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/701b7fbbffdff1ebfe06bc014257e3e18abc93ef/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/701b7fbbffdff1ebfe06bc014257e3e18abc93ef/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=701b7fbbffdff1ebfe06bc014257e3e18abc93ef", "patch": "@@ -5145,7 +5145,7 @@ package Einfo is\n \n    --  E_Procedure\n    --  E_Generic_Procedure\n-   --    Postcondition_Proc                  (Node8)\n+   --    Postcondition_Proc                  (Node8)    (non-generic case only)\n    --    Renaming_Map                        (Uint9)\n    --    Handler_Records                     (List10)   (non-generic case only)\n    --    Protected_Body_Subprogram           (Node11)"}, {"sha": "2bf6143d9f0eed4c9b95555d1e180390616793d4", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/701b7fbbffdff1ebfe06bc014257e3e18abc93ef/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/701b7fbbffdff1ebfe06bc014257e3e18abc93ef/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=701b7fbbffdff1ebfe06bc014257e3e18abc93ef", "patch": "@@ -3827,7 +3827,7 @@ package body Sem_Attr is\n             end if;\n \n          --  Body case, where we must be inside a generated _Postcondition\n-         --  procedure, and the prefix must be on the scope stack,  or else\n+         --  procedure, and the prefix must be on the scope stack, or else\n          --  the attribute use is definitely misplaced. The condition itself\n          --  may have generated transient scopes, and is not necessarily the\n          --  current one."}, {"sha": "fe09813679a2bed40e8c4a68f30bd61a99d806ea", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/701b7fbbffdff1ebfe06bc014257e3e18abc93ef/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/701b7fbbffdff1ebfe06bc014257e3e18abc93ef/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=701b7fbbffdff1ebfe06bc014257e3e18abc93ef", "patch": "@@ -1869,9 +1869,11 @@ package body Sem_Ch6 is\n \n       Check_Inline_Pragma (Spec_Id);\n \n-      --  Case of fully private operation in the body of the protected type.\n-      --  We must create a declaration for the subprogram, in order to attach\n-      --  the protected subprogram that will be used in internal calls.\n+      --  Deal with special case of a fully private operation in the body of\n+      --  the protected type. We must create a declaration for the subprogram,\n+      --  in order to attach the protected subprogram that will be used in\n+      --  internal calls. We exclude compiler generated bodies from the\n+      --  expander since the issue does not arise for those cases.\n \n       if No (Spec_Id)\n         and then Comes_From_Source (N)\n@@ -1932,10 +1934,11 @@ package body Sem_Ch6 is\n             Set_Has_Completion (Spec_Id);\n             Set_Convention (Spec_Id, Convention_Protected);\n          end;\n+      end if;\n \n-      --  Case where a separate spec is present\n+      --  If a sep[arate spec is present, then deal with freezing issues\n \n-      elsif Present (Spec_Id) then\n+      if Present (Spec_Id) then\n          Spec_Decl := Unit_Declaration_Node (Spec_Id);\n          Verify_Overriding_Indicator;\n \n@@ -1960,15 +1963,6 @@ package body Sem_Ch6 is\n             Set_Has_Delayed_Freeze (Spec_Id);\n             Insert_Actions (N, Freeze_Entity (Spec_Id, Loc));\n          end if;\n-\n-      --  The missing else branch here is for the case where there is no\n-      --  separate spec and either we don't have a protected operation, or the\n-      --  node is compiler generated. Is it really right that nothing needs to\n-      --  be done in this case. At the very least a comment is appropriate as\n-      --  to why nothing needs to be done in this case ???\n-\n-      else\n-         null;\n       end if;\n \n       --  Mark presence of postcondition proc in current scope"}, {"sha": "52f185531d588acb66308feeed9b87baf8e0b1a3", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/701b7fbbffdff1ebfe06bc014257e3e18abc93ef/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/701b7fbbffdff1ebfe06bc014257e3e18abc93ef/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=701b7fbbffdff1ebfe06bc014257e3e18abc93ef", "patch": "@@ -449,8 +449,8 @@ package body Sem_Ch8 is\n    --  private with on E.\n \n    procedure Find_Expanded_Name (N : Node_Id);\n-   --  Selected component is known to be expanded name. Verify legality\n-   --  of selector given the scope denoted by prefix.\n+   --  Selected component is known to be expanded name. Verify legality of\n+   --  selector given the scope denoted by prefix.\n \n    function Find_Renamed_Entity\n      (N         : Node_Id;"}]}