{"sha": "f63d806d66059fa17ea7e095ee4e029d725dca6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYzZDgwNmQ2NjA1OWZhMTdlYTdlMDk1ZWU0ZTAyOWQ3MjVkY2E2Zg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-04-27T09:17:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-04-27T09:17:01Z"}, "message": "tree-ssa-alias.c (indirect_refs_may_alias_p): Fix TARGET_MEM_REF handling.\n\n2011-04-27  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-alias.c (indirect_refs_may_alias_p): Fix\n\tTARGET_MEM_REF handling.\n\nFrom-SVN: r173018", "tree": {"sha": "be3da49024cb13e1218aa97ce2838924c8995df7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be3da49024cb13e1218aa97ce2838924c8995df7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f63d806d66059fa17ea7e095ee4e029d725dca6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63d806d66059fa17ea7e095ee4e029d725dca6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f63d806d66059fa17ea7e095ee4e029d725dca6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63d806d66059fa17ea7e095ee4e029d725dca6f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97d20907940d5cf2160794cfbf705da463273d9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d20907940d5cf2160794cfbf705da463273d9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97d20907940d5cf2160794cfbf705da463273d9f"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "492a92dad53fceab1dea08d58b78cc5f510a6077", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63d806d66059fa17ea7e095ee4e029d725dca6f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63d806d66059fa17ea7e095ee4e029d725dca6f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f63d806d66059fa17ea7e095ee4e029d725dca6f", "patch": "@@ -1,3 +1,8 @@\n+2011-04-27  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-alias.c (indirect_refs_may_alias_p): Fix\n+\tTARGET_MEM_REF handling.\n+\n 2011-04-27  Nick Clifton  <nickc@redhat.com>\n \n \t* config/frv/frv.h (enum reg_class): Delete EVEN_ACC_REGS,"}, {"sha": "315a252fadcee7a310b9a259d6f31cdac9451d3d", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63d806d66059fa17ea7e095ee4e029d725dca6f/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63d806d66059fa17ea7e095ee4e029d725dca6f/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=f63d806d66059fa17ea7e095ee4e029d725dca6f", "patch": "@@ -925,12 +925,12 @@ indirect_refs_may_alias_p (tree ref1 ATTRIBUTE_UNUSED, tree base1,\n   /* If both references are through the same type, they do not alias\n      if the accesses do not overlap.  This does extra disambiguation\n      for mixed/pointer accesses but requires strict aliasing.  */\n-  if ((TREE_CODE (base1) != TARGET_MEM_REF || !TMR_INDEX (base1))\n-      && (TREE_CODE (base2) != TARGET_MEM_REF || !TMR_INDEX (base2))\n-      && (TREE_CODE (base1) != MEM_REF\n-\t  || same_type_for_tbaa (TREE_TYPE (base1), TREE_TYPE (ptrtype1)) == 1)\n-      && (TREE_CODE (base2) != MEM_REF\n-\t  || same_type_for_tbaa (TREE_TYPE (base2), TREE_TYPE (ptrtype2)) == 1)\n+  if ((TREE_CODE (base1) != TARGET_MEM_REF\n+       || (!TMR_INDEX (base1) && !TMR_INDEX2 (base1)))\n+      && (TREE_CODE (base2) != TARGET_MEM_REF\n+\t  || (!TMR_INDEX (base2) && !TMR_INDEX2 (base2)))\n+      && same_type_for_tbaa (TREE_TYPE (base1), TREE_TYPE (ptrtype1)) == 1\n+      && same_type_for_tbaa (TREE_TYPE (base2), TREE_TYPE (ptrtype2)) == 1\n       && same_type_for_tbaa (TREE_TYPE (ptrtype1),\n \t\t\t     TREE_TYPE (ptrtype2)) == 1)\n     return ranges_overlap_p (offset1, max_size1, offset2, max_size2);\n@@ -942,14 +942,9 @@ indirect_refs_may_alias_p (tree ref1 ATTRIBUTE_UNUSED, tree base1,\n \n   /* Do access-path based disambiguation.  */\n   if (ref1 && ref2\n-      && handled_component_p (ref1)\n-      && handled_component_p (ref2)\n-      && TREE_CODE (base1) != TARGET_MEM_REF\n-      && TREE_CODE (base2) != TARGET_MEM_REF\n-      && (TREE_CODE (base1) != MEM_REF\n-\t  || same_type_for_tbaa (TREE_TYPE (base1), TREE_TYPE (ptrtype1)) == 1)\n-      && (TREE_CODE (base2) != MEM_REF\n-\t  || same_type_for_tbaa (TREE_TYPE (base2), TREE_TYPE (ptrtype2)) == 1))\n+      && (handled_component_p (ref1) || handled_component_p (ref2))\n+      && same_type_for_tbaa (TREE_TYPE (base1), TREE_TYPE (ptrtype1)) == 1\n+      && same_type_for_tbaa (TREE_TYPE (base2), TREE_TYPE (ptrtype2)) == 1)\n     return aliasing_component_refs_p (ref1,\n \t\t\t\t      ref1_alias_set, base1_alias_set,\n \t\t\t\t      offset1, max_size1,"}]}