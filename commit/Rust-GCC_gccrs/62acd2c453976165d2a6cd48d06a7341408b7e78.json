{"sha": "62acd2c453976165d2a6cd48d06a7341408b7e78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJhY2QyYzQ1Mzk3NjE2NWQyYTZjZDQ4ZDA2YTczNDE0MDhiN2U3OA==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2021-01-30T01:03:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-07T09:28:59Z"}, "message": "[Ada] Remove some ??? comments\n\ngcc/ada/\n\n\t* errout.ads (Size_Too_Small_Message): Remove low-value ???\n\tcomment.\n\t* exp_util.ads: Remove ??? in part of overall package comments\n\tand restructure comment to clarify.\n\t(Duplicate_Subexpr): Remove ??? comment that seems unnecessary.\n\t* sem_ch3.ads (Analyze_Declarations): Remove two parenthesized\n\t??? comments and add more description of the procedure's\n\tactions.\n\t(Get_Discriminant_Value): Remove ??? comment requesting more\n\tdocumentation, expanding description of the function's actions.\n\t* sem_disp.ads (Check_Operation_From_Incomplete_Type): Add more\n\tsemantic description of the procedure and remove ??? comment\n\trequesting such.\n\t(Propagate_Tag): Refine comment to indicate meaning of formal\n\tparameters and generally improve the spec comment (and remove\n\t??? comment asking about the parameters).", "tree": {"sha": "eb140d38af5ec472cfc9694c74caa480a1004b4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb140d38af5ec472cfc9694c74caa480a1004b4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62acd2c453976165d2a6cd48d06a7341408b7e78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62acd2c453976165d2a6cd48d06a7341408b7e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62acd2c453976165d2a6cd48d06a7341408b7e78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62acd2c453976165d2a6cd48d06a7341408b7e78/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fde5868f3667b2ec0fb43c1b6f8c737be549fcce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fde5868f3667b2ec0fb43c1b6f8c737be549fcce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fde5868f3667b2ec0fb43c1b6f8c737be549fcce"}], "stats": {"total": 56, "additions": 31, "deletions": 25}, "files": [{"sha": "baec3a74b917cd249ca35393fb0bd3663a439fbb", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62acd2c453976165d2a6cd48d06a7341408b7e78/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62acd2c453976165d2a6cd48d06a7341408b7e78/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=62acd2c453976165d2a6cd48d06a7341408b7e78", "patch": "@@ -1006,8 +1006,8 @@ package Errout is\n    Size_Too_Small_Message : constant String :=\n      \"size for& too small, minimum allowed is ^\";\n    --  This message is printed in Freeze and Sem_Ch13. We also test for it in\n-   --  the body of this package (see Special_Msg_Delete) ???which is somewhat\n-   --  questionable. The Is_Size_Too_Small_Message function tests for it by\n-   --  testing a prefix. The function and constant should be kept in synch.\n+   --  the body of this package (see Special_Msg_Delete).\n+   --  Function Is_Size_Too_Small_Message tests for it by testing a prefix.\n+   --  The function and constant should be kept in synch.\n \n end Errout;"}, {"sha": "7f1a93222d5687e7a6fc9ff0b7d1f6f115ff1d63", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62acd2c453976165d2a6cd48d06a7341408b7e78/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62acd2c453976165d2a6cd48d06a7341408b7e78/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=62acd2c453976165d2a6cd48d06a7341408b7e78", "patch": "@@ -50,11 +50,11 @@ package Exp_Util is\n    --    of statements, the actions are simply inserted into the list before\n    --    the associated statement.\n \n-   --    For an expression occurring in a declaration (declarations always\n-   --    appear in lists), the actions are similarly inserted into the list\n-   --    just before the associated declaration. ???Declarations do not always\n-   --    appear in lists; in particular, a library unit declaration does not\n-   --    appear in a list, and Insert_Action will crash in that case.\n+   --    For an expression occurring in a declaration the actions are similarly\n+   --    inserted into the list just before the associated declaration. (But\n+   --    note that although declarations usually appear in lists, they don't\n+   --    always; in particular, a library unit declaration does not appear in\n+   --    a list, and Insert_Action will crash in that case.)\n \n    --  The following special cases arise:\n \n@@ -477,7 +477,7 @@ package Exp_Util is\n    --\n    --  The Name_Req flag is set to ensure that the result is suitable for use\n    --  in a context requiring a name (for example, the prefix of an attribute\n-   --  reference) (can't this just be a qualification in Ada 2012???).\n+   --  reference).\n    --\n    --  The Renaming_Req flag is set to produce an object renaming declaration\n    --  rather than an object declaration. This is valid only if the expression"}, {"sha": "dcd4a34885227f5aa1d595485e1f79354c27b9c6", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62acd2c453976165d2a6cd48d06a7341408b7e78/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62acd2c453976165d2a6cd48d06a7341408b7e78/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=62acd2c453976165d2a6cd48d06a7341408b7e78", "patch": "@@ -69,8 +69,10 @@ package Sem_Ch3 is\n    --  interface primitives with the tagged type primitives that cover them.\n \n    procedure Analyze_Declarations (L : List_Id);\n-   --  Called to analyze a list of declarations (in what context ???). Also\n-   --  performs necessary freezing actions (more description needed ???)\n+   --  Called to analyze a list of declarations. Also performs necessary\n+   --  freezing actions (such as freezing remaining unfrozen entities at\n+   --  the end of declarative parts), resolves usage names in aspects, and\n+   --  analyzes contracts that require delay until after freezing is done.\n \n    procedure Analyze_Interface_Declaration (T : Entity_Id; Def : Node_Id);\n    --  Analyze an interface declaration or a formal interface declaration\n@@ -169,9 +171,10 @@ package Sem_Ch3 is\n      (Discriminant       : Entity_Id;\n       Typ_For_Constraint : Entity_Id;\n       Constraint         : Elist_Id) return Node_Id;\n-   --  ??? MORE DOCUMENTATION\n-   --  Given a discriminant somewhere in the Typ_For_Constraint tree and a\n-   --  Constraint, return the value of that discriminant.\n+   --  Given a discriminant Discriminant occurring somewhere up the derivation\n+   --  tree from Typ_For_Constraint and a Constraint, return the expression\n+   --  corresponding to that discriminant in the constraint that specifies its\n+   --  value.\n \n    function Is_Null_Extension (T : Entity_Id) return Boolean;\n    --  Returns True if the tagged type T has an N_Full_Type_Declaration that"}, {"sha": "c9aa3667ac7b8fdd2e0838ab10631431ce955ad5", "filename": "gcc/ada/sem_disp.ads", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62acd2c453976165d2a6cd48d06a7341408b7e78/gcc%2Fada%2Fsem_disp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62acd2c453976165d2a6cd48d06a7341408b7e78/gcc%2Fada%2Fsem_disp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.ads?ref=62acd2c453976165d2a6cd48d06a7341408b7e78", "patch": "@@ -57,11 +57,15 @@ package Sem_Disp is\n    procedure Check_Operation_From_Incomplete_Type\n      (Subp : Entity_Id;\n       Typ  : Entity_Id);\n-   --  If a primitive operation was defined for the incomplete view of the\n-   --  type, and the full type declaration is a derived type definition,\n-   --  the operation may override an inherited one.\n-   --  Need more description here, what are the parameters, and what does\n-   --  this call actually do???\n+   --  If a primitive subprogram Subp was defined for the incomplete view of\n+   --  Typ, and the full type declaration is a derived type, then Subp may\n+   --  override a subprogram inherited from the parent type. In that case,\n+   --  the inherited subprogram will have been hidden by the current one at\n+   --  the point of the type derivation, so it does not appear in the list\n+   --  of primitive operations of the type, and this procedure inserts the\n+   --  overriding subprogram in the the full type's list of primitives by\n+   --  iterating over the list for the parent type. If instead Subp is a new\n+   --  primitive, then it's simply appended to the primitive list.\n \n    procedure Check_Operation_From_Private_View (Subp, Old_Subp : Entity_Id);\n    --  No action performed if Subp is not an alias of a dispatching operation.\n@@ -172,11 +176,10 @@ package Sem_Disp is\n    --  function. The caller checks that Tagged_Type is indeed a tagged type.\n \n    procedure Propagate_Tag (Control : Node_Id; Actual : Node_Id);\n-   --  If a function call is tag-indeterminate, its controlling argument is\n-   --  found in the context: either an enclosing call, or the left-hand side\n-   --  of the enclosing assignment statement. The tag must be propagated\n-   --  recursively to the tag-indeterminate actuals of the call.\n-   --  Need clear description of the parameters Control and Actual, especially\n-   --  since the comments above refer to actuals in the plural ???\n+   --  If a function call given by Actual is tag-indeterminate, its controlling\n+   --  argument is found in the context, given by Control: either from an\n+   --  operand of an enclosing call, or the left-hand side of the enclosing\n+   --  assignment statement. The tag of Control will be propagated recursively\n+   --  to Actual and to its tag-indeterminate operands, if any.\n \n end Sem_Disp;"}]}