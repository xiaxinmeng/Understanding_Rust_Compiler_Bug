{"sha": "2b1c757d835372d4454b3760b5fbf793bd372529", "node_id": "C_kwDOANBUbNoAKDJiMWM3NTdkODM1MzcyZDQ0NTRiMzc2MGI1ZmJmNzkzYmQzNzI1Mjk", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2021-10-30T00:16:40Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2021-11-04T16:53:02Z"}, "message": "Fortran manual: Combine standard conformance docs in one place.\n\nDiscussion of conformance with various revisions of the\nFortran standard was split between two separate parts of the\nmanual.  This patch moves it all to the introductory chapter.\n\n2021-11-01  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/fortran/\n\t* gfortran.texi (Standards): Move discussion of specific\n\tstandard versions here....\n\t(Fortran standards status): ...from here, and delete this node.", "tree": {"sha": "6e1dfb99e7886337205cfda791be3fff0a746ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e1dfb99e7886337205cfda791be3fff0a746ead"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b1c757d835372d4454b3760b5fbf793bd372529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1c757d835372d4454b3760b5fbf793bd372529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b1c757d835372d4454b3760b5fbf793bd372529", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1c757d835372d4454b3760b5fbf793bd372529/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3f7a2fa64f8777cb7eae1b99ff80fbe717095ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f7a2fa64f8777cb7eae1b99ff80fbe717095ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f7a2fa64f8777cb7eae1b99ff80fbe717095ac"}], "stats": {"total": 508, "additions": 250, "deletions": 258}, "files": [{"sha": "26cf44fde4b465e61121ca7f72199b4e201d9b9e", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 250, "deletions": 258, "changes": 508, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1c757d835372d4454b3760b5fbf793bd372529/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1c757d835372d4454b3760b5fbf793bd372529/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=2b1c757d835372d4454b3760b5fbf793bd372529", "patch": "@@ -180,7 +180,6 @@ Part I: Invoking GNU Fortran\n * Runtime::              Influencing runtime behavior with environment variables.\n \n Part II: Language Reference\n-* Fortran standards status::      Fortran 2003, 2008 and 2018 features supported by GNU Fortran.\n * Compiler Characteristics::      User-visible implementation details.\n * Extensions::                    Language extensions implemented by GNU Fortran.\n * Mixed-Language Programming::    Interoperability with C\n@@ -524,7 +523,10 @@ Fortran 2008 and Fortran 2018.\n @cindex Standards\n \n @menu\n-* Varying Length Character Strings::\n+* Fortran 95 status::\n+* Fortran 2003 status::\n+* Fortran 2008 status::\n+* Fortran 2018 status::\n @end menu\n \n The GNU Fortran compiler implements\n@@ -547,8 +549,8 @@ There also is support for the OpenACC specification (targeting\n version 2.6, @uref{http://www.openacc.org/}).  See\n @uref{https://gcc.gnu.org/wiki/OpenACC} for more information.\n \n-@node Varying Length Character Strings\n-@subsection Varying Length Character Strings\n+@node Fortran 95 status\n+@subsection Fortran 95 status\n @cindex Varying length character strings\n @cindex Varying length strings\n @cindex strings, varying length\n@@ -565,257 +567,8 @@ the features of @code{ISO_VARYING_STRING} and should be considered as\n replacement. (Namely, allocatable or pointers of the type\n @code{character(len=:)}.)\n \n-\n-@c =====================================================================\n-@c PART I: INVOCATION REFERENCE\n-@c =====================================================================\n-\n-@tex\n-\\part{I}{Invoking GNU Fortran}\n-@end tex\n-\n-@c ---------------------------------------------------------------------\n-@c Compiler Options\n-@c ---------------------------------------------------------------------\n-\n-@include invoke.texi\n-\n-\n-@c ---------------------------------------------------------------------\n-@c Runtime\n-@c ---------------------------------------------------------------------\n-\n-@node Runtime\n-@chapter Runtime:  Influencing runtime behavior with environment variables\n-@cindex environment variable\n-\n-The behavior of the @command{gfortran} can be influenced by\n-environment variables.\n-\n-Malformed environment variables are silently ignored.\n-\n-@menu\n-* TMPDIR:: Directory for scratch files\n-* GFORTRAN_STDIN_UNIT:: Unit number for standard input\n-* GFORTRAN_STDOUT_UNIT:: Unit number for standard output\n-* GFORTRAN_STDERR_UNIT:: Unit number for standard error\n-* GFORTRAN_UNBUFFERED_ALL:: Do not buffer I/O for all units\n-* GFORTRAN_UNBUFFERED_PRECONNECTED:: Do not buffer I/O for preconnected units.\n-* GFORTRAN_SHOW_LOCUS::  Show location for runtime errors\n-* GFORTRAN_OPTIONAL_PLUS:: Print leading + where permitted\n-* GFORTRAN_LIST_SEPARATOR::  Separator for list output\n-* GFORTRAN_CONVERT_UNIT::  Set endianness for unformatted I/O\n-* GFORTRAN_ERROR_BACKTRACE:: Show backtrace on run-time errors\n-* GFORTRAN_FORMATTED_BUFFER_SIZE:: Buffer size for formatted files\n-* GFORTRAN_UNFORMATTED_BUFFER_SIZE:: Buffer size for unformatted files\n-@end menu\n-\n-@node TMPDIR\n-@section @env{TMPDIR}---Directory for scratch files\n-\n-When opening a file with @code{STATUS='SCRATCH'}, GNU Fortran tries to\n-create the file in one of the potential directories by testing each\n-directory in the order below.\n-\n-@enumerate\n-@item\n-The environment variable @env{TMPDIR}, if it exists.\n-\n-@item\n-On the MinGW target, the directory returned by the @code{GetTempPath}\n-function. Alternatively, on the Cygwin target, the @env{TMP} and\n-@env{TEMP} environment variables, if they exist, in that order.\n-\n-@item\n-The @code{P_tmpdir} macro if it is defined, otherwise the directory\n-@file{/tmp}.\n-@end enumerate\n-\n-@node GFORTRAN_STDIN_UNIT\n-@section @env{GFORTRAN_STDIN_UNIT}---Unit number for standard input\n-\n-This environment variable can be used to select the unit number\n-preconnected to standard input.  This must be a positive integer.\n-The default value is 5.\n-\n-@node GFORTRAN_STDOUT_UNIT\n-@section @env{GFORTRAN_STDOUT_UNIT}---Unit number for standard output\n-\n-This environment variable can be used to select the unit number\n-preconnected to standard output.  This must be a positive integer.\n-The default value is 6.\n-\n-@node GFORTRAN_STDERR_UNIT\n-@section @env{GFORTRAN_STDERR_UNIT}---Unit number for standard error\n-\n-This environment variable can be used to select the unit number\n-preconnected to standard error.  This must be a positive integer.\n-The default value is 0.\n-\n-@node GFORTRAN_UNBUFFERED_ALL\n-@section @env{GFORTRAN_UNBUFFERED_ALL}---Do not buffer I/O on all units\n-\n-This environment variable controls whether all I/O is unbuffered.  If\n-the first letter is @samp{y}, @samp{Y} or @samp{1}, all I/O is\n-unbuffered.  This will slow down small sequential reads and writes.  If\n-the first letter is @samp{n}, @samp{N} or @samp{0}, I/O is buffered.\n-This is the default.\n-\n-@node GFORTRAN_UNBUFFERED_PRECONNECTED\n-@section @env{GFORTRAN_UNBUFFERED_PRECONNECTED}---Do not buffer I/O on preconnected units\n-\n-The environment variable named @env{GFORTRAN_UNBUFFERED_PRECONNECTED} controls\n-whether I/O on a preconnected unit (i.e.@: STDOUT or STDERR) is unbuffered.  If\n-the first letter is @samp{y}, @samp{Y} or @samp{1}, I/O is unbuffered.  This\n-will slow down small sequential reads and writes.  If the first letter\n-is @samp{n}, @samp{N} or @samp{0}, I/O is buffered.  This is the default.\n-\n-@node GFORTRAN_SHOW_LOCUS\n-@section @env{GFORTRAN_SHOW_LOCUS}---Show location for runtime errors\n-\n-If the first letter is @samp{y}, @samp{Y} or @samp{1}, filename and\n-line numbers for runtime errors are printed.  If the first letter is\n-@samp{n}, @samp{N} or @samp{0}, do not print filename and line numbers\n-for runtime errors.  The default is to print the location.\n-\n-@node GFORTRAN_OPTIONAL_PLUS\n-@section @env{GFORTRAN_OPTIONAL_PLUS}---Print leading + where permitted\n-\n-If the first letter is @samp{y}, @samp{Y} or @samp{1},\n-a plus sign is printed\n-where permitted by the Fortran standard.  If the first letter\n-is @samp{n}, @samp{N} or @samp{0}, a plus sign is not printed\n-in most cases.  Default is not to print plus signs.\n-\n-@node GFORTRAN_LIST_SEPARATOR\n-@section @env{GFORTRAN_LIST_SEPARATOR}---Separator for list output\n-\n-This environment variable specifies the separator when writing\n-list-directed output.  It may contain any number of spaces and\n-at most one comma.  If you specify this on the command line,\n-be sure to quote spaces, as in\n-@smallexample\n-$ GFORTRAN_LIST_SEPARATOR='  ,  ' ./a.out\n-@end smallexample\n-when @command{a.out} is the compiled Fortran program that you want to run.\n-Default is a single space.\n-\n-@node GFORTRAN_CONVERT_UNIT\n-@section @env{GFORTRAN_CONVERT_UNIT}---Set endianness for unformatted I/O\n-\n-By setting the @env{GFORTRAN_CONVERT_UNIT} variable, it is possible\n-to change the representation of data for unformatted files.\n-The syntax for the @env{GFORTRAN_CONVERT_UNIT} variable is:\n-@smallexample\n-GFORTRAN_CONVERT_UNIT: mode | mode ';' exception | exception ;\n-mode: 'native' | 'swap' | 'big_endian' | 'little_endian' ;\n-exception: mode ':' unit_list | unit_list ;\n-unit_list: unit_spec | unit_list unit_spec ;\n-unit_spec: INTEGER | INTEGER '-' INTEGER ;\n-@end smallexample\n-The variable consists of an optional default mode, followed by\n-a list of optional exceptions, which are separated by semicolons\n-from the preceding default and each other.  Each exception consists\n-of a format and a comma-separated list of units.  Valid values for\n-the modes are the same as for the @code{CONVERT} specifier:\n-\n-@itemize @w{}\n-@item @code{NATIVE} Use the native format.  This is the default.\n-@item @code{SWAP} Swap between little- and big-endian.\n-@item @code{LITTLE_ENDIAN} Use the little-endian format\n-for unformatted files.\n-@item @code{BIG_ENDIAN} Use the big-endian format for unformatted files.\n-@end itemize\n-A missing mode for an exception is taken to mean @code{BIG_ENDIAN}.\n-Examples of values for @env{GFORTRAN_CONVERT_UNIT} are:\n-@itemize @w{}\n-@item @code{'big_endian'}  Do all unformatted I/O in big_endian mode.\n-@item @code{'little_endian;native:10-20,25'}  Do all unformatted I/O\n-in little_endian mode, except for units 10 to 20 and 25, which are in\n-native format.\n-@item @code{'10-20'}  Units 10 to 20 are big-endian, the rest is native.\n-@end itemize\n-\n-Setting the environment variables should be done on the command\n-line or via the @command{export}\n-command for @command{sh}-compatible shells and via @command{setenv}\n-for @command{csh}-compatible shells.\n-\n-Example for @command{sh}:\n-@smallexample\n-$ gfortran foo.f90\n-$ GFORTRAN_CONVERT_UNIT='big_endian;native:10-20' ./a.out\n-@end smallexample\n-\n-Example code for @command{csh}:\n-@smallexample\n-% gfortran foo.f90\n-% setenv GFORTRAN_CONVERT_UNIT 'big_endian;native:10-20'\n-% ./a.out\n-@end smallexample\n-\n-Using anything but the native representation for unformatted data\n-carries a significant speed overhead.  If speed in this area matters\n-to you, it is best if you use this only for data that needs to be\n-portable.\n-\n-@xref{CONVERT specifier}, for an alternative way to specify the\n-data representation for unformatted files.  @xref{Runtime Options}, for\n-setting a default data representation for the whole program.  The\n-@code{CONVERT} specifier overrides the @option{-fconvert} compile options.\n-\n-@emph{Note that the values specified via the GFORTRAN_CONVERT_UNIT\n-environment variable will override the CONVERT specifier in the\n-open statement}.  This is to give control over data formats to\n-users who do not have the source code of their program available.\n-\n-@node GFORTRAN_ERROR_BACKTRACE\n-@section @env{GFORTRAN_ERROR_BACKTRACE}---Show backtrace on run-time errors\n-\n-If the @env{GFORTRAN_ERROR_BACKTRACE} variable is set to @samp{y},\n-@samp{Y} or @samp{1} (only the first letter is relevant) then a\n-backtrace is printed when a serious run-time error occurs.  To disable\n-the backtracing, set the variable to @samp{n}, @samp{N}, @samp{0}.\n-Default is to print a backtrace unless the @option{-fno-backtrace}\n-compile option was used.\n-\n-@node GFORTRAN_FORMATTED_BUFFER_SIZE\n-@section @env{GFORTRAN_FORMATTED_BUFFER_SIZE}---Set buffer size for formatted I/O\n-\n-The @env{GFORTRAN_FORMATTED_BUFFER_SIZE} environment variable\n-specifies buffer size in bytes to be used for formatted output.\n-The default value is 8192.\n-\n-@node GFORTRAN_UNFORMATTED_BUFFER_SIZE\n-@section @env{GFORTRAN_UNFORMATTED_BUFFER_SIZE}---Set buffer size for unformatted I/O\n-\n-The @env{GFORTRAN_UNFORMATTED_BUFFER_SIZE} environment variable\n-specifies buffer size in bytes to be used for unformatted output.\n-The default value is 131072.\n-\n-@c =====================================================================\n-@c PART II: LANGUAGE REFERENCE\n-@c =====================================================================\n-\n-@tex\n-\\part{II}{Language Reference}\n-@end tex\n-\n-@c ---------------------------------------------------------------------\n-@c Fortran standards status\n-@c ---------------------------------------------------------------------\n-\n-@node Fortran standards status\n-@chapter Fortran standards status\n-\n-@menu\n-* Fortran 2003 status::\n-* Fortran 2008 status::\n-* Fortran 2018 status::\n-@end menu\n-\n @node Fortran 2003 status\n-@section Fortran 2003 status\n+@subsection Fortran 2003 status\n \n GNU Fortran supports several Fortran 2003 features; an incomplete\n list can be found below.  See also the\n@@ -992,7 +745,7 @@ Renaming of operators in the @code{USE} statement.\n \n \n @node Fortran 2008 status\n-@section Fortran 2008 status\n+@subsection Fortran 2008 status\n \n The latest version of the Fortran standard is ISO/IEC 1539-1:2010, informally\n known as Fortran 2008.  The official version is available from International\n@@ -1112,7 +865,7 @@ arrays are supported for named constants (@code{PARAMETER}).\n \n \n @node Fortran 2018 status\n-@section Status of Fortran 2018 support\n+@subsection Status of Fortran 2018 support\n \n @itemize\n @item ERROR STOP in a PURE procedure\n@@ -1131,7 +884,7 @@ specifier now conforms to Fortran 2018.\n @end itemize\n \n \n-@subsection TS 29113 Status (Further Interoperability with C)\n+@subsubsection TS 29113 Status (Further Interoperability with C)\n \n GNU Fortran supports some of the new features of the Technical\n Specification (TS) 29113 on Further Interoperability of Fortran with C.\n@@ -1162,7 +915,7 @@ done in the library. The include file ISO_Fortran_binding.h is can be found in\n \n \n \n-@subsection TS 18508 Status (Additional Parallel Features)\n+@subsubsection TS 18508 Status (Additional Parallel Features)\n \n GNU Fortran supports the following new features of the Technical\n Specification 18508 on Additional Parallel Features in Fortran:\n@@ -1183,6 +936,245 @@ polymorphic components.\n @end itemize\n \n \n+\n+\n+@c =====================================================================\n+@c PART I: INVOCATION REFERENCE\n+@c =====================================================================\n+\n+@tex\n+\\part{I}{Invoking GNU Fortran}\n+@end tex\n+\n+@c ---------------------------------------------------------------------\n+@c Compiler Options\n+@c ---------------------------------------------------------------------\n+\n+@include invoke.texi\n+\n+\n+@c ---------------------------------------------------------------------\n+@c Runtime\n+@c ---------------------------------------------------------------------\n+\n+@node Runtime\n+@chapter Runtime:  Influencing runtime behavior with environment variables\n+@cindex environment variable\n+\n+The behavior of the @command{gfortran} can be influenced by\n+environment variables.\n+\n+Malformed environment variables are silently ignored.\n+\n+@menu\n+* TMPDIR:: Directory for scratch files\n+* GFORTRAN_STDIN_UNIT:: Unit number for standard input\n+* GFORTRAN_STDOUT_UNIT:: Unit number for standard output\n+* GFORTRAN_STDERR_UNIT:: Unit number for standard error\n+* GFORTRAN_UNBUFFERED_ALL:: Do not buffer I/O for all units\n+* GFORTRAN_UNBUFFERED_PRECONNECTED:: Do not buffer I/O for preconnected units.\n+* GFORTRAN_SHOW_LOCUS::  Show location for runtime errors\n+* GFORTRAN_OPTIONAL_PLUS:: Print leading + where permitted\n+* GFORTRAN_LIST_SEPARATOR::  Separator for list output\n+* GFORTRAN_CONVERT_UNIT::  Set endianness for unformatted I/O\n+* GFORTRAN_ERROR_BACKTRACE:: Show backtrace on run-time errors\n+* GFORTRAN_FORMATTED_BUFFER_SIZE:: Buffer size for formatted files\n+* GFORTRAN_UNFORMATTED_BUFFER_SIZE:: Buffer size for unformatted files\n+@end menu\n+\n+@node TMPDIR\n+@section @env{TMPDIR}---Directory for scratch files\n+\n+When opening a file with @code{STATUS='SCRATCH'}, GNU Fortran tries to\n+create the file in one of the potential directories by testing each\n+directory in the order below.\n+\n+@enumerate\n+@item\n+The environment variable @env{TMPDIR}, if it exists.\n+\n+@item\n+On the MinGW target, the directory returned by the @code{GetTempPath}\n+function. Alternatively, on the Cygwin target, the @env{TMP} and\n+@env{TEMP} environment variables, if they exist, in that order.\n+\n+@item\n+The @code{P_tmpdir} macro if it is defined, otherwise the directory\n+@file{/tmp}.\n+@end enumerate\n+\n+@node GFORTRAN_STDIN_UNIT\n+@section @env{GFORTRAN_STDIN_UNIT}---Unit number for standard input\n+\n+This environment variable can be used to select the unit number\n+preconnected to standard input.  This must be a positive integer.\n+The default value is 5.\n+\n+@node GFORTRAN_STDOUT_UNIT\n+@section @env{GFORTRAN_STDOUT_UNIT}---Unit number for standard output\n+\n+This environment variable can be used to select the unit number\n+preconnected to standard output.  This must be a positive integer.\n+The default value is 6.\n+\n+@node GFORTRAN_STDERR_UNIT\n+@section @env{GFORTRAN_STDERR_UNIT}---Unit number for standard error\n+\n+This environment variable can be used to select the unit number\n+preconnected to standard error.  This must be a positive integer.\n+The default value is 0.\n+\n+@node GFORTRAN_UNBUFFERED_ALL\n+@section @env{GFORTRAN_UNBUFFERED_ALL}---Do not buffer I/O on all units\n+\n+This environment variable controls whether all I/O is unbuffered.  If\n+the first letter is @samp{y}, @samp{Y} or @samp{1}, all I/O is\n+unbuffered.  This will slow down small sequential reads and writes.  If\n+the first letter is @samp{n}, @samp{N} or @samp{0}, I/O is buffered.\n+This is the default.\n+\n+@node GFORTRAN_UNBUFFERED_PRECONNECTED\n+@section @env{GFORTRAN_UNBUFFERED_PRECONNECTED}---Do not buffer I/O on preconnected units\n+\n+The environment variable named @env{GFORTRAN_UNBUFFERED_PRECONNECTED} controls\n+whether I/O on a preconnected unit (i.e.@: STDOUT or STDERR) is unbuffered.  If\n+the first letter is @samp{y}, @samp{Y} or @samp{1}, I/O is unbuffered.  This\n+will slow down small sequential reads and writes.  If the first letter\n+is @samp{n}, @samp{N} or @samp{0}, I/O is buffered.  This is the default.\n+\n+@node GFORTRAN_SHOW_LOCUS\n+@section @env{GFORTRAN_SHOW_LOCUS}---Show location for runtime errors\n+\n+If the first letter is @samp{y}, @samp{Y} or @samp{1}, filename and\n+line numbers for runtime errors are printed.  If the first letter is\n+@samp{n}, @samp{N} or @samp{0}, do not print filename and line numbers\n+for runtime errors.  The default is to print the location.\n+\n+@node GFORTRAN_OPTIONAL_PLUS\n+@section @env{GFORTRAN_OPTIONAL_PLUS}---Print leading + where permitted\n+\n+If the first letter is @samp{y}, @samp{Y} or @samp{1},\n+a plus sign is printed\n+where permitted by the Fortran standard.  If the first letter\n+is @samp{n}, @samp{N} or @samp{0}, a plus sign is not printed\n+in most cases.  Default is not to print plus signs.\n+\n+@node GFORTRAN_LIST_SEPARATOR\n+@section @env{GFORTRAN_LIST_SEPARATOR}---Separator for list output\n+\n+This environment variable specifies the separator when writing\n+list-directed output.  It may contain any number of spaces and\n+at most one comma.  If you specify this on the command line,\n+be sure to quote spaces, as in\n+@smallexample\n+$ GFORTRAN_LIST_SEPARATOR='  ,  ' ./a.out\n+@end smallexample\n+when @command{a.out} is the compiled Fortran program that you want to run.\n+Default is a single space.\n+\n+@node GFORTRAN_CONVERT_UNIT\n+@section @env{GFORTRAN_CONVERT_UNIT}---Set endianness for unformatted I/O\n+\n+By setting the @env{GFORTRAN_CONVERT_UNIT} variable, it is possible\n+to change the representation of data for unformatted files.\n+The syntax for the @env{GFORTRAN_CONVERT_UNIT} variable is:\n+@smallexample\n+GFORTRAN_CONVERT_UNIT: mode | mode ';' exception | exception ;\n+mode: 'native' | 'swap' | 'big_endian' | 'little_endian' ;\n+exception: mode ':' unit_list | unit_list ;\n+unit_list: unit_spec | unit_list unit_spec ;\n+unit_spec: INTEGER | INTEGER '-' INTEGER ;\n+@end smallexample\n+The variable consists of an optional default mode, followed by\n+a list of optional exceptions, which are separated by semicolons\n+from the preceding default and each other.  Each exception consists\n+of a format and a comma-separated list of units.  Valid values for\n+the modes are the same as for the @code{CONVERT} specifier:\n+\n+@itemize @w{}\n+@item @code{NATIVE} Use the native format.  This is the default.\n+@item @code{SWAP} Swap between little- and big-endian.\n+@item @code{LITTLE_ENDIAN} Use the little-endian format\n+for unformatted files.\n+@item @code{BIG_ENDIAN} Use the big-endian format for unformatted files.\n+@end itemize\n+A missing mode for an exception is taken to mean @code{BIG_ENDIAN}.\n+Examples of values for @env{GFORTRAN_CONVERT_UNIT} are:\n+@itemize @w{}\n+@item @code{'big_endian'}  Do all unformatted I/O in big_endian mode.\n+@item @code{'little_endian;native:10-20,25'}  Do all unformatted I/O\n+in little_endian mode, except for units 10 to 20 and 25, which are in\n+native format.\n+@item @code{'10-20'}  Units 10 to 20 are big-endian, the rest is native.\n+@end itemize\n+\n+Setting the environment variables should be done on the command\n+line or via the @command{export}\n+command for @command{sh}-compatible shells and via @command{setenv}\n+for @command{csh}-compatible shells.\n+\n+Example for @command{sh}:\n+@smallexample\n+$ gfortran foo.f90\n+$ GFORTRAN_CONVERT_UNIT='big_endian;native:10-20' ./a.out\n+@end smallexample\n+\n+Example code for @command{csh}:\n+@smallexample\n+% gfortran foo.f90\n+% setenv GFORTRAN_CONVERT_UNIT 'big_endian;native:10-20'\n+% ./a.out\n+@end smallexample\n+\n+Using anything but the native representation for unformatted data\n+carries a significant speed overhead.  If speed in this area matters\n+to you, it is best if you use this only for data that needs to be\n+portable.\n+\n+@xref{CONVERT specifier}, for an alternative way to specify the\n+data representation for unformatted files.  @xref{Runtime Options}, for\n+setting a default data representation for the whole program.  The\n+@code{CONVERT} specifier overrides the @option{-fconvert} compile options.\n+\n+@emph{Note that the values specified via the GFORTRAN_CONVERT_UNIT\n+environment variable will override the CONVERT specifier in the\n+open statement}.  This is to give control over data formats to\n+users who do not have the source code of their program available.\n+\n+@node GFORTRAN_ERROR_BACKTRACE\n+@section @env{GFORTRAN_ERROR_BACKTRACE}---Show backtrace on run-time errors\n+\n+If the @env{GFORTRAN_ERROR_BACKTRACE} variable is set to @samp{y},\n+@samp{Y} or @samp{1} (only the first letter is relevant) then a\n+backtrace is printed when a serious run-time error occurs.  To disable\n+the backtracing, set the variable to @samp{n}, @samp{N}, @samp{0}.\n+Default is to print a backtrace unless the @option{-fno-backtrace}\n+compile option was used.\n+\n+@node GFORTRAN_FORMATTED_BUFFER_SIZE\n+@section @env{GFORTRAN_FORMATTED_BUFFER_SIZE}---Set buffer size for formatted I/O\n+\n+The @env{GFORTRAN_FORMATTED_BUFFER_SIZE} environment variable\n+specifies buffer size in bytes to be used for formatted output.\n+The default value is 8192.\n+\n+@node GFORTRAN_UNFORMATTED_BUFFER_SIZE\n+@section @env{GFORTRAN_UNFORMATTED_BUFFER_SIZE}---Set buffer size for unformatted I/O\n+\n+The @env{GFORTRAN_UNFORMATTED_BUFFER_SIZE} environment variable\n+specifies buffer size in bytes to be used for unformatted output.\n+The default value is 131072.\n+\n+@c =====================================================================\n+@c PART II: LANGUAGE REFERENCE\n+@c =====================================================================\n+\n+@tex\n+\\part{II}{Language Reference}\n+@end tex\n+\n+\n+\n @c ---------------------------------------------------------------------\n @c Compiler Characteristics\n @c ---------------------------------------------------------------------"}]}