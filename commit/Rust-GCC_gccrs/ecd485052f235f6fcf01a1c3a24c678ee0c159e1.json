{"sha": "ecd485052f235f6fcf01a1c3a24c678ee0c159e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNkNDg1MDUyZjIzNWY2ZmNmMDFhMWMzYTI0YzY3OGVlMGMxNTllMQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@redhat.com", "date": "2005-07-13T18:36:35Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2005-07-13T18:36:35Z"}, "message": "mips.c (mips_canonicalize_comparison): New.\n\n2005-07-13  Eric Christopher  <echristo@redhat.com>\n\n        * config/mips/mips.c (mips_canonicalize_comparison): New.\n        (mips_emit_int_relational): Use.\n\nFrom-SVN: r101983", "tree": {"sha": "e6a88209dbd7bddc35981a1b456add1f5bfa3aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6a88209dbd7bddc35981a1b456add1f5bfa3aa7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecd485052f235f6fcf01a1c3a24c678ee0c159e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd485052f235f6fcf01a1c3a24c678ee0c159e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecd485052f235f6fcf01a1c3a24c678ee0c159e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd485052f235f6fcf01a1c3a24c678ee0c159e1/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8ba31f25dcd8579cb2d004c18c2add2407fb8ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8ba31f25dcd8579cb2d004c18c2add2407fb8ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8ba31f25dcd8579cb2d004c18c2add2407fb8ba"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "4eccac89594a774b132875c6638cf015016aec42", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd485052f235f6fcf01a1c3a24c678ee0c159e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd485052f235f6fcf01a1c3a24c678ee0c159e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecd485052f235f6fcf01a1c3a24c678ee0c159e1", "patch": "@@ -1,3 +1,8 @@\n+2005-07-13  Eric Christopher  <echristo@redhat.com>\n+\n+\t* config/mips/mips.c (mips_canonicalize_comparison): New.\n+\t(mips_emit_int_relational): Use.\n+\n 2005-07-13  Eric Christopher  <echristo@redhat.com>\n \n         * config.gcc (s390x-ibm-tpf*): Add extra_options. Remove"}, {"sha": "0dee266559d63843fca911d169e94566602e6ad6", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 48, "deletions": 1, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd485052f235f6fcf01a1c3a24c678ee0c159e1/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd485052f235f6fcf01a1c3a24c678ee0c159e1/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=ecd485052f235f6fcf01a1c3a24c678ee0c159e1", "patch": "@@ -2881,6 +2881,50 @@ mips_relational_operand_ok_p (enum rtx_code code, rtx cmp1)\n     }\n }\n \n+/* Canonicalize LE or LEU comparisons into LT comparisons when\n+   possible to avoid extra instructions or inverting the\n+   comparison.  */\n+\n+static bool\n+mips_canonicalize_comparison (enum rtx_code *code, rtx *cmp1, \n+\t\t\t      enum machine_mode mode)\n+{\n+  HOST_WIDE_INT original, plus_one;\n+\n+  if (GET_CODE (*cmp1) != CONST_INT)\n+    return false;\n+  \n+  original = INTVAL (*cmp1);\n+  plus_one = trunc_int_for_mode (original + 1, mode);\n+  \n+  switch (*code)\n+    {\n+    case LE:\n+      if (original < plus_one)\n+\t{\n+\t  *code = LT;\n+\t  *cmp1 = force_reg (mode, GEN_INT (plus_one));\n+\t  return true;\n+\t}\n+      break;\n+      \n+    case LEU:\n+      if (plus_one != 0)\n+\t{\n+\t  *code = LTU;\n+\t  *cmp1 = force_reg (mode, GEN_INT (plus_one));\n+\t  return true;\n+\t}\n+      break;\n+      \n+    default:\n+      return false;\n+   }\n+  \n+  return false;\n+\n+}\n+\n /* Compare CMP0 and CMP1 using relational operator CODE and store the\n    result in TARGET.  CMP0 and TARGET are register_operands that have\n    the same integer mode.  If INVERT_PTR is nonnull, it's OK to set\n@@ -2891,11 +2935,14 @@ mips_emit_int_relational (enum rtx_code code, bool *invert_ptr,\n \t\t\t  rtx target, rtx cmp0, rtx cmp1)\n {\n   /* First see if there is a MIPS instruction that can do this operation\n-     with CMP1 in its current form.  If not, try doing the same for the\n+     with CMP1 in its current form. If not, try to canonicalize the\n+     comparison to LT. If that fails, try doing the same for the\n      inverse operation.  If that also fails, force CMP1 into a register\n      and try again.  */\n   if (mips_relational_operand_ok_p (code, cmp1))\n     mips_emit_binary (code, target, cmp0, cmp1);\n+  else if (mips_canonicalize_comparison (&code, &cmp1, GET_MODE (target)))\n+    mips_emit_binary (code, target, cmp0, cmp1);\n   else\n     {\n       enum rtx_code inv_code = reverse_condition (code);"}]}