{"sha": "f07049c8f1741e8a56f8e6dc3702216a652a532d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA3MDQ5YzhmMTc0MWU4YTU2ZjhlNmRjMzcwMjIxNmE2NTJhNTMyZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-03-03T11:29:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-03-03T11:29:51Z"}, "message": "re PR tree-optimization/39343 (Wrong result for __builtin_object_size (x, 1))\n\n\tPR tree-optimization/39343\n\t* tree-ssa-ccp.c (maybe_fold_offset_to_address): Don't check if\n\tCOMPONENT_REF t has ARRAY_TYPE.\n\n\t* gcc.dg/pr39343.c: New test.\n\nFrom-SVN: r144571", "tree": {"sha": "72080893386c672511d6291de515bd51b739d6f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72080893386c672511d6291de515bd51b739d6f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f07049c8f1741e8a56f8e6dc3702216a652a532d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f07049c8f1741e8a56f8e6dc3702216a652a532d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f07049c8f1741e8a56f8e6dc3702216a652a532d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f07049c8f1741e8a56f8e6dc3702216a652a532d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc0ffad7cba0735ea2b159aaf00521b9c8da2319", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0ffad7cba0735ea2b159aaf00521b9c8da2319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc0ffad7cba0735ea2b159aaf00521b9c8da2319"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "72da01fc0607fe6f95b9a1a629a24f0a7e928d58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f07049c8f1741e8a56f8e6dc3702216a652a532d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f07049c8f1741e8a56f8e6dc3702216a652a532d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f07049c8f1741e8a56f8e6dc3702216a652a532d", "patch": "@@ -1,3 +1,9 @@\n+2009-03-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/39343\n+\t* tree-ssa-ccp.c (maybe_fold_offset_to_address): Don't check if\n+\tCOMPONENT_REF t has ARRAY_TYPE.\n+\n 2009-03-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/39335"}, {"sha": "3bb4d97c658d2866f05a89a49fad27545604c837", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f07049c8f1741e8a56f8e6dc3702216a652a532d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f07049c8f1741e8a56f8e6dc3702216a652a532d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f07049c8f1741e8a56f8e6dc3702216a652a532d", "patch": "@@ -1,3 +1,8 @@\n+2009-03-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/39343\n+\t* gcc.dg/pr39343.c: New test.\n+\n 2009-03-03  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/39248"}, {"sha": "70df59ef098491bc65e55de9ab75f7cdf3a8b348", "filename": "gcc/testsuite/gcc.dg/pr39343.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f07049c8f1741e8a56f8e6dc3702216a652a532d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39343.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f07049c8f1741e8a56f8e6dc3702216a652a532d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39343.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39343.c?ref=f07049c8f1741e8a56f8e6dc3702216a652a532d", "patch": "@@ -0,0 +1,29 @@\n+/* PR tree-optimization/39343 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+extern inline __attribute__ ((__always_inline__)) int\n+foo (char *dest)\n+{\n+  return __builtin_object_size (dest, 1);\n+}\n+\n+struct S\n+{\n+  union\n+  {\n+    struct { int a, b; char c, d; } f;\n+    struct { struct { int a, b; char c, d[255]; } e; } g;\n+  } u;\n+};\n+\n+int\n+main (void)\n+{\n+  struct S s;\n+  if (foo (s.u.g.e.d) != 255)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "5080cc32ce7c7fa3d403794f842a668ecb36b0cf", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f07049c8f1741e8a56f8e6dc3702216a652a532d/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f07049c8f1741e8a56f8e6dc3702216a652a532d/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=f07049c8f1741e8a56f8e6dc3702216a652a532d", "patch": "@@ -1942,8 +1942,7 @@ maybe_fold_offset_to_address (tree addr, tree offset, tree orig_type)\n \t   || (TREE_CODE (orig) == COMPONENT_REF\n \t       && TREE_CODE (TREE_TYPE (TREE_OPERAND (orig, 1))) == ARRAY_TYPE))\n \t  && (TREE_CODE (t) == ARRAY_REF\n-\t      || (TREE_CODE (t) == COMPONENT_REF\n-\t\t  && TREE_CODE (TREE_TYPE (TREE_OPERAND (t, 1))) == ARRAY_TYPE))\n+\t      || TREE_CODE (t) == COMPONENT_REF)\n \t  && !operand_equal_p (TREE_CODE (orig) == ARRAY_REF\n \t\t\t       ? TREE_OPERAND (orig, 0) : orig,\n \t\t\t       TREE_CODE (t) == ARRAY_REF"}]}