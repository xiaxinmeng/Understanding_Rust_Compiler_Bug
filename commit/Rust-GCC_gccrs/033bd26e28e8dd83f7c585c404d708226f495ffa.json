{"sha": "033bd26e28e8dd83f7c585c404d708226f495ffa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMzYmQyNmUyOGU4ZGQ4M2Y3YzU4NWM0MDRkNzA4MjI2ZjQ5NWZmYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-11-21T15:02:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-21T15:02:19Z"}, "message": "lra.c (lra_insn_recog_data_pool): New.\n\n2019-11-21  Richard Biener  <rguenther@suse.de>\n\n\t* lra.c (lra_insn_recog_data_pool): New.\n\t(free_insn_recog_data): Adjust.\n\t(finish_insn_recog_data): Release lra_insn_recog_data_pool.\n\t(lra_set_insn_recog_data): Allocate from lra_insn_recog_data_pool.\n\nFrom-SVN: r278556", "tree": {"sha": "cbb00d643acffb81f584986a57d6894be0076663", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbb00d643acffb81f584986a57d6894be0076663"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/033bd26e28e8dd83f7c585c404d708226f495ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/033bd26e28e8dd83f7c585c404d708226f495ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/033bd26e28e8dd83f7c585c404d708226f495ffa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/033bd26e28e8dd83f7c585c404d708226f495ffa/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c327e2d4d04966c8c5dc19cee9e242befdff6ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c327e2d4d04966c8c5dc19cee9e242befdff6ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c327e2d4d04966c8c5dc19cee9e242befdff6ef"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "26831173ba777af4fa520cbbf70720762cd282b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/033bd26e28e8dd83f7c585c404d708226f495ffa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/033bd26e28e8dd83f7c585c404d708226f495ffa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=033bd26e28e8dd83f7c585c404d708226f495ffa", "patch": "@@ -1,3 +1,10 @@\n+2019-11-21  Richard Biener  <rguenther@suse.de>\n+\n+\t* lra.c (lra_insn_recog_data_pool): New.\n+\t(free_insn_recog_data): Adjust.\n+\t(finish_insn_recog_data): Release lra_insn_recog_data_pool.\n+\t(lra_set_insn_recog_data): Allocate from lra_insn_recog_data_pool.\n+\n 2019-11-21  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92596"}, {"sha": "ec20aed449255112d75440e0fc04ee88b3b567bb", "filename": "gcc/lra.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/033bd26e28e8dd83f7c585c404d708226f495ffa/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/033bd26e28e8dd83f7c585c404d708226f495ffa/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=033bd26e28e8dd83f7c585c404d708226f495ffa", "patch": "@@ -714,6 +714,10 @@ int lra_insn_recog_data_len;\n /* Map INSN_UID -> the insn recog data (NULL if unknown).  */\n lra_insn_recog_data_t *lra_insn_recog_data;\n \n+/* Alloc pool we allocate entries for lra_insn_recog_data from.  */\n+static object_allocator<class lra_insn_recog_data>\n+  lra_insn_recog_data_pool (\"insn recog data pool\");\n+\n /* Initialize LRA data about insns.  */\n static void\n init_insn_recog_data (void)\n@@ -759,7 +763,7 @@ free_insn_recog_data (lra_insn_recog_data_t data)\n     }\n   free_insn_regs (data->regs);\n   data->regs = NULL;\n-  free (data);\n+  lra_insn_recog_data_pool.remove (data);\n }\n \n /* Pools for copies.  */\n@@ -778,6 +782,7 @@ finish_insn_recog_data (void)\n   finish_insn_regs ();\n   lra_copy_pool.release ();\n   lra_insn_reg_pool.release ();\n+  lra_insn_recog_data_pool.release ();\n   free (lra_insn_recog_data);\n }\n \n@@ -952,7 +957,7 @@ lra_set_insn_recog_data (rtx_insn *insn)\n \t/* It might be a new simple insn which is not recognized yet.  */\n \tINSN_CODE (insn) = icode = recog_memoized (insn);\n     }\n-  data = XNEW (class lra_insn_recog_data);\n+  data = lra_insn_recog_data_pool.allocate ();\n   lra_insn_recog_data[uid] = data;\n   data->insn = insn;\n   data->used_insn_alternative = LRA_UNKNOWN_ALT;"}]}