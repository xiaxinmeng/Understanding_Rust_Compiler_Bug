{"sha": "77841d771721ca0e36c031cf9a004005b0bec18e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc4NDFkNzcxNzIxY2EwZTM2YzAzMWNmOWEwMDQwMDViMGJlYzE4ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-11-18T23:46:13Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-18T23:46:13Z"}, "message": "re PR target/46546 (ix86_pad_returns may leave BB_END (bb) pointing to deleted insn)\n\n\tPR target/46546\n\t* config/i386/i386.c (ix86_reorg): Call compute_bb_for_insn.\n\nFrom-SVN: r166921", "tree": {"sha": "e55ae609ec6efc045afb2cf8b0d5c569fcf163fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e55ae609ec6efc045afb2cf8b0d5c569fcf163fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77841d771721ca0e36c031cf9a004005b0bec18e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77841d771721ca0e36c031cf9a004005b0bec18e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77841d771721ca0e36c031cf9a004005b0bec18e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77841d771721ca0e36c031cf9a004005b0bec18e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd400280c4f431ef4873b68c63f12d3f7ada87aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd400280c4f431ef4873b68c63f12d3f7ada87aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd400280c4f431ef4873b68c63f12d3f7ada87aa"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "f5b80283e9d50bbf68ff126e78d2a1d337303ced", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77841d771721ca0e36c031cf9a004005b0bec18e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77841d771721ca0e36c031cf9a004005b0bec18e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77841d771721ca0e36c031cf9a004005b0bec18e", "patch": "@@ -1,3 +1,8 @@\n+2010-11-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/46546\n+\t* config/i386/i386.c (ix86_reorg): Call compute_bb_for_insn.\n+\n 2010-11-18  Richard Henderson  <rth@redhat.com>\n \n \tPR middle-end/46515"}, {"sha": "d5f097d5253f17318970ef3503f473a431a1a3c7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77841d771721ca0e36c031cf9a004005b0bec18e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77841d771721ca0e36c031cf9a004005b0bec18e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=77841d771721ca0e36c031cf9a004005b0bec18e", "patch": "@@ -29633,8 +29633,8 @@ ix86_pad_returns (void)\n \t      && ((JUMP_P (prev) && any_condjump_p (prev))\n \t\t  || CALL_P (prev)))\n \t    replace = true;\n-\t  /* Empty functions get branch mispredict even when the jump destination\n-\t     is not visible to us.  */\n+\t  /* Empty functions get branch mispredict even when\n+\t     the jump destination is not visible to us.  */\n \t  if (!prev && !optimize_function_for_size_p (cfun))\n \t    replace = true;\n \t}\n@@ -29752,8 +29752,8 @@ ix86_pad_short_function (void)\n \t      if (!insn)\n \t\tinsn = ret;\n \n-\t      /* Two NOPs are counted as one instruction.  */\n-\t      insn_count = 2 * (4  - insn_count);\n+\t      /* Two NOPs count as one instruction.  */\n+\t      insn_count = 2 * (4 - insn_count);\n \t      emit_insn_before (gen_nops (GEN_INT (insn_count)), insn);\n \t    }\n \t}\n@@ -29765,6 +29765,10 @@ ix86_pad_short_function (void)\n static void\n ix86_reorg (void)\n {\n+  /* We are freeing block_for_insn in the toplev to keep compatibility\n+     with old MDEP_REORGS that are not CFG based.  Recompute it now.  */\n+  compute_bb_for_insn ();\n+\n   if (optimize && optimize_function_for_speed_p (cfun))\n     {\n       if (TARGET_PAD_SHORT_FUNCTION)"}]}