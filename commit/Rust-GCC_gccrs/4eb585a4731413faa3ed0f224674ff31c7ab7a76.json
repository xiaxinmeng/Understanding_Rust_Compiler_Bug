{"sha": "4eb585a4731413faa3ed0f224674ff31c7ab7a76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGViNTg1YTQ3MzE0MTNmYWEzZWQwZjIyNDY3NGZmMzFjN2FiN2E3Ng==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2006-08-25T13:53:39Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2006-08-25T13:53:39Z"}, "message": "re PR middle-end/28753 (ICE in extract_insn, at recog.c:2075 on powerpc)\n\n        PR target/28753\n        * config/rs6000/rs6000.md (movcc_internal1): Change operand 1\n        predicate to general_operand.  Add 0->y and I->r alternatives.\n\nFrom-SVN: r116400", "tree": {"sha": "18de77def0ff67ee0f3812d4491b7b176d16b668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18de77def0ff67ee0f3812d4491b7b176d16b668"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4eb585a4731413faa3ed0f224674ff31c7ab7a76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eb585a4731413faa3ed0f224674ff31c7ab7a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eb585a4731413faa3ed0f224674ff31c7ab7a76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eb585a4731413faa3ed0f224674ff31c7ab7a76/comments", "author": null, "committer": null, "parents": [{"sha": "86c33cd0fb940ec44861943931607fd1094df3bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86c33cd0fb940ec44861943931607fd1094df3bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86c33cd0fb940ec44861943931607fd1094df3bd"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "fcb447c45b1bf780869e01225356c27a6922d9fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eb585a4731413faa3ed0f224674ff31c7ab7a76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eb585a4731413faa3ed0f224674ff31c7ab7a76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4eb585a4731413faa3ed0f224674ff31c7ab7a76", "patch": "@@ -1,3 +1,9 @@\n+2006-08-25  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR target/28753\n+\t* config/rs6000/rs6000.md (movcc_internal1): Change operand 1\n+\tpredicate to general_operand.  Add 0->y and I->r alternatives.\n+\n 2006-08-25  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* doc/tm.texi: Fix a typo."}, {"sha": "db60b8ef9441546214486b08c53bb3fd4283bb15", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eb585a4731413faa3ed0f224674ff31c7ab7a76/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eb585a4731413faa3ed0f224674ff31c7ab7a76/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4eb585a4731413faa3ed0f224674ff31c7ab7a76", "patch": "@@ -7920,42 +7920,44 @@\n   \"\")\n \n (define_insn \"*movcc_internal1\"\n-  [(set (match_operand:CC 0 \"nonimmediate_operand\" \"=y,x,?y,r,r,r,r,q,cl,r,m\")\n-\t(match_operand:CC 1 \"nonimmediate_operand\" \"y,r,r,x,y,r,h,r,r,m,r\"))]\n+  [(set (match_operand:CC 0 \"nonimmediate_operand\" \"=y,x,?y,y,r,r,r,r,r,q,cl,r,m\")\n+\t(match_operand:CC 1 \"general_operand\" \"y,r,r,O,x,y,r,I,h,r,r,m,r\"))]\n   \"register_operand (operands[0], CCmode)\n    || register_operand (operands[1], CCmode)\"\n   \"@\n    mcrf %0,%1\n    mtcrf 128,%1\n    {rlinm|rlwinm} %1,%1,%F0,0xffffffff\\;mtcrf %R0,%1\\;{rlinm|rlwinm} %1,%1,%f0,0xffffffff\n+   crxor %0,%0,%0\n    mfcr %0%Q1\n    mfcr %0%Q1\\;{rlinm|rlwinm} %0,%0,%f1,0xf0000000\n    mr %0,%1\n+   {lil|li} %0,%1\n    mf%1 %0\n    mt%0 %1\n    mt%0 %1\n    {l%U1%X1|lwz%U1%X1} %0,%1\n    {st%U0%U1|stw%U0%U1} %1,%0\"\n   [(set (attr \"type\")\n-     (cond [(eq_attr \"alternative\" \"0\")\n+     (cond [(eq_attr \"alternative\" \"0,3\")\n \t\t(const_string \"cr_logical\")\n \t    (eq_attr \"alternative\" \"1,2\")\n \t\t(const_string \"mtcr\")\n-\t    (eq_attr \"alternative\" \"5,7\")\n+\t    (eq_attr \"alternative\" \"6,7,9\")\n \t\t(const_string \"integer\")\n-\t    (eq_attr \"alternative\" \"6\")\n-\t\t(const_string \"mfjmpr\")\n \t    (eq_attr \"alternative\" \"8\")\n+\t\t(const_string \"mfjmpr\")\n+\t    (eq_attr \"alternative\" \"10\")\n \t\t(const_string \"mtjmpr\")\n-\t    (eq_attr \"alternative\" \"9\")\n+\t    (eq_attr \"alternative\" \"11\")\n \t\t(const_string \"load\")\n-\t    (eq_attr \"alternative\" \"10\")\n+\t    (eq_attr \"alternative\" \"12\")\n \t\t(const_string \"store\")\n \t    (ne (symbol_ref \"TARGET_MFCRF\") (const_int 0))\n \t\t(const_string \"mfcrf\")\n \t   ]\n \t(const_string \"mfcr\")))\n-   (set_attr \"length\" \"4,4,12,4,8,4,4,4,4,4,4\")])\n+   (set_attr \"length\" \"4,4,12,4,4,8,4,4,4,4,4,4,4\")])\n \f\n ;; For floating-point, we normally deal with the floating-point registers\n ;; unless -msoft-float is used.  The sole exception is that parameter passing"}]}