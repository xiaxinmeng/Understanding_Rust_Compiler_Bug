{"sha": "b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjliZGQ2MGI4NzkyZTJkMzE3M2VjZmFjZDVjMjVhYWM4OTRhOTRlNQ==", "commit": {"author": {"name": "Julia Koval", "email": "julia.koval@intel.com", "date": "2017-05-14T07:18:38Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-05-14T07:18:38Z"}, "message": "i386-builtin-types.def (VOID_FTYPE_INT_INT64): New type.\n\n\t* config/i386/i386-builtin-types.def (VOID_FTYPE_INT_INT64): New type.\n\t* config/i386/i386-builtin.def (__builtin_ia32_xgetbv)\n\t(__builtin_ia32_xsetbv): New builtins.\n\t* config/i386/i386.c (ix86_expand_special_args_builtin):\n\tProcess new types.\n\t(ix86_expand_builtin): Special expand for new intrinsics.\n\t* config/i386/i386.md (UNSPECV_XGETBV, UNSPECV_XSETBV): New.\n\t(xsetbv, xsetbv_rex64, xgetbv, xgetbv_rex64): New insn patterns.\n\t* config/i386/xsaveintrin.h (_xsetbv, _getbv): New intrinsics.\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/xgetsetbv.c: New test.\n\nFrom-SVN: r248028", "tree": {"sha": "2daf342d4400b4c11dbf2d5ca6a48bb7e22ecd82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2daf342d4400b4c11dbf2d5ca6a48bb7e22ecd82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/comments", "author": {"login": "vaalfreja", "id": 5216345, "node_id": "MDQ6VXNlcjUyMTYzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5216345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaalfreja", "html_url": "https://github.com/vaalfreja", "followers_url": "https://api.github.com/users/vaalfreja/followers", "following_url": "https://api.github.com/users/vaalfreja/following{/other_user}", "gists_url": "https://api.github.com/users/vaalfreja/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaalfreja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaalfreja/subscriptions", "organizations_url": "https://api.github.com/users/vaalfreja/orgs", "repos_url": "https://api.github.com/users/vaalfreja/repos", "events_url": "https://api.github.com/users/vaalfreja/events{/privacy}", "received_events_url": "https://api.github.com/users/vaalfreja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6fa95e0961bc15efa5ff52fc7358aee78a16a33c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa95e0961bc15efa5ff52fc7358aee78a16a33c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fa95e0961bc15efa5ff52fc7358aee78a16a33c"}], "stats": {"total": 135, "additions": 134, "deletions": 1}, "files": [{"sha": "e7aa4648af69b4627b8678dc9127f25dc205b582", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "patch": "@@ -1,3 +1,15 @@\n+2017-05-14  Julia Koval  <julia.koval@intel.com>\n+\n+\t* config/i386/i386-builtin-types.def (VOID_FTYPE_INT_INT64): New type.\n+\t* config/i386/i386-builtin.def (__builtin_ia32_xgetbv)\n+\t(__builtin_ia32_xsetbv): New builtins.\n+\t* config/i386/i386.c (ix86_expand_special_args_builtin):\n+\tProcess new types.\n+\t(ix86_expand_builtin): Special expand for new intrinsics.\n+\t* config/i386/i386.md (UNSPECV_XGETBV, UNSPECV_XSETBV): New.\n+\t(xsetbv, xsetbv_rex64, xgetbv, xgetbv_rex64): New insn patterns.\n+\t* config/i386/xsaveintrin.h (_xsetbv, _getbv): New intrinsics.\n+\n 2017-05-13  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* cfganal.c (inverted_post_order_compute): Change argument type"}, {"sha": "8de30862c58edcf08db365b732cfcfe162dd4c13", "filename": "gcc/config/i386/i386-builtin-types.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def?ref=b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "patch": "@@ -311,6 +311,7 @@ DEF_FUNCTION_TYPE (V8DI, V8DI, V8DI, UQI)\n DEF_FUNCTION_TYPE (V8DI, PV8DI)\n DEF_FUNCTION_TYPE (V8DI, V8DI)\n \n+DEF_FUNCTION_TYPE (VOID, INT, INT64)\n DEF_FUNCTION_TYPE (DI, V2DI, INT)\n DEF_FUNCTION_TYPE (DOUBLE, V2DF, INT)\n DEF_FUNCTION_TYPE (FLOAT, V4SF, INT)"}, {"sha": "2663cb9faa7edd41996a20cb3e67d3137829d80c", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "patch": "@@ -113,6 +113,8 @@ BDESC (OPTION_MASK_ISA_XSAVEOPT, CODE_FOR_nothing, \"__builtin_ia32_xsaveopt\", IX\n BDESC (OPTION_MASK_ISA_XSAVES, CODE_FOR_nothing, \"__builtin_ia32_xsaves\", IX86_BUILTIN_XSAVES, UNKNOWN, (int) VOID_FTYPE_PVOID_INT64)\n BDESC (OPTION_MASK_ISA_XSAVES, CODE_FOR_nothing, \"__builtin_ia32_xrstors\", IX86_BUILTIN_XRSTORS, UNKNOWN, (int) VOID_FTYPE_PVOID_INT64)\n BDESC (OPTION_MASK_ISA_XSAVEC, CODE_FOR_nothing, \"__builtin_ia32_xsavec\", IX86_BUILTIN_XSAVEC, UNKNOWN, (int) VOID_FTYPE_PVOID_INT64)\n+BDESC (OPTION_MASK_ISA_XSAVE, CODE_FOR_nothing, \"__builtin_ia32_xgetbv\", IX86_BUILTIN_XGETBV, UNKNOWN, (int) UINT64_FTYPE_INT)\n+BDESC (OPTION_MASK_ISA_XSAVE, CODE_FOR_nothing, \"__builtin_ia32_xsetbv\", IX86_BUILTIN_XSETBV, UNKNOWN, (int) VOID_FTYPE_INT_INT64)\n \n BDESC (OPTION_MASK_ISA_FXSR | OPTION_MASK_ISA_64BIT, CODE_FOR_nothing, \"__builtin_ia32_fxsave64\", IX86_BUILTIN_FXSAVE64, UNKNOWN, (int) VOID_FTYPE_PVOID)\n BDESC (OPTION_MASK_ISA_FXSR | OPTION_MASK_ISA_64BIT, CODE_FOR_nothing, \"__builtin_ia32_fxrstor64\", IX86_BUILTIN_FXRSTOR64, UNKNOWN, (int) VOID_FTYPE_PVOID)"}, {"sha": "a6f20636c4379eb3e3e6b32b05477014ae31ead9", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "patch": "@@ -36220,6 +36220,7 @@ ix86_expand_special_args_builtin (const struct builtin_description *d,\n     case V4DI_FTYPE_PCV4DI_V4DI:\n     case V4SI_FTYPE_PCV4SI_V4SI:\n     case V2DI_FTYPE_PCV2DI_V2DI:\n+    case VOID_FTYPE_INT_INT64:\n       nargs = 2;\n       klass = load;\n       memory = 0;\n@@ -37227,6 +37228,7 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n     case IX86_BUILTIN_RDPMC:\n     case IX86_BUILTIN_RDTSC:\n     case IX86_BUILTIN_RDTSCP:\n+    case IX86_BUILTIN_XGETBV:\n \n       op0 = gen_reg_rtx (DImode);\n       op1 = gen_reg_rtx (DImode);\n@@ -37243,6 +37245,18 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n \t\t  : gen_rdpmc (op0, op2));\n \t  emit_insn (insn);\n \t}\n+      else if (fcode == IX86_BUILTIN_XGETBV)\n+\t{\n+\t  arg0 = CALL_EXPR_ARG (exp, 0);\n+\t  op2 = expand_normal (arg0);\n+\t  if (!register_operand (op2, SImode))\n+\t    op2 = copy_to_mode_reg (SImode, op2);\n+\n+\t  insn = (TARGET_64BIT\n+\t\t  ? gen_xgetbv_rex64 (op0, op1, op2)\n+\t\t  : gen_xgetbv (op0, op2));\n+\t  emit_insn (insn);\n+\t}\n       else if (fcode == IX86_BUILTIN_RDTSC)\n \t{\n \t  insn = (TARGET_64BIT\n@@ -37335,6 +37349,40 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n \temit_insn (pat);\n       return 0;\n \n+    case IX86_BUILTIN_XSETBV:\n+      arg0 = CALL_EXPR_ARG (exp, 0);\n+      arg1 = CALL_EXPR_ARG (exp, 1);\n+      op0 = expand_normal (arg0);\n+      op1 = expand_normal (arg1);\n+\n+      if (!REG_P (op0))\n+\top0 = copy_to_mode_reg (SImode, op0);\n+\n+      if (TARGET_64BIT)\n+\t{\n+\t  op2 = expand_simple_binop (DImode, LSHIFTRT, op1, GEN_INT (32),\n+\t\t\t\t     NULL, 1, OPTAB_DIRECT);\n+\n+\t  op2 = gen_lowpart (SImode, op2);\n+\t  op1 = gen_lowpart (SImode, op1);\n+\t  if (!REG_P (op1))\n+\t    op1 = copy_to_mode_reg (SImode, op1);\n+\t  if (!REG_P (op2))\n+\t    op2 = copy_to_mode_reg (SImode, op2);\n+\t  icode = CODE_FOR_xsetbv_rex64;\n+\t  pat = GEN_FCN (icode) (op0, op1, op2);\n+\t}\n+      else\n+\t{\n+\t  if (!REG_P (op1))\n+\t    op1 = copy_to_mode_reg (DImode, op1);\n+\t  icode = CODE_FOR_xsetbv;\n+\t  pat = GEN_FCN (icode) (op0, op1);\n+\t}\n+      if (pat)\n+\temit_insn (pat);\n+      return 0;\n+\n     case IX86_BUILTIN_XSAVE:\n     case IX86_BUILTIN_XRSTOR:\n     case IX86_BUILTIN_XSAVE64:"}, {"sha": "da79d8fe1b8a6b1b72f36dcb243fb58d3791e809", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "patch": "@@ -236,6 +236,8 @@\n   UNSPECV_XRSTORS64\n   UNSPECV_XSAVEC\n   UNSPECV_XSAVEC64\n+  UNSPECV_XGETBV\n+  UNSPECV_XSETBV\n \n   ;; For atomic compound assignments.\n   UNSPECV_FNSTENV\n@@ -19029,6 +19031,43 @@\n    (set (attr \"length\")\n         (symbol_ref \"ix86_attr_length_address_default (insn) + 4\"))])\n \n+(define_insn \"xsetbv\"\n+  [(unspec_volatile:SI\n+\t [(match_operand:SI 0 \"register_operand\" \"c\")\n+\t  (match_operand:DI 1 \"register_operand\" \"A\")]\n+\t UNSPECV_XSETBV)]\n+  \"!TARGET_64BIT && TARGET_XSAVE\"\n+  \"xsetbv\"\n+  [(set_attr \"type\" \"other\")])\n+\n+(define_insn \"xsetbv_rex64\"\n+  [(unspec_volatile:SI\n+\t [(match_operand:SI 0 \"register_operand\" \"c\")\n+\t  (match_operand:SI 1 \"register_operand\" \"a\")\n+\t  (match_operand:SI 2 \"register_operand\" \"d\")]\n+\t UNSPECV_XSETBV)]\n+  \"TARGET_64BIT && TARGET_XSAVE\"\n+  \"xsetbv\"\n+  [(set_attr \"type\" \"other\")])\n+\n+(define_insn \"xgetbv\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=A\")\n+  \t(unspec_volatile:DI [(match_operand:SI 1 \"register_operand\" \"c\")]\n+\t\t\t    UNSPECV_XGETBV))]\n+  \"!TARGET_64BIT && TARGET_XSAVE\"\n+  \"xgetbv\"\n+  [(set_attr \"type\" \"other\")])\n+\n+(define_insn \"xgetbv_rex64\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=a\")\n+  \t(unspec_volatile:DI [(match_operand:SI 2 \"register_operand\" \"c\")]\n+\t\t\t    UNSPECV_XGETBV))\n+   (set (match_operand:DI 1 \"register_operand\" \"=d\")\n+\t(unspec_volatile:DI [(match_dup 2)] UNSPECV_XGETBV))]\n+  \"TARGET_64BIT && TARGET_XSAVE\"\n+  \"xgetbv\"\n+  [(set_attr \"type\" \"other\")])\n+\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n ;; Floating-point instructions for atomic compound assignments"}, {"sha": "cea8ad9538ff2d6694d5c462a2488633d8db9203", "filename": "gcc/config/i386/xsaveintrin.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Fconfig%2Fi386%2Fxsaveintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Fconfig%2Fi386%2Fxsaveintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxsaveintrin.h?ref=b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "patch": "@@ -48,6 +48,20 @@ _xrstor (void *__P, long long __M)\n   __builtin_ia32_xrstor (__P, __M);\n }\n \n+extern __inline void\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_xsetbv (unsigned int __A, long long __V)\n+{\n+  __builtin_ia32_xsetbv (__A, __V);\n+}\n+\n+extern __inline long long\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_xgetbv (unsigned int __A)\n+{\n+  __builtin_ia32_xgetbv (__A);\n+}\n+\n #ifdef __x86_64__\n extern __inline void\n __attribute__((__gnu_inline__, __always_inline__, __artificial__))"}, {"sha": "8dccbe3b33dffa76a919ce7b2693de5d18fa0c10", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "patch": "@@ -1,3 +1,7 @@\n+2017-05-14  Julia Koval  <julia.koval@intel.com>\n+\n+\t* gcc.target/i386/xgetsetbv.c: New test.\n+\n 2017-05-14  Nicolas Koenig  <koenigni@student.ethz.ch>\n \n \tPR fortran/80442"}, {"sha": "286c2974823ee62a37f4eb87dffc4adc9115bec0", "filename": "gcc/testsuite/gcc.target/i386/rdpid.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frdpid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frdpid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frdpid.c?ref=b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mrdpid \" } */\n+/* { dg-options \"-O2 -mrdpid\" } */\n /* { dg-final { scan-assembler \"rdpid\\[ \\t]+(%|)eax\" } } */\n \n #include <x86intrin.h>"}, {"sha": "9a9af1bb48fd83881fb575ebad6c895f1f5f4721", "filename": "gcc/testsuite/gcc.target/i386/xgetsetbv.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxgetsetbv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bdd60b8792e2d3173ecfacd5c25aac894a94e5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxgetsetbv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxgetsetbv.c?ref=b9bdd60b8792e2d3173ecfacd5c25aac894a94e5", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mxsave\" } */\n+/* { dg-final { scan-assembler \"xgetbv\" } } */\n+/* { dg-final { scan-assembler \"xsetbv\" } } */\n+\n+#include <x86intrin.h>\n+\n+unsigned int\n+xgetsetbv (void)\n+{\n+ _xsetbv (0, 0);\n+  return _xgetbv (0);\n+}"}]}