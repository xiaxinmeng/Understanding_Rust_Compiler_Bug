{"sha": "6d721f6786362871895a36e4f26f09ded82d55ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ3MjFmNjc4NjM2Mjg3MTg5NWEzNmU0ZjI2ZjA5ZGVkODJkNTVlYw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-11-01T23:40:53Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-11-01T23:40:53Z"}, "message": "common.opt (R, [...]): New.\n\n\t* common.opt (R, T, Tbss, Tdata, Ttext, h, z): New.\n\t* defaults.h (DEFAULT_SWITCH_TAKES_ARG, SWITCH_TAKES_ARG): Remove.\n\t(DEFAULT_WORD_SWITCH_TAKES_ARG): Define to 0.\n\t* doc/tm.texi.in (SWITCH_TAKES_ARG): Remove.\n\t(WORD_SWITCH_TAKES_ARG): Don't refer to SWITCH_TAKES_ARG.\n\tDocument that options in .opt files do not need to be included.\n\t* doc/tm.texi: Regenerate.\n\t* gcc.c (LINK_COMMAND_SPEC): Don't include %{x}.\n\t* opts-common.c: Update comment on tm.h include.\n\t(decode_cmdline_option): Don't use SWITCH_TAKES_ARG.\n\t* system.h (SWITCH_TAKES_ARG): Poison.\n\t* config/alpha/alpha.h (SWITCH_TAKES_ARG): Remove.\n\t* config/darwin.h (WORD_SWITCH_TAKES_ARG): Remove options included\n\tin darwin.opt.\n\t(LINK_COMMAND_SPEC_A): Don't include %{x}.\n\t* config/fr30/fr30.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG):\n\tRemove.\n\t* config/freebsd-spec.h (FBSD_SWITCH_TAKES_ARG): Remove.\n\t* config/freebsd.h (SWITCH_TAKES_ARG): Remove.\n\t* config/frv/frv.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG):\n\tRemove.\n\t* config/i386/djgpp.h (LINK_COMMAND_SPEC): Don't include %{x}.\n\t* config/ia64/ia64.h (SWITCH_TAKES_ARG): Remove.\n\t* config/interix.h (WORD_SWITCH_TAKES_ARG): Don't handle -T\n\toptions.\n\t* config/lm32/lm32.h (SWITCH_TAKES_ARG): Remove.\n\t* config/m32r/m32r.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG):\n\tRemove.\n\t* config/microblaze/microblaze.h (SWITCH_TAKES_ARG): Remove.\n\t* config/mips/mips.h (SWITCH_TAKES_ARG): Remove.\n\t* config/mips/netbsd.h (SWITCH_TAKES_ARG): Remove.\n\t* config/mips/vxworks.h (SWITCH_TAKES_ARG): Remove.\n\t* config/netbsd-aout.h (SWITCH_TAKES_ARG): Remove.\n\t* config/netbsd-elf.h (SWITCH_TAKES_ARG): Remove.\n\t* config/openbsd.h (SWITCH_TAKES_ARG): Remove.\n\t* config/rs6000/sysv4.h (SWITCH_TAKES_ARG): Remove.\n\t* config/score/score.h (SWITCH_TAKES_ARG): Remove.\n\t* config/sol2.h (SWITCH_TAKES_ARG): Remove.\n\t* config/sparc/sp-elf.h (SWITCH_TAKES_ARG): Remove.\n\t* config/sparc/sp64-elf.h (SWITCH_TAKES_ARG): Remove.\n\t* config/sparc/sparc.h (ASM_SPEC): Don't include %{R}.\n\t* config/svr4.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG): Remove.\n\nFrom-SVN: r166155", "tree": {"sha": "be84a860792ba431691dc4ae4d157c559eb86a4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be84a860792ba431691dc4ae4d157c559eb86a4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d721f6786362871895a36e4f26f09ded82d55ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d721f6786362871895a36e4f26f09ded82d55ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d721f6786362871895a36e4f26f09ded82d55ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d721f6786362871895a36e4f26f09ded82d55ec/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2debdb4fcd1064967709bd839e4b751f480f7fbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2debdb4fcd1064967709bd839e4b751f480f7fbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2debdb4fcd1064967709bd839e4b751f480f7fbd"}], "stats": {"total": 370, "additions": 99, "deletions": 271}, "files": [{"sha": "0c2f666a46745ce2c79f29a45bfb5fe837f48e5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -1,3 +1,48 @@\n+2010-11-01  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* common.opt (R, T, Tbss, Tdata, Ttext, h, z): New.\n+\t* defaults.h (DEFAULT_SWITCH_TAKES_ARG, SWITCH_TAKES_ARG): Remove.\n+\t(DEFAULT_WORD_SWITCH_TAKES_ARG): Define to 0.\n+\t* doc/tm.texi.in (SWITCH_TAKES_ARG): Remove.\n+\t(WORD_SWITCH_TAKES_ARG): Don't refer to SWITCH_TAKES_ARG.\n+\tDocument that options in .opt files do not need to be included.\n+\t* doc/tm.texi: Regenerate.\n+\t* gcc.c (LINK_COMMAND_SPEC): Don't include %{x}.\n+\t* opts-common.c: Update comment on tm.h include.\n+\t(decode_cmdline_option): Don't use SWITCH_TAKES_ARG.\n+\t* system.h (SWITCH_TAKES_ARG): Poison.\n+\t* config/alpha/alpha.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/darwin.h (WORD_SWITCH_TAKES_ARG): Remove options included\n+\tin darwin.opt.\n+\t(LINK_COMMAND_SPEC_A): Don't include %{x}.\n+\t* config/fr30/fr30.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG):\n+\tRemove.\n+\t* config/freebsd-spec.h (FBSD_SWITCH_TAKES_ARG): Remove.\n+\t* config/freebsd.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/frv/frv.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG):\n+\tRemove.\n+\t* config/i386/djgpp.h (LINK_COMMAND_SPEC): Don't include %{x}.\n+\t* config/ia64/ia64.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/interix.h (WORD_SWITCH_TAKES_ARG): Don't handle -T\n+\toptions.\n+\t* config/lm32/lm32.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/m32r/m32r.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG):\n+\tRemove.\n+\t* config/microblaze/microblaze.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/mips/mips.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/mips/netbsd.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/mips/vxworks.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/netbsd-aout.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/netbsd-elf.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/openbsd.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/rs6000/sysv4.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/score/score.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/sol2.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/sparc/sp-elf.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/sparc/sp64-elf.h (SWITCH_TAKES_ARG): Remove.\n+\t* config/sparc/sparc.h (ASM_SPEC): Don't include %{R}.\n+\t* config/svr4.h (SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG): Remove.\n+\n 2010-11-01  Paul Koning  <ni1d@arrl.net>\n \n \t* config/pdp11/pdp11.md: Use iterators."}, {"sha": "cd8b0adfff1c7d9e0ec98edb658eef42caaf63ed", "filename": "gcc/common.opt", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -290,9 +290,24 @@ Ofast\n Common Optimization\n Optimize for speed disregarding exact standards compliance\n \n+R\n+Driver Joined Separate\n+\n S\n Driver\n \n+T\n+Driver Joined Separate\n+\n+Tbss\n+Driver Separate\n+\n+Tdata\n+Driver Separate\n+\n+Ttext\n+Driver Separate\n+\n W\n Common RejectNegative Warning Alias(Wextra)\n This switch is deprecated; use -Wextra instead\n@@ -1885,6 +1900,9 @@ gxcoff+\n Common JoinedOrMissing Negative(gcoff)\n Generate debug information in extended XCOFF format\n \n+h\n+Driver Joined Separate\n+\n iplugindir=\n Common Joined Var(plugindir_string) Init(0)\n -iplugindir=<dir>\tSet <dir> to be the default plugin directory\n@@ -2026,4 +2044,7 @@ pie\n Common RejectNegative Negative(shared)\n Create a position independent executable\n \n+z\n+Driver Joined Separate\n+\n ; This comment is to ensure we retain the blank line above."}, {"sha": "7681b4ba5b5d1fc34740aaa224ea68409da25fc5", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -96,9 +96,6 @@ along with GCC; see the file COPYING3.  If not see\n   while (0)\n #endif\n \n-#define SWITCH_TAKES_ARG(CHAR)\t\t\t\t\t\t\\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR) || (CHAR) == 'G')\n-\n #define WORD_SWITCH_TAKES_ARG(STR)\t\t\\\n  (!strcmp (STR, \"rpath\") || DEFAULT_WORD_SWITCH_TAKES_ARG(STR))\n "}, {"sha": "cd938cf6fbf89c13747211a7c27dd3a054e36ecc", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -226,7 +226,6 @@ extern GTY(()) int darwin_ms_struct;\n    !strcmp (STR, \"sub_library\") ? 1 :           \\\n    !strcmp (STR, \"sub_umbrella\") ? 1 :          \\\n    !strcmp (STR, \"Zumbrella\") ? 1 :             \\\n-   !strcmp (STR, \"undefined\") ? 1 :             \\\n    !strcmp (STR, \"Zunexported_symbols_list\") ? 1 : \\\n    !strcmp (STR, \"Zweak_reference_mismatches\") ? 1 : \\\n    !strcmp (STR, \"pagezero_size\") ? 1 :         \\\n@@ -236,7 +235,6 @@ extern GTY(()) int darwin_ms_struct;\n    !strcmp (STR, \"sectobjectsymbols\") ? 2 :     \\\n    !strcmp (STR, \"segcreate\") ? 3 :             \\\n    !strcmp (STR, \"dylinker_install_name\") ? 1 : \\\n-   !strcmp (STR, \"iframework\") ? 1 : \\\n    0)\n \n #define SUBTARGET_C_COMMON_OVERRIDE_OPTIONS do {                        \\\n@@ -271,7 +269,7 @@ extern GTY(()) int darwin_ms_struct;\n #define LINK_COMMAND_SPEC_A \\\n    \"%{!fdump=*:%{!fsyntax-only:%{!c:%{!M:%{!MM:%{!E:%{!S:\\\n     %(linker) %l %X %{d} %{s} %{t} %{Z} %{u*} \\\n-    %{A} %{e*} %{m} %{r} %{x} \\\n+    %{A} %{e*} %{m} %{r} \\\n     %{o*}%{!o:-o a.out} \\\n     %{!A:%{!nostdlib:%{!nostartfiles:%S}}} \\\n     %{L*} %(link_libgcc) %o %{fprofile-arcs|fprofile-generate*|coverage:-lgcov} \\"}, {"sha": "ac42145f314472abfe5dd3fc5f86329df0e22108", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -21,15 +21,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-/*}}}*/ \f\n-/*{{{  Driver configuration.  */ \n-\n-/* Defined in svr4.h.  */\n-#undef SWITCH_TAKES_ARG\n-\n-/* Defined in svr4.h.  */\n-#undef WORD_SWITCH_TAKES_ARG\n-\n /*}}}*/ \f\n /*{{{  Run-time target specifications.  */ \n "}, {"sha": "7e08e78700786f49c40d2389f5c87c1ee10a99a1", "filename": "gcc/config/freebsd-spec.h", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Ffreebsd-spec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Ffreebsd-spec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffreebsd-spec.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -1,5 +1,6 @@\n /* Base configuration file for all FreeBSD targets.\n-   Copyright (C) 1999, 2000, 2001, 2004, 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2004, 2005, 2007, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -33,17 +34,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* In case we need to know.  */\n #define USING_CONFIG_FREEBSD_SPEC 1\n \n-/* This defines which switch letters take arguments.  On FreeBSD, most of\n-   the normal cases (defined in gcc.c) apply, and we also have -h* and\n-   -z* options (for the linker) (coming from SVR4).\n-   We also have -R (alias --rpath), no -z, --soname (-h), --assert etc.  */\n-\n-#define FBSD_SWITCH_TAKES_ARG(CHAR)\t\t\t\t\t\\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR)\t\t\t\t\t\\\n-    || (CHAR) == 'h'\t\t\t\t\t\t\t\\\n-    || (CHAR) == 'z' /* ignored by ld */\t\t\t\t\\\n-    || (CHAR) == 'R')\n-\n /* This defines which multi-letter switches take arguments.  */\n \n #define FBSD_WORD_SWITCH_TAKES_ARG(STR)\t\t\t\t\t\\"}, {"sha": "83811891cf32dcee314564d26a5b7c130b4fb1da", "filename": "gcc/config/freebsd.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffreebsd.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -30,13 +30,8 @@ along with GCC; see the file COPYING3.  If not see\n /* In case we need to know.  */\n #define USING_CONFIG_FREEBSD 1\n \n-/* This defines which switch letters take arguments.  On FreeBSD, most of\n-   the normal cases (defined in gcc.c) apply, and we also have -h* and\n-   -z* options (for the linker) (coming from SVR4).\n-   We also have -R (alias --rpath), no -z, --soname (-h), --assert etc.  */\n-\n-#undef  SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR) (FBSD_SWITCH_TAKES_ARG(CHAR))\n+/* This defines which switch words take arguments.\n+   We have --assert etc.  */\n \n #undef  WORD_SWITCH_TAKES_ARG\n #define WORD_SWITCH_TAKES_ARG(STR) (FBSD_WORD_SWITCH_TAKES_ARG(STR))"}, {"sha": "8a2907d682c2cc9dcec1928ecf71efab6cc658f6", "filename": "gcc/config/frv/frv.h", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Ffrv%2Ffrv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Ffrv%2Ffrv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -35,33 +35,6 @@\n \f\n /* Driver configuration.  */\n \n-/* A C expression which determines whether the option `-CHAR' takes arguments.\n-   The value should be the number of arguments that option takes-zero, for many\n-   options.\n-\n-   By default, this macro is defined to handle the standard options properly.\n-   You need not define it unless you wish to add additional options which take\n-   arguments.\n-\n-   Defined in svr4.h.  */\n-#undef  SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR)                                          \\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR) || (CHAR) == 'G')\n-\n-/* A C expression which determines whether the option `-NAME' takes arguments.\n-   The value should be the number of arguments that option takes-zero, for many\n-   options.  This macro rather than `SWITCH_TAKES_ARG' is used for\n-   multi-character option names.\n-\n-   By default, this macro is defined as `DEFAULT_WORD_SWITCH_TAKES_ARG', which\n-   handles the standard options properly.  You need not define\n-   `WORD_SWITCH_TAKES_ARG' unless you wish to add additional options which take\n-   arguments.  Any redefinition should call `DEFAULT_WORD_SWITCH_TAKES_ARG' and\n-   then check for additional options.\n-\n-   Defined in svr4.h.  */\n-#undef WORD_SWITCH_TAKES_ARG\n-\n /* -fpic and -fPIC used to imply the -mlibrary-pic multilib, but with\n     FDPIC which multilib to use depends on whether FDPIC is in use or\n     not.  The trick we use is to introduce -multilib-library-pic as a"}, {"sha": "2a8cef6842b473c0ffa2541a063604f318470bec", "filename": "gcc/config/i386/djgpp.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -102,7 +102,7 @@ along with GCC; see the file COPYING3.  If not see\n #define LINK_COMMAND_SPEC \\\n \"%{!fsyntax-only: \\\n %{!c:%{!M:%{!MM:%{!E:%{!S:%(linker) %l %X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} \\\n-\\t%{r} %{s} %{t} %{u*} %{x} %{z} %{Z}\\\n+\\t%{r} %{s} %{t} %{u*} %{z} %{Z}\\\n \\t%{!A:%{!nostdlib:%{!nostartfiles:%S}}}\\\n \\t%{static:} %{L*} %D %o\\\n \\t%{!nostdlib:%{!nodefaultlibs:%G %L %G}}\\"}, {"sha": "fdac455c6dfdb07e4e92f164cc639cca9005e6cc", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -53,9 +53,6 @@ do {\t\t\t\t\t\t\\\n \n #define ASM_EXTRA_SPEC \"\"\n \n-#define SWITCH_TAKES_ARG(CHAR)\t\t\t\t\t\t\\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR) || (CHAR) == 'G')\n-\n /* Variables which are this size or smaller are put in the sdata/sbss\n    sections.  */\n extern unsigned int ia64_section_threshold;"}, {"sha": "67698a92a51066e24031690a020affcce1465e97", "filename": "gcc/config/interix.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Finterix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Finterix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Finterix.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -1,6 +1,6 @@\n /* Operating system specific defines to be used when targeting GCC for\n    Interix\n-   Copyright (C) 1994, 1995, 1999, 2002, 2004, 2007\n+   Copyright (C) 1994, 1995, 1999, 2002, 2004, 2007, 2010\n    Free Software Foundation, Inc.\n    Donn Terry, Softway Systems, Inc. (donn@softway.com)\n    Modified from code\n@@ -59,11 +59,9 @@ for windows/multi thread */\n   \"%{!shared:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}} %{shared:crti%O%s}\"\n \n #undef WORD_SWITCH_TAKES_ARG\n-#define WORD_SWITCH_TAKES_ARG(STR)\t\t\t\t\t\\\n- ((DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\t\t\t\\\n- || !strcmp(STR, \"rpath\"))\t\t\t\t\t\t\\\n-  && strcmp (STR, \"Tdata\") && strcmp (STR, \"Ttext\")\t\t\t\\\n-  && strcmp (STR, \"Tbss\"))\n+#define WORD_SWITCH_TAKES_ARG(STR)\t\t\\\n+ (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\\\n+  || !strcmp(STR, \"rpath\"))\n \n \n #define STDC_0_IN_SYSTEM_HEADERS 1"}, {"sha": "c87c3bb705a22b381f43c53fb7569cd2172f4026", "filename": "gcc/config/lm32/lm32.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Flm32%2Flm32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Flm32%2Flm32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Flm32.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -68,12 +68,6 @@\n #undef  LIB_SPEC\n #define LIB_SPEC \"%{!T*:-T sim.ld}\"\n \n-/* Add -G xx support.  */\n-\n-#undef  SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR) \\\n-(DEFAULT_SWITCH_TAKES_ARG (CHAR) || (CHAR) == 'G')\n-\n #undef  CC1_SPEC\n #define CC1_SPEC \"%{G*}\"\n "}, {"sha": "785d85b5ea58617385726aef683202cc17b36225", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -22,8 +22,6 @@\n - longlong.h?\n */\n \n-#undef SWITCH_TAKES_ARG\n-#undef WORD_SWITCH_TAKES_ARG\n #undef HANDLE_SYSV_PRAGMA\n #undef SIZE_TYPE\n #undef PTRDIFF_TYPE\n@@ -94,12 +92,6 @@\n #define TARGET_VERSION fprintf (stderr, \" (m32r)\")\n #endif\n \n-/* Switch  Recognition by gcc.c.  Add -G xx support.  */\n-\n-#undef  SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR) \\\n-(DEFAULT_SWITCH_TAKES_ARG (CHAR) || (CHAR) == 'G')\n-\n /* Names to predefine in the preprocessor for this target machine.  */\n /* __M32R__ is defined by the existing compiler so we use that.  */\n #define TARGET_CPU_CPP_BUILTINS()\t\t\\"}, {"sha": "2ce22f1e030322872db073ffbfc935d9df2a249b", "filename": "gcc/config/microblaze/microblaze.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -57,10 +57,6 @@ extern enum pipeline_type microblaze_pipe;\n /* Macros to decide whether certain features are available or not,\n    depending on the instruction set architecture level.  */\n \n-#undef SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR)\t\t\t\t\t\t\\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR) || (CHAR) == 'G')\n-\n #define DRIVER_SELF_SPECS    \t\t\t\t\\\n \t\"%{mxl-soft-mul:%<mno-xl-soft-mul}\", \t\t\\\n \t\"%{mno-xl-barrel-shift:%<mxl-barrel-shift}\", \t\\"}, {"sha": "a3675039462bcb8f365e500f70a104061d6a7b20", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -1075,12 +1075,6 @@ enum mips_code_readable_setting {\n /* The CACHE instruction is available.  */\n #define ISA_HAS_CACHE (TARGET_CACHE_BUILTIN && !TARGET_MIPS16)\n \f\n-/* Add -G xx support.  */\n-\n-#undef  SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR)\t\t\t\t\t\t\\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR) || (CHAR) == 'G')\n-\n #define CONDITIONAL_REGISTER_USAGE mips_conditional_register_usage ()\n \f\n /* Tell collect what flags to pass to nm.  */"}, {"sha": "ff32858018137ec48840ae94fa7c8d6e3d53c72e", "filename": "gcc/config/mips/netbsd.h", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fnetbsd.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for MIPS NetBSD systems.\n    Copyright (C) 1993, 1995, 1996, 1997, 1999, 2000, 2001, 2002, 2003, 2004,\n-   2007 Free Software Foundation, Inc.\n+   2007, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -170,16 +170,6 @@ along with GCC; see the file COPYING3.  If not see\n #define MIPS_DEFAULT_GVALUE 0\n \n \n-/* This defines which switch letters take arguments.  -G is a MIPS\n-   special.  */\n-\n-#undef SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR)\t\t\t\t\t\t\\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR)\t\t\t\t\t\\\n-   || (CHAR) == 'R'\t\t\t\t\t\t\t\\\n-   || (CHAR) == 'G')\n-\n-\n #undef ASM_FINAL_SPEC\n #undef SET_ASM_OP\n "}, {"sha": "3c2d94fe10490c2623b0e026f43c3c6aff4279f8", "filename": "gcc/config/mips/vxworks.h", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fmips%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fmips%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fvxworks.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 1999, 2003, 2004, 2007, 2008 Free Software Foundation, Inc.\n+/* Copyright (C) 1999, 2003, 2004, 2007, 2008, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -19,15 +20,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef  TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (MIPS, VxWorks syntax)\");\n \n-/* Combination of mips.h and svr4.h.  */\n-#undef  SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR)          \\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR)      \\\n-   || (CHAR) == 'G'                     \\\n-   || (CHAR) == 'h'                     \\\n-   || (CHAR) == 'x'                     \\\n-   || (CHAR) == 'z')\n-\n #undef  ASM_SPEC\n #define ASM_SPEC \"\\\n %{!G:-G 0} %{G*} %(endian_spec) %{mips1} %{mips2} %{mips3} %{mips4} \\"}, {"sha": "bf2bb9e5ddb9912244fd0bac851a7694c9996e52", "filename": "gcc/config/netbsd-aout.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fnetbsd-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fnetbsd-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetbsd-aout.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -1,5 +1,5 @@\n /* Common configuration file for NetBSD a.out targets.\n-   Copyright (C) 2002, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2007, 2010 Free Software Foundation, Inc.\n    Contributed by Wasabi Systems, Inc.\n \n This file is part of GCC.\n@@ -26,13 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n     }\t\t\t\t\t\t\\\n   while (0)\n \n-/* This defines which switch letters take arguments.  */\n-\n-#undef SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR)\t\t\\\n-  (DEFAULT_SWITCH_TAKES_ARG(CHAR)\t\\\n-   || (CHAR) == 'R')\n-\n \n /* Provide an ASM_SPEC appropriate for NetBSD.  Currently we only deal\n    with the options for generating PIC code.  */"}, {"sha": "f98cbe87bc90aad3b7fb465b8eea63fae57b6b48", "filename": "gcc/config/netbsd-elf.h", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetbsd-elf.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -1,5 +1,5 @@\n /* Common configuration file for NetBSD ELF targets.\n-   Copyright (C) 2002, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2007, 2010 Free Software Foundation, Inc.\n    Contributed by Wasabi Systems, Inc.\n \n This file is part of GCC.\n@@ -26,18 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n     }\t\t\t\t\t\t\\\n   while (0)\n \n-/* This defines which switch letters take arguments.  On NetBSD, most\n-   of the normal cases (defined by gcc.c) apply, and we also have -h*\n-   and -z* options (for the linker) (coming from SVR4).  */\n-\n-#undef SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR)\t\t\t\\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR)\t\t\\\n-   || (CHAR) == 'h'\t\t\t\t\\\n-   || (CHAR) == 'z'\t\t\t\t\\\n-   || (CHAR) == 'R')\n-\n-\n /* Provide a STARTFILE_SPEC appropriate for NetBSD ELF.  Here we\n    provide support for the special GCC option -static.  On ELF\n    targets, we also add the crtbegin.o file, which provides part"}, {"sha": "d15dff15f98f3b7977275ac78ba9e3b5f61ea7b7", "filename": "gcc/config/openbsd.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -1,5 +1,6 @@\n /* Base configuration file for all OpenBSD targets.\n-   Copyright (C) 1999, 2000, 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2004, 2005, 2007, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -118,13 +119,6 @@ while (0)\n \n #ifndef OBSD_HAS_CORRECT_SPECS\n \n-#ifndef OBSD_NO_DYNAMIC_LIBRARIES\n-#undef SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR) \\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR) \\\n-   || (CHAR) == 'R')\n-#endif\n-\n #undef CPP_SPEC\n #define CPP_SPEC OBSD_CPP_SPEC\n "}, {"sha": "04cc70e3adffbc0a91e0c29bfdb874ad797d525a", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -502,13 +502,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t\t reg_names[1]);\t\t\t\t\t\t\\\n } while (0)\n \n-/* Switch  Recognition by gcc.c.  Add -G xx support.  */\n-\n-/* Override svr4.h definition.  */\n-#undef\tSWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR)\t\t\t\t\t\t\\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR) || (CHAR) == 'G')\n-\n extern int fixuplabelno;\n \n /* Handle constructors specially for -mrelocatable.  */"}, {"sha": "1309a40e023f5ed4ed5ade421f921c9f083cf294", "filename": "gcc/config/score/score.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fscore%2Fscore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fscore%2Fscore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -20,11 +20,6 @@\n \n #include \"score-conv.h\"\n \n-/* Controlling the Compilation Driver.  */\n-#undef SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR) \\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR) || (CHAR) == 'G')\n-\n #undef CPP_SPEC\n #define CPP_SPEC                 \"%{mscore3:-D__score3__} %{G*}\"\n "}, {"sha": "72efdbd339ef3e1d0f027a18560e8284d3867be6", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -192,15 +192,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef SUPPORTS_INIT_PRIORITY\n #define SUPPORTS_INIT_PRIORITY 0\n \n-/* This defines which switch letters take arguments.\n-   It is as in svr4.h but with -R added.  */\n-#undef SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR) \\\n-  (DEFAULT_SWITCH_TAKES_ARG(CHAR) \\\n-   || (CHAR) == 'R' \\\n-   || (CHAR) == 'h' \\\n-   || (CHAR) == 'z')\n-\n #define STDC_0_IN_SYSTEM_HEADERS 1\n \f\n /*"}, {"sha": "8f0e892971a25fe0e23935ec87a693cac586946a", "filename": "gcc/config/sparc/sp-elf.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fsparc%2Fsp-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fsparc%2Fsp-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp-elf.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GCC,\n    for SPARC running in an embedded environment using the ELF file format.\n-   Copyright (C) 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -45,15 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n /* Don't set the target flags, this is done by the linker script */\n #undef LIB_SPEC\n #define LIB_SPEC \"\"\n-\n-/* This defines which switch letters take arguments.\n-   It is as in svr4.h but with -R added.  */\n-#undef SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR) \\\n-  (DEFAULT_SWITCH_TAKES_ARG(CHAR) \\\n-   || (CHAR) == 'R' \\\n-   || (CHAR) == 'h' \\\n-   || (CHAR) == 'z')\n \f\n #undef  LOCAL_LABEL_PREFIX\n #define LOCAL_LABEL_PREFIX  \".\""}, {"sha": "e1820e076414c3e5e5d06e36578a63ea2d03c581", "filename": "gcc/config/sparc/sp64-elf.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GCC, for SPARC64, ELF.\n-   Copyright (C) 1994, 1995, 1996, 1997, 1998, 2000, 2004, 2005, 2007\n+   Copyright (C) 1994, 1995, 1996, 1997, 1998, 2000, 2004, 2005, 2007, 2010\n    Free Software Foundation, Inc.\n    Contributed by Doug Evans, dje@cygnus.com.\n \n@@ -71,15 +71,6 @@ crtbegin.o%s \\\n /* Use the default (for now).  */\n #undef LIB_SPEC\n \n-/* This defines which switch letters take arguments.\n-   It is as in svr4.h but with -R added.  */\n-#undef SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR) \\\n-  (DEFAULT_SWITCH_TAKES_ARG(CHAR) \\\n-   || (CHAR) == 'R' \\\n-   || (CHAR) == 'h' \\\n-   || (CHAR) == 'z')\n-\n #undef BYTES_BIG_ENDIAN\n #define BYTES_BIG_ENDIAN (! TARGET_LITTLE_ENDIAN)\n "}, {"sha": "b7f0bd36226ceee5c9517f0083338d6f32b0edca", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -450,7 +450,7 @@ extern enum cmodel sparc_cmodel;\n /* Special flags to the Sun-4 assembler when using pipe for input.  */\n \n #define ASM_SPEC \"\\\n-%{R} %{!pg:%{!p:%{fpic|fPIC|fpie|fPIE:-k}}} %{keep-local-as-symbols:-L} \\\n+%{!pg:%{!p:%{fpic|fPIC|fpie|fPIE:-k}}} %{keep-local-as-symbols:-L} \\\n %(asm_cpu) %(asm_relax)\"\n \n #define AS_NEEDS_DASH_FOR_PIPED_INPUT"}, {"sha": "f45706b4f761be3be478362c6f1e0007250194d1", "filename": "gcc/config/svr4.h", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fsvr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fconfig%2Fsvr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr4.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -1,7 +1,7 @@\n /* Operating system specific defines to be used when targeting GCC for some\n    generic System V Release 4 system.\n    Copyright (C) 1991, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2007, 2008, 2009 Free Software Foundation, Inc.\n+   2000, 2001, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com).\n \n This file is part of GCC.\n@@ -41,26 +41,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n /* Cpp, assembler, linker, library, and startfile spec's.  */\n \n-/* This defines which switch letters take arguments.  On svr4, most of\n-   the normal cases (defined in gcc.c) apply, and we also have -h* and\n-   -z* options (for the linker).  Note however that there is no such\n-   thing as a -T option for svr4.  */\n-\n-#undef  SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR)\t\t\\\n-  (DEFAULT_SWITCH_TAKES_ARG (CHAR)\t\\\n-   || (CHAR) == 'h'\t\t\t\\\n-   || (CHAR) == 'x'\t\t\t\\\n-   || (CHAR) == 'z')\n-\n-/* This defines which multi-letter switches take arguments.  On svr4,\n-   there are no such switches except those implemented by GCC itself.  */\n-\n-#define WORD_SWITCH_TAKES_ARG(STR)\t\t\t\\\n- (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\t\\\n-  && strcmp (STR, \"Tdata\") && strcmp (STR, \"Ttext\")\t\\\n-  && strcmp (STR, \"Tbss\"))\n-\n /* Provide an ASM_SPEC appropriate for svr4.\n    If we're not using GAS, we try to support as\n    many of the specialized svr4 assembler options as seems reasonable,"}, {"sha": "b03abfb022bda0fc501b6922db290b7f41ef7a29", "filename": "gcc/defaults.h", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -32,33 +32,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define GET_ENVIRONMENT(VALUE, NAME) do { (VALUE) = getenv (NAME); } while (0)\n #endif\n \n-/* This defines which switch letters take arguments.  */\n-\n-#define DEFAULT_SWITCH_TAKES_ARG(CHAR) \\\n-  ((CHAR) == 'D' || (CHAR) == 'U' || (CHAR) == 'o' \\\n-   || (CHAR) == 'e' || (CHAR) == 'T' || (CHAR) == 'u' \\\n-   || (CHAR) == 'I' || (CHAR) == 'J' || (CHAR) == 'm' \\\n-   || (CHAR) == 'x' || (CHAR) == 'L' || (CHAR) == 'A' \\\n-   || (CHAR) == 'B' || (CHAR) == 'd')\n-\n /* This defines which multi-letter switches take arguments.  */\n \n-#define DEFAULT_WORD_SWITCH_TAKES_ARG(STR)\t\t\\\n- (!strcmp (STR, \"Tdata\") || !strcmp (STR, \"Ttext\")\t\\\n-  || !strcmp (STR, \"Tbss\") || !strcmp (STR, \"include\")\t\\\n-  || !strcmp (STR, \"imacros\") || !strcmp (STR, \"aux-info\") \\\n-  || !strcmp (STR, \"idirafter\") || !strcmp (STR, \"iprefix\") \\\n-  || !strcmp (STR, \"iwithprefix\") || !strcmp (STR, \"iwithprefixbefore\") \\\n-  || !strcmp (STR, \"iquote\") || !strcmp (STR, \"isystem\") \\\n-  || !strcmp (STR, \"isysroot\") || !strcmp (STR, \"imultilib\") \\\n-  || !strcmp (STR, \"-param\") || !strcmp (STR, \"specs\") \\\n-  || !strcmp (STR, \"MF\") || !strcmp (STR, \"MT\") || !strcmp (STR, \"MQ\") \\\n-  || !strcmp (STR, \"fintrinsic-modules-path\") \\\n-  || !strcmp (STR, \"dumpbase\") || !strcmp (STR, \"dumpdir\"))\n-\n-#ifndef SWITCH_TAKES_ARG\n-#define SWITCH_TAKES_ARG(CHAR) DEFAULT_SWITCH_TAKES_ARG (CHAR)\n-#endif\n+#define DEFAULT_WORD_SWITCH_TAKES_ARG(STR)\t\t0\n \n #ifndef WORD_SWITCH_TAKES_ARG\n #define WORD_SWITCH_TAKES_ARG(STR) DEFAULT_WORD_SWITCH_TAKES_ARG (STR)"}, {"sha": "9126d437aceea28984c6d9b41b7a447ee6dc60a9", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -99,24 +99,12 @@ from being defined in the @file{.h} file to being part of the\n @c prevent bad page break with this line\n You can control the compilation driver.\n \n-@defmac SWITCH_TAKES_ARG (@var{char})\n-A C expression which determines whether the option @option{-@var{char}}\n-takes arguments.  The value should be the number of arguments that\n-option takes--zero, for many options.\n-\n-By default, this macro is defined as\n-@code{DEFAULT_SWITCH_TAKES_ARG}, which handles the standard options\n-properly.  You need not define @code{SWITCH_TAKES_ARG} unless you\n-wish to add additional options which take arguments.  Any redefinition\n-should call @code{DEFAULT_SWITCH_TAKES_ARG} and then check for\n-additional options.\n-@end defmac\n-\n @defmac WORD_SWITCH_TAKES_ARG (@var{name})\n A C expression which determines whether the option @option{-@var{name}}\n takes arguments.  The value should be the number of arguments that\n-option takes--zero, for many options.  This macro rather than\n-@code{SWITCH_TAKES_ARG} is used for multi-character option names.\n+option takes--zero, for many options.\n+This macro does not need to handle options defined in @file{.opt}\n+files, only those that are handled purely through specs.\n \n By default, this macro is defined as\n @code{DEFAULT_WORD_SWITCH_TAKES_ARG}, which handles the standard options"}, {"sha": "2c36a7659068fc88bb1c882fc8f9de6a9df08e9a", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -99,24 +99,12 @@ from being defined in the @file{.h} file to being part of the\n @c prevent bad page break with this line\n You can control the compilation driver.\n \n-@defmac SWITCH_TAKES_ARG (@var{char})\n-A C expression which determines whether the option @option{-@var{char}}\n-takes arguments.  The value should be the number of arguments that\n-option takes--zero, for many options.\n-\n-By default, this macro is defined as\n-@code{DEFAULT_SWITCH_TAKES_ARG}, which handles the standard options\n-properly.  You need not define @code{SWITCH_TAKES_ARG} unless you\n-wish to add additional options which take arguments.  Any redefinition\n-should call @code{DEFAULT_SWITCH_TAKES_ARG} and then check for\n-additional options.\n-@end defmac\n-\n @defmac WORD_SWITCH_TAKES_ARG (@var{name})\n A C expression which determines whether the option @option{-@var{name}}\n takes arguments.  The value should be the number of arguments that\n-option takes--zero, for many options.  This macro rather than\n-@code{SWITCH_TAKES_ARG} is used for multi-character option names.\n+option takes--zero, for many options.\n+This macro does not need to handle options defined in @file{.opt}\n+files, only those that are handled purely through specs.\n \n By default, this macro is defined as\n @code{DEFAULT_WORD_SWITCH_TAKES_ARG}, which handles the standard options"}, {"sha": "c016a5c3d22ec64b62c7d54db03e6fc4546dd8d2", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -665,7 +665,7 @@ proper position among the other output files.  */\n     %{flto:%<fcompare-debug*} %{fwhopr*:%<fcompare-debug*} \\\n     %{flto} %{fwhopr*} %l \" LINK_PIE_SPEC \\\n    \"%X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} %{r}\\\n-    %{s} %{t} %{u*} %{x} %{z} %{Z} %{!A:%{!nostdlib:%{!nostartfiles:%S}}}\\\n+    %{s} %{t} %{u*} %{z} %{Z} %{!A:%{!nostdlib:%{!nostartfiles:%S}}}\\\n     %{static:} %{L*} %(mfwrap) %(link_libgcc) %o\\\n     %{fopenmp|ftree-parallelize-loops=*:%:include(libgomp.spec)%(link_gomp)}\\\n     %(mflib) \" STACK_SPLIT_SPEC \"\\"}, {"sha": "ab4b1b26f8fd3a45ee48678a1a37cd4a60265bd9", "filename": "gcc/opts-common.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -24,7 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts.h\"\n #include \"flags.h\"\n #include \"diagnostic.h\"\n-#include \"tm.h\" /* For SWITCH_TAKES_ARG, WORD_SWITCH_TAKES_ARG and\n+#include \"tm.h\" /* For WORD_SWITCH_TAKES_ARG and\n \t\t   TARGET_OPTION_TRANSLATE_TABLE.  */\n \n static void prune_options (struct cl_decoded_option **, unsigned int *);\n@@ -507,13 +507,10 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n     {\n       /* Skip the correct number of arguments for options handled\n \t through specs.  */\n-      const char *popt = argv[0] + 1;\n-      int c = *popt;\n+      const char *popt ATTRIBUTE_UNUSED = argv[0] + 1;\n \n       gcc_assert (result == 1);\n-      if (SWITCH_TAKES_ARG (c) > (popt[1] != 0))\n-\tresult += SWITCH_TAKES_ARG (c) - (popt[1] != 0);\n-      else if (WORD_SWITCH_TAKES_ARG (popt))\n+      if (WORD_SWITCH_TAKES_ARG (popt))\n \tresult += WORD_SWITCH_TAKES_ARG (popt);\n       if (result > 1)\n \tfor (i = 1; i < result; i++)"}, {"sha": "65b523604b9190ba65a89aaf3ba47e862b2cb786", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d721f6786362871895a36e4f26f09ded82d55ec/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=6d721f6786362871895a36e4f26f09ded82d55ec", "patch": "@@ -776,7 +776,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tSTACK_CHECK_PROBE_INTERVAL STACK_CHECK_PROBE_LOAD\t\t   \\\n \tORDER_REGS_FOR_LOCAL_ALLOC FUNCTION_OUTGOING_VALUE\t\t   \\\n \tASM_DECLARE_CONSTANT_NAME MODIFY_TARGET_NAME SWITCHES_NEED_SPACES  \\\n-\tSWITCH_CURTAILS_COMPILATION\n+\tSWITCH_CURTAILS_COMPILATION SWITCH_TAKES_ARG\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}