{"sha": "8221efae233e2d5992a79600071dd0a52f1b3c74", "node_id": "C_kwDOANBUbNoAKDgyMjFlZmFlMjMzZTJkNTk5MmE3OTYwMDA3MWRkMGE1MmYxYjNjNzQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-12-28T08:11:40Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2023-01-11T12:06:28Z"}, "message": "switch expansion: limit JT growth param values\n\nCurrently, one can request a huge jump table creation which\nleads to a non-sensual huge output. Moreover, use auto_vec rather\nthan a stack-allocated array.\n\n\tPR middle-end/107976\n\ngcc/ChangeLog:\n\n\t* params.opt: Limit JT params.\n\t* stmt.cc (emit_case_dispatch_table): Use auto_vec.", "tree": {"sha": "7632985ef19c9920b01087b347956e9c81d896f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7632985ef19c9920b01087b347956e9c81d896f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8221efae233e2d5992a79600071dd0a52f1b3c74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8221efae233e2d5992a79600071dd0a52f1b3c74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8221efae233e2d5992a79600071dd0a52f1b3c74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8221efae233e2d5992a79600071dd0a52f1b3c74/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c9f20fcfdc2d8453df88ceb7e693debfcd678c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c9f20fcfdc2d8453df88ceb7e693debfcd678c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c9f20fcfdc2d8453df88ceb7e693debfcd678c0"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "8a128c321c9d07976471734e074483b4fe4f2a7a", "filename": "gcc/params.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8221efae233e2d5992a79600071dd0a52f1b3c74/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8221efae233e2d5992a79600071dd0a52f1b3c74/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=8221efae233e2d5992a79600071dd0a52f1b3c74", "patch": "@@ -323,11 +323,11 @@ Common Joined UInteger Var(param_iv_max_considered_uses) Init(250) Param Optimiz\n Bound on number of iv uses in loop optimized in iv optimizations.\n \n -param=jump-table-max-growth-ratio-for-size=\n-Common Joined UInteger Var(param_jump_table_max_growth_ratio_for_size) Init(300) Param Optimization\n+Common Joined UInteger Var(param_jump_table_max_growth_ratio_for_size) Init(300) IntegerRange(0, 10000) Param Optimization\n The maximum code size growth ratio when expanding into a jump table (in percent).  The parameter is used when optimizing for size.\n \n -param=jump-table-max-growth-ratio-for-speed=\n-Common Joined UInteger Var(param_jump_table_max_growth_ratio_for_speed) Init(800) Param Optimization\n+Common Joined UInteger Var(param_jump_table_max_growth_ratio_for_speed) Init(800) IntegerRange(0, 10000) Param Optimization\n The maximum code size growth ratio when expanding into a jump table (in percent).  The parameter is used when optimizing for speed.\n \n -param=l1-cache-line-size="}, {"sha": "b239c02018a2df44e69ed99b41bb8174e0179b86", "filename": "gcc/stmt.cc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8221efae233e2d5992a79600071dd0a52f1b3c74/gcc%2Fstmt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8221efae233e2d5992a79600071dd0a52f1b3c74/gcc%2Fstmt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.cc?ref=8221efae233e2d5992a79600071dd0a52f1b3c74", "patch": "@@ -746,7 +746,7 @@ emit_case_dispatch_table (tree index_expr, tree index_type,\n \t\t\t  tree range, basic_block stmt_bb)\n {\n   int i, ncases;\n-  rtx *labelvec;\n+  auto_vec<rtx> labelvec;\n   rtx_insn *fallback_label = label_rtx (case_list[0].m_code_label);\n   rtx_code_label *table_label = gen_label_rtx ();\n   bool has_gaps = false;\n@@ -779,8 +779,7 @@ emit_case_dispatch_table (tree index_expr, tree index_type,\n   /* Get table of labels to jump to, in order of case index.  */\n \n   ncases = tree_to_shwi (range) + 1;\n-  labelvec = XALLOCAVEC (rtx, ncases);\n-  memset (labelvec, 0, ncases * sizeof (rtx));\n+  labelvec.safe_grow_cleared (ncases);\n \n   for (unsigned j = 0; j < case_list.length (); j++)\n     {\n@@ -860,11 +859,11 @@ emit_case_dispatch_table (tree index_expr, tree index_type,\n     emit_jump_table_data (gen_rtx_ADDR_DIFF_VEC (CASE_VECTOR_MODE,\n \t\t\t\t\t\t gen_rtx_LABEL_REF (Pmode,\n \t\t\t\t\t\t\t\t    table_label),\n-\t\t\t\t\t\t gen_rtvec_v (ncases, labelvec),\n+\t\t\t\t\t\t gen_rtvec_v (ncases, labelvec.address ()),\n \t\t\t\t\t\t const0_rtx, const0_rtx));\n   else\n     emit_jump_table_data (gen_rtx_ADDR_VEC (CASE_VECTOR_MODE,\n-\t\t\t\t\t    gen_rtvec_v (ncases, labelvec)));\n+\t\t\t\t\t    gen_rtvec_v (ncases, labelvec.address ())));\n \n   /* Record no drop-through after the table.  */\n   emit_barrier ();"}]}