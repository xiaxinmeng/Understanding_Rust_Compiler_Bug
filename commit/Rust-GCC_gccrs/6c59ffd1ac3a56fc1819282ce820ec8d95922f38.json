{"sha": "6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM1OWZmZDFhYzNhNTZmYzE4MTkyODJjZTgyMGVjOGQ5NTkyMmYzOA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@codesourcery.com", "date": "2013-02-11T23:30:10Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2013-02-11T23:30:10Z"}, "message": "re PR libitm/55693 (libitm.c++/eh-1.C execution test fails on darwin from r193271)\n\n/libgcc\n2013-02-11  Iain Sandoe  <iain@codesourcery.com>\n\t    Jack Howarth  <howarth@bromo.med.uc.edu>\n\t    Patrick Marlier  <patrick.marlier@gmail.com>\n\n\tPR libitm/55693\n\t* config/darwin-crt-tm.c: Remove dummy functions hack.\n\n/gcc\n2013-02-11  Iain Sandoe  <iain@codesourcery.com>\n\t    Jack Howarth  <howarth@bromo.med.uc.edu>\n\t    Patrick Marlier  <patrick.marlier@gmail.com>\n\n\tPR libitm/55693\n\t* config/darwin.h: Replace ENDFILE_SPEC with TM_DESTRUCTOR and\n\tdefine ENDFILE_SPEC as TM_DESTRUCTOR.\n\t* config/i386/darwin.h (ENDFILE_SPEC): Use TM_DESTRUCTOR.\n\n/libitm\n2013-02-11  Iain Sandoe  <iain@codesourcery.com>\n\t    Jack Howarth  <howarth@bromo.med.uc.edu>\n\t    Patrick Marlier  <patrick.marlier@gmail.com>\n\n\tPR libitm/55693\n\t* alloc_cpp.cc: Enable function declarations on darwin.\n\t* eh_cpp.cc: Likewise.\n\nCo-Authored-By: Jack Howarth <howarth@bromo.med.uc.edu>\nCo-Authored-By: Patrick Marlier <patrick.marlier@gmail.com>\n\nFrom-SVN: r195960", "tree": {"sha": "206424d4d1c1346a99945c5b45e70d6fc3fbcec5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/206424d4d1c1346a99945c5b45e70d6fc3fbcec5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53b03cce254169b7fe0e717cbb238c4896673739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b03cce254169b7fe0e717cbb238c4896673739", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b03cce254169b7fe0e717cbb238c4896673739"}], "stats": {"total": 77, "additions": 29, "deletions": 48}, "files": [{"sha": "b99a9e51ecb393f9c854cdea17293b101a7e5313", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "patch": "@@ -1,3 +1,12 @@\n+2013-02-11  Iain Sandoe  <iain@codesourcery.com>\n+\t    Jack Howarth  <howarth@bromo.med.uc.edu>\n+\t    Patrick Marlier  <patrick.marlier@gmail.com>\n+\n+\tPR libitm/55693\n+\t* config/darwin.h: Replace ENDFILE_SPEC with TM_DESTRUCTOR and\n+\tdefine ENDFILE_SPEC as TM_DESTRUCTOR.\n+\t* config/i386/darwin.h (ENDFILE_SPEC): Use TM_DESTRUCTOR.\n+\n 2013-02-11  Alexander Potapenko <glider@google.com>\n \t    Jack Howarth  <howarth@bromo.med.uc.edu>\n \t    Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "82a42c8598b1c08336caa356bb47da249471c84a", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "patch": "@@ -363,7 +363,8 @@ extern GTY(()) int darwin_ms_struct;\n   %{shared-libgcc:%:version-compare(< 10.5 mmacosx-version-min= crt3.o%s)}\"\n \n /* We want a destructor last in the list.  */\n-#define ENDFILE_SPEC \"%{fgnu-tm: -lcrttme.o}\"\n+#define TM_DESTRUCTOR \"%{fgnu-tm: -lcrttme.o}\"\n+#define ENDFILE_SPEC TM_DESTRUCTOR\n \n #define DARWIN_EXTRA_SPECS\t\t\t\t\t\t\\\n   { \"darwin_crt1\", DARWIN_CRT1_SPEC },\t\t\t\t\t\\"}, {"sha": "594ec99948409372fe82062d487d0fae7df8d25a", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "patch": "@@ -131,8 +131,7 @@ extern int darwin_emit_branch_islands;\n   \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n    %{mpc32:crtprec32.o%s} \\\n    %{mpc64:crtprec64.o%s} \\\n-   %{mpc80:crtprec80.o%s} \\\n-   %{fgnu-tm: -lcrttme.o}\"\n+   %{mpc80:crtprec80.o%s}\" TM_DESTRUCTOR\n \n #undef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS                                   \\"}, {"sha": "0eadc320252a806cfc603148a3ea50ee322b989c", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "patch": "@@ -1,3 +1,10 @@\n+2013-02-11  Iain Sandoe  <iain@codesourcery.com>\n+\t    Jack Howarth  <howarth@bromo.med.uc.edu>\n+\t    Patrick Marlier  <patrick.marlier@gmail.com>\n+\n+\tPR libitm/55693\n+\t* config/darwin-crt-tm.c: Remove dummy functions hack.\n+\n 2013-02-08  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/54222"}, {"sha": "4f4d44449b46cf17ae179f2a1189c8118a245909", "filename": "libgcc/config/darwin-crt-tm.c", "status": "modified", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/libgcc%2Fconfig%2Fdarwin-crt-tm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/libgcc%2Fconfig%2Fdarwin-crt-tm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fdarwin-crt-tm.c?ref=6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "patch": "@@ -39,7 +39,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #endif\n \n #define WEAK __attribute__((weak))\n-#define UNUSED __attribute__((unused))\n \n extern void _ITM_registerTMCloneTable (void *, size_t) WEAK;\n extern void _ITM_deregisterTMCloneTable (void *) WEAK;\n@@ -103,46 +102,4 @@ void __doTMdeRegistrations (void)\n     _ITM_deregisterTMCloneTable (tmct);\n }\n \n-/* Provide dummy functions to satisfy linkage for versions of the Darwin \n-   tool-chain that that can't handle undefined weak refs at the link stage.\n-   ??? Define these dummy functions only when !HAVE_ELF_STYLE_WEAKREF. */\n-\n-extern void *__cxa_allocate_exception (size_t) WEAK;\n-extern void __cxa_throw (void *, void *, void *) WEAK;\n-extern void *__cxa_begin_catch (void *) WEAK;\n-extern void *__cxa_end_catch (void) WEAK;\n-extern void __cxa_tm_cleanup (void *, void *, unsigned int) WEAK;\n-\n-extern void *_ZnwX (size_t) WEAK;\n-extern void _ZdlPv (void *) WEAK;\n-extern void *_ZnaX (size_t) WEAK;\n-extern void _ZdaPv (void *) WEAK;\n-\n-typedef const struct nothrow_t { } *c_nothrow_p;\n-\n-extern void *_ZnwXRKSt9nothrow_t (size_t, c_nothrow_p) WEAK;\n-extern void _ZdlPvRKSt9nothrow_t (void *, c_nothrow_p) WEAK;\n-extern void *_ZnaXRKSt9nothrow_t (size_t, c_nothrow_p) WEAK;\n-extern void _ZdaPvRKSt9nothrow_t (void *, c_nothrow_p) WEAK;\n-\n-void *__cxa_allocate_exception (size_t s UNUSED) { return NULL; }\n-void __cxa_throw (void * a UNUSED, void * b UNUSED, void * c UNUSED)\n-  { return; }\n-void *__cxa_begin_catch (void * a UNUSED) { return NULL; }\n-void *__cxa_end_catch (void) { return NULL; }\n-void __cxa_tm_cleanup (void * a UNUSED, void * b UNUSED, unsigned int c UNUSED)\n-  { return; }\n-\n-void *_ZnwX (size_t s UNUSED) { return NULL; }\n-void _ZdlPv (void * a UNUSED) { return; }\n-void *_ZnaX (size_t s UNUSED) { return NULL; }\n-void _ZdaPv (void * a UNUSED) { return; }\n-\n-void *_ZnwXRKSt9nothrow_t (size_t s UNUSED, c_nothrow_p b UNUSED)\n-  { return NULL; }\n-void _ZdlPvRKSt9nothrow_t (void * a UNUSED, c_nothrow_p b UNUSED)  { return; }\n-void *_ZnaXRKSt9nothrow_t (size_t s UNUSED, c_nothrow_p b UNUSED)\n-  { return NULL; }\n-void _ZdaPvRKSt9nothrow_t (void * a UNUSED, c_nothrow_p b UNUSED) { return; }\n-\n #endif"}, {"sha": "a0e3c521a94c8470db6cc2db65722159c923a95f", "filename": "libitm/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "patch": "@@ -1,3 +1,11 @@\n+2013-02-11  Iain Sandoe  <iain@codesourcery.com>\n+\t    Jack Howarth  <howarth@bromo.med.uc.edu>\n+\t    Patrick Marlier  <patrick.marlier@gmail.com>\n+\n+\tPR libitm/55693\n+\t* alloc_cpp.cc: Enable function declarations on darwin.\n+\t* eh_cpp.cc: Likewise.\n+\n 2013-02-03  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tUpdate copyright years."}, {"sha": "a65d01df66e1283e9d6e5a0f34de8b3b14e41ede", "filename": "libitm/alloc_cpp.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/libitm%2Falloc_cpp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/libitm%2Falloc_cpp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Falloc_cpp.cc?ref=6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "patch": "@@ -60,7 +60,7 @@ extern void _ZdlPvRKSt9nothrow_t (void *, c_nothrow_p) __attribute__((weak));\n extern void *_ZnaXRKSt9nothrow_t (size_t, c_nothrow_p) __attribute__((weak));\n extern void _ZdaPvRKSt9nothrow_t (void *, c_nothrow_p) __attribute__((weak));\n \n-#if !defined (HAVE_ELF_STYLE_WEAKREF) && !defined (__MACH__)\n+#if !defined (HAVE_ELF_STYLE_WEAKREF) \n void *_ZnwX (size_t) { return NULL; }\n void _ZdlPv (void *) { return; }\n void *_ZnaX (size_t) { return NULL; }"}, {"sha": "929053d331af8bad879913b97f6e9fa6d0a5408e", "filename": "libitm/eh_cpp.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/libitm%2Feh_cpp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c59ffd1ac3a56fc1819282ce820ec8d95922f38/libitm%2Feh_cpp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Feh_cpp.cc?ref=6c59ffd1ac3a56fc1819282ce820ec8d95922f38", "patch": "@@ -39,7 +39,7 @@ extern void *__cxa_begin_catch (void *) WEAK;\n extern void __cxa_end_catch (void) WEAK;\n extern void __cxa_tm_cleanup (void *, void *, unsigned int) WEAK;\n \n-#if !defined (HAVE_ELF_STYLE_WEAKREF) && !defined (__MACH__)\n+#if !defined (HAVE_ELF_STYLE_WEAKREF) \n void *__cxa_allocate_exception (size_t) { return NULL; }\n void __cxa_throw (void *, void *, void *) { return; }\n void *__cxa_begin_catch (void *) { return NULL; }"}]}