{"sha": "c284306145faf3fe9ed5d7baea237fb0bb50973e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI4NDMwNjE0NWZhZjNmZTllZDVkN2JhZWEyMzdmYjBiYjUwOTczZQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "2000-02-16T03:23:40Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2000-02-16T03:23:40Z"}, "message": "sh.h (OVERRIDE_OPTIONS): Don't set sh_addr_diff_vec_mode.\n\n\t* sh.h (OVERRIDE_OPTIONS): Don't set sh_addr_diff_vec_mode.\n\t(sh_addr_diff_vec_mode): Don't declare.\n\t* sh.c (sh_addr_diff_vec_mode): Delete.\n\nFrom-SVN: r32000", "tree": {"sha": "192f014033bfcc86eca58b3c41acff83bef511d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/192f014033bfcc86eca58b3c41acff83bef511d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c284306145faf3fe9ed5d7baea237fb0bb50973e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c284306145faf3fe9ed5d7baea237fb0bb50973e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c284306145faf3fe9ed5d7baea237fb0bb50973e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c284306145faf3fe9ed5d7baea237fb0bb50973e/comments", "author": null, "committer": null, "parents": [{"sha": "7e05b7aec4115221819f5e4ee2bc965f3de51d11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e05b7aec4115221819f5e4ee2bc965f3de51d11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e05b7aec4115221819f5e4ee2bc965f3de51d11"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "dea4d1a72eb82703247683226a5345c21d4f072a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c284306145faf3fe9ed5d7baea237fb0bb50973e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c284306145faf3fe9ed5d7baea237fb0bb50973e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c284306145faf3fe9ed5d7baea237fb0bb50973e", "patch": "@@ -1,3 +1,9 @@\n+Wed Feb 16 03:21:43 2000  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* sh.h (OVERRIDE_OPTIONS): Don't set sh_addr_diff_vec_mode.\n+\t(sh_addr_diff_vec_mode): Don't declare.\n+\t* sh.c (sh_addr_diff_vec_mode): Delete.\n+\n Wed Feb 16 01:27:52 2000  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* sh.md (mulsi3_highpart): Add REG_EQUAL note to last insn."}, {"sha": "696c73cd23f257bf082457d716e91a1c9a611b92", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c284306145faf3fe9ed5d7baea237fb0bb50973e/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c284306145faf3fe9ed5d7baea237fb0bb50973e/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=c284306145faf3fe9ed5d7baea237fb0bb50973e", "patch": "@@ -87,8 +87,6 @@ enum processor_type sh_cpu;\n rtx sh_compare_op0;\n rtx sh_compare_op1;\n \n-enum machine_mode sh_addr_diff_vec_mode;\n-\n /* Provides the class number of the smallest class containing\n    reg number.  */\n "}, {"sha": "ac80d2809eec86c0213d86ba8b70be1cb8a17827", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c284306145faf3fe9ed5d7baea237fb0bb50973e/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c284306145faf3fe9ed5d7baea237fb0bb50973e/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=c284306145faf3fe9ed5d7baea237fb0bb50973e", "patch": "@@ -251,7 +251,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n      break global alloc, and generates slower code anyway due\t\t\\\n      to the pressure on R0.  */\t\t\t\t\t\t\\\n   flag_schedule_insns = 0;\t\t\t\t\t\t\\\n-  sh_addr_diff_vec_mode = TARGET_BIGTABLE ? SImode : HImode;\t\t\\\n } while (0)\n \f\n /* Target machine storage layout.  */\n@@ -2075,8 +2074,6 @@ enum processor_type {\n #define sh_cpu_attr ((enum attr_cpu)sh_cpu)\n extern enum processor_type sh_cpu;\n \n-extern enum machine_mode sh_addr_diff_vec_mode;\n-\n extern int optimize; /* needed for gen_casesi.  */\n \n enum mdep_reorg_phase_e"}]}