{"sha": "b2df20b404134b6e9639fc33bd90755e9c25c2d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJkZjIwYjQwNDEzNGI2ZTk2MzlmYzMzYmQ5MDc1NWU5YzI1YzJkNw==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2005-03-16T20:42:37Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2005-03-16T20:42:37Z"}, "message": "rtlanal.c (find_first_parameter_load): Rewrite to return actual first param load or the call if none...\n\n2005-03-16 Dale Johannesen  <dalej@apple.com>\n\n        * rtlanal.c (find_first_parameter_load):  Rewrite to\n        return actual first param load or the call if none,\n        instead of first in block, when not all loads exist.\n\nFrom-SVN: r96578", "tree": {"sha": "99aa1333d8e8d2fd4c95bfdca522410c2fd65374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99aa1333d8e8d2fd4c95bfdca522410c2fd65374"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2df20b404134b6e9639fc33bd90755e9c25c2d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2df20b404134b6e9639fc33bd90755e9c25c2d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2df20b404134b6e9639fc33bd90755e9c25c2d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2df20b404134b6e9639fc33bd90755e9c25c2d7/comments", "author": null, "committer": null, "parents": [{"sha": "0376d694c2162127e4a727dd67e8c982eff04871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0376d694c2162127e4a727dd67e8c982eff04871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0376d694c2162127e4a727dd67e8c982eff04871"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "3af68fc8745802f50c670b9dab5d4de3fe2fbb1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2df20b404134b6e9639fc33bd90755e9c25c2d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2df20b404134b6e9639fc33bd90755e9c25c2d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2df20b404134b6e9639fc33bd90755e9c25c2d7", "patch": "@@ -1,3 +1,9 @@\n+2005-03-16 Dale Johannesen  <dalej@apple.com>\n+\n+\t* rtlanal.c (find_first_parameter_load):  Rewrite to\n+\treturn actual first param load or the call if none,\n+\tinstead of first in block, when not all loads exist.\n+\n 2005-03-16  Roger Sayle  <roger@eyesopen.com>\n \n \t* optabs.c (expand_copysign_absneg): Make static."}, {"sha": "0686af8c65bc4fe52bf770c60b01860f25d089f7", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2df20b404134b6e9639fc33bd90755e9c25c2d7/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2df20b404134b6e9639fc33bd90755e9c25c2d7/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=b2df20b404134b6e9639fc33bd90755e9c25c2d7", "patch": "@@ -3159,12 +3159,15 @@ parms_set (rtx x, rtx pat ATTRIBUTE_UNUSED, void *data)\n }\n \n /* Look backward for first parameter to be loaded.\n+   Note that loads of all parameters will not necessarily be\n+   found if CSE has eliminated some of them (e.g., an argument\n+   to the outer function is passed down as a parameter).\n    Do not skip BOUNDARY.  */\n rtx\n find_first_parameter_load (rtx call_insn, rtx boundary)\n {\n   struct parms_set_data parm;\n-  rtx p, before;\n+  rtx p, before, first_set;\n \n   /* Since different machines initialize their parameter registers\n      in different orders, assume nothing.  Collect the set of all\n@@ -3186,6 +3189,7 @@ find_first_parameter_load (rtx call_insn, rtx boundary)\n \tparm.nregs++;\n       }\n   before = call_insn;\n+  first_set = call_insn;\n \n   /* Search backward for the first set of a register in this set.  */\n   while (parm.nregs && before != boundary)\n@@ -3208,9 +3212,20 @@ find_first_parameter_load (rtx call_insn, rtx boundary)\n \t}\n \n       if (INSN_P (before))\n-\tnote_stores (PATTERN (before), parms_set, &parm);\n+\t{\n+\t  int nregs_old = parm.nregs;\n+\t  note_stores (PATTERN (before), parms_set, &parm);\n+\t  /* If we found something that did not set a parameter reg,\n+\t     we're done.  Do not keep going, as that might result\n+\t     in hoisting an insn before the setting of a pseudo\n+\t     that is used by the hoisted insn. */\n+\t  if (nregs_old != parm.nregs)\n+\t    first_set = before;\n+\t  else\n+\t    break;\n+\t}\n     }\n-  return before;\n+  return first_set;\n }\n \n /* Return true if we should avoid inserting code between INSN and preceding"}]}