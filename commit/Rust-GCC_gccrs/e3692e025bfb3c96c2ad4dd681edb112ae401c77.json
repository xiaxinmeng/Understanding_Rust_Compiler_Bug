{"sha": "e3692e025bfb3c96c2ad4dd681edb112ae401c77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM2OTJlMDI1YmZiM2M5NmMyYWQ0ZGQ2ODFlZGIxMTJhZTQwMWM3Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-12-03T16:01:32Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-12-03T16:01:32Z"}, "message": "re PR c++/54170 (Call to lambda elided)\n\n/cp\n2012-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54170\n\t* cvt.c (cp_convert_to_pointer): Don't discard side-effects from\n\texpressions of nullptr_t.\n\t* typeck.c (build_ptrmemfunc): Likewise.\n\n/testsuite\n2012-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54170\n\t* g++.dg/cpp0x/lambda/lambda-nullptr.C: New.\n\nFrom-SVN: r194098", "tree": {"sha": "f3c2cf1fcde324c919db79a3999d4b007571d58f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3c2cf1fcde324c919db79a3999d4b007571d58f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3692e025bfb3c96c2ad4dd681edb112ae401c77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3692e025bfb3c96c2ad4dd681edb112ae401c77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3692e025bfb3c96c2ad4dd681edb112ae401c77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3692e025bfb3c96c2ad4dd681edb112ae401c77/comments", "author": null, "committer": null, "parents": [{"sha": "cc1f4a3020b278ab31c8c77feb7375719e88f013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc1f4a3020b278ab31c8c77feb7375719e88f013", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc1f4a3020b278ab31c8c77feb7375719e88f013"}], "stats": {"total": 79, "additions": 68, "deletions": 11}, "files": [{"sha": "220b15688ff75f750390ad4ef8a97360adf97d58", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3692e025bfb3c96c2ad4dd681edb112ae401c77/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3692e025bfb3c96c2ad4dd681edb112ae401c77/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e3692e025bfb3c96c2ad4dd681edb112ae401c77", "patch": "@@ -1,3 +1,10 @@\n+2012-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54170\n+\t* cvt.c (cp_convert_to_pointer): Don't discard side-effects from\n+\texpressions of nullptr_t.\n+\t* typeck.c (build_ptrmemfunc): Likewise.\n+\n 2012-12-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/55542"}, {"sha": "7731b4a1f4b407707e9430565a792c1372625e1c", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3692e025bfb3c96c2ad4dd681edb112ae401c77/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3692e025bfb3c96c2ad4dd681edb112ae401c77/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=e3692e025bfb3c96c2ad4dd681edb112ae401c77", "patch": "@@ -215,16 +215,14 @@ cp_convert_to_pointer (tree type, tree expr, tsubst_flags_t complain)\n \treturn build_ptrmemfunc (TYPE_PTRMEMFUNC_FN_TYPE (type), expr, 0,\n \t\t\t\t /*c_cast_p=*/false, complain);\n \n-      if (TYPE_PTRDATAMEM_P (type))\n-\t{\n-\t  /* A NULL pointer-to-member is represented by -1, not by\n-\t     zero.  */\n-\t  expr = build_int_cst_type (type, -1);\n-\t}\n-      else\n-\texpr = build_int_cst (type, 0);\n-\n-      return expr;\n+      /* A NULL pointer-to-data-member is represented by -1, not by\n+\t zero.  */\n+      tree val = (TYPE_PTRDATAMEM_P (type)\n+\t\t  ? build_int_cst_type (type, -1)\n+\t\t  : build_int_cst (type, 0));\n+\n+      return (TREE_SIDE_EFFECTS (expr)\n+\t      ? build2 (COMPOUND_EXPR, type, expr, val) : val);\n     }\n   else if (TYPE_PTRMEM_P (type) && INTEGRAL_CODE_P (form))\n     {"}, {"sha": "ef76dcdbeb80f255b45aa8ecd003bf81ad3bb1d7", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3692e025bfb3c96c2ad4dd681edb112ae401c77/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3692e025bfb3c96c2ad4dd681edb112ae401c77/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=e3692e025bfb3c96c2ad4dd681edb112ae401c77", "patch": "@@ -7567,7 +7567,7 @@ build_ptrmemfunc (tree type, tree pfn, int force, bool c_cast_p,\n   /* Handle null pointer to member function conversions.  */\n   if (null_ptr_cst_p (pfn))\n     {\n-      pfn = build_c_cast (input_location, type, nullptr_node);\n+      pfn = build_c_cast (input_location, type, pfn);\n       return build_ptrmemfunc1 (to_type,\n \t\t\t\tinteger_zero_node,\n \t\t\t\tpfn);"}, {"sha": "89e7a7935830b7cddec97032923103613b666c0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3692e025bfb3c96c2ad4dd681edb112ae401c77/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3692e025bfb3c96c2ad4dd681edb112ae401c77/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3692e025bfb3c96c2ad4dd681edb112ae401c77", "patch": "@@ -1,3 +1,8 @@\n+2012-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54170\n+\t* g++.dg/cpp0x/lambda/lambda-nullptr.C: New.\n+\n 2012-12-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR testsuite/55452"}, {"sha": "1aadbb490dcb0bf29451dda094195c7c2f6fad36", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-nullptr.C", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3692e025bfb3c96c2ad4dd681edb112ae401c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nullptr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3692e025bfb3c96c2ad4dd681edb112ae401c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nullptr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nullptr.C?ref=e3692e025bfb3c96c2ad4dd681edb112ae401c77", "patch": "@@ -0,0 +1,47 @@\n+// PR c++/54170\n+// { dg-do run { target c++11 } }\n+\n+#include <cassert> \n+\n+struct A;\n+typedef A* ptr;\n+typedef int (A::*pmf) (int);\n+typedef int (A::*pdm);\n+\n+int total;\n+\n+void add(int n)\n+{\n+  total += n;\n+}\n+\n+template <typename RType, typename Callable>\n+RType Call(Callable native_func, int arg)\n+{\n+  return native_func(arg);\n+}\n+\n+template <typename RType>\n+RType do_test(int delta)\n+{\n+  return Call<RType>([=](int delta) { add(delta); return nullptr; }, delta);\n+}\n+\n+template <typename RType>\n+void test()\n+{\n+  total = 0;\n+  assert (!do_test<RType>(5));\n+  assert (total == 5);\n+  assert (!do_test<RType>(20));\n+  assert (total == 25);\n+  assert (!do_test<RType>(-256));\n+  assert (total == -231);\n+}\n+\n+int main()\n+{\n+  test<ptr>();\n+  test<pdm>();\n+  test<pmf>();\n+}"}]}