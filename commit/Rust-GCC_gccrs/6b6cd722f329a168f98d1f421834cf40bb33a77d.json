{"sha": "6b6cd722f329a168f98d1f421834cf40bb33a77d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI2Y2Q3MjJmMzI5YTE2OGY5OGQxZjQyMTgzNGNmNDBiYjMzYTc3ZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-02-01T19:06:07Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-02-01T19:06:07Z"}, "message": "re PR fortran/52024 ([OOP] GENERIC operator cannot be resolved)\n\n2012-02-01  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52024\n        * module.c (MOD_VERSION): Bump.\n        (mio_typebound_proc): Read/write is_operator from/to the\n        .mod file.\n\n2012-02-01  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52024\n        * gfortran.dg/typebound_operator_14.f90: New.\n\nFrom-SVN: r183808", "tree": {"sha": "9283dd2dfbbff9817bd6557c7d780c37a4e98826", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9283dd2dfbbff9817bd6557c7d780c37a4e98826"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b6cd722f329a168f98d1f421834cf40bb33a77d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6cd722f329a168f98d1f421834cf40bb33a77d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b6cd722f329a168f98d1f421834cf40bb33a77d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6cd722f329a168f98d1f421834cf40bb33a77d/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "887ee29f8e30cfa163eb584b0d6d40689679b639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/887ee29f8e30cfa163eb584b0d6d40689679b639", "html_url": "https://github.com/Rust-GCC/gccrs/commit/887ee29f8e30cfa163eb584b0d6d40689679b639"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "794101bcda4a1c992ff6cd1b8e329a1aa34ca7a6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6cd722f329a168f98d1f421834cf40bb33a77d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6cd722f329a168f98d1f421834cf40bb33a77d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6b6cd722f329a168f98d1f421834cf40bb33a77d", "patch": "@@ -1,3 +1,10 @@\n+2012-02-01  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52024\n+\t* module.c (MOD_VERSION): Bump.\n+\t(mio_typebound_proc): Read/write is_operator from/to the\n+\t.mod file.\n+\n 2012-02-01  Tobias Burnus\n \n \tPR fortran/52059"}, {"sha": "5e0f26e1e5f0ceb78d236316c356b959c09c907e", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6cd722f329a168f98d1f421834cf40bb33a77d/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6cd722f329a168f98d1f421834cf40bb33a77d/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=6b6cd722f329a168f98d1f421834cf40bb33a77d", "patch": "@@ -81,7 +81,7 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Don't put any single quote (') in MOD_VERSION, \n    if yout want it to be recognized.  */\n-#define MOD_VERSION \"8\"\n+#define MOD_VERSION \"9\"\n \n \n /* Structure that describes a position within a module file.  */\n@@ -3578,12 +3578,17 @@ mio_typebound_proc (gfc_typebound_proc** proc)\n   if ((*proc)->is_generic)\n     {\n       gfc_tbp_generic* g;\n+      int iop;\n \n       mio_lparen ();\n \n       if (iomode == IO_OUTPUT)\n \tfor (g = (*proc)->u.generic; g; g = g->next)\n-\t  mio_allocated_string (g->specific_st->name);\n+\t  {\n+\t    iop = (int) g->is_operator;\n+\t    mio_integer (&iop);\n+\t    mio_allocated_string (g->specific_st->name);\n+\t  }\n       else\n \t{\n \t  (*proc)->u.generic = NULL;\n@@ -3594,6 +3599,9 @@ mio_typebound_proc (gfc_typebound_proc** proc)\n \t      g = gfc_get_tbp_generic ();\n \t      g->specific = NULL;\n \n+\t      mio_integer (&iop);\n+\t      g->is_operator = (bool) iop;\n+\n \t      require_atom (ATOM_STRING);\n \t      sym_root = &current_f2k_derived->tb_sym_root;\n \t      g->specific_st = gfc_get_tbp_symtree (sym_root, atom_string);"}, {"sha": "9e655c8d1a64ee08767d3cece7006012bdabb333", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6cd722f329a168f98d1f421834cf40bb33a77d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6cd722f329a168f98d1f421834cf40bb33a77d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b6cd722f329a168f98d1f421834cf40bb33a77d", "patch": "@@ -1,3 +1,8 @@\n+2012-02-01  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52024\n+\t* gfortran.dg/typebound_operator_14.f90: New.\n+\n 2012-02-01  Tobias Burnus\n \n \tPR fortran/52059"}, {"sha": "86c65d77f3e3f671ffed97a2fb463df53cde9909", "filename": "gcc/testsuite/gfortran.dg/typebound_operator_14.f90", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6cd722f329a168f98d1f421834cf40bb33a77d/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6cd722f329a168f98d1f421834cf40bb33a77d/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_14.f90?ref=6b6cd722f329a168f98d1f421834cf40bb33a77d", "patch": "@@ -0,0 +1,42 @@\n+! { dg-do compile }\n+!\n+! PR fortran/52024\n+!\n+! The test case was segfaulting before\n+!\n+\n+module m_sort\n+  implicit none\n+  type, abstract :: sort_t\n+  contains\n+    generic :: operator(.gt.) => gt_cmp\n+    procedure :: gt_cmp\n+    end type sort_t\n+contains\n+  logical function gt_cmp(a,b)\n+    class(sort_t), intent(in) :: a, b\n+    gt_cmp = .true.\n+  end function gt_cmp\n+end module\n+\n+module test\n+  use m_sort\n+  implicit none\n+  type, extends(sort_t) :: sort_int_t\n+    integer :: i\n+  contains\n+    generic :: operator(.gt.) => gt_cmp_int ! { dg-error \"are ambiguous\" }\n+    procedure :: gt_cmp_int\n+  end type\n+contains\n+  logical function gt_cmp_int(a,b) result(cmp)\n+    class(sort_int_t), intent(in) :: a, b\n+    if (a%i > b%i) then\n+      cmp = .true.\n+     else\n+      cmp = .false.\n+     end if\n+  end function gt_cmp_int\n+end module\n+\n+! { dg-final { cleanup-tree-dump \"m_sort test\" } }"}]}