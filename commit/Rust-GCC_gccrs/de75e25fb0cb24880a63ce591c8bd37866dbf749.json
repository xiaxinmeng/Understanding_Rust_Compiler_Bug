{"sha": "de75e25fb0cb24880a63ce591c8bd37866dbf749", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU3NWUyNWZiMGNiMjQ4ODBhNjNjZTU5MWM4YmQzNzg2NmRiZjc0OQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-11-11T13:53:26Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-11-11T13:53:26Z"}, "message": "arm.c (arm_new_rtx_costs): Return after handling comparisons.\n\n\n\t* config/arm/arm.c (arm_new_rtx_costs): Return after handling\n\tcomparisons.\n\nFrom-SVN: r204673", "tree": {"sha": "c3e3138c55be1c7878316e1a2effed1c7c2a9040", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3e3138c55be1c7878316e1a2effed1c7c2a9040"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de75e25fb0cb24880a63ce591c8bd37866dbf749", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de75e25fb0cb24880a63ce591c8bd37866dbf749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de75e25fb0cb24880a63ce591c8bd37866dbf749", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de75e25fb0cb24880a63ce591c8bd37866dbf749/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6162239973a3a10ae49c3cea0c1008d4f9c69b5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6162239973a3a10ae49c3cea0c1008d4f9c69b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6162239973a3a10ae49c3cea0c1008d4f9c69b5b"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "3d8350e9d9b132b6166057b1b138c702cc4fd19c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de75e25fb0cb24880a63ce591c8bd37866dbf749/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de75e25fb0cb24880a63ce591c8bd37866dbf749/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de75e25fb0cb24880a63ce591c8bd37866dbf749", "patch": "@@ -1,3 +1,8 @@\n+2013-11-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (arm_new_rtx_costs): Return after handling\n+\tcomparisons.\n+\n 2013-11-11  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* config/arc/arc.h (LOGICAL_OP_NON_SHORT_CIRCUIT): Define."}, {"sha": "5c53440746191f4e1101219e50c8d4ba00b03b61", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de75e25fb0cb24880a63ce591c8bd37866dbf749/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de75e25fb0cb24880a63ce591c8bd37866dbf749/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=de75e25fb0cb24880a63ce591c8bd37866dbf749", "patch": "@@ -9967,7 +9967,7 @@ arm_new_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n \t  *cost = 0;\n \t  return true;\n \t}\n-      break;\n+      return false;\n \n     case ABS:\n       if (TARGET_HARD_FLOAT && GET_MODE_CLASS (mode) == MODE_FLOAT"}]}