{"sha": "eeec05e1dbd553dc97695ac6bb91112c42599d30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVlYzA1ZTFkYmQ1NTNkYzk3Njk1YWM2YmI5MTExMmM0MjU5OWQzMA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-02-26T21:07:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-02-26T21:07:40Z"}, "message": "Update commentary.\n\nFrom-SVN: r63484", "tree": {"sha": "475d251159529c14f0e14a5419a166e4af731ffd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/475d251159529c14f0e14a5419a166e4af731ffd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eeec05e1dbd553dc97695ac6bb91112c42599d30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeec05e1dbd553dc97695ac6bb91112c42599d30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeec05e1dbd553dc97695ac6bb91112c42599d30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeec05e1dbd553dc97695ac6bb91112c42599d30/comments", "author": null, "committer": null, "parents": [{"sha": "49b973cbaf7ed0c6fb2ac4a639d000e7c7287f97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b973cbaf7ed0c6fb2ac4a639d000e7c7287f97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49b973cbaf7ed0c6fb2ac4a639d000e7c7287f97"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "1e70bf7d4d95d94548a3c431b40dba3f6e83f19e", "filename": "gcc/real.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeec05e1dbd553dc97695ac6bb91112c42599d30/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeec05e1dbd553dc97695ac6bb91112c42599d30/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=eeec05e1dbd553dc97695ac6bb91112c42599d30", "patch": "@@ -1311,6 +1311,10 @@ real_to_integer (r)\n     case rvc_normal:\n       if (r->exp <= 0)\n \tgoto underflow;\n+      /* Only force overflow for unsigned overflow.  Signed overflow is\n+\t undefined, so it doesn't matter what we return, and some callers\n+\t expect to be able to use this routine for both signed and \n+\t unsigned conversions.  */\n       if (r->exp > HOST_BITS_PER_WIDE_INT)\n \tgoto overflow;\n \n@@ -1371,6 +1375,10 @@ real_to_integer2 (plow, phigh, r)\n       exp = r->exp;\n       if (exp <= 0)\n \tgoto underflow;\n+      /* Only force overflow for unsigned overflow.  Signed overflow is\n+\t undefined, so it doesn't matter what we return, and some callers\n+\t expect to be able to use this routine for both signed and \n+\t unsigned conversions.  */\n       if (exp > 2*HOST_BITS_PER_WIDE_INT)\n \tgoto overflow;\n "}]}