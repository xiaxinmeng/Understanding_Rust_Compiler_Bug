{"sha": "9579e906e237d5d6b08732331140e2c239b23ae1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU3OWU5MDZlMjM3ZDVkNmIwODczMjMzMTE0MGUyYzIzOWIyM2FlMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-06-26T21:31:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-06-26T21:31:08Z"}, "message": "re PR c++/66684 (ICE in merge_exception_specifiers, at cp/typeck2.c:2114)\n\n\tPR c++/66684\n\t* typeck2.c (merge_exception_specifiers): Allow different\n\tnoexcept-specifiers if we've had errors.\n\nFrom-SVN: r225086", "tree": {"sha": "fe2219853540182866efd8b37ff2f5aa3c3b4565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe2219853540182866efd8b37ff2f5aa3c3b4565"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9579e906e237d5d6b08732331140e2c239b23ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9579e906e237d5d6b08732331140e2c239b23ae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9579e906e237d5d6b08732331140e2c239b23ae1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9579e906e237d5d6b08732331140e2c239b23ae1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7498239e97b1cb7c049e0f39481af7c812f894ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7498239e97b1cb7c049e0f39481af7c812f894ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7498239e97b1cb7c049e0f39481af7c812f894ab"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "5bfebe2359f121bc85943a3d1a0997dcbc52fe1b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9579e906e237d5d6b08732331140e2c239b23ae1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9579e906e237d5d6b08732331140e2c239b23ae1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9579e906e237d5d6b08732331140e2c239b23ae1", "patch": "@@ -1,5 +1,9 @@\n 2015-06-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/66684\n+\t* typeck2.c (merge_exception_specifiers): Allow different\n+\tnoexcept-specifiers if we've had errors.\n+\n \tPR c++/66255\n \t* pt.c (check_unstripped_args): Split out from...\n \t(retrieve_specialization): ...here.  Allow typedefs in the type of"}, {"sha": "c670879108bf3d914138e4d01df8e4b95e783f23", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9579e906e237d5d6b08732331140e2c239b23ae1/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9579e906e237d5d6b08732331140e2c239b23ae1/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=9579e906e237d5d6b08732331140e2c239b23ae1", "patch": "@@ -2112,6 +2112,7 @@ merge_exception_specifiers (tree list, tree add)\n     return add;\n   noex = TREE_PURPOSE (list);\n   gcc_checking_assert (!TREE_PURPOSE (add)\n+\t\t       || errorcount\n \t\t       || cp_tree_equal (noex, TREE_PURPOSE (add)));\n \n   /* Combine the dynamic-exception-specifiers, if any.  */"}, {"sha": "e3eb7dbeac63ce44d9802a47af589dfe1ff5cabd", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept28.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9579e906e237d5d6b08732331140e2c239b23ae1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9579e906e237d5d6b08732331140e2c239b23ae1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept28.C?ref=9579e906e237d5d6b08732331140e2c239b23ae1", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/66684\n+// { dg-do compile { target c++11 } }\n+\n+template<typename T>\n+struct traits\n+{\n+  static constexpr bool foo() { return sizeof(T) > 1; }\n+  static constexpr bool bar() { return sizeof(T) > 1; }\n+};\n+\n+template<typename T>\n+struct X\n+{\n+  X& operator=(X&&) noexcept(traits<T>::foo());\n+};\n+\n+template<typename T>\n+  X<T>&\n+  X<T>::operator=(X&&) noexcept(traits<T>::foo() && traits<T>::bar()) // { dg-error \"different exception\" }\n+  { return *this; }"}]}