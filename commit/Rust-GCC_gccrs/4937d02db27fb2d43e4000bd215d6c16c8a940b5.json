{"sha": "4937d02db27fb2d43e4000bd215d6c16c8a940b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkzN2QwMmRiMjdmYjJkNDNlNDAwMGJkMjE1ZDZjMTZjOGE5NDBiNQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-01-07T15:30:13Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-01-07T15:30:13Z"}, "message": "re PR rtl-optimization/13674 (ICE in reload_cse_simplify_operands, at postreload.c:378 on PPC64)\n\n\tPR target/13674\n\t* config/rs6000/rs6000.c (rs6000_legitimize_reload_address):\n\tConvert non-word aligned offset address using ld/std into\n\tindirect address.\n\nFrom-SVN: r93052", "tree": {"sha": "0d6d15a81fb365fc594bd019a1e0bf8e60568731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d6d15a81fb365fc594bd019a1e0bf8e60568731"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4937d02db27fb2d43e4000bd215d6c16c8a940b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4937d02db27fb2d43e4000bd215d6c16c8a940b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4937d02db27fb2d43e4000bd215d6c16c8a940b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4937d02db27fb2d43e4000bd215d6c16c8a940b5/comments", "author": null, "committer": null, "parents": [{"sha": "db39699900a7c8aebe8bb0e29d22786234af7bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db39699900a7c8aebe8bb0e29d22786234af7bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db39699900a7c8aebe8bb0e29d22786234af7bcf"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "aa0bbffcc3fabb2f274749a77d29355d4348b4e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4937d02db27fb2d43e4000bd215d6c16c8a940b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4937d02db27fb2d43e4000bd215d6c16c8a940b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4937d02db27fb2d43e4000bd215d6c16c8a940b5", "patch": "@@ -1,3 +1,10 @@\n+2005-01-07  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR target/13674\n+\t* config/rs6000/rs6000.c (rs6000_legitimize_reload_address):\n+\tConvert non-word aligned offset address using ld/std into\n+\tindirect address.\n+\n 2005-01-07  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.md (sse_loadhps splitter): Fix operand number typo."}, {"sha": "baf4a8e73687e4d38088fd6172007bd2b797d6c6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4937d02db27fb2d43e4000bd215d6c16c8a940b5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4937d02db27fb2d43e4000bd215d6c16c8a940b5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=4937d02db27fb2d43e4000bd215d6c16c8a940b5", "patch": "@@ -3809,6 +3809,26 @@ rs6000_legitimize_reload_address (rtx x, enum machine_mode mode,\n       return x;\n     }\n #endif\n+\n+  /* Force ld/std non-word aligned offset into base register by wrapping\n+     in offset 0.  */\n+  if (GET_CODE (x) == PLUS\n+      && GET_CODE (XEXP (x, 0)) == REG\n+      && REGNO (XEXP (x, 0)) < 32\n+      && REG_MODE_OK_FOR_BASE_P (XEXP (x, 0), mode)\n+      && GET_CODE (XEXP (x, 1)) == CONST_INT\n+      && (INTVAL (XEXP (x, 1)) & 3) != 0\n+      && GET_MODE_SIZE (mode) >= UNITS_PER_WORD\n+      && TARGET_POWERPC64)\n+    {\n+      x = gen_rtx_PLUS (GET_MODE (x), x, GEN_INT (0));\n+      push_reload (XEXP (x, 0), NULL_RTX, &XEXP (x, 0), NULL,\n+\t\t   BASE_REG_CLASS, GET_MODE (x), VOIDmode, 0, 0,\n+\t\t   opnum, (enum reload_type) type);\n+      *win = 1;\n+      return x;\n+    }\n+\n   if (GET_CODE (x) == PLUS\n       && GET_CODE (XEXP (x, 0)) == REG\n       && REGNO (XEXP (x, 0)) < FIRST_PSEUDO_REGISTER\n@@ -3844,6 +3864,7 @@ rs6000_legitimize_reload_address (rtx x, enum machine_mode mode,\n       *win = 1;\n       return x;\n     }\n+\n #if TARGET_MACHO\n   if (GET_CODE (x) == SYMBOL_REF\n       && DEFAULT_ABI == ABI_DARWIN\n@@ -3874,6 +3895,7 @@ rs6000_legitimize_reload_address (rtx x, enum machine_mode mode,\n       return x;\n     }\n #endif\n+\n   if (TARGET_TOC\n       && constant_pool_expr_p (x)\n       && ASM_OUTPUT_SPECIAL_POOL_ENTRY_P (get_pool_constant (x), mode))"}]}