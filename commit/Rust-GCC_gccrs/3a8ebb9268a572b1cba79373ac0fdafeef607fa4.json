{"sha": "3a8ebb9268a572b1cba79373ac0fdafeef607fa4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E4ZWJiOTI2OGE1NzJiMWNiYTc5MzczYWMwZmRhZmVlZjYwN2ZhNA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-10-30T08:38:11Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-10-30T08:38:11Z"}, "message": "Remove alloca from dump_gimple_bb_header\n\n\t* gimple-pretty-print.c (dump_gimple_bb_header): Avoid alloca.\n\nFrom-SVN: r192981", "tree": {"sha": "154a7356848a26b5bf889ee2f3c948b857383eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/154a7356848a26b5bf889ee2f3c948b857383eb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a8ebb9268a572b1cba79373ac0fdafeef607fa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8ebb9268a572b1cba79373ac0fdafeef607fa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a8ebb9268a572b1cba79373ac0fdafeef607fa4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8ebb9268a572b1cba79373ac0fdafeef607fa4/comments", "author": null, "committer": null, "parents": [{"sha": "7e0575b0820dbda8e77e60400a74ed9e62a3cc43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e0575b0820dbda8e77e60400a74ed9e62a3cc43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e0575b0820dbda8e77e60400a74ed9e62a3cc43"}], "stats": {"total": 106, "additions": 51, "deletions": 55}, "files": [{"sha": "35acd1eb678a1e4a2f9d1461f914e9b28774c451", "filename": "gcc/ChangeLog", "status": "modified", "additions": 48, "deletions": 44, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8ebb9268a572b1cba79373ac0fdafeef607fa4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8ebb9268a572b1cba79373ac0fdafeef607fa4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a8ebb9268a572b1cba79373ac0fdafeef607fa4", "patch": "@@ -1,3 +1,7 @@\n+2012-10-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* gimple-pretty-print.c (dump_gimple_bb_header): Avoid alloca.\n+\n 2012-10-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/54953\n@@ -70,7 +74,7 @@\n 2012-10-29  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR debug/54693\n-\t* gcc/valtrack.c (dead_debug_insert_temp): Defer rescan of\n+\t* valtrack.c (dead_debug_insert_temp): Defer rescan of\n \tnewly-emitted debug insn.\n \n 2012-10-29  Alexandre Oliva <aoliva@redhat.com>\n@@ -323,24 +327,24 @@ AARCH64_BUILTIN_THREAD_POINTER.\n 2012-10-26  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Uros Bizjak  <ubizjak@gmail.com>\n \n-\t* gcc/common/config/i386/i386-common.c\n+\t* common/config/i386/i386-common.c\n \t(OPTION_MASK_ISA_FXSR_SET): New.\n \t(OPTION_MASK_ISA_XSAVE_SET): Likewise.\n \t(OPTION_MASK_ISA_XSAVEOPT_SET): Likewise.\n \t(ix86_handle_option): Handle mfxsr, mxsave, mxsaveopt options.\n-\t* gcc/config.gcc (i[34567]86-*-*): Add fxsrintrin.h,\n+\t* config.gcc (i[34567]86-*-*): Add fxsrintrin.h,\n \txsaveintrin.h, xsaveoptintrin.h.\n \t(x86_64-*-*): Likewise.\n \t* config/i386/fxsrintrin.h: New header.\n \t* config/i386/xsaveintrin.h: Likewise.\n \t* config/i386/xsaveoptintrin.h: Likewise.\n-\t* gcc/config/i386/driver-i386.c (host_detect_local_cpu): Detect\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect\n \tFXSR/XSAVE/XSAVEOPT support.\n-\t* gcc/config/i386/i386-builtin-types.def\n+\t* config/i386/i386-builtin-types.def\n \t(VOID_FTYPE_PVOID_INT64): New function type.\n-\t* gcc/config/i386/i386-c.c: Define __FXSR__, __XSAVE__\n+\t* config/i386/i386-c.c: Define __FXSR__, __XSAVE__\n \tand __XSAVEOPT__ if needed.\n-\t* gcc/config/i386/i386.c (ix86_target_string): Define -mfxsr,\n+\t* config/i386/i386.c (ix86_target_string): Define -mfxsr,\n \t -mxsave and -mxsaveopt options.\n \t(PTA_FXSR): New.\n \t(PTA_XSAVE): Likewise.\n@@ -354,10 +358,10 @@ AARCH64_BUILTIN_THREAD_POINTER.\n \tIX86_BUILTIN_XRSTOR, IX86_BUILTIN_XRSTOR64, IX86_BUILTIN_XSAVEOPT,\n \tIX86_BUILTIN_XSAVEOPT64.\n \t(ix86_expand_builtin): Handle these built-ins.\n-\t* gcc/config/i386/i386.h (TARGET_FXSR): New.\n+\t* config/i386/i386.h (TARGET_FXSR): New.\n \t(TARGET_XSAVE): Likewise.\n \t(TARGET_XSAVEOPT): Likewise.\n-\t* gcc/config/i386/i386.md (ANY_XSAVE): New int iterator.\n+\t* config/i386/i386.md (ANY_XSAVE): New int iterator.\n \t(ANY_XSAVE64): Likewise.\n \t(xsave): New int attribute.\n \t(fxsave): New instruction.\n@@ -369,10 +373,10 @@ AARCH64_BUILTIN_THREAD_POINTER.\n \t(xrstor): Likewise.\n \t(xrstor_rex64): Likewise.\n \t(xrstor64): Likewise.\n-\t* gcc/config/i386/i386.opt (mfxsr): New.\n+\t* config/i386/i386.opt (mfxsr): New.\n \t(mxsave): Likewise.\n \t(mxsaveopt): Likewise.\n-\t* gcc/config/i386/x86intrin.h: Include\n+\t* config/i386/x86intrin.h: Include\n \txsaveintrin.h, fxsrintrin.h, xsaveoptintrin.h.\n \n 2012-10-26  Ralf Cors\u00e9pius  <ralf.corsepius@rtems.org>\n@@ -1395,7 +1399,7 @@ AARCH64_BUILTIN_THREAD_POINTER.\n \ttests to require different effective targets.\n \t(effective_target): New function.\n \t(test_intrinsic): Specify correct effective targets.\n-\t* gcc/config/arm/neon.md (fma<VCVTF:mode>4_intrinsic): New pattern.\n+\t* config/arm/neon.md (fma<VCVTF:mode>4_intrinsic): New pattern.\n \t(fmsub<VCVTF:mode>4_intrinsic): Likewise.\n \t(neon_vfma<VCVFT:mode>): New expand.\n \t(neon_vfms<VCVFT:mode>): Likewise.\n@@ -1584,27 +1588,27 @@ AARCH64_BUILTIN_THREAD_POINTER.\n \t(rs6000_isa_flags_explicit): Define in terms of the\n \tglobal_options_set structure.\n \n-\t* gcc/config/rs6000/aix43.h (SUBTARGET_OVERRIDE_OPTIONS):\n+\t* config/rs6000/aix43.h (SUBTARGET_OVERRIDE_OPTIONS):\n \tChange use of target_flags to rs6000_isa_flags, target_flags_explicit\n \tto rs6000_isa_flags_explicit, and MASK_<xxx> to OPTION_MASK_<xxx>.\n-\t* gcc/config/rs6000/aix51.h (SUBTARGET_OVERRIDE_OPTIONS): Likewise.\n-\t* gcc/config/rs6000/aix52.h (SUBTARGET_OVERRIDE_OPTIONS): Likewise.\n-\t* gcc/config/rs6000/aix53.h (SUBTARGET_OVERRIDE_OPTIONS): Likewise.\n-\t* gcc/config/rs6000/aix61.h (SUBTARGET_OVERRIDE_OPTIONS): Likewise.\n-\t* gcc/config/rs6000/freebsd64.h (RELOCATABLE_NEEDS_FIXUP): Likewise.\n+\t* config/rs6000/aix51.h (SUBTARGET_OVERRIDE_OPTIONS): Likewise.\n+\t* config/rs6000/aix52.h (SUBTARGET_OVERRIDE_OPTIONS): Likewise.\n+\t* config/rs6000/aix53.h (SUBTARGET_OVERRIDE_OPTIONS): Likewise.\n+\t* config/rs6000/aix61.h (SUBTARGET_OVERRIDE_OPTIONS): Likewise.\n+\t* config/rs6000/freebsd64.h (RELOCATABLE_NEEDS_FIXUP): Likewise.\n \t(SUBSUBTARGET_OVERRIDE_OPTIONS): Likewise.\n-\t* gcc/config/rs6000/freebsd.h (RELOCATABLE_NEEDS_FIXUP): Likewise.\n-\t* gcc/config/rs6000/linux64.h (RELOCATABLE_NEEDS_FIXUP): Likewise.\n+\t* config/rs6000/freebsd.h (RELOCATABLE_NEEDS_FIXUP): Likewise.\n+\t* config/rs6000/linux64.h (RELOCATABLE_NEEDS_FIXUP): Likewise.\n \t(SUBSUBTARGET_OVERRIDE_OPTIONS): Likewise.\n \t(OPTION_LITTLE_ENDIAN): Likewise.\n \t(OPTION_RELOCATABLE): Likewise.\n \t(OPTION_EABI): Likewise.\n \t(OPTION_PROTOTYPE): Likewise.\n-\t* gcc/config/rs6000/linux.h (RELOCATABLE_NEEDS_FIXUP): Likewise.\n-\t* gcc/config/rs6000/option-defaults.h (OPTION_MASK_64BIT): Likewise.\n+\t* config/rs6000/linux.h (RELOCATABLE_NEEDS_FIXUP): Likewise.\n+\t* config/rs6000/option-defaults.h (OPTION_MASK_64BIT): Likewise.\n \t(OPT_ARCH32): Likewise.\n \t(OPT_ARCH64): Likewise.\n-\t* gcc/config/rs6000/sysv4.h (TARGET_TOC): Likewise.\n+\t* config/rs6000/sysv4.h (TARGET_TOC): Likewise.\n \t(SUBTARGET_OVERRIDE_OPTIONS): Likewise.\n \t(SUBSUBTARGET_OVERRIDE_OPTIONS): Likewise.\n \t(TARGET_OS_SYSV_CPP_BUILTINS): Likewise.\n@@ -5737,13 +5741,13 @@ AARCH64_BUILTIN_THREAD_POINTER.\n \n 2012-09-08  Andi Kleen  <ak@linux.intel.com>\n \n-\t* gcc/lto/lto.c (do_whole_program_analysis): Fix last broken patch.\n+\t* lto/lto.c (do_whole_program_analysis): Fix last broken patch.\n \n 2012-09-08  Andi Kleen  <ak@linux.intel.com>\n \n-\t* gcc/common.opt (-fmem-report-wpa): Add\n-\t* gcc/doc/invoke.texi (-fmem-report-wpa): Document.\n-\t* gcc/lto/lto.c (do_whole_program_analysis): Run mem_report\n+\t* common.opt (-fmem-report-wpa): Add\n+\t* doc/invoke.texi (-fmem-report-wpa): Document.\n+\t* lto/lto.c (do_whole_program_analysis): Run mem_report\n \twhen mem_report_wpa is set.\n \n 2012-09-07  Anthony Green  <green@moxielogic.com>\n@@ -5832,10 +5836,10 @@ AARCH64_BUILTIN_THREAD_POINTER.\n \n 2012-09-06  Andi Kleen  <ak@linux.intel.com>\n \n-\t* gcc/lto-streamer.h (res_pair): Add.\n+\t* lto-streamer.h (res_pair): Add.\n \t(lto_file_decl_data): Replace resolutions with respairs.\n \tAdd max_index.\n-\t* gcc/lto/lto.c (lto_resolution_read): Remove max_index.  Add rp.\n+\t* lto/lto.c (lto_resolution_read): Remove max_index.  Add rp.\n \tInitialize respairs.\n \t(lto_file_finalize): Set up resolutions vector lazily from respairs.\n \n@@ -8277,7 +8281,7 @@ AARCH64_BUILTIN_THREAD_POINTER.\n \t* ggc.h: ... here.\n \t* doc/gty.texi: Document support for C++ templates and\n \tuser-provided markers.\n-\t* gcc/gengtype-lex.l: Update copyright year.\n+\t* gengtype-lex.l: Update copyright year.\n \tRemove support for recognizing DEF_VEC_O, DEF_VEC_P and DEFVEC_I.\n \t* gengtype-parse.c: Update copyright year.\n \t(token_names): Remove DEF_VEC_O, DEF_VEC_P and DEF_VEC_I.\n@@ -10979,7 +10983,7 @@ AARCH64_BUILTIN_THREAD_POINTER.\n 2012-07-30  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/39423\n-\t* config/gcc/sh/sh.md (*movsi_index_disp, *movhi_index_disp): New\n+\t* config/sh/sh.md (*movsi_index_disp, *movhi_index_disp): New\n \tinsns.\n \n 2012-07-30  Oleg Endo  <olegendo@gcc.gnu.org>\n@@ -11543,7 +11547,7 @@ AARCH64_BUILTIN_THREAD_POINTER.\n \t(stack_protect_set_<mode>): Likewise.\n \t(stack_protect_test): Likewise.\n \t(stack_protect_test_<mode>): Likewise.\n-\t* gcc/defaults.h: Define macro TARGET_HAS_BIONIC to 0 - target does\n+\t* defaults.h: Define macro TARGET_HAS_BIONIC to 0 - target does\n \tnot have Bionic by default\n \t* config/linux.h: Redefine macro TARGET_HAS_BIONIC to (OPTION_BIONIC)\n \tMacro OPTION_BIONIC is defined in this file and provides Bionic\n@@ -12278,15 +12282,15 @@ AARCH64_BUILTIN_THREAD_POINTER.\n \tSet \"type\" attribute.\n \t* config/mips/generic.md (generic_atomic, generic_syncloop):\n \tNew reservations.\n-\t* gcc/config/mips/10000.md, gcc/config/mips/20kc.md,\n-\t* gcc/config/mips/24k.md, gcc/config/mips/4130.md,\n-\t* gcc/config/mips/4k.md, gcc/config/mips/5400.md,\n-\t* gcc/config/mips/5500.md, gcc/config/mips/5k.md,\n-\t* gcc/config/mips/7000.md, gcc/config/mips/74k.md,\n-\t* gcc/config/mips/9000.md, gcc/config/mips/loongson2ef.md,\n-\t* gcc/config/mips/loongson3a.md, gcc/config/mips/octeon.md,\n-\t* gcc/config/mips/sb1.md, gcc/config/mips/sr71k.md,\n-\t* gcc/config/mips/xlr.md: Handle \"atomic\" and \"syncloop\" types.\n+\t* config/mips/10000.md, config/mips/20kc.md,\n+\t* config/mips/24k.md, config/mips/4130.md,\n+\t* config/mips/4k.md, config/mips/5400.md,\n+\t* config/mips/5500.md, config/mips/5k.md,\n+\t* config/mips/7000.md, config/mips/74k.md,\n+\t* config/mips/9000.md, config/mips/loongson2ef.md,\n+\t* config/mips/loongson3a.md, config/mips/octeon.md,\n+\t* config/mips/sb1.md, config/mips/sr71k.md,\n+\t* config/mips/xlr.md: Handle \"atomic\" and \"syncloop\" types.\n \n 2012-07-20  Oleg Endo  <olegendo@gcc.gnu.org>\n \n@@ -16438,7 +16442,7 @@ AARCH64_BUILTIN_THREAD_POINTER.\n \n 2012-06-12  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n-\t* gcc/config/mips/mips-tables.opt (xlp): Fix merge typo.\n+\t* config/mips/mips-tables.opt (xlp): Fix merge typo.\n \n 2012-06-11  Roland McGrath  <mcgrathr@google.com>\n \n@@ -25780,7 +25784,7 @@ AARCH64_BUILTIN_THREAD_POINTER.\n 2012-03-07  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/52506\n-\t* gcc/config/avr/avr.c (expand_epilogue): Fix order of restoration\n+\t* config/avr/avr.c (expand_epilogue): Fix order of restoration\n \tto: RAMPZ, RAMPY, RAMPX, RAMPD.\n \t(expand_prologue): Only clear RAMPZ if it has effect on RAM-read.\n \n@@ -25794,7 +25798,7 @@ AARCH64_BUILTIN_THREAD_POINTER.\n 2012-03-07  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/52461\n-\t* gcc/config/avr/avr.c (avr_out_lpm): Clear RAMPZ after usage\n+\t* config/avr/avr.c (avr_out_lpm): Clear RAMPZ after usage\n \tif RAMPZ affects reading from RAM.\n \n 2012-03-07  Richard Guenther  <rguenther@suse.de>"}, {"sha": "a5a493a088809a17d93a191a51d3730cb4ff719b", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8ebb9268a572b1cba79373ac0fdafeef607fa4/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8ebb9268a572b1cba79373ac0fdafeef607fa4/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=3a8ebb9268a572b1cba79373ac0fdafeef607fa4", "patch": "@@ -2068,9 +2068,6 @@ dump_gimple_bb_header (FILE *outf, basic_block bb, int indent, int flags)\n       if (flags & TDF_LINENO)\n \t{\n \t  gimple_stmt_iterator gsi;\n-\t  char *s_indent = (char *) alloca ((size_t) indent + 1);\n-\t  memset (s_indent, ' ', (size_t) indent);\n-\t  s_indent[indent] = '\\0';\n \n \t  if (flags & TDF_COMMENT)\n \t    fputs (\";; \", outf);\n@@ -2079,8 +2076,8 @@ dump_gimple_bb_header (FILE *outf, basic_block bb, int indent, int flags)\n \t    if (!is_gimple_debug (gsi_stmt (gsi))\n \t\t&& get_lineno (gsi_stmt (gsi)) != UNKNOWN_LOCATION)\n \t      {\n-\t\tfprintf (outf, \"%sstarting at line %d\",\n-\t\t\t s_indent, get_lineno (gsi_stmt (gsi)));\n+\t\tfprintf (outf, \"%*sstarting at line %d\",\n+\t\t\t indent, \"\", get_lineno (gsi_stmt (gsi)));\n \t\tbreak;\n \t      }\n \t  if (bb->discriminator)\n@@ -2092,12 +2089,7 @@ dump_gimple_bb_header (FILE *outf, basic_block bb, int indent, int flags)\n     {\n       gimple stmt = first_stmt (bb);\n       if (!stmt || gimple_code (stmt) != GIMPLE_LABEL)\n-\t{\n-\t  char *s_indent = (char *) alloca ((size_t) indent - 2 + 1);\n-\t  memset (s_indent, ' ', (size_t) indent);\n-\t  s_indent[indent] = '\\0';\n-\t  fprintf (outf, \"%s<bb %d>:\\n\", s_indent, bb->index);\n-\t}\n+\tfprintf (outf, \"%*s<bb %d>:\\n\", indent, \"\", bb->index);\n     }\n }\n "}]}