{"sha": "563777d7fc12734a838980284a62c6330e1dfd72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYzNzc3ZDdmYzEyNzM0YTgzODk4MDI4NGE2MmM2MzMwZTFkZmQ3Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-05-02T18:19:39Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-05-02T18:19:39Z"}, "message": "any (any::_Storage): Fix alignment of buffer.\n\n\t* include/experimental/any (any::_Storage): Fix alignment of buffer.\n\t(any::_Internal): Check alignment of type.\n\t* testsuite/experimental/any/cons/aligned.cc: New.\n\t* testsuite/experimental/any/misc/any_cast_neg.cc: Adjust dg-error.\n\nFrom-SVN: r222729", "tree": {"sha": "50292919eb63d1890ca3fc06b4fc3b743a10452a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50292919eb63d1890ca3fc06b4fc3b743a10452a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/563777d7fc12734a838980284a62c6330e1dfd72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/563777d7fc12734a838980284a62c6330e1dfd72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/563777d7fc12734a838980284a62c6330e1dfd72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/563777d7fc12734a838980284a62c6330e1dfd72/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4f504de775cfbb362943f5bc37771623499c432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4f504de775cfbb362943f5bc37771623499c432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4f504de775cfbb362943f5bc37771623499c432"}], "stats": {"total": 64, "additions": 61, "deletions": 3}, "files": [{"sha": "f04b97a4f5f884c77da25cdaab567ecb47d76b52", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/563777d7fc12734a838980284a62c6330e1dfd72/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/563777d7fc12734a838980284a62c6330e1dfd72/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=563777d7fc12734a838980284a62c6330e1dfd72", "patch": "@@ -1,5 +1,10 @@\n 2015-05-02  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/experimental/any (any::_Storage): Fix alignment of buffer.\n+\t(any::_Internal): Check alignment of type.\n+\t* testsuite/experimental/any/cons/aligned.cc: New.\n+\t* testsuite/experimental/any/misc/any_cast_neg.cc: Adjust dg-error.\n+\n \t* include/experimental/iterator (ostream_joiner): Simplify by using\n \tthe injected-class-name and the ostream_type typedef.\n "}, {"sha": "7b5e5ecbcbae42735988bd127e41f00895a450b2", "filename": "libstdc++-v3/include/experimental/any", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/563777d7fc12734a838980284a62c6330e1dfd72/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/563777d7fc12734a838980284a62c6330e1dfd72/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany?ref=563777d7fc12734a838980284a62c6330e1dfd72", "patch": "@@ -98,11 +98,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _Storage& operator=(const _Storage&) = delete;\n \n       void* _M_ptr;\n-      std::aligned_storage<sizeof(_M_ptr), sizeof(_M_ptr)>::type _M_buffer;\n+      aligned_storage<sizeof(_M_ptr), alignof(void*)>::type _M_buffer;\n     };\n \n     template<typename _Tp, typename _Safe = is_nothrow_move_constructible<_Tp>,\n-\t     bool _Fits = (sizeof(_Tp) <= sizeof(_Storage))>\n+\t     bool _Fits = (sizeof(_Tp) <= sizeof(_Storage))\n+\t\t\t  && (alignof(_Tp) <= alignof(_Storage))>\n       using _Internal = std::integral_constant<bool, _Safe::value && _Fits>;\n \n     template<typename _Tp>"}, {"sha": "3923994038c370a1effa93482360fe0aae704ecd", "filename": "libstdc++-v3/testsuite/experimental/any/cons/aligned.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/563777d7fc12734a838980284a62c6330e1dfd72/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fcons%2Faligned.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/563777d7fc12734a838980284a62c6330e1dfd72/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fcons%2Faligned.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fcons%2Faligned.cc?ref=563777d7fc12734a838980284a62c6330e1dfd72", "patch": "@@ -0,0 +1,52 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++14\" }\n+\n+#include <experimental/any>\n+#include <cstdint>\n+#include <testsuite_hooks.h>\n+\n+// Alignment requiremnts of this type prevent it being stored in 'any'\n+struct alignas(2 * alignof(void*)) X { };\n+\n+bool\n+stored_internally(void* obj, const std::experimental::any& a)\n+{\n+  std::uintptr_t a_addr = reinterpret_cast<std::uintptr_t>(&a);\n+  std::uintptr_t a_end = a_addr + sizeof(a);\n+  std::uintptr_t obj_addr = reinterpret_cast<std::uintptr_t>(obj);\n+  return (a_addr <= obj_addr) && (obj_addr < a_end);\n+}\n+\n+void\n+test01()\n+{\n+  std::experimental::any a = X{};\n+  X& x = std::experimental::any_cast<X&>(a);\n+  VERIFY( !stored_internally(&x, a) );\n+\n+  a = 'X';\n+  char& c = std::experimental::any_cast<char&>(a);\n+  VERIFY( stored_internally(&c, a) );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "39e322642aa4b7f08c17564a2f1c26b0ced98578", "filename": "libstdc++-v3/testsuite/experimental/any/misc/any_cast_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/563777d7fc12734a838980284a62c6330e1dfd72/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/563777d7fc12734a838980284a62c6330e1dfd72/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc?ref=563777d7fc12734a838980284a62c6330e1dfd72", "patch": "@@ -26,5 +26,5 @@ void test01()\n   using std::experimental::any_cast;\n \n   const any y(1);\n-  any_cast<int&>(y); // { dg-error \"qualifiers\" \"\" { target { *-*-* } } 355 }\n+  any_cast<int&>(y); // { dg-error \"qualifiers\" \"\" { target { *-*-* } } 356 }\n }"}]}