{"sha": "83d707929ba5e7da8f22032216b50bad18837152", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNkNzA3OTI5YmE1ZTdkYThmMjIwMzIyMTZiNTBiYWQxODgzNzE1Mg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2011-02-02T06:18:01Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2011-02-02T06:18:01Z"}, "message": "re PR debug/47106 (-fcompare-debug failure (length) with  -fpartial-inlining -flto -fconserve-stack)\n\nPR debug/47106\nPR debug/47402\n* tree-flow-inline.h (clear_is_used, is_used_p): New.\n* cfgexpand.c (account_used_vars_for_block): Use them.\n* tree-nrv.c (tree_nrv): Likewise.\n* tree-ssa-live.c (remove_unused_scope_block_p): Likewise.\n(dump_scope_block): Likewise.\n(remove_unused_locals): Likewise.\n\nFrom-SVN: r169515", "tree": {"sha": "ccc3a4712d7c10046df4c3604d1167d5dafaa720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccc3a4712d7c10046df4c3604d1167d5dafaa720"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83d707929ba5e7da8f22032216b50bad18837152", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d707929ba5e7da8f22032216b50bad18837152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83d707929ba5e7da8f22032216b50bad18837152", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d707929ba5e7da8f22032216b50bad18837152/comments", "author": null, "committer": null, "parents": [{"sha": "aaa2ac931e8979147eeac7fd29d548bcb1ddef99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaa2ac931e8979147eeac7fd29d548bcb1ddef99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaa2ac931e8979147eeac7fd29d548bcb1ddef99"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "8f2c36ce6c24790d59d72d30e582f46677861e02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d707929ba5e7da8f22032216b50bad18837152/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d707929ba5e7da8f22032216b50bad18837152/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83d707929ba5e7da8f22032216b50bad18837152", "patch": "@@ -1,3 +1,14 @@\n+2011-02-02  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/47106\n+\tPR debug/47402\n+\t* tree-flow-inline.h (clear_is_used, is_used_p): New.\n+\t* cfgexpand.c (account_used_vars_for_block): Use them.\n+\t* tree-nrv.c (tree_nrv): Likewise.\n+\t* tree-ssa-live.c (remove_unused_scope_block_p): Likewise.\n+\t(dump_scope_block): Likewise.\n+\t(remove_unused_locals): Likewise.\n+\n 2011-02-02  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/47106"}, {"sha": "7b1c441b966c09f01305c0fd077214b5d2830204", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d707929ba5e7da8f22032216b50bad18837152/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d707929ba5e7da8f22032216b50bad18837152/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=83d707929ba5e7da8f22032216b50bad18837152", "patch": "@@ -1325,7 +1325,7 @@ account_used_vars_for_block (tree block, bool toplevel)\n \n   /* Expand all variables at this level.  */\n   for (t = BLOCK_VARS (block); t ; t = DECL_CHAIN (t))\n-    if (var_ann (t) && var_ann (t)->used)\n+    if (var_ann (t) && is_used_p (t))\n       size += expand_one_var (t, toplevel, false);\n \n   /* Expand all variables at containing levels.  */"}, {"sha": "23eb3d826defb1dcd8a5a6fc945be3a542582da4", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d707929ba5e7da8f22032216b50bad18837152/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d707929ba5e7da8f22032216b50bad18837152/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=83d707929ba5e7da8f22032216b50bad18837152", "patch": "@@ -569,9 +569,26 @@ static inline void\n set_is_used (tree var)\n {\n   var_ann_t ann = get_var_ann (var);\n-  ann->used = 1;\n+  ann->used = true;\n }\n \n+/* Clear VAR's used flag.  */\n+\n+static inline void\n+clear_is_used (tree var)\n+{\n+  var_ann_t ann = var_ann (var);\n+  ann->used = false;\n+}\n+\n+/* Return true if VAR is marked as used.  */\n+\n+static inline bool\n+is_used_p (tree var)\n+{\n+  var_ann_t ann = var_ann (var);\n+  return ann->used;\n+}\n \n /* Return true if T (assumed to be a DECL) is a global variable.\n    A variable is considered global if its storage is not automatic.  */"}, {"sha": "32e422e5e20f0495c6c6baf21144f33a4b4fdb43", "filename": "gcc/tree-nrv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d707929ba5e7da8f22032216b50bad18837152/gcc%2Ftree-nrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d707929ba5e7da8f22032216b50bad18837152/gcc%2Ftree-nrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nrv.c?ref=83d707929ba5e7da8f22032216b50bad18837152", "patch": "@@ -263,7 +263,7 @@ tree_nrv (void)\n   DECL_HAS_VALUE_EXPR_P (found) = 1;\n \n   /* FOUND is no longer used.  Ensure it gets removed.  */\n-  var_ann (found)->used = 0;\n+  clear_is_used (found);\n   return 0;\n }\n "}, {"sha": "d917bb99a832dacf6ab590aaec5ca619f2503497", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d707929ba5e7da8f22032216b50bad18837152/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d707929ba5e7da8f22032216b50bad18837152/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=83d707929ba5e7da8f22032216b50bad18837152", "patch": "@@ -468,7 +468,7 @@ remove_unused_scope_block_p (tree scope)\n \t Exception are the scope blocks not containing any instructions\n \t at all so user can't get into the scopes at first place.  */\n       else if ((ann = var_ann (*t)) != NULL\n-\t\t&& ann->used)\n+\t       && is_used_p (*t))\n \tunused = false;\n       else if (TREE_CODE (*t) == LABEL_DECL && TREE_USED (*t))\n \t/* For labels that are still used in the IL, the decision to\n@@ -633,13 +633,11 @@ dump_scope_block (FILE *file, int indent, tree scope, int flags)\n   for (var = BLOCK_VARS (scope); var; var = DECL_CHAIN (var))\n     {\n       bool used = false;\n-      var_ann_t ann;\n \n-      if ((ann = var_ann (var))\n-\t  && ann->used)\n-\tused = true;\n+      if (var_ann (var))\n+\tused = is_used_p (var);\n \n-      fprintf (file, \"%*s\",indent, \"\");\n+      fprintf (file, \"%*s\", indent, \"\");\n       print_generic_decl (file, var, flags);\n       fprintf (file, \"%s\\n\", used ? \"\" : \" (unused)\");\n     }\n@@ -708,7 +706,7 @@ remove_unused_locals (void)\n \n   /* Assume all locals are unused.  */\n   FOR_EACH_REFERENCED_VAR (t, rvi)\n-    var_ann (t)->used = false;\n+    clear_is_used (t);\n \n   /* Walk the CFG marking all referenced symbols.  */\n   FOR_EACH_BB (bb)\n@@ -769,7 +767,7 @@ remove_unused_locals (void)\n       var = VEC_index (tree, cfun->local_decls, srcidx);\n       if (TREE_CODE (var) != FUNCTION_DECL\n \t  && (!(ann = var_ann (var))\n-\t      || !ann->used))\n+\t      || !is_used_p (var)))\n \t{\n \t  if (is_global_var (var))\n \t    {\n@@ -801,7 +799,7 @@ remove_unused_locals (void)\n \tif (TREE_CODE (var) == VAR_DECL\n \t    && is_global_var (var)\n \t    && (ann = var_ann (var)) != NULL\n-\t    && ann->used)\n+\t    && is_used_p (var))\n \t  mark_all_vars_used (&DECL_INITIAL (var), global_unused_vars);\n \n       num = VEC_length (tree, cfun->local_decls);\n@@ -827,8 +825,8 @@ remove_unused_locals (void)\n     if (!is_global_var (t)\n \t&& TREE_CODE (t) != PARM_DECL\n \t&& TREE_CODE (t) != RESULT_DECL\n-\t&& !(ann = var_ann (t))->used\n-\t&& !ann->is_heapvar)\n+\t&& !is_used_p (t)\n+\t&& !var_ann (t)->is_heapvar)\n       remove_referenced_var (t);\n   remove_unused_scope_block_p (DECL_INITIAL (current_function_decl));\n   if (dump_file && (dump_flags & TDF_DETAILS))"}]}