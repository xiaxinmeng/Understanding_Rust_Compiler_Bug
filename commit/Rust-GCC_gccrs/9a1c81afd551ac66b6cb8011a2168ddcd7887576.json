{"sha": "9a1c81afd551ac66b6cb8011a2168ddcd7887576", "node_id": "C_kwDOANBUbNoAKDlhMWM4MWFmZDU1MWFjNjZiNmNiODAxMWEyMTY4ZGRjZDc4ODc1NzY", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-09T22:01:03Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T07:26:33Z"}, "message": "RISC-V: Add vncvt/vmv C++ API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/vmv_v-1.C: New test.\n\t* g++.target/riscv/rvv/base/vmv_v_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vmv_v_x_rv32-1.C: New test.\n\t* g++.target/riscv/rvv/base/vmv_v_x_rv32-2.C: New test.\n\t* g++.target/riscv/rvv/base/vmv_v_x_rv32-3.C: New test.\n\t* g++.target/riscv/rvv/base/vmv_v_x_rv64-1.C: New test.\n\t* g++.target/riscv/rvv/base/vmv_v_x_rv64-2.C: New test.\n\t* g++.target/riscv/rvv/base/vmv_v_x_rv64-3.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x-1.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x-2.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x-3.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x_mu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x_mu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x_mu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x_tum-1.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x_tum-2.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x_tum-3.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x_tumu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x_tumu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vncvt_x_tumu-3.C: New test.", "tree": {"sha": "ede1311a423af8ed6010a432b2d5bd698f19e672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ede1311a423af8ed6010a432b2d5bd698f19e672"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a1c81afd551ac66b6cb8011a2168ddcd7887576", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a1c81afd551ac66b6cb8011a2168ddcd7887576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a1c81afd551ac66b6cb8011a2168ddcd7887576", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a1c81afd551ac66b6cb8011a2168ddcd7887576/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "484ea18ffae0ffe48c054f7a975eeb183abcfc61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/484ea18ffae0ffe48c054f7a975eeb183abcfc61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/484ea18ffae0ffe48c054f7a975eeb183abcfc61"}], "stats": {"total": 6127, "additions": 6127, "deletions": 0}, "files": [{"sha": "fcda5352b63b9ee1a8233d6af7c1fb4120549fba", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmv_v-1.C", "status": "added", "additions": 392, "deletions": 0, "changes": 392, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v-1.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,392 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test_vmv_v_v_i8mf8_tu(vint8mf8_t maskedoff, vint8mf8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8mf8_t test_vmv_v_x_i8mf8_tu(vint8mf8_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8mf4_t test_vmv_v_v_i8mf4_tu(vint8mf4_t maskedoff, vint8mf4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8mf4_t test_vmv_v_x_i8mf4_tu(vint8mf4_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8mf2_t test_vmv_v_v_i8mf2_tu(vint8mf2_t maskedoff, vint8mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8mf2_t test_vmv_v_x_i8mf2_tu(vint8mf2_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m1_t test_vmv_v_v_i8m1_tu(vint8m1_t maskedoff, vint8m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m1_t test_vmv_v_x_i8m1_tu(vint8m1_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m2_t test_vmv_v_v_i8m2_tu(vint8m2_t maskedoff, vint8m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m2_t test_vmv_v_x_i8m2_tu(vint8m2_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m4_t test_vmv_v_v_i8m4_tu(vint8m4_t maskedoff, vint8m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m4_t test_vmv_v_x_i8m4_tu(vint8m4_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m8_t test_vmv_v_v_i8m8_tu(vint8m8_t maskedoff, vint8m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m8_t test_vmv_v_x_i8m8_tu(vint8m8_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16mf4_t test_vmv_v_v_i16mf4_tu(vint16mf4_t maskedoff, vint16mf4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16mf4_t test_vmv_v_x_i16mf4_tu(vint16mf4_t maskedoff, int16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16mf2_t test_vmv_v_v_i16mf2_tu(vint16mf2_t maskedoff, vint16mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16mf2_t test_vmv_v_x_i16mf2_tu(vint16mf2_t maskedoff, int16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m1_t test_vmv_v_v_i16m1_tu(vint16m1_t maskedoff, vint16m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m1_t test_vmv_v_x_i16m1_tu(vint16m1_t maskedoff, int16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m2_t test_vmv_v_v_i16m2_tu(vint16m2_t maskedoff, vint16m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m2_t test_vmv_v_x_i16m2_tu(vint16m2_t maskedoff, int16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m4_t test_vmv_v_v_i16m4_tu(vint16m4_t maskedoff, vint16m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m4_t test_vmv_v_x_i16m4_tu(vint16m4_t maskedoff, int16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m8_t test_vmv_v_v_i16m8_tu(vint16m8_t maskedoff, vint16m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m8_t test_vmv_v_x_i16m8_tu(vint16m8_t maskedoff, int16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32mf2_t test_vmv_v_v_i32mf2_tu(vint32mf2_t maskedoff, vint32mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32mf2_t test_vmv_v_x_i32mf2_tu(vint32mf2_t maskedoff, int32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m1_t test_vmv_v_v_i32m1_tu(vint32m1_t maskedoff, vint32m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m1_t test_vmv_v_x_i32m1_tu(vint32m1_t maskedoff, int32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m2_t test_vmv_v_v_i32m2_tu(vint32m2_t maskedoff, vint32m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m2_t test_vmv_v_x_i32m2_tu(vint32m2_t maskedoff, int32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m4_t test_vmv_v_v_i32m4_tu(vint32m4_t maskedoff, vint32m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m4_t test_vmv_v_x_i32m4_tu(vint32m4_t maskedoff, int32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m8_t test_vmv_v_v_i32m8_tu(vint32m8_t maskedoff, vint32m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m8_t test_vmv_v_x_i32m8_tu(vint32m8_t maskedoff, int32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m1_t test_vmv_v_v_i64m1_tu(vint64m1_t maskedoff, vint64m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m1_t test_vmv_v_x_i64m1_tu(vint64m1_t maskedoff, int64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m2_t test_vmv_v_v_i64m2_tu(vint64m2_t maskedoff, vint64m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m2_t test_vmv_v_x_i64m2_tu(vint64m2_t maskedoff, int64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m4_t test_vmv_v_v_i64m4_tu(vint64m4_t maskedoff, vint64m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m4_t test_vmv_v_x_i64m4_tu(vint64m4_t maskedoff, int64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m8_t test_vmv_v_v_i64m8_tu(vint64m8_t maskedoff, vint64m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m8_t test_vmv_v_x_i64m8_tu(vint64m8_t maskedoff, int64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8mf8_t test_vmv_v_v_u8mf8_tu(vuint8mf8_t maskedoff, vuint8mf8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8mf8_t test_vmv_v_x_u8mf8_tu(vuint8mf8_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8mf4_t test_vmv_v_v_u8mf4_tu(vuint8mf4_t maskedoff, vuint8mf4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8mf4_t test_vmv_v_x_u8mf4_tu(vuint8mf4_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8mf2_t test_vmv_v_v_u8mf2_tu(vuint8mf2_t maskedoff, vuint8mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8mf2_t test_vmv_v_x_u8mf2_tu(vuint8mf2_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m1_t test_vmv_v_v_u8m1_tu(vuint8m1_t maskedoff, vuint8m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m1_t test_vmv_v_x_u8m1_tu(vuint8m1_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m2_t test_vmv_v_v_u8m2_tu(vuint8m2_t maskedoff, vuint8m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m2_t test_vmv_v_x_u8m2_tu(vuint8m2_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m4_t test_vmv_v_v_u8m4_tu(vuint8m4_t maskedoff, vuint8m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m4_t test_vmv_v_x_u8m4_tu(vuint8m4_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m8_t test_vmv_v_v_u8m8_tu(vuint8m8_t maskedoff, vuint8m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m8_t test_vmv_v_x_u8m8_tu(vuint8m8_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16mf4_t test_vmv_v_v_u16mf4_tu(vuint16mf4_t maskedoff, vuint16mf4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16mf4_t test_vmv_v_x_u16mf4_tu(vuint16mf4_t maskedoff, uint16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16mf2_t test_vmv_v_v_u16mf2_tu(vuint16mf2_t maskedoff, vuint16mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16mf2_t test_vmv_v_x_u16mf2_tu(vuint16mf2_t maskedoff, uint16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m1_t test_vmv_v_v_u16m1_tu(vuint16m1_t maskedoff, vuint16m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m1_t test_vmv_v_x_u16m1_tu(vuint16m1_t maskedoff, uint16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m2_t test_vmv_v_v_u16m2_tu(vuint16m2_t maskedoff, vuint16m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m2_t test_vmv_v_x_u16m2_tu(vuint16m2_t maskedoff, uint16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m4_t test_vmv_v_v_u16m4_tu(vuint16m4_t maskedoff, vuint16m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m4_t test_vmv_v_x_u16m4_tu(vuint16m4_t maskedoff, uint16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m8_t test_vmv_v_v_u16m8_tu(vuint16m8_t maskedoff, vuint16m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m8_t test_vmv_v_x_u16m8_tu(vuint16m8_t maskedoff, uint16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32mf2_t test_vmv_v_v_u32mf2_tu(vuint32mf2_t maskedoff, vuint32mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32mf2_t test_vmv_v_x_u32mf2_tu(vuint32mf2_t maskedoff, uint32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m1_t test_vmv_v_v_u32m1_tu(vuint32m1_t maskedoff, vuint32m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m1_t test_vmv_v_x_u32m1_tu(vuint32m1_t maskedoff, uint32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m2_t test_vmv_v_v_u32m2_tu(vuint32m2_t maskedoff, vuint32m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m2_t test_vmv_v_x_u32m2_tu(vuint32m2_t maskedoff, uint32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m4_t test_vmv_v_v_u32m4_tu(vuint32m4_t maskedoff, vuint32m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m4_t test_vmv_v_x_u32m4_tu(vuint32m4_t maskedoff, uint32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m8_t test_vmv_v_v_u32m8_tu(vuint32m8_t maskedoff, vuint32m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m8_t test_vmv_v_x_u32m8_tu(vuint32m8_t maskedoff, uint32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m1_t test_vmv_v_v_u64m1_tu(vuint64m1_t maskedoff, vuint64m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m1_t test_vmv_v_x_u64m1_tu(vuint64m1_t maskedoff, uint64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m2_t test_vmv_v_v_u64m2_tu(vuint64m2_t maskedoff, vuint64m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m2_t test_vmv_v_x_u64m2_tu(vuint64m2_t maskedoff, uint64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m4_t test_vmv_v_v_u64m4_tu(vuint64m4_t maskedoff, vuint64m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m4_t test_vmv_v_x_u64m4_tu(vuint64m4_t maskedoff, uint64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m8_t test_vmv_v_v_u64m8_tu(vuint64m8_t maskedoff, vuint64m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m8_t test_vmv_v_x_u64m8_tu(vuint64m8_t maskedoff, uint64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat32mf2_t test_vmv_v_v_f32mf2_tu(vfloat32mf2_t maskedoff, vfloat32mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat32m1_t test_vmv_v_v_f32m1_tu(vfloat32m1_t maskedoff, vfloat32m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat32m2_t test_vmv_v_v_f32m2_tu(vfloat32m2_t maskedoff, vfloat32m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat32m4_t test_vmv_v_v_f32m4_tu(vfloat32m4_t maskedoff, vfloat32m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat32m8_t test_vmv_v_v_f32m8_tu(vfloat32m8_t maskedoff, vfloat32m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat64m1_t test_vmv_v_v_f64m1_tu(vfloat64m1_t maskedoff, vfloat64m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat64m2_t test_vmv_v_v_f64m2_tu(vfloat64m2_t maskedoff, vfloat64m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat64m4_t test_vmv_v_v_f64m4_tu(vfloat64m4_t maskedoff, vfloat64m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat64m8_t test_vmv_v_v_f64m8_tu(vfloat64m8_t maskedoff, vfloat64m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}"}, {"sha": "fcda5352b63b9ee1a8233d6af7c1fb4120549fba", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmv_v_tu-1.C", "status": "added", "additions": 392, "deletions": 0, "changes": 392, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_tu-1.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,392 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test_vmv_v_v_i8mf8_tu(vint8mf8_t maskedoff, vint8mf8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8mf8_t test_vmv_v_x_i8mf8_tu(vint8mf8_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8mf4_t test_vmv_v_v_i8mf4_tu(vint8mf4_t maskedoff, vint8mf4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8mf4_t test_vmv_v_x_i8mf4_tu(vint8mf4_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8mf2_t test_vmv_v_v_i8mf2_tu(vint8mf2_t maskedoff, vint8mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8mf2_t test_vmv_v_x_i8mf2_tu(vint8mf2_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m1_t test_vmv_v_v_i8m1_tu(vint8m1_t maskedoff, vint8m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m1_t test_vmv_v_x_i8m1_tu(vint8m1_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m2_t test_vmv_v_v_i8m2_tu(vint8m2_t maskedoff, vint8m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m2_t test_vmv_v_x_i8m2_tu(vint8m2_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m4_t test_vmv_v_v_i8m4_tu(vint8m4_t maskedoff, vint8m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m4_t test_vmv_v_x_i8m4_tu(vint8m4_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m8_t test_vmv_v_v_i8m8_tu(vint8m8_t maskedoff, vint8m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint8m8_t test_vmv_v_x_i8m8_tu(vint8m8_t maskedoff, int8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16mf4_t test_vmv_v_v_i16mf4_tu(vint16mf4_t maskedoff, vint16mf4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16mf4_t test_vmv_v_x_i16mf4_tu(vint16mf4_t maskedoff, int16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16mf2_t test_vmv_v_v_i16mf2_tu(vint16mf2_t maskedoff, vint16mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16mf2_t test_vmv_v_x_i16mf2_tu(vint16mf2_t maskedoff, int16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m1_t test_vmv_v_v_i16m1_tu(vint16m1_t maskedoff, vint16m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m1_t test_vmv_v_x_i16m1_tu(vint16m1_t maskedoff, int16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m2_t test_vmv_v_v_i16m2_tu(vint16m2_t maskedoff, vint16m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m2_t test_vmv_v_x_i16m2_tu(vint16m2_t maskedoff, int16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m4_t test_vmv_v_v_i16m4_tu(vint16m4_t maskedoff, vint16m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m4_t test_vmv_v_x_i16m4_tu(vint16m4_t maskedoff, int16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m8_t test_vmv_v_v_i16m8_tu(vint16m8_t maskedoff, vint16m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint16m8_t test_vmv_v_x_i16m8_tu(vint16m8_t maskedoff, int16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32mf2_t test_vmv_v_v_i32mf2_tu(vint32mf2_t maskedoff, vint32mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32mf2_t test_vmv_v_x_i32mf2_tu(vint32mf2_t maskedoff, int32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m1_t test_vmv_v_v_i32m1_tu(vint32m1_t maskedoff, vint32m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m1_t test_vmv_v_x_i32m1_tu(vint32m1_t maskedoff, int32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m2_t test_vmv_v_v_i32m2_tu(vint32m2_t maskedoff, vint32m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m2_t test_vmv_v_x_i32m2_tu(vint32m2_t maskedoff, int32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m4_t test_vmv_v_v_i32m4_tu(vint32m4_t maskedoff, vint32m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m4_t test_vmv_v_x_i32m4_tu(vint32m4_t maskedoff, int32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m8_t test_vmv_v_v_i32m8_tu(vint32m8_t maskedoff, vint32m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint32m8_t test_vmv_v_x_i32m8_tu(vint32m8_t maskedoff, int32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m1_t test_vmv_v_v_i64m1_tu(vint64m1_t maskedoff, vint64m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m1_t test_vmv_v_x_i64m1_tu(vint64m1_t maskedoff, int64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m2_t test_vmv_v_v_i64m2_tu(vint64m2_t maskedoff, vint64m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m2_t test_vmv_v_x_i64m2_tu(vint64m2_t maskedoff, int64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m4_t test_vmv_v_v_i64m4_tu(vint64m4_t maskedoff, vint64m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m4_t test_vmv_v_x_i64m4_tu(vint64m4_t maskedoff, int64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m8_t test_vmv_v_v_i64m8_tu(vint64m8_t maskedoff, vint64m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vint64m8_t test_vmv_v_x_i64m8_tu(vint64m8_t maskedoff, int64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8mf8_t test_vmv_v_v_u8mf8_tu(vuint8mf8_t maskedoff, vuint8mf8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8mf8_t test_vmv_v_x_u8mf8_tu(vuint8mf8_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8mf4_t test_vmv_v_v_u8mf4_tu(vuint8mf4_t maskedoff, vuint8mf4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8mf4_t test_vmv_v_x_u8mf4_tu(vuint8mf4_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8mf2_t test_vmv_v_v_u8mf2_tu(vuint8mf2_t maskedoff, vuint8mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8mf2_t test_vmv_v_x_u8mf2_tu(vuint8mf2_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m1_t test_vmv_v_v_u8m1_tu(vuint8m1_t maskedoff, vuint8m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m1_t test_vmv_v_x_u8m1_tu(vuint8m1_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m2_t test_vmv_v_v_u8m2_tu(vuint8m2_t maskedoff, vuint8m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m2_t test_vmv_v_x_u8m2_tu(vuint8m2_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m4_t test_vmv_v_v_u8m4_tu(vuint8m4_t maskedoff, vuint8m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m4_t test_vmv_v_x_u8m4_tu(vuint8m4_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m8_t test_vmv_v_v_u8m8_tu(vuint8m8_t maskedoff, vuint8m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint8m8_t test_vmv_v_x_u8m8_tu(vuint8m8_t maskedoff, uint8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16mf4_t test_vmv_v_v_u16mf4_tu(vuint16mf4_t maskedoff, vuint16mf4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16mf4_t test_vmv_v_x_u16mf4_tu(vuint16mf4_t maskedoff, uint16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16mf2_t test_vmv_v_v_u16mf2_tu(vuint16mf2_t maskedoff, vuint16mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16mf2_t test_vmv_v_x_u16mf2_tu(vuint16mf2_t maskedoff, uint16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m1_t test_vmv_v_v_u16m1_tu(vuint16m1_t maskedoff, vuint16m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m1_t test_vmv_v_x_u16m1_tu(vuint16m1_t maskedoff, uint16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m2_t test_vmv_v_v_u16m2_tu(vuint16m2_t maskedoff, vuint16m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m2_t test_vmv_v_x_u16m2_tu(vuint16m2_t maskedoff, uint16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m4_t test_vmv_v_v_u16m4_tu(vuint16m4_t maskedoff, vuint16m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m4_t test_vmv_v_x_u16m4_tu(vuint16m4_t maskedoff, uint16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m8_t test_vmv_v_v_u16m8_tu(vuint16m8_t maskedoff, vuint16m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint16m8_t test_vmv_v_x_u16m8_tu(vuint16m8_t maskedoff, uint16_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32mf2_t test_vmv_v_v_u32mf2_tu(vuint32mf2_t maskedoff, vuint32mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32mf2_t test_vmv_v_x_u32mf2_tu(vuint32mf2_t maskedoff, uint32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m1_t test_vmv_v_v_u32m1_tu(vuint32m1_t maskedoff, vuint32m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m1_t test_vmv_v_x_u32m1_tu(vuint32m1_t maskedoff, uint32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m2_t test_vmv_v_v_u32m2_tu(vuint32m2_t maskedoff, vuint32m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m2_t test_vmv_v_x_u32m2_tu(vuint32m2_t maskedoff, uint32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m4_t test_vmv_v_v_u32m4_tu(vuint32m4_t maskedoff, vuint32m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m4_t test_vmv_v_x_u32m4_tu(vuint32m4_t maskedoff, uint32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m8_t test_vmv_v_v_u32m8_tu(vuint32m8_t maskedoff, vuint32m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint32m8_t test_vmv_v_x_u32m8_tu(vuint32m8_t maskedoff, uint32_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m1_t test_vmv_v_v_u64m1_tu(vuint64m1_t maskedoff, vuint64m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m1_t test_vmv_v_x_u64m1_tu(vuint64m1_t maskedoff, uint64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m2_t test_vmv_v_v_u64m2_tu(vuint64m2_t maskedoff, vuint64m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m2_t test_vmv_v_x_u64m2_tu(vuint64m2_t maskedoff, uint64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m4_t test_vmv_v_v_u64m4_tu(vuint64m4_t maskedoff, vuint64m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m4_t test_vmv_v_x_u64m4_tu(vuint64m4_t maskedoff, uint64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m8_t test_vmv_v_v_u64m8_tu(vuint64m8_t maskedoff, vuint64m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vuint64m8_t test_vmv_v_x_u64m8_tu(vuint64m8_t maskedoff, uint64_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat32mf2_t test_vmv_v_v_f32mf2_tu(vfloat32mf2_t maskedoff, vfloat32mf2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat32m1_t test_vmv_v_v_f32m1_tu(vfloat32m1_t maskedoff, vfloat32m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat32m2_t test_vmv_v_v_f32m2_tu(vfloat32m2_t maskedoff, vfloat32m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat32m4_t test_vmv_v_v_f32m4_tu(vfloat32m4_t maskedoff, vfloat32m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat32m8_t test_vmv_v_v_f32m8_tu(vfloat32m8_t maskedoff, vfloat32m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat64m1_t test_vmv_v_v_f64m1_tu(vfloat64m1_t maskedoff, vfloat64m1_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat64m2_t test_vmv_v_v_f64m2_tu(vfloat64m2_t maskedoff, vfloat64m2_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat64m4_t test_vmv_v_v_f64m4_tu(vfloat64m4_t maskedoff, vfloat64m4_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}\n+\n+vfloat64m8_t test_vmv_v_v_f64m8_tu(vfloat64m8_t maskedoff, vfloat64m8_t src, size_t vl) {\n+  return __riscv_vmv_v_tu(maskedoff, src, vl);\n+}"}, {"sha": "ce582491948d777eeb839961a20b2f201163bc94", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmv_v_x_rv32-1.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-1.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8(src,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4(src,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2(src,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1(src,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2(src,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4(src,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8(src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4(src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2(src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1(src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2(src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4(src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8(src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2(src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1(src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2(src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4(src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8(src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1(src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2(src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4(src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8(src,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8(src,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4(src,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2(src,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1(src,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2(src,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4(src,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8(src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4(src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2(src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1(src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2(src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4(src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8(src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2(src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1(src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2(src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4(src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8(src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1(src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2(src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4(src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8(src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vlse} 8 } } */"}, {"sha": "36b017be04d9eafb89f3787ff85d9e4f3c4fd1c1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmv_v_x_rv32-2.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-2.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8(src,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4(src,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2(src,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1(src,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2(src,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4(src,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8(src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4(src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2(src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1(src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2(src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4(src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8(src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2(src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1(src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2(src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4(src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8(src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1(src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2(src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4(src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8(src,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8(src,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4(src,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2(src,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1(src,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2(src,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4(src,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8(src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4(src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2(src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1(src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2(src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4(src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8(src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2(src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1(src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2(src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4(src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8(src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1(src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2(src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4(src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8(src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vlse} 8 } } */"}, {"sha": "aa3d76fd3bd830fc84845e898bfc8cc9cc2d071c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmv_v_x_rv32-3.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-3.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8(src,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4(src,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2(src,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1(src,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2(src,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4(src,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8(src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4(src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2(src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1(src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2(src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4(src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8(src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2(src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1(src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2(src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4(src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8(src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1(src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2(src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4(src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8(src,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8(src,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4(src,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2(src,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1(src,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2(src,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4(src,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8(src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4(src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2(src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1(src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2(src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4(src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8(src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2(src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1(src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2(src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4(src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8(src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1(src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2(src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4(src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8(src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vlse} 8 } } */"}, {"sha": "bbfe50de52b4d3c5e1941f03069477b8bf151efa", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmv_v_x_rv64-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-1.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8(src,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4(src,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2(src,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1(src,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2(src,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4(src,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8(src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4(src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2(src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1(src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2(src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4(src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8(src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2(src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1(src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2(src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4(src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8(src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1(src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2(src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4(src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8(src,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8(src,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4(src,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2(src,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1(src,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2(src,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4(src,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8(src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4(src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2(src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1(src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2(src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4(src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8(src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2(src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1(src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2(src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4(src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8(src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1(src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2(src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4(src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8(src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */"}, {"sha": "1fd2084dfc8db9fd41118e419e1876e1fb99a85d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmv_v_x_rv64-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-2.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8(src,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4(src,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2(src,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1(src,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2(src,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4(src,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8(src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4(src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2(src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1(src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2(src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4(src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8(src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2(src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1(src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2(src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4(src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8(src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1(src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2(src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4(src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8(src,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8(src,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4(src,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2(src,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1(src,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2(src,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4(src,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8(src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4(src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2(src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1(src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2(src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4(src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8(src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2(src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1(src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2(src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4(src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8(src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1(src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2(src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4(src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8(src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */"}, {"sha": "cc68b2936e17f182859558010b3d06ca9070b2a4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmv_v_x_rv64-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-3.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8(src,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4(src,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2(src,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1(src,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2(src,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4(src,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8(src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4(src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2(src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1(src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2(src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4(src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8(src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2(src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1(src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2(src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4(src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8(src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1(src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2(src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4(src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8(src,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8(src,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4(src,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2(src,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1(src,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2(src,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4(src,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8(src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4(src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2(src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1(src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2(src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4(src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8(src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2(src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1(src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2(src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4(src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8(src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1(src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2(src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4(src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8(src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */"}, {"sha": "993293cc8d0308c34982f51ca505025abc537a1c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x-1.C", "status": "added", "additions": 396, "deletions": 0, "changes": 396, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x-1.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,396 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x(vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x(vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x(vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x(vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x(vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x(vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x(vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x(vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x(vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x(vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x(vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x(vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x(vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x(vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x(vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x(vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x(vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x(vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x(vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x(vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x(vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x(vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x(vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x(vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x(vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x(vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x(vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x(vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x(vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x(vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,vl);\n+}\n+\n+\n+vint8mf8_t test___riscv_vncvt_x(vbool64_t mask,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x(vbool32_t mask,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x(vbool16_t mask,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x(vbool8_t mask,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x(vbool4_t mask,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x(vbool2_t mask,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x(vbool64_t mask,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x(vbool32_t mask,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x(vbool16_t mask,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x(vbool8_t mask,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x(vbool4_t mask,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x(vbool2_t mask,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x(vbool64_t mask,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x(vbool32_t mask,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x(vbool16_t mask,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x(vbool8_t mask,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x(vbool4_t mask,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x(vbool64_t mask,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x(vbool32_t mask,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x(vbool16_t mask,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x(vbool8_t mask,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x(vbool4_t mask,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x(vbool64_t mask,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x(vbool32_t mask,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x(vbool16_t mask,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x(vbool8_t mask,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x(vbool64_t mask,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x(vbool32_t mask,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x(vbool16_t mask,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x(vbool8_t mask,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "0e5030715b9ad62ff6cb71eb2b2d763dc2ea6807", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x-2.C", "status": "added", "additions": 396, "deletions": 0, "changes": 396, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x-2.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,396 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x(vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x(vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x(vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x(vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x(vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x(vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x(vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x(vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x(vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x(vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x(vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x(vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x(vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x(vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x(vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x(vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x(vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x(vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x(vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x(vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x(vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x(vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x(vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x(vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x(vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x(vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x(vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x(vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x(vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x(vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,31);\n+}\n+\n+\n+vint8mf8_t test___riscv_vncvt_x(vbool64_t mask,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x(vbool32_t mask,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x(vbool16_t mask,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x(vbool8_t mask,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x(vbool4_t mask,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x(vbool2_t mask,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x(vbool64_t mask,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x(vbool32_t mask,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x(vbool16_t mask,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x(vbool8_t mask,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x(vbool4_t mask,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x(vbool2_t mask,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x(vbool64_t mask,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x(vbool32_t mask,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x(vbool16_t mask,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x(vbool8_t mask,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x(vbool4_t mask,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x(vbool64_t mask,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x(vbool32_t mask,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x(vbool16_t mask,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x(vbool8_t mask,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x(vbool4_t mask,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x(vbool64_t mask,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x(vbool32_t mask,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x(vbool16_t mask,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x(vbool8_t mask,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x(vbool64_t mask,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x(vbool32_t mask,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x(vbool16_t mask,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x(vbool8_t mask,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "3706dbff82f11a0d5c9f7e11731a72284afcaf70", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x-3.C", "status": "added", "additions": 396, "deletions": 0, "changes": 396, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x-3.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,396 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x(vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x(vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x(vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x(vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x(vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x(vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x(vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x(vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x(vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x(vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x(vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x(vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x(vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x(vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x(vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x(vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x(vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x(vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x(vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x(vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x(vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x(vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x(vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x(vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x(vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x(vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x(vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x(vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x(vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x(vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(src,32);\n+}\n+\n+\n+vint8mf8_t test___riscv_vncvt_x(vbool64_t mask,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x(vbool32_t mask,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x(vbool16_t mask,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x(vbool8_t mask,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x(vbool4_t mask,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x(vbool2_t mask,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x(vbool64_t mask,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x(vbool32_t mask,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x(vbool16_t mask,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x(vbool8_t mask,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x(vbool4_t mask,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x(vbool2_t mask,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x(vbool64_t mask,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x(vbool32_t mask,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x(vbool16_t mask,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x(vbool8_t mask,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x(vbool4_t mask,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x(vbool64_t mask,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x(vbool32_t mask,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x(vbool16_t mask,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x(vbool8_t mask,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x(vbool4_t mask,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x(vbool64_t mask,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x(vbool32_t mask,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x(vbool16_t mask,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x(vbool8_t mask,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x(vbool64_t mask,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x(vbool32_t mask,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x(vbool16_t mask,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x(vbool8_t mask,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x(mask,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "1b2b942a45c37bf7b9512905b296bd5f9c3f3bfd", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x_mu-1.C", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_mu-1.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,201 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x_mu(vbool64_t mask,vint8mf8_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x_mu(vbool32_t mask,vint8mf4_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x_mu(vbool16_t mask,vint8mf2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x_mu(vbool8_t mask,vint8m1_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x_mu(vbool4_t mask,vint8m2_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x_mu(vbool2_t mask,vint8m4_t merge,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x_mu(vbool64_t mask,vuint8mf8_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x_mu(vbool32_t mask,vuint8mf4_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x_mu(vbool16_t mask,vuint8mf2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x_mu(vbool8_t mask,vuint8m1_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x_mu(vbool4_t mask,vuint8m2_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x_mu(vbool2_t mask,vuint8m4_t merge,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x_mu(vbool64_t mask,vint16mf4_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x_mu(vbool32_t mask,vint16mf2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x_mu(vbool16_t mask,vint16m1_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x_mu(vbool8_t mask,vint16m2_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x_mu(vbool4_t mask,vint16m4_t merge,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x_mu(vbool64_t mask,vuint16mf4_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x_mu(vbool32_t mask,vuint16mf2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x_mu(vbool16_t mask,vuint16m1_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x_mu(vbool8_t mask,vuint16m2_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x_mu(vbool4_t mask,vuint16m4_t merge,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x_mu(vbool64_t mask,vint32mf2_t merge,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x_mu(vbool32_t mask,vint32m1_t merge,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x_mu(vbool16_t mask,vint32m2_t merge,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x_mu(vbool8_t mask,vint32m4_t merge,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x_mu(vbool64_t mask,vuint32mf2_t merge,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x_mu(vbool32_t mask,vuint32m1_t merge,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x_mu(vbool16_t mask,vuint32m2_t merge,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x_mu(vbool8_t mask,vuint32m4_t merge,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "b6845860ea9e330572b731e3bc1f6f34fb0fdbac", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x_mu-2.C", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_mu-2.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,201 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x_mu(vbool64_t mask,vint8mf8_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x_mu(vbool32_t mask,vint8mf4_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x_mu(vbool16_t mask,vint8mf2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x_mu(vbool8_t mask,vint8m1_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x_mu(vbool4_t mask,vint8m2_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x_mu(vbool2_t mask,vint8m4_t merge,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x_mu(vbool64_t mask,vuint8mf8_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x_mu(vbool32_t mask,vuint8mf4_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x_mu(vbool16_t mask,vuint8mf2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x_mu(vbool8_t mask,vuint8m1_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x_mu(vbool4_t mask,vuint8m2_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x_mu(vbool2_t mask,vuint8m4_t merge,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x_mu(vbool64_t mask,vint16mf4_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x_mu(vbool32_t mask,vint16mf2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x_mu(vbool16_t mask,vint16m1_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x_mu(vbool8_t mask,vint16m2_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x_mu(vbool4_t mask,vint16m4_t merge,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x_mu(vbool64_t mask,vuint16mf4_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x_mu(vbool32_t mask,vuint16mf2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x_mu(vbool16_t mask,vuint16m1_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x_mu(vbool8_t mask,vuint16m2_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x_mu(vbool4_t mask,vuint16m4_t merge,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x_mu(vbool64_t mask,vint32mf2_t merge,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x_mu(vbool32_t mask,vint32m1_t merge,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x_mu(vbool16_t mask,vint32m2_t merge,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x_mu(vbool8_t mask,vint32m4_t merge,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x_mu(vbool64_t mask,vuint32mf2_t merge,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x_mu(vbool32_t mask,vuint32m1_t merge,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x_mu(vbool16_t mask,vuint32m2_t merge,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x_mu(vbool8_t mask,vuint32m4_t merge,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "64c6c84278b8b62a44ded10c6a608209fd711dd6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x_mu-3.C", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_mu-3.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,201 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x_mu(vbool64_t mask,vint8mf8_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x_mu(vbool32_t mask,vint8mf4_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x_mu(vbool16_t mask,vint8mf2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x_mu(vbool8_t mask,vint8m1_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x_mu(vbool4_t mask,vint8m2_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x_mu(vbool2_t mask,vint8m4_t merge,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x_mu(vbool64_t mask,vuint8mf8_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x_mu(vbool32_t mask,vuint8mf4_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x_mu(vbool16_t mask,vuint8mf2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x_mu(vbool8_t mask,vuint8m1_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x_mu(vbool4_t mask,vuint8m2_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x_mu(vbool2_t mask,vuint8m4_t merge,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x_mu(vbool64_t mask,vint16mf4_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x_mu(vbool32_t mask,vint16mf2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x_mu(vbool16_t mask,vint16m1_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x_mu(vbool8_t mask,vint16m2_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x_mu(vbool4_t mask,vint16m4_t merge,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x_mu(vbool64_t mask,vuint16mf4_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x_mu(vbool32_t mask,vuint16mf2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x_mu(vbool16_t mask,vuint16m1_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x_mu(vbool8_t mask,vuint16m2_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x_mu(vbool4_t mask,vuint16m4_t merge,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x_mu(vbool64_t mask,vint32mf2_t merge,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x_mu(vbool32_t mask,vint32m1_t merge,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x_mu(vbool16_t mask,vint32m2_t merge,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x_mu(vbool8_t mask,vint32m4_t merge,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x_mu(vbool64_t mask,vuint32mf2_t merge,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x_mu(vbool32_t mask,vuint32m1_t merge,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x_mu(vbool16_t mask,vuint32m2_t merge,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x_mu(vbool8_t mask,vuint32m4_t merge,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "cb075fa3ed422d6241f71dd44169ab3ce843cdd4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x_tu-1.C", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tu-1.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,201 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x_tu(vint8mf8_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x_tu(vint8mf4_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x_tu(vint8mf2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x_tu(vint8m1_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x_tu(vint8m2_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x_tu(vint8m4_t merge,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x_tu(vuint8mf8_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x_tu(vuint8mf4_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x_tu(vuint8mf2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x_tu(vuint8m1_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x_tu(vuint8m2_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x_tu(vuint8m4_t merge,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x_tu(vint16mf4_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x_tu(vint16mf2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x_tu(vint16m1_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x_tu(vint16m2_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x_tu(vint16m4_t merge,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x_tu(vuint16mf4_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x_tu(vuint16mf2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x_tu(vuint16m1_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x_tu(vuint16m2_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x_tu(vuint16m4_t merge,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x_tu(vint32mf2_t merge,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x_tu(vint32m1_t merge,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x_tu(vint32m2_t merge,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x_tu(vint32m4_t merge,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x_tu(vuint32mf2_t merge,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x_tu(vuint32m1_t merge,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x_tu(vuint32m2_t merge,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x_tu(vuint32m4_t merge,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "d55bdd20eb2ad038a2d4c55a2dd6ab29eb511692", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x_tu-2.C", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tu-2.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,201 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x_tu(vint8mf8_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x_tu(vint8mf4_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x_tu(vint8mf2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x_tu(vint8m1_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x_tu(vint8m2_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x_tu(vint8m4_t merge,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x_tu(vuint8mf8_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x_tu(vuint8mf4_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x_tu(vuint8mf2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x_tu(vuint8m1_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x_tu(vuint8m2_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x_tu(vuint8m4_t merge,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x_tu(vint16mf4_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x_tu(vint16mf2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x_tu(vint16m1_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x_tu(vint16m2_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x_tu(vint16m4_t merge,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x_tu(vuint16mf4_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x_tu(vuint16mf2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x_tu(vuint16m1_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x_tu(vuint16m2_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x_tu(vuint16m4_t merge,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x_tu(vint32mf2_t merge,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x_tu(vint32m1_t merge,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x_tu(vint32m2_t merge,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x_tu(vint32m4_t merge,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x_tu(vuint32mf2_t merge,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x_tu(vuint32m1_t merge,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x_tu(vuint32m2_t merge,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x_tu(vuint32m4_t merge,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "522052cdcdb1e303ce7f36eca9ed2095e35fdf9c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x_tu-3.C", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tu-3.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,201 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x_tu(vint8mf8_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x_tu(vint8mf4_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x_tu(vint8mf2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x_tu(vint8m1_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x_tu(vint8m2_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x_tu(vint8m4_t merge,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x_tu(vuint8mf8_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x_tu(vuint8mf4_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x_tu(vuint8mf2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x_tu(vuint8m1_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x_tu(vuint8m2_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x_tu(vuint8m4_t merge,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x_tu(vint16mf4_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x_tu(vint16mf2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x_tu(vint16m1_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x_tu(vint16m2_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x_tu(vint16m4_t merge,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x_tu(vuint16mf4_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x_tu(vuint16mf2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x_tu(vuint16m1_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x_tu(vuint16m2_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x_tu(vuint16m4_t merge,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x_tu(vint32mf2_t merge,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x_tu(vint32m1_t merge,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x_tu(vint32m2_t merge,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x_tu(vint32m4_t merge,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x_tu(vuint32mf2_t merge,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x_tu(vuint32m1_t merge,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x_tu(vuint32m2_t merge,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x_tu(vuint32m4_t merge,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tu(merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "8140224966f1c8249e6a61f8c8cd0f71298f3cf3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x_tum-1.C", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tum-1.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,201 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x_tum(vbool64_t mask,vint8mf8_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x_tum(vbool32_t mask,vint8mf4_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x_tum(vbool16_t mask,vint8mf2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x_tum(vbool8_t mask,vint8m1_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x_tum(vbool4_t mask,vint8m2_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x_tum(vbool2_t mask,vint8m4_t merge,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x_tum(vbool64_t mask,vuint8mf8_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x_tum(vbool32_t mask,vuint8mf4_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x_tum(vbool16_t mask,vuint8mf2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x_tum(vbool8_t mask,vuint8m1_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x_tum(vbool4_t mask,vuint8m2_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x_tum(vbool2_t mask,vuint8m4_t merge,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x_tum(vbool64_t mask,vint16mf4_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x_tum(vbool32_t mask,vint16mf2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x_tum(vbool16_t mask,vint16m1_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x_tum(vbool8_t mask,vint16m2_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x_tum(vbool4_t mask,vint16m4_t merge,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x_tum(vbool64_t mask,vuint16mf4_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x_tum(vbool32_t mask,vuint16mf2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x_tum(vbool16_t mask,vuint16m1_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x_tum(vbool8_t mask,vuint16m2_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x_tum(vbool4_t mask,vuint16m4_t merge,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x_tum(vbool64_t mask,vint32mf2_t merge,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x_tum(vbool32_t mask,vint32m1_t merge,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x_tum(vbool16_t mask,vint32m2_t merge,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x_tum(vbool8_t mask,vint32m4_t merge,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x_tum(vbool64_t mask,vuint32mf2_t merge,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x_tum(vbool32_t mask,vuint32m1_t merge,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x_tum(vbool16_t mask,vuint32m2_t merge,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x_tum(vbool8_t mask,vuint32m4_t merge,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "83cbbeeef1d3f7fdbb2f6f0082ac34b2bade2bae", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x_tum-2.C", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tum-2.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,201 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x_tum(vbool64_t mask,vint8mf8_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x_tum(vbool32_t mask,vint8mf4_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x_tum(vbool16_t mask,vint8mf2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x_tum(vbool8_t mask,vint8m1_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x_tum(vbool4_t mask,vint8m2_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x_tum(vbool2_t mask,vint8m4_t merge,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x_tum(vbool64_t mask,vuint8mf8_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x_tum(vbool32_t mask,vuint8mf4_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x_tum(vbool16_t mask,vuint8mf2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x_tum(vbool8_t mask,vuint8m1_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x_tum(vbool4_t mask,vuint8m2_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x_tum(vbool2_t mask,vuint8m4_t merge,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x_tum(vbool64_t mask,vint16mf4_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x_tum(vbool32_t mask,vint16mf2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x_tum(vbool16_t mask,vint16m1_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x_tum(vbool8_t mask,vint16m2_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x_tum(vbool4_t mask,vint16m4_t merge,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x_tum(vbool64_t mask,vuint16mf4_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x_tum(vbool32_t mask,vuint16mf2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x_tum(vbool16_t mask,vuint16m1_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x_tum(vbool8_t mask,vuint16m2_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x_tum(vbool4_t mask,vuint16m4_t merge,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x_tum(vbool64_t mask,vint32mf2_t merge,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x_tum(vbool32_t mask,vint32m1_t merge,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x_tum(vbool16_t mask,vint32m2_t merge,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x_tum(vbool8_t mask,vint32m4_t merge,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x_tum(vbool64_t mask,vuint32mf2_t merge,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x_tum(vbool32_t mask,vuint32m1_t merge,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x_tum(vbool16_t mask,vuint32m2_t merge,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x_tum(vbool8_t mask,vuint32m4_t merge,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "80e4eb9a3d98e6cf3fa925573e9eaaa8d3124d1c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x_tum-3.C", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tum-3.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,201 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x_tum(vbool64_t mask,vint8mf8_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x_tum(vbool32_t mask,vint8mf4_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x_tum(vbool16_t mask,vint8mf2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x_tum(vbool8_t mask,vint8m1_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x_tum(vbool4_t mask,vint8m2_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x_tum(vbool2_t mask,vint8m4_t merge,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x_tum(vbool64_t mask,vuint8mf8_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x_tum(vbool32_t mask,vuint8mf4_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x_tum(vbool16_t mask,vuint8mf2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x_tum(vbool8_t mask,vuint8m1_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x_tum(vbool4_t mask,vuint8m2_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x_tum(vbool2_t mask,vuint8m4_t merge,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x_tum(vbool64_t mask,vint16mf4_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x_tum(vbool32_t mask,vint16mf2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x_tum(vbool16_t mask,vint16m1_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x_tum(vbool8_t mask,vint16m2_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x_tum(vbool4_t mask,vint16m4_t merge,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x_tum(vbool64_t mask,vuint16mf4_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x_tum(vbool32_t mask,vuint16mf2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x_tum(vbool16_t mask,vuint16m1_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x_tum(vbool8_t mask,vuint16m2_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x_tum(vbool4_t mask,vuint16m4_t merge,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x_tum(vbool64_t mask,vint32mf2_t merge,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x_tum(vbool32_t mask,vint32m1_t merge,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x_tum(vbool16_t mask,vint32m2_t merge,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x_tum(vbool8_t mask,vint32m4_t merge,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x_tum(vbool64_t mask,vuint32mf2_t merge,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x_tum(vbool32_t mask,vuint32m1_t merge,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x_tum(vbool16_t mask,vuint32m2_t merge,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x_tum(vbool8_t mask,vuint32m4_t merge,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "0bfe0798e2933584e680440ed76362448d327864", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x_tumu-1.C", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tumu-1.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,201 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x_tumu(vbool64_t mask,vint8mf8_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x_tumu(vbool32_t mask,vint8mf4_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x_tumu(vbool16_t mask,vint8mf2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x_tumu(vbool8_t mask,vint8m1_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x_tumu(vbool4_t mask,vint8m2_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x_tumu(vbool2_t mask,vint8m4_t merge,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x_tumu(vbool64_t mask,vuint8mf8_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x_tumu(vbool32_t mask,vuint8mf4_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x_tumu(vbool16_t mask,vuint8mf2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x_tumu(vbool8_t mask,vuint8m1_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x_tumu(vbool4_t mask,vuint8m2_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x_tumu(vbool2_t mask,vuint8m4_t merge,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x_tumu(vbool64_t mask,vint16mf4_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x_tumu(vbool32_t mask,vint16mf2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x_tumu(vbool16_t mask,vint16m1_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x_tumu(vbool8_t mask,vint16m2_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x_tumu(vbool4_t mask,vint16m4_t merge,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x_tumu(vbool64_t mask,vuint16mf4_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x_tumu(vbool32_t mask,vuint16mf2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x_tumu(vbool16_t mask,vuint16m1_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x_tumu(vbool8_t mask,vuint16m2_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x_tumu(vbool4_t mask,vuint16m4_t merge,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x_tumu(vbool64_t mask,vint32mf2_t merge,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x_tumu(vbool32_t mask,vint32m1_t merge,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x_tumu(vbool16_t mask,vint32m2_t merge,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x_tumu(vbool8_t mask,vint32m4_t merge,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x_tumu(vbool64_t mask,vuint32mf2_t merge,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x_tumu(vbool32_t mask,vuint32m1_t merge,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x_tumu(vbool16_t mask,vuint32m2_t merge,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x_tumu(vbool8_t mask,vuint32m4_t merge,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "1166b31816a7509ce21282e814a8238dbbadadf3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x_tumu-2.C", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tumu-2.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,201 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x_tumu(vbool64_t mask,vint8mf8_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x_tumu(vbool32_t mask,vint8mf4_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x_tumu(vbool16_t mask,vint8mf2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x_tumu(vbool8_t mask,vint8m1_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x_tumu(vbool4_t mask,vint8m2_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x_tumu(vbool2_t mask,vint8m4_t merge,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x_tumu(vbool64_t mask,vuint8mf8_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x_tumu(vbool32_t mask,vuint8mf4_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x_tumu(vbool16_t mask,vuint8mf2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x_tumu(vbool8_t mask,vuint8m1_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x_tumu(vbool4_t mask,vuint8m2_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x_tumu(vbool2_t mask,vuint8m4_t merge,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x_tumu(vbool64_t mask,vint16mf4_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x_tumu(vbool32_t mask,vint16mf2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x_tumu(vbool16_t mask,vint16m1_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x_tumu(vbool8_t mask,vint16m2_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x_tumu(vbool4_t mask,vint16m4_t merge,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x_tumu(vbool64_t mask,vuint16mf4_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x_tumu(vbool32_t mask,vuint16mf2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x_tumu(vbool16_t mask,vuint16m1_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x_tumu(vbool8_t mask,vuint16m2_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x_tumu(vbool4_t mask,vuint16m4_t merge,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x_tumu(vbool64_t mask,vint32mf2_t merge,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x_tumu(vbool32_t mask,vint32m1_t merge,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x_tumu(vbool16_t mask,vint32m2_t merge,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x_tumu(vbool8_t mask,vint32m4_t merge,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x_tumu(vbool64_t mask,vuint32mf2_t merge,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x_tumu(vbool32_t mask,vuint32m1_t merge,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x_tumu(vbool16_t mask,vuint32m2_t merge,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x_tumu(vbool8_t mask,vuint32m4_t merge,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "7bc41dfc51a1c3d7430c6208befd4cf0a57b10f4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vncvt_x_tumu-3.C", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a1c81afd551ac66b6cb8011a2168ddcd7887576/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvncvt_x_tumu-3.C?ref=9a1c81afd551ac66b6cb8011a2168ddcd7887576", "patch": "@@ -0,0 +1,201 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vncvt_x_tumu(vbool64_t mask,vint8mf8_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vncvt_x_tumu(vbool32_t mask,vint8mf4_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vncvt_x_tumu(vbool16_t mask,vint8mf2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vncvt_x_tumu(vbool8_t mask,vint8m1_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vncvt_x_tumu(vbool4_t mask,vint8m2_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vncvt_x_tumu(vbool2_t mask,vint8m4_t merge,vint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vncvt_x_tumu(vbool64_t mask,vuint8mf8_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vncvt_x_tumu(vbool32_t mask,vuint8mf4_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vncvt_x_tumu(vbool16_t mask,vuint8mf2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vncvt_x_tumu(vbool8_t mask,vuint8m1_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vncvt_x_tumu(vbool4_t mask,vuint8m2_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vncvt_x_tumu(vbool2_t mask,vuint8m4_t merge,vuint16m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vncvt_x_tumu(vbool64_t mask,vint16mf4_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vncvt_x_tumu(vbool32_t mask,vint16mf2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vncvt_x_tumu(vbool16_t mask,vint16m1_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vncvt_x_tumu(vbool8_t mask,vint16m2_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vncvt_x_tumu(vbool4_t mask,vint16m4_t merge,vint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vncvt_x_tumu(vbool64_t mask,vuint16mf4_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vncvt_x_tumu(vbool32_t mask,vuint16mf2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vncvt_x_tumu(vbool16_t mask,vuint16m1_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vncvt_x_tumu(vbool8_t mask,vuint16m2_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vncvt_x_tumu(vbool4_t mask,vuint16m4_t merge,vuint32m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vncvt_x_tumu(vbool64_t mask,vint32mf2_t merge,vint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vncvt_x_tumu(vbool32_t mask,vint32m1_t merge,vint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vncvt_x_tumu(vbool16_t mask,vint32m2_t merge,vint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vncvt_x_tumu(vbool8_t mask,vint32m4_t merge,vint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vncvt_x_tumu(vbool64_t mask,vuint32mf2_t merge,vuint64m1_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vncvt_x_tumu(vbool32_t mask,vuint32m1_t merge,vuint64m2_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vncvt_x_tumu(vbool16_t mask,vuint32m2_t merge,vuint64m4_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vncvt_x_tumu(vbool8_t mask,vuint32m4_t merge,vuint64m8_t src,size_t vl)\n+{\n+    return __riscv_vncvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vncvt\\.x\\.x\\.w\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}]}