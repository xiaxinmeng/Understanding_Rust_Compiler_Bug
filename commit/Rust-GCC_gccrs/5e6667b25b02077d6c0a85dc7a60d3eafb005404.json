{"sha": "5e6667b25b02077d6c0a85dc7a60d3eafb005404", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU2NjY3YjI1YjAyMDc3ZDZjMGE4NWRjN2E2MGQzZWFmYjAwNTQwNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-01-10T13:07:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-01-10T13:07:42Z"}, "message": "re PR tree-optimization/59374 (-ftree-slp-vectorize breaks unique_ptr's move constructor)\n\n2014-01-10  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/59374\n\t* tree-vect-slp.c (vect_slp_analyze_bb_1): Move dependence\n\tchecking after SLP discovery.  Mark stmts not participating\n\tin any SLP instance properly.\n\n\t* gcc.dg/torture/pr59374-3.c: New testcase.\n\nFrom-SVN: r206523", "tree": {"sha": "e0266031eee2ea4d54a8c68c3bf87c9ca4a70ea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0266031eee2ea4d54a8c68c3bf87c9ca4a70ea6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e6667b25b02077d6c0a85dc7a60d3eafb005404", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e6667b25b02077d6c0a85dc7a60d3eafb005404", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e6667b25b02077d6c0a85dc7a60d3eafb005404", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e6667b25b02077d6c0a85dc7a60d3eafb005404/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5619162cdb418ba81d385e502e0d70e8d061cb31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5619162cdb418ba81d385e502e0d70e8d061cb31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5619162cdb418ba81d385e502e0d70e8d061cb31"}], "stats": {"total": 67, "additions": 56, "deletions": 11}, "files": [{"sha": "7b5229136a734df00fd90f7c4092da16d7d497ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e6667b25b02077d6c0a85dc7a60d3eafb005404/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e6667b25b02077d6c0a85dc7a60d3eafb005404/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e6667b25b02077d6c0a85dc7a60d3eafb005404", "patch": "@@ -1,3 +1,10 @@\n+2014-01-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/59374\n+\t* tree-vect-slp.c (vect_slp_analyze_bb_1): Move dependence\n+\tchecking after SLP discovery.  Mark stmts not participating\n+\tin any SLP instance properly.\n+\n 2014-01-10  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.c (arm_new_rtx_costs): Use destination mode"}, {"sha": "a5738130f446dbdafe7cbddce7c3a9b8ab970b54", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e6667b25b02077d6c0a85dc7a60d3eafb005404/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e6667b25b02077d6c0a85dc7a60d3eafb005404/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5e6667b25b02077d6c0a85dc7a60d3eafb005404", "patch": "@@ -1,3 +1,8 @@\n+2014-01-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/59374\n+\t* gcc.dg/torture/pr59374-3.c: New testcase.\n+\n 2014-01-10  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* lib/target-supports.exp"}, {"sha": "ab0014d8f13f3d1bff3b7dcf65a0f5b9206a6a55", "filename": "gcc/testsuite/gcc.dg/torture/pr59374-3.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e6667b25b02077d6c0a85dc7a60d3eafb005404/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59374-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e6667b25b02077d6c0a85dc7a60d3eafb005404/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59374-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59374-3.c?ref=5e6667b25b02077d6c0a85dc7a60d3eafb005404", "patch": "@@ -0,0 +1,21 @@\n+extern void abort (void);\n+\n+static struct X { void *a; void *b; } a, b;\n+\n+void __attribute__((noinline)) foo (void)\n+{\n+  void *tem = a.b;\n+  a.b = (void *)0;\n+  b.b = tem;\n+  b.a = a.a;\n+  a.a = tem;\n+}\n+\n+int main()\n+{\n+  a.b = &a;\n+  foo ();\n+  if (b.b != &a)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "372d7db3e70f9428343a84d21b2af6001f2b3167", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e6667b25b02077d6c0a85dc7a60d3eafb005404/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e6667b25b02077d6c0a85dc7a60d3eafb005404/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=5e6667b25b02077d6c0a85dc7a60d3eafb005404", "patch": "@@ -2110,17 +2110,6 @@ vect_slp_analyze_bb_1 (basic_block bb)\n \n   vect_pattern_recog (NULL, bb_vinfo);\n \n-  if (!vect_slp_analyze_data_ref_dependences (bb_vinfo))\n-     {\n-       if (dump_enabled_p ())\n-\t dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-\t\t\t  \"not vectorized: unhandled data dependence \"\n-\t\t\t  \"in basic block.\\n\");\n-\n-       destroy_bb_vec_info (bb_vinfo);\n-       return NULL;\n-     }\n-\n   if (!vect_analyze_data_refs_alignment (NULL, bb_vinfo))\n     {\n       if (dump_enabled_p ())\n@@ -2155,6 +2144,29 @@ vect_slp_analyze_bb_1 (basic_block bb)\n       vect_mark_slp_stmts_relevant (SLP_INSTANCE_TREE (instance));\n     }\n \n+  /* Mark all the statements that we do not want to vectorize.  */\n+  for (gimple_stmt_iterator gsi = gsi_start_bb (BB_VINFO_BB (bb_vinfo));\n+       !gsi_end_p (gsi); gsi_next (&gsi))\n+    {\n+      stmt_vec_info vinfo = vinfo_for_stmt (gsi_stmt (gsi));\n+      if (STMT_SLP_TYPE (vinfo) != pure_slp)\n+\tSTMT_VINFO_VECTORIZABLE (vinfo) = false;\n+    }\n+\n+  /* Analyze dependences.  At this point all stmts not participating in\n+     vectorization have to be marked.  Dependence analysis assumes\n+     that we either vectorize all SLP instances or none at all.  */\n+  if (!vect_slp_analyze_data_ref_dependences (bb_vinfo))\n+     {\n+       if (dump_enabled_p ())\n+\t dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t  \"not vectorized: unhandled data dependence \"\n+\t\t\t  \"in basic block.\\n\");\n+\n+       destroy_bb_vec_info (bb_vinfo);\n+       return NULL;\n+     }\n+\n   if (!vect_verify_datarefs_alignment (NULL, bb_vinfo))\n     {\n       if (dump_enabled_p ())"}]}