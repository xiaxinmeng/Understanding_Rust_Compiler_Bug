{"sha": "5287cfd5944f7329c956ccd6c7ebf7c943e35b4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI4N2NmZDU5NDRmNzMyOWM5NTZjY2Q2YzdlYmY3Yzk0M2UzNWI0YQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-12-18T11:28:46Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-12-18T11:28:46Z"}, "message": "objc-act.c (objc_eh_personality): Select personality name on runtime.\n\n\ngcc/objc:\n\n\t* objc/objc-act.c (objc_eh_personality): Select personality name on\n\truntime.\n\t(objc_init_exceptions): New.\n\t(objc_begin_try_stmt): Use objc_init_exceptions.\n\t(objc_build_throw_stmt): Likewise.\n\ngcc/testsuite:\n\n\t* fobjc-exceptions.m: Update dg-error syntax.\n\nFrom-SVN: r168020", "tree": {"sha": "d9eecc4792d7fa400b89788724c58a79b13bb089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9eecc4792d7fa400b89788724c58a79b13bb089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5287cfd5944f7329c956ccd6c7ebf7c943e35b4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5287cfd5944f7329c956ccd6c7ebf7c943e35b4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5287cfd5944f7329c956ccd6c7ebf7c943e35b4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5287cfd5944f7329c956ccd6c7ebf7c943e35b4a/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "628c4eee537f82b0422fb0990ee75384bf7e984e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/628c4eee537f82b0422fb0990ee75384bf7e984e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/628c4eee537f82b0422fb0990ee75384bf7e984e"}], "stats": {"total": 71, "additions": 50, "deletions": 21}, "files": [{"sha": "15af19d06c46922aaeb3936fcd42ec7231693df5", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5287cfd5944f7329c956ccd6c7ebf7c943e35b4a/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5287cfd5944f7329c956ccd6c7ebf7c943e35b4a/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=5287cfd5944f7329c956ccd6c7ebf7c943e35b4a", "patch": "@@ -1,3 +1,11 @@\n+2010-12-18  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t* objc/objc-act.c (objc_eh_personality): Select personality name on\n+\truntime.\n+\t(objc_init_exceptions): New.\n+\t(objc_begin_try_stmt): Use objc_init_exceptions.\n+\t(objc_build_throw_stmt): Likewise.\n+\n 2010-12-10  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c (objc_in_class_extension): New."}, {"sha": "f05ab192bf3b72e7e03c5f0a44db59a2cb3af0b6", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 34, "deletions": 16, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5287cfd5944f7329c956ccd6c7ebf7c943e35b4a/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5287cfd5944f7329c956ccd6c7ebf7c943e35b4a/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=5287cfd5944f7329c956ccd6c7ebf7c943e35b4a", "patch": "@@ -5028,11 +5028,42 @@ tree\n objc_eh_personality (void)\n {\n   if (!flag_objc_sjlj_exceptions && !objc_eh_personality_decl)\n-    objc_eh_personality_decl = build_personality_function (\"gnu_objc\");\n+    objc_eh_personality_decl = build_personality_function \n+\t\t\t\t(flag_next_runtime\n+\t\t\t\t\t\t? \"objc\"\n+\t\t\t\t\t\t: \"gnu_objc\");\n   return objc_eh_personality_decl;\n }\n #endif\n \n+static void\n+objc_init_exceptions (location_t loc)\n+{\n+  static bool done = false;\n+\n+  /* -fobjc-exceptions is required to enable Objective-C exceptions.\n+     For example, on Darwin, ObjC exceptions require a sufficiently\n+     recent version of the runtime, so the user must ask for them\n+     explicitly.  On other platforms, at the moment -fobjc-exceptions\n+     triggers -fexceptions which again is required for exceptions to\n+     work.\n+  */\n+  /* TODO: we only really need one error message when the flag is missing.  */\n+  if (!flag_objc_exceptions)\n+    {\n+      error_at (loc, \"%<-fobjc-exceptions%> is required to enable Objective-C exception syntax\");\n+    }\n+\n+  if (done)\n+    return;\n+  done = true;\n+\n+#ifndef OBJCPLUS\n+  if (!flag_objc_sjlj_exceptions)\n+    using_eh_for_cleanups ();\n+#endif\n+}\n+\n /* Build __builtin_eh_pointer, or the moral equivalent.  In the case\n    of Darwin, we'll arrange for it to be initialized (and associated\n    with a binding) later.  */\n@@ -5334,17 +5365,7 @@ objc_begin_try_stmt (location_t try_locus, tree body)\n   c->end_try_locus = input_location;\n   cur_try_context = c;\n \n-  /* -fobjc-exceptions is required to enable Objective-C exceptions.\n-     For example, on Darwin, ObjC exceptions require a sufficiently\n-     recent version of the runtime, so the user must ask for them\n-     explicitly.  On other platforms, at the moment -fobjc-exceptions\n-     triggers -fexceptions which again is required for exceptions to\n-     work.\n-  */\n-  if (!flag_objc_exceptions)\n-    {\n-      error_at (try_locus, \"%<-fobjc-exceptions%> is required to enable Objective-C exception syntax\");\n-    }\n+  objc_init_exceptions (try_locus);\n \n   /* Collect the list of local variables.  We'll mark them as volatile\n      at the end of compilation of this function to prevent them being\n@@ -5552,10 +5573,7 @@ objc_build_throw_stmt (location_t loc, tree throw_expr)\n {\n   tree args;\n \n-  if (!flag_objc_exceptions)\n-    {\n-      error_at (loc, \"%<-fobjc-exceptions%> is required to enable Objective-C exception syntax\");\n-    }\n+  objc_init_exceptions (loc); \n \n   if (throw_expr == NULL)\n     {"}, {"sha": "c49fb12bf2d20662b943153f000ed8a1a850a706", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5287cfd5944f7329c956ccd6c7ebf7c943e35b4a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5287cfd5944f7329c956ccd6c7ebf7c943e35b4a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5287cfd5944f7329c956ccd6c7ebf7c943e35b4a", "patch": "@@ -1,3 +1,7 @@\n+2010-12-18  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t* fobjc-exceptions.m: Update dg-error syntax.\n+\n 2010-12-18  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR target/36834"}, {"sha": "392e3073642a84e4a6a7d111e8e52db2ea66ff08", "filename": "gcc/testsuite/objc.dg/fobjc-exceptions.m", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5287cfd5944f7329c956ccd6c7ebf7c943e35b4a/gcc%2Ftestsuite%2Fobjc.dg%2Ffobjc-exceptions.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5287cfd5944f7329c956ccd6c7ebf7c943e35b4a/gcc%2Ftestsuite%2Fobjc.dg%2Ffobjc-exceptions.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ffobjc-exceptions.m?ref=5287cfd5944f7329c956ccd6c7ebf7c943e35b4a", "patch": "@@ -5,25 +5,24 @@\n \n int dummy (int number, Object *o)\n {\n-  @try {            /* { dg-error \"fobjc-exceptions\" \"is required to enable Objective-C exception syntax\" } */\n+  @try {            /* { dg-error \".-fobjc-exceptions. is required to enable Objective-C exception syntax\" } */\n     number++;\n-    @throw o;     /* { dg-error \"fobjc-exceptions\" \"is required to enable Objective-C exception syntax\" } */\n+    @throw o;     /* { dg-error \".-fobjc-exceptions. is required to enable Objective-C exception syntax\" } */\n   }\n   @catch (id object)\n     {\n       number++;\n-      @throw;       /* { dg-error \"fobjc-exceptions\" \"is required to enable Objective-C exception syntax\" } */\n+      @throw;       /* { dg-error \".-fobjc-exceptions. is required to enable Objective-C exception syntax\" } */\n     }\n   @finally\n     {\n       number++;\n     }\n   \n-  @synchronized (o) /* { dg-error \"fobjc-exceptions\" \"is required to enable Objective-C exception syntax\" } */\n+  @synchronized (o) /* { dg-error \".-fobjc-exceptions. is required to enable Objective-C exception syntax\" } */\n     {\n       number++;\n     }\n   \n   return number;\n }\n-"}]}