{"sha": "ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ1MDQyZGY3MmQwZWFlZDBiN2M3NmMwNDI0Yjk1YzVmZGJmNzFmMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-04-25T21:06:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-04-25T21:06:10Z"}, "message": "ia64.h (CC1_SPEC): Define.\n\n\t* config/ia64/ia64.h (CC1_SPEC): Define.\n\t* config/ia64/linux.h (CC1_SPEC): Define.\n\nFrom-SVN: r41549", "tree": {"sha": "775a2ac26823e31dbadc32e0e8c6022d26e9151d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/775a2ac26823e31dbadc32e0e8c6022d26e9151d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e65a913b61c9366349eee365616f380abbc251e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e65a913b61c9366349eee365616f380abbc251e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e65a913b61c9366349eee365616f380abbc251e"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "e0cfdf21a69b630ee11b274a336132ed86543099", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3", "patch": "@@ -1,3 +1,8 @@\n+2001-04-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/ia64/ia64.h (CC1_SPEC): Define.\n+\t* config/ia64/linux.h (CC1_SPEC): Define.\n+\n Wed Apr 25 17:09:50 2001  J\"orn Rennecke <amylaar@redhat.com>\n \n \t* emit-rtl.c (constant_subword): Also do sign extension in"}, {"sha": "396764be302ce7d0a876892e33e7f2b45bcfb8fc", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3", "patch": "@@ -227,7 +227,8 @@ extern const char *ia64_fixed_range_string;\n    `cc1'.  It can also specify how to translate options you give to GNU CC into\n    options for GNU CC to pass to the `cc1'.  */\n \n-/* #define CC1_SPEC \"\" */\n+#undef CC1_SPEC\n+#define CC1_SPEC \"%{G*}\"\n \n /* A C string constant that tells the GNU CC driver program options to pass to\n    `cc1plus'.  It can also specify how to translate options you give to GNU CC"}, {"sha": "2bb71eb2c2195430c9c10b1fc43024d6c48ced53", "filename": "gcc/config/ia64/linux.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3/gcc%2Fconfig%2Fia64%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3/gcc%2Fconfig%2Fia64%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Flinux.h?ref=ad5042df72d0eaed0b7c76c0424b95c5fdbf71f3", "patch": "@@ -3,6 +3,10 @@\n #include <linux.h>\n #include \"sysv4.h\"\n \n+/* This is for -profile to use -lc_p instead of -lc. */\n+#undef CC1_SPEC\n+#define CC1_SPEC \"%{profile:-p} %{G*}\"\n+\n /* ??? Maybe this should be in sysv4.h?  */\n #define CPP_PREDEFINES \"\\\n -D__ia64 -D__ia64__ -D__linux -D__linux__ -D_LONGLONG -Dlinux -Dunix \\"}]}