{"sha": "6dac2e8ef755d3e6ed06bdf9fabb799cadcd17cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRhYzJlOGVmNzU1ZDNlNmVkMDZiZGY5ZmFiYjc5OWNhZGNkMTdjZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-09-15T06:29:43Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-09-15T06:29:43Z"}, "message": "alpha.md (smaxsf3): Disable for IEEE mode.\n\n\t* config/alpha/alpha.md (smaxsf3): Disable for IEEE mode.\n\t(sminsf3): Ditto.\n\nFrom-SVN: r151709", "tree": {"sha": "d7efcc8543f138fc6904cc00086fec69b96e9d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7efcc8543f138fc6904cc00086fec69b96e9d9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dac2e8ef755d3e6ed06bdf9fabb799cadcd17cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dac2e8ef755d3e6ed06bdf9fabb799cadcd17cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dac2e8ef755d3e6ed06bdf9fabb799cadcd17cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dac2e8ef755d3e6ed06bdf9fabb799cadcd17cd/comments", "author": null, "committer": null, "parents": [{"sha": "074711154cf2db5666a9a4c4d948c15a0c5885eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/074711154cf2db5666a9a4c4d948c15a0c5885eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/074711154cf2db5666a9a4c4d948c15a0c5885eb"}], "stats": {"total": 53, "additions": 29, "deletions": 24}, "files": [{"sha": "0b578742a1f83216621a64ab9d47e9ac590b9312", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 22, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dac2e8ef755d3e6ed06bdf9fabb799cadcd17cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dac2e8ef755d3e6ed06bdf9fabb799cadcd17cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6dac2e8ef755d3e6ed06bdf9fabb799cadcd17cd", "patch": "@@ -1,12 +1,16 @@\n+2009-09-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.md (smaxsf3): Disable for IEEE mode.\n+\t(sminsf3): Ditto.\n+\n 2009-09-14  DJ Delorie  <dj@redhat.com>\n \n \t* config/mep/mep.h (JUMP_TABLES_IN_TEXT_SECTION): Define.\n-\n-\t* config/mep/mep.c (mep_emit_cbranch): Don't use BEQZ/BNEI in VLIW\n-\tmode.\n+\t* config/mep/mep.c (mep_emit_cbranch): Don't use BEQZ/BNEI in\n+\tVLIW mode.\n \n 2009-09-14  Richard Henderson  <rth@redhat.com>\n-            Jakub Jelinek  <jakub@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n \n \t* builtins.c (expand_builtin_synchronize): Use gimple_build_asm_vec.\n \t* cfgbuild.c (make_edges): Handle asm goto.\n@@ -550,6 +554,7 @@\n \t* config/bfin/bfin.c (bfin_expand_builtin,\n \tcase BFIN_BUILTIN_MULT_1X32X32): Force constants to registers for the\n \toperands.\n+\n \tFrom Jie Zhang <jie.zhang@analog.com>:\n \t* config/bfin/bfin.c (bfin_expand_builtin): Initialize icodes\n \tbefore use in two places.\n@@ -563,7 +568,7 @@\n \tEH personality path.\n \n 2009-09-13  Richard Guenther  <rguenther@suse.de>\n-\tRafael Avila de Espindola  <espindola@google.com>\n+\t    Rafael Avila de Espindola  <espindola@google.com>\n \n \t* langhooks-def.h (LANG_HOOKS_EH_RUNTIME_TYPE): Define.\n \t(LANG_HOOKS_EH_PERSONALITY): Likewise.\n@@ -572,17 +577,17 @@\n \t* langhooks.h (struct lang_hooks): Add eh_runtime_type and\n \teh_personality.\n \t* langhooks.c (lhd_pass_through_t): New function.\n-        * dwarf2out.c (output_call_frame_info, dwarf2out_do_cfi_startproc,\n+\t* dwarf2out.c (output_call_frame_info, dwarf2out_do_cfi_startproc,\n \tdwarf2out_begin_prologue): Use personality from current_function_decl.\n-        * expr.h (get_personality_function): Declare.\n+\t* expr.h (get_personality_function): Declare.\n \t* expr.c (get_personality_function): New function.\n \t(build_personality_function): Likewise.\n-        * libfuncs.h (libfunc_index): Remove LTI_eh_personality.\n-        (eh_personality_libfunc): Remove.\n-        * optabs.c (build_libfunc_function): New function split out from ...\n+\t* libfuncs.h (libfunc_index): Remove LTI_eh_personality.\n+\t(eh_personality_libfunc): Remove.\n+\t* optabs.c (build_libfunc_function): New function split out from ...\n \t(init_one_libfunc): ... here.\n-        * tree.h (DECL_FUNCTION_PERSONALITY): New.\n-        (tree_function_decl): Add personality.\n+\t* tree.h (DECL_FUNCTION_PERSONALITY): New.\n+\t(tree_function_decl): Add personality.\n \t(lhd_gcc_personality): Declare.\n \t(build_personality_function): Likewise.\n \t* tree.c (gcc_eh_personality_decl): New.\n@@ -591,11 +596,11 @@\n \t(enum eh_personality_kind): New.\n \t(build_personality_function): Declare.\n \t(function_needs_eh_personality): Declare.\n-        * except.c (lang_eh_runtime_type): Remove.\n+\t* except.c (lang_eh_runtime_type): Remove.\n \t(function_needs_eh_personality): New function.\n \t(add_type_for_runtime): Call lang_hooks.type_for_runtime instead.\n-        (sjlj_emit_function_enter, output_function_exception_table):\n-        Use personality from current_function_decl.\n+\t(sjlj_emit_function_enter, output_function_exception_table):\n+\tUse personality from current_function_decl.\n \t* tree-eh.c (lower_eh_constructs): Set DECL_FUNCTION_PERSONALITY.\n \t* tree-inline.c (tree_can_inline_p): Do not inline across different\n \tEH personalities.\n@@ -610,7 +615,7 @@\n \t(finish_decl): Don't call c_maybe_initialize_eh.\n \t(c_eh_initialized_p): Remove.\n \t(c_maybe_initialize_eh): Likewise.\n-        * c-parser.c (c_parser_omp_construct): Likewise.\n+\t* c-parser.c (c_parser_omp_construct): Likewise.\n \t(c_parse_file): Initialize exception handling.\n \n 2009-09-13  Kai Tietz  <kai.tietz@onevision.com>\n@@ -787,7 +792,7 @@\n 2009-09-10  Hariharan Sandanagobalane  <hariharan@picochip.com>\n \n \t* final.c (shorten_branches) : Ignore DEBUG_INSN_P instructions\n-        introduced by the VTA branch merge.\n+\tintroduced by the VTA branch merge.\n \n 2009-09-10  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -800,7 +805,7 @@\n 2009-09-10  Hariharan Sandanagobalane  <hariharan@picochip.com>\n \n \t* config/picochip/picochip.c : Ignore DEBUG_INSN_P instructions\n-        introduced by the VTA branch merge.\n+\tintroduced by the VTA branch merge.\n \n 2009-09-10  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -1132,7 +1137,7 @@\n 2009-09-06  Dmitry Gorbachev  <d.g.gorbachev@gmail.com>\n \n \tPR c++/41214\n-        * unwind-dw2.c (uw_init_context_1): Mark noinline.\n+\t* unwind-dw2.c (uw_init_context_1): Mark noinline.\n \t* config/ia64/unwind-ia64.c (uw_init_context_1): Likewise.\n \t* config/xtensa/unwind-dw2-xtensa.c (uw_init_context_1): Likewise.\n \n@@ -1147,9 +1152,9 @@\n \tthis_is_library_file but for the %T constructor.\n \t(end_going_arg): If this_is_linker_script is set then locate the\n \tscript and insert a --script switch before it\n-        (do_spec_2): Initialise this_is_linker_script.\n-        (do_spec_1): Likewise.  Handle %T construct.\n-        (eval_spec_function): Preserve this_is_linker_script.\n+\t(do_spec_2): Initialise this_is_linker_script.\n+\t(do_spec_1): Likewise.  Handle %T construct.\n+\t(eval_spec_function): Preserve this_is_linker_script.\n \t* doc/invoke.texi: Document %T construct in spec files.\n \t* config/m32c/m32c.h (LIB_SPEC): Use it.\n "}, {"sha": "ca9032750f39e5c43338bd7f7be7c3bde86bd637", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dac2e8ef755d3e6ed06bdf9fabb799cadcd17cd/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dac2e8ef755d3e6ed06bdf9fabb799cadcd17cd/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=6dac2e8ef755d3e6ed06bdf9fabb799cadcd17cd", "patch": "@@ -3863,7 +3863,7 @@\n    (set (match_operand:SF 0 \"register_operand\" \"\")\n \t(if_then_else:SF (eq (match_dup 3) (match_dup 4))\n \t\t\t (match_dup 1) (match_dup 2)))]\n-  \"TARGET_FP\"\n+  \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n {\n   operands[3] = gen_reg_rtx (DFmode);\n   operands[4] = CONST0_RTX (DFmode);\n@@ -3876,7 +3876,7 @@\n    (set (match_operand:SF 0 \"register_operand\" \"\")\n \t(if_then_else:SF (ne (match_dup 3) (match_dup 4))\n \t\t      (match_dup 1) (match_dup 2)))]\n-  \"TARGET_FP\"\n+  \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n {\n   operands[3] = gen_reg_rtx (DFmode);\n   operands[4] = CONST0_RTX (DFmode);"}]}