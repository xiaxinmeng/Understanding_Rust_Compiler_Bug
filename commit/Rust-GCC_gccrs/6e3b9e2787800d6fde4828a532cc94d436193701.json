{"sha": "6e3b9e2787800d6fde4828a532cc94d436193701", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUzYjllMjc4NzgwMGQ2ZmRlNDgyOGE1MzJjYzk0ZDQzNjE5MzcwMQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-27T11:55:36Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-27T11:55:36Z"}, "message": "tree-into-ssa.c (update_ssa): Ensure that the operand cache is up-to-date.\n\n\t* tree-into-ssa.c (update_ssa): Ensure that the operand cache\n\tis up-to-date.\n\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Call\n\tupdate_stmt_if_modified before calling update_ssa.\n\nFrom-SVN: r100250", "tree": {"sha": "9ce95a8274eddc018ca58ea84940d4f4844d6ef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ce95a8274eddc018ca58ea84940d4f4844d6ef2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e3b9e2787800d6fde4828a532cc94d436193701", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e3b9e2787800d6fde4828a532cc94d436193701", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e3b9e2787800d6fde4828a532cc94d436193701", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e3b9e2787800d6fde4828a532cc94d436193701/comments", "author": null, "committer": null, "parents": [{"sha": "fb617f00f1279cec132fda679dadb9b0abe54723", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb617f00f1279cec132fda679dadb9b0abe54723", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb617f00f1279cec132fda679dadb9b0abe54723"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "4c67cabe312a4194947f7013643902f16f1096e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e3b9e2787800d6fde4828a532cc94d436193701/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e3b9e2787800d6fde4828a532cc94d436193701/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e3b9e2787800d6fde4828a532cc94d436193701", "patch": "@@ -1,3 +1,10 @@\n+2005-05-27  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-into-ssa.c (update_ssa): Ensure that the operand cache\n+\tis up-to-date.\n+\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Call\n+\tupdate_stmt_if_modified before calling update_ssa.\n+\n 2005-05-27  Ralf Corsepius  <ralf.corsepius@rtems.org>\n \n \t* config/rs6000/t-rtems: Remove roe multilib variant."}, {"sha": "e7ff242ce27f9deaedc120a5cb44c9be78cd9620", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e3b9e2787800d6fde4828a532cc94d436193701/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e3b9e2787800d6fde4828a532cc94d436193701/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=6e3b9e2787800d6fde4828a532cc94d436193701", "patch": "@@ -2679,6 +2679,10 @@ update_ssa (unsigned update_flags)\n       for (si = bsi_start (bb); !bsi_end_p (si); bsi_next (&si))\n \t{\n \t  tree stmt = bsi_stmt (si);\n+\t  /* We are going to use the operand cache API, such as\n+\t     SET_USE, SET_DEF, and FOR_EACH_IMM_USE_FAST.  The operand\n+\t     cache for each statement should be up-to-date.  */\n+\t  gcc_assert (!stmt_modified_p (stmt));\n \t  REWRITE_THIS_STMT (stmt) = 0;\n \t  REGISTER_DEFS_IN_THIS_STMT (stmt) = 0;\n \t}"}, {"sha": "cb4abcf35d32b3d52caf043206b733a18f2d7747", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e3b9e2787800d6fde4828a532cc94d436193701/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e3b9e2787800d6fde4828a532cc94d436193701/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=6e3b9e2787800d6fde4828a532cc94d436193701", "patch": "@@ -423,15 +423,6 @@ tree_ssa_dominator_optimize (void)\n       /* Recursively walk the dominator tree optimizing statements.  */\n       walk_dominator_tree (&walk_data, ENTRY_BLOCK_PTR);\n \n-      /* If we exposed any new variables, go ahead and put them into\n-\t SSA form now, before we handle jump threading.  This simplifies\n-\t interactions between rewriting of _DECL nodes into SSA form\n-\t and rewriting SSA_NAME nodes into SSA form after block\n-\t duplication and CFG manipulation.  */\n-      update_ssa (TODO_update_ssa);\n-\n-      free_all_edge_infos ();\n-\n       {\n \tblock_stmt_iterator bsi;\n \tbasic_block bb;\n@@ -444,6 +435,15 @@ tree_ssa_dominator_optimize (void)\n \t  }\n       }\n \n+      /* If we exposed any new variables, go ahead and put them into\n+\t SSA form now, before we handle jump threading.  This simplifies\n+\t interactions between rewriting of _DECL nodes into SSA form\n+\t and rewriting SSA_NAME nodes into SSA form after block\n+\t duplication and CFG manipulation.  */\n+      update_ssa (TODO_update_ssa);\n+\n+      free_all_edge_infos ();\n+\n       /* Thread jumps, creating duplicate blocks as needed.  */\n       cfg_altered |= thread_through_all_blocks ();\n "}]}