{"sha": "69619acd8d9b5856f5af6e5323d9c7c4ec9ad08f", "node_id": "C_kwDOANBUbNoAKDY5NjE5YWNkOGQ5YjU4NTZmNWFmNmU1MzIzZDljN2M0ZWM5YWQwOGY", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-11T10:51:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-11T13:11:59Z"}, "message": "target/104762 - vectorization costs of CONSTRUCTORs\n\nAfter accounting for GPR -> XMM move cost for vec_construct the\nbase cost needs adjustments to not double-cost those.  This also\nlowers the cost when such move is not necessary.\n\n2022-03-11  Richard Biener  <rguenther@suse.de>\n\n\tPR target/104762\n\t* config/i386/i386.cc (ix86_builtin_vectorization_cost): Do not\n\tcost the first lane of SSE pieces as inserts for vec_construct.", "tree": {"sha": "c60870eeb11a2b981f82dfbb1742a734588b7c5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c60870eeb11a2b981f82dfbb1742a734588b7c5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69619acd8d9b5856f5af6e5323d9c7c4ec9ad08f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69619acd8d9b5856f5af6e5323d9c7c4ec9ad08f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69619acd8d9b5856f5af6e5323d9c7c4ec9ad08f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69619acd8d9b5856f5af6e5323d9c7c4ec9ad08f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db494fd68d12f3b49ad5f4747c234f3a94d10c72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db494fd68d12f3b49ad5f4747c234f3a94d10c72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db494fd68d12f3b49ad5f4747c234f3a94d10c72"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "23bedea92bd33eaf0438407ff3abb8566cb3f835", "filename": "gcc/config/i386/i386.cc", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69619acd8d9b5856f5af6e5323d9c7c4ec9ad08f/gcc%2Fconfig%2Fi386%2Fi386.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69619acd8d9b5856f5af6e5323d9c7c4ec9ad08f/gcc%2Fconfig%2Fi386%2Fi386.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.cc?ref=69619acd8d9b5856f5af6e5323d9c7c4ec9ad08f", "patch": "@@ -22597,16 +22597,21 @@ ix86_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n \n       case vec_construct:\n \t{\n-\t  /* N element inserts into SSE vectors.  */\n-\t  int cost = TYPE_VECTOR_SUBPARTS (vectype) * ix86_cost->sse_op;\n+\t  int n = TYPE_VECTOR_SUBPARTS (vectype);\n+\t  /* N - 1 element inserts into an SSE vector, the possible\n+\t     GPR -> XMM move is accounted for in add_stmt_cost.  */\n+\t  if (GET_MODE_BITSIZE (mode) <= 128)\n+\t    return (n - 1) * ix86_cost->sse_op;\n \t  /* One vinserti128 for combining two SSE vectors for AVX256.  */\n-\t  if (GET_MODE_BITSIZE (mode) == 256)\n-\t    cost += ix86_vec_cost (mode, ix86_cost->addss);\n+\t  else if (GET_MODE_BITSIZE (mode) == 256)\n+\t    return ((n - 2) * ix86_cost->sse_op\n+\t\t    + ix86_vec_cost (mode, ix86_cost->addss));\n \t  /* One vinserti64x4 and two vinserti128 for combining SSE\n \t     and AVX256 vectors to AVX512.  */\n \t  else if (GET_MODE_BITSIZE (mode) == 512)\n-\t    cost += 3 * ix86_vec_cost (mode, ix86_cost->addss);\n-\t  return cost;\n+\t    return ((n - 4) * ix86_cost->sse_op\n+\t\t    + 3 * ix86_vec_cost (mode, ix86_cost->addss));\n+\t  gcc_unreachable ();\n \t}\n \n       default:"}]}