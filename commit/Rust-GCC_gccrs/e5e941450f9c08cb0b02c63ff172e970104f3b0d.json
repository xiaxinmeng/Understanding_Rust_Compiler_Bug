{"sha": "e5e941450f9c08cb0b02c63ff172e970104f3b0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVlOTQxNDUwZjljMDhjYjBiMDJjNjNmZjE3MmU5NzAxMDRmM2IwZA==", "commit": {"author": {"name": "Jim Xochellis", "email": "jimxoch@yahoo.gr", "date": "2007-07-05T00:50:56Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-07-05T00:50:56Z"}, "message": "stl_algo.h (search(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2, _ForwardIterator2)): Simplify general case loop to a for(;;).\n\n2007-07-04  Jim Xochellis  <jimxoch@yahoo.gr>\n\n\t* include/bits/stl_algo.h (search(_ForwardIterator1,\n\t_ForwardIterator1, _ForwardIterator2, _ForwardIterator2)): Simplify\n\tgeneral case loop to a for(;;).\n\t(search(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2,\n\t_ForwardIterator2, _BinaryPredicate)): Likewise; remove redundant\n\tinner loop.\n\nFrom-SVN: r126347", "tree": {"sha": "9b545576b994a53eb74dd386b672b34929345b01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b545576b994a53eb74dd386b672b34929345b01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5e941450f9c08cb0b02c63ff172e970104f3b0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5e941450f9c08cb0b02c63ff172e970104f3b0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5e941450f9c08cb0b02c63ff172e970104f3b0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5e941450f9c08cb0b02c63ff172e970104f3b0d/comments", "author": null, "committer": null, "parents": [{"sha": "e9a57dc16c467bf3d7b146d8fdef434269c77da5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9a57dc16c467bf3d7b146d8fdef434269c77da5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9a57dc16c467bf3d7b146d8fdef434269c77da5"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "8b8af166959d62381b1dbaa8f08717759ff06bcb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5e941450f9c08cb0b02c63ff172e970104f3b0d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5e941450f9c08cb0b02c63ff172e970104f3b0d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e5e941450f9c08cb0b02c63ff172e970104f3b0d", "patch": "@@ -1,3 +1,12 @@\n+2007-07-04  Jim Xochellis  <jimxoch@yahoo.gr>\n+\n+\t* include/bits/stl_algo.h (search(_ForwardIterator1,\n+\t_ForwardIterator1, _ForwardIterator2, _ForwardIterator2)): Simplify\n+\tgeneral case loop to a for(;;).\n+\t(search(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2,\n+\t_ForwardIterator2, _BinaryPredicate)): Likewise; remove redundant\n+\tinner loop.\n+\t\n 2007-07-03  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/31518"}, {"sha": "2befdb2bfcd5e8b74d02c950461ca9bc7258ba94", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5e941450f9c08cb0b02c63ff172e970104f3b0d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5e941450f9c08cb0b02c63ff172e970104f3b0d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=e5e941450f9c08cb0b02c63ff172e970104f3b0d", "patch": "@@ -639,7 +639,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       __p1 = __first2; ++__p1;\n       _ForwardIterator1 __current = __first1;\n \n-      while (__first1 != __last1)\n+      for (;;)\n \t{\n \t  __first1 = std::find(__first1, __last1, *__first2);\n \t  if (__first1 == __last1)\n@@ -718,16 +718,10 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       __p1 = __first2; ++__p1;\n       _ForwardIterator1 __current = __first1;\n \n-      while (__first1 != __last1)\n+      for (;;)\n \t{\n-\t  while (__first1 != __last1)\n-\t    {\n-\t      if (__predicate(*__first1, *__first2))\n-\t\tbreak;\n-\t      ++__first1;\n-\t    }\n-\t  while (__first1 != __last1 &&\n-\t\t !bool(__predicate(*__first1, *__first2)))\n+\t  while (__first1 != __last1\n+\t\t && !bool(__predicate(*__first1, *__first2)))\n \t    ++__first1;\n \t  if (__first1 == __last1)\n \t    return __last1;"}]}