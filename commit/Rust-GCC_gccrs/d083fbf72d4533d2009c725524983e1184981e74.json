{"sha": "d083fbf72d4533d2009c725524983e1184981e74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA4M2ZiZjcyZDQ1MzNkMjAwOWM3MjU1MjQ5ODNlMTE4NDk4MWU3NA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-05-10T12:52:02Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-05-10T12:56:16Z"}, "message": "arm: MVE: Factorize all vcmp* integer patterns\n\nAfter removing the signed and unsigned suffixes in the previous\npatches, we can now factorize the vcmp* patterns: there is no longer\nan asymmetry where operators do not have the same set of signed and\nunsigned variants.\n\nThe will make maintenance easier.\n\nMVE has a different set of vector comparison operators than Neon,\nso we have to introduce dedicated iterators.\n\n2021-05-10  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tgcc/\n\t* config/arm/iterators.md (MVE_COMPARISONS): New.\n\t(mve_cmp_op): New.\n\t(mve_cmp_type): New.\n\t* config/arm/mve.md (mve_vcmp<mve_cmp_op>q_<mode>): New, merge all\n\tmve_vcmp patterns.\n\t(mve_vcmpneq_<mode>, mve_vcmpcsq_n_<mode>, mve_vcmpcsq_<mode>)\n\t(mve_vcmpeqq_n_<mode>, mve_vcmpeqq_<mode>, mve_vcmpgeq_n_<mode>)\n\t(mve_vcmpgeq_<mode>, mve_vcmpgtq_n_<mode>, mve_vcmpgtq_<mode>)\n\t(mve_vcmphiq_n_<mode>, mve_vcmphiq_<mode>, mve_vcmpleq_n_<mode>)\n\t(mve_vcmpleq_<mode>, mve_vcmpltq_n_<mode>, mve_vcmpltq_<mode>)\n\t(mve_vcmpneq_n_<mode>, mve_vcmpltq_n_<mode>, mve_vcmpltq_<mode>)\n\t(mve_vcmpneq_n_<mode>): Remove.", "tree": {"sha": "6923ea3cd5686a9a89a0a1e8525f14ef4381356d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6923ea3cd5686a9a89a0a1e8525f14ef4381356d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d083fbf72d4533d2009c725524983e1184981e74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d083fbf72d4533d2009c725524983e1184981e74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d083fbf72d4533d2009c725524983e1184981e74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d083fbf72d4533d2009c725524983e1184981e74/comments", "author": null, "committer": null, "parents": [{"sha": "929056a7689bead913be686c3581bb8a8599acb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929056a7689bead913be686c3581bb8a8599acb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/929056a7689bead913be686c3581bb8a8599acb6"}], "stats": {"total": 258, "additions": 27, "deletions": 231}, "files": [{"sha": "29347f70bcd0128450d9b7ac6a1316f33f78129e", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d083fbf72d4533d2009c725524983e1184981e74/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d083fbf72d4533d2009c725524983e1184981e74/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=d083fbf72d4533d2009c725524983e1184981e74", "patch": "@@ -285,6 +285,8 @@\n \n ;; Comparisons for vc<cmp>\n (define_code_iterator COMPARISONS [eq gt ge le lt])\n+;; Comparisons for MVE\n+(define_code_iterator MVE_COMPARISONS [eq ge geu gt gtu le lt ne])\n \n ;; A list of ...\n (define_code_iterator IOR_XOR [ior xor])\n@@ -336,8 +338,14 @@\n (define_code_attr cmp_op [(eq \"eq\") (gt \"gt\") (ge \"ge\") (lt \"lt\") (le \"le\")\n                           (gtu \"gt\") (geu \"ge\")])\n \n+(define_code_attr mve_cmp_op [(eq \"eq\") (gt \"gt\") (ge \"ge\") (lt \"lt\") (le \"le\")\n+                              (gtu \"hi\") (geu \"cs\") (ne \"ne\")])\n+\n (define_code_attr cmp_type [(eq \"i\") (gt \"s\") (ge \"s\") (lt \"s\") (le \"s\")])\n \n+(define_code_attr mve_cmp_type [(eq \"i\") (gt \"s\") (ge \"s\") (lt \"s\") (le \"s\")\n+                                (gtu \"u\") (geu \"u\") (ne \"i\")])\n+\n (define_code_attr vfml_op [(plus \"a\") (minus \"s\")])\n \n (define_code_attr ss_op [(ss_plus \"qadd\") (ss_minus \"qsub\")])"}, {"sha": "85c108cd2699d6836bb83b819fedb1fcb70eba84", "filename": "gcc/config/arm/mve.md", "status": "modified", "additions": 19, "deletions": 231, "changes": 250, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d083fbf72d4533d2009c725524983e1184981e74/gcc%2Fconfig%2Farm%2Fmve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d083fbf72d4533d2009c725524983e1184981e74/gcc%2Fconfig%2Farm%2Fmve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmve.md?ref=d083fbf72d4533d2009c725524983e1184981e74", "patch": "@@ -811,17 +811,30 @@\n    (set_attr \"length\"\"8\")])\n \n ;;\n-;; [vcmpneq_])\n+;; [vcmpneq_, vcmpcsq_, vcmpeqq_, vcmpgeq_, vcmpgtq_, vcmphiq_, vcmpleq_, vcmpltq_])\n ;;\n-(define_insn \"mve_vcmpneq_<mode>\"\n+(define_insn \"mve_vcmp<mve_cmp_op>q_<mode>\"\n   [\n    (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:MVE_2 2 \"s_register_operand\" \"w\")]\n-\t VCMPNEQ))\n+\t(MVE_COMPARISONS:HI (match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n+\t\t    (match_operand:MVE_2 2 \"s_register_operand\" \"w\")))\n+  ]\n+  \"TARGET_HAVE_MVE\"\n+  \"vcmp.<mve_cmp_type>%#<V_sz_elem>  <mve_cmp_op>, %q1, %q2\"\n+  [(set_attr \"type\" \"mve_move\")\n+])\n+\n+;;\n+;; [vcmpcsq_n_, vcmpeqq_n_, vcmpgeq_n_, vcmpgtq_n_, vcmphiq_n_, vcmpleq_n_, vcmpltq_n_, vcmpneq_n_])\n+;;\n+(define_insn \"mve_vcmp<mve_cmp_op>q_n_<mode>\"\n+  [\n+   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n+\t(MVE_COMPARISONS:HI (match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n+\t\t    (match_operand:<V_elem> 2 \"s_register_operand\" \"r\")))\n   ]\n   \"TARGET_HAVE_MVE\"\n-  \"vcmp.i%#<V_sz_elem>  ne, %q1, %q2\"\n+  \"vcmp.<mve_cmp_type>%#<V_sz_elem>\t<mve_cmp_op>, %q1, %2\"\n   [(set_attr \"type\" \"mve_move\")\n ])\n \n@@ -979,231 +992,6 @@\n   \"TARGET_HAVE_MVE && !BYTES_BIG_ENDIAN\"\n )\n \n-;;\n-;; [vcmpcsq_n_])\n-;;\n-(define_insn \"mve_vcmpcsq_n_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:<V_elem> 2 \"s_register_operand\" \"r\")]\n-\t VCMPCSQ_N_U))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.u%#<V_sz_elem>\tcs, %q1, %2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmpcsq_])\n-;;\n-(define_insn \"mve_vcmpcsq_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:MVE_2 2 \"s_register_operand\" \"w\")]\n-\t VCMPCSQ_U))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.u%#<V_sz_elem>\tcs, %q1, %q2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmpeqq_n_])\n-;;\n-(define_insn \"mve_vcmpeqq_n_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:<V_elem> 2 \"s_register_operand\" \"r\")]\n-\t VCMPEQQ_N))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.i%#<V_sz_elem>\teq, %q1, %2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmpeqq_])\n-;;\n-(define_insn \"mve_vcmpeqq_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:MVE_2 2 \"s_register_operand\" \"w\")]\n-\t VCMPEQQ))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.i%#<V_sz_elem>\teq, %q1, %q2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmpgeq_n_])\n-;;\n-(define_insn \"mve_vcmpgeq_n_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:<V_elem> 2 \"s_register_operand\" \"r\")]\n-\t VCMPGEQ_N_S))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.s%#<V_sz_elem>\tge, %q1, %2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmpgeq_])\n-;;\n-(define_insn \"mve_vcmpgeq_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:MVE_2 2 \"s_register_operand\" \"w\")]\n-\t VCMPGEQ_S))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.s%#<V_sz_elem>\tge, %q1, %q2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmpgtq_n_])\n-;;\n-(define_insn \"mve_vcmpgtq_n_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:<V_elem> 2 \"s_register_operand\" \"r\")]\n-\t VCMPGTQ_N_S))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.s%#<V_sz_elem>\tgt, %q1, %2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmpgtq_])\n-;;\n-(define_insn \"mve_vcmpgtq_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:MVE_2 2 \"s_register_operand\" \"w\")]\n-\t VCMPGTQ_S))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.s%#<V_sz_elem>\tgt, %q1, %q2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmphiq_n_])\n-;;\n-(define_insn \"mve_vcmphiq_n_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:<V_elem> 2 \"s_register_operand\" \"r\")]\n-\t VCMPHIQ_N_U))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.u%#<V_sz_elem>\thi, %q1, %2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmphiq_])\n-;;\n-(define_insn \"mve_vcmphiq_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:MVE_2 2 \"s_register_operand\" \"w\")]\n-\t VCMPHIQ_U))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.u%#<V_sz_elem>\thi, %q1, %q2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmpleq_n_])\n-;;\n-(define_insn \"mve_vcmpleq_n_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:<V_elem> 2 \"s_register_operand\" \"r\")]\n-\t VCMPLEQ_N_S))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.s%#<V_sz_elem>\tle, %q1, %2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmpleq_])\n-;;\n-(define_insn \"mve_vcmpleq_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:MVE_2 2 \"s_register_operand\" \"w\")]\n-\t VCMPLEQ_S))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.s%#<V_sz_elem>\tle, %q1, %q2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmpltq_n_])\n-;;\n-(define_insn \"mve_vcmpltq_n_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:<V_elem> 2 \"s_register_operand\" \"r\")]\n-\t VCMPLTQ_N_S))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.s%#<V_sz_elem>\tlt, %q1, %2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmpltq_])\n-;;\n-(define_insn \"mve_vcmpltq_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:MVE_2 2 \"s_register_operand\" \"w\")]\n-\t VCMPLTQ_S))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.s%#<V_sz_elem>\tlt, %q1, %q2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmpneq_n_])\n-;;\n-(define_insn \"mve_vcmpneq_n_<mode>\"\n-  [\n-   (set (match_operand:HI 0 \"vpr_register_operand\" \"=Up\")\n-\t(unspec:HI [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:<V_elem> 2 \"s_register_operand\" \"r\")]\n-\t VCMPNEQ_N))\n-  ]\n-  \"TARGET_HAVE_MVE\"\n-  \"vcmp.i%#<V_sz_elem>\tne, %q1, %2\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n ;;\n ;; [veorq_u, veorq_s])\n ;;"}]}