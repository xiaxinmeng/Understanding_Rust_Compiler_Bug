{"sha": "962801c550a859cc05fd761fac09ade6beb5e34a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYyODAxYzU1MGE4NTljYzA1ZmQ3NjFmYWMwOWFkZTZiZWI1ZTM0YQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-01-19T14:30:23Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-01-19T14:30:23Z"}, "message": "[ARM] PR target/69135: Mark ARMv8 vcvt instructions as unconditional\n\n\tPR target/69135\n\t* config/arm/vfp.md (l<vrint_pattern><su_optab><mode>si2): Set \"conds\"\n\tattribute to unconditional.  Remove %? from output template.\n\n\t* gcc.target/arm/pr69135_1.c: New test.\n\nFrom-SVN: r232566", "tree": {"sha": "4fe4979a0aadcae5f02ec5165a898600c262e4bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fe4979a0aadcae5f02ec5165a898600c262e4bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/962801c550a859cc05fd761fac09ade6beb5e34a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/962801c550a859cc05fd761fac09ade6beb5e34a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/962801c550a859cc05fd761fac09ade6beb5e34a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/962801c550a859cc05fd761fac09ade6beb5e34a/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "078fe40a489e7a4f62553feab15288066906d146", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/078fe40a489e7a4f62553feab15288066906d146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/078fe40a489e7a4f62553feab15288066906d146"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "bffbedf2591151ab04ed6d7a3a9ea02a44ff10f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962801c550a859cc05fd761fac09ade6beb5e34a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962801c550a859cc05fd761fac09ade6beb5e34a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=962801c550a859cc05fd761fac09ade6beb5e34a", "patch": "@@ -1,3 +1,9 @@\n+2016-01-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/69135\n+\t* config/arm/vfp.md (l<vrint_pattern><su_optab><mode>si2): Set \"conds\"\n+\tattribute to unconditional.  Remove %? from output template.\n+\n 2015-01-19  Wilco Dijkstra  <wdijkstr@arm.com>\n \t    Jiong Wang  <jiong.wang@arm.com>\n "}, {"sha": "ac5f3b862b5a66227cfa20c36c9f780c743ed853", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962801c550a859cc05fd761fac09ade6beb5e34a/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962801c550a859cc05fd761fac09ade6beb5e34a/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=962801c550a859cc05fd761fac09ade6beb5e34a", "patch": "@@ -1334,8 +1334,9 @@\n                         [(match_operand:SDF 1\n                            \"register_operand\" \"<F_constraint>\")] VCVT)))]\n   \"TARGET_HARD_FLOAT && TARGET_FPU_ARMV8 <vfp_double_cond>\"\n-  \"vcvt<vrint_variant>%?.<su>32.<V_if_elem>\\\\t%0, %<V_reg>1\"\n+  \"vcvt<vrint_variant>.<su>32.<V_if_elem>\\\\t%0, %<V_reg>1\"\n   [(set_attr \"predicable\" \"no\")\n+   (set_attr \"conds\" \"unconditional\")\n    (set_attr \"type\" \"f_cvtf2i\")]\n )\n "}, {"sha": "f360afd54565814b37718aa7ef73729102f9d70f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962801c550a859cc05fd761fac09ade6beb5e34a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962801c550a859cc05fd761fac09ade6beb5e34a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=962801c550a859cc05fd761fac09ade6beb5e34a", "patch": "@@ -1,3 +1,8 @@\n+2016-01-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/69135\n+\t* gcc.target/arm/pr69135_1.c: New test.\n+\n 2015-01-19  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc.target/aarch64/ccmp_1.c: Add new tests."}, {"sha": "6fb9e0681baed833bd530601bfb94d3d86c3e9f2", "filename": "gcc/testsuite/gcc.target/arm/pr69135_1.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962801c550a859cc05fd761fac09ade6beb5e34a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr69135_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962801c550a859cc05fd761fac09ade6beb5e34a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr69135_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr69135_1.c?ref=962801c550a859cc05fd761fac09ade6beb5e34a", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do assemble } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-require-effective-target arm_arch_v8a_ok } */\n+/* { dg-options \"-O2 -ffast-math\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+/* { dg-add-options arm_arch_v8a } */\n+\n+int global;\n+\n+void\n+lceil_float (float x, int b)\n+{\n+  if (b) global = __builtin_lceilf (x);\n+}\n+\n+void\n+lceil_double (double x, int b)\n+{\n+  if (b) global = __builtin_lceil (x);\n+}\n+\n+void\n+lfloor_float (float x, int b)\n+{\n+  if (b) global =  __builtin_lfloorf (x);\n+}\n+\n+void\n+lfloor_double (double x, int b)\n+{\n+  if (b) global = __builtin_lfloor (x);\n+}\n+\n+void\n+lround_float (float x, int b)\n+{\n+  if (b) global = __builtin_lroundf (x);\n+}\n+\n+void\n+lround_double (double x, int b)\n+{\n+  if (b) global = __builtin_lround (x);\n+}"}]}