{"sha": "9846edffa4b32333e313d5760e16efdb3dae5291", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg0NmVkZmZhNGIzMjMzM2UzMTNkNTc2MGUxNmVmZGIzZGFlNTI5MQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2015-05-21T17:25:00Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2015-05-21T17:25:00Z"}, "message": "inclhack.def (aix_externc): New fix.\n\n\t* inclhack.def (aix_externc): New fix.\n\t(aix_externcpp[12]): New fix.\n\t* fixincl.x: Regenerate.\n\t* test/base/ctype.h [AIX_EXTERNC_CHECK]: New test.\n\t* test/base/sys/socket.h [AIX_EXTERNCPP[12]_CHECK]: New test.\n\t* test/base/fcntl.h: New file.\n\nFrom-SVN: r223497", "tree": {"sha": "7eb5b585f58c6ce347afff40652791a2c1f15c74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eb5b585f58c6ce347afff40652791a2c1f15c74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9846edffa4b32333e313d5760e16efdb3dae5291", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9846edffa4b32333e313d5760e16efdb3dae5291", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9846edffa4b32333e313d5760e16efdb3dae5291", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9846edffa4b32333e313d5760e16efdb3dae5291/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3592e196a92f72d6195023b24f4d1aab9c64242", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3592e196a92f72d6195023b24f4d1aab9c64242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3592e196a92f72d6195023b24f4d1aab9c64242"}], "stats": {"total": 259, "additions": 254, "deletions": 5}, "files": [{"sha": "4ac5138ebdc3d875cc16f89775be26168b917160", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9846edffa4b32333e313d5760e16efdb3dae5291/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9846edffa4b32333e313d5760e16efdb3dae5291/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=9846edffa4b32333e313d5760e16efdb3dae5291", "patch": "@@ -1,3 +1,12 @@\n+2015-05-21  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* inclhack.def (aix_externc): New fix.\n+\t(aix_externcpp[12]): New fix.\n+\t* fixincl.x: Regenerate.\n+\t* test/base/ctype.h [AIX_EXTERNC_CHECK]: New test.\n+\t* test/base/sys/socket.h [AIX_EXTERNCPP[12]_CHECK]: New test.\n+\t* test/base/fcntl.h: New file.\n+\n 2015-05-13  Michael Haubenwallner  <michael.haubenwallner@ssi-schaefer.com>\n \n \t* aclocal.m4: Regenerated with automake-1.11.6."}, {"sha": "d796014275e6d423c9c346bb8f155ed851636500", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 141, "deletions": 5, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9846edffa4b32333e313d5760e16efdb3dae5291/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9846edffa4b32333e313d5760e16efdb3dae5291/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=9846edffa4b32333e313d5760e16efdb3dae5291", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Saturday March 28, 2015 at 01:24:12 PM EDT\n+ * It has been AutoGen-ed  May 21, 2015 at 02:48:12 AM by AutoGen 5.18.3\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sat 28 Mar 2015 13:24:12 EDT\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Thu May 21 02:48:12 UTC 2015\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 226 fixup descriptions.\n+ * This file contains 229 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -810,6 +810,124 @@ static const char* apzAix_ComplexPatch[] = {\n     \"#define _Complex_I (__extension__ 1.0iF)\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Externc fix\n+ */\n+tSCC zAix_ExterncName[] =\n+     \"aix_externc\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_ExterncList[] =\n+  \"ctype.h\\0fcntl.h\\0langinfo.h\\0ldfcn.h\\0sys/localedef.h\\0sys/times.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_ExterncMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zAix_ExterncBypass0[] =\n+       \"extern \\\"C\\\"\";\n+\n+#define    AIX_EXTERNC_TEST_CT  1\n+static tTestDesc aAix_ExterncTests[] = {\n+  { TT_NEGREP,   zAix_ExterncBypass0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Externc\n+ */\n+static const char* apzAix_ExterncPatch[] = {\n+    \"wrap\",\n+    \"#ifdef __cplusplus\\n\\\n+extern \\\"C\\\" {\\n\\\n+#endif\\n\",\n+    \"#ifdef __cplusplus\\n\\\n+}\\n\\\n+#endif\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Externcpp1 fix\n+ */\n+tSCC zAix_Externcpp1Name[] =\n+     \"aix_externcpp1\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_Externcpp1List[] =\n+  \"sys/socket.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_Externcpp1Machs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_Externcpp1Select0[] =\n+       \"#ifdef __cplusplus\";\n+\n+#define    AIX_EXTERNCPP1_TEST_CT  1\n+static tTestDesc aAix_Externcpp1Tests[] = {\n+  { TT_EGREP,    zAix_Externcpp1Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Externcpp1\n+ */\n+static const char* apzAix_Externcpp1Patch[] = {\n+    \"format\",\n+    \"#ifdef __cplusplus\\n\\\n+extern \\\"C++\\\" {\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Externcpp2 fix\n+ */\n+tSCC zAix_Externcpp2Name[] =\n+     \"aix_externcpp2\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_Externcpp2List[] =\n+  \"sys/socket.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_Externcpp2Machs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_Externcpp2Select0[] =\n+       \"#else  /\\\\* __cplusplus \\\\*/\";\n+\n+#define    AIX_EXTERNCPP2_TEST_CT  1\n+static tTestDesc aAix_Externcpp2Tests[] = {\n+  { TT_EGREP,    zAix_Externcpp2Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Externcpp2\n+ */\n+static const char* apzAix_Externcpp2Patch[] = {\n+    \"format\",\n+    \"} /* extern \\\"C++\\\" */\\n\\\n+#else  /* __cplusplus */\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Aix_Malloc fix\n@@ -9278,9 +9396,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          263\n+#define REGEX_COUNT          266\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            226\n+#define FIX_COUNT            229\n \n /*\n  *  Enumerate the fixes\n@@ -9300,6 +9418,9 @@ typedef enum {\n     AAB_VXWORKS_UNISTD_FIXIDX,\n     AIX_ASSERT_FIXIDX,\n     AIX_COMPLEX_FIXIDX,\n+    AIX_EXTERNC_FIXIDX,\n+    AIX_EXTERNCPP1_FIXIDX,\n+    AIX_EXTERNCPP2_FIXIDX,\n     AIX_MALLOC_FIXIDX,\n     AIX_NET_IF_ARP_FIXIDX,\n     AIX_NULL_FIXIDX,\n@@ -9585,6 +9706,21 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AIX_COMPLEX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAix_ComplexTests,   apzAix_ComplexPatch, 0 },\n \n+  {  zAix_ExterncName,    zAix_ExterncList,\n+     apzAix_ExterncMachs,\n+     AIX_EXTERNC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_ExterncTests,   apzAix_ExterncPatch, 0 },\n+\n+  {  zAix_Externcpp1Name,    zAix_Externcpp1List,\n+     apzAix_Externcpp1Machs,\n+     AIX_EXTERNCPP1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_Externcpp1Tests,   apzAix_Externcpp1Patch, 0 },\n+\n+  {  zAix_Externcpp2Name,    zAix_Externcpp2List,\n+     apzAix_Externcpp2Machs,\n+     AIX_EXTERNCPP2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_Externcpp2Tests,   apzAix_Externcpp2Patch, 0 },\n+\n   {  zAix_MallocName,    zAix_MallocList,\n      apzAix_MallocMachs,\n      AIX_MALLOC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "89c7aa8d93879ecaa92930587448df1423b34a02", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9846edffa4b32333e313d5760e16efdb3dae5291/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9846edffa4b32333e313d5760e16efdb3dae5291/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=9846edffa4b32333e313d5760e16efdb3dae5291", "patch": "@@ -596,6 +596,56 @@ fix = {\n     test_text = \"#define _Complex_I\t__I\\n\";\n };\n \n+/*\n+ *  On AIX some headers are not properly guarded by 'extern \"C\"'.\n+ */\n+fix = {\n+  hackname  = aix_externc;\n+  mach      = \"*-*-aix*\";\n+  files     = ctype.h;\n+  files     = fcntl.h;\n+  files     = langinfo.h;\n+  files     = ldfcn.h;\n+  files     = sys/localedef.h;\n+  files     = sys/times.h;\n+  bypass    = \"extern \\\"C\\\"\";\n+  c_fix     = wrap;\n+  c_fix_arg = \"#ifdef __cplusplus\\n\"\n+              \"extern \\\"C\\\" {\\n\"\n+              \"#endif\\n\";\n+  c_fix_arg = \"#ifdef __cplusplus\\n\"\n+              \"}\\n\"\n+              \"#endif\\n\";\n+  test_text = \"extern int __n_pthreads;\\n\";\n+};\n+\n+/*\n+ *  On AIX sys/socket.h assumes C++.\n+ */\n+fix = {\n+  hackname  = aix_externcpp1;\n+  mach      = \"*-*-aix*\";\n+  files     = \"sys/socket.h\";\n+  select    = \"#ifdef __cplusplus\";\n+  c_fix     = format;\n+  c_fix_arg = \"#ifdef __cplusplus\\n\"\n+              \"extern \\\"C++\\\" {\";\n+  test_text = \"#ifdef __cplusplus\";\n+\n+};\n+\n+fix = {\n+  hackname  = aix_externcpp2;\n+  mach      = \"*-*-aix*\";\n+  files     = \"sys/socket.h\";\n+  select    = \"#else  /\\\\* __cplusplus \\\\*/\";\n+  c_fix     = format;\n+  c_fix_arg = \"} /* extern \\\"C++\\\" */\\n\"\n+              \"#else  /* __cplusplus */\";\n+  test_text = \"#else  /* __cplusplus */\";\n+\n+};\n+\n /*\n  *  malloc.h on AIX6 uses XLC++ specific builtin syntax\n  */"}, {"sha": "834b2e52c3383be68b7590e8555c97f693caf4f0", "filename": "fixincludes/tests/base/ctype.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9846edffa4b32333e313d5760e16efdb3dae5291/fixincludes%2Ftests%2Fbase%2Fctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9846edffa4b32333e313d5760e16efdb3dae5291/fixincludes%2Ftests%2Fbase%2Fctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fctype.h?ref=9846edffa4b32333e313d5760e16efdb3dae5291", "patch": "@@ -7,6 +7,18 @@\n     This had to be done to correct non-standard usages in the\n     original, manufacturer supplied header file.  */\n \n+#ifndef FIXINC_WRAP_CTYPE_H_AIX_EXTERNC\n+#define FIXINC_WRAP_CTYPE_H_AIX_EXTERNC 1\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+\n+#if defined( AIX_EXTERNC_CHECK )\n+extern int __n_pthreads;\n+\n+#endif  /* AIX_EXTERNC_CHECK */\n \n \n #if defined( HPUX10_CTYPE_DECLARATIONS1_CHECK )\n@@ -63,3 +75,8 @@ extern int __toupper();\n # define isalpha(__c) (__SB_masks ? (int)__SB_masks[__c] & _IS\n \n #endif  /* HPUX_CTYPE_MACROS_CHECK */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif  /* FIXINC_WRAP_CTYPE_H_AIX_EXTERNC */"}, {"sha": "3a40c01cabe658db1e73c742df5d3b619ee5d7d4", "filename": "fixincludes/tests/base/fcntl.h", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9846edffa4b32333e313d5760e16efdb3dae5291/fixincludes%2Ftests%2Fbase%2Ffcntl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9846edffa4b32333e313d5760e16efdb3dae5291/fixincludes%2Ftests%2Fbase%2Ffcntl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Ffcntl.h?ref=9846edffa4b32333e313d5760e16efdb3dae5291", "patch": "@@ -0,0 +1,25 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/fcntl.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+#ifndef FIXINC_WRAP_FCNTL_H_AIX_EXTERNC\n+#define FIXINC_WRAP_FCNTL_H_AIX_EXTERNC 1\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+\n+#if defined( AAB_AIX_FCNTL_CHECK )\n+\n+#endif  /* AAB_AIX_FCNTL_CHECK */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif  /* FIXINC_WRAP_FCNTL_H_AIX_EXTERNC */"}, {"sha": "5d66f8be2912beb3d830154d79a971ed1e952c9a", "filename": "fixincludes/tests/base/sys/socket.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9846edffa4b32333e313d5760e16efdb3dae5291/fixincludes%2Ftests%2Fbase%2Fsys%2Fsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9846edffa4b32333e313d5760e16efdb3dae5291/fixincludes%2Ftests%2Fbase%2Fsys%2Fsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Fsocket.h?ref=9846edffa4b32333e313d5760e16efdb3dae5291", "patch": "@@ -9,6 +9,18 @@\n \n \n \n+#if defined( AIX_EXTERNCPP1_CHECK )\n+#ifdef __cplusplus\n+extern \"C++\" {\n+#endif  /* AIX_EXTERNCPP1_CHECK */\n+\n+\n+#if defined( AIX_EXTERNCPP2_CHECK )\n+} /* extern \"C++\" */\n+#else  /* __cplusplus */\n+#endif  /* AIX_EXTERNCPP2_CHECK */\n+\n+\n #if defined( HPUX11_EXTERN_SENDFILE_CHECK )\n #ifndef _APP32_64BIT_OFF_T\n    extern sbsize_t sendfile __((int, int, off_t, bsize_t,"}]}