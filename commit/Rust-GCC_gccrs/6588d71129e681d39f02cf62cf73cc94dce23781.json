{"sha": "6588d71129e681d39f02cf62cf73cc94dce23781", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU4OGQ3MTEyOWU2ODFkMzlmMDJjZjYyY2Y3M2NjOTRkY2UyMzc4MQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2012-01-03T11:36:25Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2012-01-03T11:36:25Z"}, "message": "collect2.c (main): In AIX specific computations for vector insertions...\n\n        * collect2.c (main): In AIX specific computations for vector\n        insertions, use CONST_CAST2 to cast from char ** to const char **.\n\nFrom-SVN: r182836", "tree": {"sha": "155197ac3e11c8002e9dff04bfaa7d583cc7577f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/155197ac3e11c8002e9dff04bfaa7d583cc7577f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6588d71129e681d39f02cf62cf73cc94dce23781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6588d71129e681d39f02cf62cf73cc94dce23781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6588d71129e681d39f02cf62cf73cc94dce23781", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6588d71129e681d39f02cf62cf73cc94dce23781/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3321fd71519a24f58a8e21048a191be042ff121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3321fd71519a24f58a8e21048a191be042ff121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3321fd71519a24f58a8e21048a191be042ff121"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "c95a7ef05b79189048f9820d287f86e168e44e3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6588d71129e681d39f02cf62cf73cc94dce23781/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6588d71129e681d39f02cf62cf73cc94dce23781/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6588d71129e681d39f02cf62cf73cc94dce23781", "patch": "@@ -1,3 +1,8 @@\n+2012-01-03  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* collect2.c (main): In AIX specific computations for vector\n+\tinsertions, use CONST_CAST2 to cast from char ** to const char **.\n+\n 2012-01-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR debug/51650"}, {"sha": "a44b2e7bc848f4d4c0fe0550eaca82484e4f5068", "filename": "gcc/collect2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6588d71129e681d39f02cf62cf73cc94dce23781/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6588d71129e681d39f02cf62cf73cc94dce23781/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=6588d71129e681d39f02cf62cf73cc94dce23781", "patch": "@@ -1481,11 +1481,14 @@ main (int argc, char **argv)\n \t\t\t extra space for remaining arguments.  */\n \t\t      if (add_nbr >= add_max)\n \t\t\t{\n-\t\t\t  int pos = object - (const char **)object_lst;\n+\t\t\t  int pos =\n+\t\t\t    object - CONST_CAST2 (const char **, char **,\n+\t\t\t\t\t\t  object_lst);\n \t\t\t  add_max = (add_max == 0) ? 16 : add_max * 2;\n \t\t\t  object_lst = XRESIZEVEC (char *, object_lst,\n                                                    object_nbr + add_max);\n-\t\t\t  object = (const char **) object_lst + pos;\n+\t\t\t  object = CONST_CAST2 (const char **, char **,\n+\t\t\t\t\t\tobject_lst) + pos;\n \t\t\t  object_nbr += add_max;\n \t\t\t}\n \t\t      *object++ = xstrdup (buf);"}]}