{"sha": "74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRlYTlhYjYxYmRiYzRmMzQyMjJlMGJkMGIzNTFlZDFhNDhkNDZhMg==", "commit": {"author": {"name": "Andrey Belevantsev", "email": "abel@ispras.ru", "date": "2016-03-15T15:13:29Z"}, "committer": {"name": "Andrey Belevantsev", "email": "abel@gcc.gnu.org", "date": "2016-03-15T15:13:29Z"}, "message": "re PR target/64411 (ICE: in verify_target_availability, at sel-sched.c:1577 with -Os -mcmodel=medium -fPIC -fschedule-insns -fselective-scheduling)\n\ngcc/\n\n        PR target/64411\n        * sched-deps.c (get_implicit_reg_pending_clobbers): New function,\n        factored out from ...\n        (sched_analyze_insn): ... here.\n        * sched-int.h (get_implicit_reg_pending_clobbers): Declare it.\n        * sel-sched-ir.c (setup_id_implicit_regs): New function, use\n        get_implicit_reg_pending_clobbers in it.\n        (setup_id_reg_sets): Use setup_id_implicit_regs.\n        (deps_init_id): Ditto.\n\ntestsuite/\n\n\tPR target/64411\n\t* gcc.target/i386/pr64411.C: New test.\n\nFrom-SVN: r234216", "tree": {"sha": "8017fc5d458182e7092f7583bc919e33353ec025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8017fc5d458182e7092f7583bc919e33353ec025"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/comments", "author": {"login": "abonzo", "id": 20396542, "node_id": "MDQ6VXNlcjIwMzk2NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/20396542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonzo", "html_url": "https://github.com/abonzo", "followers_url": "https://api.github.com/users/abonzo/followers", "following_url": "https://api.github.com/users/abonzo/following{/other_user}", "gists_url": "https://api.github.com/users/abonzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonzo/subscriptions", "organizations_url": "https://api.github.com/users/abonzo/orgs", "repos_url": "https://api.github.com/users/abonzo/repos", "events_url": "https://api.github.com/users/abonzo/events{/privacy}", "received_events_url": "https://api.github.com/users/abonzo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "045d50559b3c9e0a01044084cec13a4fef11c6d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/045d50559b3c9e0a01044084cec13a4fef11c6d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/045d50559b3c9e0a01044084cec13a4fef11c6d9"}], "stats": {"total": 89, "additions": 79, "deletions": 10}, "files": [{"sha": "f22fed4bd0f7fd0277435ad75fdef4e51c2cab6b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2", "patch": "@@ -1,3 +1,15 @@\n+2016-03-15  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR target/64411\n+\t* sched-deps.c (get_implicit_reg_pending_clobbers): New function,\n+\tfactored out from ...\n+\t(sched_analyze_insn): ... here.\n+\t* sched-int.h (get_implicit_reg_pending_clobbers): Declare it.\n+\t* sel-sched-ir.c (setup_id_implicit_regs): New function, use\n+\tget_implicit_reg_pending_clobbers in it.\n+\t(setup_id_reg_sets): Use setup_id_implicit_regs.\n+\t(deps_init_id): Ditto.\n+\n 2016-03-15  Tom de Vries  <tom@codesourcery.com>\n \n \tPR ipa/70161"}, {"sha": "5cc8e634427cecb0e7d57e8a322c937776251438", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2", "patch": "@@ -2860,6 +2860,17 @@ sched_macro_fuse_insns (rtx_insn *insn)\n \n }\n \n+/* Get the implicit reg pending clobbers for INSN and save them in TEMP.  */\n+void\n+get_implicit_reg_pending_clobbers (HARD_REG_SET *temp, rtx_insn *insn)\n+{\n+  extract_insn (insn);\n+  preprocess_constraints (insn);\n+  alternative_mask preferred = get_preferred_alternatives (insn);\n+  ira_implicitly_set_insn_hard_regs (temp, preferred);\n+  AND_COMPL_HARD_REG_SET (*temp, ira_no_alloc_regs);\n+}\n+\n /* Analyze an INSN with pattern X to find all dependencies.  */\n static void\n sched_analyze_insn (struct deps_desc *deps, rtx x, rtx_insn *insn)\n@@ -2872,12 +2883,7 @@ sched_analyze_insn (struct deps_desc *deps, rtx x, rtx_insn *insn)\n   if (! reload_completed)\n     {\n       HARD_REG_SET temp;\n-\n-      extract_insn (insn);\n-      preprocess_constraints (insn);\n-      alternative_mask prefrred = get_preferred_alternatives (insn);\n-      ira_implicitly_set_insn_hard_regs (&temp, prefrred);\n-      AND_COMPL_HARD_REG_SET (temp, ira_no_alloc_regs);\n+      get_implicit_reg_pending_clobbers (&temp, insn);\n       IOR_HARD_REG_SET (implicit_reg_pending_clobbers, temp);\n     }\n "}, {"sha": "de5d32692663620af67b5dac06dd5efb5c40e303", "filename": "gcc/sched-int.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/gcc%2Fsched-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/gcc%2Fsched-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-int.h?ref=74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2", "patch": "@@ -1351,6 +1351,7 @@ extern void finish_deps_global (void);\n extern void deps_analyze_insn (struct deps_desc *, rtx_insn *);\n extern void remove_from_deps (struct deps_desc *, rtx_insn *);\n extern void init_insn_reg_pressure_info (rtx_insn *);\n+extern void get_implicit_reg_pending_clobbers (HARD_REG_SET *, rtx_insn *);\n \n extern dw_t get_dep_weak (ds_t, ds_t);\n extern ds_t set_dep_weak (ds_t, ds_t, dw_t);"}, {"sha": "5cb36dfbef12eb28d38f81027c21959938c769a9", "filename": "gcc/sel-sched-ir.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/gcc%2Fsel-sched-ir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/gcc%2Fsel-sched-ir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.c?ref=74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2", "patch": "@@ -2650,6 +2650,23 @@ maybe_downgrade_id_to_use (idata_t id, insn_t insn)\n     IDATA_TYPE (id) = USE;\n }\n \n+/* Setup implicit register clobbers calculated by sched-deps for INSN\n+   before reload and save them in ID.  */\n+static void\n+setup_id_implicit_regs (idata_t id, insn_t insn)\n+{\n+  if (reload_completed)\n+    return;\n+\n+  HARD_REG_SET temp;\n+  unsigned regno;\n+  hard_reg_set_iterator hrsi;\n+\n+  get_implicit_reg_pending_clobbers (&temp, insn);\n+  EXECUTE_IF_SET_IN_HARD_REG_SET (temp, 0, regno, hrsi)\n+    SET_REGNO_REG_SET (IDATA_REG_SETS (id), regno);\n+}\n+\n /* Setup register sets describing INSN in ID.  */\n static void\n setup_id_reg_sets (idata_t id, insn_t insn)\n@@ -2704,6 +2721,9 @@ setup_id_reg_sets (idata_t id, insn_t insn)\n \t}\n     }\n \n+  /* Also get implicit reg clobbers from sched-deps.  */\n+  setup_id_implicit_regs (id, insn);\n+\n   return_regset_to_pool (tmp);\n }\n \n@@ -2735,20 +2755,18 @@ deps_init_id (idata_t id, insn_t insn, bool force_unique_p)\n   deps_init_id_data.force_use_p = false;\n \n   init_deps (dc, false);\n-\n   memcpy (&deps_init_id_sched_deps_info,\n \t  &const_deps_init_id_sched_deps_info,\n \t  sizeof (deps_init_id_sched_deps_info));\n-\n   if (spec_info != NULL)\n     deps_init_id_sched_deps_info.generate_spec_deps = 1;\n-\n   sched_deps_info = &deps_init_id_sched_deps_info;\n \n   deps_analyze_insn (dc, insn);\n+  /* Implicit reg clobbers received from sched-deps separately.  */\n+  setup_id_implicit_regs (id, insn);\n \n   free_deps (dc);\n-\n   deps_init_id_data.id = NULL;\n }\n "}, {"sha": "7b5fa632e1ffa97c0f91e84f43cbfe7ad769f16a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2", "patch": "@@ -1,3 +1,8 @@\n+2016-03-15  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR target/64411\n+\t* gcc.target/i386/pr64411.C: New test.\n+\n 2016-03-15  Tom de Vries  <tom@codesourcery.com>\n \n \t* gfortran.dg/goacc/kernels-alias-2.f95: New test."}, {"sha": "55858fb48ebde927c2803edec060ea85cfba5370", "filename": "gcc/testsuite/gcc.target/i386/pr64411.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64411.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64411.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64411.C?ref=74ea9ab61bdbc4f34222e0bd0b351ed1a48d46a2", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -mcmodel=medium -fPIC -fschedule-insns -fselective-scheduling\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+extern \"C\"  long strtol ()\n+  { return 0; }\n+\n+static struct {\n+  void *sp[2];\n+} info;\n+\n+union S813\n+{\n+  void * c[5];\n+}\n+s813;\n+\n+S813 a813[5];\n+S813 check813 (S813, S813 *, S813);\n+\n+void checkx813 ()\n+{\n+  __builtin_memset (&s813, '\\0', sizeof (s813));\n+  __builtin_memset (&info, '\\0', sizeof (info));\n+  check813 (s813, &a813[1], a813[2]);\n+}"}]}