{"sha": "68c6b3a925e4432121539692ccb69b76f0cf2529", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhjNmIzYTkyNWU0NDMyMTIxNTM5NjkyY2NiNjliNzZmMGNmMjUyOQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-12-09T21:06:03Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-12-09T21:06:03Z"}, "message": "(fold): Call real_zerop for real constants.\n\nFrom-SVN: r8634", "tree": {"sha": "e2d8f045e8a8970bb6ced9f4b38d85e215cb6d4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2d8f045e8a8970bb6ced9f4b38d85e215cb6d4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68c6b3a925e4432121539692ccb69b76f0cf2529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c6b3a925e4432121539692ccb69b76f0cf2529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68c6b3a925e4432121539692ccb69b76f0cf2529", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c6b3a925e4432121539692ccb69b76f0cf2529/comments", "author": null, "committer": null, "parents": [{"sha": "213ecac93cda962ad3eefc5f5231529c84f41650", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213ecac93cda962ad3eefc5f5231529c84f41650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/213ecac93cda962ad3eefc5f5231529c84f41650"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "e49fcfb6d312d358539a8087fbf6b43646a15d99", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c6b3a925e4432121539692ccb69b76f0cf2529/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c6b3a925e4432121539692ccb69b76f0cf2529/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=68c6b3a925e4432121539692ccb69b76f0cf2529", "patch": "@@ -4724,7 +4724,9 @@ fold (expr)\n \n \t  /* If we have A op 0 ? A : -A, this is A, -A, abs (A), or abs (-A),\n \t     depending on the comparison operation.  */\n-\t  if (integer_zerop (TREE_OPERAND (arg0, 1))\n+\t  if ((FLOAT_TYPE_P (TREE_TYPE (TREE_OPERAND (arg0, 1)))\n+\t       ? real_zerop (TREE_OPERAND (arg0, 1))\n+\t       : integer_zerop (TREE_OPERAND (arg0, 1)))\n \t      && TREE_CODE (arg2) == NEGATE_EXPR\n \t      && operand_equal_p (TREE_OPERAND (arg2, 0), arg1, 0))\n \t    switch (comp_code)"}]}