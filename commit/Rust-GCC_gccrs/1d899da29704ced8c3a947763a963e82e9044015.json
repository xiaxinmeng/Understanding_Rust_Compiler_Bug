{"sha": "1d899da29704ced8c3a947763a963e82e9044015", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ4OTlkYTI5NzA0Y2VkOGMzYTk0Nzc2M2E5NjNlODJlOTA0NDAxNQ==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-11-15T00:18:08Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-11-15T00:18:08Z"}, "message": "always define ENABLE_OFFLOADING\n\ngcc/cp/ChangeLog:\n\n2015-11-14  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* parser.c (cp_parser_omp_declare_target): Adjust.\n\ngcc/ChangeLog:\n\n2015-11-14  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* configure: Regenerate.\n\t* configure.ac: Always define ENABLE_OFFLOADING.\n\t* cgraph.c (cgraph_node::create): Adjust.\n\t* gcc.c (process_command): Likewise.\n\t* omp-low.c (create_omp_child_function): Likewise.\n\t(expand_omp_target): Likewise.\n\t* varpool.c (varpool_node::get_create): Likewise.\n\ngcc/c/ChangeLog:\n\n2015-11-14  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* c-parser.c (c_parser_omp_declare_target): Adjust.\n\nFrom-SVN: r230393", "tree": {"sha": "fe7f3471ed76026bcad310f09c41225d048f1074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe7f3471ed76026bcad310f09c41225d048f1074"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d899da29704ced8c3a947763a963e82e9044015", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d899da29704ced8c3a947763a963e82e9044015", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d899da29704ced8c3a947763a963e82e9044015", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d899da29704ced8c3a947763a963e82e9044015/comments", "author": null, "committer": null, "parents": [{"sha": "dd4fb6097ad6c16af5ba806c56513e5d756ab852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd4fb6097ad6c16af5ba806c56513e5d756ab852", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd4fb6097ad6c16af5ba806c56513e5d756ab852"}], "stats": {"total": 93, "additions": 58, "deletions": 35}, "files": [{"sha": "ed9560128bb5c1042e441bdc1cbf8c390d2bbe89", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d899da29704ced8c3a947763a963e82e9044015/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d899da29704ced8c3a947763a963e82e9044015/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d899da29704ced8c3a947763a963e82e9044015", "patch": "@@ -1,3 +1,13 @@\n+2015-11-14  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* configure: Regenerate.\n+\t* configure.ac: Always define ENABLE_OFFLOADING.\n+\t* cgraph.c (cgraph_node::create): Adjust.\n+\t* gcc.c (process_command): Likewise.\n+\t* omp-low.c (create_omp_child_function): Likewise.\n+\t(expand_omp_target): Likewise.\n+\t* varpool.c (varpool_node::get_create): Likewise.\n+\n 2015-11-14  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* defaults.h (EH_RETURN_HANDLER_RTX): New default definition."}, {"sha": "ce4d7c00dbdb18575be6473b14aabe4fe76aef6b", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=1d899da29704ced8c3a947763a963e82e9044015", "patch": "@@ -1,3 +1,7 @@\n+2015-11-14  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* c-parser.c (c_parser_omp_declare_target): Adjust.\n+\n 2015-11-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-typeck.c (c_finish_omp_clauses): Don't mark"}, {"sha": "e470234d738350f2b9985469635239f3d47f2caf", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=1d899da29704ced8c3a947763a963e82e9044015", "patch": "@@ -16300,14 +16300,15 @@ c_parser_omp_declare_target (c_parser *parser)\n \t  if (node != NULL)\n \t    {\n \t      node->offloadable = 1;\n-#ifdef ENABLE_OFFLOADING\n-\t      g->have_offload = true;\n-\t      if (is_a <varpool_node *> (node))\n+\t      if (ENABLE_OFFLOADING)\n \t\t{\n-\t\t  vec_safe_push (offload_vars, t);\n-\t\t  node->force_output = 1;\n+\t\t  g->have_offload = true;\n+\t\t  if (is_a <varpool_node *> (node))\n+\t\t    {\n+\t\t      vec_safe_push (offload_vars, t);\n+\t\t      node->force_output = 1;\n+\t\t    }\n \t\t}\n-#endif\n \t    }\n \t}\n     }"}, {"sha": "b1228a2d5de36fa08eaffb83432d789e33e9cf22", "filename": "gcc/cgraph.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=1d899da29704ced8c3a947763a963e82e9044015", "patch": "@@ -499,9 +499,8 @@ cgraph_node::create (tree decl)\n       && lookup_attribute (\"omp declare target\", DECL_ATTRIBUTES (decl)))\n     {\n       node->offloadable = 1;\n-#ifdef ENABLE_OFFLOADING\n-      g->have_offload = true;\n-#endif\n+      if (ENABLE_OFFLOADING)\n+\tg->have_offload = true;\n     }\n \n   node->register_symbol ();"}, {"sha": "d5f6dd477b56431daf3405ec4de2f196616d90dd", "filename": "gcc/configure", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=1d899da29704ced8c3a947763a963e82e9044015", "patch": "@@ -7715,6 +7715,10 @@ if test x\"$offload_targets\" != x; then\n \n $as_echo \"#define ENABLE_OFFLOADING 1\" >>confdefs.h\n \n+else\n+\n+$as_echo \"#define ENABLE_OFFLOADING 0\" >>confdefs.h\n+\n fi\n \n \n@@ -18402,7 +18406,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18405 \"configure\"\n+#line 18409 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18508,7 +18512,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18511 \"configure\"\n+#line 18515 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "34df54924973c8fba5268be9c505e90aad5231fe", "filename": "gcc/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=1d899da29704ced8c3a947763a963e82e9044015", "patch": "@@ -951,6 +951,9 @@ AC_DEFINE_UNQUOTED(OFFLOAD_TARGETS, \"$offload_targets\",\n if test x\"$offload_targets\" != x; then\n   AC_DEFINE(ENABLE_OFFLOADING, 1,\n     [Define this to enable support for offloading.])\n+else\n+  AC_DEFINE(ENABLE_OFFLOADING, 0,\n+    [Define this to enable support for offloading.])\n fi\n \n AC_ARG_WITH(multilib-list,"}, {"sha": "322b6934067370755c790412c0b7c47a484b03ac", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1d899da29704ced8c3a947763a963e82e9044015", "patch": "@@ -1,3 +1,7 @@\n+2015-11-14  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* parser.c (cp_parser_omp_declare_target): Adjust.\n+\n 2015-11-14  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* vtable-class-hierarchy.c (vtv_generate_init_routine): Adjust."}, {"sha": "5e8614b37489c2fd499c61b5dd05a34417f48955", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=1d899da29704ced8c3a947763a963e82e9044015", "patch": "@@ -35208,14 +35208,15 @@ cp_parser_omp_declare_target (cp_parser *parser, cp_token *pragma_tok)\n \t  if (node != NULL)\n \t    {\n \t      node->offloadable = 1;\n-#ifdef ENABLE_OFFLOADING\n-\t      g->have_offload = true;\n-\t      if (is_a <varpool_node *> (node))\n+\t      if (ENABLE_OFFLOADING)\n \t\t{\n-\t\t  vec_safe_push (offload_vars, t);\n-\t\t  node->force_output = 1;\n+\t\t  g->have_offload = true;\n+\t\t  if (is_a <varpool_node *> (node))\n+\t\t    {\n+\t\t      vec_safe_push (offload_vars, t);\n+\t\t      node->force_output = 1;\n+\t\t    }\n \t\t}\n-#endif\n \t    }\n \t}\n     }"}, {"sha": "cc0597dab395a07754181347148551eb0f1139cf", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=1d899da29704ced8c3a947763a963e82e9044015", "patch": "@@ -4392,12 +4392,10 @@ process_command (unsigned int decoded_options_count,\n \t\t\t   CL_DRIVER, &handlers, global_dc);\n     }\n \n-#ifdef ENABLE_OFFLOADING\n   /* If the user didn't specify any, default to all configured offload\n      targets.  */\n-  if (offload_targets == NULL)\n+  if (ENABLE_OFFLOADING && offload_targets == NULL)\n     handle_foffload_option (OFFLOAD_TARGETS);\n-#endif\n \n   if (output_file\n       && strcmp (output_file, \"-\") != 0"}, {"sha": "58248d9288e086c8b2693d4766eceb9773565aab", "filename": "gcc/omp-low.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=1d899da29704ced8c3a947763a963e82e9044015", "patch": "@@ -2424,9 +2424,9 @@ create_omp_child_function (omp_context *ctx, bool task_copy)\n \tif (is_gimple_omp_offloaded (octx->stmt))\n \t  {\n \t    cgraph_node::get_create (decl)->offloadable = 1;\n-#ifdef ENABLE_OFFLOADING\n-\t    g->have_offload = true;\n-#endif\n+\t    if (ENABLE_OFFLOADING)\n+\t      g->have_offload = true;\n+\n \t    break;\n \t  }\n     }\n@@ -12613,10 +12613,9 @@ expand_omp_target (struct omp_region *region)\n       node->parallelized_function = 1;\n       cgraph_node::add_new_function (child_fn, true);\n \n-#ifdef ENABLE_OFFLOADING\n       /* Add the new function to the offload table.  */\n-      vec_safe_push (offload_funcs, child_fn);\n-#endif\n+      if (ENABLE_OFFLOADING)\n+\tvec_safe_push (offload_funcs, child_fn);\n \n       bool need_asm = DECL_ASSEMBLER_NAME_SET_P (current_function_decl)\n \t\t      && !DECL_ASSEMBLER_NAME_SET_P (child_fn);\n@@ -12628,11 +12627,10 @@ expand_omp_target (struct omp_region *region)\n \tassign_assembler_name_if_neeeded (child_fn);\n       cgraph_edge::rebuild_edges ();\n \n-#ifdef ENABLE_OFFLOADING\n       /* Prevent IPA from removing child_fn as unreachable, since there are no\n \t refs from the parent function to child_fn in offload LTO mode.  */\n-      cgraph_node::get (child_fn)->mark_force_output ();\n-#endif\n+      if (ENABLE_OFFLOADING)\n+\tcgraph_node::get (child_fn)->mark_force_output ();\n \n       /* Some EH regions might become dead, see PR34608.  If\n \t pass_cleanup_cfg isn't the first pass to happen with the"}, {"sha": "36f19a62ba825cf33250f7bcd748877cdff61bad", "filename": "gcc/varpool.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d899da29704ced8c3a947763a963e82e9044015/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=1d899da29704ced8c3a947763a963e82e9044015", "patch": "@@ -153,12 +153,13 @@ varpool_node::get_create (tree decl)\n       && lookup_attribute (\"omp declare target\", DECL_ATTRIBUTES (decl)))\n     {\n       node->offloadable = 1;\n-#ifdef ENABLE_OFFLOADING\n-      g->have_offload = true;\n-      if (!in_lto_p)\n-\tvec_safe_push (offload_vars, decl);\n-      node->force_output = 1;\n-#endif\n+      if (ENABLE_OFFLOADING)\n+\t{\n+\t  g->have_offload = true;\n+\t  if (!in_lto_p)\n+\t    vec_safe_push (offload_vars, decl);\n+\t  node->force_output = 1;\n+\t}\n     }\n \n   node->register_symbol ();"}]}