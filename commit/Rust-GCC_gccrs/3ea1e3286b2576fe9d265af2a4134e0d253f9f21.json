{"sha": "3ea1e3286b2576fe9d265af2a4134e0d253f9f21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VhMWUzMjg2YjI1NzZmZTlkMjY1YWYyYTQxMzRlMGQyNTNmOWYyMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-07-29T20:12:20Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-07-29T20:12:20Z"}, "message": "re PR c++/57948 (internal compiler error: in initialize_reference, at cp/call.c:9285)\n\n/cp\n2013-07-29  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/57948\n\t* call.c (initialize_reference): Don't crash when reference_binding\n\treturns a conv with conv->kind == ck_ambig.\n\n/testsuite\n2013-07-29  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/57948\n\t* g++.dg/conversion/ambig2.C: New.\n\nFrom-SVN: r201318", "tree": {"sha": "74d9a0fe02c394220a052642ddc788ec4f5b94d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74d9a0fe02c394220a052642ddc788ec4f5b94d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ea1e3286b2576fe9d265af2a4134e0d253f9f21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea1e3286b2576fe9d265af2a4134e0d253f9f21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ea1e3286b2576fe9d265af2a4134e0d253f9f21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea1e3286b2576fe9d265af2a4134e0d253f9f21/comments", "author": null, "committer": null, "parents": [{"sha": "88e594b6de5efb2b463bb6e4b0d2ed875def0d25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e594b6de5efb2b463bb6e4b0d2ed875def0d25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e594b6de5efb2b463bb6e4b0d2ed875def0d25"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "1bedc84621582336da388f98c9bd636630507a90", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea1e3286b2576fe9d265af2a4134e0d253f9f21/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea1e3286b2576fe9d265af2a4134e0d253f9f21/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3ea1e3286b2576fe9d265af2a4134e0d253f9f21", "patch": "@@ -1,3 +1,9 @@\n+2013-07-29  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/57948\n+\t* call.c (initialize_reference): Don't crash when reference_binding\n+\treturns a conv with conv->kind == ck_ambig.\n+\n 2013-07-29  Jason Merrill  <jason@redhat.com>\n \n \t* mangle.c (write_name): Check for null context."}, {"sha": "0574a9c15274cb6faa57166be0e3321fb39d11f3", "filename": "gcc/cp/call.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea1e3286b2576fe9d265af2a4134e0d253f9f21/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea1e3286b2576fe9d265af2a4134e0d253f9f21/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=3ea1e3286b2576fe9d265af2a4134e0d253f9f21", "patch": "@@ -9282,10 +9282,14 @@ initialize_reference (tree type, tree expr,\n       return error_mark_node;\n     }\n \n-  gcc_assert (conv->kind == ck_ref_bind);\n-\n-  /* Perform the conversion.  */\n-  expr = convert_like (conv, expr, complain);\n+  if (conv->kind == ck_ref_bind)\n+    /* Perform the conversion.  */\n+    expr = convert_like (conv, expr, complain);\n+  else if (conv->kind == ck_ambig)\n+    /* We gave an error in build_user_type_conversion_1.  */\n+    expr = error_mark_node;\n+  else\n+    gcc_unreachable ();\n \n   /* Free all the conversions we allocated.  */\n   obstack_free (&conversion_obstack, p);"}, {"sha": "1a706889d673cc1590dd9e804f8e38e37243d179", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea1e3286b2576fe9d265af2a4134e0d253f9f21/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea1e3286b2576fe9d265af2a4134e0d253f9f21/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ea1e3286b2576fe9d265af2a4134e0d253f9f21", "patch": "@@ -1,3 +1,8 @@\n+2013-07-29  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/57948\n+\t* g++.dg/conversion/ambig2.C: New.\n+\n 2013-07-29  Maciej W. Rozycki  <macro@codesourcery.com>\n \n \t* gcc.target/mips/fabs-2008.c: New test case.\n@@ -85,7 +90,7 @@\n \t* gcc.c-torture/execute/builtins/stpcpy-chk.x: Likewise.\n \n \t* gcc.dg/pr27095.c: For Epiphany, add -mshort-calls.\n-\t* gcc.dg/tree-ssa/loop-1.c: Likewise. \n+\t* gcc.dg/tree-ssa/loop-1.c: Likewise.\n \n \t* gcc.dg/torture/pr37868.c: Disable for epiphany.\n \t* gcc.dg/sibcall-6.c: Enable for epiphany."}, {"sha": "a9d9d699cf0e6da1d11cd98e2fda8bc5cb63c65a", "filename": "gcc/testsuite/g++.dg/conversion/ambig2.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea1e3286b2576fe9d265af2a4134e0d253f9f21/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fambig2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea1e3286b2576fe9d265af2a4134e0d253f9f21/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fambig2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fambig2.C?ref=3ea1e3286b2576fe9d265af2a4134e0d253f9f21", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/57948\n+\n+struct Base {   };\n+struct Derived : Base\n+{\n+  struct Derived2 : Base\n+  {\n+    struct ConvertibleToBothDerivedRef\n+    {\n+      operator Derived&();\n+      operator Derived2&();\n+      void bind_lvalue_to_conv_lvalue_ambig(ConvertibleToBothDerivedRef both)\n+      {\n+\tBase &br1 = both; // { dg-error \"ambiguous\" }\n+      }\n+    };\n+  };\n+};"}]}