{"sha": "a98c7b2c667163dc077ddc3e8206d3a730d77212", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk4YzdiMmM2NjcxNjNkYzA3N2RkYzNlODIwNmQzYTczMGQ3NzIxMg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-08-12T16:01:16Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-08-12T16:01:16Z"}, "message": "libjava.exp (libjava_find_lib): Search for .so file first.\n\n\t* lib/libjava.exp (libjava_find_lib): Search for .so file first.\n\t(libjava_arguments): Don't add libraries to link line explictly.\n\nFrom-SVN: r70379", "tree": {"sha": "08ae126ef3d27f1e4d3dfd998b8557b8ac40f965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08ae126ef3d27f1e4d3dfd998b8557b8ac40f965"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a98c7b2c667163dc077ddc3e8206d3a730d77212", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a98c7b2c667163dc077ddc3e8206d3a730d77212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a98c7b2c667163dc077ddc3e8206d3a730d77212", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a98c7b2c667163dc077ddc3e8206d3a730d77212/comments", "author": null, "committer": null, "parents": [{"sha": "479d960b1bf3db73f78eb7c0aa2ed82bd1ff0c9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479d960b1bf3db73f78eb7c0aa2ed82bd1ff0c9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/479d960b1bf3db73f78eb7c0aa2ed82bd1ff0c9e"}], "stats": {"total": 52, "additions": 27, "deletions": 25}, "files": [{"sha": "05d1874bf7b993cd6e4c0083b0c9c34cf569f21d", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a98c7b2c667163dc077ddc3e8206d3a730d77212/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a98c7b2c667163dc077ddc3e8206d3a730d77212/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=a98c7b2c667163dc077ddc3e8206d3a730d77212", "patch": "@@ -1,3 +1,8 @@\n+2003-08-12  Tom Tromey  <tromey@redhat.com>\n+\n+\t* lib/libjava.exp (libjava_find_lib): Search for .so file first.\n+\t(libjava_arguments): Don't add libraries to link line explictly.\n+\n 2003-08-05  Tom Tromey  <tromey@redhat.com>\n \n \tFor PR java/11600:"}, {"sha": "0717256b3968455ecec8bc0b7f4959f865f83106", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 22, "deletions": 25, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a98c7b2c667163dc077ddc3e8206d3a730d77212/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a98c7b2c667163dc077ddc3e8206d3a730d77212/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=a98c7b2c667163dc077ddc3e8206d3a730d77212", "patch": "@@ -200,6 +200,7 @@ proc libjava_init { args } {\n     if {$gccdir != \"\"} {\n \tset gccdir [file dirname $gccdir]\n \tlappend libjava_libgcc_s_path $gccdir\n+\tverbose \"libjava_libgcc_s_path = $libjava_libgcc_s_path\"\n \tset compiler ${gccdir}/xgcc\n \tif { [is_remote host] == 0 && [which $compiler] != 0 } {\n \t    foreach i \"[exec $compiler --print-multi-lib]\" {\n@@ -234,21 +235,24 @@ proc libjava_init { args } {\n proc libjava_find_lib {dir name} {\n     global base_dir\n     set gp [get_multilibs]\n-    foreach sub {.libs _libs} {\n-\tif {$gp != \"\"} {\n-\t    if {[file exists $gp/$dir/$sub/lib${name}.a]} then {\n-\t\t# Just return the `-L' option.  The library itself\n-\t\t# will be picked up via the spec file.\n-\t\treturn \"-L$gp/$dir/$sub\"\n+    foreach extension {so dll a} {\n+\tforeach sub {.libs _libs} {\n+\t    if {$gp != \"\"} {\n+\t\tif {[file exists $gp/$dir/$sub/lib${name}.${extension}]} then {\n+\t\t    # Just return the `-L' option.  The library itself\n+\t\t    # will be picked up via the spec file.\n+\t\t    return \"-L$gp/$dir/$sub\"\n+\t\t}\n+\t    }\n+\t    # Just return the `-L' option.  The library itself will be\n+\t    # picked up via the spec file.\n+\t    set lib [findfile \\\n+\t\t       $base_dir/../../$dir/$sub/lib${name}.${extension} \\\n+\t\t       \"-L$base_dir/../../$dir/$sub\" \\\n+\t\t       \"\"]\n+\t    if {$lib != \"\"} {\n+\t\treturn $lib\n \t    }\n-\t}\n-\t# Just return the `-L' option.  The library itself will be\n-\t# picked up via the spec file.\n-\tset lib [findfile $base_dir/../../$dir/$sub/lib${name}.a \\\n-\t\t   \"-L$base_dir/../../$dir/$sub\" \\\n-\t\t   \"\"]\n-\tif {$lib != \"\"} {\n-\t    return $lib\n \t}\n     }\n     return \"\"\n@@ -340,10 +344,6 @@ proc libjava_arguments {{mode compile}} {\n \tset libz [libjava_find_lib zlib zgcj]\n     }\n \n-    # FIXME: there's no way to determine whether -lpthread is\n-    # required.  We should get this info from configure, or it should\n-    # just be in the compiler driver.\n-\n     verbose \"using LIBJAVA = $libjava\" 2\n     verbose \"using LIBGC = $libgc\" 2\n     verbose \"using LIBQTHREADS = $libqthreads\" 2\n@@ -365,6 +365,7 @@ proc libjava_arguments {{mode compile}} {\n     }\n \n     set lpath [concat $lpath $libjava_libgcc_s_path]\n+    verbose \"lpath = $lpath ; libgcc_s_path = $libjava_libgcc_s_path\"\n     set ld_library_path [join $lpath :]\n \n     # That's enough to make things work for the normal case.\n@@ -384,13 +385,9 @@ proc libjava_arguments {{mode compile}} {\n     set env(CLASSPATH) \".:$srcdir/$subdir:$objdir:$libgcj_jar\"\n \n     if {$mode == \"link\"} {\n-\tglobal wrapper_file wrap_compile_flags;\n-\tlappend args \"additional_flags=$wrap_compile_flags\";\n-\tlappend args \"libs=$wrapper_file\";\n-\tlappend args \"libs=$libjava\";\n-\tlappend args \"libs=$libgc\";\n-\tlappend args \"libs=$libqthreads\"\n-\tlappend args \"libs=$libz\"\n+\tglobal wrapper_file wrap_compile_flags\n+\tlappend args \"additional_flags=$wrap_compile_flags\"\n+\tlappend args \"libs=$wrapper_file\"\n \tlappend args debug\n     }\n "}]}