{"sha": "0ca3fb0a168e9db2bd5405855d3932f62b08b7c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNhM2ZiMGExNjhlOWRiMmJkNTQwNTg1NWQzOTMyZjYyYjA4YjdjOQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-10-20T07:32:08Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-10-20T07:32:08Z"}, "message": "New warning, `missing-noreturn':\n\n        * c-decl.c (warn_missing_noreturn): New global variable.\n        (c_decode_option): Check for new flags -W{no-}missing-noreturn.\n        (finish_function): Implement missing noreturn warning.\n        * c-tree.h (warn_missing_noreturn): Declare extern.\n        * invoke.texi: Document new flags.\n        * toplev.c (documented_lang_options): Add description.\n\nFrom-SVN: r23197", "tree": {"sha": "3a1a6a1311b867a1768dacc4273f79b79d375b1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a1a6a1311b867a1768dacc4273f79b79d375b1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9/comments", "author": null, "committer": null, "parents": [{"sha": "f1c374cbf13459be57011c157b5ebba66cc1e02d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c374cbf13459be57011c157b5ebba66cc1e02d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1c374cbf13459be57011c157b5ebba66cc1e02d"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "6a6280dd84923b169ac521a0c2f232c4b1444b1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ca3fb0a168e9db2bd5405855d3932f62b08b7c9", "patch": "@@ -1,3 +1,15 @@\n+Tue Oct 20 10:12:17 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* c-decl.c (warn_missing_noreturn): New global variable.\n+\t(c_decode_option): Check for new flags -W{no-}missing-noreturn.\n+\t(finish_function): Implement missing noreturn warning.\n+\n+\t* c-tree.h (warn_missing_noreturn): Declare extern.\n+\n+\t* invoke.texi: Document new flags.\n+\n+\t* toplev.c (documented_lang_options): Add description.\n+\n Tue Oct 20 22:16:11 1998  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.c (c4x_parallel_process): Disable until BCT"}, {"sha": "df102acaf0e7490a55e1f7ada75ce3f38652b3c7", "filename": "gcc/c-decl.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=0ca3fb0a168e9db2bd5405855d3932f62b08b7c9", "patch": "@@ -515,6 +515,10 @@ int warn_cast_qual;\n \n int warn_bad_function_cast;\n \n+/* Warn about functions which might be candidates for attribute noreturn. */\n+\n+int warn_missing_noreturn;\n+\n /* Warn about traditional constructs whose meanings changed in ANSI C.  */\n \n int warn_traditional;\n@@ -728,6 +732,10 @@ c_decode_option (argc, argv)\n     warn_bad_function_cast = 1;\n   else if (!strcmp (p, \"-Wno-bad-function-cast\"))\n     warn_bad_function_cast = 0;\n+  else if (!strcmp (p, \"-Wmissing-noreturn\"))\n+    warn_missing_noreturn = 1;\n+  else if (!strcmp (p, \"-Wno-missing-noreturn\"))\n+    warn_missing_noreturn = 0;\n   else if (!strcmp (p, \"-Wpointer-arith\"))\n     warn_pointer_arith = 1;\n   else if (!strcmp (p, \"-Wno-pointer-arith\"))\n@@ -7192,6 +7200,12 @@ finish_function (nested)\n \n   current_function_returns_null |= can_reach_end;\n \n+  if (warn_missing_noreturn\n+      && !TREE_THIS_VOLATILE (fndecl)\n+      && !current_function_returns_null\n+      && !current_function_returns_value)\n+    warning (\"function might be possible candidate for attribute `noreturn'\");\n+\n   if (TREE_THIS_VOLATILE (fndecl) && current_function_returns_null)\n     warning (\"`noreturn' function does return\");\n   else if (warn_return_type && can_reach_end"}, {"sha": "fec60cba2713249e2322e3d5d119a40e830b89f9", "filename": "gcc/c-tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=0ca3fb0a168e9db2bd5405855d3932f62b08b7c9", "patch": "@@ -469,6 +469,10 @@ extern int warn_cast_qual;\n \n extern int warn_bad_function_cast;\n \n+/* Warn about functions which might be candidates for attribute noreturn. */\n+\n+extern int warn_missing_noreturn;\n+\n /* Warn about traditional constructs whose meanings changed in ANSI C.  */\n \n extern int warn_traditional;"}, {"sha": "f6ecd648ca76ac037bdf714e29f3fcb5e6acb5d0", "filename": "gcc/invoke.texi", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=0ca3fb0a168e9db2bd5405855d3932f62b08b7c9", "patch": "@@ -123,7 +123,7 @@ in the following sections.\n -Wimplicit-function-declaration  -Wimport\n -Werror-implicit-function-declaration  -Winline\n -Wlarger-than-@var{len}  -Wlong-long\n--Wmain  -Wmissing-declarations\n+-Wmain  -Wmissing-declarations  -Wmissing-noreturn\n -Wmissing-prototypes  -Wmultichar  -Wnested-externs  -Wno-import  \n -Wno-non-template-friend -Wold-style-cast  -Woverloaded-virtual  \n -Wparentheses -Wpointer-arith  -Wredundant-decls  -Wreorder  \n@@ -1617,6 +1617,13 @@ Do so even if the definition itself provides a prototype.\n Use this option to detect global functions that are not declared in\n header files.\n \n+@item -Wmissing-noreturn\n+Warn about functions which might be candidates for attribute @code{noreturn}.\n+Note these are only possible candidates, not absolute ones.  Care should\n+be taken to manually verify functions actually do not ever return before\n+adding the @code{noreturn} attribute, otherwise subtle code generation\n+bugs could be introduced.\n+\n @item -Wredundant-decls\n Warn if anything is declared more than once in the same scope, even in\n cases where multiple declaration is valid and changes nothing."}, {"sha": "5040987b12b320baf639aa282f0362f5332d8ec6", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ca3fb0a168e9db2bd5405855d3932f62b08b7c9/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=0ca3fb0a168e9db2bd5405855d3932f62b08b7c9", "patch": "@@ -974,6 +974,9 @@ documented_lang_options[] =\n   { \"-Wbad-function-cast\",\n     \"Warn about casting functions to incompatible types\" },\n   { \"-Wno-bad-function-cast\", \"\" },\n+  { \"-Wmissing-noreturn\",\n+    \"Warn about functions which might be candidates for attribute noreturn\" },\n+  { \"-Wno-missing-noreturn\", \"\" },\n   { \"-Wcast-qual\", \"Warn about casts which discard qualifiers\"},\n   { \"-Wno-cast-qual\", \"\" },\n   { \"-Wchar-subscripts\", \"Warn about subscripts whose type is 'char'\"},"}]}