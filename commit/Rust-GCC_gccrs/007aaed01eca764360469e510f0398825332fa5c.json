{"sha": "007aaed01eca764360469e510f0398825332fa5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA3YWFlZDAxZWNhNzY0MzYwNDY5ZTUxMGYwMzk4ODI1MzMyZmE1Yw==", "commit": {"author": {"name": "Stan Cox", "email": "scox@cygnus.com", "date": "1999-04-12T14:05:29Z"}, "committer": {"name": "Stan Cox", "email": "scox@gcc.gnu.org", "date": "1999-04-12T14:05:29Z"}, "message": "c-decl.c (c_decode_option, [...]): Recognize -Wno-main so we can avoid warnings.\n\n\t* c-decl.c (c_decode_option, start_decl, start_function,\n\tfinish_function) : Recognize -Wno-main so we can avoid warnings.\n\nFrom-SVN: r26376", "tree": {"sha": "a834ffb6c48b29e223542c193e7c67146043c589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a834ffb6c48b29e223542c193e7c67146043c589"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/007aaed01eca764360469e510f0398825332fa5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/007aaed01eca764360469e510f0398825332fa5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/007aaed01eca764360469e510f0398825332fa5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/007aaed01eca764360469e510f0398825332fa5c/comments", "author": null, "committer": null, "parents": [{"sha": "b6d3799173d96463ed69eedc0c477657781907ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d3799173d96463ed69eedc0c477657781907ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d3799173d96463ed69eedc0c477657781907ba"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "9ac08aae141b16da5b42cb66aaca6ee103087580", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/007aaed01eca764360469e510f0398825332fa5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/007aaed01eca764360469e510f0398825332fa5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=007aaed01eca764360469e510f0398825332fa5c", "patch": "@@ -1,3 +1,8 @@\n+Fri Apr  12 15:00:52 1999  Stan Cox  <scox@cygnus.com>\n+\n+\t* c-decl.c (c_decode_option, start_decl, start_function,\n+\tfinish_function) : Recognize -Wno-main so we can avoid warnings.\n+\n 1999-04-12 14:55 -0400  Zack Weinberg  <zack@rabi.columbia.edu>\n \n \t* cpphash.c (collect_expansion, macroexpand,"}, {"sha": "a232217bc0a5ed452e4749f03d05d6c605b84f7c", "filename": "gcc/c-decl.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/007aaed01eca764360469e510f0398825332fa5c/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/007aaed01eca764360469e510f0398825332fa5c/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=007aaed01eca764360469e510f0398825332fa5c", "patch": "@@ -855,7 +855,7 @@ c_decode_option (argc, argv)\n   else if (!strcmp (p, \"-Wmain\"))\n     warn_main = 1;\n   else if (!strcmp (p, \"-Wno-main\"))\n-    warn_main = 0;\n+    warn_main = -1;\n   else if (!strcmp (p, \"-Wsign-compare\"))\n     warn_sign_compare = 1;\n   else if (!strcmp (p, \"-Wno-sign-compare\"))\n@@ -3791,7 +3791,7 @@ start_decl (declarator, declspecs, initialized, attributes, prefix_attributes)\n   /* The corresponding pop_obstacks is in finish_decl.  */\n   push_obstacks_nochange ();\n \n-  if (warn_main && TREE_CODE (decl) != FUNCTION_DECL \n+  if (warn_main > 0 && TREE_CODE (decl) != FUNCTION_DECL \n       && !strcmp (IDENTIFIER_POINTER (DECL_NAME (decl)), \"main\"))\n     warning_with_decl (decl, \"`%s' is usually a function\");\n \n@@ -6527,7 +6527,7 @@ start_function (declspecs, declarator, prefix_attributes, attributes, nested)\n     TREE_PUBLIC (decl1) = 0;\n \n   /* Warn for unlikely, improbable, or stupid declarations of `main'. */\n-  if (warn_main\n+  if (warn_main > 0\n       && strcmp (\"main\", IDENTIFIER_POINTER (DECL_NAME (decl1))) == 0)\n     {\n       tree args;\n@@ -7244,12 +7244,8 @@ finish_function (nested)\n       if (TYPE_MAIN_VARIANT (TREE_TYPE (TREE_TYPE (fndecl)))\n \t  != integer_type_node)\n \t{\n-\t  /* You would expect the sense of this test to be the other way\n-\t     around, but if warn_main is set, we will already have warned,\n-\t     so this would be a duplicate.  This is the warning you get\n-\t     in some environments even if you *don't* ask for it, because\n-\t     these are environments where it may be more of a problem than\n-\t     usual.  */\n+\t  /* If warn_main is 1 (-Wmain) or 2 (-Wall), we have already warned.\n+\t     If warn_main is -1 (-Wno-main) we don't want to be warned. */\n \t  if (! warn_main)\n \t    pedwarn_with_decl (fndecl, \"return type of `%s' is not `int'\");\n \t}"}]}