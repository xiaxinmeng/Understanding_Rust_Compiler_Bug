{"sha": "88f554b4b93e260d8733c372f93e77c91c564e77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhmNTU0YjRiOTNlMjYwZDg3MzNjMzcyZjkzZTc3YzkxYzU2NGU3Nw==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2015-06-25T16:23:52Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2015-06-25T16:23:52Z"}, "message": "cgraph.h (cgraph_rtl_info): Move to rtl.h\n\n2015-06-25  Andrew MacLeod  <amacleod@redhat.com>\n\n\t* cgraph.h (cgraph_rtl_info): Move to rtl.h\n\t(cgraph_node): Maintain pointer to struct cgraph_rtl_info instead of\n\tand instance.\n\t* rtl.h (struct cgraph_rtl_info): Define when HARD_REG_SET available.\n\t* cgraph.c (cgraph_node::rtl_info): Allocate cgraph_rtl_info if one\n\tdoesn't exist.\n\t* calls.c: Include hard-reg-set.h before rtl.h.\n\t* ira.c: Likewise.\n\nFrom-SVN: r224946", "tree": {"sha": "1e0ca2957adf8fdcb469bdcb69978a1c9e9eba07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e0ca2957adf8fdcb469bdcb69978a1c9e9eba07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88f554b4b93e260d8733c372f93e77c91c564e77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f554b4b93e260d8733c372f93e77c91c564e77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88f554b4b93e260d8733c372f93e77c91c564e77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f554b4b93e260d8733c372f93e77c91c564e77/comments", "author": null, "committer": null, "parents": [{"sha": "06fbce663e9b7f230d3cbaf9131de2cd786c819c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06fbce663e9b7f230d3cbaf9131de2cd786c819c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06fbce663e9b7f230d3cbaf9131de2cd786c819c"}], "stats": {"total": 55, "additions": 36, "deletions": 19}, "files": [{"sha": "8280777f5f3da7960f983c2e8e6f11b1362bbda0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f554b4b93e260d8733c372f93e77c91c564e77/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f554b4b93e260d8733c372f93e77c91c564e77/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88f554b4b93e260d8733c372f93e77c91c564e77", "patch": "@@ -1,3 +1,14 @@\n+2015-06-25  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* cgraph.h (cgraph_rtl_info): Move to rtl.h\n+\t(cgraph_node): Maintain pointer to struct cgraph_rtl_info instead of\n+\tand instance.\n+\t* rtl.h (struct cgraph_rtl_info): Define when HARD_REG_SET available.\n+\t* cgraph.c (cgraph_node::rtl_info): Allocate cgraph_rtl_info if one\n+\tdoesn't exist.\n+\t* calls.c: Include hard-reg-set.h before rtl.h.\n+\t* ira.c: Likewise.\n+\n 2015-06-25  Zhouyi Zhou  <yizhouzhou@ict.ac.cn>\n \t    Vladimir Makarov  <vmakarov@redhat.com>\n "}, {"sha": "5cf0dca64598a198e7da3dbe6f203ac80bdfff65", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f554b4b93e260d8733c372f93e77c91c564e77/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f554b4b93e260d8733c372f93e77c91c564e77/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=88f554b4b93e260d8733c372f93e77c91c564e77", "patch": "@@ -21,6 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hard-reg-set.h\"\n #include \"rtl.h\"\n #include \"alias.h\"\n #include \"symtab.h\"\n@@ -31,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"attribs.h\"\n #include \"predict.h\"\n-#include \"hard-reg-set.h\"\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\""}, {"sha": "60f90060187cf759c22b9dd263e00bf2eb1a249f", "filename": "gcc/cgraph.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f554b4b93e260d8733c372f93e77c91c564e77/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f554b4b93e260d8733c372f93e77c91c564e77/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=88f554b4b93e260d8733c372f93e77c91c564e77", "patch": "@@ -1892,7 +1892,10 @@ cgraph_node::rtl_info (tree decl)\n   if (node->decl != current_function_decl\n       && !TREE_ASM_WRITTEN (node->decl))\n     return NULL;\n-  return &node->ultimate_alias_target ()->rtl;\n+  /* Allocate if it doesnt exist.  */\n+  if (node->ultimate_alias_target ()->rtl == NULL)\n+    node->ultimate_alias_target ()->rtl = ggc_cleared_alloc<cgraph_rtl_info> ();\n+  return node->ultimate_alias_target ()->rtl;\n }\n \n /* Return a string describing the failure REASON.  */"}, {"sha": "62d4ad6ee7c623208838a38fc0f45a37ecf3d9e5", "filename": "gcc/cgraph.h", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f554b4b93e260d8733c372f93e77c91c564e77/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f554b4b93e260d8733c372f93e77c91c564e77/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=88f554b4b93e260d8733c372f93e77c91c564e77", "patch": "@@ -613,20 +613,6 @@ struct GTY(()) cgraph_global_info {\n   cgraph_node *inlined_to;\n };\n \n-/* Information about the function that is propagated by the RTL backend.\n-   Available only for functions that has been already assembled.  */\n-\n-struct GTY(()) cgraph_rtl_info {\n-   unsigned int preferred_incoming_stack_boundary;\n-\n-  /* Call unsaved hard registers really used by the corresponding\n-     function (including ones used by functions called by the\n-     function).  */\n-  HARD_REG_SET function_used_regs;\n-  /* Set if function_used_regs is valid.  */\n-  unsigned function_used_regs_valid: 1;\n-};\n-\n /* Represent which DECL tree (or reference to such tree)\n    will be replaced by another tree while versioning.  */\n struct GTY(()) ipa_replace_map\n@@ -1194,7 +1180,7 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node {\n   static cgraph_local_info *local_info (tree decl);\n \n   /* Return local info for the compiled function.  */\n-  static cgraph_rtl_info *rtl_info (tree);\n+  static struct cgraph_rtl_info *rtl_info (tree);\n \n   /* Return the cgraph node that has ASMNAME for its DECL_ASSEMBLER_NAME.\n      Return NULL if there's no such node.  */\n@@ -1263,7 +1249,7 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node {\n \n   cgraph_local_info local;\n   cgraph_global_info global;\n-  cgraph_rtl_info rtl;\n+  struct cgraph_rtl_info *rtl;\n   cgraph_clone_info clone;\n   cgraph_thunk_info thunk;\n "}, {"sha": "92d5eb11ed7c71ce682145db958805610f5319ab", "filename": "gcc/ira.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f554b4b93e260d8733c372f93e77c91c564e77/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f554b4b93e260d8733c372f93e77c91c564e77/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=88f554b4b93e260d8733c372f93e77c91c564e77", "patch": "@@ -371,13 +371,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"alias.h\"\n #include \"symtab.h\"\n #include \"tree.h\"\n+#include \"hard-reg-set.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"flags.h\"\n #include \"obstack.h\"\n #include \"bitmap.h\"\n-#include \"hard-reg-set.h\"\n #include \"predict.h\"\n #include \"function.h\"\n #include \"dominance.h\""}, {"sha": "07c5f6504a66c18acf6b54dc2bdf793e7fdc091a", "filename": "gcc/rtl.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f554b4b93e260d8733c372f93e77c91c564e77/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f554b4b93e260d8733c372f93e77c91c564e77/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=88f554b4b93e260d8733c372f93e77c91c564e77", "patch": "@@ -3710,4 +3710,21 @@ extern void _fatal_insn (const char *, const_rtx, const char *, int, const char\n /* reginfo.c */\n extern tree GTY(()) global_regs_decl[FIRST_PSEUDO_REGISTER];\n \n+#ifdef HARD_CONST\n+/* Information about the function that is propagated by the RTL backend.\n+   Available only for functions that has been already assembled.  */\n+\n+struct GTY(()) cgraph_rtl_info {\n+   unsigned int preferred_incoming_stack_boundary;\n+\n+  /* Call unsaved hard registers really used by the corresponding\n+     function (including ones used by functions called by the\n+     function).  */\n+  HARD_REG_SET function_used_regs;\n+  /* Set if function_used_regs is valid.  */\n+  unsigned function_used_regs_valid: 1;\n+};\n+#endif\n+\n+\n #endif /* ! GCC_RTL_H */"}]}