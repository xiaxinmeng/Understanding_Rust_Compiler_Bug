{"sha": "49ba4fdeb648c149fa7d964ba812084262c3d06f", "node_id": "C_kwDOANBUbNoAKDQ5YmE0ZmRlYjY0OGMxNDlmYTdkOTY0YmE4MTIwODQyNjJjM2QwNmY", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-29T08:40:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-29T10:05:35Z"}, "message": "tree-optimization/105679 - disable backward threading of unlikely entry\n\nThe following makes the backward threader reject threads whose entry\nedge is probably never executed according to the profile.  That in\nparticular, for the testcase, avoids threading the irq == 1 check\non the path where irq > 31, thereby avoiding spurious -Warray-bounds\ndiagnostics\n\n  if (irq_1(D) > 31)\n    goto <bb 3>; [0.00%]\n  else\n    goto <bb 4>; [100.00%]\n\n;;   basic block 3, loop depth 0, count 0 (precise), probably never executed\n  _2 = (unsigned long) irq_1(D);\n  __builtin___ubsan_handle_shift_out_of_bounds (&*.Lubsan_data0, 1, _2);\n\n  _3 = 1 << irq_1(D);\n  mask_4 = (u32) _3;\n  entry = instance_5(D)->array[irq_1(D)];\n  capture (mask_4);\n  if (level_6(D) != 0)\n    goto <bb 7>; [34.00%]\n  else\n    goto <bb 5>; [66.00%]\n\n;;   basic block 5, loop depth 0, count 708669600 (estimated locally), maybe hot  if (irq_1(D) == 1)\n    goto <bb 7>; [20.97%]\n  else\n    goto <bb 6>; [79.03%]\n\n\tPR tree-optimization/105679\n\t* tree-ssa-threadbackward.cc\n\t(back_threader_profitability::profitable_path_p): Avoid threading\n\twhen the entry edge is probably never executed.", "tree": {"sha": "02b07dbb3ef6160801c567afab03ff7c8514f5c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02b07dbb3ef6160801c567afab03ff7c8514f5c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49ba4fdeb648c149fa7d964ba812084262c3d06f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49ba4fdeb648c149fa7d964ba812084262c3d06f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49ba4fdeb648c149fa7d964ba812084262c3d06f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49ba4fdeb648c149fa7d964ba812084262c3d06f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5f5d1b36edbcd7d923f2e2653e54e52637c715b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f5d1b36edbcd7d923f2e2653e54e52637c715b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5f5d1b36edbcd7d923f2e2653e54e52637c715b"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "90f5331c2657ce0b09a517226cc7b5e8a5bdfc84", "filename": "gcc/tree-ssa-threadbackward.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ba4fdeb648c149fa7d964ba812084262c3d06f/gcc%2Ftree-ssa-threadbackward.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ba4fdeb648c149fa7d964ba812084262c3d06f/gcc%2Ftree-ssa-threadbackward.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadbackward.cc?ref=49ba4fdeb648c149fa7d964ba812084262c3d06f", "patch": "@@ -777,6 +777,15 @@ back_threader_profitability::profitable_path_p (const vec<basic_block> &m_path,\n \t\t     \"exceeds PARAM_MAX_FSM_THREAD_PATH_INSNS.\\n\");\n \t  return false;\n \t}\n+      edge entry = find_edge (m_path[m_path.length () - 1],\n+\t\t\t      m_path[m_path.length () - 2]);\n+      if (probably_never_executed_edge_p (cfun, entry))\n+\t{\n+\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t    fprintf (dump_file, \"  FAIL: Jump-thread path not considered: \"\n+\t\t     \"path entry is probably never executed.\\n\");\n+\t  return false;\n+\t}\n     }\n   else if (!m_speed_p && n_insns > 1)\n     {"}]}