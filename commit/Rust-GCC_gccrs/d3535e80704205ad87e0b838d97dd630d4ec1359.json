{"sha": "d3535e80704205ad87e0b838d97dd630d4ec1359", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM1MzVlODA3MDQyMDVhZDg3ZTBiODM4ZDk3ZGQ2MzBkNGVjMTM1OQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-04-24T22:42:29Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-04-24T22:42:29Z"}, "message": "inclhack.def (aix_syswait_2): New fix.\n\n\n\t* fixinc/inclhack.def (aix_syswait_2): New fix.\n\t* fixinc/fixincl.x: Regenerate.\n\t* fixinc/tests/base/sys/wait.h: Update for new test.\n\nCo-Authored-By: Bruce Korb <bkorb@gnu.org>\n\nFrom-SVN: r81147", "tree": {"sha": "bc0d50bcb28a878875c0f8d9b868f09a581c32e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc0d50bcb28a878875c0f8d9b868f09a581c32e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3535e80704205ad87e0b838d97dd630d4ec1359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3535e80704205ad87e0b838d97dd630d4ec1359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3535e80704205ad87e0b838d97dd630d4ec1359", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3535e80704205ad87e0b838d97dd630d4ec1359/comments", "author": null, "committer": null, "parents": [{"sha": "062bf895938ee3130690ac20a8b571f6d61e7dc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062bf895938ee3130690ac20a8b571f6d61e7dc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/062bf895938ee3130690ac20a8b571f6d61e7dc1"}], "stats": {"total": 77, "additions": 72, "deletions": 5}, "files": [{"sha": "8c705240b81a7c4ada494603671759c939154541", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3535e80704205ad87e0b838d97dd630d4ec1359/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3535e80704205ad87e0b838d97dd630d4ec1359/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3535e80704205ad87e0b838d97dd630d4ec1359", "patch": "@@ -1,3 +1,10 @@\n+2004-04-24  Roger Sayle  <roger@eyesopen.com>\n+\t    Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/inclhack.def (aix_syswait_2): New fix.\n+\t* fixinc/fixincl.x: Regenerate.\n+\t* fixinc/tests/base/sys/wait.h: Update for new test.\n+\n 2004-04-24  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/14960"}, {"sha": "efd41f300e8fcad6b6f09e077d6ada46751a29d2", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 46, "deletions": 5, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3535e80704205ad87e0b838d97dd630d4ec1359/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3535e80704205ad87e0b838d97dd630d4ec1359/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=d3535e80704205ad87e0b838d97dd630d4ec1359", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Wednesday April  7, 2004 at 10:23:41 PM UTC\n+ * It has been AutoGen-ed  Friday April 23, 2004 at 06:53:51 AM MDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Wed Apr  7 22:23:41 UTC 2004\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Fri Apr 23 06:53:51 MDT 2004\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 174 fixup descriptions.\n+ * This file contains 175 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -647,6 +647,41 @@ static const char* apzAix_SyswaitPatch[] = {\n %0\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Syswait_2 fix\n+ */\n+tSCC zAix_Syswait_2Name[] =\n+     \"aix_syswait_2\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_Syswait_2List[] =\n+  \"|sys/wait.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzAix_Syswait_2Machs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_Syswait_2Select0[] =\n+       \"\\\\? (\\\\(\\\\(\\\\(\\\\(unsigned[^)]*\\\\)[^)]*\\\\) >> [^)]*\\\\) \\\\& 0xff\\\\) : -1)\";\n+\n+#define    AIX_SYSWAIT_2_TEST_CT  1\n+static tTestDesc aAix_Syswait_2Tests[] = {\n+  { TT_EGREP,    zAix_Syswait_2Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Syswait_2\n+ */\n+static const char* apzAix_Syswait_2Patch[] = {\n+    \"format\",\n+    \"? (int)%1\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Aix_Volatile fix\n@@ -6894,9 +6929,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          195\n+#define REGEX_COUNT          196\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            174\n+#define FIX_COUNT            175\n \n /*\n  *  Enumerate the fixes\n@@ -6914,6 +6949,7 @@ typedef enum {\n     AIX_PTHREAD_FIXIDX,\n     AIX_SYSMACHINE_FIXIDX,\n     AIX_SYSWAIT_FIXIDX,\n+    AIX_SYSWAIT_2_FIXIDX,\n     AIX_VOLATILE_FIXIDX,\n     ALPHA___ASSERT_FIXIDX,\n     ALPHA___EXTERN_PREFIX_FIXIDX,\n@@ -7139,6 +7175,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AIX_SYSWAIT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAix_SyswaitTests,   apzAix_SyswaitPatch, 0 },\n \n+  {  zAix_Syswait_2Name,    zAix_Syswait_2List,\n+     apzAix_Syswait_2Machs,\n+     AIX_SYSWAIT_2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_Syswait_2Tests,   apzAix_Syswait_2Patch, 0 },\n+\n   {  zAix_VolatileName,    zAix_VolatileList,\n      apzAix_VolatileMachs,\n      AIX_VOLATILE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "2e57d0f0e5c2504f2c687a48e1590fe874c8d88b", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3535e80704205ad87e0b838d97dd630d4ec1359/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3535e80704205ad87e0b838d97dd630d4ec1359/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=d3535e80704205ad87e0b838d97dd630d4ec1359", "patch": "@@ -493,6 +493,20 @@ fix = {\n };\n \n \n+/*\n+ *  sys/wait.h on AIX 5.2 defines macros that have both signed and\n+ *  unsigned types in conditional expressions.\n+ */\n+fix = {\n+    hackname  = aix_syswait_2;\n+    files     = sys/wait.h;\n+    select    = '\\? (\\(\\(\\(\\(unsigned[^)]*\\)[^)]*\\) >> [^)]*\\) \\& 0xff\\) : -1)';\n+    c_fix     = format;\n+    c_fix_arg = \"? (int)%1\";\n+    test_text = \"#define WSTOPSIG(__x)    (int)(WIFSTOPPED(__x) ? ((((unsigned int)__x) >> 8) & 0xff) : -1)\";\n+};\n+\n+\n /*\n  *  sys/signal.h on some versions of AIX uses volatile in the typedef of\n  *  sig_atomic_t, which causes gcc to generate a warning about duplicate"}, {"sha": "a0311c65d0fda5d65edd09e838352bf4caae5583", "filename": "gcc/fixinc/tests/base/sys/wait.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3535e80704205ad87e0b838d97dd630d4ec1359/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Fwait.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3535e80704205ad87e0b838d97dd630d4ec1359/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Fwait.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Fwait.h?ref=d3535e80704205ad87e0b838d97dd630d4ec1359", "patch": "@@ -17,6 +17,11 @@ extern pid_t wait3();\n #endif  /* AIX_SYSWAIT_CHECK */\n \n \n+#if defined( AIX_SYSWAIT_2_CHECK )\n+#define WSTOPSIG(__x)    (int)(WIFSTOPPED(__x) ? (int)((((unsigned int)__x) >> 8) & 0xff) : -1)\n+#endif  /* AIX_SYSWAIT_2_CHECK */\n+\n+\n #if defined( NEXT_WAIT_UNION_CHECK )\n extern pid_d wait(void*);\n #endif  /* NEXT_WAIT_UNION_CHECK */"}]}