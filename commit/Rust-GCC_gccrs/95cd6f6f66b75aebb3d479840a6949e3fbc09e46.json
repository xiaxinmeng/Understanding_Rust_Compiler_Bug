{"sha": "95cd6f6f66b75aebb3d479840a6949e3fbc09e46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVjZDZmNmY2NmI3NWFlYmIzZDQ3OTg0MGE2OTQ5ZTNmYmMwOWU0Ng==", "commit": {"author": {"name": "Josh Conner", "email": "jconner@apple.com", "date": "2005-11-04T01:23:22Z"}, "committer": {"name": "Josh Conner", "email": "jconner@gcc.gnu.org", "date": "2005-11-04T01:23:22Z"}, "message": "re PR c++/19989 (Inconsistency with zero-sized arrays)\n\nPR c++/19989\ncp/pt.c (tsubst): Accept zero-length array if tf_error is set\nin complain flags.  Change error message for negative-\nlength array.\ntestsuite/g++.dg/ext/array2.C: New test.\ntestsuite/g++.dg/template/dependent-name3.C: New test.\ntestsuite/g++.dg/template/dependent-name4.C: New test.\ntestsuite/g++.dg/template/sfinae2.C: New test.\n\nFrom-SVN: r106468", "tree": {"sha": "aa08814769e2aa3ded8fa06bfeaf93ec8fc2a946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa08814769e2aa3ded8fa06bfeaf93ec8fc2a946"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95cd6f6f66b75aebb3d479840a6949e3fbc09e46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cd6f6f66b75aebb3d479840a6949e3fbc09e46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95cd6f6f66b75aebb3d479840a6949e3fbc09e46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/comments", "author": null, "committer": null, "parents": [{"sha": "a63607ed439ce64133d0c1927e8ef7eccd013539", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a63607ed439ce64133d0c1927e8ef7eccd013539", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a63607ed439ce64133d0c1927e8ef7eccd013539"}], "stats": {"total": 113, "additions": 97, "deletions": 16}, "files": [{"sha": "2d82433628b2c01a932b63e10cc2772f3b1e7529", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=95cd6f6f66b75aebb3d479840a6949e3fbc09e46", "patch": "@@ -1,3 +1,10 @@\n+2005-11-03  Josh Conner  <jconner@apple.com>\n+\n+\tPR c++/19989\n+\tpt.c (tsubst): Accept zero-length array if tf_error is set\n+\tin complain flags.  Change error message for negative-\n+\tlength array.\n+\n 2005-11-04  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* cp-tree.h (cp_cpp_error), error.c (cp_cpp_error): Take va_list*"}, {"sha": "0490fd18ba779ec179430eacaa6d0859ce4ea54a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=95cd6f6f66b75aebb3d479840a6949e3fbc09e46", "patch": "@@ -7083,25 +7083,24 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \tmax = tsubst_template_arg (omax, args, complain, in_decl);\n \tmax = fold_decl_constant_value (max);\n \n-\tif (integer_zerop (omax))\n-\t  {\n-\t    /* Still allow an explicit array of size zero.  */\n-\t    if (pedantic)\n-\t      pedwarn (\"creating array with size zero\");\n-\t  }\n-\telse if (integer_zerop (max)\n-\t\t || (TREE_CODE (max) == INTEGER_CST\n-\t\t     && INT_CST_LT (max, integer_zero_node)))\n-\t  {\n-\t    /* [temp.deduct]\n+\t/* [temp.deduct]\n \n-\t       Type deduction may fail for any of the following\n-\t       reasons:\n+\t   Type deduction may fail for any of the following\n+\t   reasons:\n \n-\t\t Attempting to create an array with a size that is\n-\t\t zero or negative.  */\n+\t     Attempting to create an array with a size that is\n+\t     zero or negative.  */\n+\tif (integer_zerop (max) && !(complain & tf_error))\n+\t  /* We must fail if performing argument deduction (as\n+\t     indicated by the state of complain), so that\n+\t     another substitution can be found.  */\n+\t  return error_mark_node;\n+\n+\telse if (TREE_CODE (max) == INTEGER_CST\n+\t\t && INT_CST_LT (max, integer_zero_node))\n+\t  {\n \t    if (complain & tf_error)\n-\t      error (\"creating array with size zero (%qE)\", max);\n+\t      error (\"creating array with negative size (%qE)\", max);\n \n \t    return error_mark_node;\n \t  }"}, {"sha": "093e2948b8e9f5bf3b67ebfdb84fb47a18164924", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=95cd6f6f66b75aebb3d479840a6949e3fbc09e46", "patch": "@@ -1,3 +1,11 @@\n+2005-11-03  Josh Conner  <jconner@apple.com>\n+\n+\tPR c++/19989\n+\tg++.dg/ext/array2.C: New test.\n+\tg++.dg/template/dependent-name3.C: New test.\n+\tg++.dg/template/dependent-name4.C: New test.\n+\tg++.dg/template/sfinae2.C: New test.\n+\n 2005-11-03  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR preprocessor/22042"}, {"sha": "2d645ca94b6e6ba7fed6f2d3897bf918b5517da5", "filename": "gcc/testsuite/g++.dg/ext/array2.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Farray2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Farray2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Farray2.C?ref=95cd6f6f66b75aebb3d479840a6949e3fbc09e46", "patch": "@@ -0,0 +1,18 @@\n+// { dg-do compile }\n+\n+// Avoid -pedantic-error default\n+// { dg-options \"\" }\n+ \n+// PR 19989 - dependent array of size 0 fails to compile.\n+\n+template<int I> struct A\n+{\n+  static const int zero = 0;\n+};\n+\n+template<int N> struct B\n+{\n+  int x[A<N>::zero];\n+};\n+\n+B<0> b;"}, {"sha": "bbe6fb66266e8062571845d8f21703b7497fb763", "filename": "gcc/testsuite/g++.dg/template/dependent-name3.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-name3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-name3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-name3.C?ref=95cd6f6f66b75aebb3d479840a6949e3fbc09e46", "patch": "@@ -0,0 +1,17 @@\n+// { dg-do compile }\n+\n+// Dependent arrays of invalid size generate appropriate error messages\n+\n+template<int I> struct A\n+{\n+  static const int zero = 0;\n+  static const int minus_one = -1;\n+};\n+\n+template<int N> struct B\n+{\n+  int x[A<N>::zero];       // { dg-error \"zero\" }\n+  int y[A<N>::minus_one];  // { dg-error \"negative\" }\n+};\n+\n+B<0> b;"}, {"sha": "b2b5814befb6642d136faeb026e13784badb74e7", "filename": "gcc/testsuite/g++.dg/template/dependent-name4.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-name4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-name4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-name4.C?ref=95cd6f6f66b75aebb3d479840a6949e3fbc09e46", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile }\n+\n+// Dependent arrays of invalid size cause template instantiation failure.\n+\n+// We'll get an error message (duplicate matching templates) if the first\n+//  pattern is incorrectly allowed to match.\n+\n+template<int M> void foobar (int (*) [M] = 0 );\n+template<int M> void foobar ( );\n+\n+void fn (void)\n+{\n+  foobar<0>();\n+  foobar<-1>();\n+}"}, {"sha": "89880a85f4345f1583d83ccb783ff80d5a3dbe60", "filename": "gcc/testsuite/g++.dg/template/sfinae2.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd6f6f66b75aebb3d479840a6949e3fbc09e46/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae2.C?ref=95cd6f6f66b75aebb3d479840a6949e3fbc09e46", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/19989\n+// Don't instantiate a function template if it would generate an\n+//   array of size zero.\n+\n+// { dg-do compile }\n+\n+template<int T> struct cl {\n+  const static int value = T;\n+};\n+\n+template<int I> void fn (char (*) [cl<I>::value] = 0 );\n+\n+void foo (void)\n+{\n+  fn<0> ();  // { dg-error \"no matching function\" }\n+}\n+"}]}