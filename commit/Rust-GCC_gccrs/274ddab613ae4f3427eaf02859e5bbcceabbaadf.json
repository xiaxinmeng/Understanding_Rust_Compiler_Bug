{"sha": "274ddab613ae4f3427eaf02859e5bbcceabbaadf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc0ZGRhYjYxM2FlNGYzNDI3ZWFmMDI4NTllNWJiY2NlYWJiYWFkZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-09-12T15:15:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-09-12T15:15:34Z"}, "message": "re PR libstdc++/58403 (__normal_iterator triggers odr-use)\n\n2013-09-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/58403\n\t* include/bits/stl_iterator.h (__normal_iterator<>::operator[],\n\toperator+=, operator+, operator-=, operator-): Take the argument\n\tby value.\n\t* testsuite/24_iterators/normal_iterator/58403.cc: New.\n\nFrom-SVN: r202531", "tree": {"sha": "5dbcdb2b8de10a78d57844730eb2d48614cd4c14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dbcdb2b8de10a78d57844730eb2d48614cd4c14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/274ddab613ae4f3427eaf02859e5bbcceabbaadf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/274ddab613ae4f3427eaf02859e5bbcceabbaadf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/274ddab613ae4f3427eaf02859e5bbcceabbaadf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/274ddab613ae4f3427eaf02859e5bbcceabbaadf/comments", "author": null, "committer": null, "parents": [{"sha": "7480a018a5aacaee6449cfcc59423c2edb9dc403", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7480a018a5aacaee6449cfcc59423c2edb9dc403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7480a018a5aacaee6449cfcc59423c2edb9dc403"}], "stats": {"total": 52, "additions": 47, "deletions": 5}, "files": [{"sha": "159fec6c66f2578b45286cf13799abbdec132a19", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/274ddab613ae4f3427eaf02859e5bbcceabbaadf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/274ddab613ae4f3427eaf02859e5bbcceabbaadf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=274ddab613ae4f3427eaf02859e5bbcceabbaadf", "patch": "@@ -1,3 +1,11 @@\n+2013-09-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/58403\n+\t* include/bits/stl_iterator.h (__normal_iterator<>::operator[],\n+\toperator+=, operator+, operator-=, operator-): Take the argument\n+\tby value.\n+\t* testsuite/24_iterators/normal_iterator/58403.cc: New.\n+\n 2013-09-11  Mitsuru Kariya  <kariya_mitsuru@hotmail.com>\n \t    Chris Jefferson  <chris@bubblescope.net>\n "}, {"sha": "cde442fb249e02392070c16e44e6828d292d2ba4", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/274ddab613ae4f3427eaf02859e5bbcceabbaadf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/274ddab613ae4f3427eaf02859e5bbcceabbaadf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=274ddab613ae4f3427eaf02859e5bbcceabbaadf", "patch": "@@ -783,23 +783,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       // Random access iterator requirements\n       reference\n-      operator[](const difference_type& __n) const\n+      operator[](difference_type __n) const\n       { return _M_current[__n]; }\n \n       __normal_iterator&\n-      operator+=(const difference_type& __n)\n+      operator+=(difference_type __n)\n       { _M_current += __n; return *this; }\n \n       __normal_iterator\n-      operator+(const difference_type& __n) const\n+      operator+(difference_type __n) const\n       { return __normal_iterator(_M_current + __n); }\n \n       __normal_iterator&\n-      operator-=(const difference_type& __n)\n+      operator-=(difference_type __n)\n       { _M_current -= __n; return *this; }\n \n       __normal_iterator\n-      operator-(const difference_type& __n) const\n+      operator-(difference_type __n) const\n       { return __normal_iterator(_M_current - __n); }\n \n       const _Iterator&"}, {"sha": "0c7e281af160b8e202cb3de7468b02c44fcafeec", "filename": "libstdc++-v3/testsuite/24_iterators/normal_iterator/58403.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/274ddab613ae4f3427eaf02859e5bbcceabbaadf/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fnormal_iterator%2F58403.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/274ddab613ae4f3427eaf02859e5bbcceabbaadf/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fnormal_iterator%2F58403.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fnormal_iterator%2F58403.cc?ref=274ddab613ae4f3427eaf02859e5bbcceabbaadf", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do link }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <string>\n+#include <iterator>\n+\n+struct A {\n+  static constexpr std::iterator_traits<\n+    std::string::iterator>::difference_type a = 1;\n+};\n+\n+int main()\n+{\n+  std::string s = \"foo\";\n+  auto it = s.begin();\n+  it += A::a;\n+}"}]}