{"sha": "4169c2d220718a78e661a605ebd838b0ad5a40bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE2OWMyZDIyMDcxOGE3OGU2NjFhNjA1ZWJkODM4YjBhZDVhNDBiZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-10T12:26:07Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-10T12:26:07Z"}, "message": "[multiple changes]\n\n2013-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Refined_Pre and Refined_Post are now allowed as\n\tassertion identifiers for pragma Assertion_Policy.\n\t* sem_prag.adb (Is_Valid_Assertion_Kind): Add Refined_Pre/Refined_Post\n\t* sem_ch13.adb: Minor reformatting.\n\n2013-10-10  Pascal Obry  <obry@adacore.com>\n\n\t* prj-conf.adb: Code refactoring.\n\nFrom-SVN: r203361", "tree": {"sha": "b74e92dafacc02652acb04902f680496d7b0355b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b74e92dafacc02652acb04902f680496d7b0355b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4169c2d220718a78e661a605ebd838b0ad5a40bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4169c2d220718a78e661a605ebd838b0ad5a40bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4169c2d220718a78e661a605ebd838b0ad5a40bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4169c2d220718a78e661a605ebd838b0ad5a40bd/comments", "author": null, "committer": null, "parents": [{"sha": "aa500b7a972aebff7375a093c2a7d90aad427b65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa500b7a972aebff7375a093c2a7d90aad427b65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa500b7a972aebff7375a093c2a7d90aad427b65"}], "stats": {"total": 484, "additions": 252, "deletions": 232}, "files": [{"sha": "6fd73d065efe0da47591cdc36b9f25022f707e6b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4169c2d220718a78e661a605ebd838b0ad5a40bd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4169c2d220718a78e661a605ebd838b0ad5a40bd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4169c2d220718a78e661a605ebd838b0ad5a40bd", "patch": "@@ -1,3 +1,14 @@\n+2013-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Refined_Pre and Refined_Post are now allowed as\n+\tassertion identifiers for pragma Assertion_Policy.\n+\t* sem_prag.adb (Is_Valid_Assertion_Kind): Add Refined_Pre/Refined_Post\n+\t* sem_ch13.adb: Minor reformatting.\n+\n+2013-10-10  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-conf.adb: Code refactoring.\n+\n 2013-10-10  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* einfo.adb: Remove Integrity_Level from the node usage list."}, {"sha": "cd518647e40ed19b7dab01b6ccb12e4afb3581ed", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4169c2d220718a78e661a605ebd838b0ad5a40bd/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4169c2d220718a78e661a605ebd838b0ad5a40bd/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=4169c2d220718a78e661a605ebd838b0ad5a40bd", "patch": "@@ -1375,7 +1375,9 @@ ID_ASSERTION_KIND ::= Assertions           |\n                       Loop_Variant         |\n                       Postcondition        |\n                       Precondition         |\n-                      Predicate\n+                      Predicate            |\n+                      Refined_Post         |\n+                      Refined_Pre          |\n                       Statement_Assertions\n \n POLICY_IDENTIFIER ::= Check | Disable | Ignore"}, {"sha": "fcd0ce3fa329793bbeb94380ae4791b0af4795e9", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 232, "deletions": 226, "changes": 458, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4169c2d220718a78e661a605ebd838b0ad5a40bd/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4169c2d220718a78e661a605ebd838b0ad5a40bd/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=4169c2d220718a78e661a605ebd838b0ad5a40bd", "patch": "@@ -68,16 +68,6 @@ package body Prj.Conf is\n    -- Local_Subprograms --\n    -----------------------\n \n-   procedure Add_Attributes\n-     (Project_Tree : Project_Tree_Ref;\n-      Conf_Decl    : Declarations;\n-      User_Decl    : in out Declarations);\n-   --  Process the attributes in the config declarations.\n-   --  For single string values, if the attribute is not declared in the user\n-   --  declarations, declare it with the value in the config declarations.\n-   --  For string list values, prepend the value in the user declarations with\n-   --  the value in the config declarations.\n-\n    function Check_Target\n      (Config_File        : Prj.Project_Id;\n       Autoconf_Specified : Boolean;\n@@ -109,219 +99,6 @@ package body Prj.Conf is\n    --  projects, so that when the second phase of the processing is performed\n    --  these attributes are automatically taken into account.\n \n-   --------------------\n-   -- Add_Attributes --\n-   --------------------\n-\n-   procedure Add_Attributes\n-     (Project_Tree : Project_Tree_Ref;\n-      Conf_Decl    : Declarations;\n-      User_Decl    : in out Declarations)\n-   is\n-      Shared : constant Shared_Project_Tree_Data_Access := Project_Tree.Shared;\n-      Conf_Attr_Id       : Variable_Id;\n-      Conf_Attr          : Variable;\n-      Conf_Array_Id      : Array_Id;\n-      Conf_Array         : Array_Data;\n-      Conf_Array_Elem_Id : Array_Element_Id;\n-      Conf_Array_Elem    : Array_Element;\n-      Conf_List          : String_List_Id;\n-      Conf_List_Elem     : String_Element;\n-\n-      User_Attr_Id       : Variable_Id;\n-      User_Attr          : Variable;\n-      User_Array_Id      : Array_Id;\n-      User_Array         : Array_Data;\n-      User_Array_Elem_Id : Array_Element_Id;\n-      User_Array_Elem    : Array_Element;\n-\n-   begin\n-      Conf_Attr_Id := Conf_Decl.Attributes;\n-      User_Attr_Id := User_Decl.Attributes;\n-      while Conf_Attr_Id /= No_Variable loop\n-         Conf_Attr := Shared.Variable_Elements.Table (Conf_Attr_Id);\n-         User_Attr := Shared.Variable_Elements.Table (User_Attr_Id);\n-\n-         if not Conf_Attr.Value.Default then\n-            if User_Attr.Value.Default then\n-\n-               --  No attribute declared in user project file: just copy the\n-               --  value of the configuration attribute.\n-\n-               User_Attr.Value := Conf_Attr.Value;\n-               Shared.Variable_Elements.Table (User_Attr_Id) := User_Attr;\n-\n-            elsif User_Attr.Value.Kind = List\n-              and then Conf_Attr.Value.Values /= Nil_String\n-            then\n-               --  List attribute declared in both the user project and the\n-               --  configuration project: prepend the user list with the\n-               --  configuration list.\n-\n-               declare\n-                  User_List : constant String_List_Id :=\n-                                User_Attr.Value.Values;\n-                  Conf_List : String_List_Id := Conf_Attr.Value.Values;\n-                  Conf_Elem : String_Element;\n-                  New_List  : String_List_Id;\n-                  New_Elem  : String_Element;\n-\n-               begin\n-                  --  Create new list\n-\n-                  String_Element_Table.Increment_Last\n-                    (Shared.String_Elements);\n-                  New_List :=\n-                    String_Element_Table.Last (Shared.String_Elements);\n-\n-                  --  Value of attribute is new list\n-\n-                  User_Attr.Value.Values := New_List;\n-                  Shared.Variable_Elements.Table (User_Attr_Id) := User_Attr;\n-\n-                  loop\n-                     --  Get each element of configuration list\n-\n-                     Conf_Elem := Shared.String_Elements.Table (Conf_List);\n-                     New_Elem  := Conf_Elem;\n-                     Conf_List := Conf_Elem.Next;\n-\n-                     if Conf_List = Nil_String then\n-\n-                        --  If it is the last element in the list, connect to\n-                        --  first element of user list, and we are done.\n-\n-                        New_Elem.Next := User_List;\n-                        Shared.String_Elements.Table (New_List) := New_Elem;\n-                        exit;\n-\n-                     else\n-                        --  If it is not the last element in the list, add to\n-                        --  new list.\n-\n-                        String_Element_Table.Increment_Last\n-                          (Shared.String_Elements);\n-                        New_Elem.Next :=\n-                          String_Element_Table.Last (Shared.String_Elements);\n-                        Shared.String_Elements.Table (New_List) := New_Elem;\n-                        New_List := New_Elem.Next;\n-                     end if;\n-                  end loop;\n-               end;\n-            end if;\n-         end if;\n-\n-         Conf_Attr_Id := Conf_Attr.Next;\n-         User_Attr_Id := User_Attr.Next;\n-      end loop;\n-\n-      Conf_Array_Id := Conf_Decl.Arrays;\n-      while Conf_Array_Id /= No_Array loop\n-         Conf_Array := Shared.Arrays.Table (Conf_Array_Id);\n-\n-         User_Array_Id := User_Decl.Arrays;\n-         while User_Array_Id /= No_Array loop\n-            User_Array := Shared.Arrays.Table (User_Array_Id);\n-            exit when User_Array.Name = Conf_Array.Name;\n-            User_Array_Id := User_Array.Next;\n-         end loop;\n-\n-         --  If this associative array does not exist in the user project file,\n-         --  do a shallow copy of the full associative array.\n-\n-         if User_Array_Id = No_Array then\n-            Array_Table.Increment_Last (Shared.Arrays);\n-            User_Array := Conf_Array;\n-            User_Array.Next := User_Decl.Arrays;\n-            User_Decl.Arrays := Array_Table.Last (Shared.Arrays);\n-            Shared.Arrays.Table (User_Decl.Arrays) := User_Array;\n-\n-         --  Otherwise, check each array element\n-\n-         else\n-            Conf_Array_Elem_Id := Conf_Array.Value;\n-            while Conf_Array_Elem_Id /= No_Array_Element loop\n-               Conf_Array_Elem :=\n-                 Shared.Array_Elements.Table (Conf_Array_Elem_Id);\n-\n-               User_Array_Elem_Id := User_Array.Value;\n-               while User_Array_Elem_Id /= No_Array_Element loop\n-                  User_Array_Elem :=\n-                    Shared.Array_Elements.Table (User_Array_Elem_Id);\n-                  exit when User_Array_Elem.Index = Conf_Array_Elem.Index;\n-                  User_Array_Elem_Id := User_Array_Elem.Next;\n-               end loop;\n-\n-               --  If the array element doesn't exist in the user array, insert\n-               --  a shallow copy of the conf array element in the user array.\n-\n-               if User_Array_Elem_Id = No_Array_Element then\n-                  Array_Element_Table.Increment_Last (Shared.Array_Elements);\n-                  User_Array_Elem := Conf_Array_Elem;\n-                  User_Array_Elem.Next := User_Array.Value;\n-                  User_Array.Value :=\n-                    Array_Element_Table.Last (Shared.Array_Elements);\n-                  Shared.Array_Elements.Table (User_Array.Value) :=\n-                    User_Array_Elem;\n-                  Shared.Arrays.Table (User_Array_Id) := User_Array;\n-\n-               --  Otherwise, if the value is a string list, prepend the conf\n-               --  array element value to the array element.\n-\n-               elsif Conf_Array_Elem.Value.Kind = List then\n-                  Conf_List := Conf_Array_Elem.Value.Values;\n-\n-                  if Conf_List /= Nil_String then\n-                     declare\n-                        Link     : constant String_List_Id :=\n-                                     User_Array_Elem.Value.Values;\n-                        Previous : String_List_Id := Nil_String;\n-                        Next     : String_List_Id;\n-\n-                     begin\n-                        loop\n-                           Conf_List_Elem :=\n-                             Shared.String_Elements.Table (Conf_List);\n-                           String_Element_Table.Increment_Last\n-                             (Shared.String_Elements);\n-                           Next :=\n-                             String_Element_Table.Last\n-                               (Shared.String_Elements);\n-                           Shared.String_Elements.Table (Next) :=\n-                             Conf_List_Elem;\n-\n-                           if Previous = Nil_String then\n-                              User_Array_Elem.Value.Values := Next;\n-                              Shared.Array_Elements.Table\n-                                (User_Array_Elem_Id) := User_Array_Elem;\n-\n-                           else\n-                              Shared.String_Elements.Table\n-                                (Previous).Next := Next;\n-                           end if;\n-\n-                           Previous := Next;\n-\n-                           Conf_List := Conf_List_Elem.Next;\n-\n-                           if Conf_List = Nil_String then\n-                              Shared.String_Elements.Table (Previous).Next :=\n-                                Link;\n-                              exit;\n-                           end if;\n-                        end loop;\n-                     end;\n-                  end if;\n-               end if;\n-\n-               Conf_Array_Elem_Id := Conf_Array_Elem.Next;\n-            end loop;\n-         end if;\n-\n-         Conf_Array_Id := Conf_Array.Next;\n-      end loop;\n-   end Add_Attributes;\n-\n    ------------------------------------\n    -- Add_Default_GNAT_Naming_Scheme --\n    ------------------------------------\n@@ -464,6 +241,235 @@ package body Prj.Conf is\n      (Config_File  : Prj.Project_Id;\n       Project_Tree : Prj.Project_Tree_Ref)\n    is\n+      procedure Add_Attributes\n+        (Project_Tree : Project_Tree_Ref;\n+         Conf_Decl    : Declarations;\n+         User_Decl    : in out Declarations);\n+      --  Process the attributes in the config declarations.  For\n+      --  single string values, if the attribute is not declared in\n+      --  the user declarations, declare it with the value in the\n+      --  config declarations.  For string list values, prepend the\n+      --  value in the user declarations with the value in the config\n+      --  declarations.\n+\n+      --------------------\n+      -- Add_Attributes --\n+      --------------------\n+\n+      procedure Add_Attributes\n+        (Project_Tree : Project_Tree_Ref;\n+         Conf_Decl    : Declarations;\n+         User_Decl    : in out Declarations)\n+      is\n+         Shared             : constant Shared_Project_Tree_Data_Access :=\n+                                Project_Tree.Shared;\n+         Conf_Attr_Id       : Variable_Id;\n+         Conf_Attr          : Variable;\n+         Conf_Array_Id      : Array_Id;\n+         Conf_Array         : Array_Data;\n+         Conf_Array_Elem_Id : Array_Element_Id;\n+         Conf_Array_Elem    : Array_Element;\n+         Conf_List          : String_List_Id;\n+         Conf_List_Elem     : String_Element;\n+\n+         User_Attr_Id       : Variable_Id;\n+         User_Attr          : Variable;\n+         User_Array_Id      : Array_Id;\n+         User_Array         : Array_Data;\n+         User_Array_Elem_Id : Array_Element_Id;\n+         User_Array_Elem    : Array_Element;\n+\n+      begin\n+         Conf_Attr_Id := Conf_Decl.Attributes;\n+         User_Attr_Id := User_Decl.Attributes;\n+\n+         while Conf_Attr_Id /= No_Variable loop\n+            Conf_Attr := Shared.Variable_Elements.Table (Conf_Attr_Id);\n+            User_Attr := Shared.Variable_Elements.Table (User_Attr_Id);\n+\n+            if not Conf_Attr.Value.Default then\n+               if User_Attr.Value.Default then\n+\n+                  --  No attribute declared in user project file: just copy\n+                  --  the value of the configuration attribute.\n+\n+                  User_Attr.Value := Conf_Attr.Value;\n+                  Shared.Variable_Elements.Table (User_Attr_Id) := User_Attr;\n+\n+               elsif User_Attr.Value.Kind = List\n+                 and then Conf_Attr.Value.Values /= Nil_String\n+               then\n+                  --  List attribute declared in both the user project and the\n+                  --  configuration project: prepend the user list with the\n+                  --  configuration list.\n+\n+                  declare\n+                     User_List : constant String_List_Id :=\n+                                   User_Attr.Value.Values;\n+                     Conf_List : String_List_Id := Conf_Attr.Value.Values;\n+                     Conf_Elem : String_Element;\n+                     New_List  : String_List_Id;\n+                     New_Elem  : String_Element;\n+\n+                  begin\n+                     --  Create new list\n+\n+                     String_Element_Table.Increment_Last\n+                       (Shared.String_Elements);\n+                     New_List :=\n+                       String_Element_Table.Last (Shared.String_Elements);\n+\n+                     --  Value of attribute is new list\n+\n+                     User_Attr.Value.Values := New_List;\n+                     Shared.Variable_Elements.Table (User_Attr_Id) :=\n+                       User_Attr;\n+\n+                     loop\n+                        --  Get each element of configuration list\n+\n+                        Conf_Elem := Shared.String_Elements.Table (Conf_List);\n+                        New_Elem  := Conf_Elem;\n+                        Conf_List := Conf_Elem.Next;\n+\n+                        if Conf_List = Nil_String then\n+\n+                           --  If it is the last element in the list, connect\n+                           --  to first element of user list, and we are done.\n+\n+                           New_Elem.Next := User_List;\n+                           Shared.String_Elements.Table (New_List) := New_Elem;\n+                           exit;\n+\n+                        else\n+                           --  If it is not the last element in the list, add\n+                           --  to new list.\n+\n+                           String_Element_Table.Increment_Last\n+                             (Shared.String_Elements);\n+                           New_Elem.Next := String_Element_Table.Last\n+                             (Shared.String_Elements);\n+                           Shared.String_Elements.Table (New_List) := New_Elem;\n+                           New_List := New_Elem.Next;\n+                        end if;\n+                     end loop;\n+                  end;\n+               end if;\n+            end if;\n+\n+            Conf_Attr_Id := Conf_Attr.Next;\n+            User_Attr_Id := User_Attr.Next;\n+         end loop;\n+\n+         Conf_Array_Id := Conf_Decl.Arrays;\n+         while Conf_Array_Id /= No_Array loop\n+            Conf_Array := Shared.Arrays.Table (Conf_Array_Id);\n+\n+            User_Array_Id := User_Decl.Arrays;\n+            while User_Array_Id /= No_Array loop\n+               User_Array := Shared.Arrays.Table (User_Array_Id);\n+               exit when User_Array.Name = Conf_Array.Name;\n+               User_Array_Id := User_Array.Next;\n+            end loop;\n+\n+            --  If this associative array does not exist in the user project\n+            --  file, do a shallow copy of the full associative array.\n+\n+            if User_Array_Id = No_Array then\n+               Array_Table.Increment_Last (Shared.Arrays);\n+               User_Array := Conf_Array;\n+               User_Array.Next := User_Decl.Arrays;\n+               User_Decl.Arrays := Array_Table.Last (Shared.Arrays);\n+               Shared.Arrays.Table (User_Decl.Arrays) := User_Array;\n+\n+            --  Otherwise, check each array element\n+\n+            else\n+               Conf_Array_Elem_Id := Conf_Array.Value;\n+               while Conf_Array_Elem_Id /= No_Array_Element loop\n+                  Conf_Array_Elem :=\n+                    Shared.Array_Elements.Table (Conf_Array_Elem_Id);\n+\n+                  User_Array_Elem_Id := User_Array.Value;\n+                  while User_Array_Elem_Id /= No_Array_Element loop\n+                     User_Array_Elem :=\n+                       Shared.Array_Elements.Table (User_Array_Elem_Id);\n+                     exit when User_Array_Elem.Index = Conf_Array_Elem.Index;\n+                     User_Array_Elem_Id := User_Array_Elem.Next;\n+                  end loop;\n+\n+                  --  If the array element doesn't exist in the user array,\n+                  --  insert a shallow copy of the conf array element in the\n+                  --  user array.\n+\n+                  if User_Array_Elem_Id = No_Array_Element then\n+                     Array_Element_Table.Increment_Last\n+                       (Shared.Array_Elements);\n+                     User_Array_Elem := Conf_Array_Elem;\n+                     User_Array_Elem.Next := User_Array.Value;\n+                     User_Array.Value :=\n+                       Array_Element_Table.Last (Shared.Array_Elements);\n+                     Shared.Array_Elements.Table (User_Array.Value) :=\n+                       User_Array_Elem;\n+                     Shared.Arrays.Table (User_Array_Id) := User_Array;\n+\n+                  --  Otherwise, if the value is a string list, prepend the\n+                  --  conf array element value to the array element.\n+\n+                  elsif Conf_Array_Elem.Value.Kind = List then\n+                     Conf_List := Conf_Array_Elem.Value.Values;\n+\n+                     if Conf_List /= Nil_String then\n+                        declare\n+                           Link     : constant String_List_Id :=\n+                                        User_Array_Elem.Value.Values;\n+                           Previous : String_List_Id := Nil_String;\n+                           Next     : String_List_Id;\n+\n+                        begin\n+                           loop\n+                              Conf_List_Elem :=\n+                                Shared.String_Elements.Table (Conf_List);\n+                              String_Element_Table.Increment_Last\n+                                (Shared.String_Elements);\n+                              Next :=\n+                                String_Element_Table.Last\n+                                (Shared.String_Elements);\n+                              Shared.String_Elements.Table (Next) :=\n+                                Conf_List_Elem;\n+\n+                              if Previous = Nil_String then\n+                                 User_Array_Elem.Value.Values := Next;\n+                                 Shared.Array_Elements.Table\n+                                   (User_Array_Elem_Id) := User_Array_Elem;\n+\n+                              else\n+                                 Shared.String_Elements.Table\n+                                   (Previous).Next := Next;\n+                              end if;\n+\n+                              Previous := Next;\n+\n+                              Conf_List := Conf_List_Elem.Next;\n+\n+                              if Conf_List = Nil_String then\n+                                 Shared.String_Elements.Table\n+                                   (Previous).Next := Link;\n+                                 exit;\n+                              end if;\n+                           end loop;\n+                        end;\n+                     end if;\n+                  end if;\n+\n+                  Conf_Array_Elem_Id := Conf_Array_Elem.Next;\n+               end loop;\n+            end if;\n+\n+            Conf_Array_Id := Conf_Array.Next;\n+         end loop;\n+      end Add_Attributes;\n+\n       Shared : constant Shared_Project_Tree_Data_Access := Project_Tree.Shared;\n \n       Conf_Decl    : constant Declarations := Config_File.Decl;\n@@ -483,9 +489,9 @@ package body Prj.Conf is\n          if Proj.Project /= Config_File then\n             User_Decl := Proj.Project.Decl;\n             Add_Attributes\n-              (Project_Tree      => Project_Tree,\n-               Conf_Decl         => Conf_Decl,\n-               User_Decl         => User_Decl);\n+              (Project_Tree => Project_Tree,\n+               Conf_Decl    => Conf_Decl,\n+               User_Decl    => User_Decl);\n \n             Conf_Pack_Id := Conf_Decl.Packages;\n             while Conf_Pack_Id /= No_Package loop"}, {"sha": "8f7f2466dd1d4402a562bca5afe7fc4d20d0fb63", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4169c2d220718a78e661a605ebd838b0ad5a40bd/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4169c2d220718a78e661a605ebd838b0ad5a40bd/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=4169c2d220718a78e661a605ebd838b0ad5a40bd", "patch": "@@ -1383,9 +1383,8 @@ package body Sem_Ch13 is\n \n                pragma Assert (not Is_Disabled (Aspect));\n \n-               --  Certan aspects allow for an optional name or expression. Do\n-               --  not generate a pragma with an empty argument association\n-               --  list.\n+               --  Certain aspects allow for an optional name or expression. Do\n+               --  not generate a pragma with empty argument association list.\n \n                if No (Args) or else No (Expression (First (Args))) then\n                   Args := No_List;"}, {"sha": "ef8df47cdee538732dfbb9979b6a98f66271f9e1", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4169c2d220718a78e661a605ebd838b0ad5a40bd/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4169c2d220718a78e661a605ebd838b0ad5a40bd/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=4169c2d220718a78e661a605ebd838b0ad5a40bd", "patch": "@@ -9127,10 +9127,10 @@ package body Sem_Prag is\n          --                        Postcondition        |\n          --                        Precondition         |\n          --                        Predicate            |\n+         --                        Refined_Post         |\n+         --                        Refined_Pre          |\n          --                        Statement_Assertions\n \n-         --  Shouldn't Refined_Pre be in this list???\n-\n          --  Note: The RM_ASSERTION_KIND list is language-defined, and the\n          --  ID_ASSERTION_KIND list contains implementation-defined additions\n          --  recognized by GNAT. The effect is to control the behavior of\n@@ -19482,6 +19482,8 @@ package body Sem_Prag is\n             Name_Postcondition        |\n             Name_Precondition         |\n             Name_Predicate            |\n+            Name_Refined_Post         |\n+            Name_Refined_Pre          |\n             Name_Statement_Assertions => return True;\n \n          when others                  => return False;"}]}