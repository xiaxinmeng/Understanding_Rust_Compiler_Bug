{"sha": "6041d142c48fc03e72d132a29439121e7978e4f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA0MWQxNDJjNDhmYzAzZTcyZDEzMmEyOTQzOTEyMWU3OTc4ZTRmMw==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2014-06-01T10:36:55Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2014-06-01T10:36:55Z"}, "message": "re PR target/61377 (Bootstrap failure on x86_64-apple-darwin13)\n\n\tPR target/61377\n\t* constrains.md (define_constrain): New 'Bs' constraint.\n\t* i386.md (sibcall_insn_operand): Use Bs instead of m constraint.\n\nFrom-SVN: r211112", "tree": {"sha": "7477949fe5340896723a29dcb3714883d5f1ee85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7477949fe5340896723a29dcb3714883d5f1ee85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6041d142c48fc03e72d132a29439121e7978e4f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6041d142c48fc03e72d132a29439121e7978e4f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6041d142c48fc03e72d132a29439121e7978e4f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6041d142c48fc03e72d132a29439121e7978e4f3/comments", "author": null, "committer": null, "parents": [{"sha": "4a065d4a62be519ba75eeee71ae36e9b18c52188", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a065d4a62be519ba75eeee71ae36e9b18c52188", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a065d4a62be519ba75eeee71ae36e9b18c52188"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "29ce4be553ffee64a1a17e26b81a312ac72f4db8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6041d142c48fc03e72d132a29439121e7978e4f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6041d142c48fc03e72d132a29439121e7978e4f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6041d142c48fc03e72d132a29439121e7978e4f3", "patch": "@@ -1,3 +1,9 @@\n+2014-06-01  Kai Tietz  <ktietz@redhat.com>\n+\n+\tPR target/61377\n+\t* constrains.md (define_constrain): New 'Bs' constraint.\n+\t* i386.md (sibcall_insn_operand): Use Bs instead of m constraint.\n+\n 2014-05-31  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* config/m68k/m68k.md (beq0_di, bne0_di): Make the \"o\" constraint"}, {"sha": "b142c1913782afd7eac34d253d05f0feeefb5300", "filename": "gcc/config/i386/constraints.md", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6041d142c48fc03e72d132a29439121e7978e4f3/gcc%2Fconfig%2Fi386%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6041d142c48fc03e72d132a29439121e7978e4f3/gcc%2Fconfig%2Fi386%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fconstraints.md?ref=6041d142c48fc03e72d132a29439121e7978e4f3", "patch": "@@ -18,7 +18,7 @@\n ;; <http://www.gnu.org/licenses/>.\n \n ;;; Unused letters:\n-;;;     B     H\n+;;;           H\n ;;;           h j\n \n ;; Integer register constraints.\n@@ -144,6 +144,14 @@\n  \"(ix86_fpmath & FPMATH_387) ? FLOAT_REGS : NO_REGS\"\n  \"@internal Any x87 register when 80387 FP arithmetic is enabled.\")\n \n+;; We use the B prefix to denote any number of internal memory operands:\n+;;  s  Sibling memory operand.\n+\n+(define_constraint \"Bs\"\n+  \"@internal Sibcall memory operand.\"\n+  (and (not (match_test \"TARGET_X32\"))\n+       (match_operand 0 \"sibcall_memory_operand\")))\n+\n (define_register_constraint \"v\" \"TARGET_SSE ? ALL_SSE_REGS : NO_REGS\"\n  \"Any EVEX encodable SSE register (@code{%xmm0-%xmm31}).\")\n "}, {"sha": "6fc69ff163e3c062fb094c52bd630b7615202024", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6041d142c48fc03e72d132a29439121e7978e4f3/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6041d142c48fc03e72d132a29439121e7978e4f3/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6041d142c48fc03e72d132a29439121e7978e4f3", "patch": "@@ -11376,7 +11376,7 @@\n   [(set_attr \"type\" \"call\")])\n \n (define_insn \"*sibcall\"\n-  [(call (mem:QI (match_operand:W 0 \"sibcall_insn_operand\" \"Uzm\"))\n+  [(call (mem:QI (match_operand:W 0 \"sibcall_insn_operand\" \"UzBs\"))\n \t (match_operand 1))]\n   \"SIBLING_CALL_P (insn)\"\n   \"* return ix86_output_call_insn (insn, operands[0]);\"\n@@ -11406,7 +11406,7 @@\n   [(set_attr \"type\" \"call\")])\n \n (define_insn \"*sibcall_pop\"\n-  [(call (mem:QI (match_operand:SI 0 \"sibcall_insn_operand\" \"Uzm\"))\n+  [(call (mem:QI (match_operand:SI 0 \"sibcall_insn_operand\" \"UzBs\"))\n \t (match_operand 1))\n    (set (reg:SI SP_REG)\n \t(plus:SI (reg:SI SP_REG)\n@@ -11451,7 +11451,7 @@\n \n (define_insn \"*sibcall_value\"\n   [(set (match_operand 0)\n-\t(call (mem:QI (match_operand:W 1 \"sibcall_insn_operand\" \"Uzm\"))\n+\t(call (mem:QI (match_operand:W 1 \"sibcall_insn_operand\" \"UzBs\"))\n \t      (match_operand 2)))]\n   \"SIBLING_CALL_P (insn)\"\n   \"* return ix86_output_call_insn (insn, operands[1]);\"\n@@ -11494,7 +11494,7 @@\n \n (define_insn \"*sibcall_value_pop\"\n   [(set (match_operand 0)\n-\t(call (mem:QI (match_operand:SI 1 \"sibcall_insn_operand\" \"Uzm\"))\n+\t(call (mem:QI (match_operand:SI 1 \"sibcall_insn_operand\" \"UzBs\"))\n \t      (match_operand 2)))\n    (set (reg:SI SP_REG)\n \t(plus:SI (reg:SI SP_REG)"}]}