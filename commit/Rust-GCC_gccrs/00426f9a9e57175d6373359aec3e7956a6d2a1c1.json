{"sha": "00426f9a9e57175d6373359aec3e7956a6d2a1c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA0MjZmOWE5ZTU3MTc1ZDYzNzMzNTlhZWMzZTc5NTZhNmQyYTFjMQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-05-19T15:08:02Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-05-19T15:08:02Z"}, "message": "Fix memory leak in tree-vect-stmts.c\n\n\t* tree-vect-stmts.c (vectorizable_simd_clone_call): Utilize\n\tauto_vec instead of vec.\n\nFrom-SVN: r236472", "tree": {"sha": "323c7e285b171c20a125b50781eb07684d653c34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/323c7e285b171c20a125b50781eb07684d653c34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00426f9a9e57175d6373359aec3e7956a6d2a1c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00426f9a9e57175d6373359aec3e7956a6d2a1c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00426f9a9e57175d6373359aec3e7956a6d2a1c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00426f9a9e57175d6373359aec3e7956a6d2a1c1/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4089c3402ca61f129c426c2a312a1849981dfb46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4089c3402ca61f129c426c2a312a1849981dfb46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4089c3402ca61f129c426c2a312a1849981dfb46"}], "stats": {"total": 26, "additions": 10, "deletions": 16}, "files": [{"sha": "883892bc1f925ed92c3067041ea5b999b359a2f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00426f9a9e57175d6373359aec3e7956a6d2a1c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00426f9a9e57175d6373359aec3e7956a6d2a1c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00426f9a9e57175d6373359aec3e7956a6d2a1c1", "patch": "@@ -1,3 +1,8 @@\n+2016-05-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-vect-stmts.c (vectorizable_simd_clone_call): Utilize\n+\tauto_vec instead of vec.\n+\n 2016-05-19  Martin Liska  <mliska@suse.cz>\n \n \t* tree-parloops.c (oacc_entry_exit_ok): Release a vector."}, {"sha": "3bcd0ce1946490105f1b7ea84e2d7da5b9843462", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00426f9a9e57175d6373359aec3e7956a6d2a1c1/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00426f9a9e57175d6373359aec3e7956a6d2a1c1/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=00426f9a9e57175d6373359aec3e7956a6d2a1c1", "patch": "@@ -2755,7 +2755,7 @@ vectorizable_simd_clone_call (gimple *stmt, gimple_stmt_iterator *gsi,\n   gimple *def_stmt;\n   gimple *new_stmt = NULL;\n   int ncopies, j;\n-  vec<simd_call_arg_info> arginfo = vNULL;\n+  auto_vec<simd_call_arg_info> arginfo;\n   vec<tree> vargs = vNULL;\n   size_t i, nargs;\n   tree lhs, rtype, ratype;\n@@ -2802,7 +2802,7 @@ vectorizable_simd_clone_call (gimple *stmt, gimple_stmt_iterator *gsi,\n   if (nargs == 0)\n     return false;\n \n-  arginfo.create (nargs);\n+  arginfo.reserve (nargs, true);\n \n   for (i = 0; i < nargs; i++)\n     {\n@@ -2822,7 +2822,6 @@ vectorizable_simd_clone_call (gimple *stmt, gimple_stmt_iterator *gsi,\n \t  if (dump_enabled_p ())\n \t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n \t\t\t     \"use not simple.\\n\");\n-\t  arginfo.release ();\n \t  return false;\n \t}\n \n@@ -2978,10 +2977,7 @@ vectorizable_simd_clone_call (gimple *stmt, gimple_stmt_iterator *gsi,\n       }\n \n   if (bestn == NULL)\n-    {\n-      arginfo.release ();\n-      return false;\n-    }\n+    return false;\n \n   for (i = 0; i < nargs; i++)\n     if ((arginfo[i].dt == vect_constant_def\n@@ -2994,10 +2990,7 @@ vectorizable_simd_clone_call (gimple *stmt, gimple_stmt_iterator *gsi,\n \tif (arginfo[i].vectype == NULL\n \t    || (TYPE_VECTOR_SUBPARTS (arginfo[i].vectype)\n \t\t> bestn->simdclone->simdlen))\n-\t  {\n-\t    arginfo.release ();\n-\t    return false;\n-\t  }\n+\t  return false;\n       }\n \n   fndecl = bestn->decl;\n@@ -3009,10 +3002,7 @@ vectorizable_simd_clone_call (gimple *stmt, gimple_stmt_iterator *gsi,\n      performed using SIMD instructions.  */\n   if ((loop == NULL || (unsigned) loop->safelen < nunits)\n       && gimple_vuse (stmt))\n-    {\n-      arginfo.release ();\n-      return false;\n-    }\n+    return false;\n \n   /* Sanity check: make sure that at least one copy of the vectorized stmt\n      needs to be generated.  */\n@@ -3041,7 +3031,6 @@ vectorizable_simd_clone_call (gimple *stmt, gimple_stmt_iterator *gsi,\n \tdump_printf_loc (MSG_NOTE, vect_location,\n \t\t\t \"=== vectorizable_simd_clone_call ===\\n\");\n /*      vect_model_simple_cost (stmt_info, ncopies, dt, NULL, NULL); */\n-      arginfo.release ();\n       return true;\n     }\n "}]}