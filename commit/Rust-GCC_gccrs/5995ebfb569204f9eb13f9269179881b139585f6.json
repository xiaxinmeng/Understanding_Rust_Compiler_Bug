{"sha": "5995ebfb569204f9eb13f9269179881b139585f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk5NWViZmI1NjkyMDRmOWViMTNmOTI2OTE3OTg4MWIxMzk1ODVmNg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-09-18T17:23:59Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-09-18T17:23:59Z"}, "message": "call.c, [...]: Follow spelling conventions.\n\n\t* call.c, semantics.c: Follow spelling conventions.\n\t* class.c: Fix a comment typo.\n\nFrom-SVN: r87704", "tree": {"sha": "98542c04b11e223421a9b26708d7c72956e0f832", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98542c04b11e223421a9b26708d7c72956e0f832"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5995ebfb569204f9eb13f9269179881b139585f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5995ebfb569204f9eb13f9269179881b139585f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5995ebfb569204f9eb13f9269179881b139585f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5995ebfb569204f9eb13f9269179881b139585f6/comments", "author": null, "committer": null, "parents": [{"sha": "57e28d7d7659ab3102d38deba7f02a687aa316d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e28d7d7659ab3102d38deba7f02a687aa316d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57e28d7d7659ab3102d38deba7f02a687aa316d8"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "7cb83b51fa7352f7c52ec1c0d20e59cc497949fe", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5995ebfb569204f9eb13f9269179881b139585f6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5995ebfb569204f9eb13f9269179881b139585f6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5995ebfb569204f9eb13f9269179881b139585f6", "patch": "@@ -1,3 +1,8 @@\n+2004-09-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* call.c, semantics.c: Follow spelling conventions.\n+\t* class.c: Fix a comment typo.\n+\n 2004-09-16  Geoffrey Keating  <geoffk@apple.com>\n \n \tPR pch/13361"}, {"sha": "1185608006bae733a586a08d76cf97ca87050bac", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5995ebfb569204f9eb13f9269179881b139585f6/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5995ebfb569204f9eb13f9269179881b139585f6/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=5995ebfb569204f9eb13f9269179881b139585f6", "patch": "@@ -5318,7 +5318,7 @@ build_new_method_call (tree instance, tree fns, tree args,\n \t      && (DECL_CONSTRUCTOR_P (current_function_decl)\n \t\t  || DECL_DESTRUCTOR_P (current_function_decl)))\n \t    /* This is not an error, it is runtime undefined\n-\t       behaviour.  */\n+\t       behavior.  */\n \t    warning ((DECL_CONSTRUCTOR_P (current_function_decl) ? \n \t\t      \"abstract virtual `%#D' called from constructor\"\n \t\t      : \"abstract virtual `%#D' called from destructor\"),"}, {"sha": "4c8dee338fe53f9bf9847221bcd0670c6a355e47", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5995ebfb569204f9eb13f9269179881b139585f6/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5995ebfb569204f9eb13f9269179881b139585f6/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=5995ebfb569204f9eb13f9269179881b139585f6", "patch": "@@ -500,7 +500,7 @@ build_vfield_ref (tree datum, tree type)\n   /* Second, the requested type may not be the owner of its own vptr.\n      If not, convert to the base class that owns it.  We cannot use\n      convert_to_base here, because VCONTEXT may appear more than once\n-     in the inheritence hierarchy of TYPE, and thus direct conversion\n+     in the inheritance hierarchy of TYPE, and thus direct conversion\n      between the types may be ambiguous.  Following the path back up\n      one step at a time via primary bases avoids the problem.  */\n   vfield = TYPE_VFIELD (type);"}, {"sha": "e66736fe3ef62499a69948b64095089c423c47ee", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5995ebfb569204f9eb13f9269179881b139585f6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5995ebfb569204f9eb13f9269179881b139585f6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=5995ebfb569204f9eb13f9269179881b139585f6", "patch": "@@ -1037,7 +1037,7 @@ finish_handler (tree handler)\n }\n \n /* Begin a compound statement.  FLAGS contains some bits that control the\n-   behaviour and context.  If BCS_NO_SCOPE is set, the compound statement\n+   behavior and context.  If BCS_NO_SCOPE is set, the compound statement\n    does not define a scope.  If BCS_FN_BODY is set, this is the outermost\n    block of a function.  If BCS_TRY_BLOCK is set, this is the block \n    created on behalf of a TRY statement.  Returns a token to be passed to"}]}