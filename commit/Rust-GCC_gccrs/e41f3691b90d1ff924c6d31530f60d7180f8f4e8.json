{"sha": "e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQxZjM2OTFiOTBkMWZmOTI0YzZkMzE1MzBmNjBkNzE4MGY4ZjRlOA==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2004-12-15T05:10:57Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-12-15T05:10:57Z"}, "message": "re PR c++/17242 (Testsuite fails due to duplicate symbols)\n\n\tPR c++/17242\n\t* configure.ac: Add GAS check for HP-UX .nsubspa comdat.\n\t* configure, config.in: Rebuilt.\n\t* config/pa/pa-hpux10.h (SUPPORTS_ONE_ONLY, MAKE_DECL_ONE_ONLY): Delete\n\tdefines.\n\t* config/pa/pa.c (pa_select_section): Allow uninitialized variables in\n\tone-only (comdat) subspaces.\n\t* config/pa/som.h (SUPPORTS_SOM_COMDAT): New define.\n\t(SUPPORTS_ONE_ONLY): True if SUPPORTS_WEAK or SUPPORTS_SOM_COMDAT are\n\ttrue.\n\t(MAKE_DECL_ONE_ONLY): Place uninitialized variables in common.\n\nFrom-SVN: r92177", "tree": {"sha": "e8baa9d18aa0f3809f95d03f1a1736703aaf70e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8baa9d18aa0f3809f95d03f1a1736703aaf70e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/comments", "author": null, "committer": null, "parents": [{"sha": "6b25a558d71af78b9c2891a761b441c4a4088285", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b25a558d71af78b9c2891a761b441c4a4088285", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b25a558d71af78b9c2891a761b441c4a4088285"}], "stats": {"total": 98, "additions": 85, "deletions": 13}, "files": [{"sha": "8b8702a0a64dcafc84d894465df960ec0c3f2056", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "patch": "@@ -1,3 +1,17 @@\n+2004-12-14  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR c++/17242\n+\t* configure.ac: Add GAS check for HP-UX .nsubspa comdat.\n+\t* configure, config.in: Rebuilt.\n+\t* config/pa/pa-hpux10.h (SUPPORTS_ONE_ONLY, MAKE_DECL_ONE_ONLY): Delete\n+\tdefines.\n+\t* config/pa/pa.c (pa_select_section): Allow uninitialized variables in\n+\tone-only (comdat) subspaces.\n+\t* config/pa/som.h (SUPPORTS_SOM_COMDAT): New define.\n+\t(SUPPORTS_ONE_ONLY): True if SUPPORTS_WEAK or SUPPORTS_SOM_COMDAT are\n+\ttrue.\n+\t(MAKE_DECL_ONE_ONLY): Place uninitialized variables in common.\n+\n 2004-12-14  Ian Lance Taylor  <ian@wasabisystems.com>\n \n \t* combine.c (combine_validate_cost): Consider cost of"}, {"sha": "daa0459c4e421367c5e290d37058d84e8aee0965", "filename": "gcc/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "patch": "@@ -297,6 +297,9 @@\n    skip when using the GAS .p2align command. */\n #undef HAVE_GAS_MAX_SKIP_P2ALIGN\n \n+/* Define if your assembler supports .nsubspa comdat option. */\n+#undef HAVE_GAS_NSUBSPA_COMDAT\n+\n /* Define if your assembler and linker support 32-bit section relative relocs\n    via '.secrel32 label'. */\n #undef HAVE_GAS_PE_SECREL32_RELOC"}, {"sha": "8c24793265de23c5c6f4436a5e05bf930c91cd9d", "filename": "gcc/config/pa/pa-hpux10.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h?ref=e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "patch": "@@ -147,10 +147,3 @@ Boston, MA 02111-1307, USA.  */\n    better than the assembler shipped with older versions of hpux.  */\n #undef NEW_HP_ASSEMBLER\n #define NEW_HP_ASSEMBLER 1\n-\n-/* CVS GAS as of 4/28/04 supports a comdat parameter for the .nsubspa\n-   directive.  This provides one only linkage semantics even though we\n-   don't have weak support.  */\n-#undef SUPPORTS_ONE_ONLY\n-#define SUPPORTS_ONE_ONLY (TARGET_GAS)\n-#undef MAKE_DECL_ONE_ONLY"}, {"sha": "707bb5da4b784d87de788b4fe04a26070ee877f8", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "patch": "@@ -9350,8 +9350,7 @@ pa_select_section (tree exp, int reloc,\n   else if (TARGET_SOM\n \t   && TREE_CODE (exp) == VAR_DECL\n \t   && DECL_ONE_ONLY (exp)\n-\t   && !DECL_WEAK (exp)\n-\t   && DECL_INITIAL (exp))\n+\t   && !DECL_WEAK (exp))\n     som_one_only_data_section ();\n   else\n     data_section ();"}, {"sha": "96dc2a9077f4b74a422cef126c215ad7e2cfc89a", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "patch": "@@ -311,11 +311,30 @@ do {\t\t\t\t\t\t\\\n #define SUPPORTS_WEAK 0\n #endif\n \n-/* We can support one only if we support weak.  */\n-#define SUPPORTS_ONE_ONLY SUPPORTS_WEAK\n+/* CVS GAS as of 4/28/04 supports a comdat parameter for the .nsubspa\n+   directive.  This provides one-only linkage semantics even though we\n+   don't have weak support.  */\n+#ifdef HAVE_GAS_NSUBSPA_COMDAT\n+#define SUPPORTS_SOM_COMDAT (TARGET_GAS)\n+#else\n+#define SUPPORTS_SOM_COMDAT 0\n+#endif\n \n-/* Use weak (secondary definitions) to make one only declarations.  */\n-#define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n+/* We can support one only if we support weak or comdat.  */\n+#define SUPPORTS_ONE_ONLY (SUPPORTS_WEAK || SUPPORTS_SOM_COMDAT)\n+\n+/* We use DECL_COMMON for uninitialized one-only variables as we don't\n+   have linkonce .bss.  We use SOM secondary definitions or comdat for\n+   initialized variables and functions.  */\n+#define MAKE_DECL_ONE_ONLY(DECL) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if (TREE_CODE (DECL) == VAR_DECL\t\t\t\t\t\\\n+        && (DECL_INITIAL (DECL) == 0\t\t\t\t\t\\\n+            || DECL_INITIAL (DECL) == error_mark_node))\t\t\t\\\n+      DECL_COMMON (DECL) = 1;\t\t\t\t\t\t\\\n+    else if (SUPPORTS_WEAK)\t\t\t\t\t\t\\\n+      DECL_WEAK (DECL) = 1;\t\t\t\t\t\t\\\n+  } while (0)\n \n /* This is how we tell the assembler that a symbol is weak.  The SOM\n    weak implementation uses the secondary definition (sdef) flag."}, {"sha": "00ce7c03a12969368660f94bdc84a1ddcc81db1f", "filename": "gcc/configure", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "patch": "@@ -13212,6 +13212,44 @@ _ACEOF\n \n fi\n \n+echo \"$as_me:$LINENO: checking assembler for .nsubspa comdat\" >&5\n+echo $ECHO_N \"checking assembler for .nsubspa comdat... $ECHO_C\" >&6\n+if test \"${gcc_cv_as_nsubspa_comdat+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  gcc_cv_as_nsubspa_comdat=no\n+    if test $in_tree_gas = yes; then\n+    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 15 \\) \\* 1000 + 91`\n+  then gcc_cv_as_nsubspa_comdat=yes\n+fi\n+  elif test x$gcc_cv_as != x; then\n+    echo '\t.SPACE $TEXT$\n+\t.NSUBSPA $CODE$,COMDAT' > conftest.s\n+    if { ac_try='$gcc_cv_as  -o conftest.o conftest.s >&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }\n+    then\n+\tgcc_cv_as_nsubspa_comdat=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_as_nsubspa_comdat\" >&5\n+echo \"${ECHO_T}$gcc_cv_as_nsubspa_comdat\" >&6\n+if test $gcc_cv_as_nsubspa_comdat = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_GAS_NSUBSPA_COMDAT 1\n+_ACEOF\n+\n+fi\n+\n # .hidden needs to be supported in both the assembler and the linker,\n # because GNU LD versions before 2.12.1 have buggy support for STV_HIDDEN.\n # This is irritatingly difficult to feature test for; we have to check the"}, {"sha": "3936aa4e34b75d20a2591f8555c53e5237f160b8", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41f3691b90d1ff924c6d31530f60d7180f8f4e8/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=e41f3691b90d1ff924c6d31530f60d7180f8f4e8", "patch": "@@ -2047,6 +2047,12 @@ gcc_GAS_CHECK_FEATURE([.weak], gcc_cv_as_weak,\n  [\t.weak foobar],,\n [AC_DEFINE(HAVE_GAS_WEAK, 1, [Define if your assembler supports .weak.])])\n \n+gcc_GAS_CHECK_FEATURE([.nsubspa comdat], gcc_cv_as_nsubspa_comdat,\n+ [2,15,91],,\n+ [\t.SPACE $TEXT$\n+\t.NSUBSPA $CODE$,COMDAT],,\n+[AC_DEFINE(HAVE_GAS_NSUBSPA_COMDAT, 1, [Define if your assembler supports .nsubspa comdat option.])])\n+\n # .hidden needs to be supported in both the assembler and the linker,\n # because GNU LD versions before 2.12.1 have buggy support for STV_HIDDEN.\n # This is irritatingly difficult to feature test for; we have to check the"}]}