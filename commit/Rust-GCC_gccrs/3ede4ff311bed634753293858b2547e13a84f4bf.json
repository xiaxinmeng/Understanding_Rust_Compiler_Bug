{"sha": "3ede4ff311bed634753293858b2547e13a84f4bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VkZTRmZjMxMWJlZDYzNDc1MzI5Mzg1OGIyNTQ3ZTEzYTg0ZjRiZg==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-06-25T11:23:49Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-06-25T11:23:49Z"}, "message": "ADT types can be empty signifying a unit-struct\n\nstruct S; Turns into an ADT type which is a type of unit-struct.", "tree": {"sha": "f0e5eaafcbe4954397cc0778b9d7301bca14c041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0e5eaafcbe4954397cc0778b9d7301bca14c041"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ede4ff311bed634753293858b2547e13a84f4bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ede4ff311bed634753293858b2547e13a84f4bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ede4ff311bed634753293858b2547e13a84f4bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ede4ff311bed634753293858b2547e13a84f4bf/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13fd4d31da76676e7de4ee4978093353f8d0fbc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13fd4d31da76676e7de4ee4978093353f8d0fbc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13fd4d31da76676e7de4ee4978093353f8d0fbc5"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "51ede175218af3a8a2582d723bad7360eaed4b50", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ede4ff311bed634753293858b2547e13a84f4bf/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ede4ff311bed634753293858b2547e13a84f4bf/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=3ede4ff311bed634753293858b2547e13a84f4bf", "patch": "@@ -843,6 +843,8 @@ class ADTType : public BaseType, public SubstitutionRef\n \n   bool get_is_tuple () { return is_tuple; }\n \n+  bool is_unit () const override { return this->fields.empty (); }\n+\n   void accept_vis (TyVisitor &vis) override;\n \n   std::string as_string () const override;"}]}