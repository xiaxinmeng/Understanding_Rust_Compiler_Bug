{"sha": "6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUwMmI1ZjUwOWJjODBiMWZkZTNhYmJmOGQwOWJiMTlhNDA4YTdmZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-11-07T07:50:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-11-07T07:50:01Z"}, "message": "re PR debug/54693 (VTA guality issues with loops)\n\n\tPR debug/54693\n\t* tree-flow.h (propagate_threaded_block_debug_into): New prototype.\n\t* tree-ssa-threadedge.c (propagate_threaded_block_debug_into): No\n\tlonger static.\n\t* tree-ssa-loop-ch.c (copy_loop_headers): Use it.\n\n\t* gcc.dg/guality/pr54693-2.c: New test.\n\nFrom-SVN: r193281", "tree": {"sha": "d0a69bc67491e1470eb38fcc87f4662b22addf51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0a69bc67491e1470eb38fcc87f4662b22addf51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c166488ff7cfbe253af1a062371c211667b1db1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c166488ff7cfbe253af1a062371c211667b1db1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c166488ff7cfbe253af1a062371c211667b1db1"}], "stats": {"total": 58, "additions": 53, "deletions": 5}, "files": [{"sha": "ee47cecf0c454c3c12b3bccc13c052c0f63a6950", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff", "patch": "@@ -1,3 +1,11 @@\n+2012-11-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/54693\n+\t* tree-flow.h (propagate_threaded_block_debug_into): New prototype.\n+\t* tree-ssa-threadedge.c (propagate_threaded_block_debug_into): No\n+\tlonger static.\n+\t* tree-ssa-loop-ch.c (copy_loop_headers): Use it.\n+\n 2012-11-06  Sterling Augustine <saugustine@google.com>\n \n \t* dwarf2out.c (output_comdat_type_unit): Check for OBJECT_FORMAT_ELF."}, {"sha": "8c5d5f3d0a5eb5fa528b64f02c86d5af627623db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff", "patch": "@@ -1,3 +1,8 @@\n+2012-11-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/54693\n+\t* gcc.dg/guality/pr54693-2.c: New test.\n+\n 2012-11-06  Andrew Pinski  <apinski@cavium.com>\n \n \t* gcc.target/aarch64/vect-fmaxv-fminv-compile.c: Add -fno-vect-cost-model."}, {"sha": "2810a75d5ecaffc4b24e0dba35193d4bb6aea4e3", "filename": "gcc/testsuite/gcc.dg/guality/pr54693-2.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54693-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54693-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54693-2.c?ref=6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff", "patch": "@@ -0,0 +1,33 @@\n+/* PR debug/54693 */\n+/* { dg-do run } */\n+/* { dg-options \"-g\" } */\n+\n+int v;\n+\n+__attribute__((noinline, noclone)) void\n+bar (int i)\n+{\n+  v = i;\n+  asm volatile (\"\" : : \"r\" (i) : \"memory\");\n+}\n+\n+__attribute__((noinline, noclone)) void\n+foo (int x, int y, int z)\n+{\n+  int i = 0;\n+  while (x > 3 && y > 3 && z > 3)\n+    {\t\t/* { dg-final { gdb-test 21 \"i\" \"v + 1\" } } */\n+\t\t/* { dg-final { gdb-test 21 \"x\" \"10 - i\" } } */\n+      bar (i);\t/* { dg-final { gdb-test 21 \"y\" \"20 - 2 * i\" } } */\n+\t\t/* { dg-final { gdb-test 21 \"z\" \"30 - 3 * i\" } } */\n+      i++, x--, y -= 2, z -= 3;\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  v = -1;\n+  foo (10, 20, 30);\n+  return 0;\n+}"}, {"sha": "7c27d96381cc0a0fac8bd36c35bd35a9d0ff1f64", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff", "patch": "@@ -1,6 +1,6 @@\n /* Data and Control Flow Analysis for Trees.\n-   Copyright (C) 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n-   Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,\n+   2012 Free Software Foundation, Inc.\n    Contributed by Diego Novillo <dnovillo@redhat.com>\n \n This file is part of GCC.\n@@ -689,6 +689,7 @@ extern void set_ssa_name_value (tree, tree);\n extern bool potentially_threadable_block (basic_block);\n extern void thread_across_edge (gimple, edge, bool,\n \t\t\t\tVEC(tree, heap) **, tree (*) (gimple, gimple));\n+extern void propagate_threaded_block_debug_into (basic_block, basic_block);\n \n /* In tree-ssa-loop-im.c  */\n /* The possibilities of statement movement.  */"}, {"sha": "02f6a414c679352e7c23ab54e6cbd22e335f60fc", "filename": "gcc/tree-ssa-loop-ch.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/gcc%2Ftree-ssa-loop-ch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/gcc%2Ftree-ssa-loop-ch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ch.c?ref=6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff", "patch": "@@ -1,5 +1,5 @@\n /* Loop header copying on trees.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2010\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -197,6 +197,7 @@ copy_loop_headers (void)\n \n       entry = loop_preheader_edge (loop);\n \n+      propagate_threaded_block_debug_into (exit->dest, entry->dest);\n       if (!gimple_duplicate_sese_region (entry, exit, bbs, n_bbs, copied_bbs))\n \t{\n \t  fprintf (dump_file, \"Duplication failed.\\n\");"}, {"sha": "64e42f3b7015200022c66709bae085c8dca41ee2", "filename": "gcc/tree-ssa-threadedge.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/gcc%2Ftree-ssa-threadedge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff/gcc%2Ftree-ssa-threadedge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadedge.c?ref=6e02b5f509bc80b1fde3abbf8d09bb19a408a7ff", "patch": "@@ -1,5 +1,5 @@\n /* SSA Jump Threading\n-   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Jeff Law  <law@redhat.com>\n \n@@ -617,7 +617,7 @@ DEF_VEC_ALLOC_O_STACK(tree);\n /* Copy debug stmts from DEST's chain of single predecessors up to\n    SRC, so that we don't lose the bindings as PHI nodes are introduced\n    when DEST gains new predecessors.  */\n-static void\n+void\n propagate_threaded_block_debug_into (basic_block dest, basic_block src)\n {\n   if (!MAY_HAVE_DEBUG_STMTS)"}]}