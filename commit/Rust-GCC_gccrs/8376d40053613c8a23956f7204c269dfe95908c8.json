{"sha": "8376d40053613c8a23956f7204c269dfe95908c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM3NmQ0MDA1MzYxM2M4YTIzOTU2ZjcyMDRjMjY5ZGZlOTU5MDhjOA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "crux@pool.informatik.rwth-aachen.de", "date": "1998-05-29T00:09:05Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-05-29T00:09:05Z"}, "message": "Makefile.in (GEN): Add gencheck\n\n        * Makefile.in (GEN): Add gencheck\n        (STAGESTUFF): Add tree-check.h and gencheck.\n\nFrom-SVN: r20131", "tree": {"sha": "287c08ece00ee397bd18ac47ef05e874af002876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/287c08ece00ee397bd18ac47ef05e874af002876"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8376d40053613c8a23956f7204c269dfe95908c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8376d40053613c8a23956f7204c269dfe95908c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8376d40053613c8a23956f7204c269dfe95908c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8376d40053613c8a23956f7204c269dfe95908c8/comments", "author": null, "committer": null, "parents": [{"sha": "71d085b0afa1f3c65cdd2c4d7d2cd887a56b803b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d085b0afa1f3c65cdd2c4d7d2cd887a56b803b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71d085b0afa1f3c65cdd2c4d7d2cd887a56b803b"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "b29b6c0abc6a331d836bf95efcab0deb41d5436c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8376d40053613c8a23956f7204c269dfe95908c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8376d40053613c8a23956f7204c269dfe95908c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8376d40053613c8a23956f7204c269dfe95908c8", "patch": "@@ -1,3 +1,8 @@\n+Fri May 29 01:07:28 1998  Bernd Schmidt <crux@Pool.Informatik.RWTH-Aachen.DE>\n+\n+\t* Makefile.in (GEN): Add gencheck\n+\t(STAGESTUFF): Add tree-check.h and gencheck.\n+\n Fri May 29 00:57:37 1998  Bruce Korb <korbb@datadesign.com>\n \n \t* Makefile.in (cstamp-h.in): Remove before trying to recreate."}, {"sha": "fc367e228eb30a6bd17348aa440f3d1a2da73d8d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8376d40053613c8a23956f7204c269dfe95908c8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8376d40053613c8a23956f7204c269dfe95908c8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8376d40053613c8a23956f7204c269dfe95908c8", "patch": "@@ -642,7 +642,7 @@ OBJS = toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o \\\n #  makes for cc1 or cc1plus.  Otherwise sequent parallel make attempts to load\n #  them before rtl.o is compiled.\n GEN= genemit genoutput genrecog genextract genflags gencodes genconfig \\\n- genpeep gengenrtl\n+ genpeep gengenrtl gencheck\n \n CCCP=cccp\n # Uncomment this line if you want to use cppmain (w/cpplib) as cpp.\n@@ -651,14 +651,15 @@ CCCP=cccp\n # Files to be copied away after each stage in building.\n STAGESTUFF = *$(objext) insn-flags.h insn-config.h insn-codes.h \\\n  insn-output.c insn-recog.c insn-emit.c insn-extract.c insn-peep.c \\\n- insn-attr.h insn-attrtab.c insn-opinit.c genrtl.c genrtl.h \\\n+ insn-attr.h insn-attrtab.c insn-opinit.c genrtl.c genrtl.h tree-check.h \\\n  s-flags s-config s-codes s-mlib \\\n  s-output s-recog s-emit s-extract s-peep \\\n  s-attr s-attrtab s-opinit s-crt s-crtS s-crt0 \\\n  genemit$(build_exeext) genoutput$(build_exeext) genrecog$(build_exeext) \\\n  genextract$(build_exeext) genflags$(build_exeext) gencodes$(build_exeext) \\\n  genconfig$(build_exeext) genpeep$(build_exeext) genattrtab$(build_exeext) \\\n  genattr$(build_exeext) genopinit$(build_exeext) gengenrtl$(build_exeext) \\\n+ gencheck$(build_exeext) \\\n  xgcc$(exeext) cc1$(exeext) cpp$(exeext) $(EXTRA_PASSES) \\\n  $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) \\\n  $(CCCP)$(exeext) cc1obj$(exeext) enquire$(exeext) \\"}]}