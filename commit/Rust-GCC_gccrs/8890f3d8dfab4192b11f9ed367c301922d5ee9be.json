{"sha": "8890f3d8dfab4192b11f9ed367c301922d5ee9be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg5MGYzZDhkZmFiNDE5MmIxMWY5ZWQzNjdjMzAxOTIyZDVlZTliZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-12-15T19:33:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-12-15T19:33:38Z"}, "message": "tweak comments\n\nFrom-SVN: r30961", "tree": {"sha": "14cc9d4e22d50d2d3290c1bd2085013ddd13f260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14cc9d4e22d50d2d3290c1bd2085013ddd13f260"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8890f3d8dfab4192b11f9ed367c301922d5ee9be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8890f3d8dfab4192b11f9ed367c301922d5ee9be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8890f3d8dfab4192b11f9ed367c301922d5ee9be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8890f3d8dfab4192b11f9ed367c301922d5ee9be/comments", "author": null, "committer": null, "parents": [{"sha": "8b725198ed273b50921e652e91fdcd43fc6a932f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b725198ed273b50921e652e91fdcd43fc6a932f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b725198ed273b50921e652e91fdcd43fc6a932f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2177e4af8ef0432e07c72f1bb578aa76a5ee5974", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8890f3d8dfab4192b11f9ed367c301922d5ee9be/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8890f3d8dfab4192b11f9ed367c301922d5ee9be/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=8890f3d8dfab4192b11f9ed367c301922d5ee9be", "patch": "@@ -488,7 +488,7 @@ inlinable_function_p (fn, id)\n \t  inlinable = 0;\n     }\n \n-  /* We can inline a template instantiation only if its fully\n+  /* We can inline a template instantiation only if it's fully\n      instantiated.  */\n   if (inlinable\n       && DECL_TEMPLATE_INFO (fn) \n@@ -502,7 +502,7 @@ inlinable_function_p (fn, id)\n   return inlinable;\n }\n \n-/* If *TP is CALL_EXPR, replace it with its inline expansion.  */\n+/* If *TP is a CALL_EXPR, replace it with its inline expansion.  */\n \n static tree\n expand_call_inline (tp, walk_subtrees, data)"}]}