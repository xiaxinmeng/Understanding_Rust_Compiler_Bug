{"sha": "23bea145a468dba875d4788c768502c7f46ba923", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNiZWExNDVhNDY4ZGJhODc1ZDQ3ODhjNzY4NTAyYzdmNDZiYTkyMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-12-05T13:32:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-12-05T13:32:35Z"}, "message": "revert cloning patch\n\nFrom-SVN: r38035", "tree": {"sha": "6fd7e16b44ee05453ea67403c3cdfb9c59a304f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fd7e16b44ee05453ea67403c3cdfb9c59a304f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23bea145a468dba875d4788c768502c7f46ba923", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23bea145a468dba875d4788c768502c7f46ba923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23bea145a468dba875d4788c768502c7f46ba923", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23bea145a468dba875d4788c768502c7f46ba923/comments", "author": null, "committer": null, "parents": [{"sha": "85c64f78c6fd0ba6bf016c90b5a94c6110be2226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85c64f78c6fd0ba6bf016c90b5a94c6110be2226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85c64f78c6fd0ba6bf016c90b5a94c6110be2226"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "d975a7d0a04aea9ac96399dc4aa7ef217129465a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23bea145a468dba875d4788c768502c7f46ba923/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23bea145a468dba875d4788c768502c7f46ba923/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=23bea145a468dba875d4788c768502c7f46ba923", "patch": "@@ -5786,7 +5786,6 @@ tsubst_decl (t, args, type, in_decl)\n \t    maybe_retrofit_in_chrg (r);\n \t    if (DECL_CONSTRUCTOR_P (r))\n \t      grok_ctor_properties (ctx, r);\n-\t    clone_function_decl(r, /*update_method_vec_p=*/0);\n \t  }\n \telse if (IDENTIFIER_OPNAME_P (DECL_NAME (r)))\n \t  grok_op_properties (r, DECL_VIRTUAL_P (r), DECL_FRIEND_P (r));\n@@ -9225,6 +9224,15 @@ do_decl_instantiation (declspecs, declarator, storage)\n     cp_error (\"storage class `%D' applied to template instantiation\",\n \t      storage);\n \n+  /* Under the new ABI, we need to make sure to instantiate all the\n+     cloned versions of constructors or destructors.  */\n+  if (flag_new_abi &&\n+      (DECL_MAYBE_IN_CHARGE_CONSTRUCTOR_P (result) || \n+       DECL_MAYBE_IN_CHARGE_DESTRUCTOR_P (result)) &&\n+      !(TREE_CHAIN (result) && \n+\tDECL_CLONED_FUNCTION (TREE_CHAIN (result))))\n+    clone_function_decl(result, /*update_method_vec_p=*/0);\n+      \n   SET_DECL_EXPLICIT_INSTANTIATION (result);\n   mark_decl_instantiated (result, extern_p);\n   repo_template_instantiated (result, extern_p);"}]}