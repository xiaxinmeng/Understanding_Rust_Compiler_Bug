{"sha": "29587b1c562162ec7f706aadb9805d05089e1987", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk1ODdiMWM1NjIxNjJlYzdmNzA2YWFkYjk4MDVkMDUwODllMTk4Nw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-02-16T20:42:34Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-02-16T20:42:34Z"}, "message": "(alpha_builtin_saveregs): Don't include current_function_arg_offset_rtx in argsize.\n\n(alpha_builtin_saveregs): Don't include\ncurrent_function_arg_offset_rtx in argsize.  Subtract 48 from arg\nbase address when no int registers stored on the stack.\n\nFrom-SVN: r6576", "tree": {"sha": "9fd8154ee1697a34df88871f8a55ead981099bfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fd8154ee1697a34df88871f8a55ead981099bfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29587b1c562162ec7f706aadb9805d05089e1987", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29587b1c562162ec7f706aadb9805d05089e1987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29587b1c562162ec7f706aadb9805d05089e1987", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29587b1c562162ec7f706aadb9805d05089e1987/comments", "author": null, "committer": null, "parents": [{"sha": "81fe0dbc99a48b3e8efa5c3ed972514961e32705", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fe0dbc99a48b3e8efa5c3ed972514961e32705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81fe0dbc99a48b3e8efa5c3ed972514961e32705"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "00ca472da6babe080878544124ee26a0a16f3d40", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29587b1c562162ec7f706aadb9805d05089e1987/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29587b1c562162ec7f706aadb9805d05089e1987/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=29587b1c562162ec7f706aadb9805d05089e1987", "patch": "@@ -1056,23 +1056,33 @@ alpha_builtin_saveregs (arglist)\n \t\t    != void_type_node));\n \n   /* Compute the current position into the args, taking into account\n-     both registers and memory.  */\n+     both registers and memory.  Both of these are already included in\n+     current_function_args_info.  */\n \n-  argsize = plus_constant (current_function_arg_offset_rtx,\n-\t\t\t   current_function_args_info * UNITS_PER_WORD);\n+  argsize = GEN_INT (current_function_args_info * UNITS_PER_WORD);\n+\n+  /* SETUP_INCOMING_VARARGS moves the starting address base up by 48,\n+     storing fp arg registers in the first 48 bytes, and the integer arg\n+     registers in the next 48 bytes.  This is only done, however, if any\n+     integer registers need to be stored.\n+\n+     If no integer registers need be stored, then we must subtract 48 in\n+     order to account for the integer arg registers which are counted in\n+     argsize above, but which are not actually stored on the stack.  */\n+\n+  addr = (current_function_args_info < 6\n+\t  ? plus_constant (virtual_incoming_args_rtx, 6 * UNITS_PER_WORD)\n+\t  : plus_constant (virtual_incoming_args_rtx, - (6 * UNITS_PER_WORD)));\n \n   /* Allocate the va_list constructor */\n   block = assign_stack_local (BLKmode, 2 * UNITS_PER_WORD, BITS_PER_WORD);\n   RTX_UNCHANGING_P (block) = 1;\n   RTX_UNCHANGING_P (XEXP (block, 0)) = 1;\n \n   /* Store the address of the first integer register in the\n-     __va_base member.   */\n-\n-  emit_move_insn (change_address (block, DImode, XEXP (block, 0)),\n-\t\t  force_operand (plus_constant (virtual_incoming_args_rtx,\n-\t\t\t\t\t\t6 * UNITS_PER_WORD),\n-\t\t\t\t NULL_RTX));\n+     __va_base member.  */\n+  emit_move_insn (change_address (block, Pmode, XEXP (block, 0)),\n+\t\t  force_operand (addr, NULL_RTX));\n \n   /* Store the argsize as the __va_offset member.  */\n   emit_move_insn (change_address (block, Pmode,"}]}