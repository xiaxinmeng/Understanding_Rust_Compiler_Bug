{"sha": "7e114fadf1ac83f36b1b84c60045ba016c4f37fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UxMTRmYWRmMWFjODNmMzZiMWI4NGM2MDA0NWJhMDE2YzRmMzdmYQ==", "commit": {"author": {"name": "Joost VandeVondele", "email": "vondele@gcc.gnu.org", "date": "2014-08-22T10:14:50Z"}, "committer": {"name": "Joost VandeVondele", "email": "vondele@gcc.gnu.org", "date": "2014-08-22T10:14:50Z"}, "message": "re PR fortran/61234 (Warn for use-stmt without explicit only-list.)\n\n 2014-08-22  Joost VandeVondele  <Joost.VandeVondele@mat.ethz.ch>\n \n \t* gfortran.dg/use_without_only_1.f90: New test.\n \n 2014-08-22  Joost VandeVondele  <Joost.VandeVondele@mat.ethz.ch>\n \n \tPR fortran/61234\n \t* lang.opt (Wuse-without-only): New flag.\n \t* gfortran.h (gfc_option_t): Add it.\n \t* invoke.texi: Document it.\n \t* module.c (gfc_use_module): Warn if needed.\n \t* options.c (gfc_init_options,gfc_handle_option): Init accordingly.\n\nFrom-SVN: r214311", "tree": {"sha": "e461b437e15bff0158a42c3f3887302a848895db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e461b437e15bff0158a42c3f3887302a848895db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e114fadf1ac83f36b1b84c60045ba016c4f37fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e114fadf1ac83f36b1b84c60045ba016c4f37fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e114fadf1ac83f36b1b84c60045ba016c4f37fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/comments", "author": {"login": "vondele", "id": 4202567, "node_id": "MDQ6VXNlcjQyMDI1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/4202567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vondele", "html_url": "https://github.com/vondele", "followers_url": "https://api.github.com/users/vondele/followers", "following_url": "https://api.github.com/users/vondele/following{/other_user}", "gists_url": "https://api.github.com/users/vondele/gists{/gist_id}", "starred_url": "https://api.github.com/users/vondele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vondele/subscriptions", "organizations_url": "https://api.github.com/users/vondele/orgs", "repos_url": "https://api.github.com/users/vondele/repos", "events_url": "https://api.github.com/users/vondele/events{/privacy}", "received_events_url": "https://api.github.com/users/vondele/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vondele", "id": 4202567, "node_id": "MDQ6VXNlcjQyMDI1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/4202567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vondele", "html_url": "https://github.com/vondele", "followers_url": "https://api.github.com/users/vondele/followers", "following_url": "https://api.github.com/users/vondele/following{/other_user}", "gists_url": "https://api.github.com/users/vondele/gists{/gist_id}", "starred_url": "https://api.github.com/users/vondele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vondele/subscriptions", "organizations_url": "https://api.github.com/users/vondele/orgs", "repos_url": "https://api.github.com/users/vondele/repos", "events_url": "https://api.github.com/users/vondele/events{/privacy}", "received_events_url": "https://api.github.com/users/vondele/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3616dc706e703902088fcf055af5da7d410ea18f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3616dc706e703902088fcf055af5da7d410ea18f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3616dc706e703902088fcf055af5da7d410ea18f"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "1ced6fa187d94c66209757cdbcf404d32797b070", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7e114fadf1ac83f36b1b84c60045ba016c4f37fa", "patch": "@@ -1,3 +1,12 @@\n+2014-08-22  Joost VandeVondele  <Joost.VandeVondele@mat.ethz.ch>\n+\n+\tPR fortran/61234\n+\t* lang.opt (Wuse-without-only): New flag.\n+\t* gfortran.h (gfc_option_t): Add it.\n+\t* invoke.texi: Document it.\n+\t* module.c (gfc_use_module): Warn if needed.\n+\t* options.c (gfc_init_options,gfc_handle_option): Init accordingly.\n+\n 2014-08-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/62214"}, {"sha": "b208a89e29f0a9ecd60362b926b71a35ea2caee7", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=7e114fadf1ac83f36b1b84c60045ba016c4f37fa", "patch": "@@ -2450,6 +2450,7 @@ typedef struct\n   int warn_tabs;\n   int warn_underflow;\n   int warn_intrinsic_shadow;\n+  int warn_use_without_only;\n   int warn_intrinsics_std;\n   int warn_character_truncation;\n   int warn_array_temp;"}, {"sha": "18d0c9ea37e0e03da76a3a9c4b22ce3f946beb7f", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=7e114fadf1ac83f36b1b84c60045ba016c4f37fa", "patch": "@@ -142,7 +142,7 @@ and warnings}.\n @gccoptlist{-Waliasing -Wall -Wampersand -Warray-bounds\n -Wc-binding-type -Wcharacter-truncation @gol\n -Wconversion -Wfunction-elimination -Wimplicit-interface @gol\n--Wimplicit-procedure -Wintrinsic-shadow -Wintrinsics-std @gol\n+-Wimplicit-procedure -Wintrinsic-shadow -Wuse-without-only -Wintrinsics-std @gol\n -Wline-truncation -Wno-align-commons -Wno-tabs -Wreal-q-constant @gol\n -Wsurprising -Wunderflow -Wunused-parameter -Wrealloc-lhs -Wrealloc-lhs-all @gol\n -Wtarget-lifetime -fmax-errors=@var{n} -fsyntax-only -pedantic -pedantic-errors\n@@ -896,6 +896,13 @@ intrinsic; in this case, an explicit interface or @code{EXTERNAL} or\n @code{INTRINSIC} declaration might be needed to get calls later resolved to\n the desired intrinsic/procedure.  This option is implied by @option{-Wall}.\n \n+@item -Wuse-without-only\n+@opindex @code{Wuse-without-only}\n+@cindex warnings, use statements\n+@cindex intrinsic\n+Warn if a @code{USE} statement has no @code{ONLY} qualifier and \n+thus implicitly imports all public entities of the used module.\n+\n @item -Wunused-dummy-argument\n @opindex @code{Wunused-dummy-argument}\n @cindex warnings, unused dummy argument"}, {"sha": "72d0dcf0072acc67062a2d56f2a5ac50d56f8d72", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=7e114fadf1ac83f36b1b84c60045ba016c4f37fa", "patch": "@@ -257,6 +257,10 @@ Wintrinsics-std\n Fortran Warning\n Warn on intrinsics not part of the selected standard\n \n+Wuse-without-only\n+Fortran Warning\n+Warn about USE statements that have no ONLY qualifier\n+\n Wopenmp-simd\n Fortran\n ; Documented in C"}, {"sha": "3d5e247e1962e14cbfdd095339b6fb0f71483798", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=7e114fadf1ac83f36b1b84c60045ba016c4f37fa", "patch": "@@ -6741,6 +6741,9 @@ gfc_use_module (gfc_use_list *module)\n   only_flag = module->only_flag;\n   current_intmod = INTMOD_NONE;\n \n+  if (!only_flag && gfc_option.warn_use_without_only) \n+    gfc_warning_now (\"USE statement at %C has no ONLY qualifier\");\n+\n   filename = XALLOCAVEC (char, strlen (module_name) + strlen (MODULE_EXTENSION)\n \t\t\t       + 1);\n   strcpy (filename, module_name);"}, {"sha": "d648e94980074505f5ecbdfc6721bb2b904fe9a5", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=7e114fadf1ac83f36b1b84c60045ba016c4f37fa", "patch": "@@ -107,6 +107,7 @@ gfc_init_options (unsigned int decoded_options_count,\n   gfc_option.warn_tabs = 1;\n   gfc_option.warn_underflow = 1;\n   gfc_option.warn_intrinsic_shadow = 0;\n+  gfc_option.warn_use_without_only = 0;\n   gfc_option.warn_intrinsics_std = 0;\n   gfc_option.warn_align_commons = 1;\n   gfc_option.warn_real_q_constant = 0;\n@@ -728,6 +729,10 @@ gfc_handle_option (size_t scode, const char *arg, int value,\n       gfc_option.warn_intrinsic_shadow = value;\n       break;\n \n+    case OPT_Wuse_without_only:\n+      gfc_option.warn_use_without_only = value;\n+      break;\n+\n     case OPT_Walign_commons:\n       gfc_option.warn_align_commons = value;\n       break;"}, {"sha": "8dd980b8a6f5888e8da64bd46039a80029af00c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e114fadf1ac83f36b1b84c60045ba016c4f37fa", "patch": "@@ -1,11 +1,15 @@\n+2014-08-22  Joost VandeVondele  <Joost.VandeVondele@mat.ethz.ch>\n+\n+\t* gfortran.dg/use_without_only_1.f90: New test.\n+\n 2014-08-22  Igor Zamyatin  <igor.zamyatin@intel.com>\n \n \tPR other/62008\n \t* c-c++-common/cilk-plus/AN/pr62008.c: New test.\n \n 2014-08-22  Tony Wang  <tony.wang@arm.com>\n \n-        * g++.dg/tls/thread_local6.C: Skip this test case when target uses\n+\t* g++.dg/tls/thread_local6.C: Skip this test case when target uses\n \tdejagnu wrapper.\n \n 2014-08-21  Thomas Koenig  <tkoenig@gcc.gnu.org>"}, {"sha": "8554539b3eacf6ebd85fc485196cea4184a75879", "filename": "gcc/testsuite/gfortran.dg/use_without_only_1.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_without_only_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e114fadf1ac83f36b1b84c60045ba016c4f37fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_without_only_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_without_only_1.f90?ref=7e114fadf1ac83f36b1b84c60045ba016c4f37fa", "patch": "@@ -0,0 +1,22 @@\n+! PR fortran/61234 Warn for use-stmt without explicit only-list.\n+! { dg-do compile }\n+! { dg-options \"-Wuse-without-only\" }\n+MODULE foo\n+  INTEGER :: bar\n+END MODULE\n+\n+MODULE testmod\n+  USE foo ! { dg-warning \"has no ONLY qualifier\" }\n+  IMPLICIT NONE\n+CONTAINS\n+  SUBROUTINE S1\n+     USE foo ! { dg-warning \"has no ONLY qualifier\" }\n+  END SUBROUTINE S1\n+  SUBROUTINE S2\n+     USE foo, ONLY: bar \n+  END SUBROUTINE\n+  SUBROUTINE S3\n+     USE ISO_C_BINDING ! { dg-warning \"has no ONLY qualifier\" }\n+  END SUBROUTINE S3\n+END MODULE\n+! { dg-final { cleanup-modules \"foo testmod\" } }"}]}