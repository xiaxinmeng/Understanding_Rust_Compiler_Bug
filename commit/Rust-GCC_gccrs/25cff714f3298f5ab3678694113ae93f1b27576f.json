{"sha": "25cff714f3298f5ab3678694113ae93f1b27576f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVjZmY3MTRmMzI5OGY1YWIzNjc4Njk0MTEzYWU5M2YxYjI3NTc2Zg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-02-28T04:26:57Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-02-28T04:26:57Z"}, "message": "print-rtl.c (print_rtx): Don't print field five on NOTEs other than NOTE_INSN_DELETED_LABEL.\n\n        * print-rtl.c (print_rtx) [i]: Don't print field five on\n        NOTEs other than NOTE_INSN_DELETED_LABEL.\n\nFrom-SVN: r40110", "tree": {"sha": "f730ac1da63a8a570ebeac7da22e486791f8b3cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f730ac1da63a8a570ebeac7da22e486791f8b3cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25cff714f3298f5ab3678694113ae93f1b27576f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25cff714f3298f5ab3678694113ae93f1b27576f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25cff714f3298f5ab3678694113ae93f1b27576f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25cff714f3298f5ab3678694113ae93f1b27576f/comments", "author": null, "committer": null, "parents": [{"sha": "115b5a7e47ff92545e183403ef57f9397436f0f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/115b5a7e47ff92545e183403ef57f9397436f0f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/115b5a7e47ff92545e183403ef57f9397436f0f9"}], "stats": {"total": 86, "additions": 50, "deletions": 36}, "files": [{"sha": "6c3fa5d95572bba4087051aee9088bf5fa8d0fac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cff714f3298f5ab3678694113ae93f1b27576f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cff714f3298f5ab3678694113ae93f1b27576f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25cff714f3298f5ab3678694113ae93f1b27576f", "patch": "@@ -1,3 +1,8 @@\n+2001-02-27  Richard Henderson  <rth@redhat.com>\n+\n+\t* print-rtl.c (print_rtx) [i]: Don't print field five on\n+\tNOTEs other than NOTE_INSN_DELETED_LABEL.\n+\n 2001-02-27  Zack Weinberg  <zackw@stanford.edu>\n \n \t* mips/xm-iris4.h: Delete #if 0 block (there since before 1997)."}, {"sha": "b421282d5d9a543f1a335d47a12a214fc64591ee", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 45, "deletions": 36, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cff714f3298f5ab3678694113ae93f1b27576f/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cff714f3298f5ab3678694113ae93f1b27576f/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=25cff714f3298f5ab3678694113ae93f1b27576f", "patch": "@@ -322,43 +322,52 @@ print_rtx (in_rtx)\n \tbreak;\n \n       case 'i':\n-\t{\n-\t  register int value = XINT (in_rtx, i);\n-\t  const char *name;\n+\tif (i == 5 && GET_CODE (in_rtx) == NOTE)\n+\t  {\n+\t    /* This field is only used for NOTE_INSN_DELETED_LABEL, and\n+\t       other times often contains garbage from INSN->NOTE death.  */\n+\t    if (NOTE_LINE_NUMBER (in_rtx) == NOTE_INSN_DELETED_LABEL)\n+\t      fprintf (outfile, \" %d\",  XINT (in_rtx, i));\n+\t  }\n+\telse\n+\t  {\n+\t    register int value = XINT (in_rtx, i);\n+\t    const char *name;\n \n-\t  if (GET_CODE (in_rtx) == REG && value < FIRST_PSEUDO_REGISTER)\n-\t    {\n-\t      fputc (' ', outfile);\n-\t      DEBUG_PRINT_REG (in_rtx, 0, outfile);\n-\t    }\n-\t  else if (GET_CODE (in_rtx) == REG && value <= LAST_VIRTUAL_REGISTER)\n-\t    {\n-\t      if (value == VIRTUAL_INCOMING_ARGS_REGNUM)\n-\t\tfprintf (outfile, \" %d virtual-incoming-args\", value);\n-\t      else if (value == VIRTUAL_STACK_VARS_REGNUM)\n-\t\tfprintf (outfile, \" %d virtual-stack-vars\", value);\n-\t      else if (value == VIRTUAL_STACK_DYNAMIC_REGNUM)\n-\t\tfprintf (outfile, \" %d virtual-stack-dynamic\", value);\n-\t      else if (value == VIRTUAL_OUTGOING_ARGS_REGNUM)\n-\t\tfprintf (outfile, \" %d virtual-outgoing-args\", value);\n-\t      else if (value == VIRTUAL_CFA_REGNUM)\n-\t\tfprintf (outfile, \" %d virtual-cfa\", value);\n-\t      else\n-\t\tfprintf (outfile, \" %d virtual-reg-%d\", value,\n-\t\t\t value-FIRST_VIRTUAL_REGISTER);\n-\t    }\n-\t  else if (flag_dump_unnumbered\n-\t\t   && (is_insn || GET_CODE (in_rtx) == NOTE))\n-\t    fputc ('#', outfile);\n-\t  else\n-\t    fprintf (outfile, \" %d\", value);\n-\n-\t  if (is_insn && &INSN_CODE (in_rtx) == &XINT (in_rtx, i)\n-\t      && XINT (in_rtx, i) >= 0\n-\t      && (name = get_insn_name (XINT (in_rtx, i))) != NULL)\n-\t    fprintf (outfile, \" {%s}\", name);\n-\t  sawclose = 0;\n-\t}\n+\t    if (GET_CODE (in_rtx) == REG && value < FIRST_PSEUDO_REGISTER)\n+\t      {\n+\t\tfputc (' ', outfile);\n+\t\tDEBUG_PRINT_REG (in_rtx, 0, outfile);\n+\t      }\n+\t    else if (GET_CODE (in_rtx) == REG\n+\t\t     && value <= LAST_VIRTUAL_REGISTER)\n+\t      {\n+\t\tif (value == VIRTUAL_INCOMING_ARGS_REGNUM)\n+\t\t  fprintf (outfile, \" %d virtual-incoming-args\", value);\n+\t\telse if (value == VIRTUAL_STACK_VARS_REGNUM)\n+\t\t  fprintf (outfile, \" %d virtual-stack-vars\", value);\n+\t\telse if (value == VIRTUAL_STACK_DYNAMIC_REGNUM)\n+\t\t  fprintf (outfile, \" %d virtual-stack-dynamic\", value);\n+\t\telse if (value == VIRTUAL_OUTGOING_ARGS_REGNUM)\n+\t\t  fprintf (outfile, \" %d virtual-outgoing-args\", value);\n+\t\telse if (value == VIRTUAL_CFA_REGNUM)\n+\t\t  fprintf (outfile, \" %d virtual-cfa\", value);\n+\t\telse\n+\t\t  fprintf (outfile, \" %d virtual-reg-%d\", value,\n+\t\t\t   value-FIRST_VIRTUAL_REGISTER);\n+\t      }\n+\t    else if (flag_dump_unnumbered\n+\t\t     && (is_insn || GET_CODE (in_rtx) == NOTE))\n+\t      fputc ('#', outfile);\n+\t    else\n+\t      fprintf (outfile, \" %d\", value);\n+\n+\t    if (is_insn && &INSN_CODE (in_rtx) == &XINT (in_rtx, i)\n+\t\t&& XINT (in_rtx, i) >= 0\n+\t\t&& (name = get_insn_name (XINT (in_rtx, i))) != NULL)\n+\t      fprintf (outfile, \" {%s}\", name);\n+\t    sawclose = 0;\n+\t  }\n \tbreak;\n \n       /* Print NOTE_INSN names rather than integer codes.  */"}]}