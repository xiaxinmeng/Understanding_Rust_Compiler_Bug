{"sha": "88ed5ef5920aad04b489683002f090aaf8d93a1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhlZDVlZjU5MjBhYWQwNGI0ODk2ODMwMDJmMDkwYWFmOGQ5M2ExZg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2004-09-13T20:34:55Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2004-09-13T20:34:55Z"}, "message": "ia64.c (ia64_scalar_mode_supported_p): New.\n\n\t* config/ia64/ia64.c (ia64_scalar_mode_supported_p): New.\n\t(TARGET_SCALAR_MODE_SUPPORTED_P): New.\n\nFrom-SVN: r87448", "tree": {"sha": "c3587db1a9b80338e49aed01374d9729a5a1a2d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3587db1a9b80338e49aed01374d9729a5a1a2d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88ed5ef5920aad04b489683002f090aaf8d93a1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88ed5ef5920aad04b489683002f090aaf8d93a1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88ed5ef5920aad04b489683002f090aaf8d93a1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88ed5ef5920aad04b489683002f090aaf8d93a1f/comments", "author": null, "committer": null, "parents": [{"sha": "a5bfe14186a3eb1665baa0264801655cab77ce0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5bfe14186a3eb1665baa0264801655cab77ce0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5bfe14186a3eb1665baa0264801655cab77ce0c"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "31e7739384f4f2b5795cf4775b97696bfcc5a93d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88ed5ef5920aad04b489683002f090aaf8d93a1f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88ed5ef5920aad04b489683002f090aaf8d93a1f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88ed5ef5920aad04b489683002f090aaf8d93a1f", "patch": "@@ -1,3 +1,8 @@\n+2004-09-13  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* config/ia64/ia64.c (ia64_scalar_mode_supported_p): New.\n+\t(TARGET_SCALAR_MODE_SUPPORTED_P): New.\n+\n 2004-09-13  Richard Henderson  <rth@redhat.com>\n \n \tPR 17436"}, {"sha": "b85e1c2be117865c98c894759a12afdbaa3af950", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88ed5ef5920aad04b489683002f090aaf8d93a1f/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88ed5ef5920aad04b489683002f090aaf8d93a1f/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=88ed5ef5920aad04b489683002f090aaf8d93a1f", "patch": "@@ -276,6 +276,7 @@ static tree ia64_handle_model_attribute (tree *, tree, tree, int, bool *);\n static void ia64_encode_section_info (tree, rtx, int);\n static rtx ia64_struct_value_rtx (tree, int);\n static tree ia64_gimplify_va_arg (tree, tree, tree *, tree *);\n+static bool ia64_scalar_mode_supported_p (enum machine_mode mode);\n \n \f\n /* Table of valid machine attributes.  */\n@@ -416,6 +417,9 @@ static const struct attribute_spec ia64_attribute_table[] =\n #undef TARGET_UNWIND_EMIT\n #define TARGET_UNWIND_EMIT process_for_unwind_directive\n \n+#undef TARGET_SCALAR_MODE_SUPPORTED_P\n+#define TARGET_SCALAR_MODE_SUPPORTED_P ia64_scalar_mode_supported_p\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n typedef enum\n@@ -8478,4 +8482,29 @@ ia64_struct_value_rtx (tree fntype,\n   return gen_rtx_REG (Pmode, GR_REG (8));\n }\n \n+static bool\n+ia64_scalar_mode_supported_p (enum machine_mode mode)\n+{\n+  switch (mode)\n+    {\n+    case QImode:\n+    case HImode:\n+    case SImode:\n+    case DImode:\n+    case TImode:\n+      return true;\n+\n+    case SFmode:\n+    case DFmode:\n+    case XFmode:\n+      return true;\n+\n+    case TFmode:\n+      return TARGET_HPUX;\n+\n+    default:\n+      return false;\n+    }\n+}\n+\n #include \"gt-ia64.h\""}]}