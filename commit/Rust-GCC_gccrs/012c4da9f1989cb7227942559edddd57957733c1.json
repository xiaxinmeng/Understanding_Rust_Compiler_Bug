{"sha": "012c4da9f1989cb7227942559edddd57957733c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEyYzRkYTlmMTk4OWNiNzIyNzk0MjU1OWVkZGRkNTc5NTc3MzNjMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-09-05T23:27:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-09-05T23:27:17Z"}, "message": "re PR c++/33289 (__sprintf_chk etc. not DECL_ANTICIPATED)\n\n\tPR c++/33289\n\t* decl.c (builtin_function_1): Set DECL_ANTICIPATED also\n\ton __*_chk non-__builtin_* decls.\n\n\t* g++.dg/eh/builtin4.C: New test.\n\nFrom-SVN: r128160", "tree": {"sha": "25366d4fc41359e214da9a68ae0144b9522f8311", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25366d4fc41359e214da9a68ae0144b9522f8311"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/012c4da9f1989cb7227942559edddd57957733c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/012c4da9f1989cb7227942559edddd57957733c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/012c4da9f1989cb7227942559edddd57957733c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/012c4da9f1989cb7227942559edddd57957733c1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62bedd31edd62e473fceb5c75b838e4c4f5079fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62bedd31edd62e473fceb5c75b838e4c4f5079fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62bedd31edd62e473fceb5c75b838e4c4f5079fe"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "b8fb9711721f2bedf46237a8f105352a4f942a7b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/012c4da9f1989cb7227942559edddd57957733c1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/012c4da9f1989cb7227942559edddd57957733c1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=012c4da9f1989cb7227942559edddd57957733c1", "patch": "@@ -3,6 +3,10 @@\n \t* decl.c (duplicate_decls): Set TREE_NOTHROW on __builtin_XX\n \tdecl if a prototype for XX is provided with throw().\n \n+\tPR c++/33289\n+\t* decl.c (builtin_function_1): Set DECL_ANTICIPATED also\n+\ton __*_chk non-__builtin_* decls.\n+\n 2007-09-05  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/30302"}, {"sha": "9587de568480be5d23d27288d97b4a8e725f0e81", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/012c4da9f1989cb7227942559edddd57957733c1/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/012c4da9f1989cb7227942559edddd57957733c1/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=012c4da9f1989cb7227942559edddd57957733c1", "patch": "@@ -3528,6 +3528,17 @@ builtin_function_1 (tree decl, tree context)\n      anticipated but not actually declared.  */\n   if (name[0] != '_' || name[1] != '_')\n     DECL_ANTICIPATED (decl) = 1;\n+  else if (strncmp (name + 2, \"builtin_\", strlen (\"builtin_\")) != 0)\n+    {\n+      size_t len = strlen (name);\n+\n+      /* Treat __*_chk fortification functions as anticipated as well,\n+\t unless they are __builtin_*.  */\n+      if (len > strlen (\"___chk\")\n+\t  && memcmp (name + len - strlen (\"_chk\"),\n+\t\t     \"_chk\", strlen (\"_chk\") + 1) == 0)\n+\tDECL_ANTICIPATED (decl) = 1;\n+    }\n \n   return decl;\n }"}, {"sha": "e6803a83f46946d12b5a4d92e7f6cba982ab009c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/012c4da9f1989cb7227942559edddd57957733c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/012c4da9f1989cb7227942559edddd57957733c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=012c4da9f1989cb7227942559edddd57957733c1", "patch": "@@ -4,6 +4,9 @@\n \t* g++.dg/eh/builtin2.C: New test.\n \t* g++.dg/eh/builtin3.C: New test.\n \n+\tPR c++/33289\n+\t* g++.dg/eh/builtin4.C: New test.\n+\n 2007-09-05  Janis Johnson  <janis187@us.ibm.com>\n \n \t* gcc.target/powerpc/dfp-dd.c: New test."}, {"sha": "32348174af676e05782de1adfa3b3bc7bfc9f144", "filename": "gcc/testsuite/g++.dg/eh/builtin4.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/012c4da9f1989cb7227942559edddd57957733c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fbuiltin4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/012c4da9f1989cb7227942559edddd57957733c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fbuiltin4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fbuiltin4.C?ref=012c4da9f1989cb7227942559edddd57957733c1", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/33289\n+// { dg-do compile }\n+\n+typedef __SIZE_TYPE__ size_t;\n+extern \"C\" int __sprintf_chk (char *__restrict, int, size_t, const char *, ...) throw ();\n+extern \"C\" int __sprintf_chk (char *__restrict, int, size_t, const char *, ...) throw ();"}]}