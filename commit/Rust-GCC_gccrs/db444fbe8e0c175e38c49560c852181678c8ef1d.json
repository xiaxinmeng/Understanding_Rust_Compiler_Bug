{"sha": "db444fbe8e0c175e38c49560c852181678c8ef1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI0NDRmYmU4ZTBjMTc1ZTM4YzQ5NTYwYzg1MjE4MTY3OGM4ZWYxZA==", "commit": {"author": {"name": "Nic Ferrier", "email": "nferrier@gcc.gnu.org", "date": "2002-02-20T23:12:25Z"}, "committer": {"name": "Nic Ferrier", "email": "nferrier@gcc.gnu.org", "date": "2002-02-20T23:12:25Z"}, "message": "gcj.texi: Option `--classpath' becomes `--CLASSPATH.'Option `--CLASSPATH' becomes...\n\n\t* gcj.texi: Option `--classpath' becomes `--CLASSPATH.'Option\n \t`--CLASSPATH' becomes `--classpath.'\n        * gjavah.c: Likewise.\n        * jcf-dump.c: Likewise.\n        * lang-options.h: Likewise.\n        * lang.c: Likewise.\n        * jcf-path.c: Updated comment.\n        (jcf_path_classpath_arg): Renamed `jcf_path_CLASSPATH_arg.'\n        (jcf_path_CLASSPATH_arg): Renamed `jcf_path_classpath_arg.'\n        * jcf.h (jcf_path_CLASSPATH_arg): Ditto.\n        (jcf_path_CLASSPATH_arg): Ditto.\n        (classpath_u): Updated leading comment.\n\nFrom-SVN: r49918", "tree": {"sha": "8669888d476de6362ca887ed220ce715d09dd392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8669888d476de6362ca887ed220ce715d09dd392"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db444fbe8e0c175e38c49560c852181678c8ef1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db444fbe8e0c175e38c49560c852181678c8ef1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db444fbe8e0c175e38c49560c852181678c8ef1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db444fbe8e0c175e38c49560c852181678c8ef1d/comments", "author": null, "committer": null, "parents": [{"sha": "3704ef744f0b39b4c28d84bef7702644b62ccefb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3704ef744f0b39b4c28d84bef7702644b62ccefb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3704ef744f0b39b4c28d84bef7702644b62ccefb"}], "stats": {"total": 149, "additions": 79, "deletions": 70}, "files": [{"sha": "e7b97d26df7e60a10719a449d2f64d5dbda3371d", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=db444fbe8e0c175e38c49560c852181678c8ef1d", "patch": "@@ -141,7 +141,7 @@ files and object files, and it can read both Java source code and\n @ignore\n @c man begin SYNOPSIS gcj\n gcj [@option{-I}@var{dir}@dots{}] [@option{-d} @var{dir}@dots{}]\n-    [@option{--classpath}=@var{path}] [@option{--CLASSPATH}=@var{path}]\n+    [@option{--CLASSPATH}=@var{path}] [@option{--classpath}=@var{path}]\n     [@option{-f}@var{option}@dots{}] [@option{--encoding}=@var{name}]\n     [@option{--main}=@var{classname}] [@option{-D}@var{name}[=@var{value}]@dots{}]\n     [@option{-C}] [@option{-R} @var{resource-name}] [@option{-d} @var{directory}]\n@@ -240,11 +240,12 @@ compatibility with tools like @code{javac} is imported, we recommend\n always using @code{-I} instead of the other options for manipulating the\n class path.\n \n-@item --classpath=@var{path}\n+@item --CLASSPATH=@var{path}\n This sets the class path to @var{path}, a colon-separated list of paths\n-(on Windows-based systems, a semicolon-separate list of paths).\n+(on Windows-based systems, a semicolon-separate list of paths). Using\n+this option causes the built in path to be suppressed.\n \n-@item --CLASSPATH=@var{path}\n+@item --classpath=@var{path}\n This sets the class path to @var{path}, a colon-separated list of paths\n (on Windows-based systems, a semicolon-separate list of paths).  This\n differs from the @code{--classpath} option in that it does not suppress\n@@ -261,17 +262,18 @@ The final class path is constructed like so:\n First come all directories specified via @code{-I}.\n \n @item\n-If @code{--classpath} is specified, its value is appended and processing\n-stops.  That is, @code{--classpath} suppresses all the options mentioned\n+If @option{--CLASSPATH} is specified, its value is appended and processing\n+stops.  That is, @option{--CLASSPATH} suppresses all the options mentioned\n later in this list.\n \n @item\n-If @code{--CLASSPATH} is specified, its value is appended and the\n+If @option{--classpath} is specified, its value is appended and the\n @code{CLASSPATH} environment variable is suppressed.\n \n @item\n If the @code{CLASSPATH} environment variable is specified (and was not\n-suppressed by @code{--CLASSPATH}), then its value is appended.\n+suppressed by @option{--classpath} or @option{--CLASSPATH}), then its\n+value is appended.\n \n @item\n Finally, the built-in system directory, @file{libgcj.jar}, is appended."}, {"sha": "7034e58e5535f0e7111b659fd74bf6dd7d28ab5b", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 34, "deletions": 33, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=db444fbe8e0c175e38c49560c852181678c8ef1d", "patch": "@@ -2101,41 +2101,41 @@ DEFUN(process_file, (jcf, out),\n /* This is used to mark options with no short value.  */\n #define LONG_OPT(Num)  ((Num) + 128)\n \n-#define OPT_classpath LONG_OPT (0)\n-#define OPT_CLASSPATH LONG_OPT (1)\n-#define OPT_HELP      LONG_OPT (2)\n-#define OPT_TEMP      LONG_OPT (3)\n-#define OPT_VERSION   LONG_OPT (4)\n-#define OPT_PREPEND   LONG_OPT (5)\n-#define OPT_FRIEND    LONG_OPT (6)\n-#define OPT_ADD       LONG_OPT (7)\n-#define OPT_APPEND    LONG_OPT (8)\n-#define OPT_M         LONG_OPT (9)\n-#define OPT_MM        LONG_OPT (10)\n-#define OPT_MG        LONG_OPT (11)\n-#define OPT_MD        LONG_OPT (12)\n-#define OPT_MMD       LONG_OPT (13)\n+#define OPT_classpath     LONG_OPT (0)\n+#define OPT_CLASSPATH     LONG_OPT (1)\n+#define OPT_HELP          LONG_OPT (2)\n+#define OPT_TEMP          LONG_OPT (3)\n+#define OPT_VERSION       LONG_OPT (4)\n+#define OPT_PREPEND       LONG_OPT (5)\n+#define OPT_FRIEND        LONG_OPT (6)\n+#define OPT_ADD           LONG_OPT (7)\n+#define OPT_APPEND        LONG_OPT (8)\n+#define OPT_M             LONG_OPT (9)\n+#define OPT_MM            LONG_OPT (10)\n+#define OPT_MG            LONG_OPT (11)\n+#define OPT_MD            LONG_OPT (12)\n+#define OPT_MMD           LONG_OPT (13)\n \n static const struct option options[] =\n {\n-  { \"classpath\", required_argument, NULL, OPT_classpath },\n-  { \"CLASSPATH\", required_argument, NULL, OPT_CLASSPATH },\n-  { \"help\",      no_argument,       NULL, OPT_HELP },\n-  { \"stubs\",     no_argument,       &stubs, 1 },\n-  { \"td\",        required_argument, NULL, OPT_TEMP },\n-  { \"verbose\",   no_argument,       NULL, 'v' },\n-  { \"version\",   no_argument,       NULL, OPT_VERSION },\n-  { \"prepend\",   required_argument, NULL, OPT_PREPEND },\n-  { \"friend\",    required_argument, NULL, OPT_FRIEND },\n-  { \"add\",       required_argument, NULL, OPT_ADD },\n-  { \"append\",    required_argument, NULL, OPT_APPEND },\n-  { \"M\",         no_argument,       NULL, OPT_M   },\n-  { \"MM\",        no_argument,       NULL, OPT_MM  },\n-  { \"MG\",        no_argument,       NULL, OPT_MG  },\n-  { \"MD\",        no_argument,       NULL, OPT_MD  },\n-  { \"MMD\",       no_argument,       NULL, OPT_MMD },\n-  { \"jni\",       no_argument,       &flag_jni, 1 },\n-  { NULL,        no_argument,       NULL, 0 }\n+  { \"classpath\",     required_argument, NULL, OPT_classpath },\n+  { \"CLASSPATH\",     required_argument, NULL, OPT_CLASSPATH },\n+  { \"help\",          no_argument,       NULL, OPT_HELP },\n+  { \"stubs\",         no_argument,       &stubs, 1 },\n+  { \"td\",            required_argument, NULL, OPT_TEMP },\n+  { \"verbose\",       no_argument,       NULL, 'v' },\n+  { \"version\",       no_argument,       NULL, OPT_VERSION },\n+  { \"prepend\",       required_argument, NULL, OPT_PREPEND },\n+  { \"friend\",        required_argument, NULL, OPT_FRIEND },\n+  { \"add\",           required_argument, NULL, OPT_ADD },\n+  { \"append\",        required_argument, NULL, OPT_APPEND },\n+  { \"M\",             no_argument,       NULL, OPT_M   },\n+  { \"MM\",            no_argument,       NULL, OPT_MM  },\n+  { \"MG\",            no_argument,       NULL, OPT_MG  },\n+  { \"MD\",            no_argument,       NULL, OPT_MD  },\n+  { \"MMD\",           no_argument,       NULL, OPT_MMD },\n+  { \"jni\",           no_argument,       &flag_jni, 1 },\n+  { NULL,            no_argument,       NULL, 0 }\n };\n \n static void\n@@ -2158,8 +2158,9 @@ help ()\n   printf (\"  -friend TEXT            Insert TEXT as `friend' declaration\\n\");\n   printf (\"  -prepend TEXT           Insert TEXT before start of class\\n\");\n   printf (\"\\n\");\n+  printf (\"  --CLASSPATH PATH        Set path to find .class files, overriding\\n\\\n+                          built-in class path\\n\");\n   printf (\"  --classpath PATH        Set path to find .class files\\n\");\n-  printf (\"  --CLASSPATH PATH        Set path to find .class files\\n\");\n   printf (\"  -IDIR                   Append directory to class path\\n\");\n   printf (\"  -d DIRECTORY            Set output directory name\\n\");\n   printf (\"  -o FILE                 Set output file name\\n\");"}, {"sha": "c845067e6869cca76c3df2e7af2a65ca552901ba", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=db444fbe8e0c175e38c49560c852181678c8ef1d", "patch": "@@ -773,22 +773,22 @@ DEFUN(process_class, (jcf),\n /* This is used to mark options with no short value.  */\n #define LONG_OPT(Num)  ((Num) + 128)\n \n-#define OPT_classpath LONG_OPT (0)\n-#define OPT_CLASSPATH LONG_OPT (1)\n-#define OPT_HELP      LONG_OPT (2)\n-#define OPT_VERSION   LONG_OPT (3)\n-#define OPT_JAVAP     LONG_OPT (4)\n+#define OPT_classpath     LONG_OPT (0)\n+#define OPT_CLASSPATH     LONG_OPT (1)\n+#define OPT_HELP          LONG_OPT (2)\n+#define OPT_VERSION       LONG_OPT (3)\n+#define OPT_JAVAP         LONG_OPT (4)\n \n static const struct option options[] =\n {\n-  { \"classpath\", required_argument, NULL, OPT_classpath },\n-  { \"CLASSPATH\", required_argument, NULL, OPT_CLASSPATH },\n-  { \"help\",      no_argument,       NULL, OPT_HELP },\n-  { \"verbose\",   no_argument,       NULL, 'v' },\n-  { \"version\",   no_argument,       NULL, OPT_VERSION },\n-  { \"javap\",     no_argument,       NULL, OPT_JAVAP },\n-  { \"print-main\", no_argument,      &flag_print_main, 1 },\n-  { NULL,        no_argument,       NULL, 0 }\n+  { \"classpath\",     required_argument, NULL, OPT_classpath },\n+  { \"CLASSPATH\",     required_argument, NULL, OPT_CLASSPATH },\n+  { \"help\",          no_argument,       NULL, OPT_HELP },\n+  { \"verbose\",       no_argument,       NULL, 'v' },\n+  { \"version\",       no_argument,       NULL, OPT_VERSION },\n+  { \"javap\",         no_argument,       NULL, OPT_JAVAP },\n+  { \"print-main\",    no_argument,      &flag_print_main, 1 },\n+  { NULL,            no_argument,       NULL, 0 }\n };\n \n static void\n@@ -806,8 +806,9 @@ help ()\n   printf (\"  -c                      Disassemble method bodies\\n\");\n   printf (\"  --javap                 Generate output in `javap' format\\n\");\n   printf (\"\\n\");\n+  printf (\"  --CLASSPATH PATH        Set path to find .class files, overriding\\n\\\n+                          built-in class path\\n\");\n   printf (\"  --classpath PATH        Set path to find .class files\\n\");\n-  printf (\"  --CLASSPATH PATH        Set path to find .class files\\n\");\n   printf (\"  -IDIR                   Append directory to class path\\n\");\n   printf (\"  -o FILE                 Set output file name\\n\");\n   printf (\"\\n\");"}, {"sha": "efdd84333026b82ee5723754f7539c1e878a2b76", "filename": "gcc/java/jcf-path.c", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Fjcf-path.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Fjcf-path.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-path.c?ref=db444fbe8e0c175e38c49560c852181678c8ef1d", "patch": "@@ -71,8 +71,8 @@ static void add_path PARAMS ((struct entry **, const char *, int));\n \n    built-in system directory (only libgcj.jar)\n    CLASSPATH environment variable\n-   -CLASSPATH overrides CLASSPATH\n-   -classpath option - overrides CLASSPATH, -CLASSPATH, and built-in\n+   -classpath option overrides $CLASSPATH\n+   -CLASSPATH option overrides $CLASSPATH, -classpath, and built-in\n    -I prepends path to list\n \n    We implement this by keeping several path lists, and then simply\n@@ -84,10 +84,10 @@ static struct entry *include_dirs;\n /* This holds the CLASSPATH environment variable.  */\n static struct entry *classpath_env;\n \n-/* This holds the -CLASSPATH command-line option.  */\n+/* This holds the -classpath command-line option.  */\n static struct entry *classpath_u;\n \n-/* This holds the -classpath command-line option.  */\n+/* This holds the -CLASSPATH command-line option.  */\n static struct entry *classpath_l;\n \n /* This holds the default directories.  Some of these will have the\n@@ -284,18 +284,23 @@ jcf_path_init ()\n   add_path (&classpath_env, cp, 0);\n }\n \n-/* Call this when -classpath is seen on the command line.  */\n+/* Call this when -CLASSPATH is seen on the command line.\n+   This is the override-all switch, even the built in classes\n+   are overridden.\n+ */\n void\n-jcf_path_classpath_arg (path)\n+jcf_path_CLASSPATH_arg (path)\n      const char *path;\n {\n   free_entry (&classpath_l);\n   add_path (&classpath_l, path, 0);\n }\n \n-/* Call this when -CLASSPATH is seen on the command line.  */\n+/* Call this when -classpath is seen on the command line.\n+   This overrides only the $CLASSPATH environment variable.\n+ */\n void\n-jcf_path_CLASSPATH_arg (path)\n+jcf_path_classpath_arg (path)\n      const char *path;\n {\n   free_entry (&classpath_u);"}, {"sha": "86a0c55ff29ab841441c6baa85edc41ec4c59d51", "filename": "gcc/java/jcf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Fjcf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Fjcf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf.h?ref=db444fbe8e0c175e38c49560c852181678c8ef1d", "patch": "@@ -271,8 +271,8 @@ extern void jcf_dependency_print_dummies PARAMS ((void));\n \n /* Declarations for path handling code.  */\n extern void jcf_path_init PARAMS ((void));\n-extern void jcf_path_classpath_arg PARAMS ((const char *));\n extern void jcf_path_CLASSPATH_arg PARAMS ((const char *));\n+extern void jcf_path_classpath_arg PARAMS ((const char *));\n extern void jcf_path_include_arg PARAMS ((const char *));\n extern void jcf_path_seal PARAMS ((int));\n extern void *jcf_path_start PARAMS ((void));"}, {"sha": "130060c59e4f2be7d4d6230579464e0c3f7c5825", "filename": "gcc/java/lang-options.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang-options.h?ref=db444fbe8e0c175e38c49560c852181678c8ef1d", "patch": "@@ -32,9 +32,9 @@ DEFINE_LANG_NAME (\"Java\")\n     N_(\"Disable automatic array bounds checking\") },\n   { \"-fjni\",\n     N_(\"Assume native functions are implemented using JNI\") },\n-  { \"--classpath\",\n-    N_(\"Set class path and suppress system path\") },\n   { \"--CLASSPATH\",\n+    N_(\"Set class path and suppress system path\") },\n+  { \"--classpath\",\n     N_(\"Set class path\") },\n   { \"--main\",\n     N_(\"Choose class whose main method should be used\") },"}, {"sha": "152039021668a9753ce632c65afa8e24cfa4faaf", "filename": "gcc/java/lang.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db444fbe8e0c175e38c49560c852181678c8ef1d/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=db444fbe8e0c175e38c49560c852181678c8ef1d", "patch": "@@ -299,17 +299,17 @@ java_decode_option (argc, argv)\n       return 1;\n     }\n #undef CLARG\n-#define CLARG \"-fclasspath=\"\n+#define CLARG \"-fCLASSPATH=\"\n   if (strncmp (p, CLARG, sizeof (CLARG) - 1) == 0)\n     {\n-      jcf_path_classpath_arg (p + sizeof (CLARG) - 1);\n+      jcf_path_CLASSPATH_arg (p + sizeof (CLARG) - 1);\n       return 1;\n     }\n #undef CLARG\n-#define CLARG \"-fCLASSPATH=\"\n+#define CLARG \"-fclasspath=\"\n   if (strncmp (p, CLARG, sizeof (CLARG) - 1) == 0)\n     {\n-      jcf_path_CLASSPATH_arg (p + sizeof (CLARG) - 1);\n+      jcf_path_classpath_arg (p + sizeof (CLARG) - 1);\n       return 1;\n     }\n #undef CLARG"}]}