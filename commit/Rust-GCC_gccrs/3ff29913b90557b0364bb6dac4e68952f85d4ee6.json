{"sha": "3ff29913b90557b0364bb6dac4e68952f85d4ee6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZmMjk5MTNiOTA1NTdiMDM2NGJiNmRhYzRlNjg5NTJmODVkNGVlNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-02-04T22:59:30Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-02-04T22:59:30Z"}, "message": "re PR middle-end/64922 (runtime error: member call on misaligned address for type 'struct _Rep')\n\n\tPR middle-end/64922\n\t* ipa-prop.c (update_indirect_edges_after_inlining): Correctly update\n\tedges that become speculative.\n\nFrom-SVN: r220423", "tree": {"sha": "25a504aefa93ead895d359580afcf291fb1c1d5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25a504aefa93ead895d359580afcf291fb1c1d5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ff29913b90557b0364bb6dac4e68952f85d4ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff29913b90557b0364bb6dac4e68952f85d4ee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ff29913b90557b0364bb6dac4e68952f85d4ee6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff29913b90557b0364bb6dac4e68952f85d4ee6/comments", "author": null, "committer": null, "parents": [{"sha": "de3aebffe98c425f6368c44d32e72450139176fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de3aebffe98c425f6368c44d32e72450139176fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de3aebffe98c425f6368c44d32e72450139176fa"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "ef35c40cf8e7f62db3bcf1afab11c826ed52693d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff29913b90557b0364bb6dac4e68952f85d4ee6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff29913b90557b0364bb6dac4e68952f85d4ee6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ff29913b90557b0364bb6dac4e68952f85d4ee6", "patch": "@@ -1,3 +1,9 @@\n+2015-02-04  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR middle-end/64922\n+\t* ipa-prop.c (update_indirect_edges_after_inlining): Correctly update\n+\tedges that become speculative.\n+\n 2015-02-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (is_fortran): Also return true for DW_LANG_Fortran03"}, {"sha": "5f8e461d88fcfee5ea0d9cdc20234b54e59bebe8", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff29913b90557b0364bb6dac4e68952f85d4ee6/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff29913b90557b0364bb6dac4e68952f85d4ee6/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=3ff29913b90557b0364bb6dac4e68952f85d4ee6", "patch": "@@ -3075,6 +3075,7 @@ update_indirect_edges_after_inlining (struct cgraph_edge *cs,\n       struct cgraph_indirect_call_info *ici = ie->indirect_info;\n       struct ipa_jump_func *jfunc;\n       int param_index;\n+      cgraph_node *spec_target = NULL;\n \n       next_ie = ie->next_callee;\n \n@@ -3091,6 +3092,14 @@ update_indirect_edges_after_inlining (struct cgraph_edge *cs,\n       param_index = ici->param_index;\n       jfunc = ipa_get_ith_jump_func (top, param_index);\n \n+      if (ie->speculative)\n+\t{\n+\t  struct cgraph_edge *de;\n+          struct ipa_ref *ref;\n+\t  ie->speculative_call_info (de, ie, ref);\n+\t  spec_target = de->callee;\n+\t}\n+\n       if (!opt_for_fn (node->decl, flag_indirect_inlining))\n \tnew_direct_edge = NULL;\n       else if (ici->polymorphic)\n@@ -3103,11 +3112,13 @@ update_indirect_edges_after_inlining (struct cgraph_edge *cs,\n \tnew_direct_edge = try_make_edge_direct_simple_call (ie, jfunc,\n \t\t\t\t\t\t\t    new_root_info);\n       /* If speculation was removed, then we need to do nothing.  */\n-      if (new_direct_edge && new_direct_edge != ie)\n+      if (new_direct_edge && new_direct_edge != ie\n+\t  && new_direct_edge->callee == spec_target)\n \t{\n \t  new_direct_edge->indirect_inlining_edge = 1;\n \t  top = IPA_EDGE_REF (cs);\n \t  res = true;\n+\t  continue;\n \t}\n       else if (new_direct_edge)\n \t{\n@@ -3123,9 +3134,13 @@ update_indirect_edges_after_inlining (struct cgraph_edge *cs,\n \t      res = true;\n \t    }\n \t  top = IPA_EDGE_REF (cs);\n+\t  /* If speculative edge was introduced we still need to update\n+\t     call info of the indirect edge.  */\n+\t  if (!new_direct_edge->speculative)\n+\t    continue;\n \t}\n-      else if (jfunc->type == IPA_JF_PASS_THROUGH\n-\t       && ipa_get_jf_pass_through_operation (jfunc) == NOP_EXPR)\n+      if (jfunc->type == IPA_JF_PASS_THROUGH\n+          && ipa_get_jf_pass_through_operation (jfunc) == NOP_EXPR)\n \t{\n \t  if ((ici->agg_contents\n \t       && !ipa_get_jf_pass_through_agg_preserved (jfunc))"}]}