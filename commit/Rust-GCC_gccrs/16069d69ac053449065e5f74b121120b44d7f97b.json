{"sha": "16069d69ac053449065e5f74b121120b44d7f97b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYwNjlkNjlhYzA1MzQ0OTA2NWU1Zjc0YjEyMTEyMGI0NGQ3Zjk3Yg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2002-05-28T20:19:15Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-05-28T20:19:15Z"}, "message": "milli32.S, [...]: Delete unused files.\n\n\t* config/pa/milli32.S, config/pa/lib1funcs.asm,\n\tconfig/sparc/sol2-g1.asm: Delete unused files.\n\nFrom-SVN: r53964", "tree": {"sha": "9eef3dbe803253ede3d0f4d144b0c74964db07c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9eef3dbe803253ede3d0f4d144b0c74964db07c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16069d69ac053449065e5f74b121120b44d7f97b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16069d69ac053449065e5f74b121120b44d7f97b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16069d69ac053449065e5f74b121120b44d7f97b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16069d69ac053449065e5f74b121120b44d7f97b/comments", "author": null, "committer": null, "parents": [{"sha": "923c7cdfa776a4ebc6ff759d2a775ebb81cb8ac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/923c7cdfa776a4ebc6ff759d2a775ebb81cb8ac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/923c7cdfa776a4ebc6ff759d2a775ebb81cb8ac5"}], "stats": {"total": 2374, "additions": 5, "deletions": 2369}, "files": [{"sha": "356c1b6b7a4ce82c8b31f3a425455ad5ccf76e8b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16069d69ac053449065e5f74b121120b44d7f97b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16069d69ac053449065e5f74b121120b44d7f97b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16069d69ac053449065e5f74b121120b44d7f97b", "patch": "@@ -1,3 +1,8 @@\n+2002-05-28  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* config/pa/milli32.S, config/pa/lib1funcs.asm,\n+\tconfig/sparc/sol2-g1.asm: Delete unused files.\n+\n 2002-05-28  Richard Henderson  <rth@redhat.com>\n \n \t* cfg.c (dump_flow_info): Print bb->index, not i, for block number."}, {"sha": "e1d5b4eff83e506244f5637f59238e00c113656e", "filename": "gcc/config/pa/lib1funcs.asm", "status": "removed", "additions": 0, "deletions": 1147, "changes": 1147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923c7cdfa776a4ebc6ff759d2a775ebb81cb8ac5/gcc%2Fconfig%2Fpa%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923c7cdfa776a4ebc6ff759d2a775ebb81cb8ac5/gcc%2Fconfig%2Fpa%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Flib1funcs.asm?ref=923c7cdfa776a4ebc6ff759d2a775ebb81cb8ac5", "patch": "@@ -1,1147 +0,0 @@\n-;  Low level integer divide, multiply, remainder, etc routines for the HPPA.\n-;  Copyright (C) 1995 Free Software Foundation, Inc.\n-\n-;  This file is part of GNU CC.\n-\n-;  GNU CC is free software; you can redistribute it and/or modify\n-;  it under the terms of the GNU General Public License as published by\n-;  the Free Software Foundation; either version 2, or (at your option)\n-;  any later version.\n-\n-;  In addition to the permissions in the GNU General Public License, the\n-;  Free Software Foundation gives you unlimited permission to link the\n-;  compiled version of this file into combinations with other programs,\n-;  and to distribute those combinations without any restriction coming\n-;  from the use of this file.  (The General Public License restrictions\n-;  do apply in other respects; for example, they cover modification of\n-;  the file, and distribution when not linked into a combine\n-;  executable.)\n-\n-;  GNU CC is distributed in the hope that it will be useful,\n-;  but WITHOUT ANY WARRANTY; without even the implied warranty of\n-;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-;  GNU General Public License for more details.\n-\n-;  You should have received a copy of the GNU General Public License\n-;  along with GNU CC; see the file COPYING.  If not, write to\n-;  the Free Software Foundation, 59 Temple Place - Suite 330,\n-;  Boston, MA 02111-1307, USA.\n-\n-#ifdef L_dyncall\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.export\t$$dyncall\n-$$dyncall\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tbb,>=,n\t%r22,30,L$1\t\t; branch if not plabel address\n-\tdepi\t0,31,2,%r22\t\t; clear the two least significant bits\n-\tldw\t4(%sr0,%r22),%r19\t; load new LTP value\n-\tldw\t0(%sr0,%r22),%r22\t; load address of target\n-L$1\tldsid\t(%sr0,%r22),%r1\t\t; get the \"space ident\" selected by r22\n-\tmtsp\t%r1,%sr0\t\t; move that space identifier into sr0\n-\tbe\t0(%sr0,%r22)\t\t; branch to the real target\n-\tstw\t%r2,-24(%sr0,%r30)\t; save return address into frame marker\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#ifdef L_multiply\n-#define\top0\t%r26\n-#define\top1\t%r25\n-#define res\t%r29\n-#define ret\t%r31\n-#define tmp\t%r1\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align 4\n-\t.export\t$$mulU\n-\t.export\t$$mulI\n-$$mulU\n-$$mulI\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\taddi,tr\t\t0,%r0,res\t; clear out res, skip next insn\n-L$loop\tzdep\t\top1,26,27,op1\t; shift up op1 by 5\n-L$lo\tzdep\t\top0,30,5,tmp\t; extract next 5 bits and shift up\n-\tblr\t\ttmp,%r0\n-\textru\t\top0,26,27,op0\t; shift down op0 by 5\n-L$0\tcomib,<>\t0,op0,L$lo\n-\tzdep\t\top1,26,27,op1\t; shift up op1 by 5\n-\tbv\t\t%r0(ret)\n-\tnop\n-L$1\tb\t\tL$loop\n-\taddl\t\top1,res,res\n-\tnop\n-\tnop\n-L$2\tb\t\tL$loop\n-\tsh1addl\t\top1,res,res\n-\tnop\n-\tnop\n-L$3\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-\tnop\n-L$4\tb\t\tL$loop\n-\tsh2addl\t\top1,res,res\n-\tnop\n-\tnop\n-L$5\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-\tnop\n-L$6\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tb\t\tL$loop\n-\tsh1addl\t\ttmp,res,res\n-\tnop\n-L$7\tzdep\t\top1,28,29,tmp\t; 8x\n-\tsub\t\ttmp,op1,tmp\t; 7x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-L$8\tb\t\tL$loop\n-\tsh3addl\t\top1,res,res\n-\tnop\n-\tnop\n-L$9\tsh3addl\t\top1,op1,tmp\t; 9x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-\tnop\n-L$10\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tb\t\tL$loop\n-\tsh1addl\t\ttmp,res,res\n-\tnop\n-L$11\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tsh1addl\t\ttmp,op1,tmp\t; 11x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-L$12\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tb\t\tL$loop\n-\tsh2addl\t\ttmp,res,res\n-\tnop\n-L$13\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tsh2addl\t\ttmp,op1,tmp\t; 13x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-L$14\tzdep\t\top1,28,29,tmp\t; 8x\n-\tsub\t\ttmp,op1,tmp\t; 7x\n-\tb\t\tL$loop\n-\tsh1addl\t\ttmp,res,res\n-L$15\tzdep\t\top1,27,28,tmp\t; 16x\n-\tsub\t\ttmp,op1,tmp\t; 15x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-L$16\tzdep\t\top1,27,28,tmp\t; 16x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-\tnop\n-L$17\tzdep\t\top1,27,28,tmp\t; 16x\n-\taddl\t\ttmp,op1,tmp\t; 17x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-L$18\tsh3addl\t\top1,op1,tmp\t; 9x\n-\tb\t\tL$loop\n-\tsh1addl\t\ttmp,res,res\n-\tnop\n-L$19\tsh3addl\t\top1,op1,tmp\t; 9x\n-\tsh1addl\t\ttmp,op1,tmp\t; 19x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-L$20\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tb\t\tL$loop\n-\tsh2addl\t\ttmp,res,res\n-\tnop\n-L$21\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tsh2addl\t\ttmp,op1,tmp\t; 21x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-L$22\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tsh1addl\t\ttmp,op1,tmp\t; 11x\n-\tb\t\tL$loop\n-\tsh1addl\t\ttmp,res,res\n-L$23\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tsh3addl\t\ttmp,res,res\t; += 8x3\n-\tb\t\tL$loop\n-\tsub\t\tres,op1,res\t; -= x\n-L$24\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tb\t\tL$loop\n-\tsh3addl\t\ttmp,res,res\t; += 8x3\n-\tnop\n-L$25\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tsh2addl\t\ttmp,tmp,tmp\t; 25x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-L$26\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tsh2addl\t\ttmp,op1,tmp\t; 13x\n-\tb\t\tL$loop\n-\tsh1addl\t\ttmp,res,res\t; += 2x13\n-L$27\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tsh3addl\t\ttmp,tmp,tmp\t; 27x\n-\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-L$28\tzdep\t\top1,28,29,tmp\t; 8x\n-\tsub\t\ttmp,op1,tmp\t; 7x\n-\tb\t\tL$loop\n-\tsh2addl\t\ttmp,res,res\t; += 4x7\n-L$29\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tsub\t\tres,tmp,res\t; -= 3x\n-\tb\t\tL$foo\n-\tzdep\t\top1,26,27,tmp\t; 32x\n-L$30\tzdep\t\top1,27,28,tmp\t; 16x\n-\tsub\t\ttmp,op1,tmp\t; 15x\n-\tb\t\tL$loop\n-\tsh1addl\t\ttmp,res,res\t; += 2x15\n-L$31\tzdep\t\top1,26,27,tmp\t; 32x\n-\tsub\t\ttmp,op1,tmp\t; 31x\n-L$foo\tb\t\tL$loop\n-\taddl\t\ttmp,res,res\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#ifdef L_divU\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define quotient %r29\n-#define ret %r31\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align 4\n-\t.export\t$$divU\n-$$divU\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tcomb,<\t\tdivisor,0,L$largedivisor\n-\t sub\t\t%r0,divisor,%r1\t\t; clear cy as side-effect\n-\tds\t\t%r0,%r1,%r0\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r0,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,quotient\n-\tds\t\t%r1,divisor,%r1\n-\tbv\t\t%r0(ret)\n-\taddc\t\tquotient,quotient,quotient\n-L$largedivisor\n-\tcomclr,<<\tdividend,divisor,quotient\n-\tldi\t\t1,quotient\n-\tbv,n\t\t%r0(ret)\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#ifdef L_remU\n-#define dividend %r26\n-#define divisor %r25\n-#define quotient %r29\n-#define tmp %r1\n-#define ret %r31\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align 4\n-\t.export\t$$remU\n-$$remU\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tcomb,<\t\tdivisor,0,L$largedivisor\n-\t sub\t\t%r0,divisor,%r1\t\t; clear cy as side-effect\n-\tds\t\t%r0,%r1,%r0\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r0,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,quotient\n-\tds\t\t%r1,divisor,%r1\n-\tcomclr,>=\t%r1,%r0,%r0\n-\taddl\t\t%r1,divisor,%r1\n-\tbv\t\t%r0(ret)\n-\tcopy\t\t%r1,quotient\n-L$largedivisor\n-\tsub,>>=\t\tdividend,divisor,quotient\n-\tcopy\t\tdividend,quotient\n-\tbv,n\t\t%r0(ret)\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#ifdef L_divI\n-#define dividend %r26\n-#define divisor %r25\n-#define quotient %r29\n-#define tmp %r1\n-#define ret %r31\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align 4\n-\t.export\t$$divI\n-$$divI\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\txor\t\tdividend,divisor,quotient\t; result sign\n-\tcomclr,>=\tdivisor,%r0,%r0\t\t\t; get absolute values\n-\tsub\t\t%r0,divisor,divisor\n-\tcomclr,>=\tdividend,%r0,%r0\n-\tsub\t\t%r0,dividend,dividend\n-\n-\tcomb,<\t\tdivisor,0,L$largedivisor\n-\t sub\t\t%r0,divisor,%r1\t\t; clear cy as side-effect\n-\tds\t\t%r0,%r1,%r0\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r0,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tcomclr,>=\t%r1,%r0,%r0\n-\taddl\t\t%r1,divisor,%r1\n-\tcomclr,>=\tquotient,%r0,%r0\t; skip of no need to negate\n-\tsub\t\t%r0,dividend,dividend\n-\tbv\t\t%r0(ret)\n-\tcopy\t\tdividend,quotient\n-L$largedivisor\n-\tcomclr,<<\tdividend,divisor,quotient\n-\tldi\t\t1,quotient\n-\tbv,n\t\t%r0(ret)\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#ifdef L_remI\n-#define dividend %r26\n-#define divisor %r25\n-#define quotient %r29\n-#define tmp %r1\n-#define ret %r31\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align 4\n-\t.export\t$$remI\n-$$remI\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\txor\t\tdividend,%r0,quotient\t\t; result sign\n-\tcomclr,>=\tdivisor,%r0,%r0\t\t\t; get absolute values\n-\tsub\t\t%r0,divisor,divisor\n-\tcomclr,>=\tdividend,%r0,%r0\n-\tsub\t\t%r0,dividend,dividend\n-\n-\tcomb,<\t\tdivisor,0,L$largedivisor\n-\t sub\t\t%r0,divisor,%r1\t\t; clear cy as side-effect\n-\tds\t\t%r0,%r1,%r0\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r0,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tcomclr,>=\t%r1,%r0,%r0\n-\taddl\t\t%r1,divisor,%r1\n-\tcomclr,>=\tquotient,%r0,%r0\t; skip of no need to negate\n-\tsub\t\t%r0,%r1,%r1\n-\tbv\t\t%r0(ret)\n-\tcopy\t\t%r1,quotient\n-L$largedivisor\n-\tsub,>>=\t\tdividend,divisor,quotient\n-\tcopy\t\tdividend,quotient\n-\tbv,n\t\t%r0(ret)\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#if defined (L_divU_3) && !defined (SMALL_LIB)\n-#undef L_divU_3\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define result %r29\n-#define ret %r31\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align 4\n-\t.export\t$$divU_3\n-$$divU_3\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tsh2add\t%r26,%r26,%r29\t\t; r29 = lo(101 x r)\n-\tshd\t%r0,%r26,30,%r1\t\t;  r1 = hi(100 x r)\n-\taddc\t%r1,%r0,%r1\t\t;  r1 = hi(101 x r)\n-; r in r1,,r29\n-\tzdep\t%r29,27,28,%r25\t\t; r25 = lo(10000 x r)\n-\tadd\t%r25,%r29,%r25\t\t; r25 = lo(10001 x r)\n-\tshd\t%r1,%r29,28,%r29\t; r29 = hi(10000 x r)\n-\taddc\t%r29,%r1,%r29\t\t; r29 = hi(10001 x r)\n-; r in r29,,r25\n-\tzdep\t%r25,23,24,%r1\t\t;  r1 = lo(100000000 x r)\n-\tadd\t%r1,%r25,%r1\t\t;  r1 = lo(100000001 x r)\n-\tshd\t%r29,%r25,24,%r25\t; r25 = hi(100000000 x r)\n-\taddc\t%r25,%r29,%r25\t\t; r25 = hi(100000001 x r)\n-; r in r25,,r1\n-\tzdep\t%r1,15,16,%r29\n-\tadd\t%r29,%r1,%r29\n-\tshd\t%r25,%r1,16,%r1\n-\taddc\t%r1,%r25,%r1\n-; r in r1,,r29\n-\tsh1add\t%r29,%r26,%r0\t\t;  r0 = lo(10 x r) + dividend\n-\tshd\t%r1,%r29,31,%r29\t; r29 = hi(10 x r)\n-\taddc\t%r29,%r0,%r29\n-\tbv\t%r0(ret)\n-\textru\t%r29,30,31,result\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#if defined (L_divU_5) && !defined (SMALL_LIB)\n-#undef L_divU_5\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define result %r29\n-#define ret %r31\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align 4\n-\t.export\t$$divU_5\n-$$divU_5\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tsh1add\t%r26,%r26,%r29\t\t; r29 = lo(11 x r)\n-\tshd\t%r0,%r26,31,%r1\t\t;  r1 = hi(10 x r)\n-\taddc\t%r1,%r0,%r1\t\t;  r1 = hi(11 x r)\n-; r in r1,,r29\n-\tzdep\t%r29,27,28,%r25\t\t; r25 = lo(10000 x r)\n-\tadd\t%r25,%r29,%r25\t\t; r25 = lo(10001 x r)\n-\tshd\t%r1,%r29,28,%r29\t; r29 = hi(10000 x r)\n-\taddc\t%r29,%r1,%r29\t\t; r29 = hi(10001 x r)\n-; r in r29,,r25\n-\tzdep\t%r25,23,24,%r1\t\t;  r1 = lo(100000000 x r)\n-\tadd\t%r1,%r25,%r1\t\t;  r1 = lo(100000001 x r)\n-\tshd\t%r29,%r25,24,%r25\t; r25 = hi(100000000 x r)\n-\taddc\t%r25,%r29,%r25\t\t; r25 = hi(100000001 x r)\n-; r in r25,,r1\n-\tzdep\t%r1,15,16,%r29\n-\tadd\t%r29,%r1,%r29\n-\tshd\t%r25,%r1,16,%r1\n-\taddc\t%r1,%r25,%r1\n-; r in r1,,r29\n-\tsh2add\t%r29,%r26,%r0\t\t;  r0 = lo(1000 x r) + dividend\n-\tshd\t%r1,%r29,30,%r29\t; r29 = hi(1000 x r)\n-\taddc\t%r29,%r0,%r29\n-\tbv\t%r0(ret)\n-\textru\t%r29,29,30,result\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#if defined (L_divU_6) && !defined (SMALL_LIB)\n-#undef L_divU_6\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define result %r29\n-#define ret %r31\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align 4\n-\t.export\t$$divU_6\n-$$divU_6\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tsh2add\t%r26,%r26,%r29\t\t; r29 = lo(101 x r)\n-\tshd\t%r0,%r26,30,%r1\t\t;  r1 = hi(100 x r)\n-\taddc\t%r1,%r0,%r1\t\t;  r1 = hi(101 x r)\n-; r in r1,,r29\n-\tzdep\t%r29,27,28,%r25\t\t; r25 = lo(10000 x r)\n-\tadd\t%r25,%r29,%r25\t\t; r25 = lo(10001 x r)\n-\tshd\t%r1,%r29,28,%r29\t; r29 = hi(10000 x r)\n-\taddc\t%r29,%r1,%r29\t\t; r29 = hi(10001 x r)\n-; r in r29,,r25\n-\tzdep\t%r25,23,24,%r1\t\t;  r1 = lo(100000000 x r)\n-\tadd\t%r1,%r25,%r1\t\t;  r1 = lo(100000001 x r)\n-\tshd\t%r29,%r25,24,%r25\t; r25 = hi(100000000 x r)\n-\taddc\t%r25,%r29,%r25\t\t; r25 = hi(100000001 x r)\n-; r in r25,,r1\n-\tzdep\t%r1,15,16,%r29\n-\tadd\t%r29,%r1,%r29\n-\tshd\t%r25,%r1,16,%r1\n-\taddc\t%r1,%r25,%r1\n-; r in r1,,r29\n-\tsh1add\t%r29,%r26,%r0\t\t;  r0 = lo(10 x r) + dividend\n-\tshd\t%r1,%r29,31,%r29\t; r29 = hi(10 x r)\n-\taddc\t%r29,%r0,%r29\n-\tbv\t%r0(ret)\n-\textru\t%r29,29,30,result\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#if defined (L_divU_9) && !defined (SMALL_LIB)\n-#undef L_divU_9\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define result %r29\n-#define ret %r31\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align 4\n-\t.export\t$$divU_9\n-$$divU_9\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tzdep\t%r26,28,29,%r29\n-\tsub\t%r29,%r26,%r29\n-\tshd\t0,%r26,29,%r1\n-\tsubb\t%r1,0,%r1\t\t/* 111 */\n-\n-\tzdep\t%r29,25,26,%r25\n-\tadd\t%r25,%r29,%r25\n-\tshd\t%r1,%r29,26,%r29\n-\taddc\t%r29,%r1,%r29\t\t/* 111000111 */\n-\n-\tsh3add\t%r25,%r26,%r1\n-\tshd\t%r29,%r25,29,%r25\n-\taddc\t%r25,0,%r25\t\t/* 111000111001 */\n-\n-\tzdep\t%r1,16,17,%r29\n-\tsub\t%r29,%r1,%r29\n-\tshd\t%r25,%r1,17,%r1\n-\tsubb\t%r1,%r25,%r1\t\t/* 111000111000111000111000111 */\n-\n-\tsh3add\t%r29,%r26,%r0\n-\tshd\t%r1,%r29,29,%r29\n-\taddc\t%r29,0,%r29\t\t/* 111000111000111000111000111001 */\n-\tbv\t%r0(ret)\n-\textru\t%r29,30,31,result\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#if defined (L_divU_10) && !defined (SMALL_LIB)\n-#undef L_divU_10\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define result %r29\n-#define ret %r31\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align 4\n-\t.export\t$$divU_10\n-$$divU_10\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tsh1add\t%r26,%r26,%r29\t\t; r29 = lo(11 x r)\n-\tshd\t%r0,%r26,31,%r1\t\t;  r1 = hi(10 x r)\n-\taddc\t%r1,%r0,%r1\t\t;  r1 = hi(11 x r)\n-; r in r1,,r29\n-\tzdep\t%r29,27,28,%r25\t\t; r25 = lo(10000 x r)\n-\tadd\t%r25,%r29,%r25\t\t; r25 = lo(10001 x r)\n-\tshd\t%r1,%r29,28,%r29\t; r29 = hi(10000 x r)\n-\taddc\t%r29,%r1,%r29\t\t; r29 = hi(10001 x r)\n-; r in r29,,r25\n-\tzdep\t%r25,23,24,%r1\t\t;  r1 = lo(100000000 x r)\n-\tadd\t%r1,%r25,%r1\t\t;  r1 = lo(100000001 x r)\n-\tshd\t%r29,%r25,24,%r25\t; r25 = hi(100000000 x r)\n-\taddc\t%r25,%r29,%r25\t\t; r25 = hi(100000001 x r)\n-; r in r25,,r1\n-\tzdep\t%r1,15,16,%r29\n-\tadd\t%r29,%r1,%r29\n-\tshd\t%r25,%r1,16,%r1\n-\taddc\t%r1,%r25,%r1\n-; r in r1,,r29\n-\tsh2add\t%r29,%r26,%r0\t\t;  r0 = lo(1000 x r) + dividend\n-\tshd\t%r1,%r29,30,%r29\t; r29 = hi(1000 x r)\n-\taddc\t%r29,%r0,%r29\n-\tbv\t%r0(ret)\n-\textru\t%r29,28,29,result\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#if defined (L_divU_12) && !defined (SMALL_LIB)\n-#undef L_divU_12\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define result %r29\n-#define ret %r31\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align 4\n-\t.export\t$$divU_12\n-$$divU_12\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tsh2add\t%r26,%r26,%r29\t\t; r29 = lo(101 x r)\n-\tshd\t%r0,%r26,30,%r1\t\t;  r1 = hi(100 x r)\n-\taddc\t%r1,%r0,%r1\t\t;  r1 = hi(101 x r)\n-; r in r1,,r29\n-\tzdep\t%r29,27,28,%r25\t\t; r25 = lo(10000 x r)\n-\tadd\t%r25,%r29,%r25\t\t; r25 = lo(10001 x r)\n-\tshd\t%r1,%r29,28,%r29\t; r29 = hi(10000 x r)\n-\taddc\t%r29,%r1,%r29\t\t; r29 = hi(10001 x r)\n-; r in r29,,r25\n-\tzdep\t%r25,23,24,%r1\t\t;  r1 = lo(100000000 x r)\n-\tadd\t%r1,%r25,%r1\t\t;  r1 = lo(100000001 x r)\n-\tshd\t%r29,%r25,24,%r25\t; r25 = hi(100000000 x r)\n-\taddc\t%r25,%r29,%r25\t\t; r25 = hi(100000001 x r)\n-; r in r25,,r1\n-\tzdep\t%r1,15,16,%r29\n-\tadd\t%r29,%r1,%r29\n-\tshd\t%r25,%r1,16,%r1\n-\taddc\t%r1,%r25,%r1\n-; r in r1,,r29\n-\tsh1add\t%r29,%r26,%r0\t\t;  r0 = lo(10 x r) + dividend\n-\tshd\t%r1,%r29,31,%r29\t; r29 = hi(10 x r)\n-\taddc\t%r29,%r0,%r29\n-\tbv\t%r0(ret)\n-\textru\t%r29,28,29,result\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#ifdef L_divU_3\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divU_3\n-$$divU_3\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t3,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_5\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divU_5\n-$$divU_5\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t5,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_6\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divU_6\n-$$divU_6\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t6,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_7\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divU_7\n-$$divU_7\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t7,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_9\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divU_9\n-$$divU_9\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t9,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_10\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divU_10\n-$$divU_10\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t10,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_12\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divU_12\n-$$divU_12\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t12,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_14\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divU_14\n-$$divU_14\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t14,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_15\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divU_15\n-$$divU_15\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t15,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divI_3\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divI_3\n-$$divI_3\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t3,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_5\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divI_5\n-$$divI_5\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t5,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_6\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divI_6\n-$$divI_6\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t6,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_7\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divI_7\n-$$divI_7\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t7,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_9\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divI_9\n-$$divI_9\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t9,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_10\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divI_10\n-$$divI_10\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t10,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_12\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divI_12\n-$$divI_12\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t12,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_14\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divI_14\n-$$divI_14\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t14,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_15\n-\t.space\t$TEXT$\n-\t.subspa\t$MILLICODE$,quad=0,align=8,access=0x2c,sort=8\n-\t.align\t4\n-\t.export\t$$divI_15\n-$$divI_15\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t15,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif"}, {"sha": "726869a8ab1d92a618fe7611e49283518c100c61", "filename": "gcc/config/pa/milli32.S", "status": "removed", "additions": 0, "deletions": 1134, "changes": 1134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923c7cdfa776a4ebc6ff759d2a775ebb81cb8ac5/gcc%2Fconfig%2Fpa%2Fmilli32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923c7cdfa776a4ebc6ff759d2a775ebb81cb8ac5/gcc%2Fconfig%2Fpa%2Fmilli32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fmilli32.S?ref=923c7cdfa776a4ebc6ff759d2a775ebb81cb8ac5", "patch": "@@ -1,1134 +0,0 @@\n-;  Low level integer divide, multiply, remainder, etc routines for the HPPA.\n-;  Copyright 1995, 2000, 2001 Free Software Foundation, Inc.\n-\n-;  This file is part of GNU CC.\n-\n-;  GNU CC is free software; you can redistribute it and/or modify\n-;  it under the terms of the GNU General Public License as published by\n-;  the Free Software Foundation; either version 2, or (at your option)\n-;  any later version.\n-\n-;  In addition to the permissions in the GNU General Public License, the\n-;  Free Software Foundation gives you unlimited permission to link the\n-;  compiled version of this file with other programs, and to distribute\n-;  those programs without any restriction coming from the use of this\n-;  file.  (The General Public License restrictions do apply in other\n-;  respects; for example, they cover modification of the file, and\n-;  distribution when not linked into another program.)\n-\n-;  GNU CC is distributed in the hope that it will be useful,\n-;  but WITHOUT ANY WARRANTY; without even the implied warranty of\n-;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-;  GNU General Public License for more details.\n-\n-;  You should have received a copy of the GNU General Public License\n-;  along with GNU CC; see the file COPYING.  If not, write to\n-;  the Free Software Foundation, 59 Temple Place - Suite 330,\n-;  Boston, MA 02111-1307, USA.\n-\n-#ifdef __STDC__\n-#define CAT(a,b)\ta##b\n-#else\n-#define CAT(a,b)\ta/**/b\n-#endif\n-\n-#ifdef ELF\n-\n-#define SPACE \\\n-! .text! .align 4\n-#define GSYM(sym) \\\n-! .export sym,millicode!sym:\n-#define LSYM(sym) \\\n-!CAT(.L,sym:)\n-#define LREF(sym) CAT(.L,sym)\n-\n-#else\n-\n-#define SPACE \\\n-! .space $TEXT$! .subspa $MILLICODE$,quad=0,align=8,access=0x2c,sort=8! .align 4\n-#define GSYM(sym) \\\n-! .export sym,millicode!sym\n-#define LSYM(sym) \\\n-!CAT(L$,sym)\n-#define LREF(sym) CAT(L$,sym)\n-#endif\n-\n-#ifdef L_dyncall\n-SPACE\n-GSYM($$dyncall)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tbb,>=,n\t%r22,30,LREF(1)\t\t; branch if not plabel address\n-\tdepi\t0,31,2,%r22\t\t; clear the two least significant bits\n-\tldw\t4(%r22),%r19\t\t; load new LTP value\n-\tldw\t0(%r22),%r22\t\t; load address of target\n-LSYM(1)\n-#ifdef LINUX\n-\tbv\t%r0(%r22)\t\t; branch to the real target\n-#else\n-\tldsid\t(%sr0,%r22),%r1\t\t; get the \"space ident\" selected by r22\n-\tmtsp\t%r1,%sr0\t\t; move that space identifier into sr0\n-\tbe\t0(%sr0,%r22)\t\t; branch to the real target\n-#endif\n-\tstw\t%r2,-24(%r30)\t\t; save return address into frame marker\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#ifdef L_multiply\n-#define\top0\t%r26\n-#define\top1\t%r25\n-#define res\t%r29\n-#define ret\t%r31\n-#define tmp\t%r1\n-\n-SPACE\n-GSYM($$mulU)\n-GSYM($$mulI)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\taddi,tr\t\t0,%r0,res\t; clear out res, skip next insn\n-LSYM(loop)\n-\tzdep\t\top1,26,27,op1\t; shift up op1 by 5\n-LSYM(lo)\n-\tzdep\t\top0,30,5,tmp\t; extract next 5 bits and shift up\n-\tblr\t\ttmp,%r0\n-\textru\t\top0,26,27,op0\t; shift down op0 by 5\n-LSYM(0)\n-\tcomib,<>\t0,op0,LREF(lo)\n-\tzdep\t\top1,26,27,op1\t; shift up op1 by 5\n-\tbv\t\t%r0(ret)\n-\tnop\n-LSYM(1)\n-\tb\t\tLREF(loop)\n-\taddl\t\top1,res,res\n-\tnop\n-\tnop\n-LSYM(2)\n-\tb\t\tLREF(loop)\n-\tsh1addl\t\top1,res,res\n-\tnop\n-\tnop\n-LSYM(3)\n-\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-\tnop\n-LSYM(4)\n-\tb\t\tLREF(loop)\n-\tsh2addl\t\top1,res,res\n-\tnop\n-\tnop\n-LSYM(5)\n-\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-\tnop\n-LSYM(6)\n-\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tb\t\tLREF(loop)\n-\tsh1addl\t\ttmp,res,res\n-\tnop\n-LSYM(7)\n-\tzdep\t\top1,28,29,tmp\t; 8x\n-\tsub\t\ttmp,op1,tmp\t; 7x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-LSYM(8)\n-\tb\t\tLREF(loop)\n-\tsh3addl\t\top1,res,res\n-\tnop\n-\tnop\n-LSYM(9)\n-\tsh3addl\t\top1,op1,tmp\t; 9x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-\tnop\n-LSYM(10)\n-\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tb\t\tLREF(loop)\n-\tsh1addl\t\ttmp,res,res\n-\tnop\n-LSYM(11)\n-\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tsh1addl\t\ttmp,op1,tmp\t; 11x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-LSYM(12)\n-\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tb\t\tLREF(loop)\n-\tsh2addl\t\ttmp,res,res\n-\tnop\n-LSYM(13)\n-\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tsh2addl\t\ttmp,op1,tmp\t; 13x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-LSYM(14)\n-\tzdep\t\top1,28,29,tmp\t; 8x\n-\tsub\t\ttmp,op1,tmp\t; 7x\n-\tb\t\tLREF(loop)\n-\tsh1addl\t\ttmp,res,res\n-LSYM(15)\n-\tzdep\t\top1,27,28,tmp\t; 16x\n-\tsub\t\ttmp,op1,tmp\t; 15x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-LSYM(16)\n-\tzdep\t\top1,27,28,tmp\t; 16x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-\tnop\n-LSYM(17)\n-\tzdep\t\top1,27,28,tmp\t; 16x\n-\taddl\t\ttmp,op1,tmp\t; 17x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-LSYM(18)\n-\tsh3addl\t\top1,op1,tmp\t; 9x\n-\tb\t\tLREF(loop)\n-\tsh1addl\t\ttmp,res,res\n-\tnop\n-LSYM(19)\n-\tsh3addl\t\top1,op1,tmp\t; 9x\n-\tsh1addl\t\ttmp,op1,tmp\t; 19x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-LSYM(20)\n-\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tb\t\tLREF(loop)\n-\tsh2addl\t\ttmp,res,res\n-\tnop\n-LSYM(21)\n-\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tsh2addl\t\ttmp,op1,tmp\t; 21x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-LSYM(22)\n-\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tsh1addl\t\ttmp,op1,tmp\t; 11x\n-\tb\t\tLREF(loop)\n-\tsh1addl\t\ttmp,res,res\n-LSYM(23)\n-\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tsh3addl\t\ttmp,res,res\t; += 8x3\n-\tb\t\tLREF(loop)\n-\tsub\t\tres,op1,res\t; -= x\n-LSYM(24)\n-\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tb\t\tLREF(loop)\n-\tsh3addl\t\ttmp,res,res\t; += 8x3\n-\tnop\n-LSYM(25)\n-\tsh2addl\t\top1,op1,tmp\t; 5x\n-\tsh2addl\t\ttmp,tmp,tmp\t; 25x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-LSYM(26)\n-\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tsh2addl\t\ttmp,op1,tmp\t; 13x\n-\tb\t\tLREF(loop)\n-\tsh1addl\t\ttmp,res,res\t; += 2x13\n-LSYM(27)\n-\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tsh3addl\t\ttmp,tmp,tmp\t; 27x\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-LSYM(28)\n-\tzdep\t\top1,28,29,tmp\t; 8x\n-\tsub\t\ttmp,op1,tmp\t; 7x\n-\tb\t\tLREF(loop)\n-\tsh2addl\t\ttmp,res,res\t; += 4x7\n-LSYM(29)\n-\tsh1addl\t\top1,op1,tmp\t; 3x\n-\tsub\t\tres,tmp,res\t; -= 3x\n-\tb\t\tLREF(foo)\n-\tzdep\t\top1,26,27,tmp\t; 32x\n-LSYM(30)\n-\tzdep\t\top1,27,28,tmp\t; 16x\n-\tsub\t\ttmp,op1,tmp\t; 15x\n-\tb\t\tLREF(loop)\n-\tsh1addl\t\ttmp,res,res\t; += 2x15\n-LSYM(31)\n-\tzdep\t\top1,26,27,tmp\t; 32x\n-\tsub\t\ttmp,op1,tmp\t; 31x\n-LSYM(foo)\n-\tb\t\tLREF(loop)\n-\taddl\t\ttmp,res,res\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#ifdef L_divU\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define quotient %r29\n-#define ret %r31\n-\n-SPACE\n-GSYM($$divU)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tcomb,<\t\tdivisor,0,LREF(largedivisor)\n-\t sub\t\t%r0,divisor,%r1\t\t; clear cy as side-effect\n-\tds\t\t%r0,%r1,%r0\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r0,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,quotient\n-\tds\t\t%r1,divisor,%r1\n-\tbv\t\t%r0(ret)\n-\taddc\t\tquotient,quotient,quotient\n-LSYM(largedivisor)\n-\tcomclr,<<\tdividend,divisor,quotient\n-\tldi\t\t1,quotient\n-\tbv,n\t\t%r0(ret)\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#ifdef L_remU\n-#define dividend %r26\n-#define divisor %r25\n-#define quotient %r29\n-#define tmp %r1\n-#define ret %r31\n-\n-SPACE\n-GSYM($$remU)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tcomb,<\t\tdivisor,0,LREF(largedivisor)\n-\t sub\t\t%r0,divisor,%r1\t\t; clear cy as side-effect\n-\tds\t\t%r0,%r1,%r0\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r0,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,quotient\n-\tds\t\t%r1,divisor,%r1\n-\tcomclr,>=\t%r1,%r0,%r0\n-\taddl\t\t%r1,divisor,%r1\n-\tbv\t\t%r0(ret)\n-\tcopy\t\t%r1,quotient\n-LSYM(largedivisor)\n-\tsub,>>=\t\tdividend,divisor,quotient\n-\tcopy\t\tdividend,quotient\n-\tbv,n\t\t%r0(ret)\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#ifdef L_divI\n-#define dividend %r26\n-#define divisor %r25\n-#define quotient %r29\n-#define tmp %r1\n-#define ret %r31\n-\n-SPACE\n-GSYM($$divI)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\txor\t\tdividend,divisor,quotient\t; result sign\n-\tcomclr,>=\tdivisor,%r0,%r0\t\t\t; get absolute values\n-\tsub\t\t%r0,divisor,divisor\n-\tcomclr,>=\tdividend,%r0,%r0\n-\tsub\t\t%r0,dividend,dividend\n-\n-\tcomb,<\t\tdivisor,0,LREF(largedivisor)\n-\t sub\t\t%r0,divisor,%r1\t\t; clear cy as side-effect\n-\tds\t\t%r0,%r1,%r0\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r0,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tcomclr,>=\t%r1,%r0,%r0\n-\taddl\t\t%r1,divisor,%r1\n-\tcomclr,>=\tquotient,%r0,%r0\t; skip of no need to negate\n-\tsub\t\t%r0,dividend,dividend\n-\tbv\t\t%r0(ret)\n-\tcopy\t\tdividend,quotient\n-LSYM(largedivisor)\n-\tcomclr,<<\tdividend,divisor,quotient\n-\tldi\t\t1,quotient\n-\tbv,n\t\t%r0(ret)\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#ifdef L_remI\n-#define dividend %r26\n-#define divisor %r25\n-#define quotient %r29\n-#define tmp %r1\n-#define ret %r31\n-\n-SPACE\n-GSYM($$remI)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\txor\t\tdividend,%r0,quotient\t\t; result sign\n-\tcomclr,>=\tdivisor,%r0,%r0\t\t\t; get absolute values\n-\tsub\t\t%r0,divisor,divisor\n-\tcomclr,>=\tdividend,%r0,%r0\n-\tsub\t\t%r0,dividend,dividend\n-\n-\tcomb,<\t\tdivisor,0,LREF(largedivisor)\n-\t sub\t\t%r0,divisor,%r1\t\t; clear cy as side-effect\n-\tds\t\t%r0,%r1,%r0\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r0,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tds\t\t%r1,divisor,%r1\n-\taddc\t\tdividend,dividend,dividend\n-\tcomclr,>=\t%r1,%r0,%r0\n-\taddl\t\t%r1,divisor,%r1\n-\tcomclr,>=\tquotient,%r0,%r0\t; skip of no need to negate\n-\tsub\t\t%r0,%r1,%r1\n-\tbv\t\t%r0(ret)\n-\tcopy\t\t%r1,quotient\n-LSYM(largedivisor)\n-\tsub,>>=\t\tdividend,divisor,quotient\n-\tcopy\t\tdividend,quotient\n-\tbv,n\t\t%r0(ret)\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#if defined (L_divU_3) && !defined (SMALL_LIB)\n-#undef L_divU_3\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define result %r29\n-#define ret %r31\n-\n-SPACE\n-GSYM($$divU_3)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tsh2add\t%r26,%r26,%r29\t\t; r29 = lo(101 x r)\n-\tshd\t%r0,%r26,30,%r1\t\t;  r1 = hi(100 x r)\n-\taddc\t%r1,%r0,%r1\t\t;  r1 = hi(101 x r)\n-; r in r1,,r29\n-\tzdep\t%r29,27,28,%r25\t\t; r25 = lo(10000 x r)\n-\tadd\t%r25,%r29,%r25\t\t; r25 = lo(10001 x r)\n-\tshd\t%r1,%r29,28,%r29\t; r29 = hi(10000 x r)\n-\taddc\t%r29,%r1,%r29\t\t; r29 = hi(10001 x r)\n-; r in r29,,r25\n-\tzdep\t%r25,23,24,%r1\t\t;  r1 = lo(100000000 x r)\n-\tadd\t%r1,%r25,%r1\t\t;  r1 = lo(100000001 x r)\n-\tshd\t%r29,%r25,24,%r25\t; r25 = hi(100000000 x r)\n-\taddc\t%r25,%r29,%r25\t\t; r25 = hi(100000001 x r)\n-; r in r25,,r1\n-\tzdep\t%r1,15,16,%r29\n-\tadd\t%r29,%r1,%r29\n-\tshd\t%r25,%r1,16,%r1\n-\taddc\t%r1,%r25,%r1\n-; r in r1,,r29\n-\tsh1add\t%r29,%r26,%r0\t\t;  r0 = lo(10 x r) + dividend\n-\tshd\t%r1,%r29,31,%r29\t; r29 = hi(10 x r)\n-\taddc\t%r29,%r0,%r29\n-\tbv\t%r0(ret)\n-\textru\t%r29,30,31,result\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#if defined (L_divU_5) && !defined (SMALL_LIB)\n-#undef L_divU_5\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define result %r29\n-#define ret %r31\n-\n-SPACE\n-GSYM($$divU_5)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tsh1add\t%r26,%r26,%r29\t\t; r29 = lo(11 x r)\n-\tshd\t%r0,%r26,31,%r1\t\t;  r1 = hi(10 x r)\n-\taddc\t%r1,%r0,%r1\t\t;  r1 = hi(11 x r)\n-; r in r1,,r29\n-\tzdep\t%r29,27,28,%r25\t\t; r25 = lo(10000 x r)\n-\tadd\t%r25,%r29,%r25\t\t; r25 = lo(10001 x r)\n-\tshd\t%r1,%r29,28,%r29\t; r29 = hi(10000 x r)\n-\taddc\t%r29,%r1,%r29\t\t; r29 = hi(10001 x r)\n-; r in r29,,r25\n-\tzdep\t%r25,23,24,%r1\t\t;  r1 = lo(100000000 x r)\n-\tadd\t%r1,%r25,%r1\t\t;  r1 = lo(100000001 x r)\n-\tshd\t%r29,%r25,24,%r25\t; r25 = hi(100000000 x r)\n-\taddc\t%r25,%r29,%r25\t\t; r25 = hi(100000001 x r)\n-; r in r25,,r1\n-\tzdep\t%r1,15,16,%r29\n-\tadd\t%r29,%r1,%r29\n-\tshd\t%r25,%r1,16,%r1\n-\taddc\t%r1,%r25,%r1\n-; r in r1,,r29\n-\tsh2add\t%r29,%r26,%r0\t\t;  r0 = lo(1000 x r) + dividend\n-\tshd\t%r1,%r29,30,%r29\t; r29 = hi(1000 x r)\n-\taddc\t%r29,%r0,%r29\n-\tbv\t%r0(ret)\n-\textru\t%r29,29,30,result\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#if defined (L_divU_6) && !defined (SMALL_LIB)\n-#undef L_divU_6\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define result %r29\n-#define ret %r31\n-\n-SPACE\n-GSYM($$divU_6)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tsh2add\t%r26,%r26,%r29\t\t; r29 = lo(101 x r)\n-\tshd\t%r0,%r26,30,%r1\t\t;  r1 = hi(100 x r)\n-\taddc\t%r1,%r0,%r1\t\t;  r1 = hi(101 x r)\n-; r in r1,,r29\n-\tzdep\t%r29,27,28,%r25\t\t; r25 = lo(10000 x r)\n-\tadd\t%r25,%r29,%r25\t\t; r25 = lo(10001 x r)\n-\tshd\t%r1,%r29,28,%r29\t; r29 = hi(10000 x r)\n-\taddc\t%r29,%r1,%r29\t\t; r29 = hi(10001 x r)\n-; r in r29,,r25\n-\tzdep\t%r25,23,24,%r1\t\t;  r1 = lo(100000000 x r)\n-\tadd\t%r1,%r25,%r1\t\t;  r1 = lo(100000001 x r)\n-\tshd\t%r29,%r25,24,%r25\t; r25 = hi(100000000 x r)\n-\taddc\t%r25,%r29,%r25\t\t; r25 = hi(100000001 x r)\n-; r in r25,,r1\n-\tzdep\t%r1,15,16,%r29\n-\tadd\t%r29,%r1,%r29\n-\tshd\t%r25,%r1,16,%r1\n-\taddc\t%r1,%r25,%r1\n-; r in r1,,r29\n-\tsh1add\t%r29,%r26,%r0\t\t;  r0 = lo(10 x r) + dividend\n-\tshd\t%r1,%r29,31,%r29\t; r29 = hi(10 x r)\n-\taddc\t%r29,%r0,%r29\n-\tbv\t%r0(ret)\n-\textru\t%r29,29,30,result\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#if defined (L_divU_9) && !defined (SMALL_LIB)\n-#undef L_divU_9\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define result %r29\n-#define ret %r31\n-\n-SPACE\n-GSYM($$divU_9)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tzdep\t%r26,28,29,%r29\n-\tsub\t%r29,%r26,%r29\n-\tshd\t0,%r26,29,%r1\n-\tsubb\t%r1,0,%r1\t\t/* 111 */\n-\n-\tzdep\t%r29,25,26,%r25\n-\tadd\t%r25,%r29,%r25\n-\tshd\t%r1,%r29,26,%r29\n-\taddc\t%r29,%r1,%r29\t\t/* 111000111 */\n-\n-\tsh3add\t%r25,%r26,%r1\n-\tshd\t%r29,%r25,29,%r25\n-\taddc\t%r25,0,%r25\t\t/* 111000111001 */\n-\n-\tzdep\t%r1,16,17,%r29\n-\tsub\t%r29,%r1,%r29\n-\tshd\t%r25,%r1,17,%r1\n-\tsubb\t%r1,%r25,%r1\t\t/* 111000111000111000111000111 */\n-\n-\tsh3add\t%r29,%r26,%r0\n-\tshd\t%r1,%r29,29,%r29\n-\taddc\t%r29,0,%r29\t\t/* 111000111000111000111000111001 */\n-\tbv\t%r0(ret)\n-\textru\t%r29,30,31,result\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#if defined (L_divU_10) && !defined (SMALL_LIB)\n-#undef L_divU_10\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define result %r29\n-#define ret %r31\n-\n-SPACE\n-GSYM($$divU_10)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tsh1add\t%r26,%r26,%r29\t\t; r29 = lo(11 x r)\n-\tshd\t%r0,%r26,31,%r1\t\t;  r1 = hi(10 x r)\n-\taddc\t%r1,%r0,%r1\t\t;  r1 = hi(11 x r)\n-; r in r1,,r29\n-\tzdep\t%r29,27,28,%r25\t\t; r25 = lo(10000 x r)\n-\tadd\t%r25,%r29,%r25\t\t; r25 = lo(10001 x r)\n-\tshd\t%r1,%r29,28,%r29\t; r29 = hi(10000 x r)\n-\taddc\t%r29,%r1,%r29\t\t; r29 = hi(10001 x r)\n-; r in r29,,r25\n-\tzdep\t%r25,23,24,%r1\t\t;  r1 = lo(100000000 x r)\n-\tadd\t%r1,%r25,%r1\t\t;  r1 = lo(100000001 x r)\n-\tshd\t%r29,%r25,24,%r25\t; r25 = hi(100000000 x r)\n-\taddc\t%r25,%r29,%r25\t\t; r25 = hi(100000001 x r)\n-; r in r25,,r1\n-\tzdep\t%r1,15,16,%r29\n-\tadd\t%r29,%r1,%r29\n-\tshd\t%r25,%r1,16,%r1\n-\taddc\t%r1,%r25,%r1\n-; r in r1,,r29\n-\tsh2add\t%r29,%r26,%r0\t\t;  r0 = lo(1000 x r) + dividend\n-\tshd\t%r1,%r29,30,%r29\t; r29 = hi(1000 x r)\n-\taddc\t%r29,%r0,%r29\n-\tbv\t%r0(ret)\n-\textru\t%r29,28,29,result\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#if defined (L_divU_12) && !defined (SMALL_LIB)\n-#undef L_divU_12\n-#define dividend %r26\n-#define divisor %r25\n-#define tmp %r1\n-#define result %r29\n-#define ret %r31\n-\n-SPACE\n-GSYM($$divU_12)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tsh2add\t%r26,%r26,%r29\t\t; r29 = lo(101 x r)\n-\tshd\t%r0,%r26,30,%r1\t\t;  r1 = hi(100 x r)\n-\taddc\t%r1,%r0,%r1\t\t;  r1 = hi(101 x r)\n-; r in r1,,r29\n-\tzdep\t%r29,27,28,%r25\t\t; r25 = lo(10000 x r)\n-\tadd\t%r25,%r29,%r25\t\t; r25 = lo(10001 x r)\n-\tshd\t%r1,%r29,28,%r29\t; r29 = hi(10000 x r)\n-\taddc\t%r29,%r1,%r29\t\t; r29 = hi(10001 x r)\n-; r in r29,,r25\n-\tzdep\t%r25,23,24,%r1\t\t;  r1 = lo(100000000 x r)\n-\tadd\t%r1,%r25,%r1\t\t;  r1 = lo(100000001 x r)\n-\tshd\t%r29,%r25,24,%r25\t; r25 = hi(100000000 x r)\n-\taddc\t%r25,%r29,%r25\t\t; r25 = hi(100000001 x r)\n-; r in r25,,r1\n-\tzdep\t%r1,15,16,%r29\n-\tadd\t%r29,%r1,%r29\n-\tshd\t%r25,%r1,16,%r1\n-\taddc\t%r1,%r25,%r1\n-; r in r1,,r29\n-\tsh1add\t%r29,%r26,%r0\t\t;  r0 = lo(10 x r) + dividend\n-\tshd\t%r1,%r29,31,%r29\t; r29 = hi(10 x r)\n-\taddc\t%r29,%r0,%r29\n-\tbv\t%r0(ret)\n-\textru\t%r29,28,29,result\n-\t.exit\n-\t.procend\n-#endif\n-\n-\n-#ifdef L_divU_3\n-SPACE\n-GSYM($$divU_3)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t3,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_5\n-SPACE\n-GSYM($$divU_5)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t5,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_6\n-SPACE\n-GSYM($$divU_6)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t6,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_7\n-SPACE\n-GSYM($$divU_7)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t7,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_9\n-SPACE\n-GSYM($$divU_9)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t9,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_10\n-SPACE\n-GSYM($$divU_10)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t10,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_12\n-SPACE\n-GSYM($$divU_12)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t12,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_14\n-SPACE\n-GSYM($$divU_14)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t14,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divU_15\n-SPACE\n-GSYM($$divU_15)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divU\n-\tldi\t\t15,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divU,MILLICODE\n-#endif\n-\n-#ifdef L_divI_3\n-SPACE\n-GSYM($$divI_3)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t3,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_5\n-SPACE\n-GSYM($$divI_5)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t5,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_6\n-SPACE\n-GSYM($$divI_6)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t6,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_7\n-SPACE\n-GSYM($$divI_7)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t7,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_9\n-SPACE\n-GSYM($$divI_9)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t9,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_10\n-SPACE\n-GSYM($$divI_10)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t10,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_12\n-SPACE\n-GSYM($$divI_12)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t12,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_14\n-SPACE\n-GSYM($$divI_14)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t14,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif\n-\n-#ifdef L_divI_15\n-SPACE\n-GSYM($$divI_15)\n-\t.proc\n-\t.callinfo\tframe=0,no_calls\n-\t.entry\n-\tb\t\t$$divI\n-\tldi\t\t15,%r25\n-\t.exit\n-\t.procend\n-\t.import\t\t$$divI,MILLICODE\n-#endif"}, {"sha": "b9d878856f8d1343638585216dd1ddbcc0722f41", "filename": "gcc/config/sparc/sol2-g1.asm", "status": "removed", "additions": 0, "deletions": 88, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923c7cdfa776a4ebc6ff759d2a775ebb81cb8ac5/gcc%2Fconfig%2Fsparc%2Fsol2-g1.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923c7cdfa776a4ebc6ff759d2a775ebb81cb8ac5/gcc%2Fconfig%2Fsparc%2Fsol2-g1.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2-g1.asm?ref=923c7cdfa776a4ebc6ff759d2a775ebb81cb8ac5", "patch": "@@ -1,88 +0,0 @@\n-! gcrt1.s for solaris 2.0.\n-\n-!   Copyright (C) 1992 Free Software Foundation, Inc.\n-!   Written By David Vinayak Henkel-Wallace, June 1992\n-! \n-! This file is free software; you can redistribute it and/or modify it\n-! under the terms of the GNU General Public License as published by the\n-! Free Software Foundation; either version 2, or (at your option) any\n-! later version.\n-! \n-! In addition to the permissions in the GNU General Public License, the\n-! Free Software Foundation gives you unlimited permission to link the\n-! compiled version of this file with other programs, and to distribute\n-! those programs without any restriction coming from the use of this\n-! file.  (The General Public License restrictions do apply in other\n-! respects; for example, they cover modification of the file, and\n-! distribution when not linked into another program.)\n-! \n-! This file is distributed in the hope that it will be useful, but\n-! WITHOUT ANY WARRANTY; without even the implied warranty of\n-! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-! General Public License for more details.\n-! \n-! You should have received a copy of the GNU General Public License\n-! along with this program; see the file COPYING.  If not, write to\n-! the Free Software Foundation, 59 Temple Place - Suite 330,\n-! Boston, MA 02111-1307, USA.\n-! \n-!    As a special exception, if you link this library with files\n-!    compiled with GCC to produce an executable, this does not cause\n-!    the resulting executable to be covered by the GNU General Public License.\n-!    This exception does not however invalidate any other reasons why\n-!    the executable file might be covered by the GNU General Public License.\n-! \n-\n-! This file takes control of the process from the kernel, as specified\n-! in section 3 of the SVr4 ABI.\n-! This file is the first thing linked into any executable.\n-\n-\t.section\t\".text\"\n-\t.proc\t022\n-\t.global\t_start\n-\n-_start:\n-\tmov\t0, %fp\t\t! Mark bottom frame pointer\n-\tld\t[%sp + 64], %l0\t! argc\n-\tadd\t%sp, 68, %l1\t! argv\n-\n-\t! Leave some room for a call.  Sun leaves 32 octets (to sit on\n-\t! a cache line?) so we do too.\n-\tsub\t%sp, 32, %sp\n-\n-\t! %g1 may contain a function to be registered w/atexit\n-\torcc\t%g0, %g1, %g0\n-\tbe\t.nope\n-\tmov\t%g1, %o0\n-\tcall\tatexit\n-\tnop   \n-.nope:\n-\t! Now make sure constructors and destructors are handled.\n-\tset\t_fini, %o0\n-\tcall\tatexit, 1\n-\tnop\n-\tcall\t_init, 0\n-\tnop\n-\n-\t! We ignore the auxiliary vector; there's no defined way to\n-\t! access those data anyway.  Instead, go straight to main:\n-\tmov\t%l0, %o0\t! argc\n-\tmov\t%l1, %o1\t! argv\n-\tset\t___Argv, %o3\n-\tst\t%o1, [%o3]\t! *___Argv\n-\t! Skip argc words past argv, to env:\n-\tsll\t%l0, 2, %o2\n-\tadd\t%o2, 4, %o2\n-\tadd\t%l1, %o2, %o2\t! env\n-\tset\t_environ, %o3\n-\tst\t%o2, [%o3]\t! *_environ\n-\tcall\tmain, 4\n-\tnop   \n-\tcall\texit, 0\n-\tnop   \n-\tcall\t_exit, 0\n-\tnop   \n-\t! We should never get here.\n-\n-\t.type\t_start,#function\n-\t.size\t_start,.-_start"}]}