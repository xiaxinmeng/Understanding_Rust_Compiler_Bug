{"sha": "326648f1bd78bfa613ff589bbc28797f3c86b464", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI2NjQ4ZjFiZDc4YmZhNjEzZmY1ODliYmMyODc5N2YzYzg2YjQ2NA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-01-14T10:50:43Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-01-14T10:50:43Z"}, "message": "tree-dfa.c (remove_referenced_var): New function.\n\n\t* tree-dfa.c (remove_referenced_var): New function.\n\t* tree-ssa-live.c (remove_unused_locals): Walk referenced vars and\n\tprune referenced vars list too.\n\t* tree-flow.h (remove_referenced_var): Declare.\n\nFrom-SVN: r120767", "tree": {"sha": "70f455bf8ee62a2401f9271eecfe9aa1c4a8dac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70f455bf8ee62a2401f9271eecfe9aa1c4a8dac9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/326648f1bd78bfa613ff589bbc28797f3c86b464", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/326648f1bd78bfa613ff589bbc28797f3c86b464", "html_url": "https://github.com/Rust-GCC/gccrs/commit/326648f1bd78bfa613ff589bbc28797f3c86b464", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/326648f1bd78bfa613ff589bbc28797f3c86b464/comments", "author": null, "committer": null, "parents": [{"sha": "4437b50d212393791a10cf46c45fabebe199ece2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4437b50d212393791a10cf46c45fabebe199ece2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4437b50d212393791a10cf46c45fabebe199ece2"}], "stats": {"total": 56, "additions": 48, "deletions": 8}, "files": [{"sha": "b5addb81dec2f60cc67085cea39623791410258e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/326648f1bd78bfa613ff589bbc28797f3c86b464/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/326648f1bd78bfa613ff589bbc28797f3c86b464/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=326648f1bd78bfa613ff589bbc28797f3c86b464", "patch": "@@ -1,3 +1,10 @@\n+2007-01-14  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-dfa.c (remove_referenced_var): New function.\n+\t* tree-ssa-live.c (remove_unused_locals): Walk referenced vars and\n+\tprune referenced vars list too.\n+\t* tree-flow.h (remove_referenced_var): Declare.\n+\n 2007-01-14  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-eh.c (add_stmt_to_eh_region_fn): Do not add call_exprs"}, {"sha": "93c58f780ec2211f697c752b323de65faafd121f", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/326648f1bd78bfa613ff589bbc28797f3c86b464/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/326648f1bd78bfa613ff589bbc28797f3c86b464/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=326648f1bd78bfa613ff589bbc28797f3c86b464", "patch": "@@ -752,6 +752,29 @@ add_referenced_var (tree var)\n     }\n }\n \n+/* Remove VAR from the list.  */\n+\n+void\n+remove_referenced_var (tree var)\n+{\n+  var_ann_t v_ann;\n+  struct int_tree_map in;\n+  void **loc;\n+  unsigned int uid = DECL_UID (var);\n+\n+  clear_call_clobbered (var);\n+  v_ann = get_var_ann (var);\n+  ggc_free (v_ann);\n+  var->base.ann = NULL;\n+  gcc_assert (DECL_P (var));\n+  in.uid = uid;\n+  in.to = var;\n+  loc = htab_find_slot_with_hash (gimple_referenced_vars (cfun), &in, uid,\n+\t\t\t\t  NO_INSERT);\n+  ggc_free (*loc);\n+  htab_clear_slot (gimple_referenced_vars (cfun), loc);\n+}\n+\n \n /* Return the virtual variable associated to the non-scalar variable VAR.  */\n "}, {"sha": "0b029ee683b1e1a8f7127e420f9047d98d311df0", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/326648f1bd78bfa613ff589bbc28797f3c86b464/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/326648f1bd78bfa613ff589bbc28797f3c86b464/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=326648f1bd78bfa613ff589bbc28797f3c86b464", "patch": "@@ -698,6 +698,7 @@ extern void dump_subvars_for (FILE *, tree);\n extern void debug_subvars_for (tree);\n extern tree get_virtual_var (tree);\n extern void add_referenced_var (tree);\n+extern void remove_referenced_var (tree);\n extern void mark_symbols_for_renaming (tree);\n extern void find_new_referenced_vars (tree *);\n "}, {"sha": "cc4972f54b2e5b154a65ef56f32962f151f07fe4", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/326648f1bd78bfa613ff589bbc28797f3c86b464/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/326648f1bd78bfa613ff589bbc28797f3c86b464/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=326648f1bd78bfa613ff589bbc28797f3c86b464", "patch": "@@ -449,15 +449,12 @@ remove_unused_locals (void)\n {\n   basic_block bb;\n   tree t, *cell;\n+  referenced_var_iterator rvi;\n+  var_ann_t ann;\n \n   /* Assume all locals are unused.  */\n-  for (t = cfun->unexpanded_var_list; t; t = TREE_CHAIN (t))\n-    {\n-      tree var = TREE_VALUE (t);\n-      if (TREE_CODE (var) != FUNCTION_DECL\n-\t  && var_ann (var))\n-\tvar_ann (var)->used = false;\n-    }\n+  FOR_EACH_REFERENCED_VAR (t, rvi)\n+    var_ann (t)->used = false;\n \n   /* Walk the CFG marking all referenced symbols.  */\n   FOR_EACH_BB (bb)\n@@ -493,7 +490,6 @@ remove_unused_locals (void)\n   for (cell = &cfun->unexpanded_var_list; *cell; )\n     {\n       tree var = TREE_VALUE (*cell);\n-      var_ann_t ann;\n \n       if (TREE_CODE (var) != FUNCTION_DECL\n \t  && (!(ann = var_ann (var))\n@@ -505,6 +501,19 @@ remove_unused_locals (void)\n \n       cell = &TREE_CHAIN (*cell);\n     }\n+\n+  /* Remove unused variables from REFERENCED_VARs.  As an special exception\n+     keep the variables that are believed to be aliased.  Those can't be\n+     easilly removed from the alias sets and and operand caches.\n+     They will be removed shortly after next may_alias pass is performed.  */\n+  FOR_EACH_REFERENCED_VAR (t, rvi)\n+    if (!is_global_var (t)\n+\t&& !MTAG_P (t)\n+\t&& TREE_CODE (t) != PARM_DECL\n+\t&& TREE_CODE (t) != RESULT_DECL\n+\t&& !(ann = var_ann (t))->used\n+\t&& !ann->is_aliased && !is_call_clobbered (t) && !ann->symbol_mem_tag)\n+        remove_referenced_var (t);\n }\n \n "}]}