{"sha": "002d2e0b80007f11f8502f7e61d502c64c93e6c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAyZDJlMGI4MDAwN2YxMWY4NTAyZjdlNjFkNTAyYzY0YzkzZTZjNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-12-21T00:22:39Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-21T00:22:39Z"}, "message": "alpha.c (call_operand): Accept pseudos.\n\n        * config/alpha/alpha.c (call_operand) [OSF]: Accept pseudos.\n        * config/alpha/alpha.md (call_osf, call_value_osf): Don't force\n        operand into $27.\n\nFrom-SVN: r48225", "tree": {"sha": "84fe00071e398e6687dcc5d6f5625284c7813552", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84fe00071e398e6687dcc5d6f5625284c7813552"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/002d2e0b80007f11f8502f7e61d502c64c93e6c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002d2e0b80007f11f8502f7e61d502c64c93e6c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/002d2e0b80007f11f8502f7e61d502c64c93e6c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002d2e0b80007f11f8502f7e61d502c64c93e6c5/comments", "author": null, "committer": null, "parents": [{"sha": "cf785988e051f4ed5732e2e263c161c702f5cbf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf785988e051f4ed5732e2e263c161c702f5cbf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf785988e051f4ed5732e2e263c161c702f5cbf9"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "487302cea7ce24da6bad6934a987d03e86b011a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002d2e0b80007f11f8502f7e61d502c64c93e6c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002d2e0b80007f11f8502f7e61d502c64c93e6c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=002d2e0b80007f11f8502f7e61d502c64c93e6c5", "patch": "@@ -1,3 +1,9 @@\n+2001-12-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.c (call_operand) [OSF]: Accept pseudos.\n+\t* config/alpha/alpha.md (call_osf, call_value_osf): Don't force\n+\toperand into $27.\n+\n 2001-12-20  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* configure.in (all_headers, all_lib2funcs): Remove."}, {"sha": "ce5b58e72f5755d4793514205e21424459f4f81f", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002d2e0b80007f11f8502f7e61d502c64c93e6c5/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002d2e0b80007f11f8502f7e61d502c64c93e6c5/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=002d2e0b80007f11f8502f7e61d502c64c93e6c5", "patch": "@@ -1008,7 +1008,7 @@ call_operand (op, mode)\n   if (GET_CODE (op) == REG)\n     {\n       if (TARGET_ABI_OSF)\n-\treturn REGNO (op) == 27;\n+\treturn (REGNO (op) == 27 || REGNO (op) >= FIRST_PSEUDO_REGISTER);\n       else\n \treturn 1;\n     }"}, {"sha": "a3ac64be09431f48f902ad4e8deb965be605ab03", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002d2e0b80007f11f8502f7e61d502c64c93e6c5/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002d2e0b80007f11f8502f7e61d502c64c93e6c5/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=002d2e0b80007f11f8502f7e61d502c64c93e6c5", "patch": "@@ -4602,11 +4602,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi\"\n \n   operands[0] = XEXP (operands[0], 0);\n   if (! call_operand (operands[0], Pmode))\n-    {\n-      rtx pv = gen_rtx_REG (Pmode, 27);\n-      emit_move_insn (pv, operands[0]);\n-      operands[0] = pv;\n-    }\n+    operands[0] = copy_to_mode_reg (Pmode, operands[0]);\n })\n \n (define_expand \"call_nt\"\n@@ -4735,11 +4731,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi\"\n \n   operands[1] = XEXP (operands[1], 0);\n   if (! call_operand (operands[1], Pmode))\n-    {\n-      rtx pv = gen_rtx_REG (Pmode, 27);\n-      emit_move_insn (pv, operands[1]);\n-      operands[1] = pv;\n-    }\n+    operands[1] = copy_to_mode_reg (Pmode, operands[1]);\n })\n \n (define_expand \"call_value_nt\""}]}