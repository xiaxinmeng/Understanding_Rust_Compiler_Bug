{"sha": "e0737c209bb0a1075201d22d89baa1575c44d153", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA3MzdjMjA5YmIwYTEwNzUyMDFkMjJkODliYWExNTc1YzQ0ZDE1Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-02-20T18:54:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-02-20T18:54:45Z"}, "message": "PR c++/88380 - wrong-code with flexible array and NSDMI.\n\nHere 'skipped' was set to -1 to force an explicit initializer for 'uninit'\nbefore the initializer for 'initialized', and so we also tried to emit an\nexplicit initializer for the flexible array, for which build_zero_init\nreturns error_mark_node.  We should ignore flexarrays even when\nskipped < 0.\n\n\t* typeck2.c (process_init_constructor_record): Skip flexarrays.\n\nFrom-SVN: r269046", "tree": {"sha": "dd75208166f9718dcc53c90f0a861e6e10669c86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd75208166f9718dcc53c90f0a861e6e10669c86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0737c209bb0a1075201d22d89baa1575c44d153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0737c209bb0a1075201d22d89baa1575c44d153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0737c209bb0a1075201d22d89baa1575c44d153", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0737c209bb0a1075201d22d89baa1575c44d153/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb13308543771f56bbc932933b9ec7bbb95d37ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb13308543771f56bbc932933b9ec7bbb95d37ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb13308543771f56bbc932933b9ec7bbb95d37ac"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "02e0845f1d7ceeb0c9a8f373e8745dd917022bb9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0737c209bb0a1075201d22d89baa1575c44d153/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0737c209bb0a1075201d22d89baa1575c44d153/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e0737c209bb0a1075201d22d89baa1575c44d153", "patch": "@@ -1,3 +1,8 @@\n+2019-02-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/88380 - wrong-code with flexible array and NSDMI.\n+\t* typeck2.c (process_init_constructor_record): Skip flexarrays.\n+\n 2019-02-20  will wray  <wjwray@gmail.com>\n \n \tPR c++/88572 - wrong handling of braces on scalar init."}, {"sha": "af56632c0fc3ceae54a699e99069cc4934429bb1", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0737c209bb0a1075201d22d89baa1575c44d153/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0737c209bb0a1075201d22d89baa1575c44d153/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=e0737c209bb0a1075201d22d89baa1575c44d153", "patch": "@@ -1602,12 +1602,15 @@ process_init_constructor_record (tree type, tree init, int nested, int flags,\n \t      else\n \t\treturn PICFLAG_ERRONEOUS;\n \t    }\n+\t  /* Do nothing for flexible array members since they need not have any\n+\t     elements.  Don't worry about 'skipped' because a flexarray has to\n+\t     be the last field.  */\n+\t  else if (TREE_CODE (fldtype) == ARRAY_TYPE && !TYPE_DOMAIN (fldtype))\n+\t    continue;\n \n \t  /* Warn when some struct elements are implicitly initialized\n-\t     to zero.  However, avoid issuing the warning for flexible\n-\t     array members since they need not have any elements.  */\n-\t  if ((TREE_CODE (fldtype) != ARRAY_TYPE || TYPE_DOMAIN (fldtype))\n-\t      && (complain & tf_warning)\n+\t     to zero.  */\n+\t  if ((complain & tf_warning)\n \t      && !EMPTY_CONSTRUCTOR_P (init))\n \t    warning (OPT_Wmissing_field_initializers,\n \t\t     \"missing initializer for member %qD\", field);"}, {"sha": "a12a63496210ffd06b8f631ed851035f4cd9e9c5", "filename": "gcc/testsuite/g++.dg/ext/flexary33.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0737c209bb0a1075201d22d89baa1575c44d153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0737c209bb0a1075201d22d89baa1575c44d153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary33.C?ref=e0737c209bb0a1075201d22d89baa1575c44d153", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/88380\n+// { dg-do compile { target c++14 } }\n+// { dg-options \"\" }\n+\n+struct S {\n+  char uninit;\n+  char initialised = 11;\n+  char variable[];\n+};\n+\n+constexpr S p {};\n+#define SA(X) static_assert((X),#X)\n+SA(p.initialised == 11);"}]}