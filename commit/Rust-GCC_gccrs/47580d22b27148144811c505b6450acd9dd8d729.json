{"sha": "47580d22b27148144811c505b6450acd9dd8d729", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc1ODBkMjJiMjcxNDgxNDQ4MTFjNTA1YjY0NTBhY2Q5ZGQ4ZDcyOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-03-31T12:43:29Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-03-31T12:43:29Z"}, "message": "re PR preprocessor/15638 (gcc should have option to treat missing headers as fatal)\n\n\tPR preprocessor/15638\ngcc:\n\t* c-common.c (c_cpp_error): Handle CPP_DL_FATAL.\n\ngcc/fortran:\n\t* cpp.c (cb_cpp_error): Handle CPP_DL_FATAL.\n\ngcc/testsuite:\n\t* gcc.dg/cpp/missing-header-1.c: New test.\n\t* gcc.dg/cpp/include2.c: Only test #include <>.  Expect\n\t\"compilation terminated\" message.\n\t* gcc.dg/cpp/include2a.c: New test.  Copy of include2.c but only\n\ttest #include \"\".\n\t* gcc.dg/pch/counter-2.c, gcc.dg/pch/valid-1.c,\n\tgcc.dg/pch/valid-2.c, gcc.dg/pch/warn-1.c: Expect \"compilation\n\tterminated\" message.\n\nlibcpp:\n\t* files.c (_cpp_find_file): Call open_file_failed after diagnosing\n\tinvalid PCH.\n\t(open_file_failed): Make error for missing file fatal.\n\t* include/cpplib.h (CPP_DL_FATAL): Define.\n\nFrom-SVN: r145341", "tree": {"sha": "50fa0015aa03008a453a0de16c8f341444056875", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50fa0015aa03008a453a0de16c8f341444056875"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47580d22b27148144811c505b6450acd9dd8d729", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47580d22b27148144811c505b6450acd9dd8d729", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47580d22b27148144811c505b6450acd9dd8d729", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47580d22b27148144811c505b6450acd9dd8d729/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba4d8f9d37bf11be3a98504812447cd9bbaad708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba4d8f9d37bf11be3a98504812447cd9bbaad708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba4d8f9d37bf11be3a98504812447cd9bbaad708"}], "stats": {"total": 76, "additions": 71, "deletions": 5}, "files": [{"sha": "1b75a51425fdc2b13e9f8ffaedeb381a85c5b670", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -1,3 +1,8 @@\n+2009-03-31  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR preprocessor/15638\n+\t* c-common.c (c_cpp_error): Handle CPP_DL_FATAL.\n+\n 2009-03-31  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/23401"}, {"sha": "f0c312244b29d07da722e31f353efdfd0c71d6d2", "filename": "gcc/c-common.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -8009,6 +8009,9 @@ c_cpp_error (cpp_reader *pfile ATTRIBUTE_UNUSED, int level,\n     case CPP_DL_NOTE:\n       dlevel = DK_NOTE;\n       break;\n+    case CPP_DL_FATAL:\n+      dlevel = DK_FATAL;\n+      break;\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "c7ed02d34ecaf7825ceb9353c3fe0454d1888ca7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -1,3 +1,8 @@\n+2009-03-31  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR preprocessor/15638\n+\t* cpp.c (cb_cpp_error): Handle CPP_DL_FATAL.\n+\n 2009-03-30  Steven G. Kargl  <kargls@comcast.net>\n \n \tPR fortran/38389"}, {"sha": "9187bed7efeabb246f693dd825b8c1ffba818b56", "filename": "gcc/fortran/cpp.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ffortran%2Fcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ffortran%2Fcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcpp.c?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -997,6 +997,9 @@ cb_cpp_error (cpp_reader *pfile ATTRIBUTE_UNUSED, int level,\n     case CPP_DL_NOTE:\n       dlevel = DK_NOTE;\n       break;\n+    case CPP_DL_FATAL:\n+      dlevel = DK_FATAL;\n+      break;\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "3593c7d538b5a59e9b1784e9afabe5b4c2dae2ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -1,3 +1,15 @@\n+2009-03-31  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR preprocessor/15638\n+\t* gcc.dg/cpp/missing-header-1.c: New test.\n+\t* gcc.dg/cpp/include2.c: Only test #include <>.  Expect\n+\t\"compilation terminated\" message.\n+\t* gcc.dg/cpp/include2a.c: New test.  Copy of include2.c but only\n+\ttest #include \"\".\n+\t* gcc.dg/pch/counter-2.c, gcc.dg/pch/valid-1.c,\n+\tgcc.dg/pch/valid-2.c, gcc.dg/pch/warn-1.c: Expect \"compilation\n+\tterminated\" message.\n+\n 2009-03-31  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/23401"}, {"sha": "67f1065ae8c609f0128f4debc99ed2072feafc6a", "filename": "gcc/testsuite/gcc.dg/cpp/include2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude2.c?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -8,9 +8,8 @@\n /* Source: Neil Booth, 4 Nov 2000.  */\n \n #include <silly\\>>  /* { dg-error \"extra tokens\" \"\" } */\n-#include \"silly\\\"\"  /* { dg-error \"extra tokens\" \"\" } */\n \n /* These error is No such file or directory, just once.  However, this\n    message is locale-dependent, so don't test for it.  */\n /* { dg-error \"silly\" \"\" { target *-*-* } 10 } */\n-/* { dg-error \"missing\" \"\" { target *-*-* } 11 } */\n+/* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */"}, {"sha": "974f3f332630229111dd987d174564602e90e168", "filename": "gcc/testsuite/gcc.dg/cpp/include2a.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude2a.c?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -0,0 +1,16 @@\n+/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+\n+/* Tests that #include does not allow the terminating '>' or '\"' to be\n+   escaped, as per the standard.  */\n+\n+/* Source: Neil Booth, 4 Nov 2000.  */\n+\n+#include \"silly\\\"\"  /* { dg-error \"extra tokens\" \"\" } */\n+\n+/* These error is No such file or directory, just once.  However, this\n+   message is locale-dependent, so don't test for it.  */\n+/* { dg-error \"silly\" \"\" { target *-*-* } 10 } */\n+/* { dg-error \"missing\" \"\" { target *-*-* } 10 } */\n+/* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */"}, {"sha": "5445d4c4fec7a36e775fdddf7f8c6d0e2b0783fc", "filename": "gcc/testsuite/gcc.dg/cpp/missing-header-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-header-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-header-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-header-1.c?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -0,0 +1,9 @@\n+/* Test that missing headers are fatal errors.  PR 15638.  */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+#include \"nonexistent.h\" /* { dg-error \"nonexistent.h\" } */\n+/* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */\n+\n+/* This declaration should not receive any diagnostic.  */\n+foo bar;"}, {"sha": "6dd2245d7d84adc6bc0ab71cadc1e887f8aa048d", "filename": "gcc/testsuite/gcc.dg/pch/counter-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcounter-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcounter-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcounter-2.c?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -10,6 +10,7 @@\n #include \"counter-2.h\" /* { dg-warning \"not used because `__COUNTER__' is invalid\" } */\n /* { dg-error \"counter-2.h: No such file or directory\" \"no such file\" { target *-*-* } 10 } */\n /* { dg-error \"one or more PCH files were found, but they were invalid\" \"invalid files\" { target *-*-* } 10 } */\n+/* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */\n \n int main(void) \n {"}, {"sha": "3ee909165914bc377b39c7a1e54d1f487b093638", "filename": "gcc/testsuite/gcc.dg/pch/valid-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fvalid-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fvalid-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fvalid-1.c?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -3,5 +3,6 @@\n #include \"valid-1.h\"/* { dg-warning \"created with -gnone, but used with -g\" } */\n /* { dg-error \"No such file\" \"no such file\" { target *-*-* } 3 } */\n /* { dg-error \"they were invalid\" \"invalid files\" { target *-*-* } 3 } */\n+/* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */\n \n int x;"}, {"sha": "34269a87960e5521dae7339a85284d44d747f48f", "filename": "gcc/testsuite/gcc.dg/pch/valid-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fvalid-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fvalid-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fvalid-2.c?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -3,4 +3,5 @@\n #include \"valid-2.h\" /* { dg-warning \"settings for -fexceptions do not match\" } */\n /* { dg-error \"No such file\" \"no such file\" { target *-*-* } 3 } */\n /* { dg-error \"they were invalid\" \"invalid files\" { target *-*-* } 3 } */\n+/* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */\n int x;"}, {"sha": "64944c776d874a4a08507352d3005449e9cd577c", "filename": "gcc/testsuite/gcc.dg/pch/warn-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fwarn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fwarn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fwarn-1.c?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -5,6 +5,7 @@\n #include \"warn-1.h\"/* { dg-warning \"not used because .DEFINED_VALUE. is defined\" } */\n /* { dg-error \"No such file\" \"no such file\" { target *-*-* } 5 } */\n /* { dg-error \"they were invalid\" \"invalid files\" { target *-*-* } 5 } */\n+/* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */\n \n \n int main(void) "}, {"sha": "e16a9e45ca966ae9920b221471be4ec718aa135e", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -1,3 +1,11 @@\n+2009-03-31  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR preprocessor/15638\n+\t* files.c (_cpp_find_file): Call open_file_failed after diagnosing\n+\tinvalid PCH.\n+\t(open_file_failed): Make error for missing file fatal.\n+\t* include/cpplib.h (CPP_DL_FATAL): Define.\n+\n 2009-03-30  Sergiy Vyshnevetskiy  <serg@vostok.net>\n \n \tPR preprocessor/31932:"}, {"sha": "f9e68983a4d839e48f549850a00d3a053c8c55c1", "filename": "libcpp/files.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -1,6 +1,6 @@\n /* Part of CPP library.  File handling.\n    Copyright (C) 1986, 1987, 1989, 1992, 1993, 1994, 1995, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n    Written by Per Bothner, 1994.\n    Based on CCCP program by Paul Rubin, June 1986\n@@ -488,7 +488,6 @@ _cpp_find_file (cpp_reader *pfile, const char *fname, cpp_dir *start_dir, bool f\n \t      return file;\n \t    }\n \n-\t  open_file_failed (pfile, file, angle_brackets);\n \t  if (invalid_pch)\n \t    {\n \t      cpp_error (pfile, CPP_DL_ERROR,\n@@ -497,6 +496,7 @@ _cpp_find_file (cpp_reader *pfile, const char *fname, cpp_dir *start_dir, bool f\n \t\tcpp_error (pfile, CPP_DL_ERROR,\n \t\t\t   \"use -Winvalid-pch for more information\");\n \t    }\n+\t  open_file_failed (pfile, file, angle_brackets);\n \t  break;\n \t}\n \n@@ -942,7 +942,7 @@ open_file_failed (cpp_reader *pfile, _cpp_file *file, int angle_brackets)\n       if (CPP_OPTION (pfile, deps.style) && ! print_dep)\n \tcpp_errno (pfile, CPP_DL_WARNING, file->path);\n       else\n-\tcpp_errno (pfile, CPP_DL_ERROR, file->path);\n+\tcpp_errno (pfile, CPP_DL_FATAL, file->path);\n     }\n }\n "}, {"sha": "adc6cf13ede78dd7948224477bbfae9947ad1937", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47580d22b27148144811c505b6450acd9dd8d729/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47580d22b27148144811c505b6450acd9dd8d729/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=47580d22b27148144811c505b6450acd9dd8d729", "patch": "@@ -813,6 +813,8 @@ cpp_num cpp_num_sign_extend (cpp_num, size_t);\n #define CPP_DL_ICE\t\t0x04\n /* An informative note following a warning.  */\n #define CPP_DL_NOTE\t\t0x05\n+/* A fatal error.  */\n+#define CPP_DL_FATAL\t\t0x06\n \n /* Output a diagnostic of some kind.  */\n extern bool cpp_error (cpp_reader *, int, const char *msgid, ...)"}]}