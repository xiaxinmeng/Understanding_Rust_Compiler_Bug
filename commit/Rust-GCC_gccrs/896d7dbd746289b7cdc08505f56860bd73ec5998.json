{"sha": "896d7dbd746289b7cdc08505f56860bd73ec5998", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk2ZDdkYmQ3NDYyODliN2NkYzA4NTA1ZjU2ODYwYmQ3M2VjNTk5OA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-05-10T10:16:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-05-10T10:16:01Z"}, "message": "re PR tree-optimization/40081 (verify_stmts failed with -O2)\n\n2009-05-10  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/40081\n\t* tree-sra.c (instantiate_element): Instantiate scalar replacements\n\tusing the main variant of the element type.  Do not fiddle with\n\tTREE_THIS_VOLATILE or TREE_SIDE_EFFECTS.\n\n\t* g++.dg/torture/pr40081.C: New testcase.\n\nFrom-SVN: r147330", "tree": {"sha": "0d1117281776d802a07a6e4630d1ec865cb8cf58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d1117281776d802a07a6e4630d1ec865cb8cf58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/896d7dbd746289b7cdc08505f56860bd73ec5998", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/896d7dbd746289b7cdc08505f56860bd73ec5998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/896d7dbd746289b7cdc08505f56860bd73ec5998", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/896d7dbd746289b7cdc08505f56860bd73ec5998/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb74e79b1b2bc2d2d244c8c84a7c7ef293686546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb74e79b1b2bc2d2d244c8c84a7c7ef293686546", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb74e79b1b2bc2d2d244c8c84a7c7ef293686546"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "0752599ece0ef794b34d0d2f897ff9e3def36eca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896d7dbd746289b7cdc08505f56860bd73ec5998/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896d7dbd746289b7cdc08505f56860bd73ec5998/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=896d7dbd746289b7cdc08505f56860bd73ec5998", "patch": "@@ -1,3 +1,10 @@\n+2009-05-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/40081\n+\t* tree-sra.c (instantiate_element): Instantiate scalar replacements\n+\tusing the main variant of the element type.  Do not fiddle with\n+\tTREE_THIS_VOLATILE or TREE_SIDE_EFFECTS.\n+\n 2009-05-09  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/40080"}, {"sha": "e875a6682d4d5472d221dc2d4237ebfaf6a932c8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896d7dbd746289b7cdc08505f56860bd73ec5998/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896d7dbd746289b7cdc08505f56860bd73ec5998/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=896d7dbd746289b7cdc08505f56860bd73ec5998", "patch": "@@ -1,3 +1,8 @@\n+2009-05-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/40081\n+\t* g++.dg/torture/pr40081.C: New testcase.\n+\n 2009-05-10  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/38863"}, {"sha": "e65c5a8438de455fee52620cf6b46cd2e9b059e1", "filename": "gcc/testsuite/g++.dg/torture/pr40081.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896d7dbd746289b7cdc08505f56860bd73ec5998/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr40081.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896d7dbd746289b7cdc08505f56860bd73ec5998/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr40081.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr40081.C?ref=896d7dbd746289b7cdc08505f56860bd73ec5998", "patch": "@@ -0,0 +1,16 @@\n+struct Atomic_t {\n+    Atomic_t(int i) : val(i) { }\n+    volatile int val;\n+};\n+class RefCount {\n+public:\n+    RefCount(Atomic_t c) : m_count(c)  { }\n+    Atomic_t m_count;\n+};\n+class IntrusiveCountableBase {\n+    RefCount m_useCount;\n+protected:\n+    IntrusiveCountableBase();\n+};\n+IntrusiveCountableBase::IntrusiveCountableBase() : m_useCount(0)  { }\n+"}, {"sha": "037052053197e855be015ec623ef4d8219a7d7fb", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896d7dbd746289b7cdc08505f56860bd73ec5998/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896d7dbd746289b7cdc08505f56860bd73ec5998/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=896d7dbd746289b7cdc08505f56860bd73ec5998", "patch": "@@ -1277,7 +1277,8 @@ instantiate_element (struct sra_elt *elt)\n       nowarn = TREE_NO_WARNING (base_elt->parent->element);\n   base = base_elt->element;\n \n-  elt->replacement = var = make_rename_temp (elt->type, \"SR\");\n+  elt->replacement = var = make_rename_temp (TYPE_MAIN_VARIANT (elt->type),\n+\t\t\t\t\t     \"SR\");\n \n   if (DECL_P (elt->element)\n       && !tree_int_cst_equal (DECL_SIZE (var), DECL_SIZE (elt->element)))\n@@ -1286,7 +1287,8 @@ instantiate_element (struct sra_elt *elt)\n       DECL_SIZE_UNIT (var) = DECL_SIZE_UNIT (elt->element);\n \n       elt->in_bitfld_block = 1;\n-      elt->replacement = fold_build3 (BIT_FIELD_REF, elt->type, var,\n+      elt->replacement = fold_build3 (BIT_FIELD_REF,\n+\t\t\t\t      TYPE_MAIN_VARIANT (elt->type), var,\n \t\t\t\t      DECL_SIZE (var),\n \t\t\t\t      BYTES_BIG_ENDIAN\n \t\t\t\t      ? size_binop (MINUS_EXPR,\n@@ -1303,12 +1305,6 @@ instantiate_element (struct sra_elt *elt)\n   DECL_SOURCE_LOCATION (var) = DECL_SOURCE_LOCATION (base);\n   DECL_ARTIFICIAL (var) = 1;\n \n-  if (TREE_THIS_VOLATILE (elt->type))\n-    {\n-      TREE_THIS_VOLATILE (var) = 1;\n-      TREE_SIDE_EFFECTS (var) = 1;\n-    }\n-\n   if (DECL_NAME (base) && !DECL_IGNORED_P (base))\n     {\n       char *pretty_name = build_element_name (elt);"}]}