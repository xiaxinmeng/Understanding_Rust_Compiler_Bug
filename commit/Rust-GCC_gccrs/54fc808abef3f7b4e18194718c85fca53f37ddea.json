{"sha": "54fc808abef3f7b4e18194718c85fca53f37ddea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRmYzgwOGFiZWYzZjdiNGUxODE5NDcxOGM4NWZjYTUzZjM3ZGRlYQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-11-25T04:47:54Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-11-25T04:47:54Z"}, "message": "graphite-sese-to-poly.c (struct irp_data): Removed.\n\n2009-09-14  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-sese-to-poly.c (struct irp_data): Removed.\n\t(idx_record_params): Removed.\n\t(find_params_in_bb): Scan for parameters the access functions; don't\n\tparse the tree representation.\n\nFrom-SVN: r154547", "tree": {"sha": "c87098b3b8193d579cd474dc07b74a455f989fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c87098b3b8193d579cd474dc07b74a455f989fea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54fc808abef3f7b4e18194718c85fca53f37ddea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54fc808abef3f7b4e18194718c85fca53f37ddea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54fc808abef3f7b4e18194718c85fca53f37ddea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54fc808abef3f7b4e18194718c85fca53f37ddea/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dd2c57b1854636d5efa6f93bb92366181146e21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dd2c57b1854636d5efa6f93bb92366181146e21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dd2c57b1854636d5efa6f93bb92366181146e21"}], "stats": {"total": 67, "additions": 17, "deletions": 50}, "files": [{"sha": "41081893e86749f717bd241dc1e1b0a1f56e8fdf", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54fc808abef3f7b4e18194718c85fca53f37ddea/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54fc808abef3f7b4e18194718c85fca53f37ddea/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=54fc808abef3f7b4e18194718c85fca53f37ddea", "patch": "@@ -1,3 +1,10 @@\n+2009-09-14  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (struct irp_data): Removed.\n+\t(idx_record_params): Removed.\n+\t(find_params_in_bb): Scan for parameters the access functions; don't\n+\tparse the tree representation.\n+\n 2009-09-14  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-ssa-loop.c (gate_graphite_transforms): Disable Graphite"}, {"sha": "fff25f10f86d96e046bd0ef33825b60acda8b2f1", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 10, "deletions": 50, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54fc808abef3f7b4e18194718c85fca53f37ddea/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54fc808abef3f7b4e18194718c85fca53f37ddea/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=54fc808abef3f7b4e18194718c85fca53f37ddea", "patch": "@@ -955,80 +955,40 @@ scan_tree_for_params (sese s, tree e, ppl_Linear_Expression_t c,\n     }\n }\n \n-/* Data structure for idx_record_params.  */\n-\n-struct irp_data\n-{\n-  struct loop *loop;\n-  sese region;\n-};\n-\n-/* For a data reference with an ARRAY_REF as its BASE, record the\n-   parameters occurring in IDX.  DTA is passed in as complementary\n-   information, and is used by the automatic walker function.  This\n-   function is a callback for for_each_index.  */\n-\n-static bool\n-idx_record_params (tree base, tree *idx, void *dta)\n-{\n-  struct irp_data *data = (struct irp_data *) dta;\n-\n-  if (TREE_CODE (base) != ARRAY_REF)\n-    return true;\n-\n-  if (TREE_CODE (*idx) == SSA_NAME)\n-    {\n-      tree scev;\n-      sese region = data->region;\n-      struct loop *loop = data->loop;\n-      Value one;\n-\n-      scev = scalar_evolution_in_region (region, loop, *idx);\n-\n-      value_init (one);\n-      value_set_si (one, 1);\n-      scan_tree_for_params (region, scev, NULL, one);\n-      value_clear (one);\n-    }\n-\n-  return true;\n-}\n-\n /* Find parameters with respect to REGION in BB. We are looking in memory\n    access functions, conditions and loop bounds.  */\n \n static void\n find_params_in_bb (sese region, gimple_bb_p gbb)\n {\n   int i;\n+  unsigned j;\n   data_reference_p dr;\n   gimple stmt;\n   loop_p loop = GBB_BB (gbb)->loop_father;\n+  Value one;\n \n-  for (i = 0; VEC_iterate (data_reference_p, GBB_DATA_REFS (gbb), i, dr); i++)\n-    {\n-      struct irp_data irp;\n+  value_init (one);\n+  value_set_si (one, 1);\n \n-      irp.loop = loop;\n-      irp.region = region;\n-      for_each_index (&dr->ref, idx_record_params, &irp);\n-    }\n+  /* Find parameters in the access functions of data references.  */\n+  for (i = 0; VEC_iterate (data_reference_p, GBB_DATA_REFS (gbb), i, dr); i++)\n+    for (j = 0; j < DR_NUM_DIMENSIONS (dr); j++)\n+      scan_tree_for_params (region, DR_ACCESS_FN (dr, j), NULL, one);\n \n   /* Find parameters in conditional statements.  */\n   for (i = 0; VEC_iterate (gimple, GBB_CONDITIONS (gbb), i, stmt); i++)\n     {\n-      Value one;\n       tree lhs = scalar_evolution_in_region (region, loop,\n \t\t\t\t\t     gimple_cond_lhs (stmt));\n       tree rhs = scalar_evolution_in_region (region, loop,\n \t\t\t\t\t     gimple_cond_rhs (stmt));\n \n-      value_init (one);\n-      value_set_si (one, 1);\n       scan_tree_for_params (region, lhs, NULL, one);\n       scan_tree_for_params (region, rhs, NULL, one);\n-      value_clear (one);\n     }\n+\n+  value_clear (one);\n }\n \n /* Record the parameters used in the SCOP.  A variable is a parameter"}]}