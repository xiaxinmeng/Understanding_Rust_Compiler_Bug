{"sha": "7754ee35771c049bf48b1bf8d8da4c5d19209866", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc1NGVlMzU3NzFjMDQ5YmY0OGIxYmY4ZDhkYTRjNWQxOTIwOTg2Ng==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2017-04-18T18:10:27Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2017-04-18T18:10:27Z"}, "message": "revert: Makefile.in (BUILD_SYSTEM_HEADER_DIR): New make variabe.\n\n2017-04-18  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        Revert:\n        2017-02-20  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n        * Makefile.in (BUILD_SYSTEM_HEADER_DIR): New make variabe.\n        (LIMITS_H_TEST, if_multiarch, stmp-fixinc): Use BUILD_SYSTEM_HEADER_DIR\n        instead of SYSTEM_HEADER_DIR.\n\nFrom-SVN: r246979", "tree": {"sha": "fd6927f528bfaeeac68b763c3fb625a9092651e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd6927f528bfaeeac68b763c3fb625a9092651e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7754ee35771c049bf48b1bf8d8da4c5d19209866", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7754ee35771c049bf48b1bf8d8da4c5d19209866", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7754ee35771c049bf48b1bf8d8da4c5d19209866", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7754ee35771c049bf48b1bf8d8da4c5d19209866/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd68669b66008ab4d8af324b1db3f187133e746b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd68669b66008ab4d8af324b1db3f187133e746b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd68669b66008ab4d8af324b1db3f187133e746b"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "621ec58f1e12e6534716438b82c0a5842060e81e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7754ee35771c049bf48b1bf8d8da4c5d19209866/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7754ee35771c049bf48b1bf8d8da4c5d19209866/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7754ee35771c049bf48b1bf8d8da4c5d19209866", "patch": "@@ -1,3 +1,11 @@\n+2017-04-18  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tRevert:\n+\t2017-02-20  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\t* Makefile.in (BUILD_SYSTEM_HEADER_DIR): New make variabe.\n+\t(LIMITS_H_TEST, if_multiarch, stmp-fixinc): Use BUILD_SYSTEM_HEADER_DIR\n+\tinstead of SYSTEM_HEADER_DIR.\n+\n 2017-04-18  Jeff Law  <law@redhat.com>\n \n \tPR middle-end/80422"}, {"sha": "74d191207d7996b4d61853721f89d34bcac91795", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7754ee35771c049bf48b1bf8d8da4c5d19209866/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7754ee35771c049bf48b1bf8d8da4c5d19209866/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7754ee35771c049bf48b1bf8d8da4c5d19209866", "patch": "@@ -517,18 +517,11 @@ CROSS_SYSTEM_HEADER_DIR = @CROSS_SYSTEM_HEADER_DIR@\n # macro is also used in a double-quoted context.\n SYSTEM_HEADER_DIR = `echo @SYSTEM_HEADER_DIR@ | sed -e :a -e 's,[^/]*/\\.\\.\\/,,' -e ta`\n \n-# Path to the system headers on the build machine\n-ifeq ($(build),$(host))\n-BUILD_SYSTEM_HEADER_DIR = $(SYSTEM_HEADER_DIR)\n-else\n-BUILD_SYSTEM_HEADER_DIR = `echo $(CROSS_SYSTEM_HEADER_DIR) | sed -e :a -e 's,[^/]*/\\.\\.\\/,,' -e ta`\n-endif\n-\n # Control whether to run fixincludes.\n STMP_FIXINC = @STMP_FIXINC@\n \n # Test to see whether <limits.h> exists in the system header files.\n-LIMITS_H_TEST = [ -f $(BUILD_SYSTEM_HEADER_DIR)/limits.h ]\n+LIMITS_H_TEST = [ -f $(SYSTEM_HEADER_DIR)/limits.h ]\n \n # Directory for prefix to system directories, for\n # each of $(system_prefix)/usr/include, $(system_prefix)/usr/lib, etc.\n@@ -579,7 +572,7 @@ ifeq ($(enable_multiarch),yes)\n else\n   ifeq ($(enable_multiarch),auto)\n     # SYSTEM_HEADER_DIR is makefile syntax, cannot be evaluated in configure.ac\n-    if_multiarch = $(if $(wildcard $(shell echo $(BUILD_SYSTEM_HEADER_DIR))/../../usr/lib/*/crti.o),$(1))\n+    if_multiarch = $(if $(wildcard $(shell echo $(SYSTEM_HEADER_DIR))/../../usr/lib/*/crti.o),$(1))\n   else\n     if_multiarch =\n   endif\n@@ -2999,11 +2992,11 @@ stmp-fixinc: gsyslimits.h macro_list fixinc_list \\\n \t    sysroot_headers_suffix=`echo $${ml} | sed -e 's/;.*$$//'`; \\\n \t    multi_dir=`echo $${ml} | sed -e 's/^[^;]*;//'`; \\\n \t    fix_dir=include-fixed$${multi_dir}; \\\n-\t    if ! $(inhibit_libc) && test ! -d ${BUILD_SYSTEM_HEADER_DIR}; then \\\n+\t    if ! $(inhibit_libc) && test ! -d ${SYSTEM_HEADER_DIR}; then \\\n \t      echo The directory that should contain system headers does not exist: >&2 ; \\\n-\t      echo \"  ${BUILD_SYSTEM_HEADER_DIR}\" >&2 ; \\\n+\t      echo \"  ${SYSTEM_HEADER_DIR}\" >&2 ; \\\n \t      tooldir_sysinc=`echo \"${gcc_tooldir}/sys-include\" | sed -e :a -e \"s,[^/]*/\\.\\.\\/,,\" -e ta`; \\\n-\t      if test \"x${BUILD_SYSTEM_HEADER_DIR}\" = \"x$${tooldir_sysinc}\"; \\\n+\t      if test \"x${SYSTEM_HEADER_DIR}\" = \"x$${tooldir_sysinc}\"; \\\n \t      then sleep 1; else exit 1; fi; \\\n \t    fi; \\\n \t    $(mkinstalldirs) $${fix_dir}; \\\n@@ -3014,7 +3007,7 @@ stmp-fixinc: gsyslimits.h macro_list fixinc_list \\\n \t      export TARGET_MACHINE srcdir SHELL MACRO_LIST && \\\n \t      cd $(build_objdir)/fixincludes && \\\n \t      $(SHELL) ./fixinc.sh \"$${gcc_dir}/$${fix_dir}\" \\\n-\t        $(BUILD_SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS) ); \\\n+\t        $(SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS) ); \\\n \t    rm -f $${fix_dir}/syslimits.h; \\\n \t    if [ -f $${fix_dir}/limits.h ]; then \\\n \t      mv $${fix_dir}/limits.h $${fix_dir}/syslimits.h; \\"}]}