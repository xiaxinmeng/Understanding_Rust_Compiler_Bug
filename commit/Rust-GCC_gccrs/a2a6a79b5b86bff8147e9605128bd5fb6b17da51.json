{"sha": "a2a6a79b5b86bff8147e9605128bd5fb6b17da51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJhNmE3OWI1Yjg2YmZmODE0N2U5NjA1MTI4YmQ1ZmI2YjE3ZGE1MQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2003-05-13T16:23:02Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-05-13T16:23:02Z"}, "message": "varasm.c (notice_rtl_inlining_of_deferred_constant): New function.\n\n\t* varasm.c (notice_rtl_inlining_of_deferred_constant): New function.\n\t* rtl.h: Prototype it.\n\t* integrate.c (copy_rtx_and_substitute <SYMBOL_REF>): Call it\n\twhen appropriate.\n\nFrom-SVN: r66762", "tree": {"sha": "79d7aaa209003c98bf084900f1edde07ad8b22a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79d7aaa209003c98bf084900f1edde07ad8b22a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2a6a79b5b86bff8147e9605128bd5fb6b17da51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a6a79b5b86bff8147e9605128bd5fb6b17da51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2a6a79b5b86bff8147e9605128bd5fb6b17da51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a6a79b5b86bff8147e9605128bd5fb6b17da51/comments", "author": null, "committer": null, "parents": [{"sha": "c707d0b01aa015928fb340f548ff7eee81403a97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c707d0b01aa015928fb340f548ff7eee81403a97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c707d0b01aa015928fb340f548ff7eee81403a97"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "f3059a2298a040a94e2547b28b369acd28d5318b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a6a79b5b86bff8147e9605128bd5fb6b17da51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a6a79b5b86bff8147e9605128bd5fb6b17da51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2a6a79b5b86bff8147e9605128bd5fb6b17da51", "patch": "@@ -1,3 +1,10 @@\n+2003-05-13  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* varasm.c (notice_rtl_inlining_of_deferred_constant): New function.\n+\t* rtl.h: Prototype it.\n+\t* integrate.c (copy_rtx_and_substitute <SYMBOL_REF>): Call it\n+\twhen appropriate.\n+\n 2003-05-13  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.md (\"*iordi3_oi\"): Do not mark commutative."}, {"sha": "c150dcbd709ef309ac9e2ce09961b7e32af3601c", "filename": "gcc/integrate.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a6a79b5b86bff8147e9605128bd5fb6b17da51/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a6a79b5b86bff8147e9605128bd5fb6b17da51/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=a2a6a79b5b86bff8147e9605128bd5fb6b17da51", "patch": "@@ -2215,6 +2215,8 @@ copy_rtx_and_substitute (orig, map, for_lhs)\n \t\t\t  copy_rtx_and_substitute (constant, map, for_lhs)),\n \t\t\t 0);\n \t}\n+      else if (DEFERRED_CONSTANT_P (orig) && inlining)\n+\tnotice_rtl_inlining_of_deferred_constant ();\n \n       return orig;\n "}, {"sha": "431b0dd4daffebeba39b7776d7715d68a72ce12d", "filename": "gcc/rtl.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a6a79b5b86bff8147e9605128bd5fb6b17da51/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a6a79b5b86bff8147e9605128bd5fb6b17da51/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=a2a6a79b5b86bff8147e9605128bd5fb6b17da51", "patch": "@@ -1945,6 +1945,9 @@ extern rtx find_next_ref\t\tPARAMS ((rtx, rtx));\n \n extern rtx output_constant_def\t\tPARAMS ((tree, int));\n \n+/* Called from integrate.c when a deferred constant is inlined.  */\n+extern void notice_rtl_inlining_of_deferred_constant PARAMS ((void));\n+\n /* Define a default value for STORE_FLAG_VALUE.  */\n \n #ifndef STORE_FLAG_VALUE"}, {"sha": "811aa388d036006284bab782f72986ee33db1677", "filename": "gcc/varasm.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a6a79b5b86bff8147e9605128bd5fb6b17da51/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a6a79b5b86bff8147e9605128bd5fb6b17da51/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=a2a6a79b5b86bff8147e9605128bd5fb6b17da51", "patch": "@@ -2672,6 +2672,15 @@ output_constant_def_contents (symbol)\n \t\t   align);\n \n }\n+\n+/* A constant which was deferred in its original location has been\n+   inserted by the RTL inliner into a different function.  The\n+   current function's deferred constant count must be incremented.  */\n+void\n+notice_rtl_inlining_of_deferred_constant ()\n+{\n+  n_deferred_constants++;\n+}\n \f\n /* Used in the hash tables to avoid outputting the same constant\n    twice.  Unlike 'struct constant_descriptor_tree', RTX constants"}]}