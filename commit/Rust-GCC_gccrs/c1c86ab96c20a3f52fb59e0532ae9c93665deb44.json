{"sha": "c1c86ab96c20a3f52fb59e0532ae9c93665deb44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFjODZhYjk2YzIwYTNmNTJmYjU5ZTA1MzJhZTljOTM2NjVkZWI0NA==", "commit": {"author": {"name": "Jos\u00e9 Rui Faustino de Sousa", "email": "jrfsousa@gmail.com", "date": "2021-04-16T23:33:04Z"}, "committer": {"name": "Jos\u00e9 Rui Faustino de Sousa", "email": "jrfsousa@gmail.com", "date": "2021-04-16T23:33:04Z"}, "message": "Fortran: Add missing TKR initialization [PR100094]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/100094\n\t* trans-array.c (gfc_trans_deferred_array): Add code to initialize\n\tpointers and allocatables with correct TKR parameters.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/100094\n\t* gfortran.dg/PR100094.f90: New test.", "tree": {"sha": "27842478af4e82e6d6fee2319067e7078eddace6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27842478af4e82e6d6fee2319067e7078eddace6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1c86ab96c20a3f52fb59e0532ae9c93665deb44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c86ab96c20a3f52fb59e0532ae9c93665deb44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1c86ab96c20a3f52fb59e0532ae9c93665deb44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c86ab96c20a3f52fb59e0532ae9c93665deb44/comments", "author": {"login": "jrfsousa", "id": 56982651, "node_id": "MDQ6VXNlcjU2OTgyNjUx", "avatar_url": "https://avatars.githubusercontent.com/u/56982651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrfsousa", "html_url": "https://github.com/jrfsousa", "followers_url": "https://api.github.com/users/jrfsousa/followers", "following_url": "https://api.github.com/users/jrfsousa/following{/other_user}", "gists_url": "https://api.github.com/users/jrfsousa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrfsousa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrfsousa/subscriptions", "organizations_url": "https://api.github.com/users/jrfsousa/orgs", "repos_url": "https://api.github.com/users/jrfsousa/repos", "events_url": "https://api.github.com/users/jrfsousa/events{/privacy}", "received_events_url": "https://api.github.com/users/jrfsousa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jrfsousa", "id": 56982651, "node_id": "MDQ6VXNlcjU2OTgyNjUx", "avatar_url": "https://avatars.githubusercontent.com/u/56982651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrfsousa", "html_url": "https://github.com/jrfsousa", "followers_url": "https://api.github.com/users/jrfsousa/followers", "following_url": "https://api.github.com/users/jrfsousa/following{/other_user}", "gists_url": "https://api.github.com/users/jrfsousa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrfsousa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrfsousa/subscriptions", "organizations_url": "https://api.github.com/users/jrfsousa/orgs", "repos_url": "https://api.github.com/users/jrfsousa/repos", "events_url": "https://api.github.com/users/jrfsousa/events{/privacy}", "received_events_url": "https://api.github.com/users/jrfsousa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0754a104bed7c8a937f0623ad15ca03387131210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0754a104bed7c8a937f0623ad15ca03387131210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0754a104bed7c8a937f0623ad15ca03387131210"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "e99980fd2233f8ac776bac0122f116556b5c207c", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c86ab96c20a3f52fb59e0532ae9c93665deb44/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c86ab96c20a3f52fb59e0532ae9c93665deb44/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=c1c86ab96c20a3f52fb59e0532ae9c93665deb44", "patch": "@@ -10874,6 +10874,20 @@ gfc_trans_deferred_array (gfc_symbol * sym, gfc_wrapped_block * block)\n \t}\n     }\n \n+  /* Set initial TKR for pointers and allocatables */\n+  if (GFC_DESCRIPTOR_TYPE_P (type)\n+      && (sym->attr.pointer || sym->attr.allocatable))\n+    {\n+      tree etype;\n+\n+      gcc_assert (sym->as && sym->as->rank>=0);\n+      tmp = gfc_conv_descriptor_dtype (descriptor);\n+      etype = gfc_get_element_type (type);\n+      tmp = fold_build2_loc (input_location, MODIFY_EXPR,\n+  \t\t\t     TREE_TYPE (tmp), tmp,\n+  \t\t\t     gfc_get_dtype_rank_type (sym->as->rank, etype));\n+      gfc_add_expr_to_block (&init, tmp);\n+    }\n   gfc_restore_backend_locus (&loc);\n   gfc_init_block (&cleanup);\n "}, {"sha": "f2f7f1631dcf60adb0035a9adf210ece4069efb0", "filename": "gcc/testsuite/gfortran.dg/PR100094.f90", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c86ab96c20a3f52fb59e0532ae9c93665deb44/gcc%2Ftestsuite%2Fgfortran.dg%2FPR100094.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c86ab96c20a3f52fb59e0532ae9c93665deb44/gcc%2Ftestsuite%2Fgfortran.dg%2FPR100094.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FPR100094.f90?ref=c1c86ab96c20a3f52fb59e0532ae9c93665deb44", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do run }\n+!\n+! Test the fix for PR100094\n+!\n+\n+program foo_p\n+\n+  implicit none\n+\n+  integer, parameter :: n = 11\n+  \n+  integer, pointer :: pout(:)\n+  integer,  target :: a(n)\n+  integer          :: i\n+  \n+  a = [(i, i=1,n)]\n+  call foo(pout)\n+  if(.not.associated(pout)) stop 1\n+  if(.not.associated(pout, a)) stop 2\n+  if(any(pout/=a)) stop 3\n+  stop\n+\n+contains\n+\n+  subroutine foo(that)\n+    integer, pointer, intent(out) :: that(..)\n+\n+    select rank(that)\n+    rank(1)\n+      that => a\n+    rank default\n+      stop 4\n+    end select\n+    return\n+  end subroutine foo\n+\n+end program foo_p"}]}