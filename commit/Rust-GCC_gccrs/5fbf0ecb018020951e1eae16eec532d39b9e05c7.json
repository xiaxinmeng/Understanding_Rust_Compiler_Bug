{"sha": "5fbf0ecb018020951e1eae16eec532d39b9e05c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZiZjBlY2IwMTgwMjA5NTFlMWVhZTE2ZWVjNTMyZDM5YjllMDVjNw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-11-29T00:16:22Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-11-29T00:16:22Z"}, "message": "Daily bump.", "tree": {"sha": "f201e57474a7e3a720b63e760c1d910708bd254c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f201e57474a7e3a720b63e760c1d910708bd254c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fbf0ecb018020951e1eae16eec532d39b9e05c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fbf0ecb018020951e1eae16eec532d39b9e05c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fbf0ecb018020951e1eae16eec532d39b9e05c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fbf0ecb018020951e1eae16eec532d39b9e05c7/comments", "author": null, "committer": null, "parents": [{"sha": "8e59ff5541889817a160afda130bcbcdb70c4b90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e59ff5541889817a160afda130bcbcdb70c4b90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e59ff5541889817a160afda130bcbcdb70c4b90"}], "stats": {"total": 69, "additions": 68, "deletions": 1}, "files": [{"sha": "2b87342b2720a9380cc8538359665460bfa86fe1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fbf0ecb018020951e1eae16eec532d39b9e05c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fbf0ecb018020951e1eae16eec532d39b9e05c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fbf0ecb018020951e1eae16eec532d39b9e05c7", "patch": "@@ -1,3 +1,41 @@\n+2020-11-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/97939\n+\t* config/sparc/predicates.md (arith_double_add_operand): Comment.\n+\t* config/sparc/sparc.md (uaddvdi4): Use arith_double_operand.\n+\t(addvdi4): Use arith_double_add_operand.\n+\t(addsi3): Remove useless attributes.\n+\t(addvsi4): Use arith_add_operand.\n+\t(*cmp_ccv_plus): Likewise and add second alternative accordingly.\n+\t(*cmp_ccxv_plus): Likewise.\n+\t(*cmp_ccv_plus_set): Likewise.\n+\t(*cmp_ccxv_plus_set): Likewise.\n+\t(*cmp_ccv_plus_sltu_set): Likewise.\n+\t(usubvdi4): Use arith_double_operand.\n+\t(subvdi4): Use arith_double_add_operand.\n+\t(subsi3): Remove useless attributes.\n+\t(subvsi4): Use arith_add_operand.\n+\t(*cmp_ccv_minus): Likewise and add second alternative accordingly.\n+\t(*cmp_ccxv_minus): Likewise.\n+\t(*cmp_ccv_minus_set): Likewise.\n+\t(*cmp_ccxv_minus_set): Likewise.\n+\t(*cmp_ccv_minus_sltu_set): Likewise.\n+\t(negsi2): Use register_operand.\n+\t(unegvsi3): Likewise.\n+\t(negvsi3) Likewise.\n+\t(*cmp_ccnz_neg): Likewise.\n+\t(*cmp_ccxnz_neg): Likewise.\n+\t(*cmp_ccnz_neg_set): Likewise.\n+\t(*cmp_ccxnz_neg_set): Likewise.\n+\t(*cmp_ccc_neg_set): Likewise.\n+\t(*cmp_ccxc_neg_set): Likewise.\n+\t(*cmp_ccc_neg_sltu_set): Likewise.\n+\t(*cmp_ccv_neg): Likewise.\n+\t(*cmp_ccxv_neg): Likewise.\n+\t(*cmp_ccv_neg_set): Likewise.\n+\t(*cmp_ccxv_neg_set): Likewise.\n+\t(*cmp_ccv_neg_sltu_set): Likewise.\n+\n 2020-11-27  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR other/98027"}, {"sha": "2504b485b3ecd87718e90c131e49d54b31d5c5a8", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fbf0ecb018020951e1eae16eec532d39b9e05c7/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fbf0ecb018020951e1eae16eec532d39b9e05c7/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=5fbf0ecb018020951e1eae16eec532d39b9e05c7", "patch": "@@ -1 +1 @@\n-20201128\n+20201129"}, {"sha": "4d966997957dfa9b15a0489673f64aec7daedaca", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fbf0ecb018020951e1eae16eec532d39b9e05c7/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fbf0ecb018020951e1eae16eec532d39b9e05c7/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=5fbf0ecb018020951e1eae16eec532d39b9e05c7", "patch": "@@ -1,3 +1,10 @@\n+2020-11-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* c-ada-spec.c (dump_nested_type) <RECORD_TYPE>: Remove obsolete code.\n+\t(dump_ada_structure): Also deal with convention, unchecked union and\n+\tbit-field for nested types.  In the latter case, print an Alignment\n+\taspect along with the Pack aspect.\n+\n 2020-11-25  Martin Sebor  <msebor@redhat.com>\n \n \tPR bootstrap/94982"}, {"sha": "e2635821a077d68fcaab133d12ef0c7802541b80", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fbf0ecb018020951e1eae16eec532d39b9e05c7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fbf0ecb018020951e1eae16eec532d39b9e05c7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5fbf0ecb018020951e1eae16eec532d39b9e05c7", "patch": "@@ -1,3 +1,21 @@\n+2020-11-28  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/97454\n+\t* trans-decl.c (gfc_get_extern_function_decl): Add argument\n+\tfnspec.\n+\t* trans-intrinsic.c (MAX_SPEC_ARG): Define.\n+\t(intrinsic_fnspec): New function.\n+\t(ADD_CHAR): Define.\n+\t(specific_intrinsic_symbol): Adjust comment. Pass\n+\tfn spec to gfc_get_extern_function_decl.\n+\t(gfc_conv_intrinsic_funcall): Add ANY, ALL, NORM2, PRODUCT\n+\tand SUM intrnisic. Add FIXME for cshift et al.\n+\t* trans-types.c\t(gfc_get_function_type): Add fnspec argument,\n+\thandle it.\n+\t* trans-types.h (gfc_get_function_type): Add optinal fnspec\n+\targument.\n+\t* trans.h (gfc_get_extern_function_decl): Likewise.\n+\n 2020-11-25  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/85796"}, {"sha": "565ea9a99012673c0dfa7f2d3dd6d2b7dab42340", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fbf0ecb018020951e1eae16eec532d39b9e05c7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fbf0ecb018020951e1eae16eec532d39b9e05c7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5fbf0ecb018020951e1eae16eec532d39b9e05c7", "patch": "@@ -1,3 +1,7 @@\n+2020-11-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.target/sparc/overflow-6.c: New test.\n+\n 2020-11-27  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR preprocessor/97602"}]}