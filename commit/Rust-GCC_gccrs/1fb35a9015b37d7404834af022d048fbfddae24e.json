{"sha": "1fb35a9015b37d7404834af022d048fbfddae24e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZiMzVhOTAxNWIzN2Q3NDA0ODM0YWYwMjJkMDQ4ZmJmZGRhZTI0ZQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T20:28:58Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T20:28:58Z"}, "message": "trans-array.c (gfc_trans_preloop_setup): Move array reference initialisation earlier.\n\n\n\t* trans-array.c (gfc_trans_preloop_setup): Move array reference\n\tinitialisation earlier. Factor subsequent array references.\n\nFrom-SVN: r180842", "tree": {"sha": "3c1c60dc851bd6aaf16a5bb6465b4425e95f801b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c1c60dc851bd6aaf16a5bb6465b4425e95f801b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fb35a9015b37d7404834af022d048fbfddae24e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fb35a9015b37d7404834af022d048fbfddae24e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fb35a9015b37d7404834af022d048fbfddae24e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fb35a9015b37d7404834af022d048fbfddae24e/comments", "author": null, "committer": null, "parents": [{"sha": "177b1d35350ce565dbf11253a803623f4514d3f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/177b1d35350ce565dbf11253a803623f4514d3f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/177b1d35350ce565dbf11253a803623f4514d3f7"}], "stats": {"total": 38, "additions": 21, "deletions": 17}, "files": [{"sha": "cf2222a7a364f4e09d912449381d5f7586da767e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fb35a9015b37d7404834af022d048fbfddae24e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fb35a9015b37d7404834af022d048fbfddae24e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1fb35a9015b37d7404834af022d048fbfddae24e", "patch": "@@ -1,3 +1,8 @@\n+2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (gfc_trans_preloop_setup): Move array reference\n+\tinitialisation earlier. Factor subsequent array references.\n+\n 2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* Makef-lang.in (gfortranspec.o): Pass SHLIB instead of SHLIB_LINK."}, {"sha": "4b21476d7d5a14321a37d16cada65aa94359c438", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fb35a9015b37d7404834af022d048fbfddae24e/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fb35a9015b37d7404834af022d048fbfddae24e/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=1fb35a9015b37d7404834af022d048fbfddae24e", "patch": "@@ -2842,6 +2842,7 @@ gfc_trans_preloop_setup (gfc_loopinfo * loop, int dim, int flag,\n   gfc_ss_info *info;\n   gfc_ss *ss;\n   gfc_se se;\n+  gfc_array_ref *ar;\n   int i;\n \n   /* This code will be executed before entering the scalarization loop\n@@ -2861,25 +2862,36 @@ gfc_trans_preloop_setup (gfc_loopinfo * loop, int dim, int flag,\n       if (dim >= info->dimen)\n \tcontinue;\n \n+      if (info->ref)\n+\t{\n+\t  ar = &info->ref->u.ar;\n+\t  i = loop->order[dim + 1];\n+\t}\n+      else\n+\t{\n+\t  ar = NULL;\n+\t  i = dim + 1;\n+\t}\n+\n+\n       if (dim == info->dimen - 1)\n \t{\n \t  /* For the outermost loop calculate the offset due to any\n \t     elemental dimensions.  It will have been initialized with the\n \t     base offset of the array.  */\n \t  if (info->ref)\n \t    {\n-\t      for (i = 0; i < info->ref->u.ar.dimen; i++)\n+\t      for (i = 0; i < ar->dimen; i++)\n \t\t{\n-\t\t  if (info->ref->u.ar.dimen_type[i] != DIMEN_ELEMENT)\n+\t\t  if (ar->dimen_type[i] != DIMEN_ELEMENT)\n \t\t    continue;\n \n \t\t  gfc_init_se (&se, NULL);\n \t\t  se.loop = loop;\n \t\t  se.expr = info->descriptor;\n \t\t  stride = gfc_conv_array_stride (info->descriptor, i);\n \t\t  index = gfc_conv_array_index_offset (&se, info, i, -1,\n-\t\t\t\t\t\t       &info->ref->u.ar,\n-\t\t\t\t\t\t       stride);\n+\t\t\t\t\t\t       ar, stride);\n \t\t  gfc_add_block_to_block (pblock, &se.pre);\n \n \t\t  info->offset = fold_build2_loc (input_location, PLUS_EXPR,\n@@ -2903,19 +2915,6 @@ gfc_trans_preloop_setup (gfc_loopinfo * loop, int dim, int flag,\n       else\n \t{\n \t  /* Add the offset for the previous loop dimension.  */\n-\t  gfc_array_ref *ar;\n-\n-\t  if (info->ref)\n-\t    {\n-\t      ar = &info->ref->u.ar;\n-\t      i = loop->order[dim + 1];\n-\t    }\n-\t  else\n-\t    {\n-\t      ar = NULL;\n-\t      i = dim + 1;\n-\t    }\n-\n \t  gfc_init_se (&se, NULL);\n \t  se.loop = loop;\n \t  se.expr = info->descriptor;"}]}