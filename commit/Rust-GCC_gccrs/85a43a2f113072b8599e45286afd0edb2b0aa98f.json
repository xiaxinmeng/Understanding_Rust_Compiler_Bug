{"sha": "85a43a2f113072b8599e45286afd0edb2b0aa98f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVhNDNhMmYxMTMwNzJiODU5OWU0NTI4NmFmZDBlZGIyYjBhYTk4Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2003-04-26T11:16:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-04-26T11:16:44Z"}, "message": "expr.c (store_field): When making temporary for store, don't make it TYPE_QUAL_CONST.\n\n\t* expr.c (store_field): When making temporary for store, don't\n\tmake it TYPE_QUAL_CONST.\n\nFrom-SVN: r66103", "tree": {"sha": "eda72672cde30b4f52d59e2ae9a239358052057f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eda72672cde30b4f52d59e2ae9a239358052057f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85a43a2f113072b8599e45286afd0edb2b0aa98f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a43a2f113072b8599e45286afd0edb2b0aa98f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85a43a2f113072b8599e45286afd0edb2b0aa98f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a43a2f113072b8599e45286afd0edb2b0aa98f/comments", "author": null, "committer": null, "parents": [{"sha": "c7f79b4cb298e12acd56406db24107614ac9a76b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f79b4cb298e12acd56406db24107614ac9a76b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7f79b4cb298e12acd56406db24107614ac9a76b"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "bc26bb5b81ccc8764ed766485cc8dbf53454e09b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a43a2f113072b8599e45286afd0edb2b0aa98f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a43a2f113072b8599e45286afd0edb2b0aa98f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85a43a2f113072b8599e45286afd0edb2b0aa98f", "patch": "@@ -1,3 +1,8 @@\n+2003-04-25  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* expr.c (store_field): When making temporary for store, don't\n+\tmake it TYPE_QUAL_CONST.\n+\n 2003-04-25  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* toplev.c (read_integral_parameter):  Use \"argument\" in error"}, {"sha": "6488a8088b38a8cf929937ab04b09be2766a5784", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a43a2f113072b8599e45286afd0edb2b0aa98f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a43a2f113072b8599e45286afd0edb2b0aa98f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=85a43a2f113072b8599e45286afd0edb2b0aa98f", "patch": "@@ -5528,15 +5528,13 @@ store_field (target, bitsize, bitpos, mode, exp, value_mode, unsignedp, type,\n      that object.  Finally, load from the object into TARGET.  This is not\n      very efficient in general, but should only be slightly more expensive\n      than the otherwise-required unaligned accesses.  Perhaps this can be\n-     cleaned up later.  */\n+     cleaned up later.  It's tempting to make OBJECT readonly, but it's set\n+     twice, once with emit_move_insn and once via store_field.  */\n \n   if (mode == BLKmode\n       && (GET_CODE (target) == REG || GET_CODE (target) == SUBREG))\n     {\n-      rtx object\n-\t= assign_temp\n-\t  (build_qualified_type (type, TYPE_QUALS (type) | TYPE_QUAL_CONST),\n-\t   0, 1, 1);\n+      rtx object = assign_temp (type, 0, 1, 1);\n       rtx blk_object = adjust_address (object, BLKmode, 0);\n \n       if (bitsize != (HOST_WIDE_INT) GET_MODE_BITSIZE (GET_MODE (target)))"}]}