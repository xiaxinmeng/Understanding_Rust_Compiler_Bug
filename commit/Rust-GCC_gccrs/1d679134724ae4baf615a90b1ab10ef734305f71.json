{"sha": "1d679134724ae4baf615a90b1ab10ef734305f71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ2NzkxMzQ3MjRhZTRiYWY2MTVhOTBiMWFiMTBlZjczNDMwNWY3MQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2019-02-19T09:24:50Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2019-02-19T09:24:50Z"}, "message": "Fix libphobos linking on Solaris 11\n\n\t* m4/druntime/libraries.m4 (DRUNTIME_LIBRARIES_NET): New macro.\n\t* configure.ac: Invoke it.\n\t* configure: Regenerate.\n\nFrom-SVN: r269012", "tree": {"sha": "f45e307344fd941d9c177fe1e694585763c1dac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f45e307344fd941d9c177fe1e694585763c1dac9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d679134724ae4baf615a90b1ab10ef734305f71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d679134724ae4baf615a90b1ab10ef734305f71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d679134724ae4baf615a90b1ab10ef734305f71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d679134724ae4baf615a90b1ab10ef734305f71/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0db1a7c2e9eec808d271c1ad5c326713f9816dd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db1a7c2e9eec808d271c1ad5c326713f9816dd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0db1a7c2e9eec808d271c1ad5c326713f9816dd3"}], "stats": {"total": 156, "additions": 156, "deletions": 0}, "files": [{"sha": "5279c891e55a102a2fb9033f1af3762bf14ed863", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d679134724ae4baf615a90b1ab10ef734305f71/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d679134724ae4baf615a90b1ab10ef734305f71/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=1d679134724ae4baf615a90b1ab10ef734305f71", "patch": "@@ -1,3 +1,9 @@\n+2019-02-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* m4/druntime/libraries.m4 (DRUNTIME_LIBRARIES_NET): New macro.\n+\t* configure.ac: Invoke it.\n+\t* configure: Regenerate.\n+\n 2019-02-19  Johannes Pfau  <johannespfau@gmail.com>\n \n \tPR d/88127"}, {"sha": "d86934b59a5d77528a450fd1e72ed07064151429", "filename": "libphobos/configure", "status": "modified", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d679134724ae4baf615a90b1ab10ef734305f71/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d679134724ae4baf615a90b1ab10ef734305f71/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=1d679134724ae4baf615a90b1ab10ef734305f71", "patch": "@@ -14749,6 +14749,121 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n fi\n \n \n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for socket libraries\" >&5\n+$as_echo_n \"checking for socket libraries... \" >&6; }\n+if ${druntime_cv_lib_sockets+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  druntime_cv_lib_sockets=\n+     druntime_check_both=no\n+     ac_fn_c_check_func \"$LINENO\" \"connect\" \"ac_cv_func_connect\"\n+if test \"x$ac_cv_func_connect\" = xyes; then :\n+  druntime_check_socket=no\n+else\n+  druntime_check_socket=yes\n+fi\n+\n+     if test \"$druntime_check_socket\" = \"yes\"; then\n+       unset ac_cv_func_connect\n+       { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for main in -lsocket\" >&5\n+$as_echo_n \"checking for main in -lsocket... \" >&6; }\n+if ${ac_cv_lib_socket_main+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lsocket  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+\n+int\n+main ()\n+{\n+return main ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_socket_main=yes\n+else\n+  ac_cv_lib_socket_main=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_socket_main\" >&5\n+$as_echo \"$ac_cv_lib_socket_main\" >&6; }\n+if test \"x$ac_cv_lib_socket_main\" = xyes; then :\n+  druntime_cv_lib_sockets=\"-lsocket\"\n+else\n+  druntime_check_both=yes\n+fi\n+\n+     fi\n+     if test \"$druntime_check_both\" = \"yes\"; then\n+       druntime_old_libs=$LIBS\n+       LIBS=\"$LIBS -lsocket -lnsl\"\n+       unset ac_cv_func_accept\n+       ac_fn_c_check_func \"$LINENO\" \"accept\" \"ac_cv_func_accept\"\n+if test \"x$ac_cv_func_accept\" = xyes; then :\n+  druntime_check_nsl=no\n+\t\t      druntime_cv_lib_sockets=\"-lsocket -lnsl\"\n+fi\n+\n+       unset ac_cv_func_accept\n+       LIBS=$druntime_old_libs\n+     fi\n+     unset ac_cv_func_gethostbyname\n+     druntime_old_libs=\"$LIBS\"\n+     ac_fn_c_check_func \"$LINENO\" \"gethostbyname\" \"ac_cv_func_gethostbyname\"\n+if test \"x$ac_cv_func_gethostbyname\" = xyes; then :\n+\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for main in -lnsl\" >&5\n+$as_echo_n \"checking for main in -lnsl... \" >&6; }\n+if ${ac_cv_lib_nsl_main+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lnsl  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+\n+int\n+main ()\n+{\n+return main ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_nsl_main=yes\n+else\n+  ac_cv_lib_nsl_main=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_nsl_main\" >&5\n+$as_echo \"$ac_cv_lib_nsl_main\" >&6; }\n+if test \"x$ac_cv_lib_nsl_main\" = xyes; then :\n+  druntime_cv_lib_sockets=\"$druntime_cv_lib_sockets -lnsl\"\n+fi\n+\n+fi\n+\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $druntime_cv_lib_sockets\" >&5\n+$as_echo \"$druntime_cv_lib_sockets\" >&6; }\n+  LIBS=\"$LIBS $druntime_cv_lib_sockets\"\n+\n+\n \n # Check whether --with-target-system-zlib was given.\n if test \"${with_target_system_zlib+set}\" = set; then :"}, {"sha": "96010333a39410f31ef2d46aa17650f26cd0605f", "filename": "libphobos/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d679134724ae4baf615a90b1ab10ef734305f71/libphobos%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d679134724ae4baf615a90b1ab10ef734305f71/libphobos%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.ac?ref=1d679134724ae4baf615a90b1ab10ef734305f71", "patch": "@@ -141,6 +141,7 @@ WITH_LOCAL_DRUNTIME([\n DRUNTIME_LIBRARIES_ATOMIC\n DRUNTIME_LIBRARIES_BACKTRACE\n DRUNTIME_LIBRARIES_DLOPEN\n+DRUNTIME_LIBRARIES_NET\n DRUNTIME_LIBRARIES_ZLIB\n DRUNTIME_INSTALL_DIRECTORIES\n "}, {"sha": "41c888066bcd3c0f7ee09f28fcf14e0d9bb22352", "filename": "libphobos/m4/druntime/libraries.m4", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d679134724ae4baf615a90b1ab10ef734305f71/libphobos%2Fm4%2Fdruntime%2Flibraries.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d679134724ae4baf615a90b1ab10ef734305f71/libphobos%2Fm4%2Fdruntime%2Flibraries.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fm4%2Fdruntime%2Flibraries.m4?ref=1d679134724ae4baf615a90b1ab10ef734305f71", "patch": "@@ -42,6 +42,40 @@ AC_DEFUN([DRUNTIME_LIBRARIES_DLOPEN],\n ])\n \n \n+# DRUNTIME_LIBRARIES_NET\n+# -----------------------\n+# Autodetect and add networking library to LIBS if necessary.\n+AC_DEFUN([DRUNTIME_LIBRARIES_NET],\n+[\n+  dnl Test for -lsocket and -lnsl.  Copied from libjava/configure.ac.\n+  AC_CACHE_CHECK([for socket libraries], druntime_cv_lib_sockets,\n+    [druntime_cv_lib_sockets=\n+     druntime_check_both=no\n+     AC_CHECK_FUNC(connect, druntime_check_socket=no, druntime_check_socket=yes)\n+     if test \"$druntime_check_socket\" = \"yes\"; then\n+       unset ac_cv_func_connect\n+       AC_CHECK_LIB(socket, main, druntime_cv_lib_sockets=\"-lsocket\",\n+\t\t    druntime_check_both=yes)\n+     fi\n+     if test \"$druntime_check_both\" = \"yes\"; then\n+       druntime_old_libs=$LIBS\n+       LIBS=\"$LIBS -lsocket -lnsl\"\n+       unset ac_cv_func_accept\n+       AC_CHECK_FUNC(accept,\n+\t\t     [druntime_check_nsl=no\n+\t\t      druntime_cv_lib_sockets=\"-lsocket -lnsl\"])\n+       unset ac_cv_func_accept\n+       LIBS=$druntime_old_libs\n+     fi\n+     unset ac_cv_func_gethostbyname\n+     druntime_old_libs=\"$LIBS\"\n+     AC_CHECK_FUNC(gethostbyname, ,\n+\t\t   [AC_CHECK_LIB(nsl, main,\n+\t\t    [druntime_cv_lib_sockets=\"$druntime_cv_lib_sockets -lnsl\"])])\n+  ])\n+  LIBS=\"$LIBS $druntime_cv_lib_sockets\"\n+])\n+\n # DRUNTIME_LIBRARIES_ZLIB\n # -----------------------\n # Allow specifying whether to use the system zlib or"}]}