{"sha": "27736735f6fcba464b90c3a9dff13b7e5c8bdc6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc3MzY3MzVmNmZjYmE0NjRiOTBjM2E5ZGZmMTNiN2U1YzhiZGM2ZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-02-05T08:56:31Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-02-05T08:56:31Z"}, "message": "Do not load body for alias symbols.\n\n\tPR lto/93489\n\t* lto-dump.c (dump_list_functions): Do not\n\tload body for aliases.\n\t(dump_body): Likewise here.", "tree": {"sha": "ce9e6d8b5479ef66bc5fc41ecc9da6eb5d5ca8a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce9e6d8b5479ef66bc5fc41ecc9da6eb5d5ca8a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27736735f6fcba464b90c3a9dff13b7e5c8bdc6e", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl46gz8ACgkQTcGC3A+n\nN4WfiggAw9vEiM/AZj16oMHJxJPFZnjkuqIat+ZmDwz/9PYxKr54zFZU7cY4rXHk\nxWYeSTUZC4+26ELQmODO/OFlwaXoePgOHqJ8eEE8LHyEEaZUKppLJz2QKdAEz4Ho\n+wJ1C8wm/RQOQpvDrTBKmHn/YUF5CDjRdtLwkH1NujbbETcFuIX/LEYu/XQ5mFz7\niKxJm6s+COFao+eo1Khfnq4LyeNZ+a0hof7PsFGU9PWnXhqTqMPAJ9e2qpH+j8sz\noVL235rsodH2DYZAlqk2jDxjhq47Yl2g1VueW5KTLxow//evxJFPcIW0pSq4MoBG\nxPIbb9DcZuPysABX6sHMH4XN+/pbbw==\n=vbbp\n-----END PGP SIGNATURE-----", "payload": "tree ce9e6d8b5479ef66bc5fc41ecc9da6eb5d5ca8a3\nparent f4239581925d6a9fba049f8f771e909a7a5e5ce7\nauthor Martin Liska <mliska@suse.cz> 1580892991 +0100\ncommitter Martin Liska <mliska@suse.cz> 1580892991 +0100\n\nDo not load body for alias symbols.\n\n\tPR lto/93489\n\t* lto-dump.c (dump_list_functions): Do not\n\tload body for aliases.\n\t(dump_body): Likewise here.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27736735f6fcba464b90c3a9dff13b7e5c8bdc6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27736735f6fcba464b90c3a9dff13b7e5c8bdc6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27736735f6fcba464b90c3a9dff13b7e5c8bdc6e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4239581925d6a9fba049f8f771e909a7a5e5ce7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4239581925d6a9fba049f8f771e909a7a5e5ce7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4239581925d6a9fba049f8f771e909a7a5e5ce7"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "1e5bab6594b2c439cdbce03d58da14b458238e7f", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27736735f6fcba464b90c3a9dff13b7e5c8bdc6e/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27736735f6fcba464b90c3a9dff13b7e5c8bdc6e/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=27736735f6fcba464b90c3a9dff13b7e5c8bdc6e", "patch": "@@ -1,3 +1,10 @@\n+2020-02-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/93489\n+\t* lto-dump.c (dump_list_functions): Do not\n+\tload body for aliases.\n+\t(dump_body): Likewise here.\n+\n 2020-01-16  Martin Liska  <mliska@suse.cz>\n \n \t* lto-partition.c (lto_balanced_map): Remember"}, {"sha": "96e26d9e81c1483c272a3c07e071789c83e58b2f", "filename": "gcc/lto/lto-dump.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27736735f6fcba464b90c3a9dff13b7e5c8bdc6e/gcc%2Flto%2Flto-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27736735f6fcba464b90c3a9dff13b7e5c8bdc6e/gcc%2Flto%2Flto-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-dump.c?ref=27736735f6fcba464b90c3a9dff13b7e5c8bdc6e", "patch": "@@ -122,7 +122,7 @@ class function_entry: public symbol_entry\n     cgraph_node *cnode = dyn_cast<cgraph_node *> (node);\n     gcc_assert (cnode);\n \n-    return (cnode->definition)\n+    return (cnode->definition && !cnode->alias)\n      ? n_basic_blocks_for_fn (DECL_STRUCT_FUNCTION (cnode->decl))\n      : 0;\n   }\n@@ -157,10 +157,10 @@ void dump_list_functions (void)\n   cgraph_node *cnode;\n   FOR_EACH_FUNCTION (cnode)\n   {\n-    if (cnode->definition)\n+    if (cnode->definition && !cnode->alias)\n       cnode->get_untransformed_body ();\n     symbol_entry *e = new function_entry (cnode);\n-    if (!flag_lto_dump_defined || cnode->definition)\n+    if (!flag_lto_dump_defined || (cnode->definition && !cnode->alias))\n       v.safe_push (e);\n   }\n \n@@ -260,13 +260,15 @@ void dump_body ()\n   }\n   cgraph_node *cnode;\n   FOR_EACH_FUNCTION (cnode)\n-  if (cnode->definition && !strcmp (cnode->name (), flag_dump_body))\n-  {\n-    printf (\"Gimple Body of Function: %s\\n\", cnode->name ());\n-    cnode->get_untransformed_body ();\n-    debug_function (cnode->decl, flags);\n-    flag = 1;\n-  }\n+    if (cnode->definition\n+\t&& !cnode->alias\n+\t&& !strcmp (cnode->name (), flag_dump_body))\n+      {\n+\tprintf (\"Gimple Body of Function: %s\\n\", cnode->name ());\n+\tcnode->get_untransformed_body ();\n+\tdebug_function (cnode->decl, flags);\n+\tflag = 1;\n+      }\n   if (!flag)\n     error_at (input_location, \"Function not found.\");\n   return;"}]}