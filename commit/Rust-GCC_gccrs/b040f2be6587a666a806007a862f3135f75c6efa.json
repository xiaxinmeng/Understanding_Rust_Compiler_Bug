{"sha": "b040f2be6587a666a806007a862f3135f75c6efa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA0MGYyYmU2NTg3YTY2NmE4MDYwMDdhODYyZjMxMzVmNzVjNmVmYQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-11-02T10:49:46Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-11-02T10:49:46Z"}, "message": "Move shlib support to toplevel libgcc\n\n\tgcc:\n\tPR translation/45116\n\t* Makefile.in (slibdir): Remove, don't export.\n\t(SHLIB_NM_FLAGS): Remove.\n\t(libgcc.mvars): Don't emit SHLIB_LINK, SHLIB_INSTALL,\n\tSHLIB_DLLDIR, SHLIB_EXT, SHLIB_MKMAP, SHLIB_MKMAP_OPTS,\n\tSHLIB_MAPFILES, SHLIB_NM_FLAGS.\n\t(DRIVER_DEFINES): Test SHLIB instead of SHLIB_LINK.\n\t(gcc.o): Pass SHLIB instead of SHLIB_LINK.\n\t(gccspec.o): Likewise.\n\t(installdirs): Don't create $(DESTDIR)$(slibdir).\n\t* configure.ac (slibdir): Remove.\n\t* configure: Regenerate.\n\t* libgcc-libsystem.ver: Move to ../libgcc/config.\n\t* mkmap-flat.awk, mkmap-symver.awk: Move to ../libgcc.\n\t* config/libgcc-glibc.ver: Move to ../libgcc/config.\n\t* config/t-libunwind (SHLIB_LC): Remove.\n\t* config/t-linux (SHLIB_MAPFILES): Remove.\n\t* config/t-slibgcc-dummy: Rename to config/t-slibgcc.\n\t* config/t-slibgcc-elf-ver: Remove.\n\t* config/t-slibgcc-libgcc, config/t-slibgcc-nolc-override: Move to\n\t../libgcc/config.\n\t* config/alpha/libgcc-alpha-ldbl.ver, config/alpha/t-linux: Move\n\tto ../libgcc/config/alpha.\n\t* config/alpha/t-vms (shlib_version, SHLIB_EXT, SHLIB_OBJS,\n\tSHLIB_NAME, SHLIB_MULTILIB, SHLIB_INSTALL, SHLIB_SYMVEC,\n\tSHLIB_SYMVECX2, SHLIB_LINK): Remove.\n\t* config/arm/libgcc-bpabi.ver: Move to ../libgcc/config/arm.\n\t* config/arm/t-bpabi (SHLIB_MAPFILES): Remove.\n\t* config/arm/t-netbsd (SHLIB_EXT, SHLIB_NAME, SHLIB_SONAME,\n\tSHLIB_OBJS, SHLIB_LINK, SHLIB_INSTALL): Remove.\n\t* config/arm/t-symbian (SHLIB_LC): Remove.\n\t* config/bfin/libgcc-bfin.ver: Move to\n\t../libgcc/config/bfin/libgcc-glibc.ver.\n\t* config/bfin/t-bfin-linux (SHLIB_MAPFILES): Remove.\n\t* config/c6x/libgcc-c6xeabi.ver: Move to\n\t../libgcc/config/c6x/libgcc-eabi.ver.\n\t* config/c6x/t-c6x-elf (SHLIB_MAPFILES): Remove.\n\t* config/cris/libgcc.ver: Move to\n\t../libgcc/config/cris/libgcc-glibc.ver.\n\t* config/cris/t-linux (SHLIB_MAPFILES): Remove.\n\t* config/frv/libgcc-frv.ver: Move to ../libgcc/config/frv.\n\t* config/frv/t-linux (SHLIB_MAPFILES): Remove.\n\t* config/i386/darwin-libgcc.10.4.ver: Move to\n\t../libgcc/config/i386/libgcc-darwin.10.4.ver.\n\t* config/i386/darwin-libgcc.10.5.ver: Move to\n\t../libgcc/config/i386/libgcc-darwin.10.5.ver.\n\t* config/i386/libgcc-glibc.ver: Move to ../libgcc/config/i386.\n\t* config/i386/t-cygming (SHLIB_EXT, SHLIB_IMPLIB, SHLIB_SOVERSION,\n\tSHLIB_SONAME, SHLIB_MAP, SHLIB_OBJS, SHLIB_DIR, SHLIB_SLIBDIR_QUAL)\n\tSHLIB_PTHREAD_CFLAG, SHLIB_PTHREAD_LDFLAG, SHLIB_LINK,\n\tSHLIB_INSTALL, SHLIB_MKMAP, SHLIB_MKMAP_OPTS, SHLIB_MAPFILES):\n\tRemove.\n\t* config/i386/t-cygwin (SHLIB_LC, SHLIB_EH_EXTENSION,\n\tSHLIB_IMPLIB, SHLIB_SONAME, SHLIB_MKMAP_OPTS): Remove.\n\t* config/i386/t-dlldir, config/i386/t-dlldir-x: Move to\n\t../libgcc/config/i386.\n\t* config/i386/t-dw2-eh, config/i386/t-sjlj-eh: Move to\n\t../libgcc/config/i386.\n\t* config/i386/t-linux: Move to ../libgcc/config/i386.\n\t* config/i386/t-mingw-pthread: Move to ../libgcc/config/i386.\n\t* config/i386/t-mingw-w32 (SHLIB_LC): Remove.\n\t* config/i386/t-mingw-w64: Likewise.\n\t* config/i386/t-mingw32: Remove.\n\t* config/ia64/libgcc-glibc.ver, config/ia64/libgcc-ia64.ver: Move\n\tto ../libgcc/config/ia64.\n\t* config/ia64/t-glibc: Remove.\n\t* config/ia64/t-hpux (SHLIB_EXT, SHLIB_LINK, SHLIB_INSTALL): Remove.\n\t* config/ia64/t-ia64 (SHLIB_MAPFILES): Remove.\n\t* config/ia64/t-vms (shlib_version, SHLIB_EXT, SHLIB_OBJS,\n\tSHLIB_NAME, SHLIB_MULTILIB, SHLIB_INSTALL, SHLIB_LINK): Remove.\n\t* config/ia64/vms_symvec_libgcc_s.opt: Remove.\n\t* config/m32r/libgcc-glibc.ver: Move to ../libgcc/config/m32r.\n\t* config/m32r/t-linux (SHLIB_MAPFILES): Remove.\n\t* config/m68k/t-slibgcc-elf-ver: Move to ../libgcc/config/m68k.\n\t* config/mips/t-libgcc-mips16 (SHLIB_MAPFILES): Remove.\n\t* config/pa/t-hpux-shlib: Move to ../libgcc/config/pa/t-slibgcc-hpux.\n\t* config/pa/t-slibgcc-dwarf-ver, config/pa/t-slibgcc-sjsj-ver:\n\tMove to ../libgcc/config/pa.\n\t* config/rs6000/darwin-libgcc.10.4.ver: Move to\n\t../libgcc/config/rs6000/libgcc-darwin.10.4.ver.\n\t* config/rs6000/darwin-libgcc.10.5.ver: Move to\n\t../libgcc/config/rs6000/libgcc-darwin.10.5.ver.\n\t* config/rs6000/t-aix43 (SHLIB_EXT, SHLIB_LINK, SHLIB_INSTALL,\n\tSHLIB_LIBS, SHLIB_MKMAP, SHLIB_NM_FLAGS, AR_FLAGS_FOR_TARGET): Remove.\n\t* config/rs6000/t-aix52: Likewise.\n\t* config/sh/libgcc-excl.ver, config/sh/libgcc-glibc.ver: Move to\n\t../libgcc/config/sh.\n\t* config/sparc/libgcc-sparc-glibc.ver: Move to\n\t../libgcc/config/sparc/libgcc-glibc.ver.\n\t* config/sparc/t-linux: Move to ../libgcc/config/sparc.\n\t* config/xtensa/t-linux (SHLIB_MAPFILES): Remove.\n\t* config/xtensa/libgcc-xtensa.ver: Move to\n\t../libgcc/config/xtensa/libgcc-glibc.ver.\n\t* config.gcc (*-*-freebsd*): Replace t-slibgcc-elf-ver with\n\tt-slibgcc in tmake_file.\n\tRemove t-slibgcc-nolc-override for *-*-freebsd[34],\n\t*-*-freebsd[34].* with pthreads.\n\t(*-*-linux*, frv-*-*linux*, *-*-kfreebsd*-gnu,\n\t*-*-knetbsd*-gnu, *-*-gnu*, *-*-kopensolaris*-gnu): Replace\n\tt-slibgcc-elf-ver with t-slibgcc in tmake_file.\n\t(*-*-netbsd*): Likewise.\n\t(*-*-solaris2*): Replace t-slibgcc-dummy with t-slibgcc in tmake_file.\n\t(*-*-*vms*): Add t-slibgcc to tmake_file.\n\t(alpha*-*-linux*): Remove alpha/t-linux from tmake_file.\n\t(alpha*-dec-osf5.1*): Replace t-slibgcc-dummy with t-slibgcc in\n\ttmake_file.\n\t(arm*-*-linux*): Remove t-slibgcc-libgcc from tmake_file for\n\tarm*-*-linux-*eabi.\n\t(bfin*-linux-uclibc*): Replace t-slibgcc-dummy with t-slibgcc in\n\ttmake_file.\n\t(crisv32-*-linux*, cris-*-linux*): Likewise.\n\t(hppa*-*-linux*): Remove t-slibgcc-libgcc, pa/t-slibgcc-sjlj-ver,\n\tpa/t-slibgcc-dwarf-ver from tmake_file.\n\t(hppa[12]*-*-hpux10*): Replace pa/t-hpux-shlib with t-slibgcc in\n\ttmake_file.\n\tRemove pa/t-slibgcc-sjlj-ver, pa/t-slibgcc-dwarf-ver from tmake_file.\n\t(hppa*64*-*-hpux11*): Likewise.\n\t(hppa[12]*-*-hpux11*): Likewise.\n\t(i[34567]86-*-darwin*): Replace t-slibgcc-dummy in t-slibgcc in\n\ttmake_file.\n\t(x86_64-*-darwin*): Likewise.\n\t(i[34567]86-*-cygwin*): Remove tmake_eh_file, tmake_dlldir_file.\n\tAdd t-slibgcc to tmake_file.\n\t(i[34567]86-*-mingw*, x86_64-*-mingw*): Likewise.\n\tRemove i386/t-mingw32 from tmake_file unless x86_64-w64-*,\n\ti[34567]86-w64-*.\n\tRemove i386/t-mingw-pthread from tmake_file.\n\t(ia64*-*-linux*): Remove ia64/t-glibc from tmake_file.\n\t(ia64*-*-hpux*): Add t-slibgcc to tmake_file.\n\t(ia64-hp-*vms*): Likewise.\n\t(m32r-*-linux*): Replace t-slibgcc-elf-ver with t-slibgcc in\n\ttmake_file.\n\t(m32rle-*-linux*): Likewise.\n\t(m68k-*-linux*): Remove m68k/t-slibgcc-elf-ver from tmake_file.\n\t(microblaze*-linux*): Remove t-slibgcc-elf-ver,\n\tt-slibgcc-nolc-override from tmake_file.\n\t(mips-sgi-irix6.5*): Replace t-slibgcc-dummy with t-slibgcc in\n\ttmake_file.\n\t(powerpc-*-darwin*): Likewise.\n\t(powerpc64-*-darwin*): Likewise.\n\t(powerpc-*-freebsd*): Remove t-slibgcc-libgcc from tmake_file.\n\t(powerpc-*-linux*, powerpc64-*-linux*): Likewise.\n\t(rs6000-ibm-aix4.[3456789]*, powerpc-ibm-aix4.[3456789]*): Add\n\tt-slibgcc to tmake_file.\n\t(rs6000-ibm-aix5.1.*, powerpc-ibm-aix5.1.*): Likewise.\n\t(rs6000-ibm-aix5.2.*, powerpc-ibm-aix5.2.*): Likewise.\n\t(rs6000-ibm-aix5.3.*, powerpc-ibm-aix5.3.*): Likewise.\n\t(rs6000-ibm-aix[6789].*, powerpc-ibm-aix[6789].*): Likewise.\n\t(sparc-*-linux*): Remove sparc/t-linux from tmake_file.\n\t(sparc64-*-linux*): Likewise.\n\t(tic6x-*-uclinux): Replace t-slibgcc-elf-ver with t-slibgcc in\n\ttmake_file.\n\t(i[34567]86-*-linux*, x86_64-*-linux*, i[34567]86-*-kfreebsd*-gnu,\n\tx86_64-*-kfreebsd*-gnu, i[34567]86-*-gnu*): Remove i386/t-linux\n\tfrom tmake_file.\n\n\tgcc/cp:\n\t* Make-lang.in (g++spec.o): Pass SHLIB instead of SHLIB_LINK.\n\n\tgcc/fortran:\n\t* Makef-lang.in (gfortranspec.o): Pass SHLIB instead of SHLIB_LINK.\n\n\tgcc/go:\n\t* Make-lang.in (gospec.o): Pass SHLIB instead of SHLIB_LINK.\n\n\tgcc/java:\n\t* Make-lang.in (jvspec.o): Pass SHLIB instead of SHLIB_LINK.\n\n\tlibgcc:\n\t* Makefile.in (SHLIB_NM_FLAGS): Set.\n\t* mkmap-flat.awk, mkmap-symver.awk: New files.\n\t* configure.ac (libgcc_cv_lib_sjlj_exceptions): Check for SjLj\n\texceptions.\n\t* configure: Regenerate.\n\t* config/libgcc-glibc.ver: New file.\n\t* config/libgcc-libsystem.ver: New file.\n\t* config/t-libunwind (SHLIB_LC): Set.\n\t* config/t-linux: New file.\n\t* config/t-slibgcc (INSTALL_SHLIB): New.\n\t(SHLIB_INSTALL): Use it.\n\t* config/t-slibgcc-darwin (SHLIB_MKMAP): Use $(srcdir) to refer\n\tto mkmap-symver.awk.\n\t(SHLIB_MAPFILES): Don't append, adapt pathname.\n\t(SHLIB_VERPFX): Set.\n\t* config/t-slibgcc-elf-ver (SHLIB_MKMAP): Use $(srcdir) to refer\n\tto mkmap-symver.awk.\n\t* config/t-slibgcc-gld-nover, config/t-slibgcc-hpux,\n\tconfig/t-slibgcc-libgcc, config/t-slibgcc-vms: New files.\n\t* config/alpha/libgcc-alpha-ldbl.ver, config/alpha/t-linux: New files.\n\t* config/alpha/t-slibgcc-osf (SHLIB_MKMAP): Use $(srcdir) to refer\n\tto mkmap-flat.awk.\n\t* config/arm/t-bpabi (SHLIB_MAPFILES): Set.\n\t* config/bfin/libgcc-glibc.ver, config/bfin/t-linux: New files.\n\t* config/c6x/libgcc-eabi.ver, config/c6x/t-elf: New files.\n\t* config/cris/libgcc-glibc.ver, config/cris/t-linux: New files.\n\t* config/frv/libgcc-frv.ver, config/frv/t-linux: New files.\n\t* config/i386/libgcc-darwin.10.4.ver,\n\tconfig/i386/libgcc-darwin.10.5.ver, config/i386/libgcc-glibc.ver:\n\tNew files.\n\t* config/i386/t-darwin: Remove.\n\t* config/i386/t-darwin64: Likewise.\n\t* config/i386/t-dw2-eh, config/i386/t-sjlj-eh: New files.\n\t* config/i386/t-slibgcc-cygming, config/i386/t-cygwin,\n\tconfig/i386/t-dlldir, config/i386/t-dlldir-x: New files.\n\t* config/i386/t-linux: New file.\n\t* config/i386/t-mingw32: New file.\n\t* config/ia64/libgcc-glibc.ver, config/ia64/libgcc-ia64.ver: New files.\n\t* config/ia64/t-glibc: Rename to ...\n\t* config/ia64/t-linux: ... this.\n\t(SHLIB_MAPFILES): Set.\n\t* config/ia64/t-glibc-libunwind: Rename to ...\n\t* config/ia64/t-linux-libunwind: ... this.\n\t* config/ia64/t-ia64 (SHLIB_MAPFILES): Set.\n\t* config/ia64/t-slibgcc-hpux: New file.\n\t* config/m32r/libgcc-glibc.ver, config/m32r/t-linux: New files.\n\t* config/m68k/t-slibgcc-elf-ver: New file.\n\t* config/mips/t-mips16 (SHLIB_MAPFILES): Set.\n\t* config/mips/t-slibgcc-irix (SHLIB_MKMAP): Use $(srcdir) to refer\n\tto mkmap-flat.awk.\n\t* config/pa/t-slibgcc-hpux: New file.\n\t* config/pa/t-slibgcc-dwarf-ver, config/pa/t-slibgcc-sjsj-ver: New\n\tfiles.\n\t* config/rs6000/libgcc-darwin.10.4.ver,\n\tconfig/rs6000/libgcc-darwin.10.5.ver: New files.\n\t* config/rs6000/libgcc-ppc-glibc.ver: Rename to\n\tconfig/rs6000/libgcc-glibc.ver.\n\t* config/rs6000/libgcc-ppc64.ver: Rename to\n\tconfig/rs6000/libgcc-ibm-ldouble.ver.\n\t* config/rs6000/t-darwin (SHLIB_VERPFX): Remove.\n\t* config/rs6000/t-ibm-ldouble (SHLIB_MAPFILES): Adapt filename.\n\t* config/rs6000/t-ldbl128: Rename to ...\n\t* config/rs6000/t-linux: ... this.\n\t(SHLIB_MAPFILES): Adapt filename.\n\t* config/rs6000/t-slibgcc-aix: New file.\n\t* config/sh/libgcc-excl.ver, config/sh/libgcc-glibc.ver: New files.\n\t* config/sh/t-linux (SHLIB_MAPFILES): Use $(srcdir) to refer to\n\tlibgcc-excl.ver, libgcc-glibc.ver.\n\t(SHLIB_LINK, SHLIB_INSTALL): Remove.\n\t* config/sparc/libgcc-glibc.ver: New file.\n\t* config/sparc/t-linux: New file.\n\t* config/xtensa/libgcc-glibc.ver, config/xtensa/t-linux: New files.\n\t* config.host (*-*-freebsd*): Add t-slibgcc, t-slibgcc-gld,\n\tt-slibgcc-elf-ver to tmake_file.\n\tAdd t-slibgcc-nolc-override to tmake_file for posix threads on\n\t*-*-freebsd[34].\n\t(*-*-linux*, frv-*-*linux*, *-*-kfreebsd*-gnu, *-*-knetbsd*-gnu,\n\t*-*-gnu*, *-*-kopensolaris*-gnu): Add t-slibgcc, t-slibgcc-gld,\n\tt-slibgcc-elf-ver, t-linux to tmake_file.\n\t(*-*-netbsd*): Add t-slibgcc, t-slibgcc-gld, t-slibgcc-elf-ver to\n\ttmake_file.\n\t(alpha*-*-linux*): Add alpha/t-linux to tmake_file.\n\t(alpha64-dec-*vms*): Add t-slibgcc-vms to tmake_file.\n\t(alpha*-dec-*vms*): Likewise.\n\t(arm*-*-freebsd*): Append to tmake_file.\n\t(arm*-*-netbsdelf*): Add t-slibgcc-gld-nover to tmake_file.\n\t(arm*-*-linux*): Add t-slibgcc-libgcc to tmake_file for\n\tarm*-*-linux-*eabi.\n\t(arm*-*-eabi*, arm*-*-symbianelf*): Add t-slibgcc-nolc-override to\n\ttmake_file for arm*-*-symbianelf*.\n\t(bfin*-linux-uclibc*): Append to tmake_file, add bfin/t-linux.\n\t(cris-*-linux*, crisv32-*-linux*): Append to tmake_file, add\n\tcris/t-linux.\n\t(frv-*-*linux*): Append to tmake_file, add frv/t-linux.\n\t(hppa*-*-linux*): Add t-slibgcc-libgcc, pa/t-slibgcc-sjlj-ver,\n\tpa/t-slibgcc-dwarf-ver to tmake_file.\n\t(hppa[12]*-*-hpux10*): Add t-slibgcc, pa/t-slibgcc-sjlj-ver,\n\tpa/t-slibgcc-dwarf-ver, t-slibgcc-hpux, pa/t-slibgcc-hpux to tmake_file.\n\t(hppa*64*-*-hpux11*): Likewise.\n\t(hppa[12]*-*-hpux11*): Likewise.\n\t(x86_64-*-darwin*): Don't override tmake_file, but only keep\n\ti386/t-crtpc, i386/t-crtfm.\n\t(i[34567]86-*-cygwin*): Set tmake_eh_file, tmake_dlldir_file.\n\tPrepend $tmake_eh_file, $tmake_dlldir_file, i386/t-slibgcc-cygming\n\tto tmake_file.\n\tAdd i386/t-cygwin to tmake_file.\n\tPrepent i386/t-mingw-pthread to tmake_file for posix threads.\n\t(i[34567]86-*-mingw*): Set tmake_eh_file, tmake_dlldir_file.\n\tPrepend $tmake_eh_file, $tmake_dlldir_file, i386/t-slibgcc-cygming\n\tto tmake_file.\n\tAdd i386/t-mingw32 to tmake_file.\n\t(x86_64-*-mingw*): Likewise.\n\t(ia64*-*-freebsd*): Append to tmake_file.\n\t(ia64*-*-linux*): Append to tmake_file.\n\tReplace ia64/t-glibc by ia64/t-linux.\n\tReplace ia64/t-glibc-libunwind by ia64/t-linux-libunwind if using\n\tsystem libunwind.\n\t(ia64*-*-hpux*): Add t-slibgcc, ia64/t-slibgcc-hpux,\n\tt-slibgcc-hpux to tmake_file.\n\t(ia64-hp-*vms*): Add t-slibgcc-vms to tmake_file.\n\t(m32r-*-linux*): Append to tmake_file, add m32r/t-linux.\n\t(m32rle-*-linux*): Likewise.\n\t(m68k-*-linux*)): Add m68k/t-slibgcc-elf-ver to tmake_file unless\n\tsjlj exceptions.\n\t(microblaze*-linux*): New case.\n\tAppend to tmake_file, add t-slibgcc-nolc-override.\n\t(powerpc-*-freebsd*): Add t-slibgcc-libgcc to tmake_file.\n\t(powerpc-*-linux*, powerpc64-*-linux*): Likewise.\n\tReplace rs6000/t-ldbl128 by rs6000/t-linux in tmake_file.\n\t(rs6000-ibm-aix4.[3456789]*, powerpc-ibm-aix4.[3456789]*): Add\n\trs6000/t-slibgcc-aix to tmake_file.\n\t(rs6000-ibm-aix5.1.*, powerpc-ibm-aix5.1.*): Likewise.\n\t(rs6000-ibm-aix[56789].*, powerpc-ibm-aix[56789].*): Likewise.\n\t(sh-*-elf*, sh[12346l]*-*-elf*, sh-*-linux*)\n\t(sh[2346lbe]*-*-linux*, sh-*-netbsdelf*, shl*-*-netbsdelf*)\n\t(sh5-*-netbsd*, sh5l*-*-netbsd*, sh64-*-netbsd*)\n\t(sh64l*-*-netbsd*): Add t-slibgcc-libgcc to tmake_file for\n\tsh*-*-linux*.\n\t(sparc-*-linux*): Append to tmake_file for *-leon*.\n\tAdd sparc/t-linux to tmake_file for non-Leon targets.\n\t(sparc64-*-linux*): Add sparc/t-linux to tmake_file.\n\t(tic6x-*-uclinux): New case.\n\tAdd t-slibgcc, t-slibgcc-gld, t-slibgcc-elf-ver to tmake_file.\n\t(tic6x-*-*): Add c6x/t-elf to tmake_file.\n\t(xtensa*-*-linux*): Append to tmake_file, add xtensa/t-linux.\n\t(am33_2.0-*-linux*): Append to tmake_file.\n\t(i[34567]86-*-linux*, x86_64-*-linux*, i[34567]86-*-kfreebsd*-gnu)\n\t(i[34567]86-*-knetbsd*-gnu, i[34567]86-*-gnu*): Also handle\n\tx86_64-*-kfreebsd*-gnu.\n\tAdd i386/t-linux to tmake_file.\n\nFrom-SVN: r180767", "tree": {"sha": "012d63dd4d09e5c32b1e3d2ec1a505722d938e3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/012d63dd4d09e5c32b1e3d2ec1a505722d938e3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b040f2be6587a666a806007a862f3135f75c6efa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b040f2be6587a666a806007a862f3135f75c6efa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b040f2be6587a666a806007a862f3135f75c6efa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b040f2be6587a666a806007a862f3135f75c6efa/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98f4fb344a0c5a038297eb878ad0f1304149147d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98f4fb344a0c5a038297eb878ad0f1304149147d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98f4fb344a0c5a038297eb878ad0f1304149147d"}], "stats": {"total": 1590, "additions": 876, "deletions": 714}, "files": [{"sha": "b43baab918d74843f9cf37549d5926030a027e3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,3 +1,161 @@\n+2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR translation/45116\n+\t* Makefile.in (slibdir): Remove, don't export.\n+\t(SHLIB_NM_FLAGS): Remove.\n+\t(libgcc.mvars): Don't emit SHLIB_LINK, SHLIB_INSTALL,\n+\tSHLIB_DLLDIR, SHLIB_EXT, SHLIB_MKMAP, SHLIB_MKMAP_OPTS,\n+\tSHLIB_MAPFILES, SHLIB_NM_FLAGS.\n+\t(DRIVER_DEFINES): Test SHLIB instead of SHLIB_LINK.\n+\t(gcc.o): Pass SHLIB instead of SHLIB_LINK.\n+\t(gccspec.o): Likewise.\n+\t(installdirs): Don't create $(DESTDIR)$(slibdir).\n+\t* configure.ac (slibdir): Remove.\n+\t* configure: Regenerate.\n+\t* libgcc-libsystem.ver: Move to ../libgcc/config.\n+\t* mkmap-flat.awk, mkmap-symver.awk: Move to ../libgcc.\n+\t* config/libgcc-glibc.ver: Move to ../libgcc/config.\n+\t* config/t-libunwind (SHLIB_LC): Remove.\n+\t* config/t-linux (SHLIB_MAPFILES): Remove.\n+\t* config/t-slibgcc-dummy: Rename to config/t-slibgcc.\n+\t* config/t-slibgcc-elf-ver: Remove.\n+\t* config/t-slibgcc-libgcc, config/t-slibgcc-nolc-override: Move to\n+\t../libgcc/config.\n+\t* config/alpha/libgcc-alpha-ldbl.ver, config/alpha/t-linux: Move\n+\tto ../libgcc/config/alpha.\n+\t* config/alpha/t-vms (shlib_version, SHLIB_EXT, SHLIB_OBJS,\n+\tSHLIB_NAME, SHLIB_MULTILIB, SHLIB_INSTALL, SHLIB_SYMVEC,\n+\tSHLIB_SYMVECX2, SHLIB_LINK): Remove.\n+\t* config/arm/libgcc-bpabi.ver: Move to ../libgcc/config/arm.\n+\t* config/arm/t-bpabi (SHLIB_MAPFILES): Remove.\n+\t* config/arm/t-netbsd (SHLIB_EXT, SHLIB_NAME, SHLIB_SONAME,\n+\tSHLIB_OBJS, SHLIB_LINK, SHLIB_INSTALL): Remove.\n+\t* config/arm/t-symbian (SHLIB_LC): Remove.\n+\t* config/bfin/libgcc-bfin.ver: Move to\n+\t../libgcc/config/bfin/libgcc-glibc.ver.\n+\t* config/bfin/t-bfin-linux (SHLIB_MAPFILES): Remove.\n+\t* config/c6x/libgcc-c6xeabi.ver: Move to\n+\t../libgcc/config/c6x/libgcc-eabi.ver.\n+\t* config/c6x/t-c6x-elf (SHLIB_MAPFILES): Remove.\n+\t* config/cris/libgcc.ver: Move to\n+\t../libgcc/config/cris/libgcc-glibc.ver.\n+\t* config/cris/t-linux (SHLIB_MAPFILES): Remove.\n+\t* config/frv/libgcc-frv.ver: Move to ../libgcc/config/frv.\n+\t* config/frv/t-linux (SHLIB_MAPFILES): Remove.\n+\t* config/i386/darwin-libgcc.10.4.ver: Move to\n+\t../libgcc/config/i386/libgcc-darwin.10.4.ver.\n+\t* config/i386/darwin-libgcc.10.5.ver: Move to\n+\t../libgcc/config/i386/libgcc-darwin.10.5.ver.\n+\t* config/i386/libgcc-glibc.ver: Move to ../libgcc/config/i386.\n+\t* config/i386/t-cygming (SHLIB_EXT, SHLIB_IMPLIB, SHLIB_SOVERSION,\n+\tSHLIB_SONAME, SHLIB_MAP, SHLIB_OBJS, SHLIB_DIR, SHLIB_SLIBDIR_QUAL)\n+\tSHLIB_PTHREAD_CFLAG, SHLIB_PTHREAD_LDFLAG, SHLIB_LINK,\n+\tSHLIB_INSTALL, SHLIB_MKMAP, SHLIB_MKMAP_OPTS, SHLIB_MAPFILES):\n+\tRemove.\n+\t* config/i386/t-cygwin (SHLIB_LC, SHLIB_EH_EXTENSION,\n+\tSHLIB_IMPLIB, SHLIB_SONAME, SHLIB_MKMAP_OPTS): Remove.\n+\t* config/i386/t-dlldir, config/i386/t-dlldir-x: Move to\n+\t../libgcc/config/i386.\n+\t* config/i386/t-dw2-eh, config/i386/t-sjlj-eh: Move to\n+\t../libgcc/config/i386.\n+\t* config/i386/t-linux: Move to ../libgcc/config/i386.\n+\t* config/i386/t-mingw-pthread: Move to ../libgcc/config/i386.\n+\t* config/i386/t-mingw-w32 (SHLIB_LC): Remove.\n+\t* config/i386/t-mingw-w64: Likewise.\n+\t* config/i386/t-mingw32: Remove.\n+\t* config/ia64/libgcc-glibc.ver, config/ia64/libgcc-ia64.ver: Move\n+\tto ../libgcc/config/ia64.\n+\t* config/ia64/t-glibc: Remove.\n+\t* config/ia64/t-hpux (SHLIB_EXT, SHLIB_LINK, SHLIB_INSTALL): Remove.\n+\t* config/ia64/t-ia64 (SHLIB_MAPFILES): Remove.\n+\t* config/ia64/t-vms (shlib_version, SHLIB_EXT, SHLIB_OBJS,\n+\tSHLIB_NAME, SHLIB_MULTILIB, SHLIB_INSTALL, SHLIB_LINK): Remove.\n+\t* config/ia64/vms_symvec_libgcc_s.opt: Remove.\n+\t* config/m32r/libgcc-glibc.ver: Move to ../libgcc/config/m32r.\n+\t* config/m32r/t-linux (SHLIB_MAPFILES): Remove.\n+\t* config/m68k/t-slibgcc-elf-ver: Move to ../libgcc/config/m68k.\n+\t* config/mips/t-libgcc-mips16 (SHLIB_MAPFILES): Remove.\n+\t* config/pa/t-hpux-shlib: Move to ../libgcc/config/pa/t-slibgcc-hpux.\n+\t* config/pa/t-slibgcc-dwarf-ver, config/pa/t-slibgcc-sjsj-ver:\n+\tMove to ../libgcc/config/pa.\n+\t* config/rs6000/darwin-libgcc.10.4.ver: Move to\n+\t../libgcc/config/rs6000/libgcc-darwin.10.4.ver.\n+\t* config/rs6000/darwin-libgcc.10.5.ver: Move to\n+\t../libgcc/config/rs6000/libgcc-darwin.10.5.ver.\n+\t* config/rs6000/t-aix43 (SHLIB_EXT, SHLIB_LINK, SHLIB_INSTALL,\n+\tSHLIB_LIBS, SHLIB_MKMAP, SHLIB_NM_FLAGS, AR_FLAGS_FOR_TARGET): Remove.\n+\t* config/rs6000/t-aix52: Likewise.\n+\t* config/sh/libgcc-excl.ver, config/sh/libgcc-glibc.ver: Move to\n+\t../libgcc/config/sh.\n+\t* config/sparc/libgcc-sparc-glibc.ver: Move to\n+\t../libgcc/config/sparc/libgcc-glibc.ver.\n+\t* config/sparc/t-linux: Move to ../libgcc/config/sparc.\n+\t* config/xtensa/t-linux (SHLIB_MAPFILES): Remove.\n+\t* config/xtensa/libgcc-xtensa.ver: Move to\n+\t../libgcc/config/xtensa/libgcc-glibc.ver.\n+\t* config.gcc (*-*-freebsd*): Replace t-slibgcc-elf-ver with\n+\tt-slibgcc in tmake_file.\n+\tRemove t-slibgcc-nolc-override for *-*-freebsd[34],\n+\t*-*-freebsd[34].* with pthreads.\n+\t(*-*-linux*, frv-*-*linux*, *-*-kfreebsd*-gnu,\n+\t*-*-knetbsd*-gnu, *-*-gnu*, *-*-kopensolaris*-gnu): Replace\n+\tt-slibgcc-elf-ver with t-slibgcc in tmake_file.\n+\t(*-*-netbsd*): Likewise.\n+\t(*-*-solaris2*): Replace t-slibgcc-dummy with t-slibgcc in tmake_file.\n+\t(*-*-*vms*): Add t-slibgcc to tmake_file.\n+\t(alpha*-*-linux*): Remove alpha/t-linux from tmake_file.\n+\t(alpha*-dec-osf5.1*): Replace t-slibgcc-dummy with t-slibgcc in\n+\ttmake_file.\n+\t(arm*-*-linux*): Remove t-slibgcc-libgcc from tmake_file for\n+\tarm*-*-linux-*eabi.\n+\t(bfin*-linux-uclibc*): Replace t-slibgcc-dummy with t-slibgcc in\n+\ttmake_file.\n+\t(crisv32-*-linux*, cris-*-linux*): Likewise.\n+\t(hppa*-*-linux*): Remove t-slibgcc-libgcc, pa/t-slibgcc-sjlj-ver,\n+\tpa/t-slibgcc-dwarf-ver from tmake_file.\n+\t(hppa[12]*-*-hpux10*): Replace pa/t-hpux-shlib with t-slibgcc in\n+\ttmake_file.\n+\tRemove pa/t-slibgcc-sjlj-ver, pa/t-slibgcc-dwarf-ver from tmake_file.\n+\t(hppa*64*-*-hpux11*): Likewise.\n+\t(hppa[12]*-*-hpux11*): Likewise.\n+\t(i[34567]86-*-darwin*): Replace t-slibgcc-dummy in t-slibgcc in\n+\ttmake_file.\n+\t(x86_64-*-darwin*): Likewise.\n+\t(i[34567]86-*-cygwin*): Remove tmake_eh_file, tmake_dlldir_file.\n+\tAdd t-slibgcc to tmake_file.\n+\t(i[34567]86-*-mingw*, x86_64-*-mingw*): Likewise.\n+\tRemove i386/t-mingw32 from tmake_file unless x86_64-w64-*,\n+\ti[34567]86-w64-*.\n+\tRemove i386/t-mingw-pthread from tmake_file.\n+\t(ia64*-*-linux*): Remove ia64/t-glibc from tmake_file.\n+\t(ia64*-*-hpux*): Add t-slibgcc to tmake_file.\n+\t(ia64-hp-*vms*): Likewise.\n+\t(m32r-*-linux*): Replace t-slibgcc-elf-ver with t-slibgcc in\n+\ttmake_file.\n+\t(m32rle-*-linux*): Likewise.\n+\t(m68k-*-linux*): Remove m68k/t-slibgcc-elf-ver from tmake_file.\n+\t(microblaze*-linux*): Remove t-slibgcc-elf-ver,\n+\tt-slibgcc-nolc-override from tmake_file.\n+\t(mips-sgi-irix6.5*): Replace t-slibgcc-dummy with t-slibgcc in\n+\ttmake_file.\n+\t(powerpc-*-darwin*): Likewise.\n+\t(powerpc64-*-darwin*): Likewise.\n+\t(powerpc-*-freebsd*): Remove t-slibgcc-libgcc from tmake_file.\n+\t(powerpc-*-linux*, powerpc64-*-linux*): Likewise.\n+\t(rs6000-ibm-aix4.[3456789]*, powerpc-ibm-aix4.[3456789]*): Add\n+\tt-slibgcc to tmake_file.\n+\t(rs6000-ibm-aix5.1.*, powerpc-ibm-aix5.1.*): Likewise.\n+\t(rs6000-ibm-aix5.2.*, powerpc-ibm-aix5.2.*): Likewise.\n+\t(rs6000-ibm-aix5.3.*, powerpc-ibm-aix5.3.*): Likewise.\n+\t(rs6000-ibm-aix[6789].*, powerpc-ibm-aix[6789].*): Likewise.\n+\t(sparc-*-linux*): Remove sparc/t-linux from tmake_file.\n+\t(sparc64-*-linux*): Likewise.\n+\t(tic6x-*-uclinux): Replace t-slibgcc-elf-ver with t-slibgcc in\n+\ttmake_file.\n+\t(i[34567]86-*-linux*, x86_64-*-linux*, i[34567]86-*-kfreebsd*-gnu,\n+\tx86_64-*-kfreebsd*-gnu, i[34567]86-*-gnu*): Remove i386/t-linux\n+\tfrom tmake_file.\n+\n 2011-11-02  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/50902"}, {"sha": "0211fdf8dbf77c839cf75fca9d321d9b42a6a679", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -612,8 +612,6 @@ prefix_to_exec_prefix := \\\n dollar = @dollar@\n # Used in install-cross.\n gcc_tooldir = @gcc_tooldir@\n-# Used to install the shared libgcc.\n-slibdir = @slibdir@\n # Since gcc_tooldir does not exist at build-time, use -B$(build_tooldir)/bin/\n build_tooldir = $(exec_prefix)/$(target_noncanonical)\n # Directory in which the compiler finds target-independent g++ includes.\n@@ -696,9 +694,6 @@ CRTSTUFF_CFLAGS = -O2 $(GCC_CFLAGS) $(INCLUDES_FOR_TARGET) $(MULTILIB_CFLAGS) \\\n   -fno-stack-protector \\\n   $(INHIBIT_LIBC_CFLAGS)\n \n-# nm flags to list global symbols in libgcc object files.\n-SHLIB_NM_FLAGS = -pg\n-\n # List of extra executables that should be compiled for this target machine\n # that are used for compiling from source code to object code.\n # The rules for compiling them should be in the t-* file for the machine.\n@@ -1137,7 +1132,6 @@ export NM_FOR_TARGET\n export STRIP_FOR_TARGET\n export RANLIB_FOR_TARGET\n export libsubdir\n-export slibdir\n \n FLAGS_TO_PASS = \\\n \t\"ADA_CFLAGS=$(ADA_CFLAGS)\" \\\n@@ -1911,14 +1905,6 @@ libgcc.mvars: config.status Makefile $(LIB2ADD) $(LIB2ADD_ST) specs \\\n \techo LIB2_SIDITI_CONV_FUNCS = '$(LIB2_SIDITI_CONV_FUNCS)' >> tmp-libgcc.mvars\n \techo LIB2_DIVMOD_FUNCS = '$(LIB2_DIVMOD_FUNCS)' >> tmp-libgcc.mvars\n \techo GCC_EXTRA_PARTS = '$(GCC_EXTRA_PARTS)' >> tmp-libgcc.mvars\n-\techo SHLIB_LINK = '$(subst $(GCC_FOR_TARGET),$$(GCC_FOR_TARGET),$(SHLIB_LINK))' >> tmp-libgcc.mvars\n-\techo SHLIB_INSTALL = '$(SHLIB_INSTALL)' >> tmp-libgcc.mvars\n-\techo SHLIB_DLLDIR = '$(SHLIB_DLLDIR)' >> tmp-libgcc.mvars\n-\techo SHLIB_EXT = '$(SHLIB_EXT)' >> tmp-libgcc.mvars\n-\techo SHLIB_MKMAP = '$(call srcdirify,$(SHLIB_MKMAP))' >> tmp-libgcc.mvars\n-\techo SHLIB_MKMAP_OPTS = '$(SHLIB_MKMAP_OPTS)' >> tmp-libgcc.mvars\n-\techo SHLIB_MAPFILES = '$(call srcdirify,$(SHLIB_MAPFILES))' >> tmp-libgcc.mvars\n-\techo SHLIB_NM_FLAGS = '$(SHLIB_NM_FLAGS)' >> tmp-libgcc.mvars\n \techo LIBGCC2_CFLAGS = '$(LIBGCC2_CFLAGS)' >> tmp-libgcc.mvars\n \techo TARGET_LIBGCC2_CFLAGS = '$(TARGET_LIBGCC2_CFLAGS)' >> tmp-libgcc.mvars\n \techo CRTSTUFF_CFLAGS = '$(CRTSTUFF_CFLAGS)' >> tmp-libgcc.mvars\n@@ -2228,20 +2214,20 @@ DRIVER_DEFINES = \\\n   -DTOOLDIR_BASE_PREFIX=\\\"$(libsubdir_to_prefix)$(prefix_to_exec_prefix)\\\" \\\n   @TARGET_SYSTEM_ROOT_DEFINE@ \\\n   $(VALGRIND_DRIVER_DEFINES) \\\n-  `test \"X$${SHLIB_LINK}\" = \"X\" || test \"@enable_shared@\" != \"yes\" || echo \"-DENABLE_SHARED_LIBGCC\"` \\\n+  `test \"X$${SHLIB}\" = \"X\" || test \"@enable_shared@\" != \"yes\" || echo \"-DENABLE_SHARED_LIBGCC\"` \\\n   -DCONFIGURE_SPECS=\"\\\"@CONFIGURE_SPECS@\\\"\"\n \n gcc.o: gcc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h multilib.h \\\n     Makefile $(lang_specs_files) specs.h prefix.h $(GCC_H) $(FLAGS_H) \\\n     configargs.h $(OBSTACK_H) $(OPTS_H) $(DIAGNOSTIC_H) $(VEC_H) $(PARAMS_H)\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n+\t(SHLIB='$(SHLIB)'; \\\n \t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n   $(DRIVER_DEFINES) \\\n   -c $(srcdir)/gcc.c $(OUTPUT_OPTION))\n \n gccspec.o: gccspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n     $(OPTS_H)\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n+\t(SHLIB='$(SHLIB)'; \\\n \t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n   $(DRIVER_DEFINES) \\\n   -c $(srcdir)/gccspec.c $(OUTPUT_OPTION))\n@@ -4651,7 +4637,6 @@ installdirs:\n \t$(mkinstalldirs) $(DESTDIR)$(bindir)\n \t$(mkinstalldirs) $(DESTDIR)$(includedir)\n \t$(mkinstalldirs) $(DESTDIR)$(infodir)\n-\t$(mkinstalldirs) $(DESTDIR)$(slibdir)\n \t$(mkinstalldirs) $(DESTDIR)$(man1dir)\n \t$(mkinstalldirs) $(DESTDIR)$(man7dir)\n "}, {"sha": "999fe4d22390e72318ece5f91da5bf52bf9902ea", "filename": "gcc/config.gcc", "status": "modified", "additions": 34, "deletions": 101, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -559,21 +559,14 @@ case ${target} in\n   extra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n   fbsd_major=`echo ${target} | sed -e 's/.*freebsd//g' | sed -e 's/\\..*//g'`\n   tm_defines=\"${tm_defines} FBSD_MAJOR=${fbsd_major}\"\n-  tmake_file=\"t-slibgcc-elf-ver t-freebsd\"\n+  tmake_file=\"t-freebsd t-slibgcc\"\n   case ${enable_threads} in\n     no)\n       fbsd_tm_file=\"${fbsd_tm_file} freebsd-nthr.h\"\n       ;;\n     \"\" | yes | posix)\n       thread_file='posix'\n       tmake_file=\"${tmake_file} t-freebsd-thread\"\n-      # Before 5.0, FreeBSD can't bind shared libraries to -lc\n-      # when \"optionally\" threaded via weak pthread_* checks.\n-      case ${target} in\n-        *-*-freebsd[34] | *-*-freebsd[34].*)\n-          tmake_file=\"${tmake_file} t-slibgcc-nolc-override\"\n-          ;;\n-      esac\n       ;;\n     *)\n       echo 'Unknown thread configuration for FreeBSD'\n@@ -599,7 +592,7 @@ case ${target} in\n   case ${enable_threads} in\n     \"\" | yes | posix) thread_file='posix' ;;\n   esac\n-  tmake_file=\"t-slibgcc-elf-ver t-linux\"\n+  tmake_file=\"t-linux t-slibgcc\"\n   case $target in\n     *-*-linux* | frv-*-*linux* | *-*-kfreebsd*-gnu | *-*-knetbsd*-gnu | *-*-kopensolaris*-gnu)\n       :;;\n@@ -647,7 +640,7 @@ case ${target} in\n   esac\n   ;;\n *-*-netbsd*)\n-  tmake_file=\"t-slibgcc-elf-ver t-libc-ok t-netbsd t-libgcc-pic\"\n+  tmake_file=\"t-libc-ok t-netbsd t-libgcc-pic t-slibgcc\"\n   gas=yes\n   gnu_ld=yes\n \n@@ -730,7 +723,7 @@ case ${target} in\n     tm_file=\"usegas.h ${tm_file}\"\n   fi\n   tm_p_file=\"${tm_p_file} sol2-protos.h\"\n-  tmake_file=\"${tmake_file} t-sol2 t-slibgcc-dummy\"\n+  tmake_file=\"${tmake_file} t-sol2 t-slibgcc\"\n   c_target_objs=\"${c_target_objs} sol2-c.o\"\n   cxx_target_objs=\"${cxx_target_objs} sol2-c.o sol2-cxx.o\"\n   extra_objs=\"sol2.o sol2-stubs.o\"\n@@ -744,7 +737,7 @@ case ${target} in\n *-*-*vms*)\n   extra_options=\"${extra_options} vms/vms.opt\"\n   xmake_file=vms/x-vms\n-  tmake_file=\"vms/t-vms\"\n+  tmake_file=\"vms/t-vms t-slibgcc\"\n   extra_objs=\"vms.o\"\n   target_gtfiles=\"$target_gtfiles \\$(srcdir)/config/vms/vms.c\"\n   tm_p_file=\"${tm_p_file} vms/vms-protos.h\"\n@@ -777,7 +770,7 @@ alpha*-*-linux*)\n \ttm_file=\"${tm_file} alpha/elf.h alpha/linux.h alpha/linux-elf.h glibc-stdint.h\"\n \textra_options=\"${extra_options} alpha/elf.opt\"\n \ttarget_cpu_default=\"MASK_GAS\"\n-\ttmake_file=\"${tmake_file} alpha/t-alpha alpha/t-ieee alpha/t-linux\"\n+\ttmake_file=\"${tmake_file} alpha/t-alpha alpha/t-ieee\"\n \textra_parts=\"${extra_parts} crtfastmath.o\"\n \t;;\n alpha*-*-freebsd*)\n@@ -814,7 +807,7 @@ alpha*-dec-osf5.1*)\n \t\textra_passes=\"mips-tfile mips-tdump\"\n \tfi\n \tuse_collect2=yes\n-\ttmake_file=\"t-slibgcc-dummy\"\n+\ttmake_file=\"t-slibgcc\"\n \ttm_file=\"${tm_file} alpha/osf5.h\"\n \ttm_defines=\"${tm_defines} TARGET_SUPPORT_ARCH=1\"\n \textra_options=\"${extra_options} rpath.opt alpha/osf5.opt\"\n@@ -862,7 +855,7 @@ arm*-*-linux*)\t\t\t# ARM GNU/Linux with ELF\n \tarm*-*-linux-*eabi)\n \t    tm_file=\"$tm_file arm/bpabi.h arm/linux-eabi.h\"\n \t    libgcc_tm_file=\"$libgcc_tm_file arm/bpabi-lib.h\"\n-\t    tmake_file=\"$tmake_file arm/t-arm-elf arm/t-bpabi arm/t-linux-eabi t-slibgcc-libgcc\"\n+\t    tmake_file=\"$tmake_file arm/t-arm-elf arm/t-bpabi arm/t-linux-eabi\"\n \t    # Define multilib configuration for arm-linux-androideabi.\n \t    case ${target} in\n \t    *-androideabi)\n@@ -969,7 +962,7 @@ bfin*-uclinux*)\n \t;;\n bfin*-linux-uclibc*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h gnu-user.h linux.h glibc-stdint.h bfin/linux.h ./linux-sysroot-suffix.h\"\n-\ttmake_file=\"t-slibgcc-elf-ver bfin/t-bfin-linux\"\n+\ttmake_file=\"bfin/t-bfin-linux t-slibgcc\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tuse_collect2=no\n \t;;\n@@ -1001,7 +994,7 @@ cris-*-elf | cris-*-none)\n crisv32-*-linux* | cris-*-linux*)\n \ttm_file=\"dbxelf.h elfos.h ${tm_file} gnu-user.h linux.h glibc-stdint.h cris/linux.h\"\n \t# We need to avoid using t-linux, so override default tmake_file\n-\ttmake_file=\"cris/t-cris t-slibgcc-elf-ver cris/t-linux\"\n+\ttmake_file=\"cris/t-cris cris/t-linux t-slibgcc\"\n \textra_options=\"${extra_options} cris/linux.opt\"\n \tcase $target in\n \t  cris-*-*)\n@@ -1069,13 +1062,7 @@ hppa*-*-linux*)\n \ttarget_cpu_default=\"MASK_PA_11|MASK_NO_SPACE_REGS\"\n \ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h pa/pa-linux.h \\\n \t\t pa/pa32-regs.h pa/pa32-linux.h\"\n-\ttmake_file=\"${tmake_file} pa/t-linux t-slibgcc-libgcc\"\n-\t# Set the libgcc version number\n-\tif test x$sjlj = x1; then\n-\t    tmake_file=\"$tmake_file pa/t-slibgcc-sjlj-ver\"\n-\telse\n-\t    tmake_file=\"$tmake_file pa/t-slibgcc-dwarf-ver\"\n-\tfi\n+\ttmake_file=\"${tmake_file} pa/t-linux\"\n \t;;\n # port not yet contributed.\n #hppa*-*-openbsd*)\n@@ -1098,7 +1085,7 @@ hppa[12]*-*-hpux10*)\n \tesac\n \tuse_gcc_stdint=provide\n \ttm_file=\"${tm_file} hpux-stdint.h\"\n-\ttmake_file=\"pa/t-pa-hpux10 pa/t-pa-hpux pa/t-hpux-shlib\"\n+\ttmake_file=\"pa/t-pa-hpux10 pa/t-pa-hpux t-slibgcc\"\n \tcase ${enable_threads} in\n \t  \"\")\n \t    if test x$have_pthread_h = xyes ; then\n@@ -1109,12 +1096,6 @@ hppa[12]*-*-hpux10*)\n \t    tmake_file=\"${tmake_file} pa/t-dce-thr\"\n \t    ;;\n \tesac\n-\t# Set the libgcc version number\n-\tif test x$sjlj = x1; then\n-\t    tmake_file=\"$tmake_file pa/t-slibgcc-sjlj-ver\"\n-\telse\n-\t    tmake_file=\"$tmake_file pa/t-slibgcc-dwarf-ver\"\n-\tfi\n \tuse_collect2=yes\n \tgas=yes\n \tif test \"x$with_dwarf2\" != x; then\n@@ -1147,13 +1128,7 @@ hppa*64*-*-hpux11*)\n \textra_options=\"${extra_options} pa/pa-hpux.opt \\\n \t\t       pa/pa-hpux1010.opt pa/pa64-hpux.opt hpux11.opt\"\n \tneed_64bit_hwint=yes\n-\ttmake_file=\"pa/t-pa64 pa/t-pa-hpux pa/t-hpux-shlib\"\n-\t# Set the libgcc version number\n-\tif test x$sjlj = x1; then\n-\t    tmake_file=\"$tmake_file pa/t-slibgcc-sjlj-ver\"\n-\telse\n-\t    tmake_file=\"$tmake_file pa/t-slibgcc-dwarf-ver\"\n-\tfi\n+\ttmake_file=\"pa/t-pa64 pa/t-pa-hpux t-slibgcc\"\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o \\\n \t\t     libgcc_stub.a\"\n \tcase x${enable_threads} in\n@@ -1193,13 +1168,7 @@ hppa[12]*-*-hpux11*)\n \t\textra_options=\"${extra_options} pa/pa-hpux1131.opt\"\n \t\t;;\n \tesac\n-\ttmake_file=\"pa/t-pa-hpux11 pa/t-pa-hpux pa/t-hpux-shlib\"\n-\t# Set the libgcc version number\n-\tif test x$sjlj = x1; then\n-\t    tmake_file=\"$tmake_file pa/t-slibgcc-sjlj-ver\"\n-\telse\n-\t    tmake_file=\"$tmake_file pa/t-slibgcc-dwarf-ver\"\n-\tfi\n+\ttmake_file=\"pa/t-pa-hpux11 pa/t-pa-hpux t-slibgcc\"\n \textra_parts=\"libgcc_stub.a\"\n \tcase x${enable_threads} in\n \tx | xyes | xposix )\n@@ -1227,12 +1196,12 @@ i[34567]86-*-darwin*)\n \tneed_64bit_isa=yes\n \t# Baseline choice for a machine that allows m64 support.\n \twith_cpu=${with_cpu:-core2}\n-\ttmake_file=\"${tmake_file} t-slibgcc-dummy\"\n+\ttmake_file=\"${tmake_file} t-slibgcc\"\n \tlibgcc_tm_file=\"$libgcc_tm_file i386/darwin-lib.h\"\n \t;;\n x86_64-*-darwin*)\n \twith_cpu=${with_cpu:-core2}\n-\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc-dummy\"\n+\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc\"\n \ttm_file=\"${tm_file} ${cpu_type}/darwin64.h\"\n \tlibgcc_tm_file=\"$libgcc_tm_file i386/darwin-lib.h\"\n \t;;\n@@ -1460,19 +1429,7 @@ i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae)\n i[34567]86-*-cygwin*)\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/cygwin.h i386/cygwin-stdint.h\"\n \txm_file=i386/xm-cygwin.h\n-\t# This has to match the logic for DWARF2_UNWIND_INFO in gcc/config/i386/cygming.h\n-\tif test x$sjlj = x0; then\n-\t\ttmake_eh_file=\"i386/t-dw2-eh\"\n-\telse\n-\t\ttmake_eh_file=\"i386/t-sjlj-eh\"\n-\tfi\n-\t# Shared libgcc DLL install dir depends on cross/native build.\n-\tif test x${host} = x${target} ; then\n-\t\ttmake_dlldir_file=\"i386/t-dlldir\"\n-\telse\n-\t\ttmake_dlldir_file=\"i386/t-dlldir-x\"\n-\tfi\n-\ttmake_file=\"${tmake_file} ${tmake_eh_file} ${tmake_dlldir_file} i386/t-cygming i386/t-cygwin\"\n+\ttmake_file=\"${tmake_file} i386/t-cygming i386/t-cygwin t-slibgcc\"\n \ttarget_gtfiles=\"\\$(srcdir)/config/i386/winnt.c\"\n \textra_options=\"${extra_options} i386/cygming.opt\"\n \textra_objs=\"winnt.o winnt-stubs.o\"\n@@ -1525,29 +1482,14 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)\n \t\t\t;;\n \tesac\n \ttm_file=\"${tm_file} i386/mingw-stdint.h\"\n-\t# This has to match the logic for DWARF2_UNWIND_INFO in gcc/config/i386/cygming.h\n-\tif test x$sjlj = x0; then\n-\t\ttmake_eh_file=\"i386/t-dw2-eh\"\n-\telse\n-\t\ttmake_eh_file=\"i386/t-sjlj-eh\"\n-\tfi\n-\t# Shared libgcc DLL install dir depends on cross/native build.\n-\tif test x${host} = x${target} ; then\n-\t\ttmake_dlldir_file=\"i386/t-dlldir\"\n-\telse\n-\t\ttmake_dlldir_file=\"i386/t-dlldir-x\"\n-\tfi\n-\ttmake_file=\"${tmake_file} ${tmake_eh_file} ${tmake_dlldir_file} i386/t-cygming\"\n+\ttmake_file=\"${tmake_file} i386/t-cygming t-slibgcc\"\n         case ${target} in\n                x86_64-w64-*)\n                \t\ttmake_file=\"${tmake_file} i386/t-mingw-w64\"\n \t\t\t;;\n \t       i[34567]86-w64-*)\n \t\t\ttmake_file=\"${tmake_file} i386/t-mingw-w32\"\n \t\t\t;;\n-               *)\n-               \t\ttmake_file=\"${tmake_file} i386/t-mingw32\"\n-                     \t;;\n \tesac\n         native_system_header_dir=/mingw/include\n \ttarget_gtfiles=\"\\$(srcdir)/config/i386/winnt.c\"\n@@ -1570,7 +1512,6 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)\n \t    ;;\n \t  posix)\n \t    thread_file='posix'\n-\t    tmake_file=\"i386/t-mingw-pthread ${tmake_file}\"\n \t    ;;\n \tesac\n \tcase ${target} in\n@@ -1616,13 +1557,13 @@ ia64*-*-freebsd*)\n \t;;\n ia64*-*-linux*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ia64/sysv4.h ia64/linux.h\"\n-\ttmake_file=\"${tmake_file} ia64/t-ia64 t-libunwind ia64/t-glibc\"\n+\ttmake_file=\"${tmake_file} ia64/t-ia64 t-libunwind\"\n \ttarget_cpu_default=\"MASK_GNU_AS|MASK_GNU_LD\"\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o crtfastmath.o\"\n \t;;\n ia64*-*-hpux*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h ia64/sysv4.h ia64/hpux.h\"\n-\ttmake_file=\"ia64/t-ia64 ia64/t-hpux\"\n+\ttmake_file=\"ia64/t-ia64 ia64/t-hpux t-slibgcc\"\n \ttarget_cpu_default=\"MASK_GNU_AS\"\n \tcase x$enable_threads in\n \tx | xyes | xposix )\n@@ -1687,7 +1628,7 @@ m32r-*-rtems*)\n m32r-*-linux*)\n \ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} m32r/linux.h\"\n \t# We override the tmake_file for linux -- why?\n-\ttmake_file=\"t-slibgcc-elf-ver m32r/t-linux\"\n+\ttmake_file=\"m32r/t-linux t-slibgcc\"\n \tgnu_ld=yes\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n@@ -1696,7 +1637,7 @@ m32r-*-linux*)\n m32rle-*-linux*)\n \ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h m32r/little.h ${tm_file} m32r/linux.h\"\n \t# We override the tmake_file for linux -- why?\n-\ttmake_file=\"t-slibgcc-elf-ver m32r/t-linux\"\n+\ttmake_file=\"m32r/t-linux t-slibgcc\"\n \tgnu_ld=yes\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n@@ -1772,11 +1713,6 @@ m68k-*-linux*)\t\t# Motorola m68k's running GNU/Linux\n \textra_options=\"${extra_options} m68k/ieee.opt\"\n \ttm_defines=\"${tm_defines} MOTOROLA=1\"\n \ttmake_file=\"${tmake_file} m68k/t-floatlib m68k/t-linux m68k/t-mlibs\"\n-\t# if not configured with --enable-sjlj-exceptions, bump the\n-\t# libgcc version number\n-\tif test x$sjlj != x1; then\n-\t    tmake_file=\"$tmake_file m68k/t-slibgcc-elf-ver\"\n-\tfi\n \t;;\n m68k-*-rtems*)\n \tdefault_m68k_cpu=68020\n@@ -1807,7 +1743,7 @@ microblaze*-linux*)\n \ttm_file=\"${tm_file} dbxelf.h gnu-user.h linux.h microblaze/linux.h\"\n \tc_target_objs=\"${c_target_objs} microblaze-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} microblaze-c.o\"\n-\ttmake_file=\"${tmake_file} t-slibgcc-elf-ver t-slibgcc-nolc-override t-linux microblaze/t-microblaze\"\n+\ttmake_file=\"${tmake_file} t-linux microblaze/t-microblaze\"\n         extra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o crtbeginT.o\"\n \t;;\n microblaze*-*-*)\n@@ -1818,7 +1754,7 @@ microblaze*-*-*)\n         ;;\n mips-sgi-irix6.5*)\n \ttm_file=\"elfos.h ${tm_file} mips/iris6.h\"\n-\ttmake_file=\"mips/t-irix6 t-slibgcc-dummy\"\n+\ttmake_file=\"mips/t-irix6 t-slibgcc\"\n \textra_options=\"${extra_options} rpath.opt mips/iris6.opt\"\n \ttarget_cpu_default=\"MASK_ABICALLS\"\n \ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_N32\"\n@@ -2045,19 +1981,18 @@ powerpc-*-darwin*)\n \t  *-darwin[0-6]*)\n \t    ;;\n \tesac\n-\ttmake_file=\"${tmake_file} t-slibgcc-dummy\"\n+\ttmake_file=\"${tmake_file} t-slibgcc\"\n \textra_headers=altivec.h\n \t;;\n powerpc64-*-darwin*)\n \textra_options=\"${extra_options} ${cpu_type}/darwin.opt\"\n-\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc-dummy\"\n+\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc\"\n \ttm_file=\"${tm_file} ${cpu_type}/darwin8.h ${cpu_type}/darwin64.h\"\n \textra_headers=altivec.h\n \t;;\n powerpc-*-freebsd*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h ${fbsd_tm_file} rs6000/sysv4.h rs6000/freebsd.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n-\ttmake_file=\"${tmake_file} t-slibgcc-libgcc\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \t;;\n powerpc-*-netbsd*)\n@@ -2143,7 +2078,6 @@ powerpc-*-linux* | powerpc64-*-linux*)\n \t\ttm_file=\"${tm_file} rs6000/linux.h glibc-stdint.h\"\n \t\t;;\n \tesac\n-\ttmake_file=\"${tmake_file} t-slibgcc-libgcc\"\n \tcase ${target} in\n \t    powerpc*-*-linux*ppc476*)\n \t\ttm_file=\"${tm_file} rs6000/476.h\"\n@@ -2203,7 +2137,7 @@ powerpcle-*-eabi*)\n \t;;\n rs6000-ibm-aix4.[3456789]* | powerpc-ibm-aix4.[3456789]*)\n \ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/aix.h rs6000/aix43.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n-\ttmake_file=rs6000/t-aix43\n+\ttmake_file=\"rs6000/t-aix43 t-slibgcc\"\n \textra_options=\"${extra_options} rs6000/aix64.opt\"\n \tuse_collect2=yes\n \tthread_file='aix'\n@@ -2213,15 +2147,15 @@ rs6000-ibm-aix4.[3456789]* | powerpc-ibm-aix4.[3456789]*)\n rs6000-ibm-aix5.1.* | powerpc-ibm-aix5.1.*)\n \ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/aix.h rs6000/aix51.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n \textra_options=\"${extra_options} rs6000/aix64.opt\"\n-\ttmake_file=rs6000/t-aix43\n+\ttmake_file=\"rs6000/t-aix43 t-slibgcc\"\n \tuse_collect2=yes\n \tthread_file='aix'\n \tuse_gcc_stdint=wrap\n \textra_headers=\n \t;;\n rs6000-ibm-aix5.2.* | powerpc-ibm-aix5.2.*)\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix52.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n-\ttmake_file=rs6000/t-aix52\n+\ttmake_file=\"rs6000/t-aix52 t-slibgcc\"\n \textra_options=\"${extra_options} rs6000/aix64.opt\"\n \tuse_collect2=yes\n \tthread_file='aix'\n@@ -2230,7 +2164,7 @@ rs6000-ibm-aix5.2.* | powerpc-ibm-aix5.2.*)\n \t;;\n rs6000-ibm-aix5.3.* | powerpc-ibm-aix5.3.*)\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix53.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n-\ttmake_file=rs6000/t-aix52\n+\ttmake_file=\"rs6000/t-aix52 t-slibgcc\"\n \textra_options=\"${extra_options} rs6000/aix64.opt\"\n \tuse_collect2=yes\n \tthread_file='aix'\n@@ -2239,7 +2173,7 @@ rs6000-ibm-aix5.3.* | powerpc-ibm-aix5.3.*)\n \t;;\n rs6000-ibm-aix[6789].* | powerpc-ibm-aix[6789].*)\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix61.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n-\ttmake_file=rs6000/t-aix52\n+\ttmake_file=\"rs6000/t-aix52 t-slibgcc\"\n \textra_options=\"${extra_options} rs6000/aix64.opt\"\n \tuse_collect2=yes\n \tthread_file='aix'\n@@ -2497,7 +2431,7 @@ sparc-*-linux*)\n \t\ttmake_file=\"${tmake_file} sparc/t-sparc sparc/t-leon3\"\n \t\t;;\n \t    *)\n-\t\ttmake_file=\"${tmake_file} sparc/t-sparc sparc/t-linux\"\n+\t\ttmake_file=\"${tmake_file} sparc/t-sparc\"\n \t\t;;\n \tesac\n \tif test x$enable_targets = xall; then\n@@ -2543,7 +2477,7 @@ sparc64-*-rtems*)\n sparc64-*-linux*)\n \ttm_file=\"sparc/biarch64.h ${tm_file} dbxelf.h elfos.h sparc/sysv4.h gnu-user.h linux.h glibc-stdint.h sparc/default-64.h sparc/linux64.h\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n-\ttmake_file=\"${tmake_file} sparc/t-sparc sparc/t-linux sparc/t-linux64\"\n+\ttmake_file=\"${tmake_file} sparc/t-sparc sparc/t-linux64\"\n \textra_parts=\"${extra_parts} crtfastmath.o\"\n \t;;\n sparc64-*-freebsd*|ultrasparc-*-freebsd*)\n@@ -2594,7 +2528,7 @@ tic6x-*-uclinux)\n \ttm_file=\"${tm_file} dbxelf.h tm-dwarf2.h glibc-stdint.h\"\n \ttm_file=\"${tm_file} ./sysroot-suffix.h\"\n \tlibgcc_tm_file=\"${libgcc_tm_file} c6x/c6x-abi.h\"\n-\ttmake_file=\"t-slibgcc-elf-ver t-sysroot-suffix\"\n+\ttmake_file=\"t-sysroot-suffix t-slibgcc\"\n \ttmake_file=\"${tmake_file} c6x/t-c6x c6x/t-c6x-elf c6x/t-c6x-uclinux\"\n \tuse_collect2=no\n \t;;\n@@ -3610,7 +3544,6 @@ case ${target} in\n \ti[34567]86-*-linux* | x86_64-*-linux* | \\\n \t  i[34567]86-*-kfreebsd*-gnu | x86_64-*-kfreebsd*-gnu | \\\n \t  i[34567]86-*-gnu*)\n-\t\ttmake_file=\"${tmake_file} i386/t-linux\"\n \t\t;;\n \ti[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n \t\t;;"}, {"sha": "9dab1229f45cf19169af6d010b0351406e1d6c3f", "filename": "gcc/config/alpha/t-vms", "status": "modified", "additions": 1, "deletions": 29, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Falpha%2Ft-vms", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Falpha%2Ft-vms", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Ft-vms?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,5 +1,5 @@\n # Copyright (C) 1996, 1997, 1998, 2001, 2002,\n-# 2007, 2009 Free Software Foundation, Inc.\n+# 2007, 2009, 2011 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -35,31 +35,3 @@ MULTILIB_DIRNAMES = ev6\n MULTILIB_OSDIRNAMES = ev6\n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n-\n-shlib_version:=$(shell echo $(BASEVER_c) | sed -e 's/\\./,/' -e 's/\\.//g')\n-SHLIB_EXT = .exe\n-SHLIB_OBJS = @shlib_objs@\n-SHLIB_NAME = @shlib_base_name@.exe\n-SHLIB_MULTILIB =\n-SHLIB_INSTALL = $(INSTALL_DATA) $(SHLIB_NAME) $$(DESTDIR)$$(libsubdir)/$(SHLIB_NAME)\n-SHLIB_SYMVEC = \\\n-  grep -F -e \"\\$$BSS\\$$\" -e \"\\$$DATA\\$$\" -e \" sdata \" -e \" data.rel \" -e \" data.rel.ro \" -e \" sbss \" \\\n-        -e \"\\$$LINK\\$$\" -e \"\\$$READONLY\\$$\" | \\\n-  sed -e \"s/.*\\$$LINK\\$$   \\(.*\\)/SYMBOL_VECTOR=(\\1=PROCEDURE)/\" \\\n-      -e \"s/.*\\$$DATA\\$$   \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\" \\\n-      -e \"s/.* sbss     \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\" \\\n-      -e \"s/.* sdata    \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\" \\\n-      -e \"s/.* data.rel \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\" \\\n-      -e \"s/.* data.rel.ro \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\" \\\n-      -e \"s/.*\\$$BSS\\$$    \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\" \\\n-      -e \"s/.*\\$$READONLY\\$$ \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\"\n-SHLIB_SYMVECX2 := $(subst $$,$$$$,$(SHLIB_SYMVEC))\n-SHLIB_LINK = \\\n-  echo \"case_sensitive=yes\" > SYMVEC_$$$$$$$$.opt; \\\n-  objdump --syms $(SHLIB_OBJS) | \\\n-  $(SHLIB_SYMVECX2) >> SYMVEC_$$$$$$$$.opt ; \\\n-  echo \"case_sensitive=NO\" >> SYMVEC_$$$$$$$$.opt; \\\n-  $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -nodefaultlibs \\\n-  -shared --for-linker=/noinform -o $(SHLIB_NAME) $(SHLIB_OBJS) \\\n-  --for-linker=SYMVEC_$$$$$$$$.opt \\\n-  --for-linker=gsmatch=equal,$(shlib_version)"}, {"sha": "047525682fcb0dcc022b603e90850fc6b457c923", "filename": "gcc/config/arm/t-bpabi", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Farm%2Ft-bpabi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Farm%2Ft-bpabi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-bpabi?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -24,8 +24,4 @@ LIB2FUNCS_EXTRA = $(srcdir)/config/arm/bpabi.c \\\n \t\t  $(srcdir)/config/arm/unaligned-funcs.c\n \n LIB2FUNCS_STATIC_EXTRA = $(srcdir)/config/arm/fp16.c\n-\n-# Add the BPABI names.\n-SHLIB_MAPFILES += $(srcdir)/config/arm/libgcc-bpabi.ver\n-\n EXTRA_HEADERS += $(srcdir)/ginclude/unwind-arm-common.h"}, {"sha": "d659b5a568f2d2fedbd91ee721bd0e99fcf52a80", "filename": "gcc/config/arm/t-netbsd", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Farm%2Ft-netbsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Farm%2Ft-netbsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-netbsd?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,5 +1,5 @@\n # Copyright (C) 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n-# 2006 Free Software Foundation, Inc.\n+# 2006, 2011 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -22,26 +22,3 @@\n TARGET_LIBGCC2_CFLAGS = -fomit-frame-pointer -fpic\n LIBGCC2_DEBUG_CFLAGS = -g0\n LIB2FUNCS_EXTRA = $(srcdir)/config/floatunsidf.c $(srcdir)/config/floatunsisf.c\n-\n-# Build a shared libgcc library.\n-SHLIB_EXT = .so\n-SHLIB_NAME = @shlib_base_name@.so\n-SHLIB_SONAME = @shlib_base_name@.so.1\n-SHLIB_OBJS = @shlib_objs@\n-\n-SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-\t-Wl,-soname,$(SHLIB_SONAME) \\\n-\t-o $(SHLIB_NAME).tmp @multilib_flags@ $(SHLIB_OBJS) -lc && \\\n-\trm -f $(SHLIB_SONAME) && \\\n-\tif [ -f $(SHLIB_NAME) ]; then \\\n-\t  mv -f $(SHLIB_NAME) $(SHLIB_NAME).backup; \\\n-\telse true; fi && \\\n-\tmv $(SHLIB_NAME).tmp $(SHLIB_NAME) && \\\n-\t$(LN_S) $(SHLIB_NAME) $(SHLIB_SONAME)\n-# $(slibdir) double quoted to protect it from expansion while building\n-# libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = \\\n-\t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir); \\\n-\t$(INSTALL_DATA) $(SHLIB_NAME) $$(DESTDIR)$$(slibdir)/$(SHLIB_SONAME); \\\n-\trm -f $$(DESTDIR)$$(slibdir)/$(SHLIB_NAME); \\\n-\t$(LN_S) $(SHLIB_SONAME) $$(DESTDIR)$$(slibdir)/$(SHLIB_NAME)"}, {"sha": "a0d6f7de887b60238a4d8bce2f92367892a05839", "filename": "gcc/config/arm/t-symbian", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Farm%2Ft-symbian", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Farm%2Ft-symbian", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-symbian?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -41,9 +41,5 @@ LIB2FUNCS_STATIC_EXTRA = $(srcdir)/config/arm/fp16.c\n MULTILIB_OPTIONS     = mfloat-abi=softfp\n MULTILIB_DIRNAMES    = softfp\n \n-# There is no C library to link against on Symbian OS -- at least when \n-# building GCC.\n-SHLIB_LC = \n-\n # Symbian OS provides its own startup code.\n EXTRA_MULTILIB_PARTS="}, {"sha": "d6f67f0544563294e421834b61f2fb0aa69dedf3", "filename": "gcc/config/bfin/t-bfin-linux", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -49,8 +49,6 @@ MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf549m-none\n MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf561-none\n MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf592-none\n \n-SHLIB_MAPFILES=$(srcdir)/config/bfin/libgcc-bfin.ver\n-\n EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o crtbeginS.o crtendS.o\n \n # This rule uses MULTILIB_MATCHES to generate a definition of"}, {"sha": "98146150d32d530bceeb0a75ee6f0da51c520e2c", "filename": "gcc/config/c6x/t-c6x-elf", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fc6x%2Ft-c6x-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fc6x%2Ft-c6x-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Ft-c6x-elf?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -63,5 +63,3 @@ EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o crtbeginS.o crtendS.o crti.o crtn.o\n CRTSTUFF_T_CFLAGS = -msdata=none\n CRTSTUFF_T_CFLAGS_S = -msdata=none\n TARGET_LIBGCC2_CFLAGS = -msdata=none\n-\n-SHLIB_MAPFILES += $(srcdir)/config/c6x/libgcc-c6xeabi.ver"}, {"sha": "e10d083f5654f89bd16d71f66b637cd63e9d56c9", "filename": "gcc/config/cris/t-linux", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fcris%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fcris%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,6 +1,5 @@\n TARGET_LIBGCC2_CFLAGS += -fPIC\n CRTSTUFF_T_CFLAGS_S = $(TARGET_LIBGCC2_CFLAGS)\n-SHLIB_MAPFILES += $(srcdir)/config/cris/libgcc.ver\n \n # We *know* we have a limits.h in the glibc library, with extra\n # definitions needed for e.g. libgfortran."}, {"sha": "305d3e6de4b8e81f0367a80753c8d58fe8998a83", "filename": "gcc/config/frv/t-linux", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Ffrv%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Ffrv%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2004, 2007 Free Software Foundation, Inc.\n+# Copyright (C) 2004, 2007, 2011 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -28,6 +28,3 @@ EXTRA_MULTILIB_PARTS =\n \n CRTSTUFF_T_CFLAGS = -fPIC\n TARGET_LIBGCC2_CFLAGS = -fPIC\n-\n-SHLIB_MAPFILES = $$(libgcc_objdir)/libgcc-std.ver \\\n-\t\t $(srcdir)/config/frv/libgcc-frv.ver"}, {"sha": "242d7f27f65f7542bdbe48136ba7992ecddc2b50", "filename": "gcc/config/i386/t-cygming", "status": "modified", "additions": 2, "deletions": 61, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fi386%2Ft-cygming", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fi386%2Ft-cygming", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygming?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,4 +1,5 @@\n-# Copyright (C) 2003, 2005, 2008, 2009, 2010 Free Software Foundation, Inc.\n+# Copyright (C) 2003, 2005, 2008, 2009, 2010, 2011\n+# Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -54,63 +55,3 @@ msformat-c.o: $(srcdir)/config/i386/msformat-c.c $(CONFIG_H) $(SYSTEM_H) coretyp\n \t$(srcdir)/config/i386/msformat-c.c\n \n STMP_FIXINC=stmp-fixinc\n-\n-# Build a shared libgcc library for PECOFF with a DEF file\n-# with the GNU linker.\n-#\n-# mkmap-flat.awk is used with the pe_dll option to produce a DEF instead\n-# of an ELF map file.\n-#\n-# Warning: If SHLIB_SOVERSION or SHLIB_SONAME are updated, LIBGCC_SONAME\n-# in mingw32.h and SHLIB_MKMAP_OPTS below must be updated also.\n-\n-SHLIB_EXT = .dll\n-SHLIB_IMPLIB = @shlib_base_name@.a\n-SHLIB_SOVERSION = 1\n-SHLIB_SONAME = @shlib_base_name@_$(EH_MODEL)-$(SHLIB_SOVERSION)$(SHLIB_EXT)\n-SHLIB_MAP = @shlib_map_file@\n-SHLIB_OBJS = @shlib_objs@\n-SHLIB_DIR = @multilib_dir@/shlib\n-SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n-# SHLIB_DLLDIR is defined by including one of either t-dlldir or t-dlldir-x\n-# (native/cross build respectively) in the tmake_file list in gcc/config.gcc.\n-ifndef SHLIB_DLLDIR\n-$(error SHLIB_DLLDIR must be defined)\n-endif\n-ifndef SHLIB_PTHREAD_CFLAG\n-SHLIB_PTHREAD_CFLAG =\n-endif\n-ifndef SHLIB_PTHREAD_LDFLAG\n-SHLIB_PTHREAD_LDFLAG =\n-endif\n-\n-SHLIB_LINK = $(LN_S) -f $(SHLIB_MAP) $(SHLIB_MAP).def && \\\n-\tif [ ! -d $(SHLIB_DIR) ]; then \\\n-\t\tmkdir $(SHLIB_DIR); \\\n-\telse true; fi && \\\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(SHLIB_PTHREAD_CFLAG) \\\n-\t-shared -nodefaultlibs \\\n-\t$(SHLIB_MAP).def \\\n-\t-Wl,--out-implib,$(SHLIB_DIR)/$(SHLIB_IMPLIB).tmp \\\n-\t-o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp @multilib_flags@ \\\n-\t$(SHLIB_OBJS) ${SHLIB_PTHREAD_LDFLAG} $(SHLIB_LC) && \\\n-\tif [ -f $(SHLIB_DIR)/$(SHLIB_SONAME) ]; then \\\n-\t  mv -f $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n-\t\t$(SHLIB_DIR)/$(SHLIB_SONAME).backup; \\\n-\telse true; fi && \\\n-\tmv $(SHLIB_DIR)/$(SHLIB_SONAME).tmp $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n-\tmv $(SHLIB_DIR)/$(SHLIB_IMPLIB).tmp $(SHLIB_DIR)/$(SHLIB_IMPLIB)\n-# $(slibdir) double quoted to protect it from expansion while building\n-# libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = \\\n-\t$$(mkinstalldirs) $$(DESTDIR)$$(SHLIB_DLLDIR) \\\n-\t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL) $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n-\t  $$(DESTDIR)$$(SHLIB_DLLDIR)/$(SHLIB_SONAME); \\\n-\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_IMPLIB) \\\n-\t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_IMPLIB)\n-SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n-# We'd like to use SHLIB_SONAME here too, but shlib_base_name\n-# does not get substituted before mkmap-flat.awk is run.\n-SHLIB_MKMAP_OPTS = -v pe_dll=libgcc_s_$(EH_MODEL)-$(SHLIB_SOVERSION)$(SHLIB_EXT)\n-SHLIB_MAPFILES = $$(libgcc_objdir)/libgcc-std.ver"}, {"sha": "9ac234b6f4938da5a5d9cb98c216f90d8907d3bf", "filename": "gcc/config/i386/t-cygwin", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fi386%2Ft-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fi386%2Ft-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygwin?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2008, 2009, 2010\n+# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2008, 2009, 2010, 2011\n # Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n@@ -22,18 +22,3 @@\n # first.\n LIBGCC2_INCLUDES += -I$(srcdir)/../winsup/include \\\n \t-I$(srcdir)/../winsup/cygwin/include\n-\n-# Cygwin-specific parts of LIB_SPEC\n-SHLIB_LC = -lcygwin -ladvapi32 -lshell32 -luser32 -lkernel32\n-\n-# We have already included one of the t-{dw2,sjlj}-eh fragments for EH_MODEL\n-SHLIB_EH_EXTENSION = $(subst -dw2,,-$(EH_MODEL))\n-\n-# Cygwin uses different conventions than MinGW; override generic SHLIB_ def'ns here.\n-SHLIB_IMPLIB = @shlib_base_name@$(SHLIB_EXT).a\n-SHLIB_SONAME = cyggcc_s$(SHLIB_EH_EXTENSION)-$(SHLIB_SOVERSION)$(SHLIB_EXT)\n-# This must match the definitions of SHLIB_SONAME/SHLIB_SOVERSION and LIBGCC_SONAME.\n-# We'd like to use SHLIB_SONAME here too, and we can, since\n-# we don't rely on shlib_base_name substitution for it.\n-SHLIB_MKMAP_OPTS = -v pe_dll=$(SHLIB_SONAME)\n-"}, {"sha": "a3e03317a040cc8827cfafc3449133de6e243595", "filename": "gcc/config/i386/t-dlldir", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Fi386%2Ft-dlldir", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Fi386%2Ft-dlldir", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-dlldir?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -1,6 +0,0 @@\n-\n-# In a native build, target DLLs go in bindir, where they can be executed.\n-# Note double quoting to prevent variables from being evaluated until install\n-# time; we don't want to expand them during libgcc.mvars generation.\n-\n-SHLIB_DLLDIR = $$(bindir)"}, {"sha": "07dd845f0a6004dcc3fd3e83aa4372f631d0dd90", "filename": "gcc/config/i386/t-dlldir-x", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Fi386%2Ft-dlldir-x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Fi386%2Ft-dlldir-x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-dlldir-x?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -1,9 +0,0 @@\n-\n-# In a cross build, bindir contains host not target binaries, so target DLLs\n-# instead go in toolexeclibdir, alongside other target binaries and static libs.\n-# Note double quoting to prevent variables from being evaluated until install\n-# time; we don't want to expand them during libgcc.mvars generation, and in\n-# any case, $toolexeclibdir is not defined in the gcc/ subdirectory, only in\n-# target lib directories.\n-\n-SHLIB_DLLDIR = $$(toolexeclibdir)"}, {"sha": "68669d44a0a78942eaac5b0ebff04faefcd5f8b7", "filename": "gcc/config/i386/t-mingw-w32", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fi386%2Ft-mingw-w32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fi386%2Ft-mingw-w32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-mingw-w32?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -2,8 +2,5 @@ MULTILIB_OPTIONS = m64/m32\n MULTILIB_DIRNAMES = 64 32\n MULTILIB_OSDIRNAMES = ../lib64 ../lib\n \n-# MinGW-specific parts of LIB_SPEC\n-SHLIB_LC = -lmingwthrd -lmingw32 -lmingwex -lmoldname -lmsvcrt -ladvapi32 -lshell32 -luser32 -lkernel32\n-\n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib"}, {"sha": "1e86e05e701548e9aa2e58a00ba0c4ccc7e6aa21", "filename": "gcc/config/i386/t-mingw-w64", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fi386%2Ft-mingw-w64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fi386%2Ft-mingw-w64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-mingw-w64?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -2,8 +2,5 @@ MULTILIB_OPTIONS = m64/m32\n MULTILIB_DIRNAMES = 64 32\n MULTILIB_OSDIRNAMES = ../lib ../lib32\n \n-# MinGW-specific parts of LIB_SPEC\n-SHLIB_LC = -lmingwthrd -lmingw32 -lmingwex -lmoldname -lmsvcrt -ladvapi32 -lshell32 -luser32 -lkernel32\n-\n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib"}, {"sha": "ce18a92e27582aba97aefaf0e6eaf53f67337485", "filename": "gcc/config/ia64/t-glibc", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Fia64%2Ft-glibc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Fia64%2Ft-glibc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-glibc?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -1 +0,0 @@\n-SHLIB_MAPFILES += $(srcdir)/config/ia64/libgcc-glibc.ver"}, {"sha": "e1554861d18bc1e3852f1bdb2ceca85dca2117e6", "filename": "gcc/config/ia64/t-hpux", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fia64%2Ft-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fia64%2Ft-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-hpux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -49,25 +49,3 @@ LIBGCC1_TEST =\n # the HP-UX libunwind library.\n \n T_CFLAGS += -DUSE_LIBUNWIND_EXCEPTIONS\n-\n-SHLIB_EXT = .so\n-# Must include -lunwind in the link, so that libgcc_s.so has the necessary\n-# DT_NEEDED entry for libunwind.\n-SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-\t-Wl,+h,@shlib_base_name@.so.0 \\\n-\t-o @multilib_dir@/@shlib_base_name@.so @multilib_flags@ \\\n-\t@shlib_objs@ -lunwind -lc && \\\n-\trm -f @multilib_dir@/@shlib_base_name@.so.0 && \\\n-\t$(LN_S) @shlib_base_name@.so @multilib_dir@/@shlib_base_name@.so.0\n-# $(slibdir) double quoted to protect it from expansion while building\n-# libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = \\\n-        $$(mkinstalldirs) $$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@; \\\n-\t$(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.so \\\n-\t$$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so.0; \\\n-\trm -f $$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so; \\\n-\t$(LN_S) @shlib_base_name@.so.0 \\\n-\t$$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so; \\\n-\tchmod +x $$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so\n-\n-SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk"}, {"sha": "874e9ecf1071fc52b14e1fdaf32afbc99da11897", "filename": "gcc/config/ia64/t-ia64", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-ia64?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -38,8 +38,6 @@ LIB1ASMFUNCS  = __divxf3 __divdf3 __divsf3 \\\n # to support the Intel assembler.\n #LIBGCC2_DEBUG_CFLAGS = -g1 -P\n \n-SHLIB_MAPFILES += $(srcdir)/config/ia64/libgcc-ia64.ver\n-\n # Effectively disable the crtbegin/end rules using crtstuff.c\n T = disable\n "}, {"sha": "e834aea1ab029e620c08116f32eb44e5f76f55ad", "filename": "gcc/config/ia64/t-vms", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fia64%2Ft-vms", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fia64%2Ft-vms", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-vms?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -31,17 +31,3 @@ CRTSTUFF_T_CFLAGS_S = -O0\n $(T)crtinitS.o: $(srcdir)/config/ia64/vms-crtinit.asm $(GCC_PASSES)\n \t$(GCC_FOR_TARGET) -I. -c -o $(T)crtinitS.o -x assembler-with-cpp \\\n \t\t$(srcdir)/config/ia64/vms-crtinit.asm\n-\n-# Shared library macros\n-shlib_version:=$(shell echo $(BASEVER_c) | sed -e 's/\\./,/' -e 's/\\.//g')\n-SHLIB_EXT = .exe\n-SHLIB_OBJS = @shlib_objs@\n-SHLIB_NAME = @shlib_base_name@.exe\n-SHLIB_MULTILIB =\n-SHLIB_INSTALL = $(INSTALL_DATA) $(SHLIB_NAME) $$(DESTDIR)$$(libsubdir)/$(SHLIB_ NAME)\n-SHLIB_LINK = \\\n-  $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -nodefaultlibs \\\n-  -shared --for-linker=/noinform -o $(SHLIB_NAME) $(SHLIB_OBJS) \\\n-  --for-linker=$(srcdir)/config/ia64/VMS_SYMVEC_@shlib_base_name@.opt \\\n-  --for-linker=gsmatch=equal,$(shlib_version)\n-"}, {"sha": "88b46dfda6ca4633b64b7ce0f03dd27610b415a6", "filename": "gcc/config/ia64/vms_symvec_libgcc_s.opt", "status": "removed", "additions": 0, "deletions": 89, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Fia64%2Fvms_symvec_libgcc_s.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Fia64%2Fvms_symvec_libgcc_s.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fvms_symvec_libgcc_s.opt?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -1,89 +0,0 @@\n-! Symbol vector listing all the universal symbols to be exported when\n-! building libgcc_s.exe shareable image on IVMS for Gcc 3.4.5.\n-! It would be better to auto-generate this file.\n-\n-case_sensitive=yes\n-SYMBOL_VECTOR=(__divdf3=PROCEDURE)\n-SYMBOL_VECTOR=(__divdi3=PROCEDURE)\n-SYMBOL_VECTOR=(__divsf3=PROCEDURE)\n-SYMBOL_VECTOR=(__divsi3=PROCEDURE)\n-SYMBOL_VECTOR=(__divxf3=PROCEDURE)\n-SYMBOL_VECTOR=(__moddi3=PROCEDURE)\n-SYMBOL_VECTOR=(__modsi3=PROCEDURE)\n-SYMBOL_VECTOR=(__ia64_nonlocal_goto=PROCEDURE)\n-SYMBOL_VECTOR=(__ia64_restore_stack_nonlocal=PROCEDURE)\n-SYMBOL_VECTOR=(__ia64_save_stack_nonlocal=PROCEDURE)\n-SYMBOL_VECTOR=(__ia64_trampoline=PROCEDURE)\n-SYMBOL_VECTOR=(__udivdi3=PROCEDURE)\n-SYMBOL_VECTOR=(__udivsi3=PROCEDURE)\n-SYMBOL_VECTOR=(__umoddi3=PROCEDURE)\n-SYMBOL_VECTOR=(__umodsi3=PROCEDURE)\n-SYMBOL_VECTOR=(__absvti2=PROCEDURE)\n-SYMBOL_VECTOR=(__absvdi2=PROCEDURE)\n-SYMBOL_VECTOR=(__absvsi2=PROCEDURE)\n-SYMBOL_VECTOR=(__addvti3=PROCEDURE)\n-SYMBOL_VECTOR=(__addvdi3=PROCEDURE)\n-SYMBOL_VECTOR=(__addvsi3=PROCEDURE)\n-SYMBOL_VECTOR=(__ashlti3=PROCEDURE)\n-SYMBOL_VECTOR=(__ashrti3=PROCEDURE)\n-SYMBOL_VECTOR=(__clear_cache=PROCEDURE)\n-SYMBOL_VECTOR=(__clzti2=PROCEDURE)\n-SYMBOL_VECTOR=(__clzdi2=PROCEDURE)\n-SYMBOL_VECTOR=(__cmpti2=PROCEDURE)\n-SYMBOL_VECTOR=(__ctzti2=PROCEDURE)\n-SYMBOL_VECTOR=(__ctzdi2=PROCEDURE)\n-SYMBOL_VECTOR=(__divti3=PROCEDURE)\n-SYMBOL_VECTOR=(__enable_execute_stack=PROCEDURE)\n-SYMBOL_VECTOR=(__ffsti2=PROCEDURE)\n-SYMBOL_VECTOR=(__ffsdi2=PROCEDURE)\n-SYMBOL_VECTOR=(__fixdfti=PROCEDURE)\n-SYMBOL_VECTOR=(__fixsfti=PROCEDURE)\n-SYMBOL_VECTOR=(__fixunsdfti=PROCEDURE)\n-SYMBOL_VECTOR=(__fixunsdfdi=PROCEDURE)\n-SYMBOL_VECTOR=(__fixunssfti=PROCEDURE)\n-SYMBOL_VECTOR=(__fixunssfdi=PROCEDURE)\n-SYMBOL_VECTOR=(__floattidf=PROCEDURE)\n-SYMBOL_VECTOR=(__floattisf=PROCEDURE)\n-SYMBOL_VECTOR=(__lshrti3=PROCEDURE)\n-SYMBOL_VECTOR=(__modti3=PROCEDURE)\n-SYMBOL_VECTOR=(__multi3=PROCEDURE)\n-SYMBOL_VECTOR=(__mulvti3=PROCEDURE)\n-SYMBOL_VECTOR=(__mulvdi3=PROCEDURE)\n-SYMBOL_VECTOR=(__mulvsi3=PROCEDURE)\n-SYMBOL_VECTOR=(__negti2=PROCEDURE)\n-SYMBOL_VECTOR=(__negvti2=PROCEDURE)\n-SYMBOL_VECTOR=(__negvdi2=PROCEDURE)\n-SYMBOL_VECTOR=(__negvsi2=PROCEDURE)\n-SYMBOL_VECTOR=(__parityti2=PROCEDURE)\n-SYMBOL_VECTOR=(__paritydi2=PROCEDURE)\n-SYMBOL_VECTOR=(__popcountti2=PROCEDURE)\n-SYMBOL_VECTOR=(__popcountdi2=PROCEDURE)\n-SYMBOL_VECTOR=(__subvti3=PROCEDURE)\n-SYMBOL_VECTOR=(__subvdi3=PROCEDURE)\n-SYMBOL_VECTOR=(__subvsi3=PROCEDURE)\n-SYMBOL_VECTOR=(__ucmpti2=PROCEDURE)\n-SYMBOL_VECTOR=(__udiv_w_sdiv=PROCEDURE)\n-SYMBOL_VECTOR=(__udivti3=PROCEDURE)\n-SYMBOL_VECTOR=(__udivmodti4=PROCEDURE)\n-SYMBOL_VECTOR=(__umodti3=PROCEDURE)\n-SYMBOL_VECTOR=(__gthread_active_p=PROCEDURE)\n-SYMBOL_VECTOR=(__gthread_mutex_lock=PROCEDURE)\n-SYMBOL_VECTOR=(__gthread_mutex_unlock=PROCEDURE)\n-SYMBOL_VECTOR=(__gcc_personality_v0=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_GetGR=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_SetGR=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_GetIP=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_GetIPInfo=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_SetIP=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_GetLanguageSpecificData=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_GetRegionStart=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_FindEnclosingFunction=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_GetCFA=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_GetBSP=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_RaiseException=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_ForcedUnwind=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_Resume=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_Resume_or_Rethrow=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_DeleteException=PROCEDURE)\n-SYMBOL_VECTOR=(_Unwind_Backtrace=PROCEDURE)\n-case_sensitive=NO"}, {"sha": "6697e7bd10a2cc03fdd4d2b024495d02d0c5ad83", "filename": "gcc/config/m32r/t-linux", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fm32r%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fm32r%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -41,5 +41,3 @@ INSTALL_ASSERT_H =\n LIBGCC1 = \n CROSS_LIBGCC1 =\n LIBGCC1_TEST =\n-\n-SHLIB_MAPFILES += $(srcdir)/config/m32r/libgcc-glibc.ver"}, {"sha": "31a042bb75e3ce7024b71c5f1aca38bef9831cb5", "filename": "gcc/config/mips/t-libgcc-mips16", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fmips%2Ft-libgcc-mips16", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fmips%2Ft-libgcc-mips16", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-libgcc-mips16?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -37,6 +37,3 @@ LIB1ASMFUNCS = _m16addsf3 _m16subsf3 _m16mulsf3 _m16divsf3 \\\n \t_m16stubsc9 _m16stubsc10 \\\n \t_m16stubdc0 _m16stubdc1 _m16stubdc2 _m16stubdc5 _m16stubdc6 \\\n \t_m16stubdc9 _m16stubdc10\n-\n-# Version these symbols if building libgcc.so.\n-SHLIB_MAPFILES += $(srcdir)/config/mips/libgcc-mips16.ver"}, {"sha": "d5a5b6c8609e129285e442bf44f1133e3de3c38b", "filename": "gcc/config/pa/t-hpux-shlib", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Fpa%2Ft-hpux-shlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Fpa%2Ft-hpux-shlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-hpux-shlib?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -1,46 +0,0 @@\n-# Copyright (C) 2001, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-# Build a shared libgcc library.\n-SHLIB_EXT = .sl\n-SHLIB_NAME = @shlib_base_name@$(SHLIB_EXT)\n-SHLIB_SOVERSION = 1\n-SHLIB_SONAME = @shlib_base_name@.$(SHLIB_SOVERSION)\n-SHLIB_OBJS = @shlib_objs@\n-SHLIB_DIR = @multilib_dir@\n-SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n-\n-SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared  -nodefaultlibs \\\n-\t-Wl,+h -Wl,$(SHLIB_SONAME) \\\n-\t-o $(SHLIB_DIR)/$(SHLIB_NAME).tmp @multilib_flags@ $(SHLIB_OBJS) && \\\n-        rm -f $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n-\tif [ -f $(SHLIB_DIR)/$(SHLIB_NAME) ]; then \\\n-\t  mv -f $(SHLIB_DIR)/$(SHLIB_NAME) $(SHLIB_DIR)/$(SHLIB_NAME).backup; \\\n-\telse true; fi && \\\n-\tmv $(SHLIB_DIR)/$(SHLIB_NAME).tmp $(SHLIB_DIR)/$(SHLIB_NAME) && \\\n-        $(LN_S) $(SHLIB_NAME) $(SHLIB_DIR)/$(SHLIB_SONAME)\n-\n-# $(slibdir) double quoted to protect it from expansion while building\n-# libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = \\\n-        $$(mkinstalldirs) $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL_DATA) -m 555 $(SHLIB_DIR)/$(SHLIB_NAME) \\\n-\t$$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n-        rm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_NAME); \\\n-        $(LN_S) $(SHLIB_SONAME) \\\n-\t$$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_NAME)"}, {"sha": "ebd898d178468eba275c555954609c90b983650e", "filename": "gcc/config/rs6000/t-aix43", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Frs6000%2Ft-aix43", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Frs6000%2Ft-aix43", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-aix43?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -47,32 +47,3 @@ MULTILIB_MATCHES\t= mcpu?power=mcpu?power \\\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n-\n-# Build a shared libgcc library.\n-SHLIB_EXT = .a\n-SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-\t-Wl,-bE:@shlib_map_file@ -o @multilib_dir@/shr.o \\\n-\t@multilib_flags@ @shlib_objs@ -lc \\\n-\t`case @multilib_dir@ in \\\n-\t*pthread*) echo -L/usr/lib/threads -lpthreads -lc_r /usr/lib/libc.a ;; \\\n-\t*) echo -lc ;; esac` ; \\\n-\trm -f @multilib_dir@/tmp-@shlib_base_name@.a ; \\\n-\t$(AR_CREATE_FOR_TARGET) @multilib_dir@/tmp-@shlib_base_name@.a \\\n-\t@multilib_dir@/shr.o ; \\\n-\tmv @multilib_dir@/tmp-@shlib_base_name@.a \\\n-\t   @multilib_dir@/@shlib_base_name@.a ; \\\n-\trm -f @multilib_dir@/shr.o\n-# $(slibdir) double quoted to protect it from expansion while building\n-# libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = \\\n-\t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@; \\\n-\t$(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.a \\\n-\t\t$$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@/\n-SHLIB_LIBS = -lc `case @multilib_dir@ in *pthread*) echo -lpthread ;; esac`\n-SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n-SHLIB_MAPFILES = $$(libgcc_objdir)/libgcc-std.ver\n-SHLIB_NM_FLAGS = -Bpg -X32_64\n-\n-# Either 32-bit and 64-bit objects in archives.\n-AR_FLAGS_FOR_TARGET = -X32_64\n-"}, {"sha": "3822b8a112cb5a4dfe1b87577d6c4a7acd208a54", "filename": "gcc/config/rs6000/t-aix52", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Frs6000%2Ft-aix52", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Frs6000%2Ft-aix52", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-aix52?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -28,31 +28,3 @@ MULTILIB_MATCHES\t=\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n-\n-# Build a shared libgcc library.\n-SHLIB_EXT = .a\n-SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-\t-Wl,-bE:@shlib_map_file@ -o @multilib_dir@/shr.o \\\n-\t@multilib_flags@ @shlib_objs@ -lc \\\n-\t`case @multilib_dir@ in \\\n-\t*pthread*) echo -L$(TARGET_SYSTEM_ROOT)/usr/lib/threads -lpthreads -lc_r $(TARGET_SYSTEM_ROOT)/usr/lib/libc.a ;; \\\n-\t*) echo -lc ;; esac` ; \\\n-\trm -f @multilib_dir@/tmp-@shlib_base_name@.a ; \\\n-\t$(AR_CREATE_FOR_TARGET) @multilib_dir@/tmp-@shlib_base_name@.a \\\n-\t@multilib_dir@/shr.o ; \\\n-\tmv @multilib_dir@/tmp-@shlib_base_name@.a \\\n-\t   @multilib_dir@/@shlib_base_name@.a ; \\\n-\trm -f @multilib_dir@/shr.o\n-# $(slibdir) double quoted to protect it from expansion while building\n-# libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = \\\n-\t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@; \\\n-\t$(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.a \\\n-\t\t$$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@/\n-SHLIB_LIBS = -lc `case @multilib_dir@ in *pthread*) echo -lpthread ;; esac`\n-SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n-SHLIB_MAPFILES = $$(libgcc_objdir)/libgcc-std.ver\n-SHLIB_NM_FLAGS = -Bpg -X32_64\n-\n-# Either 32-bit and 64-bit objects in archives.\n-AR_FLAGS_FOR_TARGET = -X32_64"}, {"sha": "e517778be6febe2a1f553672fd983175307d4b5d", "filename": "gcc/config/t-libunwind", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Ft-libunwind", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Ft-libunwind", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-libunwind?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -17,11 +17,6 @@\n # <http://www.gnu.org/licenses/>.\n \n # Use the system libunwind library.\n-#\n-# Override the default value from t-slibgcc-elf-ver and mention -lunwind\n-# so that the resulting libgcc_s.so has the necessary DT_NEEDED entry for\n-# libunwind.\n-SHLIB_LC = -lunwind -lc\n \n T_CFLAGS += -DUSE_LIBUNWIND_EXCEPTIONS\n TARGET_LIBGCC2_CFLAGS += -DUSE_GAS_SYMVER"}, {"sha": "5fb71c98f9db4dd58ec65c7312a9bb32eeec7d7a", "filename": "gcc/config/t-linux", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -21,7 +21,3 @@\n CRTSTUFF_T_CFLAGS_S = $(CRTSTUFF_T_CFLAGS) -fPIC\n # Compile libgcc2.a with pic.\n TARGET_LIBGCC2_CFLAGS = -fPIC\n-\n-# Override t-slibgcc-elf-ver to export some libgcc symbols with\n-# the symbol versions that glibc used.\n-SHLIB_MAPFILES += $(srcdir)/config/libgcc-glibc.ver"}, {"sha": "91f2d92e82248f527802949d0fa7d2312f78a436", "filename": "gcc/config/t-slibgcc", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Ft-slibgcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Ft-slibgcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,2 @@\n+# Cause ENABLE_SHARED_LIBGCC to be defined in gcc/Makefile.in (DRIVER_DEFINES).\n+SHLIB = true"}, {"sha": "e68ce5eb24a40a67378966624b0ed42f09958708", "filename": "gcc/config/t-slibgcc-dummy", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Ft-slibgcc-dummy", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Ft-slibgcc-dummy", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-dummy?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -1,3 +0,0 @@\n-# SHLIB_LINK must be non-empty so ENABLE_SHARED_LIBGCC is defined correctly\n-# in DRIVER_DEFINES if libgcc configuration has been moved to toplevel.\n-SHLIB_LINK = dummy"}, {"sha": "b90f4fcf3a3b2b80a970ec420854af6102d10aa2", "filename": "gcc/config/t-slibgcc-elf-ver", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Ft-slibgcc-elf-ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Fconfig%2Ft-slibgcc-elf-ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-elf-ver?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -1,56 +0,0 @@\n-# Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-# Build a shared libgcc library for ELF with symbol versioning\n-# with the GNU linker.\n-\n-SHLIB_EXT = .so\n-SHLIB_SOLINK = @shlib_base_name@.so\n-SHLIB_SOVERSION = 1\n-SHLIB_SONAME = @shlib_base_name@.so.$(SHLIB_SOVERSION)\n-SHLIB_MAP = @shlib_map_file@\n-SHLIB_OBJS = @shlib_objs@\n-SHLIB_DIR = @multilib_dir@\n-SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n-SHLIB_LC = -lc\n-SHLIB_MAKE_SOLINK = $(LN_S) $(SHLIB_SONAME) $(SHLIB_DIR)/$(SHLIB_SOLINK)\n-SHLIB_INSTALL_SOLINK = $(LN_S) $(SHLIB_SONAME) \\\n-\t$$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)\n-\n-SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-\t-Wl,--soname=$(SHLIB_SONAME) \\\n-\t-Wl,--version-script=$(SHLIB_MAP) \\\n-\t-o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp @multilib_flags@ \\\n-\t$(SHLIB_OBJS) $(SHLIB_LC) && \\\n-\trm -f $(SHLIB_DIR)/$(SHLIB_SOLINK) && \\\n-\tif [ -f $(SHLIB_DIR)/$(SHLIB_SONAME) ]; then \\\n-\t  mv -f $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n-\t\t$(SHLIB_DIR)/$(SHLIB_SONAME).backup; \\\n-\telse true; fi && \\\n-\tmv $(SHLIB_DIR)/$(SHLIB_SONAME).tmp $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n-\t$(SHLIB_MAKE_SOLINK)\n-# $(slibdir) double quoted to protect it from expansion while building\n-# libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = \\\n-\t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n-\t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n-\trm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n-\t$(SHLIB_INSTALL_SOLINK)\n-SHLIB_MKMAP = $(srcdir)/mkmap-symver.awk\n-SHLIB_MAPFILES = $$(libgcc_objdir)/libgcc-std.ver"}, {"sha": "7d39351fa66c5d98a59b739be4a7117aa7cf0f3b", "filename": "gcc/config/xtensa/t-linux", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fxtensa%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfig%2Fxtensa%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,3 +1 @@\n EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o\n-\n-SHLIB_MAPFILES += $(srcdir)/config/xtensa/libgcc-xtensa.ver"}, {"sha": "2a205093a437054849c47c40641ba67fd82b2b23", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 21, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -671,7 +671,6 @@ all_gtfiles\n all_compilers\n srcdir\n subdirs\n-slibdir\n dollar\n gcc_tooldir\n enable_lto\n@@ -918,7 +917,6 @@ with_gc\n with_system_zlib\n enable_maintainer_mode\n enable_version_specific_runtime_libs\n-with_slibdir\n enable_plugin\n enable_libquadmath_support\n with_linker_hash_style\n@@ -1674,7 +1672,6 @@ Optional Packages:\n   --with-gc={page,zone}   choose the garbage collection mechanism to use with\n                           the compiler\n   --with-system-zlib      use installed libz\n-  --with-slibdir=DIR      shared libraries in DIR [LIBDIR]\n   --with-linker-hash-style={sysv,gnu,both}\n                           specify the linker hash style\n \n@@ -18072,7 +18069,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18075 \"configure\"\n+#line 18072 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18178,7 +18175,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18181 \"configure\"\n+#line 18178 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -26957,22 +26954,6 @@ if test \"${enable_version_specific_runtime_libs+set}\" = set; then :\n fi\n \n \n-\n-# Check whether --with-slibdir was given.\n-if test \"${with_slibdir+set}\" = set; then :\n-  withval=$with_slibdir; slibdir=\"$with_slibdir\"\n-else\n-  if test \"${enable_version_specific_runtime_libs+set}\" = set; then\n-  slibdir='$(libsubdir)'\n-elif test \"$host\" != \"$target\"; then\n-  slibdir='$(build_tooldir)/lib'\n-else\n-  slibdir='$(libdir)'\n-fi\n-fi\n-\n-\n-\n # Substitute configuration variables\n \n "}, {"sha": "9f7997b9141ffa5bce236d79346957d19680664c", "filename": "gcc/configure.ac", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -4921,18 +4921,6 @@ AC_ARG_ENABLE(version-specific-runtime-libs,\n                 [specify that runtime libraries should be\n                  installed in a compiler-specific directory])])\n \n-AC_ARG_WITH(slibdir,\n-[AS_HELP_STRING([--with-slibdir=DIR], [shared libraries in DIR @<:@LIBDIR@:>@])],\n-slibdir=\"$with_slibdir\",\n-if test \"${enable_version_specific_runtime_libs+set}\" = set; then\n-  slibdir='$(libsubdir)'\n-elif test \"$host\" != \"$target\"; then\n-  slibdir='$(build_tooldir)/lib'\n-else\n-  slibdir='$(libdir)'\n-fi)\n-AC_SUBST(slibdir)\n-\n # Substitute configuration variables\n AC_SUBST(subdirs)\n AC_SUBST(srcdir)"}, {"sha": "d246e5cc4ba29d22e6e4848ef8ccd217c7ab210d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,3 +1,7 @@\n+2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Make-lang.in (g++spec.o): Pass SHLIB instead of SHLIB_LINK.\n+\n 2011-11-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/44277"}, {"sha": "650fc38509657af6f11d986a8036691c3c393d62", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -55,7 +55,7 @@ c++: cc1plus$(exeext)\n \n g++spec.o: $(srcdir)/cp/g++spec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n     $(CONFIG_H) $(OPTS_H)\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n+\t(SHLIB='$(SHLIB)'; \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n \t\t$(INCLUDES) $(srcdir)/cp/g++spec.c)\n "}, {"sha": "ade1906d2553ffe527b1ed9b91aaa31a13ab7616", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,3 +1,7 @@\n+2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Makef-lang.in (gfortranspec.o): Pass SHLIB instead of SHLIB_LINK.\n+\n 2011-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/50573"}, {"sha": "2602b157ab857e96d0b20ac1bb585756405ac76c", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -79,7 +79,7 @@ fortran: f951$(exeext)\n \n gfortranspec.o: $(srcdir)/fortran/gfortranspec.c $(SYSTEM_H) $(TM_H) $(GCC_H) \\\n \t$(CONFIG_H) coretypes.h intl.h $(OPTS_H)\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n+\t(SHLIB='$(SHLIB)'; \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n \t\t$(INCLUDES) $(srcdir)/fortran/gfortranspec.c)\n "}, {"sha": "2eaf210c94fc70e873214d2b945a55c92ddf3add", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,3 +1,7 @@\n+2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Make-lang.in (gospec.o): Pass SHLIB instead of SHLIB_LINK.\n+\n 2011-08-24  Roberto Lublinerman  <rluble@gmail.com>\n \n \t* lang.opt: Add fgo-optimize-."}, {"sha": "62a4d6f0deefe18accb2be1eac1e2637721ed3a9", "filename": "gcc/go/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fgo%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fgo%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FMake-lang.in?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -32,7 +32,7 @@ go: go1$(exeext)\n \n gospec.o: $(srcdir)/go/gospec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n     $(CONFIG_H) opts.h\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n+\t(SHLIB='$(SHLIB)'; \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n \t\t$(INCLUDES) $(srcdir)/go/gospec.c)\n "}, {"sha": "715d1f5885cada07844501973ce0bbf50670e90a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,3 +1,7 @@\n+2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Make-lang.in (jvspec.o): Pass SHLIB instead of SHLIB_LINK.\n+\n 2011-10-15  Tom Tromey  <tromey@redhat.com>\n \t    Dodji Seketeli  <dodji@redhat.com>\n "}, {"sha": "4d6b63b37082ef4dfd993a055325e8e88495d7f2", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -58,7 +58,7 @@ JAVA_TARGET_INDEPENDENT_BIN_TOOLS = jcf-dump\n \n jvspec.o: $(srcdir)/java/jvspec.c $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(GCC_H) $(CONFIG_H) java/jcf.h java/javaop.h $(OPTS_H)\n-\t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n+\t(SHLIB='$(SHLIB)'; \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n \t\t$(INCLUDES) $(srcdir)/java/jvspec.c $(OUTPUT_OPTION))\n "}, {"sha": "5227073acfe4e14690d626a6dcb3f88e81954641", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,3 +1,156 @@\n+2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Makefile.in (SHLIB_NM_FLAGS): Set.\n+\t* mkmap-flat.awk, mkmap-symver.awk: New files.\n+\t* configure.ac (libgcc_cv_lib_sjlj_exceptions): Check for SjLj\n+\texceptions.\n+\t* configure: Regenerate.\n+\t* config/libgcc-glibc.ver: New file.\n+\t* config/libgcc-libsystem.ver: New file.\n+\t* config/t-libunwind (SHLIB_LC): Set.\n+\t* config/t-linux: New file.\n+\t* config/t-slibgcc (INSTALL_SHLIB): New.\n+\t(SHLIB_INSTALL): Use it.\n+\t* config/t-slibgcc-darwin (SHLIB_MKMAP): Use $(srcdir) to refer\n+\tto mkmap-symver.awk.\n+\t(SHLIB_MAPFILES): Don't append, adapt pathname.\n+\t(SHLIB_VERPFX): Set.\n+\t* config/t-slibgcc-elf-ver (SHLIB_MKMAP): Use $(srcdir) to refer\n+\tto mkmap-symver.awk.\n+\t* config/t-slibgcc-gld-nover, config/t-slibgcc-hpux,\n+\tconfig/t-slibgcc-libgcc, config/t-slibgcc-vms: New files.\n+\t* config/alpha/libgcc-alpha-ldbl.ver, config/alpha/t-linux: New files.\n+\t* config/alpha/t-slibgcc-osf (SHLIB_MKMAP): Use $(srcdir) to refer\n+\tto mkmap-flat.awk.\n+\t* config/arm/t-bpabi (SHLIB_MAPFILES): Set.\n+\t* config/bfin/libgcc-glibc.ver, config/bfin/t-linux: New files.\n+\t* config/c6x/libgcc-eabi.ver, config/c6x/t-elf: New files.\n+\t* config/cris/libgcc-glibc.ver, config/cris/t-linux: New files.\n+\t* config/frv/libgcc-frv.ver, config/frv/t-linux: New files.\n+\t* config/i386/libgcc-darwin.10.4.ver,\n+\tconfig/i386/libgcc-darwin.10.5.ver, config/i386/libgcc-glibc.ver:\n+\tNew files.\n+\t* config/i386/t-darwin: Remove.\n+\t* config/i386/t-darwin64: Likewise.\n+\t* config/i386/t-dw2-eh, config/i386/t-sjlj-eh: New files.\n+\t* config/i386/t-slibgcc-cygming, config/i386/t-cygwin,\n+\tconfig/i386/t-dlldir, config/i386/t-dlldir-x: New files.\n+\t* config/i386/t-linux: New file.\n+\t* config/i386/t-mingw32: New file.\n+\t* config/ia64/libgcc-glibc.ver, config/ia64/libgcc-ia64.ver: New files.\n+\t* config/ia64/t-glibc: Rename to ...\n+\t* config/ia64/t-linux: ... this.\n+\t(SHLIB_MAPFILES): Set.\n+\t* config/ia64/t-glibc-libunwind: Rename to ...\n+\t* config/ia64/t-linux-libunwind: ... this.\n+\t* config/ia64/t-ia64 (SHLIB_MAPFILES): Set.\n+\t* config/ia64/t-slibgcc-hpux: New file.\n+\t* config/m32r/libgcc-glibc.ver, config/m32r/t-linux: New files.\n+\t* config/m68k/t-slibgcc-elf-ver: New file.\n+\t* config/mips/t-mips16 (SHLIB_MAPFILES): Set.\n+\t* config/mips/t-slibgcc-irix (SHLIB_MKMAP): Use $(srcdir) to refer\n+\tto mkmap-flat.awk.\n+\t* config/pa/t-slibgcc-hpux: New file.\n+\t* config/pa/t-slibgcc-dwarf-ver, config/pa/t-slibgcc-sjsj-ver: New\n+\tfiles.\n+\t* config/rs6000/libgcc-darwin.10.4.ver,\n+\tconfig/rs6000/libgcc-darwin.10.5.ver: New files.\n+\t* config/rs6000/libgcc-ppc-glibc.ver: Rename to\n+\tconfig/rs6000/libgcc-glibc.ver.\n+\t* config/rs6000/libgcc-ppc64.ver: Rename to\n+\tconfig/rs6000/libgcc-ibm-ldouble.ver.\n+\t* config/rs6000/t-darwin (SHLIB_VERPFX): Remove.\n+\t* config/rs6000/t-ibm-ldouble (SHLIB_MAPFILES): Adapt filename.\n+\t* config/rs6000/t-ldbl128: Rename to ...\n+\t* config/rs6000/t-linux: ... this.\n+\t(SHLIB_MAPFILES): Adapt filename.\n+\t* config/rs6000/t-slibgcc-aix: New file.\n+\t* config/sh/libgcc-excl.ver, config/sh/libgcc-glibc.ver: New files.\n+\t* config/sh/t-linux (SHLIB_MAPFILES): Use $(srcdir) to refer to\n+\tlibgcc-excl.ver, libgcc-glibc.ver.\n+\t(SHLIB_LINK, SHLIB_INSTALL): Remove.\n+\t* config/sparc/libgcc-glibc.ver: New file.\n+\t* config/sparc/t-linux: New file.\n+\t* config/xtensa/libgcc-glibc.ver, config/xtensa/t-linux: New files.\n+\t* config.host (*-*-freebsd*): Add t-slibgcc, t-slibgcc-gld,\n+\tt-slibgcc-elf-ver to tmake_file.\n+\tAdd t-slibgcc-nolc-override to tmake_file for posix threads on\n+\t*-*-freebsd[34].\n+\t(*-*-linux*, frv-*-*linux*, *-*-kfreebsd*-gnu, *-*-knetbsd*-gnu,\n+\t*-*-gnu*, *-*-kopensolaris*-gnu): Add t-slibgcc, t-slibgcc-gld,\n+\tt-slibgcc-elf-ver, t-linux to tmake_file.\n+\t(*-*-netbsd*): Add t-slibgcc, t-slibgcc-gld, t-slibgcc-elf-ver to\n+\ttmake_file.\n+\t(alpha*-*-linux*): Add alpha/t-linux to tmake_file.\n+\t(alpha64-dec-*vms*): Add t-slibgcc-vms to tmake_file.\n+\t(alpha*-dec-*vms*): Likewise.\n+\t(arm*-*-freebsd*): Append to tmake_file.\n+\t(arm*-*-netbsdelf*): Add t-slibgcc-gld-nover to tmake_file.\n+\t(arm*-*-linux*): Add t-slibgcc-libgcc to tmake_file for\n+\tarm*-*-linux-*eabi.\n+\t(arm*-*-eabi*, arm*-*-symbianelf*): Add t-slibgcc-nolc-override to\n+\ttmake_file for arm*-*-symbianelf*.\n+\t(bfin*-linux-uclibc*): Append to tmake_file, add bfin/t-linux.\n+\t(cris-*-linux*, crisv32-*-linux*): Append to tmake_file, add\n+\tcris/t-linux.\n+\t(frv-*-*linux*): Append to tmake_file, add frv/t-linux.\n+\t(hppa*-*-linux*): Add t-slibgcc-libgcc, pa/t-slibgcc-sjlj-ver,\n+\tpa/t-slibgcc-dwarf-ver to tmake_file.\n+\t(hppa[12]*-*-hpux10*): Add t-slibgcc, pa/t-slibgcc-sjlj-ver,\n+\tpa/t-slibgcc-dwarf-ver, t-slibgcc-hpux, pa/t-slibgcc-hpux to tmake_file.\n+\t(hppa*64*-*-hpux11*): Likewise.\n+\t(hppa[12]*-*-hpux11*): Likewise.\n+\t(x86_64-*-darwin*): Don't override tmake_file, but only keep\n+\ti386/t-crtpc, i386/t-crtfm.\n+\t(i[34567]86-*-cygwin*): Set tmake_eh_file, tmake_dlldir_file.\n+\tPrepend $tmake_eh_file, $tmake_dlldir_file, i386/t-slibgcc-cygming\n+\tto tmake_file.\n+\tAdd i386/t-cygwin to tmake_file.\n+\tPrepent i386/t-mingw-pthread to tmake_file for posix threads.\n+\t(i[34567]86-*-mingw*): Set tmake_eh_file, tmake_dlldir_file.\n+\tPrepend $tmake_eh_file, $tmake_dlldir_file, i386/t-slibgcc-cygming\n+\tto tmake_file.\n+\tAdd i386/t-mingw32 to tmake_file.\n+\t(x86_64-*-mingw*): Likewise.\n+\t(ia64*-*-freebsd*): Append to tmake_file.\n+\t(ia64*-*-linux*): Append to tmake_file.\n+\tReplace ia64/t-glibc by ia64/t-linux.\n+\tReplace ia64/t-glibc-libunwind by ia64/t-linux-libunwind if using\n+\tsystem libunwind.\n+\t(ia64*-*-hpux*): Add t-slibgcc, ia64/t-slibgcc-hpux,\n+\tt-slibgcc-hpux to tmake_file.\n+\t(ia64-hp-*vms*): Add t-slibgcc-vms to tmake_file.\n+\t(m32r-*-linux*): Append to tmake_file, add m32r/t-linux.\n+\t(m32rle-*-linux*): Likewise.\n+\t(m68k-*-linux*)): Add m68k/t-slibgcc-elf-ver to tmake_file unless\n+\tsjlj exceptions.\n+\t(microblaze*-linux*): New case.\n+\tAppend to tmake_file, add t-slibgcc-nolc-override.\n+\t(powerpc-*-freebsd*): Add t-slibgcc-libgcc to tmake_file.\n+\t(powerpc-*-linux*, powerpc64-*-linux*): Likewise.\n+\tReplace rs6000/t-ldbl128 by rs6000/t-linux in tmake_file.\n+\t(rs6000-ibm-aix4.[3456789]*, powerpc-ibm-aix4.[3456789]*): Add\n+\trs6000/t-slibgcc-aix to tmake_file.\n+\t(rs6000-ibm-aix5.1.*, powerpc-ibm-aix5.1.*): Likewise.\n+\t(rs6000-ibm-aix[56789].*, powerpc-ibm-aix[56789].*): Likewise.\n+\t(sh-*-elf*, sh[12346l]*-*-elf*, sh-*-linux*)\n+\t(sh[2346lbe]*-*-linux*, sh-*-netbsdelf*, shl*-*-netbsdelf*)\n+\t(sh5-*-netbsd*, sh5l*-*-netbsd*, sh64-*-netbsd*)\n+\t(sh64l*-*-netbsd*): Add t-slibgcc-libgcc to tmake_file for\n+\tsh*-*-linux*.\n+\t(sparc-*-linux*): Append to tmake_file for *-leon*.\n+\tAdd sparc/t-linux to tmake_file for non-Leon targets.\n+\t(sparc64-*-linux*): Add sparc/t-linux to tmake_file.\n+\t(tic6x-*-uclinux): New case.\n+\tAdd t-slibgcc, t-slibgcc-gld, t-slibgcc-elf-ver to tmake_file.\n+\t(tic6x-*-*): Add c6x/t-elf to tmake_file.\n+\t(xtensa*-*-linux*): Append to tmake_file, add xtensa/t-linux.\n+\t(am33_2.0-*-linux*): Append to tmake_file.\n+\t(i[34567]86-*-linux*, x86_64-*-linux*, i[34567]86-*-kfreebsd*-gnu)\n+\t(i[34567]86-*-knetbsd*-gnu, i[34567]86-*-gnu*): Also handle\n+\tx86_64-*-kfreebsd*-gnu.\n+\tAdd i386/t-linux to tmake_file.\n+\n 2011-10-28  Ian Lance Taylor  <iant@google.com>\n \n \t* config/i386/morestack.S: Correct CFI information to do proper"}, {"sha": "e199b6ce3b11f803e3fe3bbeac82e9c173c18129", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -279,6 +279,9 @@ LIB2ADDEH = $(srcdir)/unwind-dw2.c $(srcdir)/unwind-dw2-fde.c \\\n LIB2ADDEHSTATIC = $(LIB2ADDEH)\n LIB2ADDEHSHARED = $(LIB2ADDEH)\n \n+# nm flags to list global symbols in libgcc object files.\n+SHLIB_NM_FLAGS = -pg\n+\n # Don't build libunwind by default.\n LIBUNWIND =\n SHLIBUNWIND_LINK ="}, {"sha": "40870704e2fe994646f75df6534b5cd9e75f64ce", "filename": "libgcc/config.host", "status": "modified", "additions": 136, "deletions": 35, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -179,13 +179,25 @@ case ${host} in\n   # This is the generic ELF configuration of FreeBSD.  Later\n   # machine-specific sections may refine and add to this\n   # configuration.\n-  tmake_file=\"$tmake_file t-eh-dw2-dip\"\n+  tmake_file=\"$tmake_file t-eh-dw2-dip t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver\"\n+  case ${target_thread_file} in\n+    posix)\n+      # Before 5.0, FreeBSD can't bind shared libraries to -lc\n+      # when \"optionally\" threaded via weak pthread_* checks.\n+      case ${host} in\n+        *-*-freebsd[34] | *-*-freebsd[34].*)\n+          tmake_file=\"${tmake_file} t-slibgcc-nolc-override\"\n+          ;;\n+      esac\n+      ;;\n+  esac\n   ;;\n *-*-linux* | frv-*-*linux* | *-*-kfreebsd*-gnu | *-*-knetbsd*-gnu | *-*-gnu* | *-*-kopensolaris*-gnu)\n-  tmake_file=\"$tmake_file t-eh-dw2-dip\"\n+  tmake_file=\"$tmake_file t-eh-dw2-dip t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver t-linux\"\n   extra_parts=\"crtbegin.o crtbeginS.o crtbeginT.o crtend.o crtendS.o\"\n   ;;\n *-*-netbsd*)\n+  tmake_file=\"$tmake_file t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver\"\n   ;;\n *-*-openbsd*)\n   ;;\n@@ -239,7 +251,7 @@ esac\n \n case ${host} in\n alpha*-*-linux*)\n-\ttmake_file=\"${tmake_file} t-crtfm\"\n+\ttmake_file=\"${tmake_file} t-crtfm alpha/t-linux\"\n \textra_parts=\"$extra_parts crtfastmath.o\"\n \tmd_unwind_header=alpha/linux-unwind.h\n \t;;\n@@ -262,26 +274,27 @@ alpha*-dec-osf5.1*)\n \tmd_unwind_header=alpha/osf5-unwind.h\n \t;;\n alpha64-dec-*vms*)\n-\ttmake_file=\"vms/t-vms vms/t-vms64 alpha/t-vms\"\n+\ttmake_file=\"vms/t-vms vms/t-vms64 alpha/t-vms t-slibgcc-vms\"\n \tmd_unwind_header=alpha/vms-unwind.h\n \t;;\n alpha*-dec-*vms*)\n-\ttmake_file=\"vms/t-vms alpha/t-vms\"\n+\ttmake_file=\"vms/t-vms alpha/t-vms t-slibgcc-vms\"\n \tmd_unwind_header=alpha/vms-unwind.h\n \t;;\n arm-wrs-vxworks)\n \ttmake_file=t-fdpbit\n \t;;\n arm*-*-freebsd*)\n-\ttmake_file=t-fdpbit\n+\ttmake_file=\"$tmake_file t-fdpbit\"\n \t;;\n arm*-*-netbsdelf*)\n+\ttmake_file=\"$tmake_file t-slibgcc-gld-nover\"\n \t;;\n arm*-*-linux*)\t\t\t# ARM GNU/Linux with ELF\n \ttmake_file=\"${tmake_file} t-fixedpoint-gnu-prefix\"\n \tcase ${host} in\n \tarm*-*-linux-*eabi)\n-\t  tmake_file=\"${tmake_file} arm/t-bpabi\"\n+\t  tmake_file=\"${tmake_file} arm/t-bpabi t-slibgcc-libgcc\"\n \t  unwind_header=config/arm/unwind-arm.h\n \t  ;;\n \tesac\n@@ -307,7 +320,7 @@ arm*-*-eabi* | arm*-*-symbianelf* )\n \t  tmake_file=\"${tmake_file} arm/t-bpabi\"\n \t  ;;\n \tarm*-*-symbianelf*)\n-\t  tmake_file=\"${tmake_file} arm/t-symbian\"\n+\t  tmake_file=\"${tmake_file} arm/t-symbian t-slibgcc-nolc-override\"\n \t  ;;\n \tesac\n \ttmake_file=\"$tmake_file t-softfp-sfdf t-softfp-excl arm/t-softfp t-softfp\"\n@@ -336,7 +349,7 @@ bfin*-uclinux*)\n \tmd_unwind_header=bfin/linux-unwind.h\n         ;;\n bfin*-linux-uclibc*)\n-\ttmake_file=t-fdpbit\n+\ttmake_file=\"$tmake_file t-fdpbit bfin/t-linux\"\n \t# No need to build crtbeginT.o on uClibc systems.  Should probably\n \t# be moved to the OS specific section above.\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n@@ -353,7 +366,7 @@ crisv32-*-elf | crisv32-*-none | cris-*-elf | cris-*-none)\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n cris-*-linux* | crisv32-*-linux*)\n-\ttmake_file=t-fdpbit\n+\ttmake_file=\"$tmake_file t-fdpbit cris/t-linux\"\n \t;;\n fido-*-elf)\n \t;;\n@@ -364,7 +377,7 @@ frv-*-elf)\n \ttmake_file=t-fdpbit\n \t;;\n frv-*-*linux*)\n-\ttmake_file=t-fdpbit\n+\ttmake_file=\"$tmake_file t-fdpbit frv/t-linux\"\n \t;;\n h8300-*-rtems*)\n \ttmake_file=t-fpbit\n@@ -375,23 +388,54 @@ h8300-*-elf*)\n hppa*64*-*-linux*)\n \t;;\n hppa*-*-linux*)\n+\ttmake_file=\"$tmake_file t-slibgcc-libgcc\"\n+\t# Set the libgcc version number\n+\tif test x$enable_sjlj_exceptions = xyes; then\n+\t    tmake_file=\"$tmake_file pa/t-slibgcc-sjlj-ver\"\n+\telse\n+\t    tmake_file=\"$tmake_file pa/t-slibgcc-dwarf-ver\"\n+\tfi\n \tmd_unwind_header=pa/linux-unwind.h\n \t;;\n hppa[12]*-*-hpux10*)\n+\ttmake_file=\"$tmake_file t-slibgcc\"\n+\t# Set the libgcc version number\n+\tif test x$enable_sjlj_exceptions = xyes; then\n+\t    tmake_file=\"$tmake_file pa/t-slibgcc-sjlj-ver\"\n+\telse\n+\t    tmake_file=\"$tmake_file pa/t-slibgcc-dwarf-ver\"\n+\tfi\n+\ttmake_file=\"$tmake_file pa/t-slibgcc-hpux t-slibgcc-hpux\"\n \tmd_unwind_header=pa/hpux-unwind.h\n \t;;\n hppa*64*-*-hpux11*)\n+\ttmake_file=\"$tmake_file t-slibgcc\"\n+\t# Set the libgcc version number\n+\tif test x$enable_sjlj_exceptions = xyes; then\n+\t    tmake_file=\"$tmake_file pa/t-slibgcc-sjlj-ver\"\n+\telse\n+\t    tmake_file=\"$tmake_file pa/t-slibgcc-dwarf-ver\"\n+\tfi\n+\ttmake_file=\"$tmake_file pa/t-slibgcc-hpux t-slibgcc-hpux\"\n \tmd_unwind_header=pa/hpux-unwind.h\n \t;;\n hppa[12]*-*-hpux11*)\n+\ttmake_file=\"$tmake_file t-slibgcc\"\n+\t# Set the libgcc version number\n+\tif test x$enable_sjlj_exceptions = xyes; then\n+\t    tmake_file=\"$tmake_file pa/t-slibgcc-sjlj-ver\"\n+\telse\n+\t    tmake_file=\"$tmake_file pa/t-slibgcc-dwarf-ver\"\n+\tfi\n+\ttmake_file=\"$tmake_file pa/t-slibgcc-hpux t-slibgcc-hpux\"\n \tmd_unwind_header=pa/hpux-unwind.h\n \t;;\n i[34567]86-*-darwin*)\n \ttmake_file=\"$tmake_file i386/t-crtpc i386/t-crtfm\"\n \textra_parts=\"$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o\"\n \t;;\n x86_64-*-darwin*)\n-\ttmake_file=\"t-darwin ${cpu_type}/t-darwin64 i386/t-crtpc i386/t-crtfm t-slibgcc-darwin\"\n+\ttmake_file=\"$tmake_file i386/t-crtpc i386/t-crtfm\"\n \textra_parts=\"$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o\"\n \t;;\n i[34567]86-*-elf*)\n@@ -449,15 +493,56 @@ i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae)\n \t;;\n i[34567]86-*-cygwin*)\n \textra_parts=\"crtbegin.o crtend.o crtfastmath.o\"\n-\ttmake_file=\"i386/t-cygming i386/t-crtfm t-dfprules\"\n+\t# This has to match the logic for DWARF2_UNWIND_INFO in gcc/config/i386/cygming.h\n+\tif test x$enable_sjlj_exceptions = xyes; then\n+\t\ttmake_eh_file=\"i386/t-sjlj-eh\"\n+\telse\n+\t\ttmake_eh_file=\"i386/t-dw2-eh\"\n+\tfi\n+\t# Shared libgcc DLL install dir depends on cross/native build.\n+\tif test x${build} = x${host} ; then\n+\t\ttmake_dlldir_file=\"i386/t-dlldir\"\n+\telse\n+\t\ttmake_dlldir_file=\"i386/t-dlldir-x\"\n+\tfi\n+\ttmake_file=\"${tmake_file} ${tmake_eh_file} ${tmake_dlldir_file} i386/t-slibgcc-cygming i386/t-cygming i386/t-cygwin i386/t-crtfm t-dfprules\"\n+\tcase ${target_thread_file} in\n+\t  posix)\n+\t    tmake_file=\"i386/t-mingw-pthread $tmake_file\"\n+\t    ;;\n+\tesac\n \t;;\n i[34567]86-*-mingw*)\n \textra_parts=\"crtbegin.o crtend.o crtfastmath.o\"\n-\ttmake_file=\"i386/t-cygming i386/t-crtfm t-dfprules\"\n+\t# This has to match the logic for DWARF2_UNWIND_INFO in gcc/config/i386/cygming.h\n+\tif test x$enable_sjlj_exceptions = xyes; then\n+\t\ttmake_eh_file=\"i386/t-sjlj-eh\"\n+\telse\n+\t\ttmake_eh_file=\"i386/t-dw2-eh\"\n+\tfi\n+\t# Shared libgcc DLL install dir depends on cross/native build.\n+\tif test x${build} = x${host} ; then\n+\t\ttmake_dlldir_file=\"i386/t-dlldir\"\n+\telse\n+\t\ttmake_dlldir_file=\"i386/t-dlldir-x\"\n+\tfi\n+\ttmake_file=\"${tmake_file} ${tmake_eh_file} ${tmake_dlldir_file} i386/t-slibgcc-cygming i386/t-cygming i386/t-mingw32 i386/t-crtfm t-dfprules\"\n \tmd_unwind_header=i386/w32-unwind.h\n \t;;\n x86_64-*-mingw*)\n-\ttmake_file=\"t-dfprules i386/t-crtfm\"\n+\t# This has to match the logic for DWARF2_UNWIND_INFO in gcc/config/i386/cygming.h\n+\tif test x$enable_sjlj_exceptions = xyes; then\n+\t\ttmake_eh_file=\"i386/t-sjlj-eh\"\n+\telse\n+\t\ttmake_eh_file=\"i386/t-dw2-eh\"\n+\tfi\n+\t# Shared libgcc DLL install dir depends on cross/native build.\n+\tif test x${build} = x${host} ; then\n+\t\ttmake_dlldir_file=\"i386/t-dlldir\"\n+\telse\n+\t\ttmake_dlldir_file=\"i386/t-dlldir-x\"\n+\tfi\n+\ttmake_file=\"${tmake_file} ${tmake_eh_file} ${tmake_dlldir_file} i386/t-slibgcc-cygming i386/t-mingw32 t-dfprules i386/t-crtfm\"\n \textra_parts=\"$extra_parts crtfastmath.o\"\n \t;;\n i[34567]86-*-interix3*)\n@@ -468,21 +553,21 @@ ia64*-*-elf*)\n \t;;\n ia64*-*-freebsd*)\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o crtfastmath.o\"\n-\ttmake_file=\"ia64/t-ia64 ia64/t-eh-ia64 t-crtfm\"\n+\ttmake_file=\"$tmake_file ia64/t-ia64 ia64/t-eh-ia64 t-crtfm\"\n \t;;\n ia64*-*-linux*)\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o crtfastmath.o\"\n-\ttmake_file=\"ia64/t-ia64 t-crtfm t-softfp-tf ia64/t-softfp t-softfp ia64/t-softfp-compat ia64/t-eh-ia64 t-libunwind ia64/t-glibc\"\n+\ttmake_file=\"$tmake_file ia64/t-ia64 t-crtfm t-softfp-tf ia64/t-softfp t-softfp ia64/t-softfp-compat ia64/t-eh-ia64 t-libunwind ia64/t-linux\"\n \tif test x$with_system_libunwind != xyes ; then\n-\t\ttmake_file=\"${tmake_file} t-libunwind-elf ia64/t-glibc-libunwind\"\n+\t\ttmake_file=\"${tmake_file} t-libunwind-elf ia64/t-linux-libunwind\"\n \tfi\n \tmd_unwind_header=ia64/linux-unwind.h\n \t;;\n ia64*-*-hpux*)\n-\ttmake_file=\"ia64/t-hpux\"\n+\ttmake_file=\"ia64/t-hpux t-slibgcc ia64/t-slibgcc-hpux t-slibgcc-hpux\"\n \t;;\n ia64-hp-*vms*)\n-\ttmake_file=\"vms/t-vms vms/t-vms64 ia64/t-eh-ia64 ia64/t-vms\"\n+\ttmake_file=\"vms/t-vms vms/t-vms64 ia64/t-eh-ia64 ia64/t-vms t-slibgcc-vms\"\n \tmd_unwind_header=ia64/vms-unwind.h\n \t;;\n iq2000*-*-elf*)\n@@ -503,10 +588,10 @@ m32rle-*-elf*)\n \ttmake_file=t-fdpbit\n \t;;\n m32r-*-linux*)\n-\ttmake_file=t-fdpbit\n+\ttmake_file=\"$tmake_file t-fdpbit m32r/t-linux\"\n  \t;;\n m32rle-*-linux*)\n-\ttmake_file=t-fdpbit\n+\ttmake_file=\"$tmake_file t-fdpbit m32r/t-linux\"\n \t;;\n m68k-*-elf*)\n \t;;\n@@ -520,13 +605,21 @@ m68k-*-uclinux*)\t\t# Motorola m68k/ColdFire running uClinux with uClibc\n m68k-*-linux*)\t\t\t# Motorola m68k's running GNU/Linux\n \t\t\t\t# with ELF format using glibc 2\n \t\t\t\t# aka the GNU/Linux C library 6.\n+\t# If not configured with --enable-sjlj-exceptions, bump the\n+\t# libgcc version number.\n+\tif test x$enable_sjlj_exceptions != xyes; then\n+\t    tmake_file=\"$tmake_file m68k/t-slibgcc-elf-ver\"\n+\tfi\n \tmd_unwind_header=m68k/linux-unwind.h\n \t;;\n m68k-*-rtems*)\n \t;;\n mcore-*-elf)\n \ttmake_file=t-fdpbit\n \t;;\n+microblaze*-linux*)\n+        tmake_file=\"$tmake_file t-slibgcc-nolc-override microblaze/t-microblaze t-fdpbit\"\n+\t;;\n microblaze*-*-*)\n         tmake_file=\"microblaze/t-microblaze t-fdpbit\"\n \t;;\n@@ -627,7 +720,7 @@ powerpc64-*-darwin*)\n \textra_parts=\"$extra_parts crt2.o\"\n \t;;\n powerpc-*-freebsd*)\n-\ttmake_file=\"${tmake_file} rs6000/t-ppccomm rs6000/t-freebsd t-softfp-sfdf t-softfp-excl t-softfp\"\n+\ttmake_file=\"${tmake_file} rs6000/t-ppccomm rs6000/t-freebsd t-softfp-sfdf t-softfp-excl t-softfp t-slibgcc-libgcc\"\n \t;;\n powerpc-*-netbsd*)\n \t;;\n@@ -656,7 +749,7 @@ powerpc-*-rtems*)\n \ttmake_file=\"rs6000/t-ppccomm-ldbl t-fdpbit\"\n \t;;\n powerpc-*-linux* | powerpc64-*-linux*)\n-\ttmake_file=\"${tmake_file} rs6000/t-ppccomm rs6000/t-ldbl128 t-softfp-sfdf t-softfp-excl t-dfprules rs6000/t-ppc64-fp t-softfp\"\n+\ttmake_file=\"${tmake_file} rs6000/t-ppccomm rs6000/t-linux t-softfp-sfdf t-softfp-excl t-dfprules rs6000/t-ppc64-fp t-softfp t-slibgcc-libgcc\"\n \tmd_unwind_header=rs6000/linux-unwind.h\n \t;;\n powerpc-wrs-vxworks|powerpc-wrs-vxworksae)\n@@ -676,15 +769,15 @@ powerpcle-*-eabi*)\n \t;;\n rs6000-ibm-aix4.[3456789]* | powerpc-ibm-aix4.[3456789]*)\n \tmd_unwind_header=rs6000/aix-unwind.h\n-\ttmake_file=\"t-fdpbit rs6000/t-ppc64-fp rs6000/t-ibm-ldouble\"\n+\ttmake_file=\"t-fdpbit rs6000/t-ppc64-fp rs6000/t-ibm-ldouble rs6000/t-slibgcc-aix\"\n \t;;\n rs6000-ibm-aix5.1.* | powerpc-ibm-aix5.1.*)\n \tmd_unwind_header=rs6000/aix-unwind.h\n-\ttmake_file=\"t-fdpbit rs6000/t-ppc64-fp rs6000/t-ibm-ldouble\"\n+\ttmake_file=\"t-fdpbit rs6000/t-ppc64-fp rs6000/t-ibm-ldouble rs6000/t-slibgcc-aix\"\n \t;;\n rs6000-ibm-aix[56789].* | powerpc-ibm-aix[56789].*)\n \tmd_unwind_header=rs6000/aix-unwind.h\n-\ttmake_file=\"t-fdpbit rs6000/t-ppc64-fp rs6000/t-ibm-ldouble\"\n+\ttmake_file=\"t-fdpbit rs6000/t-ppc64-fp rs6000/t-ibm-ldouble rs6000/t-slibgcc-aix\"\n \t;;\n rx-*-elf)\n \textra_parts=\"crtbegin.o crtend.o\"\n@@ -711,7 +804,7 @@ sh-*-elf* | sh[12346l]*-*-elf* | \\\n    sh64-*-netbsd* | sh64l*-*-netbsd*)\n \tcase ${host} in\n \tsh*-*-linux*)\n-\t\ttmake_file=\"${tmake_file} sh/t-linux t-fdpbit\"\n+\t\ttmake_file=\"${tmake_file} t-slibgcc-libgcc sh/t-linux t-fdpbit\"\n \t\tmd_unwind_header=sh/linux-unwind.h\n \t\t;;\n \tsh*-*-netbsd*)\n@@ -749,7 +842,10 @@ sparc-*-elf*)\n sparc-*-linux*)\t\t# SPARC's running GNU/Linux, libc6\n \tcase ${host} in\n \t*-leon*)\n-\t\ttmake_file=t-fdpbit\n+\t\ttmake_file=\"${tmake_file} t-fdpbit\"\n+\t\t;;\n+\t*)\n+\t\ttmake_file=\"${tmake_file} sparc/t-linux\"\n \t\t;;\n \tesac\n \textra_parts=\"$extra_parts crtfastmath.o\"\n@@ -781,16 +877,20 @@ sparc64-*-freebsd*|ultrasparc-*-freebsd*)\n \t;;\n sparc64-*-linux*)\t\t# 64-bit SPARC's running GNU/Linux\n \textra_parts=\"$extra_parts crtfastmath.o\"\n-\ttmake_file=\"${tmake_file} t-crtfm\"\n+\ttmake_file=\"${tmake_file} t-crtfm sparc/t-linux\"\n \tmd_unwind_header=sparc/linux-unwind.h\n \t;;\n sparc64-*-netbsd*)\n \t;;\n spu-*-elf*)\n \ttmake_file=\"t-fdpbit spu/t-elf\"\n \t;;\n+tic6x-*-uclinux)\n+\ttmake_file=\"${tmake_file} t-softfp-sfdf t-softfp-excl t-softfp c6x/t-elf t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver t-gnu-prefix\"\n+\tunwind_header=config/c6x/unwind-c6x.h\n+\t;;\n tic6x-*-*)\n-\ttmake_file=\"${tmake_file} t-softfp-sfdf t-softfp-excl t-softfp t-gnu-prefix c6x/t-c6x-elf\"\n+\ttmake_file=\"${tmake_file} t-softfp-sfdf t-softfp-excl t-softfp c6x/t-elf t-gnu-prefix\"\n \tunwind_header=config/c6x/unwind-c6x.h\n \t;;\n v850*-*-*)\n@@ -809,12 +909,12 @@ xtensa*-*-elf*)\n \ttmake_file=xtensa/t-xtensa\n \t;;\n xtensa*-*-linux*)\n-\ttmake_file=xtensa/t-xtensa\n+\ttmake_file=\"$tmake_file xtensa/t-xtensa xtensa/t-linux\"\n \tmd_unwind_header=xtensa/linux-unwind.h\n \t;;\n am33_2.0-*-linux*)\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n-\ttmake_file=t-fdpbit\n+\ttmake_file=\"$tmake_file t-fdpbit\"\n \t;;\n m32c-*-elf*|m32c-*-rtems*)\n  \t;;\n@@ -829,9 +929,10 @@ esac\n \n case ${host} in\n i[34567]86-*-linux* | x86_64-*-linux* | \\\n-  i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | \\\n+  i[34567]86-*-kfreebsd*-gnu | x86_64-*-kfreebsd*-gnu | \\\n+  i[34567]86-*-knetbsd*-gnu | \\\n   i[34567]86-*-gnu*)\n-\ttmake_file=\"${tmake_file} t-tls\"\n+\ttmake_file=\"${tmake_file} t-tls i386/t-linux\"\n \tif test \"$libgcc_cv_cfi\" = \"yes\"; then\n \t\ttmake_file=\"${tmake_file} t-stack i386/t-stack-i386\"\n \tfi"}, {"sha": "8dc54a74980ac175959d5263c56e9bfcb28a5f10", "filename": "libgcc/config/alpha/libgcc-alpha-ldbl.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Falpha%2Flibgcc-alpha-ldbl.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Falpha%2Flibgcc-alpha-ldbl.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Flibgcc-alpha-ldbl.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/alpha/libgcc-alpha-ldbl.ver"}, {"sha": "fabf38f9cce03b28e45f34d08d25e3ae3cd4a61b", "filename": "libgcc/config/alpha/t-linux", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Falpha%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Falpha%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/alpha/t-linux"}, {"sha": "66e5cf12aa17665b09892fa40121964c02a57fee", "filename": "libgcc/config/alpha/t-slibgcc-osf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Falpha%2Ft-slibgcc-osf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Falpha%2Ft-slibgcc-osf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Ft-slibgcc-osf?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -22,7 +22,7 @@\n SHLIB_LDFLAGS = -Wl,-msym -Wl,-set_version,gcc.1 -Wl,-soname,$(SHLIB_SONAME) \\\n \t-Wl,-hidden -Wl,-input,$(SHLIB_MAP)\n \n-SHLIB_MKMAP = $(gcc_srcdir)/mkmap-flat.awk\n+SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n SHLIB_MKMAP_OPTS = -v osf_export=1\n # Needed so mkmap-flat.awk can parse the nm output.\n SHLIB_NM_FLAGS = -Bg"}, {"sha": "3ba8364dc8e3941700080f2bb48a944f6049358e", "filename": "libgcc/config/arm/libgcc-bpabi.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Farm%2Flibgcc-bpabi.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Farm%2Flibgcc-bpabi.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Flibgcc-bpabi.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/arm/libgcc-bpabi.ver"}, {"sha": "ebb2f9fd85d51404a4c4edf541ea28014a18f1d7", "filename": "libgcc/config/arm/t-bpabi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Farm%2Ft-bpabi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Farm%2Ft-bpabi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-bpabi?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,3 +1,6 @@\n LIB2ADDEH = $(srcdir)/config/arm/unwind-arm.c \\\n   $(srcdir)/config/arm/libunwind.S \\\n   $(srcdir)/config/arm/pr-support.c $(srcdir)/unwind-c.c\n+\n+# Add the BPABI names.\n+SHLIB_MAPFILES += $(srcdir)/config/arm/libgcc-bpabi.ver"}, {"sha": "516d91f6584be0cfd25175edfe06ac735fd6f051", "filename": "libgcc/config/bfin/libgcc-glibc.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fbfin%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fbfin%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fbfin%2Flibgcc-glibc.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/bfin/libgcc-bfin.ver"}, {"sha": "1c42e482b8d24296ce667e00df1a4aff17fd7de9", "filename": "libgcc/config/bfin/t-linux", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fbfin%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fbfin%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fbfin%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1 @@\n+SHLIB_MAPFILES = $(srcdir)/config/bfin/libgcc-glibc.ver"}, {"sha": "6bce556512e5ac576887527dff5f878e4245e118", "filename": "libgcc/config/c6x/libgcc-eabi.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fc6x%2Flibgcc-eabi.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fc6x%2Flibgcc-eabi.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fc6x%2Flibgcc-eabi.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/c6x/libgcc-c6xeabi.ver"}, {"sha": "89b68969ae8bd60cfacb9c49a2821536daf2ec72", "filename": "libgcc/config/c6x/t-elf", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fc6x%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fc6x%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fc6x%2Ft-elf?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1 @@\n+SHLIB_MAPFILES += $(srcdir)/config/c6x/libgcc-eabi.ver"}, {"sha": "e35de83100f583897d89d8feef25270f88173bb4", "filename": "libgcc/config/cris/libgcc-glibc.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fcris%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fcris%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fcris%2Flibgcc-glibc.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/cris/libgcc.ver"}, {"sha": "8c7f4d44249a0451a195f4030de3b7bfe465607f", "filename": "libgcc/config/cris/t-linux", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fcris%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fcris%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fcris%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,2 @@\n+# Override t-linux default.\n+SHLIB_MAPFILES = libgcc-std.ver $(srcdir)/config/cris/libgcc-glibc.ver"}, {"sha": "6e27b4f9b85c99f1fdd08a3eebbe924bd6654b62", "filename": "libgcc/config/frv/libgcc-glibc.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ffrv%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ffrv%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ffrv%2Flibgcc-glibc.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/frv/libgcc-frv.ver"}, {"sha": "dbab5a4205f8e1d5db186c1cfef266eed1e193b9", "filename": "libgcc/config/frv/t-linux", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ffrv%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ffrv%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ffrv%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1 @@\n+SHLIB_MAPFILES = libgcc-std.ver $(srcdir)/config/frv/libgcc-glibc.ver"}, {"sha": "67f5e239ca16fd484bd11b12ca163aaa5928424d", "filename": "libgcc/config/i386/libgcc-darwin.10.4.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Flibgcc-darwin.10.4.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Flibgcc-darwin.10.4.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Flibgcc-darwin.10.4.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/i386/darwin-libgcc.10.4.ver"}, {"sha": "eeec9fbfcdfa9187c14b2be956d23b761712c230", "filename": "libgcc/config/i386/libgcc-darwin.10.5.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Flibgcc-darwin.10.5.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Flibgcc-darwin.10.5.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Flibgcc-darwin.10.5.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/i386/darwin-libgcc.10.5.ver"}, {"sha": "e79d3267f6f5da4357b0ead71215cd46252014ca", "filename": "libgcc/config/i386/libgcc-glibc.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Flibgcc-glibc.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/i386/libgcc-glibc.ver"}, {"sha": "22df63671ff934d049723fcae67812a7af4b7c58", "filename": "libgcc/config/i386/t-cygwin", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-cygwin?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,13 @@\n+# Cygwin-specific parts of LIB_SPEC\n+SHLIB_LC = -lcygwin -ladvapi32 -lshell32 -luser32 -lkernel32\n+\n+# We have already included one of the t-{dw2,sjlj}-eh fragments for EH_MODEL\n+SHLIB_EH_EXTENSION = $(subst -dw2,,-$(EH_MODEL))\n+\n+# Cygwin uses different conventions than MinGW; override generic SHLIB_ def'ns here.\n+SHLIB_IMPLIB = @shlib_base_name@$(SHLIB_EXT).a\n+SHLIB_SONAME = cyggcc_s$(SHLIB_EH_EXTENSION)-$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+# This must match the definitions of SHLIB_SONAME/SHLIB_SOVERSION and LIBGCC_SONAME.\n+# We'd like to use SHLIB_SONAME here too, and we can, since\n+# we don't rely on shlib_base_name substitution for it.\n+SHLIB_MKMAP_OPTS = -v pe_dll=$(SHLIB_SONAME)"}, {"sha": "4578f74c3fa609af6425aeb0a80a022b4b748f2b", "filename": "libgcc/config/i386/t-darwin", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/libgcc%2Fconfig%2Fi386%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/libgcc%2Fconfig%2Fi386%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-darwin?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -1 +0,0 @@\n-SHLIB_VERPFX = $(gcc_srcdir)/config/i386/darwin-libgcc"}, {"sha": "4578f74c3fa609af6425aeb0a80a022b4b748f2b", "filename": "libgcc/config/i386/t-darwin64", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/libgcc%2Fconfig%2Fi386%2Ft-darwin64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/libgcc%2Fconfig%2Fi386%2Ft-darwin64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-darwin64?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -1 +0,0 @@\n-SHLIB_VERPFX = $(gcc_srcdir)/config/i386/darwin-libgcc"}, {"sha": "d2cf39bddd6a5626d3b0c278b0683f78a6246473", "filename": "libgcc/config/i386/t-dlldir", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-dlldir", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-dlldir", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-dlldir?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,2 @@\n+# In a native build, target DLLs go in bindir, where they can be executed.\n+SHLIB_DLLDIR = $(bindir)"}, {"sha": "0f8c29b4e90a83727f8dbfe12ea4fccad3dfd6cc", "filename": "libgcc/config/i386/t-dlldir-x", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-dlldir-x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-dlldir-x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-dlldir-x?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,3 @@\n+# In a cross build, bindir contains host not target binaries, so target DLLs\n+# instead go in toolexeclibdir, alongside other target binaries and static libs.\n+SHLIB_DLLDIR = $(toolexeclibdir)"}, {"sha": "ffcc39aea339759d2e77fb077ca1a497a0a711ad", "filename": "libgcc/config/i386/t-dw2-eh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-dw2-eh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-dw2-eh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-dw2-eh?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/i386/t-dw2-eh"}, {"sha": "29b4c223983463b54d5d32a05664dba220818a29", "filename": "libgcc/config/i386/t-linux", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,5 +1,4 @@\n # On 64bit we do not need any exports for glibc for 64-bit libgcc_s.\n # Need to support TImode for x86.  Override the settings from\n # t-slibgcc-elf-ver and t-linux\n-SHLIB_MAPFILES = $$(libgcc_objdir)/libgcc-std.ver \\\n-\t\t $(srcdir)/config/i386/libgcc-glibc.ver\n+SHLIB_MAPFILES = libgcc-std.ver $(srcdir)/config/i386/libgcc-glibc.ver", "previous_filename": "gcc/config/i386/t-linux"}, {"sha": "622ef82be6e5a7061ceeb0bc5a664c7303de2c86", "filename": "libgcc/config/i386/t-mingw-pthread", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-mingw-pthread", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-mingw-pthread", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-mingw-pthread?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/i386/t-mingw-pthread"}, {"sha": "bfdef6723ce1e279fc7178a34d21e9fdf3f8931f", "filename": "libgcc/config/i386/t-mingw32", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-mingw32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-mingw32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-mingw32?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/i386/t-mingw32"}, {"sha": "c9085f43216764e1c481e173a8d58d080ae00b2e", "filename": "libgcc/config/i386/t-sjlj-eh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-sjlj-eh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-sjlj-eh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-sjlj-eh?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/i386/t-sjlj-eh"}, {"sha": "3bee8b9808443139fb3a0765a31d581d0799e55c", "filename": "libgcc/config/i386/t-slibgcc-cygming", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-slibgcc-cygming", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fi386%2Ft-slibgcc-cygming", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-slibgcc-cygming?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,58 @@\n+# Build a shared libgcc library for PECOFF with a DEF file\n+# with the GNU linker.\n+#\n+# mkmap-flat.awk is used with the pe_dll option to produce a DEF instead\n+# of an ELF map file.\n+#\n+# Warning: If SHLIB_SOVERSION or SHLIB_SONAME are updated, LIBGCC_SONAME\n+# in mingw32.h and SHLIB_MKMAP_OPTS below must be updated also.\n+\n+SHLIB_EXT = .dll\n+SHLIB_IMPLIB = @shlib_base_name@.a\n+SHLIB_SOVERSION = 1\n+SHLIB_SONAME = @shlib_base_name@_$(EH_MODEL)-$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+SHLIB_MAP = @shlib_map_file@\n+SHLIB_OBJS = @shlib_objs@\n+SHLIB_DIR = @multilib_dir@/shlib\n+SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n+# SHLIB_DLLDIR is defined by including one of either t-dlldir or t-dlldir-x\n+# (native/cross build respectively) in the tmake_file list in\n+# libgcc/config.host.\n+ifndef SHLIB_DLLDIR\n+$(error SHLIB_DLLDIR must be defined)\n+endif\n+ifndef SHLIB_PTHREAD_CFLAG\n+SHLIB_PTHREAD_CFLAG =\n+endif\n+ifndef SHLIB_PTHREAD_LDFLAG\n+SHLIB_PTHREAD_LDFLAG =\n+endif\n+\n+SHLIB_LINK = $(LN_S) -f $(SHLIB_MAP) $(SHLIB_MAP).def && \\\n+\tif [ ! -d $(SHLIB_DIR) ]; then \\\n+\t\tmkdir $(SHLIB_DIR); \\\n+\telse true; fi && \\\n+\t$(CC) $(LIBGCC2_CFLAGS) $(SHLIB_PTHREAD_CFLAG) \\\n+\t-shared -nodefaultlibs \\\n+\t$(SHLIB_MAP).def \\\n+\t-Wl,--out-implib,$(SHLIB_DIR)/$(SHLIB_IMPLIB).tmp \\\n+\t-o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp @multilib_flags@ \\\n+\t$(SHLIB_OBJS) ${SHLIB_PTHREAD_LDFLAG} $(SHLIB_LC) && \\\n+\tif [ -f $(SHLIB_DIR)/$(SHLIB_SONAME) ]; then \\\n+\t  mv -f $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n+\t\t$(SHLIB_DIR)/$(SHLIB_SONAME).backup; \\\n+\telse true; fi && \\\n+\tmv $(SHLIB_DIR)/$(SHLIB_SONAME).tmp $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n+\tmv $(SHLIB_DIR)/$(SHLIB_IMPLIB).tmp $(SHLIB_DIR)/$(SHLIB_IMPLIB)\n+SHLIB_INSTALL = \\\n+\t$(mkinstalldirs) $(DESTDIR)$(SHLIB_DLLDIR) \\\n+\t  $(DESTDIR)$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n+\t$(INSTALL) $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n+\t  $(DESTDIR)$(SHLIB_DLLDIR)/$(SHLIB_SONAME); \\\n+\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_IMPLIB) \\\n+\t  $(DESTDIR)$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_IMPLIB)\n+SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n+# We'd like to use SHLIB_SONAME here too, but shlib_base_name\n+# does not get substituted before mkmap-flat.awk is run.\n+SHLIB_MKMAP_OPTS = -v pe_dll=libgcc_s_$(EH_MODEL)-$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+SHLIB_MAPFILES = libgcc-std.ver"}, {"sha": "34a69618d1b2b8a02a0c3ecd63002c28e178ae15", "filename": "libgcc/config/ia64/libgcc-glibc.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fia64%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fia64%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Flibgcc-glibc.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/ia64/libgcc-glibc.ver"}, {"sha": "11c1fe629bd668d1985092236546d0a3d1736a53", "filename": "libgcc/config/ia64/libgcc-ia64.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fia64%2Flibgcc-ia64.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fia64%2Flibgcc-ia64.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Flibgcc-ia64.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/ia64/libgcc-ia64.ver"}, {"sha": "55bb8c11630b9aaa115f7ad16e17b410eb1d9919", "filename": "libgcc/config/ia64/t-ia64", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Ft-ia64?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -13,3 +13,5 @@ crtbeginS.o: $(gcc_srcdir)/config/ia64/crtbegin.asm\n crtendS.o: $(gcc_srcdir)/config/ia64/crtend.asm\n \t$(CC) $(compile_deps) -I. -I$(gcc_objdir) -c -x assembler-with-cpp \\\n \t\t-o $@ -DSHARED $(gcc_srcdir)/config/ia64/crtend.asm\n+\n+SHLIB_MAPFILES += $(srcdir)/config/ia64/libgcc-ia64.ver"}, {"sha": "e6d72b94a871469a94600edb54608bf3a96e2e3b", "filename": "libgcc/config/ia64/t-linux", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fia64%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fia64%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,3 +1,5 @@\n # Use system libunwind library on IA-64 GLIBC based system.\n LIB2ADDEH = $(srcdir)/unwind-sjlj.c $(srcdir)/unwind-c.c \\\n   $(srcdir)/unwind-compat.c\n+\n+SHLIB_MAPFILES += $(srcdir)/config/ia64/libgcc-glibc.ver", "previous_filename": "libgcc/config/ia64/t-glibc"}, {"sha": "8b1736a2d67846524b78c5d1c54fe1fb880948e3", "filename": "libgcc/config/ia64/t-linux-libunwind", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fia64%2Ft-linux-libunwind", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fia64%2Ft-linux-libunwind", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Ft-linux-libunwind?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "libgcc/config/ia64/t-glibc-libunwind"}, {"sha": "27c7a661b1e8f6a34a4249b079de3f128eade52b", "filename": "libgcc/config/ia64/t-slibgcc-hpux", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fia64%2Ft-slibgcc-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fia64%2Ft-slibgcc-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Ft-slibgcc-hpux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,6 @@\n+# Build a shared libgcc library with the HP-UX linker on IA64.\n+\n+SHLIB_SOVERSION = 0\n+# Must include -lunwind in the link, so that libgcc_s.so has the necessary\n+# DT_NEEDED entry for libunwind.\n+SHLIB_LC += -lunwind"}, {"sha": "7824ad5a268a15e2a212875151de03d5efbb136a", "filename": "libgcc/config/libgcc-glibc.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Flibgcc-glibc.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/libgcc-glibc.ver"}, {"sha": "47631749dc236a6898144c3f92f56ae9c44f03a0", "filename": "libgcc/config/libgcc-libsystem.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Flibgcc-libsystem.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Flibgcc-libsystem.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Flibgcc-libsystem.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/libgcc-libsystem.ver"}, {"sha": "0e1304b2a3a50361e7d057c47f4bc05fa6e5ff6e", "filename": "libgcc/config/m32r/libgcc-glibc.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fm32r%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fm32r%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm32r%2Flibgcc-glibc.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/m32r/libgcc-glibc.ver"}, {"sha": "29c83c57e44abaa9f853106dfca73897b39a4a2e", "filename": "libgcc/config/m32r/t-linux", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fm32r%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fm32r%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm32r%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1 @@\n+SHLIB_MAPFILES = libgcc-std.ver $(srcdir)/config/m32r/libgcc-glibc.ver"}, {"sha": "6aac37cc08fc504880ba07d8d3157f68d06f3498", "filename": "libgcc/config/m68k/t-slibgcc-elf-ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fm68k%2Ft-slibgcc-elf-ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fm68k%2Ft-slibgcc-elf-ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm68k%2Ft-slibgcc-elf-ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/m68k/t-slibgcc-elf-ver"}, {"sha": "ddb23e7e750e7b432e81465b81385c16ae975383", "filename": "libgcc/config/mips/libgcc-mips16.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fmips%2Flibgcc-mips16.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fmips%2Flibgcc-mips16.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Flibgcc-mips16.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/mips/libgcc-mips16.ver"}, {"sha": "46c7472f5f69d421c8e58e1b5b912a3d3fd757c7", "filename": "libgcc/config/mips/t-mips16", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fmips%2Ft-mips16", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fmips%2Ft-mips16", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Ft-mips16?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,2 +1,5 @@\n SYNC = yes\n SYNC_CFLAGS = -mno-mips16\n+\n+# Version these symbols if building libgcc.so.\n+SHLIB_MAPFILES += $(srcdir)/config/mips/libgcc-mips16.ver"}, {"sha": "47b2e0eec216079de3f1910c4f14371e28af0d97", "filename": "libgcc/config/mips/t-slibgcc-irix", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fmips%2Ft-slibgcc-irix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fmips%2Ft-slibgcc-irix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Ft-slibgcc-irix?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -3,5 +3,5 @@\n SHLIB_LDFLAGS = -Wl,-soname,$(SHLIB_SONAME) \\\n \t-Wl,-exports_file,$(SHLIB_MAP)\n \n-SHLIB_MKMAP = $(gcc_srcdir)/mkmap-flat.awk\n+SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n SHLIB_MAPFILES = libgcc-std.ver"}, {"sha": "fa4688d6994b63e36f94e7296400877e5f40c873", "filename": "libgcc/config/pa/t-slibgcc-dwarf-ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fpa%2Ft-slibgcc-dwarf-ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fpa%2Ft-slibgcc-dwarf-ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Ft-slibgcc-dwarf-ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/pa/t-slibgcc-dwarf-ver"}, {"sha": "d7ed64a8652f04e6ab50d5b4a16cd75a9e3f410e", "filename": "libgcc/config/pa/t-slibgcc-hpux", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fpa%2Ft-slibgcc-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fpa%2Ft-slibgcc-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Ft-slibgcc-hpux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,25 @@\n+# Copyright (C) 2001, 2003, 2004, 2005, 2006, 2011\n+# Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Build a shared libgcc library with the HP-UX linker on PA.\n+\n+SHLIB_EXT = .sl\n+SHLIB_SOLINK = @shlib_base_name@$(SHLIB_EXT)\n+SHLIB_SONAME = @shlib_base_name@.$(SHLIB_SOVERSION)\n+SHLIB_LC ="}, {"sha": "00140cf204fd643fad6a882ee9e90ada50560971", "filename": "libgcc/config/pa/t-slibgcc-sjlj-ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fpa%2Ft-slibgcc-sjlj-ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fpa%2Ft-slibgcc-sjlj-ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Ft-slibgcc-sjlj-ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/pa/t-slibgcc-sjlj-ver"}, {"sha": "0c6f7c23156e06978521c8527f499038e3589f73", "filename": "libgcc/config/rs6000/libgcc-darwin.10.4.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Flibgcc-darwin.10.4.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Flibgcc-darwin.10.4.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Flibgcc-darwin.10.4.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/rs6000/darwin-libgcc.10.4.ver"}, {"sha": "c2f08924fd7f617fa103dc4b11ab1dde51cb0e20", "filename": "libgcc/config/rs6000/libgcc-darwin.10.5.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Flibgcc-darwin.10.5.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Flibgcc-darwin.10.5.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Flibgcc-darwin.10.5.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/rs6000/darwin-libgcc.10.5.ver"}, {"sha": "8862c14cb3ddd3c2c5426f07ca4bf9e7e1011456", "filename": "libgcc/config/rs6000/libgcc-glibc.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Flibgcc-glibc.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "libgcc/config/rs6000/libgcc-ppc-glibc.ver"}, {"sha": "b27b4b492494afb49430c420f3d07767a0e31d85", "filename": "libgcc/config/rs6000/libgcc-ibm-ldouble.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Flibgcc-ibm-ldouble.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Flibgcc-ibm-ldouble.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Flibgcc-ibm-ldouble.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "libgcc/config/rs6000/libgcc-ppc64.ver"}, {"sha": "deec5e3a470fae05c22308ddc00d156f2fb25f3b", "filename": "libgcc/config/rs6000/t-darwin", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Ft-darwin?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -6,5 +6,3 @@ crt2.o: $(srcdir)/config/rs6000/darwin-crt2.c\n LIB2ADD += $(srcdir)/config/rs6000/ppc64-fp.c\n \n LIB2ADDEH += $(srcdir)/config/rs6000/darwin-fallback.c\n-\n-SHLIB_VERPFX = $(gcc_srcdir)/config/rs6000/darwin-libgcc"}, {"sha": "b13278498eca6e7d8b6a5096f926e179765f9dd3", "filename": "libgcc/config/rs6000/t-ibm-ldouble", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Ft-ibm-ldouble", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Ft-ibm-ldouble", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Ft-ibm-ldouble?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -3,4 +3,4 @@ LIB2ADD += $(srcdir)/config/rs6000/ibm-ldouble.c\n \n HOST_LIBGCC2_CFLAGS += -mlong-double-128\n \n-SHLIB_MAPFILES += $(srcdir)/config/rs6000/libgcc-ppc64.ver\n+SHLIB_MAPFILES += $(srcdir)/config/rs6000/libgcc-ibm-ldouble.ver"}, {"sha": "ecc3581b1a0ffbcd4ae0e28c2dcc83d173c0d955", "filename": "libgcc/config/rs6000/t-ldbl128", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/libgcc%2Fconfig%2Frs6000%2Ft-ldbl128", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/libgcc%2Fconfig%2Frs6000%2Ft-ldbl128", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Ft-ldbl128?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -1,3 +0,0 @@\n-SHLIB_MAPFILES += $(srcdir)/config/rs6000/libgcc-ppc-glibc.ver\n-\n-HOST_LIBGCC2_CFLAGS += -mlong-double-128"}, {"sha": "dcf7ffc255ec7a5f424ba90d555645fd84636da2", "filename": "libgcc/config/rs6000/t-linux", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,3 @@\n+SHLIB_MAPFILES += $(srcdir)/config/rs6000/libgcc-glibc.ver\n+\n+HOST_LIBGCC2_CFLAGS += -mlong-double-128"}, {"sha": "a0fdd133926f3a6daf9e78ce808a6ef3d918be36", "filename": "libgcc/config/rs6000/t-slibgcc-aix", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Ft-slibgcc-aix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Frs6000%2Ft-slibgcc-aix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Ft-slibgcc-aix?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,44 @@\n+# Copyright (C) 2002, 2003, 2004, 2005, 2006,\n+# 2008, 2011 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Build a shared libgcc library.\n+SHLIB_EXT = .a\n+SHLIB_LINK = $(CC) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n+\t-Wl,-bE:@shlib_map_file@ -o @multilib_dir@/shr.o \\\n+\t@multilib_flags@ @shlib_objs@ -lc \\\n+\t`case @multilib_dir@ in \\\n+\t*pthread*) echo -L$(TARGET_SYSTEM_ROOT)/usr/lib/threads -lpthreads -lc_r $(TARGET_SYSTEM_ROOT)/usr/lib/libc.a ;; \\\n+\t*) echo -lc ;; esac` ; \\\n+\trm -f @multilib_dir@/tmp-@shlib_base_name@.a ; \\\n+\t$(AR_CREATE_FOR_TARGET) @multilib_dir@/tmp-@shlib_base_name@.a \\\n+\t@multilib_dir@/shr.o ; \\\n+\tmv @multilib_dir@/tmp-@shlib_base_name@.a \\\n+\t   @multilib_dir@/@shlib_base_name@.a ; \\\n+\trm -f @multilib_dir@/shr.o\n+SHLIB_INSTALL = \\\n+\t$(mkinstalldirs) $(DESTDIR)$(slibdir)@shlib_slibdir_qual@; \\\n+\t$(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.a \\\n+\t\t$(DESTDIR)$(slibdir)@shlib_slibdir_qual@/\n+SHLIB_LIBS = -lc `case @multilib_dir@ in *pthread*) echo -lpthread ;; esac`\n+SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n+SHLIB_MAPFILES = libgcc-std.ver\n+SHLIB_NM_FLAGS = -Bpg -X32_64\n+\n+# Either 32-bit and 64-bit objects in archives.\n+AR_FLAGS_FOR_TARGET = -X32_64"}, {"sha": "325c74054ecf181a2ad042a1f44bcb22a21fbaeb", "filename": "libgcc/config/sh/libgcc-excl.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fsh%2Flibgcc-excl.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fsh%2Flibgcc-excl.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Flibgcc-excl.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/sh/libgcc-excl.ver"}, {"sha": "b8ec3265310a7f982b7a276b6e5714b2784ccd5f", "filename": "libgcc/config/sh/libgcc-glibc.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fsh%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fsh%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Flibgcc-glibc.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/sh/libgcc-glibc.ver"}, {"sha": "af618e260c671f592df961e5d170bcecaa9f2a7d", "filename": "libgcc/config/sh/t-linux", "status": "modified", "additions": 2, "deletions": 29, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fsh%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fsh%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -6,32 +6,5 @@ HOST_LIBGCC2_CFLAGS = -fpic -mieee -DNO_FPSCR_VALUES\n # the list from scratch.\n SHLIB_MAPFILES = \\\n \tlibgcc-std.ver \\\n-\t$(gcc_srcdir)/config/sh/libgcc-excl.ver \\\n-\t$(gcc_srcdir)/config/sh/libgcc-glibc.ver\n-\n-# Override SHLIB_LINK and SHLIB_INSTALL to use linker script\n-# libgcc_s.so.\n-SHLIB_LINK = $(CC) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-\t-Wl,--soname=@shlib_base_name@.so.1 \\\n-\t-Wl,--version-script=@shlib_map_file@ \\\n-\t-o @multilib_dir@/@shlib_base_name@.so.1.tmp @multilib_flags@ \\\n-\t@shlib_objs@ -lc && \\\n-\trm -f @multilib_dir@/@shlib_base_name@.so && \\\n-\tif [ -f @multilib_dir@/@shlib_base_name@.so.1 ]; then \\\n-\t  mv -f @multilib_dir@/@shlib_base_name@.so.1 \\\n-\t\t@multilib_dir@/@shlib_base_name@.so.1.backup; \\\n-\telse true; fi && \\\n-\tmv @multilib_dir@/@shlib_base_name@.so.1.tmp \\\n-\t   @multilib_dir@/@shlib_base_name@.so.1 && \\\n-\t(echo \"/* GNU ld script\"; \\\n-\t echo \"   Use the shared library, but some functions are only in\"; \\\n-\t echo \"   the static library.  */\"; \\\n-\t echo \"GROUP ( @shlib_base_name@.so.1 libgcc.a )\" \\\n-\t) > @multilib_dir@/@shlib_base_name@.so\n-SHLIB_INSTALL = \\\n-\t$(mkinstalldirs) $(DESTDIR)$(slibdir)@shlib_slibdir_qual@; \\\n-\t$(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.so.1 \\\n-\t  $(DESTDIR)$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so.1; \\\n-\trm -f $(DESTDIR)$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so; \\\n-\t$(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.so \\\n-\t  $(DESTDIR)$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so\n+\t$(srcdir)/config/sh/libgcc-excl.ver \\\n+\t$(srcdir)/config/sh/libgcc-glibc.ver"}, {"sha": "91138d3795e57aa0e8c9ec94a5e70c33e4bd4ab8", "filename": "libgcc/config/sparc/libgcc-glibc.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fsparc%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fsparc%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Flibgcc-glibc.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/sparc/libgcc-sparc-glibc.ver"}, {"sha": "474f1755ea3f41e484df7a3d928f317036940dda", "filename": "libgcc/config/sparc/t-linux", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fsparc%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fsparc%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,5 +1,4 @@\n # Override t-slibgcc-elf-ver to export some libgcc symbols with\n # the symbol versions that glibc used.\n # Avoid the t-linux version file.\n-SHLIB_MAPFILES = $$(libgcc_objdir)/libgcc-std.ver \\\n-\t\t $(srcdir)/config/sparc/libgcc-sparc-glibc.ver\n+SHLIB_MAPFILES = libgcc-std.ver $(srcdir)/config/sparc/libgcc-glibc.ver", "previous_filename": "gcc/config/sparc/t-linux"}, {"sha": "135cbe1e82f04a8609e58d566aebd9bd5fed2db3", "filename": "libgcc/config/t-libunwind", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-libunwind", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-libunwind", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-libunwind?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,3 +1,10 @@\n+# Use the system libunwind library.\n+\n LIB2ADDEH = $(srcdir)/unwind-sjlj.c $(srcdir)/unwind-c.c \\\n   $(srcdir)/unwind-compat.c $(srcdir)/unwind-dw2-fde-compat.c\n LIB2ADDEHSTATIC = $(srcdir)/unwind-sjlj.c $(srcdir)/unwind-c.c\n+\n+# Override the default value from t-slibgcc-elf-ver and mention -lunwind\n+# so that the resulting libgcc_s.so has the necessary DT_NEEDED entry for\n+# libunwind.\n+SHLIB_LC = -lunwind -lc"}, {"sha": "d1bdac4f32d13aa971e920ce2be74a6939595083", "filename": "libgcc/config/t-linux", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,3 @@\n+# Override t-slibgcc-elf-ver to export some libgcc symbols with\n+# the symbol versions that glibc used.\n+SHLIB_MAPFILES += $(srcdir)/config/libgcc-glibc.ver"}, {"sha": "3727244c424d1693aed3709031f0bb14611053a1", "filename": "libgcc/config/t-slibgcc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -43,9 +43,12 @@ SHLIB_LINK = $(CC) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n \telse true; fi && \\\n \tmv $(SHLIB_DIR)/$(SHLIB_SONAME).tmp $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n \t$(SHLIB_MAKE_SOLINK)\n+\n+INSTALL_SHLIB = $(INSTALL_DATA)\n+\n SHLIB_INSTALL = \\\n \t$(mkinstalldirs) $(DESTDIR)$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n+\t$(INSTALL_SHLIB) $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n \t  $(DESTDIR)$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n \trm -f $(DESTDIR)$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n \t$(SHLIB_INSTALL_SOLINK)"}, {"sha": "9970d0034360e96e979b62763d916c336dd7718a", "filename": "libgcc/config/t-slibgcc-darwin", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-darwin?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -22,9 +22,10 @@ SHLIB_LINK = $(CC) $(LIBGCC2_CFLAGS) -dynamiclib -nodefaultlibs \\\n \t$(SHLIB_VERSTRING) \\\n \t@multilib_flags@ $(SHLIB_OBJS) $(SHLIB_LC)\n \n-SHLIB_MKMAP = $(gcc_srcdir)/mkmap-flat.awk\n+SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n SHLIB_MKMAP_OPTS = -v leading_underscore=1\n-SHLIB_MAPFILES += libgcc-std.ver $(gcc_srcdir)/libgcc-libsystem.ver\n+SHLIB_MAPFILES = libgcc-std.ver $(srcdir)/config/libgcc-libsystem.ver\n+SHLIB_VERPFX = $(srcdir)/config/$(cpu_type)/libgcc-darwin\n \n # we're only going to build the stubs if the target slib is /usr/lib\n # there is no other case in which they're useful in a live system."}, {"sha": "4a00edc96638abeaee9c7a2f4fd04b4ee42a0059", "filename": "libgcc/config/t-slibgcc-elf-ver", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-elf-ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-elf-ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-elf-ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,4 +1,4 @@\n # Build a shared libgcc library for ELF with symbol versioning.\n \n-SHLIB_MKMAP = $(gcc_srcdir)/mkmap-symver.awk\n+SHLIB_MKMAP = $(srcdir)/mkmap-symver.awk\n SHLIB_MAPFILES = libgcc-std.ver"}, {"sha": "e9b78ea9410abbc63814bd712a40ffcd267d5449", "filename": "libgcc/config/t-slibgcc-gld-nover", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-gld-nover", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-gld-nover", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-gld-nover?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,3 @@\n+# Build a shared libgcc library for ELF with the GNU linker.\n+\n+SHLIB_LDFLAGS = -Wl,--soname=$(SHLIB_SONAME)"}, {"sha": "866457fe9aed4f5fd502ea27da8452a36b4515b5", "filename": "libgcc/config/t-slibgcc-hpux", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-hpux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,7 @@\n+# Build a shared libgcc library with the HP-UX linker.\n+\n+SHLIB_LDFLAGS = -Wl,+h,$(SHLIB_SONAME)\n+\n+INSTALL_SHLIB = $(INSTALL_DATA) -m 555\n+\n+SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk"}, {"sha": "ec36b2727ae13e3dc8ac68b9c3b35cf88e9cc59b", "filename": "libgcc/config/t-slibgcc-libgcc", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-libgcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-libgcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-libgcc?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2009 Free Software Foundation, Inc.\n+# Copyright (C) 2009, 2011 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -29,4 +29,4 @@ SHLIB_MAKE_SOLINK = \\\n \t) > $(SHLIB_DIR)/$(SHLIB_SOLINK)\n SHLIB_INSTALL_SOLINK = \\\n \t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_SOLINK) \\\n-\t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)\n+\t  $(DESTDIR)$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)", "previous_filename": "gcc/config/t-slibgcc-libgcc"}, {"sha": "959d2cc2a1f620a448cec63bea997fea1d801994", "filename": "libgcc/config/t-slibgcc-nolc-override", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-nolc-override", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-nolc-override", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-nolc-override?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/t-slibgcc-nolc-override"}, {"sha": "d01c34341c8af345cc82d45fc60d2017ebd6bb2b", "filename": "libgcc/config/t-slibgcc-vms", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-vms", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Ft-slibgcc-vms", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-vms?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1,28 @@\n+shlib_version:=$(shell $(CC) --version 2>&1 | \\\n+\tsed -n 's/^.*(GCC).* \\([0-9]*\\.[0-9.]*\\).*$/\\1/p' | \\\n+\tsed -e 's/\\./,/' -e 's/\\.//g')\n+SHLIB_EXT = .exe\n+SHLIB_OBJS = @shlib_objs@\n+SHLIB_NAME = @shlib_base_name@.exe\n+SHLIB_MULTILIB =\n+SHLIB_INSTALL = $(INSTALL_DATA) $(SHLIB_NAME) $(DESTDIR)$(libsubdir)/$(SHLIB_NAME)\n+SHLIB_SYMVEC = \\\n+  grep -F -e \"\\$$BSS\\$$\" -e \"\\$$DATA\\$$\" -e \" sdata \" -e \" data.rel \" -e \" data.rel.ro \" -e \" sbss \" \\\n+        -e \"\\$$LINK\\$$\" -e \"\\$$READONLY\\$$\" | \\\n+  sed -e \"s/.*\\$$LINK\\$$   \\(.*\\)/SYMBOL_VECTOR=(\\1=PROCEDURE)/\" \\\n+      -e \"s/.*\\$$DATA\\$$   \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\" \\\n+      -e \"s/.* sbss     \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\" \\\n+      -e \"s/.* sdata    \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\" \\\n+      -e \"s/.* data.rel \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\" \\\n+      -e \"s/.* data.rel.ro \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\" \\\n+      -e \"s/.*\\$$BSS\\$$    \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\" \\\n+      -e \"s/.*\\$$READONLY\\$$ \\(.*\\)/SYMBOL_VECTOR=(\\1=DATA)/\"\n+SHLIB_LINK = \\\n+  echo \"case_sensitive=yes\" > SYMVEC_$$$$.opt; \\\n+  objdump --syms $(SHLIB_OBJS) | \\\n+  $(SHLIB_SYMVEC) >> SYMVEC_$$$$.opt ; \\\n+  echo \"case_sensitive=NO\" >> SYMVEC_$$$$.opt; \\\n+  $(CC) $(LIBGCC2_CFLAGS) -nodefaultlibs \\\n+  -shared --for-linker=/noinform -o $(SHLIB_NAME) $(SHLIB_OBJS) \\\n+  --for-linker=SYMVEC_$$$$.opt \\\n+  --for-linker=gsmatch=equal,$(shlib_version)"}, {"sha": "43e7d4fc7c73b0907718d9481af18b34b1a0d76e", "filename": "libgcc/config/xtensa/libgcc-glibc.ver", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fxtensa%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fxtensa%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fxtensa%2Flibgcc-glibc.ver?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/config/xtensa/libgcc-xtensa.ver"}, {"sha": "6f4ae893486cd5598cb62f91daef2819ad1542da", "filename": "libgcc/config/xtensa/t-linux", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fxtensa%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfig%2Fxtensa%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fxtensa%2Ft-linux?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -0,0 +1 @@\n+SHLIB_MAPFILES += $(srcdir)/config/xtensa/libgcc-glibc.ver"}, {"sha": "0506dcf8e40a377777d7cd0849a18a9c83ef3b94", "filename": "libgcc/configure", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -694,6 +694,7 @@ enable_maintainer_mode\n with_build_libsubdir\n enable_decimal_float\n with_system_libunwind\n+enable_sjlj_exceptions\n enable_tls\n '\n       ac_precious_vars='build_alias\n@@ -1328,6 +1329,8 @@ Optional Features:\n \t\t\tenable decimal float extension to C.  Selecting 'bid'\n \t\t\tor 'dpd' choses which decimal floating point format\n \t\t\tto use\n+  --enable-sjlj-exceptions\n+                          force use of builtin_setjmp for exceptions\n   --enable-tls            Use thread-local storage [default=yes]\n \n Optional Packages:\n@@ -4408,6 +4411,72 @@ $as_echo \"#define HAVE_GETIPINFO 1\" >>confdefs.h\n   fi\n \n \n+# The sjlj test is almost duplicated here and in libgo/configure.ac (for C),\n+# libstdc++-v3/acinclude.m4 and libjava/configure.ac (for C++), and\n+# libobjc/configure.ac (for Objective-C).\n+# FIXME: This should be centralized in config/sjlj.m4.\n+# Check whether --enable-sjlj-exceptions was given.\n+if test \"${enable_sjlj_exceptions+set}\" = set; then :\n+  enableval=$enable_sjlj_exceptions; case \"$enableval\" in\n+   yes|no|auto) ;;\n+   *) as_fn_error \"unknown argument to --enable-sjlj-exceptions\" \"$LINENO\" 5 ;;\n+   esac\n+else\n+  enable_sjlj_exceptions=auto\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to use setjmp/longjmp exceptions\" >&5\n+$as_echo_n \"checking whether to use setjmp/longjmp exceptions... \" >&6; }\n+if test \"${libgcc_cv_lib_sjlj_exceptions+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+void bar ();\n+void clean (int *);\n+void foo ()\n+{\n+  int i __attribute__ ((cleanup (clean)));\n+  bar();\n+}\n+\n+_ACEOF\n+CFLAGS_hold=$CFLAGS\n+CFLAGS=\"--save-temps -fexceptions\"\n+libgcc_cv_lib_sjlj_exceptions=unknown\n+if ac_fn_c_try_compile; then :\n+  if grep _Unwind_SjLj_Resume conftest.s >/dev/null 2>&1; then\n+    libgcc_cv_lib_sjlj_exceptions=yes\n+  elif grep _Unwind_Resume conftest.s >/dev/null 2>&1; then\n+    libgcc_cv_lib_sjlj_exceptions=no\n+  fi\n+fi\n+CFLAGS=$CFLAGS_hold\n+rm -f conftest*\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libgcc_cv_lib_sjlj_exceptions\" >&5\n+$as_echo \"$libgcc_cv_lib_sjlj_exceptions\" >&6; }\n+\n+if test \"$enable_sjlj_exceptions\" = \"auto\"; then\n+  enable_sjlj_exceptions=$libgcc_cv_lib_sjlj_exceptions\n+fi\n+\n+case $enable_sjlj_exceptions in\n+yes)\n+\n+$as_echo \"#define LIBGCC_SJLJ_EXCEPTIONS 1\" >>confdefs.h\n+\n+  ;;\n+no)\n+  ;;\n+*)\n+  as_fn_error \"unable to detect exception model\" \"$LINENO\" 5\n+  ;;\n+esac\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld\" >&5\n $as_echo_n \"checking if the linker ($LD) is GNU ld... \" >&6; }\n if test \"${acl_cv_prog_gnu_ld+set}\" = set; then :"}, {"sha": "b40e6d733d68deb3e56594219e337a383851c291", "filename": "libgcc/configure.ac", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=b040f2be6587a666a806007a862f3135f75c6efa", "patch": "@@ -180,6 +180,60 @@ AC_SUBST(fixed_point)\n # config.gcc also contains tests of with_system_libunwind.\n GCC_CHECK_UNWIND_GETIPINFO\n \n+# The sjlj test is almost duplicated here and in libgo/configure.ac (for C),\n+# libstdc++-v3/acinclude.m4 and libjava/configure.ac (for C++), and\n+# libobjc/configure.ac (for Objective-C).\n+# FIXME: This should be centralized in config/sjlj.m4.\n+AC_ARG_ENABLE(sjlj-exceptions,\n+  AC_HELP_STRING([--enable-sjlj-exceptions],\n+\t\t [force use of builtin_setjmp for exceptions]),\n+  [case \"$enableval\" in\n+   yes|no|auto) ;;\n+   *) AC_MSG_ERROR([unknown argument to --enable-sjlj-exceptions]) ;;\n+   esac],\n+  [enable_sjlj_exceptions=auto])\n+\n+AC_CACHE_CHECK([whether to use setjmp/longjmp exceptions],\n+[libgcc_cv_lib_sjlj_exceptions],\n+[AC_LANG_CONFTEST(\n+  [AC_LANG_SOURCE([\n+void bar ();\n+void clean (int *);\n+void foo ()\n+{\n+  int i __attribute__ ((cleanup (clean)));\n+  bar();\n+}\n+])])\n+CFLAGS_hold=$CFLAGS\n+CFLAGS=\"--save-temps -fexceptions\"\n+libgcc_cv_lib_sjlj_exceptions=unknown\n+AS_IF([ac_fn_c_try_compile],\n+  [if grep _Unwind_SjLj_Resume conftest.s >/dev/null 2>&1; then\n+    libgcc_cv_lib_sjlj_exceptions=yes\n+  elif grep _Unwind_Resume conftest.s >/dev/null 2>&1; then\n+    libgcc_cv_lib_sjlj_exceptions=no\n+  fi])\n+CFLAGS=$CFLAGS_hold\n+rm -f conftest*\n+])\n+\n+if test \"$enable_sjlj_exceptions\" = \"auto\"; then\n+  enable_sjlj_exceptions=$libgcc_cv_lib_sjlj_exceptions\n+fi\n+\n+case $enable_sjlj_exceptions in\n+yes)\n+  AC_DEFINE(LIBGCC_SJLJ_EXCEPTIONS, 1,\n+\t[Define if the C compiler is configured for setjmp/longjmp exceptions.])\n+  ;;\n+no)\n+  ;;\n+*)\n+  AC_MSG_ERROR([unable to detect exception model])\n+  ;;\n+esac\n+\n AC_LIB_PROG_LD_GNU\n \n AC_MSG_CHECKING([for thread model used by GCC])"}, {"sha": "ec5e1fdf5135c7b6cb20cd6ce79f241674eed2bf", "filename": "libgcc/mkmap-flat.awk", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fmkmap-flat.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fmkmap-flat.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fmkmap-flat.awk?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/mkmap-flat.awk"}, {"sha": "4877e905147ae62ae8ed2e314fe25ac13b316827", "filename": "libgcc/mkmap-symver.awk", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fmkmap-symver.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b040f2be6587a666a806007a862f3135f75c6efa/libgcc%2Fmkmap-symver.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fmkmap-symver.awk?ref=b040f2be6587a666a806007a862f3135f75c6efa", "previous_filename": "gcc/mkmap-symver.awk"}]}