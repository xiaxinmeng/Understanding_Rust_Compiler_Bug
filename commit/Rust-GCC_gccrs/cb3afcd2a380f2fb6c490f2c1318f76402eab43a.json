{"sha": "cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "node_id": "C_kwDOANBUbNoAKGNiM2FmY2QyYTM4MGYyZmI2YzQ5MGYyYzEzMThmNzY0MDJlYWI0M2E", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-02-17T00:16:36Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-02-17T00:16:36Z"}, "message": "Daily bump.", "tree": {"sha": "8129cef4f7dbf4d3a5be663e2de06742b11303f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8129cef4f7dbf4d3a5be663e2de06742b11303f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/comments", "author": null, "committer": null, "parents": [{"sha": "a61aaee63848d422e8443e17bbec3257ee59d5d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a61aaee63848d422e8443e17bbec3257ee59d5d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a61aaee63848d422e8443e17bbec3257ee59d5d8"}], "stats": {"total": 172, "additions": 171, "deletions": 1}, "files": [{"sha": "95ca91e40ebcb0d8758593cdf0e73b884eca5db3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "patch": "@@ -1,3 +1,23 @@\n+2022-02-16  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range-gori.cc (gori_compute::condexpr_adjust): Use\n+\trange_compatible_p instead of direct type comparison.\n+\n+2022-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/104544\n+\t* combine.cc (try_combine): When looking for insn whose links\n+\tshould be updated from i3 to i2, don't stop on debug insns, instead\n+\tskip over them.\n+\n+2022-02-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/100056\n+\t* config/aarch64/iterators.md (LOGICAL_OR_PLUS): New iterator.\n+\t* config/aarch64/aarch64.md: Extend the PR100056 patterns\n+\tto handle plus in the same way as ior, if the operands have\n+\tno set bits in common.\n+\n 2022-02-15  Andrew MacLeod  <amacleod@redhat.com>\n \n \tPR tree-optimization/104526"}, {"sha": "2215f56552dadaf002bd0dd520f064dd48cbc090", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "patch": "@@ -1 +1 @@\n-20220216\n+20220217"}, {"sha": "4575f2f9d46ca160a046f50f2b75b73538b6c2d2", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "patch": "@@ -1,3 +1,37 @@\n+2022-02-16  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104560\n+\t* diagnostic-manager.cc (diagnostic_manager::build_emission_path):\n+\tAdd region creation events for globals of interest.\n+\t(null_assignment_sm_context::get_old_program_state): New.\n+\t(diagnostic_manager::add_events_for_eedge): Move check for\n+\tchanging dynamic extents from PK_BEFORE_STMT case to after the\n+\tswitch on the dst_point's kind so that we can emit them for the\n+\tfinal stmt in a basic block.\n+\t* engine.cc (impl_sm_context::get_old_program_state): New.\n+\t* sm-malloc.cc (malloc_state_machine::get_default_state): Rewrite\n+\tdetection of m_non_heap to use get_memory_space.\n+\t(free_of_non_heap::free_of_non_heap): Add freed_reg param.\n+\t(free_of_non_heap::subclass_equal_p): Update for changes to\n+\tfields.\n+\t(free_of_non_heap::emit): Drop m_kind in favor of\n+\tget_memory_space.\n+\t(free_of_non_heap::describe_state_change): Remove logic for\n+\tdetecting alloca.\n+\t(free_of_non_heap::mark_interesting_stuff): Add region-creation of\n+\tm_freed_reg.\n+\t(free_of_non_heap::get_memory_space): New.\n+\t(free_of_non_heap::kind): Drop enum.\n+\t(free_of_non_heap::m_freed_reg): New field.\n+\t(free_of_non_heap::m_kind): Drop field.\n+\t(malloc_state_machine::on_stmt): Drop transition to m_non_heap.\n+\t(malloc_state_machine::handle_free_of_non_heap): New function,\n+\tsplit out from on_deallocator_call and on_realloc_call, adding\n+\tdetection of the freed region.\n+\t(malloc_state_machine::on_deallocator_call): Use it.\n+\t(malloc_state_machine::on_realloc_call): Likewise.\n+\t* sm.h (sm_context::get_old_program_state): New vfunc.\n+\n 2022-02-15  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/104524"}, {"sha": "77950b4a664864cb7e26fe72cac7967828b4e427", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "patch": "@@ -1,3 +1,16 @@\n+2022-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104531\n+\t* c-omp.cc (c_finish_omp_atomic): For MIN_EXPR/MAX_EXPR, try first\n+\tbuild_binary_op with LT_EXPR and only if that doesn't return\n+\terror_mark_node call build_modify_expr.\n+\n+2022-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104510\n+\t* c-common.cc (shorten_compare): Convert original arguments to\n+\tthe original *restype_ptr when mixing binary and decimal float.\n+\n 2022-02-14  Richard Biener  <rguenther@suse.de>\n \n \tPR c/104505"}, {"sha": "2bc4c0ee98ed0f43da73fc1d9d693badb3b92c5d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "patch": "@@ -1,3 +1,10 @@\n+2022-02-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/104507\n+\t* constexpr.cc (potential_constant_expression_1)\n+\t<case NON_DEPENDENT_EXPR>: Return false instead of recursing.\n+\tAssert tf_error isn't set.\n+\n 2022-02-15  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/104107"}, {"sha": "8274a4dd7cb789e91911a5914a2f985785cb0de8", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "patch": "@@ -1,3 +1,23 @@\n+2022-02-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_build_builtins_module): Set purity of DECL_PURE_P\n+\tfunctions to PURE::const_.\n+\t* d-gimplify.cc (bit_field_ref): New function.\n+\t(d_gimplify_modify_expr): Handle implicit casting for assignments to\n+\tbit-fields.\n+\t(d_gimplify_unary_expr): New function.\n+\t(d_gimplify_binary_expr): New function.\n+\t(d_gimplify_expr): Handle UNARY_CLASS_P and BINARY_CLASS_P.\n+\t* d-target.cc (Target::_init): Initialize bitFieldStyle.\n+\t(TargetCPP::parameterType): Update signature.\n+\t(Target::supportsLinkerDirective): New function.\n+\t* dmd/MERGE: Merge upstream dmd 52844d4b1.\n+\t* expr.cc (ExprVisitor::visit (ThrowExp *)): New function.\n+\t* types.cc (d_build_bitfield_integer_type): New function.\n+\t(insert_aggregate_bitfield): New function.\n+\t(layout_aggregate_members): Handle inserting bit-fields into an\n+\taggregate type.\n+\n 2022-01-31  Martin Liska  <mliska@suse.cz>\n \n \tPR d/104287"}, {"sha": "7ddcc12f29807cb21a5ca0ae7c35ef595cc9e357", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "patch": "@@ -1,3 +1,62 @@\n+2022-02-16  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104560\n+\t* g++.dg/analyzer/placement-new.C: Update expected wording.\n+\t* g++.dg/analyzer/pr100244.C: Likewise.\n+\t* gcc.dg/analyzer/attr-malloc-1.c (test_7): Likewise.\n+\t* gcc.dg/analyzer/malloc-1.c (test_24): Likewise.\n+\t(test_25): Likewise.\n+\t(test_26): Likewise.\n+\t(test_50a, test_50b, test_50c): New.\n+\t* gcc.dg/analyzer/malloc-callbacks.c (test_5): Update expected\n+\twording.\n+\t* gcc.dg/analyzer/malloc-paths-8.c: Likewise.\n+\t* gcc.dg/analyzer/pr104560-1.c: New test.\n+\t* gcc.dg/analyzer/pr104560-2.c: New test.\n+\t* gcc.dg/analyzer/realloc-1.c (test_7): Updated expected wording.\n+\t* gcc.dg/analyzer/vla-1.c (test_2): New.  Prune output from\n+\t-Wfree-nonheap-object.\n+\n+2022-02-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/104507\n+\t* g++.dg/template/non-dependent21.C: New test.\n+\n+2022-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104448\n+\t* gcc.target/i386/pr104448.c: New test.\n+\n+2022-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/104544\n+\t* gcc.dg/pr104544.c: New test.\n+\n+2022-02-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/atomic-inst-cas.c: Add\n+\t-Wno-invalid-memory-model.\n+\n+2022-02-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/bic-bitmask-1.c: Remove XFAIL.\n+\n+2022-02-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/100056\n+\t* gcc.target/aarch64/pr100056.c: XFAIL the original UBFIZ test\n+\tand instead expect two UBFIZs + two ADD UXTBs.\n+\n+2022-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104531\n+\t* c-c++-common/gomp/atomic-31.c: New test.\n+\n+2022-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104510\n+\t* gcc.dg/dfp/pr104510.c: New test.\n+\n 2022-02-15  Peter Bergner  <bergner@linux.ibm.com>\n \n \t* gcc.target/powerpc/htm-1.c: Retry intermittent failing tbegins."}, {"sha": "e857dfc7c43a6fdb9f74814866343aaaf5ef0cf6", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "patch": "@@ -1,3 +1,7 @@\n+2022-02-16  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* dwarf.c (build_address_map): Initialize DWARF 5 fields of unit.\n+\n 2022-02-03  David Seifert  <soap@gentoo.org>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "53596742a8b4b2fd438b509afefacfd315fd5aa4", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3afcd2a380f2fb6c490f2c1318f76402eab43a/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=cb3afcd2a380f2fb6c490f2c1318f76402eab43a", "patch": "@@ -1,3 +1,16 @@\n+2022-02-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Makefile.in: Regenerate.\n+\t* libdruntime/MERGE: Merge upstream druntime dbd0c874.\n+\t* libdruntime/Makefile.am (DRUNTIME_CSOURCES): Add core/int128.d.\n+\t(DRUNTIME_DISOURCES): Add __builtins.di.\n+\t* libdruntime/Makefile.in: Regenerate.\n+\t* src/MERGE: Merge upstream phobos 896b1d0e1.\n+\t* src/Makefile.am (PHOBOS_DSOURCES): Add std/checkedint.d.\n+\t* src/Makefile.in: Regenerate.\n+\t* testsuite/testsuite_flags.in: Add -fall-instantiations to\n+\t--gdcflags.\n+\n 2022-01-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* libdruntime/MERGE: Merge upstream druntime 759e6023."}]}