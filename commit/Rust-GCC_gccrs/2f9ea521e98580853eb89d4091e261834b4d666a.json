{"sha": "2f9ea521e98580853eb89d4091e261834b4d666a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY5ZWE1MjFlOTg1ODA4NTNlYjg5ZDQwOTFlMjYxODM0YjRkNjY2YQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-04-08T22:26:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-04-08T22:26:01Z"}, "message": "tree-cfg.c (verify_stmt): Print complete bogus stmt.\n\n2008-04-09  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-cfg.c (verify_stmt): Print complete bogus stmt.\n\t(dump_function_to_file): Dump function arguments with types.\n\n\t* gfortran.dg/bind_c_usage_14.f03: Adjust.\n\nFrom-SVN: r134115", "tree": {"sha": "aafe0d642c5c8e78e15b005386d6fb74a19f3aa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aafe0d642c5c8e78e15b005386d6fb74a19f3aa2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f9ea521e98580853eb89d4091e261834b4d666a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9ea521e98580853eb89d4091e261834b4d666a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f9ea521e98580853eb89d4091e261834b4d666a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9ea521e98580853eb89d4091e261834b4d666a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5e34caf3c36920fd52c0163914d0b2275c4ca0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e34caf3c36920fd52c0163914d0b2275c4ca0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5e34caf3c36920fd52c0163914d0b2275c4ca0d"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "4118e9da0aa2473a7583a07038771b68134ecf4a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9ea521e98580853eb89d4091e261834b4d666a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9ea521e98580853eb89d4091e261834b4d666a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f9ea521e98580853eb89d4091e261834b4d666a", "patch": "@@ -1,3 +1,8 @@\n+2008-04-09  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-cfg.c (verify_stmt): Print complete bogus stmt.\n+\t(dump_function_to_file): Dump function arguments with types.\n+\n 2008-04-08  Richard Guenther  <rguenther@suse.de>\n \n \t* fold-const.c (fold_widened_comparison): Do not allow"}, {"sha": "54c058efce4cb655db728ed3497c4b043bbfb90b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9ea521e98580853eb89d4091e261834b4d666a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9ea521e98580853eb89d4091e261834b4d666a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2f9ea521e98580853eb89d4091e261834b4d666a", "patch": "@@ -1,3 +1,7 @@\n+2008-04-09  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gfortran.dg/bind_c_usage_14.f03: Adjust.\n+\n 2008-04-08    Andy Hutchinson   <hutchinsonandy@aim.com>\n \n \tPR target/35005"}, {"sha": "2d6726af8ba05440cd7efce9374e2b200f81900a", "filename": "gcc/testsuite/gfortran.dg/bind_c_usage_14.f03", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9ea521e98580853eb89d4091e261834b4d666a/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_14.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9ea521e98580853eb89d4091e261834b4d666a/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_14.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_14.f03?ref=2f9ea521e98580853eb89d4091e261834b4d666a", "patch": "@@ -81,24 +81,24 @@ end subroutine sub6NoIso\n ! The subroutines (including entry) should have\n ! only a char-length parameter if they are not bind(C).\n !\n-! { dg-final { scan-tree-dump \"sub1noiso .a, b, _a, _b\\\\)\" \"original\" } }\n-! { dg-final { scan-tree-dump \"sub2 .a, b\\\\)\" \"original\" } }\n-! { dg-final { scan-tree-dump \"sub3noiso .a, b, _a, _b\\\\)\" \"original\" } }\n-! { dg-final { scan-tree-dump \"sub3noisoentry .x, y, z, _x, _z\\\\)\" \"original\" } }\n-! { dg-final { scan-tree-dump \"sub4iso .a, b\\\\)\" \"original\" } }\n-! { dg-final { scan-tree-dump \"sub4isoentry .x, y, z, _x, _z\\\\)\" \"original\" } }\n-! { dg-final { scan-tree-dump \"sub5iso .a, b\\\\)\" \"original\" } }\n-! { dg-final { scan-tree-dump \"sub5noisoentry .x, y, z, _x, _z\\\\)\" \"original\" } }\n-! { dg-final { scan-tree-dump \"sub6noiso .a, b, _a, _b\\\\)\" \"original\" } }\n-! { dg-final { scan-tree-dump \"sub6isoentry .x, y, z, _x, _z\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"sub1noiso \\\\(\\[^.\\]*a, \\[^.\\]*b, \\[^.\\]*_a, \\[^.\\]*_b\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"sub2 \\\\(\\[^.\\]*a, \\[^.\\]*b\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"sub3noiso \\\\(\\[^.\\]*a, \\[^.\\]*b, \\[^.\\]*_a, \\[^.\\]*_b\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"sub3noisoentry \\\\(\\[^.\\]*x, \\[^.\\]*y, \\[^.\\]*z, \\[^.\\]*_x, \\[^.\\]*_z\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"sub4iso \\\\(\\[^.\\]*a, \\[^.\\]*b\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"sub4isoentry \\\\(\\[^.\\]*x, \\[^.\\]*y, \\[^.\\]*z, \\[^.\\]*_x, \\[^.\\]*_z\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"sub5iso \\\\(\\[^.\\]*a, \\[^.\\]*b\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"sub5noisoentry \\\\(\\[^.\\]*x, \\[^.\\]*y, \\[^.\\]*z, \\[^.\\]*_x, \\[^.\\]*_z\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"sub6noiso \\\\(\\[^.\\]*a, \\[^.\\]*b, \\[^.\\]*_a, \\[^.\\]*_b\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"sub6isoentry \\\\(\\[^.\\]*x, \\[^.\\]*y, \\[^.\\]*z, \\[^.\\]*_x, \\[^.\\]*_z\\\\)\" \"original\" } }\n \n ! The master functions should have always a length parameter\n ! to ensure sharing a parameter between bind(C) and non-bind(C) works\n !\n-! { dg-final { scan-tree-dump \"master.0.sub3noiso .__entry, z, y, x, b, a, _z, _x, _b, _a\\\\)\" \"original\" } }\n-! { dg-final { scan-tree-dump \"master.1.sub4iso .__entry, z, y, x, b, a, _z, _x, _b, _a\\\\)\" \"original\" } }\n-! { dg-final { scan-tree-dump \"master.2.sub5iso .__entry, z, y, x, b, a, _z, _x, _b, _a\\\\)\" \"original\" } }\n-! { dg-final { scan-tree-dump \"master.3.sub6noiso .__entry, z, y, x, b, a, _z, _x, _b, _a\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"master.0.sub3noiso \\\\(\\[^.\\]*__entry, \\[^.\\]*z, \\[^.\\]*y, \\[^.\\]*x, \\[^.\\]*b, \\[^.\\]*a, \\[^.\\]*_z, \\[^.\\]*_x, \\[^.\\]*_b, \\[^.\\]*_a\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"master.1.sub4iso \\\\(\\[^.\\]*__entry, \\[^.\\]*z, \\[^.\\]*y, \\[^.\\]*x, \\[^.\\]*b, \\[^.\\]*a, \\[^.\\]*_z, \\[^.\\]*_x, \\[^.\\]*_b, \\[^.\\]*_a\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"master.2.sub5iso \\\\(\\[^.\\]*__entry, \\[^.\\]*z, \\[^.\\]*y, \\[^.\\]*x, \\[^.\\]*b, \\[^.\\]*a, \\[^.\\]*_z, \\[^.\\]*_x, \\[^.\\]*_b, \\[^.\\]*_a\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump \"master.3.sub6noiso \\\\(\\[^.\\]*__entry, \\[^.\\]*z, \\[^.\\]*y, \\[^.\\]*x, \\[^.\\]*b, \\[^.\\]*a, \\[^.\\]*_z, \\[^.\\]*_x, \\[^.\\]*_b, \\[^.\\]*_a\\\\)\" \"original\" } }\n \n ! Thus, the master functions need to be called with length arguments\n ! present"}, {"sha": "5cff71f70c032ec219594ec01812ace80080af2d", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9ea521e98580853eb89d4091e261834b4d666a/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9ea521e98580853eb89d4091e261834b4d666a/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=2f9ea521e98580853eb89d4091e261834b4d666a", "patch": "@@ -4181,6 +4181,11 @@ verify_stmt (tree stmt, bool last_in_block)\n   if (addr)\n     {\n       debug_generic_stmt (addr);\n+      if (addr != stmt)\n+\t{\n+\t  inform (\"in statement\");\n+\t  debug_generic_stmt (stmt);\n+\t}\n       return true;\n     }\n \n@@ -6130,6 +6135,8 @@ dump_function_to_file (tree fn, FILE *file, int flags)\n   arg = DECL_ARGUMENTS (fn);\n   while (arg)\n     {\n+      print_generic_expr (file, TREE_TYPE (arg), dump_flags);\n+      fprintf (file, \" \");\n       print_generic_expr (file, arg, dump_flags);\n       if (TREE_CHAIN (arg))\n \tfprintf (file, \", \");"}]}