{"sha": "b5119fa1391d75ecd9c7e041151acb04bd6c7234", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUxMTlmYTEzOTFkNzVlY2Q5YzdlMDQxMTUxYWNiMDRiZDZjNzIzNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-07-06T09:24:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-07-06T09:24:18Z"}, "message": "c-common.c (boolean_increment): Use correctly typed constant.\n\n2007-07-06  Richard Guenther  <rguenther@suse.de>\n\n\t* c-common.c (boolean_increment): Use correctly typed\n\tconstant.\n\n\tcp/\n\t* init.c (build_new_1): Use the correct pointer type.\n\t* typeck2.c (build_m_component_ref): Likewise.\n\nFrom-SVN: r126405", "tree": {"sha": "55c0bb411246985213c916764c6073969a4f0d07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55c0bb411246985213c916764c6073969a4f0d07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5119fa1391d75ecd9c7e041151acb04bd6c7234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5119fa1391d75ecd9c7e041151acb04bd6c7234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5119fa1391d75ecd9c7e041151acb04bd6c7234", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5119fa1391d75ecd9c7e041151acb04bd6c7234/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "106b3d40e77897e85c6e041b88b74b8a3222417e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/106b3d40e77897e85c6e041b88b74b8a3222417e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/106b3d40e77897e85c6e041b88b74b8a3222417e"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "6d5d1c16d4fbd5fbe98fa791d4c94ced046b2be5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5119fa1391d75ecd9c7e041151acb04bd6c7234/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5119fa1391d75ecd9c7e041151acb04bd6c7234/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5119fa1391d75ecd9c7e041151acb04bd6c7234", "patch": "@@ -1,3 +1,8 @@\n+2007-07-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* c-common.c (boolean_increment): Use correctly typed\n+\tconstant.\n+\n 2007-07-06  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/mips/mips.c (mips16e_save_restore_pattern_p): Check that"}, {"sha": "0682a487d4234ec6f55ba4b2cfd7edb6b4fa0bc0", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5119fa1391d75ecd9c7e041151acb04bd6c7234/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5119fa1391d75ecd9c7e041151acb04bd6c7234/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=b5119fa1391d75ecd9c7e041151acb04bd6c7234", "patch": "@@ -4348,7 +4348,7 @@ tree\n boolean_increment (enum tree_code code, tree arg)\n {\n   tree val;\n-  tree true_res = boolean_true_node;\n+  tree true_res = build_int_cst (TREE_TYPE (arg), 1);\n \n   arg = stabilize_reference (arg);\n   switch (code)"}, {"sha": "f22d5b7f429edf2ab098d5c410e0bdde86ea9d2a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5119fa1391d75ecd9c7e041151acb04bd6c7234/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5119fa1391d75ecd9c7e041151acb04bd6c7234/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b5119fa1391d75ecd9c7e041151acb04bd6c7234", "patch": "@@ -1,3 +1,8 @@\n+2007-07-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* init.c (build_new_1): Use the correct pointer type.\n+\t* typeck2.c (build_m_component_ref): Likewise.\n+\n 2007-07-05  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/32245"}, {"sha": "b65de81967ad2dcf15c31f83eddd03d9eb27f276", "filename": "gcc/cp/init.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5119fa1391d75ecd9c7e041151acb04bd6c7234/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5119fa1391d75ecd9c7e041151acb04bd6c7234/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=b5119fa1391d75ecd9c7e041151acb04bd6c7234", "patch": "@@ -1915,6 +1915,7 @@ build_new_1 (tree placement, tree type, tree nelts, tree init,\n     {\n       tree cookie;\n       tree cookie_ptr;\n+      tree size_ptr_type;\n \n       /* Adjust so we're pointing to the start of the object.  */\n       data_addr = get_target_expr (build2 (POINTER_PLUS_EXPR, full_pointer_type,\n@@ -1924,8 +1925,9 @@ build_new_1 (tree placement, tree type, tree nelts, tree init,\n \t many elements to destroy later.  We use the last sizeof\n \t (size_t) bytes to store the number of elements.  */\n       cookie_ptr = fold_build1 (NEGATE_EXPR, sizetype, size_in_bytes (sizetype));\n-      cookie_ptr = build2 (POINTER_PLUS_EXPR, build_pointer_type (sizetype),\n-\t\t\t   data_addr, cookie_ptr);\n+      size_ptr_type = build_pointer_type (sizetype);\n+      cookie_ptr = build2 (POINTER_PLUS_EXPR, size_ptr_type,\n+\t\t\t   fold_convert (size_ptr_type, data_addr), cookie_ptr);\n       cookie = build_indirect_ref (cookie_ptr, NULL);\n \n       cookie_expr = build2 (MODIFY_EXPR, sizetype, cookie, nelts);"}, {"sha": "14d9963f61c8d4674e1fb467603cee075eae8386", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5119fa1391d75ecd9c7e041151acb04bd6c7234/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5119fa1391d75ecd9c7e041151acb04bd6c7234/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=b5119fa1391d75ecd9c7e041151acb04bd6c7234", "patch": "@@ -1261,6 +1261,8 @@ build_m_component_ref (tree datum, tree component)\n \n   if (TYPE_PTRMEM_P (ptrmem_type))\n     {\n+      tree ptype;\n+\n       /* Compute the type of the field, as described in [expr.ref].\n \t There's no such thing as a mutable pointer-to-member, so\n \t things are not as complex as they are for references to\n@@ -1277,8 +1279,10 @@ build_m_component_ref (tree datum, tree component)\n \n       /* Build an expression for \"object + offset\" where offset is the\n \t value stored in the pointer-to-data-member.  */\n-      datum = build2 (POINTER_PLUS_EXPR, build_pointer_type (type),\n-\t\t      datum, build_nop (sizetype, component));\n+      ptype = build_pointer_type (type);\n+      datum = build2 (POINTER_PLUS_EXPR, ptype,\n+\t\t      fold_convert (ptype, datum),\n+\t\t      build_nop (sizetype, component));\n       return build_indirect_ref (datum, 0);\n     }\n   else"}]}