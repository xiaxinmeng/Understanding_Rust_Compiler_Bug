{"sha": "65529f748184741575136af3aab497059ff2aa10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU1MjlmNzQ4MTg0NzQxNTc1MTM2YWYzYWFiNDk3MDU5ZmYyYWExMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-05-21T13:19:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-05-21T13:19:28Z"}, "message": "[multiple changes]\n\n2014-05-21  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_warn.adb: Minor fix to warning messages (use ?? instead\n\tof ?).\n\n2014-05-21  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb (GNATCmd): For platforms other than VMS, recognize\n\tswitch --version and --help.\n\n2014-05-21  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_elab.adb (Is_Call_Of_Generic_Formal): New function.\n\n2014-05-21  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Iterator_Specification): Set type of\n\titerator variable when the domain of iteration is a formal\n\tcontainer and this is an element iterator.\n\n2014-05-21  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch12.adb: Minor reformatting.\n\nFrom-SVN: r210707", "tree": {"sha": "fce8c3359f53c9f552016649f0eecde3c0682b48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fce8c3359f53c9f552016649f0eecde3c0682b48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65529f748184741575136af3aab497059ff2aa10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65529f748184741575136af3aab497059ff2aa10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65529f748184741575136af3aab497059ff2aa10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65529f748184741575136af3aab497059ff2aa10/comments", "author": null, "committer": null, "parents": [{"sha": "d3289ba2b4ee27a776fa4c678739b50c6d1d919d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3289ba2b4ee27a776fa4c678739b50c6d1d919d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3289ba2b4ee27a776fa4c678739b50c6d1d919d"}], "stats": {"total": 283, "additions": 172, "deletions": 111}, "files": [{"sha": "26df7be2dc123f86e2f52303efe718c4f6f0d3f2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65529f748184741575136af3aab497059ff2aa10/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65529f748184741575136af3aab497059ff2aa10/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=65529f748184741575136af3aab497059ff2aa10", "patch": "@@ -1,3 +1,27 @@\n+2014-05-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_warn.adb: Minor fix to warning messages (use ?? instead\n+\tof ?).\n+\n+2014-05-21  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatcmd.adb (GNATCmd): For platforms other than VMS, recognize\n+\tswitch --version and --help.\n+\n+2014-05-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_elab.adb (Is_Call_Of_Generic_Formal): New function.\n+\n+2014-05-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Iterator_Specification): Set type of\n+\titerator variable when the domain of iteration is a formal\n+\tcontainer and this is an element iterator.\n+\n+2014-05-21  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch12.adb: Minor reformatting.\n+\n 2014-05-21  Robert Dewar  <dewar@adacore.com>\n \n \t* sinfo.ads, sem_ch12.adb, sem_warn.adb: Minor reformatting."}, {"sha": "b2a865cf416ac8449c6a69a5431b9c8f24a814d8", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 102, "deletions": 92, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65529f748184741575136af3aab497059ff2aa10/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65529f748184741575136af3aab497059ff2aa10/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=65529f748184741575136af3aab497059ff2aa10", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,6 +45,7 @@ with Sdefault;\n with Sinput.P;\n with Snames;   use Snames;\n with Stringt;\n+with Switch;   use Switch;\n with Table;\n with Targparm;\n with Tempdir;\n@@ -1382,6 +1383,9 @@ procedure GNATCmd is\n       end if;\n    end Set_Library_For;\n \n+   procedure Check_Version_And_Help is\n+     new Check_Version_And_Help_G (Non_VMS_Usage);\n+\n --  Start of processing for GNATCmd\n \n begin\n@@ -1488,122 +1492,128 @@ begin\n    --  If not on VMS, scan the command line directly\n \n    else\n-      if Argument_Count = 0 then\n-         Non_VMS_Usage;\n-         return;\n-      else\n-         begin\n-            loop\n-               if Argument_Count > Command_Arg\n-                 and then Argument (Command_Arg) = \"-v\"\n-               then\n-                  Verbose_Mode := True;\n-                  Command_Arg := Command_Arg + 1;\n+      --  First, scan to detect --version and/or --help\n \n-               elsif Argument_Count > Command_Arg\n-                 and then Argument (Command_Arg) = \"-dn\"\n-               then\n-                  Keep_Temporary_Files := True;\n-                  Command_Arg := Command_Arg + 1;\n+      Check_Version_And_Help (\"GNAT\", \"1996\");\n \n-               else\n-                  exit;\n-               end if;\n-            end loop;\n+      begin\n+         loop\n+            if Command_Arg <= Argument_Count\n+              and then Argument (Command_Arg) = \"-v\"\n+            then\n+               Verbose_Mode := True;\n+               Command_Arg := Command_Arg + 1;\n \n-            The_Command := Real_Command_Type'Value (Argument (Command_Arg));\n+            elsif Command_Arg <= Argument_Count\n+              and then Argument (Command_Arg) = \"-dn\"\n+            then\n+               Keep_Temporary_Files := True;\n+               Command_Arg := Command_Arg + 1;\n \n-            if Command_List (The_Command).VMS_Only then\n-               Non_VMS_Usage;\n-               Fail\n-                 (\"Command \"\"\"\n-                  & Command_List (The_Command).Cname.all\n-                  & \"\"\" can only be used on VMS\");\n+            else\n+               exit;\n             end if;\n+         end loop;\n \n-         exception\n-            when Constraint_Error =>\n+         --  If there is no command, just output the usage\n \n-               --  Check if it is an alternate command\n+         if Command_Arg > Argument_Count then\n+            Non_VMS_Usage;\n+            return;\n+         end if;\n \n-               declare\n-                  Alternate : Alternate_Command;\n+         The_Command := Real_Command_Type'Value (Argument (Command_Arg));\n \n-               begin\n-                  Alternate := Alternate_Command'Value\n-                                              (Argument (Command_Arg));\n-                  The_Command := Corresponding_To (Alternate);\n-\n-               exception\n-                  when Constraint_Error =>\n-                     Non_VMS_Usage;\n-                     Fail (\"Unknown command: \" & Argument (Command_Arg));\n-               end;\n-         end;\n+         if Command_List (The_Command).VMS_Only then\n+            Non_VMS_Usage;\n+            Fail\n+              (\"Command \"\"\"\n+               & Command_List (The_Command).Cname.all\n+               & \"\"\" can only be used on VMS\");\n+         end if;\n+\n+      exception\n+         when Constraint_Error =>\n \n-         --  Get the arguments from the command line and from the eventual\n-         --  argument file(s) specified on the command line.\n+            --  Check if it is an alternate command\n \n-         for Arg in Command_Arg + 1 .. Argument_Count loop\n             declare\n-               The_Arg : constant String := Argument (Arg);\n+               Alternate : Alternate_Command;\n \n             begin\n-               --  Check if an argument file is specified\n+               Alternate := Alternate_Command'Value\n+                 (Argument (Command_Arg));\n+               The_Command := Corresponding_To (Alternate);\n+\n+            exception\n+               when Constraint_Error =>\n+                  Non_VMS_Usage;\n+                  Fail (\"Unknown command: \" & Argument (Command_Arg));\n+            end;\n+      end;\n \n-               if The_Arg (The_Arg'First) = '@' then\n-                  declare\n-                     Arg_File : Ada.Text_IO.File_Type;\n-                     Line     : String (1 .. 256);\n-                     Last     : Natural;\n+      --  Get the arguments from the command line and from the eventual\n+      --  argument file(s) specified on the command line.\n \n-                  begin\n-                     --  Open the file and fail if the file cannot be found\n+      for Arg in Command_Arg + 1 .. Argument_Count loop\n+         declare\n+            The_Arg : constant String := Argument (Arg);\n \n-                     begin\n-                        Open\n-                          (Arg_File, In_File,\n-                           The_Arg (The_Arg'First + 1 .. The_Arg'Last));\n+         begin\n+            --  Check if an argument file is specified\n \n-                     exception\n-                        when others =>\n-                           Put\n-                             (Standard_Error, \"Cannot open argument file \"\"\");\n-                           Put\n-                             (Standard_Error,\n-                              The_Arg (The_Arg'First + 1 .. The_Arg'Last));\n+            if The_Arg (The_Arg'First) = '@' then\n+               declare\n+                  Arg_File : Ada.Text_IO.File_Type;\n+                  Line     : String (1 .. 256);\n+                  Last     : Natural;\n \n-                           Put_Line (Standard_Error, \"\"\"\");\n-                           raise Error_Exit;\n-                     end;\n+               begin\n+                  --  Open the file and fail if the file cannot be found\n \n-                     --  Read line by line and put the content of each non-\n-                     --  empty line in the Last_Switches table.\n+                  begin\n+                     Open\n+                       (Arg_File, In_File,\n+                        The_Arg (The_Arg'First + 1 .. The_Arg'Last));\n+\n+                  exception\n+                     when others =>\n+                        Put\n+                          (Standard_Error, \"Cannot open argument file \"\"\");\n+                        Put\n+                          (Standard_Error,\n+                           The_Arg (The_Arg'First + 1 .. The_Arg'Last));\n \n-                     while not End_Of_File (Arg_File) loop\n-                        Get_Line (Arg_File, Line, Last);\n+                        Put_Line (Standard_Error, \"\"\"\");\n+                        raise Error_Exit;\n+                  end;\n \n-                        if Last /= 0 then\n-                           Last_Switches.Increment_Last;\n-                           Last_Switches.Table (Last_Switches.Last) :=\n-                             new String'(Line (1 .. Last));\n-                        end if;\n-                     end loop;\n+                  --  Read line by line and put the content of each non-\n+                  --  empty line in the Last_Switches table.\n \n-                     Close (Arg_File);\n-                  end;\n+                  while not End_Of_File (Arg_File) loop\n+                     Get_Line (Arg_File, Line, Last);\n \n-               else\n-                  --  It is not an argument file; just put the argument in\n-                  --  the Last_Switches table.\n+                     if Last /= 0 then\n+                        Last_Switches.Increment_Last;\n+                        Last_Switches.Table (Last_Switches.Last) :=\n+                          new String'(Line (1 .. Last));\n+                     end if;\n+                  end loop;\n \n-                  Last_Switches.Increment_Last;\n-                  Last_Switches.Table (Last_Switches.Last) :=\n-                    new String'(The_Arg);\n-               end if;\n-            end;\n-         end loop;\n-      end if;\n+                  Close (Arg_File);\n+               end;\n+\n+            else\n+               --  It is not an argument file; just put the argument in\n+               --  the Last_Switches table.\n+\n+               Last_Switches.Increment_Last;\n+               Last_Switches.Table (Last_Switches.Last) :=\n+                 new String'(The_Arg);\n+            end if;\n+         end;\n+      end loop;\n    end if;\n \n    declare"}, {"sha": "5494ab5ec16b35896ed47455a04ae786dd0acb44", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65529f748184741575136af3aab497059ff2aa10/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65529f748184741575136af3aab497059ff2aa10/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=65529f748184741575136af3aab497059ff2aa10", "patch": "@@ -10070,6 +10070,7 @@ package body Sem_Ch12 is\n \n          Set_Corresponding_Spec (Act_Body, Act_Decl_Id);\n          Check_Generic_Actuals (Act_Decl_Id, False);\n+\n          Check_Initialized_Types;\n \n          --  Install primitives hidden at the point of the instantiation but"}, {"sha": "5f14622a29c8414d291903a262b34f426c3f735a", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65529f748184741575136af3aab497059ff2aa10/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65529f748184741575136af3aab497059ff2aa10/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=65529f748184741575136af3aab497059ff2aa10", "patch": "@@ -1868,9 +1868,18 @@ package body Sem_Ch5 is\n \n          if Of_Present (N) then\n             if Has_Aspect (Typ, Aspect_Iterable) then\n-               if No (Get_Iterable_Type_Primitive (Typ, Name_Element)) then\n-                  Error_Msg_N (\"missing Element primitive for iteration\", N);\n-               end if;\n+               declare\n+                  Elt : constant Entity_Id :=\n+                          Get_Iterable_Type_Primitive (Typ, Name_Element);\n+               begin\n+                  if No (Elt) then\n+                     Error_Msg_N\n+                       (\"missing Element primitive for iteration\", N);\n+\n+                  else\n+                     Set_Etype (Def_Id, Etype (Elt));\n+                  end if;\n+               end;\n \n             --  For a predefined container, The type of the loop variable is\n             --  the Iterator_Element aspect of the container type."}, {"sha": "02762ff1abbcf2fade094adced37b8d242b77548", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 31, "deletions": 14, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65529f748184741575136af3aab497059ff2aa10/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65529f748184741575136af3aab497059ff2aa10/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=65529f748184741575136af3aab497059ff2aa10", "patch": "@@ -541,6 +541,27 @@ package body Sem_Elab is\n       --  warnings on the scope are also suppressed. For the internal case,\n       --  we ignore this flag.\n \n+      function Is_Call_Of_Generic_Formal return Boolean;\n+      --  Returns True if node N is a call to a generic formal subprogram\n+\n+      -------------------------------\n+      -- Is_Call_Of_Generic_Formal --\n+      -------------------------------\n+\n+      function Is_Call_Of_Generic_Formal return Boolean is\n+      begin\n+         return Nkind_In (N, N_Function_Call, N_Procedure_Call_Statement)\n+\n+           --  For now, we detect this by looking for the strange identifier\n+           --  node, whose Chars reflect the name of the generic formal, but\n+           --  the Chars of the Entity references the generic actual.\n+\n+           and then Nkind (Name (N)) = N_Identifier\n+           and then Chars (Name (N)) /= Chars (Entity (Name (N)));\n+      end Is_Call_Of_Generic_Formal;\n+\n+   --  Start of processing for Check_A_Call\n+\n    begin\n       --  If the call is known to be within a local Suppress Elaboration\n       --  pragma, nothing to check. This can happen in task bodies.\n@@ -752,8 +773,9 @@ package body Sem_Elab is\n          --  However, if we are doing dynamic elaboration, we need to chase the\n          --  call in the usual manner.\n \n-         --  We do not handle the case of calling a generic formal correctly in\n-         --  the static case.???\n+         --  We also need to chase the call in the usual manner if it is a call\n+         --  to a generic formal parameter, since that case was not handled as\n+         --  part of the processing of the template.\n \n          Inst_Caller := Instantiation (Get_Source_File_Index (Sloc (N)));\n          Inst_Callee := Instantiation (Get_Source_File_Index (Sloc (Ent)));\n@@ -773,14 +795,8 @@ package body Sem_Elab is\n          if Unit_Caller /= No_Unit\n            and then Unit_Callee /= Unit_Caller\n            and then not Dynamic_Elaboration_Checks\n-\n-            --  This is an attempt to solve the problem of mishandling of\n-            --  generic formal parameters, but it does not work right yet ???\n-\n-            --  and then not Used_As_Generic_Actual (Ent)\n+           and then not Is_Call_Of_Generic_Formal\n          then\n-            --  It is here that things go wrong for calling a generic formal???\n-\n             E_Scope := Spec_Entity (Cunit_Entity (Unit_Caller));\n \n             --  If we don't get a spec entity, just ignore call. Not quite\n@@ -796,11 +812,12 @@ package body Sem_Elab is\n                E_Scope := Scope (E_Scope);\n             end loop;\n \n-         --  For the case N is not an instance, or a call within instance, we\n-         --  recompute E_Scope for the error message, since we do NOT want to\n-         --  go to the unit which has the ultimate declaration in the case of\n-         --  renaming and derivation and we also want to go to the generic unit\n-         --  in the case of an instance, and no further.\n+         --  For the case where N is not an instance, and is not a call within\n+         --  instance to other than a generic formal, we recompute E_Scope\n+         --  for the error message, since we do NOT want to go to the unit\n+         --  which has the ultimate declaration in the case of renaming and\n+         --  derivation and we also want to go to the generic unit in the\n+         --  case of an instance, and no further.\n \n          else\n             --  Loop to carefully follow renamings and derivations one step"}, {"sha": "6571a9ea7c2b7486f4b3dc311444e0de10a43685", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65529f748184741575136af3aab497059ff2aa10/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65529f748184741575136af3aab497059ff2aa10/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=65529f748184741575136af3aab497059ff2aa10", "patch": "@@ -852,9 +852,9 @@ package body Sem_Warn is\n          end if;\n \n          if Res then\n-            Error_Msg_N (\"?!variable& of a generic type is potentially \"\n+            Error_Msg_N (\"??!variable& of a generic type is potentially \"\n                          & \"uninitialized\", Ent);\n-            Error_Msg_NE (\"\\?instantiations must provide fully initialized \"\n+            Error_Msg_NE (\"\\??instantiations must provide fully initialized \"\n                           & \"type for&\", Ent, T);\n          end if;\n "}]}