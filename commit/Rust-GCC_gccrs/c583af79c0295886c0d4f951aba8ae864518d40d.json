{"sha": "c583af79c0295886c0d4f951aba8ae864518d40d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU4M2FmNzljMDI5NTg4NmMwZDRmOTUxYWJhOGFlODY0NTE4ZDQwZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2012-08-23T14:49:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-08-23T14:49:41Z"}, "message": "c-ada-spec.c (dump_generic_ada_node): Fix handling of name_only for pointers, and add missing Convention C pragma.\n\n\t* c-ada-spec.c (dump_generic_ada_node): Fix handling of name_only\n\tfor pointers, and add missing Convention C pragma.\n\t(print_ada_struct_decl): Add missing aliased keyword.\n\t(dump_ads): Add pragma Ada_2005 and Style_Checks (Off).\n\nFrom-SVN: r190623", "tree": {"sha": "276aa10e39db8607f76a67e6f4a6fbb56cfca8c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/276aa10e39db8607f76a67e6f4a6fbb56cfca8c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c583af79c0295886c0d4f951aba8ae864518d40d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c583af79c0295886c0d4f951aba8ae864518d40d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c583af79c0295886c0d4f951aba8ae864518d40d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c583af79c0295886c0d4f951aba8ae864518d40d/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3118cdeb39589d913da0da5ea531bbe441043ee5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3118cdeb39589d913da0da5ea531bbe441043ee5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3118cdeb39589d913da0da5ea531bbe441043ee5"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "642ff7dc8d5a944379731c0b071d7189a2d31d98", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c583af79c0295886c0d4f951aba8ae864518d40d/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c583af79c0295886c0d4f951aba8ae864518d40d/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=c583af79c0295886c0d4f951aba8ae864518d40d", "patch": "@@ -1,3 +1,10 @@\n+2012-08-23  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* c-ada-spec.c (dump_generic_ada_node): Fix handling of name_only\n+\tfor pointers, and add missing Convention C pragma.\n+\t(print_ada_struct_decl): Add missing aliased keyword.\n+\t(dump_ads): Add pragma Ada_2005 and Style_Checks (Off).\n+\n 2012-08-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-common.c (sizeof_pointer_memaccess_warning): New function."}, {"sha": "cc6f2608d21f1ee4e13d5c39112eb082c1481514", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c583af79c0295886c0d4f951aba8ae864518d40d/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c583af79c0295886c0d4f951aba8ae864518d40d/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=c583af79c0295886c0d4f951aba8ae864518d40d", "patch": "@@ -1947,7 +1947,12 @@ dump_generic_ada_node (pretty_printer *buffer, tree node, tree type,\n \n     case POINTER_TYPE:\n     case REFERENCE_TYPE:\n-      if (TREE_CODE (TREE_TYPE (node)) == FUNCTION_TYPE)\n+      if (name_only && TYPE_NAME (node))\n+\tdump_generic_ada_node\n+\t  (buffer, TYPE_NAME (node), node, cpp_check,\n+\t   spc, limited_access, true);\n+\n+      else if (TREE_CODE (TREE_TYPE (node)) == FUNCTION_TYPE)\n \t{\n \t  tree fnode = TREE_TYPE (node);\n \t  bool is_function;\n@@ -1975,17 +1980,25 @@ dump_generic_ada_node (pretty_printer *buffer, tree node, tree type,\n \t      dump_generic_ada_node\n \t\t(buffer, TREE_TYPE (fnode), type, cpp_check, spc, 0, true);\n \t    }\n+\n+\t    /* If we are dumping the full type, it means we are part of a\n+\t       type definition and need also a Convention C pragma.  */\n+\t    if (!name_only)\n+\t      {\n+\t\tpp_semicolon (buffer);\n+\t\tnewline_and_indent (buffer, spc);\n+\t\tpp_string (buffer, \"pragma Convention (C, \");\n+\t\tdump_generic_ada_node\n+\t\t  (buffer, type, 0, cpp_check, spc, false, true);\n+\t\tpp_string (buffer, \")\");\n+\t      }\n \t}\n       else\n \t{\n \t  int is_access = false;\n \t  unsigned int quals = TYPE_QUALS (TREE_TYPE (node));\n \n-\t  if (name_only && TYPE_NAME (node))\n-\t    dump_generic_ada_node\n-\t      (buffer, TYPE_NAME (node), node, cpp_check,\n-\t       spc, limited_access, true);\n-\t  else if (VOID_TYPE_P (TREE_TYPE (node)))\n+\t  if (VOID_TYPE_P (TREE_TYPE (node)))\n \t    {\n \t      if (!name_only)\n \t\tpp_string (buffer, \"new \");\n@@ -3087,10 +3100,10 @@ print_ada_struct_decl (pretty_printer *buffer, tree node, tree type,\n \t\t      INDENT (field_spc);\n \n \t\t      if (field_num == 0)\n-\t\t\tpp_string (buffer, \"parent : \");\n+\t\t\tpp_string (buffer, \"parent : aliased \");\n \t\t      else\n \t\t\t{\n-\t\t\t  sprintf (buf, \"field_%d : \", field_num + 1);\n+\t\t\t  sprintf (buf, \"field_%d : aliased \", field_num + 1);\n \t\t\t  pp_string (buffer, buf);\n \t\t\t}\n \t\t      dump_ada_decl_name\n@@ -3262,6 +3275,10 @@ dump_ads (const char *source_file,\n       /* Dump all references.  */\n       dump_ada_nodes (&pp, source_file, cpp_check);\n \n+      /* Requires Ada 2005 syntax, so generate corresponding pragma.\n+         Also, disable style checks since this file is auto-generated.  */\n+      fprintf (f, \"pragma Ada_2005;\\npragma Style_Checks (Off);\\n\\n\");\n+\n       /* Dump withs.  */\n       dump_ada_withs (f);\n "}]}