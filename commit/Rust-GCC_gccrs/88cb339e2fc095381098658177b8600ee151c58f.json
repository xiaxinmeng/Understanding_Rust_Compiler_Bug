{"sha": "88cb339e2fc095381098658177b8600ee151c58f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhjYjMzOWUyZmMwOTUzODEwOTg2NTgxNzdiODYwMGVlMTUxYzU4Zg==", "commit": {"author": {"name": "Naveen H.S", "email": "naveen.S@kpitcummins.com", "date": "2011-04-01T20:47:28Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-04-01T20:47:28Z"}, "message": "h8300.c (print_operand_address): Rename to...\n\n\t* config/h8300/h8300.c (print_operand_address): Rename to...\n\t(h8300_print_operand_address): ...this. Make static. Adjust comments.\n\tCall h8300_print_operand and h8300_print_operand_address instead of\n\tprint_operand and print_operand_address. Declare.\n\t(print_operand): Renake to...\n\t(h8300_print_operand): ...this. Make static. Adjust comments.\n\tCall h8300_print_operand instead of print_operand. Declare.\n\t(h8300_print_operand_punct_valid_p): Moved from h8300.h file.\n\t(h8300_register_move_cost): Likewise.\n\t(TARGET_PRINT_OPERAND_PUNCT_VALID_P, TARGET_PRINT_OPERAND\n\tTARGET_PRINT_OPERAND_ADDRESS, TARGET_REGISTER_MOVE_COST): Define.\n\t* config/h8300/h8300.h (PRINT_OPERAND_ADDRESS, PRINT_OPERAND\n\tPRINT_OPERAND_PUNCT_VALID_P, REGISTER_MOVE_COST): Delete.\n\t* config/h8300/h8300-protos.h (print_operand): Delete.\n\t(print_operand_address): Delete.\n\nFrom-SVN: r171853", "tree": {"sha": "ee9267d8163daabb05f6b7320ebe98f093eceb39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee9267d8163daabb05f6b7320ebe98f093eceb39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88cb339e2fc095381098658177b8600ee151c58f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88cb339e2fc095381098658177b8600ee151c58f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88cb339e2fc095381098658177b8600ee151c58f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88cb339e2fc095381098658177b8600ee151c58f/comments", "author": null, "committer": null, "parents": [{"sha": "756d6ee965cd678839c99b8ada229d20ec4ca20c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756d6ee965cd678839c99b8ada229d20ec4ca20c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/756d6ee965cd678839c99b8ada229d20ec4ca20c"}], "stats": {"total": 114, "additions": 74, "deletions": 40}, "files": [{"sha": "5d55909f17994d3b8fe2b113340e18c9ec4222f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88cb339e2fc095381098658177b8600ee151c58f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88cb339e2fc095381098658177b8600ee151c58f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88cb339e2fc095381098658177b8600ee151c58f", "patch": "@@ -1,3 +1,21 @@\n+2011-04-01  Naveen H.S  <naveen.S@kpitcummins.com>\n+\n+\t* config/h8300/h8300.c (print_operand_address): Rename to...\n+\t(h8300_print_operand_address): ...this. Make static. Adjust comments.\n+\tCall h8300_print_operand and h8300_print_operand_address instead of\n+\tprint_operand and print_operand_address. Declare.\n+\t(print_operand): Renake to...\n+\t(h8300_print_operand): ...this. Make static. Adjust comments.\n+\tCall h8300_print_operand instead of print_operand. Declare.\n+\t(h8300_print_operand_punct_valid_p): Moved from h8300.h file.\n+\t(h8300_register_move_cost): Likewise.\n+\t(TARGET_PRINT_OPERAND_PUNCT_VALID_P, TARGET_PRINT_OPERAND\n+\tTARGET_PRINT_OPERAND_ADDRESS, TARGET_REGISTER_MOVE_COST): Define.\n+\t* config/h8300/h8300.h (PRINT_OPERAND_ADDRESS, PRINT_OPERAND\n+\tPRINT_OPERAND_PUNCT_VALID_P, REGISTER_MOVE_COST): Delete.\n+\t* config/h8300/h8300-protos.h (print_operand): Delete.\n+\t(print_operand_address): Delete.\n+\n 2011-04-01  Richard Henderson  <rth@redhat.com>\n \n \tPR 48400"}, {"sha": "bb2d5e76097880a29f3fe2afb4a7b55b257aa67b", "filename": "gcc/config/h8300/h8300-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88cb339e2fc095381098658177b8600ee151c58f/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88cb339e2fc095381098658177b8600ee151c58f/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h?ref=88cb339e2fc095381098658177b8600ee151c58f", "patch": "@@ -34,8 +34,6 @@ extern unsigned int compute_a_shift_length (rtx, rtx *);\n extern const char *output_a_rotate (enum rtx_code, rtx *);\n extern unsigned int compute_a_rotate_length (rtx *);\n extern const char *output_simode_bld (int, rtx[]);\n-extern void print_operand_address (FILE *, rtx);\n-extern void print_operand (FILE *, rtx, int);\n extern void final_prescan_insn (rtx, rtx *, int);\n extern int h8300_expand_movsi (rtx[]);\n extern void notice_update_cc (rtx, rtx);"}, {"sha": "93febd1e51787ead9f55f5ac102a529a8f7cb1e7", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 56, "deletions": 18, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88cb339e2fc095381098658177b8600ee151c58f/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88cb339e2fc095381098658177b8600ee151c58f/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=88cb339e2fc095381098658177b8600ee151c58f", "patch": "@@ -94,9 +94,13 @@ static unsigned int h8300_asm_insn_count (const char *);\n static tree h8300_handle_fndecl_attribute (tree *, tree, tree, int, bool *);\n static tree h8300_handle_eightbit_data_attribute (tree *, tree, tree, int, bool *);\n static tree h8300_handle_tiny_data_attribute (tree *, tree, tree, int, bool *);\n+static void h8300_print_operand_address (FILE *, rtx);\n+static void h8300_print_operand (FILE *, rtx, int);\n+static bool h8300_print_operand_punct_valid_p (unsigned char code);\n #ifndef OBJECT_FORMAT_ELF\n static void h8300_asm_named_section (const char *, unsigned int, tree);\n #endif\n+static int h8300_register_move_cost (enum machine_mode, reg_class_t, reg_class_t);\n static int h8300_and_costs (rtx);\n static int h8300_shift_costs (rtx);\n static void          h8300_push_pop               (int, int, bool, bool);\n@@ -1118,6 +1122,22 @@ h8300_function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n }\n \n \f\n+/* Implements TARGET_REGISTER_MOVE_COST.\n+\n+   Any SI register-to-register move may need to be reloaded,\n+   so inmplement h8300_register_move_cost to return > 2 so that reload never\n+   shortcuts.  */\n+\n+static int\n+h8300_register_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n+                         reg_class_t from, reg_class_t to)\n+{\n+  if (from == MAC_REGS || to == MAC_REG)\n+    return 6;\n+  else\n+    return 3;\n+}\n+\n /* Compute the cost of an and insn.  */\n \n static int\n@@ -1386,8 +1406,8 @@ cond_string (enum rtx_code code)\n /* Print operand X using operand code CODE to assembly language output file\n    FILE.  */\n \n-void\n-print_operand (FILE *file, rtx x, int code)\n+static void\n+h8300_print_operand (FILE *file, rtx x, int code)\n {\n   /* This is used for communication between codes V,W,Z and Y.  */\n   static int bitint;\n@@ -1466,7 +1486,7 @@ print_operand (FILE *file, rtx x, int code)\n       if (GET_CODE (x) == REG)\n \tfprintf (file, \"%s%c\", names_big[REGNO (x)], bitint > 7 ? 'h' : 'l');\n       else\n-\tprint_operand (file, x, 'R');\n+\th8300_print_operand (file, x, 'R');\n       bitint = -1;\n       break;\n     case 'Z':\n@@ -1499,7 +1519,7 @@ print_operand (FILE *file, rtx x, int code)\n \t    fprintf (file, \"%s\", names_upper_extended[REGNO (x)]);\n \t  break;\n \tcase MEM:\n-\t  print_operand (file, x, 0);\n+\t  h8300_print_operand (file, x, 0);\n \t  break;\n \tcase CONST_INT:\n \t  fprintf (file, \"#%ld\", ((INTVAL (x) >> 16) & 0xffff));\n@@ -1529,7 +1549,7 @@ print_operand (FILE *file, rtx x, int code)\n \t  break;\n \tcase MEM:\n \t  x = adjust_address (x, HImode, 2);\n-\t  print_operand (file, x, 0);\n+\t  h8300_print_operand (file, x, 0);\n \t  break;\n \tcase CONST_INT:\n \t  fprintf (file, \"#%ld\", INTVAL (x) & 0xffff);\n@@ -1574,7 +1594,7 @@ print_operand (FILE *file, rtx x, int code)\n \t}\n       break;\n     case 'o':\n-      print_operand_address (file, x);\n+      h8300_print_operand_address (file, x);\n       break;\n     case 's':\n       if (GET_CODE (x) == CONST_INT)\n@@ -1691,7 +1711,7 @@ print_operand (FILE *file, rtx x, int code)\n \tcase CONST:\n \tcase LABEL_REF:\n \t  fprintf (file, \"#\");\n-\t  print_operand_address (file, x);\n+\t  h8300_print_operand_address (file, x);\n \t  break;\n \tcase CONST_DOUBLE:\n \t  {\n@@ -1708,10 +1728,18 @@ print_operand (FILE *file, rtx x, int code)\n     }\n }\n \n+/* Implements TARGET_PRINT_OPERAND_PUNCT_VALID_P.  */\n+\n+static bool\n+h8300_print_operand_punct_valid_p (unsigned char code)\n+{\n+  return (code == '#');\n+}\n+\n /* Output assembly language output for the address ADDR to FILE.  */\n \n-void\n-print_operand_address (FILE *file, rtx addr)\n+static void\n+h8300_print_operand_address (FILE *file, rtx addr)\n {\n   rtx index;\n   int size;\n@@ -1745,37 +1773,37 @@ print_operand_address (FILE *file, rtx addr)\n       if (GET_CODE (index) == REG)\n \t{\n \t  /* reg,foo */\n-\t  print_operand_address (file, XEXP (addr, 1));\n+\t  h8300_print_operand_address (file, XEXP (addr, 1));\n \t  fprintf (file, \",\");\n \t  switch (size)\n \t    {\n \t    case 0:\n-\t      print_operand_address (file, index);\n+\t      h8300_print_operand_address (file, index);\n \t      break;\n \n \t    case 1:\n-\t      print_operand (file, index, 'X');\n+\t      h8300_print_operand (file, index, 'X');\n \t      fputs (\".b\", file);\n \t      break;\n \n \t    case 2:\n-\t      print_operand (file, index, 'T');\n+\t      h8300_print_operand (file, index, 'T');\n \t      fputs (\".w\", file);\n \t      break;\n \n \t    case 4:\n-\t      print_operand (file, index, 'S');\n+\t      h8300_print_operand (file, index, 'S');\n \t      fputs (\".l\", file);\n \t      break;\n \t    }\n-\t  /* print_operand_address (file, XEXP (addr, 0)); */\n+\t  /* h8300_print_operand_address (file, XEXP (addr, 0)); */\n \t}\n       else\n \t{\n \t  /* foo+k */\n-\t  print_operand_address (file, XEXP (addr, 0));\n+\t  h8300_print_operand_address (file, XEXP (addr, 0));\n \t  fprintf (file, \"+\");\n-\t  print_operand_address (file, XEXP (addr, 1));\n+\t  h8300_print_operand_address (file, XEXP (addr, 1));\n \t}\n       fprintf (file, \")\");\n       break;\n@@ -3683,7 +3711,7 @@ h8sx_classify_shift (enum machine_mode mode, enum rtx_code code, rtx op)\n /* Return the asm template for a single h8sx shift instruction.\n    OPERANDS[0] and OPERANDS[1] are the destination, OPERANDS[2]\n    is the source and OPERANDS[3] is the shift.  SUFFIX is the\n-   size suffix ('b', 'w' or 'l') and OPTYPE is the print_operand\n+   size suffix ('b', 'w' or 'l') and OPTYPE is the h8300_print_operand\n    prefix for the destination operand.  */\n \n const char *\n@@ -5918,12 +5946,22 @@ h8300_trampoline_init (rtx m_tramp, tree fndecl, rtx cxt)\n #undef TARGET_ASM_FILE_END\n #define TARGET_ASM_FILE_END h8300_file_end\n \n+#undef TARGET_PRINT_OPERAND\n+#define TARGET_PRINT_OPERAND h8300_print_operand\n+#undef TARGET_PRINT_OPERAND_ADDRESS\n+#define TARGET_PRINT_OPERAND_ADDRESS h8300_print_operand_address\n+#undef TARGET_PRINT_OPERAND_PUNCT_VALID_P\n+#define TARGET_PRINT_OPERAND_PUNCT_VALID_P h8300_print_operand_punct_valid_p\n+\n #undef TARGET_ENCODE_SECTION_INFO\n #define TARGET_ENCODE_SECTION_INFO h8300_encode_section_info\n \n #undef TARGET_INSERT_ATTRIBUTES\n #define TARGET_INSERT_ATTRIBUTES h8300_insert_attributes\n \n+#undef TARGET_REGISTER_MOVE_COST\n+#define TARGET_REGISTER_MOVE_COST h8300_register_move_cost\n+\n #undef TARGET_RTX_COSTS\n #define TARGET_RTX_COSTS h8300_rtx_costs\n "}, {"sha": "eb774587ecfa0f010dc16cd7b659a24fdd6e07b4", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88cb339e2fc095381098658177b8600ee151c58f/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88cb339e2fc095381098658177b8600ee151c58f/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=88cb339e2fc095381098658177b8600ee151c58f", "patch": "@@ -365,13 +365,6 @@ enum reg_class {\n #define CLASS_MAX_NREGS(CLASS, MODE)\t\\\n   ((GET_MODE_SIZE (MODE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD)\n \n-/* Any SI register-to-register move may need to be reloaded,\n-   so define REGISTER_MOVE_COST to be > 2 so that reload never\n-   shortcuts.  */\n-\n-#define REGISTER_MOVE_COST(MODE, CLASS1, CLASS2)  \\\n-  (CLASS1 == MAC_REGS || CLASS2 == MAC_REGS ? 6 : 3)\n-\f\n /* Stack layout; function entry, exit and calling.  */\n \n /* Define this if pushing a word on the stack\n@@ -791,19 +784,6 @@ struct cum_arg\n \n #define ASM_PN_FORMAT \"%s___%lu\"\n \n-/* Print an instruction operand X on file FILE.\n-   Look in h8300.c for details.  */\n-\n-#define PRINT_OPERAND_PUNCT_VALID_P(CODE) \\\n-  ((CODE) == '#')\n-\n-#define PRINT_OPERAND(FILE, X, CODE) print_operand (FILE, X, CODE)\n-\n-/* Print a memory operand whose address is X, on file FILE.\n-   This uses a function in h8300.c.  */\n-\n-#define PRINT_OPERAND_ADDRESS(FILE, ADDR) print_operand_address (FILE, ADDR)\n-\n /* H8300 specific pragmas.  */\n #define REGISTER_TARGET_PRAGMAS()\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\"}]}