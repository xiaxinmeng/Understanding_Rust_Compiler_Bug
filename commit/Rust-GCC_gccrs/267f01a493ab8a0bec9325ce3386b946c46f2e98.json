{"sha": "267f01a493ab8a0bec9325ce3386b946c46f2e98", "node_id": "C_kwDOANBUbNoAKDI2N2YwMWE0OTNhYjhhMGJlYzkzMjVjZTMzODZiOTQ2YzQ2ZjJlOTg", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2023-01-18T16:38:42Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2023-01-25T13:36:28Z"}, "message": "arm: fix missing extern \"C\" in MVE tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/mve/intrinsics/vhaddq_n_s16.c: Add missing extern\n\t\"C\".\n\t* gcc.target/arm/mve/intrinsics/vhaddq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_x_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_x_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_x_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_x_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_x_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_x_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_x_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_x_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_x_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_x_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_x_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_x_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_x_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_x_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_x_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_x_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_x_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_x_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_x_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_x_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_x_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_x_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_x_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_x_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaxq_p_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaxq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaxq_p_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaxq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaxq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaxq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmlahq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmlahq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmlahq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmlashq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmlashq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmlashq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmlashq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmlashq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmlashq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsetq_lane_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsetq_lane_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsetq_lane_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsetq_lane_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsetq_lane_s64.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsetq_lane_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsetq_lane_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsetq_lane_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsetq_lane_u64.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsetq_lane_u8.c: Likewise.", "tree": {"sha": "5a0535279479cc283ba22dbf37fab6eac03d2c59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a0535279479cc283ba22dbf37fab6eac03d2c59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/267f01a493ab8a0bec9325ce3386b946c46f2e98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/267f01a493ab8a0bec9325ce3386b946c46f2e98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/267f01a493ab8a0bec9325ce3386b946c46f2e98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/267f01a493ab8a0bec9325ce3386b946c46f2e98/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8704dc9d5f00bff9f52cf626f129ac1c6520d65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8704dc9d5f00bff9f52cf626f129ac1c6520d65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8704dc9d5f00bff9f52cf626f129ac1c6520d65"}], "stats": {"total": 680, "additions": 680, "deletions": 0}, "files": [{"sha": "31f78b30ed8ad7a68fc7ca910502f14c871feed7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t a, int16_t b)\n   return vhaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "77c0521161c8ebd666f3253418cd27dff1b93048", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t a, int32_t b)\n   return vhaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1cf93d5037905803bc25b48c876ca0961804033d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t a, int8_t b)\n   return vhaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "98d80e42da9cf1b2836634d1a5aa5c19515cec8b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_u16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint16x8_t a)\n   return vhaddq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9b7e611c0e5abc2b2a821462e3aef5eaa8a0e5c3", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_u32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint32x4_t a)\n   return vhaddq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4d82970e7eca488da47fb9312858921d7f354832", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_n_u8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint8x16_t a)\n   return vhaddq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2788eb2f8ff9b093a925e86899765f4525a88040", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t a, int16x8_t b)\n   return vhaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "67872a770769041902a8ee910de16492baf203e8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t a, int32x4_t b)\n   return vhaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1ec890591ad04d9609257615aefe15b2b3ee06dc", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t a, int8x16_t b)\n   return vhaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "bc84618b03620a0592a1024ade52e87eba29face", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_u16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint16x8_t a, uint16x8_t b)\n   return vhaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6abdfce981fbdbd113e27a95eb28c083f868ffeb", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_u32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint32x4_t a, uint32x4_t b)\n   return vhaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0c68c68206b5c2cd27246554bbb63957053358b6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_u8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint8x16_t a, uint8x16_t b)\n   return vhaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d5bff94a46e800c166f79ad5dae1a7aa538916f2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_x_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t a, int16_t b, mve_pred16_t p)\n   return vhaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "af3e219b3f2ab2e33f99863fadce0e0461229773", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_x_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t a, int32_t b, mve_pred16_t p)\n   return vhaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a4551e207c23d4a90a42ac8bf96ba3e02c791722", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_x_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t a, int8_t b, mve_pred16_t p)\n   return vhaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "71facc46ad9568d68b0ba110d7261c13940e7efb", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_x_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_u16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint16x8_t a, mve_pred16_t p)\n   return vhaddq_x (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d45421c76d79e57ac4f9ef7ca7bbbb1a04e109c7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_x_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_u32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint32x4_t a, mve_pred16_t p)\n   return vhaddq_x (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5f16fbd9121e4983534d784e0d65db8c3a52bbdb", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_x_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_n_u8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint8x16_t a, mve_pred16_t p)\n   return vhaddq_x (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4e332733459b29db967bf320bcf4bc4ba7159421", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_x_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t a, int16x8_t b, mve_pred16_t p)\n   return vhaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5cdfd3921a552160511c4a4f3a866d11b3f2a6d3", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_x_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t a, int32x4_t b, mve_pred16_t p)\n   return vhaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "7a2ed232f298fdc7c6cb8e440cce9bb36e0a8b29", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_x_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t a, int8x16_t b, mve_pred16_t p)\n   return vhaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e24ff1668db1a9a937a3fa2e08143bef169ee324", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_x_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_u16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint16x8_t a, uint16x8_t b, mve_pred16_t p)\n   return vhaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e9f13956b9623d6d10cc85826623f24a6119ca41", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_x_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_u32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint32x4_t a, uint32x4_t b, mve_pred16_t p)\n   return vhaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "cba0a302e2a44c3c6a2b45a4f133fefd691e16d8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhaddq_x_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhaddq_x_u8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint8x16_t a, uint8x16_t b, mve_pred16_t p)\n   return vhaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4d1bab9641e7bb6c9ed232b720e7b81ad72d7df9", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t a, int16_t b)\n   return vhsubq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8effffaf377c82c47370bc63ff1a0a1e6c9c0b49", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t a, int32_t b)\n   return vhsubq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f55cd8f5528d472531d246695ff7af47051d7b0a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t a, int8_t b)\n   return vhsubq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "73575a401c55a1c40de6b7f86df067ff26696c20", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_u16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint16x8_t a)\n   return vhsubq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f152ef10a9d49e39933b744966b0156061c9b208", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_u32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint32x4_t a)\n   return vhsubq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0a58b1ed355ead10f0cda037caa7af28b1ad66ed", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_n_u8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint8x16_t a)\n   return vhsubq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ec8d9aaed0d4102a7dca08f8055701e4ae9c0f87", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t a, int16x8_t b)\n   return vhsubq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e98635a8c11e28c77aca9f9e9b8324a4ed9bce26", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t a, int32x4_t b)\n   return vhsubq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3107bb55844abb29982205f6e9592f61253696a6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t a, int8x16_t b)\n   return vhsubq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "783309fdbed1c2e8256e0fc9d83a6bd55b484419", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_u16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint16x8_t a, uint16x8_t b)\n   return vhsubq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "99bc278d16f6683fe0aac3956a5afdc7f775dfa2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_u32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint32x4_t a, uint32x4_t b)\n   return vhsubq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ae186512b78079bba704cf9815fc8283a4ea2f5b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_u8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint8x16_t a, uint8x16_t b)\n   return vhsubq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "260ba9ee50984124ad579ec6c158f8428a446d38", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_x_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t a, int16_t b, mve_pred16_t p)\n   return vhsubq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "be5cc04c2b455ae3ba1af5f43d8c419aea649ca7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_x_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t a, int32_t b, mve_pred16_t p)\n   return vhsubq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b0c28be7872603000e52e9b43a6f9ff044a8342a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_x_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t a, int8_t b, mve_pred16_t p)\n   return vhsubq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f31bb3fa632882cfbb9fe798c0a409cd53acb91b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_x_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_u16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint16x8_t a, mve_pred16_t p)\n   return vhsubq_x (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a35346d9b2ecfe8ccf4ce2492e2d8c57250993f8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_x_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_u32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint32x4_t a, mve_pred16_t p)\n   return vhsubq_x (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "25c85449081af9cc19dde129becc22d63ea0f767", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_x_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_n_u8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint8x16_t a, mve_pred16_t p)\n   return vhsubq_x (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "dc3433cb81a6f5cb636ef3b56ffe82714c2b4fc8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_x_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t a, int16x8_t b, mve_pred16_t p)\n   return vhsubq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a1e1faeacb50ab9ea0bdb888a1410784ddf41805", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_x_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t a, int32x4_t b, mve_pred16_t p)\n   return vhsubq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "bbfce818be48e94729d03ddca35fd2f32ad49455", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_x_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t a, int8x16_t b, mve_pred16_t p)\n   return vhsubq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "86fc9d7cf33e49bfe29533b439a9a164bafbf8bd", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_x_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_u16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint16x8_t a, uint16x8_t b, mve_pred16_t p)\n   return vhsubq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "53274267515631500625742700f9417db267bbb4", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_x_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_u32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint32x4_t a, uint32x4_t b, mve_pred16_t p)\n   return vhsubq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "04d89c6c6bdd741f4a219c24f60955ffff01fc51", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vhsubq_x_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvhsubq_x_u8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint8x16_t a, uint8x16_t b, mve_pred16_t p)\n   return vhsubq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5925d9e968e9f4e747360e43f481c20e9f85cee3", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmladavaxq_p_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_p_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_p_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_p_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32_t add, int16x8_t m1, int16x8_t m2, mve_pred16_t p)\n   return vmladavaxq_p (add, m1, m2, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "87d66e654f7875ccf19d507957cc9c69848e4328", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmladavaxq_p_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_p_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_p_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_p_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32_t add, int32x4_t m1, int32x4_t m2, mve_pred16_t p)\n   return vmladavaxq_p (add, m1, m2, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "803a5becc86556b08f33e357e2b5893c60d7f06b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmladavaxq_p_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_p_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_p_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_p_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32_t add, int8x16_t m1, int8x16_t m2, mve_pred16_t p)\n   return vmladavaxq_p (add, m1, m2, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6a81b4acfcb9cc10023b5404460789e1ad2d8744", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmladavaxq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32_t add, int16x8_t m1, int16x8_t m2)\n   return vmladavaxq (add, m1, m2);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b63ca43abba944c4c5d02cf6572fd7788b41d09c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmladavaxq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32_t add, int32x4_t m1, int32x4_t m2)\n   return vmladavaxq (add, m1, m2);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2430858aa512f816a665faeb8f6e28c947723424", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmladavaxq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmladavaxq_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32_t add, int8x16_t m1, int8x16_t m2)\n   return vmladavaxq (add, m1, m2);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "17b28cfd9567ff7acf2cc13ee09e9ead738f4986", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqaddq_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t a, int16_t b)\n   return vqaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e6bb4e0b51dba9cec50046b9e4c3de0c6b6fa867", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqaddq_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t a, int32_t b)\n   return vqaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f39451f6bc0c94c3c0fffee216ce25cb605a3863", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqaddq_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t a, int8_t b)\n   return vqaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a87163c04469ce4e8eca2fa3d43d27367eb31ebc", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqaddq_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_u16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint16x8_t a)\n   return vqaddq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a6aa9b5dddc45dde663820f5f0039668f6c10c11", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqaddq_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_u32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint32x4_t a)\n   return vqaddq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4bd47319f5e8a27b020df662f0ad4f306d455c49", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqaddq_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_n_u8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint8x16_t a)\n   return vqaddq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "97e2a6039ebfbc406653f274b427d1b667b7efc6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqaddq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t a, int16x8_t b)\n   return vqaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "db9355d56dd3f0171a24ed5645cac22ac057de8f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqaddq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t a, int32x4_t b)\n   return vqaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2804d668da8cb623191ffaf7136951212dda4ede", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqaddq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t a, int8x16_t b)\n   return vqaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "17e59961c872c4b4c8f331d71dd01bebf300d101", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqaddq_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_u16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint16x8_t a, uint16x8_t b)\n   return vqaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ce3a397acd6838bc125133a4c236cae92394310b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqaddq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_u32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint32x4_t a, uint32x4_t b)\n   return vqaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "faa881f67f611ef3d8e59c149ab92ab2f28d180d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqaddq_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqaddq_u8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint8x16_t a, uint8x16_t b)\n   return vqaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "909631c549d1ceb1ad5921188db6035a83839008", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmlahq_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlahq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlahq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlahq_n_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t add, int16x8_t m1, int16_t m2)\n   return vqdmlahq (add, m1, m2);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fb670befeff33f07a4dd8924c89a1f01255f71da", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmlahq_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlahq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlahq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlahq_n_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t add, int32x4_t m1, int32_t m2)\n   return vqdmlahq (add, m1, m2);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f66740bee0bce35adc2a83161bcb6e5567d3f2af", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmlahq_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlahq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlahq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlahq_n_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t add, int8x16_t m1, int8_t m2)\n   return vqdmlahq (add, m1, m2);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "918de9572e892d6ea5da0e6a4462eaed1188e371", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmlashq_m_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_m_n_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t m1, int16x8_t m2, int16_t add, mve_pred16_t p)\n   return vqdmlashq_m (m1, m2, add, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b25b66057bd4f88a256ac600d6a23659196e088c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmlashq_m_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_m_n_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t m1, int32x4_t m2, int32_t add, mve_pred16_t p)\n   return vqdmlashq_m (m1, m2, add, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b796f205e5d962206f20f2a14f9f802551de503e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmlashq_m_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_m_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_m_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_m_n_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t m1, int8x16_t m2, int8_t add, mve_pred16_t p)\n   return vqdmlashq_m (m1, m2, add, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9a2549464c55c5798d66d6cae56a7a318c996a55", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmlashq_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_n_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t m1, int16x8_t m2, int16_t add)\n   return vqdmlashq (m1, m2, add);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "36fc7b066a12b11249422ecc848af576b941b525", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmlashq_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_n_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t m1, int32x4_t m2, int32_t add)\n   return vqdmlashq (m1, m2, add);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1e7cd44d4f5035fde457e83f95e9aa1a79e409e6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqdmlashq_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqdmlashq_n_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t m1, int8x16_t m2, int8_t add)\n   return vqdmlashq (m1, m2, add);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5b1731f7332747ff8031d624d3430e060921cc4d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vsetq_lane_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_f16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (float16x8_t b)\n   return vsetq_lane (1.1, b, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "34b403d06015ff6420065a1d2c6e569ccff2906e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vsetq_lane_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_f32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (float32x4_t b)\n   return vsetq_lane (1.1, b, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "458fd5e6f26e179b8e7741d9afd5292102bfdc51", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vsetq_lane_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16_t a, int16x8_t b)\n   return vsetq_lane (a, b, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "44672f6c26447e88212d6ac76061a51992e27843", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vsetq_lane_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32_t a, int32x4_t b)\n   return vsetq_lane (a, b, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "62e8ee50929c4c391d4a19fce923c01bcebac43d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vsetq_lane_s64.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s64.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int64_t a, int64x2_t b)\n   return vsetq_lane (a, b, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3a79ab1759be5b4a70e8c72e0830456afc2d55d0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vsetq_lane_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8_t a, int8x16_t b)\n   return vsetq_lane (a, b, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8a42773e01ff3f00d867bf6d015b0fcc99a0f26d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vsetq_lane_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u16.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint16x8_t b)\n   return vsetq_lane (1, b, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "43778e6103d320fcab772d873e4bda9bab13cfd0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vsetq_lane_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u32.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint32x4_t b)\n   return vsetq_lane (1, b, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c75bfa448f0fe62b5b88a416a790566bd0202bf4", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vsetq_lane_u64.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u64.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint64x2_t b)\n   return vsetq_lane (1, b, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5fb20161259c6878619239260dafc397ff6ef9ef", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vsetq_lane_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267f01a493ab8a0bec9325ce3386b946c46f2e98/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u8.c?ref=267f01a493ab8a0bec9325ce3386b946c46f2e98", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint8x16_t b)\n   return vsetq_lane (1, b, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}]}