{"sha": "04a412f9d4851d15fb904ed1052423ae54795413", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRhNDEyZjlkNDg1MWQxNWZiOTA0ZWQxMDUyNDIzYWU1NDc5NTQxMw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-11-21T14:05:02Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-11-21T14:05:02Z"}, "message": "config.gcc (extra_headers): For x86 and x86-64, remove gmmintrin.h, add immintrin.h and avxintrin.h.\n\ngcc/\n\n2008-11-21  H.J. Lu  <hongjiu.lu@intel.com>\n\t    Xuepeng Guo  <xuepeng.guo@intel.com>\n\n\t* config.gcc (extra_headers): For x86 and x86-64, remove\n\tgmmintrin.h, add immintrin.h and avxintrin.h.\n\n\t* config/i386/gmmintrin.h: Renamed to ...\n\t* config/i386/avxintrin.h: This.  Don't include intrinsics if\n\t_IMMINTRIN_H_INCLUDED is undedined.\n\n\t* config/i386/immintrin.h: New.\n\ngcc/testsuite/\n\n2008-11-21  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* gcc.target/i386/avx-1.c: Include <immintrin.h> instead of\n\t<gmmintrin.h>.\n\t* gcc.target/i386/avx-2.c: Likewise.\n\t* gcc.target/i386/m256-check.h: Likewise.\n\t* g++.dg/other/i386-5.C: Likewise.\n\t* g++.dg/other/i386-6.C: Likewise.\n\nCo-Authored-By: Xuepeng Guo <xuepeng.guo@intel.com>\n\nFrom-SVN: r142090", "tree": {"sha": "2c783d9217e37a825aa83af077f9a28f4e7fa5b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c783d9217e37a825aa83af077f9a28f4e7fa5b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04a412f9d4851d15fb904ed1052423ae54795413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a412f9d4851d15fb904ed1052423ae54795413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04a412f9d4851d15fb904ed1052423ae54795413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a412f9d4851d15fb904ed1052423ae54795413/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da9014c049a6aefc3067728d11e852f73f33dfb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da9014c049a6aefc3067728d11e852f73f33dfb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da9014c049a6aefc3067728d11e852f73f33dfb3"}], "stats": {"total": 56, "additions": 33, "deletions": 23}, "files": [{"sha": "b73d83c9f3b01a06b7bb0d2ed009f48dd1d3f716", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04a412f9d4851d15fb904ed1052423ae54795413", "patch": "@@ -1,3 +1,15 @@\n+2008-11-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\t    Xuepeng Guo  <xuepeng.guo@intel.com>\n+\n+\t* config.gcc (extra_headers): For x86 and x86-64, remove\n+\tgmmintrin.h, add immintrin.h and avxintrin.h.\n+\n+\t* config/i386/gmmintrin.h: Renamed to ...\n+\t* config/i386/avxintrin.h: This.  Don't include intrinsics if\n+\t_IMMINTRIN_H_INCLUDED is undedined.\n+\n+\t* config/i386/immintrin.h: New.\n+\n 2008-11-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/38208"}, {"sha": "b0e9340bc7827cf2a8682fea7e97e1e068ac9a16", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=04a412f9d4851d15fb904ed1052423ae54795413", "patch": "@@ -298,7 +298,7 @@ i[34567]86-*-*)\n \textra_headers=\"cpuid.h mmintrin.h mm3dnow.h xmmintrin.h emmintrin.h\n \t\t       pmmintrin.h tmmintrin.h ammintrin.h smmintrin.h\n \t\t       nmmintrin.h bmmintrin.h mmintrin-common.h\n-\t\t       wmmintrin.h gmmintrin.h cross-stdarg.h\"\n+\t\t       wmmintrin.h immintrin.h avxintrin.h cross-stdarg.h\"\n \t;;\n x86_64-*-*)\n \tcpu_type=i386\n@@ -307,7 +307,7 @@ x86_64-*-*)\n \textra_headers=\"cpuid.h mmintrin.h mm3dnow.h xmmintrin.h emmintrin.h\n \t\t       pmmintrin.h tmmintrin.h ammintrin.h smmintrin.h\n \t\t       nmmintrin.h bmmintrin.h mmintrin-common.h\n-\t\t       wmmintrin.h gmmintrin.h cross-stdarg.h\"\n+\t\t       wmmintrin.h immintrin.h avxintrin.h cross-stdarg.h\"\n \tneed_64bit_hwint=yes\n \t;;\n ia64-*-*)"}, {"sha": "7aea85d355df9ab0f790aeeb7aa322bf95a2a7c7", "filename": "gcc/config/i386/avxintrin.h", "status": "renamed", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Fconfig%2Fi386%2Favxintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Fconfig%2Fi386%2Favxintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favxintrin.h?ref=04a412f9d4851d15fb904ed1052423ae54795413", "patch": "@@ -27,16 +27,9 @@\n /* Implemented from the specification included in the Intel C++ Compiler\n    User Guide and Reference, version 11.0.  */\n \n-#ifndef _GMMINTRIN_H_INCLUDED\n-#define _GMMINTRIN_H_INCLUDED\n-\n-#ifndef __AVX__\n-# error \"AVX instruction set not enabled\"\n-#else\n-\n-/* We need definitions from the SSE4, SSSE3, SSE3, SSE2 and SSE header\n-   files.  */\n-#include <smmintrin.h>\n+#ifndef _IMMINTRIN_H_INCLUDED\n+# error \"Never use <avxintrin.h> directly; include <immintrin.h> instead.\"\n+#endif\n \n /* Internal data types for implementing the intrinsics.  */\n typedef double __v4df __attribute__ ((__vector_size__ (32)));\n@@ -1476,7 +1469,3 @@ _mm256_castsi128_si256 (__m128i __A)\n {\n   return (__m256i) __builtin_ia32_si256_si ((__v4si)__A);\n }\n-\n-#endif /* __AVX__ */\n-\n-#endif /* _GMMINTRIN_H_INCLUDED */", "previous_filename": "gcc/config/i386/gmmintrin.h"}, {"sha": "3f99b5aa3d71117aa8aa9295f177c87c8341a768", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=04a412f9d4851d15fb904ed1052423ae54795413", "patch": "@@ -1,3 +1,12 @@\n+2008-11-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* gcc.target/i386/avx-1.c: Include <immintrin.h> instead of\n+\t<gmmintrin.h>.\n+\t* gcc.target/i386/avx-2.c: Likewise.\n+\t* gcc.target/i386/m256-check.h: Likewise.\n+\t* g++.dg/other/i386-5.C: Likewise.\n+\t* g++.dg/other/i386-6.C: Likewise.\n+\n 2008-11-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/37472"}, {"sha": "d9b5460a8dcc4145a4f56c56ba14735e2a1883ae", "filename": "gcc/testsuite/g++.dg/other/i386-5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-5.C?ref=04a412f9d4851d15fb904ed1052423ae54795413", "patch": "@@ -5,5 +5,5 @@\n \n #include <wmmintrin.h>\n #include <bmmintrin.h>\n-#include <gmmintrin.h>\n+#include <immintrin.h>\n #include <mm3dnow.h>"}, {"sha": "15f1d5258dfc0c04cc1a830481c6c7eaa803f5da", "filename": "gcc/testsuite/g++.dg/other/i386-6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-6.C?ref=04a412f9d4851d15fb904ed1052423ae54795413", "patch": "@@ -5,7 +5,7 @@\n \n #include <wmmintrin.h>\n #include <bmmintrin.h>\n-#include <gmmintrin.h>\n+#include <immintrin.h>\n #include <mm3dnow.h>\n \n int dummy;"}, {"sha": "d093d6c1cc31c015219fcaa93696338a48ffb489", "filename": "gcc/testsuite/gcc.target/i386/avx-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c?ref=04a412f9d4851d15fb904ed1052423ae54795413", "patch": "@@ -18,7 +18,7 @@\n #define __builtin_ia32_extrqi(X, I, L)  __builtin_ia32_extrqi(X, 1, 1)\n #define __builtin_ia32_insertqi(X, Y, I, L) __builtin_ia32_insertqi(X, Y, 1, 1)\n \n-/* gmmintrin.h */\n+/* immintrin.h */\n #define __builtin_ia32_blendpd256(X, Y, M) __builtin_ia32_blendpd256(X, Y, 1)\n #define __builtin_ia32_blendps256(X, Y, M) __builtin_ia32_blendps256(X, Y, 1)\n #define __builtin_ia32_dpps256(X, Y, M) __builtin_ia32_dpps256(X, Y, 1)\n@@ -135,5 +135,5 @@\n \n #include <wmmintrin.h>\n #include <bmmintrin.h>\n-#include <gmmintrin.h>\n+#include <immintrin.h>\n #include <mm3dnow.h>"}, {"sha": "62f6538bbe63583d3097f0b5a69b4dd42d6dac27", "filename": "gcc/testsuite/gcc.target/i386/avx-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-2.c?ref=04a412f9d4851d15fb904ed1052423ae54795413", "patch": "@@ -14,7 +14,7 @@\n \n #include <wmmintrin.h>\n #include <bmmintrin.h>\n-#include <gmmintrin.h>\n+#include <immintrin.h>\n #include <mm3dnow.h>\n \n #define _CONCAT(x,y) x ## y\n@@ -53,7 +53,7 @@\n test_1x (_mm_extracti_si64, __m128i, __m128i, 1, 1)\n test_2x (_mm_inserti_si64, __m128i, __m128i, __m128i, 1, 1)\n \n-/* gmmintrin.h */\n+/* immintrin.h */\n test_2 (_mm256_blend_pd, __m256d, __m256d, __m256d, 1)\n test_2 (_mm256_blend_ps, __m256, __m256, __m256, 1)\n test_2 (_mm256_dp_ps, __m256, __m256, __m256, 1)"}, {"sha": "e1843550ecdad39d78bd035192aba025cb66dbde", "filename": "gcc/testsuite/gcc.target/i386/m256-check.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fm256-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a412f9d4851d15fb904ed1052423ae54795413/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fm256-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fm256-check.h?ref=04a412f9d4851d15fb904ed1052423ae54795413", "patch": "@@ -1,4 +1,4 @@\n-#include <gmmintrin.h>\n+#include <immintrin.h>\n #include \"m128-check.h\"\n \n #ifndef max"}]}