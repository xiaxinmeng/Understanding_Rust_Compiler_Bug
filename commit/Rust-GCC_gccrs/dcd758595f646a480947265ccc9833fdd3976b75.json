{"sha": "dcd758595f646a480947265ccc9833fdd3976b75", "node_id": "C_kwDOANBUbNoAKGRjZDc1ODU5NWY2NDZhNDgwOTQ3MjY1Y2NjOTgzM2ZkZDM5NzZiNzU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-09T22:08:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-09T22:08:36Z"}, "message": "Merge #803\n\n803: Partially disable clang-format in rust-diagnostics.h r=dkm a=dkm\n\nclang-format is confused by attribute macros and does a very bad job at\r\nindenting the code.\r\n\r\nChanges merged in #779 make all clang-format checks to fail.\r\n\r\nSigned-off-by: Marc Poulhi\u00e8s <dkm@kataplop.net>\n\nCo-authored-by: Marc Poulhi\u00e8s <dkm@kataplop.net>", "tree": {"sha": "cb97ba503c818d700af6d347e999b6d27224cf03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb97ba503c818d700af6d347e999b6d27224cf03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcd758595f646a480947265ccc9833fdd3976b75", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhivFkCRBK7hj4Ov3rIwAA8HwIAKz7GkVTM7EjccwaKilddCzm\nJaO34VFSL9gNgaeDDBJpwsQTKDhxps3Fdj9UHnXmLa+AAQFpVajRvLbIc/mv5qFL\nnbssHkJuWtIFaSxTyEsu4uRqTCuEbQWD1KlnAF2aiEN6J/NklASNxYC3JRx2KGcc\nTZjUdoVtngt6jZ3kg4kmMzh2XVAR52tNWYFhBsV0q+R/uvoyBJnQiZ7ONo2AQlkz\n2+a0pfcbhCtvhyJL0GnIukl5fOB9JtTytJv2UWPutU01k1LNsQqC5TxQV4yZyerJ\nf0W3vqwGzmpkra7QxFn49/xFhKVqPaej2EQk2++7cY8UoDj+teRIgpmQmtsNNzo=\n=yIsZ\n-----END PGP SIGNATURE-----\n", "payload": "tree cb97ba503c818d700af6d347e999b6d27224cf03\nparent 328f2d79e5f2e0624f0deea5676807c17f3ec16f\nparent 2a070169814df9776626d3a4455987808c872edc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1636495716 +0000\ncommitter GitHub <noreply@github.com> 1636495716 +0000\n\nMerge #803\n\n803: Partially disable clang-format in rust-diagnostics.h r=dkm a=dkm\n\nclang-format is confused by attribute macros and does a very bad job at\r\nindenting the code.\r\n\r\nChanges merged in #779 make all clang-format checks to fail.\r\n\r\nSigned-off-by: Marc Poulhi\u00e8s <dkm@kataplop.net>\n\nCo-authored-by: Marc Poulhi\u00e8s <dkm@kataplop.net>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcd758595f646a480947265ccc9833fdd3976b75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcd758595f646a480947265ccc9833fdd3976b75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcd758595f646a480947265ccc9833fdd3976b75/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "328f2d79e5f2e0624f0deea5676807c17f3ec16f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/328f2d79e5f2e0624f0deea5676807c17f3ec16f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/328f2d79e5f2e0624f0deea5676807c17f3ec16f"}, {"sha": "2a070169814df9776626d3a4455987808c872edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a070169814df9776626d3a4455987808c872edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a070169814df9776626d3a4455987808c872edc"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "1c2ec84ccd22e9669e93cfbf486b5b9d138eb033", "filename": "gcc/rust/rust-diagnostics.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd758595f646a480947265ccc9833fdd3976b75/gcc%2Frust%2Frust-diagnostics.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd758595f646a480947265ccc9833fdd3976b75/gcc%2Frust%2Frust-diagnostics.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-diagnostics.h?ref=dcd758595f646a480947265ccc9833fdd3976b75", "patch": "@@ -48,6 +48,7 @@\n // All other format specifiers are as defined by 'sprintf'. The final resulting\n // message is then sent to the back end via rust_be_error_at/rust_be_warning_at.\n \n+// clang-format off\n // simple location\n extern void\n rust_internal_error_at (const Location, const char *fmt, ...)\n@@ -71,6 +72,7 @@ rust_inform (const Location, const char *fmt, ...)\n extern void\n rust_error_at (const RichLocation &, const char *fmt, ...)\n   RUST_ATTRIBUTE_GCC_DIAG (2, 3);\n+// clang-format on\n \n // These interfaces provide a way for the front end to ask for\n // the open/close quote characters it should use when formatting\n@@ -86,6 +88,7 @@ rust_close_quote ();\n // instead use the equivalent routines above. The back end is required to\n // implement these routines.\n \n+// clang-format off\n extern void\n rust_be_internal_error_at (const Location, const std::string &errmsg)\n   RUST_ATTRIBUTE_NORETURN;\n@@ -104,6 +107,7 @@ extern void\n rust_be_get_quotechars (const char **open_quote, const char **close_quote);\n extern bool\n rust_be_debug_p (void);\n+// clang-format on\n \n namespace Rust {\n /* A structure used to represent an error. Useful for enabling"}]}