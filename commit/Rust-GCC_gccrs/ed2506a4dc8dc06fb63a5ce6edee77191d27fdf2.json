{"sha": "ed2506a4dc8dc06fb63a5ce6edee77191d27fdf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQyNTA2YTRkYzhkYzA2ZmI2M2E1Y2U2ZWRlZTc3MTkxZDI3ZmRmMg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@mckinlay.net.nz", "date": "2003-10-21T23:59:46Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2003-10-21T23:59:46Z"}, "message": "re PR java/12586 (gnu.java.net name mangling bug)\n\n        Fix for PR java/12586.\n        * mangle.c (find_compression_record_match): Don't iterate through\n        package namespace elements unless they all match compression_table\n        entries.\n\nFrom-SVN: r72779", "tree": {"sha": "904f87b1286afc728156790b078e60ef35f56591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/904f87b1286afc728156790b078e60ef35f56591"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed2506a4dc8dc06fb63a5ce6edee77191d27fdf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed2506a4dc8dc06fb63a5ce6edee77191d27fdf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed2506a4dc8dc06fb63a5ce6edee77191d27fdf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed2506a4dc8dc06fb63a5ce6edee77191d27fdf2/comments", "author": null, "committer": null, "parents": [{"sha": "890c2f2b1cf8eb4ab94d02e5fae0d6cb991e73a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890c2f2b1cf8eb4ab94d02e5fae0d6cb991e73a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/890c2f2b1cf8eb4ab94d02e5fae0d6cb991e73a1"}], "stats": {"total": 56, "additions": 27, "deletions": 29}, "files": [{"sha": "35dce1c3b8b6ab80bc4ffa7625c5d376142a7f0d", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2506a4dc8dc06fb63a5ce6edee77191d27fdf2/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2506a4dc8dc06fb63a5ce6edee77191d27fdf2/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=ed2506a4dc8dc06fb63a5ce6edee77191d27fdf2", "patch": "@@ -1,3 +1,10 @@\n+2003-10-22  Bryce McKinlay  <bryce@mckinlay.net.nz>\n+\n+\tFix for\tPR java/12586.\n+\t* mangle.c (find_compression_record_match): Don't iterate through\n+\tpackage namespace elements unless they all match compression_table\n+\tentries.\n+\n 2003-10-20  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* Make-lang.in (info): Honor $(parsedir) and $(docobjdir)."}, {"sha": "0c8435cb71c970f5b0101628e49d2cbdc7751724", "filename": "gcc/java/mangle.c", "status": "modified", "additions": 20, "deletions": 29, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2506a4dc8dc06fb63a5ce6edee77191d27fdf2/gcc%2Fjava%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2506a4dc8dc06fb63a5ce6edee77191d27fdf2/gcc%2Fjava%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fmangle.c?ref=ed2506a4dc8dc06fb63a5ce6edee77191d27fdf2", "patch": "@@ -287,38 +287,29 @@ find_compression_array_template_match (tree string)\n static int\n find_compression_record_match (tree type, tree *next_current)\n {\n-  int i, match;\n+  int i, match = -1;\n   tree current, saved_current = NULL_TREE;\n \n-  /* Search from the beginning for something that matches TYPE, even\n-     partially. */\n-  for (current = TYPE_PACKAGE_LIST (type), i = 0, match = -1; current;\n-       current = TREE_CHAIN (current))\n+  current = TYPE_PACKAGE_LIST (type);\n+      \n+  for (i = 0; i < compression_next; i++)\n     {\n-      int j;\n-      for (j = i; j < compression_next; j++)\n-\tif (TREE_VEC_ELT (compression_table, j) == TREE_PURPOSE (current))\n-\t  {\n-\t    match = i = j;\n-\t    saved_current = current;\n-\t    i++;\n-\t    break;\n-\t  }\n-        else if (atms && TREE_VEC_ELT (compression_table, j) == atms)\n-          {\n-            /* Skip over a \"6JArray\". */\n-          }\n-\telse\n-\t  {\n-\t    /* We don't want to match an element that appears in the middle\n-\t    of a package name, so skip forward to the next complete type name.\n-\t    IDENTIFIER_NODEs (except for a \"6JArray\") are partial package\n-            names while RECORD_TYPEs represent complete type names. */\n-\t    while (j < compression_next \n-\t\t   && TREE_CODE (TREE_VEC_ELT (compression_table, j)) == \n-\t\t      IDENTIFIER_NODE)\n-\t      j++;\n-\t  }\n+      tree compression_entry = TREE_VEC_ELT (compression_table, i);\n+      if (current && compression_entry == TREE_PURPOSE (current))\n+        {\n+\t  match = i;\n+\t  saved_current = current;\n+\t  current = TREE_CHAIN (current);\n+\t}\n+      else\n+\t/* We don't want to match an element that appears in the middle\n+\t   of a package name, so skip forward to the next complete type name.\n+\t   IDENTIFIER_NODEs (except for a \"6JArray\") are partial package\n+\t   names while RECORD_TYPEs represent complete type names. */\n+\twhile (i < compression_next \n+\t       && TREE_CODE (compression_entry) == IDENTIFIER_NODE\n+\t       && compression_entry != atms)\n+\t  compression_entry = TREE_VEC_ELT (compression_table, ++i);\n     }\n \n   if (!next_current)"}]}