{"sha": "a2af66c18641b86b068d1866d7e16cb5fa9e65c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJhZjY2YzE4NjQxYjg2YjA2OGQxODY2ZDdlMTZjYjVmYTllNjVjMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-02-11T12:08:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-02-11T12:08:23Z"}, "message": "re PR libstdc++/14078 (Manipulators are slow)\n\n2004-02-10  Paolo Carlini  <pcarlini@suse.de>\n\t    Petur Runolfsson  <peturr02@ru.is>\n\n\tPR libstdc++/14078\n\t* include/std/std_istream.h (operator>>(__istream_type& (*)\n\t(__istream_type&)), operator>>(__ios_type& (*)(__ios_type&)),\n\toperator>>(ios_base& (*)(ios_base&))): Declare inline.\n\t* include/std/std_ostream.h (operator<<(__ostream_type& (*)\n\t(__ostream_type&)), operator<<(__ios_type& (*)(__ios_type&)),\n\toperator<<(ios_base& (*) (ios_base&))): Likewise.\n\t* testsuite/performance/27_io/fmtflags_manipulators.cc: New.\n\nCo-Authored-By: Petur Runolfsson <peturr02@ru.is>\n\nFrom-SVN: r77650", "tree": {"sha": "b09ff32ddd5470c9c42662e8c8744974bb68ebd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b09ff32ddd5470c9c42662e8c8744974bb68ebd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2af66c18641b86b068d1866d7e16cb5fa9e65c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2af66c18641b86b068d1866d7e16cb5fa9e65c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2af66c18641b86b068d1866d7e16cb5fa9e65c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2af66c18641b86b068d1866d7e16cb5fa9e65c2/comments", "author": null, "committer": null, "parents": [{"sha": "ed045bef20cf6f6997a9beb7c785a2881f0f984e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed045bef20cf6f6997a9beb7c785a2881f0f984e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed045bef20cf6f6997a9beb7c785a2881f0f984e"}], "stats": {"total": 93, "additions": 87, "deletions": 6}, "files": [{"sha": "9eef2c647e735a0dc87144e425dcb0c6e0955e4b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2af66c18641b86b068d1866d7e16cb5fa9e65c2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2af66c18641b86b068d1866d7e16cb5fa9e65c2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a2af66c18641b86b068d1866d7e16cb5fa9e65c2", "patch": "@@ -1,3 +1,15 @@\n+2004-02-11  Paolo Carlini  <pcarlini@suse.de>\n+\t    Petur Runolfsson  <peturr02@ru.is>\n+\n+\tPR libstdc++/14078\n+\t* include/std/std_istream.h (operator>>(__istream_type& (*)\n+\t(__istream_type&)), operator>>(__ios_type& (*)(__ios_type&)),\n+\toperator>>(ios_base& (*)(ios_base&))): Declare inline.\n+\t* include/std/std_ostream.h (operator<<(__ostream_type& (*)\n+\t(__ostream_type&)), operator<<(__ios_type& (*)(__ios_type&)),\n+\toperator<<(ios_base& (*) (ios_base&))): Likewise.\n+\t* testsuite/performance/27_io/fmtflags_manipulators.cc: New.\n+\n 2004-02-10  Loren J. Rittle  <ljrittle@acm.org>\n \n \tPR libstdc++/14098"}, {"sha": "a3a53ba73f6e28d3bc31351b04292dddc56b06c7", "filename": "libstdc++-v3/include/std/std_istream.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2af66c18641b86b068d1866d7e16cb5fa9e65c2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_istream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2af66c18641b86b068d1866d7e16cb5fa9e65c2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_istream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_istream.h?ref=a2af66c18641b86b068d1866d7e16cb5fa9e65c2", "patch": "@@ -128,13 +128,13 @@ namespace std\n        *  functions in constructs like \"std::cin >> std::ws\".  For more\n        *  information, see the iomanip header.\n       */\n-      __istream_type&\n+      inline __istream_type&\n       operator>>(__istream_type& (*__pf)(__istream_type&));\n \n-      __istream_type&\n+      inline __istream_type&\n       operator>>(__ios_type& (*__pf)(__ios_type&));\n \n-      __istream_type&\n+      inline __istream_type&\n       operator>>(ios_base& (*__pf)(ios_base&));\n       //@}\n       "}, {"sha": "e3590f23515ce094dca9caa2b808beab746474c7", "filename": "libstdc++-v3/include/std/std_ostream.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2af66c18641b86b068d1866d7e16cb5fa9e65c2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2af66c18641b86b068d1866d7e16cb5fa9e65c2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h?ref=a2af66c18641b86b068d1866d7e16cb5fa9e65c2", "patch": "@@ -127,13 +127,13 @@ namespace std\n        *  functions in constructs like \"std::cout << std::endl\".  For more\n        *  information, see the iomanip header.\n       */\n-      __ostream_type&\n+      inline __ostream_type&\n       operator<<(__ostream_type& (*__pf)(__ostream_type&));\n       \n-      __ostream_type&\n+      inline __ostream_type&\n       operator<<(__ios_type& (*__pf)(__ios_type&));\n       \n-      __ostream_type&\n+      inline __ostream_type&\n       operator<<(ios_base& (*__pf) (ios_base&));\n       //@}\n "}, {"sha": "0ef4510f39cc89bbde550cb7882c0076e4823200", "filename": "libstdc++-v3/testsuite/performance/27_io/fmtflags_manipulators.cc", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2af66c18641b86b068d1866d7e16cb5fa9e65c2/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F27_io%2Ffmtflags_manipulators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2af66c18641b86b068d1866d7e16cb5fa9e65c2/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F27_io%2Ffmtflags_manipulators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F27_io%2Ffmtflags_manipulators.cc?ref=a2af66c18641b86b068d1866d7e16cb5fa9e65c2", "patch": "@@ -0,0 +1,69 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <cstdlib>\n+#include <sstream>\n+#include <testsuite_performance.h>\n+\n+// libstdc++/14078\n+int main(int argc, char** argv)\n+{\n+  using namespace std;\n+  using namespace __gnu_test;\n+\n+  time_counter time;\n+  resource_counter resource;\n+\n+  int iters = 50000000;\n+  if (argc > 1)\n+    iters = atoi(argv[1]);\n+  \n+  ostringstream os_s, os_m;\n+\n+  // setf\n+  start_counters(time, resource);\n+  for (int i = 0; i < iters; ++i)\n+    {\n+      os_s.setf(ios_base::uppercase);\n+      os_s.unsetf(ios_base::uppercase);\n+    }\n+  stop_counters(time, resource);\n+  report_performance(__FILE__, \"setf\", time, resource);\n+  clear_counters(time, resource);\n+\n+  // manipulator\n+  start_counters(time, resource);\n+  for (int i = 0; i < iters; ++i)\n+    {\n+      os_m << uppercase;\n+      os_m << nouppercase;\n+    }\n+  stop_counters(time, resource);\n+  report_performance(__FILE__, \"manipulator\", time, resource);\n+\n+  return 0;\n+}"}]}