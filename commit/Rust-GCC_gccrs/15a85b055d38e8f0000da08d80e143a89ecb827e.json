{"sha": "15a85b055d38e8f0000da08d80e143a89ecb827e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVhODViMDU1ZDM4ZThmMDAwMGRhMDhkODBlMTQzYTg5ZWNiODI3ZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2015-05-11T23:33:17Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2015-05-11T23:33:17Z"}, "message": "Canonicalize asm volatility earlier\n\nIf gimple_asm_volatile_p is correct, no point re-checking.\nThis is also done by the C and C++ front ends, but not Ada.\nSo we can't yet trust ASM_VOLATILE_P from the front end.\n\nFrom-SVN: r223024", "tree": {"sha": "bb6fc101af1083cea96478a59bea1d675d3625a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb6fc101af1083cea96478a59bea1d675d3625a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15a85b055d38e8f0000da08d80e143a89ecb827e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15a85b055d38e8f0000da08d80e143a89ecb827e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15a85b055d38e8f0000da08d80e143a89ecb827e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15a85b055d38e8f0000da08d80e143a89ecb827e/comments", "author": null, "committer": null, "parents": [{"sha": "6476a8fde0b47159a054f0d594ddba8875ae30ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6476a8fde0b47159a054f0d594ddba8875ae30ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6476a8fde0b47159a054f0d594ddba8875ae30ca"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "81b71bcc10587a4479c5240ff834cb1d4f299264", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a85b055d38e8f0000da08d80e143a89ecb827e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a85b055d38e8f0000da08d80e143a89ecb827e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15a85b055d38e8f0000da08d80e143a89ecb827e", "patch": "@@ -1,5 +1,9 @@\n 2015-05-11  Richard Henderson  <rth@redhat.com>\n \n+\t* gimplify.c (gimplify_asm_expr): Set gimple_asm_volatile_p\n+\tif noutputs is zero.\n+\t* cfgexpand.c (expand_asm_stmt): Use gimple_asm_volatile_p unchanged.\n+\n \t* cfgexpand.c (expand_asm_operands): Merge into...\n \t(expand_asm_stmt): ... here.\n "}, {"sha": "0479279b596b362cfef2ffa329a19da61ceb1823", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a85b055d38e8f0000da08d80e143a89ecb827e/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a85b055d38e8f0000da08d80e143a89ecb827e/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=15a85b055d38e8f0000da08d80e143a89ecb827e", "patch": "@@ -2587,8 +2587,6 @@ expand_asm_stmt (gasm *stmt)\n   for (i = 0; i < noutputs; ++i)\n     orig_outputs[i] = TREE_VALUE (gimple_asm_output_op (stmt, i));\n \n-  bool vol = gimple_asm_volatile_p (stmt);\n-\n   rtvec argvec, constraintvec, labelvec;\n   rtx body;\n   int ninout;\n@@ -2603,10 +2601,6 @@ expand_asm_stmt (gasm *stmt)\n   int old_generating_concat_p = generating_concat_p;\n   rtx_code_label *fallthru_label = NULL;\n \n-  /* An ASM with no outputs needs to be treated as volatile, for now.  */\n-  if (noutputs == 0)\n-    vol = 1;\n-\n   if (! check_operand_nalternatives (outputs, inputs))\n     return;\n \n@@ -2815,7 +2809,7 @@ expand_asm_stmt (gasm *stmt)\n \t\t\t       empty_string, 0, argvec, constraintvec,\n \t\t\t       labelvec, locus);\n \n-  MEM_VOLATILE_P (body) = vol;\n+  MEM_VOLATILE_P (body) = gimple_asm_volatile_p (stmt);\n \n   /* Eval the inputs and put them into ARGVEC.\n      Put their constraints into ASM_INPUTs and store in CONSTRAINTS.  */\n@@ -2963,7 +2957,8 @@ expand_asm_stmt (gasm *stmt)\n \t\t\t    ggc_strdup (constraints[i]),\n \t\t\t    i, argvec, constraintvec, labelvec, locus));\n \n-\t  MEM_VOLATILE_P (SET_SRC (XVECEXP (body, 0, i))) = vol;\n+\t  MEM_VOLATILE_P (SET_SRC (XVECEXP (body, 0, i)))\n+\t    = gimple_asm_volatile_p (stmt);\n \t}\n \n       /* If there are no outputs (but there are some clobbers)"}, {"sha": "623d33dee7736b2eedfd66cc3a34e05b67f979c7", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a85b055d38e8f0000da08d80e143a89ecb827e/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a85b055d38e8f0000da08d80e143a89ecb827e/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=15a85b055d38e8f0000da08d80e143a89ecb827e", "patch": "@@ -5272,7 +5272,7 @@ gimplify_asm_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)\n       stmt = gimple_build_asm_vec (TREE_STRING_POINTER (ASM_STRING (expr)),\n \t\t\t\t   inputs, outputs, clobbers, labels);\n \n-      gimple_asm_set_volatile (stmt, ASM_VOLATILE_P (expr));\n+      gimple_asm_set_volatile (stmt, ASM_VOLATILE_P (expr) || noutputs == 0);\n       gimple_asm_set_input (stmt, ASM_INPUT_P (expr));\n \n       gimplify_seq_add_stmt (pre_p, stmt);"}]}