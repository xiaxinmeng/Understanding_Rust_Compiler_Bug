{"sha": "652a8c1cde9cea866af3199c3e4a7fb1e7e909a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUyYThjMWNkZTljZWE4NjZhZjMxOTljM2U0YTdmYjFlN2U5MDlhMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-10-11T16:29:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-10-11T16:29:57Z"}, "message": "gimple.c (iterative_hash_type_name): Do not handle special anonymous names.\n\n2009-10-11  Richard Guenther  <rguenther@suse.de>\n\n\t* gimple.c (iterative_hash_type_name): Do not handle special\n\tanonymous names.\n\n\tcp/\n\t* tree.c (cp_free_lang_data): Drop anonymous aggregate names.\n\nFrom-SVN: r152643", "tree": {"sha": "e42ae4c5edc2225dfb8e07d8e94d6729e003b2f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e42ae4c5edc2225dfb8e07d8e94d6729e003b2f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b09ee6aaf79dfc8af5ac739e17499d27dde6bfc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09ee6aaf79dfc8af5ac739e17499d27dde6bfc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b09ee6aaf79dfc8af5ac739e17499d27dde6bfc3"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "2ebe6cae03c54883ee188f8ba05ab4ca99416bdf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=652a8c1cde9cea866af3199c3e4a7fb1e7e909a3", "patch": "@@ -1,3 +1,8 @@\n+2009-10-11  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gimple.c (iterative_hash_type_name): Do not handle special\n+\tanonymous names.\n+\n 2009-10-11  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*setcc_di_1): New insn_and_split pattern."}, {"sha": "67a5deaa69ec29408bcef862cd8a5a1097e366b3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=652a8c1cde9cea866af3199c3e4a7fb1e7e909a3", "patch": "@@ -1,3 +1,7 @@\n+2009-10-11  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree.c (cp_free_lang_data): Drop anonymous aggregate names.\n+\n 2009-10-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/36816"}, {"sha": "76763735b97870799f9c7d21048c7edc0a2babbf", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=652a8c1cde9cea866af3199c3e4a7fb1e7e909a3", "patch": "@@ -3129,6 +3129,17 @@ cp_free_lang_data (tree t)\n       DECL_EXTERNAL (t) = 1;\n       TREE_STATIC (t) = 0;\n     }\n+  if (CP_AGGREGATE_TYPE_P (t)\n+      && TYPE_NAME (t))\n+    {\n+      tree name = TYPE_NAME (t);\n+      if (TREE_CODE (name) == TYPE_DECL)\n+\tname = DECL_NAME (name);\n+      /* Drop anonymous names.  */\n+      if (name != NULL_TREE\n+\t  && ANON_AGGRNAME_P (name))\n+\tTYPE_NAME (t) = NULL_TREE;\n+    }\n }\n \n \f"}, {"sha": "29eec519b7d806bd133154e00d27c9106c0c1ea0", "filename": "gcc/gimple.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/652a8c1cde9cea866af3199c3e4a7fb1e7e909a3/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=652a8c1cde9cea866af3199c3e4a7fb1e7e909a3", "patch": "@@ -3591,21 +3591,6 @@ iterative_hash_type_name (tree type, hashval_t v)\n   if (!name)\n     return v;\n   gcc_assert (TREE_CODE (name) == IDENTIFIER_NODE);\n-  /* Do not hash names of anonymous unions.  At least the C++ FE insists\n-     to have a non-NULL TYPE_NAME for them.  See cp/cp-tree.h for all\n-     the glory.  */\n-#ifndef NO_DOT_IN_LABEL\n-  if (IDENTIFIER_POINTER (name)[0] == '.')\n-    return v;\n-#else\n-#ifndef NO_DOLLAR_IN_LABEL\n-  if (IDENTIFIER_POINTER (name)[0] == '$')\n-    return v;\n-#else\n-  if (!strncmp (IDENTIFIER_POINTER (name), \"__anon_\", sizeof (\"__anon_\") - 1))\n-    return v;\n-#endif\n-#endif\n   return iterative_hash_object (IDENTIFIER_HASH_VALUE (name), v);\n }\n "}]}