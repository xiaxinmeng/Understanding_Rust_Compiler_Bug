{"sha": "a701949a727ff74cd907540c5a8f28a5204bba4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcwMTk0OWE3MjdmZjc0Y2Q5MDc1NDBjNWE4ZjI4YTUyMDRiYmE0ZQ==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2001-01-08T01:07:31Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2001-01-08T01:07:31Z"}, "message": "rs6000.h (EPILOGUE_USES): New, mark link register after reload.\n\n\t2001-01-07  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n\t* config/rs6000/rs6000.h (EPILOGUE_USES): New, mark link register\n\tafter reload.\n\nFrom-SVN: r38790", "tree": {"sha": "bfbaaae5a31ab8a3e3280e6cecf3e872280db3c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfbaaae5a31ab8a3e3280e6cecf3e872280db3c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a701949a727ff74cd907540c5a8f28a5204bba4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a701949a727ff74cd907540c5a8f28a5204bba4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a701949a727ff74cd907540c5a8f28a5204bba4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a701949a727ff74cd907540c5a8f28a5204bba4e/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a9d31a7d48bbae78a24a1395199d5c4c048d642", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9d31a7d48bbae78a24a1395199d5c4c048d642", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9d31a7d48bbae78a24a1395199d5c4c048d642"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "53aa75358d67d5cd8fd7498c40b6c9b4b0b09c0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a701949a727ff74cd907540c5a8f28a5204bba4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a701949a727ff74cd907540c5a8f28a5204bba4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a701949a727ff74cd907540c5a8f28a5204bba4e", "patch": "@@ -1,3 +1,8 @@\n+2001-01-07  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* config/rs6000/rs6000.h (EPILOGUE_USES): New, mark link register\n+\tafter reload.\n+\n 2001-01-07  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.def (BUILT_IN_FPRINTF): New entry."}, {"sha": "d6c24aacb8f15f9300ce68f1f121d4d67361f784", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a701949a727ff74cd907540c5a8f28a5204bba4e/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a701949a727ff74cd907540c5a8f28a5204bba4e/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=a701949a727ff74cd907540c5a8f28a5204bba4e", "patch": "@@ -1559,6 +1559,14 @@ typedef struct rs6000_args\n    its backpointer, which we maintain.  */\n #define EXIT_IGNORE_STACK\t1\n \n+/* Define this macro as a C expression that is nonzero for registers\n+   that are used by the epilogue or the return' pattern.  The stack\n+   and frame pointer registers are already be assumed to be used as\n+   needed.  */\n+\n+#define\tEPILOGUE_USES(REGNO)\t\\\n+  (reload_completed && (REGNO) == LINK_REGISTER_REGNUM)\n+\n /* This macro generates the assembly code for function exit,\n    on machines that need it.  If FUNCTION_EPILOGUE is not defined\n    then individual return instructions are generated for each"}]}