{"sha": "dd0a516fa722bb2847ae1b4581ae2091c3977a5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQwYTUxNmZhNzIyYmIyODQ3YWUxYjQ1ODFhZTIwOTFjMzk3N2E1Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-04-24T06:07:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-04-24T06:07:30Z"}, "message": "re PR middle-end/53084 (GCC cannot handle array initialization of string constant with point arithmetic properly)\n\n\tPR middle-end/53084\n\t* varasm.c (compute_reloc_for_constant): Handle ADDR_EXPR\n\tof MEM_REF.\n\t(output_addressed_constants): Likewise.\n\n\t* gcc.c-torture/execute/pr53084.c: New test.\n\nFrom-SVN: r186742", "tree": {"sha": "58f80e09989829fcabbe550b0bfbcba45424ec41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58f80e09989829fcabbe550b0bfbcba45424ec41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd0a516fa722bb2847ae1b4581ae2091c3977a5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd0a516fa722bb2847ae1b4581ae2091c3977a5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd0a516fa722bb2847ae1b4581ae2091c3977a5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd0a516fa722bb2847ae1b4581ae2091c3977a5b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06edd772e354ab922fa429bfe788a006f53511d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06edd772e354ab922fa429bfe788a006f53511d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06edd772e354ab922fa429bfe788a006f53511d8"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "8dbaeffd78002bdcef3f53041c08f54944678e70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd0a516fa722bb2847ae1b4581ae2091c3977a5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd0a516fa722bb2847ae1b4581ae2091c3977a5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd0a516fa722bb2847ae1b4581ae2091c3977a5b", "patch": "@@ -1,5 +1,10 @@\n 2012-04-24  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/53084\n+\t* varasm.c (compute_reloc_for_constant): Handle ADDR_EXPR\n+\tof MEM_REF.\n+\t(output_addressed_constants): Likewise.\n+\n \tPR middle-end/52999\n \t* varasm.c (get_section): Don't ICE for section conflicts with\n \tbuilt-in section kinds."}, {"sha": "76420e0ebe214ff715f1ca638a0ae839e7b0525c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd0a516fa722bb2847ae1b4581ae2091c3977a5b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd0a516fa722bb2847ae1b4581ae2091c3977a5b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dd0a516fa722bb2847ae1b4581ae2091c3977a5b", "patch": "@@ -1,3 +1,8 @@\n+2012-04-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/53084\n+\t* gcc.c-torture/execute/pr53084.c: New test.\n+\n 2012-04-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/cpp0x/noexcept15.C: Adjust for Rev 186726 library changes."}, {"sha": "1afc016dfc410f287770487cb56c17014daf0a57", "filename": "gcc/testsuite/gcc.c-torture/execute/pr53084.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd0a516fa722bb2847ae1b4581ae2091c3977a5b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr53084.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd0a516fa722bb2847ae1b4581ae2091c3977a5b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr53084.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr53084.c?ref=dd0a516fa722bb2847ae1b4581ae2091c3977a5b", "patch": "@@ -0,0 +1,18 @@\n+/* PR middle-end/53084 */\n+\n+extern void abort (void);\n+\n+__attribute__((noinline, noclone)) void\n+bar (const char *p)\n+{\n+  if (p[0] != 'o' || p[1] != 'o' || p[2])\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  static const char *const foo[] = {\"foo\" + 1};\n+  bar (foo[0]);\n+  return 0;\n+}"}, {"sha": "03ac49b4677d691030919aa41601af82e4095097", "filename": "gcc/varasm.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd0a516fa722bb2847ae1b4581ae2091c3977a5b/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd0a516fa722bb2847ae1b4581ae2091c3977a5b/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=dd0a516fa722bb2847ae1b4581ae2091c3977a5b", "patch": "@@ -3934,6 +3934,13 @@ compute_reloc_for_constant (tree exp)\n \t   tem = TREE_OPERAND (tem, 0))\n \t;\n \n+      if (TREE_CODE (tem) == MEM_REF\n+\t  && TREE_CODE (TREE_OPERAND (tem, 0)) == ADDR_EXPR)\n+\t{\n+\t  reloc = compute_reloc_for_constant (TREE_OPERAND (tem, 0));\n+\t  break;\n+\t}\n+\n       if (TREE_PUBLIC (tem))\n \treloc |= 2;\n       else\n@@ -4002,6 +4009,9 @@ output_addressed_constants (tree exp)\n \n       if (CONSTANT_CLASS_P (tem) || TREE_CODE (tem) == CONSTRUCTOR)\n \toutput_constant_def (tem, 0);\n+\n+      if (TREE_CODE (tem) == MEM_REF)\n+\toutput_addressed_constants (TREE_OPERAND (tem, 0));\n       break;\n \n     case PLUS_EXPR:"}]}