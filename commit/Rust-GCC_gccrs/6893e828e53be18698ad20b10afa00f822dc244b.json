{"sha": "6893e828e53be18698ad20b10afa00f822dc244b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg5M2U4MjhlNTNiZTE4Njk4YWQyMGIxMGFmYTAwZjgyMmRjMjQ0Yg==", "commit": {"author": {"name": "Arthur Norman", "email": "acn1@cam.ac.uk", "date": "2008-01-02T10:46:17Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-01-02T10:46:17Z"}, "message": "(ix86_expand_prologue): Save red-zone while stack probing.\n\n PR 34013.\n\nFrom-SVN: r131255", "tree": {"sha": "b5e34cbcfd93edfa16e2b8c24d33694e4cc72928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5e34cbcfd93edfa16e2b8c24d33694e4cc72928"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6893e828e53be18698ad20b10afa00f822dc244b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6893e828e53be18698ad20b10afa00f822dc244b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6893e828e53be18698ad20b10afa00f822dc244b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6893e828e53be18698ad20b10afa00f822dc244b/comments", "author": {"login": "arthurcnorman", "id": 5830576, "node_id": "MDQ6VXNlcjU4MzA1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/5830576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurcnorman", "html_url": "https://github.com/arthurcnorman", "followers_url": "https://api.github.com/users/arthurcnorman/followers", "following_url": "https://api.github.com/users/arthurcnorman/following{/other_user}", "gists_url": "https://api.github.com/users/arthurcnorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurcnorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurcnorman/subscriptions", "organizations_url": "https://api.github.com/users/arthurcnorman/orgs", "repos_url": "https://api.github.com/users/arthurcnorman/repos", "events_url": "https://api.github.com/users/arthurcnorman/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurcnorman/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a7817e4e80c5f7f84d61e6885adb2cfdd1e32e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a7817e4e80c5f7f84d61e6885adb2cfdd1e32e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a7817e4e80c5f7f84d61e6885adb2cfdd1e32e7"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "1524eac74422886be944d274656b869e933fae09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6893e828e53be18698ad20b10afa00f822dc244b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6893e828e53be18698ad20b10afa00f822dc244b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6893e828e53be18698ad20b10afa00f822dc244b", "patch": "@@ -1,6 +1,12 @@\n+2008-01-02  Arthur Norman <acn1@cam.ac.uk>\n+\n+\tPR 34013\n+\t* gcc/config/i386/i386.c: (ix86_expand_prologue): Save red-zone\n+\twhile stack probing.\n+\n 2008-01-01  Douglas Gregor  <doug.gregor@gmail.com>\n \n-       * c-opts.c (sanitize_cpp_opts): Don't warn about \"long long\" when\n+\t* c-opts.c (sanitize_cpp_opts): Don't warn about \"long long\" when\n        in C++0x mode.\n \n 2008-01-01  Volker Reichelt  <v.reichelt@netcologne.de>"}, {"sha": "31931015fc5886a37453a34c7adb28347a73a90a", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6893e828e53be18698ad20b10afa00f822dc244b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6893e828e53be18698ad20b10afa00f822dc244b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6893e828e53be18698ad20b10afa00f822dc244b", "patch": "@@ -6318,8 +6318,12 @@ ix86_expand_prologue (void)\n     allocate += frame.nregs * UNITS_PER_WORD;\n \n   /* When using red zone we may start register saving before allocating\n-     the stack frame saving one cycle of the prologue.  */\n-  if (TARGET_RED_ZONE && frame.save_regs_using_mov)\n+     the stack frame saving one cycle of the prologue. However I will\n+     avoid doing this if I am going to have to probe the stack since\n+     at least on x86_64 the stack probe can turn into a call that clobbers\n+     a red zone location */\n+  if (TARGET_RED_ZONE && frame.save_regs_using_mov\n+      && (! TARGET_STACK_PROBE || allocate < CHECK_STACK_LIMIT))\n     ix86_emit_save_regs_using_mov (frame_pointer_needed ? hard_frame_pointer_rtx\n \t\t\t\t   : stack_pointer_rtx,\n \t\t\t\t   -frame.nregs * UNITS_PER_WORD);\n@@ -6375,7 +6379,9 @@ ix86_expand_prologue (void)\n \t}\n     }\n \n-  if (frame.save_regs_using_mov && !TARGET_RED_ZONE)\n+  if (frame.save_regs_using_mov\n+      && !(TARGET_RED_ZONE\n+         && (! TARGET_STACK_PROBE || allocate < CHECK_STACK_LIMIT)))\n     {\n       if (!frame_pointer_needed || !frame.to_allocate)\n         ix86_emit_save_regs_using_mov (stack_pointer_rtx, frame.to_allocate);"}]}