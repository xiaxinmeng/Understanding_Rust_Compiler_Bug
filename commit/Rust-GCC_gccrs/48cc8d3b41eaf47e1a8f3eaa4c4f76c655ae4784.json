{"sha": "48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhjYzhkM2I0MWVhZjQ3ZTFhOGYzZWFhNGM0Zjc2YzY1NWFlNDc4NA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-01-27T00:07:41Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-01-27T00:07:41Z"}, "message": "For real this time...\n\n        PR middle-end/18008\n        * c-decl.c (finish_struct): Set DECL_MODE after resetting a\n        field's type.\n        * expr.c (store_field): Strip conversions to odd-bit-sized types\n        if the destination field width matches.\n\nFrom-SVN: r94294", "tree": {"sha": "f3474ccdfed8911f1cf4ff4e40df78bca88922f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3474ccdfed8911f1cf4ff4e40df78bca88922f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784/comments", "author": null, "committer": null, "parents": [{"sha": "eec6bb06c65297a56eeff3c6bd8e4b31fec554bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eec6bb06c65297a56eeff3c6bd8e4b31fec554bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eec6bb06c65297a56eeff3c6bd8e4b31fec554bb"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "3f158552670ec38ef9a827ceb6997d9066596fda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784", "patch": "@@ -1,3 +1,11 @@\n+2005-01-26  Richard Henderson  <rth@redhat.com>\n+\n+\tPR middle-end/18008\n+\t* c-decl.c (finish_struct): Set DECL_MODE after resetting a\n+\tfield's type.\n+\t* expr.c (store_field): Strip conversions to odd-bit-sized types\n+\tif the destination field width matches.\n+\n 2005-01-26  Richard Henderson  <rth@redhat.com>\n \n \t* c-decl.c, expmed.c, expr.c: Revert last change."}, {"sha": "61521e861c7b40b0a2b5d201bb78960150b999d5", "filename": "gcc/c-decl.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784", "patch": "@@ -5301,8 +5301,11 @@ finish_struct (tree t, tree fieldlist, tree attributes)\n \t    = tree_low_cst (DECL_INITIAL (*fieldlistp), 1);\n \t  tree type = TREE_TYPE (*fieldlistp);\n \t  if (width != TYPE_PRECISION (type))\n-\t    TREE_TYPE (*fieldlistp)\n-\t      = build_nonstandard_integer_type (width, TYPE_UNSIGNED (type));\n+\t    {\n+\t      TREE_TYPE (*fieldlistp)\n+\t        = build_nonstandard_integer_type (width, TYPE_UNSIGNED (type));\n+\t      DECL_MODE (*fieldlistp) = TYPE_MODE (TREE_TYPE (*fieldlistp));\n+\t    }\n \t  DECL_INITIAL (*fieldlistp) = 0;\n \t}\n       else"}, {"sha": "1f82b1d98346a6745cb1c037b191297bbddc9164", "filename": "gcc/expr.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=48cc8d3b41eaf47e1a8f3eaa4c4f76c655ae4784", "patch": "@@ -5215,7 +5215,21 @@ store_field (rtx target, HOST_WIDE_INT bitsize, HOST_WIDE_INT bitpos,\n \t  && TREE_CODE (TYPE_SIZE (TREE_TYPE (exp))) == INTEGER_CST\n \t  && compare_tree_int (TYPE_SIZE (TREE_TYPE (exp)), bitsize) != 0))\n     {\n-      rtx temp = expand_expr (exp, NULL_RTX, VOIDmode, 0);\n+      rtx temp;\n+\n+      /* If EXP is a NOP_EXPR of precision less than its mode, then that\n+\t implies a mask operation.  If the precision is the same size as\n+\t the field we're storing into, that mask is redundant.  This is\n+\t particularly common with bit field assignments generated by the\n+\t C front end.  */\n+      if (TREE_CODE (exp) == NOP_EXPR\n+\t  && INTEGRAL_TYPE_P (TREE_TYPE (exp))\n+\t  && (TYPE_PRECISION (TREE_TYPE (exp))\n+\t      < GET_MODE_BITSIZE (TYPE_MODE (TREE_TYPE (exp))))\n+\t  && bitsize == TYPE_PRECISION (TREE_TYPE (exp)))\n+\texp = TREE_OPERAND (exp, 0);\n+\n+      temp = expand_expr (exp, NULL_RTX, VOIDmode, 0);\n \n       /* If BITSIZE is narrower than the size of the type of EXP\n \t we will be narrowing TEMP.  Normally, what's wanted are the"}]}