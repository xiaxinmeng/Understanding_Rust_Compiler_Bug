{"sha": "c6cc81d61313cf875924c5bfcda801e3c0dbfd6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZjYzgxZDYxMzEzY2Y4NzU5MjRjNWJmY2RhODAxZTNjMGRiZmQ2Yw==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-10-19T17:02:30Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-10-19T17:02:30Z"}, "message": "arm.c (arm_emit_coreregs_64bit_shift): Clear the result register only if \"in\" and \"out\" are different registers.\n\n2016-10-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * config/arm/arm.c (arm_emit_coreregs_64bit_shift): Clear the result\n        register only if \"in\" and \"out\" are different registers.\n\nFrom-SVN: r241348", "tree": {"sha": "c3a98920c7d852dc5170b59caca7bdc5c25a0c17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3a98920c7d852dc5170b59caca7bdc5c25a0c17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6cc81d61313cf875924c5bfcda801e3c0dbfd6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6cc81d61313cf875924c5bfcda801e3c0dbfd6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6cc81d61313cf875924c5bfcda801e3c0dbfd6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6cc81d61313cf875924c5bfcda801e3c0dbfd6c/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29849c91e41478ce7c86d5fe4f1582179b845ef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29849c91e41478ce7c86d5fe4f1582179b845ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29849c91e41478ce7c86d5fe4f1582179b845ef8"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "e4840df2b51e79343afb4e840b3dc2a8ae5b70d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6cc81d61313cf875924c5bfcda801e3c0dbfd6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6cc81d61313cf875924c5bfcda801e3c0dbfd6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6cc81d61313cf875924c5bfcda801e3c0dbfd6c", "patch": "@@ -1,3 +1,8 @@\n+2016-10-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* config/arm/arm.c (arm_emit_coreregs_64bit_shift): Clear the result\n+\tregister only if \"in\" and \"out\" are different registers.\n+\n 2016-10-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* omp-low.c (pass_oacc_device_lower::gate): New method."}, {"sha": "022c1d72a1272e56397dc7e2018483e77f18b90d", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6cc81d61313cf875924c5bfcda801e3c0dbfd6c/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6cc81d61313cf875924c5bfcda801e3c0dbfd6c/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=c6cc81d61313cf875924c5bfcda801e3c0dbfd6c", "patch": "@@ -29218,8 +29218,10 @@ arm_emit_coreregs_64bit_shift (enum rtx_code code, rtx out, rtx in,\n \n \t  /* Clearing the out register in DImode first avoids lots\n \t     of spilling and results in less stack usage.\n-\t     Later this redundant insn is completely removed.  */\n-\t  emit_insn (SET (out, const0_rtx));\n+\t     Later this redundant insn is completely removed.\n+\t     Do that only if \"in\" and \"out\" are different registers.  */\n+\t  if (REG_P (out) && REG_P (in) && REGNO (out) != REGNO (in))\n+\t    emit_insn (SET (out, const0_rtx));\n \t  emit_insn (SET (out_down, LSHIFT (code, in_down, amount)));\n \t  emit_insn (SET (out_down,\n \t\t\t  ORR (REV_LSHIFT (code, in_up, reverse_amount),\n@@ -29231,11 +29233,14 @@ arm_emit_coreregs_64bit_shift (enum rtx_code code, rtx out, rtx in,\n \t  /* Shifts by a constant greater than 31.  */\n \t  rtx adj_amount = GEN_INT (INTVAL (amount) - 32);\n \n-\t  emit_insn (SET (out, const0_rtx));\n+\t  if (REG_P (out) && REG_P (in) && REGNO (out) != REGNO (in))\n+\t    emit_insn (SET (out, const0_rtx));\n \t  emit_insn (SET (out_down, SHIFT (code, in_up, adj_amount)));\n \t  if (code == ASHIFTRT)\n \t    emit_insn (gen_ashrsi3 (out_up, in_up,\n \t\t\t\t    GEN_INT (31)));\n+\t  else\n+\t    emit_insn (SET (out_up, const0_rtx));\n \t}\n     }\n   else"}]}