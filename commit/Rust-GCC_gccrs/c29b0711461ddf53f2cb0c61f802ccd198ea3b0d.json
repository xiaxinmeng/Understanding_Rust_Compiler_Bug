{"sha": "c29b0711461ddf53f2cb0c61f802ccd198ea3b0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI5YjA3MTE0NjFkZGY1M2YyY2IwYzYxZjgwMmNjZDE5OGVhM2IwZA==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@mhpcc.edu", "date": "1998-09-03T15:12:09Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "1998-09-03T15:12:09Z"}, "message": "rs6000.md (movsf): Disable explicit secondary-reload-like functionality if TARGET_POWERPC64.\n\n\t* rs6000.md (movsf): Disable explicit secondary-reload-like\n\tfunctionality if TARGET_POWERPC64.\n\t(movdf): Remove TARGET_POWERPC64 explicit secondary-reload-like\n\tfunctionality.\n\nFrom-SVN: r22213", "tree": {"sha": "022330cdcbe616fd420cb1efb6abf8b5f969d59e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/022330cdcbe616fd420cb1efb6abf8b5f969d59e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c29b0711461ddf53f2cb0c61f802ccd198ea3b0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c29b0711461ddf53f2cb0c61f802ccd198ea3b0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c29b0711461ddf53f2cb0c61f802ccd198ea3b0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c29b0711461ddf53f2cb0c61f802ccd198ea3b0d/comments", "author": null, "committer": null, "parents": [{"sha": "d6c6ba304d55824283b213de69a8e18666e2dae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c6ba304d55824283b213de69a8e18666e2dae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6c6ba304d55824283b213de69a8e18666e2dae4"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "77aaa2720c3108ddec551fe91a1c5ea905def739", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c29b0711461ddf53f2cb0c61f802ccd198ea3b0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c29b0711461ddf53f2cb0c61f802ccd198ea3b0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c29b0711461ddf53f2cb0c61f802ccd198ea3b0d", "patch": "@@ -1,3 +1,10 @@\n+Thu Sep  3 18:05:16 1998  David Edelsohn  <edelsohn@mhpcc.edu>\n+\n+\t* rs6000.md (movsf): Disable explicit secondary-reload-like\n+\tfunctionality if TARGET_POWERPC64.\n+\t(movdf): Remove TARGET_POWERPC64 explicit secondary-reload-like\n+\tfunctionality.\n+\n Thu Sep  3 11:41:40 1998  Robert Lipe   <robertl@dgii.com>\n \n \t* fixinc.sco: Borrow code to wrap 'bool' typedefs from tinfo.h"}, {"sha": "23064076530ef233c957d9da2ab71912a5d7950e", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c29b0711461ddf53f2cb0c61f802ccd198ea3b0d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c29b0711461ddf53f2cb0c61f802ccd198ea3b0d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=c29b0711461ddf53f2cb0c61f802ccd198ea3b0d", "patch": "@@ -5686,7 +5686,8 @@\n \n   else if (TARGET_HARD_FLOAT)\n     {\n-      if (GET_CODE (operands[1]) == REG && REGNO (operands[1]) < 32)\n+      if (! TARGET_POWERPC64\n+\t  && GET_CODE (operands[1]) == REG && REGNO (operands[1]) < 32)\n \t{\n \t  /* If this is a store to memory or another integer register do the\n \t     move directly.  Otherwise store to a temporary stack slot and\n@@ -5729,7 +5730,8 @@\n \t  operands[1] = force_reg (SFmode, operands[1]);\n \t}\n \n-      if (GET_CODE (operands[0]) == REG && REGNO (operands[0]) < 32)\n+      if (! TARGET_POWERPC64\n+\t  && GET_CODE (operands[0]) == REG && REGNO (operands[0]) < 32)\n \t{\n \t  if (GET_CODE (operands[1]) == MEM\n #if HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT && ! defined(REAL_IS_NOT_DOUBLE)\n@@ -5848,23 +5850,6 @@\n   if (GET_CODE (operands[0]) != REG)\n     operands[1] = force_reg (DFmode, operands[1]);\n \n-      /* Stores between FPR and any non-FPR registers must go through a\n-         temporary stack slot.  */\n-\n-  if (TARGET_POWERPC64\n-      && GET_CODE (operands[0]) == REG && GET_CODE (operands[1]) == REG\n-      && ((FP_REGNO_P (REGNO (operands[0]))\n-\t   && ! FP_REGNO_P (REGNO (operands[1])))\n-\t  || (FP_REGNO_P (REGNO (operands[1]))\n-\t      && ! FP_REGNO_P (REGNO (operands[0])))))\n-    {\n-      rtx stack_slot = assign_stack_temp (DFmode, 8, 0);\n-\n-      emit_move_insn (stack_slot, operands[1]);\n-      emit_move_insn (operands[0], stack_slot);\n-      DONE;\n-    }\n-\n   if (CONSTANT_P (operands[1]) && ! easy_fp_constant (operands[1], DFmode))\n     {\n       operands[1] = force_const_mem (DFmode, operands[1]);"}]}