{"sha": "ed56b7f958ffab960ccad757c510d718bc85b0b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ1NmI3Zjk1OGZmYWI5NjBjY2FkNzU3YzUxMGQ3MThiYzg1YjBiNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-09-12T15:23:01Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-09-12T15:23:01Z"}, "message": "i386.md: Comments on fma4 instruction selection reflect requirement on register pressure...\n\n2012-09-12  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n\n\t* config/i386/i386.md : Comments on fma4 instruction\n\tselection reflect requirement on register pressure based\n\tcost model.\n\n\t* config/i386/driver-i386.c (host_detect_local_cpu): fma4\n\tflag is set-reset as informed by the cpuid flag.\n\n\t* config/i386/i386.c (processor_alias_table): fma4\n\tflag is enabled for bdver2.\n\nFrom-SVN: r191226", "tree": {"sha": "31bb9d8525d733dc917d959478abc4eebc1c1f12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31bb9d8525d733dc917d959478abc4eebc1c1f12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed56b7f958ffab960ccad757c510d718bc85b0b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed56b7f958ffab960ccad757c510d718bc85b0b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed56b7f958ffab960ccad757c510d718bc85b0b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed56b7f958ffab960ccad757c510d718bc85b0b6/comments", "author": null, "committer": null, "parents": [{"sha": "40b178f44696219fb4781f1f555eb7962fbcd401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b178f44696219fb4781f1f555eb7962fbcd401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40b178f44696219fb4781f1f555eb7962fbcd401"}], "stats": {"total": 58, "additions": 34, "deletions": 24}, "files": [{"sha": "345ea6a6287b6580df11d1eeeebf026fbe24850c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 18, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed56b7f958ffab960ccad757c510d718bc85b0b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed56b7f958ffab960ccad757c510d718bc85b0b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed56b7f958ffab960ccad757c510d718bc85b0b6", "patch": "@@ -1,3 +1,15 @@\n+2012-09-12  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n+\n+\t* config/i386/i386.md : Comments on fma4 instruction\n+\tselection reflect requirement on register pressure based\n+\tcost model.\n+\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): fma4\n+\tflag is set-reset as informed by the cpuid flag.\n+\n+\t* config/i386/i386.c (processor_alias_table): fma4\n+\tflag is enabled for bdver2.\n+\n 2012-09-12  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/54489\n@@ -93,13 +105,11 @@\n \n 2012-09-11  Diego Novillo  <dnovillo@google.com>\n \n-\t* var-tracking.c (vt_add_function_parameter): Adjust for VEC\n-\tchanges.\n+\t* var-tracking.c (vt_add_function_parameter): Adjust for VEC changes.\n \n 2012-09-11  Dominique Dhumieres  <dominiq@lps.ens.fr>\n \n-\t* config/darwin.c (darwin_asm_named_section): Adjust for\n-\tVEC changes.\n+\t* config/darwin.c (darwin_asm_named_section): Adjust for VEC changes.\n \t(darwin_asm_dwarf_section): Likewise.\n \n 2012-09-11  Martin Jambor  <mjambor@suse.cz>\n@@ -158,12 +168,11 @@\n \n 2012-09-11  Richard Guenther  <rguenther@suse.de>\n \n-\t* graphite-scop-detection.c (move_sd_regions): Adjust for VEC\n-\tchanges.\n+\t* graphite-scop-detection.c (move_sd_regions): Adjust for VEC changes.\n \t(scopdet_basic_block_info): Likewise.\n \t(build_scops_1): Likewise.\n \t(limit_scops): Likewise.\n- \n+\n 2012-09-11  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/54515\n@@ -266,7 +275,7 @@\n 2012-09-09  Mark Kettenis  <kettenis@gnu.org>\n \n \t* config/openbsd-stdint.h (INTMAX_TYPE, UINTMAX_TYPE): Define.\n-\t\t\t\n+\n 2012-09-09  Jan Hubicka  <jh@suse.cz>\n \n \t* passes.c (ipa_write_summaries_1): Set state;\n@@ -302,7 +311,8 @@\n \t(lto_symtab_encoder_delete_node): New function.\n \t(lto_symtab_encoder_encode_body_p, lto_set_symtab_encoder_encode_body,\n \tlto_symtab_encoder_encode_initializer_p,\n-\tlto_set_symtab_encoder_encode_initializer, lto_symtab_encoder_in_partition_p,\n+\tlto_set_symtab_encoder_encode_initializer,\n+\tlto_symtab_encoder_in_partition_p,\n \tlto_symtab_encoder_in_partition_p): Update.\n \t(compute_ltrans_boundary): Take encoder as an input.\n \t* passes.c (ipa_write_summaries_1): Update.\n@@ -323,12 +333,12 @@\n \n 2012-09-08  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n-\t* config/pa/pa.c (hppa_rtx_costs): Update costs for large integer modes.\n+\t* config/pa/pa.c (hppa_rtx_costs): Update costs for large\n+\tinteger modes.\n \n 2012-09-08  Andi Kleen  <ak@linux.intel.com>\n \n-\t* gcc/lto/lto.c (do_whole_program_analysis): \n-\tFix last broken patch\n+\t* gcc/lto/lto.c (do_whole_program_analysis): Fix last broken patch.\n \n 2012-09-08  Andi Kleen  <ak@linux.intel.com>\n \n@@ -392,8 +402,8 @@\n \tPR tree-optimization/53986\n \t* tree-vrp.c (extract_range_from_multiplicative_op_1): Allow\n \tLSHIFT_EXPR.\n-\t(extract_range_from_binary_expr_1): Handle LSHIFT with constant range as\n-\tshift amount.\n+\t(extract_range_from_binary_expr_1): Handle LSHIFT with constant\n+\trange as shift amount.\n \n 2012-09-07  Segher Boessenkool  <segher@kernel.crashing.org>\n \n@@ -416,7 +426,7 @@\n \t(call_value_nonlocal_aix32): Ditto.\n \t(call_value_nonlocal_aix64): Ditto.\n \n-2012-09-06  Andi Kleen <ak@linux.intel.com>\n+2012-09-06  Andi Kleen  <ak@linux.intel.com>\n \n \t* doc/invoke.texi (-ffat-lto-objects): Clarify that gcc-ar\n \tet.al. should be used.\n@@ -498,7 +508,7 @@\n \n 2012-09-06  Uros Bizjak  <ubizjak@gmail.com>\n \n-\t* configure.ac (hle prefixes): Remove .code64.\n+\t* configure.ac (hle prefixes): Remove .code64 directive.\n \t* configure: Regenerated.\n \n 2012-09-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n@@ -922,7 +932,7 @@\n \t* config/sh/sh.md (cbranchsi4): Remove TARGET_CBRANCHDI4 check and\n \talways invoke expand_cbranchsi4.\n \n-2012-09-03  Andi Kleen <ak@linux.intel.com>\n+2012-09-03  Andi Kleen  <ak@linux.intel.com>\n \n \t* tree-ssa-sccvn.c (vn_reference_fold_indirect): Initialize\n \taddr_offset always.\n@@ -15115,7 +15125,7 @@\n \t* cgraphunit.c (cgraph_analyze_function): Use gimple_has_body_p.\n \n 2012-05-02  Kirill Yukhin  <kirill.yukhin@intel.com>\n-\t    Andi Kleen <ak@linux.intel.com>\n+\t    Andi Kleen  <ak@linux.intel.com>\n \n \t* coretypes.h (MEMMODEL_MASK): New.\n \t* builtins.c (get_memmodel): Add val. Call target.memmodel_check"}, {"sha": "bda4e0222776f924078236c78d2d4d4e37e7f2c1", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed56b7f958ffab960ccad757c510d718bc85b0b6/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed56b7f958ffab960ccad757c510d718bc85b0b6/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=ed56b7f958ffab960ccad757c510d718bc85b0b6", "patch": "@@ -472,8 +472,6 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_abm = ecx & bit_ABM;\n       has_lwp = ecx & bit_LWP;\n       has_fma4 = ecx & bit_FMA4;\n-      if (vendor == signature_AMD_ebx && has_fma4 && has_fma)\n-\thas_fma4 = 0;\n       has_xop = ecx & bit_XOP;\n       has_tbm = ecx & bit_TBM;\n       has_lzcnt = ecx & bit_LZCNT;"}, {"sha": "69a3377e15010b04fca7762423059c2cb3b76a5a", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed56b7f958ffab960ccad757c510d718bc85b0b6/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed56b7f958ffab960ccad757c510d718bc85b0b6/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ed56b7f958ffab960ccad757c510d718bc85b0b6", "patch": "@@ -3164,7 +3164,7 @@ ix86_option_override_internal (bool main_args_p)\n       {\"bdver2\", PROCESSOR_BDVER2, CPU_BDVER2,\n \tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n \t| PTA_SSE4A | PTA_CX16 | PTA_ABM | PTA_SSSE3 | PTA_SSE4_1\n-\t| PTA_SSE4_2 | PTA_AES | PTA_PCLMUL | PTA_AVX\n+\t| PTA_SSE4_2 | PTA_AES | PTA_PCLMUL | PTA_AVX | PTA_FMA4\n \t| PTA_XOP | PTA_LWP | PTA_BMI | PTA_TBM | PTA_F16C\n \t| PTA_FMA},\n       {\"btver1\", PROCESSOR_BTVER1, CPU_GENERIC64,"}, {"sha": "05d22ddb3dc0cf0dc819105ebf0ef7ea83c2e3cc", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed56b7f958ffab960ccad757c510d718bc85b0b6/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed56b7f958ffab960ccad757c510d718bc85b0b6/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=ed56b7f958ffab960ccad757c510d718bc85b0b6", "patch": "@@ -659,9 +659,11 @@\n \t (eq_attr \"isa\" \"noavx2\") (symbol_ref \"!TARGET_AVX2\")\n \t (eq_attr \"isa\" \"bmi2\") (symbol_ref \"TARGET_BMI2\")\n \t (eq_attr \"isa\" \"fma\") (symbol_ref \"TARGET_FMA\")\n-\t ;; Disable generation of FMA4 instructions for generic code\n-\t ;; since FMA3 is preferred for targets that implement both\n-\t ;; instruction sets.\n+\t ;; Fma instruction selection has to be done based on\n+\t ;; register pressure. For generating fma4, a cost model\n+\t ;; based on register pressure is required. Till then,\n+\t ;; fma4 instruction is disabled for targets that implement\n+\t ;; both fma and fma4 instruction sets.\n \t (eq_attr \"isa\" \"fma4\")\n \t   (symbol_ref \"TARGET_FMA4 && !TARGET_FMA\")\n \t]"}]}