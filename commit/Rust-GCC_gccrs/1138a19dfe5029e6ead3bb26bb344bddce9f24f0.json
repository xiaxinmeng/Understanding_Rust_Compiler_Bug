{"sha": "1138a19dfe5029e6ead3bb26bb344bddce9f24f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEzOGExOWRmZTUwMjllNmVhZDNiYjI2YmIzNDRiZGRjZTlmMjRmMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-02-14T14:10:12Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-02-14T14:10:12Z"}, "message": "Enforce LWG DR 2566 requirement for container adaptors\n\nAlthough there is no good use for stack<int, deque<double>> or similar\ntypes with a mismatched value_type, it's possible somebody is doing that\nand getting away with it currently. This patch only enforces the new\nrequirement for C++17 and later. During stage 1 we should consider\nenforcing it for C++11 and C++14.\n\n\t* doc/xml/manual/intro.xml: Document LWG 2566 status.\n\t* include/bits/stl_queue.h (queue, priority_queue): Add static\n\tassertions to enforce LWG 2566 requirement on value_type.\n\t* include/bits/stl_stack.h (stack): Likewise.\n\nFrom-SVN: r268877", "tree": {"sha": "1224e15bd9662936e0ecc5037eacc49dc8414fb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1224e15bd9662936e0ecc5037eacc49dc8414fb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1138a19dfe5029e6ead3bb26bb344bddce9f24f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1138a19dfe5029e6ead3bb26bb344bddce9f24f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1138a19dfe5029e6ead3bb26bb344bddce9f24f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1138a19dfe5029e6ead3bb26bb344bddce9f24f0/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "affd7d477acb4a19dd588e51e6d5597679d0391d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/affd7d477acb4a19dd588e51e6d5597679d0391d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/affd7d477acb4a19dd588e51e6d5597679d0391d"}], "stats": {"total": 54, "additions": 45, "deletions": 9}, "files": [{"sha": "8cedc38c1a4cd564769784fe25747cbf9317a361", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1138a19dfe5029e6ead3bb26bb344bddce9f24f0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1138a19dfe5029e6ead3bb26bb344bddce9f24f0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1138a19dfe5029e6ead3bb26bb344bddce9f24f0", "patch": "@@ -1,5 +1,10 @@\n 2019-02-14  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* doc/xml/manual/intro.xml: Document LWG 2566 status.\n+\t* include/bits/stl_queue.h (queue, priority_queue): Add static\n+\tassertions to enforce LWG 2566 requirement on value_type.\n+\t* include/bits/stl_stack.h (stack): Likewise.\n+\n \tPR middle-end/89303\n \t* testsuite/20_util/enable_shared_from_this/89303.cc: New test.\n "}, {"sha": "2a3231f4eb4985bcc97f84ec97944520c7b1955a", "filename": "libstdc++-v3/doc/xml/manual/intro.xml", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1138a19dfe5029e6ead3bb26bb344bddce9f24f0/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1138a19dfe5029e6ead3bb26bb344bddce9f24f0/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml?ref=1138a19dfe5029e6ead3bb26bb344bddce9f24f0", "patch": "@@ -1120,11 +1120,18 @@ requirements of the license of GCC.\n     ill-formed.\n     </para></listitem></varlistentry>\n \n+    <varlistentry xml:id=\"manual.bugs.dr2537\"><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"&DR;#2537\">2537</link>:\n+       <emphasis>Requirements on the first template parameter of container adaptors\n+       </emphasis>\n+    </term>\n+    <listitem><para>Add static assertions to enforce the requirement.\n+    </para></listitem></varlistentry>\n+\n     <varlistentry xml:id=\"manual.bugs.dr2583\"><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"&DR;#2583\">2583</link>:\n        <emphasis>There is no way to supply an allocator for <code>basic_string(str, pos)</code>\n        </emphasis>\n     </term>\n-    <listitem><para>Add new constructor\n+    <listitem><para>Add new constructor.\n     </para></listitem></varlistentry>\n \n     <varlistentry xml:id=\"manual.bugs.dr2684\"><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"&DR;#2684\">2684</link>:"}, {"sha": "1eb56810edc987ae7b5b733a823cc73a93a35b68", "filename": "libstdc++-v3/include/bits/stl_queue.h", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1138a19dfe5029e6ead3bb26bb344bddce9f24f0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1138a19dfe5029e6ead3bb26bb344bddce9f24f0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h?ref=1138a19dfe5029e6ead3bb26bb344bddce9f24f0", "patch": "@@ -118,7 +118,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _Alloc>\n \tusing _Uses = typename\n \t  enable_if<uses_allocator<_Sequence, _Alloc>::value>::type;\n-#endif\n+\n+#if __cplusplus >= 201703L\n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 2566. Requirements on the first template parameter of container\n+      // adaptors\n+      static_assert(is_same<_Tp, typename _Sequence::value_type>::value,\n+\t  \"value_type must be the same as the underlying container\");\n+#endif // C++17\n+#endif // C++11\n \n     public:\n       typedef typename\t_Sequence::value_type\t\tvalue_type;\n@@ -451,17 +459,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _Alloc>\n \tusing _Uses = typename\n \t  enable_if<uses_allocator<_Sequence, _Alloc>::value>::type;\n-#endif\n+\n+#if __cplusplus >= 201703L\n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 2566. Requirements on the first template parameter of container\n+      // adaptors\n+      static_assert(is_same<_Tp, typename _Sequence::value_type>::value,\n+\t  \"value_type must be the same as the underlying container\");\n+#endif // C++17\n+#endif // C++11\n \n     public:\n       typedef typename\t_Sequence::value_type\t\tvalue_type;\n-      typedef typename\t_Sequence::reference\t\t reference;\n-      typedef typename\t_Sequence::const_reference\t   const_reference;\n-      typedef typename\t_Sequence::size_type\t\t size_type;\n-      typedef\t\t_Sequence\t\t\t    container_type;\n+      typedef typename\t_Sequence::reference\t\treference;\n+      typedef typename\t_Sequence::const_reference\tconst_reference;\n+      typedef typename\t_Sequence::size_type\t\tsize_type;\n+      typedef\t\t_Sequence\t\t\tcontainer_type;\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // DR 2684. priority_queue lacking comparator typedef\n-      typedef\t       _Compare\t\t\t\t    value_compare;\n+      typedef\t       _Compare\t\t\t\tvalue_compare;\n \n     protected:\n       //  See queue::c for notes on these names."}, {"sha": "28faab2e8716ce8a5cc1e77e64118b86754e44ec", "filename": "libstdc++-v3/include/bits/stl_stack.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1138a19dfe5029e6ead3bb26bb344bddce9f24f0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1138a19dfe5029e6ead3bb26bb344bddce9f24f0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h?ref=1138a19dfe5029e6ead3bb26bb344bddce9f24f0", "patch": "@@ -120,7 +120,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _Alloc>\n \tusing _Uses = typename\n \t  enable_if<uses_allocator<_Sequence, _Alloc>::value>::type;\n-#endif\n+\n+#if __cplusplus >= 201703L\n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 2566. Requirements on the first template parameter of container\n+      // adaptors\n+      static_assert(is_same<_Tp, typename _Sequence::value_type>::value,\n+\t  \"value_type must be the same as the underlying container\");\n+#endif // C++17\n+#endif // C++11\n \n     public:\n       typedef typename _Sequence::value_type\t\tvalue_type;"}]}