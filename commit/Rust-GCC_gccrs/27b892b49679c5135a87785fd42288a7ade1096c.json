{"sha": "27b892b49679c5135a87785fd42288a7ade1096c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdiODkyYjQ5Njc5YzUxMzVhODc3ODVmZDQyMjg4YTdhZGUxMDk2Yw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2004-11-28T14:02:56Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-11-28T14:02:56Z"}, "message": "* tree-inline.c (inline_forbidden_p_1, case RECORD_TYPE): Add comment.\n\nFrom-SVN: r91420", "tree": {"sha": "93d8ce870ef2939fae6aae5385727be255791fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93d8ce870ef2939fae6aae5385727be255791fc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27b892b49679c5135a87785fd42288a7ade1096c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27b892b49679c5135a87785fd42288a7ade1096c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27b892b49679c5135a87785fd42288a7ade1096c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27b892b49679c5135a87785fd42288a7ade1096c/comments", "author": null, "committer": null, "parents": [{"sha": "fbee756399a9efa24d5f629a7236fa59251d0d04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbee756399a9efa24d5f629a7236fa59251d0d04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbee756399a9efa24d5f629a7236fa59251d0d04"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "74ea331d08b542860f87cd490972f7f678b2b0ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b892b49679c5135a87785fd42288a7ade1096c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b892b49679c5135a87785fd42288a7ade1096c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27b892b49679c5135a87785fd42288a7ade1096c", "patch": "@@ -1,3 +1,7 @@\n+2004-11-28  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* tree-inline.c (inline_forbidden_p_1, case RECORD_TYPE): Add comment.\n+\n 2004-11-28  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \tPR rtl-optimization/18420"}, {"sha": "218764996f04006976a2b714552683e8c708354e", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b892b49679c5135a87785fd42288a7ade1096c/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b892b49679c5135a87785fd42288a7ade1096c/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=27b892b49679c5135a87785fd42288a7ade1096c", "patch": "@@ -1036,7 +1036,10 @@ inline_forbidden_p_1 (tree *nodep, int *walk_subtrees ATTRIBUTE_UNUSED,\n \t UNION_TYPE nodes, then it goes into infinite recursion on a\n \t structure containing a pointer to its own type.  If it doesn't,\n \t then the type node for S doesn't get adjusted properly when\n-\t F is inlined, and we abort in find_function_data.  */\n+\t F is inlined, and we abort in find_function_data.\n+\n+\t ??? This is likely no longer true, but it's too late in the 4.0\n+\t cycle to try to find out.  This should be checked for 4.1.  */\n       for (t = TYPE_FIELDS (node); t; t = TREE_CHAIN (t))\n \tif (variably_modified_type_p (TREE_TYPE (t), NULL))\n \t  {"}]}