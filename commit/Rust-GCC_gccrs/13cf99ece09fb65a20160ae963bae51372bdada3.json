{"sha": "13cf99ece09fb65a20160ae963bae51372bdada3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNjZjk5ZWNlMDlmYjY1YTIwMTYwYWU5NjNiYWU1MTM3MmJkYWRhMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2003-05-03T14:30:07Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-05-03T14:30:07Z"}, "message": "expr.c (expand_expr, [...]): Don't use gen_lowpart on non-integer modes.\n\n\t* expr.c (expand_expr, case VIEW_CONVERT_EXPR): Don't use\n\tgen_lowpart on non-integer modes.\n\nFrom-SVN: r66430", "tree": {"sha": "5b300418ab27240f850e8f114184f7fdfd40ea6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b300418ab27240f850e8f114184f7fdfd40ea6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13cf99ece09fb65a20160ae963bae51372bdada3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13cf99ece09fb65a20160ae963bae51372bdada3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13cf99ece09fb65a20160ae963bae51372bdada3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13cf99ece09fb65a20160ae963bae51372bdada3/comments", "author": null, "committer": null, "parents": [{"sha": "ee9609391b6e1bd4d026b86cf79bced76e1baa5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee9609391b6e1bd4d026b86cf79bced76e1baa5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee9609391b6e1bd4d026b86cf79bced76e1baa5b"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "f307619a02c747afbd03a4ce1e59ff536a262348", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13cf99ece09fb65a20160ae963bae51372bdada3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13cf99ece09fb65a20160ae963bae51372bdada3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13cf99ece09fb65a20160ae963bae51372bdada3", "patch": "@@ -19,6 +19,9 @@\n \n 2003-05-03  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* expr.c (expand_expr, case VIEW_CONVERT_EXPR): Don't use\n+\tgen_lowpart on non-integer modes.\n+\n \t* stor-layout.c (place_field): When adjusting offset_align, use\n \tdesired_align, not DECL_ALIGN.\n "}, {"sha": "7fd347be3b1d281da4a8734522caeef0905b0ee0", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13cf99ece09fb65a20160ae963bae51372bdada3/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13cf99ece09fb65a20160ae963bae51372bdada3/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=13cf99ece09fb65a20160ae963bae51372bdada3", "patch": "@@ -7959,12 +7959,14 @@ expand_expr (exp, target, tmode, modifier)\n       op0 = expand_expr (TREE_OPERAND (exp, 0), NULL_RTX, mode, modifier);\n \n       /* If the input and output modes are both the same, we are done.\n-\t Otherwise, if neither mode is BLKmode and both are within a word, we\n-\t can use gen_lowpart.  If neither is true, make sure the operand is\n-\t in memory and convert the MEM to the new mode.  */\n+\t Otherwise, if neither mode is BLKmode and both are integral and within\n+\t a word, we can use gen_lowpart.  If neither is true, make sure the\n+\t operand is in memory and convert the MEM to the new mode.  */\n       if (TYPE_MODE (type) == GET_MODE (op0))\n \t;\n       else if (TYPE_MODE (type) != BLKmode && GET_MODE (op0) != BLKmode\n+\t       && GET_MODE_CLASS (GET_MODE (op0)) == MODE_INT\n+\t       && GET_MODE_CLASS (TYPE_MODE (type)) == MODE_INT\n \t       && GET_MODE_SIZE (TYPE_MODE (type)) <= UNITS_PER_WORD\n \t       && GET_MODE_SIZE (GET_MODE (op0)) <= UNITS_PER_WORD)\n \top0 = gen_lowpart (TYPE_MODE (type), op0);"}]}