{"sha": "f2e994f3c64a5218ad4a9a06cfc0487b77b2d31e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJlOTk0ZjNjNjRhNTIxOGFkNGE5YTA2Y2ZjMDQ4N2I3N2IyZDMxZQ==", "commit": {"author": {"name": "Conrad Irwin", "email": "conrad.irwin@gmail.com", "date": "2010-08-06T04:45:46Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2010-08-06T04:45:46Z"}, "message": "Add closure API example to documentation\n\nFrom-SVN: r162932", "tree": {"sha": "3290d78e59c47db5a5f327b611938a0f567b8a62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3290d78e59c47db5a5f327b611938a0f567b8a62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2e994f3c64a5218ad4a9a06cfc0487b77b2d31e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e994f3c64a5218ad4a9a06cfc0487b77b2d31e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2e994f3c64a5218ad4a9a06cfc0487b77b2d31e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e994f3c64a5218ad4a9a06cfc0487b77b2d31e/comments", "author": {"login": "ConradIrwin", "id": 94272, "node_id": "MDQ6VXNlcjk0Mjcy", "avatar_url": "https://avatars.githubusercontent.com/u/94272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ConradIrwin", "html_url": "https://github.com/ConradIrwin", "followers_url": "https://api.github.com/users/ConradIrwin/followers", "following_url": "https://api.github.com/users/ConradIrwin/following{/other_user}", "gists_url": "https://api.github.com/users/ConradIrwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ConradIrwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ConradIrwin/subscriptions", "organizations_url": "https://api.github.com/users/ConradIrwin/orgs", "repos_url": "https://api.github.com/users/ConradIrwin/repos", "events_url": "https://api.github.com/users/ConradIrwin/events{/privacy}", "received_events_url": "https://api.github.com/users/ConradIrwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8909ccf5d106c7d83462ec0448f1586f6500e8f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8909ccf5d106c7d83462ec0448f1586f6500e8f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8909ccf5d106c7d83462ec0448f1586f6500e8f2"}], "stats": {"total": 67, "additions": 64, "deletions": 3}, "files": [{"sha": "b106384baf642b99be83fcf1f4b6f7fd6a628ae9", "filename": "libffi/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e994f3c64a5218ad4a9a06cfc0487b77b2d31e/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e994f3c64a5218ad4a9a06cfc0487b77b2d31e/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=f2e994f3c64a5218ad4a9a06cfc0487b77b2d31e", "patch": "@@ -49,6 +49,10 @@\n \t* src/arm/sysv.S (__ARM_ARCH__): Define for processor\n \t__ARM_ARCH_7EM__.\n \n+2010-01-12  Conrad Irwin <conrad.irwin@gmail.com>\n+\n+\t* doc/libffi.texi: Add closure example.\n+\n 2010-01-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libffi/40701"}, {"sha": "cbd78aa928f9c423ff34f384cfe67d9bda024efa", "filename": "libffi/doc/libffi.texi", "status": "modified", "additions": 60, "deletions": 3, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e994f3c64a5218ad4a9a06cfc0487b77b2d31e/libffi%2Fdoc%2Flibffi.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e994f3c64a5218ad4a9a06cfc0487b77b2d31e/libffi%2Fdoc%2Flibffi.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fdoc%2Flibffi.texi?ref=f2e994f3c64a5218ad4a9a06cfc0487b77b2d31e", "patch": "@@ -19,7 +19,7 @@\n This manual is for Libffi, a portable foreign-function interface\n library.\n \n-Copyright @copyright{} 2008 Red Hat, Inc.\n+Copyright @copyright{} 2008, 2010 Red Hat, Inc.\n \n @quotation\n Permission is granted to copy, distribute and/or modify this document\n@@ -106,6 +106,7 @@ values passed between the two languages.\n * Types::                       libffi type descriptions.\n * Multiple ABIs::               Different passing styles on one platform.\n * The Closure API::             Writing a generic function.\n+* Closure Example::             A closure example.\n @end menu\n \n \n@@ -500,12 +501,66 @@ After calling @code{ffi_prep_closure_loc}, you can cast @var{codeloc}\n to the appropriate pointer-to-function type.\n @end defun\n \n-@c FIXME: example\n-\n You may see old code referring to @code{ffi_prep_closure}.  This\n function is deprecated, as it cannot handle the need for separate\n writable and executable addresses.\n \n+@node Closure Example\n+@section Closure Example\n+\n+A trivial example that creates a new @code{puts} by binding \n+@code{fputs} with @code{stdin}.\n+\n+@example\n+#include <stdio.h>\n+#include <ffi.h>\n+\n+/* Acts like puts with the file given at time of enclosure. */\n+void puts_binding(ffi_cif *cif, unsigned int *ret, void* args[], \n+                  FILE *stream)\n+@{\n+  *ret = fputs(*(char **)args[0], stream);\n+@}\n+\n+int main()\n+@{\n+  ffi_cif cif;\n+  ffi_type *args[1];\n+  ffi_closure *closure;\n+\n+  int (*bound_puts)(char *);\n+  int rc;\n+  \n+  /* Allocate closure and bound_puts */\n+  closure = ffi_closure_alloc(sizeof(ffi_closure), &bound_puts);\n+\n+  if (closure)\n+    @{\n+      /* Initialize the argument info vectors */\n+      args[0] = &ffi_type_pointer;\n+\n+      /* Initialize the cif */\n+      if (ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1,\n+                       &ffi_type_uint, args) == FFI_OK)\n+        @{\n+          /* Initialize the closure, setting stream to stdout */\n+          if (ffi_prep_closure_loc(closure, &cif, puts_binding, \n+                                   stdout, bound_puts) == FFI_OK)\n+            @{\n+              rc = bound_puts(\"Hello World!\");\n+              /* rc now holds the result of the call to fputs */\n+            @}\n+        @}\n+    @}\n+\n+  /* Deallocate both closure, and bound_puts */\n+  ffi_closure_free(closure);\n+\n+  return 0;\n+@}\n+\n+@end example\n+\n \n @node Missing Features\n @chapter Missing Features\n@@ -525,6 +580,8 @@ There is no support for bit fields in structures.\n @item\n The closure API is\n \n+@c FIXME: ...\n+\n @item\n The ``raw'' API is undocumented.\n @c argument promotion?"}]}