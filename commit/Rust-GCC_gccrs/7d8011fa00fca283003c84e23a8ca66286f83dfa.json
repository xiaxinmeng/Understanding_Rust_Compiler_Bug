{"sha": "7d8011fa00fca283003c84e23a8ca66286f83dfa", "node_id": "C_kwDOANBUbNoAKDdkODAxMWZhMDBmY2EyODMwMDNjODRlMjNhOGNhNjYyODZmODNkZmE", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2022-01-06T04:58:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-11T22:49:51Z"}, "message": "Allow other languages to change long double format.\n\nWith Fortran adding support for changing the long double format, this\npatch removes the code that only allowed C/C++ to change the long double\nformat for GLIBC 2.32 and later without a warning.\n\ngcc/\n2022-01-05  Michael Meissner  <meissner@the-meissners.org>\n\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Remove\n\tchecks for only C/C++ front ends before allowing the long double\n\tformat to change without a warning.", "tree": {"sha": "9067bf2a828687347bec2006440753d020e55cd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9067bf2a828687347bec2006440753d020e55cd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d8011fa00fca283003c84e23a8ca66286f83dfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8011fa00fca283003c84e23a8ca66286f83dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d8011fa00fca283003c84e23a8ca66286f83dfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8011fa00fca283003c84e23a8ca66286f83dfa/comments", "author": null, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e73549f41831a7ff5d8e5f26e6068b09f5dcab3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73549f41831a7ff5d8e5f26e6068b09f5dcab3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e73549f41831a7ff5d8e5f26e6068b09f5dcab3b"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "7759f7579082eb35260a7bdf50c9ac8310e0f458", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8011fa00fca283003c84e23a8ca66286f83dfa/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8011fa00fca283003c84e23a8ca66286f83dfa/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=7d8011fa00fca283003c84e23a8ca66286f83dfa", "patch": "@@ -4221,13 +4221,11 @@ rs6000_option_override_internal (bool global_init_p)\n       if (rs6000_ieeequad != TARGET_IEEEQUAD_DEFAULT && TARGET_LONG_DOUBLE_128)\n \t{\n \t  /* Determine if the user can change the default long double type at\n-\t     compilation time.  Only C and C++ support this, and you need GLIBC\n-\t     2.32 or newer.  Only issue one warning.  */\n+\t     compilation time.  You need GLIBC 2.32 or newer to be able to\n+\t     change the long double type.  Only issue one warning.  */\n \t  static bool warned_change_long_double;\n \n-\t  if (!warned_change_long_double\n-\t      && (!glibc_supports_ieee_128bit ()\n-\t\t  || (!lang_GNU_C () && !lang_GNU_CXX ())))\n+\t  if (!warned_change_long_double && !glibc_supports_ieee_128bit ())\n \t    {\n \t      warned_change_long_double = true;\n \t      if (TARGET_IEEEQUAD)"}]}