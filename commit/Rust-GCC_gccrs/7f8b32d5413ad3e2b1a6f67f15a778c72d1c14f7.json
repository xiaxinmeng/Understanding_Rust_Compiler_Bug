{"sha": "7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y4YjMyZDU0MTNhZDNlMmIxYTZmNjdmMTVhNzc4YzcyZDFjMTRmNw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2008-04-08T06:55:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T06:55:36Z"}, "message": "s-stoele.ads, [...]: Move the location of Dummy_Communication_Block from System.Storage_Elements to...\n\n2008-04-08  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* s-stoele.ads, s-soflin.ads: Move the location of\n\tDummy_Communication_Block from System.Storage_Elements to\n\tSystem.Soft_Links.\n\n\t* s-tpobop.ads: Add comment on usage of Dummy_Communication_Block to\n\temulate Communication_Block in certain scenarios.\n\nFrom-SVN: r134051", "tree": {"sha": "02f65010ed4721d7ebd5051768f91745b7c17075", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02f65010ed4721d7ebd5051768f91745b7c17075"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc5c20afff6cfc1139d2fafbb671cfcf7339e633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc5c20afff6cfc1139d2fafbb671cfcf7339e633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc5c20afff6cfc1139d2fafbb671cfcf7339e633"}], "stats": {"total": 55, "additions": 32, "deletions": 23}, "files": [{"sha": "bc8bd1d609f9cf1f681650f887b0e74b7af3454c", "filename": "gcc/ada/s-soflin.ads", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7/gcc%2Fada%2Fs-soflin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7/gcc%2Fada%2Fs-soflin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.ads?ref=7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -381,4 +381,25 @@ package System.Soft_Links is\n \n    function Get_Exc_Stack_Addr_Soft return Address;\n \n+   --  The following is a dummy record designed to mimic Communication_Block as\n+   --  defined in s-tpobop.ads:\n+\n+   --     type Communication_Block is record\n+   --        Self      : Task_Id;  --  An access type\n+   --        Enqueued  : Boolean := True;\n+   --        Cancelled : Boolean := False;\n+   --     end record;\n+\n+   --  The record is used in the construction of the predefined dispatching\n+   --  primitive _disp_asynchronous_select in order to avoid the import of\n+   --  System.Tasking.Protected_Objects.Operations. Note that this package\n+   --  is always imported in the presence of interfaces since the dispatch\n+   --  table uses entities from here.\n+\n+   type Dummy_Communication_Block is record\n+      Comp_1 : Address;  --  Address and access have the same size\n+      Comp_2 : Boolean;\n+      Comp_3 : Boolean;\n+   end record;\n+\n end System.Soft_Links;"}, {"sha": "45871a5f3b491f82036ea58612b41ca985120eac", "filename": "gcc/ada/s-stoele.ads", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7/gcc%2Fada%2Fs-stoele.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7/gcc%2Fada%2Fs-stoele.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stoele.ads?ref=7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -122,25 +122,4 @@ package System.Storage_Elements is\n    pragma Inline_Always (To_Integer);\n    pragma Pure_Function (To_Integer);\n \n-   --  The following is a dummy record designed to mimic Communication_Block as\n-   --  defined in s-tpobop.ads:\n-\n-   --     type Communication_Block is record\n-   --        Self      : Task_Id;  --  An access type\n-   --        Enqueued  : Boolean := True;\n-   --        Cancelled : Boolean := False;\n-   --     end record;\n-\n-   --  The record is used in the construction of the predefined dispatching\n-   --  primitive _disp_asynchronous_select in order to avoid the import of\n-   --  System.Tasking.Protected_Objects.Operations. Note that this package\n-   --  is always imported in the presence of interfaces since the dispatch\n-   --  table uses entities from here.\n-\n-   type Dummy_Communication_Block is record\n-      Comp_1 : Address;  --  Address and access have the same size\n-      Comp_2 : Boolean;\n-      Comp_3 : Boolean;\n-   end record;\n-\n end System.Storage_Elements;"}, {"sha": "0e409aa7efa4e371099c21989f5e867e9a1e981a", "filename": "gcc/ada/s-tpobop.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7/gcc%2Fada%2Fs-tpobop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7/gcc%2Fada%2Fs-tpobop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.ads?ref=7f8b32d5413ad3e2b1a6f67f15a778c72d1c14f7", "patch": "@@ -198,6 +198,15 @@ private\n    end record;\n    pragma Volatile (Communication_Block);\n \n+   --  When a program contains limited interfaces, the compiler generates the\n+   --  predefined primitives associated with dispatching selects. One of the\n+   --  parameters of these routines is of type Communication_Block. Even if\n+   --  the program lacks implementing concurrent types, the tasking runtime is\n+   --  dragged in unconditionally because of Communication_Block. To avoid this\n+   --  case, the compiler uses type Dummy_Communication_Block which defined in\n+   --  System.Soft_Links. If the structure of Communication_Block is changed,\n+   --  the corresponding dummy type must be changed as well.\n+\n    --  The Communication_Block seems to be a relic. At the moment, the\n    --  compiler seems to be generating unnecessary conditional code based on\n    --  this block. See the code generated for async. select with task entry"}]}