{"sha": "5f78aa30e7f912d773c859f4cb43ae25b3280483", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY3OGFhMzBlN2Y5MTJkNzczYzg1OWY0Y2I0M2FlMjViMzI4MDQ4Mw==", "commit": {"author": {"name": "John Carr", "email": "jfc@mit.edu", "date": "1998-08-12T00:09:15Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1998-08-12T00:09:15Z"}, "message": "sparc.c: Change return <exp> to <exp>; return; in functions returning void.\n\n\t* sparc.c: Change return <exp> to <exp>; return; in functions\n \treturning void.\n\t* sparc.md: Add empty semicolon statement after final label in\n\tmove expanders.\n\nFrom-SVN: r21678", "tree": {"sha": "b61941227b690cd76365e087aa8e87744070a9c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b61941227b690cd76365e087aa8e87744070a9c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f78aa30e7f912d773c859f4cb43ae25b3280483", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f78aa30e7f912d773c859f4cb43ae25b3280483", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f78aa30e7f912d773c859f4cb43ae25b3280483", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f78aa30e7f912d773c859f4cb43ae25b3280483/comments", "author": {"login": "VoxSciurorum", "id": 60116679, "node_id": "MDQ6VXNlcjYwMTE2Njc5", "avatar_url": "https://avatars.githubusercontent.com/u/60116679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VoxSciurorum", "html_url": "https://github.com/VoxSciurorum", "followers_url": "https://api.github.com/users/VoxSciurorum/followers", "following_url": "https://api.github.com/users/VoxSciurorum/following{/other_user}", "gists_url": "https://api.github.com/users/VoxSciurorum/gists{/gist_id}", "starred_url": "https://api.github.com/users/VoxSciurorum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VoxSciurorum/subscriptions", "organizations_url": "https://api.github.com/users/VoxSciurorum/orgs", "repos_url": "https://api.github.com/users/VoxSciurorum/repos", "events_url": "https://api.github.com/users/VoxSciurorum/events{/privacy}", "received_events_url": "https://api.github.com/users/VoxSciurorum/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16cf811987ae3f713a00d42238cb76cc4326ad3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16cf811987ae3f713a00d42238cb76cc4326ad3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16cf811987ae3f713a00d42238cb76cc4326ad3a"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "7922056a63df82cfbecad3ad585a00e612c6ac25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f78aa30e7f912d773c859f4cb43ae25b3280483/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f78aa30e7f912d773c859f4cb43ae25b3280483/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f78aa30e7f912d773c859f4cb43ae25b3280483", "patch": "@@ -1,3 +1,10 @@\n+Tue Aug 11 23:02:31 1998  John Carr  <jfc@mit.edu>\n+\n+\t* sparc.c: Change return <exp> to <exp>; return; in functions\n+ \treturning void.\n+\t* sparc.md: Add empty semicolon statement after final label in\n+\tmove expanders.\n+\n Tue Aug 11 22:42:01 1998  David S. Miller  <davem@pierdol.cobaltmicro.com>\n \n \t* config/sparc/sparc.md (define_insn addx_extend): Rename to"}, {"sha": "fcf7f6fd3beccfca7e051d38bc67f6bd6fa58c5f", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f78aa30e7f912d773c859f4cb43ae25b3280483/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f78aa30e7f912d773c859f4cb43ae25b3280483/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=5f78aa30e7f912d773c859f4cb43ae25b3280483", "patch": "@@ -1586,7 +1586,8 @@ sparc_emit_set_const64 (op0, op1)\n \ttemp = op0;\n       else\n \ttemp = gen_reg_rtx (DImode);\n-      return sparc_emit_set_symbolic_const64 (op0, op1, temp);\n+      sparc_emit_set_symbolic_const64 (op0, op1, temp);\n+      return;\n     }\n \n   if (GET_CODE (op1) == CONST_DOUBLE)\n@@ -1716,8 +1717,11 @@ sparc_emit_set_const64 (op0, op1)\n    */\n   if (high_bits == 0\n       || high_bits == 0xffffffff)\n-    return sparc_emit_set_const64_quick1 (op0, temp, low_bits,\n-\t\t\t\t\t  (high_bits == 0xffffffff));\n+    {\n+      sparc_emit_set_const64_quick1 (op0, temp, low_bits,\n+\t\t\t\t     (high_bits == 0xffffffff));\n+      return;\n+    }\n \n   /* 1) sethi\t%hi(high_bits), %reg\n    *    or\t%reg, %lo(high_bits), %reg\n@@ -1726,7 +1730,10 @@ sparc_emit_set_const64 (op0, op1)\n   if (low_bits == 0\n       || (SPARC_SIMM13_P(low_bits)\n \t  && ((HOST_WIDE_INT)low_bits > 0)))\n-    return sparc_emit_set_const64_quick2 (op0, temp, high_bits, low_bits, 32);\n+    {\n+      sparc_emit_set_const64_quick2 (op0, temp, high_bits, low_bits, 32);\n+      return;\n+    }\n \n   /* Now, try 3-insn sequences.  But first we may be able to do something\n      quick when the constant is negated, so try that.  */\n@@ -1788,9 +1795,10 @@ sparc_emit_set_const64 (op0, op1)\n       if (hi & lo)\n \tabort();\n       focus_bits = (hi | lo);\n-      return sparc_emit_set_const64_quick2 (op0, temp,\n-\t\t\t\t\t    focus_bits, 0,\n-\t\t\t\t\t    lowest_bit_set);\n+      sparc_emit_set_const64_quick2 (op0, temp,\n+\t\t\t\t     focus_bits, 0,\n+\t\t\t\t     lowest_bit_set);\n+      return;\n     }\n \n   /* The easiest way when all else fails, is full decomposition. */"}, {"sha": "76918b6cb80a2020e958cd144907ab4ab62c7d23", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f78aa30e7f912d773c859f4cb43ae25b3280483/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f78aa30e7f912d773c859f4cb43ae25b3280483/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=5f78aa30e7f912d773c859f4cb43ae25b3280483", "patch": "@@ -1934,6 +1934,7 @@\n   /* All QI constants require only one insn, so proceed.  */\n \n  movqi_is_ok:\n+  ;\n }\")\n \n (define_insn \"*movqi_insn\"\n@@ -2002,6 +2003,7 @@\n       DONE;\n     }\n  movhi_is_ok:\n+  ;\n }\")\n \n (define_insn \"*movhi_insn\"\n@@ -2106,6 +2108,7 @@\n       DONE;\n     }\n  movsi_is_ok:\n+  ;\n }\")\n \n ;; Special LIVE_G0 pattern to obtain zero in a register.\n@@ -2290,6 +2293,7 @@\n     }\n \n  movdi_is_ok:\n+  ;\n }\")\n \n ;; Be careful, fmovd does not exist when !arch64.\n@@ -2764,6 +2768,7 @@\n     }\n \n  movsf_is_ok:\n+  ;\n }\")\n \n (define_insn \"*movsf_insn\"\n@@ -2849,6 +2854,7 @@\n     }\n \n  movdf_is_ok:\n+  ;\n }\")\n \n ;; Be careful, fmovd does not exist when !arch64.\n@@ -3072,7 +3078,8 @@\n \t}\n     }\n \n-movtf_is_ok:\n+ movtf_is_ok:\n+  ;\n }\")\n \n ;; Be careful, fmovq and {st,ld}{x,q} do not exist when !arch64 so"}]}