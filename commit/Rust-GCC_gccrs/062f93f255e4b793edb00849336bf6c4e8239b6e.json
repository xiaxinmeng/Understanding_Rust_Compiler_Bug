{"sha": "062f93f255e4b793edb00849336bf6c4e8239b6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYyZjkzZjI1NWU0Yjc5M2VkYjAwODQ5MzM2YmY2YzRlODIzOWI2ZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-11-30T22:29:33Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-11-30T22:29:33Z"}, "message": "Swap the action and jmpbuf arguments to GTM_longjmp\n\nOn several ABIs, the first register parameter is the same as\nthe return value register.  Moving the action parameter first\navoids the need for register shuffling on these targets.\n\n        * libitm_i.h (GTM_longjmp): Swap first and second arguments.\n        * beginend.c (_ITM_abortTransaction): Update to match.\n        (GTM::gtm_thread::restart): Likewise.\n        * config/alpha/sjlj.S (GTM_longjmp): Likewise.\n        * config/x86/sjlj.S (GTM_longjmp): Likewise.\n\nFrom-SVN: r181863", "tree": {"sha": "9f60b09cc1447fb54c59835052aa947c7643e8ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f60b09cc1447fb54c59835052aa947c7643e8ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/062f93f255e4b793edb00849336bf6c4e8239b6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062f93f255e4b793edb00849336bf6c4e8239b6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/062f93f255e4b793edb00849336bf6c4e8239b6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062f93f255e4b793edb00849336bf6c4e8239b6e/comments", "author": null, "committer": null, "parents": [{"sha": "c08472eaf611a76fa2545b5a45f32d274ac0d25d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c08472eaf611a76fa2545b5a45f32d274ac0d25d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c08472eaf611a76fa2545b5a45f32d274ac0d25d"}], "stats": {"total": 85, "additions": 46, "deletions": 39}, "files": [{"sha": "33584647bc8c76b31df31517989f6aa6a5490c3a", "filename": "libitm/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062f93f255e4b793edb00849336bf6c4e8239b6e/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062f93f255e4b793edb00849336bf6c4e8239b6e/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=062f93f255e4b793edb00849336bf6c4e8239b6e", "patch": "@@ -1,3 +1,11 @@\n+2011-11-30  Richard Henderson  <rth@redhat.com>\n+\n+\t* libitm_i.h (GTM_longjmp): Swap first and second arguments.\n+\t* beginend.c (_ITM_abortTransaction): Update to match.\n+\t(GTM::gtm_thread::restart): Likewise.\n+\t* config/alpha/sjlj.S (GTM_longjmp): Likewise.\n+\t* config/x86/sjlj.S (GTM_longjmp): Likewise.\n+\n 2011-11-23  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* Makefile.am (libitm_la_LDFLAGS): Remove \"-no-undefined\"."}, {"sha": "d8ef651236dda45bf011b5801ac7fcc370129ba2", "filename": "libitm/beginend.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062f93f255e4b793edb00849336bf6c4e8239b6e/libitm%2Fbeginend.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062f93f255e4b793edb00849336bf6c4e8239b6e/libitm%2Fbeginend.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fbeginend.cc?ref=062f93f255e4b793edb00849336bf6c4e8239b6e", "patch": "@@ -404,8 +404,8 @@ _ITM_abortTransaction (_ITM_abortReason reason)\n       tx->rollback (cp, true);\n \n       // Jump to nested transaction (use the saved jump buffer).\n-      GTM_longjmp (&longjmp_jb, a_abortTransaction | a_restoreLiveVariables,\n-\t  longjmp_prop);\n+      GTM_longjmp (a_abortTransaction | a_restoreLiveVariables,\n+\t\t   &longjmp_jb, longjmp_prop);\n     }\n   else\n     {\n@@ -421,8 +421,8 @@ _ITM_abortTransaction (_ITM_abortReason reason)\n \tgtm_thread::serial_lock.read_unlock (tx);\n       tx->state = 0;\n \n-      GTM_longjmp (&tx->jb, a_abortTransaction | a_restoreLiveVariables,\n-\t  tx->prop);\n+      GTM_longjmp (a_abortTransaction | a_restoreLiveVariables,\n+\t\t   &tx->jb, tx->prop);\n     }\n }\n \n@@ -512,8 +512,8 @@ GTM::gtm_thread::restart (gtm_restart_reason r)\n       disp = abi_disp();\n     }\n \n-  GTM_longjmp (&jb,\n-      choose_code_path(prop, disp) | a_restoreLiveVariables, prop);\n+  GTM_longjmp (choose_code_path(prop, disp) | a_restoreLiveVariables,\n+\t       &jb, prop);\n }\n \n void ITM_REGPARM"}, {"sha": "615eacb8688d22d3d0ccad95e0697d18748f0056", "filename": "libitm/config/alpha/sjlj.S", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062f93f255e4b793edb00849336bf6c4e8239b6e/libitm%2Fconfig%2Falpha%2Fsjlj.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062f93f255e4b793edb00849336bf6c4e8239b6e/libitm%2Fconfig%2Falpha%2Fsjlj.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Falpha%2Fsjlj.S?ref=062f93f255e4b793edb00849336bf6c4e8239b6e", "patch": "@@ -81,28 +81,28 @@ _ITM_beginTransaction:\n \n GTM_longjmp:\n \t.prologue 0\n-\tldq\t$26, 0($16)\n-\tldq\t$9, 8($16)\n-\tldq\t$10, 16($16)\n-\tldq\t$11, 24($16)\n-\n-\tldq\t$12, 32($16)\n-\tldq\t$13, 40($16)\n-\tldq\t$14, 48($16)\n-\tldq\t$15, 56($16)\n-\n-\tldq\t$1, 64($16)\n-\tldt\t$f2, 72($16)\n-\tldt\t$f3, 80($16)\n-\tldt\t$f4, 88($16)\n-\n-\tldt\t$f5, 96($16)\n-\tldt\t$f6, 104($16)\n-\tldt\t$f7, 112($16)\n-\tldt\t$f8, 120($16)\n-\n-\tldt\t$f9, 128($16)\n-\tmov\t$17, $0\n+\tldq\t$26, 0($17)\n+\tldq\t$9, 8($17)\n+\tldq\t$10, 16($17)\n+\tldq\t$11, 24($17)\n+\n+\tldq\t$12, 32($17)\n+\tldq\t$13, 40($17)\n+\tldq\t$14, 48($17)\n+\tldq\t$15, 56($17)\n+\n+\tldq\t$1, 64($17)\n+\tldt\t$f2, 72($17)\n+\tldt\t$f3, 80($17)\n+\tldt\t$f4, 88($17)\n+\n+\tldt\t$f5, 96($17)\n+\tldt\t$f6, 104($17)\n+\tldt\t$f7, 112($17)\n+\tldt\t$f8, 120($17)\n+\n+\tldt\t$f9, 128($17)\n+\tmov\t$16, $0\n \tmov\t$1, $30\n \tret\n .end GTM_longjmp"}, {"sha": "8faa0c61d5c2bbb34e7bbb1e65bb5f379b067259", "filename": "libitm/config/x86/sjlj.S", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062f93f255e4b793edb00849336bf6c4e8239b6e/libitm%2Fconfig%2Fx86%2Fsjlj.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062f93f255e4b793edb00849336bf6c4e8239b6e/libitm%2Fconfig%2Fx86%2Fsjlj.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Fx86%2Fsjlj.S?ref=062f93f255e4b793edb00849336bf6c4e8239b6e", "patch": "@@ -113,21 +113,20 @@ SYM(_ITM_beginTransaction):\n SYM(GTM_longjmp):\n \tcfi_startproc\n #ifdef __x86_64__\n-\tmovq\t(%rdi), %rcx\n-\tmovq\t8(%rdi), %rdx\n-\tmovq\t16(%rdi), %rbx\n-\tmovq\t24(%rdi), %rbp\n-\tmovq\t32(%rdi), %r12\n-\tmovq\t40(%rdi), %r13\n-\tmovq\t48(%rdi), %r14\n-\tmovq\t56(%rdi), %r15\n-\tmovl\t%esi, %eax\n+\tmovq\t(%rsi), %rcx\n+\tmovq\t8(%rsi), %rdx\n+\tmovq\t16(%rsi), %rbx\n+\tmovq\t24(%rsi), %rbp\n+\tmovq\t32(%rsi), %r12\n+\tmovq\t40(%rsi), %r13\n+\tmovq\t48(%rsi), %r14\n+\tmovq\t56(%rsi), %r15\n+\tmovl\t%edi, %eax\n \tcfi_def_cfa(%rcx, 0)\n \tcfi_register(%rip, %rdx)\n \tmovq\t%rcx, %rsp\n \tjmp\t*%rdx\n #else\n-\txchgl\t%eax, %edx\n \tmovl\t(%edx), %ecx\n \tmovl\t4(%edx), %ebx\n \tmovl\t8(%edx), %esi"}, {"sha": "ff6884e88051497045462f81737d160d093bf600", "filename": "libitm/libitm_i.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062f93f255e4b793edb00849336bf6c4e8239b6e/libitm%2Flibitm_i.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062f93f255e4b793edb00849336bf6c4e8239b6e/libitm%2Flibitm_i.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Flibitm_i.h?ref=062f93f255e4b793edb00849336bf6c4e8239b6e", "patch": "@@ -285,7 +285,7 @@ namespace GTM HIDDEN {\n // are used.\n extern uint64_t gtm_spin_count_var;\n \n-extern \"C\" uint32_t GTM_longjmp (const gtm_jmpbuf *, uint32_t, uint32_t)\n+extern \"C\" uint32_t GTM_longjmp (uint32_t, const gtm_jmpbuf *, uint32_t)\n \tITM_NORETURN ITM_REGPARM;\n \n extern \"C\" void GTM_LB (const void *, size_t) ITM_REGPARM;"}]}