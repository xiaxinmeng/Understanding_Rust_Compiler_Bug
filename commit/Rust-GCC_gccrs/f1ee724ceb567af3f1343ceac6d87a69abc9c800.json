{"sha": "f1ee724ceb567af3f1343ceac6d87a69abc9c800", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFlZTcyNGNlYjU2N2FmM2YxMzQzY2VhYzZkODdhNjlhYmM5YzgwMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-06-21T06:27:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-06-21T06:27:35Z"}, "message": "Makefile.in (dg_target_exps): Set.\n\n\t* Makefile.in (dg_target_exps): Set.\n\t(check_gcc_parallelize): Parallelize gcc testing into 10 jobs\n\tinstead of 7, try to divide it more evenly.\n\n\t* Make-lang.in (check_gfortran_parallelize): Parallelize dg.exp\n\tinto 6 jobs instead of 3.\n\n\t* testsuite/Makefile.am (check_DEJAGNU_normal_targets): Add\n\tcheck-DEJAGNUnormal[4-9].\n\t(check-DEJAGNU): Split into 10 jobs for parallel testing instead of 4.\n\t* testsuite/Makefile.in: Regenerated.\n\nFrom-SVN: r175238", "tree": {"sha": "c3973b6b3e99b447cc2a9a28e7b8f9d250c188d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3973b6b3e99b447cc2a9a28e7b8f9d250c188d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1ee724ceb567af3f1343ceac6d87a69abc9c800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ee724ceb567af3f1343ceac6d87a69abc9c800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1ee724ceb567af3f1343ceac6d87a69abc9c800", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ee724ceb567af3f1343ceac6d87a69abc9c800/comments", "author": null, "committer": null, "parents": [{"sha": "fe7eb484d309fefb7366b3838900e632da9dd234", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7eb484d309fefb7366b3838900e632da9dd234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe7eb484d309fefb7366b3838900e632da9dd234"}], "stats": {"total": 115, "additions": 79, "deletions": 36}, "files": [{"sha": "9a279735bac6da33bed8671eab4ac52132bafe7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1ee724ceb567af3f1343ceac6d87a69abc9c800/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1ee724ceb567af3f1343ceac6d87a69abc9c800/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1ee724ceb567af3f1343ceac6d87a69abc9c800", "patch": "@@ -1,4 +1,10 @@\n-2011-06-20  Changpeng Fang <changpeng.fang@amd.com>\n+2011-06-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Makefile.in (dg_target_exps): Set.\n+\t(check_gcc_parallelize): Parallelize gcc testing into 10 jobs\n+\tinstead of 7, try to divide it more evenly.\n+\n+2011-06-20  Changpeng Fang  <changpeng.fang@amd.com>\n \n         PR i386/49089\n \t* config/i386/i386.c (avx256_split_unaligned_load): New definition."}, {"sha": "9a4954b753146c6bddc6ff2ec96228a67a1be516", "filename": "gcc/Makefile.in", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1ee724ceb567af3f1343ceac6d87a69abc9c800/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1ee724ceb567af3f1343ceac6d87a69abc9c800/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f1ee724ceb567af3f1343ceac6d87a69abc9c800", "patch": "@@ -501,6 +501,10 @@ xm_include_list=@xm_include_list@\n xm_defines=@xm_defines@\n lang_checks=check-gcc\n lang_checks_parallelized=check-gcc\n+dg_target_exps:=alpha.exp,arm.exp,avr.exp,bfin.exp,cris.exp,frv.exp\n+dg_target_exps:=$(dg_target_exps),i386.exp,ia64.exp,m68k.exp,microblaze.exp\n+dg_target_exps:=$(dg_target_exps),mips.exp,powerpc.exp,rx.exp,s390.exp,sh.exp\n+dg_target_exps:=$(dg_target_exps),sparc.exp,spu.exp,xstormy16.exp\n # This lists a couple of test files that take most time during check-gcc.\n # When doing parallelized check-gcc, these can run in parallel with the\n # remaining tests.  Each word in this variable stands for work for one\n@@ -514,10 +518,14 @@ lang_checks_parallelized=check-gcc\n # */ prefixed to it in runtest_file_p, it is usually desirable to include\n # a subdirectory name.\n check_gcc_parallelize=execute.exp=execute/2* \\\n-\t\t      execute.exp=execute/\\[013-9a-zA-Z\\]* \\\n-\t\t      compile.exp dg.exp \\\n-\t\t      dg-torture.exp,builtins.exp \\\n-\t\t      struct-layout-1.exp,unsorted.exp,stackalign.exp,i386.exp\n+\t\t      execute.exp=execute/\\[013-9a-fA-F\\]* \\\n+\t\t      execute.exp=execute/\\[pP\\]*,dg.exp \\\n+\t\t      execute.exp=execute/\\[g-oq-zG-OQ-Z\\]*,compile.exp=compile/2* \\\n+\t\t      compile.exp=compile/\\[9pP\\]*,builtins.exp \\\n+\t\t      compile.exp=compile/\\[013-8a-oq-zA-OQ-Z\\]* \\\n+\t\t      dg-torture.exp,ieee.exp \\\n+\t\t      vect.exp,guality.exp,unsorted.exp \\\n+\t\t      struct-layout-1.exp,stackalign.exp,$(dg_target_exps)\n lang_opt_files=@lang_opt_files@ $(srcdir)/c-family/c.opt $(srcdir)/common.opt\n lang_specs_files=@lang_specs_files@\n lang_tree_files=@lang_tree_files@"}, {"sha": "a56a1f0da8e8e64c1ae1ba61927383930761fa18", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1ee724ceb567af3f1343ceac6d87a69abc9c800/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1ee724ceb567af3f1343ceac6d87a69abc9c800/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=f1ee724ceb567af3f1343ceac6d87a69abc9c800", "patch": "@@ -171,9 +171,12 @@ check-fortran-subtargets : check-gfortran-subtargets\n lang_checks += check-gfortran\n lang_checks_parallelized += check-gfortran\n # For description see comment above check_gcc_parallelize in gcc/Makefile.in.\n-check_gfortran_parallelize = dg.exp=gfortran.dg/\\[a-cA-C\\]* \\\n-\t\t\t     dg.exp=gfortran.dg/\\[d-mD-M\\]* \\\n-\t\t\t     dg.exp=gfortran.dg/\\[n-zN-Z0-9\\]*\n+check_gfortran_parallelize = dg.exp=gfortran.dg/\\[adAD\\]* \\\n+\t\t\t     dg.exp=gfortran.dg/\\[bcBC\\]* \\\n+\t\t\t     dg.exp=gfortran.dg/\\[nopNOP\\]* \\\n+\t\t\t     dg.exp=gfortran.dg/\\[isuvISUV\\]* \\\n+\t\t\t     dg.exp=gfortran.dg/\\[efhkqrxzEFHKQRXZ\\]* \\\n+\t\t\t     dg.exp=gfortran.dg/\\[0-9gjlmtwyGJLMTWY\\]*\n \n # GFORTRAN documentation.\n GFORTRAN_TEXI = \\"}, {"sha": "14112a49d7deba467fd5f55188bde2e13b0f128d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1ee724ceb567af3f1343ceac6d87a69abc9c800/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1ee724ceb567af3f1343ceac6d87a69abc9c800/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f1ee724ceb567af3f1343ceac6d87a69abc9c800", "patch": "@@ -1,3 +1,8 @@\n+2011-06-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Make-lang.in (check_gfortran_parallelize): Parallelize dg.exp\n+\tinto 6 jobs instead of 3.\n+\n 2011-06-20  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/49216"}, {"sha": "77a5403ddbcb3f4787ebe3f87e5a6881b5988fe6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1ee724ceb567af3f1343ceac6d87a69abc9c800/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1ee724ceb567af3f1343ceac6d87a69abc9c800/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f1ee724ceb567af3f1343ceac6d87a69abc9c800", "patch": "@@ -1,3 +1,10 @@\n+2011-06-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/Makefile.am (check_DEJAGNU_normal_targets): Add\n+\tcheck-DEJAGNUnormal[4-9].\n+\t(check-DEJAGNU): Split into 10 jobs for parallel testing instead of 4.\n+\t* testsuite/Makefile.in: Regenerated.\n+\n 2011-06-20  Daniel Krugler  <daniel.kruegler@googlemail.com>\n \t    Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "792c8313050d7d562706b7547825a9c6658806b7", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1ee724ceb567af3f1343ceac6d87a69abc9c800/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1ee724ceb567af3f1343ceac6d87a69abc9c800/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=f1ee724ceb567af3f1343ceac6d87a69abc9c800", "patch": "@@ -100,7 +100,7 @@ new-abi-baseline:\n \t@test ! -f $*/site.exp || mv $*/site.exp $*/site.bak\n \t@mv $*/site.exp.tmp $*/site.exp\n \n-check_DEJAGNU_normal_targets = $(patsubst %,check-DEJAGNUnormal%,0 1 2 3)\n+check_DEJAGNU_normal_targets = $(patsubst %,check-DEJAGNUnormal%,0 1 2 3 4 5 6 7 8 9)\n $(check_DEJAGNU_normal_targets): check-DEJAGNUnormal%: normal%/site.exp\n \n # Run the testsuite in normal mode.\n@@ -109,22 +109,17 @@ check-DEJAGNU $(check_DEJAGNU_normal_targets): check-DEJAGNU%: site.exp\n \tRANLIB=\"$(RANLIB)\"; export RANLIB; \\\n \tif [ -z \"$*$(filter-out --target_board=%, $(RUNTESTFLAGS))\" ] \\\n \t    && [ \"$(filter -j, $(MFLAGS))\" = \"-j\" ]; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) check-DEJAGNUnormal0 check-DEJAGNUnormal1 \\\n-\t\t  check-DEJAGNUnormal2 check-DEJAGNUnormal3; \\\n-\t  for idx in 0 1 2 3; do \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) $(check_DEJAGNU_normal_targets); \\\n+\t  for idx in 0 1 2 3 4 5 6 7 8 9; do \\\n \t    mv -f normal$$idx/libstdc++.sum normal$$idx/libstdc++.sum.sep; \\\n \t    mv -f normal$$idx/libstdc++.log normal$$idx/libstdc++.log.sep; \\\n \t  done; \\\n \t  mv -f libstdc++.sum libstdc++.sum.sep; \\\n \t  mv -f libstdc++.log libstdc++.log.sep; \\\n \t  $(SHELL) $(srcdir)/../../contrib/dg-extract-results.sh \\\n-\t    libstdc++.sum.sep normal0/libstdc++.sum.sep \\\n-\t    normal1/libstdc++.sum.sep normal2/libstdc++.sum.sep \\\n-\t    normal3/libstdc++.sum.sep > libstdc++.sum; \\\n+\t    libstdc++.sum.sep normal[0-9]/libstdc++.sum.sep > libstdc++.sum; \\\n \t  $(SHELL) $(srcdir)/../../contrib/dg-extract-results.sh -L \\\n-\t    libstdc++.log.sep normal0/libstdc++.log.sep \\\n-\t    normal1/libstdc++.log.sep normal2/libstdc++.log.sep \\\n-\t    normal3/libstdc++.log.sep > libstdc++.log; \\\n+\t    libstdc++.log.sep normal[0-9]/libstdc++.log.sep > libstdc++.log; \\\n \t  exit 0; \\\n \tfi; \\\n \tsrcdir=`$(am__cd) $(srcdir) && pwd`; export srcdir; \\\n@@ -140,13 +135,25 @@ check-DEJAGNU $(check_DEJAGNU_normal_targets): check-DEJAGNU%: site.exp\n \t\t\t$(RUNTESTFLAGS) abi.exp; \\\n \t    else echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n \t    fi; \\\n-\t    dirs=\"`cd $$srcdir; echo [013-9][0-9]_*/* [ab]* de* [ep]*/*`\";; \\\n+\t    dirs=\"`cd $$srcdir; echo [013-9][0-9]_*/*`\";; \\\n \t  normal1) \\\n-\t    dirs=\"`cd $$srcdir; echo 2[0-2]_*/*`\";; \\\n+\t    dirs=\"`cd $$srcdir; echo [ab]* de* [ep]*/*`\";; \\\n \t  normal2) \\\n-\t    dirs=\"`cd $$srcdir; echo 2[4-9]_*/*`\";; \\\n+\t    dirs=\"`cd $$srcdir; echo 2[01]_*/*`\";; \\\n \t  normal3) \\\n-\t    dirs=\"`cd $$srcdir; echo 23_*/* t*/*`\";; \\\n+\t    dirs=\"`cd $$srcdir; echo 22_*/*`\";; \\\n+\t  normal4) \\\n+\t    dirs=\"`cd $$srcdir; echo 23_*/[a-km-tw-z]*`\";; \\\n+\t  normal5) \\\n+\t    dirs=\"`cd $$srcdir; echo 23_*/[luv]*`\";; \\\n+\t  normal6) \\\n+\t    dirs=\"`cd $$srcdir; echo 2[459]_*/*`\";; \\\n+\t  normal7) \\\n+\t    dirs=\"`cd $$srcdir; echo 2[68]_*/*`\";; \\\n+\t  normal8) \\\n+\t    dirs=\"`cd $$srcdir; echo 27_*/*`\";; \\\n+\t  normal9) \\\n+\t    dirs=\"`cd $$srcdir; echo t*/*`\";; \\\n \tesac; \\\n \tif [ -n \"$*\" ]; then cd \"$*\"; fi; \\\n \tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\"}, {"sha": "a76772e60c5e313d9e8d63a8e91762c022b896fe", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1ee724ceb567af3f1343ceac6d87a69abc9c800/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1ee724ceb567af3f1343ceac6d87a69abc9c800/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=f1ee724ceb567af3f1343ceac6d87a69abc9c800", "patch": "@@ -287,7 +287,7 @@ lists_of_files = \\\n \n extract_symvers = $(glibcxx_builddir)/scripts/extract_symvers\n baseline_subdir := $(shell $(CXX) --print-multi-dir)\n-check_DEJAGNU_normal_targets = $(patsubst %,check-DEJAGNUnormal%,0 1 2 3)\n+check_DEJAGNU_normal_targets = $(patsubst %,check-DEJAGNUnormal%,0 1 2 3 4 5 6 7 8 9)\n \n # Runs the testsuite, but in compile only mode.\n # Can be used to test sources with non-GNU FE's at various warning\n@@ -545,22 +545,17 @@ check-DEJAGNU $(check_DEJAGNU_normal_targets): check-DEJAGNU%: site.exp\n \tRANLIB=\"$(RANLIB)\"; export RANLIB; \\\n \tif [ -z \"$*$(filter-out --target_board=%, $(RUNTESTFLAGS))\" ] \\\n \t    && [ \"$(filter -j, $(MFLAGS))\" = \"-j\" ]; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) check-DEJAGNUnormal0 check-DEJAGNUnormal1 \\\n-\t\t  check-DEJAGNUnormal2 check-DEJAGNUnormal3; \\\n-\t  for idx in 0 1 2 3; do \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) $(check_DEJAGNU_normal_targets); \\\n+\t  for idx in 0 1 2 3 4 5 6 7 8 9; do \\\n \t    mv -f normal$$idx/libstdc++.sum normal$$idx/libstdc++.sum.sep; \\\n \t    mv -f normal$$idx/libstdc++.log normal$$idx/libstdc++.log.sep; \\\n \t  done; \\\n \t  mv -f libstdc++.sum libstdc++.sum.sep; \\\n \t  mv -f libstdc++.log libstdc++.log.sep; \\\n \t  $(SHELL) $(srcdir)/../../contrib/dg-extract-results.sh \\\n-\t    libstdc++.sum.sep normal0/libstdc++.sum.sep \\\n-\t    normal1/libstdc++.sum.sep normal2/libstdc++.sum.sep \\\n-\t    normal3/libstdc++.sum.sep > libstdc++.sum; \\\n+\t    libstdc++.sum.sep normal[0-9]/libstdc++.sum.sep > libstdc++.sum; \\\n \t  $(SHELL) $(srcdir)/../../contrib/dg-extract-results.sh -L \\\n-\t    libstdc++.log.sep normal0/libstdc++.log.sep \\\n-\t    normal1/libstdc++.log.sep normal2/libstdc++.log.sep \\\n-\t    normal3/libstdc++.log.sep > libstdc++.log; \\\n+\t    libstdc++.log.sep normal[0-9]/libstdc++.log.sep > libstdc++.log; \\\n \t  exit 0; \\\n \tfi; \\\n \tsrcdir=`$(am__cd) $(srcdir) && pwd`; export srcdir; \\\n@@ -576,13 +571,25 @@ check-DEJAGNU $(check_DEJAGNU_normal_targets): check-DEJAGNU%: site.exp\n \t\t\t$(RUNTESTFLAGS) abi.exp; \\\n \t    else echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n \t    fi; \\\n-\t    dirs=\"`cd $$srcdir; echo [013-9][0-9]_*/* [ab]* de* [ep]*/*`\";; \\\n+\t    dirs=\"`cd $$srcdir; echo [013-9][0-9]_*/*`\";; \\\n \t  normal1) \\\n-\t    dirs=\"`cd $$srcdir; echo 2[0-2]_*/*`\";; \\\n+\t    dirs=\"`cd $$srcdir; echo [ab]* de* [ep]*/*`\";; \\\n \t  normal2) \\\n-\t    dirs=\"`cd $$srcdir; echo 2[4-9]_*/*`\";; \\\n+\t    dirs=\"`cd $$srcdir; echo 2[01]_*/*`\";; \\\n \t  normal3) \\\n-\t    dirs=\"`cd $$srcdir; echo 23_*/* t*/*`\";; \\\n+\t    dirs=\"`cd $$srcdir; echo 22_*/*`\";; \\\n+\t  normal4) \\\n+\t    dirs=\"`cd $$srcdir; echo 23_*/[a-km-tw-z]*`\";; \\\n+\t  normal5) \\\n+\t    dirs=\"`cd $$srcdir; echo 23_*/[luv]*`\";; \\\n+\t  normal6) \\\n+\t    dirs=\"`cd $$srcdir; echo 2[459]_*/*`\";; \\\n+\t  normal7) \\\n+\t    dirs=\"`cd $$srcdir; echo 2[68]_*/*`\";; \\\n+\t  normal8) \\\n+\t    dirs=\"`cd $$srcdir; echo 27_*/*`\";; \\\n+\t  normal9) \\\n+\t    dirs=\"`cd $$srcdir; echo t*/*`\";; \\\n \tesac; \\\n \tif [ -n \"$*\" ]; then cd \"$*\"; fi; \\\n \tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\"}]}