{"sha": "a9772b60f3716f6f82d695bd0fc0300b87ca0b89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk3NzJiNjBmMzcxNmY2ZjgyZDY5NWJkMGZjMDMwMGI4N2NhMGI4OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-04-16T06:09:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-04-16T06:09:39Z"}, "message": "re PR middle-end/6279 (gcc-3.1 miscompiles qmake on IA-64)\n\n\tPR middle-end/6279\n\t* expr.c (store_expr): Don't copy if DECL_RTL (exp) == target.\n\n\t* expr.c (safe_from_p): Cleanup: use DECL_RTL_IF_SET.\n\nFrom-SVN: r52356", "tree": {"sha": "b073fded453a1e3b898f1d4fb78e2e1cb3506b84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b073fded453a1e3b898f1d4fb78e2e1cb3506b84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9772b60f3716f6f82d695bd0fc0300b87ca0b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9772b60f3716f6f82d695bd0fc0300b87ca0b89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9772b60f3716f6f82d695bd0fc0300b87ca0b89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9772b60f3716f6f82d695bd0fc0300b87ca0b89/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f2680051d915c63fa287f9cbdcf666d62b836af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f2680051d915c63fa287f9cbdcf666d62b836af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f2680051d915c63fa287f9cbdcf666d62b836af"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "6fc0b2454dc5456faa64267cda53bbdf96459325", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9772b60f3716f6f82d695bd0fc0300b87ca0b89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9772b60f3716f6f82d695bd0fc0300b87ca0b89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9772b60f3716f6f82d695bd0fc0300b87ca0b89", "patch": "@@ -1,3 +1,10 @@\n+2002-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/6279\n+\t* expr.c (store_expr): Don't copy if DECL_RTL (exp) == target.\n+\n+\t* expr.c (safe_from_p): Cleanup: use DECL_RTL_IF_SET.\n+\n 2002-04-15  Richard Henderson  <rth@redhat.com>\n \n \t* config/mips/abi64.h (SUBTARGET_CONDITIONAL_REGISTER_USAGE): Set"}, {"sha": "55002afc58f6df6d5795e9b49fd8e15732f62e34", "filename": "gcc/expr.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9772b60f3716f6f82d695bd0fc0300b87ca0b89/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9772b60f3716f6f82d695bd0fc0300b87ca0b89/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=a9772b60f3716f6f82d695bd0fc0300b87ca0b89", "patch": "@@ -4125,7 +4125,12 @@ store_expr (exp, target, want_value)\n        || (temp != target && (side_effects_p (temp)\n \t\t\t      || side_effects_p (target))))\n       && TREE_CODE (exp) != ERROR_MARK\n-      && ! dont_store_target)\n+      && ! dont_store_target\n+\t /* If store_expr stores a DECL whose DECL_RTL(exp) == TARGET,\n+\t    but TARGET is not valid memory reference, TEMP will differ\n+\t    from TARGET although it is really the same location.  */\n+      && (TREE_CODE_CLASS (TREE_CODE (exp)) != 'd'\n+\t  || target != DECL_RTL_IF_SET (exp)))\n     {\n       target = protect_from_queue (target, 1);\n       if (GET_MODE (temp) != GET_MODE (target)\n@@ -5598,7 +5603,7 @@ safe_from_p (x, exp, top_p)\n   switch (TREE_CODE_CLASS (TREE_CODE (exp)))\n     {\n     case 'd':\n-      exp_rtl = DECL_RTL_SET_P (exp) ? DECL_RTL (exp) : NULL_RTX;\n+      exp_rtl = DECL_RTL_IF_SET (exp);\n       break;\n \n     case 'c':"}]}