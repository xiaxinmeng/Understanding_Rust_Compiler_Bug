{"sha": "e88e0907bd713ba3f9b3ebc952dab17b86588f44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg4ZTA5MDdiZDcxM2JhM2Y5YjNlYmM5NTJkYWIxN2I4NjU4OGY0NA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@st.com", "date": "2006-08-25T18:51:57Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2006-08-25T18:51:57Z"}, "message": "re PR tree-optimization/16876 (ICE on testcase with -O3 in fold-const)\n\ngcc:\n\tPR tree-optimization/16876\n\t* c-typeck.c (c_convert_parm_for_inlining): Don't take early\n\texit if PARM doesn't match VALUE.\n\ntestsuite:\n\tgcc.dg/noncompile/pr16876.c: New test.\n\nFrom-SVN: r116424", "tree": {"sha": "eed397adf865113ef36920dec15715a8ad02e926", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eed397adf865113ef36920dec15715a8ad02e926"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e88e0907bd713ba3f9b3ebc952dab17b86588f44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e88e0907bd713ba3f9b3ebc952dab17b86588f44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e88e0907bd713ba3f9b3ebc952dab17b86588f44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e88e0907bd713ba3f9b3ebc952dab17b86588f44/comments", "author": null, "committer": null, "parents": [{"sha": "d718b7aae71d3d8b46c09a499a9c669a58f2af1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d718b7aae71d3d8b46c09a499a9c669a58f2af1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d718b7aae71d3d8b46c09a499a9c669a58f2af1f"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "987e7c29c366f4b0dfe5aac286a09f834a81919d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e88e0907bd713ba3f9b3ebc952dab17b86588f44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e88e0907bd713ba3f9b3ebc952dab17b86588f44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e88e0907bd713ba3f9b3ebc952dab17b86588f44", "patch": "@@ -1,3 +1,9 @@\n+2006-08-25  J\"orn Rennecke  <joern.rennecke@st.com>\n+\n+\tPR tree-optimization/16876\n+\t* c-typeck.c (c_convert_parm_for_inlining): Don't take early\n+\texit if PARM doesn't match VALUE.\n+\n 2006-08-25  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/xtensa.h (ASM_OUTPUT_POOL_PROLOGUE): Do not emit a"}, {"sha": "42e01d2af5298e9abebdc8fd3af9419dbd462fa1", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e88e0907bd713ba3f9b3ebc952dab17b86588f44/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e88e0907bd713ba3f9b3ebc952dab17b86588f44/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=e88e0907bd713ba3f9b3ebc952dab17b86588f44", "patch": "@@ -4243,17 +4243,23 @@ convert_for_assignment (tree type, tree rhs, enum impl_conv errtype,\n }\n \n /* Convert VALUE for assignment into inlined parameter PARM.  ARGNUM\n-   is used for error and waring reporting and indicates which argument\n+   is used for error and warning reporting and indicates which argument\n    is being processed.  */\n \n tree\n c_convert_parm_for_inlining (tree parm, tree value, tree fn, int argnum)\n {\n   tree ret, type;\n \n-  /* If FN was prototyped, the value has been converted already\n-     in convert_arguments.  */\n-  if (!value || TYPE_ARG_TYPES (TREE_TYPE (fn)))\n+  /* If FN was prototyped at the call site, the value has been converted\n+     already in convert_arguments.\n+     However, we might see a prototype now that was not in place when\n+     the function call was seen, so check that the VALUE actually matches\n+     PARM before taking an early exit.  */\n+  if (!value\n+      || (TYPE_ARG_TYPES (TREE_TYPE (fn))\n+\t  && (TYPE_MAIN_VARIANT (TREE_TYPE (parm))\n+\t      == TYPE_MAIN_VARIANT (TREE_TYPE (value)))))\n     return value;\n \n   type = TREE_TYPE (parm);"}, {"sha": "8b2850a34e009ddc93a3333cb7f16904a20f1d96", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e88e0907bd713ba3f9b3ebc952dab17b86588f44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e88e0907bd713ba3f9b3ebc952dab17b86588f44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e88e0907bd713ba3f9b3ebc952dab17b86588f44", "patch": "@@ -1,3 +1,7 @@\n+2006-08-25  J\"orn Rennecke  <joern.rennecke@st.com>\n+\n+\tgcc.dg/noncompile/pr16876.c: New test.\n+\n 2006-08-25  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/28056"}, {"sha": "9587849b2fcbf8001cdbf6ffb514e112ca006037", "filename": "gcc/testsuite/gcc.dg/noncompile/pr16876.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e88e0907bd713ba3f9b3ebc952dab17b86588f44/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fpr16876.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e88e0907bd713ba3f9b3ebc952dab17b86588f44/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fpr16876.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fpr16876.c?ref=e88e0907bd713ba3f9b3ebc952dab17b86588f44", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-options \"-O -finline-functions\" } */\n+\n+static void g();\n+struct bigstack {\n+   char space[4096];\n+};\n+\n+\n+void f() {\n+    g(0); /* { dg-error \"incompatible type for argument 1 of 'g'\" } */\n+}\n+\n+static void g(struct bigstack bstack) {\n+     g(bstack);\n+}"}]}