{"sha": "adc876a84080bb10955ca83601b9fb3ebe2f44fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRjODc2YTg0MDgwYmIxMDk1NWNhODM2MDFiOWZiM2ViZTJmNDRmYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-20T14:22:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-20T14:22:09Z"}, "message": "[multiple changes]\n\n2014-10-20  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, prj-proc.adb, sem_ch4.adb, prj-env.adb, lib.ads,\n\tsem_ch13.adb: Minor reformatting.\n\n2014-10-20  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): Expand the\n\tdeclaration of a class-wide limited object containing an\n\tinitializing expression into a renaming declaration.  Required to\n\tavoid passing such declaration to the backend and also to avoid\n\tgenerating an extra copy.\n\nFrom-SVN: r216475", "tree": {"sha": "8c44fe9faf3f2df798c5e4ff6c10a63d82527694", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c44fe9faf3f2df798c5e4ff6c10a63d82527694"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adc876a84080bb10955ca83601b9fb3ebe2f44fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc876a84080bb10955ca83601b9fb3ebe2f44fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adc876a84080bb10955ca83601b9fb3ebe2f44fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc876a84080bb10955ca83601b9fb3ebe2f44fb/comments", "author": null, "committer": null, "parents": [{"sha": "1725676d08348f92dd1297cf79365ca69c759f31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1725676d08348f92dd1297cf79365ca69c759f31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1725676d08348f92dd1297cf79365ca69c759f31"}], "stats": {"total": 107, "additions": 72, "deletions": 35}, "files": [{"sha": "3939bafd83073e29bbd563fd117aa1966b7a9ac8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=adc876a84080bb10955ca83601b9fb3ebe2f44fb", "patch": "@@ -1,3 +1,16 @@\n+2014-10-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, prj-proc.adb, sem_ch4.adb, prj-env.adb, lib.ads,\n+\tsem_ch13.adb: Minor reformatting.\n+\n+2014-10-20  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): Expand the\n+\tdeclaration of a class-wide limited object containing an\n+\tinitializing expression into a renaming declaration.  Required to\n+\tavoid passing such declaration to the backend and also to avoid\n+\tgenerating an extra copy.\n+\n 2014-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* inline.adb (List_Inlining_Info): Minor tweaks."}, {"sha": "330e168425afc7edab7f6d9e97297c003d802bc7", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=adc876a84080bb10955ca83601b9fb3ebe2f44fb", "patch": "@@ -5875,6 +5875,29 @@ package body Exp_Ch3 is\n                Set_Expression (N, Empty);\n                return;\n \n+            --  Handle initialization of limited tagged types\n+\n+            elsif Is_Tagged_Type (Typ)\n+              and then Is_Class_Wide_Type (Typ)\n+              and then Is_Limited_Record (Typ)\n+            then\n+               --  Given that the type is limited we cannot perform a copy. If\n+               --  Expr_Q is the reference to a variable we mark the variable\n+               --  as OK_To_Rename to expand this declaration into a renaming\n+               --  declaration (see bellow).\n+\n+               if Is_Entity_Name (Expr_Q) then\n+                  Set_OK_To_Rename (Entity (Expr_Q));\n+\n+               --  If we cannot convert the expression into a renaming we must\n+               --  consider it an internal error because the backend does not\n+               --  have support to handle it.\n+\n+               else\n+                  pragma Assert (False);\n+                  raise Program_Error;\n+               end if;\n+\n             --  For discrete types, set the Is_Known_Valid flag if the\n             --  initializing value is known to be valid. Only do this for\n             --  source assignments, since otherwise we can end up turning"}, {"sha": "5bbd4119f2d0708bbe584de20b3e48da3119988a", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=adc876a84080bb10955ca83601b9fb3ebe2f44fb", "patch": "@@ -750,6 +750,8 @@ private\n    pragma Inline (Unit_File_Name);\n    pragma Inline (Unit_Name);\n \n+   --  The Units Table\n+\n    type Unit_Record is record\n       Unit_File_Name    : File_Name_Type;\n       Unit_Name         : Unit_Name_Type;"}, {"sha": "b6bb25fcbf8666949f96c95361b03ffafef274df", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=adc876a84080bb10955ca83601b9fb3ebe2f44fb", "patch": "@@ -1425,10 +1425,8 @@ package body Prj.Env is\n      (Self : Project_Search_Path;\n       Name : String) return String_Access\n    is\n-\n-      function Find_Rts_In_Path is new Prj.Env.Find_Name_In_Path\n-        (Check_Filename => Is_Directory);\n-\n+      function Find_Rts_In_Path is\n+        new Prj.Env.Find_Name_In_Path (Check_Filename => Is_Directory);\n    begin\n       return Find_Rts_In_Path (Self, Name);\n    end Get_Runtime_Path;"}, {"sha": "2b865a27fd730e9d6011aff3798cbf720800ac39", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=adc876a84080bb10955ca83601b9fb3ebe2f44fb", "patch": "@@ -909,6 +909,7 @@ package body Prj.Proc is\n \n                         elsif The_Variable.Default then\n                            case The_Variable.Kind is\n+\n                            when Undefined =>\n                               null;\n "}, {"sha": "211d9675681f596ea7d5f4cc2891b57f060c6341", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=adc876a84080bb10955ca83601b9fb3ebe2f44fb", "patch": "@@ -1677,7 +1677,7 @@ package body Sem_Ch13 is\n                   then\n                      Error_Msg_N\n                        (\"indexing aspect can only apply to a tagged type\",\n-                         Aspect);\n+                        Aspect);\n                      goto Continue;\n                   end if;\n \n@@ -2711,7 +2711,7 @@ package body Sem_Ch13 is\n \n                when Aspect_Default_Component_Value =>\n                   if not (Is_Array_Type (E)\n-                            and then Is_Scalar_Type (Component_Type (E)))\n+                           and then Is_Scalar_Type (Component_Type (E)))\n                   then\n                      Error_Msg_N (\"aspect Default_Component_Value can only \"\n                        & \"apply to an array of scalar components\", N);"}, {"sha": "911198f325e3c1f2b166edc82d2e8dbd2931dcf6", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=adc876a84080bb10955ca83601b9fb3ebe2f44fb", "patch": "@@ -2237,8 +2237,7 @@ package body Sem_Ch3 is\n          Set_Null_Present (Spec, False);\n \n          Insert_Before_And_Analyze (Body_Decl,\n-           Make_Subprogram_Declaration (Loc,\n-             Specification => Spec));\n+           Make_Subprogram_Declaration (Loc, Specification => Spec));\n       end Handle_Late_Controlled_Primitive;\n \n       --------------------------------\n@@ -3003,7 +3002,8 @@ package body Sem_Ch3 is\n                   T := It.Typ;\n \n                elsif It.Typ = Universal_Real\n-                 or else It.Typ = Universal_Integer\n+                       or else\n+                     It.Typ = Universal_Integer\n                then\n                   --  Choose universal interpretation over any other\n \n@@ -4883,8 +4883,8 @@ package body Sem_Ch3 is\n         and then\n           (Nkind (Parent (Generic_Parent_Type (N))) /=\n                                               N_Formal_Type_Declaration\n-            or else Nkind\n-              (Formal_Type_Definition (Parent (Generic_Parent_Type (N)))) /=\n+            or else Nkind (Formal_Type_Definition\n+                            (Parent (Generic_Parent_Type (N)))) /=\n                                               N_Formal_Private_Type_Definition)\n       then\n          if Is_Tagged_Type (Id) then\n@@ -5329,10 +5329,9 @@ package body Sem_Ch3 is\n          Set_Component_Size    (Implicit_Base, Uint_0);\n          Set_Packed_Array_Impl_Type (Implicit_Base, Empty);\n          Set_Has_Controlled_Component\n-                               (Implicit_Base, Has_Controlled_Component\n-                                                        (Element_Type)\n-                                                 or else Is_Controlled\n-                                                        (Element_Type));\n+                               (Implicit_Base,\n+                                  Has_Controlled_Component (Element_Type)\n+                                    or else Is_Controlled  (Element_Type));\n          Set_Finalize_Storage_Only\n                                (Implicit_Base, Finalize_Storage_Only\n                                                         (Element_Type));\n@@ -6490,9 +6489,7 @@ package body Sem_Ch3 is\n       --  If we did not have a range constraint, then set the range from the\n       --  parent type. Otherwise, the Process_Subtype call has set the bounds.\n \n-      if No_Constraint\n-        or else not Has_Range_Constraint (Indic)\n-      then\n+      if No_Constraint or else not Has_Range_Constraint (Indic) then\n          Set_Scalar_Range (Derived_Type,\n            Make_Range (Loc,\n              Low_Bound  => New_Copy_Tree (Type_Low_Bound  (Parent_Type)),\n@@ -7695,7 +7692,7 @@ package body Sem_Ch3 is\n          if not Has_Discriminants (Parent_Base)\n            or else\n              (Has_Unknown_Discriminants (Parent_Base)\n-                and then Is_Private_Type (Parent_Base))\n+               and then Is_Private_Type (Parent_Base))\n          then\n             Error_Msg_N\n               (\"invalid constraint: type has no discriminant\",\n@@ -8636,8 +8633,7 @@ package body Sem_Ch3 is\n \n       --  Set SSO default for record or array type\n \n-      if (Is_Array_Type (Derived_Type)\n-           or else Is_Record_Type (Derived_Type))\n+      if (Is_Array_Type (Derived_Type) or else Is_Record_Type (Derived_Type))\n         and then Is_Base_Type (Derived_Type)\n       then\n          Set_Default_SSO (Derived_Type);\n@@ -8818,7 +8814,8 @@ package body Sem_Ch3 is\n       --  and in family bounds.\n \n       if Is_Concurrent_Type (Current_Scope)\n-        or else Is_Limited_Type (Current_Scope)\n+           or else\n+         Is_Limited_Type    (Current_Scope)\n       then\n          CR_Disc := Make_Defining_Identifier (Sloc (Discrim), Chars (Discrim));\n \n@@ -11878,14 +11875,17 @@ package body Sem_Ch3 is\n          Constrain_Discriminated_Type (Desig_Subtype, S, Related_Nod,\n            For_Access => True);\n \n-      elsif (Is_Task_Type (Desig_Type) or else Is_Protected_Type (Desig_Type))\n+      elsif Is_Concurrent_Type (Desig_Type)\n         and then not Is_Constrained (Desig_Type)\n       then\n          Constrain_Concurrent (Desig_Subtype, S, Related_Nod, Desig_Type, ' ');\n \n       else\n          Error_Msg_N (\"invalid constraint on access type\", S);\n-         Desig_Subtype := Desig_Type; -- Ignore invalid constraint\n+\n+         --  We simply ignore an invalid constraint\n+\n+         Desig_Subtype := Desig_Type;\n          Constraint_OK := False;\n       end if;\n \n@@ -15517,7 +15517,8 @@ package body Sem_Ch3 is\n \n       if Present (Discriminant_Specifications (N)) then\n          if (Is_Elementary_Type (Parent_Type)\n-              or else Is_Array_Type (Parent_Type))\n+               or else\n+             Is_Array_Type      (Parent_Type))\n            and then not Error_Posted (N)\n          then\n             Error_Msg_N\n@@ -20048,12 +20049,11 @@ package body Sem_Ch3 is\n          if Ekind (Root_Type (Entity (T))) = E_Incomplete_Type\n            and then\n              not (Ada_Version >= Ada_2005\n-                    and then\n-                       (Nkind (Parent (T)) = N_Subtype_Declaration\n-                          or else\n-                            (Nkind (Parent (T)) = N_Subtype_Indication\n-                               and then Nkind (Parent (Parent (T))) =\n-                                          N_Subtype_Declaration)))\n+                   and then\n+                     (Nkind (Parent (T)) = N_Subtype_Declaration\n+                       or else (Nkind (Parent (T)) = N_Subtype_Indication\n+                                 and then Nkind (Parent (Parent (T))) =\n+                                                   N_Subtype_Declaration)))\n          then\n             Error_Msg_N (\"invalid use of type before its full declaration\", T);\n          end if;"}, {"sha": "be1b321b253e0213e8067c1e605333b60239a08e", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc876a84080bb10955ca83601b9fb3ebe2f44fb/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=adc876a84080bb10955ca83601b9fb3ebe2f44fb", "patch": "@@ -2198,10 +2198,10 @@ package body Sem_Ch4 is\n               and then Is_Discrete_Type (Entity (Actual))\n             then\n                Replace (N,\n-                  Make_Slice (Loc,\n-                    Prefix => P,\n-                    Discrete_Range =>\n-                       New_Occurrence_Of (Entity (Actual), Loc)));\n+                 Make_Slice (Loc,\n+                   Prefix         => P,\n+                   Discrete_Range =>\n+                     New_Occurrence_Of (Entity (Actual), Loc)));\n                Analyze (N);\n                return;\n "}]}