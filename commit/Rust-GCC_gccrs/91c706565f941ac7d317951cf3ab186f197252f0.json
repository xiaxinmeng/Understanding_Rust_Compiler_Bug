{"sha": "91c706565f941ac7d317951cf3ab186f197252f0", "node_id": "C_kwDOANBUbNoAKDkxYzcwNjU2NWY5NDFhYzdkMzE3OTUxY2YzYWIxODZmMTk3MjUyZjA", "commit": {"author": {"name": "Tucker Taft", "email": "taft@adacore.com", "date": "2022-09-13T13:28:42Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-26T09:02:30Z"}, "message": "ada: Make Original_Aspect_Pragma_Name more precise\n\nThis commit makes Original_Aspect_Pragma_Name more precise in cases\nwhere there is a second level of indirection caused by pragmas being\nturned into Check pragmas.\n\ngcc/ada/\n\n\t* sem_util.adb (Original_Aspect_Pragma_Name): Check for Check\n\tpragmas.", "tree": {"sha": "9edcbfe1f04aca3ede4c097f7f0abe733a7e14cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9edcbfe1f04aca3ede4c097f7f0abe733a7e14cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91c706565f941ac7d317951cf3ab186f197252f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91c706565f941ac7d317951cf3ab186f197252f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91c706565f941ac7d317951cf3ab186f197252f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91c706565f941ac7d317951cf3ab186f197252f0/comments", "author": {"login": "sttaft", "id": 1809941, "node_id": "MDQ6VXNlcjE4MDk5NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1809941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sttaft", "html_url": "https://github.com/sttaft", "followers_url": "https://api.github.com/users/sttaft/followers", "following_url": "https://api.github.com/users/sttaft/following{/other_user}", "gists_url": "https://api.github.com/users/sttaft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sttaft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sttaft/subscriptions", "organizations_url": "https://api.github.com/users/sttaft/orgs", "repos_url": "https://api.github.com/users/sttaft/repos", "events_url": "https://api.github.com/users/sttaft/events{/privacy}", "received_events_url": "https://api.github.com/users/sttaft/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4450567167e126051e3100de682e09f0902a2106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4450567167e126051e3100de682e09f0902a2106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4450567167e126051e3100de682e09f0902a2106"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "9ae082ca2e19c3194172ceffdc35aa2a2519e91b", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91c706565f941ac7d317951cf3ab186f197252f0/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91c706565f941ac7d317951cf3ab186f197252f0/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=91c706565f941ac7d317951cf3ab186f197252f0", "patch": "@@ -26559,6 +26559,14 @@ package body Sem_Util is\n          Item_Nam :=\n            Chars (Original_Node (Pragma_Identifier (Original_Node (Item))));\n \n+         if Item_Nam = Name_Check then\n+            --  Pragma \"Check\" preserves the original pragma name as its first\n+            --  argument.\n+            Item_Nam :=\n+              Chars (Expression (First (Pragma_Argument_Associations\n+                (Original_Node (Item)))));\n+         end if;\n+\n       else\n          pragma Assert (Nkind (Item) = N_Aspect_Specification);\n          Item_Nam := Chars (Identifier (Item));"}]}