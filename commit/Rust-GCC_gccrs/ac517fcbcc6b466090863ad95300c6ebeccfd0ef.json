{"sha": "ac517fcbcc6b466090863ad95300c6ebeccfd0ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM1MTdmY2JjYzZiNDY2MDkwODYzYWQ5NTMwMGM2ZWJlY2NmZDBlZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-08-07T10:13:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-08-07T10:13:44Z"}, "message": "hash.cc (hash<string>::operator()(string), hash<wstring>::operator()(wstring)): Do not decorate as throwing nothing.\n\n2009-08-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* src/hash.cc (hash<string>::operator()(string),\n\thash<wstring>::operator()(wstring)): Do not decorate as throwing\n\tnothing.\n\t* include/bits/functional_hash.h (hash<error_code>::\n\toperator()(error_code)): Likewise.\n\nFrom-SVN: r150566", "tree": {"sha": "0f3309c2493e1788c94da391e50a2e33d6967ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f3309c2493e1788c94da391e50a2e33d6967ead"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac517fcbcc6b466090863ad95300c6ebeccfd0ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac517fcbcc6b466090863ad95300c6ebeccfd0ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac517fcbcc6b466090863ad95300c6ebeccfd0ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac517fcbcc6b466090863ad95300c6ebeccfd0ef/comments", "author": null, "committer": null, "parents": [{"sha": "1c939d817555244adf45254697fda25717746c95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c939d817555244adf45254697fda25717746c95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c939d817555244adf45254697fda25717746c95"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "f6d6f507cb77e3dc8b522beb0b57090124e7aed6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac517fcbcc6b466090863ad95300c6ebeccfd0ef/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac517fcbcc6b466090863ad95300c6ebeccfd0ef/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ac517fcbcc6b466090863ad95300c6ebeccfd0ef", "patch": "@@ -1,3 +1,11 @@\n+2009-08-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* src/hash.cc (hash<string>::operator()(string),\n+\thash<wstring>::operator()(wstring)): Do not decorate as throwing\n+\tnothing.\n+\t* include/bits/functional_hash.h (hash<error_code>::\n+\toperator()(error_code)): Likewise.\n+\n 2009-08-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* src/compatibility.cc: Make C++0x safe, add in explicit casts to"}, {"sha": "78b0aa3cf6659d9409ba132434c0a02a1fabc86a", "filename": "libstdc++-v3/include/bits/functional_hash.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac517fcbcc6b466090863ad95300c6ebeccfd0ef/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctional_hash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac517fcbcc6b466090863ad95300c6ebeccfd0ef/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctional_hash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctional_hash.h?ref=ac517fcbcc6b466090863ad95300c6ebeccfd0ef", "patch": "@@ -1,6 +1,6 @@\n // functional_hash.h header -*- C++ -*-\n \n-// Copyright (C) 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -61,7 +61,7 @@ namespace std\n \n   template<>\n     _GLIBCXX_PURE size_t\n-    hash<error_code>::operator()(error_code) const throw ();\n+    hash<error_code>::operator()(error_code) const;\n }\n \n #endif // _FUNCTIONAL_HASH_H"}, {"sha": "2c9c1130416b2a95951c1c545c0febcab7b2f2f2", "filename": "libstdc++-v3/src/hash.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac517fcbcc6b466090863ad95300c6ebeccfd0ef/libstdc%2B%2B-v3%2Fsrc%2Fhash.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac517fcbcc6b466090863ad95300c6ebeccfd0ef/libstdc%2B%2B-v3%2Fsrc%2Fhash.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fhash.cc?ref=ac517fcbcc6b466090863ad95300c6ebeccfd0ef", "patch": "@@ -72,7 +72,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n #ifndef _GLIBCXX_LONG_DOUBLE_COMPAT_IMPL\n   template<>\n     size_t\n-    hash<string>::operator()(string __s) const throw ()\n+    hash<string>::operator()(string __s) const\n     { return _Fnv_hash<>::hash(__s.data(), __s.length()); }\n \n   template<>\n@@ -83,7 +83,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n #ifdef _GLIBCXX_USE_WCHAR_T\n   template<>\n     size_t\n-    hash<wstring>::operator()(wstring __s) const throw ()\n+    hash<wstring>::operator()(wstring __s) const\n     {\n       const char* __p = reinterpret_cast<const char*>(__s.data());\n       return _Fnv_hash<>::hash(__p, __s.length() * sizeof(wchar_t));"}]}