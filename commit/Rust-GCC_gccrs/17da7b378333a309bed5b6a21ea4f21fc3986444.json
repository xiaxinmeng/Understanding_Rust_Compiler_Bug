{"sha": "17da7b378333a309bed5b6a21ea4f21fc3986444", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdkYTdiMzc4MzMzYTMwOWJlZDViNmEyMWVhNGYyMWZjMzk4NjQ0NA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-11-09T13:21:39Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-11-09T13:21:39Z"}, "message": "stl_tree.h (_Rb_tree<>::_M_const_cast_iter): Add and use it throughout.\n\n2010-11-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/stl_tree.h (_Rb_tree<>::_M_const_cast_iter): Add\n\tand use it throughout.\n\nFrom-SVN: r166487", "tree": {"sha": "5fba5c48094ff6a35b15b6a72d512f6816d4ecc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fba5c48094ff6a35b15b6a72d512f6816d4ecc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17da7b378333a309bed5b6a21ea4f21fc3986444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17da7b378333a309bed5b6a21ea4f21fc3986444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17da7b378333a309bed5b6a21ea4f21fc3986444", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17da7b378333a309bed5b6a21ea4f21fc3986444/comments", "author": null, "committer": null, "parents": [{"sha": "a618dbe3697d2f4a0dc14e2868f2d95e2a48888a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a618dbe3697d2f4a0dc14e2868f2d95e2a48888a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a618dbe3697d2f4a0dc14e2868f2d95e2a48888a"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "742083107b0006330d41081b010919b361370b84", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17da7b378333a309bed5b6a21ea4f21fc3986444/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17da7b378333a309bed5b6a21ea4f21fc3986444/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=17da7b378333a309bed5b6a21ea4f21fc3986444", "patch": "@@ -1,3 +1,8 @@\n+2010-11-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/stl_tree.h (_Rb_tree<>::_M_const_cast_iter): Add\n+\tand use it throughout.\n+\n 2010-11-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/46385"}, {"sha": "3ffd996ae93a1f52c3026a5c4d28d87b6a3a43b3", "filename": "libstdc++-v3/include/bits/stl_tree.h", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17da7b378333a309bed5b6a21ea4f21fc3986444/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17da7b378333a309bed5b6a21ea4f21fc3986444/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h?ref=17da7b378333a309bed5b6a21ea4f21fc3986444", "patch": "@@ -556,6 +556,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n \n     private:\n+      iterator\n+      _M_const_cast_iter(const_iterator __cit)\n+      { return iterator(static_cast<_Link_type>\n+\t\t\t(const_cast<_Base_ptr>(__cit._M_node))); }\n+\n       iterator\n       _M_insert_(_Const_Base_ptr __x, _Const_Base_ptr __y,\n \t\t const value_type& __v);\n@@ -719,8 +724,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \tconst_iterator __result = __position;\n \t++__result;\n \t_M_erase_aux(__position);\n-\treturn iterator(static_cast<_Link_type>\n-\t\t\t(const_cast<_Base_ptr>(__result._M_node)));\n+\treturn _M_const_cast_iter(__result);\n       }\n #else\n       void\n@@ -737,8 +741,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       erase(const_iterator __first, const_iterator __last)\n       {\n \t_M_erase_aux(__first, __last);\n-\treturn iterator(static_cast<_Link_type>\n-\t\t\t(const_cast<_Base_ptr>(__last._M_node)));\n+\treturn _M_const_cast_iter(__last);\n       }\n #else\n       void\n@@ -1279,8 +1282,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t}\n       else\n \t// Equivalent keys.\n-\treturn iterator(static_cast<_Link_type>\n-\t\t\t(const_cast<_Base_ptr>(__position._M_node)));\n+\treturn _M_const_cast_iter(__position);\n     }\n \n   template<typename _Key, typename _Val, typename _KeyOfValue,"}]}