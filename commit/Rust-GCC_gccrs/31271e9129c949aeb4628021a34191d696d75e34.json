{"sha": "31271e9129c949aeb4628021a34191d696d75e34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEyNzFlOTEyOWM5NDlhZWI0NjI4MDIxYTM0MTkxZDY5NmQ3NWUzNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-11-12T14:02:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-11-12T14:02:44Z"}, "message": "re PR tree-optimization/68306 (ICE: in vectorizable_store, at tree-vect-stmts.c:5651)\n\n2015-11-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/68306\n\t* tree-vect-data-refs.c (verify_data_ref_alignment): Remove\n\trelevant and vectorizable checks here.\n\t(vect_verify_datarefs_alignment): Add relevant check here.\n\n\t* gcc.dg/pr68306.c: New testcase.\n\nFrom-SVN: r230260", "tree": {"sha": "43bc2f845446564ac8dd88684f3d9b8a13db225c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43bc2f845446564ac8dd88684f3d9b8a13db225c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31271e9129c949aeb4628021a34191d696d75e34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31271e9129c949aeb4628021a34191d696d75e34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31271e9129c949aeb4628021a34191d696d75e34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31271e9129c949aeb4628021a34191d696d75e34/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3a6648b1ca4359c5097f625bc6db6409b31f693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3a6648b1ca4359c5097f625bc6db6409b31f693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3a6648b1ca4359c5097f625bc6db6409b31f693"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "ecd37115d8244392e9284d544b489f2cefb08044", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31271e9129c949aeb4628021a34191d696d75e34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31271e9129c949aeb4628021a34191d696d75e34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31271e9129c949aeb4628021a34191d696d75e34", "patch": "@@ -1,3 +1,10 @@\n+2015-11-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68306\n+\t* tree-vect-data-refs.c (verify_data_ref_alignment): Remove\n+\trelevant and vectorizable checks here.\n+\t(vect_verify_datarefs_alignment): Add relevant check here.\n+\n 2015-11-12  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tgcc/"}, {"sha": "7d32ad87903f8069a829613fd609d75e7a48c985", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31271e9129c949aeb4628021a34191d696d75e34/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31271e9129c949aeb4628021a34191d696d75e34/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=31271e9129c949aeb4628021a34191d696d75e34", "patch": "@@ -1,3 +1,8 @@\n+2015-11-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68306\n+\t* gcc.dg/pr68306.c: New testcase.\n+\n 2015-11-12  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tImplement D0013R2, logical type traits."}, {"sha": "b36fb3471176696a6d384129863885861b81ce58", "filename": "gcc/testsuite/gcc.dg/pr68306.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31271e9129c949aeb4628021a34191d696d75e34/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68306.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31271e9129c949aeb4628021a34191d696d75e34/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68306.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68306.c?ref=31271e9129c949aeb4628021a34191d696d75e34", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+enum powerpc_pmc_type { PPC_PMC_IBM };\n+struct {\n+    unsigned num_pmcs;\n+    enum powerpc_pmc_type pmc_type;\n+} a;\n+enum powerpc_pmc_type b;\n+void fn1() { a.num_pmcs = a.pmc_type = b; }"}, {"sha": "da5b2e98a1c24e67b4ca61a660551ee8a48764c6", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31271e9129c949aeb4628021a34191d696d75e34/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31271e9129c949aeb4628021a34191d696d75e34/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=31271e9129c949aeb4628021a34191d696d75e34", "patch": "@@ -909,14 +909,9 @@ verify_data_ref_alignment (data_reference_p dr)\n   gimple *stmt = DR_STMT (dr);\n   stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n \n-  if (!STMT_VINFO_RELEVANT_P (stmt_info))\n-    return true;\n-\n-  /* For interleaving, only the alignment of the first access matters. \n-     Skip statements marked as not vectorizable.  */\n-  if ((STMT_VINFO_GROUPED_ACCESS (stmt_info)\n-       && GROUP_FIRST_ELEMENT (stmt_info) != stmt)\n-      || !STMT_VINFO_VECTORIZABLE (stmt_info))\n+  /* For interleaving, only the alignment of the first access matters.   */\n+  if (STMT_VINFO_GROUPED_ACCESS (stmt_info)\n+      && GROUP_FIRST_ELEMENT (stmt_info) != stmt)\n     return true;\n \n   /* Strided accesses perform only component accesses, alignment is\n@@ -965,8 +960,15 @@ vect_verify_datarefs_alignment (loop_vec_info vinfo)\n   unsigned int i;\n \n   FOR_EACH_VEC_ELT (datarefs, i, dr)\n-    if (! verify_data_ref_alignment (dr))\n-      return false;\n+    {\n+      gimple *stmt = DR_STMT (dr);\n+      stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n+\n+      if (!STMT_VINFO_RELEVANT_P (stmt_info))\n+\tcontinue;\n+      if (! verify_data_ref_alignment (dr))\n+\treturn false;\n+    }\n \n   return true;\n }"}]}