{"sha": "0072c9ac909191c5709585e3882bbab8749c8b9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA3MmM5YWM5MDkxOTFjNTcwOTU4NWUzODgyYmJhYjg3NDljOGI5Yw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-08-13T13:57:35Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-08-13T13:57:35Z"}, "message": "2.cc: New.\n\n\t* testsuite/30_threads/mutex/unlock/2.cc: New.\n\t* testsuite/30_threads/recursive_mutex/unlock/2.cc: New.\n\t* testsuite/30_threads/recursive_timed_mutex/unlock/2.cc: New.\n\t* testsuite/30_threads/shared_mutex/unlock/1.cc: New.\n\t* testsuite/30_threads/shared_timed_mutex/unlock/1.cc: New.\n\t* testsuite/30_threads/timed_mutex/unlock/2.cc: New.\n\nFrom-SVN: r226863", "tree": {"sha": "447ba35b4973a9451dba508492f205fa856dec9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/447ba35b4973a9451dba508492f205fa856dec9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0072c9ac909191c5709585e3882bbab8749c8b9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0072c9ac909191c5709585e3882bbab8749c8b9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0072c9ac909191c5709585e3882bbab8749c8b9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0072c9ac909191c5709585e3882bbab8749c8b9c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c80e54478ba4b9dbb76c98d6be432382e2743c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c80e54478ba4b9dbb76c98d6be432382e2743c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c80e54478ba4b9dbb76c98d6be432382e2743c4"}], "stats": {"total": 267, "additions": 267, "deletions": 0}, "files": [{"sha": "6870f716fe78b14eec29c13bfe818872ef50875f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0072c9ac909191c5709585e3882bbab8749c8b9c", "patch": "@@ -1,3 +1,12 @@\n+2015-08-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/30_threads/mutex/unlock/2.cc: New.\n+\t* testsuite/30_threads/recursive_mutex/unlock/2.cc: New.\n+\t* testsuite/30_threads/recursive_timed_mutex/unlock/2.cc: New.\n+\t* testsuite/30_threads/shared_mutex/unlock/1.cc: New.\n+\t* testsuite/30_threads/shared_timed_mutex/unlock/1.cc: New.\n+\t* testsuite/30_threads/timed_mutex/unlock/2.cc: New.\n+\n 2015-08-13  Eelis van der Weegen  <eelis@eelis.net>\n \n \t* include/std/shared_mutex (shared_mutex::unlock()): Fix typo."}, {"sha": "02464cda6771f1cf569ecc2aea8e55a13aca61a2", "filename": "libstdc++-v3/testsuite/30_threads/mutex/unlock/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Funlock%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Funlock%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Funlock%2F2.cc?ref=0072c9ac909191c5709585e3882bbab8749c8b9c", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do run { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* *-*-solaris* *-*-cygwin *-*-darwin* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++11 -pthread\" { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++11 -pthreads\" { target *-*-solaris* } }\n+// { dg-options \" -std=gnu++11 \" { target *-*-cygwin *-*-darwin* } }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <mutex>\n+#include <thread>\n+\n+using mutex_type = std::mutex;\n+\n+mutex_type m;\n+\n+void f()\n+{\n+  std::lock_guard<mutex_type> l(m);\n+}\n+\n+int main()\n+{\n+  std::thread t1(f);\n+  std::thread t2(f);\n+  t1.join();\n+  t2.join();\n+}"}, {"sha": "68bd5d0ed3935af6e727e1920f7285bd7ea43f47", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/unlock/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Funlock%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Funlock%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Funlock%2F2.cc?ref=0072c9ac909191c5709585e3882bbab8749c8b9c", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do run { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* *-*-solaris* *-*-cygwin *-*-darwin* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++11 -pthread\" { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++11 -pthreads\" { target *-*-solaris* } }\n+// { dg-options \" -std=gnu++11 \" { target *-*-cygwin *-*-darwin* } }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <mutex>\n+#include <thread>\n+\n+using mutex_type = std::recursive_mutex;\n+\n+mutex_type m;\n+\n+void f()\n+{\n+  std::lock_guard<mutex_type> l(m);\n+}\n+\n+int main()\n+{\n+  std::thread t1(f);\n+  std::thread t2(f);\n+  t1.join();\n+  t2.join();\n+}"}, {"sha": "ac51f433271fb84ea4169a38f6efa33fd73d3f78", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/unlock/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Funlock%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Funlock%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Funlock%2F2.cc?ref=0072c9ac909191c5709585e3882bbab8749c8b9c", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do run { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* *-*-solaris* *-*-cygwin *-*-darwin* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++11 -pthread\" { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++11 -pthreads\" { target *-*-solaris* } }\n+// { dg-options \" -std=gnu++11 \" { target *-*-cygwin *-*-darwin* } }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <mutex>\n+#include <thread>\n+\n+using mutex_type = std::recursive_timed_mutex;\n+\n+mutex_type m;\n+\n+void f()\n+{\n+  std::lock_guard<mutex_type> l(m);\n+}\n+\n+int main()\n+{\n+  std::thread t1(f);\n+  std::thread t2(f);\n+  t1.join();\n+  t2.join();\n+}"}, {"sha": "e091591990753adcdf4dab6208b958f81b809ffd", "filename": "libstdc++-v3/testsuite/30_threads/shared_mutex/unlock/1.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_mutex%2Funlock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_mutex%2Funlock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_mutex%2Funlock%2F1.cc?ref=0072c9ac909191c5709585e3882bbab8749c8b9c", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do run { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* *-*-solaris* *-*-cygwin *-*-darwin* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++17 -pthread\" { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++17 -pthreads\" { target *-*-solaris* } }\n+// { dg-options \" -std=gnu++17 \" { target *-*-cygwin *-*-darwin* } }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <shared_mutex>\n+#include <thread>\n+\n+using mutex_type = std::shared_mutex;\n+\n+mutex_type m;\n+\n+void f()\n+{\n+  std::lock_guard<mutex_type> l(m);\n+}\n+\n+int main()\n+{\n+  std::thread t1(f);\n+  std::thread t2(f);\n+  t1.join();\n+  t2.join();\n+}"}, {"sha": "b6ca4bf248b6cc6766ee19a51853a65243921881", "filename": "libstdc++-v3/testsuite/30_threads/shared_timed_mutex/unlock/1.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_timed_mutex%2Funlock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_timed_mutex%2Funlock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_timed_mutex%2Funlock%2F1.cc?ref=0072c9ac909191c5709585e3882bbab8749c8b9c", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do run { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* *-*-solaris* *-*-cygwin *-*-darwin* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++14 -pthread\" { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++14 -pthreads\" { target *-*-solaris* } }\n+// { dg-options \" -std=gnu++14 \" { target *-*-cygwin *-*-darwin* } }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <shared_mutex>\n+#include <thread>\n+\n+using mutex_type = std::shared_timed_mutex;\n+\n+mutex_type m;\n+\n+void f()\n+{\n+  std::lock_guard<mutex_type> l(m);\n+}\n+\n+int main()\n+{\n+  std::thread t1(f);\n+  std::thread t2(f);\n+  t1.join();\n+  t2.join();\n+}"}, {"sha": "10fdc537a9ba1754bcf2d75995984b9f55c35a15", "filename": "libstdc++-v3/testsuite/30_threads/timed_mutex/unlock/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Funlock%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0072c9ac909191c5709585e3882bbab8749c8b9c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Funlock%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Funlock%2F2.cc?ref=0072c9ac909191c5709585e3882bbab8749c8b9c", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do run { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* *-*-solaris* *-*-cygwin *-*-darwin* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++11 -pthread\" { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++11 -pthreads\" { target *-*-solaris* } }\n+// { dg-options \" -std=gnu++11 \" { target *-*-cygwin *-*-darwin* } }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <mutex>\n+#include <thread>\n+\n+using mutex_type = std::timed_mutex;\n+\n+mutex_type m;\n+\n+void f()\n+{\n+  std::lock_guard<mutex_type> l(m);\n+}\n+\n+int main()\n+{\n+  std::thread t1(f);\n+  std::thread t2(f);\n+  t1.join();\n+  t2.join();\n+}"}]}