{"sha": "3b547557aade5a4f4f0d261d508a9b3d32b13a92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I1NDc1NTdhYWRlNWE0ZjRmMGQyNjFkNTA4YTliM2QzMmIxM2E5Mg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-24T17:52:41Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-24T17:52:41Z"}, "message": "compiler: Verify types of sink variables.\n\nFrom-SVN: r183482", "tree": {"sha": "c62dada648d5001d36b6ebb4aa7ef7b723271d97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c62dada648d5001d36b6ebb4aa7ef7b723271d97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b547557aade5a4f4f0d261d508a9b3d32b13a92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b547557aade5a4f4f0d261d508a9b3d32b13a92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b547557aade5a4f4f0d261d508a9b3d32b13a92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b547557aade5a4f4f0d261d508a9b3d32b13a92/comments", "author": null, "committer": null, "parents": [{"sha": "f1d4a790ec622a2c905b4b1e379731d670450470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1d4a790ec622a2c905b4b1e379731d670450470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1d4a790ec622a2c905b4b1e379731d670450470"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "2fd1219d9dbe26c4ea245c4bbdbd40de629e6aa2", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b547557aade5a4f4f0d261d508a9b3d32b13a92/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b547557aade5a4f4f0d261d508a9b3d32b13a92/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=3b547557aade5a4f4f0d261d508a9b3d32b13a92", "patch": "@@ -37,6 +37,7 @@ Gogo::Gogo(Backend* backend, Linemap* linemap, int int_type_size,\n     imported_init_fns_(),\n     unique_prefix_(),\n     unique_prefix_specified_(false),\n+    verify_types_(),\n     interface_types_(),\n     specific_type_functions_(),\n     specific_type_functions_are_written_(false),\n@@ -1282,6 +1283,15 @@ Gogo::traverse(Traverse* traverse)\n     }\n }\n \n+// Add a type to verify.  This is used for types of sink variables, in\n+// order to give appropriate error messages.\n+\n+void\n+Gogo::add_type_to_verify(Type* type)\n+{\n+  this->verify_types_.push_back(type);\n+}\n+\n // Traversal class used to verify types.\n \n class Verify_types : public Traverse\n@@ -1312,6 +1322,12 @@ Gogo::verify_types()\n {\n   Verify_types traverse;\n   this->traverse(&traverse);\n+\n+  for (std::vector<Type*>::iterator p = this->verify_types_.begin();\n+       p != this->verify_types_.end();\n+       ++p)\n+    (*p)->verify();\n+  this->verify_types_.clear();\n }\n \n // Traversal class used to lower parse tree."}, {"sha": "7d77c9f0828f3fe40a18ce4eba6412ecfca6f336", "filename": "gcc/go/gofrontend/gogo.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b547557aade5a4f4f0d261d508a9b3d32b13a92/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b547557aade5a4f4f0d261d508a9b3d32b13a92/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.h?ref=3b547557aade5a4f4f0d261d508a9b3d32b13a92", "patch": "@@ -344,6 +344,11 @@ class Gogo\n   Named_object*\n   add_sink();\n \n+  // Add a type which needs to be verified.  This is used for sink\n+  // types, just to give appropriate error messages.\n+  void\n+  add_type_to_verify(Type* type);\n+\n   // Add a named object to the current namespace.  This is used for\n   // import . \"package\".\n   void\n@@ -683,6 +688,8 @@ class Gogo\n   std::string unique_prefix_;\n   // Whether an explicit unique prefix was set by -fgo-prefix.\n   bool unique_prefix_specified_;\n+  // A list of types to verify.\n+  std::vector<Type*> verify_types_;\n   // A list of interface types defined while parsing.\n   std::vector<Interface_type*> interface_types_;\n   // Type specific functions to write out."}, {"sha": "2d58185ebdb2171ac5daa6a24f7302081da7de80", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b547557aade5a4f4f0d261d508a9b3d32b13a92/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b547557aade5a4f4f0d261d508a9b3d32b13a92/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=3b547557aade5a4f4f0d261d508a9b3d32b13a92", "patch": "@@ -1911,6 +1911,8 @@ Parse::init_var(const Typed_identifier& tid, Type* type, Expression* init,\n \t      return this->gogo_->add_variable(buf, var);\n \t    }\n \t}\n+      if (type != NULL)\n+\tthis->gogo_->add_type_to_verify(type);\n       return this->gogo_->add_sink();\n     }\n "}]}