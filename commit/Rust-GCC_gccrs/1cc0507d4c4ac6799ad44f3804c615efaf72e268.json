{"sha": "1cc0507d4c4ac6799ad44f3804c615efaf72e268", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNjMDUwN2Q0YzRhYzY3OTlhZDQ0ZjM4MDRjNjE1ZWZhZjcyZTI2OA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-10-18T21:25:21Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-10-18T21:25:21Z"}, "message": "re PR fortran/32021 (Fix,document,remove GFORTRAN_* environment variables)\n\n\tPR libfortran/32021\n\t* runtime/backtrace.c (local_strcasestr): Protect by appropriate\n\tmacros.\n\t* runtime/main.c (cleanup): Cast argument to free.\n\t* intrinsics/spread_generic.c (spread_internal): Match runtime_error\n\targuments and format.\n\t* intrinsics/signal.c (alarm_sub_int_i4, alarm_sub_int_i8): Cast\n\tpointers to avoid warnings.\n\nFrom-SVN: r129463", "tree": {"sha": "0769a04922654613317a07a6b2f817cda89a8b9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0769a04922654613317a07a6b2f817cda89a8b9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cc0507d4c4ac6799ad44f3804c615efaf72e268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cc0507d4c4ac6799ad44f3804c615efaf72e268", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cc0507d4c4ac6799ad44f3804c615efaf72e268", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cc0507d4c4ac6799ad44f3804c615efaf72e268/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddc4af9c164140e3a6bcbbe448c7cd50719845c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc4af9c164140e3a6bcbbe448c7cd50719845c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddc4af9c164140e3a6bcbbe448c7cd50719845c8"}], "stats": {"total": 52, "additions": 34, "deletions": 18}, "files": [{"sha": "6dcc055c7dbbb4d47bec0f220eda1be65a4c4cce", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc0507d4c4ac6799ad44f3804c615efaf72e268/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc0507d4c4ac6799ad44f3804c615efaf72e268/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=1cc0507d4c4ac6799ad44f3804c615efaf72e268", "patch": "@@ -1,3 +1,14 @@\n+2007-10-18  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/32021\n+\t* runtime/backtrace.c (local_strcasestr): Protect by appropriate\n+\tmacros.\n+\t* runtime/main.c (cleanup): Cast argument to free.\n+\t* intrinsics/spread_generic.c (spread_internal): Match runtime_error\n+\targuments and format.\n+\t* intrinsics/signal.c (alarm_sub_int_i4, alarm_sub_int_i8): Cast\n+\tpointers to avoid warnings.\n+\n 2007-10-18  Ben Elliston  <bje@au.ibm.com>\n \n \t* runtime/environ.c (init_choice): Remove unused function."}, {"sha": "84565e8e4977b6f72f0002f864e8a6077b84b752", "filename": "libgfortran/intrinsics/signal.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc0507d4c4ac6799ad44f3804c615efaf72e268/libgfortran%2Fintrinsics%2Fsignal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc0507d4c4ac6799ad44f3804c615efaf72e268/libgfortran%2Fintrinsics%2Fsignal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fsignal.c?ref=1cc0507d4c4ac6799ad44f3804c615efaf72e268", "patch": "@@ -198,14 +198,14 @@ alarm_sub_int_i4 (int *seconds, int *handler, GFC_INTEGER_4 *status)\n #if defined (SIGALRM) && defined (HAVE_ALARM) && defined (HAVE_SIGNAL)\n   if (status != NULL)\n     {\n-      if (signal (SIGALRM, (void (*)(int)) *handler) == SIG_ERR)\n+      if (signal (SIGALRM, (void (*)(int)) (INTPTR_T) *handler) == SIG_ERR)\n \t*status = -1;\n       else\n \t*status = alarm (*seconds);\n     }\n   else\n     {\n-      signal (SIGALRM, (void (*)(int)) *handler);\n+      signal (SIGALRM, (void (*)(int)) (INTPTR_T) *handler);\n       alarm (*seconds);\n     }\n #else\n@@ -226,14 +226,14 @@ alarm_sub_int_i8 (int *seconds, int *handler, GFC_INTEGER_8 *status)\n #if defined (SIGALRM) && defined (HAVE_ALARM) && defined (HAVE_SIGNAL)\n   if (status != NULL)\n     {\n-      if (signal (SIGALRM, (void (*)(int)) *handler) == SIG_ERR)\n+      if (signal (SIGALRM, (void (*)(int)) (INTPTR_T) *handler) == SIG_ERR)\n \t*status = -1;\n       else\n \t*status = alarm (*seconds);\n     }\n   else\n     {\n-      signal (SIGALRM, (void (*)(int)) *handler);\n+      signal (SIGALRM, (void (*)(int)) (INTPTR_T) *handler);\n       alarm (*seconds);\n     }\n #else"}, {"sha": "4be0a164c8ac3d6ea0e4667fe599c3dc62dbd825", "filename": "libgfortran/intrinsics/spread_generic.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc0507d4c4ac6799ad44f3804c615efaf72e268/libgfortran%2Fintrinsics%2Fspread_generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc0507d4c4ac6799ad44f3804c615efaf72e268/libgfortran%2Fintrinsics%2Fspread_generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fspread_generic.c?ref=1cc0507d4c4ac6799ad44f3804c615efaf72e268", "patch": "@@ -131,9 +131,9 @@ spread_internal (gfc_array_char *ret, const gfc_array_char *source,\n \n \t\t  if (ret_extent != ncopies)\n \t\t    runtime_error(\"Incorrect extent in return value of SPREAD\"\n-\t\t\t\t  \" intrinsic in dimension %d: is %ld,\"\n-\t\t\t\t  \" should be %ld\", n+1, (long int) ret_extent,\n-\t\t\t\t  (long int) ncopies);\n+\t\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t\t  (long int) ret_extent, (long int) ncopies);\n \t\t}\n \t      else\n \t\t{\n@@ -142,8 +142,9 @@ spread_internal (gfc_array_char *ret, const gfc_array_char *source,\n \t\t    - source->dim[dim].lbound;\n \t\t  if (ret_extent != extent[dim])\n \t\t    runtime_error(\"Incorrect extent in return value of SPREAD\"\n-\t\t\t\t  \" intrinsic in dimension %d: is %ld,\"\n-\t\t\t\t  \" should be %ld\", n+1, (long int) ret_extent,\n+\t\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t\t  (long int) ret_extent,\n \t\t\t\t  (long int) extent[dim]);\n \t\t    \n \t\t  if (extent[dim] <= 0)"}, {"sha": "00605b50d3fd3afb866b9d52c84d37f0cdcde1bb", "filename": "libgfortran/runtime/backtrace.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc0507d4c4ac6799ad44f3804c615efaf72e268/libgfortran%2Fruntime%2Fbacktrace.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc0507d4c4ac6799ad44f3804c615efaf72e268/libgfortran%2Fruntime%2Fbacktrace.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fbacktrace.c?ref=1cc0507d4c4ac6799ad44f3804c615efaf72e268", "patch": "@@ -60,7 +60,18 @@ Boston, MA 02110-1301, USA.  */\n #include <ctype.h>\n \n \n+/* Macros for common sets of capabilities: can we fork and exec, can\n+   we use glibc-style backtrace functions, and can we use pipes.  */\n+#define CAN_FORK (defined(HAVE_FORK) && defined(HAVE_EXECVP) \\\n+\t\t  && defined(HAVE_WAIT))\n+#define GLIBC_BACKTRACE (defined(HAVE_BACKTRACE) \\\n+\t\t\t && defined(HAVE_BACKTRACE_SYMBOLS))\n+#define CAN_PIPE (CAN_FORK && defined(HAVE_PIPE) \\\n+\t\t  && defined(HAVE_DUP2) && defined(HAVE_FDOPEN) \\\n+\t\t  && defined(HAVE_CLOSE))\n \n+\n+#if GLIBC_BACKTRACE && CAN_PIPE\n static char *\n local_strcasestr (const char *s1, const char *s2)\n {\n@@ -85,14 +96,7 @@ local_strcasestr (const char *s1, const char *s2)\n     }\n #endif\n }\n-\n-#define CAN_FORK (defined(HAVE_FORK) && defined(HAVE_EXECVP) \\\n-\t\t  && defined(HAVE_WAIT))\n-#define GLIBC_BACKTRACE (defined(HAVE_BACKTRACE) \\\n-\t\t\t && defined(HAVE_BACKTRACE_SYMBOLS))\n-#define CAN_PIPE (CAN_FORK && defined(HAVE_PIPE) \\\n-\t\t  && defined(HAVE_DUP2) && defined(HAVE_FDOPEN) \\\n-\t\t  && defined(HAVE_CLOSE))\n+#endif\n \n \n #if GLIBC_BACKTRACE"}, {"sha": "8632f152c9571c1801e3adb3a1cbee1433c850f8", "filename": "libgfortran/runtime/main.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc0507d4c4ac6799ad44f3804c615efaf72e268/libgfortran%2Fruntime%2Fmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc0507d4c4ac6799ad44f3804c615efaf72e268/libgfortran%2Fruntime%2Fmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fmain.c?ref=1cc0507d4c4ac6799ad44f3804c615efaf72e268", "patch": "@@ -176,5 +176,5 @@ cleanup (void)\n   close_units ();\n   \n   if (please_free_exe_path_when_done)\n-    free (exe_path);\n+    free ((char *) exe_path);\n }"}]}