{"sha": "68c937083c9bea6f91357e60e39db22750908506", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhjOTM3MDgzYzliZWE2ZjkxMzU3ZTYwZTM5ZGIyMjc1MDkwODUwNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-11-09T14:07:32Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-11-09T14:07:32Z"}, "message": "Fix folding of memcmp(\"a\", \"a\", 2) (PR\n\n\t* fold-const-call.c (fold_const_call): Fix the folding.\n\t* gcc.dg/tree-ssa/builtins-folding-generic.c (main): Add new\n\ttest-case for memcmp.\n\t* gcc.dg/tree-ssa/builtins-folding-gimple.c: Likewise.\n\nFrom-SVN: r242000", "tree": {"sha": "6fa075f129fb6d4844864c444b14a69a8f3c35a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fa075f129fb6d4844864c444b14a69a8f3c35a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68c937083c9bea6f91357e60e39db22750908506", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c937083c9bea6f91357e60e39db22750908506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68c937083c9bea6f91357e60e39db22750908506", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c937083c9bea6f91357e60e39db22750908506/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6fa161dc80d26369400b891ad2435dbcc9aaf67f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa161dc80d26369400b891ad2435dbcc9aaf67f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fa161dc80d26369400b891ad2435dbcc9aaf67f"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "9be098291be53cd5ea000578f7845a8086f97c95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c937083c9bea6f91357e60e39db22750908506/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c937083c9bea6f91357e60e39db22750908506/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68c937083c9bea6f91357e60e39db22750908506", "patch": "@@ -1,3 +1,7 @@\n+2016-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* fold-const-call.c (fold_const_call): Fix the folding.\n+\n 2016-11-09  Richard Biener  <rguenther@suse.de>\n \n \t* common.opt (flag_evaluation_order): Remove."}, {"sha": "38f9717f139e4c5b1ae41a6e80cf2641676bcecd", "filename": "gcc/fold-const-call.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c937083c9bea6f91357e60e39db22750908506/gcc%2Ffold-const-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c937083c9bea6f91357e60e39db22750908506/gcc%2Ffold-const-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const-call.c?ref=68c937083c9bea6f91357e60e39db22750908506", "patch": "@@ -1506,7 +1506,7 @@ tree\n fold_const_call (combined_fn fn, tree type, tree arg0, tree arg1, tree arg2)\n {\n   const char *p0, *p1;\n-  size_t s2 = 0;\n+  size_t s0, s1, s2 = 0;\n   switch (fn)\n     {\n     case CFN_BUILT_IN_STRNCMP:\n@@ -1538,11 +1538,11 @@ fold_const_call (combined_fn fn, tree type, tree arg0, tree arg1, tree arg2)\n       }\n     case CFN_BUILT_IN_BCMP:\n     case CFN_BUILT_IN_MEMCMP:\n-      if ((p0 = c_getstr (arg0))\n-\t  && (p1 = c_getstr (arg1))\n+      if ((p0 = c_getstr (arg0, &s0))\n+\t  && (p1 = c_getstr (arg1, &s1))\n \t  && host_size_t_cst_p (arg2, &s2)\n-\t  && s2 <= strlen (p0)\n-\t  && s2 <= strlen (p1))\n+\t  && s2 <= s0\n+\t  && s2 <= s1)\n \treturn build_cmp_result (type, memcmp (p0, p1, s2));\n       return NULL_TREE;\n "}, {"sha": "5fb53383b5d6780de4292ff0cb4d3ec345d46385", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c937083c9bea6f91357e60e39db22750908506/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c937083c9bea6f91357e60e39db22750908506/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68c937083c9bea6f91357e60e39db22750908506", "patch": "@@ -1,3 +1,9 @@\n+2016-11-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/tree-ssa/builtins-folding-generic.c (main): Add new\n+\ttest-case for memcmp.\n+\t* gcc.dg/tree-ssa/builtins-folding-gimple.c: Likewise.\n+\n 2016-11-09  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR testsuite/78269"}, {"sha": "3c7e001691a4b67196b60de805a288001a998e75", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtins-folding-generic.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c937083c9bea6f91357e60e39db22750908506/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltins-folding-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c937083c9bea6f91357e60e39db22750908506/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltins-folding-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltins-folding-generic.c?ref=68c937083c9bea6f91357e60e39db22750908506", "patch": "@@ -66,6 +66,10 @@ main (void)\n   if (__builtin_strncasecmp (\"aab\", \"aac\", 2) != 0)\n     __builtin_abort ();\n \n+  /* MEMCMP.  */\n+  if (__builtin_memcmp (\"aaaaa\", \"aaaaa\", 6) != 0)\n+    __builtin_abort ();\n+\n   return 0;\n }\n \n@@ -74,3 +78,4 @@ main (void)\n /* { dg-final { scan-tree-dump-not \"__builtin_strncmp\" \"original\" } } */\n /* { dg-final { scan-tree-dump-not \"__builtin_strncasecmp\" \"original\" } } */\n /* { dg-final { scan-tree-dump-not \"__builtin_memchr\" \"original\" } } */\n+/* { dg-final { scan-tree-dump-not \"__builtin_memcmp\" \"original\" } } */"}, {"sha": "d08ced5e75865cc5531b0c7ccee1998517bf98ad", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtins-folding-gimple.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c937083c9bea6f91357e60e39db22750908506/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltins-folding-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c937083c9bea6f91357e60e39db22750908506/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltins-folding-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltins-folding-gimple.c?ref=68c937083c9bea6f91357e60e39db22750908506", "patch": "@@ -63,6 +63,7 @@ main (void)\n \n   const char *aaaaa = \"aaaaa\";\n   const char *hello = \"hello\";\n+  const char *hello2 = \"hello\";\n   const char *empty = \"\";\n   const char *ab = \"ab\";\n   const char *ba = \"ba\";\n@@ -151,11 +152,16 @@ main (void)\n   if (__builtin_strncasecmp (++s2, ++s3+2, 0) != 0 || s2 != s1+1 || s3 != s1+5)\n     __builtin_abort();\n \n+  /* MEMCMP.  */\n+  if (__builtin_memcmp (hello, hello2, 6) != 0)\n+    __builtin_abort ();\n+\n   return 0;\n }\n \n /* { dg-final { scan-tree-dump-not \"__builtin_strcmp\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-not \"__builtin_strcasecmp\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-not \"__builtin_strncmp\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-not \"__builtin_memchr\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"__builtin_memcmp\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"__builtin_strncasecmp\" 3 \"optimized\" } } */"}]}