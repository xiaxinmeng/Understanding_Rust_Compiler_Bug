{"sha": "28dac70a082f1433c513b4928bb178062967ba33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhkYWM3MGEwODJmMTQzM2M1MTNiNDkyOGJiMTc4MDYyOTY3YmEzMw==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-01-31T18:44:55Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-01-31T18:44:55Z"}, "message": "auto_ptr.h: Fix comment typos.\n\n2008-01-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n    \n\t* include/backward/auto_ptr.h: Fix comment typos.\n\t* include/bits/algorithmfwd.h: Likewise.\n\t* include/bits/basic_ios.h: Likewise.\n\t* include/bits/c++config: Likewise.\n\t* include/bits/char_traits.h: Likewise.\n\t* include/bits/codecvt.h: Likewise.\n\t* include/bits/gslice.h: Likewise.\n\t* include/bits/ios_base.h: Likewise.\n\t* include/bits/locale_facets.h: Likewise.\n\t* include/bits/locale_facets_nonio.tcc: Likewise.\n\t* include/bits/postypes.h: Likewise.\n\t* include/bits/sstream.tcc: Likewise.\n\t* include/bits/stl_algo.h: Likewise.\n\t* include/bits/stl_deque.h: Likewise.\n\t* include/bits/stl_iterator.h: Likewise.\n\t* include/bits/stl_iterator_base_types.h Likewise.\n\t* include/bits/stl_list.h: Likewise.\n\t* include/bits/stl_map.h: Likewise.\n\t* include/bits/stl_multimap.h: Likewise.\n\t* include/bits/stl_multiset.h: Likewise.\n\t* include/bits/stl_set.h: Likewise.\n\t* include/bits/stl_vector.h: Likewise.\n\t* include/bits/valarray_array.h: Likewise.\n\t* include/debug/safe_base.h: Likewise.\n\t* include/ext/bitmap_allocator.h: Likewise.\n\t* include/ext/codecvt_specializations.h Likewise.\n\t* include/ext/mt_allocator.h: Likewise.\n\t* include/ext/rc_string_base.h: Likewise.\n\t* include/ext/rope: Likewise.\n\t* include/parallel/checkers.h: Likewise.\n\t* include/parallel/find.h: Likewise.\n\t* include/parallel/multiseq_selection.h: Likewise.\n\t* include/parallel/partition.h: Likewise.\n\t* include/parallel/settings.h: Likewise.\n\t* include/std/bitset: Likewise.\n\t* include/std/complex: Likewise.\n\t* include/std/fstream: Likewise.\n\t* include/std/istream: Likewise.\n\t* include/std/limits: Likewise.\n\t* include/std/ostream: Likewise.\n\t* include/std/stdexcept: Likewise.\n\t* include/std/streambuf: Likewise.\n\t* include/tr1/bessel_function.tcc: Likewise.\n\t* include/tr1/cmath: Likewise.\n\t* include/tr1/ell_integral.tcc: Likewise.\n\t* include/tr1/hypergeometric.tcc: Likewise.\n\t* include/tr1/legendre_function.tcc: Likewise.\n\t* include/tr1_impl/random: Likewise.\n\t* include/tr1_impl/regex: Likewise.\n\nFrom-SVN: r131982", "tree": {"sha": "750d0095b672dd8290ee9e0d133642487027329b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/750d0095b672dd8290ee9e0d133642487027329b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28dac70a082f1433c513b4928bb178062967ba33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28dac70a082f1433c513b4928bb178062967ba33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28dac70a082f1433c513b4928bb178062967ba33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28dac70a082f1433c513b4928bb178062967ba33/comments", "author": null, "committer": null, "parents": [{"sha": "89fe7f1bc723a3c3acec6c7eff4676ff33c25160", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89fe7f1bc723a3c3acec6c7eff4676ff33c25160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89fe7f1bc723a3c3acec6c7eff4676ff33c25160"}], "stats": {"total": 400, "additions": 226, "deletions": 174}, "files": [{"sha": "936c0b0c90cc43b9b39e194fc16265afd16d4119", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -1,3 +1,55 @@\n+2008-01-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+    \n+\t* include/backward/auto_ptr.h: Fix comment typos.\n+\t* include/bits/algorithmfwd.h: Likewise.\n+\t* include/bits/basic_ios.h: Likewise.\n+\t* include/bits/c++config: Likewise.\n+\t* include/bits/char_traits.h: Likewise.\n+\t* include/bits/codecvt.h: Likewise.\n+\t* include/bits/gslice.h: Likewise.\n+\t* include/bits/ios_base.h: Likewise.\n+\t* include/bits/locale_facets.h: Likewise.\n+\t* include/bits/locale_facets_nonio.tcc: Likewise.\n+\t* include/bits/postypes.h: Likewise.\n+\t* include/bits/sstream.tcc: Likewise.\n+\t* include/bits/stl_algo.h: Likewise.\n+\t* include/bits/stl_deque.h: Likewise.\n+\t* include/bits/stl_iterator.h: Likewise.\n+\t* include/bits/stl_iterator_base_types.h Likewise.\n+\t* include/bits/stl_list.h: Likewise.\n+\t* include/bits/stl_map.h: Likewise.\n+\t* include/bits/stl_multimap.h: Likewise.\n+\t* include/bits/stl_multiset.h: Likewise.\n+\t* include/bits/stl_set.h: Likewise.\n+\t* include/bits/stl_vector.h: Likewise.\n+\t* include/bits/valarray_array.h: Likewise.\n+\t* include/debug/safe_base.h: Likewise.\n+\t* include/ext/bitmap_allocator.h: Likewise.\n+\t* include/ext/codecvt_specializations.h Likewise.\n+\t* include/ext/mt_allocator.h: Likewise.\n+\t* include/ext/rc_string_base.h: Likewise.\n+\t* include/ext/rope: Likewise.\n+\t* include/parallel/checkers.h: Likewise.\n+\t* include/parallel/find.h: Likewise.\n+\t* include/parallel/multiseq_selection.h: Likewise.\n+\t* include/parallel/partition.h: Likewise.\n+\t* include/parallel/settings.h: Likewise.\n+\t* include/std/bitset: Likewise.\n+\t* include/std/complex: Likewise.\n+\t* include/std/fstream: Likewise.\n+\t* include/std/istream: Likewise.\n+\t* include/std/limits: Likewise.\n+\t* include/std/ostream: Likewise.\n+\t* include/std/stdexcept: Likewise.\n+\t* include/std/streambuf: Likewise.\n+\t* include/tr1/bessel_function.tcc: Likewise.\n+\t* include/tr1/cmath: Likewise.\n+\t* include/tr1/ell_integral.tcc: Likewise.\n+\t* include/tr1/hypergeometric.tcc: Likewise.\n+\t* include/tr1/legendre_function.tcc: Likewise.\n+\t* include/tr1_impl/random: Likewise.\n+\t* include/tr1_impl/regex: Likewise.\n+\n 2008-01-31  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/27_io/basic_istream/extractors_character/pod/3983-2.cc:"}, {"sha": "2787d1a711469a467ceea261eff0467a7121fa00", "filename": "libstdc++-v3/include/backward/auto_ptr.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fauto_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fauto_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fauto_ptr.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -110,7 +110,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  @param  a  Another %auto_ptr of the same type.\n        *\n        *  This object now @e owns the object previously owned by @a a,\n-       *  which has given up ownsership.\n+       *  which has given up ownership.\n        */\n       auto_ptr(auto_ptr& __a) throw() : _M_ptr(__a.release()) { }\n \n@@ -122,7 +122,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  pointer-to-Tp/element_type.\n        *\n        *  This object now @e owns the object previously owned by @a a,\n-       *  which has given up ownsership.\n+       *  which has given up ownership.\n        */\n       template<typename _Tp1>\n         auto_ptr(auto_ptr<_Tp1>& __a) throw() : _M_ptr(__a.release()) { }\n@@ -132,7 +132,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  @param  a  Another %auto_ptr of the same type.\n        *\n        *  This object now @e owns the object previously owned by @a a,\n-       *  which has given up ownsership.  The object that this one @e\n+       *  which has given up ownership.  The object that this one @e\n        *  used to own and track has been deleted.\n        */\n       auto_ptr&\n@@ -149,7 +149,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  A pointer-to-Tp1 must be convertible to a pointer-to-Tp/element_type.\n        *\n        *  This object now @e owns the object previously owned by @a a,\n-       *  which has given up ownsership.  The object that this one @e\n+       *  which has given up ownership.  The object that this one @e\n        *  used to own and track has been deleted.\n        */\n       template<typename _Tp1>"}, {"sha": "116e0b25e21c65ee3f9f8ddb7b9806163d4f117d", "filename": "libstdc++-v3/include/bits/algorithmfwd.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -61,7 +61,7 @@\n   mismatch\n   next_permutation\n   nth_element\n-  parital_sort\n+  partial_sort\n   partial_sort_copy\n   partition\n   pop_heap\n@@ -82,7 +82,7 @@\n   rotate_copy\n   search\n   search_n\n-  set_differernce\n+  set_difference\n   set_intersection\n   set_symmetric_difference\n   set_union"}, {"sha": "66d90f62b237dd070ee507b553fadffc0fcca1af", "filename": "libstdc++-v3/include/bits/basic_ios.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -225,7 +225,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  in the error flags, then an exception of type\n        *  std::ios_base::failure is thrown.\n        *\n-       *  If the error flage is already set when the exceptions mask is\n+       *  If the error flag is already set when the exceptions mask is\n        *  added, the exception is immediately thrown.  Try running the\n        *  following under GCC 3.1 or later:\n        *  @code\n@@ -355,7 +355,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       copyfmt(const basic_ios& __rhs);\n \n       /**\n-       *  @brief  Retreives the \"empty\" character.\n+       *  @brief  Retrieves the \"empty\" character.\n        *  @return  The current fill character.\n        *\n        *  It defaults to a space (' ') in the current locale."}, {"sha": "a85f3a524f225f11fb8f1699eee8937b0c1ed4dd", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -111,7 +111,7 @@\n // _GLIBCXX_STD_P\n \n //\n-// Macros for enclosing namepaces and possibly nested namespaces.\n+// Macros for enclosing namespaces and possibly nested namespaces.\n // _GLIBCXX_BEGIN_NAMESPACE\n // _GLIBCXX_END_NAMESPACE\n // _GLIBCXX_BEGIN_NESTED_NAMESPACE\n@@ -167,7 +167,7 @@\n # endif\n \n # if __NO_INLINE__ && !__GXX_WEAK__\n-#  warning currently using namepace associated mode which may fail \\\n+#  warning currently using namespace associated mode which may fail \\\n    without inlining due to lack of weak symbols\n # endif\n "}, {"sha": "d01db93be49f62cf8c12c281f9f499e096a14fe5", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -78,7 +78,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n    *  right, but the int_type and state_type typedefs, and the eof()\n    *  member function, are likely to be wrong.)  The reason this class\n    *  exists is so users can specialize it.  Classes in namespace std\n-   *  may not be specialized for fundamentl types, but classes in\n+   *  may not be specialized for fundamental types, but classes in\n    *  namespace __gnu_cxx may be.\n    *\n    *  See http://gcc.gnu.org/onlinedocs/libstdc++/21_strings/howto.html#5"}, {"sha": "8d182499d6d5e5b28417bc187b58397ffa7e1c62", "filename": "libstdc++-v3/include/bits/codecvt.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -96,7 +96,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  respectively.  If the result needed no conversion, from_next and\n        *  to_next are not affected.\n        *\n-       *  The @a state argument should be intialized if the input is at the\n+       *  The @a state argument should be initialized if the input is at the\n        *  beginning and carried from a previous call if continuing\n        *  conversion.  There are no guarantees about how @a state is used.\n        *\n@@ -176,7 +176,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  respectively.  If the result needed no conversion, from_next and\n        *  to_next are not affected.\n        *\n-       *  The @a state argument should be intialized if the input is at the\n+       *  The @a state argument should be initialized if the input is at the\n        *  beginning and carried from a previous call if continuing\n        *  conversion.  There are no guarantees about how @a state is used.\n        *"}, {"sha": "7f305f056468c3ebbe52463e7cac88a46db49a95", "filename": "libstdc++-v3/include/bits/gslice.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -79,7 +79,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     gslice(size_t, const valarray<size_t>&, const valarray<size_t>&);\n \n     // XXX: the IS says the copy-ctor and copy-assignment operators are\n-    //      synthetized by the compiler but they are just unsuitable\n+    //      synthesized by the compiler but they are just unsuitable\n     //      for a ref-counted semantic\n     ///  Copy constructor.\n     gslice(const gslice&);"}, {"sha": "95a3d2b91042a7acef8b9e62406f1799f0cf986b", "filename": "libstdc++-v3/include/bits/ios_base.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -899,7 +899,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n      return __base;\n   }\n \n-  // [27.4.5.2] adjustfield anipulators\n+  // [27.4.5.2] adjustfield manipulators\n   /// Calls base.setf(ios_base::internal, ios_base::adjustfield).\n   inline ios_base&\n   internal(ios_base& __base)\n@@ -924,7 +924,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     return __base;\n   }\n \n-  // [27.4.5.3] basefield anipulators\n+  // [27.4.5.3] basefield manipulators\n   /// Calls base.setf(ios_base::dec, ios_base::basefield).\n   inline ios_base&\n   dec(ios_base& __base)\n@@ -949,7 +949,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     return __base;\n   }\n \n-  // [27.4.5.4] floatfield anipulators\n+  // [27.4.5.4] floatfield manipulators\n   /// Calls base.setf(ios_base::fixed, ios_base::floatfield).\n   inline ios_base&\n   fixed(ios_base& __base)"}, {"sha": "c60f04d262ab024051d2499e3aada368e5a34079", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -143,7 +143,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n    *  This template class provides implementations of the public functions\n    *  that forward to the protected virtual functions.\n    *\n-   *  This template also provides abtract stubs for the protected virtual\n+   *  This template also provides abstract stubs for the protected virtual\n    *  functions.\n   */\n   template<typename _CharT>\n@@ -2021,7 +2021,7 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n        *  specifier.  Otherwise, parses like %d for signed and %u for unsigned\n        *  types.  The matching type length modifier is also used.\n        *\n-       *  Digit grouping is intrepreted according to numpunct::grouping() and\n+       *  Digit grouping is interpreted according to numpunct::grouping() and\n        *  numpunct::thousands_sep().  If the pattern of digit groups isn't\n        *  consistent, sets err to ios_base::failbit.\n        *\n@@ -2080,7 +2080,7 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n        *  matching type length modifier is also used.\n        *\n        *  The decimal point character used is numpunct::decimal_point().\n-       *  Digit grouping is intrepreted according to numpunct::grouping() and\n+       *  Digit grouping is interpreted according to numpunct::grouping() and\n        *  numpunct::thousands_sep().  If the pattern of digit groups isn't\n        *  consistent, sets err to ios_base::failbit.\n        *\n@@ -2119,7 +2119,7 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n        *\n        *  The input characters are parsed like the scanf %p specifier.\n        *\n-       *  Digit grouping is intrepreted according to numpunct::grouping() and\n+       *  Digit grouping is interpreted according to numpunct::grouping() and\n        *  numpunct::thousands_sep().  If the pattern of digit groups isn't\n        *  consistent, sets err to ios_base::failbit.\n        *"}, {"sha": "1c569ba5bd06aba7de4c24ecbb90576cdd291615", "filename": "libstdc++-v3/include/bits/locale_facets_nonio.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -491,7 +491,7 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \t\t    break;\n \t\t  case money_base::sign:\n \t\t    // Sign might not exist, or be more than one\n-\t\t    // charater long. In that case, add in the rest\n+\t\t    // character long. In that case, add in the rest\n \t\t    // below.\n \t\t    if (__sign_size)\n \t\t      __res += __sign[0];"}, {"sha": "2870a8e59a1f118a4dfacdd540fd3df33981744c", "filename": "libstdc++-v3/include/bits/postypes.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -54,7 +54,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   // The types streamoff, streampos and wstreampos and the class\n   // template fpos<> are described in clauses 21.1.2, 21.1.3, 27.1.2,\n-  // 27.2, 27.4.1, 27.4.3 and D.6. Despite all this verbage, the\n+  // 27.2, 27.4.1, 27.4.3 and D.6. Despite all this verbiage, the\n   // behaviour of these types is mostly implementation defined or\n   // unspecified. The behaviour in this implementation is as noted\n   // below.\n@@ -126,7 +126,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       { return _M_state; }\n \n       // The standard requires that this operator must be defined, but\n-      // gives no semantics. In this implemenation it just adds it's\n+      // gives no semantics. In this implementation it just adds its\n       // argument to the stored offset and returns *this.\n       /// Add offset to this position.\n       fpos&\n@@ -137,8 +137,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       }\n \n       // The standard requires that this operator must be defined, but\n-      // gives no semantics. In this implemenation it just subtracts\n-      // it's argument from the stored offset and returns *this.\n+      // gives no semantics. In this implementation it just subtracts\n+      // its argument from the stored offset and returns *this.\n       /// Subtract offset from this position.\n       fpos&\n       operator-=(streamoff __off)\n@@ -148,7 +148,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       }\n \n       // The standard requires that this operator must be defined, but\n-      // defines it's semantics only in terms of operator-. In this\n+      // defines its semantics only in terms of operator-. In this\n       // implementation it constructs a copy of *this, adds the\n       // argument to that copy using operator+= and then returns the\n       // copy.\n@@ -162,7 +162,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       }\n \n       // The standard requires that this operator must be defined, but\n-      // defines it's semantics only in terms of operator+. In this\n+      // defines its semantics only in terms of operator+. In this\n       // implementation it constructs a copy of *this, subtracts the\n       // argument from that copy using operator-= and then returns the\n       // copy.\n@@ -176,7 +176,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       }\n \n       // The standard requires that this operator must be defined, but\n-      // defines it's semantics only in terms of operator+. In this\n+      // defines its semantics only in terms of operator+. In this\n       // implementation it returns the difference between the offset\n       // stored in *this and in the argument.\n       /// Subtract position to return offset."}, {"sha": "2a62a9cc711d4372d2b51221bfd877aac28ce8e7", "filename": "libstdc++-v3/include/bits/sstream.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -105,7 +105,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t{\n \t  // NB: Start ostringstream buffers at 512 chars.  This is an\n \t  // experimental value (pronounced \"arbitrary\" in some of the\n-\t  // hipper english-speaking countries), and can be changed to\n+\t  // hipper English-speaking countries), and can be changed to\n \t  // suit particular needs.\n \t  //\n \t  // _GLIBCXX_RESOLVE_LIB_DEFECTS"}, {"sha": "549c0cac7e75cc2fc02b4509a754385f458456bb", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -2385,7 +2385,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n    *  @param  first   An iterator.\n    *  @param  last    Another iterator.\n    *  @param  val     The search term.\n-   *  @return  True if @a val (or its equivelent) is in [@a first,@a last ].\n+   *  @return  True if @a val (or its equivalent) is in [@a first,@a last ].\n    *  @ingroup binarysearch\n    *\n    *  Note that this does not actually return an iterator to @a val.  For\n@@ -2415,7 +2415,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n    *  @param  last    Another iterator.\n    *  @param  val     The search term.\n    *  @param  comp    A functor to use for comparisons.\n-   *  @return  True if @a val (or its equivelent) is in [@a first,@a last ].\n+   *  @return  True if @a val (or its equivalent) is in [@a first,@a last ].\n    *  @ingroup binarysearch\n    *\n    *  Note that this does not actually return an iterator to @a val.  For\n@@ -3845,7 +3845,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_P)\n    *  @param  last2   End of match candidates.\n    *  @return   The first iterator @c i in the range\n    *  @p [first1,last1) such that @c *i == @p *(i2) such that i2 is an\n-   *  interator in [first2,last2), or @p last1 if no such iterator exists.\n+   *  iterator in [first2,last2), or @p last1 if no such iterator exists.\n    *\n    *  Searches the range @p [first1,last1) for an element that is equal to\n    *  some element in the range [first2,last2).  If found, returns an iterator\n@@ -3881,7 +3881,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_P)\n    *  @param  comp    Predicate to use.\n    *  @return   The first iterator @c i in the range\n    *  @p [first1,last1) such that @c comp(*i, @p *(i2)) is true and i2 is an\n-   *  interator in [first2,last2), or @p last1 if no such iterator exists.\n+   *  iterator in [first2,last2), or @p last1 if no such iterator exists.\n    *\n \n    *  Searches the range @p [first1,last1) for an element that is"}, {"sha": "6032765ed0c051431348006c1c9fff78292906fb", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -75,7 +75,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n    *\n    *  This function started off as a compiler kludge from SGI, but seems to\n    *  be a useful wrapper around a repeated constant expression.  The '512' is\n-   *  tuneable (and no other code needs to change), but no investigation has\n+   *  tunable (and no other code needs to change), but no investigation has\n    *  been done since inheriting the SGI code.\n   */\n   inline size_t\n@@ -681,7 +681,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       using _Base::_M_get_Tp_allocator;\n \n       /** \n-       *  A total of four data members accumulated down the heirarchy.\n+       *  A total of four data members accumulated down the hierarchy.\n        *  May be accessed via _M_impl.*\n        */\n       using _Base::_M_impl;\n@@ -770,7 +770,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       /**\n        *  The dtor only erases the elements, and note that if the elements\n        *  themselves are pointers, the pointed-to memory is not touched in any\n-       *  way.  Managing the pointer is the user's responsibilty.\n+       *  way.  Managing the pointer is the user's responsibility.\n        */\n       ~deque()\n       { _M_destroy_data(begin(), end(), _M_get_Tp_allocator()); }\n@@ -1312,7 +1312,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  The user is cautioned that\n        *  this function only erases the element, and that if the element is\n        *  itself a pointer, the pointed-to memory is not touched in any way.\n-       *  Managing the pointer is the user's responsibilty.\n+       *  Managing the pointer is the user's responsibility.\n        */\n       iterator\n       erase(iterator __position);\n@@ -1331,7 +1331,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  The user is cautioned that\n        *  this function only erases the elements, and that if the elements\n        *  themselves are pointers, the pointed-to memory is not touched in any\n-       *  way.  Managing the pointer is the user's responsibilty.\n+       *  way.  Managing the pointer is the user's responsibility.\n        */\n       iterator\n       erase(iterator __first, iterator __last);\n@@ -1367,7 +1367,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  Erases all the elements.  Note that this function only erases the\n        *  elements, and that if the elements themselves are pointers, the\n        *  pointed-to memory is not touched in any way.  Managing the pointer is\n-       *  the user's responsibilty.\n+       *  the user's responsibility.\n        */\n       void\n       clear()"}, {"sha": "b041d343a09dde7a15d8cc727437ca9cbeb960bc", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -750,7 +750,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n   // Note: In what follows, the left- and right-hand-side iterators are\n   // allowed to vary in types (conceptually in cv-qualification) so that\n-  // comparaison between cv-qualified and non-cv-qualified iterators be\n+  // comparison between cv-qualified and non-cv-qualified iterators be\n   // valid.  However, the greedy and unfriendly operators in std::rel_ops\n   // will make overload resolution ambiguous (when in scope) if we don't\n   // provide overloads whose operands are of the same type.  Can someone"}, {"sha": "710a28225680c627af491a293f38f495a7aa835f", "filename": "libstdc++-v3/include/bits/stl_iterator_base_types.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_types.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -78,7 +78,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n    *  These are empty types, used to distinguish different iterators.  The\n    *  distinction is not made by what they contain, but simply by what they\n    *  are.  Different underlying algorithms can then be used based on the\n-   *  different operations supporetd by different iterator types.\n+   *  different operations supported by different iterator types.\n   */\n   ///  Marking input iterators.\n   struct input_iterator_tag {};"}, {"sha": "a631b0ef1eff1cf2e258b6a1968312d8c491cc76", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -568,7 +568,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  things.  The _Base dtor only erases the elements, and note\n        *  that if the elements themselves are pointers, the pointed-to\n        *  memory is not touched in any way.  Managing the pointer is\n-       *  the user's responsibilty.\n+       *  the user's responsibility.\n        */\n \n       /**\n@@ -999,7 +999,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  the element being removed.  The user is also cautioned that\n        *  this function only erases the element, and that if the element\n        *  is itself a pointer, the pointed-to memory is not touched in\n-       *  any way.  Managing the pointer is the user's responsibilty.\n+       *  any way.  Managing the pointer is the user's responsibility.\n        */\n       iterator\n       erase(iterator __position);\n@@ -1020,7 +1020,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  The user is also cautioned that this function only erases the\n        *  elements, and that if the elements themselves are pointers, the\n        *  pointed-to memory is not touched in any way.  Managing the pointer\n-       *  is the user's responsibilty.\n+       *  is the user's responsibility.\n        */\n       iterator\n       erase(iterator __first, iterator __last)\n@@ -1058,7 +1058,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  Erases all the elements.  Note that this function only erases\n        *  the elements, and that if the elements themselves are\n        *  pointers, the pointed-to memory is not touched in any way.\n-       *  Managing the pointer is the user's responsibilty.\n+       *  Managing the pointer is the user's responsibility.\n        */\n       void\n       clear()\n@@ -1160,7 +1160,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  function only erases the elements, and that if the elements\n        *  themselves are pointers, the pointed-to memory is not\n        *  touched in any way.  Managing the pointer is the user's\n-       *  responsibilty.\n+       *  responsibility.\n        */\n       void\n       remove(const _Tp& __value);\n@@ -1174,7 +1174,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  that this function only erases the elements, and that if the\n        *  elements themselves are pointers, the pointed-to memory is\n        *  not touched in any way.  Managing the pointer is the user's\n-       *  responsibilty.\n+       *  responsibility.\n        */\n       template<typename _Predicate>\n         void\n@@ -1188,7 +1188,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  list order.  Note that this function only erases the\n        *  elements, and that if the elements themselves are pointers,\n        *  the pointed-to memory is not touched in any way.  Managing\n-       *  the pointer is the user's responsibilty.\n+       *  the pointer is the user's responsibility.\n        */\n       void\n       unique();\n@@ -1203,7 +1203,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  elements stay in list order.  Note that this function only\n        *  erases the elements, and that if the elements themselves are\n        *  pointers, the pointed-to memory is not touched in any way.\n-       *  Managing the pointer is the user's responsibilty.\n+       *  Managing the pointer is the user's responsibility.\n        */\n       template<typename _BinaryPredicate>\n         void\n@@ -1228,7 +1228,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       /**\n        *  @brief  Merge sorted lists according to comparison function.\n        *  @param  x  Sorted list to merge.\n-       *  @param StrictWeakOrdering Comparison function definining\n+       *  @param StrictWeakOrdering Comparison function defining\n        *  sort order.\n        *\n        *  Assumes that both @a x and this list are sorted according to"}, {"sha": "a9486708ffef074987a8b72d6f34ac28c792234a", "filename": "libstdc++-v3/include/bits/stl_map.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -225,7 +225,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       /**\n        *  The dtor only erases the elements, and note that if the elements\n        *  themselves are pointers, the pointed-to memory is not touched in any\n-       *  way.  Managing the pointer is the user's responsibilty.\n+       *  way.  Managing the pointer is the user's responsibility.\n        */\n \n       /**\n@@ -496,7 +496,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       { return _M_t._M_insert_unique_(__position, __x); }\n \n       /**\n-       *  @brief Template function that attemps to insert a range of elements.\n+       *  @brief Template function that attempts to insert a range of elements.\n        *  @param  first  Iterator pointing to the start of the range to be\n        *                 inserted.\n        *  @param  last  Iterator pointing to the end of the range.\n@@ -516,7 +516,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  iterator, from a %map.  Note that this function only erases\n        *  the element, and that if the element is itself a pointer,\n        *  the pointed-to memory is not touched in any way.  Managing\n-       *  the pointer is the user's responsibilty.\n+       *  the pointer is the user's responsibility.\n        */\n       void\n       erase(iterator __position)\n@@ -531,7 +531,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  a %map.\n        *  Note that this function only erases the element, and that if\n        *  the element is itself a pointer, the pointed-to memory is not touched\n-       *  in any way.  Managing the pointer is the user's responsibilty.\n+       *  in any way.  Managing the pointer is the user's responsibility.\n        */\n       size_type\n       erase(const key_type& __x)\n@@ -546,7 +546,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  This function erases a sequence of elements from a %map.\n        *  Note that this function only erases the element, and that if\n        *  the element is itself a pointer, the pointed-to memory is not touched\n-       *  in any way.  Managing the pointer is the user's responsibilty.\n+       *  in any way.  Managing the pointer is the user's responsibility.\n        */\n       void\n       erase(iterator __first, iterator __last)\n@@ -575,7 +575,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  Erases all elements in a %map.  Note that this function only\n        *  erases the elements, and that if the elements themselves are\n        *  pointers, the pointed-to memory is not touched in any way.\n-       *  Managing the pointer is the user's responsibilty.\n+       *  Managing the pointer is the user's responsibility.\n        */\n       void\n       clear()"}, {"sha": "cfc1a69ec5ff28e0242c2c1c49a7b71e9131817a", "filename": "libstdc++-v3/include/bits/stl_multimap.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -223,7 +223,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       /**\n        *  The dtor only erases the elements, and note that if the elements\n        *  themselves are pointers, the pointed-to memory is not touched in any\n-       *  way.  Managing the pointer is the user's responsibilty.\n+       *  way.  Managing the pointer is the user's responsibility.\n        */\n \n       /**\n@@ -432,7 +432,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       { return _M_t._M_insert_equal_(__position, __x); }\n \n       /**\n-       *  @brief A template function that attemps to insert a range of elements.\n+       *  @brief A template function that attempts to insert a range of elements.\n        *  @param  first  Iterator pointing to the start of the range to be\n        *                 inserted.\n        *  @param  last  Iterator pointing to the end of the range.\n@@ -452,7 +452,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  from a %multimap.  Note that this function only erases the element,\n        *  and that if the element is itself a pointer, the pointed-to memory is\n        *  not touched in any way.  Managing the pointer is the user's\n-       *  responsibilty.\n+       *  responsibility.\n        */\n       void\n       erase(iterator __position)\n@@ -467,7 +467,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  %multimap.\n        *  Note that this function only erases the element, and that if\n        *  the element is itself a pointer, the pointed-to memory is not touched\n-       *  in any way.  Managing the pointer is the user's responsibilty.\n+       *  in any way.  Managing the pointer is the user's responsibility.\n        */\n       size_type\n       erase(const key_type& __x)\n@@ -482,7 +482,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  This function erases a sequence of elements from a %multimap.\n        *  Note that this function only erases the elements, and that if\n        *  the elements themselves are pointers, the pointed-to memory is not\n-       *  touched in any way.  Managing the pointer is the user's responsibilty.\n+       *  touched in any way.  Managing the pointer is the user's responsibility.\n        */\n       void\n       erase(iterator __first, iterator __last)\n@@ -511,7 +511,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  Erases all elements in a %multimap.  Note that this function only\n        *  erases the elements, and that if the elements themselves are pointers,\n        *  the pointed-to memory is not touched in any way.  Managing the pointer\n-       *  is the user's responsibilty.\n+       *  is the user's responsibility.\n        */\n       void\n       clear()"}, {"sha": "2cdbdfe4cf3f0e60e3bc1595d357fdd4847abf8c", "filename": "libstdc++-v3/include/bits/stl_multiset.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -394,7 +394,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       { return _M_t._M_insert_equal_(__position, __x); }\n \n       /**\n-       *  @brief A template function that attemps to insert a range of elements.\n+       *  @brief A template function that attempts to insert a range of elements.\n        *  @param  first  Iterator pointing to the start of the range to be\n        *                 inserted.\n        *  @param  last  Iterator pointing to the end of the range.\n@@ -414,7 +414,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  from a %multiset.  Note that this function only erases the element,\n        *  and that if the element is itself a pointer, the pointed-to memory is\n        *  not touched in any way.  Managing the pointer is the user's\n-       *  responsibilty.\n+       *  responsibility.\n        */\n       void\n       erase(iterator __position)\n@@ -429,7 +429,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  %multiset.\n        *  Note that this function only erases the element, and that if\n        *  the element is itself a pointer, the pointed-to memory is not touched\n-       *  in any way.  Managing the pointer is the user's responsibilty.\n+       *  in any way.  Managing the pointer is the user's responsibility.\n        */\n       size_type\n       erase(const key_type& __x)\n@@ -444,7 +444,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  This function erases a sequence of elements from a %multiset.\n        *  Note that this function only erases the elements, and that if\n        *  the elements themselves are pointers, the pointed-to memory is not\n-       *  touched in any way.  Managing the pointer is the user's responsibilty.\n+       *  touched in any way.  Managing the pointer is the user's responsibility.\n        */\n       void\n       erase(iterator __first, iterator __last)\n@@ -454,7 +454,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  Erases all elements in a %multiset.  Note that this function only\n        *  erases the elements, and that if the elements themselves are pointers,\n        *  the pointed-to memory is not touched in any way.  Managing the pointer\n-       *  is the user's responsibilty.\n+       *  is the user's responsibility.\n        */\n       void\n       clear()"}, {"sha": "2ef51de858feda51afdd0052ac745a8344b0b0cd", "filename": "libstdc++-v3/include/bits/stl_set.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -406,7 +406,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       { return _M_t._M_insert_unique_(__position, __x); }\n \n       /**\n-       *  @brief A template function that attemps to insert a range of elements.\n+       *  @brief A template function that attempts to insert a range of elements.\n        *  @param  first  Iterator pointing to the start of the range to be\n        *                 inserted.\n        *  @param  last  Iterator pointing to the end of the range.\n@@ -425,7 +425,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  This function erases an element, pointed to by the given iterator,\n        *  from a %set.  Note that this function only erases the element, and\n        *  that if the element is itself a pointer, the pointed-to memory is not\n-       *  touched in any way.  Managing the pointer is the user's responsibilty.\n+       *  touched in any way.  Managing the pointer is the user's responsibility.\n        */\n       void\n       erase(iterator __position)\n@@ -440,7 +440,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  a %set.\n        *  Note that this function only erases the element, and that if\n        *  the element is itself a pointer, the pointed-to memory is not touched\n-       *  in any way.  Managing the pointer is the user's responsibilty.\n+       *  in any way.  Managing the pointer is the user's responsibility.\n        */\n       size_type\n       erase(const key_type& __x)\n@@ -455,7 +455,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  This function erases a sequence of elements from a %set.\n        *  Note that this function only erases the element, and that if\n        *  the element is itself a pointer, the pointed-to memory is not touched\n-       *  in any way.  Managing the pointer is the user's responsibilty.\n+       *  in any way.  Managing the pointer is the user's responsibility.\n        */\n       void\n       erase(iterator __first, iterator __last)\n@@ -465,7 +465,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  Erases all elements in a %set.  Note that this function only erases\n        *  the elements, and that if the elements themselves are pointers, the\n        *  pointed-to memory is not touched in any way.  Managing the pointer is\n-       *  the user's responsibilty.\n+       *  the user's responsibility.\n        */\n       void\n       clear()"}, {"sha": "34bb595d52868c4ac177dc6980d711d1d2f415c9", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -294,7 +294,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  The dtor only erases the elements, and note that if the\n        *  elements themselves are pointers, the pointed-to memory is\n        *  not touched in any way.  Managing the pointer is the user's\n-       *  responsibilty.\n+       *  responsibility.\n        */\n       ~vector()\n       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,\n@@ -828,7 +828,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  The user is also cautioned that this function only erases\n        *  the element, and that if the element is itself a pointer,\n        *  the pointed-to memory is not touched in any way.  Managing\n-       *  the pointer is the user's responsibilty.\n+       *  the pointer is the user's responsibility.\n        */\n       iterator\n       erase(iterator __position);\n@@ -849,7 +849,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  The user is also cautioned that this function only erases\n        *  the elements, and that if the elements themselves are\n        *  pointers, the pointed-to memory is not touched in any way.\n-       *  Managing the pointer is the user's responsibilty.\n+       *  Managing the pointer is the user's responsibility.\n        */\n       iterator\n       erase(iterator __first, iterator __last);\n@@ -885,7 +885,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  Erases all the elements.  Note that this function only erases the\n        *  elements, and that if the elements themselves are pointers, the\n        *  pointed-to memory is not touched in any way.  Managing the pointer is\n-       *  the user's responsibilty.\n+       *  the user's responsibility.\n        */\n       void\n       clear()"}, {"sha": "b8e5d1a7b043c0c9f03534654c776d8c8d737be7", "filename": "libstdc++-v3/include/bits/valarray_array.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_array.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -239,7 +239,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t*__a = __t;\n     }\n \n-  // fill indir   ect array __a[__i[<__n>]] with __i\n+  // fill indirect array __a[__i[<__n>]] with __i\n   template<typename _Tp>\n     inline void\n     __valarray_fill(_Tp* __restrict__ __a, const size_t* __restrict__ __i,"}, {"sha": "a53802489cc8cb6298aa579d0757a7fd2b39dfdc", "filename": "libstdc++-v3/include/debug/safe_base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_base.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -197,7 +197,7 @@ namespace __gnu_debug\n \n     /** Revalidates all attached singular iterators.  This method may\n      *  be used to validate iterators that were invalidated before\n-     *  (but for some reasion, such as an exception, need to become\n+     *  (but for some reason, such as an exception, need to become\n      *  valid again).\n      */\n     void"}, {"sha": "2736a4640ebab842a42d61d0fcce1d36038c09bc", "filename": "libstdc++-v3/include/ext/bitmap_allocator.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -377,7 +377,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \t  // Set the _rover to the last physical location bitmap,\n \t  // which is the bitmap which belongs to the first free\n \t  // block. Thus, the bitmaps are in exact reverse order of\n-\t  // the actual memory layout. So, we count down the bimaps,\n+\t  // the actual memory layout. So, we count down the bitmaps,\n \t  // which is the same as moving up the memory.\n \n \t  // If the used count stored at the start of the Bit Map headers\n@@ -608,7 +608,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \t  else\n \t    {\n \t      // Deallocate the last block in the list of free lists,\n-\t      // and insert the new one in it's correct position.\n+\t      // and insert the new one in its correct position.\n \t      ::operator delete(static_cast<void*>(__free_list.back()));\n \t      __free_list.pop_back();\n \t    }"}, {"sha": "42e3c0f14770f3cb54b005910d98b75c0f14bd99", "filename": "libstdc++-v3/include/ext/codecvt_specializations.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fext%2Fcodecvt_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fext%2Fcodecvt_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fcodecvt_specializations.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -47,7 +47,7 @@\n \n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n-  /// @brief  Extension to use icov for dealing with character encodings.\n+  /// @brief  Extension to use iconv for dealing with character encodings.\n   // This includes conversions and comparisons between various character\n   // sets.  This object encapsulates data that may need to be shared between\n   // char_traits, codecvt and ctype.\n@@ -101,7 +101,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     // typedef STATE_T state_type\n     // requires: state_type shall meet the requirements of\n     // CopyConstructible types (20.1.3)\n-    // NB: This does not preseve the actual state of the conversion\n+    // NB: This does not preserve the actual state of the conversion\n     // descriptor member, but it does duplicate the encoding\n     // information.\n     encoding_state(const encoding_state& __obj) : _M_in_desc(0), _M_out_desc(0)"}, {"sha": "84aed823a68e9c6877cf2c77d7b53dfe88fabedd", "filename": "libstdc++-v3/include/ext/mt_allocator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -86,7 +86,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       // In order to avoid fragmenting and minimize the number of\n       // new() calls we always request new memory using this\n       // value. Based on previous discussions on the libstdc++\n-      // mailing list we have choosen the value below.\n+      // mailing list we have chosen the value below.\n       // See http://gcc.gnu.org/ml/libstdc++/2001-07/msg00077.html\n       // NB: At least one order of magnitude > _M_max_bytes. \n       size_t\t_M_chunk_size;"}, {"sha": "0d3224cea10f59aedfe8d71203c4006f50f3c033", "filename": "libstdc++-v3/include/ext/rc_string_base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -178,7 +178,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       // (NB: last two terms for rounding reasons, see _M_create below)\n       // Solving for m:\n       // m = ((npos - 2 * sizeof(_Rep) + 1) / sizeof(_CharT)) - 1\n-      // In addition, this implementation halfs this amount.\n+      // In addition, this implementation halves this amount.\n       enum { _S_max_size = (((static_cast<size_type>(-1) - 2 * sizeof(_Rep)\n \t\t\t      + 1) / sizeof(_CharT)) - 1) / 2 };\n "}, {"sha": "e39761ec4329b4ec56d0f6276799359f932bef80", "filename": "libstdc++-v3/include/ext/rope", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -129,7 +129,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n   { __c = 0; }\n \n   // char_producers are logically functions that generate a section of\n-  // a string.  These can be convereted to ropes.  The resulting rope\n+  // a string.  These can be converted to ropes.  The resulting rope\n   // invokes the char_producer on demand.  This allows, for example,\n   // files to be viewed as ropes without reading the entire file.\n   template <class _CharT>\n@@ -1759,7 +1759,7 @@ protected:\n       // definition.\n       static _RopeRep* _S_balance(_RopeRep* __r);\n \n-      // Add all unbalanced subtrees to the forest of balanceed trees.\n+      // Add all unbalanced subtrees to the forest of balanced trees.\n       // Used only by balance.\n       static void _S_add_to_forest(_RopeRep*__r, _RopeRep** __forest);\n \n@@ -1975,7 +1975,7 @@ protected:\n       // Embedded 0s in the input do not terminate the copy.\n       const _CharT* c_str() const;\n \n-      // As above, but lso use the flattened representation as the\n+      // As above, but also use the flattened representation as\n       // the new rope representation.\n       const _CharT* replace_with_c_str();\n       \n@@ -2040,7 +2040,7 @@ protected:\n       max_size() const\n       {\n \treturn _S_min_len[int(__detail::_S_max_rope_depth) - 1] - 1;\n-\t//  Guarantees that the result can be sufficirntly\n+\t//  Guarantees that the result can be sufficiently\n \t//  balanced.  Longer ropes will probably still work,\n \t//  but it's harder to make guarantees.\n       }"}, {"sha": "1c6bc355d175c38b1585c8fb4bb17001f43862d2", "filename": "libstdc++-v3/include/parallel/checkers.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fcheckers.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fcheckers.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fcheckers.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -82,7 +82,7 @@ namespace __gnu_parallel\n \n   /**\n    * @brief Check whether @c [begin, @c end) is sorted according to @c comp.\n-   * Prints the position in case an misordered pair is found.\n+   * Prints the position in case an unordered pair is found.\n    * @param begin Begin iterator of sequence.\n    * @param end End iterator of sequence.\n    * @param first_failure The first failure is returned in this variable.\n@@ -123,7 +123,7 @@ namespace __gnu_parallel\n \n   /**\n    * @brief Check whether @c [begin, @c end) is sorted according to @c comp.\n-   * Prints all misordered pair, including the surrounding two elements.\n+   * Prints all unordered pair, including the surrounding two elements.\n    * @param begin Begin iterator of sequence.\n    * @param end End iterator of sequence.\n    * @param comp Comparator."}, {"sha": "e31638a0ee62172cd3b724051988bc78b013adfb", "filename": "libstdc++-v3/include/parallel/find.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ffind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ffind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ffind.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -10,7 +10,7 @@\n \n // This library is distributed in the hope that it will be useful, but\n // WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURstartE.  See the GNU\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n // General Public License for more details.\n \n // You should have received a copy of the GNU General Public License"}, {"sha": "32f1b53a2c4ec27fe30a7317a29fdf4ae7105c81", "filename": "libstdc++-v3/include/parallel/multiseq_selection.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiseq_selection.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiseq_selection.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiseq_selection.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -602,7 +602,7 @@ namespace __gnu_parallel\n \n       if (!maxleftset || comp(minright, maxleft))\n \t{\n-\t  // Good luck, everything is split unambigiously.\n+\t  // Good luck, everything is split unambiguously.\n \t  offset = 0;\n \t}\n       else"}, {"sha": "0a49d8f60825b3c615ffa9519227cd7666713c5a", "filename": "libstdc++-v3/include/parallel/partition.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartition.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartition.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartition.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -386,7 +386,7 @@ template<typename RandomAccessIterator, typename Comparator>\n \t    || (end - split_pos1) < (n >> 7))\n           {\n             // Very unequal split, one part smaller than one 128th\n-            // elements not stricly larger than the pivot.\n+            // elements not strictly larger than the pivot.\n             __gnu_parallel::unary_negate<__gnu_parallel::\n \t      binder1st<Comparator, value_type, value_type, bool>, value_type>\n \t      pred(__gnu_parallel::binder1st<Comparator, value_type,"}, {"sha": "920e27a69cec8f3faea0a9802cd9b91fa6deb692", "filename": "libstdc++-v3/include/parallel/settings.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsettings.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsettings.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsettings.h?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -100,7 +100,7 @@\n \n /** \n   * @brief The extensible condition on whether the parallel variant of\n-  * an algorithm sould be called.\n+  * an algorithm should be called.\n   * @param c A condition that is overruled by\n   * __gnu_parallel::Settings::force_parallel, i. e. usually a decision based on\n   * the input size.\n@@ -114,7 +114,7 @@ namespace __gnu_parallel\n {\n   // NB: Including this file cannot produce (unresolved) symbols from\n   // the OpenMP runtime unless the parallel mode is actually invoked\n-  // and active, which imples that the OpenMP runtime is actually\n+  // and active, which implies that the OpenMP runtime is actually\n   // going to be linked in.\n   inline int\n   get_max_threads() "}, {"sha": "0263162718231e616c1d3a2321ef632e25b6b55e", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -65,7 +65,7 @@\n _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \n   /**\n-   *  Base class, general case.  It is a class inveriant that _Nw will be\n+   *  Base class, general case.  It is a class invariant that _Nw will be\n    *  nonnegative.\n    *\n    *  See documentation for bitset.\n@@ -999,7 +999,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       //@}\n       \n       /**\n-       *  @brief Retuns a numerical interpretation of the %bitset.\n+       *  @brief Returns a numerical interpretation of the %bitset.\n        *  @return  The integral equivalent of the bits.\n        *  @throw  std::overflow_error  If there are too many bits to be\n        *                               represented in an @c unsigned @c long.\n@@ -1009,7 +1009,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       { return this->_M_do_to_ulong(); }\n \n       /**\n-       *  @brief Retuns a character interpretation of the %bitset.\n+       *  @brief Returns a character interpretation of the %bitset.\n        *  @return  The string equivalent of the bits.\n        *\n        *  Note the ordering of the bits:  decreasing character positions"}, {"sha": "f2d9e9346eee95373c9415e9a84ff1ab7c508945", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -610,7 +610,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     arg(const complex<_Tp>& __z) { return __complex_arg(__z); }\n #endif\n \n-  // 26.2.7/5: norm(__z) returns the squared magintude of __z.\n+  // 26.2.7/5: norm(__z) returns the squared magnitude of __z.\n   //     As defined, norm() is -not- a norm is the common mathematical\n   //     sens used in numerics.  The helper class _Norm_helper<> tries to\n   //     distinguish between builtin floating point and the rest, so as\n@@ -744,7 +744,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     exp(const complex<_Tp>& __z) { return __complex_exp(__z); }\n #endif\n \n-  // 26.2.8/5 log(__z): Reurns the natural complex logaritm of __z.\n+  // 26.2.8/5 log(__z): Returns the natural complex logarithm of __z.\n   //                    The branch cut is along the negative axis.\n   template<typename _Tp>\n     inline complex<_Tp>\n@@ -1024,7 +1024,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       complex<float>& operator*=(float);\n       complex<float>& operator/=(float);\n \n-      // Let's the compiler synthetize the copy and assignment\n+      // Let the compiler synthesize the copy and assignment\n       // operator.  It always does a pretty good job.\n       // complex& operator= (const complex&);\n       template<typename _Tp>\n@@ -1178,7 +1178,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       complex<double>& operator*=(double);\n       complex<double>& operator/=(double);\n \n-      // The compiler will synthetize this, efficiently.\n+      // The compiler will synthesize this, efficiently.\n       // complex& operator= (const complex&);\n       template<typename _Tp>\n         complex<double>& operator=(const complex<_Tp>&);"}, {"sha": "2bbbcc1f4701529c0a0fb035aa2820332066b732", "filename": "libstdc++-v3/include/std/fstream", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -56,7 +56,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n    *\n    *  This class associates both its input and output sequence with an\n    *  external disk file, and maintains a joint file position for both\n-   *  sequences.  Many of its sematics are described in terms of similar\n+   *  sequences.  Many of its semantics are described in terms of similar\n    *  behavior in the Standard C Library's @c FILE streams.\n   */\n   // Requirements on traits_type, specific to this class:\n@@ -292,7 +292,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n       // Stroustrup, 1998, p. 628\n       // underflow() and uflow() functions are called to get the next\n-      // charater from the real input source when the buffer is empty.\n+      // character from the real input source when the buffer is empty.\n       // Buffered input uses underflow()\n \n       virtual int_type\n@@ -650,7 +650,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   // [27.8.1.11] Template class basic_fstream\n   /**\n-   *  @brief  Controlling intput and output for files.\n+   *  @brief  Controlling input and output for files.\n    *\n    *  This class supports reading from and writing to named files, using\n    *  the inherited functions from std::basic_iostream.  To control the"}, {"sha": "331e643b63f220db0b3180b5e6f70f890e1e3daa", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -114,7 +114,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       /**\n        *  @brief  Interface for manipulators.\n        *\n-       *  Manuipulators such as @c std::ws and @c std::dec use these\n+       *  Manipulators such as @c std::ws and @c std::dec use these\n        *  functions in constructs like \"std::cin >> std::ws\".  For more\n        *  information, see the iomanip header.\n       */"}, {"sha": "7f7dd9ceeca3efc8700a0f902eca73584f906ef0", "filename": "libstdc++-v3/include/std/limits", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -63,7 +63,7 @@\n //         double\t\t\t\t\t\t(1)\n //         long double\t\t\t\t\t\t(1)\n //\n-// GNU C++ undertstands (where supported by the host C-library)\n+// GNU C++ understands (where supported by the host C-library)\n //   * integer\n //         long long, unsigned long long\t\t\t(2)\n //\n@@ -79,7 +79,7 @@\n // These values can be overridden in the target configuration file.\n // The default values are appropriate for many 32-bit targets.\n \n-// GCC only intrinsicly supports modulo integral types.  The only remaining\n+// GCC only intrinsically supports modulo integral types.  The only remaining\n // integral exceptional values is division by zero.  Only targets that do not\n // signal division by zero in some \"hard to ignore\" way should use false.\n #ifndef __glibcxx_integral_traps\n@@ -89,7 +89,7 @@\n // float\n //\n \n-// Default values.  Should be overriden in configuration files if necessary.\n+// Default values.  Should be overridden in configuration files if necessary.\n \n #ifndef __glibcxx_float_has_denorm_loss\n #  define __glibcxx_float_has_denorm_loss false\n@@ -103,7 +103,7 @@\n \n // double\n \n-// Default values.  Should be overriden in configuration files if necessary.\n+// Default values.  Should be overridden in configuration files if necessary.\n \n #ifndef __glibcxx_double_has_denorm_loss\n #  define __glibcxx_double_has_denorm_loss false\n@@ -117,7 +117,7 @@\n \n // long double\n \n-// Default values.  Should be overriden in configuration files if necessary.\n+// Default values.  Should be overridden in configuration files if necessary.\n \n #ifndef __glibcxx_long_double_has_denorm_loss\n #  define __glibcxx_long_double_has_denorm_loss false\n@@ -186,7 +186,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n    *  The @c static @c const members are usable as integral constant\n    *  expressions.\n    *\n-   *  @note This is a seperate class for purposes of efficiency; you\n+   *  @note This is a separate class for purposes of efficiency; you\n    *        should only access these members as part of an instantiation\n    *        of the std::numeric_limits class.\n   */\n@@ -260,7 +260,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n     /** True if trapping is implemented for this type.  */\n     static const bool traps = false;\n-    /** True if tinyness is detected before rounding.  (see IEC 559)  */\n+    /** True if tininess is detected before rounding.  (see IEC 559)  */\n     static const bool tinyness_before = false;\n     /** See std::float_round_style for more information.  This is only\n         meaningful for floating types; integer types will all be"}, {"sha": "c426475301745f5bacf084fe6aa6257ceaeacda7", "filename": "libstdc++-v3/include/std/ostream", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -108,7 +108,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       /**\n        *  @brief  Interface for manipulators.\n        *\n-       *  Manuipulators such as @c std::endl and @c std::hex use these\n+       *  Manipulators such as @c std::endl and @c std::hex use these\n        *  functions in constructs like \"std::cout << std::endl\".  For more\n        *  information, see the iomanip header.\n       */\n@@ -510,7 +510,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     basic_ostream<_CharT, _Traits> &\n     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);\n \n-  // Partial specializationss\n+  // Partial specializations\n   template<class _Traits>\n     inline basic_ostream<char, _Traits>&\n     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)"}, {"sha": "f8e74102b9b9ae9bbb77a4755db24b4ab9d5bf95", "filename": "libstdc++-v3/include/std/stdexcept", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstdexcept", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstdexcept", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstdexcept?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -69,7 +69,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   };\n \n   /** Thrown by the library, or by you, to report domain errors (domain in\n-   *  the mathmatical sense).  */\n+   *  the mathematical sense).  */\n   class domain_error : public logic_error \n   {\n   public:"}, {"sha": "a2e47505c6f0ad5f96522814b5da61788130d87d", "filename": "libstdc++-v3/include/std/streambuf", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -559,7 +559,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n       // [27.5.2.4.2] buffer management and positioning\n       /**\n-       *  @brief  Maniuplates the buffer.\n+       *  @brief  Manipulates the buffer.\n        *\n        *  Each derived class provides its own appropriate behavior.  See\n        *  the next-to-last paragraph of \n@@ -655,7 +655,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  next available character is returned, or @c traits::eof() to\n        *  indicate a null pending sequence.\n        *\n-       *  For a formal definiton of the pending sequence, see a good text\n+       *  For a formal definition of the pending sequence, see a good text\n        *  such as Langer & Kreft, or [27.5.2.4.3]/7-14.\n        *\n        *  A functioning input streambuf can be created by overriding only\n@@ -736,7 +736,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  sequence verbatim.)  In either case, the character @a c is also\n        *  written out, if @a c is not @c eof().\n        *\n-       *  For a formal definiton of this function, see a good text\n+       *  For a formal definition of this function, see a good text\n        *  such as Langer & Kreft, or [27.5.2.4.5]/3-7.\n        *\n        *  A functioning output streambuf can be created by overriding only"}, {"sha": "19c9860d51cbfb891951652da15d0a7710eb6052", "filename": "libstdc++-v3/include/tr1/bessel_function.tcc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbessel_function.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbessel_function.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbessel_function.tcc?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -131,7 +131,7 @@ namespace tr1\n      *   @param  __nu  The order of the Bessel functions.\n      *   @param  __x   The argument of the Bessel functions.\n      *   @param  __Jnu  The output Bessel function of the first kind.\n-     *   @param  __Nnu  The output Neumann function (Bessel fuction of the second kind).\n+     *   @param  __Nnu  The output Neumann function (Bessel function of the second kind).\n      *   @param  __Jpnu  The output derivative of the Bessel function of the first kind.\n      *   @param  __Npnu  The output derivative of the Neumann function.\n      */\n@@ -345,7 +345,7 @@ namespace tr1\n \n \n     /**\n-     *   @brief This routine computes the asyptotic cylindrical Bessel\n+     *   @brief This routine computes the asymptotic cylindrical Bessel\n      *          and Neumann functions of order nu: \\f$ J_{\\nu} \\f$,\n      *          \\f$ N_{\\nu} \\f$.\n      *\n@@ -358,7 +358,7 @@ namespace tr1\n      *   @param  __nu  The order of the Bessel functions.\n      *   @param  __x   The argument of the Bessel functions.\n      *   @param  __Jnu  The output Bessel function of the first kind.\n-     *   @param  __Nnu  The output Neumann function (Bessel fuction of the second kind).\n+     *   @param  __Nnu  The output Neumann function (Bessel function of the second kind).\n      */\n     template <typename _Tp>\n     void\n@@ -401,7 +401,7 @@ namespace tr1\n      *              \\frac{\\sigma^k (x/2)^{\\nu + 2k}}{k!\\Gamma(\\nu+k+1)}\n      *   @f]\n      *   where \\f$ \\sigma = +1 \\f$ or\\f$  -1 \\f$ for\n-     *   \\f$ Z = I \\f$ or \\f$ J \\f$ respecively. \n+     *   \\f$ Z = I \\f$ or \\f$ J \\f$ respectively.\n      * \n      *   See Abramowitz & Stegun, 9.1.10\n      *       Abramowitz & Stegun, 9.6.7\n@@ -488,7 +488,7 @@ namespace tr1\n \n \n     /**\n-     *   @brief  Return the Neunamm function of order \\f$ \\nu \\f$:\n+     *   @brief  Return the Neumann function of order \\f$ \\nu \\f$:\n      *           \\f$ N_{\\nu}(x) \\f$.\n      *\n      *   The Neumann function is defined by:"}, {"sha": "81a3bfefde66bc25c5a432dea8551e52d2c90377", "filename": "libstdc++-v3/include/tr1/cmath", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -135,7 +135,7 @@ namespace tr1\n       return __detail::__beta<__type>(__x, __y);\n     }\n \n-  //  5.2.1.4  Complete elliptic interals of the first kind.\n+  //  5.2.1.4  Complete elliptic integrals of the first kind.\n   inline float\n   comp_ellint_1f(float __k)\n   { return __detail::__comp_ellint_1<float>(__k); }\n@@ -152,7 +152,7 @@ namespace tr1\n       return __detail::__comp_ellint_1<__type>(__k);\n     }\n \n-  //  5.2.1.5  Complete elliptic interals of the second kind.\n+  //  5.2.1.5  Complete elliptic integrals of the second kind.\n   inline float\n   comp_ellint_2f(float __k)\n   { return __detail::__comp_ellint_2<float>(__k); }\n@@ -169,7 +169,7 @@ namespace tr1\n       return __detail::__comp_ellint_2<__type>(__k);\n     }\n \n-  //  5.2.1.6  Complete elliptic interals of the third kind.\n+  //  5.2.1.6  Complete elliptic integrals of the third kind.\n   inline float\n   comp_ellint_3f(float __k, float __nu)\n   { return __detail::__comp_ellint_3<float>(__k, __nu); }\n@@ -271,7 +271,7 @@ namespace tr1\n       return __detail::__cyl_neumann_n<__type>(__nu, __x);\n     }\n \n-  //  5.2.1.12  Incomplete elliptic interals of the first kind.\n+  //  5.2.1.12  Incomplete elliptic integrals of the first kind.\n   inline float\n   ellint_1f(float __k, float __phi)\n   { return __detail::__ellint_1<float>(__k, __phi); }\n@@ -288,7 +288,7 @@ namespace tr1\n       return __detail::__ellint_1<__type>(__k, __phi);\n     }\n \n-  //  5.2.1.13  Incomplete elliptic interals of the second kind.\n+  //  5.2.1.13  Incomplete elliptic integrals of the second kind.\n   inline float\n   ellint_2f(float __k, float __phi)\n   { return __detail::__ellint_2<float>(__k, __phi); }\n@@ -305,7 +305,7 @@ namespace tr1\n       return __detail::__ellint_2<__type>(__k, __phi);\n     }\n \n-  //  5.2.1.14  Incomplete elliptic interals of the third kind.\n+  //  5.2.1.14  Incomplete elliptic integrals of the third kind.\n   inline float\n   ellint_3f(float __k, float __nu, float __phi)\n   { return __detail::__ellint_3<float>(__k, __nu, __phi); }"}, {"sha": "7eaab6f5fe30c650f96c3cfe64855d0f2dfd9fe3", "filename": "libstdc++-v3/include/tr1/ell_integral.tcc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fell_integral.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fell_integral.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fell_integral.tcc?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -313,7 +313,7 @@ namespace tr1\n      *   Based on Carlson's algorithms:\n      *   -  B. C. Carlson Numer. Math. 33, 1 (1979)\n      *   -  B. C. Carlson, Special Functions of Applied Mathematics (1977)\n-     *   -  Nunerical Recipes in C, 2nd ed, pp. 261-269,\n+     *   -  Numerical Recipes in C, 2nd ed, pp. 261-269,\n      *      by Press, Teukolsky, Vetterling, Flannery (1992)\n      *\n      *   @param  __x  The first of two symmetric arguments.\n@@ -494,7 +494,7 @@ namespace tr1\n      *   Based on Carlson's algorithms:\n      *   -  B. C. Carlson Numer. Math. 33, 1 (1979)\n      *   -  B. C. Carlson, Special Functions of Applied Mathematics (1977)\n-     *   -  Nunerical Recipes in C, 2nd ed, pp. 261-269,\n+     *   -  Numerical Recipes in C, 2nd ed, pp. 261-269,\n      *      by Press, Teukolsky, Vetterling, Flannery (1992)\n      *\n      *   @param  __x  The first argument.\n@@ -563,7 +563,7 @@ namespace tr1\n      *   Based on Carlson's algorithms:\n      *   -  B. C. Carlson Numer. Math. 33, 1 (1979)\n      *   -  B. C. Carlson, Special Functions of Applied Mathematics (1977)\n-     *   -  Nunerical Recipes in C, 2nd ed, pp. 261-269,\n+     *   -  Numerical Recipes in C, 2nd ed, pp. 261-269,\n      *      by Press, Teukolsky, Vetterling, Flannery (1992)\n      *\n      *   @param  __x  The first of three symmetric arguments."}, {"sha": "e26c7e8fbe10b8216194a73328c7d20b478f90e6", "filename": "libstdc++-v3/include/tr1/hypergeometric.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhypergeometric.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhypergeometric.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhypergeometric.tcc?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -66,7 +66,7 @@ namespace tr1\n   {\n \n     /**\n-     *   @brief This routine returns the confluent hypereometric function\n+     *   @brief This routine returns the confluent hypergeometric function\n      *          by series expansion.\n      * \n      *   @f[\n@@ -78,7 +78,7 @@ namespace tr1\n      * \n      *   If a and b are integers and a < 0 and either b > 0 or b < a then the\n      *   series is a polynomial with a finite number of terms.  If b is an integer\n-     *   and b <= 0 the the confluent hypergeometric function is undefined.\n+     *   and b <= 0 the confluent hypergeometric function is undefined.\n      *\n      *   @param  __a  The \"numerator\" parameter.\n      *   @param  __c  The \"denominator\" parameter."}, {"sha": "da49a3aaa081ab006699e6f10b69d8cd3800688c", "filename": "libstdc++-v3/include/tr1/legendre_function.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flegendre_function.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flegendre_function.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flegendre_function.tcc?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -128,7 +128,7 @@ namespace tr1\n      *           on @f$ l @f$.\n      * \n      *   The associated Legendre function is derived from the Legendre function\n-     *   @f$ P_l(x) @f$ by the Rodruigez formula:\n+     *   @f$ P_l(x) @f$ by the Rodrigues formula:\n      *   @f[\n      *     P_l^m(x) = (1 - x^2)^{m/2}\\frac{d^m}{dx^m}P_l(x)\n      *   @f]"}, {"sha": "c10ee577cae3ab7089bf9a14acdbcb6e62fbc94a", "filename": "libstdc++-v3/include/tr1_impl/random", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Frandom?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -149,7 +149,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   } // namespace __detail\n \n   /**\n-   * Produces random numbers on a given disribution function using a un uniform\n+   * Produces random numbers on a given distribution function using a non-uniform\n    * random number generation engine.\n    *\n    * @todo the engine_value_type needs to be studied more carefully.\n@@ -260,7 +260,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n    * A number generator is a function object with an operator() that\n    * takes zero arguments and returns a number.\n    *\n-   * A compliant random number generator must satisy the following\n+   * A compliant random number generator must satisfy the following\n    * requirements.  <table border=1 cellpadding=10 cellspacing=0>\n    * <caption align=top>Random Number Generator Requirements</caption>\n    * <tr><td>To be documented.</td></tr> </table>\n@@ -342,7 +342,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       /**\n        * Gets the smallest possible value in the output range.\n        *\n-       * The minumum depends on the @p __c parameter: if it is zero, the\n+       * The minimum depends on the @p __c parameter: if it is zero, the\n        * minimum generated must be > 0, otherwise 0 is allowed.\n        */\n       result_type\n@@ -452,7 +452,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   /**\n    * A generalized feedback shift register discrete random number generator.\n    *\n-   * This algorithm avoind multiplication and division and is designed to be\n+   * This algorithm avoids multiplication and division and is designed to be\n    * friendly to a pipelined architecture.  If the parameters are chosen\n    * correctly, this generator will produce numbers with a very long period and\n    * fairly good apparent entropy, although still not cryptographically strong.\n@@ -1041,7 +1041,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       /**\n        * Copy constructs a %discard_block engine.\n        *\n-       * Copies an existing base class random number geenerator.\n+       * Copies an existing base class random number generator.\n        * @param rng An existing (base class) engine object.\n        */\n       explicit\n@@ -1229,9 +1229,9 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       //                          result_type, ArithmeticTypeConcept)\n \n     public:\n-      /** The type of the the first underlying generator engine. */\n+      /** The type of the first underlying generator engine. */\n       typedef _UniformRandomNumberGenerator1   base1_type;\n-      /** The type of the the second underlying generator engine. */\n+      /** The type of the second underlying generator engine. */\n       typedef _UniformRandomNumberGenerator2   base2_type;\n \n     private:\n@@ -1585,7 +1585,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t\t   const uniform_int<_IntType1>& __x);\n \n       /**\n-       * Extracts a %unform_int random number distribution\n+       * Extracts a %uniform_int random number distribution\n        * @p __x from the input stream @p __is.\n        *\n        * @param __is An input stream.\n@@ -1655,7 +1655,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     /**\n      * Resets the distribution state.\n      *\n-     * Does nothing for a bernoulli distribution.\n+     * Does nothing for a Bernoulli distribution.\n      */\n     void\n     reset() { }\n@@ -1796,7 +1796,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   /**\n    * @brief A discrete Poisson random number distribution.\n    *\n-   * The formula for the poisson probability mass function is \n+   * The formula for the Poisson probability mass function is\n    * @f$ p(i) = \\frac{mean^i}{i!} e^{-mean} @f$ where @f$ mean @f$ is the\n    * parameter of the distribution.\n    */\n@@ -2050,7 +2050,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t\t   const uniform_real<_RealType1>& __x);\n \n       /**\n-       * Extracts a %unform_real random number distribution\n+       * Extracts a %uniform_real random number distribution\n        * @p __x from the input stream @p __is.\n        *\n        * @param __is An input stream."}, {"sha": "bf4c309c76250b617b73273709fdfea96204ee84", "filename": "libstdc++-v3/include/tr1_impl/regex", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fregex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28dac70a082f1433c513b4928bb178062967ba33/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fregex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fregex?ref=28dac70a082f1433c513b4928bb178062967ba33", "patch": "@@ -193,7 +193,7 @@ namespace regex_constants\n   /// The expression does not match an empty sequence.\n   static const match_flag_type match_not_null    = 1 << _S_not_null;\n    \n-  /// The expression only matchs a sub-sequence that begins at first .\n+  /// The expression only matches a sub-sequence that begins at first .\n   static const match_flag_type match_continuous  = 1 << _S_continuous;\n    \n   /// --first is a valid iterator position.  When this flag is set then the\n@@ -213,7 +213,7 @@ namespace regex_constants\n   /// Format strings (from ECMA-262 [15.5.4.11]):\n   /// $$  $\n   /// $&  The matched substring.\n-  /// $`  The portion of <em>string</em> that preceeds the matched substring.\n+  /// $`  The portion of <em>string</em> that precedes the matched substring.\n   /// $'  The portion of <em>string</em> that follows the matched substring.\n   /// $n  The nth capture, where n is in [1,9] and $n is not followed by a\n   ///     decimal digit.  If n <= m and the nth capture is undefined, use the\n@@ -371,7 +371,7 @@ namespace regex_constants\n        *\n        * @returns the number of characters between @p *__p and the first\n        * default-initialized value of type @p char_type.  In other words, uses\n-       * the C-string algorithm for determiining the length of a sequence of\n+       * the C-string algorithm for determining the length of a sequence of\n        * characters.\n        */\n       static std::size_t\n@@ -458,7 +458,7 @@ namespace regex_constants\n         { return string_type(); }\n \n       /**\n-       * @breief Gets a collation element by name.\n+       * @brief Gets a collation element by name.\n        *\n        * @param first beginning of the collation element name.\n        * @param last  one-past-the-end of the collation element name.\n@@ -687,7 +687,7 @@ namespace regex_constants\n       { _M_compile(); }\n \n       /**\n-       * @brief Copy-contructs a basic regular expression.\n+       * @brief Copy-constructs a basic regular expression.\n        *\n        * @param rhs A @p regex object.\n      */\n@@ -716,7 +716,7 @@ namespace regex_constants\n        * @brief Constructs a basic regular expression from the range\n        * [first, last) interpreted according to the flags in @p f.\n        *\n-       * @param first The start of arange containing a valid regular\n+       * @param first The start of a range containing a valid regular\n        *              expression.\n        * @param last  The end of a range containing a valid regular\n        *              expression.\n@@ -857,7 +857,7 @@ namespace regex_constants\n       // [7.8.4] const operations\n       /**\n        * @brief Gets the number of marked subexpressions within the regular\n-       * expresison.\n+       * expression.\n        */\n       unsigned int\n       mark_count() const\n@@ -891,7 +891,7 @@ namespace regex_constants\n       \n       // [7.8.6] swap\n       /**\n-       * @brief Swaps the contents of two regular expression obects.\n+       * @brief Swaps the contents of two regular expression objects.\n        *\n        * @param rhs Another regular expression object.\n        */\n@@ -1102,7 +1102,7 @@ namespace regex_constants\n    * @brief Tests the ordering of two regular expression submatches.\n    * @param lhs First regular expression submatch.\n    * @param rhs Second regular expression submatch.\n-   * @returns true if @a lhs does not preceed @a rhs, false otherwise.\n+   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n    */\n   template<typename _BiIter>\n     inline bool\n@@ -1181,7 +1181,7 @@ namespace regex_constants\n    * @brief Tests the ordering of a string and a regular expression submatch.\n    * @param lhs A string.\n    * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs does not preceed @a rhs, false otherwise.\n+   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n    */\n   template<typename _Bi_iter, typename _Ch_traits, typename _Ch_alloc>\n     inline bool\n@@ -1265,7 +1265,7 @@ namespace regex_constants\n    * @brief Tests the ordering of a regular expression submatch and a string.\n    * @param lhs A regular expression submatch.\n    * @param rhs A string.\n-   * @returns true if @a lhs does not preceed @a rhs, false otherwise.\n+   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n    */\n   template<typename _Bi_iter, class _Ch_traits, class _Ch_alloc>\n     inline bool\n@@ -1343,7 +1343,7 @@ namespace regex_constants\n    * @brief Tests the ordering of a string and a regular expression submatch.\n    * @param lhs A string.\n    * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs does not preceed @a rhs, false otherwise.\n+   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1491,7 +1491,7 @@ namespace regex_constants\n    * @brief Tests the ordering of a string and a regular expression submatch.\n    * @param lhs A string.\n    * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs does not preceed @a rhs, false otherwise.\n+   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1541,7 +1541,7 @@ namespace regex_constants\n    * @brief Tests the ordering of a regular expression submatch and a string.\n    * @param lhs A regular expression submatch.\n    * @param rhs A const string reference.\n-   * @returns true if @a lhs preceeds @a rhs, false otherwise.\n+   * @returns true if @a lhs precedes @a rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1565,7 +1565,7 @@ namespace regex_constants\n    * @brief Tests the ordering of a regular expression submatch and a string.\n    * @param lhs A regular expression submatch.\n    * @param rhs A const string reference.\n-   * @returns true if @a lhs does not preceed @a rhs, false otherwise.\n+   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -2021,7 +2021,7 @@ namespace regex_constants\n   /**\n    * @brief Searches for a regular expression within a C-string.\n    * @param s [IN]  A C-string to search for the regex.\n-   * @param m [OUT] The set of regex mnatches.\n+   * @param m [OUT] The set of regex matches.\n    * @param e [IN]  The regex to search for in @p s.\n    * @param f [IN]  The search flags.\n    * @retval true  A match was found within the string.\n@@ -2041,7 +2041,7 @@ namespace regex_constants\n   /**\n    * @brief Searches for a regular expression within a C-string.\n    * @param s [IN]  The C-string to search.\n-   * @param e [IN]  The regular expressioon to search for.\n+   * @param e [IN]  The regular expression to search for.\n    * @param f [IN]  Search policy flags.\n    * @retval true  A match was found within the string.\n    * @retval false No match was found within the string.\n@@ -2058,7 +2058,7 @@ namespace regex_constants\n   /**\n    * @brief Searches for a regular expression within a string.\n    * @param s     [IN]  The string to search.\n-   * @param e     [IN]  The regular expressioon to search for.\n+   * @param e     [IN]  The regular expression to search for.\n    * @param flags [IN]  Search policy flags.\n    * @retval true  A match was found within the string.\n    * @retval false No match was found within the string.\n@@ -2077,7 +2077,7 @@ namespace regex_constants\n   /**\n    * @brief Searches for a regular expression within a string.\n    * @param s [IN]  A C++ string to search for the regex.\n-   * @param m [OUT] The set of regex mnatches.\n+   * @param m [OUT] The set of regex matches.\n    * @param e [IN]  The regex to search for in @p s.\n    * @param f [IN]  The search flags.\n    * @retval true  A match was found within the string.\n@@ -2273,12 +2273,12 @@ namespace regex_constants\n       regex_token_iterator();\n       \n       /**\n-       * Constrcts a %regex_token_iterator...\n+       * Constructs a %regex_token_iterator...\n        * @param a          [IN] The start of the text to search.\n-       * @param b          [IN] One-past-the-eend of the text to search.\n+       * @param b          [IN] One-past-the-end of the text to search.\n        * @param re         [IN] The regular expression to search for.\n        * @param submatch   [IN] Which submatch to return.  There are some\n-       *                        special values for thsi parameter:\n+       *                        special values for this parameter:\n        *                        - -1 each enumerated subexpression does NOT\n        *                          match the regular expression (aka field\n        *                          splitting)\n@@ -2298,9 +2298,9 @@ namespace regex_constants\n \t\t\t   = regex_constants::match_default);\n \n       /**\n-       * Constrcts a %regex_token_iterator...\n+       * Constructs a %regex_token_iterator...\n        * @param a          [IN] The start of the text to search.\n-       * @param b          [IN] One-past-the-eend of the text to search.\n+       * @param b          [IN] One-past-the-end of the text to search.\n        * @param re         [IN] The regular expression to search for.\n        * @param submatches [IN] A list of subexpressions to return for each\n        *                        regular expression match within the text.\n@@ -2316,9 +2316,9 @@ namespace regex_constants\n \t\t\t     = regex_constants::match_default);\n \n       /**\n-       * Constrcts a %regex_token_iterator...\n+       * Constructs a %regex_token_iterator...\n        * @param a          [IN] The start of the text to search.\n-       * @param b          [IN] One-past-the-eend of the text to search.\n+       * @param b          [IN] One-past-the-end of the text to search.\n        * @param re         [IN] The regular expression to search for.\n        * @param submatches [IN] A list of subexpressions to return for each\n        *                        regular expression match within the text."}]}