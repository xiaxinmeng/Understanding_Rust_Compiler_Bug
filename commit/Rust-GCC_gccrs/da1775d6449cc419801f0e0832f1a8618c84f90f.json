{"sha": "da1775d6449cc419801f0e0832f1a8618c84f90f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGExNzc1ZDY0NDljYzQxOTgwMWYwZTA4MzJmMWE4NjE4Yzg0ZjkwZg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-28T15:26:04Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-28T15:26:04Z"}, "message": "h8300.h: Fix formatting.\n\n\t* config/h8300/h8300.h: Fix formatting.\n\t* config/h8300/h8300.md: Likewise.\n\nFrom-SVN: r49284", "tree": {"sha": "0151c11f49f07153ee10c0c8fdec1b87fc8ef701", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0151c11f49f07153ee10c0c8fdec1b87fc8ef701"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da1775d6449cc419801f0e0832f1a8618c84f90f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da1775d6449cc419801f0e0832f1a8618c84f90f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da1775d6449cc419801f0e0832f1a8618c84f90f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da1775d6449cc419801f0e0832f1a8618c84f90f/comments", "author": null, "committer": null, "parents": [{"sha": "8f2e963bd6684223571cda40201961d4cbe755d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f2e963bd6684223571cda40201961d4cbe755d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f2e963bd6684223571cda40201961d4cbe755d9"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "b1c440326ae599fcd921b94d0a47beb8b323ee62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1775d6449cc419801f0e0832f1a8618c84f90f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1775d6449cc419801f0e0832f1a8618c84f90f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da1775d6449cc419801f0e0832f1a8618c84f90f", "patch": "@@ -1,3 +1,8 @@\n+2002-01-28  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.h: Fix formatting.\n+\t* config/h8300/h8300.md: Likewise.\n+\n 2002-01-28  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* fixinc/inclhack.def (strict_ansi_not): Add a bypass based on"}, {"sha": "06a29ab2ae4e9db1e47fc93fbb233cd9303f612c", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1775d6449cc419801f0e0832f1a8618c84f90f/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1775d6449cc419801f0e0832f1a8618c84f90f/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=da1775d6449cc419801f0e0832f1a8618c84f90f", "patch": "@@ -1217,7 +1217,7 @@ readonly_data ()\t\t\t\t\t\t\t\\\n   while (0)\n \n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL) \\\n-   ASM_OUTPUT_LABEL(FILE, NAME)\n+   ASM_OUTPUT_LABEL (FILE, NAME)\n \n /* The prefix to add to user-visible assembler symbols.  */\n "}, {"sha": "03b430b610eee6c8b55b758fc57e78d835e1aaaa", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1775d6449cc419801f0e0832f1a8618c84f90f/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1775d6449cc419801f0e0832f1a8618c84f90f/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=da1775d6449cc419801f0e0832f1a8618c84f90f", "patch": "@@ -400,7 +400,7 @@\n     case 5:\n       return \\\"mov.w\t%T1,%e0\\;mov.w\t%T1,%f0\\\";\n     default:\n-      abort();\n+      abort ();\n     }\n }\"\n   [(set_attr \"length\" \"4,4,8,8,4,4\")\n@@ -456,7 +456,7 @@\n     case 5:\n       return \\\"mov.w\t%T1,%e0\\;mov.w\t%T1,%f0\\\";\n     default:\n-      abort();\n+      abort ();\n     }\n }\"\n   [(set_attr \"length\" \"4,4,8,8,4,4\")\n@@ -1302,7 +1302,7 @@\n    (set (match_operand:HI 0 \"register_operand\" \"\")\n \t(match_dup 2))]\n   \"\"\n-  \"{ operands[2] = gen_reg_rtx (HImode); }\")\n+  \"operands[2] = gen_reg_rtx (HImode);\")\n \n (define_insn \"neghi2_h8300h\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n@@ -1332,7 +1332,7 @@\n    (set (match_operand:SI 0 \"register_operand\" \"\")\n \t(match_dup 2))]\n   \"\"\n-  \"{ operands[2] = gen_reg_rtx(SImode); }\")\n+  \"operands[2] = gen_reg_rtx (SImode);\")\n \n (define_insn \"negsi2_h8300h\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -1625,9 +1625,9 @@\n }\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-     (if_then_else (match_operand:QI 0 \"small_call_insn_operand\" \"\")\n-\t\t   (const_int 4)\n-\t\t   (const_int 8)))])\n+\t(if_then_else (match_operand:QI 0 \"small_call_insn_operand\" \"\")\n+\t\t      (const_int 4)\n+\t\t      (const_int 8)))])\n \n ;; Call subroutine, returning value in operand 0\n ;; (which must be a hard register).\n@@ -1649,9 +1649,9 @@\n }\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-     (if_then_else (match_operand:QI 0 \"small_call_insn_operand\" \"\")\n-\t\t   (const_int 4)\n-\t\t   (const_int 8)))])\n+\t(if_then_else (match_operand:QI 0 \"small_call_insn_operand\" \"\")\n+\t\t      (const_int 4)\n+\t\t      (const_int 8)))])\n \n (define_insn \"nop\"\n   [(const_int 0)]"}]}