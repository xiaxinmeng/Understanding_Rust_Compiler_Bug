{"sha": "a615c28a76cf89e38a5ee5359b9215948c21efe7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYxNWMyOGE3NmNmODllMzhhNWVlNTM1OWI5MjE1OTQ4YzIxZWZlNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-07-11T17:34:48Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-07-11T17:34:48Z"}, "message": "bitmap.c: Comment some functions; fiddle whitespace.\n\n        * bitmap.c: Comment some functions; fiddle whitespace.\n        (bitmap_free): Don't export.\n        (bitmap_element_allocate): Use memset.\n        * bitmap.h (bitmap_free): Don't declare.\n\nFrom-SVN: r43940", "tree": {"sha": "aeeb06ccb1795afa9875c6a410e10e1b51fc8a2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeeb06ccb1795afa9875c6a410e10e1b51fc8a2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a615c28a76cf89e38a5ee5359b9215948c21efe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a615c28a76cf89e38a5ee5359b9215948c21efe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a615c28a76cf89e38a5ee5359b9215948c21efe7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a615c28a76cf89e38a5ee5359b9215948c21efe7/comments", "author": null, "committer": null, "parents": [{"sha": "5a660bff9a2fb1e4cf5f914fa881aa1dd0139c22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a660bff9a2fb1e4cf5f914fa881aa1dd0139c22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a660bff9a2fb1e4cf5f914fa881aa1dd0139c22"}], "stats": {"total": 39, "additions": 21, "deletions": 18}, "files": [{"sha": "82cce17c0a001603d1a89889a67528df3de237ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a615c28a76cf89e38a5ee5359b9215948c21efe7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a615c28a76cf89e38a5ee5359b9215948c21efe7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a615c28a76cf89e38a5ee5359b9215948c21efe7", "patch": "@@ -1,3 +1,10 @@\n+2001-07-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* bitmap.c: Comment some functions; fiddle whitespace.\n+\t(bitmap_free): Don't export.\n+\t(bitmap_element_allocate): Use memset.\n+\t* bitmap.h (bitmap_free): Don't declare.\n+\n 2001-07-11  Daniel Berlin  <dan@cgsoftware.com>\n \n \t* gcse.c, lcm.c, sched-deps.c:"}, {"sha": "c19df31b76483e51ff70834c713dae02aca92028", "filename": "gcc/bitmap.c", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a615c28a76cf89e38a5ee5359b9215948c21efe7/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a615c28a76cf89e38a5ee5359b9215948c21efe7/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=a615c28a76cf89e38a5ee5359b9215948c21efe7", "patch": "@@ -39,15 +39,16 @@ static int bitmap_obstack_init = FALSE;\n \n /* Global data */\n bitmap_element bitmap_zero_bits;\t/* An element of all zero bits. */\n-bitmap_element *bitmap_free;\t\t/* Freelist of bitmap elements. */\n+static bitmap_element *bitmap_free;\t/* Freelist of bitmap elements. */\n \n static void bitmap_element_free\t\tPARAMS ((bitmap, bitmap_element *));\n static bitmap_element *bitmap_element_allocate PARAMS ((void));\n static int bitmap_element_zerop\t\tPARAMS ((bitmap_element *));\n static void bitmap_element_link\t\tPARAMS ((bitmap, bitmap_element *));\n static bitmap_element *bitmap_find_bit\tPARAMS ((bitmap, unsigned int));\n \f\n-/* Free a bitmap element */\n+/* Free a bitmap element.  Since these are allocated off the\n+   bitmap_obstack, \"free\" actually means \"put onto the freelist\".  */\n \n static INLINE void\n bitmap_element_free (head, elt)\n@@ -81,9 +82,6 @@ static INLINE bitmap_element *\n bitmap_element_allocate ()\n {\n   bitmap_element *element;\n-#if BITMAP_ELEMENT_WORDS != 2\n-  int i;\n-#endif\n \n   if (bitmap_free != 0)\n     {\n@@ -125,12 +123,7 @@ bitmap_element_allocate ()\n \t\t\t\t\t\t  sizeof (bitmap_element));\n     }\n \n-#if BITMAP_ELEMENT_WORDS == 2\n-  element->bits[0] = element->bits[1] = 0;\n-#else\n-  for (i = 0; i < BITMAP_ELEMENT_WORDS; i++)\n-    element->bits[i] = 0;\n-#endif\n+  memset (element->bits, 0, sizeof (element->bits));\n \n   return element;\n }\n@@ -242,7 +235,7 @@ bitmap_clear (head)\n   head->first = head->current =  0;\n }\n \f\n-/* Copy a bitmap to another bitmap */\n+/* Copy a bitmap to another bitmap.  */\n \n void\n bitmap_copy (to, from)\n@@ -350,7 +343,6 @@ bitmap_clear_bit (head, bit)\n     }\n }\n \n-\f\n /* Set a single bit in a bitmap.  */\n \n void\n@@ -374,7 +366,7 @@ bitmap_set_bit (head, bit)\n   else\n     ptr->bits[word_num] |= bit_val;\n }\n-\f\n+\n /* Return whether a bit is set within a bitmap.  */\n \n int\n@@ -397,6 +389,8 @@ bitmap_bit_p (head, bit)\n   return (ptr->bits[word_num] >> bit_num) & 1;\n }\n \f\n+/* Return the bit number of the first set bit in the bitmap, or -1\n+   if the bitmap is empty.  */\n \n int \n bitmap_first_set_bit (a)\n@@ -448,6 +442,9 @@ bitmap_first_set_bit (a)\n \t  + bit_num);\n }\n \n+/* Return the bit number of the last set bit in the bitmap, or -1\n+   if the bitmap is empty.  */\n+\n int \n bitmap_last_set_bit (a)\n      bitmap a;\n@@ -491,7 +488,7 @@ bitmap_last_set_bit (a)\n   if (word & 0xc)\n     word >>= 2, bit_num += 2;\n   if (word & 0x2)\n-    word >>= 1, bit_num += 1;\n+    bit_num += 1;\n \n   return (ptr->indx * BITMAP_ELEMENT_ALL_BITS\n \t  + word_num * HOST_BITS_PER_WIDE_INT\n@@ -766,7 +763,7 @@ debug_bitmap_file (file, head)\n       fprintf (file, \" }\\n\");\n     }\n }\n-\f\n+\n /* Function to be called from the debugger to print the contents\n    of a bitmap.  */\n \n@@ -776,7 +773,7 @@ debug_bitmap (head)\n {\n   debug_bitmap_file (stdout, head);\n }\n-\f\n+\n /* Function to print out the contents of a bitmap.  Unlike debug_bitmap_file,\n    it does not print anything but the bits.  */\n "}, {"sha": "0d11d40c38e1506443130b58a4d81fcf34161862", "filename": "gcc/bitmap.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a615c28a76cf89e38a5ee5359b9215948c21efe7/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a615c28a76cf89e38a5ee5359b9215948c21efe7/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=a615c28a76cf89e38a5ee5359b9215948c21efe7", "patch": "@@ -65,7 +65,6 @@ enum bitmap_bits {\n };\n \n /* Global data */\n-extern bitmap_element *bitmap_free;\t/* Freelist of bitmap elements */\n extern bitmap_element bitmap_zero_bits;\t/* Zero bitmap element */\n \n /* Clear a bitmap by freeing up the linked list.  */"}]}