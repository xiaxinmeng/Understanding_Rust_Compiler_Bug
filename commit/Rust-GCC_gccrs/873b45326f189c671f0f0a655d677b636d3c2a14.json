{"sha": "873b45326f189c671f0f0a655d677b636d3c2a14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODczYjQ1MzI2ZjE4OWM2NzFmMGYwYTY1NWQ2NzdiNjM2ZDNjMmExNA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-07-15T07:57:58Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-07-15T07:57:58Z"}, "message": "[testsuite/guality] Run guality tests with Og\n\nWe advertise Og as the optimization level of choice for the standard\nedit-compile-debug cycle, but do not run the guality tests for Og with the\ndefault torture options.\n\nThis patch ensures that we test -Og in the guality tests.\n\nF.i., for gcc.dg/guality there are 45 fails for Og (while there are none for\nO1), in these test-cases:\n...\ngcc.dg/guality/pr54200.c\ngcc.dg/guality/pr54970.c\ngcc.dg/guality/pr56154-1.c\ngcc.dg/guality/pr59776.c\ngcc.dg/guality/sra-1.c\n...\n\n2018-07-15  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/gcc-gdb-test.exp (guality_minimal_options): New proc.\n\t* g++.dg/guality/guality.exp: Ensure Og is part of torture options.\n\t* gcc.dg/guality/guality.exp: Same.\n\t* gfortran.dg/guality/guality.exp: Same.\n\nFrom-SVN: r262666", "tree": {"sha": "46fcc27336781d1329d226b5e7328b28ef56c4b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46fcc27336781d1329d226b5e7328b28ef56c4b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/873b45326f189c671f0f0a655d677b636d3c2a14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/873b45326f189c671f0f0a655d677b636d3c2a14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/873b45326f189c671f0f0a655d677b636d3c2a14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/873b45326f189c671f0f0a655d677b636d3c2a14/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d93e01d31aa414190368599374c775134a1f361", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d93e01d31aa414190368599374c775134a1f361", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d93e01d31aa414190368599374c775134a1f361"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "54834e99470cff6ddbbd6e7532641409fa933209", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/873b45326f189c671f0f0a655d677b636d3c2a14/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/873b45326f189c671f0f0a655d677b636d3c2a14/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=873b45326f189c671f0f0a655d677b636d3c2a14", "patch": "@@ -1,3 +1,10 @@\n+2018-07-15  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/gcc-gdb-test.exp (guality_minimal_options): New proc.\n+\t* g++.dg/guality/guality.exp: Ensure Og is part of torture options.\n+\t* gcc.dg/guality/guality.exp: Same.\n+\t* gfortran.dg/guality/guality.exp: Same.\n+\n 2018-07-13  H.J. Lu  <hongjiu.lu@intel.com>\n \t    Sunil K Pandey  <sunil.k.pandey@intel.com>\n "}, {"sha": "757b20b61e24e8df263ec708daade879e77a05bc", "filename": "gcc/testsuite/g++.dg/guality/guality.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/873b45326f189c671f0f0a655d677b636d3c2a14/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fguality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/873b45326f189c671f0f0a655d677b636d3c2a14/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fguality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fguality.exp?ref=873b45326f189c671f0f0a655d677b636d3c2a14", "patch": "@@ -48,6 +48,14 @@ if ![info exists ::env(GUALITY_GDB_NAME)] {\n }\n report_gdb $::env(GUALITY_GDB_NAME) [info script]\n \n+global DG_TORTURE_OPTIONS LTO_TORTURE_OPTIONS\n+set guality_dg_torture_options [guality_minimal_options $DG_TORTURE_OPTIONS]\n+torture-init\n+set-torture-options \\\n+    $guality_dg_torture_options \\\n+    [list {}] \\\n+    $LTO_TORTURE_OPTIONS\n+\n if {[check_guality \"\n   #include \\\"$srcdir/$subdir/guality.h\\\"\n   volatile long int varl = 6;\n@@ -65,4 +73,5 @@ if [info exists guality_gdb_name] {\n     unsetenv GUALITY_GDB_NAME\n }\n \n+torture-finish\n dg-finish"}, {"sha": "ca77a446f86be97bf5e482eb4eafeb8b95c2f071", "filename": "gcc/testsuite/gcc.dg/guality/guality.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/873b45326f189c671f0f0a655d677b636d3c2a14/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/873b45326f189c671f0f0a655d677b636d3c2a14/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp?ref=873b45326f189c671f0f0a655d677b636d3c2a14", "patch": "@@ -62,7 +62,8 @@ proc guality_transform_options { args } {\n }\n \n global DG_TORTURE_OPTIONS\n-set guality_dg_torture_options [guality_transform_options $DG_TORTURE_OPTIONS]\n+set guality_dg_torture_options [guality_minimal_options $DG_TORTURE_OPTIONS]\n+set guality_dg_torture_options [guality_transform_options $guality_dg_torture_options]\n set guality_lto_torture_options [guality_transform_options $LTO_TORTURE_OPTIONS]\n torture-init\n set-torture-options \\"}, {"sha": "dad6e4d8f66e7d243f2d51ff1c0de5338af1af2d", "filename": "gcc/testsuite/gfortran.dg/guality/guality.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/873b45326f189c671f0f0a655d677b636d3c2a14/gcc%2Ftestsuite%2Fgfortran.dg%2Fguality%2Fguality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/873b45326f189c671f0f0a655d677b636d3c2a14/gcc%2Ftestsuite%2Fgfortran.dg%2Fguality%2Fguality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fguality%2Fguality.exp?ref=873b45326f189c671f0f0a655d677b636d3c2a14", "patch": "@@ -29,10 +29,15 @@ if ![info exists ::env(GUALITY_GDB_NAME)] {\n }\n report_gdb $::env(GUALITY_GDB_NAME) [info script]\n \n+global DG_TORTURE_OPTIONS\n+set save_dg_torture_options $DG_TORTURE_OPTIONS\n+set DG_TORTURE_OPTIONS [guality_minimal_options $DG_TORTURE_OPTIONS]\n+\n gfortran-dg-runtest [lsort [glob $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ]] \"\" \"\"\n \n if [info exists guality_gdb_name] {\n     unsetenv GUALITY_GDB_NAME\n }\n \n+set DG_TORTURE_OPTIONS save_dg_torture_options\n dg-finish"}, {"sha": "b13d3ec7f85e6a936a5b4ef17184fba0dbe11a45", "filename": "gcc/testsuite/lib/gcc-gdb-test.exp", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/873b45326f189c671f0f0a655d677b636d3c2a14/gcc%2Ftestsuite%2Flib%2Fgcc-gdb-test.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/873b45326f189c671f0f0a655d677b636d3c2a14/gcc%2Ftestsuite%2Flib%2Fgcc-gdb-test.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-gdb-test.exp?ref=873b45326f189c671f0f0a655d677b636d3c2a14", "patch": "@@ -166,3 +166,17 @@ proc report_gdb { gdb loc } {\n     }\n     send_log -- \"---\\n$gdb_version\\n---\\n\"\n }\n+\n+# Argument 0 is the option list.\n+# Return the option list, ensuring that at least -Og is present.\n+\n+proc guality_minimal_options { args } {\n+    set options [lindex $args 0]\n+    foreach opt $options {\n+\tif { [regexp -- \"-Og\" $opt] } {\n+\t    return $options\n+\t}\n+    }\n+    \n+    return [lappend options \"-Og\"]\n+}"}]}