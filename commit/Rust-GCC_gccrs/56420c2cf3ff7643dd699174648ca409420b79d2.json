{"sha": "56420c2cf3ff7643dd699174648ca409420b79d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY0MjBjMmNmM2ZmNzY0M2RkNjk5MTc0NjQ4Y2E0MDk0MjBiNzlkMg==", "commit": {"author": {"name": "David S. Miller", "email": "davem@pierdol.cobaltmicro.com", "date": "1998-09-02T03:12:08Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1998-09-02T03:12:08Z"}, "message": "sparc.md (movdf): Only generate special RTL for LABEL_REFs when PIC.\n\n\t* config/sparc/sparc.md (movdf): Only generate special RTL for\n\tLABEL_REFs when PIC.\n\t(move_label_di): Remove\n\t(movdi_pic_label_ref, movdi_high_pic_label_ref,\n\tmovdi_lo_sum_pic_label_ref): New patterns for 64-bit label\n\treferences when PIC.\n\t* config/sparc/sparc.h (ASM_OUTPUT_ADDR_VEC_ELT,\n\tASM_OUTPUT_ADDR_DIFF_ELT): Don't do anything special for MEDLOW,\n\toutput an .xword for all 64-bit cases.\n\nFrom-SVN: r22164", "tree": {"sha": "506b594b8a5ee130e3805db6bf7197f6b7ea434b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/506b594b8a5ee130e3805db6bf7197f6b7ea434b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56420c2cf3ff7643dd699174648ca409420b79d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56420c2cf3ff7643dd699174648ca409420b79d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56420c2cf3ff7643dd699174648ca409420b79d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56420c2cf3ff7643dd699174648ca409420b79d2/comments", "author": null, "committer": null, "parents": [{"sha": "ba4493d2a43cc393668f7ea55a1043b922e0f851", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba4493d2a43cc393668f7ea55a1043b922e0f851", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba4493d2a43cc393668f7ea55a1043b922e0f851"}], "stats": {"total": 82, "additions": 56, "deletions": 26}, "files": [{"sha": "11143ff595110e3392520b827e8dbf9af20822f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56420c2cf3ff7643dd699174648ca409420b79d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56420c2cf3ff7643dd699174648ca409420b79d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56420c2cf3ff7643dd699174648ca409420b79d2", "patch": "@@ -1,3 +1,15 @@\n+Wed Sep  2 02:03:23 1998  David S. Miller  <davem@pierdol.cobaltmicro.com>\n+\n+\t* config/sparc/sparc.md (movdf): Only generate special RTL for\n+\tLABEL_REFs when PIC.\n+\t(move_label_di): Remove\n+\t(movdi_pic_label_ref, movdi_high_pic_label_ref,\n+\tmovdi_lo_sum_pic_label_ref): New patterns for 64-bit label\n+\treferences when PIC.\n+\t* config/sparc/sparc.h (ASM_OUTPUT_ADDR_VEC_ELT,\n+\tASM_OUTPUT_ADDR_DIFF_ELT): Don't do anything special for MEDLOW,\n+\toutput an .xword for all 64-bit cases.\n+\t\n Tue Sep  1 15:55:17 1998  David S. Miller  <davem@pierdol.cobaltmicro.com>\n \n \t* config/sparc/sparc.c (finalize_pic): Don't output arbitrary"}, {"sha": "14ab6046c5338ed397bce6f2a3b96010d3df7de4", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56420c2cf3ff7643dd699174648ca409420b79d2/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56420c2cf3ff7643dd699174648ca409420b79d2/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=56420c2cf3ff7643dd699174648ca409420b79d2", "patch": "@@ -2969,8 +2969,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n   ASM_GENERATE_INTERNAL_LABEL (label, \"L\", VALUE);\t\t\t\\\n   if (Pmode == SImode)\t\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\t.word\\t\");\t\t\t\t\t\\\n-  else if (TARGET_CM_MEDLOW)\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t.word\\t0\\n\\t.word\\t\");\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\t.xword\\t\");\t\t\t\t\t\\\n   assemble_name (FILE, label);\t\t\t\t\t\t\\\n@@ -2986,8 +2984,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n   ASM_GENERATE_INTERNAL_LABEL (label, \"L\", (VALUE));\t\t\t\\\n   if (Pmode == SImode)\t\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\t.word\\t\");\t\t\t\t\t\\\n-  else if (TARGET_CM_MEDLOW)\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t.word\\t0\\n\\t.word\\t\");\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\t.xword\\t\");\t\t\t\t\t\\\n   assemble_name (FILE, label);\t\t\t\t\t\t\\"}, {"sha": "2af5b396781e25072385450956a5df542b029689", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 44, "deletions": 22, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56420c2cf3ff7643dd699174648ca409420b79d2/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56420c2cf3ff7643dd699174648ca409420b79d2/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=56420c2cf3ff7643dd699174648ca409420b79d2", "patch": "@@ -2265,21 +2265,20 @@\n \t}\n     }\n \n-  if (GET_CODE (operands[1]) == LABEL_REF)\n-    {\n-      if (! TARGET_ARCH64)\n-        abort ();\n-      /* ??? revisit this... */\n-      emit_insn (gen_move_label_di (operands[0], operands[1]));\n-      DONE;\n-    }\n-\n   if (flag_pic)\n     {\n       if (CONSTANT_P (operands[1])\n \t  && pic_address_needs_scratch (operands[1]))\n \toperands[1] = legitimize_pic_address (operands[1], DImode, 0);\n \n+      if (GET_CODE (operands[1]) == LABEL_REF)\n+        {\n+          if (! TARGET_ARCH64)\n+            abort ();\n+          emit_insn (gen_movdi_pic_label_ref (operands[0], operands[1]));\n+          DONE;\n+        }\n+\n       if (symbolic_operand (operands[1], DImode))\n \t{\n \t  operands[1] = legitimize_pic_address (operands[1],\n@@ -2387,20 +2386,43 @@\n   [(set_attr \"type\" \"move,move,move,load,store,fpmove,fpload,fpstore,fpmove\")\n    (set_attr \"length\" \"1\")])\n \n-;; ??? revisit this...\n-(define_insn \"move_label_di\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t; This was previously (label_ref:DI (match_operand 1 \"\" \"\")) but that\n-\t; loses the volatil and other flags of the original label_ref.\n-\t(match_operand:DI 1 \"label_ref_operand\" \"\"))\n-   (set (reg:DI 15) (pc))]\n-  \"TARGET_ARCH64\"\n-  \"*\n+(define_expand \"movdi_pic_label_ref\"\n+  [(set (match_dup 3) (high:DI\n+     (unspec:DI [(match_operand:DI 1 \"label_ref_operand\" \"\")\n+                 (match_dup 2)] 5)))\n+   (set (match_dup 4) (lo_sum:DI (match_dup 3)\n+     (unspec:DI [(match_dup 1) (match_dup 2)] 5)))\n+   (set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (minus:DI (match_dup 5) (match_dup 4)))]\n+  \"TARGET_ARCH64 && flag_pic\"\n+  \"\n {\n-  return \\\"\\\\n1:\\\\trd\\\\t%%pc, %%o7\\\\n\\\\tsethi\\\\t%%hi(%l1-1b), %0\\\\n\\\\tadd\\\\t%0, %%lo(%l1-1b), %0\\\\n\\\\tsra\\\\t%0, 0, %0\\\\n\\\\tadd\\\\t%0, %%o7, %0\\\";\n-}\"\n-  [(set_attr \"type\" \"multi\")\n-   (set_attr \"length\" \"5\")])\n+  current_function_uses_pic_offset_table = 1;\n+  operands[2] = gen_rtx_SYMBOL_REF (Pmode, \\\"_GLOBAL_OFFSET_TABLE_\\\");\n+  operands[3] = gen_reg_rtx (DImode);\n+  operands[4] = gen_reg_rtx (DImode);\n+  operands[5] = pic_offset_table_rtx;\n+}\")\n+\n+(define_insn \"*movdi_high_pic_label_ref\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (high:DI\n+          (unspec:DI [(match_operand:DI 1 \"label_ref_operand\" \"\")\n+                      (match_operand:DI 2 \"\" \"\")] 5)))]\n+  \"TARGET_ARCH64 && flag_pic\"\n+  \"sethi\\\\t%%hi(%a2-(%a1-.)), %0\"\n+  [(set_attr \"type\" \"move\")\n+   (set_attr \"length\" \"1\")])\n+\n+(define_insn \"*movdi_lo_sum_pic_label_ref\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+      (lo_sum:DI (match_operand:DI 1 \"register_operand\" \"r\")\n+        (unspec:DI [(match_operand:DI 2 \"label_ref_operand\" \"\")\n+                    (match_operand:DI 3 \"\" \"\")] 5)))]\n+  \"TARGET_ARCH64 && flag_pic\"\n+  \"or\\\\t%1, %%lo(%a3-(%a2-.)), %0\"\n+  [(set_attr \"type\" \"ialu\")\n+   (set_attr \"length\" \"1\")])\n \n ;; Sparc-v9 code model support insns.  See sparc_emit_set_symbolic_const64\n ;; in sparc.c to see what is going on here... PIC stuff comes first."}]}