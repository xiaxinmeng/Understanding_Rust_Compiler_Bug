{"sha": "c32170880197cf6bc9a1a08b084b3624b1cd6474", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMyMTcwODgwMTk3Y2Y2YmM5YTFhMDhiMDg0YjM2MjRiMWNkNjQ3NA==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2018-03-31T00:52:01Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2018-03-31T00:52:01Z"}, "message": "re PR testsuite/80546 (FAIL: gcc.target/powerpc/bool3-p[78].c scan-assembler-not)\n\n\tPR target/80546\n\t* config/rs6000/vsx.md (??r): New mode attribute.\n\t(*vsx_mov<mode>_64bit): Use it.\n\t(*vsx_mov<mode>_32bit): Likewise.\n\nFrom-SVN: r258987", "tree": {"sha": "680e5617fdafc80bef5a3274a4b589f1dd11fd10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/680e5617fdafc80bef5a3274a4b589f1dd11fd10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c32170880197cf6bc9a1a08b084b3624b1cd6474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c32170880197cf6bc9a1a08b084b3624b1cd6474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c32170880197cf6bc9a1a08b084b3624b1cd6474", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c32170880197cf6bc9a1a08b084b3624b1cd6474/comments", "author": null, "committer": null, "parents": [{"sha": "815b2fc444a7fdc3215c522a965326efedf773c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/815b2fc444a7fdc3215c522a965326efedf773c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/815b2fc444a7fdc3215c522a965326efedf773c0"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "c444e12be744ff856c343070296191ab3c1a3146", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c32170880197cf6bc9a1a08b084b3624b1cd6474/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c32170880197cf6bc9a1a08b084b3624b1cd6474/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c32170880197cf6bc9a1a08b084b3624b1cd6474", "patch": "@@ -1,3 +1,10 @@\n+2018-03-30  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\tPR target/80546\n+\t* config/rs6000/vsx.md (??r): New mode attribute.\n+\t(*vsx_mov<mode>_64bit): Use it.\n+\t(*vsx_mov<mode>_32bit): Likewise.\n+\n 2018-03-30  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/84818\n@@ -25,10 +32,10 @@\n \n 2018-03-29  Martin Liska  <mliska@suse.cz>\n \n-        PR lto/84995.\n-        * doc/invoke.texi: Document how LTO works with debug info.\n-        Describe auto-load support of binutils.  Mention 'x86-64'\n-        as valid option value of -march option.\n+\tPR lto/84995.\n+\t* doc/invoke.texi: Document how LTO works with debug info.\n+\tDescribe auto-load support of binutils.  Mention 'x86-64'\n+\tas valid option value of -march option.\n \n 2018-03-29  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "f7f73cadd67f9ea1c349f26034aa6a4908cff274", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c32170880197cf6bc9a1a08b084b3624b1cd6474/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c32170880197cf6bc9a1a08b084b3624b1cd6474/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=c32170880197cf6bc9a1a08b084b3624b1cd6474", "patch": "@@ -170,6 +170,19 @@\n \t\t\t (TF\t\"wp\")\n \t\t\t (KF\t\"wq\")])\n \n+;; A mode attribute to disparage use of GPR registers, except for scalar\n+;; integer modes.\n+(define_mode_attr ??r\t[(V16QI\t\"??r\")\n+\t\t\t (V8HI\t\"??r\")\n+\t\t\t (V4SI\t\"??r\")\n+\t\t\t (V4SF\t\"??r\")\n+\t\t\t (V2DI\t\"??r\")\n+\t\t\t (V2DF\t\"??r\")\n+\t\t\t (V1TI\t\"??r\")\n+\t\t\t (KF\t\"??r\")\n+\t\t\t (TF\t\"??r\")\n+\t\t\t (TI\t\"r\")])\n+\n ;; Same size integer type for floating point data\n (define_mode_attr VSi [(V4SF  \"v4si\")\n \t\t       (V2DF  \"v2di\")\n@@ -1200,7 +1213,7 @@\n (define_insn \"*vsx_mov<mode>_64bit\"\n   [(set (match_operand:VSX_M 0 \"nonimmediate_operand\"\n                \"=ZwO,      <VSa>,     <VSa>,     r,         we,        ?wQ,\n-                ?&r,       ??r,       ??Y,       ??r,       wo,        v,\n+                ?&r,       ??r,       ??Y,       <??r>,     wo,        v,\n                 ?<VSa>,    *r,        v,         ??r,       wZ,        v\")\n \n \t(match_operand:VSX_M 1 \"input_operand\" \n@@ -1229,7 +1242,7 @@\n ;;              LVX (VMX)  STVX (VMX)\n (define_insn \"*vsx_mov<mode>_32bit\"\n   [(set (match_operand:VSX_M 0 \"nonimmediate_operand\"\n-               \"=ZwO,      <VSa>,     <VSa>,     ??r,       ??Y,       ??r,\n+               \"=ZwO,      <VSa>,     <VSa>,     ??r,       ??Y,       <??r>,\n                 wo,        v,         ?<VSa>,    *r,        v,         ??r,\n                 wZ,        v\")\n "}]}