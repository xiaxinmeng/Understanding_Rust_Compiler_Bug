{"sha": "a441d616bac764a9281f72f04812ff9518a7e5ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ0MWQ2MTZiYWM3NjRhOTI4MWY3MmYwNDgxMmZmOTUxOGE3ZTVjZQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gmail.com", "date": "2007-01-01T21:58:19Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2007-01-01T21:58:19Z"}, "message": "gimplify.c (gimplify_return_expr): Make the temporary variable for the return expression, a gimple register variable.\n\n2007-01-01  Andrew Pinski  <pinskia@gmail.com>\n\n        * gimplify.c (gimplify_return_expr): Make the temporary variable\n        for the return expression, a gimple register variable.\n\nFrom-SVN: r120317", "tree": {"sha": "cbad9e8ca49c7cbc6580372a73e4a91a61c54c7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbad9e8ca49c7cbc6580372a73e4a91a61c54c7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a441d616bac764a9281f72f04812ff9518a7e5ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a441d616bac764a9281f72f04812ff9518a7e5ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a441d616bac764a9281f72f04812ff9518a7e5ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a441d616bac764a9281f72f04812ff9518a7e5ce/comments", "author": {"login": "pinskia", "id": 8496799, "node_id": "MDQ6VXNlcjg0OTY3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8496799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pinskia", "html_url": "https://github.com/pinskia", "followers_url": "https://api.github.com/users/pinskia/followers", "following_url": "https://api.github.com/users/pinskia/following{/other_user}", "gists_url": "https://api.github.com/users/pinskia/gists{/gist_id}", "starred_url": "https://api.github.com/users/pinskia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pinskia/subscriptions", "organizations_url": "https://api.github.com/users/pinskia/orgs", "repos_url": "https://api.github.com/users/pinskia/repos", "events_url": "https://api.github.com/users/pinskia/events{/privacy}", "received_events_url": "https://api.github.com/users/pinskia/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95e2a53bfc973093444255c95bb79df8ff124f18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95e2a53bfc973093444255c95bb79df8ff124f18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95e2a53bfc973093444255c95bb79df8ff124f18"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "69fe0892694ff9de2dc643e5ccbfda9a7c3df7a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a441d616bac764a9281f72f04812ff9518a7e5ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a441d616bac764a9281f72f04812ff9518a7e5ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a441d616bac764a9281f72f04812ff9518a7e5ce", "patch": "@@ -1,3 +1,8 @@\n+2007-01-01  Andrew Pinski  <pinskia@gmail.com>\n+\n+\t* gimplify.c (gimplify_return_expr): Make the temporary variable\n+\tfor the return expression, a gimple register variable.\n+\n 2007-01-01  Jan Hubicka  <jh@suse.cz>\n \n \t* emit-rtl.c (emit_copy_of_insn_after): Do not call copy_insn_1 for"}, {"sha": "1a40e8fe2142197201c84a87ecd932f76090803e", "filename": "gcc/gimplify.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a441d616bac764a9281f72f04812ff9518a7e5ce/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a441d616bac764a9281f72f04812ff9518a7e5ce/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=a441d616bac764a9281f72f04812ff9518a7e5ce", "patch": "@@ -1,6 +1,7 @@\n /* Tree lowering pass.  This pass converts the GENERIC functions-as-trees\n    tree representation into the GIMPLE form.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007\n+   Free Software Foundation, Inc.\n    Major work done by Sebastian Pop <s.pop@laposte.net>,\n    Diego Novillo <dnovillo@redhat.com> and Jason Merrill <jason@redhat.com>.\n \n@@ -1171,6 +1172,9 @@ gimplify_return_expr (tree stmt, tree *pre_p)\n   else\n     {\n       result = create_tmp_var (TREE_TYPE (result_decl), NULL);\n+      if (TREE_CODE (TREE_TYPE (result)) == COMPLEX_TYPE\n+          || TREE_CODE (TREE_TYPE (result)) == VECTOR_TYPE)\n+        DECL_GIMPLE_REG_P (result) = 1;\n \n       /* ??? With complex control flow (usually involving abnormal edges),\n \t we can wind up warning about an uninitialized value for this.  Due"}]}