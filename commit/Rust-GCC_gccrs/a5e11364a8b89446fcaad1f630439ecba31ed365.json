{"sha": "a5e11364a8b89446fcaad1f630439ecba31ed365", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVlMTEzNjRhOGI4OTQ0NmZjYWFkMWY2MzA0MzllY2JhMzFlZDM2NQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-04-25T12:37:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-04-25T12:37:41Z"}, "message": "sse.md (mov<mode>): Replace SSEMODEI with SSEMODE.\n\n2008-04-25  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/sse.md (mov<mode>): Replace SSEMODEI with\n\tSSEMODE.\n\t(*mov<mode>_internal): Likewise.  Support V4SF and V2DF.\n\t(mov<mode>): Removed.\n\t(*movv4sf_internal): Likewise.\n\t(*movv2df_internal): Likewise.\n\nFrom-SVN: r134664", "tree": {"sha": "c7e057314b9e1ec1452ee2431dca0453ca15f803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7e057314b9e1ec1452ee2431dca0453ca15f803"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5e11364a8b89446fcaad1f630439ecba31ed365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e11364a8b89446fcaad1f630439ecba31ed365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5e11364a8b89446fcaad1f630439ecba31ed365", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e11364a8b89446fcaad1f630439ecba31ed365/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6d8b0c62073785507260be5ab5bb81c74bbf930", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6d8b0c62073785507260be5ab5bb81c74bbf930", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6d8b0c62073785507260be5ab5bb81c74bbf930"}], "stats": {"total": 110, "additions": 33, "deletions": 77}, "files": [{"sha": "60c2a930882b925480e63ff7f254a8c6859fcb97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e11364a8b89446fcaad1f630439ecba31ed365/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e11364a8b89446fcaad1f630439ecba31ed365/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5e11364a8b89446fcaad1f630439ecba31ed365", "patch": "@@ -1,3 +1,12 @@\n+2008-04-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/sse.md (mov<mode>): Replace SSEMODEI with\n+\tSSEMODE.\n+\t(*mov<mode>_internal): Likewise.  Support V4SF and V2DF.\n+\t(mov<mode>): Removed.\n+\t(*movv4sf_internal): Likewise.\n+\t(*movv2df_internal): Likewise.\n+\n 2008-04-25  Pompapathi V Gadad <Pompapathi.V.Gadad@nsc.com>\n \n \t* config.gcc (crx-*-elf): Remove deprecation."}, {"sha": "b308bd0ad2869c60a1715cffca3ad1fe9298abdf", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 24, "deletions": 77, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e11364a8b89446fcaad1f630439ecba31ed365/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e11364a8b89446fcaad1f630439ecba31ed365/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=a5e11364a8b89446fcaad1f630439ecba31ed365", "patch": "@@ -70,17 +70,17 @@\n ;; This is essential for maintaining stable calling conventions.\n \n (define_expand \"mov<mode>\"\n-  [(set (match_operand:SSEMODEI 0 \"nonimmediate_operand\" \"\")\n-\t(match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"\"))]\n+  [(set (match_operand:SSEMODE 0 \"nonimmediate_operand\" \"\")\n+\t(match_operand:SSEMODE 1 \"nonimmediate_operand\" \"\"))]\n   \"TARGET_SSE\"\n {\n   ix86_expand_vector_move (<MODE>mode, operands);\n   DONE;\n })\n \n (define_insn \"*mov<mode>_internal\"\n-  [(set (match_operand:SSEMODEI 0 \"nonimmediate_operand\" \"=x,x ,m\")\n-\t(match_operand:SSEMODEI 1 \"nonimmediate_or_sse_const_operand\"  \"C ,xm,x\"))]\n+  [(set (match_operand:SSEMODE 0 \"nonimmediate_operand\" \"=x,x ,m\")\n+\t(match_operand:SSEMODE 1 \"nonimmediate_or_sse_const_operand\"  \"C ,xm,x\"))]\n   \"TARGET_SSE\n    && (register_operand (operands[0], <MODE>mode)\n        || register_operand (operands[1], <MODE>mode))\"\n@@ -91,23 +91,32 @@\n       return standard_sse_constant_opcode (insn, operands[1]);\n     case 1:\n     case 2:\n-      if (get_attr_mode (insn) == MODE_V4SF)\n-\treturn \"movaps\\t{%1, %0|%0, %1}\";\n-      else\n-\treturn \"movdqa\\t{%1, %0|%0, %1}\";\n+      switch (get_attr_mode (insn))\n+\t{\n+\tcase MODE_V4SF:\n+\t  return \"movaps\\t{%1, %0|%0, %1}\";\n+\tcase MODE_V2DF:\n+\t  return \"movapd\\t{%1, %0|%0, %1}\";\n+\tdefault:\n+\t  return \"movdqa\\t{%1, %0|%0, %1}\";\n+\t}\n     default:\n       gcc_unreachable ();\n     }\n }\n   [(set_attr \"type\" \"sselog1,ssemov,ssemov\")\n    (set (attr \"mode\")\n-\t(if_then_else\n-\t  (ior (ior (ne (symbol_ref \"optimize_size\") (const_int 0))\n-\t\t    (eq (symbol_ref \"TARGET_SSE2\") (const_int 0)))\n-\t       (and (eq_attr \"alternative\" \"2\")\n-\t  \t    (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n-\t\t        (const_int 0))))\n-\t  (const_string \"V4SF\")\n+\t(cond [(ior (ior (ne (symbol_ref \"optimize_size\") (const_int 0))\n+\t\t\t (eq (symbol_ref \"TARGET_SSE2\") (const_int 0)))\n+\t\t    (and (eq_attr \"alternative\" \"2\")\n+\t\t\t (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n+\t\t\t     (const_int 0))))\n+\t\t (const_string \"V4SF\")\n+\t       (eq (const_string \"<MODE>mode\") (const_string \"V4SFmode\"))\n+\t\t (const_string \"V4SF\")\n+\t       (eq (const_string \"<MODE>mode\") (const_string \"V2DFmode\"))\n+\t\t (const_string \"V2DF\")\n+\t      ]\n \t  (const_string \"TI\")))])\n \n ;; Move a DI from a 32-bit register pair (e.g. %edx:%eax) to an xmm.\n@@ -145,36 +154,6 @@\n       gcc_unreachable ();\n })\n \n-(define_expand \"mov<mode>\"\n-  [(set (match_operand:SSEMODEF2P 0 \"nonimmediate_operand\" \"\")\n-\t(match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"\"))]\n-  \"TARGET_SSE\"\n-{\n-  ix86_expand_vector_move (<MODE>mode, operands);\n-  DONE;\n-})\n-\n-(define_insn \"*movv4sf_internal\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,x,m\")\n-\t(match_operand:V4SF 1 \"nonimmediate_or_sse_const_operand\" \"C,xm,x\"))]\n-  \"TARGET_SSE\n-   && (register_operand (operands[0], V4SFmode)\n-       || register_operand (operands[1], V4SFmode))\"\n-{\n-  switch (which_alternative)\n-    {\n-    case 0:\n-      return standard_sse_constant_opcode (insn, operands[1]);\n-    case 1:\n-    case 2:\n-      return \"movaps\\t{%1, %0|%0, %1}\";\n-    default:\n-      gcc_unreachable ();\n-    }\n-}\n-  [(set_attr \"type\" \"sselog1,ssemov,ssemov\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n (define_split\n   [(set (match_operand:V4SF 0 \"register_operand\" \"\")\n \t(match_operand:V4SF 1 \"zero_extended_scalar_load_operand\" \"\"))]\n@@ -189,38 +168,6 @@\n   operands[2] = CONST0_RTX (V4SFmode);\n })\n \n-(define_insn \"*movv2df_internal\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\" \"=x,x,m\")\n-\t(match_operand:V2DF 1 \"nonimmediate_or_sse_const_operand\" \"C,xm,x\"))]\n-  \"TARGET_SSE\n-   && (register_operand (operands[0], V2DFmode)\n-       || register_operand (operands[1], V2DFmode))\"\n-{\n-  switch (which_alternative)\n-    {\n-    case 0:\n-      return standard_sse_constant_opcode (insn, operands[1]);\n-    case 1:\n-    case 2:\n-      if (get_attr_mode (insn) == MODE_V4SF)\n-\treturn \"movaps\\t{%1, %0|%0, %1}\";\n-      else\n-\treturn \"movapd\\t{%1, %0|%0, %1}\";\n-    default:\n-      gcc_unreachable ();\n-    }\n-}\n-  [(set_attr \"type\" \"sselog1,ssemov,ssemov\")\n-   (set (attr \"mode\")\n-\t(if_then_else\n-\t  (ior (ior (ne (symbol_ref \"optimize_size\") (const_int 0))\n-\t\t    (eq (symbol_ref \"TARGET_SSE2\") (const_int 0)))\n-\t       (and (eq_attr \"alternative\" \"2\")\n-\t  \t    (ne (symbol_ref \"TARGET_SSE_TYPELESS_STORES\")\n-\t\t        (const_int 0))))\n-\t  (const_string \"V4SF\")\n-\t  (const_string \"V2DF\")))])\n-\n (define_split\n   [(set (match_operand:V2DF 0 \"register_operand\" \"\")\n \t(match_operand:V2DF 1 \"zero_extended_scalar_load_operand\" \"\"))]"}]}