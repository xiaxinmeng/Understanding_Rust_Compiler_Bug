{"sha": "e284dec53b47987924dfaaec965c2e6c20defe66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI4NGRlYzUzYjQ3OTg3OTI0ZGZhYWVjOTY1YzJlNmMyMGRlZmU2Ng==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2014-08-30T18:47:04Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-08-30T18:47:04Z"}, "message": "re PR fortran/62278 (gfc_check_dependency should also check for TARGET attribute)\n\n2014-08-30  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/62278\n        PR fortran/44735\n        PR fortran/60593\n        * dependency.c (gfc_check_dependency): Allow for optimizations\n        in the pointer-alias check.\n\nFrom-SVN: r214757", "tree": {"sha": "44d1eb25a3e136d70bf49d6948f7f4fe8b473846", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44d1eb25a3e136d70bf49d6948f7f4fe8b473846"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e284dec53b47987924dfaaec965c2e6c20defe66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e284dec53b47987924dfaaec965c2e6c20defe66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e284dec53b47987924dfaaec965c2e6c20defe66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e284dec53b47987924dfaaec965c2e6c20defe66/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef719901742ad9ad85130e590c9d40a47794866c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef719901742ad9ad85130e590c9d40a47794866c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef719901742ad9ad85130e590c9d40a47794866c"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "b9706f4450d75a8284a1b29c612a6240a7acf489", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e284dec53b47987924dfaaec965c2e6c20defe66/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e284dec53b47987924dfaaec965c2e6c20defe66/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e284dec53b47987924dfaaec965c2e6c20defe66", "patch": "@@ -1,3 +1,11 @@\n+2014-08-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/62278\n+\tPR fortran/44735\n+\tPR fortran/60593\n+\t* dependency.c (gfc_check_dependency): Allow for optimizations\n+\tin the pointer-alias check.\n+\n 2014-08-30  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* module.c (gfc_dump_module): Use ISO C remove() instead of POSIX"}, {"sha": "367b323eae2c128223acc12225347629a011ce84", "filename": "gcc/fortran/dependency.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e284dec53b47987924dfaaec965c2e6c20defe66/gcc%2Ffortran%2Fdependency.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e284dec53b47987924dfaaec965c2e6c20defe66/gcc%2Ffortran%2Fdependency.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdependency.c?ref=e284dec53b47987924dfaaec965c2e6c20defe66", "patch": "@@ -1269,6 +1269,7 @@ gfc_check_dependency (gfc_expr *expr1, gfc_expr *expr2, bool identical)\n       /* The interesting cases are when the symbols don't match.  */\n       if (expr1->symtree->n.sym != expr2->symtree->n.sym)\n \t{\n+\t  symbol_attribute attr1, attr2;\n \t  gfc_typespec *ts1 = &expr1->symtree->n.sym->ts;\n \t  gfc_typespec *ts2 = &expr2->symtree->n.sym->ts;\n \n@@ -1284,9 +1285,13 @@ gfc_check_dependency (gfc_expr *expr1, gfc_expr *expr2, bool identical)\n \t\treturn 0;\n \t    }\n \n-\t  /* If either variable is a pointer, assume the worst.  */\n-\t  /* TODO: -fassume-no-pointer-aliasing */\n-\t  if (gfc_is_data_pointer (expr1) || gfc_is_data_pointer (expr2))\n+\t  /* We have to also include target-target as ptr%comp is not a\n+\t     pointer but it still alias with \"dt%comp\" for \"ptr => dt\".  As\n+\t     subcomponents and array access to pointers retains the target\n+\t     attribute, that's sufficient.  */\n+\t  attr1 = gfc_expr_attr (expr1);\n+\t  attr2 = gfc_expr_attr (expr2);\n+\t  if ((attr1.pointer || attr1.target) && (attr2.pointer || attr2.target))\n \t    {\n \t      if (check_data_pointer_types (expr1, expr2)\n \t\t    && check_data_pointer_types (expr2, expr1))"}]}