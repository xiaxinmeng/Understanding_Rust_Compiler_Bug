{"sha": "8ff7780cb292144ad27af13ab18f873fcd731786", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZmNzc4MGNiMjkyMTQ0YWQyN2FmMTNhYjE4Zjg3M2ZjZDczMTc4Ng==", "commit": {"author": {"name": "Dominique d'Humieres", "email": "dominiq@gcc.gnu.org", "date": "2019-01-30T15:53:51Z"}, "committer": {"name": "Dominique d'Humieres", "email": "dominiq@gcc.gnu.org", "date": "2019-01-30T15:53:51Z"}, "message": "re PR fortran/52884 (double precision constants promoted to 16 byte by -fdefault-real-8)\n\n2019-01-30  Dominique d'Humieres  <dominiq@gcc.gnu.org>\n\n\tPR fortran/52884\n\t* invoke.texi: Document the promotion of double precision\n\tconstants.\n\nFrom-SVN: r268396", "tree": {"sha": "131c6e49749794b554f6b150ac04f4e580a0ed47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/131c6e49749794b554f6b150ac04f4e580a0ed47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ff7780cb292144ad27af13ab18f873fcd731786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff7780cb292144ad27af13ab18f873fcd731786", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ff7780cb292144ad27af13ab18f873fcd731786", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff7780cb292144ad27af13ab18f873fcd731786/comments", "author": null, "committer": null, "parents": [{"sha": "2eb8a3e56f06618711aed111e3e61f4ac67f3d49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2eb8a3e56f06618711aed111e3e61f4ac67f3d49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2eb8a3e56f06618711aed111e3e61f4ac67f3d49"}], "stats": {"total": 57, "additions": 36, "deletions": 21}, "files": [{"sha": "ac9169a76e60c3dd5ca1636f871b822bb389c1be", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ff7780cb292144ad27af13ab18f873fcd731786/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ff7780cb292144ad27af13ab18f873fcd731786/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8ff7780cb292144ad27af13ab18f873fcd731786", "patch": "@@ -1,3 +1,9 @@\n+2019-01-30  Dominique d'Humieres  <dominiq@gcc.gnu.org>\n+\n+\tPR fortran/52884\n+\t* invoke.texi: Document the promotion of double precision\n+\tconstants.\n+\n 2019-01-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/57048"}, {"sha": "deaf8eba102a69932e2a6d3198af6862d0453422", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 30, "deletions": 21, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ff7780cb292144ad27af13ab18f873fcd731786/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ff7780cb292144ad27af13ab18f873fcd731786/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=8ff7780cb292144ad27af13ab18f873fcd731786", "patch": "@@ -416,36 +416,45 @@ kind declaration.\n \n @item -fdefault-real-8\n @opindex @code{fdefault-real-8}\n-Set the default real type to an 8 byte wide type. This option also affects\n-the kind of non-double real constants like @code{1.0}, and does promote\n-the default width of @code{DOUBLE PRECISION} to 16 bytes if possible, unless\n-@code{-fdefault-double-8} is given, too. Unlike @option{-freal-4-real-8},\n-it does not promote variables with explicit kind declaration.\n+Set the default real type to an 8 byte wide type.  This option also affects\n+the kind of non-double real constants like @code{1.0}.  This option promotes\n+the default width of @code{DOUBLE PRECISION} and double real constants\n+like @code{1.d0} to 16 bytes if possible.  If @code{-fdefault-double-8}\n+is given along with @code{fdefault-real-8}, @code{DOUBLE PRECISION}\n+and double real constants are not promoted.  Unlike @option{-freal-4-real-8},\n+@code{fdefault-real-8} does not promote variables with explicit kind\n+declarations.\n \n @item -fdefault-real-10\n @opindex @code{fdefault-real-10}\n-Set the default real type to a 10 byte wide type. This option also affects\n-the kind of non-double real constants like @code{1.0}, and does promote\n-the default width of @code{DOUBLE PRECISION} to 16 bytes if possible, unless\n-@code{-fdefault-double-8} is given. Unlike @option{-freal-4-real-10},\n-it does not promote variables with explicit kind declaration.\n+Set the default real type to an 10 byte wide type.  This option also affects\n+the kind of non-double real constants like @code{1.0}.  This option promotes\n+the default width of @code{DOUBLE PRECISION} and double real constants\n+like @code{1.d0} to 16 bytes if possible.  If @code{-fdefault-double-8}\n+is given along with @code{fdefault-real-10}, @code{DOUBLE PRECISION}\n+and double real constants are not promoted.  Unlike @option{-freal-4-real-10},\n+@code{fdefault-real-10} does not promote variables with explicit kind\n+declarations.\n \n @item -fdefault-real-16\n @opindex @code{fdefault-real-16}\n-Set the default real type to a 16 byte wide type. This option also affects\n-the kind of non-double real constants like @code{1.0}, and does promote\n-the default width of @code{DOUBLE PRECISION} to 16 bytes if possible, unless\n-@code{-fdefault-double-8} is given. Unlike @option{-freal-4-real-16},\n-it does not promote variables with explicit kind declaration.\n+Set the default real type to an 16 byte wide type.  This option also affects\n+the kind of non-double real constants like @code{1.0}.  This option promotes\n+the default width of @code{DOUBLE PRECISION} and double real constants\n+like @code{1.d0} to 16 bytes if possible.  If @code{-fdefault-double-8}\n+is given along with @code{fdefault-real-16}, @code{DOUBLE PRECISION}\n+and double real constants are not promoted.  Unlike @option{-freal-4-real-16},\n+@code{fdefault-real-16} does not promote variables with explicit kind\n+declarations.\n \n @item -fdefault-double-8\n @opindex @code{fdefault-double-8}\n-Set the @code{DOUBLE PRECISION} type to an 8 byte wide type.  Do nothing if this\n-is already the default.  If @option{-fdefault-real-8} is given,\n-@code{DOUBLE PRECISION} would instead be promoted to 16 bytes if possible, and\n-@option{-fdefault-double-8} can be used to prevent this.  The kind of real\n-constants like @code{1.d0} will not be changed by @option{-fdefault-real-8}\n-though, so also @option{-fdefault-double-8} does not affect it.\n+Set the @code{DOUBLE PRECISION} type and double real constants\n+like @code{1.d0} to an 8 byte wide type.  Do nothing if this\n+is already the default.  This option prevents @option{-fdefault-real-8},\n+@option{-fdefault-real-10}, and @option{-fdefault-real-16},\n+from promoting @code{DOUBLE PRECISION} and double real constants like\n+@code{1.d0} to 16 bytes.\n \n @item -finteger-4-integer-8\n @opindex @code{finteger-4-integer-8}"}]}