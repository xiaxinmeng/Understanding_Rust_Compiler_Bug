{"sha": "d35256b6c1c2d52d3539ef8a1c700b69342acd19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM1MjU2YjZjMWMyZDUyZDM1MzllZjhhMWM3MDBiNjkzNDJhY2QxOQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2017-04-28T20:51:05Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2017-04-28T20:51:05Z"}, "message": "Drop Z from X + Z < Y + Z\n\n2017-04-28  Marc Glisse  <marc.glisse@inria.fr>\n\ngcc/\n\t* match.pd (X+Z OP Y+Z, X-Z OP Y-Z, Z-X OP Z-Y): New transformations.\n\ngcc/testsuite/\n\t* gcc.dg/tree-ssa/cmpexactdiv-2.c: Update for X-Z OP Y-Z.\n\nFrom-SVN: r247398", "tree": {"sha": "67e432daeec2332a011517d2c89b6f3aae111358", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67e432daeec2332a011517d2c89b6f3aae111358"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d35256b6c1c2d52d3539ef8a1c700b69342acd19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35256b6c1c2d52d3539ef8a1c700b69342acd19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d35256b6c1c2d52d3539ef8a1c700b69342acd19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35256b6c1c2d52d3539ef8a1c700b69342acd19/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c90d48b346dfd6d41ceebaa58f2dd67c8fc5993", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c90d48b346dfd6d41ceebaa58f2dd67c8fc5993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c90d48b346dfd6d41ceebaa58f2dd67c8fc5993"}], "stats": {"total": 60, "additions": 58, "deletions": 2}, "files": [{"sha": "d1204f18311eca1f656a3642c817976e0aa7e936", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35256b6c1c2d52d3539ef8a1c700b69342acd19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35256b6c1c2d52d3539ef8a1c700b69342acd19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d35256b6c1c2d52d3539ef8a1c700b69342acd19", "patch": "@@ -1,3 +1,7 @@\n+2017-04-28  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* match.pd (X+Z OP Y+Z, X-Z OP Y-Z, Z-X OP Z-Y): New transformations.\n+\n 2017-04-28  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* configure.ac (SYSTEM_HEADER_DIR, BUILD_SYSTEM_HEADER_DIR,"}, {"sha": "e3d98baa12fa62ca103624d4b387dfd21e580252", "filename": "gcc/match.pd", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35256b6c1c2d52d3539ef8a1c700b69342acd19/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35256b6c1c2d52d3539ef8a1c700b69342acd19/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=d35256b6c1c2d52d3539ef8a1c700b69342acd19", "patch": "@@ -1042,6 +1042,54 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (if (wi::gt_p(@2, 0, TYPE_SIGN (TREE_TYPE (@2))))\n    (cmp @0 @1))))\n \n+/* X + Z < Y + Z is the same as X < Y when there is no overflow.  */\n+(for op (lt le ge gt)\n+ (simplify\n+  (op (plus:c @0 @2) (plus:c @1 @2))\n+  (if (ANY_INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+       && TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (@0)))\n+   (op @0 @1))))\n+/* For equality and subtraction, this is also true with wrapping overflow.  */\n+(for op (eq ne minus)\n+ (simplify\n+  (op (plus:c @0 @2) (plus:c @1 @2))\n+  (if (ANY_INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+       && (TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (@0))\n+\t   || TYPE_OVERFLOW_WRAPS (TREE_TYPE (@0))))\n+   (op @0 @1))))\n+\n+/* X - Z < Y - Z is the same as X < Y when there is no overflow.  */\n+(for op (lt le ge gt)\n+ (simplify\n+  (op (minus @0 @2) (minus @1 @2))\n+  (if (ANY_INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+       && TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (@0)))\n+   (op @0 @1))))\n+/* For equality and subtraction, this is also true with wrapping overflow.  */\n+(for op (eq ne minus)\n+ (simplify\n+  (op (minus @0 @2) (minus @1 @2))\n+  (if (ANY_INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+       && (TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (@0))\n+\t   || TYPE_OVERFLOW_WRAPS (TREE_TYPE (@0))))\n+   (op @0 @1))))\n+\n+/* Z - X < Z - Y is the same as Y < X when there is no overflow.  */\n+(for op (lt le ge gt)\n+ (simplify\n+  (op (minus @2 @0) (minus @2 @1))\n+  (if (ANY_INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+       && TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (@0)))\n+   (op @1 @0))))\n+/* For equality and subtraction, this is also true with wrapping overflow.  */\n+(for op (eq ne minus)\n+ (simplify\n+  (op (minus @2 @0) (minus @2 @1))\n+  (if (ANY_INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+       && (TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (@0))\n+\t   || TYPE_OVERFLOW_WRAPS (TREE_TYPE (@0))))\n+   (op @1 @0))))\n+\n /* ((X inner_op C0) outer_op C1)\n    With X being a tree where value_range has reasoned certain bits to always be\n    zero throughout its computed value range,"}, {"sha": "92db79cded76b231da1d48f1bfb90b92dce1d163", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35256b6c1c2d52d3539ef8a1c700b69342acd19/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35256b6c1c2d52d3539ef8a1c700b69342acd19/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d35256b6c1c2d52d3539ef8a1c700b69342acd19", "patch": "@@ -1,3 +1,7 @@\n+2017-04-28  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* gcc.dg/tree-ssa/cmpexactdiv-2.c: Update for X-Z OP Y-Z.\n+\n 2017-04-28  Tom de Vries  <tom@codesourcery.com>\n \n \t* g++.dg/abi/bitfield3.C: Remove superfluous \"\" in"}, {"sha": "a41811cf5713cc01164d7f9c2aeada2dc3ab6d96", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cmpexactdiv-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35256b6c1c2d52d3539ef8a1c700b69342acd19/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcmpexactdiv-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35256b6c1c2d52d3539ef8a1c700b69342acd19/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcmpexactdiv-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcmpexactdiv-2.c?ref=d35256b6c1c2d52d3539ef8a1c700b69342acd19", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-optimized-raw\" } */\n+/* { dg-options \"-O -fstrict-overflow -fdump-tree-optimized-raw\" } */\n \n int f (long *a, long *b, long *c) {\n     __PTRDIFF_TYPE__ l1 = b - a;\n     __PTRDIFF_TYPE__ l2 = c - a;\n     return l1 < l2;\n }\n \n-/* Eventually we also want to remove all minus_expr.  */\n+/* { dg-final { scan-tree-dump-not \"minus_expr\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-not \"exact_div_expr\" \"optimized\" } } */"}]}