{"sha": "b6a41a622fca5c25b927189c55cd5bd614571bdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZhNDFhNjIyZmNhNWMyNWI5MjcxODljNTVjZDViZDYxNDU3MWJkZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2003-10-29T14:23:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-10-29T14:23:45Z"}, "message": "ia64.c (ia64_assemble_integer): Test POINTER_SIZE, not TARGET_ILP32.\n\n\t* config/ia64/ia64.c (ia64_assemble_integer): Test POINTER_SIZE,\n\tnot TARGET_ILP32.\n\t(ia64_initialize_trampoline): Use globalize_label target call.\n\nFrom-SVN: r73039", "tree": {"sha": "090aa4d5c3d0e71d24800905f6060cfeb4c2a4ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/090aa4d5c3d0e71d24800905f6060cfeb4c2a4ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6a41a622fca5c25b927189c55cd5bd614571bdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6a41a622fca5c25b927189c55cd5bd614571bdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6a41a622fca5c25b927189c55cd5bd614571bdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6a41a622fca5c25b927189c55cd5bd614571bdf/comments", "author": null, "committer": null, "parents": [{"sha": "24c98faeff091398e7a9e806d21c2cda628e68f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24c98faeff091398e7a9e806d21c2cda628e68f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24c98faeff091398e7a9e806d21c2cda628e68f5"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "a1089cc74f58f3f4620831013645e780efcf55ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6a41a622fca5c25b927189c55cd5bd614571bdf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6a41a622fca5c25b927189c55cd5bd614571bdf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6a41a622fca5c25b927189c55cd5bd614571bdf", "patch": "@@ -1,3 +1,9 @@\n+2003-10-29  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* config/ia64/ia64.c (ia64_assemble_integer): Test POINTER_SIZE,\n+\tnot TARGET_ILP32.\n+\t(ia64_initialize_trampoline): Use globalize_label target call.\n+\n 2003-10-29  Andreas Schwab  <schwab@suse.de>\n \n \t* doc/install.texi (Building): Add a sentence about building Ada"}, {"sha": "efbee69b77914493c14ff0e13dc2f5be5091f341", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6a41a622fca5c25b927189c55cd5bd614571bdf/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6a41a622fca5c25b927189c55cd5bd614571bdf/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=b6a41a622fca5c25b927189c55cd5bd614571bdf", "patch": "@@ -3120,13 +3120,13 @@ ia64_hard_regno_rename_ok (int from, int to)\n static bool\n ia64_assemble_integer (rtx x, unsigned int size, int aligned_p)\n {\n-  if (size == (TARGET_ILP32 ? 4 : 8)\n+  if (size == POINTER_SIZE / BITS_PER_UNIT\n       && aligned_p\n       && !(TARGET_NO_PIC || TARGET_AUTO_PIC)\n       && GET_CODE (x) == SYMBOL_REF\n       && SYMBOL_REF_FUNCTION_P (x))\n     {\n-      if (TARGET_ILP32)\n+      if (POINTER_SIZE == 32)\n \tfputs (\"\\tdata4\\t@fptr(\", asm_out_file);\n       else\n \tfputs (\"\\tdata8\\t@fptr(\", asm_out_file);\n@@ -3282,7 +3282,8 @@ ia64_initialize_trampoline (rtx addr, rtx fnaddr, rtx static_chain)\n       if (!declared_ia64_trampoline)\n \t{\n \t  declared_ia64_trampoline = true;\n-\t  fputs (\"\\t.global\\t__ia64_trampoline\\n\", asm_out_file);\n+\t  (*targetm.asm_out.globalize_label) (asm_out_file,\n+\t\t\t\t\t      \"__ia64_trampoline\");\n \t}\n     }\n \n@@ -4405,7 +4406,7 @@ ia64_asm_output_external (FILE *file, tree decl, const char *name)\n   if (TARGET_GNU_AS\n       && (!TARGET_HPUX_LD\n \t  || TREE_CODE (decl) != FUNCTION_DECL\n-\t  || strstr(name, \"__builtin_\") == name))\n+\t  || strstr (name, \"__builtin_\") == name))\n     return;\n \n   /* ??? The Intel assembler creates a reference that needs to be satisfied by"}]}