{"sha": "5460015decdcce33e95c60aba3a66897178bd953", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ2MDAxNWRlY2RjY2UzM2U5NWM2MGFiYTNhNjY4OTcxNzhiZDk1Mw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-12T19:48:02Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-12T19:48:02Z"}, "message": "(emit_stack_save): At end, call validize_mem when inside sequence.\n\nFrom-SVN: r4104", "tree": {"sha": "cf21afceda4685b70d8388272ebfc734b672963e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf21afceda4685b70d8388272ebfc734b672963e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5460015decdcce33e95c60aba3a66897178bd953", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5460015decdcce33e95c60aba3a66897178bd953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5460015decdcce33e95c60aba3a66897178bd953", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5460015decdcce33e95c60aba3a66897178bd953/comments", "author": null, "committer": null, "parents": [{"sha": "b76478952ba40bfb81febeeb3f76983b53cdff5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b76478952ba40bfb81febeeb3f76983b53cdff5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b76478952ba40bfb81febeeb3f76983b53cdff5e"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "f13129fa0347eb5d7997a8c652395523b7276301", "filename": "gcc/explow.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5460015decdcce33e95c60aba3a66897178bd953/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5460015decdcce33e95c60aba3a66897178bd953/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=5460015decdcce33e95c60aba3a66897178bd953", "patch": "@@ -748,21 +748,26 @@ emit_stack_save (save_level, psave, after)\n \tabort ();\n     }\n \n-  if (sa != 0)\n-    sa = validize_mem (sa);\n-\n   if (after)\n     {\n       rtx seq;\n \n       start_sequence ();\n+      /* We must validize inside the sequence, to ensure that any instructions\n+\t created by the validize call also get moved to the right place.  */\n+      if (sa != 0)\n+\tsa = validize_mem (sa);\n       emit_insn (fcn (sa, stack_pointer_rtx));\n       seq = gen_sequence ();\n       end_sequence ();\n       emit_insn_after (seq, after);\n     }\n   else\n-    emit_insn (fcn (sa, stack_pointer_rtx));\n+    {\n+      if (sa != 0)\n+\tsa = validize_mem (sa);\n+      emit_insn (fcn (sa, stack_pointer_rtx));\n+    }\n }\n \n /* Restore the stack pointer for the purpose in SAVE_LEVEL.  SA is the save"}]}