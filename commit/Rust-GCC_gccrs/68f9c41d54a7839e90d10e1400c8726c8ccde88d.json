{"sha": "68f9c41d54a7839e90d10e1400c8726c8ccde88d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhmOWM0MWQ1NGE3ODM5ZTkwZDEwZTE0MDBjODcyNmM4Y2NkZTg4ZA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-02-17T08:28:08Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-02-18T13:09:29Z"}, "message": "analyzer: add test coverage for gfortran ICE fix [PR 93779]\n\nPR analyzer/93779 reports an ICE in gfortran with -fanalyzer\nthat was fixed for GCC 10 by a workaround in\nf76a88ebf089871dcce215aa0cb1956ccc060895; the tree code in\nquestion is a FUNCTION_DECL.\n\nGiven that I want to rework the above patch at some point, it seems\nprudent to add test coverage to ensure the ICE doesn't come back,\nwhich this patch does.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/93779\n\t* gfortran.dg/analyzer/pr88304-2.f90: New test, adapted from\n\tgfortran.fortran-torture/compile/pr88304-2.f90", "tree": {"sha": "f55300e2630784fca1aab4d1f07bc61b91183a4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f55300e2630784fca1aab4d1f07bc61b91183a4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68f9c41d54a7839e90d10e1400c8726c8ccde88d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f9c41d54a7839e90d10e1400c8726c8ccde88d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68f9c41d54a7839e90d10e1400c8726c8ccde88d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f9c41d54a7839e90d10e1400c8726c8ccde88d/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f55a0eec910dd02992f4caca083048d91c0b2e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f55a0eec910dd02992f4caca083048d91c0b2e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f55a0eec910dd02992f4caca083048d91c0b2e1"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "c6b76dfac654ca955fede36cbbd435d4550180d6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f9c41d54a7839e90d10e1400c8726c8ccde88d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f9c41d54a7839e90d10e1400c8726c8ccde88d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68f9c41d54a7839e90d10e1400c8726c8ccde88d", "patch": "@@ -1,3 +1,9 @@\n+2020-02-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93779\n+\t* gfortran.dg/analyzer/pr88304-2.f90: New test, adapted from\n+\tgfortran.fortran-torture/compile/pr88304-2.f90\n+\n 2020-02-18  Mark Eggleston  <mark.eggleston@codethink.com>\n \n \tPR fortran/93603"}, {"sha": "6b3ab89adce3a83c798ade35fe7cea91e862ea12", "filename": "gcc/testsuite/gfortran.dg/analyzer/pr88304-2.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f9c41d54a7839e90d10e1400c8726c8ccde88d/gcc%2Ftestsuite%2Fgfortran.dg%2Fanalyzer%2Fpr88304-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f9c41d54a7839e90d10e1400c8726c8ccde88d/gcc%2Ftestsuite%2Fgfortran.dg%2Fanalyzer%2Fpr88304-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fanalyzer%2Fpr88304-2.f90?ref=68f9c41d54a7839e90d10e1400c8726c8ccde88d", "patch": "@@ -0,0 +1,29 @@\n+! Copy of gfortran.fortran-torture/compile/pr88304-2.f90\n+! as a regression test for ICE with -fanalyzer (PR analyzer/93779)\n+\n+module pr88304\n+  implicit none\n+  integer :: p\n+contains\n+  function foo (x, y, z, w)\n+    integer, intent(in) :: x, y\n+    character(*), optional, intent(out) :: z\n+    integer, optional, intent(out) :: w\n+    integer :: foo\n+    foo = 1\n+  end function foo\n+  subroutine bar ()\n+    integer :: s\n+    s = baz (1)\n+  contains\n+    function baz (u)\n+      integer, intent(in) :: u\n+      integer :: baz\n+      integer :: q\n+      integer :: r (10)\n+      r = 0\n+      baz = 1\n+      q = foo (p, r(u), w = baz)\n+    end function baz\n+  end subroutine bar\n+end module pr88304"}]}