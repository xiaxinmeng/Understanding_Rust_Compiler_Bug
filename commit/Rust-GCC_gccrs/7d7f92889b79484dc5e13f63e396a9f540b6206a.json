{"sha": "7d7f92889b79484dc5e13f63e396a9f540b6206a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q3ZjkyODg5Yjc5NDg0ZGM1ZTEzZjYzZTM5NmE5ZjU0MGI2MjA2YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-10-12T07:16:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-10-12T07:16:01Z"}, "message": "match.pd ((X /[ex] A) * A -> X): Remove unnecessary constraint on the conversion.\n\n2016-10-12  Richard Biener  <rguenther@suse.de>\n\n\t* match.pd ((X /[ex] A) * A -> X): Remove unnecessary constraint\n\ton the conversion.\n\nFrom-SVN: r241022", "tree": {"sha": "490dd7f4dceb854d8f5a451e533a840016ea9ee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/490dd7f4dceb854d8f5a451e533a840016ea9ee6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d7f92889b79484dc5e13f63e396a9f540b6206a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d7f92889b79484dc5e13f63e396a9f540b6206a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d7f92889b79484dc5e13f63e396a9f540b6206a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d7f92889b79484dc5e13f63e396a9f540b6206a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "a50d32d6ef8de8a50b34b844836405b5d23d7a45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d7f92889b79484dc5e13f63e396a9f540b6206a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d7f92889b79484dc5e13f63e396a9f540b6206a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d7f92889b79484dc5e13f63e396a9f540b6206a", "patch": "@@ -1,3 +1,8 @@\n+2016-10-12  Richard Biener  <rguenther@suse.de>\n+\n+\t* match.pd ((X /[ex] A) * A -> X): Remove unnecessary constraint\n+\ton the conversion.\n+\n 2016-10-12  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-propagate.c"}, {"sha": "894cc14e5f2dbe522a13b7599a3f5145ecb590f9", "filename": "gcc/match.pd", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d7f92889b79484dc5e13f63e396a9f540b6206a/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d7f92889b79484dc5e13f63e396a9f540b6206a/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=7d7f92889b79484dc5e13f63e396a9f540b6206a", "patch": "@@ -1783,10 +1783,8 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (simplify\n   (mult (convert1? (exact_div @0 @1)) (convert2? @2))\n   /* We cannot use matching captures here, since in the case of\n-     constants we don't see the second conversion.  Look through\n-     a sign-changing or widening conversions.  */\n-  (if (operand_equal_p (@1, @2, 0)\n-       && element_precision (@0) <= element_precision (type))\n+     constants we don't see the second conversion.  */\n+  (if (operand_equal_p (@1, @2, 0))\n    (convert @0)))\n \n /* Canonicalization of binary operations.  */"}]}