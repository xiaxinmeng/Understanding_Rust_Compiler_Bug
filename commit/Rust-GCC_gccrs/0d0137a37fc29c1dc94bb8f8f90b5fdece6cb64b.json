{"sha": "0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQwMTM3YTM3ZmMyOWMxZGM5NGJiOGY4ZjkwYjVmZGVjZTZjYjY0Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-06-12T22:38:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-06-12T22:38:10Z"}, "message": "io.c (check_format): Use G_(...) instead of _(...) for error values...\n\n\t* io.c (check_format): Use G_(...) instead of _(...) for error values,\n\tappend \" in format string at %L\" to all strings but unexpected_element,\n\tuse error as gfc_error formating string instead of\n\t\"%s in format string at %L\".  Formatting fixes.\n\nFrom-SVN: r272222", "tree": {"sha": "6866521538013a300482adbea4d5165ff198ab18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6866521538013a300482adbea4d5165ff198ab18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99e764a225b18deb086ee0e73a14c92df52bed5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e764a225b18deb086ee0e73a14c92df52bed5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99e764a225b18deb086ee0e73a14c92df52bed5d"}], "stats": {"total": 68, "additions": 42, "deletions": 26}, "files": [{"sha": "897d773264b929787d399e183107d81ce9f48c89", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b", "patch": "@@ -1,3 +1,10 @@\n+2019-06-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* io.c (check_format): Use G_(...) instead of _(...) for error values,\n+\tappend \" in format string at %L\" to all strings but unexpected_element,\n+\tuse error as gfc_error formating string instead of\n+\t\"%s in format string at %L\".  Formatting fixes.\n+\n 2019-06-12  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* gfortran.h (gfc_free_dt_list): Remove prototype."}, {"sha": "776cdbf98ceef75cff94b268033ea5ca685ac408", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 35, "deletions": 26, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b", "patch": "@@ -596,12 +596,16 @@ token_to_string (format_token t)\n static bool\n check_format (bool is_input)\n {\n-  const char *posint_required\t  = _(\"Positive width required\");\n-  const char *nonneg_required\t  = _(\"Nonnegative width required\");\n-  const char *unexpected_element  = _(\"Unexpected element %qc in format \"\n-\t\t\t\t      \"string at %L\");\n-  const char *unexpected_end\t  = _(\"Unexpected end of format string\");\n-  const char *zero_width\t  = _(\"Zero width in format descriptor\");\n+  const char *posint_required\n+    = G_(\"Positive width required in format string at %L\");\n+  const char *nonneg_required\n+    = G_(\"Nonnegative width required in format string at %L\");\n+  const char *unexpected_element \n+    = G_(\"Unexpected element %qc in format string at %L\");\n+  const char *unexpected_end\n+    = G_(\"Unexpected end of format string in format string at %L\");\n+  const char *zero_width\n+    = G_(\"Zero width in format descriptor in format string at %L\");\n \n   const char *error = NULL;\n   format_token t, u;\n@@ -621,7 +625,7 @@ check_format (bool is_input)\n     goto fail;\n   if (t != FMT_LPAREN)\n     {\n-      error = _(\"Missing leading left parenthesis\");\n+      error = G_(\"Missing leading left parenthesis in format string at %L\");\n       goto syntax;\n     }\n \n@@ -650,7 +654,8 @@ check_format (bool is_input)\n \t  level++;\n \t  goto format_item;\n \t}\n-      error = _(\"Left parenthesis required after %<*%>\");\n+      error = G_(\"Left parenthesis required after %<*%> in format string \"\n+\t\t \"at %L\");\n       goto syntax;\n \n     case FMT_POSINT:\n@@ -681,15 +686,16 @@ check_format (bool is_input)\n \tgoto fail;\n       if (t != FMT_P)\n \t{\n-\t  error = _(\"Expected P edit descriptor\");\n+\t  error = G_(\"Expected P edit descriptor in format string at %L\");\n \t  goto syntax;\n \t}\n \n       goto data_desc;\n \n     case FMT_P:\n       /* P requires a prior number.  */\n-      error = _(\"P descriptor requires leading scale factor\");\n+      error = G_(\"P descriptor requires leading scale factor in format \"\n+\t\t \"string at %L\");\n       goto syntax;\n \n     case FMT_X:\n@@ -783,7 +789,8 @@ check_format (bool is_input)\n \t  && t != FMT_F && t != FMT_E && t != FMT_EN && t != FMT_ES\n \t  && t != FMT_D && t != FMT_G && t != FMT_RPAREN && t != FMT_SLASH)\n \t{\n-\t  error = _(\"Comma required after P descriptor\");\n+\t  error = G_(\"Comma required after P descriptor in format string \"\n+\t\t     \"at %L\");\n \t  goto syntax;\n \t}\n       if (t != FMT_COMMA)\n@@ -794,10 +801,11 @@ check_format (bool is_input)\n \t      if (t == FMT_ERROR)\n \t\tgoto fail;\n \t    }\n-          if (t != FMT_F && t != FMT_E && t != FMT_EN && t != FMT_ES && t != FMT_D\n-\t      && t != FMT_G && t != FMT_RPAREN && t != FMT_SLASH)\n+\t  if (t != FMT_F && t != FMT_E && t != FMT_EN && t != FMT_ES\n+\t      && t != FMT_D && t != FMT_G && t != FMT_RPAREN && t != FMT_SLASH)\n \t    {\n-\t      error = _(\"Comma required after P descriptor\");\n+\t      error = G_(\"Comma required after P descriptor in format string \"\n+\t\t\t \"at %L\");\n \t      goto syntax;\n \t    }\n \t}\n@@ -811,7 +819,8 @@ check_format (bool is_input)\n       t = format_lex ();\n       if (t != FMT_POSINT)\n \t{\n-\t  error = _(\"Positive width required with T descriptor\");\n+\t  error = G_(\"Positive width required with T descriptor in format \"\n+\t\t     \"string at %L\");\n \t  goto syntax;\n \t}\n       break;\n@@ -894,7 +903,8 @@ check_format (bool is_input)\n \t  u = format_lex ();\n \t  if (u == FMT_E)\n \t    {\n-\t      error = _(\"E specifier not allowed with g0 descriptor\");\n+\t      error = G_(\"E specifier not allowed with g0 descriptor in \"\n+\t\t\t \"format string at %L\");\n \t      goto syntax;\n \t    }\n \t  saved_token = u;\n@@ -961,17 +971,16 @@ check_format (bool is_input)\n       if (u == FMT_ERROR)\n \tgoto fail;\n       if (u != FMT_E)\n-\t{\n-\t  saved_token = u;\n-\t}\n+\tsaved_token = u;\n       else\n \t{\n \t  u = format_lex ();\n \t  if (u == FMT_ERROR)\n \t    goto fail;\n \t  if (u != FMT_POSINT)\n \t    {\n-\t      error = _(\"Positive exponent width required\");\n+\t      error = G_(\"Positive exponent width required in format string \"\n+\t\t\t \"at %L\");\n \t      goto syntax;\n \t    }\n \t}\n@@ -1017,7 +1026,8 @@ check_format (bool is_input)\n \t    goto dtio_vlist;\n \t  if (t != FMT_RPAREN)\n \t    {\n-\t      error = _(\"Right parenthesis expected at %C\");\n+\t      error = G_(\"Right parenthesis expected at %C in format string \"\n+\t\t\t \"at %L\");\n \t      goto syntax;\n \t    }\n \t  goto between_desc;\n@@ -1058,7 +1068,8 @@ check_format (bool is_input)\n \t  /* Warn if -std=legacy, otherwise error.  */\n \t  if (gfc_option.warn_std != 0)\n \t    {\n-\t      error = _(\"Period required in format specifier\");\n+\t      error = G_(\"Period required in format specifier in format \"\n+\t\t\t \"string at %L\");\n \t      goto syntax;\n \t    }\n \t  if (mode != MODE_FORMAT)\n@@ -1132,9 +1143,7 @@ check_format (bool is_input)\n       if (t == FMT_ERROR)\n \tgoto fail;\n       if (t != FMT_PERIOD)\n-\t{\n-\t  saved_token = t;\n-\t}\n+\tsaved_token = t;\n       else\n \t{\n \t  t = format_lex ();\n@@ -1262,7 +1271,7 @@ check_format (bool is_input)\n   if (error == unexpected_element)\n     gfc_error (error, error_element, &format_locus);\n   else\n-    gfc_error (\"%s in format string at %L\", error, &format_locus);\n+    gfc_error (error, &format_locus);\n fail:\n   rv = false;\n "}]}