{"sha": "d1a821b93c45bfe7606b5dee8d160c7172b37e3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFhODIxYjkzYzQ1YmZlNzYwNmI1ZGVlOGQxNjBjNzE3MmIzN2UzZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-02-12T15:08:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-02-12T15:08:29Z"}, "message": "libstdc++: Include scope ID in net::internet::address_v6::to_string()\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/experimental/internet (address_v6::to_string): Include\n\tscope ID in string.\n\t* testsuite/experimental/net/internet/address/v6/members.cc:\n\tTest to_string() results.", "tree": {"sha": "ed6cd4203eedb1dfb56dcaeffec17e391b146d98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed6cd4203eedb1dfb56dcaeffec17e391b146d98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1a821b93c45bfe7606b5dee8d160c7172b37e3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1a821b93c45bfe7606b5dee8d160c7172b37e3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1a821b93c45bfe7606b5dee8d160c7172b37e3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1a821b93c45bfe7606b5dee8d160c7172b37e3e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "970ba719250ec06767e0617658bb92a64fde0f3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/970ba719250ec06767e0617658bb92a64fde0f3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/970ba719250ec06767e0617658bb92a64fde0f3f"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "288c61ba25a9cb3c2adef3a91e50055b809249ae", "filename": "libstdc++-v3/include/experimental/internet", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1a821b93c45bfe7606b5dee8d160c7172b37e3e/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Finternet", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1a821b93c45bfe7606b5dee8d160c7172b37e3e/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Finternet", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Finternet?ref=d1a821b93c45bfe7606b5dee8d160c7172b37e3e", "patch": "@@ -344,9 +344,23 @@ namespace ip\n       to_string(const _Allocator& __a = _Allocator()) const\n       {\n \t__string_with<_Allocator> __str(__a);\n-\t__str.resize(INET6_ADDRSTRLEN);\n-\tif (inet_ntop(AF_INET6, &_M_bytes, &__str.front(), __str.size()))\n-\t  __str.erase(__str.find('\\0'));\n+\t__str.resize(INET6_ADDRSTRLEN + (_M_scope_id ? 11 : 0));\n+\tchar* const __p = &__str.front();\n+\tif (inet_ntop(AF_INET6, &_M_bytes, __p, __str.size()))\n+\t  {\n+\t    auto __end = __str.find('\\0');\n+\t    if (unsigned long __scope = _M_scope_id)\n+\t      {\n+\t\t__end +=\n+#if _GLIBCXX_USE_C99_STDIO\n+\t\t  __builtin_snprintf(__p + __end, __str.size() - __end,\n+\t\t\t\t     \"%%%lu\", __scope);\n+#else\n+\t\t  __builtin_sprintf(__p + __end, \"%%%lu\", __scope);\n+#endif\n+\t      }\n+\t    __str.erase(__end);\n+\t  }\n \telse\n \t  __str.resize(0);\n \treturn __str;\n@@ -364,9 +378,7 @@ namespace ip\n     static constexpr address_v6\n     loopback() noexcept\n     {\n-      address_v6 __addr;\n-      __addr._M_bytes[15] = 1;\n-      return __addr;\n+      return {bytes_type{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}};\n     }\n \n   private:"}, {"sha": "b77d6a29e3d6c9b70c5da2a0daa409fa1ecfad0d", "filename": "libstdc++-v3/testsuite/experimental/net/internet/address/v6/members.cc", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1a821b93c45bfe7606b5dee8d160c7172b37e3e/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Finternet%2Faddress%2Fv6%2Fmembers.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1a821b93c45bfe7606b5dee8d160c7172b37e3e/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Finternet%2Faddress%2Fv6%2Fmembers.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Finternet%2Faddress%2Fv6%2Fmembers.cc?ref=d1a821b93c45bfe7606b5dee8d160c7172b37e3e", "patch": "@@ -86,16 +86,30 @@ static_assert(test02(), \"\");\n void\n test03()\n {\n+  // Assume these addresses use the preferred forms:\n   VERIFY( address_v6::any().to_string() == \"::\" );\n   VERIFY( address_v6::loopback().to_string() == \"::1\" );\n+\n+  // Choose values with no leading zeros, so output is portable:\n+  address_v6 a{address_v6::bytes_type{21,22,23,24,25,26,27,28,29}, 42};\n+  const std::string s = a.to_string();\n+  if (s.find(\"::\") != s.npos)\n+    VERIFY( s == \"1516:1718:191a:1b1c:1d00::%42\" );\n+  else\n+  {\n+    // Contiguous zeros were not shortened to \"::\"\n+    VERIFY( s.substr(0, 25) == \"1516:1718:191a:1b1c:1d00:\" );\n+    VERIFY( s.substr(s.size() - 3) == \"%42\" );\n+  }\n }\n \n void\n test04()\n {\n+  address_v6 a{address_v6::bytes_type{1,2,3,4,5,6,7,8,9}, 42};\n   std::ostringstream ss;\n-  ss << address_v6::any() << ' ' << address_v6::loopback();\n-  VERIFY( ss.str() == \":: ::1\" );\n+  ss << address_v6::any() << ' ' << address_v6::loopback() << ' ' << a;\n+  VERIFY( ss.str() == (\":: ::1 \" + a.to_string()) );\n }\n \n int"}]}