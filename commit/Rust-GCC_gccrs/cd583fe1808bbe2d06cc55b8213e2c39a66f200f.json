{"sha": "cd583fe1808bbe2d06cc55b8213e2c39a66f200f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q1ODNmZTE4MDhiYmUyZDA2Y2M1NWI4MjEzZTJjMzlhNjZmMjAwZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-08-05T10:01:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-08-05T10:01:12Z"}, "message": "re PR tree-optimization/67055 (Segmentation fault in fold_builtin_alloca_with_align in tree-ssa-ccp.c)\n\n2015-08-05  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/67055\n\t* tree-ssa-ccp.c (fold_builtin_alloca_with_align): Handle\n\tNULL gimple_block.\n\n\t* g++.dg/torture/pr67055.C: New testcase.\n\nFrom-SVN: r226616", "tree": {"sha": "53511daa81e693968df0d7e86d363655d0df7df2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53511daa81e693968df0d7e86d363655d0df7df2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd583fe1808bbe2d06cc55b8213e2c39a66f200f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd583fe1808bbe2d06cc55b8213e2c39a66f200f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd583fe1808bbe2d06cc55b8213e2c39a66f200f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd583fe1808bbe2d06cc55b8213e2c39a66f200f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f4904740e728f10edfe9fc996cf5dc0178db46a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4904740e728f10edfe9fc996cf5dc0178db46a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4904740e728f10edfe9fc996cf5dc0178db46a4"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "ff02e192470772b59a43c4ef7bb9bad44420b5c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd583fe1808bbe2d06cc55b8213e2c39a66f200f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd583fe1808bbe2d06cc55b8213e2c39a66f200f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd583fe1808bbe2d06cc55b8213e2c39a66f200f", "patch": "@@ -1,3 +1,11 @@\n+2015-08-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/67055\n+\t* tree-ssa-ccp.c (fold_builtin_alloca_with_align): Handle\n+\tNULL gimple_block.\n+\n+\t* g++.dg/torture/pr67055.C: New testcase.\n+\n 2015-08-05  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \t* config/i386/i386.md (define_attr \"isa\"): Addd avx512vl and"}, {"sha": "e7e74a36b2526b5b2ab28e07dedbadae987b8b7c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd583fe1808bbe2d06cc55b8213e2c39a66f200f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd583fe1808bbe2d06cc55b8213e2c39a66f200f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd583fe1808bbe2d06cc55b8213e2c39a66f200f", "patch": "@@ -1,3 +1,8 @@\n+2015-08-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/67055\n+\t* g++.dg/torture/pr67055.C: New testcase.\n+\n 2015-08-05  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/67109"}, {"sha": "7cbbca275c21355c9edb359b3889a95f445ca300", "filename": "gcc/testsuite/g++.dg/torture/pr67055.C", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd583fe1808bbe2d06cc55b8213e2c39a66f200f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr67055.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd583fe1808bbe2d06cc55b8213e2c39a66f200f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr67055.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr67055.C?ref=cd583fe1808bbe2d06cc55b8213e2c39a66f200f", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+// { dg-additional-options \"-std=c++14\" }\n+\n+namespace std {\n+    typedef __SIZE_TYPE__ size_t;\n+    struct nothrow_t;\n+}\n+namespace vespamalloc {\n+    void fn1(void *);\n+    template <typename> class A {\n+    public:\n+\tstatic unsigned long fillStack(unsigned long);\n+    };\n+    template <typename StackRep>\n+\tunsigned long A<StackRep>::fillStack(unsigned long p1) {\n+\t    void *retAddr[p1];\n+\t    fn1(retAddr);\n+\t}\n+    class B {\n+    protected:\n+\tB(void *);\n+    };\n+    template <int StackTraceLen> class D : B {\n+    public:\n+\tD() : B(0) {}\n+\tvoid alloc(int) { A<int>::fillStack(StackTraceLen); }\n+    };\n+    template <typename, typename> class C {\n+    public:\n+\tvoid *malloc(unsigned long);\n+    };\n+    template <typename MemBlockPtrT, typename ThreadListT>\n+\tvoid *C<MemBlockPtrT, ThreadListT>::malloc(unsigned long) {\n+\t    MemBlockPtrT mem;\n+\t    mem.alloc(0);\n+\t}\n+    C<D<16>, int> *_GmemP;\n+}\n+void *operator new(std::size_t, std::nothrow_t &) noexcept {\n+    return vespamalloc::_GmemP->malloc(0);\n+}\n+void *operator new[](std::size_t, std::nothrow_t &) noexcept {\n+    return vespamalloc::_GmemP->malloc(0);\n+}"}, {"sha": "398ddc1e0413899af8d9b0d2ece0f48831e20d28", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd583fe1808bbe2d06cc55b8213e2c39a66f200f/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd583fe1808bbe2d06cc55b8213e2c39a66f200f/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=cd583fe1808bbe2d06cc55b8213e2c39a66f200f", "patch": "@@ -2107,6 +2107,7 @@ fold_builtin_alloca_with_align (gimple stmt)\n      as a declared array, so we allow a larger size.  */\n   block = gimple_block (stmt);\n   if (!(cfun->after_inlining\n+\t&& block\n         && TREE_CODE (BLOCK_SUPERCONTEXT (block)) == FUNCTION_DECL))\n     threshold /= 10;\n   if (size > threshold)"}]}