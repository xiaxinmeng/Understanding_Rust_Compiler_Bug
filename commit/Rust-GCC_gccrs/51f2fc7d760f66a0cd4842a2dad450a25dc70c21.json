{"sha": "51f2fc7d760f66a0cd4842a2dad450a25dc70c21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFmMmZjN2Q3NjBmNjZhMGNkNDg0MmEyZGFkNDUwYTI1ZGM3MGMyMQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-07-31T09:56:26Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-31T09:56:26Z"}, "message": "[Ada] Unnesting: find local subps in nested stmt sequences\n\n2018-07-31  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada\n\n\t* exp_ch7.adb (Check_Unnesting_Elaboration_Code): To find local\n\tsubprograms in the elaboration code for a package body, recurse\n\tthrough nested statement sequences because a compiler-generated\n\tprocedure may appear within a condition statement.\n\nFrom-SVN: r263102", "tree": {"sha": "01253f12605aad02d33eff3f2c4b62e13afb294c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01253f12605aad02d33eff3f2c4b62e13afb294c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51f2fc7d760f66a0cd4842a2dad450a25dc70c21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51f2fc7d760f66a0cd4842a2dad450a25dc70c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51f2fc7d760f66a0cd4842a2dad450a25dc70c21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51f2fc7d760f66a0cd4842a2dad450a25dc70c21/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6cdce5064b7e2c30beec8a99f1b19869f14398a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cdce5064b7e2c30beec8a99f1b19869f14398a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cdce5064b7e2c30beec8a99f1b19869f14398a7"}], "stats": {"total": 123, "additions": 98, "deletions": 25}, "files": [{"sha": "8207826eabee9b4823989fd66aeae4daccce81b7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51f2fc7d760f66a0cd4842a2dad450a25dc70c21/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51f2fc7d760f66a0cd4842a2dad450a25dc70c21/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=51f2fc7d760f66a0cd4842a2dad450a25dc70c21", "patch": "@@ -1,3 +1,10 @@\n+2018-07-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch7.adb (Check_Unnesting_Elaboration_Code): To find local\n+\tsubprograms in the elaboration code for a package body, recurse\n+\tthrough nested statement sequences because a compiler-generated\n+\tprocedure may appear within a condition statement.\n+\n 2018-07-31  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch6.adb (Expand_Protected_Subprogram_Call): Handle"}, {"sha": "1b8b8f254f17f13b6a20a782d70b60d71bb4d099", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 91, "deletions": 25, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51f2fc7d760f66a0cd4842a2dad450a25dc70c21/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51f2fc7d760f66a0cd4842a2dad450a25dc70c21/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=51f2fc7d760f66a0cd4842a2dad450a25dc70c21", "patch": "@@ -3995,6 +3995,10 @@ package body Exp_Ch7 is\n       --  Check recursively whether a loop or block contains a subprogram that\n       --  may need an activation record.\n \n+      function First_Local_Scope (L : List_Id) return Entity_Id;\n+      --  Find first block or loop that contains a subprogram and is not itself\n+      --  nested within another local scope.\n+\n       --------------------------\n       --  Contains_Subprogram --\n       --------------------------\n@@ -4021,12 +4025,92 @@ package body Exp_Ch7 is\n          return False;\n       end Contains_Subprogram;\n \n+      -----------------------\n+      --  Find_Local_Scope --\n+      -----------------------\n+\n+      function First_Local_Scope (L : List_Id) return Entity_Id is\n+         Stat : Node_Id;\n+         Scop : Entity_Id;\n+\n+      begin\n+         Stat := First (L);\n+         while Present (Stat) loop\n+            case Nkind (Stat) is\n+               when N_Block_Statement =>\n+                  if Present (Identifier (Stat)) then\n+                     return Entity (Identifier (Stat));\n+                  end if;\n+\n+               when N_Loop_Statement =>\n+                  if Contains_Subprogram (Entity (Identifier (Stat))) then\n+                     return Entity (Identifier (Stat));\n+                  end if;\n+\n+               when N_If_Statement =>\n+                  Scop := First_Local_Scope (Then_Statements (Stat));\n+\n+                  if Present (Scop) then\n+                     return Scop;\n+                  end if;\n+\n+                  Scop := First_Local_Scope (Else_Statements (Stat));\n+\n+                  if Present (Scop) then\n+                     return Scop;\n+                  end if;\n+\n+                  declare\n+                     Elif : Node_Id;\n+                  begin\n+                     Elif := First (Elsif_Parts (Stat));\n+\n+                     while Present (Elif) loop\n+                        Scop := First_Local_Scope (Statements (Elif));\n+\n+                        if Present (Scop) then\n+                           return Scop;\n+                        end if;\n+\n+                        Next (Elif);\n+                     end loop;\n+                  end;\n+\n+               when N_Case_Statement =>\n+                  declare\n+                     Alt : Node_Id;\n+                  begin\n+                     Alt := First (Alternatives (Stat));\n+\n+                     while Present (Alt) loop\n+                        Scop := First_Local_Scope (Statements (Alt));\n+\n+                        if Present (Scop) then\n+                           return Scop;\n+                        end if;\n+\n+                        Next (Alt);\n+                     end loop;\n+                  end;\n+\n+               when N_Subprogram_Body =>\n+                  return Defining_Entity (Stat);\n+\n+               when others =>\n+                  null;\n+            end case;\n+            Next (Stat);\n+         end loop;\n+\n+         return Empty;\n+      end First_Local_Scope;\n+\n       --  Local variables\n \n       Elab_Body : Node_Id;\n       Elab_Call : Node_Id;\n       Elab_Proc : Entity_Id;\n-      Stat      : Node_Id;\n+      Ent       : Entity_Id;\n \n    --  Start of processing for Check_Unnesting_Elaboration_Code\n \n@@ -4035,16 +4119,10 @@ package body Exp_Ch7 is\n         and then Present (Handled_Statement_Sequence (N))\n         and then Is_Compilation_Unit (Current_Scope)\n       then\n-         Stat := First (Statements (Handled_Statement_Sequence (N)));\n-         while Present (Stat) loop\n-            exit when ((Nkind (Stat) = N_Block_Statement\n-                         and then Present (Identifier (Stat)))\n-                or else Nkind (Stat) = N_Loop_Statement)\n-              and then Contains_Subprogram (Entity (Identifier (Stat)));\n-            Next (Stat);\n-         end loop;\n+         Ent := First_Local_Scope\n+                  (Statements (Handled_Statement_Sequence (N)));\n \n-         if Present (Stat) then\n+         if Present (Ent) then\n             Elab_Proc :=\n               Make_Defining_Identifier (Loc,\n                 Chars => New_Internal_Name ('I'));\n@@ -4077,21 +4155,9 @@ package body Exp_Ch7 is\n             --  within those blocks will have activation records if they\n             --  contain references to entities in the enclosing block.\n \n-            Stat :=\n-              First (Statements (Handled_Statement_Sequence (Elab_Body)));\n-\n-            while Present (Stat) loop\n-               if (Nkind (Stat) = N_Block_Statement\n-                    and then Present (Identifier (Stat)))\n-                 or else Nkind (Stat) = N_Loop_Statement\n-               then\n-                  Set_Scope (Entity (Identifier (Stat)), Elab_Proc);\n-\n-               elsif Nkind (Stat) = N_Subprogram_Body then\n-                  Set_Scope (Defining_Entity (Stat), Elab_Proc);\n-               end if;\n-\n-               Next (Stat);\n+            while Present (Ent) loop\n+               Set_Scope (Ent, Elab_Proc);\n+               Next_Entity (Ent);\n             end loop;\n          end if;\n       end if;"}]}