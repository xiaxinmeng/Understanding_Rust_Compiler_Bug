{"sha": "7a2cc1e8438ee853900f20880ca8858c17486b10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EyY2MxZTg0MzhlZTg1MzkwMGYyMDg4MGNhODg1OGMxNzQ4NmIxMA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-10-30T19:06:58Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-11-01T20:21:41Z"}, "message": "Objective-C/C++ : Improve '@' keyword locations.\n\nWhen we are lexing tokens for Objective-C, we combine '@' tokens\nwith a following keyword (when that keyword is a valid Objective-C\none or, for Objective-C, one of the C++ keywords that can appear in\nthis position).  The responsibility is passed on to the parser to\nvalidate the resulting combination.\n\nThe combination of tokens was being done without applying the rule\nto their locations - so that we get:\n\n@property\n^\n\ninstead of what the user might expect:\n\n@property\n^~~~~~~~~\n\nThis patch combines the source range of the keyword with that of the\n'@' sign - which improves diagnostics.\n\ngcc/c-family/ChangeLog:\n\n\t* c-lex.c (c_lex_with_flags): When combining '@' with a\n\tkeyword for Objective-C, combine the location ranges too.", "tree": {"sha": "2785fa67b9e3e07a913c218f55e11e26bc220e27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2785fa67b9e3e07a913c218f55e11e26bc220e27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a2cc1e8438ee853900f20880ca8858c17486b10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a2cc1e8438ee853900f20880ca8858c17486b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a2cc1e8438ee853900f20880ca8858c17486b10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a2cc1e8438ee853900f20880ca8858c17486b10/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e344ea07e4024316e1bc01f18bf7f187ad3aef89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e344ea07e4024316e1bc01f18bf7f187ad3aef89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e344ea07e4024316e1bc01f18bf7f187ad3aef89"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "e81e16ddc26bf1250c8ae5945b270f57863c2fd5", "filename": "gcc/c-family/c-lex.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a2cc1e8438ee853900f20880ca8858c17486b10/gcc%2Fc-family%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a2cc1e8438ee853900f20880ca8858c17486b10/gcc%2Fc-family%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-lex.c?ref=7a2cc1e8438ee853900f20880ca8858c17486b10", "patch": "@@ -550,7 +550,11 @@ c_lex_with_flags (tree *value, location_t *loc, unsigned char *cpp_flags,\n \t\t     returning a token of type CPP_AT_NAME and rid\n \t\t     code RID_CLASS (not RID_AT_CLASS).  The language\n \t\t     parser needs to convert that to RID_AT_CLASS.\n+\t\t     However, we've now spliced the '@' together with the\n+\t\t     keyword that follows; Adjust the location so that we\n+\t\t     get a source range covering the composite.\n \t\t  */\n+\t         *loc = make_location (atloc, atloc, newloc);\n \t\t  break;\n \t\t}\n \t      /* FALLTHROUGH */"}]}