{"sha": "af8fd1a99d9a21f8088ebb11250cd06a3f275052", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY4ZmQxYTk5ZDlhMjFmODA4OGViYjExMjUwY2QwNmEzZjI3NTA1Mg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-05-29T12:11:27Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-06-04T16:56:37Z"}, "message": "Extend 'libgomp.oacc-c-c++-common/pr92854-1.c' some more [PR92854]\n\n\tlibgomp/\n\tPR libgomp/92854\n\t* testsuite/libgomp.oacc-c-c++-common/pr92854-1.c: Extend some\n\tmore.", "tree": {"sha": "0e0d1e6802efe702508204ccbd6e26b5446c416f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e0d1e6802efe702508204ccbd6e26b5446c416f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af8fd1a99d9a21f8088ebb11250cd06a3f275052", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af8fd1a99d9a21f8088ebb11250cd06a3f275052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af8fd1a99d9a21f8088ebb11250cd06a3f275052", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af8fd1a99d9a21f8088ebb11250cd06a3f275052/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f233418ccf6a16eb3bf53018852c5f8926780143", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f233418ccf6a16eb3bf53018852c5f8926780143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f233418ccf6a16eb3bf53018852c5f8926780143"}], "stats": {"total": 64, "additions": 47, "deletions": 17}, "files": [{"sha": "79cebf65c348405618e7e008cc9d8f3fdab198e9", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/pr92854-1.c", "status": "modified", "additions": 47, "deletions": 17, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8fd1a99d9a21f8088ebb11250cd06a3f275052/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr92854-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8fd1a99d9a21f8088ebb11250cd06a3f275052/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr92854-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr92854-1.c?ref=af8fd1a99d9a21f8088ebb11250cd06a3f275052", "patch": "@@ -1,31 +1,61 @@\n-/* Verify that 'acc_unmap_data' unmaps even in presence of dynamic reference\n-   counts.  */\n+/* Verify that 'acc_unmap_data' unmaps even in presence of structured and\n+   dynamic reference counts, but the device memory remains allocated.  */\n \n /* { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-DACC_MEM_SHARED=0\" } } */\n \n #include <assert.h>\n #include <stdlib.h>\n+#include <string.h>\n #include <openacc.h>\n \n int\n main ()\n {\n   const int N = 180;\n-\n-  char *h = (char *) malloc (N);\n-  char *d = (char *) acc_malloc (N);\n-  if (!d)\n-    abort ();\n-  acc_map_data (h, d, N);\n-\n-  char *d_ = (char *) acc_create (h + 3, N - 77);\n-  assert (d_ == d + 3);\n-\n-  d_ = (char *) acc_create (h, N);\n-  assert (d_ == d);\n-\n-  acc_unmap_data (h);\n-  assert (!acc_is_present (h, N));\n+  const int N_i = 537;\n+  const int C = 37;\n+\n+  unsigned char *h = (unsigned char *) malloc (N);\n+  assert (h);\n+  unsigned char *d = (unsigned char *) acc_malloc (N);\n+  assert (d);\n+\n+  for (int i = 0; i < N_i; ++i)\n+    {\n+      acc_map_data (h, d, N);\n+      assert (acc_is_present (h, N));\n+#pragma acc parallel present(h[0:N])\n+      {\n+\tif (i == 0)\n+\t  memset (h, C, N);\n+      }\n+\n+      unsigned char *d_ = (unsigned char *) acc_create (h + 3, N - 77);\n+      assert (d_ == d + 3);\n+\n+#pragma acc data create(h[6:N - 44])\n+      {\n+\td_ = (unsigned char *) acc_create (h, N);\n+\tassert (d_ == d);\n+\n+#pragma acc enter data create(h[0:N])\n+\n+\tassert (acc_is_present (h, N));\n+\tacc_unmap_data (h);\n+\tassert (!acc_is_present (h, N));\n+      }\n+\n+      /* We can however still access the device memory.  */\n+#pragma acc parallel loop deviceptr(d)\n+      for (int j = 0; j < N; ++j)\n+\td[j] += i * j;\n+    }\n+\n+  acc_memcpy_from_device(h, d, N);\n+  for (int j = 0; j < N; ++j)\n+    assert (h[j] == ((C + N_i * (N_i - 1) / 2 * j) % 256));\n+\n+  acc_free (d);\n \n   return 0;\n }"}]}