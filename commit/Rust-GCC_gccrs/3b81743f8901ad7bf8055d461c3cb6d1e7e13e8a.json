{"sha": "3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I4MTc0M2Y4OTAxYWQ3YmY4MDU1ZDQ2MWMzY2I2ZDFlN2UxM2U4YQ==", "commit": {"author": {"name": "Nicolas Setton", "email": "setton@adacore.com", "date": "2009-04-22T10:33:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-22T10:33:15Z"}, "message": "link.c: Add flag __gnat_separate_run_path_options.\n\n2009-04-22  Nicolas Setton  <setton@adacore.com>\n\n\t* link.c: Add flag __gnat_separate_run_path_options.\n\n\t* mlib.adb (Separate_Run_Path_Options): New subprogram.\n\n\t* mlib.ads (Separate_Run_Path_Options): Declare.\n\n\t* gnatcmd.adb (Process_Link): Add support for emitting one \"rpath\"\n\tswitch per directory, rather than one \"rpath\" switch listing all\n\tdirectories.\n\n\t* gnatlink.adb (Process_Binder_File): Likewise.\n\n\t* make.adb (Gnatmake): Likewise.\n\nFrom-SVN: r146561", "tree": {"sha": "ef9f50f373ee8f9b9a94515d768274f5fc871681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef9f50f373ee8f9b9a94515d768274f5fc871681"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/comments", "author": {"login": "setton", "id": 96973, "node_id": "MDQ6VXNlcjk2OTcz", "avatar_url": "https://avatars.githubusercontent.com/u/96973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/setton", "html_url": "https://github.com/setton", "followers_url": "https://api.github.com/users/setton/followers", "following_url": "https://api.github.com/users/setton/following{/other_user}", "gists_url": "https://api.github.com/users/setton/gists{/gist_id}", "starred_url": "https://api.github.com/users/setton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/setton/subscriptions", "organizations_url": "https://api.github.com/users/setton/orgs", "repos_url": "https://api.github.com/users/setton/repos", "events_url": "https://api.github.com/users/setton/events{/privacy}", "received_events_url": "https://api.github.com/users/setton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a69b5ffe6b707dd6e96bc5c21f5db53db5001fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a69b5ffe6b707dd6e96bc5c21f5db53db5001fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a69b5ffe6b707dd6e96bc5c21f5db53db5001fe"}], "stats": {"total": 416, "additions": 276, "deletions": 140}, "files": [{"sha": "a70a712677a3f7f445e837dc9a12cbd9f250ec55", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a", "patch": "@@ -1,3 +1,19 @@\n+2009-04-22  Nicolas Setton  <setton@adacore.com>\n+\n+\t* link.c: Add flag __gnat_separate_run_path_options.\n+\n+\t* mlib.adb (Separate_Run_Path_Options): New subprogram.\n+\n+\t* mlib.ads (Separate_Run_Path_Options): Declare.\n+\n+\t* gnatcmd.adb (Process_Link): Add support for emitting one \"rpath\"\n+\tswitch per directory, rather than one \"rpath\" switch listing all\n+\tdirectories.\n+\n+\t* gnatlink.adb (Process_Binder_File): Likewise.\n+\n+\t* make.adb (Gnatmake): Likewise.\n+\n 2009-04-22  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch6.adb (Make_Build_In_Place_Call_In_Assignment): Code cleanup."}, {"sha": "66c71486788ccfa5ce7dba12287cdf360158e808", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 64, "deletions": 38, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -976,54 +976,80 @@ procedure GNATCmd is\n                Current : Natural;\n \n             begin\n-               --  First, compute the exact length for the switch\n+               if MLib.Separate_Run_Path_Options then\n \n-               for Index in\n-                 Library_Paths.First .. Library_Paths.Last\n-               loop\n-                  --  Add the length of the library dir plus one for the\n-                  --  directory separator.\n+                  --  We are going to create one switch of the form\n+                  --  \"-Wl,-rpath,dir_N\" for each directory to consider.\n \n-                  Length :=\n-                    Length +\n-                      Library_Paths.Table (Index)'Length + 1;\n-               end loop;\n+                  --  One switch for each library directory\n \n-               --  Finally, add the length of the standard GNAT library dir\n+                  for Index in\n+                    Library_Paths.First .. Library_Paths.Last\n+                  loop\n+                     Last_Switches.Increment_Last;\n+                     Last_Switches.Table\n+                       (Last_Switches.Last) := new String'\n+                       (Path_Option.all &\n+                        Last_Switches.Table (Index).all);\n+                  end loop;\n \n-               Length := Length + MLib.Utl.Lib_Directory'Length;\n-               Option := new String (1 .. Length);\n-               Option (1 .. Path_Option'Length) := Path_Option.all;\n-               Current := Path_Option'Length;\n+                  --  One switch for the standard GNAT library dir.\n \n-               --  Put each library dir followed by a dir separator\n+                  Last_Switches.Increment_Last;\n+                  Last_Switches.Table\n+                    (Last_Switches.Last) := new String'\n+                    (Path_Option.all & MLib.Utl.Lib_Directory);\n \n-               for Index in\n-                 Library_Paths.First .. Library_Paths.Last\n-               loop\n-                  Option\n-                    (Current + 1 ..\n+               else\n+                  --  First, compute the exact length for the switch\n+\n+                  for Index in\n+                    Library_Paths.First .. Library_Paths.Last\n+                  loop\n+                     --  Add the length of the library dir plus one for the\n+                     --  directory separator.\n+\n+                     Length :=\n+                       Length +\n+                         Library_Paths.Table (Index)'Length + 1;\n+                  end loop;\n+\n+                  --  Finally, add the length of the standard GNAT library dir\n+\n+                  Length := Length + MLib.Utl.Lib_Directory'Length;\n+                  Option := new String (1 .. Length);\n+                  Option (1 .. Path_Option'Length) := Path_Option.all;\n+                  Current := Path_Option'Length;\n+\n+                  --  Put each library dir followed by a dir separator\n+\n+                  for Index in\n+                    Library_Paths.First .. Library_Paths.Last\n+                  loop\n+                     Option\n+                       (Current + 1 ..\n+                          Current +\n+                            Library_Paths.Table (Index)'Length) :=\n+                       Library_Paths.Table (Index).all;\n+                     Current :=\n                        Current +\n-                         Library_Paths.Table (Index)'Length) :=\n-                      Library_Paths.Table (Index).all;\n-                  Current :=\n-                    Current +\n-                      Library_Paths.Table (Index)'Length + 1;\n-                  Option (Current) := Path_Separator;\n-               end loop;\n+                         Library_Paths.Table (Index)'Length + 1;\n+                     Option (Current) := Path_Separator;\n+                  end loop;\n \n-               --  Finally put the standard GNAT library dir\n+                  --  Finally put the standard GNAT library dir\n \n-               Option\n-                 (Current + 1 ..\n-                    Current + MLib.Utl.Lib_Directory'Length) :=\n-                   MLib.Utl.Lib_Directory;\n+                  Option\n+                    (Current + 1 ..\n+                       Current + MLib.Utl.Lib_Directory'Length) :=\n+                      MLib.Utl.Lib_Directory;\n \n-               --  And add the switch to the last switches\n+                  --  And add the switch to the last switches\n \n-               Last_Switches.Increment_Last;\n-               Last_Switches.Table (Last_Switches.Last) :=\n-                 Option;\n+                  Last_Switches.Increment_Last;\n+                  Last_Switches.Table (Last_Switches.Last) :=\n+                    Option;\n+               end if;\n             end;\n          end if;\n       end if;"}, {"sha": "eb255d9fc08fa104e616aa1427350bfd92678746", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 91, "deletions": 62, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -761,6 +761,12 @@ procedure Gnatlink is\n       --  Predicate indicating whether this target uses the GNU linker. In\n       --  this case we must output a GNU linker compatible response file.\n \n+      Separate_Run_Path_Options : Boolean;\n+      for Separate_Run_Path_Options'Size use Character'Size;\n+      pragma Import\n+        (C, Separate_Run_Path_Options, \"__gnat_separate_run_path_options\");\n+      --  Whether separate rpath options should be emitted for each directory\n+\n       Opening : aliased constant String := \"\"\"\";\n       Closing : aliased constant String := '\"' & ASCII.LF;\n       --  Needed to quote object paths in object list files when GNU linker\n@@ -1255,78 +1261,101 @@ procedure Gnatlink is\n                                  --  Look for an eventual run_path_option in\n                                  --  the linker switches.\n \n-                                 for J in reverse 1 .. Linker_Options.Last loop\n-                                    if Linker_Options.Table (J) /= null\n-                                      and then\n-                                        Linker_Options.Table (J)'Length\n-                                                  > Run_Path_Opt'Length\n-                                      and then\n-                                        Linker_Options.Table (J)\n-                                          (1 .. Run_Path_Opt'Length) =\n-                                                                Run_Path_Opt\n-                                    then\n-                                       --  We have found a already specified\n-                                       --  run_path_option: we will add to this\n-                                       --  switch, because only one\n-                                       --  run_path_option should be specified.\n-\n-                                       Run_Path_Opt_Index := J;\n-                                       exit;\n-                                    end if;\n-                                 end loop;\n-\n-                                 --  If there is no run_path_option, we need\n-                                 --  to add one.\n-\n-                                 if Run_Path_Opt_Index = 0 then\n+                                 if Separate_Run_Path_Options then\n                                     Linker_Options.Increment_Last;\n-                                 end if;\n+                                    Linker_Options.Table\n+                                      (Linker_Options.Last) :=\n+                                      new String'\n+                                        (Run_Path_Opt\n+                                         & File_Path\n+                                           (1 .. File_Path'Length\n+                                            - File_Name'Length));\n \n-                                 if GCC_Index = 0 then\n-                                    if Run_Path_Opt_Index = 0 then\n+                                    if GCC_Index /= 0 then\n+                                       Linker_Options.Increment_Last;\n                                        Linker_Options.Table\n                                          (Linker_Options.Last) :=\n-                                           new String'\n-                                              (Run_Path_Opt\n-                                                & File_Path\n-                                                  (1 .. File_Path'Length\n-                                                         - File_Name'Length));\n-\n-                                    else\n-                                       Linker_Options.Table\n-                                         (Run_Path_Opt_Index) :=\n-                                           new String'\n-                                             (Linker_Options.Table\n-                                                 (Run_Path_Opt_Index).all\n-                                              & Path_Separator\n-                                              & File_Path\n-                                                 (1 .. File_Path'Length\n-                                                       - File_Name'Length));\n+                                         new String'\n+                                           (Run_Path_Opt\n+                                            & File_Path (1 .. GCC_Index));\n                                     end if;\n-\n                                  else\n+                                    for J in reverse\n+                                      1 .. Linker_Options.Last\n+                                    loop\n+                                       if Linker_Options.Table (J) /= null\n+                                         and then\n+                                           Linker_Options.Table (J)'Length\n+                                           > Run_Path_Opt'Length\n+                                         and then\n+                                           Linker_Options.Table (J)\n+                                           (1 .. Run_Path_Opt'Length) =\n+                                           Run_Path_Opt\n+                                       then\n+                                          --  We have found a already specified\n+                                          --  run_path_option: we will add to\n+                                          --  this switch, because only one\n+                                          --  run_path_option should be\n+                                          --  specified.\n+\n+                                          Run_Path_Opt_Index := J;\n+                                          exit;\n+                                       end if;\n+                                    end loop;\n+\n+                                    --  If there is no run_path_option, we need\n+                                    --  to add one.\n+\n                                     if Run_Path_Opt_Index = 0 then\n-                                       Linker_Options.Table\n-                                         (Linker_Options.Last) :=\n-                                           new String'(Run_Path_Opt\n-                                             & File_Path\n+                                       Linker_Options.Increment_Last;\n+                                    end if;\n+\n+                                    if GCC_Index = 0 then\n+                                       if Run_Path_Opt_Index = 0 then\n+                                          Linker_Options.Table\n+                                            (Linker_Options.Last) :=\n+                                            new String'\n+                                              (Run_Path_Opt\n+                                               & File_Path\n+                                                 (1 .. File_Path'Length\n+                                                  - File_Name'Length));\n+\n+                                       else\n+                                          Linker_Options.Table\n+                                            (Run_Path_Opt_Index) :=\n+                                            new String'\n+                                              (Linker_Options.Table\n+                                                   (Run_Path_Opt_Index).all\n+                                               & Path_Separator\n+                                               & File_Path\n                                                  (1 .. File_Path'Length\n-                                                       - File_Name'Length)\n-                                             & Path_Separator\n-                                             & File_Path (1 .. GCC_Index));\n+                                                  - File_Name'Length));\n+                                       end if;\n \n                                     else\n-                                       Linker_Options.Table\n-                                         (Run_Path_Opt_Index) :=\n-                                           new String'\n-                                            (Linker_Options.Table\n-                                                (Run_Path_Opt_Index).all\n-                                             & Path_Separator\n-                                             & File_Path\n+                                       if Run_Path_Opt_Index = 0 then\n+                                          Linker_Options.Table\n+                                            (Linker_Options.Last) :=\n+                                            new String'(Run_Path_Opt\n+                                              & File_Path\n+                                                (1 .. File_Path'Length\n+                                                 - File_Name'Length)\n+                                              & Path_Separator\n+                                              & File_Path (1 .. GCC_Index));\n+\n+                                       else\n+                                          Linker_Options.Table\n+                                            (Run_Path_Opt_Index) :=\n+                                            new String'\n+                                              (Linker_Options.Table\n+                                                   (Run_Path_Opt_Index).all\n+                                               & Path_Separator\n+                                               & File_Path\n                                                  (1 .. File_Path'Length\n-                                                       - File_Name'Length)\n-                                             & Path_Separator\n-                                             & File_Path (1 .. GCC_Index));\n+                                                  - File_Name'Length)\n+                                               & Path_Separator\n+                                               & File_Path (1 .. GCC_Index));\n+                                       end if;\n                                     end if;\n                                  end if;\n                               end if;"}, {"sha": "c36d8e78a42d375c52f46c776299069fc2d3868b", "filename": "gcc/ada/link.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a", "patch": "@@ -65,6 +65,9 @@\n /*  using_gnu_linker is set to 1 when the GNU linker is used under this     */\n /*  target.                                                                 */\n \n+/*  separate_run_path_options is set to 1 when separate \"rpath\" arguments   */\n+/*  must be passed to the linker for each directory in the rpath.           */\n+\n /*  RESPONSE FILE & GNU LINKER                                              */\n /*  --------------------------                                              */\n /*  objlist_file_supported and using_gnu_link used together tell gnatlink   */\n@@ -88,6 +91,7 @@ unsigned char __gnat_objlist_file_supported = 1;\n char __gnat_shared_libgnat_default = STATIC;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n+unsigned char __gnat_separate_run_path_options = 0;\n \n #elif defined (sgi)\n const char *__gnat_object_file_option = \"-Wl,-objectlist,\";\n@@ -97,6 +101,7 @@ unsigned char __gnat_objlist_file_supported = 1;\n char __gnat_shared_libgnat_default = STATIC;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n+unsigned char __gnat_separate_run_path_options = 0;\n \n #elif defined (__WIN32)\n const char *__gnat_object_file_option = \"\";\n@@ -106,6 +111,7 @@ unsigned char __gnat_objlist_file_supported = 1;\n char __gnat_shared_libgnat_default = STATIC;\n unsigned char __gnat_using_gnu_linker = 1;\n const char *__gnat_object_library_extension = \".a\";\n+unsigned char __gnat_separate_run_path_options = 0;\n \n #elif defined (__hpux__)\n const char *__gnat_object_file_option = \"-Wl,-c,\";\n@@ -115,6 +121,7 @@ unsigned char __gnat_objlist_file_supported = 1;\n char __gnat_shared_libgnat_default = STATIC;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n+unsigned char __gnat_separate_run_path_options = 0;\n \n #elif defined (_AIX)\n const char *__gnat_object_file_option = \"-Wl,-f,\";\n@@ -124,6 +131,7 @@ const unsigned char __gnat_objlist_file_supported = 1;\n char __gnat_shared_libgnat_default = STATIC;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n+unsigned char __gnat_separate_run_path_options = 0;\n \n #elif defined (VMS)\n const char *__gnat_object_file_option = \"\";\n@@ -133,6 +141,7 @@ int __gnat_link_max = 2147483647;\n unsigned char __gnat_objlist_file_supported = 0;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".olb\";\n+unsigned char __gnat_separate_run_path_options = 0;\n \n #elif defined (sun)\n const char *__gnat_object_file_option = \"\";\n@@ -142,6 +151,7 @@ int __gnat_link_max = 2147483647;\n unsigned char __gnat_objlist_file_supported = 0;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n+unsigned char __gnat_separate_run_path_options = 0;\n \n #elif defined (__FreeBSD__)\n const char *__gnat_object_file_option = \"\";\n@@ -151,6 +161,7 @@ int __gnat_link_max = 8192;\n unsigned char __gnat_objlist_file_supported = 1;\n unsigned char __gnat_using_gnu_linker = 1;\n const char *__gnat_object_library_extension = \".a\";\n+unsigned char __gnat_separate_run_path_options = 0;\n \n #elif defined (__APPLE__)\n const char *__gnat_object_file_option = \"-Wl,-filelist,\";\n@@ -160,6 +171,7 @@ int __gnat_link_max = 262144;\n unsigned char __gnat_objlist_file_supported = 1;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n+unsigned char __gnat_separate_run_path_options = 1;\n \n #elif defined (linux) || defined(__GLIBC__)\n const char *__gnat_object_file_option = \"\";\n@@ -169,6 +181,7 @@ int __gnat_link_max = 8192;\n unsigned char __gnat_objlist_file_supported = 1;\n unsigned char __gnat_using_gnu_linker = 1;\n const char *__gnat_object_library_extension = \".a\";\n+unsigned char __gnat_separate_run_path_options = 0;\n \n #elif defined (__svr4__) && defined (i386)\n const char *__gnat_object_file_option = \"\";\n@@ -178,6 +191,7 @@ int __gnat_link_max = 2147483647;\n unsigned char __gnat_objlist_file_supported = 0;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n+unsigned char __gnat_separate_run_path_options = 0;\n \n #else\n \n@@ -190,4 +204,5 @@ int __gnat_link_max = 2147483647;\n unsigned char __gnat_objlist_file_supported = 0;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n+unsigned char __gnat_separate_run_path_options = 0;\n #endif"}, {"sha": "559baeb0d46be3bcf716db5dd5402df2b8ab5856", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 71, "deletions": 38, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a", "patch": "@@ -36,6 +36,7 @@ with Gnatvsn;  use Gnatvsn;\n with Hostparm; use Hostparm;\n with Makeusg;\n with Makeutl;  use Makeutl;\n+with MLib;\n with MLib.Prj;\n with MLib.Tgt; use MLib.Tgt;\n with MLib.Utl;\n@@ -6361,53 +6362,85 @@ package body Make is\n                            Current : Natural;\n \n                         begin\n-                           for Index in\n-                             Library_Paths.First .. Library_Paths.Last\n-                           loop\n-                              --  Add the length of the library dir plus one\n-                              --  for the directory separator.\n-\n-                              Length :=\n-                                Length +\n-                                Library_Paths.Table (Index)'Length + 1;\n-                           end loop;\n+                           if MLib.Separate_Run_Path_Options then\n+\n+                              --  We are going to create one switch of the form\n+                              --  \"-Wl,-rpath,dir_N\" for each directory to\n+                              --  consider.\n+\n+                              --  One switch for each library directory\n+\n+                              for Index in\n+                                Library_Paths.First .. Library_Paths.Last\n+                              loop\n+                                 Linker_Switches.Increment_Last;\n+                                 Linker_Switches.Table\n+                                   (Linker_Switches.Last) := new String'\n+                                   (Path_Option.all &\n+                                    Library_Paths.Table (Index).all);\n+                              end loop;\n \n-                           --  Finally, add the length of the standard GNAT\n-                           --  library dir.\n+                              --  One switch for the standard GNAT library dir.\n \n-                           Length := Length + MLib.Utl.Lib_Directory'Length;\n-                           Option := new String (1 .. Length);\n-                           Option (1 .. Path_Option'Length) := Path_Option.all;\n-                           Current := Path_Option'Length;\n+                              Linker_Switches.Increment_Last;\n+                              Linker_Switches.Table\n+                                (Linker_Switches.Last) := new String'\n+                                (Path_Option.all & MLib.Utl.Lib_Directory);\n \n-                           --  Put each library dir followed by a dir separator\n+                           else\n+                              --  We are going to create one switch of the form\n+                              --  \"-Wl,-rpath,dir_1:dir_2:dir_3\"\n+\n+                              for Index in\n+                                Library_Paths.First .. Library_Paths.Last\n+                              loop\n+                                 --  Add the length of the library dir plus one\n+                                 --  for the directory separator.\n+\n+                                 Length :=\n+                                   Length +\n+                                     Library_Paths.Table (Index)'Length + 1;\n+                              end loop;\n \n-                           for Index in\n-                             Library_Paths.First .. Library_Paths.Last\n-                           loop\n-                              Option\n-                                (Current + 1 ..\n+                              --  Finally, add the length of the standard GNAT\n+                              --  library dir.\n+\n+                              Length := Length + MLib.Utl.Lib_Directory'Length;\n+                              Option := new String (1 .. Length);\n+                              Option (1 .. Path_Option'Length) :=\n+                                Path_Option.all;\n+                              Current := Path_Option'Length;\n+\n+                              --  Put each library dir followed by a dir\n+                              --  separator.\n+\n+                              for Index in\n+                                Library_Paths.First .. Library_Paths.Last\n+                              loop\n+                                 Option\n+                                   (Current + 1 ..\n+                                      Current +\n+                                        Library_Paths.Table (Index)'Length) :=\n+                                   Library_Paths.Table (Index).all;\n+                                 Current :=\n                                    Current +\n-                                   Library_Paths.Table (Index)'Length) :=\n-                                Library_Paths.Table (Index).all;\n-                              Current :=\n-                                Current +\n-                                Library_Paths.Table (Index)'Length + 1;\n-                              Option (Current) := Path_Separator;\n-                           end loop;\n+                                     Library_Paths.Table (Index)'Length + 1;\n+                                 Option (Current) := Path_Separator;\n+                              end loop;\n \n-                           --  Finally put the standard GNAT library dir\n+                              --  Finally put the standard GNAT library dir\n \n-                           Option\n-                             (Current + 1 ..\n-                                Current + MLib.Utl.Lib_Directory'Length) :=\n-                             MLib.Utl.Lib_Directory;\n+                              Option\n+                                (Current + 1 ..\n+                                   Current + MLib.Utl.Lib_Directory'Length) :=\n+                                  MLib.Utl.Lib_Directory;\n \n-                           --  And add the switch to the linker switches\n+                              --  And add the switch to the linker switches\n \n-                           Linker_Switches.Increment_Last;\n-                           Linker_Switches.Table (Linker_Switches.Last) :=\n-                             Option;\n+                              Linker_Switches.Increment_Last;\n+                              Linker_Switches.Table (Linker_Switches.Last) :=\n+                                Option;\n+                           end if;\n                         end;\n                      end if;\n "}, {"sha": "22d24ab243d4b7be621ab15e0af2109bac62b084", "filename": "gcc/ada/mlib.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2Fmlib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2Fmlib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib.adb?ref=3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2008, AdaCore                     --\n+--                     Copyright (C) 1999-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -442,6 +442,19 @@ package body MLib is\n       end if;\n    end Major_Id_Name;\n \n+   -------------------------------\n+   -- Separate_Run_Path_Options --\n+   -------------------------------\n+\n+   function Separate_Run_Path_Options return Boolean is\n+      Separate_Paths : Boolean;\n+      for Separate_Paths'Size use Character'Size;\n+      pragma Import (C, Separate_Paths, \"__gnat_separate_run_path_options\");\n+\n+   begin\n+      return Separate_Paths;\n+   end Separate_Run_Path_Options;\n+\n --  Package elaboration\n \n begin"}, {"sha": "0aa62d21574f090e7c560c8c8f3fc985b16131f9", "filename": "gcc/ada/mlib.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2Fmlib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a/gcc%2Fada%2Fmlib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib.ads?ref=3b81743f8901ad7bf8055d461c3cb6d1e7e13e8a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2008, AdaCore                     --\n+--                     Copyright (C) 1999-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -84,6 +84,10 @@ package MLib is\n    --  For example, if Lib_Filename is \"libtoto.so\" and Lib_Version is\n    --  \"libtoto.so.1.2\", then \"libtoto.so.1\" is returned.\n \n+   function Separate_Run_Path_Options return Boolean;\n+   --  Return True if separate rpath arguments must be passed to the linker\n+   --  for each directory in the rpath.\n+\n private\n \n    Preserve : Attribute := Time_Stamps;"}]}