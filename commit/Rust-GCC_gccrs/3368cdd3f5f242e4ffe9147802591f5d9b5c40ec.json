{"sha": "3368cdd3f5f242e4ffe9147802591f5d9b5c40ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM2OGNkZDNmNWYyNDJlNGZmZTkxNDc4MDI1OTFmNWQ5YjVjNDBlYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-09-03T20:33:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-09-03T20:33:21Z"}, "message": "re PR c++/37189 (OpenMP task construct with implicit firstprivate variables ICEs)\n\n\tPR c++/37189\n\t* cp-tree.h (defer_mark_used_calls, deferred_mark_used_calls): New\n\textern decls.\n\t* decl2.c (mark_used): If defer_mark_used_calls, push decl into\n\tdeferred_mark_used_calls vector and exit early.\n\t* decl.c (defer_mark_used_calls, deferred_mark_used_calls): New\n\tvariables.\n\t(finish_function): Set defer_mark_used_calls for the duration of the\n\tfunction.  Call mark_used on any queued decls.\n\n\t* g++.dg/gomp/pr37189.C: New test.\n\nFrom-SVN: r139955", "tree": {"sha": "2662e64fc943bf103ce1cf286233d3c13eb6a6c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2662e64fc943bf103ce1cf286233d3c13eb6a6c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8660d962235b733aacb2c63c6cc11785317d847e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8660d962235b733aacb2c63c6cc11785317d847e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8660d962235b733aacb2c63c6cc11785317d847e"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "442dd8e60e97290351ef1ddd0be51c341e756a96", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3368cdd3f5f242e4ffe9147802591f5d9b5c40ec", "patch": "@@ -1,3 +1,15 @@\n+2008-09-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/37189\n+\t* cp-tree.h (defer_mark_used_calls, deferred_mark_used_calls): New\n+\textern decls.\n+\t* decl2.c (mark_used): If defer_mark_used_calls, push decl into\n+\tdeferred_mark_used_calls vector and exit early.\n+\t* decl.c (defer_mark_used_calls, deferred_mark_used_calls): New\n+\tvariables.\n+\t(finish_function): Set defer_mark_used_calls for the duration of the\n+\tfunction.  Call mark_used on any queued decls.\n+\n 2008-09-02  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/37208"}, {"sha": "ca069b765cf9aec9fbd0efa72f10ad6a4210e44f", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=3368cdd3f5f242e4ffe9147802591f5d9b5c40ec", "patch": "@@ -4381,6 +4381,9 @@ extern void initialize_artificial_var\t\t(tree, tree);\n extern tree check_var_type\t\t\t(tree, tree);\n extern tree reshape_init (tree, tree);\n \n+extern bool defer_mark_used_calls;\n+extern GTY(()) VEC(tree, gc) *deferred_mark_used_calls;\n+\n /* in decl2.c */\n extern bool check_java_method\t\t\t(tree);\n extern tree build_memfn_type\t\t\t(tree, tree, cp_cv_quals);"}, {"sha": "fbd16e5b19c5345f79a096c540709065acee2b63", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3368cdd3f5f242e4ffe9147802591f5d9b5c40ec", "patch": "@@ -227,6 +227,11 @@ struct named_label_entry GTY(())\n    function, two inside the body of a function in a local class, etc.)  */\n int function_depth;\n \n+/* To avoid unwanted recursion, finish_function defers all mark_used calls\n+   encountered during its execution until it finishes.  */\n+bool defer_mark_used_calls;\n+VEC(tree, gc) *deferred_mark_used_calls;\n+\n /* States indicating how grokdeclarator() should handle declspecs marked\n    with __attribute__((deprecated)).  An object declared as\n    __attribute__((deprecated)) suppresses warnings of uses of other\n@@ -12033,6 +12038,9 @@ finish_function (int flags)\n   if (fndecl == NULL_TREE)\n     return error_mark_node;\n \n+  gcc_assert (!defer_mark_used_calls);\n+  defer_mark_used_calls = true;\n+\n   if (DECL_NONSTATIC_MEMBER_FUNCTION_P (fndecl)\n       && DECL_VIRTUAL_P (fndecl)\n       && !processing_template_decl)\n@@ -12232,6 +12240,17 @@ finish_function (int flags)\n        cxx_pop_function_context and then reset via pop_function_context.  */\n     current_function_decl = NULL_TREE;\n \n+  defer_mark_used_calls = false;\n+  if (deferred_mark_used_calls)\n+    {\n+      unsigned int i;\n+      tree decl;\n+\n+      for (i = 0; VEC_iterate (tree, deferred_mark_used_calls, i, decl); i++)\n+\tmark_used (decl);\n+      VEC_free (tree, gc, deferred_mark_used_calls);\n+    }\n+\n   return fndecl;\n }\n \f"}, {"sha": "a128fb7c5e233a151ba4c1d422f09d041014c045", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=3368cdd3f5f242e4ffe9147802591f5d9b5c40ec", "patch": "@@ -3776,6 +3776,15 @@ mark_used (tree decl)\n   /* If we don't need a value, then we don't need to synthesize DECL.  */\n   if (skip_evaluation)\n     return;\n+\n+  /* If within finish_function, defer the rest until that function\n+     finishes, otherwise it might recurse.  */\n+  if (defer_mark_used_calls)\n+    {\n+      VEC_safe_push (tree, gc, deferred_mark_used_calls, decl);\n+      return;\n+    }\n+\n   /* Normally, we can wait until instantiation-time to synthesize\n      DECL.  However, if DECL is a static data member initialized with\n      a constant, we need the value right now because a reference to"}, {"sha": "bfadce1f807d3c049bf645980eb79a698bc66db6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3368cdd3f5f242e4ffe9147802591f5d9b5c40ec", "patch": "@@ -1,5 +1,8 @@\n 2008-09-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/37189\n+\t* g++.dg/gomp/pr37189.C: New test.\n+\n \tPR debug/37322\n \t* gfortran.dg/debug/pr35154-dwarf2.f: Fix up scan-assembler regexps.\n "}, {"sha": "31d95f2d2dfcee049b97464b71503bc90145dfdf", "filename": "gcc/testsuite/g++.dg/gomp/pr37189.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr37189.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3368cdd3f5f242e4ffe9147802591f5d9b5c40ec/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr37189.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr37189.C?ref=3368cdd3f5f242e4ffe9147802591f5d9b5c40ec", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/37189\n+// { dg-do compile }\n+// { dg-options \"-fopenmp\" }\n+\n+struct S\n+{\n+  S () {}\n+  S (S const &) {}\n+};\n+\n+struct T\n+{\n+  S s;\n+};\n+\n+void\n+bar (T &)\n+{\n+}\n+\n+int\n+foo ()\n+{\n+  T t;\n+  #pragma omp task\n+    bar (t);\n+}"}]}