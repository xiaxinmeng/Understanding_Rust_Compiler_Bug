{"sha": "4eb4a256cd4a39555f4d834c47cabc2e136ed02a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGViNGEyNTZjZDRhMzk1NTVmNGQ4MzRjNDdjYWJjMmUxMzZlZDAyYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-10-17T10:50:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-10-17T10:50:16Z"}, "message": "re PR tree-optimization/63302 (Code with 64-bit long long constants is miscompiled on 32-bit host)\n\n\tPR tree-optimization/63302\n\t* tree-ssa-reassoc.c (optimize_range_tests_xor,\n\toptimize_range_tests_diff): Use !integer_pow2p () instead of\n\ttree_log2 () < 0.\n\n\t* gcc.c-torture/execute/pr63302.c: New test.\n\nFrom-SVN: r216391", "tree": {"sha": "57d50dcdf67827495420438304dc1e393caa452f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57d50dcdf67827495420438304dc1e393caa452f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4eb4a256cd4a39555f4d834c47cabc2e136ed02a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eb4a256cd4a39555f4d834c47cabc2e136ed02a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eb4a256cd4a39555f4d834c47cabc2e136ed02a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eb4a256cd4a39555f4d834c47cabc2e136ed02a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d4ded759a1367ebe6588be36d0ea1410e24e3ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d4ded759a1367ebe6588be36d0ea1410e24e3ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d4ded759a1367ebe6588be36d0ea1410e24e3ca"}], "stats": {"total": 76, "additions": 74, "deletions": 2}, "files": [{"sha": "d8d9bcd9702af15e55df1d4a4e222db15230515d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eb4a256cd4a39555f4d834c47cabc2e136ed02a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eb4a256cd4a39555f4d834c47cabc2e136ed02a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4eb4a256cd4a39555f4d834c47cabc2e136ed02a", "patch": "@@ -1,3 +1,10 @@\n+2014-10-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/63302\n+\t* tree-ssa-reassoc.c (optimize_range_tests_xor,\n+\toptimize_range_tests_diff): Use !integer_pow2p () instead of\n+\ttree_log2 () < 0.\n+\n 2014-10-17  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-icf.c (sem_function::merge): Local flags are set to false"}, {"sha": "0cc6221794331f5066cbd7dc70e08270260404c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eb4a256cd4a39555f4d834c47cabc2e136ed02a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eb4a256cd4a39555f4d834c47cabc2e136ed02a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4eb4a256cd4a39555f4d834c47cabc2e136ed02a", "patch": "@@ -1,3 +1,8 @@\n+2014-10-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/63302\n+\t* gcc.c-torture/execute/pr63302.c: New test.\n+\n 2014-10-17  Tom de Vries  <tom@codesourcery.com>\n \n \tPR rtl-optimization/61605"}, {"sha": "99670241bb34e047ae188e8f23725699221f4695", "filename": "gcc/testsuite/gcc.c-torture/execute/pr63302.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eb4a256cd4a39555f4d834c47cabc2e136ed02a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr63302.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eb4a256cd4a39555f4d834c47cabc2e136ed02a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr63302.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr63302.c?ref=4eb4a256cd4a39555f4d834c47cabc2e136ed02a", "patch": "@@ -0,0 +1,60 @@\n+/* PR tree-optimization/63302 */\n+\n+#ifdef __SIZEOF_INT128__\n+#if __SIZEOF_INT128__ * __CHAR_BIT__ == 128\n+#define USE_INT128\n+#endif\n+#endif\n+#if __SIZEOF_LONG_LONG__ * __CHAR_BIT__ == 64\n+#define USE_LLONG\n+#endif\n+\n+#ifdef USE_INT128\n+__attribute__((noinline, noclone)) int\n+foo (__int128 x)\n+{\n+  __int128 v = x & (((__int128) -1 << 63) | 0x7ff);\n+ \n+  return v == 0 || v == ((__int128) -1 << 63);\n+}\n+#endif\n+\n+#ifdef USE_LLONG\n+__attribute__((noinline, noclone)) int\n+bar (long long x)\n+{\n+  long long v = x & (((long long) -1 << 31) | 0x7ff);\n+ \n+  return v == 0 || v == ((long long) -1 << 31);\n+}\n+#endif\n+\n+int\n+main ()\n+{\n+#ifdef USE_INT128\n+  if (foo (0) != 1\n+      || foo (1) != 0\n+      || foo (0x800) != 1\n+      || foo (0x801) != 0\n+      || foo ((__int128) 1 << 63) != 0\n+      || foo ((__int128) -1 << 63) != 1\n+      || foo (((__int128) -1 << 63) | 1) != 0\n+      || foo (((__int128) -1 << 63) | 0x800) != 1\n+      || foo (((__int128) -1 << 63) | 0x801) != 0)\n+    __builtin_abort ();\n+#endif\n+#ifdef USE_LLONG\n+  if (bar (0) != 1\n+      || bar (1) != 0\n+      || bar (0x800) != 1\n+      || bar (0x801) != 0\n+      || bar (1LL << 31) != 0\n+      || bar (-1LL << 31) != 1\n+      || bar ((-1LL << 31) | 1) != 0\n+      || bar ((-1LL << 31) | 0x800) != 1\n+      || bar ((-1LL << 31) | 0x801) != 0)\n+    __builtin_abort ();\n+#endif\n+  return 0;\n+}"}, {"sha": "ac33f75e89b0e1a4dce3ab76e4ef9037c47bfe6d", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eb4a256cd4a39555f4d834c47cabc2e136ed02a/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eb4a256cd4a39555f4d834c47cabc2e136ed02a/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=4eb4a256cd4a39555f4d834c47cabc2e136ed02a", "patch": "@@ -2200,7 +2200,7 @@ optimize_range_tests_xor (enum tree_code opcode, tree type,\n   lowxor = fold_binary (BIT_XOR_EXPR, type, lowi, lowj);\n   if (lowxor == NULL_TREE || TREE_CODE (lowxor) != INTEGER_CST)\n     return false;\n-  if (tree_log2 (lowxor) < 0)\n+  if (!integer_pow2p (lowxor))\n     return false;\n   highxor = fold_binary (BIT_XOR_EXPR, type, highi, highj);\n   if (!tree_int_cst_equal (lowxor, highxor))\n@@ -2247,7 +2247,7 @@ optimize_range_tests_diff (enum tree_code opcode, tree type,\n   tem1 = fold_binary (MINUS_EXPR, type, lowj, lowi);\n   if (tem1 == NULL_TREE || TREE_CODE (tem1) != INTEGER_CST)\n     return false;\n-  if (tree_log2 (tem1) < 0)\n+  if (!integer_pow2p (tem1))\n     return false;\n \n   type = unsigned_type_for (type);"}]}