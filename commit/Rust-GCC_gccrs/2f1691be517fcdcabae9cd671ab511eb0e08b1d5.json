{"sha": "2f1691be517fcdcabae9cd671ab511eb0e08b1d5", "node_id": "C_kwDOANBUbNoAKDJmMTY5MWJlNTE3ZmNkY2FiYWU5Y2Q2NzFhYjUxMWViMGUwOGIxZDU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-24T10:05:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-24T10:05:27Z"}, "message": "cgraphclones: Don't share DECL_ARGUMENTS between thunk and its artificial thunk [PR108854]\n\nThe following testcase ICEs on x86_64-linux with -m32.  The problem is\nwe create an artificial thunk and because of -fPIC, ia32 and thunk\ndestination which doesn't bind locally can't use a mi thunk.\nThe ICE is because during expansion to RTL we see SSA_NAME for a PARM_DECL,\nbut the PARM_DECL doesn't have DECL_CONTEXT of the current function.\nThis is because duplicate_thunk_for_node creates a new DECL_ARGUMENTS chain\nonly if some arguments need modification.\n\nThe following patch fixes it by copying the DECL_ARGUMENTS list even if\nthe arguments can stay as is, to update DECL_CONTEXT on them.  While for\nmi thunks it doesn't really matter because we don't use those arguments\nin any way, for other thunks it is important.\n\n2023-02-23  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/108854\n\t* cgraphclones.cc (duplicate_thunk_for_node): If no parameter\n\tchanges are needed, copy at least DECL_ARGUMENTS PARM_DECL\n\tnodes and adjust their DECL_CONTEXT.\n\n\t* g++.dg/opt/pr108854.C: New test.", "tree": {"sha": "a81eae8befed30cb02dad44b32fe5958f2be6111", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a81eae8befed30cb02dad44b32fe5958f2be6111"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f1691be517fcdcabae9cd671ab511eb0e08b1d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f1691be517fcdcabae9cd671ab511eb0e08b1d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f1691be517fcdcabae9cd671ab511eb0e08b1d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f1691be517fcdcabae9cd671ab511eb0e08b1d5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ccfa3884f638816af0f5a3f0ee2695e0771ef6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ccfa3884f638816af0f5a3f0ee2695e0771ef6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ccfa3884f638816af0f5a3f0ee2695e0771ef6d"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "7c5d3b2842c95ffe26e2b3be3b0349fd8a400f61", "filename": "gcc/cgraphclones.cc", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1691be517fcdcabae9cd671ab511eb0e08b1d5/gcc%2Fcgraphclones.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1691be517fcdcabae9cd671ab511eb0e08b1d5/gcc%2Fcgraphclones.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.cc?ref=2f1691be517fcdcabae9cd671ab511eb0e08b1d5", "patch": "@@ -218,7 +218,17 @@ duplicate_thunk_for_node (cgraph_node *thunk, cgraph_node *node)\n       body_adj.modify_formal_parameters ();\n     }\n   else\n-    new_decl = copy_node (thunk->decl);\n+    {\n+      new_decl = copy_node (thunk->decl);\n+      for (tree *arg = &DECL_ARGUMENTS (new_decl);\n+\t   *arg; arg = &DECL_CHAIN (*arg))\n+\t{\n+\t  tree next = DECL_CHAIN (*arg);\n+\t  *arg = copy_node (*arg);\n+\t  DECL_CONTEXT (*arg) = new_decl;\n+\t  DECL_CHAIN (*arg) = next;\n+\t}\n+    }\n \n   gcc_checking_assert (!DECL_STRUCT_FUNCTION (new_decl));\n   gcc_checking_assert (!DECL_INITIAL (new_decl));"}, {"sha": "9f2d9030f75b498fabaee242dbe9194e22de7eb4", "filename": "gcc/testsuite/g++.dg/opt/pr108854.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1691be517fcdcabae9cd671ab511eb0e08b1d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr108854.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1691be517fcdcabae9cd671ab511eb0e08b1d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr108854.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr108854.C?ref=2f1691be517fcdcabae9cd671ab511eb0e08b1d5", "patch": "@@ -0,0 +1,37 @@\n+// PR middle-end/108854\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-O3\" }\n+// { dg-additional-options \"-fPIC\" { target fpic } }\n+\n+struct A { A (int); ~A (); };\n+struct B { B (int, bool); ~B (); };\n+template <typename T>\n+struct C { void m1 (T); void m2 (T &&); };\n+class D;\n+struct E { virtual void m3 (); };\n+template <typename>\n+struct F { virtual bool m4 (D &); };\n+struct D { virtual D m5 () { return D (); } };\n+void foo (void *, void *);\n+struct G {\n+  int a;\n+  C <D *> b;\n+  void m4 (D &r) { B l (a, true); r.m5 (); b.m1 (&r); b.m2 (&r); }\n+};\n+struct H : E, F <int> {\n+  template <typename T>\n+  H (int, T);\n+  bool m4 (D &r) { A l (a); b.m4 (r); if (c) return true; } // { dg-warning \"control reaches end of non-void function\" }\n+  int a;\n+  bool c;\n+  G b;\n+};\n+inline void bar (F <int> &p) { D s, t; p.m4 (t); foo (&p, &s); }\n+enum I { I1, I2 };\n+template <I>\n+struct J;\n+template <class, class T, class, class, class, class>\n+void baz () { int g = 0, h = 0; T i (g, h); bar (i); }\n+template <class, int, I T>\n+void qux () { baz <int, H, int, int, E, J<T>> (); }\n+void corge () { qux <int, I2, I1> (); qux <int, I2, I2> (); }"}]}