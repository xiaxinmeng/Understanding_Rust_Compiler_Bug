{"sha": "e82726f937a0c71adc3222d3b5dd14edbace81f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgyNzI2ZjkzN2EwYzcxYWRjMzIyMmQzYjVkZDE0ZWRiYWNlODFmOQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2005-11-10T11:21:53Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2005-11-10T11:21:53Z"}, "message": "libgfortran.h: Add missing prototypes for internal_pack functions.\n\n        * libgfortran.h: Add missing prototypes for internal_pack\n        functions.\n\nFrom-SVN: r106730", "tree": {"sha": "d4aaeedac43004d5df1f3c7d7edce9f141c2f2d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4aaeedac43004d5df1f3c7d7edce9f141c2f2d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e82726f937a0c71adc3222d3b5dd14edbace81f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e82726f937a0c71adc3222d3b5dd14edbace81f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e82726f937a0c71adc3222d3b5dd14edbace81f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e82726f937a0c71adc3222d3b5dd14edbace81f9/comments", "author": null, "committer": null, "parents": [{"sha": "7fd6021841474041dcb492e1f3131777dbb5142c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd6021841474041dcb492e1f3131777dbb5142c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fd6021841474041dcb492e1f3131777dbb5142c"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "1d796a58298a232b5a1ea2a857646c2ce452fee5", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e82726f937a0c71adc3222d3b5dd14edbace81f9/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e82726f937a0c71adc3222d3b5dd14edbace81f9/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e82726f937a0c71adc3222d3b5dd14edbace81f9", "patch": "@@ -1,11 +1,16 @@\n+2005-11-10  Andreas Jaeger  <aj@suse.de>\n+\n+\t* libgfortran.h: Add missing prototypes for internal_pack\n+\tfunctions.\n+\n 2005-11-06  Janne Blomqvist <jb@gcc.gnu.org>\n \n \tPR fortran/24174\n \tPR fortran/24305\n \t* io/io.h: Add argument to prototypes, add prototypes for\n \tsize_from_*_kind functions.\n \t* io/list_read.c (read_complex): Add size argument, use\n-\tit. \n+\tit.\n \t(list_formatted_read): Add size argument, cleanup.\n \t(list_formatted_read_scalar): Add size argument.\n \t(nml_read_obj): Fix for padding.\n@@ -100,7 +105,7 @@\n \t* Makefile.in: Regenerate.\n \n 2005-10-28  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\t\n+\n \n \t* Makefile.am (intrinsics): Add signal.c.\n \t* Makefile.in: Regenerate."}, {"sha": "032dd9509f0de34b74a56d0fd3646c683bf8d45b", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e82726f937a0c71adc3222d3b5dd14edbace81f9/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e82726f937a0c71adc3222d3b5dd14edbace81f9/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=e82726f937a0c71adc3222d3b5dd14edbace81f9", "patch": "@@ -559,32 +559,44 @@ internal_proto(reshape_packed);\n \n /* Repacking functions.  */\n \n-/* ??? These eight aren't currently used by the compiler, though we\n+/* ??? These aren't currently used by the compiler, though we\n    certainly could do so.  */\n GFC_INTEGER_4 *internal_pack_4 (gfc_array_i4 *);\n internal_proto(internal_pack_4);\n \n GFC_INTEGER_8 *internal_pack_8 (gfc_array_i8 *);\n internal_proto(internal_pack_8);\n \n+GFC_INTEGER_16 *internal_pack_16 (gfc_array_i16 *);\n+internal_proto(internal_pack_16);\n+\n GFC_COMPLEX_4 *internal_pack_c4 (gfc_array_c4 *);\n internal_proto(internal_pack_c4);\n \n GFC_COMPLEX_8 *internal_pack_c8 (gfc_array_c8 *);\n internal_proto(internal_pack_c8);\n \n+GFC_COMPLEX_10 *internal_pack_c10 (gfc_array_c10 *);\n+internal_proto(internal_pack_c10);\n+\n extern void internal_unpack_4 (gfc_array_i4 *, const GFC_INTEGER_4 *);\n internal_proto(internal_unpack_4);\n \n extern void internal_unpack_8 (gfc_array_i8 *, const GFC_INTEGER_8 *);\n internal_proto(internal_unpack_8);\n \n+extern void internal_unpack_16 (gfc_array_i16 *, const GFC_INTEGER_16 *);\n+internal_proto(internal_unpack_16);\n+\n extern void internal_unpack_c4 (gfc_array_c4 *, const GFC_COMPLEX_4 *);\n internal_proto(internal_unpack_c4);\n \n extern void internal_unpack_c8 (gfc_array_c8 *, const GFC_COMPLEX_8 *);\n internal_proto(internal_unpack_c8);\n \n+extern void internal_unpack_c10 (gfc_array_c10 *, const GFC_COMPLEX_10 *);\n+internal_proto(internal_unpack_c10);\n+\n /* string_intrinsics.c */\n \n extern GFC_INTEGER_4 compare_string (GFC_INTEGER_4, const char *,"}]}