{"sha": "79d03cf81ba8c9c303a24e98e26ca0396355e0bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlkMDNjZjgxYmE4YzljMzAzYTI0ZTk4ZTI2Y2EwMzk2MzU1ZTBiZA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-04-06T21:00:12Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-04-06T21:00:12Z"}, "message": "Add extra checks for places assuming one argument loop close SSA form.\n\n2010-04-01  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-sese-to-poly.c (rewrite_close_phi_out_of_ssa): Assert that\n\tgimple_phi_num_args of the loop close SSA phi node is equal to 1.\n\t(detect_commutative_reduction): Same.\n\nFrom-SVN: r158025", "tree": {"sha": "238626b7ec25666429bb40b1facbaeea01601d27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/238626b7ec25666429bb40b1facbaeea01601d27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79d03cf81ba8c9c303a24e98e26ca0396355e0bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d03cf81ba8c9c303a24e98e26ca0396355e0bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d03cf81ba8c9c303a24e98e26ca0396355e0bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d03cf81ba8c9c303a24e98e26ca0396355e0bd/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "09c9f9dc81fd9cd8f0270ec6715028221ee9c2dc", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d03cf81ba8c9c303a24e98e26ca0396355e0bd/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d03cf81ba8c9c303a24e98e26ca0396355e0bd/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=79d03cf81ba8c9c303a24e98e26ca0396355e0bd", "patch": "@@ -1,3 +1,21 @@\n+2010-04-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tReverted this commit: as at this point the loop closed SSA form\n+\tis under a canonical form respecting the single argument condition.\n+\t* graphite-sese-to-poly.c (scalar_close_phi_node_p): Loop\n+\tclose phi nodes may have more than one argument.\n+\n+2010-04-01  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (rewrite_close_phi_out_of_ssa): Assert that\n+\tgimple_phi_num_args of the loop close SSA phi node is equal to 1.\n+\t(detect_commutative_reduction): Same.\n+\n+2010-03-31  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (scalar_close_phi_node_p): Loop\n+\tclose phi nodes may have more than one argument.\n+\n 2010-03-30  Richard Guenther  <rguenther@suse.de>\n \t    Zdenek Dvorak  <ook@ucw.cz>\n \t    Sebastian Pop  <sebastian.pop@amd.com>"}, {"sha": "4584fe93acab10280f0e91d58c9ea57fa4bc0166", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d03cf81ba8c9c303a24e98e26ca0396355e0bd/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d03cf81ba8c9c303a24e98e26ca0396355e0bd/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=79d03cf81ba8c9c303a24e98e26ca0396355e0bd", "patch": "@@ -2183,6 +2183,9 @@ scalar_close_phi_node_p (gimple phi)\n       || !is_gimple_reg (gimple_phi_result (phi)))\n     return false;\n \n+  /* Note that loop close phi nodes should have a single argument\n+     because we translated the representation into a canonical form\n+     before Graphite: see canonicalize_loop_closed_ssa_form.  */\n   return (gimple_phi_num_args (phi) == 1);\n }\n \n@@ -2200,6 +2203,11 @@ rewrite_close_phi_out_of_ssa (gimple_stmt_iterator *psi)\n   gimple stmt = gimple_build_assign (res, zero_dim_array);\n   tree arg = gimple_phi_arg_def (phi, 0);\n \n+  /* Note that loop close phi nodes should have a single argument\n+     because we translated the representation into a canonical form\n+     before Graphite: see canonicalize_loop_closed_ssa_form.  */\n+  gcc_assert (gimple_phi_num_args (phi) == 1);\n+\n   if (TREE_CODE (arg) == SSA_NAME\n       && !SSA_NAME_IS_DEFAULT_DEF (arg))\n     insert_out_of_ssa_copy (zero_dim_array, arg);\n@@ -2665,6 +2673,11 @@ detect_commutative_reduction (gimple stmt, VEC (gimple, heap) **in,\n       if (TREE_CODE (arg) != SSA_NAME)\n \treturn NULL;\n \n+      /* Note that loop close phi nodes should have a single argument\n+\t because we translated the representation into a canonical form\n+\t before Graphite: see canonicalize_loop_closed_ssa_form.  */\n+      gcc_assert (gimple_phi_num_args (stmt) == 1);\n+\n       def = SSA_NAME_DEF_STMT (arg);\n       loop_phi = detect_commutative_reduction (def, in, out);\n "}]}