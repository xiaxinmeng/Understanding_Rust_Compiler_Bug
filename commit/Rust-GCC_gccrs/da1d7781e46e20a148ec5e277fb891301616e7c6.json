{"sha": "da1d7781e46e20a148ec5e277fb891301616e7c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGExZDc3ODFlNDZlMjBhMTQ4ZWM1ZTI3N2ZiODkxMzAxNjE2ZTdjNg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-12-13T04:28:50Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-12-13T04:28:50Z"}, "message": "ChangeLog: Fix typos.\n\n\t* ChangeLog: Fix typos.\n\t* ChangeLog.1: Likewise.\n\t* ChangeLog.2: Likewise.\n\t* call.c: Fix comment typos.\n\t* class.c: Likewise.\n\t* cxx-pretty-print.c: Likewise.\n\t* mangle.c: Likewise.\n\t* parser.c: Likewise.\n\t* pt.c: Likewise.\n\t* tree.c: Likewise.\n\nFrom-SVN: r74595", "tree": {"sha": "f521d7be1d804447e80f04f0b601f0f388e85ee5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f521d7be1d804447e80f04f0b601f0f388e85ee5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da1d7781e46e20a148ec5e277fb891301616e7c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da1d7781e46e20a148ec5e277fb891301616e7c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da1d7781e46e20a148ec5e277fb891301616e7c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da1d7781e46e20a148ec5e277fb891301616e7c6/comments", "author": null, "committer": null, "parents": [{"sha": "ba228239d22c745ed7e152fa211c065dc1c56918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba228239d22c745ed7e152fa211c065dc1c56918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba228239d22c745ed7e152fa211c065dc1c56918"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "4b9f5cb7982f10b06eb784af4c74992f28200fa3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=da1d7781e46e20a148ec5e277fb891301616e7c6", "patch": "@@ -4970,7 +4970,7 @@\n \tpointers to member functions.\n \n \tPR c++/8534\n-\t* decl.c (build_ptrmemfunc_type): Do not allow default arugments\n+\t* decl.c (build_ptrmemfunc_type): Do not allow default arguments\n \tin pointer-to-member-function types.\n \n 2003-03-10  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n@@ -17705,7 +17705,7 @@\n \t* search.c (dfs_get_pure_virtuals): Use BV_FN.\n \t* semantics.c (emit_associated_thunks): New function.\n \t(expand_body): Use it.\n-\t* ir.texi: Adjust decriptions of thunks.\n+\t* ir.texi: Adjust descriptions of thunks.\n \n 2000-06-22  Jason Merrill  <jason@redhat.com>\n "}, {"sha": "01ef399698c6c0ce63f9f749ffc6f55a28860ad5", "filename": "gcc/cp/ChangeLog.1", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2FChangeLog.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2FChangeLog.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog.1?ref=da1d7781e46e20a148ec5e277fb891301616e7c6", "patch": "@@ -1386,7 +1386,7 @@ Wed May 10 00:55:59 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n Tue May  9 19:10:33 1995  Mike Stump  <mrs@cygnus.com>\n \n \t* decl2.c: Add flag_new_for_scope for new -ffor-scope flag.\n-\t* parse.y (FOR): Conditionalize the pushing and poping of scope for\n+\t* parse.y (FOR): Conditionalize the pushing and popping of scope for\n \tthe for-init-statement upon the new flag_new_for_scope.\n \t* parse.y (try_block): Simplify and use compstmt.\n \n@@ -7211,7 +7211,7 @@ Thu Mar 31 19:50:35 1994  Jason Merrill  <jason@deneb.cygnus.com>\n Thu Mar 31 16:20:16 1994  Kung Hsu  <kung@mexican.cygnus.com>\n \n \t* decl2.c (grok_func_init): Do not abort as rtl for pur virtual\n-\tfucntions.  They can be defined somewhere else.\n+\tfunctions.  They can be defined somewhere else.\n \n Sat Jan 23 23:23:26 1994  Stephen R. van den Berg  <berg@pool.informatik.rwth-aachen.de>\n "}, {"sha": "7cb4adafa8911f70ec20d7ee6a35e72917d0c786", "filename": "gcc/cp/ChangeLog.2", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2FChangeLog.2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2FChangeLog.2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog.2?ref=da1d7781e46e20a148ec5e277fb891301616e7c6", "patch": "@@ -13405,7 +13405,7 @@ Tue Jan 27 16:42:21 1998  Mark Mitchell  <mmitchell@usa.net>\n \t(classtype_mangled_name): Likewise.\n \t(lookup_template_class): Likewise.\n \t(tsubst): Likewise.\n-\t(more_specialized): Take explict template arguments as a\n+\t(more_specialized): Take explicit template arguments as a\n \tparameter.\n \t(most_specialized): Likewise.\n \t(get_bindings): Likewise.  Check that return types match before\n@@ -13627,7 +13627,7 @@ Mon Jan 19 22:40:03 1998  Mark Mitchell  <mmitchell@usa.net>\n \t(instantiate_template): Use retrieve_specialization.\n \t(do_decl_instantiation): Likewise.\n \t(instantiate_decl): Likewise.\n-\t(type_unification): Improve handling of explict template\n+\t(type_unification): Improve handling of explicit template\n \targuments.\n \t* tree.c (mapcar): Return error_mark_node, rather than aborting,\n \ton VAR_DECLS, FUNCTION_DECLS, and CONST_DECLS.\n@@ -20213,7 +20213,7 @@ Tue Jan 16 11:39:40 1996  Jason Merrill  <jason@yorick.cygnus.com>\n \n Tue Jan 16 11:09:42 1996  Mike Stump  <mrs@cygnus.com>\n \n-\t* decl.c (poplevel): When poping a level, don't give a warning for\n+\t* decl.c (poplevel): When popping a level, don't give a warning for\n \tany subblocks that already exist.\n \n Tue Jan 16 00:25:33 1996  Jason Merrill  <jason@yorick.cygnus.com>"}, {"sha": "99ba8b1a4adffe6ec6fb0a18d47f9e76b08b161d", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=da1d7781e46e20a148ec5e277fb891301616e7c6", "patch": "@@ -3409,7 +3409,7 @@ prep_operand (tree operand)\n    CANDIDATES.  The ARGS are the arguments provided to the call,\n    without any implicit object parameter.  The EXPLICIT_TARGS are\n    explicit template arguments provided.  TEMPLATE_ONLY is true if\n-   only template fucntions should be considered.  CONVERSION_PATH,\n+   only template functions should be considered.  CONVERSION_PATH,\n    ACCESS_PATH, and FLAGS are as for add_function_candidate.  */\n \n static void"}, {"sha": "2da8f8d5659893eacccd821790c9eb056d337676", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=da1d7781e46e20a148ec5e277fb891301616e7c6", "patch": "@@ -6617,7 +6617,7 @@ dump_class_hierarchy_1 (FILE *stream, int flags, tree t)\n   fprintf (stream, \"\\n\");\n }\n \n-/* Debug interface to heirarchy dumping.  */\n+/* Debug interface to hierarchy dumping.  */\n \n extern void\n debug_class (tree t)"}, {"sha": "029a2f291d75afc361936aa0a643e3545afbdb86", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=da1d7781e46e20a148ec5e277fb891301616e7c6", "patch": "@@ -1055,7 +1055,7 @@ pp_cxx_ptr_operator (cxx_pretty_printer *pp, tree t)\n           pp_cxx_cv_qualifier_seq (pp, t);\n           break;\n         }\n-      /* else fall trhough.  */\n+      /* else fall through.  */\n \n     default:\n       pp_unsupported_tree (pp, t);"}, {"sha": "ff8e6eaee719270a45048da5bc67d98b1bc5b07c", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=da1d7781e46e20a148ec5e277fb891301616e7c6", "patch": "@@ -2114,7 +2114,7 @@ write_template_arg (tree node)\n \n   MANGLE_TRACE_TREE (\"template-arg\", node);\n \n-  /* A template template paramter's argument list contains TREE_LIST\n+  /* A template template parameter's argument list contains TREE_LIST\n      nodes of which the value field is the the actual argument.  */\n   if (code == TREE_LIST)\n     {"}, {"sha": "69bc78ef44858beb07a1942cc314ff7876cd081d", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=da1d7781e46e20a148ec5e277fb891301616e7c6", "patch": "@@ -1851,7 +1851,7 @@ cp_parser_check_for_invalid_template_id (cp_parser* parser,\n       cp_lexer_consume_token (parser->lexer);\n       /* Parse the template arguments.  */\n       cp_parser_enclosed_template_argument_list (parser);\n-      /* Permanently remove the invalid template arugments so that\n+      /* Permanently remove the invalid template arguments so that\n \t this error message is not issued again.  */\n       if (start >= 0)\n \t{"}, {"sha": "2d31c4d1706c640dd33bb8fe4c04095b3e6fa22a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=da1d7781e46e20a148ec5e277fb891301616e7c6", "patch": "@@ -972,7 +972,7 @@ is_specialization_of_friend (tree decl, tree friend)\n \t    return 0;\n \t  else if (is_template)\n \t    {\n-\t      /* If both are templates, check template paramter list.  */\n+\t      /* If both are templates, check template parameter list.  */\n \t      tree friend_parms\n \t\t= tsubst_template_parms (DECL_TEMPLATE_PARMS (friend),\n \t\t\t\t\t args, tf_none);"}, {"sha": "f11320fe5cccd82841485be3cdb25acf22890c7f", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1d7781e46e20a148ec5e277fb891301616e7c6/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=da1d7781e46e20a148ec5e277fb891301616e7c6", "patch": "@@ -1996,7 +1996,7 @@ cp_walk_subtrees (tree* tp,\n     case TYPENAME_TYPE:\n     case TYPEOF_TYPE:\n     case BASELINK:\n-      /* None of thse have subtrees other than those already walked\n+      /* None of these have subtrees other than those already walked\n          above.  */\n       *walk_subtrees_p = 0;\n       break;"}]}