{"sha": "479a181108ee58622576b205b86793d42e964cbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc5YTE4MTEwOGVlNTg2MjI1NzZiMjA1Yjg2NzkzZDQyZTk2NGNiYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-04-28T23:51:37Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-04-28T23:51:37Z"}, "message": "std_streambuf.h (_M_buf): is currently used only for basic_filebuf, therefore move it there.\n\n2003-04-28  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/std/std_streambuf.h (_M_buf): is currently\n\tused only for basic_filebuf, therefore move it there.\n\t(basic_streambuf(), ~basic_streambuf()): Adjust.\n\t* include/std/std_fstream.h (_M_buf): Moved here.\n\t* include/std/std_sstream.h (setbuf): Don't set _M_buf,\n\tis actually redundant for basic_stringbuf.\n\t(_M_really_sync): Likewise.\n\t* include/bits/fstream.tcc (basic_filebuf()): Adjust.\n\t* include/bits/sstream.tcc (seekoff): Adjust.\n\nFrom-SVN: r66193", "tree": {"sha": "fbd272a94e796d94fc7e968571ef340f15f122c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbd272a94e796d94fc7e968571ef340f15f122c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/479a181108ee58622576b205b86793d42e964cbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479a181108ee58622576b205b86793d42e964cbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/479a181108ee58622576b205b86793d42e964cbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479a181108ee58622576b205b86793d42e964cbc/comments", "author": null, "committer": null, "parents": [{"sha": "988ad90d003221abfb91157ef289f702b055a8fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/988ad90d003221abfb91157ef289f702b055a8fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/988ad90d003221abfb91157ef289f702b055a8fd"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "9dbc3a18e0ff39a2679389cc55b5163c66ab3b29", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479a181108ee58622576b205b86793d42e964cbc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479a181108ee58622576b205b86793d42e964cbc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=479a181108ee58622576b205b86793d42e964cbc", "patch": "@@ -1,3 +1,15 @@\n+2003-04-28  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/std/std_streambuf.h (_M_buf): is currently\n+\tused only for basic_filebuf, therefore move it there.\n+\t(basic_streambuf(), ~basic_streambuf()): Adjust.\n+\t* include/std/std_fstream.h (_M_buf): Moved here.\n+\t* include/std/std_sstream.h (setbuf): Don't set _M_buf,\n+\tis actually redundant for basic_stringbuf.\n+\t(_M_really_sync): Likewise.\n+\t* include/bits/fstream.tcc (basic_filebuf()): Adjust.\n+\t* include/bits/sstream.tcc (seekoff): Adjust.\n+\n 2003-04-28  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* src/localename.cc: Standardize exception strings."}, {"sha": "8d9002eaca281fd10a0d9fa7275a4e5690006823", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479a181108ee58622576b205b86793d42e964cbc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479a181108ee58622576b205b86793d42e964cbc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=479a181108ee58622576b205b86793d42e964cbc", "patch": "@@ -76,8 +76,9 @@ namespace std\n     basic_filebuf<_CharT, _Traits>::\n     basic_filebuf() : __streambuf_type(), _M_file(&_M_lock), \n     _M_state_cur(__state_type()), _M_state_beg(__state_type()), \n-    _M_buf_size(BUFSIZ), _M_buf_allocated(false), _M_last_overflowed(false),\n-    _M_pback_cur_save(0), _M_pback_end_save(0), _M_pback_init(false)\n+    _M_buf(NULL), _M_buf_size(BUFSIZ), _M_buf_allocated(false),\n+    _M_last_overflowed(false), _M_pback_cur_save(0),\n+    _M_pback_end_save(0), _M_pback_init(false)\n     { this->_M_buf_unified = true; }\n \n   template<typename _CharT, typename _Traits>"}, {"sha": "11751783722a62dcfeabdeffdf125c453a3ef56b", "filename": "libstdc++-v3/include/bits/sstream.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479a181108ee58622576b205b86793d42e964cbc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479a181108ee58622576b205b86793d42e964cbc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc?ref=479a181108ee58622576b205b86793d42e964cbc", "patch": "@@ -127,7 +127,7 @@ namespace std\n \n       if (_M_string.capacity() && (__testin || __testout || __testboth))\n \t{\n-\t  char_type* __beg = this->_M_buf;\n+\t  char_type* __beg = __testin ? this->_M_in_beg : this->_M_out_beg;\n \t  char_type* __curi = NULL;\n \t  char_type* __curo = NULL;\n \t  char_type* __endi = NULL;"}, {"sha": "ffbf789b77578ccdbef66dcd58dfb3ee2650afe7", "filename": "libstdc++-v3/include/std/std_fstream.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479a181108ee58622576b205b86793d42e964cbc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479a181108ee58622576b205b86793d42e964cbc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h?ref=479a181108ee58622576b205b86793d42e964cbc", "patch": "@@ -114,6 +114,13 @@ namespace std\n       __state_type\t\t_M_state_cur;\n       __state_type \t\t_M_state_beg;\n \n+      /**\n+       *  @if maint\n+       *  Pointer to the beginning of internally-allocated space.\n+       *  @endif\n+      */\n+      char_type*\t\t_M_buf; \t\n+\n       /**\n        *  @if maint\n        *  Actual size of internal buffer."}, {"sha": "cd8faa088614b7e18cc069a325e1728d7056826a", "filename": "libstdc++-v3/include/std/std_sstream.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479a181108ee58622576b205b86793d42e964cbc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479a181108ee58622576b205b86793d42e964cbc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h?ref=479a181108ee58622576b205b86793d42e964cbc", "patch": "@@ -229,7 +229,6 @@ namespace std\n \t    _M_string = __string_type(__s, __n);\n \t    \n \t    // Step 2: Use the external array.\n-\t    this->_M_buf = __s;\n \t    _M_really_sync(__s, 0, 0);\n \t  }\n \treturn this;\n@@ -263,9 +262,8 @@ namespace std\n \tconst bool __testout = this->_M_mode & ios_base::out;\n \t__size_type __len = _M_string.size();\n \n-\tthis->_M_buf = __base;\n \tif (__testin)\n-\t    this->setg(__base, __base + __i, __base + __len);\n+\t  this->setg(__base, __base + __i, __base + __len);\n \tif (__testout)\n \t  {\n \t    this->setp(__base, __base + _M_string.capacity());"}, {"sha": "14a5d89ad4aff841bddef3fa93e74ed978ea192c", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479a181108ee58622576b205b86793d42e964cbc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479a181108ee58622576b205b86793d42e964cbc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=479a181108ee58622576b205b86793d42e964cbc", "patch": "@@ -159,16 +159,6 @@ namespace std\n \t\t\t  __streambuf_type* __sbin,__streambuf_type* __sbout);\n       \n     protected:\n-      /**\n-       *  @if maint\n-       *  Pointer to the beginning of internally-allocated space.  Filebuf\n-       *  manually allocates/deallocates this, whereas stringstreams attempt\n-       *  to use the built-in intelligence of the string class.  If you are\n-       *  managing memory, set this.  If not, leave it NULL.\n-       *  @endif\n-      */\n-      char_type*\t\t_M_buf; \t\n-\n       /**\n        *  @if maint\n        *  True iff _M_in_* and _M_out_* buffers should always point to\n@@ -245,7 +235,7 @@ namespace std\n       // __n + _M_out_[cur, lim] <= _M_out_end\n       // Assuming all _M_out_[beg, cur, lim] pointers are operating on\n       // the same range:\n-      // _M_buf <= _M_*_ <= _M_out_end\n+      // _M_out_beg <= _M_*_ <= _M_out_end\n       void \n       _M_move_out_cur(off_type __n) // argument needs to be +-\n       {\n@@ -467,10 +457,10 @@ namespace std\n        *  - this is not an error\n       */\n       basic_streambuf()\n-      : _M_buf(NULL), _M_buf_unified(false),\n-      _M_in_beg(0), _M_in_cur(0), _M_in_end(0), _M_out_beg(0),\n-      _M_out_cur(0), _M_out_end(0), _M_out_lim(0),\n-      _M_mode(ios_base::openmode(0)), _M_buf_locale(locale()) \n+      : _M_buf_unified(false), _M_in_beg(0), _M_in_cur(0),\n+      _M_in_end(0), _M_out_beg(0), _M_out_cur(0), _M_out_end(0),\n+      _M_out_lim(0), _M_mode(ios_base::openmode(0)),\n+      _M_buf_locale(locale()) \n       { }\n \n       // [27.5.2.3.1] get area access"}]}