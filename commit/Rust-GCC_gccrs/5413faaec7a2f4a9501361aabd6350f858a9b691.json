{"sha": "5413faaec7a2f4a9501361aabd6350f858a9b691", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQxM2ZhYWVjN2EyZjRhOTUwMTM2MWFhYmQ2MzUwZjg1OGE5YjY5MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2021-01-19T08:32:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-06T07:51:30Z"}, "message": "[Ada] Fix handling of PATs\n\ngcc/ada/\n\n\t* exp_pakd.adb (Expand_Packed_Eq): Fix handling of PATs.", "tree": {"sha": "a11d1da4cd69408639b8a6a72b176813d1e0c362", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a11d1da4cd69408639b8a6a72b176813d1e0c362"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5413faaec7a2f4a9501361aabd6350f858a9b691", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5413faaec7a2f4a9501361aabd6350f858a9b691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5413faaec7a2f4a9501361aabd6350f858a9b691", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5413faaec7a2f4a9501361aabd6350f858a9b691/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6068795883e8aacc8b0157e19610d34c0ab11ffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6068795883e8aacc8b0157e19610d34c0ab11ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6068795883e8aacc8b0157e19610d34c0ab11ffa"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "1dc6af9a4c3dabb1b78036fb03726e2b65f2c5e9", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5413faaec7a2f4a9501361aabd6350f858a9b691/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5413faaec7a2f4a9501361aabd6350f858a9b691/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=5413faaec7a2f4a9501361aabd6350f858a9b691", "patch": "@@ -1909,9 +1909,10 @@ package body Exp_Pakd is\n       --  where PAT is the packed array type. This works fine, since in the\n       --  modular case we guarantee that the unused bits are always zeroes.\n       --  We do have to compare the lengths because we could be comparing\n-      --  two different subtypes of the same base type.\n+      --  two different subtypes of the same base type. We can only do this\n+      --  if the PATs on both sides are the same.\n \n-      if Is_Modular_Integer_Type (PAT) then\n+      if Is_Modular_Integer_Type (PAT) and then PAT = Etype (R) then\n          Rewrite (N,\n            Make_And_Then (Loc,\n              Left_Opnd =>"}]}