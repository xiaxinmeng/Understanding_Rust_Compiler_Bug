{"sha": "377f099ab80623a6d0dacfd4447d45042c385b98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc3ZjA5OWFiODA2MjNhNmQwZGFjZmQ0NDQ3ZDQ1MDQyYzM4NWI5OA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-05-19T11:51:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-05-19T11:51:54Z"}, "message": "tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Do not falsely claim to have propagated into all uses.\n\n2009-05-19  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Do\n\tnot falsely claim to have propagated into all uses.\n\n\t* gcc.c-torture/compile/20090519-1.c: New testcase.\n\nFrom-SVN: r147702", "tree": {"sha": "c75d80a0596ac7da4c8058ca144d41be8e79749c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c75d80a0596ac7da4c8058ca144d41be8e79749c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/377f099ab80623a6d0dacfd4447d45042c385b98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377f099ab80623a6d0dacfd4447d45042c385b98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/377f099ab80623a6d0dacfd4447d45042c385b98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377f099ab80623a6d0dacfd4447d45042c385b98/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7859dde7eee39cff0fbd31146680baedc1593b2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7859dde7eee39cff0fbd31146680baedc1593b2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7859dde7eee39cff0fbd31146680baedc1593b2a"}], "stats": {"total": 56, "additions": 42, "deletions": 14}, "files": [{"sha": "1b3b0fc213ca97b6a245a06f4668ae4002c6913f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377f099ab80623a6d0dacfd4447d45042c385b98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377f099ab80623a6d0dacfd4447d45042c385b98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=377f099ab80623a6d0dacfd4447d45042c385b98", "patch": "@@ -1,3 +1,8 @@\n+2009-05-19  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Do\n+\tnot falsely claim to have propagated into all uses.\n+\n 2009-05-19  Ben Elliston  <bje@au.ibm.com>\n \n \t* doc/invoke.texi (C Dialect Options): Update OpenMP specification"}, {"sha": "44019be7e3fb1e6c3de47572fab0166167e4a10a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377f099ab80623a6d0dacfd4447d45042c385b98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377f099ab80623a6d0dacfd4447d45042c385b98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=377f099ab80623a6d0dacfd4447d45042c385b98", "patch": "@@ -1,3 +1,7 @@\n+2009-05-19  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.c-torture/compile/20090519-1.c: New testcase.\n+\n 2009-05-18  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/explicit1.C: New."}, {"sha": "54add6b2e1a0f1b3a882312f6e8537fc8a4f4131", "filename": "gcc/testsuite/gcc.c-torture/compile/20090519-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377f099ab80623a6d0dacfd4447d45042c385b98/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090519-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377f099ab80623a6d0dacfd4447d45042c385b98/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090519-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090519-1.c?ref=377f099ab80623a6d0dacfd4447d45042c385b98", "patch": "@@ -0,0 +1,11 @@\n+typedef struct { int licensed;  } __pmPDUInfo;\n+void __pmDecodeXtendError (int *);\n+void do_handshake(void)\n+{\n+  __pmPDUInfo *pduinfo;\n+  int challenge;\n+  __pmDecodeXtendError(&challenge);\n+  pduinfo = (__pmPDUInfo *)&challenge;\n+  *pduinfo = *pduinfo;\n+}\n+"}, {"sha": "4549ae49ffd3897df49162a6f19c9434865b9bec", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377f099ab80623a6d0dacfd4447d45042c385b98/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377f099ab80623a6d0dacfd4447d45042c385b98/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=377f099ab80623a6d0dacfd4447d45042c385b98", "patch": "@@ -717,6 +717,7 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n   tree *rhsp, *lhsp;\n   gimple use_stmt = gsi_stmt (*use_stmt_gsi);\n   enum tree_code rhs_code;\n+  bool res = true;\n \n   gcc_assert (TREE_CODE (def_rhs) == ADDR_EXPR);\n \n@@ -764,19 +765,26 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n   /* Now see if the LHS node is an INDIRECT_REF using NAME.  If so, \n      propagate the ADDR_EXPR into the use of NAME and fold the result.  */\n   if (TREE_CODE (lhs) == INDIRECT_REF\n-      && TREE_OPERAND (lhs, 0) == name\n-      && may_propagate_address_into_dereference (def_rhs, lhs)\n-      && (lhsp != gimple_assign_lhs_ptr (use_stmt)\n-\t  || useless_type_conversion_p (TREE_TYPE (TREE_OPERAND (def_rhs, 0)),\n-\t\t\t\t\tTREE_TYPE (rhs))))\n+      && TREE_OPERAND (lhs, 0) == name)\n     {\n-      *lhsp = unshare_expr (TREE_OPERAND (def_rhs, 0));\n-      fold_stmt_inplace (use_stmt);\n-      tidy_after_forward_propagate_addr (use_stmt);\n+      if (may_propagate_address_into_dereference (def_rhs, lhs)\n+\t  && (lhsp != gimple_assign_lhs_ptr (use_stmt)\n+\t      || useless_type_conversion_p\n+\t           (TREE_TYPE (TREE_OPERAND (def_rhs, 0)), TREE_TYPE (rhs))))\n+\t{\n+\t  *lhsp = unshare_expr (TREE_OPERAND (def_rhs, 0));\n+\t  fold_stmt_inplace (use_stmt);\n+\t  tidy_after_forward_propagate_addr (use_stmt);\n \n-      /* Continue propagating into the RHS if this was not the only use.  */\n-      if (single_use_p)\n-\treturn true;\n+\t  /* Continue propagating into the RHS if this was not the only use.  */\n+\t  if (single_use_p)\n+\t    return true;\n+\t}\n+      else\n+\t/* We can have a struct assignment dereferencing our name twice.\n+\t   Note that we didn't propagate into the lhs to not falsely\n+\t   claim we did when propagating into the rhs.  */\n+\tres = false;\n     }\n \n   /* Strip away any outer COMPONENT_REF, ARRAY_REF or ADDR_EXPR\n@@ -796,7 +804,7 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n       *rhsp = unshare_expr (TREE_OPERAND (def_rhs, 0));\n       fold_stmt_inplace (use_stmt);\n       tidy_after_forward_propagate_addr (use_stmt);\n-      return true;\n+      return res;\n     }\n \n   /* Now see if the RHS node is an INDIRECT_REF using NAME.  If so, \n@@ -827,7 +835,7 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n \t\t\t\t\t     true, GSI_NEW_STMT);\n \t gimple_assign_set_rhs1 (use_stmt, new_rhs);\n \t tidy_after_forward_propagate_addr (use_stmt);\n-\t return true;\n+\t return res;\n        }\n      /* If the defining rhs comes from an indirect reference, then do not\n         convert into a VIEW_CONVERT_EXPR.  */\n@@ -841,7 +849,7 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n \t *rhsp = new_rhs;\n \t fold_stmt_inplace (use_stmt);\n \t tidy_after_forward_propagate_addr (use_stmt);\n-\t return true;\n+\t return res;\n        }\n    }\n "}]}