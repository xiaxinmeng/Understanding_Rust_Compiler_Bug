{"sha": "85e4d983f32f0001b2419b024fa8660dea2deac5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVlNGQ5ODNmMzJmMDAwMWIyNDE5YjAyNGZhODY2MGRlYTJkZWFjNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-11-05T16:02:07Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-11-05T16:02:07Z"}, "message": "(invalidate): For a pseudo register, do a loop to invalidate all table\nentries, irrespective of mode.\n\nFrom-SVN: r10556", "tree": {"sha": "868f4d0fb2bfe5cdc177627688e55558e3f2e033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/868f4d0fb2bfe5cdc177627688e55558e3f2e033"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85e4d983f32f0001b2419b024fa8660dea2deac5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85e4d983f32f0001b2419b024fa8660dea2deac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85e4d983f32f0001b2419b024fa8660dea2deac5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85e4d983f32f0001b2419b024fa8660dea2deac5/comments", "author": null, "committer": null, "parents": [{"sha": "8cb3db079c44e3deddfade27cc6cd1343aae98cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cb3db079c44e3deddfade27cc6cd1343aae98cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cb3db079c44e3deddfade27cc6cd1343aae98cd"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "7fa597e091d01bd3e355027f4acb5d0f340accf2", "filename": "gcc/cse.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85e4d983f32f0001b2419b024fa8660dea2deac5/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85e4d983f32f0001b2419b024fa8660dea2deac5/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=85e4d983f32f0001b2419b024fa8660dea2deac5", "patch": "@@ -1536,7 +1536,15 @@ invalidate (x, full_mode)\n       reg_tick[regno]++;\n \n       if (regno >= FIRST_PSEUDO_REGISTER)\n-\tremove_from_table (lookup_for_remove (x, hash, GET_MODE (x)), hash);\n+\t{\n+\t  /* Because a register can be referenced in more than one mode,\n+\t     we might have to remove more than one table entry.  */\n+\n+\t  struct table_elt *elt;\n+\n+\t  while (elt = lookup_for_remove (x, hash, GET_MODE (x)))\n+\t    remove_from_table (elt, hash);\n+\t}\n       else\n \t{\n \t  HOST_WIDE_INT in_table"}]}