{"sha": "52dabb6c609b81591884caf64894caa84e16a29f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJkYWJiNmM2MDliODE1OTE4ODRjYWY2NDg5NGNhYTg0ZTE2YTI5Zg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-03-17T20:41:46Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-03-17T20:41:46Z"}, "message": "c-common.h (yyparse, [...]): New.\n\n\t* c-common.h (yyparse, c_common_parse_file): New.\n\t* c-lang.c: Include c-common.h.\n\t(LANG_HOOKS_PARSE_FILE): Redefine.\n\t* c-lex.c: Include c-common.h.\n\t(yyparse): Rename c_common_parse_file.  Call yyparse.\n\t* c-parse.in (yyparse): Remove macro.\n\t* c-tree.h (yyparse_1): Remove.\n\t* langhooks-def.h (LANG_HOOKS_PARSE_FILE): New.\n\t(LANG_HOOKS_INITIALIZER): Update.\n\t* langhooks.h (struct lang_hoooks): New hook parse_file.\n\t* toplev.c (compile_file): Use parse_file hook.\n\t* tree.h (yyparse): Remove.\nada:\n\t* misc.c (LANG_HOOKS_PARSE_FILE): Redefine.\n\t(yyparse): Rename gnat_parse_file.\ncp:\n\t* cp-lang.c (LANG_HOOKS_PARSE_FILE): Redefine.\n\t* parse.y (yyparse): Remove macro.\nf:\n\t* com.c (LANG_HOOKS_PARSE_FILE): Redefine.\n\t* com.h (ffe_parse_file): New.\n\t* parse.c (NAME_OF_STDIN): Remove.\n\t(yyparse): Rename ffe_parse_file.\njava:\n\t* java-tree.h (java_parse_file): New.\n\t* jcf-parse.c (yyparse): Rename java_parse_file.\n\t* lang.c (LANG_HOOKS_PARSE_FILE): Redefine.\nobjc:\n\t* objc-lang.c (LANG_HOOKS_PARSE_FILE): Redefine.\n\nFrom-SVN: r50926", "tree": {"sha": "01d8cbe7674c79a641d252751aa12e5e865b5e8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01d8cbe7674c79a641d252751aa12e5e865b5e8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52dabb6c609b81591884caf64894caa84e16a29f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52dabb6c609b81591884caf64894caa84e16a29f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52dabb6c609b81591884caf64894caa84e16a29f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52dabb6c609b81591884caf64894caa84e16a29f/comments", "author": null, "committer": null, "parents": [{"sha": "6e1a435df002c87da258a71a64a43720b17d1631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1a435df002c87da258a71a64a43720b17d1631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e1a435df002c87da258a71a64a43720b17d1631"}], "stats": {"total": 115, "additions": 80, "deletions": 35}, "files": [{"sha": "9c9c00c4788eabec636188e003db3f60c8dacb99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -1,3 +1,20 @@\n+2002-03-17  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* c-common.h (yyparse, c_common_parse_file): New.\n+\t* c-lang.c: Include c-common.h.\n+\t(LANG_HOOKS_PARSE_FILE): Redefine.\n+\t* c-lex.c: Include c-common.h.\n+\t(yyparse): Rename c_common_parse_file.  Call yyparse.\n+\t* c-parse.in (yyparse): Remove macro.\n+\t* c-tree.h (yyparse_1): Remove.\n+\t* langhooks-def.h (LANG_HOOKS_PARSE_FILE): New.\n+\t(LANG_HOOKS_INITIALIZER): Update.\n+\t* langhooks.h (struct lang_hoooks): New hook parse_file.\n+\t* toplev.c (compile_file): Use parse_file hook.\n+\t* tree.h (yyparse): Remove.\n+objc:\n+\t* objc-lang.c (LANG_HOOKS_PARSE_FILE): Redefine.\n+\n 2002-03-17  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config/mmix/mmix.md (\"truncdfsf2\"): Correct operator is"}, {"sha": "9b062a7c0b844947db5b46ff8803ee953d688aad", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -1,3 +1,8 @@\n+2002-03-17  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* misc.c (LANG_HOOKS_PARSE_FILE): Redefine.\n+\t(yyparse): Rename gnat_parse_file.\n+\n 2002-03-14  Geoffrey Keating  <geoffk@redhat.com>\n \n \tDelete all lines containing \"$Revision:\"."}, {"sha": "46e280213593009cb12a40e6e87f36a6819d1bde", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -85,6 +85,7 @@ static void gnat_print_type\t\tPARAMS ((FILE *, tree, int));\n static const char *gnat_printable_name\tPARAMS  ((tree, int));\n static tree gnat_eh_runtime_type\tPARAMS ((tree));\n static int gnat_eh_type_covers\t\tPARAMS ((tree, tree));\n+static void gnat_parse_file\t\tPARAMS ((void));\n \n /* Structure giving our language-specific hooks.  */\n \n@@ -98,6 +99,8 @@ static int gnat_eh_type_covers\t\tPARAMS ((tree, tree));\n #define LANG_HOOKS_INIT_OPTIONS\t\tgnat_init_options\n #undef  LANG_HOOKS_DECODE_OPTION\n #define LANG_HOOKS_DECODE_OPTION\tgnat_decode_option\n+#undef LANG_HOOKS_PARSE_FILE\n+#define LANG_HOOKS_PARSE_FILE\t\tgnat_parse_file\n #undef LANG_HOOKS_HONOR_READONLY\n #define LANG_HOOKS_HONOR_READONLY\t1\n #undef LANG_HOOKS_GET_ALIAS_SET\n@@ -167,11 +170,10 @@ extern void __gnat_initialize\tPARAMS((void));\n extern void adainit\t\tPARAMS((void));\n extern void _ada_gnat1drv\tPARAMS((void));\n \n-/* For most front-ends, this is the parser for the language.  For us, we\n-   process the GNAT tree.  */\n+/* The parser for the language.  For us, we process the GNAT tree.  */\n \n-int\n-yyparse ()\n+static void\n+gnat_parse_file ()\n {\n   /* call the target specific initializations */\n   __gnat_initialize();\n@@ -183,8 +185,6 @@ yyparse ()\n \n   /* Call the front end */\n   _ada_gnat1drv ();\n-\n-  return 0;\n }\n \n /* Decode all the language specific options that cannot be decoded by GCC."}, {"sha": "f93e6fe29cf87cf762a5e5c489ceb2aebf6e0845", "filename": "gcc/c-common.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -325,7 +325,7 @@ extern void (*lang_expand_function_end)         PARAMS ((void));\n    noreturn attribute.  */\n extern int (*lang_missing_noreturn_ok_p)\tPARAMS ((tree));\n \n-\n+extern int yyparse\t\t\t\tPARAMS ((void));\n extern stmt_tree current_stmt_tree              PARAMS ((void));\n extern tree *current_scope_stmt_stack           PARAMS ((void));\n extern void begin_stmt_tree                     PARAMS ((tree *));\n@@ -552,6 +552,7 @@ extern void c_common_init_options\t\tPARAMS ((enum c_language_kind));\n extern void c_common_post_options\t\tPARAMS ((void));\n extern const char *c_common_init\t\tPARAMS ((const char *));\n extern void c_common_finish\t\t\tPARAMS ((void));\n+extern void c_common_parse_file\t\t\tPARAMS ((void));\n extern HOST_WIDE_INT c_common_get_alias_set\tPARAMS ((tree));\n extern bool c_promoting_integer_type_p\t\tPARAMS ((tree));\n extern int self_promoting_args_p\t\tPARAMS ((tree));"}, {"sha": "bb26001f18571a40fb900746b5d0d5458cbbf582", "filename": "gcc/c-lang.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -24,6 +24,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n+#include \"c-common.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n \n@@ -49,6 +50,8 @@ static void c_post_options PARAMS ((void));\n #define LANG_HOOKS_GET_ALIAS_SET c_common_get_alias_set\n #undef LANG_HOOKS_SAFE_FROM_P\n #define LANG_HOOKS_SAFE_FROM_P c_safe_from_p\n+#undef LANG_HOOKS_PARSE_FILE\n+#define LANG_HOOKS_PARSE_FILE c_common_parse_file\n #undef LANG_HOOKS_STATICP\n #define LANG_HOOKS_STATICP c_staticp\n #undef LANG_HOOKS_PRINT_IDENTIFIER"}, {"sha": "7bafde752debfb59f6e3f6767c98f07d84f6c3b9", "filename": "gcc/c-lex.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -29,6 +29,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"output.h\"\n #include \"c-lex.h\"\n #include \"c-tree.h\"\n+#include \"c-common.h\"\n #include \"flags.h\"\n #include \"timevar.h\"\n #include \"cpplib.h\"\n@@ -155,13 +156,13 @@ init_c_lex (filename)\n    Also, make sure the start_source_file debug hook gets called for\n    the primary source file.  */\n \n-int\n-yyparse()\n+void\n+c_common_parse_file ()\n {\n   (*debug_hooks->start_source_file) (lineno, input_filename);\n   cpp_finish_options (parse_in);\n \n-  return yyparse_1();\n+  yyparse ();\n }\n \n struct c_fileinfo *"}, {"sha": "1628057b78409e806737893fc91f5455c808a3a6", "filename": "gcc/c-parse.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -64,9 +64,6 @@ end ifobjc\n \n /* Cause the \"yydebug\" variable to be defined.  */\n #define YYDEBUG 1\n-\n-/* Rename the \"yyparse\" function so that we can override it elsewhere.  */\n-#define yyparse yyparse_1\n %}\n \n %start program"}, {"sha": "d39e3ff6e8369b73525da148bafd5c8a89380e2c", "filename": "gcc/c-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -161,7 +161,6 @@ extern tree lookup_objc_ivar\t\t\tPARAMS ((tree));\n /* in c-parse.in */\n extern void c_parse_init\t\t\tPARAMS ((void));\n extern void c_set_yydebug\t\t\tPARAMS ((int));\n-extern int yyparse_1\t\t\t\tPARAMS ((void));\n \n /* in c-aux-info.c */\n extern void gen_aux_info_record                 PARAMS ((tree, int, int, int));"}, {"sha": "fd306a72857cf340fe100ecb0b4ee3340cf2d016", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -1,3 +1,8 @@\n+2002-03-17  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cp-lang.c (LANG_HOOKS_PARSE_FILE): Redefine.\n+\t* parse.y (yyparse): Remove macro.\n+\n 2002-03-17  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/5757"}, {"sha": "40defa57e9525b60e0a1265b768f0ed67b02641e", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -51,6 +51,8 @@ static bool ok_to_generate_alias_set_for_type PARAMS ((tree));\n #define LANG_HOOKS_EXPAND_CONSTANT cplus_expand_constant\n #undef LANG_HOOKS_SAFE_FROM_P\n #define LANG_HOOKS_SAFE_FROM_P c_safe_from_p\n+#undef LANG_HOOKS_PARSE_FILE\n+#define LANG_HOOKS_PARSE_FILE c_common_parse_file\n #undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n #define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL cxx_dup_lang_specific_decl\n #undef LANG_HOOKS_UNSAVE_EXPR_NOW"}, {"sha": "7988ec31edfbb4d87934d862fbcd22ce119263c2", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -228,9 +228,6 @@ cp_parse_init ()\n   ggc_add_tree_root (&current_enum_type, 1);\n   ggc_add_tree_root (&saved_scopes, 1);\n }\n-\n-/* Rename the \"yyparse\" function so that we can override it elsewhere.  */\n-#define yyparse yyparse_1\n %}\n \n %start program"}, {"sha": "43c9c9c2c2e38d8766aac6002ede6e7785ca7cff", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -1,3 +1,10 @@\n+Sun Mar 17 20:57:30 2002  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* com.c (LANG_HOOKS_PARSE_FILE): Redefine.\n+\t* com.h (ffe_parse_file): New.\n+\t* parse.c (NAME_OF_STDIN): Remove.\n+\t(yyparse): Rename ffe_parse_file.\n+\n Tue Mar 12 20:23:18 2002  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* com.c (tree_code_type, tree_code_length, tree_code_name):"}, {"sha": "016b422db256eedc458189ddb58b87fb4fa78dd6", "filename": "gcc/f/com.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -13928,7 +13928,7 @@ start_decl (tree decl, bool is_top_level)\n \n    Returns 1 on success.  If the DECLARATOR is not suitable for a function\n    (it defines a datum instead), we return 0, which tells\n-   yyparse to report a parse error.\n+   ffe_parse_file to report a parse error.\n \n    NESTED is nonzero for a function nested within another function.  */\n \n@@ -14211,6 +14211,8 @@ static void ffe_print_identifier PARAMS ((FILE *, tree, int));\n #define LANG_HOOKS_INIT_OPTIONS\t\tffe_init_options\n #undef  LANG_HOOKS_DECODE_OPTION\n #define LANG_HOOKS_DECODE_OPTION\tffe_decode_option\n+#undef  LANG_HOOKS_PARSE_FILE\n+#define LANG_HOOKS_PARSE_FILE\t\tffe_parse_file\n #undef  LANG_HOOKS_PRINT_IDENTIFIER\n #define LANG_HOOKS_PRINT_IDENTIFIER\tffe_print_identifier\n "}, {"sha": "58b0131beec70f14b1ac2073e83b19e1a927494b", "filename": "gcc/f/com.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Ff%2Fcom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Ff%2Fcom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.h?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -265,6 +265,7 @@ tree ffecom_truth_value (tree expr);\n tree ffecom_truth_value_invert (tree expr);\n tree ffecom_type_expr (ffebld expr);\n tree ffecom_which_entrypoint_decl (void);\n+void ffe_parse_file ();\n \n /* Define macros. */\n "}, {"sha": "fe48b6d4f9e7593f16b6e228151396f205ca5005", "filename": "gcc/f/parse.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Ff%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Ff%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fparse.c?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -26,12 +26,10 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"version.h\"\n #include \"flags.h\"\n \n-#define NAME_OF_STDIN \"<stdin>\"\n-\n extern FILE *finput;\n \n-int\n-yyparse ()\n+void\n+ffe_parse_file ()\n {\n   ffewhereFile wf;\n \n@@ -46,6 +44,4 @@ yyparse ()\n   ffe_file (wf, finput);\n \n   ffecom_finish_compile ();\n-\n-  return 0;\n }"}, {"sha": "3dbb7f0d955f80006561a27b0b9f550ec802de97", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -1,3 +1,9 @@\n+2002-03-17  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* java-tree.h (java_parse_file): New.\n+\t* jcf-parse.c (yyparse): Rename java_parse_file.\n+\t* lang.c (LANG_HOOKS_PARSE_FILE): Redefine.\n+\n 2002-03-16  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n \t* parse.y (craft_constructor): Return the constructor decl."}, {"sha": "aa92f2718be1370ddf4deca9642ce2d3ada6aa39", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -1037,6 +1037,7 @@ struct lang_type\n #define JCF_u2 unsigned short\n \n extern void java_set_yydebug PARAMS ((int));\n+extern void java_parse_file PARAMS ((void));\n extern void add_assume_compiled PARAMS ((const char *, int));\n extern tree lookup_class PARAMS ((tree));\n extern tree lookup_java_constructor PARAMS ((tree, tree));"}, {"sha": "9f5b44ee7d80f468bc488966d146efcec98f1675", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -913,8 +913,8 @@ predefined_filename_p (node)\n   return 0;\n }\n \n-int\n-yyparse ()\n+void\n+java_parse_file ()\n {\n   int filename_count = 0;\n   char *list, *next;\n@@ -1054,7 +1054,7 @@ yyparse ()\n       resource_filename = IDENTIFIER_POINTER (TREE_VALUE (current_file_list));\n       compile_resource_file (resource_name, resource_filename);\n \n-      return 0;\n+      return;\n     }\n \n   current_jcf = main_jcf;\n@@ -1156,7 +1156,6 @@ yyparse ()\n       if (flag_indirect_dispatch)\n \temit_offset_symbol_table ();\n     }\n-  return 0;\n }\n \n /* Process all class entries found in the zip file.  */"}, {"sha": "d9e5847a63efb8ce727a277ee91c95d962bad2b1", "filename": "gcc/java/lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -221,6 +221,8 @@ static int dependency_tracking = 0;\n #define LANG_HOOKS_DECODE_OPTION java_decode_option\n #undef LANG_HOOKS_SET_YYDEBUG\n #define LANG_HOOKS_SET_YYDEBUG java_set_yydebug\n+#undef LANG_HOOKS_PARSE_FILE\n+#define LANG_HOOKS_PARSE_FILE java_parse_file\n #undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n #define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL java_dup_lang_specific_decl\n "}, {"sha": "ffc86d3958e75b1fcb7b81b2c07661695cbfbcdc", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -68,6 +68,7 @@ void lhd_tree_inlining_end_inlining\t\tPARAMS ((tree));\n #define LANG_HOOKS_IDENTIFIER_SIZE\tsizeof (struct lang_identifier)\n #define LANG_HOOKS_INIT\t\t\tlhd_do_nothing\n #define LANG_HOOKS_FINISH\t\tlhd_do_nothing\n+#define LANG_HOOKS_PARSE_FILE\t\tlhd_do_nothing\n #define LANG_HOOKS_CLEAR_BINDING_STACK\tlhd_clear_binding_stack\n #define LANG_HOOKS_INIT_OPTIONS\t\tlhd_do_nothing\n #define LANG_HOOKS_DECODE_OPTION\tlhd_decode_option\n@@ -141,6 +142,7 @@ int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n   LANG_HOOKS_POST_OPTIONS, \\\n   LANG_HOOKS_INIT, \\\n   LANG_HOOKS_FINISH, \\\n+  LANG_HOOKS_PARSE_FILE, \\\n   LANG_HOOKS_CLEAR_BINDING_STACK, \\\n   LANG_HOOKS_GET_ALIAS_SET, \\\n   LANG_HOOKS_EXPAND_CONSTANT, \\"}, {"sha": "c7e43ce63f7d14140691276a6f550050965efb69", "filename": "gcc/langhooks.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -104,6 +104,9 @@ struct lang_hooks\n   /* Called at the end of compilation, as a finalizer.  */\n   void (*finish) PARAMS ((void));\n \n+  /* Parses the entire file.  */\n+  void (*parse_file) PARAMS ((void));\n+\n   /* Called immediately after parsing to clear the binding stack.  */\n   void (*clear_binding_stack) PARAMS ((void));\n "}, {"sha": "8f1a68bbfcfc49b3d0349ee6fdedc9726ac6a8f8", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -44,6 +44,8 @@ static void objc_post_options                   PARAMS ((void));\n #define LANG_HOOKS_DECODE_OPTION objc_decode_option\n #undef LANG_HOOKS_POST_OPTIONS\n #define LANG_HOOKS_POST_OPTIONS objc_post_options\n+#undef LANG_HOOKS_PARSE_FILE\n+#define LANG_HOOKS_PARSE_FILE c_common_parse_file\n #undef LANG_HOOKS_STATICP\n #define LANG_HOOKS_STATICP c_staticp\n #undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL"}, {"sha": "a99fdd1af19aa98fe0b9fa82af69cc55add34076", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -2106,17 +2106,16 @@ compile_file ()\n \n   timevar_push (TV_PARSE);\n \n-  /* Call the parser, which parses the entire file\n-     (calling rest_of_compilation for each function).  */\n-  yyparse ();\n+  /* Call the parser, which parses the entire file (calling\n+     rest_of_compilation for each function).  */\n+  (*lang_hooks.parse_file) ();\n \n   /* In case there were missing block closers,\n      get us back to the global binding level.  */\n   (*lang_hooks.clear_binding_stack) ();\n \n   /* Compilation is now finished except for writing\n      what's left of the symbol table output.  */\n-\n   timevar_pop (TV_PARSE);\n \n   if (flag_syntax_only)\n@@ -2339,7 +2338,7 @@ rest_of_type_compilation (type, toplev)\n   timevar_pop (TV_SYMOUT);\n }\n \n-/* This is called from finish_function (within yyparse)\n+/* This is called from finish_function (within langhooks.parse_file)\n    after each top-level definition is parsed.\n    It is supposed to compile that function or variable\n    and output the assembler code for it."}, {"sha": "d9ad985f342acb5c0632d4cac0e092890b240706", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dabb6c609b81591884caf64894caa84e16a29f/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=52dabb6c609b81591884caf64894caa84e16a29f", "patch": "@@ -2859,8 +2859,6 @@ extern tree fold_builtin\t\tPARAMS ((tree));\n \f\n /* The language front-end must define these functions.  */\n \n-/* Function called with no arguments to parse and compile the input.  */\n-extern int yyparse\t\t\t\tPARAMS ((void));\n /* Functions for processing symbol declarations.  */\n /* Function to enter a new lexical scope.\n    Takes one argument: always zero when called from outside the front end.  */"}]}