{"sha": "23ebfda0e352fa0a92c6b012458ecb65505a135f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNlYmZkYTBlMzUyZmEwYTkyYzZiMDEyNDU4ZWNiNjU1MDVhMTM1Zg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-08-19T17:21:47Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-08-19T19:27:09Z"}, "message": "analyzer: fix ICE on deref_rvalue on SK_COMPOUND [PR96643]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/96643\n\t* region-model.cc (region_model::deref_rvalue): Rather than\n\tattempting to handle all svalue kinds in the switch, only cover\n\tthe special cases, and move symbolic-region handling to after\n\tthe switch, thus implicitly handling the missing case SK_COMPOUND.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/96643\n\t* g++.dg/analyzer/pr96643.C: New test.", "tree": {"sha": "afc50b41b174d82e50b13475da1fc913fff73626", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afc50b41b174d82e50b13475da1fc913fff73626"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23ebfda0e352fa0a92c6b012458ecb65505a135f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ebfda0e352fa0a92c6b012458ecb65505a135f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23ebfda0e352fa0a92c6b012458ecb65505a135f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ebfda0e352fa0a92c6b012458ecb65505a135f/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc02b568e2cd3f6a28d4b7c1063bbf8842c89aad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc02b568e2cd3f6a28d4b7c1063bbf8842c89aad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc02b568e2cd3f6a28d4b7c1063bbf8842c89aad"}], "stats": {"total": 52, "additions": 31, "deletions": 21}, "files": [{"sha": "8a5e74ebc0e19d981c278de3473dba1bc48216c2", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23ebfda0e352fa0a92c6b012458ecb65505a135f/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23ebfda0e352fa0a92c6b012458ecb65505a135f/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=23ebfda0e352fa0a92c6b012458ecb65505a135f", "patch": "@@ -1369,7 +1369,7 @@ region_model::deref_rvalue (const svalue *ptr_sval, tree ptr_tree,\n   switch (ptr_sval->get_kind ())\n     {\n     default:\n-      gcc_unreachable ();\n+      break;\n \n     case SK_REGION:\n       {\n@@ -1395,17 +1395,10 @@ region_model::deref_rvalue (const svalue *ptr_sval, tree ptr_tree,\n \t      return m_mgr->get_offset_region (parent_region, type, offset);\n \t    }\n \t  default:\n-\t    goto create_symbolic_region;\n+\t    break;\n \t  }\n       }\n-\n-    case SK_CONSTANT:\n-    case SK_INITIAL:\n-    case SK_UNARYOP:\n-    case SK_SUB:\n-    case SK_WIDENING:\n-    case SK_CONJURED:\n-      goto create_symbolic_region;\n+      break;\n \n     case SK_POISONED:\n       {\n@@ -1425,20 +1418,11 @@ region_model::deref_rvalue (const svalue *ptr_sval, tree ptr_tree,\n \t\tctxt->warn (new poisoned_value_diagnostic (ptr, pkind));\n \t      }\n \t  }\n-\tgoto create_symbolic_region;\n       }\n-\n-    case SK_UNKNOWN:\n-      {\n-      create_symbolic_region:\n-\treturn m_mgr->get_symbolic_region (ptr_sval);\n-      }\n-\n-    case SK_SETJMP:\n-      goto create_symbolic_region;\n+      break;\n     }\n \n-  gcc_unreachable ();\n+  return m_mgr->get_symbolic_region (ptr_sval);\n }\n \n /* Set the value of the region given by LHS_REG to the value given"}, {"sha": "2d0a248c73efaaffc208650749b5344a1f443fda", "filename": "gcc/testsuite/g++.dg/analyzer/pr96643.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23ebfda0e352fa0a92c6b012458ecb65505a135f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fanalyzer%2Fpr96643.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23ebfda0e352fa0a92c6b012458ecb65505a135f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fanalyzer%2Fpr96643.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fanalyzer%2Fpr96643.C?ref=23ebfda0e352fa0a92c6b012458ecb65505a135f", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-additional-options \"-O1\" } */\n+\n+int l0;\n+\n+class qv {\n+public:\n+  int operator[] (int b1) const { return k2[b1]; }\n+\n+private:\n+  int *k2;\n+};\n+\n+class g0 {\n+  qv nf, v6;\n+\n+  void\n+  iq ();\n+};\n+\n+void\n+g0::iq ()\n+{\n+  for (;;)\n+    if (nf[0] == 0)\n+      ++l0;\n+}"}]}