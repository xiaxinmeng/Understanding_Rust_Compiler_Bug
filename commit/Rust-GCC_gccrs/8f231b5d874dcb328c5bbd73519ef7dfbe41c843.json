{"sha": "8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYyMzFiNWQ4NzRkY2IzMjhjNWJiZDczNTE5ZWY3ZGZiZTQxYzg0Mw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-06-05T16:36:12Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-06-05T16:36:12Z"}, "message": "install.tex: Document profiledbootstrap.\n\n\t* install.tex: Document profiledbootstrap.\n\n\t* Makefile.tpl (profiledbootstrap): New target.\n\t* Makefile.in (profiledbootstrap): New target.\n\n\t* Makefile.in (clean, distclean): Kill new stages\n\t(POSTSTAGE1_FLAGS_TO_PASS): Break from ...\n\t(STAGE2_FLAGS_TO_PASS): ... this one.\n\t(STAGEPROFILE_FLAGS_TO_PASS, STAGEFEEDBACK_FLAGS_TO_PASS): New.\n\t(stage[2-4]_build): Add POSTSTAGE1_FLAGS_TO_PASS.\n\t(stageprofile_build, stageprofile_copy, stagefeedback_build,\n\tstagefeedback_copy): New.\n\t(restageprofile, restagefeedback, stageprofile-start,\n\tstageprofile, stagefeedback-start): Likewise.\n\n\t* Make-lang.in:  Add support for stageprofile and stagefeedback\n\nFrom-SVN: r67498", "tree": {"sha": "9375614623f28bf1e529f1905796682177a852ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9375614623f28bf1e529f1905796682177a852ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/comments", "author": null, "committer": null, "parents": [{"sha": "842a431a9afc461050e98fe241d036232713cfaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842a431a9afc461050e98fe241d036232713cfaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/842a431a9afc461050e98fe241d036232713cfaf"}], "stats": {"total": 415, "additions": 319, "deletions": 96}, "files": [{"sha": "e2a1d9c80d15e137799174f3679112cbbb9b6c92", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -1,3 +1,8 @@\n+Thu Jun  5 18:32:20 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* Makefile.tpl (profiledbootstrap): New target.\n+\t* Makefile.in (profiledbootstrap): New target.\n+\n 2003-06-05  Wolfgang Bangerth  <bangerth@dealii.org>\n \n \t* MAINTAINERS (Bugzilla only): Add Dara Hazeghi and Andrew"}, {"sha": "e22a1bbd4d81337ee7502045371f37b10f351fe5", "filename": "Makefile.in", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -23776,6 +23776,23 @@ $(GCC_STRAP_TARGETS): all-bootstrap configure-gcc\n \techo \"Building runtime libraries\"; \\\n \t$(MAKE) $(BASE_FLAGS_TO_PASS) $(RECURSE_FLAGS) all\n \n+profiledbootstrap: all-bootstrap configure-gcc\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\techo \"Bootstrapping the compiler\"; \\\n+\tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) stageprofile_build\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}` ; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\techo \"Building runtime libraries and training compiler\"; \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) $(RECURSE_FLAGS) all\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\techo \"Building feedback based compiler\"; \\\n+\tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) stagefeedback_build\n+\n .PHONY: cross\n cross: all-texinfo all-bison all-byacc all-binutils all-gas all-ld\n \t@r=`${PWD}`; export r; \\"}, {"sha": "394a03ea968764cb2bd6df8700a4403c05876845", "filename": "Makefile.tpl", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -1255,6 +1255,23 @@ $(GCC_STRAP_TARGETS): all-bootstrap configure-gcc\n \techo \"Building runtime libraries\"; \\\n \t$(MAKE) $(BASE_FLAGS_TO_PASS) $(RECURSE_FLAGS) all\n \n+profiledbootstrap: all-bootstrap configure-gcc\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\techo \"Bootstrapping the compiler\"; \\\n+\tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) stageprofile_build\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}` ; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\techo \"Building runtime libraries and training compiler\"; \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) $(RECURSE_FLAGS) all\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\techo \"Building feedback based compiler\"; \\\n+\tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) stagefeedback_build\n+\n .PHONY: cross\n cross: all-texinfo all-bison all-byacc all-binutils all-gas all-ld\n \t@r=`${PWD}`; export r; \\"}, {"sha": "1860a2cbe22e87004ed68c2aa01ec9409008782c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -1,3 +1,17 @@\n+Thu Jun  5 18:32:46 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* install.tex: Document profiledbootstrap.\n+\n+\t* Makefile.in (clean, distclean): Kill new stages\n+\t(POSTSTAGE1_FLAGS_TO_PASS): Break from ...\n+\t(STAGE2_FLAGS_TO_PASS): ... this one.\n+\t(STAGEPROFILE_FLAGS_TO_PASS, STAGEFEEDBACK_FLAGS_TO_PASS): New.\n+\t(stage[2-4]_build): Add POSTSTAGE1_FLAGS_TO_PASS.\n+\t(stageprofile_build, stageprofile_copy, stagefeedback_build,\n+\tstagefeedback_copy): New.\n+\t(restageprofile, restagefeedback, stageprofile-start, \n+\tstageprofile, stagefeedback-start): Likewise.\n+\n 2003-06-05  David Miller  <davem@redhat.com>\n \t    Richard Henderson  <rth@redhat.com>\n "}, {"sha": "5d873357cfb861735a83ad3b5c862f33966f2bc1", "filename": "gcc/Makefile.in", "status": "modified", "additions": 118, "deletions": 5, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -2831,7 +2831,7 @@ clean: mostlyclean $(INTL_CLEAN) lang.clean\n \telse if [ \"x$(MULTILIB_OPTIONS)\" != x ] ; then \\\n \t  rm -rf `echo $(MULTILIB_OPTIONS) | sed -e 's/\\// /g'`; \\\n \tfi ; fi\n-\t-rm -fr stage1 stage2 stage3 stage4\n+\t-rm -fr stage1 stage2 stage3 stage4 stageprofile stagefeedback\n # Delete stamps of bootstrap stages\n \t-rm -f stage?_*\n \t-rm -f clean?_*\n@@ -2847,7 +2847,7 @@ distclean: clean $(INTL_DISTCLEAN) lang.distclean\n \t-rm -f Make-lang Make-hooks Make-host Make-target\n \t-rm -f Makefile *.oaux\n \t-rm -f gthr-default.h\n-\t-rm -f */stage1 */stage2 */stage3 */stage4 */include\n+\t-rm -f */stage1 */stage2 */stage3 */stage4 */include */stageprofile */stagefeedback\n \t-rm -f c-parse.output\n \t-rm -f *.asm\n \t-rm -f site.exp site.bak testsuite/site.exp testsuite/site.bak\n@@ -3453,19 +3453,31 @@ VOL_FILES=`echo $(BACKEND) $(OBJS) $(C_OBJS) $(LIBCPP_OBJS) *.c *.h gen*`\n # Flags to pass to stage2 and later recursive makes.  Note that the\n # WARN_CFLAGS setting can't be to the expansion of GCC_WARN_CFLAGS in\n # the context of the stage_x rule.\n-STAGE2_FLAGS_TO_PASS = \\\n+\n+POSTSTAGE1_FLAGS_TO_PASS = \\\n \tADAC=\"\\$$(CC)\" \\\n \tGCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \tCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tLDFLAGS=\"$(BOOT_LDFLAGS)\" \\\n \tWARN_CFLAGS=\"\\$$(GCC_WARN_CFLAGS)\" \\\n-\tWERROR=\"@WERROR@\" \\\n \tSTRICT_WARN=\"$(STRICT2_WARN)\" \\\n \tlibdir=$(libdir) \\\n \tLANGUAGES=\"$(LANGUAGES)\" \\\n \tMAKEOVERRIDES= \\\n \tOUTPUT_OPTION=\"-o \\$$@\"\n \n+STAGE2_FLAGS_TO_PASS = \\\n+\tCFLAGS=\"$(BOOT_CFLAGS)\" \\\n+\tWERROR=\"@WERROR@\" \\\n+\n+STAGEPROFILE_FLAGS_TO_PASS = \\\n+\tCFLAGS=\"$(BOOT_CFLAGS) -fprofile-arcs\" \n+\n+# Files never linked into the final executable produces warnings about missing\n+# profile.\n+STAGEFEEDBACK_FLAGS_TO_PASS = \\\n+\tCFLAGS=\"$(BOOT_CFLAGS) -fbranch-probabilities\" \n+\n # Only build the C compiler for stage1, because that is the only one that\n # we can guarantee will build with the native compiler, and also it is the\n # only thing useful for building stage2. STAGE1_CFLAGS (via CFLAGS),\n@@ -3487,6 +3499,7 @@ stage1_copy: stage1_build\n stage2_build: stage1_copy\n \t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" BUILD_CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" \\\n \t\t STAGE_PREFIX=stage1/ \\\n+\t\t $(POSTSTAGE1_FLAGS_TO_PASS) \\\n \t\t $(STAGE2_FLAGS_TO_PASS)\n \t$(STAMP) stage2_build\n \techo stage2_build > stage_last\n@@ -3496,13 +3509,48 @@ stage2_copy: stage2_build\n \t$(STAMP) stage2_copy\n \techo stage3_build > stage_last\n \n+stageprofile_build: stage1_copy\n+\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" BUILD_CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" \\\n+\t\t STAGE_PREFIX=stage1/ \\\n+\t\t $(POSTSTAGE1_FLAGS_TO_PASS) \\\n+\t\t $(STAGEPROFILE_FLAGS_TO_PASS)\n+\t$(STAMP) stageprofile_build\n+\techo stageprofile_build > stage_last\n+\n+stageprofile_copy: stageprofile_build\n+\t$(MAKE) stageprofile\n+\t$(STAMP) stageprofile_copy\n+\techo stagefeedback_build > stage_last\n+\n stage3_build: stage2_copy\n \t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" BUILD_CC=\"$(STAGE_CC_WRAPPER) stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" \\\n \t\t STAGE_PREFIX=stage2/ \\\n+\t\t $(POSTSTAGE1_FLAGS_TO_PASS) \\\n \t\t $(STAGE2_FLAGS_TO_PASS)\n \t$(STAMP) stage3_build\n \techo stage3_build > stage_last\n \n+stagefeedback_build: stageprofile_copy stage1_copy\n+\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" BUILD_CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" \\\n+\t\t STAGE_PREFIX=stage1/ \\\n+\t\t $(POSTSTAGE1_FLAGS_TO_PASS) \\\n+\t\t $(STAGEFEEDBACK_FLAGS_TO_PASS)\n+\t$(STAMP) stagefeedback_build\n+\techo stagefeedback_build > stage_last\n+\n+stagefeedback_copy: stagefeedback_build\n+\t$(MAKE) stagefeedback\n+\t$(STAMP) stagefeedback_copy\n+\techo stagefeedback2_build > stage_last\n+\n+stageprofile_build: stage1_copy\n+\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" BUILD_CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" \\\n+\t\t STAGE_PREFIX=stage1/ \\\n+\t\t $(POSTSTAGE1_FLAGS_TO_PASS) \\\n+\t\t $(STAGEPROFILE_FLAGS_TO_PASS)\n+\t$(STAMP) stageprofile_build\n+\techo stageprofile_build > stage_last\n+\n # For bootstrap4:\n stage3_copy: stage3_build\n \t$(MAKE) stage3\n@@ -3512,6 +3560,7 @@ stage3_copy: stage3_build\n stage4_build: stage3_copy\n \t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage3/xgcc$(exeext) -Bstage3/ -B$(build_tooldir)/bin/\" BUILD_CC=\"$(STAGE_CC_WRAPPER) stage3/xgcc$(exeext) -Bstage3/ -B$(build_tooldir)/bin/\" \\\n \t\t STAGE_PREFIX=stage3/ \\\n+\t\t $(POSTSTAGE1_FLAGS_TO_PASS) \\\n \t\t $(STAGE2_FLAGS_TO_PASS)\n \t$(STAMP) stage4_build\n \techo stage4_build > stage_last\n@@ -3547,7 +3596,7 @@ bootstrap3 bootstrap3-lean: bootstrap\n \n bootstrap4 bootstrap4-lean: stage4_build\n \n-unstage1 unstage2 unstage3 unstage4:\n+unstage1 unstage2 unstage3 unstage4 unstageprofile unstagefeedback:\n \t-set -vx; stage=`echo $@ | sed -e 's/un//'`; \\\n \trm -f $$stage/as$(exeext); \\\n \trm -f $$stage/ld$(exeext); \\\n@@ -3578,6 +3627,12 @@ restage3: unstage3\n restage4: unstage4\n \t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" stage4_build\n \n+restageprofile: unstageprofile\n+\t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" stageprofile_build\n+\n+restagefeedback: unstagefeedback\n+\t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" stagefeedback_build\n+\n bubblestrap:\n \tif test -f stage3_build; then true; else \\\n \t  echo; echo You must \\\"make bootstrap\\\" first.; \\\n@@ -3812,6 +3867,63 @@ stage4-start:\n \tfi; done\n stage4: force stage4-start lang.stage4\n \n+stageprofile-start:\n+\t-if [ -d stageprofile ] ; then true ; else mkdir stageprofile ; fi\n+\t$(MAKE) -f libgcc.mk libgcc-stage-start stage=stageprofile\n+\t-for dir in intl $(SUBDIRS) ; \\\n+\t do \\\n+\t   if [ -d stageprofile/$$dir ] ; then true ; else mkdir stageprofile/$$dir ; fi ; \\\n+\t done\n+\t-mv $(STAGESTUFF) stageprofile\n+\t-mv intl/*$(objext) stageprofile/intl\n+# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n+# dir will work properly.\n+\t-if [ -f as$(exeext) ] ; then (cd stageprofile && $(LN_S) ../as$(exeext) .) ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then (cd stageprofile && $(LN_S) ../ld$(exeext) .) ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then (cd stageprofile && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n+\t-rm -f stageprofile/libgcc.a stageprofile/libgcov.a stageprofile/libgcc_eh.a\n+\t-cp libgcc.a stageprofile\n+\t-$(RANLIB_FOR_TARGET) stageprofile/libgcc.a\n+\t-cp libgcov.a stageprofile\n+\t-$(RANLIB_FOR_TARGET) stageprofile/libgcov.a\n+\t-if [ -f libgcc_eh.a ] ; then cp libgcc_eh.a stageprofile; \\\n+\t   $(RANLIB_FOR_TARGET) stageprofile/libgcc_eh.a; \\\n+\tfi\n+\t-for f in .. $(EXTRA_MULTILIB_PARTS); do if [ x$${f} != x.. ]; then \\\n+\t  cp stageprofile/$${f} . ; \\\n+\telse true; \\\n+\tfi; done\n+stageprofile: force stageprofile-start lang.stageprofile\n+\n+stagefeedback-start:\n+\t-if [ -d stagefeedback ] ; then true ; else mkdir stagefeedback ; fi\n+\t$(MAKE) -f libgcc.mk libgcc-stage-start stage=stagefeedback\n+\t-for dir in intl $(SUBDIRS) ; \\\n+\t do \\\n+\t   if [ -d stagefeedback/$$dir ] ; then true ; else mkdir stagefeedback/$$dir ; fi ; \\\n+\t done\n+\t-mv $(STAGESTUFF) stagefeedback\n+\t-mv intl/*$(objext) stagefeedback/intl\n+# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n+# dir will work properly.\n+\t-if [ -f as$(exeext) ] ; then (cd stagefeedback && $(LN_S) ../as$(exeext) .) ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then (cd stagefeedback && $(LN_S) ../ld$(exeext) .) ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then (cd stagefeedback && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n+\t-rm -f stagefeedback/libgcc.a stagefeedback/libgcov.a stagefeedback/libgcc_eh.a\n+\t-rm -f *.da ada/*.da cp/*.da f/*.da java/*.da objc/*.da fixinc/*.da intl po testsuite 2>/dev/null\n+\t-cp libgcc.a stagefeedback\n+\t-$(RANLIB_FOR_TARGET) stagefeedback/libgcc.a\n+\t-cp libgcov.a stagefeedback\n+\t-$(RANLIB_FOR_TARGET) stagefeedback/libgcov.a\n+\t-if [ -f libgcc_eh.a ] ; then cp libgcc_eh.a stagefeedback; \\\n+\t   $(RANLIB_FOR_TARGET) stagefeedback/libgcc_eh.a; \\\n+\tfi\n+\t-for f in .. $(EXTRA_MULTILIB_PARTS); do if [ x$${f} != x.. ]; then \\\n+\t  cp stagefeedback/$${f} . ; \\\n+\telse true; \\\n+\tfi; done\n+stagefeedback: force stagefeedback-start lang.stagefeedback\n+\n # Copy just the executable files from a particular stage into a subdirectory,\n # and delete the object files.  Use this if you're just verifying a version\n # that is pretty sure to work, and you are short of disk space.\n@@ -3830,6 +3942,7 @@ risky-stage4: stage4\n #In GNU Make, ignore whether `stage*' exists.\n .PHONY: stage1 stage2 stage3 stage4 clean maintainer-clean TAGS bootstrap\n .PHONY: risky-stage1 risky-stage2 risky-stage3 risky-stage4\n+.PHONY: stagefeedback stageprofile\n \n # Rules for generating translated message descriptions.\n # Disabled by autoconf if the tools are not available."}, {"sha": "ed6215e593d60d3030ba24397e475ada44ae8f5d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -1,3 +1,7 @@\n+Thu Jun  5 18:33:40 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* Make-lang.in:  Add support for stageprofile and stagefeedback\n+\n 2003-06-05  Matt Kraai  <kraai@alumni.cmu.edu>\n \n \t* bindgen.adb (Gen_Adafinal_C, Gen_Adainit_C, Gen_Elab_Defs_C)"}, {"sha": "01ef4228073b50add924458b9feadbc24c4db80a", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -808,6 +808,12 @@ ada.stage3: stage3-start\n ada.stage4: stage4-start\n \t-$(MV) ada/*$(objext) ada/*.ali ada/b_*.c stage4/ada\n \t-$(MV) ada/stamp-* stage4/ada\n+ada.stageprofile: stageprofile-start\n+\t-$(MV) ada/*$(objext) ada/*.ali ada/b_*.c stageprofile/ada\n+\t-$(MV) ada/stamp-* stageprofile/ada\n+ada.stagefeedback: stagefeedback-start\n+\t-$(MV) ada/*$(objext) ada/*.ali ada/b_*.c stagefeedback/ada\n+\t-$(MV) ada/stamp-* stagefeedback/ada\n \n check-ada:\n \f"}, {"sha": "557f5f07929217024505dfab495f3bae8ef65b2f", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -8892,7 +8892,7 @@ target_list=\"all.build all.cross start.encap rest.encap tags \\\n \tinstall-normal install-common install-info install-man \\\n \tuninstall \\\n \tmostlyclean clean distclean extraclean maintainer-clean \\\n-\tstage1 stage2 stage3 stage4\"\n+\tstage1 stage2 stage3 stage4 stageprofile stagefeedback\"\n for t in $target_list\n do\n \tx=\n@@ -9656,7 +9656,7 @@ if test \"$symbolic_link\" = \"ln -s\"; then\n    if test $d != ..; then\n \tSTARTDIR=`${PWDCMD-pwd}`\n \tcd $d\n-\tfor t in stage1 stage2 stage3 stage4 include\n+\tfor t in stage1 stage2 stage3 stage4 include stageprofile stagefeedback\n \tdo\n \t\trm -f $t\n \t\t$symbolic_link ../$t $t 2>/dev/null"}, {"sha": "9520e331b0433ed69cae61d9677eeac07ef9593b", "filename": "gcc/configure.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -3014,7 +3014,7 @@ target_list=\"all.build all.cross start.encap rest.encap tags \\\n \tinstall-normal install-common install-info install-man \\\n \tuninstall \\\n \tmostlyclean clean distclean extraclean maintainer-clean \\\n-\tstage1 stage2 stage3 stage4\"\n+\tstage1 stage2 stage3 stage4 stageprofile stagefeedback\"\n for t in $target_list\n do\n \tx=\n@@ -3230,7 +3230,7 @@ if test \"$symbolic_link\" = \"ln -s\"; then\n    if test $d != ..; then\n \tSTARTDIR=`${PWDCMD-pwd}`\n \tcd $d\n-\tfor t in stage1 stage2 stage3 stage4 include\n+\tfor t in stage1 stage2 stage3 stage4 stageprofile stagefeedback include\n \tdo\n \t\trm -f $t\n \t\t$symbolic_link ../$t $t 2>/dev/null"}, {"sha": "e27e188a691246d0b4e26876825561e65dcc5899", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -1,3 +1,7 @@\n+Thu Jun  5 18:33:40 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* Make-lang.in:  Add support for stageprofile and stagefeedback\n+\n 2003-06-04  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* decl.c (grokdeclarator): Error_mark_node in, error_mark_node out."}, {"sha": "0c6fb41f682f3e93da9fcf22878d0b1ee06094c0", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -218,6 +218,10 @@ c++.stage3: stage3-start\n \t-mv cp/*$(objext) stage3/cp\n c++.stage4: stage4-start\n \t-mv cp/*$(objext) stage4/cp\n+c++.stageprofile: stageprofile-start\n+\t-mv cp/*$(objext) stageprofile/cp\n+c++.stagefeedback: stagefeedback-start\n+\t-mv cp/*$(objext) stagefeedback/cp\n \n #\f\n # .o: .h dependencies."}, {"sha": "2dd446131491156959f8fea9ec914e4a16311d94", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -1202,6 +1202,24 @@ following commands (assuming @command{make} is GNU make):\n Currently, when compiling the Ada front end, you cannot use the parallel\n build feature described in the previous section.\n \n+@section Building with profile feedback\n+\n+It is possible to use profile feedback to optimize the compiler itself.  This\n+should result in a faster compiler binary.  Experiments done on x86 using gcc\n+3.3 showed approximately 7 percent speedup on compiling C programs.  To\n+bootstrap compiler with profile feedback, use @code{make profiledbootstrap}.\n+\n+When @samp{make profiledbootstrap} is run, it will first build a @code{stage1}\n+compiler.  This compiler is used to build a @code{stageprofile} compiler\n+instrumented to collect execution counts of instruction and branch\n+probabilities.  Then runtime libraries are compiled with profile collected.\n+Finally a @code{stagefeedback} compiler is built using the information collected.\n+\n+Unlike @samp{make bootstrap} several additional restrictions apply.  The\n+compiler used to build @code{stage1} needs to support a 64-bit integral type.\n+It is recommended to only use GCC for this.  Also parallel make is currently\n+not supported since collisions in profile collecting may occur.\n+\n @html\n <hr />\n <p>"}, {"sha": "0ff9f992ad77f4bd36a912d127193bed9d502ebb", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -1,3 +1,7 @@\n+Thu Jun  5 18:33:40 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* Make-lang.in:  Add support for stageprofile and stagefeedback\n+\n 2003-06-04  Andreas Jaeger  <aj@suse.de>\n \n \t* g77spec.c (lang_specific_driver): Remove ALT_LIBM usage."}, {"sha": "cf6c298d64beb587d52ebc7e0f4cb22f4e5a2300", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -63,7 +63,8 @@ F77 f77: f771$(exeext)\n   f77.install-common f77.install-info f77.install-man \\\n   f77.uninstall f77.mostlyclean f77.clean f77.distclean \\\n   f77.extraclean f77.maintainer-clean f77.rebuilt \\\n-  f77.stage1 f77.stage2 f77.stage3 f77.stage4\n+  f77.stage1 f77.stage2 f77.stage3 f77.stage4 \\\n+  f77.stageprofile f77.stagefeedback\n \n g77spec.o: $(srcdir)/f/g77spec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n \t$(CONFIG_H)\n@@ -349,6 +350,11 @@ f77.stage3: stage3-start\n f77.stage4: stage4-start\n \t-mv -f $(G77STAGESTUFF) stage4/f\n \n+f77.stageprofile: stageprofile-start\n+\t-mv -f $(G77STAGESTUFF) stageprofile/f\n+\n+f77.stagefeedback: stageprofile-start\n+\t-mv -f $(G77STAGESTUFF) stagefeedback/f\n #\f\n # .o: .h dependencies.\n "}, {"sha": "2c6d3f9c573a769f9190d8a171cea814c70a1dca", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -1,3 +1,7 @@\n+Thu Jun  5 18:33:40 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* Make-lang.in:  Add support for stageprofile and stagefeedback\n+\n 2003-05-31  Roger Sayle  <roger@eyesopen.com>\n \n \t* lang.c (java_init_options): Prescribe wrap-around two's"}, {"sha": "22cd1fc6a63a261ba6a564b8e6c5bd74acc7e6cc", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -263,6 +263,10 @@ java.stage3: stage3-start\n \t-mv java/*$(objext) stage3/java\n java.stage4: stage4-start\n \t-mv java/*$(objext) stage4/java\n+java.stageprofile: stageprofile-start\n+\t-mv java/*$(objext) stageprofile/java\n+java.stagefeedback: stageprofile-start\n+\t-mv java/*$(objext) stagefeedback/java\n \n #\f\n # .o:.h dependencies."}, {"sha": "8bc412578bff6839a1a58236f07a6c9750a128c2", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -156,3 +156,9 @@ objc.stage3: stage3-start\n objc.stage4: stage4-start\n \t-mv objc/*$(objext) stage4/objc\n \t-mv cc1obj$(exeext) stage4\n+objc.stageprofile: stageprofile-start\n+\t-mv objc/*$(objext) stageprofile/objc\n+\t-mv cc1obj$(exeext) stageprofile\n+objc.stagefeedback: stagefeedback-start\n+\t-mv objc/*$(objext) stagefeedback/objc\n+\t-mv cc1obj$(exeext) stagefeedback"}, {"sha": "da01b0bb7103dc987be436607680770fb33bfcec", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -1,3 +1,7 @@\n+Thu Jun  5 18:33:40 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* Make-lang.in:  Add support for stageprofile and stagefeedback\n+\n 2003-05-21  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* treetree.c (reswords): Remove __bounded__, __unbounded__."}, {"sha": "604f981c62e1ee746aec17ef8b64f1b53aca2ca5", "filename": "gcc/treelang/Make-lang.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Ftreelang%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/gcc%2Ftreelang%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FMake-lang.in?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -266,6 +266,10 @@ treelang.stage3: stage3-start\n \t-mv treelang/*$(objext) stage3/treelang\n treelang.stage4: stage4-start\n \t-mv treelang/*$(objext) stage4/treelang\n+treelang.stageprofile: stageprofile-start\n+\t-mv treelang/*$(objext) stageprofile/treelang\n+treelang.stagefeedback: stagefeedback-start\n+\t-mv treelang/*$(objext) stagefeedback/treelang\n #\f\n # Maintenance hooks:\n "}, {"sha": "3d3b6dcdfb57f9756303ee92fc47f7963952b105", "filename": "libf2c/libI77/configure", "status": "modified", "additions": 74, "deletions": 85, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/libf2c%2FlibI77%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/libf2c%2FlibI77%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fconfigure?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -28,7 +28,6 @@ program_suffix=NONE\n program_transform_name=s,x,x,\n silent=\n site=\n-sitefile=\n srcdir=\n target=NONE\n verbose=\n@@ -143,7 +142,6 @@ Configuration:\n   --help                  print this message\n   --no-create             do not create output files\n   --quiet, --silent       do not print \\`checking...' messages\n-  --site-file=FILE        use FILE as the site file\n   --version               print the version of autoconf that created configure\n Directory and file names:\n   --prefix=PREFIX         install architecture-independent files in PREFIX\n@@ -314,11 +312,6 @@ EOF\n   -site=* | --site=* | --sit=*)\n     site=\"$ac_optarg\" ;;\n \n-  -site-file | --site-file | --site-fil | --site-fi | --site-f)\n-    ac_prev=sitefile ;;\n-  -site-file=* | --site-file=* | --site-fil=* | --site-fi=* | --site-f=*)\n-    sitefile=\"$ac_optarg\" ;;\n-\n   -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n     ac_prev=srcdir ;;\n   -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n@@ -484,16 +477,12 @@ fi\n srcdir=`echo \"${srcdir}\" | sed 's%\\([^/]\\)/*$%\\1%'`\n \n # Prefer explicitly selected file to automatically selected ones.\n-if test -z \"$sitefile\"; then\n-  if test -z \"$CONFIG_SITE\"; then\n-    if test \"x$prefix\" != xNONE; then\n-      CONFIG_SITE=\"$prefix/share/config.site $prefix/etc/config.site\"\n-    else\n-      CONFIG_SITE=\"$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site\"\n-    fi\n+if test -z \"$CONFIG_SITE\"; then\n+  if test \"x$prefix\" != xNONE; then\n+    CONFIG_SITE=\"$prefix/share/config.site $prefix/etc/config.site\"\n+  else\n+    CONFIG_SITE=\"$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site\"\n   fi\n-else\n-  CONFIG_SITE=\"$sitefile\"\n fi\n for ac_site_file in $CONFIG_SITE; do\n   if test -r \"$ac_site_file\"; then\n@@ -541,7 +530,7 @@ fi\n # Extract the first word of \"gcc\", so it can be a program name with args.\n set dummy gcc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:545: checking for $ac_word\" >&5\n+echo \"configure:534: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -571,7 +560,7 @@ if test -z \"$CC\"; then\n   # Extract the first word of \"cc\", so it can be a program name with args.\n set dummy cc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:575: checking for $ac_word\" >&5\n+echo \"configure:564: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -622,7 +611,7 @@ fi\n       # Extract the first word of \"cl\", so it can be a program name with args.\n set dummy cl; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:626: checking for $ac_word\" >&5\n+echo \"configure:615: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -655,7 +644,7 @@ fi\n \n \n echo $ac_n \"checking whether we are using GNU C\"\"... $ac_c\" 1>&6\n-echo \"configure:659: checking whether we are using GNU C\" >&5\n+echo \"configure:648: checking whether we are using GNU C\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_gcc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -664,7 +653,7 @@ else\n   yes;\n #endif\n EOF\n-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:668: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:657: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n   ac_cv_prog_gcc=yes\n else\n   ac_cv_prog_gcc=no\n@@ -683,7 +672,7 @@ ac_test_CFLAGS=\"${CFLAGS+set}\"\n ac_save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\n echo $ac_n \"checking whether ${CC-cc} accepts -g\"\"... $ac_c\" 1>&6\n-echo \"configure:687: checking whether ${CC-cc} accepts -g\" >&5\n+echo \"configure:676: checking whether ${CC-cc} accepts -g\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_cc_g'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -719,17 +708,17 @@ fi\n # NetBSD 1.4 header files does not support XOPEN_SOURCE == 600, but it\n # handles 64-bit file sizes without needing these defines.\n echo $ac_n \"checking whether _XOPEN_SOURCE may be defined\"\"... $ac_c\" 1>&6\n-echo \"configure:723: checking whether _XOPEN_SOURCE may be defined\" >&5\n+echo \"configure:712: checking whether _XOPEN_SOURCE may be defined\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 725 \"configure\"\n+#line 714 \"configure\"\n #include \"confdefs.h\"\n #define _XOPEN_SOURCE 600L\n #include <unistd.h>\n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:733: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:722: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   may_use_xopen_source=yes\n else\n@@ -772,7 +761,7 @@ LIBTOOL='$(SHELL) ../libtool'\n test \"$AR\" || AR=ar\n \n echo $ac_n \"checking whether ${MAKE-make} sets \\${MAKE}\"\"... $ac_c\" 1>&6\n-echo \"configure:776: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n+echo \"configure:765: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n set dummy ${MAKE-make}; ac_make=`echo \"$2\" | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_prog_make_${ac_make}_set'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -802,7 +791,7 @@ fi\n \n # Sanity check for the cross-compilation case:\n echo $ac_n \"checking how to run the C preprocessor\"\"... $ac_c\" 1>&6\n-echo \"configure:806: checking how to run the C preprocessor\" >&5\n+echo \"configure:795: checking how to run the C preprocessor\" >&5\n # On Suns, sometimes $CPP names a directory.\n if test -n \"$CPP\" && test -d \"$CPP\"; then\n   CPP=\n@@ -817,13 +806,13 @@ else\n   # On the NeXT, cc -E runs the code through the compiler's parser,\n   # not just through cpp.\n   cat > conftest.$ac_ext <<EOF\n-#line 821 \"configure\"\n+#line 810 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:827: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:816: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -834,13 +823,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -E -traditional-cpp\"\n   cat > conftest.$ac_ext <<EOF\n-#line 838 \"configure\"\n+#line 827 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:844: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:833: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -851,13 +840,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -nologo -E\"\n   cat > conftest.$ac_ext <<EOF\n-#line 855 \"configure\"\n+#line 844 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:861: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:850: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -883,17 +872,17 @@ echo \"$ac_t\"\"$CPP\" 1>&6\n \n ac_safe=`echo \"stdio.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for stdio.h\"\"... $ac_c\" 1>&6\n-echo \"configure:887: checking for stdio.h\" >&5\n+echo \"configure:876: checking for stdio.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 892 \"configure\"\n+#line 881 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:897: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:886: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -921,20 +910,20 @@ fi\n \n \n echo $ac_n \"checking for ANSI C header files\"\"... $ac_c\" 1>&6\n-echo \"configure:925: checking for ANSI C header files\" >&5\n+echo \"configure:914: checking for ANSI C header files\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_stdc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 930 \"configure\"\n+#line 919 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <stdarg.h>\n #include <string.h>\n #include <float.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:938: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:927: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -951,7 +940,7 @@ rm -f conftest*\n if test $ac_cv_header_stdc = yes; then\n   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 955 \"configure\"\n+#line 944 \"configure\"\n #include \"confdefs.h\"\n #include <string.h>\n EOF\n@@ -969,7 +958,7 @@ fi\n if test $ac_cv_header_stdc = yes; then\n   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 973 \"configure\"\n+#line 962 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n EOF\n@@ -990,7 +979,7 @@ if test \"$cross_compiling\" = yes; then\n   :\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 994 \"configure\"\n+#line 983 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n@@ -1001,7 +990,7 @@ if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);\n exit (0); }\n \n EOF\n-if { (eval echo configure:1005: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:994: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -1025,12 +1014,12 @@ EOF\n fi\n \n echo $ac_n \"checking for posix\"\"... $ac_c\" 1>&6\n-echo \"configure:1029: checking for posix\" >&5\n+echo \"configure:1018: checking for posix\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_header_posix'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1034 \"configure\"\n+#line 1023 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <unistd.h>\n@@ -1056,12 +1045,12 @@ echo \"$ac_t\"\"$g77_cv_header_posix\" 1>&6\n # We can rely on the GNU library being posix-ish.  I guess checking the \n # header isn't actually like checking the functions, though...\n echo $ac_n \"checking for GNU library\"\"... $ac_c\" 1>&6\n-echo \"configure:1060: checking for GNU library\" >&5\n+echo \"configure:1049: checking for GNU library\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_lib_gnu'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1065 \"configure\"\n+#line 1054 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n #ifdef __GNU_LIBRARY__\n@@ -1085,12 +1074,12 @@ echo \"$ac_t\"\"$g77_cv_lib_gnu\" 1>&6\n \n # Apparently cygwin needs to be special-cased.\n echo $ac_n \"checking for cyg\\`win'32\"\"... $ac_c\" 1>&6\n-echo \"configure:1089: checking for cyg\\`win'32\" >&5\n+echo \"configure:1078: checking for cyg\\`win'32\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_sys_cygwin32'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1094 \"configure\"\n+#line 1083 \"configure\"\n #include \"confdefs.h\"\n #ifdef __CYGWIN32__\n   yes\n@@ -1113,12 +1102,12 @@ echo \"$ac_t\"\"$g77_cv_sys_cygwin32\" 1>&6\n \n # ditto for mingw32.\n echo $ac_n \"checking for mingw32\"\"... $ac_c\" 1>&6\n-echo \"configure:1117: checking for mingw32\" >&5\n+echo \"configure:1106: checking for mingw32\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_sys_mingw32'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1122 \"configure\"\n+#line 1111 \"configure\"\n #include \"confdefs.h\"\n #ifdef __MINGW32__\n   yes\n@@ -1141,12 +1130,12 @@ echo \"$ac_t\"\"$g77_cv_sys_mingw32\" 1>&6\n \n \n echo $ac_n \"checking for working const\"\"... $ac_c\" 1>&6\n-echo \"configure:1145: checking for working const\" >&5\n+echo \"configure:1134: checking for working const\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_const'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1150 \"configure\"\n+#line 1139 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -1195,7 +1184,7 @@ ccp = (char const *const *) p;\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1199: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1188: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_const=yes\n else\n@@ -1216,12 +1205,12 @@ EOF\n fi\n \n echo $ac_n \"checking for size_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1220: checking for size_t\" >&5\n+echo \"configure:1209: checking for size_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_size_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1225 \"configure\"\n+#line 1214 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -1254,12 +1243,12 @@ fi\n # Apparently positive result on cygwin loses re. NON_UNIX_STDIO\n # (as of cygwin b18). Likewise on mingw.\n echo $ac_n \"checking for fstat\"\"... $ac_c\" 1>&6\n-echo \"configure:1258: checking for fstat\" >&5\n+echo \"configure:1247: checking for fstat\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_fstat'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1263 \"configure\"\n+#line 1252 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char fstat(); below.  */\n@@ -1282,7 +1271,7 @@ fstat();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1286: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1275: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_fstat=yes\"\n else\n@@ -1302,7 +1291,7 @@ else\n fi\n \n echo $ac_n \"checking need for NON_UNIX_STDIO\"\"... $ac_c\" 1>&6\n-echo \"configure:1306: checking need for NON_UNIX_STDIO\" >&5\n+echo \"configure:1295: checking need for NON_UNIX_STDIO\" >&5\n if test $g77_cv_sys_cygwin32 = yes \\\n   || test $g77_cv_sys_mingw32 = yes \\\n   || test $ac_cv_func_fstat = no; then\n@@ -1318,12 +1307,12 @@ fi\n for ac_func in fseeko\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1322: checking for $ac_func\" >&5\n+echo \"configure:1311: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1327 \"configure\"\n+#line 1316 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1346,7 +1335,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1350: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1339: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1373,12 +1362,12 @@ done\n for ac_func in ftello\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1377: checking for $ac_func\" >&5\n+echo \"configure:1366: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1382 \"configure\"\n+#line 1371 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1401,7 +1390,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1405: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1394: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1428,12 +1417,12 @@ done\n for ac_func in ftruncate\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1432: checking for $ac_func\" >&5\n+echo \"configure:1421: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1437 \"configure\"\n+#line 1426 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1456,7 +1445,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1460: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1449: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1483,12 +1472,12 @@ done\n for ac_func in mkstemp\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1487: checking for $ac_func\" >&5\n+echo \"configure:1476: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1492 \"configure\"\n+#line 1481 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1511,7 +1500,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1515: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1504: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1538,12 +1527,12 @@ done\n for ac_func in tempnam\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1542: checking for $ac_func\" >&5\n+echo \"configure:1531: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1547 \"configure\"\n+#line 1536 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1566,7 +1555,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1570: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1559: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1593,12 +1582,12 @@ done\n for ac_func in tmpnam\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1597: checking for $ac_func\" >&5\n+echo \"configure:1586: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1602 \"configure\"\n+#line 1591 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1621,7 +1610,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1625: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1614: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1651,19 +1640,19 @@ done\n # However, on my sunos4/gcc setup unistd.h leads us wrongly to believe\n # we're posix-conformant, so always do the test.\n echo $ac_n \"checking for ansi/posix sprintf result\"\"... $ac_c\" 1>&6\n-echo \"configure:1655: checking for ansi/posix sprintf result\" >&5\n+echo \"configure:1644: checking for ansi/posix sprintf result\" >&5\n if test \"$cross_compiling\" = yes; then\n   g77_cv_sys_sprintf_ansi=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1660 \"configure\"\n+#line 1649 \"configure\"\n #include \"confdefs.h\"\n   #include <stdio.h>\n     /* does sprintf return the number of chars transferred? */\n     main () {char foo[2]; (sprintf(foo, \"1\") == 1) ? exit(0) : exit(1);}\n \n EOF\n-if { (eval echo configure:1667: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:1656: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   g77_cv_sys_sprintf_ansi=yes\n else\n@@ -1694,9 +1683,9 @@ fi\n \n # define NON_ANSI_RW_MODES on unix (can't hurt)\n echo $ac_n \"checking NON_ANSI_RW_MODES\"\"... $ac_c\" 1>&6\n-echo \"configure:1698: checking NON_ANSI_RW_MODES\" >&5\n+echo \"configure:1687: checking NON_ANSI_RW_MODES\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 1700 \"configure\"\n+#line 1689 \"configure\"\n #include \"confdefs.h\"\n #ifdef unix\n   yes\n@@ -1741,12 +1730,12 @@ EOF\n \n \n echo $ac_n \"checking for off_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1745: checking for off_t\" >&5\n+echo \"configure:1734: checking for off_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_off_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1750 \"configure\"\n+#line 1739 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS"}, {"sha": "ba32a44d233f653dcba77d569fa8c1f3b380ec31", "filename": "libf2c/libU77/config.hin", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/libf2c%2FlibU77%2Fconfig.hin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f231b5d874dcb328c5bbd73519ef7dfbe41c843/libf2c%2FlibU77%2Fconfig.hin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fconfig.hin?ref=8f231b5d874dcb328c5bbd73519ef7dfbe41c843", "patch": "@@ -1,4 +1,4 @@\n-/* config.hin.  Generated automatically from configure.in by autoheader.  */\n+/* config.hin.  Generated automatically from configure.in by autoheader 2.13.  */\n \n /* Define to empty if the keyword does not work.  */\n #undef const"}]}