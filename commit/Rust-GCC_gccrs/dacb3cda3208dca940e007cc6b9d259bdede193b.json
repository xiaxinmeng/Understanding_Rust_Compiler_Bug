{"sha": "dacb3cda3208dca940e007cc6b9d259bdede193b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFjYjNjZGEzMjA4ZGNhOTQwZTAwN2NjNmI5ZDI1OWJkZWRlMTkzYg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2007-03-12T19:38:06Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2007-03-12T19:38:06Z"}, "message": "tree-pass.h (pass_into_cfg_layout_mode, [...]): Declare.\n\n\t* tree-pass.h (pass_into_cfg_layout_mode,\n\tpass_outof_cfg_layout_mode): Declare.\n\t* cfglayout.c (into_cfg_layout_mode, outof_cfg_layout_mode,\n\tpass_into_cfg_layout_mode, pass_outof_cfg_layout_mode): New.\n\t* passes.c (pass_into_cfg_layout_mode): Schedule before jump2.\n\t(pass_outof_cfg_layout_mode): Schedule after pass_rtl_ifcvt.\n\nFrom-SVN: r122858", "tree": {"sha": "15607dc253aed0b6bf688c4fe381a3d1c758d403", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15607dc253aed0b6bf688c4fe381a3d1c758d403"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dacb3cda3208dca940e007cc6b9d259bdede193b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dacb3cda3208dca940e007cc6b9d259bdede193b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dacb3cda3208dca940e007cc6b9d259bdede193b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dacb3cda3208dca940e007cc6b9d259bdede193b/comments", "author": null, "committer": null, "parents": [{"sha": "6da4bc4e6ed62eabf3a97e58d05d94820543d9b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da4bc4e6ed62eabf3a97e58d05d94820543d9b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6da4bc4e6ed62eabf3a97e58d05d94820543d9b7"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "a9abd65661c95b90fc179a72a16c2f21cd24262c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dacb3cda3208dca940e007cc6b9d259bdede193b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dacb3cda3208dca940e007cc6b9d259bdede193b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dacb3cda3208dca940e007cc6b9d259bdede193b", "patch": "@@ -1,3 +1,12 @@\n+2007-03-12  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* tree-pass.h (pass_into_cfg_layout_mode,\n+\tpass_outof_cfg_layout_mode): Declare.\n+\t* cfglayout.c (into_cfg_layout_mode, outof_cfg_layout_mode,\n+\tpass_into_cfg_layout_mode, pass_outof_cfg_layout_mode): New.\n+\t* passes.c (pass_into_cfg_layout_mode): Schedule before jump2.\n+\t(pass_outof_cfg_layout_mode): Schedule after pass_rtl_ifcvt.\n+\n 2007-03-12  Seongbae Park <seongbae.park@gmail.com>\n \n \t* c-decl.c (warn_variable_length_array): New function."}, {"sha": "545cc5d77fcd12f238bd69be4fdaf381a230476e", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dacb3cda3208dca940e007cc6b9d259bdede193b/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dacb3cda3208dca940e007cc6b9d259bdede193b/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=dacb3cda3208dca940e007cc6b9d259bdede193b", "patch": "@@ -347,6 +347,60 @@ struct tree_opt_pass pass_insn_locators_initialize =\n   0                                     /* letter */\n };\n \n+static unsigned int\n+into_cfg_layout_mode (void)\n+{\n+  cfg_layout_initialize (0);\n+  return 0;\n+}\n+\n+static unsigned int\n+outof_cfg_layout_mode (void)\n+{\n+  basic_block bb;\n+\n+  FOR_EACH_BB (bb)\n+    if (bb->next_bb != EXIT_BLOCK_PTR)\n+      bb->aux = bb->next_bb;\n+\n+  cfg_layout_finalize ();\n+\n+  return 0;\n+}\n+\n+struct tree_opt_pass pass_into_cfg_layout_mode =\n+{\n+  \"into_cfglayout\",                     /* name */\n+  NULL,                                 /* gate */\n+  into_cfg_layout_mode,                 /* execute */\n+  NULL,                                 /* sub */\n+  NULL,                                 /* next */\n+  0,                                    /* static_pass_number */\n+  0,                                    /* tv_id */\n+  0,                                    /* properties_required */\n+  0,                                    /* properties_provided */\n+  0,                                    /* properties_destroyed */\n+  0,                                    /* todo_flags_start */\n+  TODO_dump_func,                       /* todo_flags_finish */\n+  0                                     /* letter */\n+};\n+\n+struct tree_opt_pass pass_outof_cfg_layout_mode =\n+{\n+  \"outof_cfglayout\",                    /* name */\n+  NULL,                                 /* gate */\n+  outof_cfg_layout_mode,                /* execute */\n+  NULL,                                 /* sub */\n+  NULL,                                 /* next */\n+  0,                                    /* static_pass_number */\n+  0,                                    /* tv_id */\n+  0,                                    /* properties_required */\n+  0,                                    /* properties_provided */\n+  0,                                    /* properties_destroyed */\n+  0,                                    /* todo_flags_start */\n+  TODO_dump_func,                       /* todo_flags_finish */\n+  0                                     /* letter */\n+};\n \n /* For each lexical block, set BLOCK_NUMBER to the depth at which it is\n    found in the block tree.  */"}, {"sha": "b93cc6c262f9835036af1ca9898d3e9405adeadd", "filename": "gcc/passes.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dacb3cda3208dca940e007cc6b9d259bdede193b/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dacb3cda3208dca940e007cc6b9d259bdede193b/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=dacb3cda3208dca940e007cc6b9d259bdede193b", "patch": "@@ -658,13 +658,15 @@ init_optimization_passes (void)\n       NEXT_PASS (pass_initial_value_sets);\n       NEXT_PASS (pass_unshare_all_rtl);\n       NEXT_PASS (pass_instantiate_virtual_regs);\n+      NEXT_PASS (pass_into_cfg_layout_mode);\n       NEXT_PASS (pass_jump2);\n       NEXT_PASS (pass_lower_subreg);\n       NEXT_PASS (pass_cse);\n       NEXT_PASS (pass_rtl_fwprop);\n       NEXT_PASS (pass_gcse);\n       NEXT_PASS (pass_jump_bypass);\n       NEXT_PASS (pass_rtl_ifcvt);\n+      NEXT_PASS (pass_outof_cfg_layout_mode);\n       NEXT_PASS (pass_tracer);\n       /* Perform loop optimizations.  It might be better to do them a bit\n \t sooner, but we want the profile feedback to work more"}, {"sha": "ed4fb470dfe801b8b7b3c096391e69c73e51dfc8", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dacb3cda3208dca940e007cc6b9d259bdede193b/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dacb3cda3208dca940e007cc6b9d259bdede193b/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=dacb3cda3208dca940e007cc6b9d259bdede193b", "patch": "@@ -344,6 +344,9 @@ extern struct tree_opt_pass pass_profiling;\n extern struct tree_opt_pass pass_rtl_ifcvt;\n extern struct tree_opt_pass pass_tracer;\n \n+extern struct tree_opt_pass pass_into_cfg_layout_mode;\n+extern struct tree_opt_pass pass_outof_cfg_layout_mode;\n+\n extern struct tree_opt_pass pass_loop2;\n extern struct tree_opt_pass pass_rtl_loop_init;\n extern struct tree_opt_pass pass_rtl_move_loop_invariants;"}]}