{"sha": "3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E0YzYwMGYzODllOGM1YWE2ZGNiZDZjZDE0YmQwYzU0NmFmMGJiMg==", "commit": {"author": {"name": "Jim Wilson", "email": "jimw@sifive.com", "date": "2017-12-09T03:00:57Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2017-12-09T03:00:57Z"}, "message": "Add .type and .size directives to riscv libgcc functions.\n\n\tlibgcc/\n\t* config/riscv/div.S: Use FUNC_* macros.\n\t* config/riscv/muldi3.S, config/riscv/multi3.S: Likewise\n\t* config/riscv/save-restore.S: Likewise.\n\t* config/riscv/riscv-asm.h: New.\n\nFrom-SVN: r255521", "tree": {"sha": "4e8f7c9c9c59ef7788972da4861bc26b392c6840", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e8f7c9c9c59ef7788972da4861bc26b392c6840"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/comments", "author": null, "committer": null, "parents": [{"sha": "6ba9908a0cef26f1bbe56ace4bfd0aabf731f682", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba9908a0cef26f1bbe56ace4bfd0aabf731f682", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba9908a0cef26f1bbe56ace4bfd0aabf731f682"}], "stats": {"total": 284, "additions": 182, "deletions": 102}, "files": [{"sha": "dd27fbb6b2e3a69235ee2cbc15a63eee0131502a", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2", "patch": "@@ -1,3 +1,10 @@\n+2017-12-08  Jim Wilson  <jimw@sifive.com>\n+\n+\t* config/riscv/div.S: Use FUNC_* macros.\n+\t* config/riscv/muldi3.S, config/riscv/multi3.S: Likewise\n+\t* config/riscv/save-restore.S: Likewise.\n+\t* config/riscv/riscv-asm.h: New.\n+\n 2017-11-30  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/_mulkc3.c (__mulkc3): Add forward declaration."}, {"sha": "4366c5ce1dca20424d06997a72e6f51f7b0197a8", "filename": "libgcc/config/riscv/div.S", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/libgcc%2Fconfig%2Friscv%2Fdiv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/libgcc%2Fconfig%2Friscv%2Fdiv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Friscv%2Fdiv.S?ref=3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2", "patch": "@@ -23,6 +23,8 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n+#include \"riscv-asm.h\"\n+\n   .text\n   .align 2\n \n@@ -33,18 +35,17 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n # define __divdi3 __divsi3\n # define __moddi3 __modsi3\n #else\n-  .globl __udivsi3\n-__udivsi3:\n+FUNC_BEGIN (__udivsi3)\n   /* Compute __udivdi3(a0 << 32, a1 << 32); cast result to uint32_t.  */\n   sll    a0, a0, 32\n   sll    a1, a1, 32\n   move   t0, ra\n   jal    __udivdi3\n   sext.w a0, a0\n   jr     t0\n+FUNC_END (__udivsi3)\n \n-  .globl __umodsi3\n-__umodsi3:\n+FUNC_BEGIN (__umodsi3)\n   /* Compute __udivdi3((uint32_t)a0, (uint32_t)a1); cast a1 to uint32_t.  */\n   sll    a0, a0, 32\n   sll    a1, a1, 32\n@@ -54,25 +55,22 @@ __umodsi3:\n   jal    __udivdi3\n   sext.w a0, a1\n   jr     t0\n+FUNC_END (__umodsi3)\n \n-  .globl __modsi3\n-  __modsi3 = __moddi3\n+FUNC_ALIAS (__modsi3, __moddi3)\n \n-  .globl __divsi3\n-__divsi3:\n+FUNC_BEGIN( __divsi3)\n   /* Check for special case of INT_MIN/-1. Otherwise, fall into __divdi3.  */\n   li    t0, -1\n   beq   a1, t0, .L20\n #endif\n \n-  .globl __divdi3\n-__divdi3:\n+FUNC_BEGIN (__divdi3)\n   bltz  a0, .L10\n   bltz  a1, .L11\n   /* Since the quotient is positive, fall into __udivdi3.  */\n \n-  .globl __udivdi3\n-__udivdi3:\n+FUNC_BEGIN (__udivdi3)\n   mv    a2, a1\n   mv    a1, a0\n   li    a0, -1\n@@ -96,14 +94,15 @@ __udivdi3:\n   bnez  a3, .L3\n .L5:\n   ret\n+FUNC_END (__udivdi3)\n \n-  .globl __umoddi3\n-__umoddi3:\n+FUNC_BEGIN (__umoddi3)\n   /* Call __udivdi3(a0, a1), then return the remainder, which is in a1.  */\n   move  t0, ra\n   jal   __udivdi3\n   move  a0, a1\n   jr    t0\n+FUNC_END (__umoddi3)\n \n   /* Handle negative arguments to __divdi3.  */\n .L10:\n@@ -118,9 +117,9 @@ __umoddi3:\n   jal   __udivdi3\n   neg   a0, a0\n   jr    t0\n+FUNC_END (__divdi3)\n \n-  .globl __moddi3\n-__moddi3:\n+FUNC_BEGIN (__moddi3)\n   move   t0, ra\n   bltz   a1, .L31\n   bltz   a0, .L32\n@@ -136,11 +135,13 @@ __moddi3:\n   jal    __udivdi3    /* The dividend is hella negative.  */\n   neg    a0, a1\n   jr     t0\n+FUNC_END (__moddi3)\n \n #if __riscv_xlen == 64\n   /* continuation of __divsi3 */\n .L20:\n   sll   t0, t0, 31\n   bne   a0, t0, __divdi3\n   ret\n+FUNC_END (__divsi3)\n #endif"}, {"sha": "7c07878eea9929cecf1957a2d581d7119d8be725", "filename": "libgcc/config/riscv/muldi3.S", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/libgcc%2Fconfig%2Friscv%2Fmuldi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/libgcc%2Fconfig%2Friscv%2Fmuldi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Friscv%2Fmuldi3.S?ref=3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2", "patch": "@@ -23,6 +23,8 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n+#include \"riscv-asm.h\"\n+\n   .text\n   .align 2\n \n@@ -31,8 +33,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n # define __muldi3 __mulsi3\n #endif\n \n-  .globl __muldi3\n-__muldi3:\n+FUNC_BEGIN (__muldi3)\n   mv     a2, a0\n   li     a0, 0\n .L1:\n@@ -44,3 +45,4 @@ __muldi3:\n   slli   a2, a2, 1\n   bnez   a1, .L1\n   ret\n+FUNC_END (__muldi3)"}, {"sha": "a3b89c65206b0dfb24ad8617729bbad2cd21b66b", "filename": "libgcc/config/riscv/multi3.S", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/libgcc%2Fconfig%2Friscv%2Fmulti3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/libgcc%2Fconfig%2Friscv%2Fmulti3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Friscv%2Fmulti3.S?ref=3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2", "patch": "@@ -23,6 +23,8 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n+#include \"riscv-asm.h\"\n+\n   .text\n   .align 2\n \n@@ -31,8 +33,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n # define __multi3 __muldi3\n #endif\n \n-  .globl __multi3\n-__multi3:\n+FUNC_BEGIN (__multi3)\n \n #if __riscv_xlen == 32\n /* Our RV64 64-bit routines are equivalent to our RV32 32-bit routines.  */\n@@ -79,3 +80,11 @@ __multi3:\n   mv  a0, t2\n   mv  a1, t4\n   jr  t0\n+\n+#if __riscv_xlen == 32\n+/* Our RV64 64-bit routines are equivalent to our RV32 32-bit routines.  */\n+# undef __muldi3\n+#endif\n+\n+FUNC_END (__multi3)\n+\t"}, {"sha": "fbfe5f0dbfb1ef4dd6a5d2fceeae64229d4707b3", "filename": "libgcc/config/riscv/riscv-asm.h", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/libgcc%2Fconfig%2Friscv%2Friscv-asm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/libgcc%2Fconfig%2Friscv%2Friscv-asm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Friscv%2Friscv-asm.h?ref=3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2", "patch": "@@ -0,0 +1,35 @@\n+/* Copyright (C) 2017 Free Software Foundation, Inc.\n+\n+This file is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 3, or (at your option) any\n+later version.\n+\n+This file is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#define FUNC_TYPE(X)\t.type X,@function\n+#define FUNC_SIZE(X)\t.size X,.-X\n+\n+#define FUNC_BEGIN(X)\t\t\\\n+\t.globl X;\t\t\\\n+\tFUNC_TYPE (X);\t\t\\\n+X:\n+\n+#define FUNC_END(X)\t\t\\\n+\tFUNC_SIZE(X)\n+\n+#define FUNC_ALIAS(X,Y)\t\t\\\n+\t.globl X;\t\t\\\n+\tX = Y"}, {"sha": "c2f1740f42f3412df8a8ab836cd0706cfa7c3ce6", "filename": "libgcc/config/riscv/save-restore.S", "status": "modified", "additions": 108, "deletions": 82, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/libgcc%2Fconfig%2Friscv%2Fsave-restore.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2/libgcc%2Fconfig%2Friscv%2Fsave-restore.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Friscv%2Fsave-restore.S?ref=3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2", "patch": "@@ -23,39 +23,13 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n-  .text\n+#include \"riscv-asm.h\"\n \n-  .globl __riscv_save_12\n-  .globl __riscv_save_11\n-  .globl __riscv_save_10\n-  .globl __riscv_save_9\n-  .globl __riscv_save_8\n-  .globl __riscv_save_7\n-  .globl __riscv_save_6\n-  .globl __riscv_save_5\n-  .globl __riscv_save_4\n-  .globl __riscv_save_3\n-  .globl __riscv_save_2\n-  .globl __riscv_save_1\n-  .globl __riscv_save_0\n-\n-  .globl __riscv_restore_12\n-  .globl __riscv_restore_11\n-  .globl __riscv_restore_10\n-  .globl __riscv_restore_9\n-  .globl __riscv_restore_8\n-  .globl __riscv_restore_7\n-  .globl __riscv_restore_6\n-  .globl __riscv_restore_5\n-  .globl __riscv_restore_4\n-  .globl __riscv_restore_3\n-  .globl __riscv_restore_2\n-  .globl __riscv_restore_1\n-  .globl __riscv_restore_0\n+  .text\n \n #if __riscv_xlen == 64\n \n-__riscv_save_12:\n+FUNC_BEGIN (__riscv_save_12)\n   .cfi_startproc\n   # __riscv_save_* routine use t0/x5 as return address\n   .cfi_return_column 5\n@@ -66,8 +40,8 @@ __riscv_save_12:\n   .cfi_offset 27, -104\n   j .Ls10\n \n-__riscv_save_11:\n-__riscv_save_10:\n+FUNC_BEGIN (__riscv_save_11)\n+FUNC_BEGIN (__riscv_save_10)\n   .cfi_restore 27\n   addi sp, sp, -112\n   .cfi_def_cfa_offset 112\n@@ -79,8 +53,8 @@ __riscv_save_10:\n   .cfi_offset 25, -88\n   j .Ls8\n \n-__riscv_save_9:\n-__riscv_save_8:\n+FUNC_BEGIN (__riscv_save_9)\n+FUNC_BEGIN (__riscv_save_8)\n   .cfi_restore 25\n   .cfi_restore 26\n   .cfi_restore 27\n@@ -94,8 +68,8 @@ __riscv_save_8:\n   .cfi_offset 23, -72\n   j .Ls6\n \n-__riscv_save_7:\n-__riscv_save_6:\n+FUNC_BEGIN (__riscv_save_7)\n+FUNC_BEGIN (__riscv_save_6)\n   .cfi_restore 23\n   .cfi_restore 24\n   .cfi_restore 25\n@@ -111,8 +85,8 @@ __riscv_save_6:\n   .cfi_offset 21, -56\n   j .Ls4\n \n-__riscv_save_5:\n-__riscv_save_4:\n+FUNC_BEGIN (__riscv_save_5)\n+FUNC_BEGIN (__riscv_save_4)\n   .cfi_restore 21\n   .cfi_restore 22\n   .cfi_restore 24\n@@ -133,8 +107,8 @@ __riscv_save_4:\n   .cfi_offset 19, -40\n   j .Ls2\n \n-__riscv_save_3:\n-__riscv_save_2:\n+FUNC_BEGIN (__riscv_save_3)\n+FUNC_BEGIN (__riscv_save_2)\n   .cfi_restore 19\n   .cfi_restore 20\n   .cfi_restore 21\n@@ -164,9 +138,20 @@ __riscv_save_2:\n   sub sp, sp, t1\n   jr t0\n   .cfi_endproc\n-\n-__riscv_save_1:\n-__riscv_save_0:\n+FUNC_END (__riscv_save_12)\n+FUNC_END (__riscv_save_11)\n+FUNC_END (__riscv_save_10)\n+FUNC_END (__riscv_save_9)\n+FUNC_END (__riscv_save_8)\n+FUNC_END (__riscv_save_7)\n+FUNC_END (__riscv_save_6)\n+FUNC_END (__riscv_save_5)\n+FUNC_END (__riscv_save_4)\n+FUNC_END (__riscv_save_3)\n+FUNC_END (__riscv_save_2)\n+\n+FUNC_BEGIN (__riscv_save_1)\n+FUNC_BEGIN (__riscv_save_0)\n   .cfi_startproc\n   # __riscv_save_* routine use t0/x5 as return address\n   .cfi_return_column 5\n@@ -178,8 +163,10 @@ __riscv_save_0:\n   .cfi_offset 1, -8\n   jr t0\n   .cfi_endproc\n+FUNC_END (__riscv_save_1)\n+FUNC_END (__riscv_save_0)\n \n-__riscv_restore_12:\n+FUNC_BEGIN (__riscv_restore_12)\n   .cfi_startproc\n   .cfi_def_cfa_offset 112\n   .cfi_offset 27, -104\n@@ -199,8 +186,8 @@ __riscv_restore_12:\n   .cfi_restore 27\n   addi sp, sp, 16\n \n-__riscv_restore_11:\n-__riscv_restore_10:\n+FUNC_BEGIN (__riscv_restore_11)\n+FUNC_BEGIN (__riscv_restore_10)\n   .cfi_restore 27\n   .cfi_def_cfa_offset 96\n   ld s10, 0(sp)\n@@ -209,8 +196,8 @@ __riscv_restore_10:\n   .cfi_restore 25\n   addi sp, sp, 16\n \n-__riscv_restore_9:\n-__riscv_restore_8:\n+FUNC_BEGIN (__riscv_restore_9)\n+FUNC_BEGIN (__riscv_restore_8)\n   .cfi_restore 25\n   .cfi_restore 26\n   .cfi_restore 27\n@@ -221,8 +208,8 @@ __riscv_restore_8:\n   .cfi_restore 23\n   addi sp, sp, 16\n \n-__riscv_restore_7:\n-__riscv_restore_6:\n+FUNC_BEGIN (__riscv_restore_7)\n+FUNC_BEGIN (__riscv_restore_6)\n   .cfi_restore 23\n   .cfi_restore 24\n   .cfi_restore 25\n@@ -235,8 +222,8 @@ __riscv_restore_6:\n   .cfi_restore 21\n   addi sp, sp, 16\n \n-__riscv_restore_5:\n-__riscv_restore_4:\n+FUNC_BEGIN (__riscv_restore_5)\n+FUNC_BEGIN (__riscv_restore_4)\n   .cfi_restore 21\n   .cfi_restore 22\n   .cfi_restore 23\n@@ -251,8 +238,8 @@ __riscv_restore_4:\n   .cfi_restore 19\n   addi sp, sp, 16\n \n-__riscv_restore_3:\n-__riscv_restore_2:\n+FUNC_BEGIN (__riscv_restore_3)\n+FUNC_BEGIN (__riscv_restore_2)\n   .cfi_restore 19\n   .cfi_restore 20\n   .cfi_restore 21\n@@ -269,8 +256,8 @@ __riscv_restore_2:\n   .cfi_restore 9\n   addi sp, sp, 16\n \n-__riscv_restore_1:\n-__riscv_restore_0:\n+FUNC_BEGIN (__riscv_restore_1)\n+FUNC_BEGIN (__riscv_restore_0)\n   .cfi_restore 9\n   .cfi_restore 18\n   .cfi_restore 19\n@@ -291,10 +278,23 @@ __riscv_restore_0:\n   .cfi_def_cfa_offset 0\n   ret\n   .cfi_endproc\n+FUNC_END (__riscv_restore_12)\n+FUNC_END (__riscv_restore_11)\n+FUNC_END (__riscv_restore_10)\n+FUNC_END (__riscv_restore_9)\n+FUNC_END (__riscv_restore_8)\n+FUNC_END (__riscv_restore_7)\n+FUNC_END (__riscv_restore_6)\n+FUNC_END (__riscv_restore_5)\n+FUNC_END (__riscv_restore_4)\n+FUNC_END (__riscv_restore_3)\n+FUNC_END (__riscv_restore_2)\n+FUNC_END (__riscv_restore_1)\n+FUNC_END (__riscv_restore_0)\n \n #else\n \n-__riscv_save_12:\n+FUNC_BEGIN (__riscv_save_12)\n   .cfi_startproc\n   # __riscv_save_* routine use t0/x5 as return address\n   .cfi_return_column 5\n@@ -305,10 +305,10 @@ __riscv_save_12:\n   .cfi_offset 27, -52\n   j .Ls10\n \n-__riscv_save_11:\n-__riscv_save_10:\n-__riscv_save_9:\n-__riscv_save_8:\n+FUNC_BEGIN (__riscv_save_11)\n+FUNC_BEGIN (__riscv_save_10)\n+FUNC_BEGIN (__riscv_save_9)\n+FUNC_BEGIN (__riscv_save_8)\n   .cfi_restore 27\n   addi sp, sp, -64\n   .cfi_def_cfa_offset 64\n@@ -324,10 +324,10 @@ __riscv_save_8:\n   .cfi_offset 23, -36\n   j .Ls6\n \n-__riscv_save_7:\n-__riscv_save_6:\n-__riscv_save_5:\n-__riscv_save_4:\n+FUNC_BEGIN (__riscv_save_7)\n+FUNC_BEGIN (__riscv_save_6)\n+FUNC_BEGIN (__riscv_save_5)\n+FUNC_BEGIN (__riscv_save_4)\n   .cfi_restore 23\n   .cfi_restore 24\n   .cfi_restore 25\n@@ -358,11 +358,20 @@ __riscv_save_4:\n   sub sp, sp, t1\n   jr t0\n   .cfi_endproc\n-\n-__riscv_save_3:\n-__riscv_save_2:\n-__riscv_save_1:\n-__riscv_save_0:\n+FUNC_END (__riscv_save_12)\n+FUNC_END (__riscv_save_11)\n+FUNC_END (__riscv_save_10)\n+FUNC_END (__riscv_save_9)\n+FUNC_END (__riscv_save_8)\n+FUNC_END (__riscv_save_7)\n+FUNC_END (__riscv_save_6)\n+FUNC_END (__riscv_save_5)\n+FUNC_END (__riscv_save_4)\n+\n+FUNC_BEGIN (__riscv_save_3)\n+FUNC_BEGIN (__riscv_save_2)\n+FUNC_BEGIN (__riscv_save_1)\n+FUNC_BEGIN (__riscv_save_0)\n   .cfi_startproc\n   # __riscv_save_* routine use t0/x5 as return address\n   .cfi_return_column 5\n@@ -377,8 +386,12 @@ __riscv_save_0:\n   .cfi_offset 1, -4\n   jr t0\n   .cfi_endproc\n+FUNC_END (__riscv_save_3)\n+FUNC_END (__riscv_save_2)\n+FUNC_END (__riscv_save_1)\n+FUNC_END (__riscv_save_0)\n \n-__riscv_restore_12:\n+FUNC_BEGIN (__riscv_restore_12)\n   .cfi_startproc\n   .cfi_def_cfa_offset 64\n   .cfi_offset 27, -52\n@@ -398,10 +411,10 @@ __riscv_restore_12:\n   .cfi_restore 27\n   addi sp, sp, 16\n \n-__riscv_restore_11:\n-__riscv_restore_10:\n-__riscv_restore_9:\n-__riscv_restore_8:\n+FUNC_BEGIN (__riscv_restore_11)\n+FUNC_BEGIN (__riscv_restore_10)\n+FUNC_BEGIN (__riscv_restore_9)\n+FUNC_BEGIN (__riscv_restore_8)\n   .cfi_restore 27\n   .cfi_def_cfa_offset 48\n   lw s10, 0(sp)\n@@ -414,10 +427,10 @@ __riscv_restore_8:\n   .cfi_restore 23\n   addi sp, sp, 16\n \n-__riscv_restore_7:\n-__riscv_restore_6:\n-__riscv_restore_5:\n-__riscv_restore_4:\n+FUNC_BEGIN (__riscv_restore_7)\n+FUNC_BEGIN (__riscv_restore_6)\n+FUNC_BEGIN (__riscv_restore_5)\n+FUNC_BEGIN (__riscv_restore_4)\n   .cfi_restore 23\n   .cfi_restore 24\n   .cfi_restore 25\n@@ -434,10 +447,10 @@ __riscv_restore_4:\n   .cfi_restore 19\n   addi sp, sp, 16\n \n-__riscv_restore_3:\n-__riscv_restore_2:\n-__riscv_restore_1:\n-__riscv_restore_0:\n+FUNC_BEGIN (__riscv_restore_3)\n+FUNC_BEGIN (__riscv_restore_2)\n+FUNC_BEGIN (__riscv_restore_1)\n+FUNC_BEGIN (__riscv_restore_0)\n   .cfi_restore 19\n   .cfi_restore 20\n   .cfi_restore 21\n@@ -459,5 +472,18 @@ __riscv_restore_0:\n   .cfi_def_cfa_offset 0\n   ret\n   .cfi_endproc\n+FUNC_END (__riscv_restore_12)\n+FUNC_END (__riscv_restore_11)\n+FUNC_END (__riscv_restore_10)\n+FUNC_END (__riscv_restore_9)\n+FUNC_END (__riscv_restore_8)\n+FUNC_END (__riscv_restore_7)\n+FUNC_END (__riscv_restore_6)\n+FUNC_END (__riscv_restore_5)\n+FUNC_END (__riscv_restore_4)\n+FUNC_END (__riscv_restore_3)\n+FUNC_END (__riscv_restore_2)\n+FUNC_END (__riscv_restore_1)\n+FUNC_END (__riscv_restore_0)\n \n #endif"}]}