{"sha": "de8143caadb69d37498b11dcd5c1d7ed6dd05ee7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU4MTQzY2FhZGI2OWQzNzQ5OGIxMWRjZDVjMWQ3ZWQ2ZGQwNWVlNw==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2014-12-17T16:25:30Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2014-12-17T16:25:30Z"}, "message": "Enable the array descr language hook for all DWARF versions\n\n\t* dwarf2out.c (gen_type_die_with_usage): Enable the array lang-hook\n\teven when (dwarf_version < 3 && dwarf_strict).\n\t(gen_descr_array_die): Do not output DW_AT_data_locationn,\n\tDW_AT_associated, DW_AT_allocated and DW_AT_byte_stride DWARF\n\tattributes when (dwarf_version < 3 && dwarf_strict).\n\nFrom-SVN: r218824", "tree": {"sha": "eda86e5a86e13f036c026c2eed69a3a8c777f126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eda86e5a86e13f036c026c2eed69a3a8c777f126"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de8143caadb69d37498b11dcd5c1d7ed6dd05ee7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de8143caadb69d37498b11dcd5c1d7ed6dd05ee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de8143caadb69d37498b11dcd5c1d7ed6dd05ee7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de8143caadb69d37498b11dcd5c1d7ed6dd05ee7/comments", "author": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "616743a89dcc2e240993f4cd57389963f28c1c88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/616743a89dcc2e240993f4cd57389963f28c1c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/616743a89dcc2e240993f4cd57389963f28c1c88"}], "stats": {"total": 44, "additions": 29, "deletions": 15}, "files": [{"sha": "2e76f7cacecceff19c283e6adf8d6e1fc6fbc7af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de8143caadb69d37498b11dcd5c1d7ed6dd05ee7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de8143caadb69d37498b11dcd5c1d7ed6dd05ee7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de8143caadb69d37498b11dcd5c1d7ed6dd05ee7", "patch": "@@ -1,3 +1,11 @@\n+2014-12-17  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* dwarf2out.c (gen_type_die_with_usage): Enable the array lang-hook\n+\teven when (dwarf_version < 3 && dwarf_strict).\n+\t(gen_descr_array_die): Do not output DW_AT_data_locationn,\n+\tDW_AT_associated, DW_AT_allocated and DW_AT_byte_stride DWARF\n+\tattributes when (dwarf_version < 3 && dwarf_strict).\n+\n 2014-12-17  Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \t* dwarf2out.h (enum array_descr_ordering): New."}, {"sha": "4e24f686f0aa9ec94eb71bdb933b2f19549fe714", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de8143caadb69d37498b11dcd5c1d7ed6dd05ee7/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de8143caadb69d37498b11dcd5c1d7ed6dd05ee7/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=de8143caadb69d37498b11dcd5c1d7ed6dd05ee7", "patch": "@@ -17480,15 +17480,19 @@ gen_descr_array_type_die (tree type, struct array_descr_info *info,\n \tbreak;\n       }\n \n-  if (info->data_location)\n-    add_descr_info_field (array_die, DW_AT_data_location, info->data_location,\n-\t\t\t  info->base_decl);\n-  if (info->associated)\n-    add_descr_info_field (array_die, DW_AT_associated, info->associated,\n-\t\t\t  info->base_decl);\n-  if (info->allocated)\n-    add_descr_info_field (array_die, DW_AT_allocated, info->allocated,\n-\t\t\t  info->base_decl);\n+  if (dwarf_version >= 3 || !dwarf_strict)\n+    {\n+      if (info->data_location)\n+\tadd_descr_info_field (array_die, DW_AT_data_location,\n+\t\t\t      info->data_location,\n+\t\t\t      info->base_decl);\n+      if (info->associated)\n+\tadd_descr_info_field (array_die, DW_AT_associated, info->associated,\n+\t\t\t      info->base_decl);\n+      if (info->allocated)\n+\tadd_descr_info_field (array_die, DW_AT_allocated, info->allocated,\n+\t\t\t      info->base_decl);\n+    }\n \n   add_gnat_descriptive_type_attribute (array_die, type, context_die);\n \n@@ -17519,10 +17523,13 @@ gen_descr_array_type_die (tree type, struct array_descr_info *info,\n \tadd_descr_info_field (subrange_die, DW_AT_upper_bound,\n \t\t\t      info->dimen[dim].upper_bound,\n \t\t\t      info->base_decl);\n-      if (info->dimen[dim].stride)\n-\tadd_descr_info_field (subrange_die, DW_AT_byte_stride,\n-\t\t\t      info->dimen[dim].stride,\n-\t\t\t      info->base_decl);\n+      if (dwarf_version >= 3 || !dwarf_strict)\n+\t{\n+\t  if (info->dimen[dim].stride)\n+\t    add_descr_info_field (subrange_die, DW_AT_byte_stride,\n+\t\t\t\t  info->dimen[dim].stride,\n+\t\t\t\t  info->base_decl);\n+\t}\n     }\n \n   gen_type_die (info->element_type, context_die);\n@@ -20120,8 +20127,7 @@ gen_type_die_with_usage (tree type, dw_die_ref context_die,\n \n   /* If this is an array type with hidden descriptor, handle it first.  */\n   if (!TREE_ASM_WRITTEN (type)\n-      && lang_hooks.types.get_array_descr_info\n-      && (dwarf_version >= 3 || !dwarf_strict))\n+      && lang_hooks.types.get_array_descr_info)\n     {\n       memset (&info, 0, sizeof (info));\n       if (lang_hooks.types.get_array_descr_info (type, &info))"}]}