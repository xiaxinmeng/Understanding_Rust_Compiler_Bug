{"sha": "03c5327857bf72ec00514b7138255aae8f18f4e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNjNTMyNzg1N2JmNzJlYzAwNTE0YjcxMzgyNTVhYWU4ZjE4ZjRlOA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2002-07-01T15:12:49Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-07-01T15:12:49Z"}, "message": "* gcc.c-torture/execute/arith-rand-ll.c: New test.\n\nFrom-SVN: r55136", "tree": {"sha": "1a62913ce8e4a664f6451e4f4b408a4507c90bbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a62913ce8e4a664f6451e4f4b408a4507c90bbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03c5327857bf72ec00514b7138255aae8f18f4e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03c5327857bf72ec00514b7138255aae8f18f4e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03c5327857bf72ec00514b7138255aae8f18f4e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03c5327857bf72ec00514b7138255aae8f18f4e8/comments", "author": null, "committer": null, "parents": [{"sha": "e34cabb3b774a5e61ebbe07ab373597863415816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34cabb3b774a5e61ebbe07ab373597863415816", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e34cabb3b774a5e61ebbe07ab373597863415816"}], "stats": {"total": 118, "additions": 118, "deletions": 0}, "files": [{"sha": "d7832d805f8efa16b3520aaee7c837040322345b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03c5327857bf72ec00514b7138255aae8f18f4e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03c5327857bf72ec00514b7138255aae8f18f4e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=03c5327857bf72ec00514b7138255aae8f18f4e8", "patch": "@@ -1,3 +1,7 @@\n+Mon Jul  1 12:51:05 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* gcc.c-torture/execute/arith-rand-ll.c: New test.\n+\n 2002-07-01  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* gcc.dg/cpp/trad/escaped-nl.c: New test."}, {"sha": "d5791ec330383720a34b59f130be615e15839544", "filename": "gcc/testsuite/gcc.c-torture/execute/arith-rand-ll.c", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03c5327857bf72ec00514b7138255aae8f18f4e8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Farith-rand-ll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03c5327857bf72ec00514b7138255aae8f18f4e8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Farith-rand-ll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Farith-rand-ll.c?ref=03c5327857bf72ec00514b7138255aae8f18f4e8", "patch": "@@ -0,0 +1,114 @@\n+long long\n+simple_rand ()\n+{\n+  static unsigned long long seed = 47114711;\n+  unsigned long long this = seed * 1103515245 + 12345;\n+  seed = this;\n+  return this >> 8;\n+}\n+\n+unsigned long long int\n+random_bitstring ()\n+{\n+  unsigned long long int x;\n+  int n_bits;\n+  long long ran;\n+  int tot_bits = 0;\n+\n+  x = 0;\n+  for (;;)\n+    {\n+      ran = simple_rand ();\n+      n_bits = (ran >> 1) % 16;\n+      tot_bits += n_bits;\n+\n+      if (n_bits == 0)\n+\treturn x;\n+      else\n+\t{\n+\t  x <<= n_bits;\n+\t  if (ran & 1)\n+\t    x |= (1 << n_bits) - 1;\n+\n+\t  if (tot_bits > 8 * sizeof (long long) + 6)\n+\t    return x;\n+\t}\n+    }\n+}\n+\n+#define ABS(x) ((x) >= 0 ? (x) : -(x))\n+\n+main ()\n+{\n+  long long int i;\n+\n+  for (i = 0; i < 10000; i++)\n+    {\n+      unsigned long long x, y;\n+      x = random_bitstring ();\n+      y = random_bitstring ();\n+\n+      if (sizeof (int) == sizeof (long long))\n+\tgoto save_time;\n+\n+      { unsigned long long xx = x, yy = y, r1, r2;\n+\tif (yy == 0) continue;\n+\tr1 = xx / yy;\n+\tr2 = xx % yy;\n+\tif (r2 >= yy || r1 * yy + r2 != xx)\n+\t  abort ();\n+      }\n+      { signed long long xx = x, yy = y, r1, r2;\n+\tif ((unsigned long long) xx << 1 == 0 && yy == -1)\n+\t  continue;\n+\tr1 = xx / yy;\n+\tr2 = xx % yy;\n+\tif (ABS (r2) >= (unsigned long long) ABS (yy) || (signed long long) (r1 * yy + r2) != xx)\n+\t  abort ();\n+      }\n+    save_time:\n+      { unsigned int xx = x, yy = y, r1, r2;\n+\tif (yy == 0) continue;\n+\tr1 = xx / yy;\n+\tr2 = xx % yy;\n+\tif (r2 >= yy || r1 * yy + r2 != xx)\n+\t  abort ();\n+      }\n+      { signed int xx = x, yy = y, r1, r2;\n+\tif ((unsigned int) xx << 1 == 0 && yy == -1)\n+\t  continue;\n+\tr1 = xx / yy;\n+\tr2 = xx % yy;\n+\tif (ABS (r2) >= (unsigned int) ABS (yy) || (signed int) (r1 * yy + r2) != xx)\n+\t  abort ();\n+      }\n+      { unsigned short xx = x, yy = y, r1, r2;\n+\tif (yy == 0) continue;\n+\tr1 = xx / yy;\n+\tr2 = xx % yy;\n+\tif (r2 >= yy || r1 * yy + r2 != xx)\n+\t  abort ();\n+      }\n+      { signed short xx = x, yy = y, r1, r2;\n+\tr1 = xx / yy;\n+\tr2 = xx % yy;\n+\tif (ABS (r2) >= (unsigned short) ABS (yy) || (signed short) (r1 * yy + r2) != xx)\n+\t  abort ();\n+      }\n+      { unsigned char xx = x, yy = y, r1, r2;\n+\tif (yy == 0) continue;\n+\tr1 = xx / yy;\n+\tr2 = xx % yy;\n+\tif (r2 >= yy || r1 * yy + r2 != xx)\n+\t  abort ();\n+      }\n+      { signed char xx = x, yy = y, r1, r2;\n+\tr1 = xx / yy;\n+\tr2 = xx % yy;\n+\tif (ABS (r2) >= (unsigned char) ABS (yy) || (signed char) (r1 * yy + r2) != xx)\n+\t  abort ();\n+      }\n+    }\n+\n+  exit (0);\n+}"}]}