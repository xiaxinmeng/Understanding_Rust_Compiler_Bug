{"sha": "487e299ba6e4f2ce394789ba58573e2e9ea59b45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg3ZTI5OWJhNmU0ZjJjZTM5NDc4OWJhNTg1NzNlMmU5ZWE1OWI0NQ==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2008-11-14T14:51:38Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2008-11-14T14:51:38Z"}, "message": "re PR bootstrap/38014 (in-tree gmp and mpfr libraries no longer work)\n\n\tPR bootstrap/38014\n\tPR bootstrap/37923\n\n\tRevert:\n\n\t2008-10-24  Daniel Jacobowitz  <dan@codesourcery.com>\n\n\t* Makefile.tpl (HOST_EXPORTS): Correct CPPFLAGS typo.\n\t* Makefile.in: Regenerated.\n\n\t2008-10-22  Daniel Jacobowitz  <dan@codesourcery.com>\n\n\t* Makefile.def (flags_to_pass): Add CPPFLAGS_FOR_BUILD and CPPFLAGS.\n\t* Makefile.tpl (BUILD_EXPORTS): Set CPPFLAGS.\n\t(EXTRA_BUILD_FLAGS): Correct typo.  Pass CPPFLAGS.\n\t(HOST_EXPORTS): Pass CPPFLAGS.\n\t(CPPFLAGS_FOR_BUILD, CPPFLAGS, CPPFLAGS_FOR_TARGET): Define.\n\t(LDFLAGS_FOR_TARGET): Initialize from configure script.\n\t(EXTRA_TARGET_FLAGS): Set CPPFLAGS.\n\t* Makefile.in, configure: Regenerated.\n\t* configure.ac: Set CPPFLAGS_FOR_TARGET, LDFLAGS_FOR_TARGET,\n\tand CPPFLAGS_FOR_BUILD.\n\nFrom-SVN: r141859", "tree": {"sha": "2ab74a1f64de89c7c020b377485710699444a381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ab74a1f64de89c7c020b377485710699444a381"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/487e299ba6e4f2ce394789ba58573e2e9ea59b45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/487e299ba6e4f2ce394789ba58573e2e9ea59b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/487e299ba6e4f2ce394789ba58573e2e9ea59b45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/487e299ba6e4f2ce394789ba58573e2e9ea59b45/comments", "author": null, "committer": null, "parents": [{"sha": "f93bc6f57ce8790ae0af00072254e47eb29cbb11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f93bc6f57ce8790ae0af00072254e47eb29cbb11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f93bc6f57ce8790ae0af00072254e47eb29cbb11"}], "stats": {"total": 77, "additions": 35, "deletions": 42}, "files": [{"sha": "f0db954c5bc3ad98747b8aa129f76e274cc14da3", "filename": "ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487e299ba6e4f2ce394789ba58573e2e9ea59b45/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487e299ba6e4f2ce394789ba58573e2e9ea59b45/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=487e299ba6e4f2ce394789ba58573e2e9ea59b45", "patch": "@@ -1,3 +1,33 @@\n+2008-11-14  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\tPR bootstrap/38014\n+\tPR bootstrap/37923\n+\n+\tRevert:\n+\n+\t2008-10-24  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* Makefile.tpl (HOST_EXPORTS): Correct CPPFLAGS typo.\n+\t* Makefile.in: Regenerated.\n+\n+\t2008-10-22  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\tPR gdb/921\n+\tPR gdb/1646\n+\tPR gdb/2175\n+\tPR gdb/2176\n+\n+\t* Makefile.def (flags_to_pass): Add CPPFLAGS_FOR_BUILD and CPPFLAGS.\n+\t* Makefile.tpl (BUILD_EXPORTS): Set CPPFLAGS.\n+\t(EXTRA_BUILD_FLAGS): Correct typo.  Pass CPPFLAGS.\n+\t(HOST_EXPORTS): Pass CPPFLAGS.\n+\t(CPPFLAGS_FOR_BUILD, CPPFLAGS, CPPFLAGS_FOR_TARGET): Define.\n+\t(LDFLAGS_FOR_TARGET): Initialize from configure script.\n+\t(EXTRA_TARGET_FLAGS): Set CPPFLAGS.\n+\t* Makefile.in, configure: Regenerated.\n+\t* configure.ac: Set CPPFLAGS_FOR_TARGET, LDFLAGS_FOR_TARGET,\n+\tand CPPFLAGS_FOR_BUILD.\n+\n 2008-11-06  Jeff Law <law@redhat.com>\n \n \t* MAINTAINERS: Add myself as middle end maintainer."}, {"sha": "b5e38151e3add7d4b9b5056d635dfe9189380ffe", "filename": "Makefile.def", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487e299ba6e4f2ce394789ba58573e2e9ea59b45/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487e299ba6e4f2ce394789ba58573e2e9ea59b45/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=487e299ba6e4f2ce394789ba58573e2e9ea59b45", "patch": "@@ -218,7 +218,6 @@ flags_to_pass = { flag= target_alias ; };\n flags_to_pass = { flag= BISON ; };\n flags_to_pass = { flag= CC_FOR_BUILD ; };\n flags_to_pass = { flag= CFLAGS_FOR_BUILD ; };\n-flags_to_pass = { flag= CPPFLAGS_FOR_BUILD ; };\n flags_to_pass = { flag= CXX_FOR_BUILD ; };\n flags_to_pass = { flag= EXPECT ; };\n flags_to_pass = { flag= FLEX ; };\n@@ -243,7 +242,6 @@ flags_to_pass = { flag= BOOT_ADAFLAGS ; optional=true ; };\n flags_to_pass = { flag= BOOT_CFLAGS ; };\n flags_to_pass = { flag= BOOT_LDFLAGS ; };\n flags_to_pass = { flag= CFLAGS ; };\n-flags_to_pass = { flag= CPPFLAGS ; };\n flags_to_pass = { flag= CXXFLAGS ; };\n flags_to_pass = { flag= LDFLAGS ; };\n flags_to_pass = { flag= LIBCFLAGS ; };"}, {"sha": "0f235fd740cf50096c66112c2c2bf91e9c9270af", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487e299ba6e4f2ce394789ba58573e2e9ea59b45/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487e299ba6e4f2ce394789ba58573e2e9ea59b45/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=487e299ba6e4f2ce394789ba58573e2e9ea59b45", "patch": "@@ -137,7 +137,6 @@ BUILD_EXPORTS = \\\n \tCC=\"$(CC_FOR_BUILD)\"; export CC; \\\n \tCFLAGS=\"$(CFLAGS_FOR_BUILD)\"; export CFLAGS; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n-\tCPPFLAGS=\"$(CPPFLAGS_FOR_BUILD)\"; export CPPFLAGS; \\\n \tCXX=\"$(CXX_FOR_BUILD)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS_FOR_BUILD)\"; export CXXFLAGS; \\\n \tGCJ=\"$(GCJ_FOR_BUILD)\"; export GCJ; \\\n@@ -151,10 +150,9 @@ BUILD_EXPORTS = \\\n \tWINDMC=\"$(WINDMC_FOR_BUILD)\"; export WINDMC;\n \n # These variables must be set on the make command line for directories\n-# built for the build system to override those in BASE_FLAGS_TO_PASS.\n+# built for the build system to override those in BASE_FLAGS_TO_PASSS.\n EXTRA_BUILD_FLAGS = \\\n \tCFLAGS=\"$(CFLAGS_FOR_BUILD)\" \\\n-\tCPPFLAGS=\"$(CPPFLAGS_FOR_BUILD)\" \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"\n \n # This is the list of directories to built for the host system.\n@@ -174,7 +172,6 @@ HOST_EXPORTS = \\\n \tADA_CFLAGS=\"$(ADA_CFLAGS)\"; export ADA_CFLAGS; \\\n \tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n-\tCPPFLAGS=\"$(CPPFLAGS)\"; export CPPFLAGS; \\\n \tCXX=\"$(CXX)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n \tAR=\"$(AR)\"; export AR; \\\n@@ -290,7 +287,6 @@ AR_FOR_BUILD = @AR_FOR_BUILD@\n AS_FOR_BUILD = @AS_FOR_BUILD@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n-CPPFLAGS_FOR_BUILD = @CPPFLAGS_FOR_BUILD@\n CXXFLAGS_FOR_BUILD = @CXXFLAGS_FOR_BUILD@\n CXX_FOR_BUILD = @CXX_FOR_BUILD@\n DLLTOOL_FOR_BUILD = @DLLTOOL_FOR_BUILD@\n@@ -352,7 +348,6 @@ GNATBIND = @GNATBIND@\n GNATMAKE = @GNATMAKE@\n \n CFLAGS = @CFLAGS@\n-CPPFLAGS = @CPPFLAGS@\n LDFLAGS = @LDFLAGS@\n LIBCFLAGS = $(CFLAGS)\n CXXFLAGS = @CXXFLAGS@\n@@ -416,14 +411,13 @@ COMPILER_LD_FOR_TARGET=@COMPILER_LD_FOR_TARGET@\n COMPILER_NM_FOR_TARGET=@COMPILER_NM_FOR_TARGET@\n \n CFLAGS_FOR_TARGET = @CFLAGS_FOR_TARGET@\n-CPPFLAGS_FOR_TARGET = @CPPFLAGS_FOR_TARGET@\n CXXFLAGS_FOR_TARGET = @CXXFLAGS_FOR_TARGET@\n SYSROOT_CFLAGS_FOR_TARGET = @SYSROOT_CFLAGS_FOR_TARGET@\n DEBUG_PREFIX_CFLAGS_FOR_TARGET = @DEBUG_PREFIX_CFLAGS_FOR_TARGET@\n \n LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n-LDFLAGS_FOR_TARGET = @LDFLAGS_FOR_TARGET@\n+LDFLAGS_FOR_TARGET = \n \n # ------------------------------------\n # Miscellaneous targets and flag lists\n@@ -533,7 +527,6 @@ BASE_FLAGS_TO_PASS = \\\n \t\"BISON=$(BISON)\" \\\n \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n-\t\"CPPFLAGS_FOR_BUILD=$(CPPFLAGS_FOR_BUILD)\" \\\n \t\"CXX_FOR_BUILD=$(CXX_FOR_BUILD)\" \\\n \t\"EXPECT=$(EXPECT)\" \\\n \t\"FLEX=$(FLEX)\" \\\n@@ -556,7 +549,6 @@ BASE_FLAGS_TO_PASS = \\\n \t\"BOOT_CFLAGS=$(BOOT_CFLAGS)\" \\\n \t\"BOOT_LDFLAGS=$(BOOT_LDFLAGS)\" \\\n \t\"CFLAGS=$(CFLAGS)\" \\\n-\t\"CPPFLAGS=$(CPPFLAGS)\" \\\n \t\"CXXFLAGS=$(CXXFLAGS)\" \\\n \t\"LDFLAGS=$(LDFLAGS)\" \\\n \t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n@@ -647,7 +639,6 @@ EXTRA_TARGET_FLAGS = \\\n \t'AS=$(COMPILER_AS_FOR_TARGET)' \\\n \t'CC=$$(CC_FOR_TARGET)' \\\n \t'CFLAGS=$$(CFLAGS_FOR_TARGET) $(SYSROOT_CFLAGS_FOR_TARGET) $(DEBUG_PREFIX_CFLAGS_FOR_TARGET)' \\\n-\t'CPPFLAGS=$$(CPPFLAGS_FOR_TARGET)' \\\n \t'CXX=$$(CXX_FOR_TARGET)' \\\n \t'CXXFLAGS=$$(CXXFLAGS_FOR_TARGET) $(SYSROOT_CFLAGS_FOR_TARGET) $(DEBUG_PREFIX_CFLAGS_FOR_TARGET)' \\\n \t'DLLTOOL=$$(DLLTOOL_FOR_TARGET)' \\"}, {"sha": "f654fb3df56bc63049daa414467a1871f8385d5d", "filename": "Makefile.tpl", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487e299ba6e4f2ce394789ba58573e2e9ea59b45/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487e299ba6e4f2ce394789ba58573e2e9ea59b45/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=487e299ba6e4f2ce394789ba58573e2e9ea59b45", "patch": "@@ -140,7 +140,6 @@ BUILD_EXPORTS = \\\n \tCC=\"$(CC_FOR_BUILD)\"; export CC; \\\n \tCFLAGS=\"$(CFLAGS_FOR_BUILD)\"; export CFLAGS; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n-\tCPPFLAGS=\"$(CPPFLAGS_FOR_BUILD)\"; export CPPFLAGS; \\\n \tCXX=\"$(CXX_FOR_BUILD)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS_FOR_BUILD)\"; export CXXFLAGS; \\\n \tGCJ=\"$(GCJ_FOR_BUILD)\"; export GCJ; \\\n@@ -154,10 +153,9 @@ BUILD_EXPORTS = \\\n \tWINDMC=\"$(WINDMC_FOR_BUILD)\"; export WINDMC;\n \n # These variables must be set on the make command line for directories\n-# built for the build system to override those in BASE_FLAGS_TO_PASS.\n+# built for the build system to override those in BASE_FLAGS_TO_PASSS.\n EXTRA_BUILD_FLAGS = \\\n \tCFLAGS=\"$(CFLAGS_FOR_BUILD)\" \\\n-\tCPPFLAGS=\"$(CPPFLAGS_FOR_BUILD)\" \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"\n \n # This is the list of directories to built for the host system.\n@@ -177,7 +175,6 @@ HOST_EXPORTS = \\\n \tADA_CFLAGS=\"$(ADA_CFLAGS)\"; export ADA_CFLAGS; \\\n \tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n-\tCPPFLAGS=\"$(CPPFLAGS)\"; export CPPFLAGS; \\\n \tCXX=\"$(CXX)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n \tAR=\"$(AR)\"; export AR; \\\n@@ -293,7 +290,6 @@ AR_FOR_BUILD = @AR_FOR_BUILD@\n AS_FOR_BUILD = @AS_FOR_BUILD@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n-CPPFLAGS_FOR_BUILD = @CPPFLAGS_FOR_BUILD@\n CXXFLAGS_FOR_BUILD = @CXXFLAGS_FOR_BUILD@\n CXX_FOR_BUILD = @CXX_FOR_BUILD@\n DLLTOOL_FOR_BUILD = @DLLTOOL_FOR_BUILD@\n@@ -355,7 +351,6 @@ GNATBIND = @GNATBIND@\n GNATMAKE = @GNATMAKE@\n \n CFLAGS = @CFLAGS@\n-CPPFLAGS = @CPPFLAGS@\n LDFLAGS = @LDFLAGS@\n LIBCFLAGS = $(CFLAGS)\n CXXFLAGS = @CXXFLAGS@\n@@ -419,14 +414,13 @@ COMPILER_LD_FOR_TARGET=@COMPILER_LD_FOR_TARGET@\n COMPILER_NM_FOR_TARGET=@COMPILER_NM_FOR_TARGET@\n \n CFLAGS_FOR_TARGET = @CFLAGS_FOR_TARGET@\n-CPPFLAGS_FOR_TARGET = @CPPFLAGS_FOR_TARGET@\n CXXFLAGS_FOR_TARGET = @CXXFLAGS_FOR_TARGET@\n SYSROOT_CFLAGS_FOR_TARGET = @SYSROOT_CFLAGS_FOR_TARGET@\n DEBUG_PREFIX_CFLAGS_FOR_TARGET = @DEBUG_PREFIX_CFLAGS_FOR_TARGET@\n \n LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n-LDFLAGS_FOR_TARGET = @LDFLAGS_FOR_TARGET@\n+LDFLAGS_FOR_TARGET = \n \n # ------------------------------------\n # Miscellaneous targets and flag lists\n@@ -533,7 +527,6 @@ EXTRA_TARGET_FLAGS = \\\n \t'AS=$(COMPILER_AS_FOR_TARGET)' \\\n \t'CC=$$(CC_FOR_TARGET)' \\\n \t'CFLAGS=$$(CFLAGS_FOR_TARGET) $(SYSROOT_CFLAGS_FOR_TARGET) $(DEBUG_PREFIX_CFLAGS_FOR_TARGET)' \\\n-\t'CPPFLAGS=$$(CPPFLAGS_FOR_TARGET)' \\\n \t'CXX=$$(CXX_FOR_TARGET)' \\\n \t'CXXFLAGS=$$(CXXFLAGS_FOR_TARGET) $(SYSROOT_CFLAGS_FOR_TARGET) $(DEBUG_PREFIX_CFLAGS_FOR_TARGET)' \\\n \t'DLLTOOL=$$(DLLTOOL_FOR_TARGET)' \\"}, {"sha": "76166f725eeb88c7ed4261739dc8f7f60e256288", "filename": "configure", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487e299ba6e4f2ce394789ba58573e2e9ea59b45/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487e299ba6e4f2ce394789ba58573e2e9ea59b45/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=487e299ba6e4f2ce394789ba58573e2e9ea59b45", "patch": "@@ -272,7 +272,7 @@ PACKAGE_STRING=\n PACKAGE_BUGREPORT=\n \n ac_unique_file=\"move-if-change\"\n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS TOPLEVEL_CONFIGURE_ARGUMENTS build build_cpu build_vendor build_os build_noncanonical host_noncanonical target_noncanonical host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA LN LN_S build_libsubdir build_subdir host_subdir target_subdir CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT CXX CXXFLAGS ac_ct_CXX GNATBIND ac_ct_GNATBIND GNATMAKE ac_ct_GNATMAKE do_compare gmplibs gmpinc ppllibs pplinc clooglibs clooginc stage1_languages SYSROOT_CFLAGS_FOR_TARGET DEBUG_PREFIX_CFLAGS_FOR_TARGET CFLAGS_FOR_TARGET CXXFLAGS_FOR_TARGET CPPFLAGS_FOR_TARGET LDFLAGS_FOR_TARGET RPATH_ENVVAR GCC_SHLIB_SUBDIR tooldir build_tooldir CONFIGURE_GDB_TK GDB_TK INSTALL_GDB_TK build_configargs build_configdirs host_configargs configdirs target_configargs AR_FOR_BUILD AS_FOR_BUILD CC_FOR_BUILD CFLAGS_FOR_BUILD CPPFLAGS_FOR_BUILD CXXFLAGS_FOR_BUILD CXX_FOR_BUILD DLLTOOL_FOR_BUILD GCJ_FOR_BUILD GFORTRAN_FOR_BUILD LDFLAGS_FOR_BUILD LD_FOR_BUILD NM_FOR_BUILD RANLIB_FOR_BUILD WINDMC_FOR_BUILD WINDRES_FOR_BUILD config_shell YACC BISON M4 LEX FLEX MAKEINFO EXPECT RUNTEST AR AS DLLTOOL LD LIPO NM RANLIB STRIP WINDRES WINDMC OBJCOPY OBJDUMP CC_FOR_TARGET CXX_FOR_TARGET GCC_FOR_TARGET GCJ_FOR_TARGET GFORTRAN_FOR_TARGET AR_FOR_TARGET AS_FOR_TARGET DLLTOOL_FOR_TARGET LD_FOR_TARGET LIPO_FOR_TARGET NM_FOR_TARGET OBJDUMP_FOR_TARGET RANLIB_FOR_TARGET STRIP_FOR_TARGET WINDRES_FOR_TARGET WINDMC_FOR_TARGET RAW_CXX_FOR_TARGET FLAGS_FOR_TARGET COMPILER_AS_FOR_TARGET COMPILER_LD_FOR_TARGET COMPILER_NM_FOR_TARGET MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT stage1_cflags stage1_checking stage2_werror_flag datarootdir docdir pdfdir htmldir LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS TOPLEVEL_CONFIGURE_ARGUMENTS build build_cpu build_vendor build_os build_noncanonical host_noncanonical target_noncanonical host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA LN LN_S build_libsubdir build_subdir host_subdir target_subdir CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT CXX CXXFLAGS ac_ct_CXX GNATBIND ac_ct_GNATBIND GNATMAKE ac_ct_GNATMAKE do_compare gmplibs gmpinc ppllibs pplinc clooglibs clooginc stage1_languages SYSROOT_CFLAGS_FOR_TARGET DEBUG_PREFIX_CFLAGS_FOR_TARGET CFLAGS_FOR_TARGET CXXFLAGS_FOR_TARGET RPATH_ENVVAR GCC_SHLIB_SUBDIR tooldir build_tooldir CONFIGURE_GDB_TK GDB_TK INSTALL_GDB_TK build_configargs build_configdirs host_configargs configdirs target_configargs AR_FOR_BUILD AS_FOR_BUILD CC_FOR_BUILD CFLAGS_FOR_BUILD CXXFLAGS_FOR_BUILD CXX_FOR_BUILD DLLTOOL_FOR_BUILD GCJ_FOR_BUILD GFORTRAN_FOR_BUILD LDFLAGS_FOR_BUILD LD_FOR_BUILD NM_FOR_BUILD RANLIB_FOR_BUILD WINDMC_FOR_BUILD WINDRES_FOR_BUILD config_shell YACC BISON M4 LEX FLEX MAKEINFO EXPECT RUNTEST AR AS DLLTOOL LD LIPO NM RANLIB STRIP WINDRES WINDMC OBJCOPY OBJDUMP CC_FOR_TARGET CXX_FOR_TARGET GCC_FOR_TARGET GCJ_FOR_TARGET GFORTRAN_FOR_TARGET AR_FOR_TARGET AS_FOR_TARGET DLLTOOL_FOR_TARGET LD_FOR_TARGET LIPO_FOR_TARGET NM_FOR_TARGET OBJDUMP_FOR_TARGET RANLIB_FOR_TARGET STRIP_FOR_TARGET WINDRES_FOR_TARGET WINDMC_FOR_TARGET RAW_CXX_FOR_TARGET FLAGS_FOR_TARGET COMPILER_AS_FOR_TARGET COMPILER_LD_FOR_TARGET COMPILER_NM_FOR_TARGET MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT stage1_cflags stage1_checking stage2_werror_flag datarootdir docdir pdfdir htmldir LIBOBJS LTLIBOBJS'\n ac_subst_files='serialization_dependencies host_makefile_frag target_makefile_frag alphaieee_frag ospace_frag'\n ac_pwd=`pwd`\n \n@@ -5537,12 +5537,6 @@ if test \"x$CXXFLAGS_FOR_TARGET\" = x; then\n fi\n \n \n-# Other target tools.\n-CPPFLAGS_FOR_TARGET=${CPPFLAGS_FOR_TARGET-${CPPFLAGS}}\n-\n-LDFLAGS_FOR_TARGET=${LDFLAGS_FOR_TARGET-${LDFLAGS}}\n-\n-\n # Handle --with-headers=XXX.  If the value is not \"yes\", the contents of\n # the named directory are copied to $(tooldir)/sys-include.\n if test x\"${with_headers}\" != x && test x\"${with_headers}\" != xno ; then\n@@ -6292,7 +6286,6 @@ esac\n # our build compiler if desired.\n if test x\"${build}\" = x\"${host}\" ; then\n   CFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD-${CFLAGS}}\n-  CPPFLAGS_FOR_BUILD=${CPPFLAGS_FOR_BUILD-${CPPFLAGS}}\n   CXXFLAGS_FOR_BUILD=${CXXFLAGS_FOR_BUILD-${CXXFLAGS}}\n   LDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-${LDFLAGS}}\n fi\n@@ -6371,7 +6364,6 @@ done\n \n \n \n-\n # Generate default definitions for YACC, M4, LEX and other programs that run\n # on the build machine.  These are used if the Makefile can't locate these\n # programs in objdir.\n@@ -13244,8 +13236,6 @@ s,@SYSROOT_CFLAGS_FOR_TARGET@,$SYSROOT_CFLAGS_FOR_TARGET,;t t\n s,@DEBUG_PREFIX_CFLAGS_FOR_TARGET@,$DEBUG_PREFIX_CFLAGS_FOR_TARGET,;t t\n s,@CFLAGS_FOR_TARGET@,$CFLAGS_FOR_TARGET,;t t\n s,@CXXFLAGS_FOR_TARGET@,$CXXFLAGS_FOR_TARGET,;t t\n-s,@CPPFLAGS_FOR_TARGET@,$CPPFLAGS_FOR_TARGET,;t t\n-s,@LDFLAGS_FOR_TARGET@,$LDFLAGS_FOR_TARGET,;t t\n s,@RPATH_ENVVAR@,$RPATH_ENVVAR,;t t\n s,@GCC_SHLIB_SUBDIR@,$GCC_SHLIB_SUBDIR,;t t\n s,@tooldir@,$tooldir,;t t\n@@ -13262,7 +13252,6 @@ s,@AR_FOR_BUILD@,$AR_FOR_BUILD,;t t\n s,@AS_FOR_BUILD@,$AS_FOR_BUILD,;t t\n s,@CC_FOR_BUILD@,$CC_FOR_BUILD,;t t\n s,@CFLAGS_FOR_BUILD@,$CFLAGS_FOR_BUILD,;t t\n-s,@CPPFLAGS_FOR_BUILD@,$CPPFLAGS_FOR_BUILD,;t t\n s,@CXXFLAGS_FOR_BUILD@,$CXXFLAGS_FOR_BUILD,;t t\n s,@CXX_FOR_BUILD@,$CXX_FOR_BUILD,;t t\n s,@DLLTOOL_FOR_BUILD@,$DLLTOOL_FOR_BUILD,;t t"}, {"sha": "e6626b459eee0c3d1a7dbfc15a7beb820d40b508", "filename": "configure.ac", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487e299ba6e4f2ce394789ba58573e2e9ea59b45/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487e299ba6e4f2ce394789ba58573e2e9ea59b45/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=487e299ba6e4f2ce394789ba58573e2e9ea59b45", "patch": "@@ -1849,12 +1849,6 @@ if test \"x$CXXFLAGS_FOR_TARGET\" = x; then\n fi\n AC_SUBST(CXXFLAGS_FOR_TARGET)\n \n-# Other target tools.\n-CPPFLAGS_FOR_TARGET=${CPPFLAGS_FOR_TARGET-${CPPFLAGS}}\n-AC_SUBST(CPPFLAGS_FOR_TARGET)\n-LDFLAGS_FOR_TARGET=${LDFLAGS_FOR_TARGET-${LDFLAGS}}\n-AC_SUBST(LDFLAGS_FOR_TARGET)\n-\n # Handle --with-headers=XXX.  If the value is not \"yes\", the contents of\n # the named directory are copied to $(tooldir)/sys-include.\n if test x\"${with_headers}\" != x && test x\"${with_headers}\" != xno ; then\n@@ -2595,7 +2589,6 @@ esac\n # our build compiler if desired.\n if test x\"${build}\" = x\"${host}\" ; then\n   CFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD-${CFLAGS}}\n-  CPPFLAGS_FOR_BUILD=${CPPFLAGS_FOR_BUILD-${CPPFLAGS}}\n   CXXFLAGS_FOR_BUILD=${CXXFLAGS_FOR_BUILD-${CXXFLAGS}}\n   LDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-${LDFLAGS}}\n fi\n@@ -2661,7 +2654,6 @@ AC_SUBST(AR_FOR_BUILD)\n AC_SUBST(AS_FOR_BUILD)\n AC_SUBST(CC_FOR_BUILD)\n AC_SUBST(CFLAGS_FOR_BUILD)\n-AC_SUBST(CPPFLAGS_FOR_BUILD)\n AC_SUBST(CXXFLAGS_FOR_BUILD)\n AC_SUBST(CXX_FOR_BUILD)\n AC_SUBST(DLLTOOL_FOR_BUILD)"}]}