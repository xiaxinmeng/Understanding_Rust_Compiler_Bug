{"sha": "432d4670c0457098bc6e0e70963881c232350daa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMyZDQ2NzBjMDQ1NzA5OGJjNmUwZTcwOTYzODgxYzIzMjM1MGRhYQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2016-03-11T07:47:47Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2016-03-11T07:47:47Z"}, "message": "S/390: Fix rounding for _Decimal128 to _Decimal32 conversion\n\nWe do not have a direct conversion instruction from 128 bit DFP to 32\nbit DFP so this needs to be done in two steps.  The first needs to be\ndone with the \"prepare for shorter precision rounding mode\" in order\nto produce a correct result.\n\ngcc/ChangeLog:\n\n2016-03-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/s390.md (\"trunctddd2\"): Turn former define_insn into\n\tdefine_expand.\n\t(\"*trunctddd2\"): New pattern definition.\n\t(\"trunctdsd2\"): Set prep_for_short_prec rounding mode for the\n\tTD->DD truncation.\n\ngcc/testsuite/ChangeLog:\n\n2016-03-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/dfp-1.c: New test.\n\nFrom-SVN: r234134", "tree": {"sha": "254ab4ee7a6889e3d64870fd698a290702b4a966", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/254ab4ee7a6889e3d64870fd698a290702b4a966"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/432d4670c0457098bc6e0e70963881c232350daa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/432d4670c0457098bc6e0e70963881c232350daa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/432d4670c0457098bc6e0e70963881c232350daa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/432d4670c0457098bc6e0e70963881c232350daa/comments", "author": null, "committer": null, "parents": [{"sha": "ae8e301e08b084da8e2142aa195135cae718cd70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8e301e08b084da8e2142aa195135cae718cd70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae8e301e08b084da8e2142aa195135cae718cd70"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "6e85072e916b321506512f2ece39504ac31b0ea5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432d4670c0457098bc6e0e70963881c232350daa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432d4670c0457098bc6e0e70963881c232350daa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=432d4670c0457098bc6e0e70963881c232350daa", "patch": "@@ -1,3 +1,11 @@\n+2016-03-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.md (\"trunctddd2\"): Turn former define_insn into\n+\tdefine_expand.\n+\t(\"*trunctddd2\"): New pattern definition.\n+\t(\"trunctdsd2\"): Set prep_for_short_prec rounding mode for the\n+\tTD->DD truncation.\n+\n 2016-03-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/s390.md (BFP_RND_*, DFP_RND_*): Add new constant"}, {"sha": "5a9f1c8a6066d0211b904e6937f72c0bfa182590", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432d4670c0457098bc6e0e70963881c232350daa/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432d4670c0457098bc6e0e70963881c232350daa/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=432d4670c0457098bc6e0e70963881c232350daa", "patch": "@@ -4847,12 +4847,22 @@\n ; trunctddd2 and truncddsd2 instruction pattern(s).\n ;\n \n-(define_insn \"trunctddd2\"\n+\n+(define_expand \"trunctddd2\"\n+  [(parallel\n+    [(set (match_operand:DD 0 \"register_operand\" \"\")\n+\t  (float_truncate:DD (match_operand:TD 1 \"register_operand\" \"\")))\n+     (unspec:DI [(const_int DFP_RND_CURRENT)] UNSPEC_ROUND)\n+     (clobber (scratch:TD))])]\n+  \"TARGET_HARD_DFP\")\n+\n+(define_insn \"*trunctddd2\"\n   [(set (match_operand:DD 0 \"register_operand\" \"=f\")\n \t(float_truncate:DD (match_operand:TD 1 \"register_operand\" \"f\")))\n-   (clobber (match_scratch:TD 2 \"=f\"))]\n+   (unspec:DI [(match_operand:DI 2 \"const_mask_operand\" \"I\")] UNSPEC_ROUND)\n+   (clobber (match_scratch:TD 3 \"=f\"))]\n   \"TARGET_HARD_DFP\"\n-  \"ldxtr\\t%2,0,%1,0\\;ldr\\t%0,%2\"\n+  \"ldxtr\\t%3,%2,%1,0\\;ldr\\t%0,%3\"\n   [(set_attr \"length\"  \"6\")\n    (set_attr \"type\"    \"ftruncdd\")])\n \n@@ -4868,6 +4878,7 @@\n   [(parallel\n     [(set (match_dup 3)\n \t  (float_truncate:DD (match_operand:TD 1 \"register_operand\" \"\")))\n+     (unspec:DI [(const_int DFP_RND_PREP_FOR_SHORT_PREC)] UNSPEC_ROUND)\n      (clobber (match_scratch:TD 2 \"\"))])\n    (set (match_operand:SD 0 \"register_operand\" \"\")\n \t(float_truncate:SD (match_dup 3)))]"}, {"sha": "254b6bccff37d2c658ebad8757d0fe66c584f8dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432d4670c0457098bc6e0e70963881c232350daa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432d4670c0457098bc6e0e70963881c232350daa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=432d4670c0457098bc6e0e70963881c232350daa", "patch": "@@ -1,3 +1,7 @@\n+2016-03-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/dfp-1.c: New test.\n+\n 2016-03-10  Nick Clifton  <nickc@redhat.com>\n \n \tPR target/70044"}, {"sha": "109d9fb63f8ebb013b7ea1d08ea44ac8379ba237", "filename": "gcc/testsuite/gcc.target/s390/dfp-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432d4670c0457098bc6e0e70963881c232350daa/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fdfp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432d4670c0457098bc6e0e70963881c232350daa/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fdfp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fdfp-1.c?ref=432d4670c0457098bc6e0e70963881c232350daa", "patch": "@@ -0,0 +1,23 @@\n+/* We do not have a direct conversion instruction from 128 bit DFP to\n+   32 bit DFP so this needs to be done in two steps.  The first needs\n+   to be done with the \"prepare for shorter precision rounding mode\"\n+   in order to produce a correct result.  Otherwise the 8th digit of\n+   the number will change from 4 to 5 in the first rounding step which\n+   then will turn the last digit of the 32 bit DFP number (the 3) into\n+   a 4.  Although with direct rounding it would stay a 3.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -march=z10 -mzarch\" } */\n+\n+_Decimal32 __attribute__((noinline))\n+foo (_Decimal128 a)\n+{\n+  return (_Decimal32)a;\n+}\n+\n+int\n+main ()\n+{\n+    if (foo (1.23456349999999999DL) != 1.234563DF)\n+    __builtin_abort ();\n+}"}]}