{"sha": "260f587c3a51252440b07eeaa4794bcb98332c72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYwZjU4N2MzYTUxMjUyNDQwYjA3ZWVhYTQ3OTRiY2I5ODMzMmM3Mg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-02-01T00:23:22Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-02-01T00:23:22Z"}, "message": "compiler: Don't emit multiple methods for identical unnamed structs.\n\nFrom-SVN: r195638", "tree": {"sha": "bdb7b11102b400b214f9255ea3a43456dc0c1373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdb7b11102b400b214f9255ea3a43456dc0c1373"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/260f587c3a51252440b07eeaa4794bcb98332c72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260f587c3a51252440b07eeaa4794bcb98332c72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/260f587c3a51252440b07eeaa4794bcb98332c72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260f587c3a51252440b07eeaa4794bcb98332c72/comments", "author": null, "committer": null, "parents": [{"sha": "04176553db2ed3ac4e3c455ecfd02d8994d1e930", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04176553db2ed3ac4e3c455ecfd02d8994d1e930", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04176553db2ed3ac4e3c455ecfd02d8994d1e930"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "76949828229001f1e9771510e3b1f0476ebfd66e", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260f587c3a51252440b07eeaa4794bcb98332c72/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260f587c3a51252440b07eeaa4794bcb98332c72/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=260f587c3a51252440b07eeaa4794bcb98332c72", "patch": "@@ -4170,6 +4170,11 @@ Struct_field::is_field_name(const std::string& name) const\n \n // Class Struct_type.\n \n+// A hash table used to find identical unnamed structs so that they\n+// share method tables.\n+\n+Struct_type::Identical_structs Struct_type::identical_structs;\n+\n // Traversal.\n \n int\n@@ -4596,6 +4601,21 @@ Struct_type::finalize_methods(Gogo* gogo)\n {\n   if (this->all_methods_ != NULL)\n     return;\n+\n+  // It is possible to have multiple identical structs that have\n+  // methods.  We want them to share method tables.  Otherwise we will\n+  // emit identical methods more than once, which is bad since they\n+  // will even have the same names.\n+  std::pair<Identical_structs::iterator, bool> ins =\n+    Struct_type::identical_structs.insert(std::make_pair(this, this));\n+  if (!ins.second)\n+    {\n+      // An identical struct was already entered into the hash table.\n+      // Note that finalize_methods is, fortunately, not recursive.\n+      this->all_methods_ = ins.first->second->all_methods_;\n+      return;\n+    }\n+\n   Type::finalize_methods(gogo, this, this->location_, &this->all_methods_);\n }\n "}, {"sha": "3922a634f59238c907ada6a567876b7bce08ebed", "filename": "gcc/go/gofrontend/types.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260f587c3a51252440b07eeaa4794bcb98332c72/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260f587c3a51252440b07eeaa4794bcb98332c72/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.h?ref=260f587c3a51252440b07eeaa4794bcb98332c72", "patch": "@@ -2184,6 +2184,12 @@ class Struct_type : public Type\n   do_export(Export*) const;\n \n  private:\n+  // Used to merge method sets of identical unnamed structs.\n+  typedef Unordered_map_hash(Struct_type*, Struct_type*, Type_hash_identical,\n+\t\t\t     Type_identical) Identical_structs;\n+\n+  static Identical_structs identical_structs;\n+\n   // Used to avoid infinite loops in field_reference_depth.\n   struct Saw_named_type\n   {"}]}