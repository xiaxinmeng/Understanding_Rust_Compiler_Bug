{"sha": "0393b857b1c992c941ebb1219d2ed567212587d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM5M2I4NTdiMWM5OTJjOTQxZWJiMTIxOWQyZWQ1NjcyMTI1ODdkMg==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-10-20T22:06:20Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-10-20T22:06:20Z"}, "message": "(add_to_list): Check for duplicates.\n\nFrom-SVN: r8328", "tree": {"sha": "8f344264758347b3f07a447fb40c82ae42769e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f344264758347b3f07a447fb40c82ae42769e3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0393b857b1c992c941ebb1219d2ed567212587d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0393b857b1c992c941ebb1219d2ed567212587d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0393b857b1c992c941ebb1219d2ed567212587d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0393b857b1c992c941ebb1219d2ed567212587d2/comments", "author": null, "committer": null, "parents": [{"sha": "5a841e0710d31147f7000a129bdf447d7566ec3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a841e0710d31147f7000a129bdf447d7566ec3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a841e0710d31147f7000a129bdf447d7566ec3a"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "356bad03b3ee98392b8238382e10fe33e9b6230f", "filename": "gcc/collect2.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0393b857b1c992c941ebb1219d2ed567212587d2/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0393b857b1c992c941ebb1219d2ed567212587d2/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=0393b857b1c992c941ebb1219d2ed567212587d2", "patch": "@@ -1372,16 +1372,30 @@ add_to_list (head_ptr, name)\n      struct head *head_ptr;\n      char *name;\n {\n-  struct id *newid = (struct id *) xcalloc (sizeof (*newid) + strlen (name), 1);\n+  struct id *newid\n+    = (struct id *) xcalloc (sizeof (struct id) + strlen (name), 1);\n+  struct id *p;\n   static long sequence_number = 0;\n-  newid->sequence = ++sequence_number;\n   strcpy (newid->name, name);\n \n   if (head_ptr->first)\n     head_ptr->last->next = newid;\n   else\n     head_ptr->first = newid;\n \n+  /* Check for duplicate symbols.  */\n+  for (p = head_ptr->first;\n+       strcmp (name, p->name) != 0;\n+       p = p->next)\n+    ;\n+  if (p != newid)\n+    {\n+      head_ptr->last->next = 0;\n+      free (newid);\n+      return;\n+    }\n+\n+  newid->sequence = ++sequence_number;\n   head_ptr->last = newid;\n   head_ptr->number++;\n }\n@@ -1568,9 +1582,6 @@ scan_prog_file (prog_name, which_pass)\n \t   end++)\n \tcontinue;\n \n-#ifdef COLLECT_QUALIFY_MATCH\n-      COLLECT_QUALIFY_MATCH;\n-#endif\n \n       *end = '\\0';\n       switch (is_ctor_dtor (name))"}]}