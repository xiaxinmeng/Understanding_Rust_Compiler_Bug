{"sha": "46aaf10d1e880cb340177c472ffbee1475fb59ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZhYWYxMGQxZTg4MGNiMzQwMTc3YzQ3MmZmYmVlMTQ3NWZiNTliYQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-11-04T23:30:02Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-11-04T23:30:02Z"}, "message": "[multiple changes]\n\n2001-11-04  Alan Modra  <amodra@bigpond.net.au>\n\n        * config/rs6000/rs6000.md (load_toc_aix_{si,di}): Mark r2 as used.\n\n2001-11-04  David Edelsohn  <edelsohn@gnu.org>\n\n        * config/rs6000/rs6000.c (rs6000_emit_move): Handle 64-bit\n        mode as well.  Do not explicitly create intermediate regs.\n\nFrom-SVN: r46777", "tree": {"sha": "1da15741b6a0ad59554e32cfbe4116ed5a05791b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1da15741b6a0ad59554e32cfbe4116ed5a05791b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46aaf10d1e880cb340177c472ffbee1475fb59ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46aaf10d1e880cb340177c472ffbee1475fb59ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46aaf10d1e880cb340177c472ffbee1475fb59ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46aaf10d1e880cb340177c472ffbee1475fb59ba/comments", "author": null, "committer": null, "parents": [{"sha": "5f37d07c6e08778a5e16779bc5c0c419533b47a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f37d07c6e08778a5e16779bc5c0c419533b47a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f37d07c6e08778a5e16779bc5c0c419533b47a1"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "639fb486a0ee2a2f310016dcc63621233d534869", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46aaf10d1e880cb340177c472ffbee1475fb59ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46aaf10d1e880cb340177c472ffbee1475fb59ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46aaf10d1e880cb340177c472ffbee1475fb59ba", "patch": "@@ -1,3 +1,12 @@\n+2001-11-04  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.md (load_toc_aix_{si,di}): Mark r2 as used.\n+\n+2001-11-04  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_emit_move): Handle 64-bit\n+\tmode as well.  Do not explicitly create intermediate regs.\n+\n 2001-11-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* arm/aof.h (aof_text_section, aof_data_section): Don't declare."}, {"sha": "5d0fcad4aea589f8b2487f53a15e8d47d83e6222", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46aaf10d1e880cb340177c472ffbee1475fb59ba/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46aaf10d1e880cb340177c472ffbee1475fb59ba/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=46aaf10d1e880cb340177c472ffbee1475fb59ba", "patch": "@@ -1811,17 +1811,23 @@ rs6000_emit_move (dest, source, mode)\n   if (GET_CODE (operands[0]) == MEM\n       && GET_CODE (operands[1]) == MEM\n       && mode == DImode\n-      && ! TARGET_POWERPC64\n       && (SLOW_UNALIGNED_ACCESS(DImode, MEM_ALIGN(operands[0]))\n \t  || SLOW_UNALIGNED_ACCESS(DImode, MEM_ALIGN(operands[1]))))\n     {\n-      rtx reg1, reg2;\n-      reg1 = gen_reg_rtx(SImode);\n-      reg2 = gen_reg_rtx(SImode);\n-      rs6000_emit_move (reg1, simplify_subreg (SImode, operands[1], DImode, 0), SImode);\n-      rs6000_emit_move (reg2, simplify_subreg (SImode, operands[1], DImode, 4), SImode);\n-      rs6000_emit_move (simplify_subreg (SImode, operands[0], DImode, 0), reg1, SImode);\n-      rs6000_emit_move (simplify_subreg (SImode, operands[0], DImode, 4), reg2, SImode);\n+      if (!TARGET_POWERPC64)\n+\t{\n+\t  emit_move_insn (simplify_subreg (SImode, operands[0], DImode, 0),\n+\t\t\t  simplify_subreg (SImode, operands[1], DImode, 0));\n+\t  emit_move_insn (simplify_subreg (SImode, operands[0], DImode, 4),\n+\t\t\t  simplify_subreg (SImode, operands[1], DImode, 4));\n+\t}\n+      else\n+\t{\n+\t  emit_move_insn (gen_lowpart (SImode, operands[0]),\n+\t\t\t  gen_lowpart (SImode, operands[1]));\n+\t  emit_move_insn (gen_highpart (SImode, operands[0]),\n+\t\t\t  gen_highpart (SImode, operands[1]));\n+\t}\n       return;\n     }\n   "}, {"sha": "3d13a82fa7c8cc39146e4ba4c5b74ba8c0372045", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46aaf10d1e880cb340177c472ffbee1475fb59ba/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46aaf10d1e880cb340177c472ffbee1475fb59ba/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=46aaf10d1e880cb340177c472ffbee1475fb59ba", "patch": "@@ -9077,8 +9077,9 @@\n ;; Code to initialize the TOC register...\n \n (define_insn \"load_toc_aix_si\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(const_int 0)] 7))]\n+  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t\t   (unspec:SI [(const_int 0)] 7))\n+\t      (use (reg:SI 2))])]\n   \"DEFAULT_ABI == ABI_AIX && TARGET_32BIT\"\n   \"*\n {\n@@ -9091,8 +9092,9 @@\n   [(set_attr \"type\" \"load\")])\n \n (define_insn \"load_toc_aix_di\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec:DI [(const_int 0)] 7))]\n+  [(parallel [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t\t   (unspec:DI [(const_int 0)] 7))\n+\t      (use (reg:DI 2))])]\n   \"DEFAULT_ABI == ABI_AIX && TARGET_64BIT\"\n   \"*\n {"}]}