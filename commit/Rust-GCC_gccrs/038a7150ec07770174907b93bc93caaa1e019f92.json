{"sha": "038a7150ec07770174907b93bc93caaa1e019f92", "node_id": "C_kwDOANBUbNoAKDAzOGE3MTUwZWMwNzc3MDE3NDkwN2I5M2JjOTNjYWFhMWUwMTlmOTI", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-06-22T23:40:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-06-23T19:22:05Z"}, "message": "compiler: unalias types for hash/equality functions\n\nTest case is https://go.dev/cl/413694.\n\nFixes golang/go#52846\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/413660", "tree": {"sha": "58f3a7346fb1160912a2918dd688e0a54eb316ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58f3a7346fb1160912a2918dd688e0a54eb316ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/038a7150ec07770174907b93bc93caaa1e019f92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038a7150ec07770174907b93bc93caaa1e019f92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/038a7150ec07770174907b93bc93caaa1e019f92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038a7150ec07770174907b93bc93caaa1e019f92/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b14f590e3e9d95b8211b77d992589d5ab4c25f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b14f590e3e9d95b8211b77d992589d5ab4c25f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b14f590e3e9d95b8211b77d992589d5ab4c25f0"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "629bc666dc0907ab57f12c8e7c1350c92bb59f4c", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038a7150ec07770174907b93bc93caaa1e019f92/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038a7150ec07770174907b93bc93caaa1e019f92/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=038a7150ec07770174907b93bc93caaa1e019f92", "patch": "@@ -1,4 +1,4 @@\n-77821de1a149c2e6ef9c154ae384c16292173039\n+6c3752315dc9b82d0f3f3ac646a1e7376818f84a\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "e13df0da22bbafc107fddeac4a43d472f9d4c319", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038a7150ec07770174907b93bc93caaa1e019f92/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038a7150ec07770174907b93bc93caaa1e019f92/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=038a7150ec07770174907b93bc93caaa1e019f92", "patch": "@@ -2811,7 +2811,7 @@ Specific_type_functions::type(Type* t)\n \n     case Type::TYPE_MAP:\n       {\n-\tType* key_type = t->map_type()->key_type();\n+\tType* key_type = t->map_type()->key_type()->unalias();\n \tif (key_type->needs_specific_type_functions(this->gogo_))\n \t  key_type->hash_function(this->gogo_, NULL);\n       }"}, {"sha": "39aea769eb28a129596179d2086227757f70e904", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038a7150ec07770174907b93bc93caaa1e019f92/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038a7150ec07770174907b93bc93caaa1e019f92/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=038a7150ec07770174907b93bc93caaa1e019f92", "patch": "@@ -1764,6 +1764,9 @@ Type::needs_specific_type_functions(Gogo* gogo)\n Named_object*\n Type::hash_function(Gogo* gogo, Function_type* hash_fntype)\n {\n+  if (this->named_type() != NULL)\n+    go_assert(!this->named_type()->is_alias());\n+\n   if (!this->is_comparable())\n     return NULL;\n \n@@ -2067,6 +2070,9 @@ Type::write_identity_hash(Gogo* gogo, int64_t size)\n Named_object*\n Type::equal_function(Gogo* gogo, Named_type* name, Function_type* equal_fntype)\n {\n+  if (this->named_type() != NULL)\n+    go_assert(!this->named_type()->is_alias());\n+\n   // If the unaliased type is not a named type, then the type does not\n   // have a name after all.\n   if (name != NULL)\n@@ -6700,7 +6706,8 @@ Struct_type::write_hash_function(Gogo* gogo, Function_type* hash_fntype)\n       subkey = Expression::make_cast(key_arg_type, subkey, bloc);\n \n       // Get the hash function to use for the type of this field.\n-      Named_object* hash_fn = pf->type()->hash_function(gogo, hash_fntype);\n+      Named_object* hash_fn =\n+\tpf->type()->unalias()->hash_function(gogo, hash_fntype);\n \n       // Call the hash function for the field, passing retval as the seed.\n       ref = Expression::make_temporary_reference(retval, bloc);\n@@ -7553,8 +7560,8 @@ Array_type::write_hash_function(Gogo* gogo, Function_type* hash_fntype)\n   gogo->start_block(bloc);\n \n   // Get the hash function for the element type.\n-  Named_object* hash_fn = this->element_type_->hash_function(gogo,\n-\t\t\t\t\t\t\t     hash_fntype);\n+  Named_object* hash_fn =\n+    this->element_type_->unalias()->hash_function(gogo, hash_fntype);\n \n   // Get a pointer to this element in the loop.\n   Expression* subkey = Expression::make_temporary_reference(key, bloc);\n@@ -8441,8 +8448,8 @@ Map_type::do_type_descriptor(Gogo* gogo, Named_type* name)\n   ++p;\n   go_assert(p->is_field_name(\"hasher\"));\n   Function_type* hasher_fntype = p->type()->function_type();\n-  Named_object* hasher_fn = this->key_type_->hash_function(gogo,\n-\t\t\t\t\t\t\t   hasher_fntype);\n+  Named_object* hasher_fn =\n+    this->key_type_->unalias()->hash_function(gogo, hasher_fntype);\n   if (hasher_fn == NULL)\n     vals->push_back(Expression::make_cast(hasher_fntype,\n \t\t\t\t\t  Expression::make_nil(bloc),"}]}