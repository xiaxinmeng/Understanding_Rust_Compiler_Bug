{"sha": "96f2e32fff1ec9d443e238bbeb131fc564810661", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZmMmUzMmZmZjFlYzlkNDQzZTIzOGJiZWIxMzFmYzU2NDgxMDY2MQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2005-06-16T08:43:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:43:43Z"}, "message": "osint.adb (Add_Default_Search_Dirs): Put source and object directories of project files before directories coming...\n\n2005-06-14  Vincent Celier  <celier@adacore.com>\n\n\t* osint.adb (Add_Default_Search_Dirs): Put source and object\n\tdirectories of project files before directories coming from\n\tADA_INCLUDE_PATH and ADA_OBJECTS_PATH.\n\nFrom-SVN: r101050", "tree": {"sha": "0ca065989fe67b3b08dbc86971812b71c5d761ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ca065989fe67b3b08dbc86971812b71c5d761ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96f2e32fff1ec9d443e238bbeb131fc564810661", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f2e32fff1ec9d443e238bbeb131fc564810661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96f2e32fff1ec9d443e238bbeb131fc564810661", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f2e32fff1ec9d443e238bbeb131fc564810661/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f81e6250d5aa92b49ff1aef22deae5bb7dce1d9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f81e6250d5aa92b49ff1aef22deae5bb7dce1d9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f81e6250d5aa92b49ff1aef22deae5bb7dce1d9a"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "5678a63b310bb747d42cb8fbf497d5901af54802", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f2e32fff1ec9d443e238bbeb131fc564810661/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f2e32fff1ec9d443e238bbeb131fc564810661/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=96f2e32fff1ec9d443e238bbeb131fc564810661", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -314,7 +314,7 @@ package body Osint is\n          --  For the call to Close\n \n       begin\n-         --  Construct a C compatible character string buffer.\n+         --  Construct a C compatible character string buffer\n \n          Buffer (1 .. Buffer'Last - 1) := Path_File_Name.all;\n          Buffer (Buffer'Last) := ASCII.NUL;\n@@ -409,6 +409,20 @@ package body Osint is\n       --  environment variable. Get this value, extract the directory names\n       --  and store in the tables.\n \n+      --  Check for eventual project path file env vars\n+\n+      Path_File_Name := Getenv (Project_Include_Path_File);\n+\n+      if Path_File_Name'Length > 0 then\n+         Get_Dirs_From_File (Additional_Source_Dir => True);\n+      end if;\n+\n+      Path_File_Name := Getenv (Project_Objects_Path_File);\n+\n+      if Path_File_Name'Length > 0 then\n+         Get_Dirs_From_File (Additional_Source_Dir => False);\n+      end if;\n+\n       --  On VMS, don't expand the logical name (e.g. environment variable),\n       --  just put it into Unix (e.g. canonical) format. System services\n       --  will handle the expansion as part of the file processing.\n@@ -443,21 +457,7 @@ package body Osint is\n          end loop;\n       end loop;\n \n-      --  Check for eventual project path file env vars\n-\n-      Path_File_Name := Getenv (Project_Include_Path_File);\n-\n-      if Path_File_Name'Length > 0 then\n-         Get_Dirs_From_File (Additional_Source_Dir => True);\n-      end if;\n-\n-      Path_File_Name := Getenv (Project_Objects_Path_File);\n-\n-      if Path_File_Name'Length > 0 then\n-         Get_Dirs_From_File (Additional_Source_Dir => False);\n-      end if;\n-\n-      --  For the compiler, if --RTS= was apecified, add the runtime\n+      --  For the compiler, if --RTS= was specified, add the runtime\n       --  directories.\n \n       if RTS_Src_Path_Name /= null and then"}]}