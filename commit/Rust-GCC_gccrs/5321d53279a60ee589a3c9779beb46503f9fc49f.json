{"sha": "5321d53279a60ee589a3c9779beb46503f9fc49f", "node_id": "C_kwDOANBUbNoAKDUzMjFkNTMyNzlhNjBlZTU4OWEzYzk3NzliZWI0NjUwM2Y5ZmM0OWY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-07T09:34:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-07T09:34:45Z"}, "message": "ipa-split: Don't split returns_twice functions [PR106923]\n\nAs discussed in the PR, returns_twice functions are rare/special beasts\nthat need special treatment in the cfg, and inside of their bodies\nwe don't know which part actually works the weird returns twice way\n(either in the fork/vfork sense, or in the setjmp) and aren't updating\nab edges to reflect that.\n\nI think easiest is just to never split these, like we already never\nsplit noreturn or malloc functions.\n\n2023-02-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/106923\n\t* ipa-split.cc (execute_split_functions): Don't split returns_twice\n\tfunctions.\n\n\t* gcc.dg/pr106923.c: New test.", "tree": {"sha": "1343400a88bd35eddf8f98020f273e635bcbe567", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1343400a88bd35eddf8f98020f273e635bcbe567"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5321d53279a60ee589a3c9779beb46503f9fc49f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5321d53279a60ee589a3c9779beb46503f9fc49f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5321d53279a60ee589a3c9779beb46503f9fc49f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5321d53279a60ee589a3c9779beb46503f9fc49f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cad2412cc84518195fceb2db31e82e6df7e5a2c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad2412cc84518195fceb2db31e82e6df7e5a2c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cad2412cc84518195fceb2db31e82e6df7e5a2c2"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "6730f4f9d0e314831644ab401fdfb227ec027f34", "filename": "gcc/ipa-split.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5321d53279a60ee589a3c9779beb46503f9fc49f/gcc%2Fipa-split.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5321d53279a60ee589a3c9779beb46503f9fc49f/gcc%2Fipa-split.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.cc?ref=5321d53279a60ee589a3c9779beb46503f9fc49f", "patch": "@@ -1715,10 +1715,11 @@ execute_split_functions (void)\n   struct cgraph_node *node = cgraph_node::get (current_function_decl);\n \n   if (flags_from_decl_or_type (current_function_decl)\n-      & (ECF_NORETURN|ECF_MALLOC))\n+      & (ECF_NORETURN|ECF_MALLOC|ECF_RETURNS_TWICE))\n     {\n       if (dump_file)\n-\tfprintf (dump_file, \"Not splitting: noreturn/malloc function.\\n\");\n+\tfprintf (dump_file, \"Not splitting: noreturn/malloc/returns_twice \"\n+\t\t\t    \"function.\\n\");\n       return 0;\n     }\n   if (MAIN_NAME_P (DECL_NAME (current_function_decl)))"}, {"sha": "1c89f418810c6aec2ff1c53b61b749762742e0d4", "filename": "gcc/testsuite/gcc.dg/pr106923.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5321d53279a60ee589a3c9779beb46503f9fc49f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106923.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5321d53279a60ee589a3c9779beb46503f9fc49f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106923.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106923.c?ref=5321d53279a60ee589a3c9779beb46503f9fc49f", "patch": "@@ -0,0 +1,23 @@\n+/* PR tree-optimization/106923 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -finline-small-functions -fpartial-inlining --param max-inline-insns-single=1 --param uninlined-function-insns=10000\" } */\n+\n+int n;\n+\n+int\n+baz (void);\n+\n+__attribute__ ((returns_twice)) int\n+bar (void)\n+{\n+  if (baz ())\n+    ++n;\n+\n+  return 0;\n+}\n+\n+int\n+foo (void)\n+{\n+  return bar ();\n+}"}]}