{"sha": "0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg3NGVlOWI3NjdlNzhhYjAwZjJjYzgyYWM5ZjlhY2Y4YWM5YWQ1Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:44:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:44:51Z"}, "message": "New test cases.\n\nFrom-SVN: r123612", "tree": {"sha": "6be140bfc0e292833dd07230d631e00889228318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6be140bfc0e292833dd07230d631e00889228318"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/comments", "author": null, "committer": null, "parents": [{"sha": "fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa5537cb48d7df5c01dfba4f1c3456a08d14f292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa5537cb48d7df5c01dfba4f1c3456a08d14f292"}], "stats": {"total": 837, "additions": 837, "deletions": 0}, "files": [{"sha": "c6100051ae1a0967fba52375e5f74aeebb0ffe8d", "filename": "gcc/testsuite/gnat.dg/access1.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Faccess1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Faccess1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faccess1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,22 @@\n+-- { dg-do compile }\n+\n+procedure access1 is\n+   protected Objet is\n+      procedure p;\n+   end Objet;\n+   protected body Objet is\n+      procedure p is\n+      begin\n+         null;\n+      end p;\n+   end Objet;\n+   type wrapper is record\n+      Ptr : access protected procedure := Objet.p'access;\n+   end record;\n+   It : wrapper;\n+   PP : access protected procedure;\n+begin\n+   PP := Objet.p'access;\n+   PP.all;\n+   It.Ptr.all;\n+end;"}, {"sha": "fd91dbea96ee4b3e03957c967ae6e7bb267206f4", "filename": "gcc/testsuite/gnat.dg/access2.adb", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Faccess2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Faccess2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faccess2.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,18 @@\n+-- { dg-do compile }\n+\n+procedure access2 is\n+  Arr : array (1..10) of aliased Float;\n+  type Acc is access all Float;\n+  procedure Set (X : integer) is\n+     Buffer: String (1..8);\n+     for Buffer'address use Arr (4)'address;\n+  begin\n+     Arr (X) := 31.1415;\n+  end;\n+  function Get (C : Integer) return Acc is\n+  begin\n+     return Arr (C)'access;\n+  end;\n+begin\n+   null;\n+end;"}, {"sha": "6266b725a7952be05560c14d5f9ebf9ca5107dff", "filename": "gcc/testsuite/gnat.dg/access_test.adb", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Faccess_test.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Faccess_test.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faccess_test.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,33 @@\n+-- { dg-do run }\n+\n+procedure Access_Test is\n+\n+   type T1 is tagged null record;\n+\n+   procedure Proc_1 (P : access T1'Class)  is\n+      type Ref is access T1'Class;\n+      X : Ref := new T1'Class'(P.all);  -- Should always work (no exception)\n+\n+   begin\n+      null;\n+   end;\n+\n+   procedure Proc_2 is\n+      type T2 is new T1 with null record;\n+      X2 : aliased T2;\n+\n+   begin\n+      Proc_1 (X2'access);\n+\n+      declare\n+         type T3 is new T1 with null record;\n+         X3 :  aliased T3;\n+\n+      begin\n+         Proc_1 (X3'access);\n+      end;\n+   end;\n+\n+begin\n+   Proc_2;\n+end;"}, {"sha": "256b3951be088d1058f9d5a8bc814ceca057ed83", "filename": "gcc/testsuite/gnat.dg/aggr1.adb", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Faggr1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Faggr1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,50 @@\n+-- { dg-do run }\n+\n+procedure aggr1 is\n+   package Coord is\n+      type T is private;\n+   private \n+      type T is record\n+          A, B, C : Float;\n+      end record;\n+   end Coord;\n+--\n+   generic \n+      type T is private;\n+   package gen is\n+      type Rec (Discr : Boolean := True) is record\n+         needs_update : Boolean;\n+         case Discr is\n+            when True => null;\n+            when False =>  Value : T;\n+         end case;\n+      end record;\n+   end gen;\n+--\n+   subtype Graph_Range is integer range 1..1665;\n+   type arr is array (Graph_Range) of Coord.T;\n+--\n+   package Inst is new Gen (arr);\n+--\n+   subtype Index is integer range 1 .. 1;\n+--\n+   type Graph_Node (Active : Boolean := False) is\n+      record\n+         case Active is\n+            when True =>\n+               Comp1 : Inst.Rec;\n+               Comp2 : Inst.Rec;\n+               Comp3 : Inst.Rec;\n+            when False =>\n+               Needs_Update : Boolean;\n+         end case;\n+      end record;\n+--   \n+   Null_Graph_Node : constant Graph_Node := (False, True);\n+   type Graph_Table_T is array (Index) of Graph_Node;\n+--\n+   Graph_Table   : Graph_Table_T := (others => (Null_Graph_Node));\n+   Graph_Table_1 : Graph_Table_T := (others => (False, True));\n+begin\n+   null;\n+end;"}, {"sha": "3e9dc40f8b19b96d469e58c7afabc2293fb385e0", "filename": "gcc/testsuite/gnat.dg/aggr2.adb", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Faggr2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Faggr2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr2.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,21 @@\n+-- { dg-do compile }\n+\n+procedure aggr2 is\n+   task type T_Task;\n+-- \n+   task body T_Task is begin null; end;\n+-- \n+   type Lim_Rec is record\n+      T : T_Task;\n+   end record;\n+-- \n+   generic\n+      Formal : Lim_Rec;\n+   package P_G is\n+   end P_G;\n+-- \n+   package P is new P_G (Formal => (T => <>));\n+begin\n+   null;\n+end;\n+"}, {"sha": "9f1be3c5902a0544ccfdf22feb4e48660e91e17a", "filename": "gcc/testsuite/gnat.dg/alignment2.adb", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Falignment2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Falignment2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Falignment2.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,47 @@\n+-- { dg-do run }\n+\n+procedure alignment2 is\n+   \n+   pragma COMPONENT_ALIGNMENT(STORAGE_UNIT);\n+   \n+   MAX_LIST_SIZE : constant INTEGER := 128*16;\n+   \n+   LEVEL2_SIZE : constant INTEGER := 128;\n+           \n+           LEVEL1_SIZE : constant INTEGER\n+              := (MAX_LIST_SIZE - 1) / LEVEL2_SIZE + 1;\n+           \n+           type LEVEL2_ARRAY_TYPE is\n+              array (1..LEVEL2_SIZE) of Integer;\n+           \n+           type LEVEL2_TYPE is\n+              record\n+                 NUM  : INTEGER := 0;\n+                 DATA : LEVEL2_ARRAY_TYPE := ( others => 0 );\n+              end record;\n+           \n+           type LEVEL2_PTR_TYPE is access all LEVEL2_TYPE;\n+           \n+           type LEVEL1_ARRAY_TYPE is\n+              array( 1..LEVEL1_SIZE ) of LEVEL2_PTR_TYPE;\n+           \n+           type LEVEL1_TYPE is\n+              record\n+                 LAST_LINE  : INTEGER := 0;\n+                 LEVEL2_PTR : LEVEL1_ARRAY_TYPE;\n+              end record;\n+           \n+           L1 : LEVEL1_TYPE;\n+           L2 : aliased LEVEL2_TYPE;\n+   \n+   procedure q (LA : in out LEVEL1_ARRAY_TYPE) is\n+   begin\n+      LA (1) := L2'Access;\n+   end;\n+\n+begin\n+   q (L1.LEVEL2_PTR);\n+   if L1.LEVEL2_PTR (1) /= L2'Access then\n+     raise Program_Error;\n+   end if;\n+end;"}, {"sha": "2776f5b8aaab7fafbcdc1bd8ad1b0601a2371770", "filename": "gcc/testsuite/gnat.dg/alignment3.adb", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Falignment3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Falignment3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Falignment3.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,35 @@\n+-- { dg-do compile }\n+\n+with System, Ada.Unchecked_Conversion;\n+procedure alignment3 is\n+   \n+   type Value_Type (Is_Short : Boolean) is record\n+      case Is_Short is\n+         when True =>   V : Natural;\n+         when others => A, B : Natural;\n+      end case;\n+   end record;\n+   \n+   type Link_Type (Short_Values : Boolean) is record\n+      Input, Output : Value_Type (Short_Values);\n+      Initialized : Boolean;\n+      N_Probes    : Natural;\n+   end record;\n+   \n+   type Link_Access is access Link_Type;\n+   \n+   type Natural_Access is access all Natural;\n+   function To_Natural_Access is\n+      new Ada.Unchecked_Conversion (System.Address, Natural_Access);\n+   \n+   Ptr : Natural_Access;\n+   \n+   procedure N_Probes_For (Link : Link_Access)  is\n+   begin\n+      Ptr := To_Natural_Access (Link.N_Probes'address);\n+      Ptr := To_Natural_Access (Link.Initialized'address);\n+   end;\n+\n+begin\n+   null;\n+end;"}, {"sha": "f3d32333cd946defe174f82303465e5c24b8e529", "filename": "gcc/testsuite/gnat.dg/check1.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fcheck1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fcheck1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fcheck1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,8 @@\n+-- { dg-do compile }\n+\n+package body Check1 is\n+   function FD (X : access R) return P2 is\n+   begin\n+      return P2 (X.Disc);\n+   end FD;\n+end Check1;"}, {"sha": "baeeda007a0b4bc973aee2b7cc3c2ff578263068", "filename": "gcc/testsuite/gnat.dg/check1.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fcheck1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fcheck1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fcheck1.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,6 @@\n+package Check1 is\n+   type Arr is array (Integer range <>) of Integer;\n+   type P2 is access all Arr;\n+   type R (Disc : access Arr) is limited null record;\n+   function FD (X : access R) return P2;\n+end Check1;"}, {"sha": "3ce148cf7b3a5c323f2a5dad4f117c70f6a456bf", "filename": "gcc/testsuite/gnat.dg/debug1.ads", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fdebug1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fdebug1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdebug1.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,21 @@\n+package debug1 is\n+  \n+  type Vector is array (Natural range <>) of Natural;\n+  type Vector_Access is access Vector;\n+        \n+  type Data_Line is record\n+    Length : Vector (1 .. 1);\n+    Line   : Vector_Access;\n+  end record;\n+  \n+  type Data_Block is array (1 .. 5) of Data_Line;\n+  type Data_Block_Access is access Data_Block;\n+        \n+  type Vector_Ptr is access Vector;\n+        \n+  type Meta_Data is record\n+    Vector_View : Vector_Ptr;\n+    Block_View  : Data_Block_Access;\n+  end record;\n+        \n+end;    "}, {"sha": "5740cebb5fc155e156b0df89cf8b2b97fee0d2ba", "filename": "gcc/testsuite/gnat.dg/entry_queues.adb", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fentry_queues.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fentry_queues.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fentry_queues.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,54 @@\n+-- { dg-do run }\n+-- { dg-options \"-gnatws\" }\n+\n+procedure entry_queues is\n+  F1_Poe : Integer := 18;\n+  function F1 return Integer is\n+  begin\n+    F1_Poe := F1_Poe - 1;\n+    return F1_Poe;\n+  end F1;\n+  generic\n+    type T is limited private;\n+    with function Is_Ok (X : T) return Boolean;\n+  procedure Check; \n+  procedure Check is\n+  begin\n+    declare\n+      type Poe is new T;\n+      X : Poe;\n+      Y : Poe;\n+    begin\n+      null;\n+    end;\n+    declare\n+      type Poe is new T;\n+      type Arr is array (1 .. 2) of Poe;\n+      X : Arr;\n+      B : Boolean := Is_Ok (T (X (1)));\n+    begin\n+      null; \n+    end;\n+  end;\n+  protected type Poe (D3 : Integer := F1) is\n+    entry E (D3 .. F1);    -- F1 evaluated\n+    function Is_Ok return Boolean;\n+  end Poe;\n+  protected body Poe is\n+    Entry E (for I in D3 .. F1) when True is\n+    begin\n+      null;\n+    end E;\n+    function Is_Ok return Boolean is\n+    begin\n+      return False;\n+    end Is_Ok;\n+  end Poe;\n+  function Is_Ok (C : Poe) return Boolean is\n+  begin\n+    return C.Is_Ok;\n+  end Is_Ok;\n+  procedure Chk is new Check (Poe, Is_Ok);\n+begin\n+   Chk;\n+end;"}, {"sha": "0b6ed726149722db74ea94d0239a13c48d0736d0", "filename": "gcc/testsuite/gnat.dg/equal1.ads", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fequal1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fequal1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fequal1.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,8 @@\n+package equal1 is\n+  type Basic_Connection_Status_T is (Connected, Temporary_Disconnected,\n+     Disconnected);\n+  for Basic_Connection_Status_T'Size use 8;\n+  type Application_Connection_Status_T is (Connected, Disconnected);\n+  for Application_Connection_Status_T'Size use 8;\n+end equal1;\n+"}, {"sha": "db58e284abffac136a870b5cbadcf6b38d7732d6", "filename": "gcc/testsuite/gnat.dg/ext1.ads", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fext1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fext1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fext1.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,12 @@\n+package ext1 is\n+    type I_Smiley is interface;\n+    procedure Set_Mood (Obj : out I_Smiley) is abstract;\n+--      \n+    type Smiley (Max : Positive) is abstract new I_Smiley with record\n+       S : String (1 .. Max);\n+    end record; \n+--      \n+    type Regular_Smiley is new Smiley (3) with null record; \n+    overriding\n+    procedure Set_Mood (Obj : out Regular_Smiley);\n+end ext1;"}, {"sha": "36400d53ecc2f7b480a40c436a827ce0f7b2a815", "filename": "gcc/testsuite/gnat.dg/finalized.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ffinalized.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ffinalized.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ffinalized.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do compile }\n+\n+with Ada.Finalization; use Ada.Finalization;\n+procedure finalized is\n+   type Rec is new Controlled with null record;\n+   Obj : access Rec := new Rec'(Controlled with null record);\n+begin\n+   null;\n+end;"}, {"sha": "282f46dddc8aeac6e8ebb36048d53fe6714023e8", "filename": "gcc/testsuite/gnat.dg/graphic.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fgraphic.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fgraphic.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgraphic.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,20 @@\n+-- { dg-do compile }\n+\n+with Ada.Tags.Generic_Dispatching_Constructor;\n+package body Graphic is\n+--\n+  function Dispatching_Input is new Tags.Generic_Dispatching_Constructor\n+    (T           => Object,\n+     Parameters  => Streams.Root_Stream_Type'Class,\n+    Constructor => Object'Input);\n+--\n+  function XML_Input\n+    (S : access Streams.Root_Stream_Type'Class) return Object'Class\n+  is\n+    Result : constant Object'Class :=\n+        Dispatching_Input (Tags.Internal_Tag (\" \"), S);\n+    begin\n+      return Result;\n+    end XML_Input;\n+end Graphic;\n+"}, {"sha": "a1153de649db3f44b480d1f96c3a389a9cc79e0d", "filename": "gcc/testsuite/gnat.dg/graphic.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fgraphic.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fgraphic.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgraphic.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,9 @@\n+with Ada.Streams;\n+with Ada.Tags;\n+package Graphic is\n+  use Ada;\n+--\n+  type Object is abstract tagged null record;\n+  function XML_Input (S : access Streams.Root_Stream_Type'Class)\n+     return Object'Class;\n+end Graphic;"}, {"sha": "b22b949593b9234559faca21efe647b88f159298", "filename": "gcc/testsuite/gnat.dg/interface1.adb", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Finterface1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Finterface1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finterface1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,23 @@\n+-- { dg-do run }\n+\n+with System;\n+procedure Interface1 is\n+   package Pkg is\n+      type I1 is interface;\n+      type Root is tagged record\n+         Data : string (1 .. 300);\n+      end record;\n+      type DT is new Root and I1 with null record;\n+   end Pkg;\n+   use Pkg; \n+   use type System.Address; \n+   Obj : DT;\n+   procedure IW (O : I1'Class) is \n+   begin\n+      if O'Address /= Obj'Address then\n+         raise Program_Error;\n+      end if;\n+   end IW;\n+begin   \n+   IW (Obj);\n+end Interface1;"}, {"sha": "903d3308f80b124305a11a4bcc3b7d06e2309496", "filename": "gcc/testsuite/gnat.dg/interface2.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Finterface2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Finterface2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finterface2.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,22 @@\n+-- { dg-do run }\n+\n+procedure interface2 is\n+ package Types is\n+    type Iface     is synchronized interface;\n+    type Any_Iface is access all Iface'Class;\n+--  \n+    protected type T_PO (S : Integer) is new Iface with end;\n+    task type T_Task    (R : Any_Iface);\n+--  \n+    Obj_1 : aliased T_PO (0);\n+    Obj_2 : T_Task (Obj_1'Access); --  Test\n+  end Types;\n+--\n+  package body Types is\n+    protected body T_PO is end;\n+    task body T_Task    is begin null; end;\n+  end Types;\n+--\n+begin\n+   null;\n+end;"}, {"sha": "17c2021557592a7e8df767d2708a3ebc5ef92ad8", "filename": "gcc/testsuite/gnat.dg/iprot_test.adb", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fiprot_test.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fiprot_test.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fiprot_test.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,35 @@\n+-- { dg-do run }\n+\n+procedure iprot_test is\n+      type T1 is tagged  null record;\n+      package PP is\n+         protected type P is\n+            procedure S (X : T1'Class);\n+         private\n+            R2 : access T1'Class;\n+         end P;\n+      end PP;\n+      package body PP is\n+         protected body P is\n+            procedure S (X : T1'Class) is\n+            begin\n+               R2 := new T1'Class'(X);\n+               if R2 /= null then\n+                  null;\n+               end if;\n+            end S;\n+         end P;\n+      end PP;\n+      use PP;\n+      Prot : P;\n+      procedure Proc is\n+         type T2 is new T1 with null record;\n+         X2 : T2;\n+      begin\n+         Prot.S (X2);\n+      end Proc;\n+begin\n+   Proc;\n+exception\n+   when Program_Error => null;\n+end iprot_test;"}, {"sha": "e687bdf4a01cacf1551e71dfb40d05328381c6f3", "filename": "gcc/testsuite/gnat.dg/md5_test.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fmd5_test.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fmd5_test.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fmd5_test.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,15 @@\n+-- { dg-do run }\n+\n+with GNAT.MD5; use GNAT.MD5;\n+procedure md5_test is\n+   TEST7  : constant String := \"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\";\n+        \n+   Expected : constant Message_Digest :=\n+      \"8215ef0796a20bcaaae116d3876c664a\";\n+   MD : Context;\n+begin   \n+   Update (MD, TEST7);\n+   if Digest (MD) /= Expected then\n+      raise Program_Error;\n+   end if;\n+end;"}, {"sha": "274b52375e74c2fc39c1ddbaeaab6759e15758c3", "filename": "gcc/testsuite/gnat.dg/mutable1.adb", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fmutable1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fmutable1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fmutable1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,29 @@\n+-- { dg-do run }\n+\n+procedure mutable1 is\n+            \n+   type Object (Valid : Boolean := False) is record\n+      case Valid is\n+         when True  => Stamp : Natural;\n+         when False => null;\n+      end case;\n+   end record;\n+      \n+   function Dummy_Object (Should_Be_There : Boolean) Return Object is\n+   begin \n+      if not Should_Be_There then\n+         raise Program_Error;\n+      end if;\n+      return Object'(Valid => False);\n+   end;\n+\n+   procedure Check (Create_Dummy : Boolean) is\n+      B : Boolean;\n+   begin\n+      B := Create_Dummy and then Dummy_Object (Create_Dummy).Valid;\n+   end;\n+\n+begin\n+   Check (Create_Dummy => False); \n+   Check (Create_Dummy => True);\n+end;"}, {"sha": "1d271ba5cd91ce4c49937d2b75d0c3179d86160d", "filename": "gcc/testsuite/gnat.dg/named_test.adb", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fnamed_test.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fnamed_test.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnamed_test.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,26 @@\n+-- { dg-do run }\n+\n+with Text_IO; use Text_IO;\n+procedure Named_Test is\n+   type Base is tagged limited record\n+      Flag  : boolean;\n+      Value : integer;\n+   end record;\n+-- \n+   function Build (X : Integer; Y : Integer) return Base is\n+   begin\n+      return Result : Base do\n+         Result.Flag := (X = Y);\n+         Result.Value := X * Y;\n+      end return;\n+   end;\n+-- \n+   type Table is array (1..1) of Base;\n+   It : Table := (1 => Build ( Y => 17, X => 11));\n+begin\n+  if It (1).Flag\n+    or else It (1).Value /= 187\n+  then\n+     raise Program_Error;\n+  end if;\n+end;"}, {"sha": "9504c163bc542cfe43a22693587537ab8a35d222", "filename": "gcc/testsuite/gnat.dg/nat1.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fnat1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fnat1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnat1.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,5 @@\n+   with System;\n+   package NAT1 is\n+      Nat_One_Storage : constant Natural := 1;\n+      One_Address : constant System.Address := Nat_One_Storage'Address;\n+   end;"}, {"sha": "91a17ba3a637d19e0025a3e1d676b8ea206079ce", "filename": "gcc/testsuite/gnat.dg/nat1r.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fnat1r.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fnat1r.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnat1r.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-do run }\n+\n+   with System, NAT1; use NAT1;\n+   procedure Nat1R is\n+      use type System.Address;\n+   begin\n+      if One_Address /= Nat_One_Storage'Address then\n+         raise Constraint_Error;\n+      end if;\n+   end;\n+"}, {"sha": "b1a63cdf0eaeccf71ab2b0412b1a1dc80f993918", "filename": "gcc/testsuite/gnat.dg/no_final.adb", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fno_final.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fno_final.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fno_final.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,29 @@\n+-- { dg-do run }\n+\n+pragma Restrictions (No_Finalization);\n+procedure no_final is\n+   package P is\n+      type T is tagged null record;\n+      type T1 is new T with record\n+         A : String (1..80);\n+      end record;\n+      function F return T'Class;\n+   end P;\n+   \n+   Str : String (1..80) := (1..80=>'x');\n+   \n+   package body P is\n+      function F return T'Class is\n+         X : T1 := T1'(A => Str);\n+      begin\n+         return X;\n+      end F;\n+   end P;\n+   \n+   Obj : P.T'class := P.F;\n+begin\n+   if P.T1 (Obj).A /= Str then\n+      raise Constraint_Error;\n+   end if;\n+end;\n+"}, {"sha": "70e11368e15226f968dc65a6223512a8c0b5bc3f", "filename": "gcc/testsuite/gnat.dg/prefix1.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fprefix1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fprefix1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprefix1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,8 @@\n+package body prefix1 is\n+   Counter : Integer := 2;\n+   Table : Arr := (2, 4, 8, 16, 32, 64, 128, 256, 512, 1024);\n+   function Func (Object : T) return Arr is\n+   begin\n+      return Table;\n+   end; \n+end prefix1;"}, {"sha": "3dbaa63e91c187ccf9a248166649fbdd25c12663", "filename": "gcc/testsuite/gnat.dg/prefix1.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fprefix1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fprefix1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprefix1.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,5 @@\n+package prefix1 is\n+   type Arr is array (1..10) of Natural;\n+   type T is tagged null record;\n+   function Func (Object : T) return Arr;\n+end prefix1;"}, {"sha": "f4398c5143cfca01154b66f23e95c4404dfd6f41", "filename": "gcc/testsuite/gnat.dg/rational_arithmetic.ads", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Frational_arithmetic.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Frational_arithmetic.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frational_arithmetic.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,37 @@\n+package Rational_Arithmetic is\n+  -- Whole numbers\n+  type Whole is new Integer;\n+--\n+  -- Undefine unwanted operations\n+  function \"/\" (Left, Right: Whole) return Whole is abstract;\n+--\n+  -- Rational numbers\n+--\n+  type Rational is private;\n+--\n+  -- Constructors\n+--\n+  function \"/\" (Left, Right: Whole) return Rational;\n+--\n+  -- Rational operations\n+--\n+  function \"-\" (Left, Right: Rational) return Rational;\n+--\n+  -- Mixed operations\n+--\n+  function \"+\" (Left: Whole   ; Right: Rational) return Rational;\n+  function \"-\" (Left: Whole   ; Right: Rational) return Rational;\n+  function \"-\" (Left: Rational; Right: Whole   ) return Rational;\n+  function \"/\" (Left: Whole   ; Right: Rational) return Rational;\n+  function \"*\" (Left: Whole   ; Right: Rational) return Rational;\n+  function \"*\" (Left: Rational; Right: Whole   ) return Rational;\n+--\n+  -- Relational\n+--\n+  function \"=\" (Left: Rational; Right: Whole) return Boolean;\n+--\n+private\n+  type Rational is record\n+    Numerator, Denominator: Whole;\n+  end record;\n+end Rational_Arithmetic;"}, {"sha": "8f5e5150f8f06168ab60f453c59b6f6bcca085f5", "filename": "gcc/testsuite/gnat.dg/renaming1.adb", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,14 @@\n+-- { dg-do compile}\n+-- { dg-options \"-gnatwa\" }\n+\n+with Text_IO;\n+use Text_IO;\n+use type Text_IO.File_Access;\n+package body renaming1 is\n+   procedure Fo (A : Text_IO.File_Access) is\n+   begin\n+      if A = Text_IO.Standard_Output then\n+         null;\n+      end if;\n+   end Fo;\n+end;"}, {"sha": "893f423d5325e03672caeed62ff3fdbb99a49b01", "filename": "gcc/testsuite/gnat.dg/renaming1.ads", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming1.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,4 @@\n+with Text_IO;\n+package renaming1 is\n+   procedure Fo (A : Text_IO.File_Access);\n+end;"}, {"sha": "2039f85ebfbff11592182bbb6365167419dc7d05", "filename": "gcc/testsuite/gnat.dg/return1.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Freturn1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Freturn1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Freturn1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatwa\" }\n+\n+package body return1 is\n+    function X_Func (O : access Child) return access Base'Class is\n+    begin\n+       return X_Local : access Child'Class do\n+          X_Local := O;\n+       end return;\n+    end X_Func;\n+end return1;"}, {"sha": "6948fdabcf0bcf176aae1e4dba69fda3767301cb", "filename": "gcc/testsuite/gnat.dg/return1.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Freturn1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Freturn1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Freturn1.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,7 @@\n+package return1 is\n+    type Base is abstract tagged null record;\n+    type Child is new Base with record\n+       Anon_Access : access Base'Class;\n+    end record;\n+    function X_Func (O : access Child) return access Base'Class;\n+end return1;"}, {"sha": "4c24975f7a2816f9c0712f75305ee21448afc602", "filename": "gcc/testsuite/gnat.dg/slice1.adb", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fslice1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fslice1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fslice1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,19 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O2\" }\n+\n+function slice1 (Offset : Integer) return String is\n+   \n+   Convert : constant String := \"0123456789abcdef\";\n+   Buffer  : String (1 .. 32);\n+   Pos     : Natural := Buffer'Last;\n+   Value   : Long_Long_Integer := Long_Long_Integer (Offset);\n+\n+begin\n+   while Value > 0 loop\n+      Buffer (Pos) := Convert (Integer (Value mod 16));\n+      Pos := Pos - 1;\n+      Value := Value / 16;\n+   end loop;\n+   \n+   return Buffer (Pos + 1 .. Buffer'Last);\n+end;"}, {"sha": "7272048a1bd4032b054d97dc2d4ae2354b1600f6", "filename": "gcc/testsuite/gnat.dg/specs/pack2.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fpack2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fpack2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fpack2.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,10 @@\n+-- { dg-do compile }\n+\n+package Pack2 is \n+   type Rec is record\n+       Ptr: access Character;\n+       Int :Integer;\n+   end record;\n+   type Table is array (1..2) of rec;\n+   pragma Pack (Table);\n+end Pack2;"}, {"sha": "f4d362f30bbb8650098696bc8c332885c91970c2", "filename": "gcc/testsuite/gnat.dg/test_debug1.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_debug1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_debug1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_debug1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do compile }\n+-- { dg-options \"-g\" }\n+\n+with debug1; use debug1;\n+procedure test_debug1 is\n+  Blob : Meta_Data;\n+begin\n+  null;\n+end;"}, {"sha": "aaedf7f4028d96fb7e56c583906fac34713e41a3", "filename": "gcc/testsuite/gnat.dg/test_delay.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_delay.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_delay.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_delay.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,8 @@\n+-- { dg-do run }\n+\n+with Ada.Real_Time;\n+        \n+procedure Test_Delay is\n+begin\n+   delay until Ada.Real_Time.Clock;\n+end Test_Delay;"}, {"sha": "7731f0c513ab0bed336d4fe7ee9b44fd84ee2701", "filename": "gcc/testsuite/gnat.dg/test_equal1.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_equal1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_equal1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_equal1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,13 @@\n+-- { dg-do compile }\n+\n+with equal1;\n+procedure test_equal1 is\n+  subtype Boolean_T is Boolean;\n+  function \"=\" (L, R : in equal1.Basic_Connection_Status_T)\n+    return Boolean_T renames equal1.\"=\";\n+  Status : equal1.Basic_Connection_Status_T;\n+  Result : Boolean_T;\n+begin\n+  Status := equal1.Temporary_Disconnected;\n+  Result := Status /= equal1.Connected;\n+end;"}, {"sha": "8accc70d04231ec8a055958bf671ac02701465a1", "filename": "gcc/testsuite/gnat.dg/test_ext1.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_ext1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_ext1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_ext1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,8 @@\n+-- { dg-do compile }\n+\n+with ext1; use ext1;\n+procedure test_ext1 is\n+    X : Regular_Smiley;\n+begin\n+    X.Set_Mood;\n+end;"}, {"sha": "1dd6ab7f52df7ef981614947e6b7c53f5764729a", "filename": "gcc/testsuite/gnat.dg/test_prefix1.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_prefix1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_prefix1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_prefix1.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,15 @@\n+-- {dg-do run }\n+\n+with prefix1; use prefix1;\n+procedure test_prefix1 is\n+   Val : Natural;\n+   Obj  : T;\n+--\n+begin\n+   for J in Obj.Func'Range loop\n+      Val := Obj.Func (J);\n+      if Val /= 2 ** J then\n+         raise Program_Error;\n+      end if;\n+   end loop;\n+end test_prefix1;"}, {"sha": "d33ea393a87f194aecbd2781993835fe45f6a883", "filename": "gcc/testsuite/gnat.dg/test_rational_arithmetic.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_rational_arithmetic.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_rational_arithmetic.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_rational_arithmetic.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,15 @@\n+-- { dg-do compile }\n+\n+with Rational_Arithmetic;\n+use  Rational_Arithmetic;\n+procedure Test_Rational_Arithmetic is\n+  R: Rational := 10/2;\n+  B: Boolean  := R = 5/1;  -- RHS cannot be a Whole\n+                           -- (\"/\" has been \"undefined\")\n+  C: Boolean  := R = Rational' (5/1);\n+  D: Boolean  := (6/3) = R;\n+  E: Boolean  := (2/1 = 4/2);\n+begin\n+  R := 1+1/(4/8);\n+  R := 2*(3/2)-(7/3)*3;\n+end Test_Rational_Arithmetic;"}, {"sha": "c75dfbe66e6f4b7fda2fc0e1c15429a89ec49758", "filename": "gcc/testsuite/gnat.dg/unc.adb", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Func.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Func.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Func.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,26 @@\n+-- { dg-do compile }\n+\n+with Ada.Streams.Stream_IO; use Ada.Streams.Stream_IO;\n+procedure Unc is\n+   type Arr is array (1..4) of integer;\n+   type Bytes is array (positive range <>) of Character;\n+   type Buffer (D : Boolean := False) is record\n+      case D is \n+        when False =>\n+           Chars: Bytes (1..16);\n+        when True =>\n+           Values : Arr;\n+      end case;\n+   end record;\n+--\n+   pragma Unchecked_Union (Buffer);\n+   pragma Warnings (Off);\n+   Val : Buffer;\n+--      \n+   F : File_Type;\n+   S : Stream_Access;\n+begin\n+   Create (F, Out_File);\n+   S := Stream (F);\n+   Buffer'Output (S, Val);\n+end;"}, {"sha": "62bf17a598eb8554aa2ec70dc2da587fb812b433", "filename": "gcc/testsuite/gnat.dg/volatile1.ads", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile1.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,22 @@\n+package volatile1 is\n+\n+   type Command is (Nothing, Get);\n+\n+   type Data is\n+      record\n+         Time : Duration;\n+      end record;\n+\n+   type Data_Array is array (Integer range <>) of Data;\n+\n+   type Command_Data (Kind : Command; Length : Integer) is\n+      record\n+         case Kind is\n+            when Nothing =>\n+               null;\n+            when Get =>\n+               Data : Data_Array (1 .. Length);\n+         end case;\n+      end record;\n+\n+end;"}, {"sha": "57df26e7adf603666f939c68e42339895fe3ace8", "filename": "gcc/testsuite/gnat.dg/volatile2.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile2.adb?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,22 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+package body volatile2 is\n+  \n+  procedure Copy is\n+    R : Result;\n+    M : Integer;\n+    subtype Get_Data is Command_Data (Get, R.Data'Last);       \n+  begin                                                        \n+    declare\n+      G : Get_Data;\n+      for G'Address use M'Address;\n+    begin\n+      for I in 1 .. R.Data'Last loop\n+        G.Data (I) := (Time => R.Data (I).Time);\n+      end loop;\n+    end;\n+  end;\n+\n+end volatile2;\n+"}, {"sha": "0f7ed071c2bbe17d8ff40244ede5c6c85e950782", "filename": "gcc/testsuite/gnat.dg/volatile2.ads", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile2.ads?ref=0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "patch": "@@ -0,0 +1,16 @@\n+with volatile1; use volatile1;\n+\n+package volatile2 is\n+   \n+   type PData_Array is access Data_Array;\n+   \n+   type Result_Desc is\n+      record\n+         Data : PData_Array;\n+      end record;\n+   \n+   type Result is access Result_Desc;\n+   \n+   procedure Copy;\n+\n+end volatile2;"}]}