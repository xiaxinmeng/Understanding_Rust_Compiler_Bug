{"sha": "0e8a66de6dc349715957d33e75285f75340a67df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU4YTY2ZGU2ZGMzNDk3MTU5NTdkMzNlNzUyODVmNzUzNDBhNjdkZg==", "commit": {"author": {"name": "Matt Kraai", "email": "kraai@gcc.gnu.org", "date": "2003-07-03T05:26:31Z"}, "committer": {"name": "Matt Kraai", "email": "kraai@gcc.gnu.org", "date": "2003-07-03T05:26:31Z"}, "message": "gcse.c: Fix misspelling.\n\n\t* gcse.c: Fix misspelling.\n\t* line-map.c: Likewise.\n\t* config/dsp16xx/dsp16xx.h: Likewise.\n\nFrom-SVN: r68865", "tree": {"sha": "c8f9d764d8a71703a75d74bed105eebfb8ea1fad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8f9d764d8a71703a75d74bed105eebfb8ea1fad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e8a66de6dc349715957d33e75285f75340a67df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e8a66de6dc349715957d33e75285f75340a67df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e8a66de6dc349715957d33e75285f75340a67df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e8a66de6dc349715957d33e75285f75340a67df/comments", "author": null, "committer": null, "parents": [{"sha": "3dce14083fc35cc2b60906577cf797e0ae49f1b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dce14083fc35cc2b60906577cf797e0ae49f1b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dce14083fc35cc2b60906577cf797e0ae49f1b8"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "7e2d54053219da46b700f7955ff12dddfdbef5a6", "filename": "gcc/config/dsp16xx/dsp16xx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e8a66de6dc349715957d33e75285f75340a67df/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e8a66de6dc349715957d33e75285f75340a67df/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h?ref=0e8a66de6dc349715957d33e75285f75340a67df", "patch": "@@ -1455,7 +1455,7 @@ extern struct dsp16xx_frame_info current_frame_info;\n /* Define this macro as a C expression which is nonzero if accessing less\n    than a word of memory (i.e a char or short) is no faster than accessing\n    a word of memory, i.e if such access require more than one instruction\n-   or if ther is no difference in cost between byte and (aligned) word\n+   or if there is no difference in cost between byte and (aligned) word\n    loads.  */\n #define SLOW_BYTE_ACCESS 1\n "}, {"sha": "e554dd867a69fb98a547da775c91d329bc8d8033", "filename": "gcc/gcse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e8a66de6dc349715957d33e75285f75340a67df/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e8a66de6dc349715957d33e75285f75340a67df/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=0e8a66de6dc349715957d33e75285f75340a67df", "patch": "@@ -6728,7 +6728,7 @@ first_ls_expr ()\n   return pre_ldst_mems;\n }\n \n-/* Return the next item in ther list after the specified one.  */\n+/* Return the next item in the list after the specified one.  */\n \n static inline struct ls_expr *\n next_ls_expr (ptr)"}, {"sha": "8bbe863693be55546700fcd7f55fa8169ad28aeb", "filename": "gcc/line-map.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e8a66de6dc349715957d33e75285f75340a67df/gcc%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e8a66de6dc349715957d33e75285f75340a67df/gcc%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fline-map.c?ref=0e8a66de6dc349715957d33e75285f75340a67df", "patch": "@@ -63,7 +63,7 @@ free_line_maps (struct line_maps *set)\n }\n \n /* Add a mapping of logical source line to physical source file and\n-   line number.  Ther text pointed to by TO_FILE must have a lifetime\n+   line number.  The text pointed to by TO_FILE must have a lifetime\n    at least as long as the final call to lookup_line ().\n \n    FROM_LINE should be monotonic increasing across calls to this"}]}