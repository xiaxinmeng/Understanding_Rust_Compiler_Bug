{"sha": "01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE5NTJkMzdlM2M3YmZlYWNmYjMxODZkZGM4YWI3Y2I1OWM2NWMzZQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-03-04T05:55:20Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-03-04T05:55:20Z"}, "message": "* gcc.c-torture/execute/20030222-1.c: New test.\n\nFrom-SVN: r63767", "tree": {"sha": "e7e48f37fce8a8de7ebbb70ce45eb94557a6cf5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7e48f37fce8a8de7ebbb70ce45eb94557a6cf5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e/comments", "author": null, "committer": null, "parents": [{"sha": "f12448c818cb5c02f6630675998e49f7812b4f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12448c818cb5c02f6630675998e49f7812b4f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f12448c818cb5c02f6630675998e49f7812b4f02"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "5f34024a2fdea1eb6d41ec3df0b5b1729c1641ff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e", "patch": "@@ -1,3 +1,7 @@\n+2003-03-04  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* gcc.c-torture/execute/20030222-1.c: New test.\n+\n 2003-03-03  James E Wilson  <wilson@tuliptree.org>\n \n \t* gcc.dg/m68k-slp-ice.c: New test for PR c/7872."}, {"sha": "93d1e3c4e800e0ce30c5c31b4c292159ace2046e", "filename": "gcc/testsuite/gcc.c-torture/execute/20030222-1.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.c?ref=01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e", "patch": "@@ -0,0 +1,27 @@\n+/* Verify that we get the low part of the long long as an int.  We\n+   used to get it wrong on big-endian machines, if register allocation\n+   succeeded at all.  We use volatile to make sure the long long is\n+   actually truncated to int, in case a single register is wide enough\n+   for a long long.  */\n+\n+#include <limits.h>\n+\n+void\n+ll_to_int (long long x, volatile int *p)\n+{\n+  int i;\n+  asm (\"\" : \"=r\" (i) : \"0\" (x));\n+  *p = i;\n+}\n+\n+int val = INT_MIN + 1;\n+\n+int main() {\n+  volatile int i;\n+\n+  ll_to_int ((long long)val, &i);\n+  if (i != val)\n+    abort ();\n+  \n+  exit (0);\n+}"}]}