{"sha": "a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEzYTcxNGU3MTBmMTNiNmZhNmY4ODQ4MWEzYzk0YjdkMmRiYzhjZg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-07-11T08:02:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-11T08:02:53Z"}, "message": "[Ada] Crash on protected type with self-referential component\n\nThis patch fixes a compiler abort on a declarastion for a protected type\nPT when one of its private component is of type access PT.\n\n2019-07-11  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch9.adb (Expand_N_Protected_Type_Declaaration): New\n\tsubsidiary routine Replace_Access_Definition, to handle properly\n\ta protected type PT one of whose private components is of type\n\taccess PT.\n\ngcc/testsuite/\n\n\t* gnat.dg/prot8.adb, gnat.dg/prot8.ads: New testcase.\n\nFrom-SVN: r273399", "tree": {"sha": "ae2a85f3c9039b8718d0be7b8a2ebcb14bd3d650", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae2a85f3c9039b8718d0be7b8a2ebcb14bd3d650"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "810097a72d1767627d2439bb94627b443f41bf7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810097a72d1767627d2439bb94627b443f41bf7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/810097a72d1767627d2439bb94627b443f41bf7f"}], "stats": {"total": 92, "additions": 91, "deletions": 1}, "files": [{"sha": "dbe11d8f46e891e94ca842bbfb0ac0c6310689ce", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf", "patch": "@@ -1,3 +1,10 @@\n+2019-07-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_N_Protected_Type_Declaaration): New\n+\tsubsidiary routine Replace_Access_Definition, to handle properly\n+\ta protected type PT one of whose private components is of type\n+\taccess PT.\n+\n 2019-07-11  Dmitriy Anisimkov  <anisimko@adacore.com>\n \n \t* libgnat/g-socket.ads (Level_Type): Add enumerators for"}, {"sha": "99bd8d211cb499f77446cbb8dac304f7ff3ee76a", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 62, "deletions": 1, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf", "patch": "@@ -8928,6 +8928,8 @@ package body Exp_Ch9 is\n       Current_Node : Node_Id := N;\n       E_Count      : Int;\n       Entries_Aggr : Node_Id;\n+      Rec_Decl     : Node_Id;\n+      Rec_Id       : Entity_Id;\n \n       procedure Check_Inlining (Subp : Entity_Id);\n       --  If the original operation has a pragma Inline, propagate the flag\n@@ -8949,6 +8951,21 @@ package body Exp_Ch9 is\n       --  For a protected operation that is an interrupt handler, add the\n       --  freeze action that will register it as such.\n \n+      procedure Replace_Access_Definition (Comp : Node_Id);\n+      --  If a private component of the type is an access to itself, this\n+      --  is not a reference to the current instance, but an access type out\n+      --  of which one might construct a list. If such a component exists, we\n+      --  create an incomplete type for the equivalent record type, and\n+      --  a named access type for it, that replaces the access definition\n+      --  of the original component. This is similar to what is done for\n+      --  records in Check_Anonymous_Access_Components, but simpler, because\n+      --  the corresponding record type has no previous declaration.\n+      --  This needs to be done only once, even if there are several such\n+      --  access components. The following entity stores the constructed\n+      --  access type.\n+\n+      Acc_T : Entity_Id := Empty;\n+\n       --------------------\n       -- Check_Inlining --\n       --------------------\n@@ -9096,6 +9113,41 @@ package body Exp_Ch9 is\n          Append_Freeze_Action (Prot_Proc, RTS_Call);\n       end Register_Handler;\n \n+      -------------------------------\n+      -- Replace_Access_Definition --\n+      -------------------------------\n+\n+      procedure Replace_Access_Definition (Comp : Node_Id) is\n+         Loc     : constant Source_Ptr := Sloc (Comp);\n+         Inc_T   : Node_Id;\n+         Inc_D   : Node_Id;\n+         Acc_Def : Node_Id;\n+         Acc_D   : Node_Id;\n+\n+      begin\n+         if No (Acc_T) then\n+            Inc_T   := Make_Defining_Identifier (Loc, Chars (Rec_Id));\n+            Inc_D   := Make_Incomplete_Type_Declaration (Loc, Inc_T);\n+            Acc_T   := Make_Temporary (Loc, 'S');\n+            Acc_Def :=\n+              Make_Access_To_Object_Definition (Loc,\n+                Subtype_Indication => New_Occurrence_Of (Inc_T, Loc));\n+            Acc_D :=\n+              Make_Full_Type_Declaration (Loc,\n+                Defining_Identifier => Acc_T,\n+                Type_Definition => Acc_Def);\n+\n+            Insert_Before (Rec_Decl, Inc_D);\n+            Analyze (Inc_D);\n+\n+            Insert_Before (Rec_Decl, Acc_D);\n+            Analyze (Acc_D);\n+         end if;\n+\n+         Set_Access_Definition (Comp, Empty);\n+         Set_Subtype_Indication (Comp, New_Occurrence_Of (Acc_T, Loc));\n+      end Replace_Access_Definition;\n+\n       --  Local variables\n \n       Body_Arr    : Node_Id;\n@@ -9107,7 +9159,6 @@ package body Exp_Ch9 is\n       Obj_Def     : Node_Id;\n       Object_Comp : Node_Id;\n       Priv        : Node_Id;\n-      Rec_Decl    : Node_Id;\n       Sub         : Node_Id;\n \n    --  Start of processing for Expand_N_Protected_Type_Declaration\n@@ -9117,6 +9168,7 @@ package body Exp_Ch9 is\n          return;\n       else\n          Rec_Decl := Build_Corresponding_Record (N, Prot_Typ, Loc);\n+         Rec_Id   := Defining_Identifier (Rec_Decl);\n       end if;\n \n       Cdecls := Component_Items (Component_List (Type_Definition (Rec_Decl)));\n@@ -9262,6 +9314,15 @@ package body Exp_Ch9 is\n                          Access_Definition  =>\n                            New_Copy_Tree\n                              (Access_Definition (Old_Comp), Discr_Map));\n+\n+                      --  A self-reference in the private part becomes a\n+                      --  self-reference to the corresponding record.\n+\n+                     if Entity (Subtype_Mark (Access_Definition (New_Comp)))\n+                       = Prot_Typ\n+                     then\n+                        Replace_Access_Definition (New_Comp);\n+                     end if;\n                   end if;\n \n                   New_Priv :="}, {"sha": "baef966cb2d63043c78d1af7f39824bb9cea4f63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf", "patch": "@@ -1,3 +1,7 @@\n+2019-07-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/prot8.adb, gnat.dg/prot8.ads: New testcase.\n+\n 2019-07-11  Justin Squirek  <squirek@adacore.com>\n \n \t* gnat.dg/unreferenced2.adb: New testcase."}, {"sha": "c39044853b67d32683dd58f88745d33b3ab04463", "filename": "gcc/testsuite/gnat.dg/prot8.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf/gcc%2Ftestsuite%2Fgnat.dg%2Fprot8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf/gcc%2Ftestsuite%2Fgnat.dg%2Fprot8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprot8.adb?ref=a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf", "patch": "@@ -0,0 +1,8 @@\n+--  { dg-do compile }\n+\n+package body Prot8 is\n+\n+  protected body Prot is\n+  end Prot;\n+\n+end Prot8;"}, {"sha": "01424ce4d369477b7886317c2ab02087288c1c3e", "filename": "gcc/testsuite/gnat.dg/prot8.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf/gcc%2Ftestsuite%2Fgnat.dg%2Fprot8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf/gcc%2Ftestsuite%2Fgnat.dg%2Fprot8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprot8.ads?ref=a13a714e710f13b6fa6f88481a3c94b7d2dbc8cf", "patch": "@@ -0,0 +1,10 @@\n+package Prot8 is\n+\n+  protected type Prot is\n+  private\n+    B : Boolean;\n+    N : access Prot;\n+    Ptr : access Prot;\n+  end Prot;\n+\n+end Prot8;"}]}