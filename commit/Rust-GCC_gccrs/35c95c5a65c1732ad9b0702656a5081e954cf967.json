{"sha": "35c95c5a65c1732ad9b0702656a5081e954cf967", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVjOTVjNWE2NWMxNzMyYWQ5YjA3MDI2NTZhNTA4MWU5NTRjZjk2Nw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-10-18T22:37:30Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-10-18T22:37:30Z"}, "message": "haifa-sched.c (add_dependence): Protect references to the true dependency cache with #ifdef INSN_SCHEDULING.\n\n        * haifa-sched.c (add_dependence): Protect references to the\n        true dependency cache with #ifdef INSN_SCHEDULING.\n        (remove_dependence): Similarly.\n\nFrom-SVN: r30074", "tree": {"sha": "0dbc35dcc883282e535cd2ea9ae85faadac0ef89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dbc35dcc883282e535cd2ea9ae85faadac0ef89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35c95c5a65c1732ad9b0702656a5081e954cf967", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35c95c5a65c1732ad9b0702656a5081e954cf967", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35c95c5a65c1732ad9b0702656a5081e954cf967", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35c95c5a65c1732ad9b0702656a5081e954cf967/comments", "author": null, "committer": null, "parents": [{"sha": "c88e82068294b20f55b8d4ca6b302d5486f9881b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c88e82068294b20f55b8d4ca6b302d5486f9881b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c88e82068294b20f55b8d4ca6b302d5486f9881b"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "1de8bac157cb43274b47e081b16dc74f9d3a34cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35c95c5a65c1732ad9b0702656a5081e954cf967/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35c95c5a65c1732ad9b0702656a5081e954cf967/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35c95c5a65c1732ad9b0702656a5081e954cf967", "patch": "@@ -24,6 +24,10 @@ Mon Oct 18 02:38:46 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n Mon Oct 18 01:41:35 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* haifa-sched.c (add_dependence): Protect references to the\n+\ttrue dependency cache with #ifdef INSN_SCHEDULING.\n+\t(remove_dependence): Similarly.\n+\n \t* mn10200.md (outline_epilogue_jump): Embed a (return) to indicate\n \tto the cfg code that this is a return instruction.\n \t* mn10300.md (return_internal): Similarly."}, {"sha": "7f55a1dac99fc897b4001691612e6f8264b82f95", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35c95c5a65c1732ad9b0702656a5081e954cf967/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35c95c5a65c1732ad9b0702656a5081e954cf967/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=35c95c5a65c1732ad9b0702656a5081e954cf967", "patch": "@@ -793,14 +793,14 @@ add_dependence (insn, elem, dep_type)\n       && (INSN_BB (elem) != INSN_BB (insn)))\n     return;\n \n-#endif\n \n   /* If we already have a true dependency for ELEM, then we do not\n      need to do anything.  Avoiding the list walk below can cut\n      compile times dramatically for some code.  */\n   if (true_dependency_cache\n       && TEST_BIT (true_dependency_cache[INSN_LUID (insn)], INSN_LUID (elem)))\n     return;\n+#endif\n \n   /* Check that we don't already have this dependence.  */\n   for (link = LOG_LINKS (insn); link; link = XEXP (link, 1))\n@@ -811,10 +811,12 @@ add_dependence (insn, elem, dep_type)\n \tif ((int) dep_type < (int) REG_NOTE_KIND (link))\n \t  PUT_REG_NOTE_KIND (link, dep_type);\n \n+#ifdef INSN_SCHEDULING\n \t/* If we are adding a true dependency to INSN's LOG_LINKs, then\n \t   note that in the bitmap cache of true dependency information.  */\n \tif ((int)dep_type == 0 && true_dependency_cache)\n \t  SET_BIT (true_dependency_cache[INSN_LUID (insn)], INSN_LUID (elem));\n+#endif\n \treturn;\n       }\n   /* Might want to check one level of transitivity to save conses.  */\n@@ -848,11 +850,13 @@ remove_dependence (insn, elem)\n \t  else\n \t    LOG_LINKS (insn) = next;\n \n+#ifdef INSN_SCHEDULING\n \t  /* If we are removing a true dependency from the LOG_LINKS list,\n \t     make sure to remove it from the cache too.  */\n \t  if (REG_NOTE_KIND (link) == 0 && true_dependency_cache)\n \t    RESET_BIT (true_dependency_cache[INSN_LUID (insn)],\n \t\t       INSN_LUID (elem));\n+#endif\n \n \t  free_INSN_LIST_node (link);\n "}]}