{"sha": "81cd202e24b322ba4c592a4b99a6e773238c5b27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFjZDIwMmUyNGIzMjJiYTRjNTkyYTRiOTlhNmU3NzMyMzhjNWIyNw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2016-01-26T12:51:07Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2016-01-26T12:51:07Z"}, "message": "Update stack alignment in ix86_update_stack_boundary\n\nStack alignment adjustment for __tls_get_addr should be done in\nix86_update_stack_boundary, not ix86_compute_frame_layout.  Also\nthere is no need to over-align stack for __tls_get_addr and function\nwith __tls_get_addr call isn't a leaf function.\n\ngcc/\n\n\tPR target/68986\n\t* config/i386/i386.c (ix86_compute_frame_layout): Move stack\n\talignment adjustment to ...\n\t(ix86_update_stack_boundary): Here.  Don't over-align stack for\n\t__tls_get_addr.\n\t(ix86_finalize_stack_realign_flags): Use stack_alignment_needed\n\tif __tls_get_addr is called.\n\ngcc/testsuite/\n\n\tPR target/68986\n\t* gcc.target/i386/pr68986-1.c: New test.\n\t* gcc.target/i386/pr68986-2.c: Likewise.\n\t* gcc.target/i386/pr68986-3.c: Likewise.\n\nFrom-SVN: r232825", "tree": {"sha": "fa7b4b418220de8b60dd909b74160d583d3590be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa7b4b418220de8b60dd909b74160d583d3590be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81cd202e24b322ba4c592a4b99a6e773238c5b27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81cd202e24b322ba4c592a4b99a6e773238c5b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81cd202e24b322ba4c592a4b99a6e773238c5b27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81cd202e24b322ba4c592a4b99a6e773238c5b27/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "213a1c03ba60322661bff886b17961e0db0563dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213a1c03ba60322661bff886b17961e0db0563dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/213a1c03ba60322661bff886b17961e0db0563dd"}], "stats": {"total": 84, "additions": 68, "deletions": 16}, "files": [{"sha": "28cb00c745124b025e207fdf8606ce6f8d7064f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81cd202e24b322ba4c592a4b99a6e773238c5b27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81cd202e24b322ba4c592a4b99a6e773238c5b27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81cd202e24b322ba4c592a4b99a6e773238c5b27", "patch": "@@ -1,3 +1,13 @@\n+2016-01-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/68986\n+\t* config/i386/i386.c (ix86_compute_frame_layout): Move stack\n+\talignment adjustment to ...\n+\t(ix86_update_stack_boundary): Here.  Don't over-align stack for\n+\t__tls_get_addr.\n+\t(ix86_finalize_stack_realign_flags): Use stack_alignment_needed\n+\tif __tls_get_addr is called.\n+\n 2016-01-26  Christian Bruel  <christian.bruel@st.com>\n \n \t* doc/sourcebuild.texi (arm_crypto_pragma_ok): Remove."}, {"sha": "cfbdf0f1734260fd54b96f6876dbc325c1c2894c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81cd202e24b322ba4c592a4b99a6e773238c5b27/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81cd202e24b322ba4c592a4b99a6e773238c5b27/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=81cd202e24b322ba4c592a4b99a6e773238c5b27", "patch": "@@ -11360,18 +11360,6 @@ ix86_compute_frame_layout (struct ix86_frame *frame)\n       crtl->preferred_stack_boundary = 128;\n       crtl->stack_alignment_needed = 128;\n     }\n-  /* preferred_stack_boundary is never updated for call\n-     expanded from tls descriptor. Update it here. We don't update it in\n-     expand stage because according to the comments before\n-     ix86_current_function_calls_tls_descriptor, tls calls may be optimized\n-     away.  */\n-  else if (ix86_current_function_calls_tls_descriptor\n-\t   && crtl->preferred_stack_boundary < PREFERRED_STACK_BOUNDARY)\n-    {\n-      crtl->preferred_stack_boundary = PREFERRED_STACK_BOUNDARY;\n-      if (crtl->stack_alignment_needed < PREFERRED_STACK_BOUNDARY)\n-\tcrtl->stack_alignment_needed = PREFERRED_STACK_BOUNDARY;\n-    }\n \n   stack_alignment_needed = crtl->stack_alignment_needed / BITS_PER_UNIT;\n   preferred_alignment = crtl->preferred_stack_boundary / BITS_PER_UNIT;\n@@ -12043,6 +12031,15 @@ ix86_update_stack_boundary (void)\n       && cfun->stdarg\n       && crtl->stack_alignment_estimated < 128)\n     crtl->stack_alignment_estimated = 128;\n+\n+  /* __tls_get_addr needs to be called with 16-byte aligned stack.  */\n+  if (ix86_tls_descriptor_calls_expanded_in_cfun\n+      && crtl->preferred_stack_boundary < 128)\n+    {\n+      crtl->preferred_stack_boundary = 128;\n+      if (crtl->stack_alignment_needed < 128)\n+\tcrtl->stack_alignment_needed = 128;\n+    }\n }\n \n /* Handle the TARGET_GET_DRAP_RTX hook.  Return NULL if no DRAP is\n@@ -12505,10 +12502,11 @@ ix86_finalize_stack_realign_flags (void)\n   unsigned int incoming_stack_boundary\n     = (crtl->parm_stack_boundary > ix86_incoming_stack_boundary\n        ? crtl->parm_stack_boundary : ix86_incoming_stack_boundary);\n-  unsigned int stack_realign = (incoming_stack_boundary\n-\t\t\t\t< (crtl->is_leaf\n-\t\t\t\t   ? crtl->max_used_stack_slot_alignment\n-\t\t\t\t   : crtl->stack_alignment_needed));\n+  unsigned int stack_realign\n+    = (incoming_stack_boundary\n+       < (crtl->is_leaf && !ix86_current_function_calls_tls_descriptor\n+\t  ? crtl->max_used_stack_slot_alignment\n+\t  : crtl->stack_alignment_needed));\n \n   if (crtl->stack_realign_finalized)\n     {"}, {"sha": "ebee72c3e8651e28e57867490756cf841a8e8ecd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81cd202e24b322ba4c592a4b99a6e773238c5b27/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81cd202e24b322ba4c592a4b99a6e773238c5b27/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=81cd202e24b322ba4c592a4b99a6e773238c5b27", "patch": "@@ -1,3 +1,10 @@\n+2016-01-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/68986\n+\t* gcc.target/i386/pr68986-1.c: New test.\n+\t* gcc.target/i386/pr68986-2.c: Likewise.\n+\t* gcc.target/i386/pr68986-3.c: Likewise.\n+\n 2016-01-26  Christian Bruel  <christian.bruel@st.com>\n \n \t* lib/target-supports.exp"}, {"sha": "998f34f05b412d64cbbf24f1bda04361883384fe", "filename": "gcc/testsuite/gcc.target/i386/pr68986-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81cd202e24b322ba4c592a4b99a6e773238c5b27/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68986-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81cd202e24b322ba4c592a4b99a6e773238c5b27/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68986-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68986-1.c?ref=81cd202e24b322ba4c592a4b99a6e773238c5b27", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target tls_native } */\n+/* { dg-require-effective-target fpic } */\n+/* { dg-options \"-fPIC -mno-accumulate-outgoing-args -mpreferred-stack-boundary=5 -mincoming-stack-boundary=4\" } */\n+\n+extern __thread int msgdata;\n+int\n+foo ()\n+{\n+  return msgdata;\n+}"}, {"sha": "23f9a52488ea0658839f8b639323e88cd87535b8", "filename": "gcc/testsuite/gcc.target/i386/pr68986-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81cd202e24b322ba4c592a4b99a6e773238c5b27/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68986-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81cd202e24b322ba4c592a4b99a6e773238c5b27/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68986-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68986-2.c?ref=81cd202e24b322ba4c592a4b99a6e773238c5b27", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-require-effective-target tls_native } */\n+/* { dg-require-effective-target fpic } */\n+/* { dg-options \"-fPIC -mno-accumulate-outgoing-args -mpreferred-stack-boundary=2 -m32\" } */\n+\n+extern __thread int msgdata;\n+int\n+foo ()\n+{\n+  return msgdata;\n+}\n+\n+/* { dg-final { scan-assembler \"andl\\[\\\\t \\]*\\\\$-16,\\[\\\\t \\]*%esp\" } } */"}, {"sha": "5744cf222ae38f659e40227197a0608d602a52b6", "filename": "gcc/testsuite/gcc.target/i386/pr68986-3.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81cd202e24b322ba4c592a4b99a6e773238c5b27/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68986-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81cd202e24b322ba4c592a4b99a6e773238c5b27/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68986-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68986-3.c?ref=81cd202e24b322ba4c592a4b99a6e773238c5b27", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target tls_native } */\n+/* { dg-require-effective-target fpic } */\n+/* { dg-options \"-fPIC -mno-sse -mpreferred-stack-boundary=3 -mincoming-stack-boundary=3\" } */\n+\n+extern __thread int msgdata;\n+int\n+foo ()\n+{\n+  return msgdata;\n+}\n+\n+/* { dg-final { scan-assembler \"and\\[lq\\]\\[\\\\t \\]*\\\\$-16,\\[\\\\t \\]*%\\[re\\]?sp\" } } */"}]}