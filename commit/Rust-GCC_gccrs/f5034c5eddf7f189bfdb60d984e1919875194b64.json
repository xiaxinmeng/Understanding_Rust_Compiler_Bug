{"sha": "f5034c5eddf7f189bfdb60d984e1919875194b64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUwMzRjNWVkZGY3ZjE4OWJmZGI2MGQ5ODRlMTkxOTg3NTE5NGI2NA==", "commit": {"author": {"name": "James A. Morrison", "email": "ja2morri@uwaterloo.ca", "date": "2003-04-15T16:34:07Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2003-04-15T16:34:07Z"}, "message": "invoke.texi (Spec Files): Wrap if-exists-else example.\n\n\t* invoke.texi (Spec Files): Wrap if-exists-else example.\n\t(MCore): Remove duplicate @itemx entries and @opindex entries.\n\nFrom-SVN: r65645", "tree": {"sha": "d6674ea8f13a4b329b2b3e9e017985e301c5c797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6674ea8f13a4b329b2b3e9e017985e301c5c797"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5034c5eddf7f189bfdb60d984e1919875194b64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5034c5eddf7f189bfdb60d984e1919875194b64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5034c5eddf7f189bfdb60d984e1919875194b64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5034c5eddf7f189bfdb60d984e1919875194b64/comments", "author": null, "committer": null, "parents": [{"sha": "ac5f3b67630b6d6d70016765d9ad4f1a66815f51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac5f3b67630b6d6d70016765d9ad4f1a66815f51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac5f3b67630b6d6d70016765d9ad4f1a66815f51"}], "stats": {"total": 26, "additions": 7, "deletions": 19}, "files": [{"sha": "5e62bc23351081bd7861522f78e18ca307a46f66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5034c5eddf7f189bfdb60d984e1919875194b64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5034c5eddf7f189bfdb60d984e1919875194b64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5034c5eddf7f189bfdb60d984e1919875194b64", "patch": "@@ -1,3 +1,8 @@\n+2003-04-15  James A. Morrison  <ja2morri@uwaterloo.ca>\n+\n+\t* invoke.texi (Spec Files): Wrap if-exists-else example.\n+\t(MCore): Remove duplicate @itemx entries and @opindex entries.\n+\n 2003-04-15  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* unwind.inc (_Unwind_Backtrace): New function."}, {"sha": "dd3c325d8fae85ee1fc819cbcc1a15c0baba41d7", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5034c5eddf7f189bfdb60d984e1919875194b64/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5034c5eddf7f189bfdb60d984e1919875194b64/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f5034c5eddf7f189bfdb60d984e1919875194b64", "patch": "@@ -5376,7 +5376,8 @@ based on the existence of the first.  Here is a small example of its usage:\n \n @smallexample \n *startfile:\n-crt0%O%s %:if-exists(crti%O%s) %:if-exists-else(crtbeginT%O%s crtbegin%O%s)\n+crt0%O%s %:if-exists(crti%O%s) \\\n+%:if-exists-else(crtbeginT%O%s crtbegin%O%s)\n @end smallexample\n @end table \n \n@@ -9737,75 +9738,57 @@ processors.\n @table @gcctabopt\n \n @item -mhardlit\n-@itemx -mhardlit\n @itemx -mno-hardlit\n @opindex mhardlit\n-@opindex mhardlit\n @opindex mno-hardlit\n Inline constants into the code stream if it can be done in two\n instructions or less.\n \n @item -mdiv\n-@itemx -mdiv\n @itemx -mno-div\n @opindex mdiv\n-@opindex mdiv\n @opindex mno-div\n Use the divide instruction.  (Enabled by default).\n \n @item -mrelax-immediate\n-@itemx -mrelax-immediate\n @itemx -mno-relax-immediate\n @opindex mrelax-immediate\n-@opindex mrelax-immediate\n @opindex mno-relax-immediate\n Allow arbitrary sized immediates in bit operations.\n \n @item -mwide-bitfields\n-@itemx -mwide-bitfields\n @itemx -mno-wide-bitfields\n @opindex mwide-bitfields\n-@opindex mwide-bitfields\n @opindex mno-wide-bitfields\n Always treat bit-fields as int-sized.\n \n @item -m4byte-functions\n-@itemx -m4byte-functions\n @itemx -mno-4byte-functions\n @opindex m4byte-functions\n-@opindex m4byte-functions\n @opindex mno-4byte-functions\n Force all functions to be aligned to a four byte boundary.\n \n @item -mcallgraph-data\n-@itemx -mcallgraph-data\n @itemx -mno-callgraph-data\n @opindex mcallgraph-data\n-@opindex mcallgraph-data\n @opindex mno-callgraph-data\n Emit callgraph information.\n \n @item -mslow-bytes\n-@itemx -mslow-bytes\n @itemx -mno-slow-bytes\n @opindex mslow-bytes\n-@opindex mslow-bytes\n @opindex mno-slow-bytes\n Prefer word access when reading byte quantities.\n \n @item -mlittle-endian\n-@itemx -mlittle-endian\n @itemx -mbig-endian\n @opindex mlittle-endian\n-@opindex mlittle-endian\n @opindex mbig-endian\n Generate code for a little endian target.\n \n @item -m210\n-@itemx -m210\n @itemx -m340\n @opindex m210\n-@opindex m210\n @opindex m340\n Generate code for the 210 processor.\n @end table"}]}