{"sha": "e491ed09b31dc8ab89cf84cc5f94b3ee02792d12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ5MWVkMDliMzFkYzhhYjg5Y2Y4NGNjNWY5NGIzZWUwMjc5MmQxMg==", "commit": {"author": {"name": "Johannes Singler", "email": "singler@ira.uka.de", "date": "2008-05-15T07:31:50Z"}, "committer": {"name": "Johannes Singler", "email": "singler@gcc.gnu.org", "date": "2008-05-15T07:31:50Z"}, "message": "parallel_mode.xml: General revision and documentation of new compile-time options for sorting.\n\n2008-05-15  Johannes Singler  <singler@ira.uka.de>\n\n           * doc/xml/manual/parallel_mode.xml:\n           General revision and documentation of new compile-time \n           options for sorting.\n\nFrom-SVN: r135327", "tree": {"sha": "4853ae9f75cdf5a24e713ca6dee0628f1fa23f8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4853ae9f75cdf5a24e713ca6dee0628f1fa23f8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e491ed09b31dc8ab89cf84cc5f94b3ee02792d12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e491ed09b31dc8ab89cf84cc5f94b3ee02792d12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e491ed09b31dc8ab89cf84cc5f94b3ee02792d12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e491ed09b31dc8ab89cf84cc5f94b3ee02792d12/comments", "author": null, "committer": null, "parents": [{"sha": "22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22ac021be44b1e5dc781bcc24339f8c8e189d8e5"}], "stats": {"total": 122, "additions": 77, "deletions": 45}, "files": [{"sha": "c17263b8d7b72233cbc7cfedfbd3c4ed85663ac4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e491ed09b31dc8ab89cf84cc5f94b3ee02792d12/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e491ed09b31dc8ab89cf84cc5f94b3ee02792d12/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e491ed09b31dc8ab89cf84cc5f94b3ee02792d12", "patch": "@@ -1,3 +1,9 @@\n+2008-05-15  Johannes Singler  <singler@ira.uka.de>\n+\n+        * xml/manual/parallel_mode.xml:\n+        General revision and documentation of new compile-time \n+        options for sorting.\n+\n 2008-05-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/std/mutex (mutex::try_lock): Eat errors."}, {"sha": "fb439062feaa2dc1f1ac686198aa0e911b46e990", "filename": "libstdc++-v3/doc/xml/manual/parallel_mode.xml", "status": "modified", "additions": 71, "deletions": 45, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e491ed09b31dc8ab89cf84cc5f94b3ee02792d12/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fparallel_mode.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e491ed09b31dc8ab89cf84cc5f94b3ee02792d12/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fparallel_mode.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fparallel_mode.xml?ref=e491ed09b31dc8ab89cf84cc5f94b3ee02792d12", "patch": "@@ -90,6 +90,8 @@ specific compiler flag.\n \n <para> The parallel mode STL algorithms are currently not exception-safe,\n i.e. user-defined functors must not throw exceptions.\n+Also, the order of execution is not guaranteed for some functions, of course.\n+Therefore, user-defined functors should not have any concurrent side effects.\n </para>\n \n <para> Since the current GCC OpenMP implementation does not support\n@@ -459,34 +461,16 @@ function, if no parallel functions are deemed worthy), based on either\n compile-time or run-time conditions.\n </para>\n \n-<para> Compile-time conditions are referred to as \"embarrassingly\n-parallel,\" and are denoted with the appropriate dispatch object, i.e.,\n-one of <code>__gnu_parallel::sequential_tag</code>,\n-<code>__gnu_parallel::parallel_tag</code>,\n-<code>__gnu_parallel::balanced_tag</code>,\n-<code>__gnu_parallel::unbalanced_tag</code>,\n-<code>__gnu_parallel::omp_loop_tag</code>, or\n-<code>__gnu_parallel::omp_loop_static_tag</code>.\n-</para>\n-\n-<para> Run-time conditions depend on the hardware being used, the number\n-of threads available, etc., and are denoted by the use of the enum\n-<code>__gnu_parallel::parallelism</code>. Values of this enum include\n-<code>__gnu_parallel::sequential</code>,\n-<code>__gnu_parallel::parallel_unbalanced</code>,\n-<code>__gnu_parallel::parallel_balanced</code>,\n-<code>__gnu_parallel::parallel_omp_loop</code>,\n-<code>__gnu_parallel::parallel_omp_loop_static</code>, or\n-<code>__gnu_parallel::parallel_taskqueue</code>.\n-</para>\n+<para> The available signature options are specific for the different\n+algorithms/algorithm classes.</para>\n \n-<para> Putting all this together, the general view of overloads for the\n-parallel algorithms look like this:\n+<para> The general view of overloads for the parallel algorithms look like this:\n </para>\n <itemizedlist>\n    <listitem><para>ISO C++ signature</para></listitem>\n    <listitem><para>ISO C++ signature + sequential_tag argument</para></listitem>\n-   <listitem><para>ISO C++ signature + parallelism argument</para></listitem>\n+   <listitem><para>ISO C++ signature + algorithm-specific tag type\n+    (several signatures)</para></listitem>\n </itemizedlist>\n \n <para> Please note that the implementation may use additional functions\n@@ -512,8 +496,8 @@ by standard OpenMP function calls.\n </para>\n \n <para>\n-To specify the number of threads to be used for an algorithm, use the\n-function <function>omp_set_num_threads</function>. An example:\n+To specify the number of threads to be used for the algorithms globally,\n+use the function <function>omp_set_num_threads</function>. An example:\n </para>\n \n <programlisting>\n@@ -527,12 +511,18 @@ int main()\n   omp_set_dynamic(false);\n   omp_set_num_threads(threads_wanted);\n \n-  // Do work.\n+  // Call parallel mode algorithms.\n \n   return 0;\n }\n </programlisting>\n \n+<para>\n+ Some algorithms allow the number of threads being set for a particular call,\n+ by augmenting the algorithm variant.\n+ See the next section for further information.\n+</para>\n+\n <para>\n Other parts of the runtime environment able to be manipulated include\n nested parallelism (<function>omp_set_nested</function>), schedule kind\n@@ -549,8 +539,7 @@ documentation for more information.\n To force an algorithm to execute sequentially, even though parallelism\n is switched on in general via the macro <constant>_GLIBCXX_PARALLEL</constant>,\n add <classname>__gnu_parallel::sequential_tag()</classname> to the end\n-of the algorithm's argument list, or explicitly qualify the algorithm\n-with the <code>__gnu_parallel::</code> namespace.\n+of the algorithm's argument list.\n </para>\n \n <para>\n@@ -562,22 +551,50 @@ std::sort(v.begin(), v.end(), __gnu_parallel::sequential_tag());\n </programlisting>\n \n <para>\n-or\n+Some parallel algorithm variants can be excluded from compilation by\n+preprocessor defines. See the doxygen documentation on\n+<code>compiletime_settings.h</code> and <code>features.h</code> for details.\n </para>\n \n-<programlisting>\n-__gnu_serial::sort(v.begin(), v.end());\n-</programlisting>\n+<para>\n+For some algorithms, the desired variant can be chosen at compile-time by\n+appending a tag object. The available options are specific to the particular\n+algorithm (class).\n+</para>\n \n-<para> \n-In addition, some parallel algorithm variants can be enabled/disabled/selected \n-at compile-time.\n+<para>\n+For the \"embarrassingly parallel\" algorithms, there is only one \"tag object\n+type\", the enum _Parallelism.\n+It takes one of the following values,\n+<code>__gnu_parallel::parallel_tag</code>,\n+<code>__gnu_parallel::balanced_tag</code>,\n+<code>__gnu_parallel::unbalanced_tag</code>,\n+<code>__gnu_parallel::omp_loop_tag</code>,\n+<code>__gnu_parallel::omp_loop_static_tag</code>.\n+This means that the actual parallelization strategy is chosen at run-time.\n+(Choosing the variants at compile-time will come soon.)\n </para>\n \n <para>\n-See <ulink url=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/a00446.html\"><filename class=\"headerfile\">compiletime_settings.h</filename></ulink> and\n-See <ulink url=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/a00505.html\"><filename class=\"headerfile\">features.h</filename></ulink> for details.\n+For the <code>sort</code> and <code>stable_sort</code> algorithms, there are\n+several possible choices, \n+<code>__gnu_parallel::parallel_tag</code>,\n+<code>__gnu_parallel::default_parallel_tag</code>,\n+<code>__gnu_parallel::multiway_mergesort_tag</code>,\n+<code>__gnu_parallel::multiway_mergesort_exact_tag</code>, \n+<code>__gnu_parallel::multiway_mergesort_sampling_tag</code>,\n+<code>__gnu_parallel::quicksort_tag</code>,\n+<code>__gnu_parallel::balanced_quicksort_tag</code>.\n+Multiway mergesort comes with two splitting strategies for merging, therefore\n+the extra choice. If non is chosen, the default splitting strategy is selected.\n+<code>__gnu_parallel::default_parallel_tag</code> chooses the default parallel\n+sorting algorithm at runtime. <code>__gnu_parallel::parallel_tag</code>\n+postpones the decision to runtime (see next section).\n+The quicksort options cannot be used for <code>stable_sort</code>.\n+For all tags, the number of threads desired for this call can optionally be\n+passed to the tag's constructor.\n </para>\n+\n </sect3>\n \n <sect3 id=\"parallel_mode.design.tuning.settings\" xreflabel=\"_Settings\">\n@@ -593,19 +610,18 @@ of <classname>__gnu_parallel::_Settings</classname> member data.\n \n <para>\n First off, the choice of parallelization strategy: serial, parallel,\n-or implementation-deduced. This corresponds\n+or heuristically deduced. This corresponds\n to <code>__gnu_parallel::_Settings::algorithm_strategy</code> and is a\n value of enum <type>__gnu_parallel::_AlgorithmStrategy</type>\n type. Choices\n include: <type>heuristic</type>, <type>force_sequential</type>,\n-and <type>force_parallel</type>. The default is\n-implementation-deduced, i.e. <type>heuristic</type>.\n+and <type>force_parallel</type>. The default is <type>heuristic</type>.\n </para>\n \n \n <para>\n-Next, the sub-choices for algorithm implementation. Specific\n-algorithms like <function>find</function> or <function>sort</function>\n+Next, the sub-choices for algorithm variant, if not fixed at compile-time.\n+Specific algorithms like <function>find</function> or <function>sort</function>\n can be implemented in multiple ways: when this is the case,\n a <classname>__gnu_parallel::_Settings</classname> member exists to\n pick the default strategy. For\n@@ -626,18 +642,28 @@ active <classname>__gnu_parallel::_Settings</classname> object.  This\n threshold variable follows the following naming scheme:\n <code>__gnu_parallel::_Settings::[algorithm]_minimal_n</code>.  So,\n for <function>fill</function>, the threshold variable\n-is <code>__gnu_parallel::_Settings::fill_minimal_n</code>\n+is <code>__gnu_parallel::_Settings::fill_minimal_n</code>,\n </para>\n \n <para>\n Finally, hardware details like L1/L2 cache size can be hardwired\n via <code>__gnu_parallel::_Settings::L1_cache_size</code> and friends.\n </para>\n \n+<para>\n+</para>\n+\n <para>\n All these configuration variables can be changed by the user, if\n-desired.  Please\n-see <ulink url=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/a00640.html\"><filename class=\"headerfile\">settings.h</filename></ulink>\n+desired.\n+There exists one global instance of the class <classname>_Settings</classname>,\n+i. e. it is a singleton. It can be read and written by calling\n+<code>__gnu_parallel::_Settings::get</code> and\n+<code>__gnu_parallel::_Settings::set</code>, respectively.\n+Please note that the first call return a const object, so direct manipulation\n+is forbidden.\n+See <ulink url=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/a00640.html\">\n+  <filename class=\"headerfile\">settings.h</filename></ulink>\n for complete details.\n </para>\n "}]}