{"sha": "9ebeebda15abeeca2727b09e7cbc7b27aeef736d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWViZWViZGExNWFiZWVjYTI3MjdiMDllN2NiYzdiMjdhZWVmNzM2ZA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dan@cgsoftware.com", "date": "2001-08-03T19:22:55Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2001-08-03T19:22:55Z"}, "message": "ChangeLog: Fix date on previous ChangeLog entry for GCSE.\n\n2001-08-03  Daniel Berlin  <dan@cgsoftware.com>\n\n\t* ChangeLog: Fix date on previous ChangeLog entry for GCSE.\n\n\t* Makefile.in: Add df.h to gcse.c dependencies.\n\nFrom-SVN: r44610", "tree": {"sha": "45a1cc3b1e9a838d8edf9ca836554bce2c5f6829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45a1cc3b1e9a838d8edf9ca836554bce2c5f6829"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ebeebda15abeeca2727b09e7cbc7b27aeef736d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ebeebda15abeeca2727b09e7cbc7b27aeef736d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ebeebda15abeeca2727b09e7cbc7b27aeef736d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ebeebda15abeeca2727b09e7cbc7b27aeef736d/comments", "author": null, "committer": null, "parents": [{"sha": "c6b7404634a291dddfe0e52800b169fd978bc8e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b7404634a291dddfe0e52800b169fd978bc8e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6b7404634a291dddfe0e52800b169fd978bc8e4"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "5926b2eded2e94e0de4b764d90280cf1e86a8e4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebeebda15abeeca2727b09e7cbc7b27aeef736d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebeebda15abeeca2727b09e7cbc7b27aeef736d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ebeebda15abeeca2727b09e7cbc7b27aeef736d", "patch": "@@ -1,10 +1,16 @@\n+2001-08-03  Daniel Berlin  <dan@cgsoftware.com>\n+        \n+\t* ChangeLog: Fix date on previous ChangeLog entry for GCSE.\n+\t\n+\t* Makefile.in: Add df.h to gcse.c dependencies.\n+\n 2001-08-03  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* varasm.c (output_constant_def_contents): Use for the length of a\n \tstring constant either its TREE_STRING_LENGTH or its int_size_in_bytes\n \tdepending on which is larger.\n \n-2001-07-16  Daniel Berlin  <dan@cgsoftware.com>\n+2001-08-03  Daniel Berlin  <dan@cgsoftware.com>\n \n         * gcse.c: Include df.h for use as a dataflow analyzer.\n         Remove regvec."}, {"sha": "fd4da15dd2059a7cd01b9b83cf20f7cd5e8c3029", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ebeebda15abeeca2727b09e7cbc7b27aeef736d/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ebeebda15abeeca2727b09e7cbc7b27aeef736d/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=9ebeebda15abeeca2727b09e7cbc7b27aeef736d", "patch": "@@ -70,9 +70,9 @@ BOOT_LANGUAGES = c @all_boot_languages@\n # TCFLAGS is used for compilations with the GCC just built.\n XCFLAGS =\n TCFLAGS =\n-CFLAGS = -g\n-STAGE1_CFLAGS = -g @stage1_cflags@\n-BOOT_CFLAGS = -g -O2\n+CFLAGS = -g -O2\n+STAGE1_CFLAGS = -g @stage1_cflags@ \n+BOOT_CFLAGS = -g -O2 -pg\n \n # The warning flags are separate from BOOT_CFLAGS because people tend to\n # override optimization flags and we'd like them to still have warnings\n@@ -248,7 +248,7 @@ STMP_FIXINC = stmp-fixinc\n LIMITS_H_TEST = [ -f $(SYSTEM_HEADER_DIR)/limits.h ]\n \n target=@target@\n-target_alias=@target_alias@\n+target_alias=@target@\n xmake_file=@dep_host_xmake_file@\n tmake_file=@dep_tmake_file@\n out_file=$(srcdir)/config/@out_file@\n@@ -750,7 +750,7 @@ OBJS =\t\t\t\t\t\t\t\t\t\\\n  sbitmap.o sched-deps.o\tsched-ebb.o sched-rgn.o sched-vis.o sdbout.o\t\\\n  sibcall.o simplify-rtx.o splay-tree.o ssa.o ssa-ccp.o ssa-dce.o\t\\\n  stmt.o stor-layout.o stringpool.o timevar.o toplev.o tree.o unroll.o\t\\\n- varasm.o varray.o version.o xcoffout.o\t\t\t\t\t\\\n+ varasm.o varray.o version.o xcoffout.o ebitmap.o\t\t\t\\\n  $(GGC) $(out_object_file) $(EXTRA_OBJS)\n \n BACKEND = main.o libbackend.a\n@@ -1187,7 +1187,9 @@ mbchar.o: mbchar.c $(CONFIG_H) $(SYSTEM_H) mbchar.h\n graph.o: graph.c $(CONFIG_H) $(SYSTEM_H) toplev.h flags.h output.h $(RTL_H) \\\n     function.h hard-reg-set.h $(BASIC_BLOCK_H) graph.h\n sbitmap.o: sbitmap.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h hard-reg-set.h \\\n-    $(BASIC_BLOCK_H)\n+    $(BASIC_BLOCK_H) sbitmap.h\n+ebitmap.o: ebitmap.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h hard-reg-set.h \\\n+    $(BASIC_BLOCK_H) ebitmap.h sbitmap.h varray.h $(SPLAY_TREE_H)\n \n COLLECT2_OBJS = collect2.o tlink.o hash.o intl.o underscore.o version.o\n COLLECT2_LIBS = @COLLECT2_LIBS@\n@@ -1450,7 +1452,7 @@ cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) hard-reg-set.h flags.h\n    $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H)\n gcse.o : gcse.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) hard-reg-set.h \\\n    flags.h real.h insn-config.h ggc.h $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n-   function.h output.h toplev.h $(TM_P_H) $(PARAMS_H)\n+   function.h output.h toplev.h $(TM_P_H) $(PARAMS_H) df.h\n sibcall.o : sibcall.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) function.h \\\n    hard-reg-set.h flags.h insn-config.h $(RECOG_H) $(BASIC_BLOCK_H)\n resource.o : resource.c $(CONFIG_H) $(RTL_H) hard-reg-set.h $(SYSTEM_H) \\\n@@ -1468,7 +1470,7 @@ ssa-ccp.o : ssa-ccp.c $(CONFIG_H) system.h $(RTL_H) hard-reg-set.h \\\n     $(BASIC_BLOCK_H) ssa.h insn-config.h $(RECOG_H) output.h \\\n     errors.h $(GGC_H) df.h function.h\n df.o : df.c $(CONFIG_H) system.h $(RTL_H) insn-config.h $(RECOG_H) \\\n-   function.h $(REGS_H) $(OBSTACK_H) hard-reg-set.h $(BASIC_BLOCK_H) df.h\n+   function.h $(REGS_H) $(OBSTACK_H) hard-reg-set.h $(BASIC_BLOCK_H) df.h ebitmap.h\n conflict.o : conflict.c $(CONFIG_H) $(SYSTEM_H) $(OBSTACK_H) $(HASHTAB_H) \\\n    $(RTL_H) hard-reg-set.h $(BASIC_BLOCK_H)\n profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\"}]}