{"sha": "425de7399f1ad69ba9ff0f71ba8f9343798277b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI1ZGU3Mzk5ZjFhZDY5YmE5ZmYwZjcxYmE4ZjkzNDM3OTgyNzdiOQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2005-12-16T06:14:17Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2005-12-16T06:14:17Z"}, "message": "reload.c (find_reloads): Fix comment typo.\n\n\t* reload.c (find_reloads): Fix comment typo.\n\t* recog.h (recog_memoized): Correct comment.\n\nFrom-SVN: r108627", "tree": {"sha": "e153517c727b16180b48778f3b0a70943ad83240", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e153517c727b16180b48778f3b0a70943ad83240"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/425de7399f1ad69ba9ff0f71ba8f9343798277b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/425de7399f1ad69ba9ff0f71ba8f9343798277b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/425de7399f1ad69ba9ff0f71ba8f9343798277b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/425de7399f1ad69ba9ff0f71ba8f9343798277b9/comments", "author": null, "committer": null, "parents": [{"sha": "6416ae7f28ac516401f1f64715effce670b76d6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6416ae7f28ac516401f1f64715effce670b76d6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6416ae7f28ac516401f1f64715effce670b76d6f"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "f2481a5b7b5a2a8a6b5fe13221668ad6ccb80370", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/425de7399f1ad69ba9ff0f71ba8f9343798277b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/425de7399f1ad69ba9ff0f71ba8f9343798277b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=425de7399f1ad69ba9ff0f71ba8f9343798277b9", "patch": "@@ -1,3 +1,8 @@\n+2005-12-16  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* reload.c (find_reloads): Fix comment typo.\n+\t* recog.h (recog_memoized): Correct comment.\n+\n 2005-12-16  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* basic-block.h, config/i386/winnt.c, config/pa/pa.c,"}, {"sha": "83e5c29067d0581244daff27949d00deffeede21", "filename": "gcc/recog.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/425de7399f1ad69ba9ff0f71ba8f9343798277b9/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/425de7399f1ad69ba9ff0f71ba8f9343798277b9/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=425de7399f1ad69ba9ff0f71ba8f9343798277b9", "patch": "@@ -133,7 +133,7 @@ extern int if_test_bypass_p (rtx, rtx);\n \n    This function is the normal interface to instruction recognition.\n    The automatically-generated function `recog' is normally called\n-   through this one.  (The only exception is in combine.c.)  */\n+   through this one.  */\n \n static inline int\n recog_memoized (rtx insn)"}, {"sha": "7066f7d2dc030e28e23b68eb1e5f0e9dc4627b07", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/425de7399f1ad69ba9ff0f71ba8f9343798277b9/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/425de7399f1ad69ba9ff0f71ba8f9343798277b9/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=425de7399f1ad69ba9ff0f71ba8f9343798277b9", "patch": "@@ -4027,7 +4027,7 @@ find_reloads (rtx insn, int replace, int ind_levels, int live_known,\n     {\n       /* We only do this on the last pass through reload, because it is\n \t possible for some data (like reg_equiv_address) to be changed during\n-\t later passes.  Moreover, we loose the opportunity to get a useful\n+\t later passes.  Moreover, we lose the opportunity to get a useful\n \t reload_{in,out}_reg when we do these replacements.  */\n \n       if (replace)"}]}