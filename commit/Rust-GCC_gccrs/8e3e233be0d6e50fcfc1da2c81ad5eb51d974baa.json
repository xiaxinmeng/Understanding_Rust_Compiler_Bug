{"sha": "8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUzZTIzM2JlMGQ2ZTUwZmNmYzFkYTJjODFhZDVlYjUxZDk3NGJhYQ==", "commit": {"author": {"name": "Devang Patel", "email": "dpatel@apple.com", "date": "2004-08-16T20:54:43Z"}, "committer": {"name": "Devang Patel", "email": "dpatel@gcc.gnu.org", "date": "2004-08-16T20:54:43Z"}, "message": "c-common.c (handle_used_attribute): Set DECL_PRESERVE_P.\n\n        * c-common.c (handle_used_attribute): Set DECL_PRESERVE_P.\n        * print-tree.c (print_node): Print DECL_PRESERVE_P.\n        * target-def.h (TARGET_ASM_MARK_DECL_PRESERVED): New #define.\n        (TARGET_ASM_OUT): New member, TARGET_ASM_MARK_DECL_PRESERVED\n        * target.h (struct gcc_target): New member, mark_decl_preserved.\n        * hooks.c (hook_void_charptr): Rename to ...\n        (hook_void_constcharptr): ... new name.\n        * hooks.h (hook_void_charptr): Rename to ..\n        (hook_void_constcharptr): ... new name.\n        * tree.h (DECL_PRESERVE_P): New #define.\n        (struct tree_decl): New member, preserve_flag.\n        * varasm.c (assemble_start_function): Mark decl preserved.\n        (assemble_variable): Same.\n        * darwin.c (darwin_mark_decl_preserved): New function.\n        * darwin.h (TARGET_ASM_MARK_DECL_preserved): New #define.\n        * darwin-protos.h (darwin_mark_decl_preserved): New decl.\n        * doc/tm.texi (TARGET_ASM_MARK_DECL_PRESERVED): Document.\n\n        testsuite:\n        * gcc.dg/darwin-20040809-1.c: New test.\n\nFrom-SVN: r86076", "tree": {"sha": "58140b66c92905176d0b282d72e2e415ec6301bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58140b66c92905176d0b282d72e2e415ec6301bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/comments", "author": null, "committer": null, "parents": [{"sha": "580b3958265f6bca27126b24f20d95c32d00c854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/580b3958265f6bca27126b24f20d95c32d00c854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/580b3958265f6bca27126b24f20d95c32d00c854"}], "stats": {"total": 100, "additions": 96, "deletions": 4}, "files": [{"sha": "30928e1f89a1e9fb7db88d0cc8e6d430e8a265d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -1,3 +1,23 @@\n+2004-08-16  Devang Patel  <dpatel@apple.com>\n+\n+\t* c-common.c (handle_used_attribute): Set DECL_PRESERVE_P.\n+\t* print-tree.c (print_node): Print DECL_PRESERVE_P.\n+\t* target-def.h (TARGET_ASM_MARK_DECL_PRESERVED): New #define.\n+\t(TARGET_ASM_OUT): New member, TARGET_ASM_MARK_DECL_PRESERVED\n+\t* target.h (struct gcc_target): New member, mark_decl_preserved.\n+        * hooks.c (hook_void_charptr): Rename to ...\n+        (hook_void_constcharptr): ... new name.\n+        * hooks.h (hook_void_charptr): Rename to ..\n+        (hook_void_constcharptr): ... new name.\n+\t* tree.h (DECL_PRESERVE_P): New #define.\n+\t(struct tree_decl): New member, preserve_flag.\n+\t* varasm.c (assemble_start_function): Mark decl preserved.\n+\t(assemble_variable): Same.\n+\t* darwin.c (darwin_mark_decl_preserved): New function.\n+\t* darwin.h (TARGET_ASM_MARK_DECL_preserved): New #define.\n+\t* darwin-protos.h (darwin_mark_decl_preserved): New decl.\n+\t* doc/tm.texi (TARGET_ASM_MARK_DECL_PRESERVED): Document.\n+\n 2004-08-16  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* c-decl.c (grokdeclarator): Allow for function definition where"}, {"sha": "4c7eb21e049d8f50422d2f6352fa10a42b698ed3", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -4078,6 +4078,7 @@ handle_used_attribute (tree *pnode, tree name, tree ARG_UNUSED (args),\n       || (TREE_CODE (node) == VAR_DECL && TREE_STATIC (node)))\n     {\n       TREE_USED (node) = 1;\n+      DECL_PRESERVE_P (node) = 1;\n     }\n   else\n     {"}, {"sha": "a5ae08e24998a41196f026da996775a1980d74c1", "filename": "gcc/config/darwin-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fconfig%2Fdarwin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fconfig%2Fdarwin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-protos.h?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -82,6 +82,7 @@ extern void darwin_pragma_unused (struct cpp_reader *);\n extern void darwin_file_end (void);\n \n extern void darwin_make_decl_one_only (tree decl);\n+extern void darwin_mark_decl_preserved (const char *);\n \n /* Expanded by EXTRA_SECTION_FUNCTIONS into varasm.o.  */\n extern void const_section (void);"}, {"sha": "14101f6c72eb8d4146894622b8b2bc49b25ed7cf", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -913,6 +913,14 @@ darwin_make_decl_one_only (tree decl)\n   DECL_SECTION_NAME (decl) = build_string (strlen (sec), sec);\n }\n \n+void\n+darwin_mark_decl_preserved (const char *name)\n+{\n+  fprintf (asm_out_file, \".no_dead_strip \");\n+  assemble_name (asm_out_file, name);\n+  fputc ('\\n', asm_out_file);\n+}\n+\n void\n machopic_select_section (tree exp, int reloc,\n \t\t\t unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED)"}, {"sha": "311c16114592de609f3c84bdd486fd52c07a5325", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -799,6 +799,9 @@ objc_section_init (void)\t\t\t\\\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n   sprintf (LABEL, \"*%s%ld\", PREFIX, (long)(NUM))\n \n+#undef TARGET_ASM_MARK_DECL_PRESERVED\n+#define TARGET_ASM_MARK_DECL_PRESERVED darwin_mark_decl_preserved\n+\n /* Since we have a separate readonly data section, define this so that\n    jump tables end up in text rather than data.  */\n "}, {"sha": "03e0c4a17b224e070d32670f40c4ab3df7b88cc1", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -6804,6 +6804,12 @@ pseudo-op to declare a library function name external.  The name of the\n library function is given by @var{symref}, which is a @code{symbol_ref}.\n @end deftypefn\n \n+@deftypefn {Target Hook} void TARGET_ASM_MARK_DECL_PRESERVED (tree @var{decl})\n+This target hook is a function to output to @var{asm_out_file} an assembler\n+directive to annotate used symbol.  Darwin target use .no_dead_code_strip\n+directive.\n+@end deftypefn\n+\n @defmac ASM_OUTPUT_LABELREF (@var{stream}, @var{name})\n A C statement (sans semicolon) to output to the stdio stream\n @var{stream} a reference in assembler syntax to a label named"}, {"sha": "111b9dcb2534380acc76b85c6bbe9a38715a7694", "filename": "gcc/hooks.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fhooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fhooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.c?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -142,7 +142,7 @@ hook_void_tree (tree a ATTRIBUTE_UNUSED)\n }\n \n void\n-hook_void_charptr (char *a ATTRIBUTE_UNUSED)\n+hook_void_constcharptr (const char *a ATTRIBUTE_UNUSED)\n {\n }\n "}, {"sha": "6b5fda8f9f2068bd9f932a768b036069690085c3", "filename": "gcc/hooks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fhooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fhooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.h?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -37,7 +37,7 @@ extern bool hook_bool_constcharptr_size_t_false (const char *, size_t);\n \n extern void hook_void_void (void);\n extern void hook_void_int (int);\n-extern void hook_void_charptr (char *);\n+extern void hook_void_constcharptr (const char *);\n extern void hook_void_FILEptr_constcharptr (FILE *, const char *);\n extern void hook_void_tree (tree);\n extern void hook_void_tree_treeptr (tree, tree *);"}, {"sha": "829e2c9f3026651904ebd1177d4020856632fe32", "filename": "gcc/print-tree.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -353,6 +353,9 @@ print_node (FILE *file, const char *prefix, tree node, int indent)\n       if (DECL_DEFER_OUTPUT (node))\n \tfputs (\" defer-output\", file);\n \n+      if (DECL_PRESERVE_P (node))\n+\tfputs (\" preserve\", file);\n+\n       if (DECL_LANG_FLAG_0 (node))\n \tfputs (\" decl_0\", file);\n       if (DECL_LANG_FLAG_1 (node))"}, {"sha": "15dc0c9402013f8131b531dd3e515ed28e76bdb6", "filename": "gcc/target-def.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -183,6 +183,10 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #define TARGET_ASM_EXTERNAL_LIBCALL default_external_libcall\n #endif\n \n+#ifndef TARGET_ASM_MARK_DECL_PRESERVED\n+#define TARGET_ASM_MARK_DECL_PRESERVED hook_void_constcharptr\n+#endif\n+\n #define TARGET_ASM_ALIGNED_INT_OP\t\t\t\t\\\n \t\t       {TARGET_ASM_ALIGNED_HI_OP,\t\t\\\n \t\t\tTARGET_ASM_ALIGNED_SI_OP,\t\t\\\n@@ -223,7 +227,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n                         TARGET_ASM_CAN_OUTPUT_MI_THUNK,         \\\n                         TARGET_ASM_FILE_START,                  \\\n                         TARGET_ASM_FILE_END,\t\t\t\\\n-\t\t\tTARGET_ASM_EXTERNAL_LIBCALL}\n+\t\t\tTARGET_ASM_EXTERNAL_LIBCALL,            \\\n+                        TARGET_ASM_MARK_DECL_PRESERVED}\n \n /* Scheduler hooks.  All of these default to null pointers, which\n    haifa-sched.c looks for and handles.  */"}, {"sha": "1611f2a61dcd373325d623acdfb97f72b4ddd72b", "filename": "gcc/target.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -172,6 +172,11 @@ struct gcc_target\n     /* Output an assembler pseudo-op to declare a library function name\n        external.  */\n     void (*external_libcall) (rtx);\n+\n+     /* Output an assembler directive to mark decl live. This instructs\n+\tlinker to not dead code strip this symbol.  */\n+    void (*mark_decl_preserved) (const char *);\n+\n   } asm_out;\n \n   /* Functions relating to instruction scheduling.  */"}, {"sha": "319fe1da9ec1b7f1b2651efa9b70af914c6c6bab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -1,3 +1,7 @@\n+2004-08-16  Devang Patel  <dpatel@apple.com>\n+\n+\t* gcc.dg/darwin-20040809-1.c: New test.\n+\t\n 2004-08-16  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* gcc.dg/funcdef-attr-1.c: New test."}, {"sha": "9b2b79429c61d55172f6f6ac02233ccbe376fc16", "filename": "gcc/testsuite/gcc.dg/darwin-20040812-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-20040812-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-20040812-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-20040812-1.c?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -0,0 +1,24 @@\n+/* Test dead code strip support.  */\n+/* Contributed by Devang Patel  <dpatel@apple.com>  */\n+ \n+/* { dg-do compile } */\n+\n+const char my_version_string[] __attribute__((__used__))\n+  = \"Do not remove this string\\n\";\n+ \n+ static int\n+ __attribute__((__used__))\n+      static_debug_routine()\n+{\n+   int i;\n+   i = 42;\n+}\n+ \n+int\n+main ()\n+{\n+   return 0;\n+}\n+ \n+/* { dg-final { scan-assembler \".no_dead_strip _my_version_string\" } } */\n+/* { dg-final { scan-assembler \".no_dead_strip _static_debug_routine\" } } */"}, {"sha": "ff03d9c7aa63812488d78c9a4ec630c30ffb4385", "filename": "gcc/tree.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -2165,6 +2165,11 @@ struct tree_binfo GTY (())\n #define DECL_POSSIBLY_INLINED(DECL) \\\n   FUNCTION_DECL_CHECK (DECL)->decl.possibly_inlined\n \n+/* Nonzero for a decl that is decorated using attribute used.\n+   This indicates compiler tools that this decl needs to be preserved.  */\n+#define DECL_PRESERVE_P(DECL) \\\n+  DECL_CHECK (DECL)->decl.preserve_flag\n+\n /* Enumerate visibility settings.  */\n #ifndef SYMBOL_VISIBILITY_DEFINED\n #define SYMBOL_VISIBILITY_DEFINED\n@@ -2232,7 +2237,8 @@ struct tree_decl GTY(())\n   unsigned lang_flag_7 : 1;\n \n   unsigned possibly_inlined : 1;\n-  /* 15 unused bits.  */\n+  unsigned preserve_flag: 1;\n+  /* 13 unused bits.  */\n \n   union tree_decl_u1 {\n     /* In a FUNCTION_DECL for which DECL_BUILT_IN holds, this is"}, {"sha": "5dbcb228038f39e65574a166965520ee238335f8", "filename": "gcc/varasm.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=8e3e233be0d6e50fcfc1da2c81ad5eb51d974baa", "patch": "@@ -1222,6 +1222,9 @@ assemble_start_function (tree decl, const char *fnname)\n       maybe_assemble_visibility (decl);\n     }\n \n+  if (DECL_PRESERVE_P (decl))\n+    targetm.asm_out.mark_decl_preserved (fnname);\n+\n   /* Do any machine/system dependent processing of the function name.  */\n #ifdef ASM_DECLARE_FUNCTION_NAME\n   ASM_DECLARE_FUNCTION_NAME (asm_out_file, fnname, current_function_decl);\n@@ -1562,6 +1565,9 @@ assemble_variable (tree decl, int top_level ATTRIBUTE_UNUSED,\n   if (TREE_PUBLIC (decl))\n     maybe_assemble_visibility (decl);\n \n+  if (DECL_PRESERVE_P (decl))\n+    targetm.asm_out.mark_decl_preserved (name);\n+\n   /* Output any data that we will need to use the address of.  */\n   if (DECL_INITIAL (decl) == error_mark_node)\n     reloc = contains_pointers_p (TREE_TYPE (decl)) ? 3 : 0;"}]}