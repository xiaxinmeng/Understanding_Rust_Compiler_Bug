{"sha": "096759ebeca0c3c30de5d37bd53da80020eff2af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk2NzU5ZWJlY2EwYzNjMzBkZTVkMzdiZDUzZGE4MDAyMGVmZjJhZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-09-20T16:56:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-09-20T16:56:12Z"}, "message": "* predict.c (expr_expected_value): Use *_CLASS_P macros.\n\nFrom-SVN: r87763", "tree": {"sha": "375c5aa144859d99d79a0a057566e33f350288df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/375c5aa144859d99d79a0a057566e33f350288df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/096759ebeca0c3c30de5d37bd53da80020eff2af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/096759ebeca0c3c30de5d37bd53da80020eff2af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/096759ebeca0c3c30de5d37bd53da80020eff2af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/096759ebeca0c3c30de5d37bd53da80020eff2af/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1cdcb2cfd16e771b7a5a452099a4b5a933083351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cdcb2cfd16e771b7a5a452099a4b5a933083351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cdcb2cfd16e771b7a5a452099a4b5a933083351"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "ec5ed7993aa66881bb01756a45596ef1f3f8f0af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096759ebeca0c3c30de5d37bd53da80020eff2af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096759ebeca0c3c30de5d37bd53da80020eff2af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=096759ebeca0c3c30de5d37bd53da80020eff2af", "patch": "@@ -1,3 +1,7 @@\n+2004-09-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* predict.c (expr_expected_value): Use *_CLASS_P macros.\n+\n 2004-09-20  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-pre.c (compute_antic_aux): Use malloc'd worklist, to avoid "}, {"sha": "c0e7df2a97254f1a754cdd23da489353b9fe6dd9", "filename": "gcc/predict.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096759ebeca0c3c30de5d37bd53da80020eff2af/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096759ebeca0c3c30de5d37bd53da80020eff2af/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=096759ebeca0c3c30de5d37bd53da80020eff2af", "patch": "@@ -944,8 +944,7 @@ expr_expected_value (tree expr, bitmap visited)\n \t  return TREE_VALUE (TREE_CHAIN (TREE_OPERAND (expr, 1)));\n \t}\n     }\n-  if (TREE_CODE_CLASS (TREE_CODE (expr)) == '2'\n-      || TREE_CODE_CLASS (TREE_CODE (expr)) == '<')\n+  if (BINARY_CLASS_P (expr) || COMPARISON_CLASS_P (expr))\n     {\n       tree op0, op1, res;\n       op0 = expr_expected_value (TREE_OPERAND (expr, 0), visited);\n@@ -959,7 +958,7 @@ expr_expected_value (tree expr, bitmap visited)\n \treturn res;\n       return NULL;\n     }\n-  if (TREE_CODE_CLASS (TREE_CODE (expr)) == '1')\n+  if (UNARY_CLASS_P (expr))\n     {\n       tree op0, res;\n       op0 = expr_expected_value (TREE_OPERAND (expr, 0), visited);"}]}