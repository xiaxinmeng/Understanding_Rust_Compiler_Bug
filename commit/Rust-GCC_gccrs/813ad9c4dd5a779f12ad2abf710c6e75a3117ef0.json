{"sha": "813ad9c4dd5a779f12ad2abf710c6e75a3117ef0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEzYWQ5YzRkZDVhNzc5ZjEyYWQyYWJmNzEwYzZlNzVhMzExN2VmMA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-09-22T00:48:23Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-09-22T00:48:23Z"}, "message": "libstdc++: Fix division by zero in std::sample\n\nThis fixes a division by zero in the selection-sampling std::__sample\noverload when the input range is empty (and hence __unsampled_sz is 0).\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/stl_algo.h (__sample): Exit early when the\n\tinput range is empty.\n\t* testsuite/25_algorithms/sample/3.cc: New test.", "tree": {"sha": "eb59e04eaa2006f8861caf593bab2d6f3f44eda8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb59e04eaa2006f8861caf593bab2d6f3f44eda8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/813ad9c4dd5a779f12ad2abf710c6e75a3117ef0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813ad9c4dd5a779f12ad2abf710c6e75a3117ef0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/813ad9c4dd5a779f12ad2abf710c6e75a3117ef0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813ad9c4dd5a779f12ad2abf710c6e75a3117ef0/comments", "author": null, "committer": null, "parents": [{"sha": "f017952d31ba8fa965106505bed5844cc1a63b4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f017952d31ba8fa965106505bed5844cc1a63b4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f017952d31ba8fa965106505bed5844cc1a63b4b"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "2478b5857c15e3a5e3bec49108e0fed6031da070", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813ad9c4dd5a779f12ad2abf710c6e75a3117ef0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813ad9c4dd5a779f12ad2abf710c6e75a3117ef0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=813ad9c4dd5a779f12ad2abf710c6e75a3117ef0", "patch": "@@ -5775,6 +5775,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n       using _Gen = remove_reference_t<_UniformRandomBitGenerator>;\n       using __uc_type = common_type_t<typename _Gen::result_type, _USize>;\n \n+      if (__first == __last)\n+\treturn __out;\n+\n       __distrib_type __d{};\n       _Size __unsampled_sz = std::distance(__first, __last);\n       __n = std::min(__n, __unsampled_sz);"}, {"sha": "e89c40e27ee7146f3b98e66220c37f38b1789627", "filename": "libstdc++-v3/testsuite/25_algorithms/sample/3.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813ad9c4dd5a779f12ad2abf710c6e75a3117ef0/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsample%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813ad9c4dd5a779f12ad2abf710c6e75a3117ef0/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsample%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsample%2F3.cc?ref=813ad9c4dd5a779f12ad2abf710c6e75a3117ef0", "patch": "@@ -0,0 +1,50 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++17 } }\n+// { dg-require-cstdint \"\" }\n+\n+#include <algorithm>\n+#include <random>\n+#include <testsuite_hooks.h>\n+#include <testsuite_iterators.h>\n+\n+std::mt19937 rng;\n+\n+using std::sample;\n+using __gnu_test::test_container;\n+using __gnu_test::output_iterator_wrapper;\n+using __gnu_test::forward_iterator_wrapper;\n+\n+void\n+test01()\n+{\n+  const int in = 0;\n+  test_container<const int, forward_iterator_wrapper> pop(&in, &in);\n+  int out;\n+  test_container<int, output_iterator_wrapper> samp(&out, &out + 1);\n+\n+  auto it = sample(pop.begin(), pop.end(), samp.begin(), 1, rng);\n+  VERIFY( it.ptr == &out );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}