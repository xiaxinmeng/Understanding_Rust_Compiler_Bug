{"sha": "de6bc4da463e949ed63a636c3d8fdac0859d1c4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU2YmM0ZGE0NjNlOTQ5ZWQ2M2E2MzZjM2Q4ZmRhYzA4NTlkMWM0Zg==", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2020-05-30T18:01:06Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:15Z"}, "message": "Lower NegationExprs", "tree": {"sha": "5afac641d21af3db1399d0394fb6ee7546dc86f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5afac641d21af3db1399d0394fb6ee7546dc86f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de6bc4da463e949ed63a636c3d8fdac0859d1c4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6bc4da463e949ed63a636c3d8fdac0859d1c4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6bc4da463e949ed63a636c3d8fdac0859d1c4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6bc4da463e949ed63a636c3d8fdac0859d1c4f/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f230adf6179df01a709bacc8e7e83a160d04aeb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f230adf6179df01a709bacc8e7e83a160d04aeb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f230adf6179df01a709bacc8e7e83a160d04aeb2"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "9531cf20dbe5148baad6ba8124464a7886a1d734", "filename": "gcc/rust/ast/rust-expr.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6bc4da463e949ed63a636c3d8fdac0859d1c4f/gcc%2Frust%2Fast%2Frust-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6bc4da463e949ed63a636c3d8fdac0859d1c4f/gcc%2Frust%2Fast%2Frust-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-expr.h?ref=de6bc4da463e949ed63a636c3d8fdac0859d1c4f", "patch": "@@ -501,7 +501,6 @@ class NegationExpr : public OperatorExpr\n     NOT\n   };\n \n-private:\n   // Note: overload negation via std::ops::Neg and not via std::ops::Not\n   // Negation only works for signed integer and floating-point types, NOT only\n   // works for boolean and integer types (via bitwise NOT)\n@@ -531,6 +530,8 @@ class NegationExpr : public OperatorExpr\n \n   virtual void accept_vis (ASTVisitor &vis) OVERRIDE;\n \n+  Expr *get_expr () { return main_or_left_expr.get (); }\n+\n protected:\n   // Use covariance to implement clone function as returning this object rather\n   // than base"}, {"sha": "2630c0f1c6066d31f72230a1b4c0f43f5acf7ea5", "filename": "gcc/rust/backend/rust-compile.cc", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6bc4da463e949ed63a636c3d8fdac0859d1c4f/gcc%2Frust%2Fbackend%2Frust-compile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6bc4da463e949ed63a636c3d8fdac0859d1c4f/gcc%2Frust%2Fbackend%2Frust-compile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile.cc?ref=de6bc4da463e949ed63a636c3d8fdac0859d1c4f", "patch": "@@ -288,9 +288,36 @@ Compilation::visit (AST::DereferenceExpr &expr)\n void\n Compilation::visit (AST::ErrorPropagationExpr &expr)\n {}\n+\n void\n Compilation::visit (AST::NegationExpr &expr)\n-{}\n+{\n+  Bexpression *root = NULL;\n+  VISIT_POP (expr.get_expr ()->get_locus_slow (), expr.get_expr (), root,\n+\t     exprs);\n+  if (root == NULL)\n+    {\n+      rust_error_at (expr.get_expr ()->get_locus_slow (), \"failed to compile\");\n+      return;\n+    }\n+\n+  Operator op;\n+  switch (expr.negation_type)\n+    {\n+    case AST::NegationExpr::NEGATE:\n+      op = OPERATOR_MINUS;\n+      break;\n+    case AST::NegationExpr::NOT:\n+      op = OPERATOR_NOT;\n+      break;\n+    default:\n+      rust_fatal_error (expr.get_locus_slow (), \"failed to compile operator\");\n+      return;\n+    }\n+\n+  auto unary = backend->unary_expression (op, root, expr.get_locus_slow ());\n+  exprs.push_back (unary);\n+}\n \n void\n Compilation::visit (AST::ArithmeticOrLogicalExpr &expr)"}]}