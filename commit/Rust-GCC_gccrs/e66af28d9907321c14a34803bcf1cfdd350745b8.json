{"sha": "e66af28d9907321c14a34803bcf1cfdd350745b8", "node_id": "C_kwDOANBUbNoAKGU2NmFmMjhkOTkwNzMyMWMxNGEzNDgwM2JjZjFjZmRkMzUwNzQ1Yjg", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-05-04T00:16:24Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-05-04T00:16:24Z"}, "message": "Daily bump.", "tree": {"sha": "838ca9ddb518cc84f2039d20c1664e48c5c2e17b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/838ca9ddb518cc84f2039d20c1664e48c5c2e17b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e66af28d9907321c14a34803bcf1cfdd350745b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e66af28d9907321c14a34803bcf1cfdd350745b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e66af28d9907321c14a34803bcf1cfdd350745b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e66af28d9907321c14a34803bcf1cfdd350745b8/comments", "author": null, "committer": null, "parents": [{"sha": "ec70591fbb99ea81f6559c041d065fff79424656", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec70591fbb99ea81f6559c041d065fff79424656", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec70591fbb99ea81f6559c041d065fff79424656"}], "stats": {"total": 157, "additions": 156, "deletions": 1}, "files": [{"sha": "9f122ad54df28cee7257a0d856e404a811eba8c4", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66af28d9907321c14a34803bcf1cfdd350745b8/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66af28d9907321c14a34803bcf1cfdd350745b8/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=e66af28d9907321c14a34803bcf1cfdd350745b8", "patch": "@@ -1,3 +1,7 @@\n+2022-05-03  Christophe Lyon  <christophe.lyon@arm.com>\n+\n+\t* dfp.m4: Add license header.\n+\n 2022-03-29  Chenghua Xu  <xuchenghua@loongson.cn>\n \t    Lulu Cheng  <chenglulu@loongson.cn>\n "}, {"sha": "661d6754e0f90c852c277652d9adc3c0c77bef4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66af28d9907321c14a34803bcf1cfdd350745b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66af28d9907321c14a34803bcf1cfdd350745b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e66af28d9907321c14a34803bcf1cfdd350745b8", "patch": "@@ -1,3 +1,54 @@\n+2022-05-03  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR tree-optimization/102950\n+\t* range-op.cc (wi_optimize_signed_bitwise_op): New function to\n+\tdetermine bounds of bitwise operations on signed types.\n+\t(operator_bitwise_and::wi_fold): Call the above function.\n+\t(operator_bitwise_or::wi_fold): Likewise.\n+\t(operator_bitwise_xor::wi_fold): Likewise.  Additionally, the\n+\tresult can't be zero if the operands can't be equal.\n+\n+2022-05-03  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.cc (darwin_label_is_anonymous_local_objc_name): Make\n+\tprotocol class methods linker-visible.\n+\n+2022-05-03  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/105079\n+\t* config/i386/sse.md (*vec_extract<mode>_0_mem): New pre-reload\n+\tdefine_insn_and_split pattern.\n+\n+2022-05-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/105083\n+\t* tree-scalar-evolution.cc (scev_initialize): Verify we\n+\thave appropriate loop state.\n+\t* tree-ssa-dce.cc (perform_tree_ssa_dce): Re-order SCEV and\n+\tloop init and finalization.\n+\n+2022-05-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/105461\n+\t* opts.cc (finish_options): Match the condition to\n+\tdisable flag_var_tracking to that of process_options.\n+\n+2022-05-03  Richard Biener  <rguenther@suse.de>\n+\n+\t* opts.cc: #undef OPTIONS_SET_P.\n+\t(finish_options): Use opts_set instead of OPTIONS_SET_P.\n+\n+2022-05-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105394\n+\t* tree-vect-generic.cc (expand_vector_condition): Adjust\n+\tcomp_width for non-integer mode masks as well.\n+\n+2022-05-03  Marcel Vollweiler  <marcel@codesourcery.com>\n+\n+\t* omp-low.cc (omp_runtime_api_call): Added get_mapped_ptr to\n+\tomp_runtime_apis array.\n+\n 2022-05-02  Richard Biener  <rguenther@suse.de>\n \n \t* tree-scalar-evolution.cc (expression_expensive_p):"}, {"sha": "10d1e2ec460dabdacfd57eb8c70d7ad53209b720", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66af28d9907321c14a34803bcf1cfdd350745b8/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66af28d9907321c14a34803bcf1cfdd350745b8/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=e66af28d9907321c14a34803bcf1cfdd350745b8", "patch": "@@ -1 +1 @@\n-20220503\n+20220504"}, {"sha": "0a70dfe3a6cadc0b5ff8c5c70530c7dddce00fb9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66af28d9907321c14a34803bcf1cfdd350745b8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66af28d9907321c14a34803bcf1cfdd350745b8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e66af28d9907321c14a34803bcf1cfdd350745b8", "patch": "@@ -1,3 +1,15 @@\n+2022-05-03  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105351\n+\t* cp-tree.h (finish_non_static_data_member): Add defaulted\n+\tcomplain parameter.\n+\t* pt.cc (tsubst_copy_and_build): Pass complain to\n+\tfinish_non_static_data_member.\n+\t* semantics.cc (finish_non_static_data_member): Respect complain\n+\tparameter.\n+\t(finish_qualified_id_expr): Pass complain to\n+\tfinish_non_static_data_member.\n+\n 2022-05-02  Jason Merrill  <jason@redhat.com>\n \n \t* pt.cc (tsubst_copy_and_build) [TEMPLATE_ID_EXPR]: Copy location."}, {"sha": "de03b04f66c5c2f906750bbc962d2990bfafc31b", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66af28d9907321c14a34803bcf1cfdd350745b8/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66af28d9907321c14a34803bcf1cfdd350745b8/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=e66af28d9907321c14a34803bcf1cfdd350745b8", "patch": "@@ -1,3 +1,10 @@\n+2022-05-03  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc-next-runtime-abi-02.cc (next_runtime_abi_02_protocol_decl): Do\n+\tnot dead-strip the runtime meta-data symbols.\n+\t(build_v2_classrefs_table): Likewise.\n+\t(build_v2_protocol_list_address_table): Likewise.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* Make-lang.in: Rename .c names to .cc."}, {"sha": "2f3609b124ecd8dba4928946f693d34f2dfa338c", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66af28d9907321c14a34803bcf1cfdd350745b8/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66af28d9907321c14a34803bcf1cfdd350745b8/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=e66af28d9907321c14a34803bcf1cfdd350745b8", "patch": "@@ -1,3 +1,7 @@\n+2022-05-03  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* sv.po: Update.\n+\n 2022-04-26  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "7dd5d06f73f786ee1d1133c07ba3a338d2607c2f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66af28d9907321c14a34803bcf1cfdd350745b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66af28d9907321c14a34803bcf1cfdd350745b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e66af28d9907321c14a34803bcf1cfdd350745b8", "patch": "@@ -1,3 +1,56 @@\n+2022-05-03  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105351\n+\t* g++.dg/template/sfinae33.C: New test.\n+\n+2022-05-03  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* gcc.c-torture/compile/attr-complex-method-2.c: Accept both __divdc3\n+\tand __gnu_divdc3 as valid libgcc function names.\n+\t* gcc.dg/complex-6.c: Ditto for __mulsc3.\n+\t* gcc.dg/complex-7.c: Ditto for __muldc3.\n+\n+2022-05-03  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* gcc.dg/memchr.c: Skip for default_packed targets.\n+\t* gcc.dg/memcmp-3.c: Ditto.\n+\n+2022-05-03  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* gcc.dg/Wattributes-8.c: Add annotations for default_packed\n+\ttargets.\n+\n+2022-05-03  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* gcc.dg/lower-subreg-1.c: Skip for PRU.\n+\n+2022-05-03  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* gcc.dg/Wno-frame-address.c: Skip for PRU target.\n+\n+2022-05-03  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR tree-optimization/102950\n+\t* gcc.dg/pr102950.c: New test case.\n+\t* gcc.dg/tree-ssa/evrp10.c: New test case.\n+\n+2022-05-03  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/105079\n+\t* gcc.target/i386/pr105079.c: New test.\n+\t* gcc.target/i386/pr95483-1.c (dg-options): Use -msse4.1.\n+\n+2022-05-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/105461\n+\t* gcc.dg/pr105461.c: New testcase.\n+\n+2022-05-03  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-31a.c: Update\n+\tthe expected message for the case in which unaligned accesses\n+\tare not allowed.\n+\n 2022-05-02  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp2a/lambda-pack-init7.C: Check column number."}, {"sha": "299df41ad09e09ebcb6e664ecfd1b07442118f20", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66af28d9907321c14a34803bcf1cfdd350745b8/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66af28d9907321c14a34803bcf1cfdd350745b8/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e66af28d9907321c14a34803bcf1cfdd350745b8", "patch": "@@ -1,3 +1,21 @@\n+2022-05-03  Marcel Vollweiler  <marcel@codesourcery.com>\n+\n+\t* libgomp.map: Added omp_get_mapped_ptr.\n+\t* libgomp.texi: Tagged omp_get_mapped_ptr as supported.\n+\t* omp.h.in: Added omp_get_mapped_ptr.\n+\t* omp_lib.f90.in: Added interface for omp_get_mapped_ptr.\n+\t* omp_lib.h.in: Likewise.\n+\t* target.c (omp_get_mapped_ptr): Added implementation of\n+\tomp_get_mapped_ptr.\n+\t* testsuite/libgomp.c-c++-common/get-mapped-ptr-1.c: New test.\n+\t* testsuite/libgomp.c-c++-common/get-mapped-ptr-2.c: New test.\n+\t* testsuite/libgomp.c-c++-common/get-mapped-ptr-3.c: New test.\n+\t* testsuite/libgomp.c-c++-common/get-mapped-ptr-4.c: New test.\n+\t* testsuite/libgomp.fortran/get-mapped-ptr-1.f90: New test.\n+\t* testsuite/libgomp.fortran/get-mapped-ptr-2.f90: New test.\n+\t* testsuite/libgomp.fortran/get-mapped-ptr-3.f90: New test.\n+\t* testsuite/libgomp.fortran/get-mapped-ptr-4.f90: New test.\n+\n 2022-04-28  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR fortran/104717"}, {"sha": "239d3f15b45e6880396e9ae9160825a079eecd7a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66af28d9907321c14a34803bcf1cfdd350745b8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66af28d9907321c14a34803bcf1cfdd350745b8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e66af28d9907321c14a34803bcf1cfdd350745b8", "patch": "@@ -1,3 +1,9 @@\n+2022-05-03  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR c++/105324\n+\t* testsuite/20_util/from_chars/pr105324.cc: Guard test body\n+\twith conditional for floating-point overloads of from_char.\n+\n 2022-05-02  Patrick Palka  <ppalka@redhat.com>\n \n \tPR libstdc++/103911"}]}