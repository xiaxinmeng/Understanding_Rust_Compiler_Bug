{"sha": "ddb0f66e6c1e846bdc217075c9a770bfd0b01970", "node_id": "C_kwDOANBUbNoAKGRkYjBmNjZlNmMxZTg0NmJkYzIxNzA3NWM5YTc3MGJmZDBiMDE5NzA", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2023-04-05T14:44:54Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2023-04-05T14:44:54Z"}, "message": "Add assember CFI directives to millicode division and remainder routines.\n\nThe millicode division and remainder routines trap division by zero.\nThe unwinder needs these directives to unwind divide by zero traps.\n\n2023-04-05  John David Anglin  <danglin@gcc.gnu.org>\n\nlibgcc/ChangeLog:\n\n\tPR target/109374\n\t* config/pa/milli64.S (RETURN_COLUMN): Define.\n\t($$divI): Add CFI directives.\n\t($$divU): Likewise.\n\t($$remI): Likewise.\n\t($$remU): Likewise.", "tree": {"sha": "ceb799eff1ddcc8225f9ca97d832f03d88461cbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ceb799eff1ddcc8225f9ca97d832f03d88461cbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddb0f66e6c1e846bdc217075c9a770bfd0b01970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb0f66e6c1e846bdc217075c9a770bfd0b01970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddb0f66e6c1e846bdc217075c9a770bfd0b01970", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb0f66e6c1e846bdc217075c9a770bfd0b01970/comments", "author": null, "committer": null, "parents": [{"sha": "f0f372fab3e70622a4ea6fe4073991e1bb506e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f372fab3e70622a4ea6fe4073991e1bb506e4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0f372fab3e70622a4ea6fe4073991e1bb506e4e"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "e1c84f48d25822cea836f3b44bfc8830881a9859", "filename": "libgcc/config/pa/milli64.S", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb0f66e6c1e846bdc217075c9a770bfd0b01970/libgcc%2Fconfig%2Fpa%2Fmilli64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb0f66e6c1e846bdc217075c9a770bfd0b01970/libgcc%2Fconfig%2Fpa%2Fmilli64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Fmilli64.S?ref=ddb0f66e6c1e846bdc217075c9a770bfd0b01970", "patch": "@@ -105,8 +105,10 @@ sar:\t.reg\t%cr11\t/* Shift Amount Register */\n rp:\t.reg    r2\t/* return pointer */\n #ifdef pa64\n mrp:\t.reg\tr2 \t/* millicode return pointer */\n+#define RETURN_COLUMN\t2\n #else\n mrp:\t.reg\tr31\t/* millicode return pointer */\n+#define RETURN_COLUMN\t31\n #endif\n ret0:\t.reg    r28\t/* return value */\n ret1:\t.reg    r29\t/* return value (high part of double) */\n@@ -313,6 +315,8 @@ RDEFINE(temp1,arg0)\n \t.import $$divI_15,millicode\n \t.export $$divI,millicode\n \t.export\t$$divoI,millicode\n+\t.cfi_startproc\n+\t.cfi_return_column RETURN_COLUMN\n \t.proc\n \t.callinfo\tmillicode\n \t.entry\n@@ -484,6 +488,7 @@ LSYM(negative1)\n \taddo\targ0,arg1,r0\t/*  trap iff dividend==0x80000000 && divisor==-1 */\n \t.exit\n \t.procend\n+\t.cfi_endproc\n \t.end\n #endif\n \n@@ -543,6 +548,8 @@ RDEFINE(temp1,arg0)\n \t.import $$divU_12,millicode\n \t.import $$divU_14,millicode\n \t.import $$divU_15,millicode\n+\t.cfi_startproc\n+\t.cfi_return_column RETURN_COLUMN\n \t.proc\n \t.callinfo\tmillicode\n \t.entry\n@@ -706,6 +713,7 @@ LSYM(big_divisor)\n \taddc\tr0,r0,retreg\n \t.exit\n \t.procend\n+\t.cfi_endproc\n \t.end\n #endif\n \n@@ -750,6 +758,8 @@ RDEFINE(retreg,ret1)\n \n \tSUBSPA_MILLI\n \tATTR_MILLI\n+\t.cfi_startproc\n+\t.cfi_return_column RETURN_COLUMN\n \t.proc\n \t.callinfo millicode\n \t.entry\n@@ -875,6 +885,7 @@ LSYM(finish)\n \tnop\n \t.exit\n \t.procend\n+\t.cfi_endproc\n #ifdef milliext\n \t.origin 0x00000200\n #endif\n@@ -922,6 +933,8 @@ RDEFINE(rmndr,ret1)\t/*  r29 */\n \tSUBSPA_MILLI\n \tATTR_MILLI\n \t.export $$remU,millicode\n+\t.cfi_startproc\n+\t.cfi_return_column RETURN_COLUMN\n \t.proc\n \t.callinfo\tmillicode\n \t.entry\n@@ -1013,6 +1026,7 @@ LSYM(special_case)\n \tnop\n \t.exit\n \t.procend\n+\t.cfi_endproc\n \t.end\n #endif\n "}]}