{"sha": "4debe14deb949b6ba322c14fc63e457678cfda23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRlYmUxNGRlYjk0OWI2YmEzMjJjMTRmYzYzZTQ1NzY3OGNmZGEyMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2002-01-28T20:06:15Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-01-28T20:06:15Z"}, "message": "ostream_inserter_arith.cc (test03): Fix to deal correctly with both 32 bit and 64 bit architectures\n\n2002-01-28  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* testsuite/27_io/ostream_inserter_arith.cc (test03):\n\tFix to deal correctly with both 32 bit and 64 bit architectures\n\nFrom-SVN: r49295", "tree": {"sha": "ca791396afe261a9752f8bb8fb213a831c81ce45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca791396afe261a9752f8bb8fb213a831c81ce45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4debe14deb949b6ba322c14fc63e457678cfda23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4debe14deb949b6ba322c14fc63e457678cfda23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4debe14deb949b6ba322c14fc63e457678cfda23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4debe14deb949b6ba322c14fc63e457678cfda23/comments", "author": null, "committer": null, "parents": [{"sha": "7dc3f8c01897a5df46880f9555db96deabfb0697", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc3f8c01897a5df46880f9555db96deabfb0697", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dc3f8c01897a5df46880f9555db96deabfb0697"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "044f549587bcbf28a5ce1048e99a6ee28d0d62fd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4debe14deb949b6ba322c14fc63e457678cfda23/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4debe14deb949b6ba322c14fc63e457678cfda23/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4debe14deb949b6ba322c14fc63e457678cfda23", "patch": "@@ -1,3 +1,8 @@\n+2002-01-28  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* testsuite/27_io/ostream_inserter_arith.cc (test03):\n+\tFix to deal correctly with both 32 bit and 64 bit architectures\n+\n 2002-01-25  Loren Rittle <ljrittle@acm.org>\n \n \t* testsuite/thread/pthread1.cc: Use one condition variable"}, {"sha": "bf93950c8c4095e5a56663f956b0312f5105fc61", "filename": "libstdc++-v3/testsuite/27_io/ostream_inserter_arith.cc", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4debe14deb949b6ba322c14fc63e457678cfda23/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_arith.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4debe14deb949b6ba322c14fc63e457678cfda23/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_arith.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_arith.cc?ref=4debe14deb949b6ba322c14fc63e457678cfda23", "patch": "@@ -311,16 +311,29 @@ test03()\n   stringbuf strbuf;\n   ostream o(&strbuf);\n \n-  o << oct << s << ' ' << hex << s; \n-  VERIFY( strbuf.str() == \"177777 ffff\" ); // Assuming 2byte-shorts\n+  o << oct << s << ' ' << hex << s;\n+  if (sizeof(short) == 2)\n+    VERIFY( strbuf.str() == \"177777 ffff\" );\n+  else // sizeof(short) == 4\n+    VERIFY( strbuf.str() == \"37777777777 ffffffff\" );\n   strbuf.str(str_blank);\n \n-  o << oct << i << ' ' << hex << i; \n-  VERIFY( strbuf.str() == \"37777777777 ffffffff\" );\n+  o << oct << i << ' ' << hex << i;\n+  if (sizeof(int) == 2)\n+    VERIFY( strbuf.str() == \"177777 ffff\" );\n+  else if (sizeof(int) == 4)\n+    VERIFY( strbuf.str() == \"37777777777 ffffffff\" );\n+  else // sizeof(int) == 8\n+    VERIFY( strbuf.str() == \"1777777777777777777777 \"\n+\t    \"ffffffffffffffff\" );\n   strbuf.str(str_blank);\n \n-  o << oct << l << ' ' << hex << l; \n-  VERIFY( strbuf.str() == \"37777777777 ffffffff\" );\n+  o << oct << l << ' ' << hex << l;\n+  if (sizeof(long) == 4)\n+    VERIFY( strbuf.str() == \"37777777777 ffffffff\" );\n+  else // sizeof(long) == 8\n+    VERIFY( strbuf.str() == \"1777777777777777777777 \"\n+\t    \"ffffffffffffffff\" );\n   strbuf.str(str_blank);\n \n   o << showpos << hex << showbase << 11;"}]}