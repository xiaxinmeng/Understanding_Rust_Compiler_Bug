{"sha": "b42186f16474032ac2fa82027d3b7bf31e94daef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQyMTg2ZjE2NDc0MDMyYWMyZmE4MjAyN2QzYjdiZjMxZTk0ZGFlZg==", "commit": {"author": {"name": "Mike Stump", "email": "mikestump@comcast.net", "date": "2010-02-19T19:06:38Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2010-02-19T19:06:38Z"}, "message": "re PR objc/43061 (47 new GCC HEAD@156527 regressions)\n\n        PR objc/43061\n        * cgraphunit.c (process_function_and_variable_attributes): Check\n\tDECL_PRESERVE_P instead of looking up attribute \"used\".\n        * ipa-pure-const.c (check_decl): Likewise.\n        * ipa-reference.c (has_proper_scope_for_analysis): Likewise.\n        * ipa-type-escape.c (has_proper_scope_for_analysis): Likewise.\n        * config/sol2.c (solaris_insert_attributes): Set DECL_PRESERVE_P\n        instead of attribute \"used\".\n        * config/sol2-c.c (solaris_pragma_init): Likewise.\n        (solaris_pragma_fini): Likewise.\n\nFrom-SVN: r156907", "tree": {"sha": "7833337ec015312bc0a4f42179ae921a7ef30c24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7833337ec015312bc0a4f42179ae921a7ef30c24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b42186f16474032ac2fa82027d3b7bf31e94daef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b42186f16474032ac2fa82027d3b7bf31e94daef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b42186f16474032ac2fa82027d3b7bf31e94daef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b42186f16474032ac2fa82027d3b7bf31e94daef/comments", "author": null, "committer": null, "parents": [{"sha": "cf9280bf7e26b68be590b813d46aea29db5061de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9280bf7e26b68be590b813d46aea29db5061de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf9280bf7e26b68be590b813d46aea29db5061de"}], "stats": {"total": 50, "additions": 30, "deletions": 20}, "files": [{"sha": "e724239e8fe50c71f7b9b260f2d2d19883cd8392", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b42186f16474032ac2fa82027d3b7bf31e94daef", "patch": "@@ -1,3 +1,16 @@\n+2010-02-19  Mike Stump  <mikestump@comcast.net>\n+\n+\tPR objc/43061\n+\t* cgraphunit.c (process_function_and_variable_attributes): Check\n+\tDECL_PRESERVE_P instead of looking up attribute \"used\".\n+\t* ipa-pure-const.c (check_decl): Likewise.\n+\t* ipa-reference.c (has_proper_scope_for_analysis): Likewise.\n+\t* ipa-type-escape.c (has_proper_scope_for_analysis): Likewise.\n+\t* config/sol2.c (solaris_insert_attributes): Set DECL_PRESERVE_P\n+\tinstead of attribute \"used\".\n+\t* config/sol2-c.c (solaris_pragma_init): Likewise.\n+\t(solaris_pragma_fini): Likewise.\n+\n 2010-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* ipa-struct-reorg.c (make_field_acc_node, gen_cluster, peel_field):"}, {"sha": "37eee71231f79514ab88a7ca09215c16cdc08923", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=b42186f16474032ac2fa82027d3b7bf31e94daef", "patch": "@@ -885,7 +885,7 @@ process_function_and_variable_attributes (struct cgraph_node *first,\n   for (node = cgraph_nodes; node != first; node = node->next)\n     {\n       tree decl = node->decl;\n-      if (lookup_attribute (\"used\", DECL_ATTRIBUTES (decl)))\n+      if (DECL_PRESERVE_P (decl))\n \t{\n \t  mark_decl_referenced (decl);\n \t  if (node->local.finalized)\n@@ -904,7 +904,7 @@ process_function_and_variable_attributes (struct cgraph_node *first,\n   for (vnode = varpool_nodes; vnode != first_var; vnode = vnode->next)\n     {\n       tree decl = vnode->decl;\n-      if (lookup_attribute (\"used\", DECL_ATTRIBUTES (decl)))\n+      if (DECL_PRESERVE_P (decl))\n \t{\n \t  mark_decl_referenced (decl);\n \t  vnode->force_output = true;"}, {"sha": "601db9735ee2a68498821a38b6a7d25d81e05b15", "filename": "gcc/config/sol2-c.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fconfig%2Fsol2-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fconfig%2Fsol2-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-c.c?ref=b42186f16474032ac2fa82027d3b7bf31e94daef", "patch": "@@ -170,9 +170,10 @@ solaris_pragma_init (cpp_reader *pfile ATTRIBUTE_UNUSED)\n       tree decl = identifier_global_value (t);\n       if (decl && DECL_P (decl))\n \t{\n-\t  tree init_list = build_tree_list (get_identifier (\"init\"),\n-\t\t\t\t\t    NULL);\n-\t  tree attrs = tree_cons (get_identifier (\"used\"), NULL, init_list);\n+\t  tree attrs = build_tree_list (get_identifier (\"init\"),\n+\t\t\t\t\tNULL);\n+\t  TREE_USED (decl) = 1;\n+\t  DECL_PRESERVE_P (decl) = 1;\n \t  decl_attributes (&decl, attrs, 0);\n \t}\n       else\n@@ -228,9 +229,10 @@ solaris_pragma_fini (cpp_reader *pfile ATTRIBUTE_UNUSED)\n       tree decl = identifier_global_value (t);\n       if (decl && DECL_P (decl))\n \t{\n-\t  tree fini_list = build_tree_list (get_identifier (\"fini\"),\n-\t\t\t\t\t    NULL);\n-\t  tree attrs = tree_cons (get_identifier (\"used\"), NULL, fini_list);\n+\t  tree attrs = build_tree_list (get_identifier (\"fini\"),\n+\t\t\t\t\tNULL);\n+\t  TREE_USED (decl) = 1;\n+\t  DECL_PRESERVE_P (decl) = 1;\n \t  decl_attributes (&decl, attrs, 0);\n \t}\n       else"}, {"sha": "493816c188d002c2eb250f1b597ef42983b582e1", "filename": "gcc/config/sol2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fconfig%2Fsol2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fconfig%2Fsol2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.c?ref=b42186f16474032ac2fa82027d3b7bf31e94daef", "patch": "@@ -70,8 +70,8 @@ solaris_insert_attributes (tree decl, tree *attributes)\n \t  {\n \t    *attributes = tree_cons (get_identifier (\"init\"), NULL,\n \t\t\t\t     *attributes);\n-\t    *attributes = tree_cons (get_identifier (\"used\"), NULL,\n-\t\t\t\t     *attributes);\n+\t    TREE_USED (decl) = 1;\n+\t    DECL_PRESERVE_P (decl) = 1;\n \t    next = TREE_CHAIN (*x);\n \t    ggc_free (*x);\n \t    *x = next;\n@@ -87,8 +87,8 @@ solaris_insert_attributes (tree decl, tree *attributes)\n \t  {\n \t    *attributes = tree_cons (get_identifier (\"fini\"), NULL,\n \t\t\t\t     *attributes);\n-\t    *attributes = tree_cons (get_identifier (\"used\"), NULL,\n-\t\t\t\t     *attributes);\n+\t    TREE_USED (decl) = 1;\n+\t    DECL_PRESERVE_P (decl) = 1;\n \t    next = TREE_CHAIN (*x);\n \t    ggc_free (*x);\n \t    *x = next;"}, {"sha": "806faf654af3316ca91106de6677c8f6157b2266", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=b42186f16474032ac2fa82027d3b7bf31e94daef", "patch": "@@ -159,7 +159,7 @@ check_decl (funct_state local,\n \n   /* If the variable has the \"used\" attribute, treat it as if it had a\n      been touched by the devil.  */\n-  if (lookup_attribute (\"used\", DECL_ATTRIBUTES (t)))\n+  if (DECL_PRESERVE_P (t))\n     {\n       local->pure_const_state = IPA_NEITHER;\n       if (dump_file)"}, {"sha": "f00377fb9dbdad6f7b81321fda1ea30d9fd9a35c", "filename": "gcc/ipa-reference.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fipa-reference.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fipa-reference.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.c?ref=b42186f16474032ac2fa82027d3b7bf31e94daef", "patch": "@@ -306,7 +306,7 @@ has_proper_scope_for_analysis (tree t)\n {\n   /* If the variable has the \"used\" attribute, treat it as if it had a\n      been touched by the devil.  */\n-  if (lookup_attribute (\"used\", DECL_ATTRIBUTES (t)))\n+  if (DECL_PRESERVE_P (t))\n     return false;\n \n   /* Do not want to do anything with volatile except mark any"}, {"sha": "8d773f123202b7f1f980b7db37c54a669d19d5f9", "filename": "gcc/ipa-type-escape.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fipa-type-escape.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fipa-type-escape.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-type-escape.c?ref=b42186f16474032ac2fa82027d3b7bf31e94daef", "patch": "@@ -1072,7 +1072,7 @@ has_proper_scope_for_analysis (tree t)\n   tree type = get_canon_type (TREE_TYPE (t), false, false);\n   if (!type) return;\n \n-  if (lookup_attribute (\"used\", DECL_ATTRIBUTES (t)))\n+  if (DECL_PRESERVE_P (t))\n     {\n       mark_interesting_type (type, FULL_ESCAPE);\n       return;"}, {"sha": "10cc9bce3067a51357e409a0695ff99cd1f6208b", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42186f16474032ac2fa82027d3b7bf31e94daef/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=b42186f16474032ac2fa82027d3b7bf31e94daef", "patch": "@@ -1527,11 +1527,6 @@ finish_var_decl (tree var, tree initializer)\n   /* We reserve the right for the runtime to use/modify these variables\n      in ways that are opaque to us.  */\n   DECL_PRESERVE_P (var) = 1;\n-  /* ipa*.c/cgraphunit.c use lookup attribute rather than testing\n-     DECL_PRESERVE_P.  Once they switch to testing DECL_PRESERVE_P,\n-     this can be removed. */\n-  DECL_ATTRIBUTES (var) = tree_cons (get_identifier (\"used\"), NULL, \n-\t\t\t\t     DECL_ATTRIBUTES (var)) ;\n }\n \n /* Find the decl for the constant string class reference.  This is only"}]}