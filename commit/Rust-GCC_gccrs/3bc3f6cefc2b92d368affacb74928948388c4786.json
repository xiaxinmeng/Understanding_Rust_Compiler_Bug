{"sha": "3bc3f6cefc2b92d368affacb74928948388c4786", "node_id": "C_kwDOANBUbNoAKDNiYzNmNmNlZmMyYjkyZDM2OGFmZmFjYjc0OTI4OTQ4Mzg4YzQ3ODY", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-09T13:57:00Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-09T16:53:20Z"}, "message": "Remove dead Fortran function.\n\ngcc/fortran/ChangeLog:\n\n\t* symbol.c (gfc_get_ultimate_derived_super_type): Remove.", "tree": {"sha": "cb71dd3b7a61edca3665a35536f94c8bad678c31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb71dd3b7a61edca3665a35536f94c8bad678c31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bc3f6cefc2b92d368affacb74928948388c4786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bc3f6cefc2b92d368affacb74928948388c4786", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bc3f6cefc2b92d368affacb74928948388c4786", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bc3f6cefc2b92d368affacb74928948388c4786/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5aa7a09369a7258793e364431d3945e8c3b94044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aa7a09369a7258793e364431d3945e8c3b94044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aa7a09369a7258793e364431d3945e8c3b94044"}], "stats": {"total": 17, "additions": 0, "deletions": 17}, "files": [{"sha": "173c36f51bc9041cef81e6a92b1ca293667c8d2b", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc3f6cefc2b92d368affacb74928948388c4786/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc3f6cefc2b92d368affacb74928948388c4786/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=3bc3f6cefc2b92d368affacb74928948388c4786", "patch": "@@ -5106,23 +5106,6 @@ gfc_get_derived_super_type (gfc_symbol* derived)\n }\n \n \n-/* Get the ultimate super-type of a given derived type.  */\n-\n-static gfc_symbol*\n-gfc_get_ultimate_derived_super_type (gfc_symbol* derived)\n-{\n-  if (!derived->attr.extension)\n-    return NULL;\n-\n-  derived = gfc_get_derived_super_type (derived);\n-\n-  if (derived->attr.extension)\n-    return gfc_get_ultimate_derived_super_type (derived);\n-  else\n-    return derived;\n-}\n-\n-\n /* Check if a derived type t2 is an extension of (or equal to) a type t1.  */\n \n bool"}]}