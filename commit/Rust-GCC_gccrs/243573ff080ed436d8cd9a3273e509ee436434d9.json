{"sha": "243573ff080ed436d8cd9a3273e509ee436434d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQzNTczZmYwODBlZDQzNmQ4Y2Q5YTMyNzNlNTA5ZWU0MzY0MzRkOQ==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2021-04-23T14:02:19Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-05T13:09:10Z"}, "message": "[Ada] Print JSON continuation messages as separate messages\n\ngcc/ada/\n\n\t* errout.adb (Output_JSON_Message): Recursively call\n\tOutput_JSON_Message for continuation messages instead of\n\tappending their content to the initial message.", "tree": {"sha": "134b05dd7c209b71181e04ca692b71bf64dc599c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/134b05dd7c209b71181e04ca692b71bf64dc599c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/243573ff080ed436d8cd9a3273e509ee436434d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243573ff080ed436d8cd9a3273e509ee436434d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/243573ff080ed436d8cd9a3273e509ee436434d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243573ff080ed436d8cd9a3273e509ee436434d9/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4b023c4267801dce118923421124e0d9f65075f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4b023c4267801dce118923421124e0d9f65075f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4b023c4267801dce118923421124e0d9f65075f"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "0122304da6ff5ebfd3bc851653c0f0b271c5aaa3", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 32, "deletions": 7, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243573ff080ed436d8cd9a3273e509ee436434d9/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243573ff080ed436d8cd9a3273e509ee436434d9/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=243573ff080ed436d8cd9a3273e509ee436434d9", "patch": "@@ -2079,6 +2079,9 @@ package body Errout is\n \n    procedure Output_JSON_Message (Error_Id : Error_Msg_Id) is\n \n+      function Is_Continuation (E : Error_Msg_Id) return Boolean;\n+      --  Return True if E is a continuation message.\n+\n       procedure Write_JSON_Escaped_String (Str : String_Ptr);\n       --  Write each character of Str, taking care of preceding each quote and\n       --  backslash with a backslash. Note that this escaping differs from what\n@@ -2099,6 +2102,15 @@ package body Errout is\n       --  Span.Last are different from Span.Ptr, they will be printed as JSON\n       --  locations under the names \"start\" and \"finish\".\n \n+      -----------------------\n+      --  Is_Continuation  --\n+      -----------------------\n+\n+      function Is_Continuation (E : Error_Msg_Id) return Boolean is\n+      begin\n+         return E <= Last_Error_Msg and then Errors.Table (E).Msg_Cont;\n+      end Is_Continuation;\n+\n       -------------------------------\n       -- Write_JSON_Escaped_String --\n       -------------------------------\n@@ -2155,6 +2167,10 @@ package body Errout is\n \n       E : Error_Msg_Id := Error_Id;\n \n+      Print_Continuations : constant Boolean := not Is_Continuation (E);\n+      --  Do not print continuations messages as children of the current\n+      --  message if the current message is a continuation message.\n+\n    --  Start of processing for Output_JSON_Message\n \n    begin\n@@ -2186,18 +2202,27 @@ package body Errout is\n \n       Write_Str (\"],\"\"message\"\":\"\"\");\n       Write_JSON_Escaped_String (Errors.Table (E).Text);\n-\n-      --  Print message continuations if present\n+      Write_Str (\"\"\"\");\n \n       E := E + 1;\n \n-      while E <= Last_Error_Msg and then Errors.Table (E).Msg_Cont loop\n-         Write_Str (\", \");\n-         Write_JSON_Escaped_String (Errors.Table (E).Text);\n+      if Print_Continuations and then Is_Continuation (E) then\n+\n+         Write_Str (\",\"\"children\"\": [\");\n+         Output_JSON_Message (E);\n          E := E + 1;\n-      end loop;\n \n-      Write_Str (\"\"\"}\");\n+         while Is_Continuation (E) loop\n+            Write_Str (\", \");\n+            Output_JSON_Message (E);\n+            E := E + 1;\n+         end loop;\n+\n+         Write_Str (\"]\");\n+\n+      end if;\n+\n+      Write_Str (\"}\");\n    end Output_JSON_Message;\n \n    ---------------------"}]}