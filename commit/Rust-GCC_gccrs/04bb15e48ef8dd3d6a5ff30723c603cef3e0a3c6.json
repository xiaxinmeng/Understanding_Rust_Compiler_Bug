{"sha": "04bb15e48ef8dd3d6a5ff30723c603cef3e0a3c6", "node_id": "C_kwDOANBUbNoAKDA0YmIxNWU0OGVmOGRkM2Q2YTVmZjMwNzIzYzYwM2NlZjNlMGEzYzY", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-09-07T11:19:05Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-09-07T11:19:05Z"}, "message": "[gdb/build] Fix build breaker with --enable-shared\n\nWhen building gdb with --enable-shared, I run into:\n...\nld: build/zlib/libz.a(libz_a-inffast.o): relocation R_X86_64_32S against \\\n  `.rodata' can not be used when making a shared object; recompile with -fPIC\nld: build/zlib/libz.a(libz_a-inflate.o): warning: relocation against \\\n  `inflateResetKeep' in read-only section `.text'\ncollect2: error: ld returned 1 exit status\nmake[3]: *** [libbfd.la] Error 1\n...\n\nThis is a regression since commit a08bdb159bb (\"[gdb/build] Fix gdbserver\nbuild with -fsanitize=thread\").\n\nThe problem is that a single case statement in configure is shared to handle\nspecial requirements for both the host libiberty and host zlib, which has the\neffect that only one is handled.\n\nFix this by handling libiberty and zlib each in its own case statement.\n\nBuild on x86_64-linux, with and without --enable-shared.\n\nChangeLog:\n\n2022-09-07  Tom de Vries  <tdevries@suse.de>\n\n\t* configure.ac: Set extra_host_libiberty_configure_flags and\n\textra_host_zlib_configure_flags in separate case statements.\n\t* configure: Regenerate.", "tree": {"sha": "99044e58ef203995ee12a3a984fe0d1f35b2757c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99044e58ef203995ee12a3a984fe0d1f35b2757c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04bb15e48ef8dd3d6a5ff30723c603cef3e0a3c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04bb15e48ef8dd3d6a5ff30723c603cef3e0a3c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04bb15e48ef8dd3d6a5ff30723c603cef3e0a3c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04bb15e48ef8dd3d6a5ff30723c603cef3e0a3c6/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22cefe5c22a90d20e2d9f629402b0522c03fa59c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22cefe5c22a90d20e2d9f629402b0522c03fa59c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22cefe5c22a90d20e2d9f629402b0522c03fa59c"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "e7604dc6ff08cdf96aefd61a42bdd27e064451e8", "filename": "configure", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04bb15e48ef8dd3d6a5ff30723c603cef3e0a3c6/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04bb15e48ef8dd3d6a5ff30723c603cef3e0a3c6/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=04bb15e48ef8dd3d6a5ff30723c603cef3e0a3c6", "patch": "@@ -9188,13 +9188,18 @@ fi\n \n # Sometimes we have special requirements for the host libiberty.\n extra_host_libiberty_configure_flags=\n-extra_host_zlib_configure_flags=\n case \" $configdirs \" in\n   *\" lto-plugin \"* | *\" libcc1 \"* | *\" gdbserver \"*)\n     # When these are to be built as shared libraries, the same applies to\n     # libiberty.\n     extra_host_libiberty_configure_flags=--enable-shared\n     ;;\n+esac\n+\n+\n+# Sometimes we have special requirements for the host zlib.\n+extra_host_zlib_configure_flags=\n+case \" $configdirs \" in\n   *\" bfd \"*)\n     # When bfd is to be built as a shared library, the same applies to\n     # zlib.\n@@ -9205,7 +9210,6 @@ case \" $configdirs \" in\n esac\n \n \n-\n # Produce a warning message for the subdirs we can't configure.\n # This isn't especially interesting in the Cygnus tree, but in the individual\n # FSF releases, it's important to let people know when their machine isn't"}, {"sha": "3cfd9b41fcab1f370727356725c8e9a8503ba87a", "filename": "configure.ac", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04bb15e48ef8dd3d6a5ff30723c603cef3e0a3c6/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04bb15e48ef8dd3d6a5ff30723c603cef3e0a3c6/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=04bb15e48ef8dd3d6a5ff30723c603cef3e0a3c6", "patch": "@@ -2439,13 +2439,18 @@ fi\n \n # Sometimes we have special requirements for the host libiberty.\n extra_host_libiberty_configure_flags=\n-extra_host_zlib_configure_flags=\n case \" $configdirs \" in\n   *\" lto-plugin \"* | *\" libcc1 \"* | *\" gdbserver \"*)\n     # When these are to be built as shared libraries, the same applies to\n     # libiberty.\n     extra_host_libiberty_configure_flags=--enable-shared\n     ;;\n+esac\n+AC_SUBST(extra_host_libiberty_configure_flags)\n+\n+# Sometimes we have special requirements for the host zlib.\n+extra_host_zlib_configure_flags=\n+case \" $configdirs \" in\n   *\" bfd \"*)\n     # When bfd is to be built as a shared library, the same applies to\n     # zlib.\n@@ -2454,7 +2459,6 @@ case \" $configdirs \" in\n     fi\n     ;;\n esac\n-AC_SUBST(extra_host_libiberty_configure_flags)\n AC_SUBST(extra_host_zlib_configure_flags)\n \n # Produce a warning message for the subdirs we can't configure."}]}