{"sha": "70d22cdd77fdd3a11514735a7992b5f07bd50159", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBkMjJjZGQ3N2ZkZDNhMTE1MTQ3MzVhNzk5MmI1ZjA3YmQ1MDE1OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-05-26T22:04:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-05-26T22:04:50Z"}, "message": "re PR target/85918 (Conversions to/from [unsigned] long long are not vectorized for AVX512DQ target)\n\n\tPR target/85918\n\t* config/i386/i386.md (fixunssuffix, floatunssuffix): New code\n\tattributes.\n\t* config/i386/sse.md\n\t(<floatsuffix>float<sseintvecmodelower><mode>2<mask_name><round_name>):\n\tRename to ...\n\t(float<floatunssuffix><sseintvecmodelower><mode>2<mask_name><round_name>):\n\t... this.\n\t(<floatsuffix>float<sselongvecmodelower><mode>2<mask_name><round_name>):\n\tRename to ...\n\t(float<floatunssuffix><sselongvecmodelower><mode>2<mask_name><round_name>):\n\t... this.\n\t(*<floatsuffix>floatv2div2sf2): Rename to ...\n\t(*float<floatunssuffix>v2div2sf2): ... this.\n\t(<floatsuffix>floatv2div2sf2_mask): Rename to ...\n\t(float<floatunssuffix>v2div2sf2_mask): ... this.\n\t(*<floatsuffix>floatv2div2sf2_mask_1): Rename to ...\n\t(*float<floatunssuffix>v2div2sf2_mask_1): ... this.\n\t(<fixsuffix>fix_truncv8dfv8si2<mask_name><round_saeonly_name>): Rename\n\tto ...\n\t(fix<fixunssuffix>_truncv8dfv8si2<mask_name><round_saeonly_name>):\n\t... this.\n\t(<fixsuffix>fix_trunc<mode><sseintvecmodelower>2<mask_name><round_saeonly_name>):\n\tRename to ...\n\t(fix<fixunssuffix>_trunc<mode><sseintvecmodelower>2<mask_name><round_saeonly_name>):\n\t... this.\n\t(<fixsuffix>fix_trunc<mode><sselongvecmodelower>2<mask_name><round_saeonly_name>):\n\tRename to ...\n\t(fix<fixunssuffix>_trunc<mode><sselongvecmodelower>2<mask_name><round_saeonly_name>):\n\t... this.\n\t(<fixsuffix>fix_truncv2sfv2di2<mask_name>): Rename to ...\n\t(fix<fixunssuffix>_truncv2sfv2di2<mask_name>): ... this.\n\t(vec_pack_ufix_trunc_<mode>): Use gen_fixuns_truncv8dfv8si2 instead of\n\tgen_ufix_truncv8dfv8si2.\n\t* config/i386/i386-builtin.def (__builtin_ia32_cvttpd2uqq256_mask,\n\t__builtin_ia32_cvttpd2uqq128_mask, __builtin_ia32_cvttps2uqq256_mask,\n\t__builtin_ia32_cvttps2uqq128_mask, __builtin_ia32_cvtuqq2ps256_mask,\n\t__builtin_ia32_cvtuqq2ps128_mask, __builtin_ia32_cvtuqq2pd256_mask,\n\t__builtin_ia32_cvtuqq2pd128_mask, __builtin_ia32_cvttpd2udq512_mask,\n\t__builtin_ia32_cvtuqq2ps512_mask, __builtin_ia32_cvtuqq2pd512_mask,\n\t__builtin_ia32_cvttps2uqq512_mask, __builtin_ia32_cvttpd2uqq512_mask):\n\tUse fixuns instead ufix or floatuns instead ufloat in CODE_FOR_ names.\n\n\t* gcc.target/i386/avx512dq-pr85918.c: New test.\n\nFrom-SVN: r260797", "tree": {"sha": "4bcf82fa19ea19ec29a9767788b2d991d00889b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bcf82fa19ea19ec29a9767788b2d991d00889b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70d22cdd77fdd3a11514735a7992b5f07bd50159", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70d22cdd77fdd3a11514735a7992b5f07bd50159", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70d22cdd77fdd3a11514735a7992b5f07bd50159", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70d22cdd77fdd3a11514735a7992b5f07bd50159/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80c820d8c7763991028109e716336b0ab2fc069f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80c820d8c7763991028109e716336b0ab2fc069f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80c820d8c7763991028109e716336b0ab2fc069f"}], "stats": {"total": 144, "additions": 119, "deletions": 25}, "files": [{"sha": "3d16ca7108c04f0197b43e670072fd436926f78d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70d22cdd77fdd3a11514735a7992b5f07bd50159/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70d22cdd77fdd3a11514735a7992b5f07bd50159/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70d22cdd77fdd3a11514735a7992b5f07bd50159", "patch": "@@ -1,3 +1,48 @@\n+2018-05-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/85918\n+\t* config/i386/i386.md (fixunssuffix, floatunssuffix): New code\n+\tattributes.\n+\t* config/i386/sse.md\n+\t(<floatsuffix>float<sseintvecmodelower><mode>2<mask_name><round_name>):\n+\tRename to ...\n+\t(float<floatunssuffix><sseintvecmodelower><mode>2<mask_name><round_name>):\n+\t... this.\n+\t(<floatsuffix>float<sselongvecmodelower><mode>2<mask_name><round_name>):\n+\tRename to ...\n+\t(float<floatunssuffix><sselongvecmodelower><mode>2<mask_name><round_name>):\n+\t... this.\n+\t(*<floatsuffix>floatv2div2sf2): Rename to ...\n+\t(*float<floatunssuffix>v2div2sf2): ... this.\n+\t(<floatsuffix>floatv2div2sf2_mask): Rename to ...\n+\t(float<floatunssuffix>v2div2sf2_mask): ... this.\n+\t(*<floatsuffix>floatv2div2sf2_mask_1): Rename to ...\n+\t(*float<floatunssuffix>v2div2sf2_mask_1): ... this.\n+\t(<fixsuffix>fix_truncv8dfv8si2<mask_name><round_saeonly_name>): Rename\n+\tto ...\n+\t(fix<fixunssuffix>_truncv8dfv8si2<mask_name><round_saeonly_name>):\n+\t... this.\n+\t(<fixsuffix>fix_trunc<mode><sseintvecmodelower>2<mask_name><round_saeonly_name>):\n+\tRename to ...\n+\t(fix<fixunssuffix>_trunc<mode><sseintvecmodelower>2<mask_name><round_saeonly_name>):\n+\t... this.\n+\t(<fixsuffix>fix_trunc<mode><sselongvecmodelower>2<mask_name><round_saeonly_name>):\n+\tRename to ...\n+\t(fix<fixunssuffix>_trunc<mode><sselongvecmodelower>2<mask_name><round_saeonly_name>):\n+\t... this.\n+\t(<fixsuffix>fix_truncv2sfv2di2<mask_name>): Rename to ...\n+\t(fix<fixunssuffix>_truncv2sfv2di2<mask_name>): ... this.\n+\t(vec_pack_ufix_trunc_<mode>): Use gen_fixuns_truncv8dfv8si2 instead of\n+\tgen_ufix_truncv8dfv8si2.\n+\t* config/i386/i386-builtin.def (__builtin_ia32_cvttpd2uqq256_mask,\n+\t__builtin_ia32_cvttpd2uqq128_mask, __builtin_ia32_cvttps2uqq256_mask,\n+\t__builtin_ia32_cvttps2uqq128_mask, __builtin_ia32_cvtuqq2ps256_mask,\n+\t__builtin_ia32_cvtuqq2ps128_mask, __builtin_ia32_cvtuqq2pd256_mask,\n+\t__builtin_ia32_cvtuqq2pd128_mask, __builtin_ia32_cvttpd2udq512_mask,\n+\t__builtin_ia32_cvtuqq2ps512_mask, __builtin_ia32_cvtuqq2pd512_mask,\n+\t__builtin_ia32_cvttps2uqq512_mask, __builtin_ia32_cvttpd2uqq512_mask):\n+\tUse fixuns instead ufix or floatuns instead ufloat in CODE_FOR_ names.\n+\n 2018-05-24  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/85900"}, {"sha": "14041293795d9720fbf0324da079f37377430854", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70d22cdd77fdd3a11514735a7992b5f07bd50159/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70d22cdd77fdd3a11514735a7992b5f07bd50159/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=70d22cdd77fdd3a11514735a7992b5f07bd50159", "patch": "@@ -1612,8 +1612,8 @@ BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512bw_db\n BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512bw_dbpsadbwv8hi_mask, \"__builtin_ia32_dbpsadbw128_mask\", IX86_BUILTIN_DBPSADBW128, UNKNOWN, (int) V8HI_FTYPE_V16QI_V16QI_INT_V8HI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_fix_truncv4dfv4di2_mask, \"__builtin_ia32_cvttpd2qq256_mask\", IX86_BUILTIN_CVTTPD2QQ256, UNKNOWN, (int) V4DI_FTYPE_V4DF_V4DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_fix_truncv2dfv2di2_mask, \"__builtin_ia32_cvttpd2qq128_mask\", IX86_BUILTIN_CVTTPD2QQ128, UNKNOWN, (int) V2DI_FTYPE_V2DF_V2DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ufix_truncv4dfv4di2_mask, \"__builtin_ia32_cvttpd2uqq256_mask\", IX86_BUILTIN_CVTTPD2UQQ256, UNKNOWN, (int) V4DI_FTYPE_V4DF_V4DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ufix_truncv2dfv2di2_mask, \"__builtin_ia32_cvttpd2uqq128_mask\", IX86_BUILTIN_CVTTPD2UQQ128, UNKNOWN, (int) V2DI_FTYPE_V2DF_V2DI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_fixuns_truncv4dfv4di2_mask, \"__builtin_ia32_cvttpd2uqq256_mask\", IX86_BUILTIN_CVTTPD2UQQ256, UNKNOWN, (int) V4DI_FTYPE_V4DF_V4DI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_fixuns_truncv2dfv2di2_mask, \"__builtin_ia32_cvttpd2uqq128_mask\", IX86_BUILTIN_CVTTPD2UQQ128, UNKNOWN, (int) V2DI_FTYPE_V2DF_V2DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_fix_notruncv4dfv4di2_mask, \"__builtin_ia32_cvtpd2qq256_mask\", IX86_BUILTIN_CVTPD2QQ256, UNKNOWN, (int) V4DI_FTYPE_V4DF_V4DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_fix_notruncv2dfv2di2_mask, \"__builtin_ia32_cvtpd2qq128_mask\", IX86_BUILTIN_CVTPD2QQ128, UNKNOWN, (int) V2DI_FTYPE_V2DF_V2DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ufix_notruncv4dfv4di2_mask, \"__builtin_ia32_cvtpd2uqq256_mask\", IX86_BUILTIN_CVTPD2UQQ256, UNKNOWN, (int) V4DI_FTYPE_V4DF_V4DI_UQI)\n@@ -1622,8 +1622,8 @@ BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ufix_notruncv4dfv4si2_mask, \"__builtin\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ufix_notruncv2dfv2si2_mask, \"__builtin_ia32_cvtpd2udq128_mask\", IX86_BUILTIN_CVTPD2UDQ128_MASK, UNKNOWN, (int) V4SI_FTYPE_V2DF_V4SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_fix_truncv4sfv4di2_mask, \"__builtin_ia32_cvttps2qq256_mask\", IX86_BUILTIN_CVTTPS2QQ256, UNKNOWN, (int) V4DI_FTYPE_V4SF_V4DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_fix_truncv2sfv2di2_mask, \"__builtin_ia32_cvttps2qq128_mask\", IX86_BUILTIN_CVTTPS2QQ128, UNKNOWN, (int) V2DI_FTYPE_V4SF_V2DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ufix_truncv4sfv4di2_mask, \"__builtin_ia32_cvttps2uqq256_mask\", IX86_BUILTIN_CVTTPS2UQQ256, UNKNOWN, (int) V4DI_FTYPE_V4SF_V4DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ufix_truncv2sfv2di2_mask, \"__builtin_ia32_cvttps2uqq128_mask\", IX86_BUILTIN_CVTTPS2UQQ128, UNKNOWN, (int) V2DI_FTYPE_V4SF_V2DI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_fixuns_truncv4sfv4di2_mask, \"__builtin_ia32_cvttps2uqq256_mask\", IX86_BUILTIN_CVTTPS2UQQ256, UNKNOWN, (int) V4DI_FTYPE_V4SF_V4DI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_fixuns_truncv2sfv2di2_mask, \"__builtin_ia32_cvttps2uqq128_mask\", IX86_BUILTIN_CVTTPS2UQQ128, UNKNOWN, (int) V2DI_FTYPE_V4SF_V2DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_fix_truncv8sfv8si2_mask, \"__builtin_ia32_cvttps2dq256_mask\", IX86_BUILTIN_CVTTPS2DQ256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SF_V8SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_fix_truncv4sfv4si2_mask, \"__builtin_ia32_cvttps2dq128_mask\", IX86_BUILTIN_CVTTPS2DQ128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SF_V4SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ufix_truncv8sfv8si2_mask, \"__builtin_ia32_cvttps2udq256_mask\", IX86_BUILTIN_CVTTPS2UDQ256, UNKNOWN, (int) V8SI_FTYPE_V8SF_V8SI_UQI)\n@@ -1965,12 +1965,12 @@ BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx_movsldup256_mask, \"__builtin_ia32_\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_sse3_movsldup_mask, \"__builtin_ia32_movsldup128_mask\", IX86_BUILTIN_MOVSLDUP128_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_floatv4div4sf2_mask, \"__builtin_ia32_cvtqq2ps256_mask\", IX86_BUILTIN_CVTQQ2PS256, UNKNOWN, (int) V4SF_FTYPE_V4DI_V4SF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_floatv2div2sf2_mask, \"__builtin_ia32_cvtqq2ps128_mask\", IX86_BUILTIN_CVTQQ2PS128, UNKNOWN, (int) V4SF_FTYPE_V2DI_V4SF_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ufloatv4div4sf2_mask, \"__builtin_ia32_cvtuqq2ps256_mask\", IX86_BUILTIN_CVTUQQ2PS256, UNKNOWN, (int) V4SF_FTYPE_V4DI_V4SF_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ufloatv2div2sf2_mask, \"__builtin_ia32_cvtuqq2ps128_mask\", IX86_BUILTIN_CVTUQQ2PS128, UNKNOWN, (int) V4SF_FTYPE_V2DI_V4SF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_floatunsv4div4sf2_mask, \"__builtin_ia32_cvtuqq2ps256_mask\", IX86_BUILTIN_CVTUQQ2PS256, UNKNOWN, (int) V4SF_FTYPE_V4DI_V4SF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_floatunsv2div2sf2_mask, \"__builtin_ia32_cvtuqq2ps128_mask\", IX86_BUILTIN_CVTUQQ2PS128, UNKNOWN, (int) V4SF_FTYPE_V2DI_V4SF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_floatv4div4df2_mask, \"__builtin_ia32_cvtqq2pd256_mask\", IX86_BUILTIN_CVTQQ2PD256, UNKNOWN, (int) V4DF_FTYPE_V4DI_V4DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_floatv2div2df2_mask, \"__builtin_ia32_cvtqq2pd128_mask\", IX86_BUILTIN_CVTQQ2PD128, UNKNOWN, (int) V2DF_FTYPE_V2DI_V2DF_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ufloatv4div4df2_mask, \"__builtin_ia32_cvtuqq2pd256_mask\", IX86_BUILTIN_CVTUQQ2PD256, UNKNOWN, (int) V4DF_FTYPE_V4DI_V4DF_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ufloatv2div2df2_mask, \"__builtin_ia32_cvtuqq2pd128_mask\", IX86_BUILTIN_CVTUQQ2PD128, UNKNOWN, (int) V2DF_FTYPE_V2DI_V2DF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_floatunsv4div4df2_mask, \"__builtin_ia32_cvtuqq2pd256_mask\", IX86_BUILTIN_CVTUQQ2PD256, UNKNOWN, (int) V4DF_FTYPE_V4DI_V4DF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_floatunsv2div2df2_mask, \"__builtin_ia32_cvtuqq2pd128_mask\", IX86_BUILTIN_CVTUQQ2PD128, UNKNOWN, (int) V2DF_FTYPE_V2DI_V2DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv4di3_mask, \"__builtin_ia32_vpermt2varq256_mask\", IX86_BUILTIN_VPERMT2VARQ256, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv4di3_maskz, \"__builtin_ia32_vpermt2varq256_maskz\", IX86_BUILTIN_VPERMT2VARQ256_MASKZ, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv8si3_mask, \"__builtin_ia32_vpermt2vard256_mask\", IX86_BUILTIN_VPERMT2VARD256, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_UQI)\n@@ -2667,7 +2667,7 @@ BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_sse_cvtsi2ss_round, \"__builtin_ia32_cvt\n BDESC (OPTION_MASK_ISA_AVX512F | OPTION_MASK_ISA_64BIT, CODE_FOR_sse_cvtsi2ssq_round, \"__builtin_ia32_cvtsi2ss64\", IX86_BUILTIN_CVTSI2SS64, UNKNOWN, (int) V4SF_FTYPE_V4SF_INT64_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_sse2_cvtss2sd_round, \"__builtin_ia32_cvtss2sd_round\", IX86_BUILTIN_CVTSS2SD_ROUND, UNKNOWN, (int) V2DF_FTYPE_V2DF_V4SF_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_fix_truncv8dfv8si2_mask_round, \"__builtin_ia32_cvttpd2dq512_mask\", IX86_BUILTIN_CVTTPD2DQ512, UNKNOWN, (int) V8SI_FTYPE_V8DF_V8SI_QI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ufix_truncv8dfv8si2_mask_round, \"__builtin_ia32_cvttpd2udq512_mask\", IX86_BUILTIN_CVTTPD2UDQ512, UNKNOWN, (int) V8SI_FTYPE_V8DF_V8SI_QI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_fixuns_truncv8dfv8si2_mask_round, \"__builtin_ia32_cvttpd2udq512_mask\", IX86_BUILTIN_CVTTPD2UDQ512, UNKNOWN, (int) V8SI_FTYPE_V8DF_V8SI_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_fix_truncv16sfv16si2_mask_round, \"__builtin_ia32_cvttps2dq512_mask\", IX86_BUILTIN_CVTTPS2DQ512, UNKNOWN, (int) V16SI_FTYPE_V16SF_V16SI_HI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ufix_truncv16sfv16si2_mask_round, \"__builtin_ia32_cvttps2udq512_mask\", IX86_BUILTIN_CVTTPS2UDQ512, UNKNOWN, (int) V16SI_FTYPE_V16SF_V16SI_HI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ufloatv16siv16sf2_mask_round, \"__builtin_ia32_cvtudq2ps512_mask\", IX86_BUILTIN_CVTUDQ2PS512, UNKNOWN, (int) V16SF_FTYPE_V16SI_V16SF_HI_INT)\n@@ -2797,13 +2797,13 @@ BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_avx512dq_cvtps2qqv8di_mask_round, \"__b\n BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_ufix_notruncv8dfv8di2_mask_round, \"__builtin_ia32_cvtpd2uqq512_mask\", IX86_BUILTIN_CVTPD2UQQ512, UNKNOWN, (int) V8DI_FTYPE_V8DF_V8DI_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_avx512dq_cvtps2uqqv8di_mask_round, \"__builtin_ia32_cvtps2uqq512_mask\", IX86_BUILTIN_CVTPS2UQQ512, UNKNOWN, (int) V8DI_FTYPE_V8SF_V8DI_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_floatv8div8sf2_mask_round, \"__builtin_ia32_cvtqq2ps512_mask\", IX86_BUILTIN_CVTQQ2PS512, UNKNOWN, (int) V8SF_FTYPE_V8DI_V8SF_QI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_ufloatv8div8sf2_mask_round, \"__builtin_ia32_cvtuqq2ps512_mask\", IX86_BUILTIN_CVTUQQ2PS512, UNKNOWN, (int) V8SF_FTYPE_V8DI_V8SF_QI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_floatunsv8div8sf2_mask_round, \"__builtin_ia32_cvtuqq2ps512_mask\", IX86_BUILTIN_CVTUQQ2PS512, UNKNOWN, (int) V8SF_FTYPE_V8DI_V8SF_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_floatv8div8df2_mask_round, \"__builtin_ia32_cvtqq2pd512_mask\", IX86_BUILTIN_CVTQQ2PD512, UNKNOWN, (int) V8DF_FTYPE_V8DI_V8DF_QI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_ufloatv8div8df2_mask_round, \"__builtin_ia32_cvtuqq2pd512_mask\", IX86_BUILTIN_CVTUQQ2PD512, UNKNOWN, (int) V8DF_FTYPE_V8DI_V8DF_QI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_floatunsv8div8df2_mask_round, \"__builtin_ia32_cvtuqq2pd512_mask\", IX86_BUILTIN_CVTUQQ2PD512, UNKNOWN, (int) V8DF_FTYPE_V8DI_V8DF_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_fix_truncv8sfv8di2_mask_round, \"__builtin_ia32_cvttps2qq512_mask\", IX86_BUILTIN_CVTTPS2QQ512, UNKNOWN, (int) V8DI_FTYPE_V8SF_V8DI_QI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_ufix_truncv8sfv8di2_mask_round, \"__builtin_ia32_cvttps2uqq512_mask\", IX86_BUILTIN_CVTTPS2UQQ512, UNKNOWN, (int) V8DI_FTYPE_V8SF_V8DI_QI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_fixuns_truncv8sfv8di2_mask_round, \"__builtin_ia32_cvttps2uqq512_mask\", IX86_BUILTIN_CVTTPS2UQQ512, UNKNOWN, (int) V8DI_FTYPE_V8SF_V8DI_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_fix_truncv8dfv8di2_mask_round, \"__builtin_ia32_cvttpd2qq512_mask\", IX86_BUILTIN_CVTTPD2QQ512, UNKNOWN, (int) V8DI_FTYPE_V8DF_V8DI_QI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_ufix_truncv8dfv8di2_mask_round, \"__builtin_ia32_cvttpd2uqq512_mask\", IX86_BUILTIN_CVTTPD2UQQ512, UNKNOWN, (int) V8DI_FTYPE_V8DF_V8DI_QI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_fixuns_truncv8dfv8di2_mask_round, \"__builtin_ia32_cvttpd2uqq512_mask\", IX86_BUILTIN_CVTTPD2UQQ512, UNKNOWN, (int) V8DI_FTYPE_V8DF_V8DI_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_avx512dq_rangepv16sf_mask_round, \"__builtin_ia32_rangeps512_mask\", IX86_BUILTIN_RANGEPS512, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_INT_V16SF_HI_INT)\n BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_avx512dq_rangepv8df_mask_round, \"__builtin_ia32_rangepd512_mask\", IX86_BUILTIN_RANGEPD512, UNKNOWN, (int) V8DF_FTYPE_V8DF_V8DF_INT_V8DF_QI_INT)\n "}, {"sha": "12995be295d8961f7c7f22954635c5e46a5d3ee5", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70d22cdd77fdd3a11514735a7992b5f07bd50159/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70d22cdd77fdd3a11514735a7992b5f07bd50159/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=70d22cdd77fdd3a11514735a7992b5f07bd50159", "patch": "@@ -981,10 +981,12 @@\n ;; Used in signed and unsigned fix.\n (define_code_iterator any_fix [fix unsigned_fix])\n (define_code_attr fixsuffix [(fix \"\") (unsigned_fix \"u\")])\n+(define_code_attr fixunssuffix [(fix \"\") (unsigned_fix \"uns\")])\n \n ;; Used in signed and unsigned float.\n (define_code_iterator any_float [float unsigned_float])\n (define_code_attr floatsuffix [(float \"\") (unsigned_float \"u\")])\n+(define_code_attr floatunssuffix [(float \"\") (unsigned_float \"uns\")])\n \n ;; All integer modes.\n (define_mode_iterator SWI1248x [QI HI SI DI])"}, {"sha": "ed37b98933ed9b19db79f0b9389e1c93dc8eb215", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70d22cdd77fdd3a11514735a7992b5f07bd50159/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70d22cdd77fdd3a11514735a7992b5f07bd50159/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=70d22cdd77fdd3a11514735a7992b5f07bd50159", "patch": "@@ -4853,7 +4853,7 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"<floatsuffix>float<sseintvecmodelower><mode>2<mask_name><round_name>\"\n+(define_insn \"float<floatunssuffix><sseintvecmodelower><mode>2<mask_name><round_name>\"\n   [(set (match_operand:VF2_AVX512VL 0 \"register_operand\" \"=v\")\n \t(any_float:VF2_AVX512VL\n \t  (match_operand:<sseintvecmode> 1 \"nonimmediate_operand\" \"<round_constraint>\")))]\n@@ -4863,7 +4863,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; For <floatsuffix>float<sselondveclower><mode> insn patterns\n+;; For float<floatunssuffix><sselondveclower><mode> insn patterns\n (define_mode_attr qq2pssuff\n   [(V8SF \"\") (V4SF \"{y}\")])\n \n@@ -4877,7 +4877,7 @@\n   [(V8SF \"XI\") (V4SF \"OI\")\n    (V8DF \"OI\") (V4DF \"TI\")])\n \n-(define_insn \"<floatsuffix>float<sselongvecmodelower><mode>2<mask_name><round_name>\"\n+(define_insn \"float<floatunssuffix><sselongvecmodelower><mode>2<mask_name><round_name>\"\n   [(set (match_operand:VF1_128_256VL 0 \"register_operand\" \"=v\")\n \t (any_float:VF1_128_256VL\n \t   (match_operand:<sselongvecmode> 1 \"nonimmediate_operand\" \"<round_constraint>\")))]\n@@ -4887,7 +4887,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*<floatsuffix>floatv2div2sf2\"\n+(define_insn \"*float<floatunssuffix>v2div2sf2\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n     (vec_concat:V4SF\n \t    (any_float:V2SF (match_operand:V2DI 1 \"nonimmediate_operand\" \"vm\"))\n@@ -4898,7 +4898,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n-(define_insn \"<floatsuffix>floatv2div2sf2_mask\"\n+(define_insn \"float<floatunssuffix>v2div2sf2_mask\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n     (vec_concat:V4SF\n         (vec_merge:V2SF\n@@ -4914,7 +4914,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n-(define_insn \"*<floatsuffix>floatv2div2sf2_mask_1\"\n+(define_insn \"*float<floatunssuffix>v2div2sf2_mask_1\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n     (vec_concat:V4SF\n \t(vec_merge:V2SF\n@@ -5084,7 +5084,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"<fixsuffix>fix_truncv8dfv8si2<mask_name><round_saeonly_name>\"\n+(define_insn \"fix<fixunssuffix>_truncv8dfv8si2<mask_name><round_saeonly_name>\"\n   [(set (match_operand:V8SI 0 \"register_operand\" \"=v\")\n \t(any_fix:V8SI\n \t  (match_operand:V8DF 1 \"<round_saeonly_nimm_predicate>\" \"<round_saeonly_constraint>\")))]\n@@ -5123,7 +5123,7 @@\n    (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"<fixsuffix>fix_trunc<mode><sseintvecmodelower>2<mask_name><round_saeonly_name>\"\n+(define_insn \"fix<fixunssuffix>_trunc<mode><sseintvecmodelower>2<mask_name><round_saeonly_name>\"\n   [(set (match_operand:<sseintvecmode> 0 \"register_operand\" \"=v\")\n \t(any_fix:<sseintvecmode>\n \t  (match_operand:VF2_AVX512VL 1 \"<round_saeonly_nimm_predicate>\" \"<round_saeonly_constraint>\")))]\n@@ -5155,7 +5155,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseintvecmode2>\")])\n \n-(define_insn \"<fixsuffix>fix_trunc<mode><sselongvecmodelower>2<mask_name><round_saeonly_name>\"\n+(define_insn \"fix<fixunssuffix>_trunc<mode><sselongvecmodelower>2<mask_name><round_saeonly_name>\"\n   [(set (match_operand:<sselongvecmode> 0 \"register_operand\" \"=v\")\n \t(any_fix:<sselongvecmode>\n \t  (match_operand:VF1_128_256VL 1 \"<round_saeonly_nimm_predicate>\" \"<round_saeonly_constraint>\")))]\n@@ -5165,7 +5165,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseintvecmode3>\")])\n \n-(define_insn \"<fixsuffix>fix_truncv2sfv2di2<mask_name>\"\n+(define_insn \"fix<fixunssuffix>_truncv2sfv2di2<mask_name>\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=v\")\n \t(any_fix:V2DI\n \t  (vec_select:V2SF\n@@ -5961,8 +5961,8 @@\n       r1 = gen_reg_rtx (V8SImode);\n       r2 = gen_reg_rtx (V8SImode);\n \n-      emit_insn (gen_ufix_truncv8dfv8si2 (r1, operands[1]));\n-      emit_insn (gen_ufix_truncv8dfv8si2 (r2, operands[2]));\n+      emit_insn (gen_fixuns_truncv8dfv8si2 (r1, operands[1]));\n+      emit_insn (gen_fixuns_truncv8dfv8si2 (r2, operands[2]));\n       emit_insn (gen_avx_vec_concatv16si (operands[0], r1, r2));\n     }\n   else"}, {"sha": "a897b47cb1320eb03fe1455c5f623968508f65d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70d22cdd77fdd3a11514735a7992b5f07bd50159/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70d22cdd77fdd3a11514735a7992b5f07bd50159/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=70d22cdd77fdd3a11514735a7992b5f07bd50159", "patch": "@@ -1,3 +1,8 @@\n+2018-05-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/85918\n+\t* gcc.target/i386/avx512dq-pr85918.c: New test.\n+\n 2018-05-25  Jim Wilson  <jimw@sifive.com>\n \n \t* gcc.target/riscv/interrupt-1.c: New."}, {"sha": "3c69f93d5b7187cfe2d0b3ce05ea1b17b57e5928", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-pr85918.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70d22cdd77fdd3a11514735a7992b5f07bd50159/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr85918.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70d22cdd77fdd3a11514735a7992b5f07bd50159/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr85918.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr85918.c?ref=70d22cdd77fdd3a11514735a7992b5f07bd50159", "patch": "@@ -0,0 +1,42 @@\n+/* PR target/85918 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx512dq -mavx512vl -fdump-tree-vect-details\" } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 4 \"vect\" } } */\n+\n+#define N 1024\n+\n+long long ll[N];\n+unsigned long long ull[N];\n+double d[N];\n+\n+void ll2d (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < N; i++)\n+    d[i] = ll[i];\n+}\n+\n+void ull2d (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < N; i++)\n+    d[i] = ull[i];\n+}\n+\n+void d2ll (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < N; i++)\n+    ll[i] = d[i];\n+}\n+\n+void d2ull (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < N; i++)\n+    ull[i] = d[i];\n+}"}]}