{"sha": "1de1073520a877b46a0b93c5b0eb4c0b29b97e84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRlMTA3MzUyMGE4NzdiNDZhMGI5M2M1YjBlYjRjMGIyOWI5N2U4NA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2018-01-04T18:05:10Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-01-04T18:05:10Z"}, "message": "Add tree_fits_uhwi_p tests to BIT_FIELD_REF folder\n\nThe first BIT_FIELD_REF folding pattern assumed without checking that\noperands satisfy tree_fits_uhwi_p.  The second pattern does check this:\n\n      /* On constants we can use native encode/interpret to constant\n         fold (nearly) all BIT_FIELD_REFs.  */\n      if (CONSTANT_CLASS_P (arg0)\n          && can_native_interpret_type_p (type)\n          && BITS_PER_UNIT == 8\n          && tree_fits_uhwi_p (op1)\n          && tree_fits_uhwi_p (op2))\n\nso this patch adds the checks to the first pattern too.  This is needed\nfor POLY_INT_CST bit positions.\n\n2018-01-04  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* fold-const.c (fold_ternary_loc): Check tree_fits_uhwi_p before\n\tusing tree_to_uhwi.\n\nFrom-SVN: r256258", "tree": {"sha": "00a25a55d43f38ef6035f5a5034d458d1e0973de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00a25a55d43f38ef6035f5a5034d458d1e0973de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1de1073520a877b46a0b93c5b0eb4c0b29b97e84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1de1073520a877b46a0b93c5b0eb4c0b29b97e84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1de1073520a877b46a0b93c5b0eb4c0b29b97e84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1de1073520a877b46a0b93c5b0eb4c0b29b97e84/comments", "author": null, "committer": null, "parents": [{"sha": "88654ce63de73fc51a47e7d54070c2c0b6b2f34b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88654ce63de73fc51a47e7d54070c2c0b6b2f34b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88654ce63de73fc51a47e7d54070c2c0b6b2f34b"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "d2342b12b690bfb8d472186568f23e77794838c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1de1073520a877b46a0b93c5b0eb4c0b29b97e84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1de1073520a877b46a0b93c5b0eb4c0b29b97e84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1de1073520a877b46a0b93c5b0eb4c0b29b97e84", "patch": "@@ -1,3 +1,8 @@\n+2018-01-04  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* fold-const.c (fold_ternary_loc): Check tree_fits_uhwi_p before\n+\tusing tree_to_uhwi.\n+\n 2018-01-04  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* tree-ssa-forwprop.c (is_combined_permutation_identity): Allow"}, {"sha": "521c2dc09cedb213f9a83efe06b356512ab02a0a", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1de1073520a877b46a0b93c5b0eb4c0b29b97e84/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1de1073520a877b46a0b93c5b0eb4c0b29b97e84/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=1de1073520a877b46a0b93c5b0eb4c0b29b97e84", "patch": "@@ -11643,7 +11643,9 @@ fold_ternary_loc (location_t loc, enum tree_code code, tree type,\n       if (TREE_CODE (arg0) == VECTOR_CST\n \t  && (type == TREE_TYPE (TREE_TYPE (arg0))\n \t      || (TREE_CODE (type) == VECTOR_TYPE\n-\t\t  && TREE_TYPE (type) == TREE_TYPE (TREE_TYPE (arg0)))))\n+\t\t  && TREE_TYPE (type) == TREE_TYPE (TREE_TYPE (arg0))))\n+\t  && tree_fits_uhwi_p (op1)\n+\t  && tree_fits_uhwi_p (op2))\n \t{\n \t  tree eltype = TREE_TYPE (TREE_TYPE (arg0));\n \t  unsigned HOST_WIDE_INT width = tree_to_uhwi (TYPE_SIZE (eltype));"}]}