{"sha": "be39d6f0379ab74356cf406974055c3a1e68d127", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUzOWQ2ZjAzNzlhYjc0MzU2Y2Y0MDY5NzQwNTVjM2ExZTY4ZDEyNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-04-24T10:08:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-04-24T10:08:07Z"}, "message": "call.c (null_ptr_cst_p): Order checks according to expensiveness.\n\n2019-04-24  Richard Biener  <rguenther@suse.de>\n\n\tcp/\n\t* call.c (null_ptr_cst_p): Order checks according to expensiveness.\n\t(conversion_null_warnings): Likewise.\n\t* typeck.c (same_type_ignoring_top_level_qualifiers_p): Return\n\tearly if type1 == type2.\n\nFrom-SVN: r270539", "tree": {"sha": "536b7efc8d081600600564418ea0eb476ce9f406", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/536b7efc8d081600600564418ea0eb476ce9f406"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be39d6f0379ab74356cf406974055c3a1e68d127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be39d6f0379ab74356cf406974055c3a1e68d127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be39d6f0379ab74356cf406974055c3a1e68d127", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be39d6f0379ab74356cf406974055c3a1e68d127/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f9bfdfa2025512c8adb1e280e2df98e0512fbf30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9bfdfa2025512c8adb1e280e2df98e0512fbf30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9bfdfa2025512c8adb1e280e2df98e0512fbf30"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "3a6dc65dd5ef5f26d29369494e002a35b50eb57b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be39d6f0379ab74356cf406974055c3a1e68d127/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be39d6f0379ab74356cf406974055c3a1e68d127/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=be39d6f0379ab74356cf406974055c3a1e68d127", "patch": "@@ -1,3 +1,10 @@\n+2019-04-24  Richard Biener  <rguenther@suse.de>\n+\n+\t* call.c (null_ptr_cst_p): Order checks according to expensiveness.\n+\t(conversion_null_warnings): Likewise.\n+\t* typeck.c (same_type_ignoring_top_level_qualifiers_p): Return\n+\tearly if type1 == type2.\n+\n 2019-04-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/87366 - wrong error with alias template."}, {"sha": "23898f0659fb73de4bb19b7b47b60abf356dc78b", "filename": "gcc/cp/call.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be39d6f0379ab74356cf406974055c3a1e68d127/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be39d6f0379ab74356cf406974055c3a1e68d127/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=be39d6f0379ab74356cf406974055c3a1e68d127", "patch": "@@ -541,11 +541,11 @@ null_ptr_cst_p (tree t)\n       STRIP_ANY_LOCATION_WRAPPER (t);\n \n       /* Core issue 903 says only literal 0 is a null pointer constant.  */\n-      if (TREE_CODE (type) == INTEGER_TYPE\n-\t  && !char_type_p (type)\n-\t  && TREE_CODE (t) == INTEGER_CST\n+      if (TREE_CODE (t) == INTEGER_CST\n+\t  && !TREE_OVERFLOW (t)\n+\t  && TREE_CODE (type) == INTEGER_TYPE\n \t  && integer_zerop (t)\n-\t  && !TREE_OVERFLOW (t))\n+\t  && !char_type_p (type))\n \treturn true;\n     }\n   else if (CP_INTEGRAL_TYPE_P (type))\n@@ -6858,8 +6858,9 @@ static void\n conversion_null_warnings (tree totype, tree expr, tree fn, int argnum)\n {\n   /* Issue warnings about peculiar, but valid, uses of NULL.  */\n-  if (null_node_p (expr) && TREE_CODE (totype) != BOOLEAN_TYPE\n-      && ARITHMETIC_TYPE_P (totype))\n+  if (TREE_CODE (totype) != BOOLEAN_TYPE\n+      && ARITHMETIC_TYPE_P (totype)\n+      && null_node_p (expr))\n     {\n       location_t loc = get_location_for_expr_unwinding_for_system_header (expr);\n       if (fn)\n@@ -6896,8 +6897,8 @@ conversion_null_warnings (tree totype, tree expr, tree fn, int argnum)\n     }\n   /* Handle zero as null pointer warnings for cases other\n      than EQ_EXPR and NE_EXPR */\n-  else if (null_ptr_cst_p (expr) &&\n-\t   (TYPE_PTR_OR_PTRMEM_P (totype) || NULLPTR_TYPE_P (totype)))\n+  else if ((TYPE_PTR_OR_PTRMEM_P (totype) || NULLPTR_TYPE_P (totype))\n+\t   && null_ptr_cst_p (expr))\n     {\n       location_t loc = get_location_for_expr_unwinding_for_system_header (expr);\n       maybe_warn_zero_as_null_pointer_constant (expr, loc);"}, {"sha": "c107a321949bd6eeab484ac7836a89a9323fd7a9", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be39d6f0379ab74356cf406974055c3a1e68d127/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be39d6f0379ab74356cf406974055c3a1e68d127/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=be39d6f0379ab74356cf406974055c3a1e68d127", "patch": "@@ -1523,6 +1523,8 @@ same_type_ignoring_top_level_qualifiers_p (tree type1, tree type2)\n {\n   if (type1 == error_mark_node || type2 == error_mark_node)\n     return false;\n+  if (type1 == type2)\n+    return true;\n \n   type1 = cp_build_qualified_type (type1, TYPE_UNQUALIFIED);\n   type2 = cp_build_qualified_type (type2, TYPE_UNQUALIFIED);"}]}