{"sha": "6b309c6e575004e3805183aa2599fc6a4e356432", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIzMDljNmU1NzUwMDRlMzgwNTE4M2FhMjU5OWZjNmE0ZTM1NjQzMg==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "drow@mvista.com", "date": "2003-12-22T19:21:37Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2003-12-22T19:21:37Z"}, "message": "re PR other/13272 (libiberty/lbasename.c has incorrect DIR_SEPARATOR)\n\n\tPR debug/13272\n\t* Makefile.in (lbasename.o): Depend on filenames.h.\n\t* lbasename.c: Include \"filenames.h\" instead of defining\n\tits macros locally.\n\nFrom-SVN: r74943", "tree": {"sha": "7d3c261a345f630d03ad5939023099202a9148de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d3c261a345f630d03ad5939023099202a9148de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b309c6e575004e3805183aa2599fc6a4e356432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b309c6e575004e3805183aa2599fc6a4e356432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b309c6e575004e3805183aa2599fc6a4e356432", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b309c6e575004e3805183aa2599fc6a4e356432/comments", "author": null, "committer": null, "parents": [{"sha": "3b3ed1280043554815a3384a66331c114617b127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b3ed1280043554815a3384a66331c114617b127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b3ed1280043554815a3384a66331c114617b127"}], "stats": {"total": 29, "additions": 9, "deletions": 20}, "files": [{"sha": "05a9b9066ced31835a688c9644aff467eb946beb", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b309c6e575004e3805183aa2599fc6a4e356432/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b309c6e575004e3805183aa2599fc6a4e356432/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=6b309c6e575004e3805183aa2599fc6a4e356432", "patch": "@@ -1,3 +1,10 @@\n+2003-12-22  Daniel Jacobowitz  <drow@mvista.com>\n+\n+\tPR debug/13272\n+\t* Makefile.in (lbasename.o): Depend on filenames.h.\n+\t* lbasename.c: Include \"filenames.h\" instead of defining\n+\tits macros locally.\n+\n 2003-12-22  Ian Lance Taylor  <ian@wasabisystems.com>\n \n \t* cp-demangle.c (CP_DYNAMIC_ARRAYS): Define if compiler supports"}, {"sha": "f3ff338fa2df239954da4ad45ea21b70274d91de", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b309c6e575004e3805183aa2599fc6a4e356432/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b309c6e575004e3805183aa2599fc6a4e356432/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=6b309c6e575004e3805183aa2599fc6a4e356432", "patch": "@@ -451,7 +451,7 @@ hashtab.o: config.h $(INCDIR)/ansidecl.h $(INCDIR)/hashtab.h \\\n hex.o: $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \\\n \t$(INCDIR)/safe-ctype.h\n lbasename.o: $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \\\n-\t$(INCDIR)/safe-ctype.h\n+\t$(INCDIR)/safe-ctype.h $(INCDIR)/filenames.h\n lrealpath.o: config.h $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h\n make-relative-prefix.o: config.h $(INCDIR)/ansidecl.h \\\n \t$(INCDIR)/libiberty.h"}, {"sha": "200a87f23871c2313b020fde2063bd4668f5957c", "filename": "libiberty/lbasename.c", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b309c6e575004e3805183aa2599fc6a4e356432/libiberty%2Flbasename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b309c6e575004e3805183aa2599fc6a4e356432/libiberty%2Flbasename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Flbasename.c?ref=6b309c6e575004e3805183aa2599fc6a4e356432", "patch": "@@ -40,25 +40,7 @@ and a path ending in @code{/} returns the empty string after it.\n #include \"ansidecl.h\"\n #include \"libiberty.h\"\n #include \"safe-ctype.h\"\n-\n-#ifndef DIR_SEPARATOR\n-#  define DIR_SEPARATOR '/'\n-#endif\n-\n-#if defined (_WIN32) || defined (__MSDOS__) \\\n-    || defined (__DJGPP__) || defined (__OS2__)\n-#  define HAVE_DOS_BASED_FILE_SYSTEM\n-#  ifndef DIR_SEPARATOR_2 \n-#    define DIR_SEPARATOR_2 '\\\\'\n-#  endif\n-#endif\n-\n-#ifndef DIR_SEPARATOR_2\n-#  define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n-#else\n-#  define IS_DIR_SEPARATOR(ch) \\\n-\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n-#endif\n+#include \"filenames.h\"\n \n const char *\n lbasename (name)"}]}