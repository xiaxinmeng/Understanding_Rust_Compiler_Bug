{"sha": "6c1d60a219b83f17a824f5b04dd04ffa3a1c7c37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMxZDYwYTIxOWI4M2YxN2E4MjRmNWIwNGRkMDRmZmEzYTFjN2MzNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-08-05T08:00:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-08-05T08:00:00Z"}, "message": "tree-ssa-threadupdate.c (thread_block_1): Remove unnecessary restriction on threading to a loop header.\n\n2016-08-05  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-threadupdate.c (thread_block_1): Remove unnecessary\n\trestriction on threading to a loop header.\n\nFrom-SVN: r239164", "tree": {"sha": "076d6c25ac19275ee6592d1e08c2a19f6ae69998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/076d6c25ac19275ee6592d1e08c2a19f6ae69998"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c1d60a219b83f17a824f5b04dd04ffa3a1c7c37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c1d60a219b83f17a824f5b04dd04ffa3a1c7c37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c1d60a219b83f17a824f5b04dd04ffa3a1c7c37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c1d60a219b83f17a824f5b04dd04ffa3a1c7c37/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee2810081e4008656ffb5a2f37a5a68d5d477e7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee2810081e4008656ffb5a2f37a5a68d5d477e7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee2810081e4008656ffb5a2f37a5a68d5d477e7e"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "bc49ac2bfa00d123723da3764a57c93c4dfd7050", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1d60a219b83f17a824f5b04dd04ffa3a1c7c37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1d60a219b83f17a824f5b04dd04ffa3a1c7c37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c1d60a219b83f17a824f5b04dd04ffa3a1c7c37", "patch": "@@ -1,3 +1,8 @@\n+2016-08-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-threadupdate.c (thread_block_1): Remove unnecessary\n+\trestriction on threading to a loop header.\n+\n 2016-08-05  Richard Biener  <rguenther@suse.de>\n \n \t* tree-cfgcleanup.c (tree_forwarder_block_p): Use bb_loop_header_p."}, {"sha": "66d919c95ce5462cb1f7d6af92b3499e36829f68", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1d60a219b83f17a824f5b04dd04ffa3a1c7c37/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1d60a219b83f17a824f5b04dd04ffa3a1c7c37/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=6c1d60a219b83f17a824f5b04dd04ffa3a1c7c37", "patch": "@@ -1531,10 +1531,8 @@ thread_block_1 (basic_block bb, bool noloop_only, bool joiners)\n \t     threading path that crosses loop boundaries.  We do not try\n \t     and thread this elsewhere, so just cancel the jump threading\n \t     request by clearing the AUX field now.  */\n-\t  if ((bb->loop_father != e2->src->loop_father\n-\t       && !loop_exit_edge_p (e2->src->loop_father, e2))\n-\t      || (e2->src->loop_father != e2->dest->loop_father\n-\t\t  && !loop_exit_edge_p (e2->src->loop_father, e2)))\n+\t  if (bb->loop_father != e2->src->loop_father\n+\t      && !loop_exit_edge_p (e2->src->loop_father, e2))\n \t    {\n \t      /* Since this case is not handled by our special code\n \t\t to thread through a loop header, we must explicitly"}]}