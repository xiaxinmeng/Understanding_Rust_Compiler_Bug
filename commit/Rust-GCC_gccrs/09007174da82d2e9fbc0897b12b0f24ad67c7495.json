{"sha": "09007174da82d2e9fbc0897b12b0f24ad67c7495", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkwMDcxNzRkYTgyZDJlOWZiYzA4OTdiMTJiMGYyNGFkNjdjNzQ5NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-08-17T18:46:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-08-17T18:46:03Z"}, "message": "tweak\n\nFrom-SVN: r21799", "tree": {"sha": "20958d85caa7bc5303dba6741e7e78349f49a04f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20958d85caa7bc5303dba6741e7e78349f49a04f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09007174da82d2e9fbc0897b12b0f24ad67c7495", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09007174da82d2e9fbc0897b12b0f24ad67c7495", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09007174da82d2e9fbc0897b12b0f24ad67c7495", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09007174da82d2e9fbc0897b12b0f24ad67c7495/comments", "author": null, "committer": null, "parents": [{"sha": "5210f3d05f10ed390e20808f1eeeff473a448a7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5210f3d05f10ed390e20808f1eeeff473a448a7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5210f3d05f10ed390e20808f1eeeff473a448a7e"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "0f1dcc54a54a38b9c222201db5a8b347a45b8140", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09007174da82d2e9fbc0897b12b0f24ad67c7495/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09007174da82d2e9fbc0897b12b0f24ad67c7495/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=09007174da82d2e9fbc0897b12b0f24ad67c7495", "patch": "@@ -2491,7 +2491,8 @@ do_type (work, mangled, result)\n \tcase 'A':\n \t  {\n \t    ++(*mangled);\n-\t    if (!STRING_EMPTY (&decl) && decl.b[0] == '*')\n+\t    if (!STRING_EMPTY (&decl)\n+\t\t&& (decl.b[0] == '*' || decl.b[0] == '&'))\n \t      {\n \t\tstring_prepend (&decl, \"(\");\n \t\tstring_append (&decl, \")\");\n@@ -2523,7 +2524,8 @@ do_type (work, mangled, result)\n \t  /* A function */\n \tcase 'F':\n \t  (*mangled)++;\n-\t  if (!STRING_EMPTY (&decl) && decl.b[0] == '*')\n+\t    if (!STRING_EMPTY (&decl)\n+\t\t&& (decl.b[0] == '*' || decl.b[0] == '&'))\n \t    {\n \t      string_prepend (&decl, \"(\");\n \t      string_append (&decl, \")\");"}]}