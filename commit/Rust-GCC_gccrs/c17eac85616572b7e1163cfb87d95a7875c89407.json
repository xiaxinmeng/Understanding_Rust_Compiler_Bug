{"sha": "c17eac85616572b7e1163cfb87d95a7875c89407", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE3ZWFjODU2MTY1NzJiN2UxMTYzY2ZiODdkOTVhNzg3NWM4OTQwNw==", "commit": {"author": {"name": "Ilya Tocar", "email": "ilya.tocar@intel.com", "date": "2014-11-27T13:51:10Z"}, "committer": {"name": "Ilya Tocar", "email": "tocarip@gcc.gnu.org", "date": "2014-11-27T13:51:10Z"}, "message": "Support avx512f in __builtin_cpu_supports.\n\ngcc/\n\n        * config/i386/cpuid.h (bit_MPX, bit_BNDREGS, bit_BNDCSR):\n        Define.\n        * config/i386/i386.c (get_builtin_code_for_version): Add avx512f.\n        (fold_builtin_cpu): Ditto.\n        * doc/extend.texi: Documment it.\n\n\n\ngcc/testsuite/\n\n        * g++.dg/ext/mv2.C: Add test for target (\"avx512f\").\n        * gcc.target/i386/builtin_target.c: Ditto.\n\n\n\nlibgcc/\n\n        * config/i386/cpuinfo.c (processor_features): Add FEATURE_AVX512F.\n        * config/i386/cpuinfo.c (get_available_features): Detect it.\n\nFrom-SVN: r218125", "tree": {"sha": "385214d175b54af12c5051b97d93c7d7e00ebbd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/385214d175b54af12c5051b97d93c7d7e00ebbd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c17eac85616572b7e1163cfb87d95a7875c89407", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c17eac85616572b7e1163cfb87d95a7875c89407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c17eac85616572b7e1163cfb87d95a7875c89407", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c17eac85616572b7e1163cfb87d95a7875c89407/comments", "author": {"login": "TocarIP", "id": 16836375, "node_id": "MDQ6VXNlcjE2ODM2Mzc1", "avatar_url": "https://avatars.githubusercontent.com/u/16836375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TocarIP", "html_url": "https://github.com/TocarIP", "followers_url": "https://api.github.com/users/TocarIP/followers", "following_url": "https://api.github.com/users/TocarIP/following{/other_user}", "gists_url": "https://api.github.com/users/TocarIP/gists{/gist_id}", "starred_url": "https://api.github.com/users/TocarIP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TocarIP/subscriptions", "organizations_url": "https://api.github.com/users/TocarIP/orgs", "repos_url": "https://api.github.com/users/TocarIP/repos", "events_url": "https://api.github.com/users/TocarIP/events{/privacy}", "received_events_url": "https://api.github.com/users/TocarIP/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1025cb6c0d6cd25f32e301c764ffa83d208e1961", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1025cb6c0d6cd25f32e301c764ffa83d208e1961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1025cb6c0d6cd25f32e301c764ffa83d208e1961"}], "stats": {"total": 95, "additions": 70, "deletions": 25}, "files": [{"sha": "4abbd35c518d61bd235bb3f7651ef2c37f552122", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c17eac85616572b7e1163cfb87d95a7875c89407", "patch": "@@ -1,3 +1,11 @@\n+2014-11-27  Ilya Tocar  <ilya.tocar@intel.com>\n+\n+\t* config/i386/cpuid.h (bit_MPX, bit_BNDREGS, bit_BNDCSR):\n+\tDefine.\n+\t* config/i386/i386.c (get_builtin_code_for_version): Add avx512f.\n+\t(fold_builtin_cpu): Ditto.\n+\t* doc/extend.texi: Documment it.\n+\n 2014-11-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/64067"}, {"sha": "e3b76465b95f348a77658e6f2a93d4af0b9d02ec", "filename": "gcc/config/i386/cpuid.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2Fconfig%2Fi386%2Fcpuid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2Fconfig%2Fi386%2Fcpuid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcpuid.h?ref=c17eac85616572b7e1163cfb87d95a7875c89407", "patch": "@@ -72,6 +72,7 @@\n #define bit_AVX2\t(1 << 5)\n #define bit_BMI2\t(1 << 8)\n #define bit_RTM\t(1 << 11)\n+#define bit_MPX\t(1 << 14)\n #define bit_AVX512F\t(1 << 16)\n #define bit_AVX512DQ\t(1 << 17)\n #define bit_RDSEED\t(1 << 18)\n@@ -91,6 +92,10 @@\n #define bit_PREFETCHWT1\t  (1 << 0)\n #define bit_AVX512VBMI\t(1 << 1)\n \n+/* XFEATURE_ENABLED_MASK register bits (%eax == 13, %ecx == 0) */\n+#define bit_BNDREGS     (1 << 3)\n+#define bit_BNDCSR      (1 << 4)\n+\n /* Extended State Enumeration Sub-leaf (%eax == 13, %ecx == 1) */\n #define bit_XSAVEOPT\t(1 << 0)\n #define bit_XSAVEC\t(1 << 1)"}, {"sha": "24931309ea06dd8e0296d712e419eeaf537740ea", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c17eac85616572b7e1163cfb87d95a7875c89407", "patch": "@@ -34235,7 +34235,8 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)\n     P_FMA,    \n     P_PROC_FMA,\n     P_AVX2,\n-    P_PROC_AVX2\n+    P_PROC_AVX2,\n+    P_AVX512F\n   };\n \n  enum feature_priority priority = P_ZERO;\n@@ -34263,7 +34264,8 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)\n       {\"fma4\", P_FMA4},\n       {\"xop\", P_XOP},\n       {\"fma\", P_FMA},\n-      {\"avx2\", P_AVX2}\n+      {\"avx2\", P_AVX2},\n+      {\"avx512f\", P_AVX512F}\n     };\n \n \n@@ -35238,6 +35240,7 @@ fold_builtin_cpu (tree fndecl, tree *args)\n     F_FMA4,\n     F_XOP,\n     F_FMA,\n+    F_AVX512F,\n     F_MAX\n   };\n \n@@ -35326,7 +35329,8 @@ fold_builtin_cpu (tree fndecl, tree *args)\n       {\"fma4\",   F_FMA4},\n       {\"xop\",    F_XOP},\n       {\"fma\",    F_FMA},\n-      {\"avx2\",   F_AVX2}\n+      {\"avx2\",   F_AVX2},\n+      {\"avx512f\",F_AVX512F}\n     };\n \n   tree __processor_model_type = build_processor_model_struct ();"}, {"sha": "773e14ce6b2797952f4b5a6501e97e7d1fe6b51f", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=c17eac85616572b7e1163cfb87d95a7875c89407", "patch": "@@ -11642,6 +11642,8 @@ SSE4.2 instructions.\n AVX instructions.\n @item avx2\n AVX2 instructions.\n+@item avx512f\n+AVX512F instructions.\n @end table\n \n Here is an example:"}, {"sha": "259283539004eb28efc06fe1050f71c9e5897d92", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c17eac85616572b7e1163cfb87d95a7875c89407", "patch": "@@ -1,3 +1,8 @@\n+2014-11-27  Ilya Tocar  <ilya.tocar@intel.com>\n+\n+\t* g++.dg/ext/mv2.C: Add test for target (\"avx512f\").\n+\t* gcc.target/i386/builtin_target.c: Ditto.\n+\n 2014-11-27  Kai Tietz  <ktietz@redhat.com>\n \n \tPR c++/63904"}, {"sha": "d4f1f92c611106e67c8b6b6fb3b17cd8aacdb26a", "filename": "gcc/testsuite/g++.dg/ext/mv2.C", "status": "modified", "additions": 30, "deletions": 21, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv2.C?ref=c17eac85616572b7e1163cfb87d95a7875c89407", "patch": "@@ -20,31 +20,34 @@ int foo () __attribute__ ((target (\"sse4.2\")));\n int foo () __attribute__ ((target (\"popcnt\")));\n int foo () __attribute__ ((target (\"avx\")));\n int foo () __attribute__ ((target (\"avx2\")));\n+int foo () __attribute__ ((target (\"avx512f\")));\n \n int main ()\n {\n   int val = foo ();\n \n-  if (__builtin_cpu_supports (\"avx2\"))\n-    assert (val == 1);\n+  if (__builtin_cpu_supports (\"avx512f\"))\n+    assert (val == 11);\n+  else if (__builtin_cpu_supports (\"avx2\"))\n+    assert (val == 10);\n   else if (__builtin_cpu_supports (\"avx\"))\n-    assert (val == 2);\n+    assert (val == 9);\n   else if (__builtin_cpu_supports (\"popcnt\"))\n-    assert (val == 3);\n+    assert (val == 8);\n   else if (__builtin_cpu_supports (\"sse4.2\"))\n-    assert (val == 4);\n+    assert (val == 7);\n   else if (__builtin_cpu_supports (\"sse4.1\"))\n-    assert (val == 5);\n-  else if (__builtin_cpu_supports (\"ssse3\"))\n     assert (val == 6);\n+  else if (__builtin_cpu_supports (\"ssse3\"))\n+    assert (val == 5);\n   else if (__builtin_cpu_supports (\"sse3\"))\n-    assert (val == 7);\n+    assert (val == 4);\n   else if (__builtin_cpu_supports (\"sse2\"))\n-    assert (val == 8);\n+    assert (val == 3);\n   else if (__builtin_cpu_supports (\"sse\"))\n-    assert (val == 9);\n+    assert (val == 2);\n   else if (__builtin_cpu_supports (\"mmx\"))\n-    assert (val == 10);\n+    assert (val == 1);\n   else\n     assert (val == 0);\n \n@@ -60,59 +63,65 @@ foo ()\n int __attribute__ ((target(\"mmx\")))\n foo ()\n {\n-  return 10;\n+  return 1;\n }\n \n int __attribute__ ((target(\"sse\")))\n foo ()\n {\n-  return 9;\n+  return 2;\n }\n \n int __attribute__ ((target(\"sse2\")))\n foo ()\n {\n-  return 8;\n+  return 3;\n }\n \n int __attribute__ ((target(\"sse3\")))\n foo ()\n {\n-  return 7;\n+  return 4;\n }\n \n int __attribute__ ((target(\"ssse3\")))\n foo ()\n {\n-  return 6;\n+  return 5;\n }\n \n int __attribute__ ((target(\"sse4.1\")))\n foo ()\n {\n-  return 5;\n+  return 6;\n }\n \n int __attribute__ ((target(\"sse4.2\")))\n foo ()\n {\n-  return 4;\n+  return 7;\n }\n \n int __attribute__ ((target(\"popcnt\")))\n foo ()\n {\n-  return 3;\n+  return 8;\n }\n \n int __attribute__ ((target(\"avx\")))\n foo ()\n {\n-  return 2;\n+  return 9;\n }\n \n int __attribute__ ((target(\"avx2\")))\n foo ()\n {\n-  return 1;\n+  return 10;\n+}\n+\n+int __attribute__ ((target(\"avx512f\")))\n+foo ()\n+{\n+  return 11;\n }"}, {"sha": "b6a3eee1c8b6e6a77de13e5cfc6a05581c8243c5", "filename": "gcc/testsuite/gcc.target/i386/builtin_target.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin_target.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c17eac85616572b7e1163cfb87d95a7875c89407/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin_target.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin_target.c?ref=c17eac85616572b7e1163cfb87d95a7875c89407", "patch": "@@ -145,6 +145,8 @@ check_features (unsigned int ecx, unsigned int edx,\n       __cpuid_count (7, 0, eax, ebx, ecx, edx);\n       if (ebx & bit_AVX2)\n \tassert (__builtin_cpu_supports (\"avx2\"));\n+      if (ebx & bit_AVX512F)\n+\tassert (__builtin_cpu_supports (\"avx512f\"));\n     }\n }\n \n@@ -241,6 +243,8 @@ quick_check ()\n \n   assert (__builtin_cpu_supports (\"avx2\") >= 0);\n \n+  assert (__builtin_cpu_supports (\"avx512f\") >= 0);\n+\n   /* Check CPU type.  */\n   assert (__builtin_cpu_is (\"amd\") >= 0);\n "}, {"sha": "16114a7471e51f6ec68123ee99fd882cd439e5fc", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c17eac85616572b7e1163cfb87d95a7875c89407/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c17eac85616572b7e1163cfb87d95a7875c89407/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=c17eac85616572b7e1163cfb87d95a7875c89407", "patch": "@@ -1,3 +1,8 @@\n+2014-11-27  Ilya Tocar  <ilya.tocar@intel.com>\n+\n+\t* config/i386/cpuinfo.c (processor_features): Add FEATURE_AVX512F.\n+\t* config/i386/cpuinfo.c (get_available_features): Detect it.\n+\n 2014-11-27  Tony Wang  <tony.wang@arm.com>\n \n \t* config/arm/lib1funcs.S (FUNC_START): Add conditional section"}, {"sha": "8ca385cb9776e4ad3b5d7da7cc1b0f6027cb213c", "filename": "libgcc/config/i386/cpuinfo.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c17eac85616572b7e1163cfb87d95a7875c89407/libgcc%2Fconfig%2Fi386%2Fcpuinfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c17eac85616572b7e1163cfb87d95a7875c89407/libgcc%2Fconfig%2Fi386%2Fcpuinfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcpuinfo.c?ref=c17eac85616572b7e1163cfb87d95a7875c89407", "patch": "@@ -96,7 +96,8 @@ enum processor_features\n   FEATURE_SSE4_A,\n   FEATURE_FMA4,\n   FEATURE_XOP,\n-  FEATURE_FMA\n+  FEATURE_FMA,\n+  FEATURE_AVX512F\n };\n \n struct __processor_model\n@@ -278,6 +279,8 @@ get_available_features (unsigned int ecx, unsigned int edx,\n       __cpuid_count (7, 0, eax, ebx, ecx, edx);\n       if (ebx & bit_AVX2)\n \tfeatures |= (1 << FEATURE_AVX2);\n+      if (ebx & bit_AVX512F)\n+\tfeatures |= (1 << FEATURE_AVX512F);\n     }\n \n   unsigned int ext_level;"}]}