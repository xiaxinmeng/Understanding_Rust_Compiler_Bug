{"sha": "07570c398bd180913d3c0a51c5d5d2c9722346d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc1NzBjMzk4YmQxODA5MTNkM2MwYTUxYzVkNWQyYzk3MjIzNDZkMg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@lsd.ic.unicamp.br", "date": "2000-01-11T23:52:07Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gcc.gnu.org", "date": "2000-01-11T23:52:07Z"}, "message": "resource.c (mark_referenced_resources): Mark a set strict_low_part as used.\n\n* resource.c (mark_referenced_resources): Mark a set strict_low_part\nas used.\n* config/i386/i386.c (ix86_expand_setcc): Re-enable clear + set\nstrict_low_part when possible.\n\nFrom-SVN: r31340", "tree": {"sha": "7b61176cb1e5a47ecc6e95f45491a5e4c53036c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b61176cb1e5a47ecc6e95f45491a5e4c53036c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07570c398bd180913d3c0a51c5d5d2c9722346d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07570c398bd180913d3c0a51c5d5d2c9722346d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07570c398bd180913d3c0a51c5d5d2c9722346d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07570c398bd180913d3c0a51c5d5d2c9722346d2/comments", "author": null, "committer": null, "parents": [{"sha": "a5bfff0ce674970498ff6cb28203c44d7fc185ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5bfff0ce674970498ff6cb28203c44d7fc185ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5bfff0ce674970498ff6cb28203c44d7fc185ef"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "58798857fa34785581ded1f1806b42bcacfdfdff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07570c398bd180913d3c0a51c5d5d2c9722346d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07570c398bd180913d3c0a51c5d5d2c9722346d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07570c398bd180913d3c0a51c5d5d2c9722346d2", "patch": "@@ -1,3 +1,10 @@\n+2000-01-11  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>, Richard Henderson  <rth@cygnus.com>\n+\n+\t* resource.c (mark_referenced_resources): Mark a set strict_low_part\n+\tas used.\n+\t* config/i386/i386.c (ix86_expand_setcc): Re-enable clear + set\n+\tstrict_low_part when possible.\n+\n 2000-01-11  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* alias.c: PROTO -> PARAMS."}, {"sha": "c788229ae771106835bb38f87470bf9de2811f5f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07570c398bd180913d3c0a51c5d5d2c9722346d2/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07570c398bd180913d3c0a51c5d5d2c9722346d2/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=07570c398bd180913d3c0a51c5d5d2c9722346d2", "patch": "@@ -4341,8 +4341,6 @@ ix86_expand_setcc (code, unordered, dest)\n   */\n \n   type = 0;\n-  /* %%% reload problems with in-out.  Revisit.  */\n-  type = 1;\n \n   if (GET_MODE (dest) == QImode)\n     type = 2;"}, {"sha": "719bd2090c2aca12d6633aabb5da0da70fac9f1f", "filename": "gcc/resource.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07570c398bd180913d3c0a51c5d5d2c9722346d2/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07570c398bd180913d3c0a51c5d5d2c9722346d2/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=07570c398bd180913d3c0a51c5d5d2c9722346d2", "patch": "@@ -272,7 +272,9 @@ mark_referenced_resources (x, res, include_delayed_effects)\n       mark_referenced_resources (SET_SRC (x), res, 0);\n \n       x = SET_DEST (x);\n-      if (GET_CODE (x) == SIGN_EXTRACT || GET_CODE (x) == ZERO_EXTRACT)\n+      if (GET_CODE (x) == SIGN_EXTRACT\n+\t  || GET_CODE (x) == ZERO_EXTRACT\n+\t  || GET_CODE (x) == STRICT_LOW_PART)\n \tmark_referenced_resources (x, res, 0);\n       else if (GET_CODE (x) == SUBREG)\n \tx = SUBREG_REG (x);"}]}