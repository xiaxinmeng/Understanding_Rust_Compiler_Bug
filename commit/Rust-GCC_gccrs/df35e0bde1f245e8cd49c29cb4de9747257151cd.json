{"sha": "df35e0bde1f245e8cd49c29cb4de9747257151cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYzNWUwYmRlMWYyNDVlOGNkNDljMjljYjRkZTk3NDcyNTcxNTFjZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-01-07T14:34:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-01-07T14:34:06Z"}, "message": "tree-ssa-uncprop.c (ssa_equip_hash_traits): Remove in favor of tree_operand_hash.\n\n2019-01-07  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-uncprop.c (ssa_equip_hash_traits): Remove in favor\n\tof tree_operand_hash.\n\nFrom-SVN: r267649", "tree": {"sha": "cd300ccd7928c95e3f4e5eca83fecfd660de6bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd300ccd7928c95e3f4e5eca83fecfd660de6bcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df35e0bde1f245e8cd49c29cb4de9747257151cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df35e0bde1f245e8cd49c29cb4de9747257151cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df35e0bde1f245e8cd49c29cb4de9747257151cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df35e0bde1f245e8cd49c29cb4de9747257151cd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0f1121b40696d70b0ac8294e8fe39b426f578d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f1121b40696d70b0ac8294e8fe39b426f578d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0f1121b40696d70b0ac8294e8fe39b426f578d2"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "472145b6cb7d92d79727d54e0a03241d561e5597", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df35e0bde1f245e8cd49c29cb4de9747257151cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df35e0bde1f245e8cd49c29cb4de9747257151cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df35e0bde1f245e8cd49c29cb4de9747257151cd", "patch": "@@ -1,3 +1,8 @@\n+2019-01-07  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-uncprop.c (ssa_equip_hash_traits): Remove in favor\n+\tof tree_operand_hash.\n+\n 2019-01-07  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/88598"}, {"sha": "d61a685bb1cbc8333a6d3a1aa593ab885fe25d12", "filename": "gcc/tree-ssa-uncprop.c", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df35e0bde1f245e8cd49c29cb4de9747257151cd/gcc%2Ftree-ssa-uncprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df35e0bde1f245e8cd49c29cb4de9747257151cd/gcc%2Ftree-ssa-uncprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uncprop.c?ref=df35e0bde1f245e8cd49c29cb4de9747257151cd", "patch": "@@ -268,19 +268,7 @@ associate_equivalences_with_edges (void)\n    so with each value we have a list of SSA_NAMEs that have the\n    same value.  */\n \n-/* Traits for the hash_map to record the value to SSA name equivalences\n-   mapping.  */\n-struct ssa_equip_hash_traits : default_hash_traits <tree>\n-{\n-  static inline hashval_t hash (value_type value)\n-    { return iterative_hash_expr (value, 0); }\n-  static inline bool equal (value_type existing, value_type candidate)\n-    { return operand_equal_p (existing, candidate, 0); }\n-};\n-\n-typedef hash_map<tree, auto_vec<tree>,\n-\t\t simple_hashmap_traits <ssa_equip_hash_traits,\n-\t\t\t\t\tauto_vec <tree> > > val_ssa_equiv_t;\n+typedef hash_map<tree_operand_hash, auto_vec<tree> > val_ssa_equiv_t;\n \n /* Global hash table implementing a mapping from invariant values\n    to a list of SSA_NAMEs which have the same value.  We might be"}]}