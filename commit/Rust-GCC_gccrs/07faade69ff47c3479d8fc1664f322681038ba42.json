{"sha": "07faade69ff47c3479d8fc1664f322681038ba42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdmYWFkZTY5ZmY0N2MzNDc5ZDhmYzE2NjRmMzIyNjgxMDM4YmE0Mg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-12-10T14:20:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-12-10T14:20:43Z"}, "message": "2014-12-10  Richard Biener  <rguenther@suse.de>\n\n\t * tree-ssa-loop-im.c\n\t (move_computations_dom_walker::before_dom_children): Clear\n\t SSA_NAME_RANGE_INFO on moved stmts.\n\nFrom-SVN: r218580", "tree": {"sha": "3d400e7b4b499a66c6054939a77920fe52698ad7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d400e7b4b499a66c6054939a77920fe52698ad7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07faade69ff47c3479d8fc1664f322681038ba42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07faade69ff47c3479d8fc1664f322681038ba42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07faade69ff47c3479d8fc1664f322681038ba42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07faade69ff47c3479d8fc1664f322681038ba42/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1704358924217b920bb60e0197282154fa02a4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1704358924217b920bb60e0197282154fa02a4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1704358924217b920bb60e0197282154fa02a4b"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "e397df830a5f743f78964ea321997b458686496c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07faade69ff47c3479d8fc1664f322681038ba42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07faade69ff47c3479d8fc1664f322681038ba42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07faade69ff47c3479d8fc1664f322681038ba42", "patch": "@@ -1,3 +1,9 @@\n+2014-12-10  Richard Biener  <rguenther@suse.de>\n+\n+\t * tree-ssa-loop-im.c\n+\t (move_computations_dom_walker::before_dom_children): Clear\n+\t SSA_NAME_RANGE_INFO on moved stmts.\n+\n 2014-12-10  Martin Liska  <mliska@suse.cz>\n \n \t* sreal.c (sreal::shift_right): New implementation"}, {"sha": "9c0186d2df053245d12fe980160a5090a57712de", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07faade69ff47c3479d8fc1664f322681038ba42/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07faade69ff47c3479d8fc1664f322681038ba42/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=07faade69ff47c3479d8fc1664f322681038ba42", "patch": "@@ -1232,6 +1232,11 @@ move_computations_dom_walker::before_dom_children (basic_block bb)\n \t\t\t\t\t  COND_EXPR, t, arg0, arg1);\n \t  todo_ |= TODO_cleanup_cfg;\n \t}\n+      if (INTEGRAL_TYPE_P (TREE_TYPE (gimple_assign_lhs (new_stmt)))\n+\t  && (!ALWAYS_EXECUTED_IN (bb)\n+\t      || (ALWAYS_EXECUTED_IN (bb) != level\n+\t\t  && !flow_loop_nested_p (ALWAYS_EXECUTED_IN (bb), level))))\n+\tSSA_NAME_RANGE_INFO (gimple_assign_lhs (new_stmt)) = NULL;\n       gsi_insert_on_edge (loop_preheader_edge (level), new_stmt);\n       remove_phi_node (&bsi, false);\n     }\n@@ -1291,6 +1296,13 @@ move_computations_dom_walker::before_dom_children (basic_block bb)\n \t    }\n \t}\n       gsi_remove (&bsi, false);\n+      if (gimple_has_lhs (stmt)\n+\t  && TREE_CODE (gimple_get_lhs (stmt)) == SSA_NAME\n+\t  && INTEGRAL_TYPE_P (TREE_TYPE (gimple_get_lhs (stmt)))\n+\t  && (!ALWAYS_EXECUTED_IN (bb)\n+\t      || !(ALWAYS_EXECUTED_IN (bb) == level\n+\t\t   || flow_loop_nested_p (ALWAYS_EXECUTED_IN (bb), level))))\n+\tSSA_NAME_RANGE_INFO (gimple_get_lhs (stmt)) = NULL;\n       /* In case this is a stmt that is not unconditionally executed\n          when the target loop header is executed and the stmt may\n \t invoke undefined integer or pointer overflow rewrite it to"}]}