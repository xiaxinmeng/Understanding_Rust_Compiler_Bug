{"sha": "50a6af053af7a89702c7093eec85b717257e88bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBhNmFmMDUzYWY3YTg5NzAyYzcwOTNlZWM4NWI3MTcyNTdlODhiYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-09-19T13:12:13Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-09-19T13:12:13Z"}, "message": "decl.c (gnat_to_gnu_entity): Look into expressions for external constants that are aggregates.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Constant>: Look into\n\texpressions for external constants that are aggregates.\n\t* gcc-interface/utils2.c (build_simple_component_ref): If the field\n\tis an inherited component in an extension, look through the extension.\n\nFrom-SVN: r164414", "tree": {"sha": "32a41fb13fdcec0a8ebbccafdb8ca11ceb9759ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32a41fb13fdcec0a8ebbccafdb8ca11ceb9759ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50a6af053af7a89702c7093eec85b717257e88bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a6af053af7a89702c7093eec85b717257e88bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50a6af053af7a89702c7093eec85b717257e88bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a6af053af7a89702c7093eec85b717257e88bc/comments", "author": null, "committer": null, "parents": [{"sha": "b146446c53f525ad953fc7a886baceca17c74e9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b146446c53f525ad953fc7a886baceca17c74e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b146446c53f525ad953fc7a886baceca17c74e9a"}], "stats": {"total": 81, "additions": 69, "deletions": 12}, "files": [{"sha": "ade0440980ddb8f0f659a7b373758c02e08fe821", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a6af053af7a89702c7093eec85b717257e88bc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a6af053af7a89702c7093eec85b717257e88bc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=50a6af053af7a89702c7093eec85b717257e88bc", "patch": "@@ -1,3 +1,10 @@\n+2010-09-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Constant>: Look into\n+\texpressions for external constants that are aggregates.\n+\t* gcc-interface/utils2.c (build_simple_component_ref): If the field\n+\tis an inherited component in an extension, look through the extension.\n+\n 2010-09-10  Vincent Celier  <celier@adacore.com>\n \n \t* projects.texi: Add documentation for package extensions"}, {"sha": "6d77ffb842edbd372c3841e651ac46cc7bac8215", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a6af053af7a89702c7093eec85b717257e88bc/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a6af053af7a89702c7093eec85b717257e88bc/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=50a6af053af7a89702c7093eec85b717257e88bc", "patch": "@@ -421,17 +421,15 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t}\n \n       /* If we have an external constant that we are not defining, get the\n-\t expression that is was defined to represent.  We may throw that\n-\t expression away later if it is not a constant.  Do not retrieve the\n-\t expression if it is an aggregate or allocator, because in complex\n-\t instantiation contexts it may not be expanded  */\n+\t expression that is was defined to represent.  We may throw it away\n+\t later if it is not a constant.  But do not retrieve the expression\n+\t if it is an allocator because the designated type might be dummy\n+\t at this point.  */\n       if (!definition\n-\t  && Present (Expression (Declaration_Node (gnat_entity)))\n \t  && !No_Initialization (Declaration_Node (gnat_entity))\n-\t  && (Nkind (Expression (Declaration_Node (gnat_entity)))\n-\t      != N_Aggregate)\n-\t  && (Nkind (Expression (Declaration_Node (gnat_entity)))\n-\t      != N_Allocator))\n+\t  && Present (Expression (Declaration_Node (gnat_entity)))\n+\t  && Nkind (Expression (Declaration_Node (gnat_entity)))\n+\t     != N_Allocator)\n \tgnu_expr = gnat_to_gnu (Expression (Declaration_Node (gnat_entity)));\n \n       /* Ignore deferred constant definitions without address clause since"}, {"sha": "c40223f8e365a0eef76db93544ffba3157f84512", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a6af053af7a89702c7093eec85b717257e88bc/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a6af053af7a89702c7093eec85b717257e88bc/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=50a6af053af7a89702c7093eec85b717257e88bc", "patch": "@@ -1603,10 +1603,9 @@ build_simple_component_ref (tree record_variable, tree component,\n   if (!field)\n     return NULL_TREE;\n \n-  /* If this field is not in the specified record, see if we can find\n-     something in the record whose original field is the same as this one. */\n+  /* If this field is not in the specified record, see if we can find a field\n+     in the specified record whose original field is the same as this one.  */\n   if (DECL_CONTEXT (field) != record_type)\n-    /* Check if there is a field with name COMPONENT in the record.  */\n     {\n       tree new_field;\n \n@@ -1616,6 +1615,21 @@ build_simple_component_ref (tree record_variable, tree component,\n \tif (SAME_FIELD_P (field, new_field))\n \t  break;\n \n+      /* Next, see if we're looking for an inherited component in an extension.\n+\t If so, look thru the extension directly.  */\n+      if (!new_field\n+\t  && TREE_CODE (record_variable) == VIEW_CONVERT_EXPR\n+\t  && TYPE_ALIGN_OK (record_type)\n+\t  && TREE_CODE (TREE_TYPE (TREE_OPERAND (record_variable, 0)))\n+\t     == RECORD_TYPE\n+\t  && TYPE_ALIGN_OK (TREE_TYPE (TREE_OPERAND (record_variable, 0))))\n+\t{\n+\t  ref = build_simple_component_ref (TREE_OPERAND (record_variable, 0),\n+\t\t\t\t\t    NULL_TREE, field, no_fold_p);\n+\t  if (ref)\n+\t    return ref;\n+\t}\n+\n       /* Next, loop thru DECL_INTERNAL_P components if we haven't found\n          the component in the first search. Doing this search in 2 steps\n          is required to avoiding hidden homonymous fields in the"}, {"sha": "dc0286a02dee332821b1c28ee6606df24afe1914", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a6af053af7a89702c7093eec85b717257e88bc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a6af053af7a89702c7093eec85b717257e88bc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50a6af053af7a89702c7093eec85b717257e88bc", "patch": "@@ -1,3 +1,8 @@\n+2010-09-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/specs/constant1.ads: New test.\n+\t* gnat.dg/specs/constant1_pkg.ads: New helper.\n+\n 2010-09-18  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/45453"}, {"sha": "1c00c33f792b138c8a28cdffe65f89580cf7602a", "filename": "gcc/testsuite/gnat.dg/specs/constant1.ads", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a6af053af7a89702c7093eec85b717257e88bc/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fconstant1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a6af053af7a89702c7093eec85b717257e88bc/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fconstant1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fconstant1.ads?ref=50a6af053af7a89702c7093eec85b717257e88bc", "patch": "@@ -0,0 +1,22 @@\n+-- { dg-do compile }\n+\n+with Constant1_Pkg;\n+\n+package Constant1 is\n+\n+  type Timer_Id_T is new Constant1_Pkg.Timer_Id_T with null record;\n+\n+  type Timer_Op_T (Pending : Boolean := False) is\n+     record\n+       case Pending is\n+         when True =>\n+           Timer_Id : Timer_Id_T;\n+         when False =>\n+           null;\n+       end case;\n+     end record;\n+\n+  Timer : Timer_Op_T\n+    := (True, Timer_Id_T'(Constant1_Pkg.Null_Timer_Id with null record));\n+\n+end Constant1;"}, {"sha": "13300b1adaf87adebbd3d23f180f83de417ecd07", "filename": "gcc/testsuite/gnat.dg/specs/constant1_pkg.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a6af053af7a89702c7093eec85b717257e88bc/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fconstant1_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a6af053af7a89702c7093eec85b717257e88bc/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fconstant1_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fconstant1_pkg.ads?ref=50a6af053af7a89702c7093eec85b717257e88bc", "patch": "@@ -0,0 +1,11 @@\n+package Constant1_Pkg is\n+\n+  type Id_T is mod Natural'Last + 1;\n+\n+  type Timer_Id_T is tagged record\n+    Id : Id_T := Id_T'Last;\n+  end record;\n+\n+  Null_Timer_Id : constant Timer_Id_T := (Id => Id_T'Last - 1);\n+\n+end Constant1_Pkg;"}]}