{"sha": "89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODliMGMzMDMzNDQwMmVhOTRhNGVkY2IwOGYwZTgyYzlmODZkOWQ0Yg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2011-11-20T09:09:34Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2011-11-20T09:09:34Z"}, "message": "re PR gcov-profile/51113 (rev. 181105 causes Firefox profiledbuild failure)\n\n\tPR gcov-profile/51113\n\t* coverage.c (build_var): Propagate visibility for public decls.\n\n\ttestsuite/\n\t* gcc.misc-tests/gcov-13.c: Check gcovpart-13b coverage\n\t* gcc.misc-tests/gcov-16.c: New.\n\t* gcc.misc-tests/gcov-17.c: New.\n\t* g++.dg/gcov/gcov-8.C: New.\n\t* g++.dg/gcov/gcov-9.C: New.\n\t* g++.dg/gcov/gcov-10.C: New.\n\nFrom-SVN: r181524", "tree": {"sha": "0aeff57f2bcf6a88201dbda657eb6d07666898ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aeff57f2bcf6a88201dbda657eb6d07666898ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fcb36e7363f231cd0b58f500ef6fabf6da214e32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcb36e7363f231cd0b58f500ef6fabf6da214e32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcb36e7363f231cd0b58f500ef6fabf6da214e32"}], "stats": {"total": 173, "additions": 154, "deletions": 19}, "files": [{"sha": "298db24183052d3684982fbaa5286badcae395cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "patch": "@@ -1,3 +1,16 @@\n+2011-11-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR gcov-profile/51113\n+\t* coverage.c (build_var): Propagate visibility for public decls.\n+\n+\ttestsuite/\n+\t* gcc.misc-tests/gcov-13.c: Check gcovpart-13b coverage\n+\t* gcc.misc-tests/gcov-16.c: New.\n+\t* gcc.misc-tests/gcov-17.c: New.\n+\t* g++.dg/gcov/gcov-8.C: New.\n+\t* g++.dg/gcov/gcov-9.C: New.\n+\t* g++.dg/gcov/gcov-10.C: New.\n+\n 2011-11-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/51187"}, {"sha": "65ceba227834f4fa5bc0692299b58309d852f08f", "filename": "gcc/coverage.c", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "patch": "@@ -657,9 +657,8 @@ coverage_end_function (unsigned lineno_checksum, unsigned cfg_checksum)\n }\n \n /* Build a coverage variable of TYPE for function FN_DECL.  If COUNTER\n-   >= 0 it is a counter array, and thus local.  Otherwise it is the\n-   function structure and needs to be globalized.  All cases must be\n-   in the same comdat group as FN_DECL.  */\n+   >= 0 it is a counter array, otherwise it is the function structure.\n+   Propagate appropriate linkage and visibility from the function decl.  */\n \n static tree\n build_var (tree fn_decl, tree type, int counter)\n@@ -668,29 +667,29 @@ build_var (tree fn_decl, tree type, int counter)\n   tree fn_name = DECL_ASSEMBLER_NAME (fn_decl);\n   char *buf = (char *)alloca (IDENTIFIER_LENGTH (fn_name) + 10);\n \n-  if (counter >= 0)\n-    TREE_STATIC (var) = 1;\n-  else\n-    {\n-      TREE_PUBLIC (var) = TREE_PUBLIC (fn_decl);\n-      TREE_STATIC (var) = TREE_STATIC (fn_decl);\n-    }\n-  TREE_ADDRESSABLE (var) = 1;\n-  DECL_ALIGN (var) = TYPE_ALIGN (type);\n-\n   if (counter < 0)\n     sprintf (buf, \"__gcov__%s\", IDENTIFIER_POINTER (fn_name));\n   else\n     sprintf (buf, \"__gcov%u_%s\", counter, IDENTIFIER_POINTER (fn_name));\n   DECL_NAME (var) = get_identifier (buf);\n-\n-  /* Initialize assembler name so we can stream out. */\n+  TREE_STATIC (var) = 1;\n+  TREE_ADDRESSABLE (var) = 1;\n+  DECL_ALIGN (var) = TYPE_ALIGN (type);\n+  DECL_WEAK (var) = DECL_WEAK (fn_decl);\n+  TREE_PUBLIC (var)\n+    = TREE_PUBLIC (fn_decl) && (counter < 0 || DECL_WEAK (fn_decl));\n+  if (DECL_ONE_ONLY (fn_decl))\n+    make_decl_one_only (var, DECL_COMDAT_GROUP (fn_decl));\n+  \n   if (TREE_PUBLIC (var))\n-    DECL_ASSEMBLER_NAME (var);    \n+    {\n+      DECL_VISIBILITY (var) = DECL_VISIBILITY (fn_decl);\n+      DECL_VISIBILITY_SPECIFIED (var)\n+\t= DECL_VISIBILITY_SPECIFIED (fn_decl);\n \n-  DECL_WEAK (var) = TREE_PUBLIC (var) && DECL_WEAK (fn_decl);\n-  DECL_COMDAT (var) = DECL_COMDAT (fn_decl);\n-  DECL_COMDAT_GROUP (var) = DECL_COMDAT_GROUP (fn_decl);\n+      /* Initialize assembler name so we can stream out. */\n+      DECL_ASSEMBLER_NAME (var);\n+    }\n \n   return var;\n }"}, {"sha": "ef00522d1318f81ee667d6bb25a758444d013720", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "patch": "@@ -1,3 +1,13 @@\n+2011-11-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR gcov-profile/51113\n+\t* gcc.misc-tests/gcov-13.c: Check gcovpart-13b coverage\n+\t* gcc.misc-tests/gcov-16.c: New.\n+\t* gcc.misc-tests/gcov-17.c: New.\n+\t* g++.dg/gcov/gcov-8.C: New.\n+\t* g++.dg/gcov/gcov-9.C: New.\n+\t* g++.dg/gcov/gcov-10.C: New.\n+\n 2011-11-20  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/51194"}, {"sha": "4c91be94ee46ee40e53108fc1a1cec1bb605714c", "filename": "gcc/testsuite/g++.dg/gcov/gcov-10.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-10.C?ref=89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "patch": "@@ -0,0 +1,20 @@\n+/* Ensure PIC sequence used for comdat functions */\n+\n+/* { dg-options \"-fprofile-arcs -ftest-coverage -fpic\" } */\n+/* { dg-do run { target native } } */\n+/* { dg-require-effective-target fpic } */\n+\n+inline int __attribute__ ((noinline)) Foo ()\n+{\n+  static int x[1];\n+\n+  return x[0]++;  /* count (1) */\n+}\n+\n+int main ()\n+{\n+  Foo ();  /* count (1) */\n+  return 0;  /* count (1) */\n+}\n+\n+/* { dg-final { run-gcov gcov-10.C } } */"}, {"sha": "fa0890206f3acbc37f6b0ea333a32d5d40d6b428", "filename": "gcc/testsuite/g++.dg/gcov/gcov-11.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-11.C?ref=89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "patch": "@@ -0,0 +1,42 @@\n+/* Check that unexecuted exception processing regions are shown\n+   distinct from  unexecuted normal regions.  */\n+\n+/* { dg-options \"-fprofile-arcs -ftest-coverage\" } */\n+/* { dg-do run { target native } } */\n+\n+void Baz (int i)\n+{\n+  if (i)\n+    throw 1;\n+}\n+\n+void Boz () throw ()\n+{\n+}\n+\n+int main ()\n+{\n+  try\n+    {\n+      Baz (0);  /* count (1) */\n+      Baz (0);  /* count (1) */\n+    }\n+  catch (...)\n+    {\n+      Boz ();  /* count (=====) */\n+    }\n+\n+  try\n+    {\n+      Baz (1);  /* count (1) */\n+      Baz (0);  /* count (#####) */\n+    }\n+  catch (...)\n+    {\n+      Boz ();  /* count (1) */\n+    }\n+\n+  return 0;  /* count (1) */\n+}\n+\n+/* { dg-final { run-gcov gcov-11.C } } */"}, {"sha": "25e265e9c9836cd783ee4a644dc2366a79bee5d5", "filename": "gcc/testsuite/g++.dg/gcov/gcov-8.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-8.C?ref=89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-options \"-fprofile-arcs -fvisibility=hidden\" } */\n+/* { dg-require-visibility \"\" } */\n+\n+struct __attribute__((visibility (\"hidden\"))) X\n+{\n+  void Fink ();\n+};\n+\n+void X::Fink ()\n+{\n+}\n+\n+/* { dg-final { scan-assembler \"\\\\.hidden\\t__gcov___ZN1X4FinkEv\" } } */"}, {"sha": "e8d5ad8b0a4d67e3c3bd625e6e897ae479c5d2a3", "filename": "gcc/testsuite/g++.dg/gcov/gcov-9.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-9.C?ref=89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-options \"-fprofile-arcs -fvisibility-inlines-hidden\" } */\n+/* { dg-require-visibility \"\" } */\n+\n+inline void Boo ()\n+{\n+}\n+\n+extern \"C\" void (*Foo ()) ()\n+{\n+  return Boo;\n+}\n+\n+/* { dg-final { scan-assembler \"\\\\.hidden\\t__gcov___Z3Boov\" } } */\n+/* { dg-final { scan-assembler \"__gcov__Foo:\" } } */\n+/* { dg-final { scan-assembler-not \"\\\\.hidden\\t__gcov__Foo\" } } */"}, {"sha": "14be8f9e103432d405645e4c220cee580cfecdb3", "filename": "gcc/testsuite/gcc.misc-tests/gcov-13.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-13.c?ref=89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "patch": "@@ -16,3 +16,4 @@ int main ()\n }\n \n /* { dg-final { run-gcov { -a gcov-13.c } } } */\n+/* { dg-final { run-gcov { -a gcovpart-13b.c } } } */"}, {"sha": "b05c4a064e8e0d6d3ac499ef07106cfe947c5c18", "filename": "gcc/testsuite/gcc.misc-tests/gcov-16.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-16.c?ref=89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "patch": "@@ -0,0 +1,11 @@\n+/* Test visibility is copied */\n+\n+/* { dg-options \"-fprofile-arcs -fvisibility=hidden\" } */\n+/* { dg-require-visibility \"\" } */\n+/* { dg-require-weak \"\" } */\n+\n+void Foo ()\n+{\n+}\n+\n+ /* { dg-final { scan-assembler \"\\\\.hidden\\t__gcov__Foo\" } } */"}, {"sha": "66f50f27477a1cf20c22ad8fd998cbf89b7e455a", "filename": "gcc/testsuite/gcc.misc-tests/gcov-17.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b0c30334402ea94a4edcb08f0e82c9f86d9d4b/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-17.c?ref=89b0c30334402ea94a4edcb08f0e82c9f86d9d4b", "patch": "@@ -0,0 +1,11 @@\n+/* Test visibility is copied */\n+\n+/* { dg-options \"-fprofile-arcs\" } */\n+/* { dg-require-visibility \"\" } */\n+/* { dg-require-weak \"\" } */\n+\n+void __attribute__ ((visibility (\"hidden\"), weak)) Foo ()\n+{\n+}\n+\n+/* { dg-final { scan-assembler \"\\\\.hidden\\t__gcov__Foo\" } } */"}]}