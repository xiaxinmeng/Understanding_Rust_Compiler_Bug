{"sha": "d4eb0305b8581368fb5f9ed88dd501e13d1cdd3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRlYjAzMDViODU4MTM2OGZiNWY5ZWQ4OGRkNTAxZTEzZDFjZGQzZQ==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2018-10-29T09:45:50Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2018-10-29T09:45:50Z"}, "message": "Fix mingw-w64 Ada native bootstrap (PR81878).\n\nDue to the changes in PR81878 builds of GCC8 and trunk are impossible\nwith Ada enabled[1][2].\n\nThe reason the patch breaks the bootstrap is due to how gnatlink receives it's\narguments.\n\ngnatlink is usually invoked as\n\n        $(GNATLINK) -v gnatcmd -o ../../gnat$(exeext) \\\n          --GCC=\"$(CC) $(ADA_INCLUDES)\" --LINK=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n\nso it passes $(CC) and $(GCC_LINK) as quoted arguments to the program.\nBecause of this quotation the msys2 shell does not translate any paths in\n$(CC) and $(GCC_LINK) from their Unix version to their Windows version.\n\nFurthermore because there are multiple paths in the values separated by space\nand because the paths often contain a prefix like -L (e.g. -L/f/foo) we can't\nuse `fix_srcfile_path` to fix this.\n\nAn alternative solution would have been to create a stub program that echos the\ncommandline options it receives back, and calling this program with $(CC) and $(GCC_LINK)\nunquoted to get them translated.  However this was a bit more invasive.\n\nSo instead for native compilations we add -B../../ such that it picks up the lto plugin\nfrom the previous built compiler.  Since it's native there shouldn't be a mismatch here.\n\n[1] https://github.com/Alexpux/MINGW-packages/pull/3877#issuecomment-408651809\n[2] https://gcc.gnu.org/ml/gcc/2018-07/msg00410.html\n\ngnattools/ChangeLog:\n\n\tPR ada/81878\n\t* Makefile.in (TOOLS_FLAGS_TO_PASS_NATIVE): Add -B ../../.\n\nFrom-SVN: r265583", "tree": {"sha": "0fbc85f75064371eac3301ffb64b98ec7b523ddc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fbc85f75064371eac3301ffb64b98ec7b523ddc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4eb0305b8581368fb5f9ed88dd501e13d1cdd3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4eb0305b8581368fb5f9ed88dd501e13d1cdd3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4eb0305b8581368fb5f9ed88dd501e13d1cdd3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4eb0305b8581368fb5f9ed88dd501e13d1cdd3e/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aef7647f4a0a5a344ca7c3b5e2a9f18123949411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef7647f4a0a5a344ca7c3b5e2a9f18123949411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aef7647f4a0a5a344ca7c3b5e2a9f18123949411"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "4bd70ee877fe12a6823a28fbd0fc2e9a6bb9010a", "filename": "gnattools/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4eb0305b8581368fb5f9ed88dd501e13d1cdd3e/gnattools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4eb0305b8581368fb5f9ed88dd501e13d1cdd3e/gnattools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gnattools%2FChangeLog?ref=d4eb0305b8581368fb5f9ed88dd501e13d1cdd3e", "patch": "@@ -1,3 +1,8 @@\n+2018-10-29  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR ada/81878\n+\t* Makefile.in (TOOLS_FLAGS_TO_PASS_NATIVE): Add -B ../../.\n+\n 2017-08-17  Richard Biener  <rguenther@suse.de>\n \n \tPR ada/81878"}, {"sha": "8a98a2d0b1895b1798e22a31b44c6e0c9bc4ab73", "filename": "gnattools/Makefile.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4eb0305b8581368fb5f9ed88dd501e13d1cdd3e/gnattools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4eb0305b8581368fb5f9ed88dd501e13d1cdd3e/gnattools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gnattools%2FMakefile.in?ref=d4eb0305b8581368fb5f9ed88dd501e13d1cdd3e", "patch": "@@ -70,9 +70,12 @@ INCLUDES_FOR_SUBDIR = -iquote . -iquote .. -iquote ../.. \\\n ADA_INCLUDES_FOR_SUBDIR = -I. -I$(fsrcdir)/ada\n \n # Variables for gnattools, native\n+# Due to Windows path translations (See PR ada/81878) we need to add\n+# -B../../ to the compiler paths as a workaround for that $(CXX) contains\n+# Unix style paths that won't be translated by the runtime.\n TOOLS_FLAGS_TO_PASS_NATIVE= \\\n \t\"CC=../../xgcc -B../../\" \\\n-\t\"CXX=$(CXX)\" \\\n+\t\"CXX=$(CXX) -B../../\" \\\n \t\"CFLAGS=$(CFLAGS) $(WARN_CFLAGS)\" \\\n \t\"LDFLAGS=$(LDFLAGS)\" \\\n \t\"ADAFLAGS=$(ADAFLAGS)\" \\"}]}