{"sha": "5bcb0cc36879d3f65d2d78a6ff0c6383fba47dd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJjYjBjYzM2ODc5ZDNmNjVkMmQ3OGE2ZmYwYzYzODNmYmE0N2RkNQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-09-10T21:13:44Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-09-10T21:13:44Z"}, "message": "expr.c (find_array_element): Reformat comment.\n\n2008-09-10  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* expr.c (find_array_element): Reformat comment.\n\nFrom-SVN: r140250", "tree": {"sha": "066893b66217c08ac620d50c46e1b629097ff8fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/066893b66217c08ac620d50c46e1b629097ff8fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bcb0cc36879d3f65d2d78a6ff0c6383fba47dd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bcb0cc36879d3f65d2d78a6ff0c6383fba47dd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bcb0cc36879d3f65d2d78a6ff0c6383fba47dd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bcb0cc36879d3f65d2d78a6ff0c6383fba47dd5/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b056e4e1cd78d1619605741fa760a8064260fa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b056e4e1cd78d1619605741fa760a8064260fa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b056e4e1cd78d1619605741fa760a8064260fa6"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "d7361e02f7bc4fa27a3e0ae51ee0110ee15c0fe4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcb0cc36879d3f65d2d78a6ff0c6383fba47dd5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcb0cc36879d3f65d2d78a6ff0c6383fba47dd5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5bcb0cc36879d3f65d2d78a6ff0c6383fba47dd5", "patch": "@@ -1,3 +1,7 @@\n+2008-09-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* expr.c (find_array_element): Reformat comment.\n+\n 2008-09-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* expr.c (find_array_element): Reformat."}, {"sha": "ba4be56c9c3ef957184aa14ba9b5016cc3cc1685", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcb0cc36879d3f65d2d78a6ff0c6383fba47dd5/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcb0cc36879d3f65d2d78a6ff0c6383fba47dd5/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=5bcb0cc36879d3f65d2d78a6ff0c6383fba47dd5", "patch": "@@ -1034,7 +1034,8 @@ find_array_element (gfc_constructor *cons, gfc_array_ref *ar,\n \t  cons = NULL;\n \t  goto depart;\n \t}\n-        /* Check the bounds.  */\n+\n+      /* Check the bounds.  */\n       if ((ar->as->upper[i]\n \t   && ar->as->upper[i]->expr_type == EXPR_CONSTANT\n \t   && mpz_cmp (e->value.integer,"}]}