{"sha": "3f3932a0ec875cb7cca187018f3f8f05f2519d3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YzOTMyYTBlYzg3NWNiN2NjYTE4NzAxOGYzZjhmMDVmMjUxOWQzZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-12T21:14:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-12T21:15:40Z"}, "message": "real: Fix roundeven on inf/nan [PR93663]\n\nAs can be seen in the testcase, roundeven with inf or nan arguments\nICE because of those asserts where nothing prevents from is_halfway_below\nbeing called with those arguments.\n\nThe following patch fixes that by just returning false for rvc_inf/rvc_nan\nlike it returns for rvc_zero, so that we handle roundeven with all those\nvalues as round.  Inf/NaN are not halfway in between two integers...\n\n2020-02-12  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/93663\n\t* real.c (is_even): Make static.  Function comment fix.\n\t(is_halfway_below): Make static, don't assert R is not inf/nan,\n\tinstead return false for those.  Small formatting fixes.\n\n\t* gcc.dg/torture/builtin-round-roundeven.c (main): Add tests\n\tfor DBL_MAX, inf, their negations and nan.", "tree": {"sha": "a87f5f837e40faeb1209cda65f5acce18836fc3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a87f5f837e40faeb1209cda65f5acce18836fc3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f3932a0ec875cb7cca187018f3f8f05f2519d3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f3932a0ec875cb7cca187018f3f8f05f2519d3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f3932a0ec875cb7cca187018f3f8f05f2519d3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f3932a0ec875cb7cca187018f3f8f05f2519d3e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b32a3f324367ca470aaec1866abe7edf5616bb7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b32a3f324367ca470aaec1866abe7edf5616bb7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b32a3f324367ca470aaec1866abe7edf5616bb7c"}], "stats": {"total": 43, "additions": 29, "deletions": 14}, "files": [{"sha": "b566ca4b59193ebe8bc2d18cced85d64a276c986", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f3932a0ec875cb7cca187018f3f8f05f2519d3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f3932a0ec875cb7cca187018f3f8f05f2519d3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f3932a0ec875cb7cca187018f3f8f05f2519d3e", "patch": "@@ -1,3 +1,10 @@\n+2020-02-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/93663\n+\t* real.c (is_even): Make static.  Function comment fix.\n+\t(is_halfway_below): Make static, don't assert R is not inf/nan,\n+\tinstead return false for those.  Small formatting fixes.\n+\n 2020-02-12  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/93646"}, {"sha": "00b23ceb41e44a8685f24495299e425d2c018e48", "filename": "gcc/real.c", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f3932a0ec875cb7cca187018f3f8f05f2519d3e/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f3932a0ec875cb7cca187018f3f8f05f2519d3e/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=3f3932a0ec875cb7cca187018f3f8f05f2519d3e", "patch": "@@ -5150,10 +5150,10 @@ real_round (REAL_VALUE_TYPE *r, format_helper fmt,\n     real_convert (r, fmt, r);\n }\n \n-/* Return true including 0 if integer part of R is even, else return\n+/* Return true (including 0) if integer part of R is even, else return\n    false.  The function is not valid for rvc_inf and rvc_nan classes.  */\n \n-bool\n+static bool\n is_even (REAL_VALUE_TYPE *r)\n {\n   gcc_assert (r->cl != rvc_inf);\n@@ -5184,16 +5184,12 @@ is_even (REAL_VALUE_TYPE *r)\n }\n \n /* Return true if R is halfway between two integers, else return\n-   false.  The function is not valid for rvc_inf and rvc_nan classes.  */\n+   false.  */\n \n-bool\n+static bool\n is_halfway_below (const REAL_VALUE_TYPE *r)\n {\n-  gcc_assert (r->cl != rvc_inf);\n-  gcc_assert (r->cl != rvc_nan);\n-  int i;\n-\n-  if (r->cl == rvc_zero)\n+  if (r->cl != rvc_normal)\n     return false;\n \n   /* For numbers (-0.5,0) and (0,0.5).  */\n@@ -5205,13 +5201,13 @@ is_halfway_below (const REAL_VALUE_TYPE *r)\n       unsigned int n = SIGNIFICAND_BITS - REAL_EXP (r) - 1;\n       int w = n / HOST_BITS_PER_LONG;\n \n-      for (i = 0; i < w; ++i)\n+      for (int i = 0; i < w; ++i)\n \tif (r->sig[i] != 0)\n \t  return false;\n \n-      unsigned long num = ((unsigned long)1 << (n % HOST_BITS_PER_LONG));\n+      unsigned long num = 1UL << (n % HOST_BITS_PER_LONG);\n \n-      if (((r->sig[w] & num) != 0) && ((r->sig[w] & (num-1)) == 0))\n+      if ((r->sig[w] & num) != 0 && (r->sig[w] & (num - 1)) == 0)\n \treturn true;\n     }\n   return false;"}, {"sha": "2b4a189c1087190ea3d12578ccc92f7308cdf170", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f3932a0ec875cb7cca187018f3f8f05f2519d3e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f3932a0ec875cb7cca187018f3f8f05f2519d3e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f3932a0ec875cb7cca187018f3f8f05f2519d3e", "patch": "@@ -1,3 +1,9 @@\n+2020-02-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/93663\n+\t* gcc.dg/torture/builtin-round-roundeven.c (main): Add tests\n+\tfor DBL_MAX, inf, their negations and nan.\n+\n 2020-02-12  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/93646"}, {"sha": "8ce9d3d65ee065af4476429e5e9d77e0d4aaaf3e", "filename": "gcc/testsuite/gcc.dg/torture/builtin-round-roundeven.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f3932a0ec875cb7cca187018f3f8f05f2519d3e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-round-roundeven.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f3932a0ec875cb7cca187018f3f8f05f2519d3e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-round-roundeven.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-round-roundeven.c?ref=3f3932a0ec875cb7cca187018f3f8f05f2519d3e", "patch": "@@ -18,6 +18,13 @@ main (void)\n   TEST(roundeven,  -1.5, -2);\n   TEST(roundeven,  3.499, 3);\n   TEST(roundeven,  3.501, 4);\n+  TEST(roundeven,  __DBL_MAX__, __DBL_MAX__);\n+  TEST(roundeven,  -__DBL_MAX__, -__DBL_MAX__);\n+  TEST(roundeven,  __builtin_inf (), __builtin_inf ());\n+  TEST(roundeven,  -__builtin_inf (), -__builtin_inf ());\n+\n+  if (!__builtin_isnan (__builtin_roundeven (__builtin_nan (\"\"))))\n+    link_error (__LINE__);\n \n   if (__builtin_copysign (1, __builtin_roundeven (-0.5)) != -1)\n     link_error (__LINE__);\n@@ -31,6 +38,5 @@ main (void)\n     link_error (__LINE__);\n   if (__builtin_copysign (-1, __builtin_roundeven (0.25)) != 1)\n     link_error (__LINE__);\n- return 0;\n+  return 0;\n }\n-"}]}