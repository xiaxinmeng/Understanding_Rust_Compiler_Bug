{"sha": "429f8106ec2d96dae1bef20302e99237b5aa37cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI5ZjgxMDZlYzJkOTZkYWUxYmVmMjAzMDJlOTkyMzdiNWFhMzdjZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-08-31T02:49:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-08-31T02:49:33Z"}, "message": "pt.c (instantiate_template_1): Keep processing_template_decl set if there are dependent args.\n\n\t* pt.c (instantiate_template_1): Keep processing_template_decl set\n\tif there are dependent args.\n\nFrom-SVN: r190825", "tree": {"sha": "4cb37c14af2e6aabc8c24dd33c6acbda16cac468", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cb37c14af2e6aabc8c24dd33c6acbda16cac468"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/429f8106ec2d96dae1bef20302e99237b5aa37cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429f8106ec2d96dae1bef20302e99237b5aa37cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/429f8106ec2d96dae1bef20302e99237b5aa37cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429f8106ec2d96dae1bef20302e99237b5aa37cf/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da4aca78cf53d4a790e5f3fc2e4888d2e34ec92e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da4aca78cf53d4a790e5f3fc2e4888d2e34ec92e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da4aca78cf53d4a790e5f3fc2e4888d2e34ec92e"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "2eca6785b26dba6a23d405076db134b4c26d4f0a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/429f8106ec2d96dae1bef20302e99237b5aa37cf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/429f8106ec2d96dae1bef20302e99237b5aa37cf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=429f8106ec2d96dae1bef20302e99237b5aa37cf", "patch": "@@ -1,3 +1,8 @@\n+2012-08-30  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.c (instantiate_template_1): Keep processing_template_decl set\n+\tif there are dependent args.\n+\n 2012-08-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51421"}, {"sha": "54d92dfcf4e7620c7cf8770887229ecccdd9d503", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/429f8106ec2d96dae1bef20302e99237b5aa37cf/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/429f8106ec2d96dae1bef20302e99237b5aa37cf/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=429f8106ec2d96dae1bef20302e99237b5aa37cf", "patch": "@@ -14373,6 +14373,10 @@ instantiate_template_1 (tree tmpl, tree orig_args, tsubst_flags_t complain)\n   /* Instantiation of the function happens in the context of the function\n      template, not the context of the overload resolution we're doing.  */\n   push_to_top_level ();\n+  /* If there are dependent arguments, e.g. because we're doing partial\n+     ordering, make sure processing_template_decl stays set.  */\n+  if (uses_template_parms (targ_ptr))\n+    ++processing_template_decl;\n   if (DECL_CLASS_SCOPE_P (gen_tmpl))\n     {\n       tree ctx = tsubst (DECL_CONTEXT (gen_tmpl), targ_ptr,"}]}