{"sha": "6f96dcebb22a03fd4df64a18c13c5bbc1cee8a76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY5NmRjZWJiMjJhMDNmZDRkZjY0YTE4YzEzYzViYmMxY2VlOGE3Ng==", "commit": {"author": {"name": "Chen Gang", "email": "gang.chen.5i5j@gmail.com", "date": "2015-04-24T18:40:43Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-04-24T18:40:43Z"}, "message": "genrecog.c (validate_pattern): Check matching constraint refers to a lower numbered operand.\n\n        * genrecog.c (validate_pattern): Check matching constraint refers\n        to a lower numbered operand.\n\nFrom-SVN: r222418", "tree": {"sha": "675662af6869b55dc0390c5afbd97195c8fd12b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/675662af6869b55dc0390c5afbd97195c8fd12b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f96dcebb22a03fd4df64a18c13c5bbc1cee8a76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f96dcebb22a03fd4df64a18c13c5bbc1cee8a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f96dcebb22a03fd4df64a18c13c5bbc1cee8a76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f96dcebb22a03fd4df64a18c13c5bbc1cee8a76/comments", "author": {"login": "Chen-Gang", "id": 4986314, "node_id": "MDQ6VXNlcjQ5ODYzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4986314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chen-Gang", "html_url": "https://github.com/Chen-Gang", "followers_url": "https://api.github.com/users/Chen-Gang/followers", "following_url": "https://api.github.com/users/Chen-Gang/following{/other_user}", "gists_url": "https://api.github.com/users/Chen-Gang/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chen-Gang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chen-Gang/subscriptions", "organizations_url": "https://api.github.com/users/Chen-Gang/orgs", "repos_url": "https://api.github.com/users/Chen-Gang/repos", "events_url": "https://api.github.com/users/Chen-Gang/events{/privacy}", "received_events_url": "https://api.github.com/users/Chen-Gang/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d7d9f0eaecc3896149504cc44de789e6cbb2366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d7d9f0eaecc3896149504cc44de789e6cbb2366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d7d9f0eaecc3896149504cc44de789e6cbb2366"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "1995751b2c1481b4617a0341b8e1cb9060a04077", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f96dcebb22a03fd4df64a18c13c5bbc1cee8a76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f96dcebb22a03fd4df64a18c13c5bbc1cee8a76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f96dcebb22a03fd4df64a18c13c5bbc1cee8a76", "patch": "@@ -1,3 +1,8 @@\n+2015-04-24  Chen Gang  <gang.chen.5i5j@gmail.com>\n+\n+\t* genrecog.c (validate_pattern): Check matching constraint refers\n+\tto a lower numbered operand.\n+\n 2015-04-24  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/65849"}, {"sha": "9367d74bb3f23ff545b83158b7cb0258cec2423b", "filename": "gcc/genrecog.c", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f96dcebb22a03fd4df64a18c13c5bbc1cee8a76/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f96dcebb22a03fd4df64a18c13c5bbc1cee8a76/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=6f96dcebb22a03fd4df64a18c13c5bbc1cee8a76", "patch": "@@ -503,7 +503,8 @@ validate_pattern (rtx pattern, rtx insn, rtx set, int set_code)\n \n \tif (code == MATCH_OPERAND)\n \t  {\n-\t    const char constraints0 = XSTR (pattern, 2)[0];\n+\t    const char *constraints = XSTR (pattern, 2);\n+\t    const char constraints0 = constraints[0];\n \n \t    if (!constraints_supported_in_insn_p (insn))\n \t      {\n@@ -537,6 +538,33 @@ validate_pattern (rtx pattern, rtx insn, rtx set, int set_code)\n \t\t\t\t   \"operand %d missing output reload\",\n \t\t\t\t   XINT (pattern, 0));\n \t      }\n+\n+\t    /* For matching constraint in MATCH_OPERAND, the digit must be a\n+\t       smaller number than the number of the operand that uses it in the\n+\t       constraint.  */\n+\t    while (1)\n+\t      {\n+\t\twhile (constraints[0]\n+\t\t       && (constraints[0] == ' ' || constraints[0] == ','))\n+\t\t  constraints++;\n+\t\tif (!constraints[0])\n+\t\t  break;\n+\n+\t\tif (constraints[0] >= '0' && constraints[0] <= '9')\n+\t\t  {\n+\t\t    int val;\n+\n+\t\t    sscanf (constraints, \"%d\", &val);\n+\t\t    if (val >= XINT (pattern, 0))\n+\t\t      error_with_line (pattern_lineno,\n+\t\t\t\t       \"constraint digit %d is not smaller than\"\n+\t\t\t\t       \" operand %d\",\n+\t\t\t\t       val, XINT (pattern, 0));\n+\t\t  }\n+\n+\t\twhile (constraints[0] && constraints[0] != ',')\n+\t\t  constraints++;\n+\t      }\n \t  }\n \n \t/* Allowing non-lvalues in destinations -- particularly CONST_INT --"}]}