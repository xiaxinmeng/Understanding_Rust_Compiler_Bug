{"sha": "c6bb035c2de2e9dfac81e072c35c5cb818a8912d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZiYjAzNWMyZGUyZTlkZmFjODFlMDcyYzM1YzVjYjgxOGE4OTEyZA==", "commit": {"author": {"name": "J. David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2000-06-12T23:01:25Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-06-12T23:01:25Z"}, "message": "* config/float-vax.h: Add GFLOAT defines.\n\nFrom-SVN: r34506", "tree": {"sha": "557980f3c08df5deee13e435d534841cdb3f30d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/557980f3c08df5deee13e435d534841cdb3f30d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6bb035c2de2e9dfac81e072c35c5cb818a8912d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6bb035c2de2e9dfac81e072c35c5cb818a8912d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6bb035c2de2e9dfac81e072c35c5cb818a8912d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6bb035c2de2e9dfac81e072c35c5cb818a8912d/comments", "author": null, "committer": null, "parents": [{"sha": "5d712c399755f52a121789cb728db6b288bad558", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d712c399755f52a121789cb728db6b288bad558", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d712c399755f52a121789cb728db6b288bad558"}], "stats": {"total": 75, "additions": 71, "deletions": 4}, "files": [{"sha": "f490946b3171d2b03dd98223d962b4e5b35089b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6bb035c2de2e9dfac81e072c35c5cb818a8912d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6bb035c2de2e9dfac81e072c35c5cb818a8912d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6bb035c2de2e9dfac81e072c35c5cb818a8912d", "patch": "@@ -1,3 +1,7 @@\n+2000-06-12  J. David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+        * config/float-vax.h: Add GFLOAT defines.\n+\n Mon Jun  12  9:44:00 2000  Mark Klein  <mklein@dis.com>\n \n \t* configure.in: Update tm dependencies for MPE."}, {"sha": "fff577f4fd8d68eb94cb895b831bac2e327fdaa4", "filename": "gcc/config/float-vax.h", "status": "modified", "additions": 67, "deletions": 4, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6bb035c2de2e9dfac81e072c35c5cb818a8912d/gcc%2Fconfig%2Ffloat-vax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6bb035c2de2e9dfac81e072c35c5cb818a8912d/gcc%2Fconfig%2Ffloat-vax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloat-vax.h?ref=c6bb035c2de2e9dfac81e072c35c5cb818a8912d", "patch": "@@ -37,6 +37,68 @@\n #undef FLT_MAX_10_EXP\n #define FLT_MAX_10_EXP 38\n \n+#ifdef __GFLOAT\n+\n+   /* The GFLOAT numbers may be problematic since gcc uses DFLOAT */\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a double */\n+#undef DBL_MANT_DIG\n+#define DBL_MANT_DIG 53\n+   /* Number of decimal digits of precision in a double */\n+#undef DBL_DIG\n+#define DBL_DIG 15\n+   /* Difference between 1.0 and the minimum double greater than 1.0 */\n+#undef DBL_EPSILON\n+#define DBL_EPSILON 2.2204460492503131e-016\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised double */\n+#undef DBL_MIN_EXP\n+#define DBL_MIN_EXP (-1023)\n+   /* Minimum normalised double */\n+#undef DBL_MIN\n+#define DBL_MIN 5.5626846462680035e-309\n+   /* Minimum int x such that 10**x is a normalised double */\n+#undef DBL_MIN_10_EXP\n+#define DBL_MIN_10_EXP (-308)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable double */\n+#undef DBL_MAX_EXP\n+#define DBL_MAX_EXP 1023\n+   /* Maximum double */\n+#undef DBL_MAX\n+#define DBL_MAX 8.9884656743115775e+307\n+   /* Maximum int x such that 10**x is a representable double */\n+#undef DBL_MAX_10_EXP\n+#define DBL_MAX_10_EXP 307\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a long double */\n+#undef LDBL_MANT_DIG\n+#define LDBL_MANT_DIG 53\n+   /* Number of decimal digits of precision in a long double */\n+#undef LDBL_DIG\n+#define LDBL_DIG 15\n+   /* Difference between 1.0 and the minimum long double greater than 1.0 */\n+#undef LDBL_EPSILON\n+#define LDBL_EPSILON 2.2204460492503131e-016L\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised long double */\n+#undef LDBL_MIN_EXP\n+#define LDBL_MIN_EXP (-1023)\n+   /* Minimum normalised long double */\n+#undef LDBL_MIN\n+#define LDBL_MIN 5.5626846462680035e-309L\n+   /* Minimum int x such that 10**x is a normalised long double */\n+#undef LDBL_MIN_10_EXP\n+#define LDBL_MIN_10_EXP (-308)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable long double */\n+#undef LDBL_MAX_EXP\n+#define LDBL_MAX_EXP 1023\n+   /* Maximum long double */\n+#undef LDBL_MAX\n+#define LDBL_MAX 8.9884656743115775e+307L\n+   /* Maximum int x such that 10**x is a representable long double */\n+#undef LDBL_MAX_10_EXP\n+#define LDBL_MAX_10_EXP 307\n+\n+#else /* !__GFLOAT */\n+\n    /* Number of base-FLT_RADIX digits in the significand of a double */\n #undef DBL_MANT_DIG\n #define DBL_MANT_DIG 56\n@@ -60,7 +122,7 @@\n #define DBL_MAX_EXP 127\n    /* Maximum double */\n #undef DBL_MAX\n-#define DBL_MAX 1.70141183460469229e+38\n+#define DBL_MAX 1.70141183460469227e+38\n    /* Maximum int x such that 10**x is a representable double */\n #undef DBL_MAX_10_EXP\n #define DBL_MAX_10_EXP 38\n@@ -73,13 +135,13 @@\n #define LDBL_DIG 16\n    /* Difference between 1.0 and the minimum long double greater than 1.0 */\n #undef LDBL_EPSILON\n-#define LDBL_EPSILON 2.77555756156289135e-17\n+#define LDBL_EPSILON 2.77555756156289135e-17L\n    /* Minimum int x such that FLT_RADIX**(x-1) is a normalised long double */\n #undef LDBL_MIN_EXP\n #define LDBL_MIN_EXP (-127)\n    /* Minimum normalised long double */\n #undef LDBL_MIN\n-#define LDBL_MIN 2.93873587705571877e-39\n+#define LDBL_MIN 2.93873587705571877e-39L\n    /* Minimum int x such that 10**x is a normalised long double */\n #undef LDBL_MIN_10_EXP\n #define LDBL_MIN_10_EXP (-38)\n@@ -88,9 +150,10 @@\n #define LDBL_MAX_EXP 127\n    /* Maximum long double */\n #undef LDBL_MAX\n-#define LDBL_MAX 1.70141183460469229e+38\n+#define LDBL_MAX 1.70141183460469227e+38L\n    /* Maximum int x such that 10**x is a representable long double */\n #undef LDBL_MAX_10_EXP\n #define LDBL_MAX_10_EXP 38\n \n+#endif /* __GFLOAT */\n #endif /*  _FLOAT_H_ */"}]}