{"sha": "0ac941a0729f8c0b6685265adf8ef7365ef80dbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFjOTQxYTA3MjlmOGMwYjY2ODUyNjVhZGY4ZWY3MzY1ZWY4MGRiZQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@redhat.com", "date": "2002-05-06T07:09:21Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2002-05-06T07:09:21Z"}, "message": "sparc.c (emit_soft_tfmode_libcall): Do not allow result to overlap input operands in memory.\n\n2002-05-06  David S. Miller  <davem@redhat.com>\n\n\t* config/sparc/sparc.c (emit_soft_tfmode_libcall): Do not\n\tallow result to overlap input operands in memory.\n\nFrom-SVN: r53204", "tree": {"sha": "4f4a72b628186718d6c1cc455aa63bce5349ac76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f4a72b628186718d6c1cc455aa63bce5349ac76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ac941a0729f8c0b6685265adf8ef7365ef80dbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac941a0729f8c0b6685265adf8ef7365ef80dbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac941a0729f8c0b6685265adf8ef7365ef80dbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac941a0729f8c0b6685265adf8ef7365ef80dbe/comments", "author": null, "committer": null, "parents": [{"sha": "95ff5d3fad7df3df18c91b3c834d983c52b62423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95ff5d3fad7df3df18c91b3c834d983c52b62423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95ff5d3fad7df3df18c91b3c834d983c52b62423"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "543d1c61fa2524e72facca601b1be06cf2104189", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ac941a0729f8c0b6685265adf8ef7365ef80dbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ac941a0729f8c0b6685265adf8ef7365ef80dbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ac941a0729f8c0b6685265adf8ef7365ef80dbe", "patch": "@@ -1,3 +1,8 @@\n+2002-05-06  David S. Miller  <davem@redhat.com>\n+\n+\t* config/sparc/sparc.c (emit_soft_tfmode_libcall): Do not\n+\tallow result to overlap input operands in memory.\n+\n 2002-05-06  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n doc:"}, {"sha": "cd7c983954e8a9df4ec06d2c365861883730b194", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ac941a0729f8c0b6685265adf8ef7365ef80dbe/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ac941a0729f8c0b6685265adf8ef7365ef80dbe/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=0ac941a0729f8c0b6685265adf8ef7365ef80dbe", "patch": "@@ -2476,7 +2476,7 @@ emit_soft_tfmode_libcall (func_name, nargs, operands)\n      rtx *operands;\n {\n   rtx ret_slot = NULL, arg[3], func_sym;\n-  int i;\n+  int i, j;\n \n   /* We only expect to be called for conversions, unary, and binary ops.  */\n   if (nargs < 2 || nargs > 3)\n@@ -2491,7 +2491,25 @@ emit_soft_tfmode_libcall (func_name, nargs, operands)\n       if (GET_MODE (this_arg) == TFmode)\n \t{\n \t  if (GET_CODE (this_arg) == MEM)\n-\t    this_arg = XEXP (this_arg, 0);\n+\t    {\n+\t      this_arg = XEXP (this_arg, 0);\n+\n+\t      /* Make sure the output is not in the same place\n+\t\t as one of our inputs.  */\n+\t      if (i == 0)\n+\t\t{\n+\t\t  for (j = 1; j < nargs; j++)\n+\t\t    if (rtx_equal_p (operands[0], operands[j]))\n+\t\t      break;\n+\n+\t\t  if (j != nargs)\n+\t\t    {\n+\t\t      ret_slot = assign_stack_temp (TFmode,\n+\t\t\t\t\t\t    GET_MODE_SIZE (TFmode), 0);\n+\t\t      this_arg = XEXP (ret_slot, 0);\n+\t\t    }\n+\t\t}\n+\t    }\n \t  else if (CONSTANT_P (this_arg))\n \t    {\n \t      this_slot = force_const_mem (TFmode, this_arg);"}]}