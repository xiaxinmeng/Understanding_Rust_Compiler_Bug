{"sha": "008bad7a3e6acb60189dd289f3b2367b2f18a923", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA4YmFkN2EzZTZhY2I2MDE4OWRkMjg5ZjNiMjM2N2IyZjE4YTkyMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-05-17T12:39:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-05-17T12:39:50Z"}, "message": "gimple.c (iterative_hash_gimple_type): Simplify singleton case some more, fix final hash value of the non-singleton case.\n\n2011-05-17  Richard Guenther  <rguenther@suse.de>\n\n\t* gimple.c (iterative_hash_gimple_type): Simplify singleton\n\tcase some more, fix final hash value of the non-singleton case.\n\nFrom-SVN: r173829", "tree": {"sha": "40e598775a44730d033a1ef51662344a331f5c16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40e598775a44730d033a1ef51662344a331f5c16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/008bad7a3e6acb60189dd289f3b2367b2f18a923", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/008bad7a3e6acb60189dd289f3b2367b2f18a923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/008bad7a3e6acb60189dd289f3b2367b2f18a923", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/008bad7a3e6acb60189dd289f3b2367b2f18a923/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "364613408363334036d8f182ea2aba5d71d894fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/364613408363334036d8f182ea2aba5d71d894fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/364613408363334036d8f182ea2aba5d71d894fe"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "3625d9be2482e7b844b2a7c5c5b97f260af471df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/008bad7a3e6acb60189dd289f3b2367b2f18a923/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/008bad7a3e6acb60189dd289f3b2367b2f18a923/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=008bad7a3e6acb60189dd289f3b2367b2f18a923", "patch": "@@ -1,3 +1,8 @@\n+2011-05-17  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gimple.c (iterative_hash_gimple_type): Simplify singleton\n+\tcase some more, fix final hash value of the non-singleton case.\n+\n 2011-05-17  Richard Guenther  <rguenther@suse.de>\n \n \tPR bootstrap/49013"}, {"sha": "0c07ac24989a9e44463fc2e1ebb3664d145c50af", "filename": "gcc/gimple.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/008bad7a3e6acb60189dd289f3b2367b2f18a923/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/008bad7a3e6acb60189dd289f3b2367b2f18a923/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=008bad7a3e6acb60189dd289f3b2367b2f18a923", "patch": "@@ -4213,25 +4213,24 @@ iterative_hash_gimple_type (tree type, hashval_t val,\n   if (state->low == state->dfsnum)\n     {\n       tree x;\n-      struct sccs *cstate;\n       struct tree_int_map *m;\n \n       /* Pop off the SCC and set its hash values.  */\n       x = VEC_pop (tree, *sccstack);\n-      cstate = (struct sccs *)*pointer_map_contains (sccstate, x);\n-      cstate->on_sccstack = false;\n       /* Optimize SCC size one.  */\n       if (x == type)\n \t{\n+\t  state->on_sccstack = false;\n \t  m = ggc_alloc_cleared_tree_int_map ();\n \t  m->base.from = x;\n-\t  m->to = cstate->u.hash;\n+\t  m->to = v;\n \t  slot = htab_find_slot (type_hash_cache, m, INSERT);\n \t  gcc_assert (!*slot);\n \t  *slot = (void *) m;\n \t}\n       else\n \t{\n+\t  struct sccs *cstate;\n \t  unsigned first, i, size, j;\n \t  struct type_hash_pair *pairs;\n \t  /* Pop off the SCC and build an array of type, hash pairs.  */\n@@ -4241,6 +4240,8 @@ iterative_hash_gimple_type (tree type, hashval_t val,\n \t  size = VEC_length (tree, *sccstack) - first + 1;\n \t  pairs = XALLOCAVEC (struct type_hash_pair, size);\n \t  i = 0;\n+\t  cstate = (struct sccs *)*pointer_map_contains (sccstate, x);\n+\t  cstate->on_sccstack = false;\n \t  pairs[i].type = x;\n \t  pairs[i].hash = cstate->u.hash;\n \t  do\n@@ -4275,6 +4276,8 @@ iterative_hash_gimple_type (tree type, hashval_t val,\n \t      for (j = 0; pairs[j].hash != pairs[i].hash; ++j)\n \t\thash = iterative_hash_hashval_t (pairs[j].hash, hash);\n \t      m->to = hash;\n+\t      if (pairs[i].type == type)\n+\t\tv = hash;\n \t      slot = htab_find_slot (type_hash_cache, m, INSERT);\n \t      gcc_assert (!*slot);\n \t      *slot = (void *) m;"}]}