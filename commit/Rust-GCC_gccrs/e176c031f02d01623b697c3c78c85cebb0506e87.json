{"sha": "e176c031f02d01623b697c3c78c85cebb0506e87", "node_id": "C_kwDOANBUbNoAKGUxNzZjMDMxZjAyZDAxNjIzYjY5N2MzYzc4Yzg1Y2ViYjA1MDZlODc", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2022-11-26T07:51:58Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2023-01-14T13:24:35Z"}, "message": "libstdc++: [_GLIBCXX_INLINE_VERSION] Add to_chars/from_chars symbols export\n\nlibstdc++-v3/ChangeLog\n\n\t* include/std/format [_GLIBCXX_INLINE_VERSION](to_chars): Adapt __asm symbol\n\tspecifications.\n\t* config/abi/pre/gnu-versioned-namespace.ver: Add to_chars/from_chars symbols\n\texport.", "tree": {"sha": "684eff3d8163e31106427391c40744691700fe89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/684eff3d8163e31106427391c40744691700fe89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e176c031f02d01623b697c3c78c85cebb0506e87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e176c031f02d01623b697c3c78c85cebb0506e87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e176c031f02d01623b697c3c78c85cebb0506e87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e176c031f02d01623b697c3c78c85cebb0506e87/comments", "author": null, "committer": null, "parents": [{"sha": "5b3a88640f962d4ffca31ae651bed2d8672f1a8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b3a88640f962d4ffca31ae651bed2d8672f1a8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b3a88640f962d4ffca31ae651bed2d8672f1a8c"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "7fc81514808691630f2cc6ac0811864cbe6f09f2", "filename": "libstdc++-v3/config/abi/pre/gnu-versioned-namespace.ver", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e176c031f02d01623b697c3c78c85cebb0506e87/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu-versioned-namespace.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e176c031f02d01623b697c3c78c85cebb0506e87/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu-versioned-namespace.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu-versioned-namespace.ver?ref=e176c031f02d01623b697c3c78c85cebb0506e87", "patch": "@@ -142,6 +142,12 @@ GLIBCXX_8.0 {\n     _ZN14__gnu_parallel9_Settings3getEv;\n     _ZN14__gnu_parallel9_Settings3setERS0_;\n \n+    # to_chars/from_chars _Float128\n+    _ZNSt3__88to_charsEPcS0_DF128_;\n+    _ZNSt3__88to_charsEPcS0_DF128_NS_12chars_formatE;\n+    _ZNSt3__88to_charsEPcS0_DF128_NS_12chars_formatEi;\n+    _ZNSt3__810from_charsEPKcS1_RDF128_NS_12chars_formatE;\n+\n   local:\n     *;\n };"}, {"sha": "1cce4ebd45cb82513bd4be2451bd4bd2a6712635", "filename": "libstdc++-v3/include/std/format", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e176c031f02d01623b697c3c78c85cebb0506e87/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e176c031f02d01623b697c3c78c85cebb0506e87/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat?ref=e176c031f02d01623b697c3c78c85cebb0506e87", "patch": "@@ -1296,15 +1296,27 @@ namespace __format\n   // Make them available as std::__format::to_chars.\n   to_chars_result\n   to_chars(char*, char*, _Float128) noexcept\n+#  if _GLIBCXX_INLINE_VERSION\n+    __asm(\"_ZNSt3__88to_charsEPcS0_DF128_\");\n+#  else\n     __asm(\"_ZSt8to_charsPcS_DF128_\");\n+#  endif\n \n   to_chars_result\n   to_chars(char*, char*, _Float128, chars_format) noexcept\n+#  if _GLIBCXX_INLINE_VERSION\n+    __asm(\"_ZNSt3__88to_charsEPcS0_DF128_NS_12chars_formatE\");\n+#  else\n     __asm(\"_ZSt8to_charsPcS_DF128_St12chars_format\");\n+#  endif\n \n   to_chars_result\n   to_chars(char*, char*, _Float128, chars_format, int) noexcept\n+#  if _GLIBCXX_INLINE_VERSION\n+    __asm(\"_ZNSt3__88to_charsEPcS0_DF128_NS_12chars_formatEi\");\n+#  else\n     __asm(\"_ZSt8to_charsPcS_DF128_St12chars_formati\");\n+#  endif\n # endif\n #endif\n "}]}