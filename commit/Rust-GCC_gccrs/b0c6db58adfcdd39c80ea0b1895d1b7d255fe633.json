{"sha": "b0c6db58adfcdd39c80ea0b1895d1b7d255fe633", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBjNmRiNThhZGZjZGQzOWM4MGVhMGIxODk1ZDFiN2QyNTVmZTYzMw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-11-22T07:32:09Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-11-22T07:32:09Z"}, "message": "io.h (unit_flags): Add new flag has_recl.\n\n2006-11-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\t* io/io.h (unit_flags): Add new flag has_recl.\n\t* io.open.c (new_unit): Set flag if RECL= was specified.\n\t* io/transfer.c (us_write): If flag set, leave recl as initialized by\n\tnew_unit.\n\nFrom-SVN: r119087", "tree": {"sha": "a44192f26db743063df6208c3b6faf5ddfa0bb62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a44192f26db743063df6208c3b6faf5ddfa0bb62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0c6db58adfcdd39c80ea0b1895d1b7d255fe633", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c6db58adfcdd39c80ea0b1895d1b7d255fe633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0c6db58adfcdd39c80ea0b1895d1b7d255fe633", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c6db58adfcdd39c80ea0b1895d1b7d255fe633/comments", "author": null, "committer": null, "parents": [{"sha": "50bc8a4d6ee1190691ad47cc7fd9b32f0d3fd7f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bc8a4d6ee1190691ad47cc7fd9b32f0d3fd7f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50bc8a4d6ee1190691ad47cc7fd9b32f0d3fd7f8"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "553cd1a93a1b389827b03262a49ddb9a84b74c01", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0c6db58adfcdd39c80ea0b1895d1b7d255fe633/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0c6db58adfcdd39c80ea0b1895d1b7d255fe633/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=b0c6db58adfcdd39c80ea0b1895d1b7d255fe633", "patch": "@@ -1,3 +1,10 @@\n+2006-11-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* io/io.h (unit_flags): Add new flag has_recl.\n+\t* io.open.c (new_unit): Set flag if RECL= was specified.\n+\t* io/transfer.c (us_write): If flag set, leave recl as initialized by\n+\tnew_unit.\n+\n 2006-11-16  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* io/open.c (new_unit): Format %d expects an int variable."}, {"sha": "e8e8390d1c54bf732c9f167bf93c7744a1ac1fc5", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0c6db58adfcdd39c80ea0b1895d1b7d255fe633/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0c6db58adfcdd39c80ea0b1895d1b7d255fe633/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=b0c6db58adfcdd39c80ea0b1895d1b7d255fe633", "patch": "@@ -470,6 +470,7 @@ typedef struct\n   unit_status status;\n   unit_pad pad;\n   unit_convert convert;\n+  int has_recl;\n }\n unit_flags;\n "}, {"sha": "9b4f0cd7122d440dfae0482febec754def8b2447", "filename": "libgfortran/io/open.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0c6db58adfcdd39c80ea0b1895d1b7d255fe633/libgfortran%2Fio%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0c6db58adfcdd39c80ea0b1895d1b7d255fe633/libgfortran%2Fio%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fopen.c?ref=b0c6db58adfcdd39c80ea0b1895d1b7d255fe633", "patch": "@@ -406,9 +406,13 @@ new_unit (st_parameter_open *opp, gfc_unit *u, unit_flags * flags)\n   /* Unspecified recl ends up with a processor dependent value.  */\n \n   if ((opp->common.flags & IOPARM_OPEN_HAS_RECL_IN))\n-    u->recl = opp->recl_in;\n+    {\n+      u->flags.has_recl = 1;\n+      u->recl = opp->recl_in;\n+    }\n   else\n     {\n+      u->flags.has_recl = 0;\n       switch (compile_options.record_marker)\n \t{\n \tcase 0:"}, {"sha": "329d49828d4ea9a65330a72629870a519ce77a89", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0c6db58adfcdd39c80ea0b1895d1b7d255fe633/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0c6db58adfcdd39c80ea0b1895d1b7d255fe633/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=b0c6db58adfcdd39c80ea0b1895d1b7d255fe633", "patch": "@@ -1459,10 +1459,11 @@ us_write (st_parameter_dt *dtp)\n   if (swrite (dtp->u.p.current_unit->s, &dummy, &nbytes) != 0)\n     generate_error (&dtp->common, ERROR_OS, NULL);\n \n-  /* For sequential unformatted, we write until we have more bytes\n-     than can fit in the record markers. If disk space runs out first,\n-     it will error on the write.  */\n-  dtp->u.p.current_unit->recl = max_offset;\n+  /* For sequential unformatted, if RECL= was not specified in the OPEN\n+     we write until we have more bytes than can fit in the record markers.\n+     If disk space runs out first, it will error on the write.  */\n+  if (dtp->u.p.current_unit->flags.has_recl == 0)\n+    dtp->u.p.current_unit->recl = max_offset;\n \n   dtp->u.p.current_unit->bytes_left = dtp->u.p.current_unit->recl;\n }"}]}