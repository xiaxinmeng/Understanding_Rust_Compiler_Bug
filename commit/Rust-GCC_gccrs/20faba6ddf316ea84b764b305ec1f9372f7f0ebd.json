{"sha": "20faba6ddf316ea84b764b305ec1f9372f7f0ebd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBmYWJhNmRkZjMxNmVhODRiNzY0YjMwNWVjMWY5MzcyZjdmMGViZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-03-07T13:47:53Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-03-07T13:47:53Z"}, "message": "Revert function removal made in r264561.\n\n2019-03-07  Martin Liska  <mliska@suse.cz>\n\n\t* dwarf2out.c (add_AT_vms_delta): Revert function removal.\n\nFrom-SVN: r269454", "tree": {"sha": "973c8a8baffeb2c8035315eef71692cdeab669e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/973c8a8baffeb2c8035315eef71692cdeab669e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20faba6ddf316ea84b764b305ec1f9372f7f0ebd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20faba6ddf316ea84b764b305ec1f9372f7f0ebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20faba6ddf316ea84b764b305ec1f9372f7f0ebd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20faba6ddf316ea84b764b305ec1f9372f7f0ebd/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a438d160e1dc845882c2ecba99513a09a931623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a438d160e1dc845882c2ecba99513a09a931623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a438d160e1dc845882c2ecba99513a09a931623"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "b7244461267a9e2e920a41dde09ae89513e253ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20faba6ddf316ea84b764b305ec1f9372f7f0ebd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20faba6ddf316ea84b764b305ec1f9372f7f0ebd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20faba6ddf316ea84b764b305ec1f9372f7f0ebd", "patch": "@@ -1,3 +1,7 @@\n+2019-03-07  Martin Liska  <mliska@suse.cz>\n+\n+\t* dwarf2out.c (add_AT_vms_delta): Revert function removal.\n+\n 2019-03-07  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/89595"}, {"sha": "e074ee3fcd18c92a2e700444770f80fd0fb43ab4", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20faba6ddf316ea84b764b305ec1f9372f7f0ebd/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20faba6ddf316ea84b764b305ec1f9372f7f0ebd/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=20faba6ddf316ea84b764b305ec1f9372f7f0ebd", "patch": "@@ -3907,6 +3907,8 @@ static void prune_unused_types (void);\n static int maybe_emit_file (struct dwarf_file_data *fd);\n static inline const char *AT_vms_delta1 (dw_attr_node *);\n static inline const char *AT_vms_delta2 (dw_attr_node *);\n+static inline void add_AT_vms_delta (dw_die_ref, enum dwarf_attribute,\n+\t\t\t\t     const char *, const char *);\n static void append_entry_to_tmpl_value_parm_die_table (dw_die_ref, tree);\n static void gen_remaining_tmpl_value_param_die_attribute (void);\n static bool generic_type_p (tree);\n@@ -5142,6 +5144,22 @@ AT_file (dw_attr_node *a)\n   return a->dw_attr_val.v.val_file;\n }\n \n+/* Add a vms delta attribute value to a DIE.  */\n+\n+static inline void\n+add_AT_vms_delta (dw_die_ref die, enum dwarf_attribute attr_kind,\n+\t\t  const char *lbl1, const char *lbl2)\n+{\n+  dw_attr_node attr;\n+\n+  attr.dw_attr = attr_kind;\n+  attr.dw_attr_val.val_class = dw_val_class_vms_delta;\n+  attr.dw_attr_val.val_entry = NULL;\n+  attr.dw_attr_val.v.val_vms_delta.lbl1 = xstrdup (lbl1);\n+  attr.dw_attr_val.v.val_vms_delta.lbl2 = xstrdup (lbl2);\n+  add_dwarf_attr (die, &attr);\n+}\n+\n /* Add a symbolic view identifier attribute value to a DIE.  */\n \n static inline void"}]}