{"sha": "79d2a4839be9668412afd09d012e14431a8e7dd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlkMmE0ODM5YmU5NjY4NDEyYWZkMDlkMDEyZTE0NDMxYThlN2RkNQ==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-09-09T13:07:27Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-09-09T13:07:27Z"}, "message": "[AArch64 Testsuite] Add test of vld[234]q? intrinsic\n\n\t* gcc.target/aarch64/vldN_1.c: New test.\n\nFrom-SVN: r215072", "tree": {"sha": "46c4dfcdffb62baf134415ae1b152b985dca6bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46c4dfcdffb62baf134415ae1b152b985dca6bf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79d2a4839be9668412afd09d012e14431a8e7dd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d2a4839be9668412afd09d012e14431a8e7dd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d2a4839be9668412afd09d012e14431a8e7dd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d2a4839be9668412afd09d012e14431a8e7dd5/comments", "author": null, "committer": null, "parents": [{"sha": "bc23b1960de6693944ce78e4cb6e5aa8d4a9b3b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc23b1960de6693944ce78e4cb6e5aa8d4a9b3b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc23b1960de6693944ce78e4cb6e5aa8d4a9b3b9"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "879d5b2ee80f419a5c496903b65aa6c2ee9f9915", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d2a4839be9668412afd09d012e14431a8e7dd5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d2a4839be9668412afd09d012e14431a8e7dd5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79d2a4839be9668412afd09d012e14431a8e7dd5", "patch": "@@ -1,3 +1,7 @@\n+2014-09-09  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* gcc.target/aarch64/vldN_1.c: New test.\n+\n 2014-09-09  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* gcc.target/aarch64/simd/int_comparisons_1.c: Tighten regexp."}, {"sha": "b64de16a1658da166175288bc1378a57d220801f", "filename": "gcc/testsuite/gcc.target/aarch64/vldN_1.c", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d2a4839be9668412afd09d012e14431a8e7dd5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2FvldN_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d2a4839be9668412afd09d012e14431a8e7dd5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2FvldN_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2FvldN_1.c?ref=79d2a4839be9668412afd09d012e14431a8e7dd5", "patch": "@@ -0,0 +1,79 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3\" } */\n+\n+#include <arm_neon.h>\n+\n+extern void abort (void);\n+\n+#define TESTMETH(BASE, ELTS, STRUCT, SUFFIX)\t\\\n+int __attribute__ ((noinline))\t\t\t\\\n+test_vld##STRUCT##SUFFIX ()\t\t\t\\\n+{\t\t\t\t\t\t\\\n+  BASE##_t data[ELTS * STRUCT];\t\t\t\\\n+  BASE##_t temp[ELTS];\t\t\t\t\\\n+  BASE##x##ELTS##x##STRUCT##_t vectors;\t\t\\\n+  int i,j;\t\t\t\t\t\\\n+  for (i = 0; i < STRUCT * ELTS; i++)\t\t\\\n+    data [i] = (BASE##_t) 2*i + 1;\t\t\\\n+  asm volatile (\"\" : : : \"memory\");\t\t\\\n+  vectors = vld##STRUCT##SUFFIX (data);\t\t\\\n+  for (i = 0; i < STRUCT; i++)\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      vst1##SUFFIX (temp, vectors.val[i]);\t\\\n+      asm volatile (\"\" : : : \"memory\");\t\t\\\n+      for (j = 0; j < ELTS; j++)\t\t\\\n+        if (temp[j] != data[i + STRUCT*j])\t\\\n+          return 1;\t\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  return 0;\t\t\t\t\t\\\n+}\n+\n+#define VARIANTS(VARIANT, STRUCT)\t\\\n+VARIANT (uint8, 8, STRUCT, _u8)\t\t\\\n+VARIANT (uint16, 4, STRUCT, _u16)\t\\\n+VARIANT (uint32, 2, STRUCT, _u32)\t\\\n+VARIANT (uint64, 1, STRUCT, _u64)\t\\\n+VARIANT (int8, 8, STRUCT, _s8)\t\t\\\n+VARIANT (int16, 4, STRUCT, _s16)\t\\\n+VARIANT (int32, 2, STRUCT, _s32)\t\\\n+VARIANT (int64, 1, STRUCT, _s64)\t\\\n+VARIANT (poly8, 8, STRUCT, _p8)\t\t\\\n+VARIANT (poly16, 4, STRUCT, _p16)\t\\\n+VARIANT (float32, 2, STRUCT, _f32)\t\\\n+VARIANT (float64, 1, STRUCT, _f64)\t\\\n+VARIANT (uint8, 16, STRUCT, q_u8)\t\\\n+VARIANT (uint16, 8, STRUCT, q_u16)\t\\\n+VARIANT (uint32, 4, STRUCT, q_u32)\t\\\n+VARIANT (uint64, 2, STRUCT, q_u64)\t\\\n+VARIANT (int8, 16, STRUCT, q_s8)\t\\\n+VARIANT (int16, 8, STRUCT, q_s16)\t\\\n+VARIANT (int32, 4, STRUCT, q_s32)\t\\\n+VARIANT (int64, 2, STRUCT, q_s64)\t\\\n+VARIANT (poly8, 16, STRUCT, q_p8)\t\\\n+VARIANT (poly16, 8, STRUCT, q_p16)\t\\\n+VARIANT (float32, 4, STRUCT, q_f32)\t\\\n+VARIANT (float64, 2, STRUCT, q_f64)\n+\n+/* Tests of vld2 and vld2q.  */\n+VARIANTS (TESTMETH, 2)\n+\n+/* Tests of vld3 and vld3q.  */\n+VARIANTS (TESTMETH, 3)\n+\n+/* Tests of vld4 and vld4q.  */\n+VARIANTS (TESTMETH, 4)\n+\n+#define CHECK(BASE, ELTS, STRUCT, SUFFIX)\t\\\n+  if (test_vld##STRUCT##SUFFIX () != 0)\t\t\\\n+    abort ();\n+\n+int\n+main (int argc, char **argv)\n+{\n+  VARIANTS (CHECK, 2)\n+  VARIANTS (CHECK, 3)\n+  VARIANTS (CHECK, 4)\n+\n+  return 0;\n+}\n+"}]}