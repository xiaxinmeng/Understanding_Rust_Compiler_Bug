{"sha": "845da53434fe75cd61dcb4980a8ef0821f4738fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ1ZGE1MzQzNGZlNzVjZDYxZGNiNDk4MGE4ZWYwODIxZjQ3MzhmYQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-03-24T20:53:34Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-03-24T20:53:34Z"}, "message": "Formerly extend.texi.~113~\n\nFrom-SVN: r13782", "tree": {"sha": "a04f1969e6da31a10c59547ca8da167b3fb74fb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a04f1969e6da31a10c59547ca8da167b3fb74fb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/845da53434fe75cd61dcb4980a8ef0821f4738fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845da53434fe75cd61dcb4980a8ef0821f4738fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/845da53434fe75cd61dcb4980a8ef0821f4738fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845da53434fe75cd61dcb4980a8ef0821f4738fa/comments", "author": null, "committer": null, "parents": [{"sha": "0e4c9f5bb0de8bdbaa27f911a6c705b1c8c5ea63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e4c9f5bb0de8bdbaa27f911a6c705b1c8c5ea63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e4c9f5bb0de8bdbaa27f911a6c705b1c8c5ea63"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "6942629bfcd9d9a54a83cbb56f4c8739913231cf", "filename": "gcc/extend.texi", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845da53434fe75cd61dcb4980a8ef0821f4738fa/gcc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845da53434fe75cd61dcb4980a8ef0821f4738fa/gcc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fextend.texi?ref=845da53434fe75cd61dcb4980a8ef0821f4738fa", "patch": "@@ -1605,6 +1605,34 @@ variable should be placed into the tiny data section.\n The compiler will generate more efficient code for loads and stores\n on data in the tiny data section.  Note the tiny data area is limited to\n slightly under 32kbytes of data.\n+\n+@item interrupt\n+@cindex interrupt handlers on the M32R/D\n+Use this option on the M32R/D to indicate that the specified\n+function is an interrupt handler.  The compiler will generate function\n+entry and exit sequences suitable for use in an interrupt handler when this\n+attribute is present.\n+\n+@item model (@var{model-name})\n+@cindex function addressability on the M32R/D\n+Use this attribute on the M32R/D to set the addressability of an object,\n+and the code generated for a function.\n+The identifier @var{model-name} is one of @code{small}, @code{medium},\n+or @code{large}, representing each of the code models.\n+\n+Small model objects live in the lower 16MB of memory (so that their\n+addresses can be loaded with the @code{ld24} instruction), and are\n+callable with the @code{bl} instruction.\n+\n+Medium model objects may live anywhere in the 32 bit address space (the\n+compiler will generate @code{seth/add3} instructions to load their addresses),\n+and are callable with the @code{bl} instruction.\n+\n+Large model objects may live anywhere in the 32 bit address space (the\n+compiler will generate @code{seth/add3} instructions to load their addresses),\n+and may not be reachable with the @code{bl} instruction (the compiler will\n+generate the much slower @code{seth/add3/jl} instruction sequence).\n+\n @end table\n \n You can specify multiple attributes in a declaration by separating them\n@@ -1941,6 +1969,20 @@ variable.\n \n @item weak\n The @code{weak} attribute is described in @xref{Function Attributes}.\n+\n+@item model (@var{model-name})\n+@cindex variable addressability on the M32R/D\n+Use this attribute on the M32R/D to set the addressability of an object.\n+The identifier @var{model-name} is one of @code{small}, @code{medium},\n+or @code{large}, representing each of the code models.\n+\n+Small model objects live in the lower 16MB of memory (so that their\n+addresses can be loaded with the @code{ld24} instruction).\n+\n+Medium and large model objects may live anywhere in the 32 bit address space\n+(the compiler will generate @code{seth/add3} instructions to load their\n+addresses).\n+\n @end table\n \n To specify multiple attributes, separate them by commas within the"}]}