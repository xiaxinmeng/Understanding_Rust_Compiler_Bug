{"sha": "95638988cb96e12a6472bfdde500fa5105d7c251", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU2Mzg5ODhjYjk2ZTEyYTY0NzJiZmRkZTUwMGZhNTEwNWQ3YzI1MQ==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-10-04T20:55:49Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-10-04T20:55:49Z"}, "message": "trans-const.c (gfc_build_cstring_const): New function.\n\n* trans-const.c (gfc_build_cstring_const): New function.\n(gfc_init_cst): Use new function.\n* trans-const.h (gfc_build_cstring_const): Add prototype.\n* trans-io.c (set_string, set_error_locus): Use new function.\n* trans-stmt.c (gfc_trans_goto): Use new function.\n\nFrom-SVN: r88528", "tree": {"sha": "3bc67b7ed0b9882c2945e7136e69be9b705e553d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bc67b7ed0b9882c2945e7136e69be9b705e553d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95638988cb96e12a6472bfdde500fa5105d7c251", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95638988cb96e12a6472bfdde500fa5105d7c251", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95638988cb96e12a6472bfdde500fa5105d7c251", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95638988cb96e12a6472bfdde500fa5105d7c251/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee569894e73717bcc0ee7598a0fd250d0e07b50f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee569894e73717bcc0ee7598a0fd250d0e07b50f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee569894e73717bcc0ee7598a0fd250d0e07b50f"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "c0572da043a76438579c95a088d4ab4fe1b9afcd", "filename": "gcc/fortran/trans-const.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95638988cb96e12a6472bfdde500fa5105d7c251/gcc%2Ffortran%2Ftrans-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95638988cb96e12a6472bfdde500fa5105d7c251/gcc%2Ffortran%2Ftrans-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-const.c?ref=95638988cb96e12a6472bfdde500fa5105d7c251", "patch": "@@ -89,6 +89,14 @@ gfc_build_string_const (int length, const char *s)\n   return str;\n }\n \n+/* Build a Fortran character constant from a zero-terminated string.  */\n+\n+tree\n+gfc_build_cstring_const (const char *s)\n+{\n+  return gfc_build_string_const (strlen (s) + 1, s);\n+}\n+\n /* Return a string constant with the given length.  Used for static\n    initializers.  The constant will be padded or truncated to match \n    length.  */\n@@ -147,17 +155,16 @@ gfc_init_constants (void)\n   for (n = 0; n <= GFC_MAX_DIMENSIONS; n++)\n     gfc_rank_cst[n] = build_int_cst (gfc_array_index_type, n);\n \n-  gfc_strconst_bounds = gfc_build_string_const (21, \"Array bound mismatch\");\n+  gfc_strconst_bounds = gfc_build_cstring_const (\"Array bound mismatch\");\n \n   gfc_strconst_fault =\n-    gfc_build_string_const (30, \"Array reference out of bounds\");\n+    gfc_build_cstring_const (\"Array reference out of bounds\");\n \n   gfc_strconst_wrong_return =\n-    gfc_build_string_const (32, \"Incorrect function return value\");\n+    gfc_build_cstring_const (\"Incorrect function return value\");\n \n   gfc_strconst_current_filename =\n-    gfc_build_string_const (strlen (gfc_option.source) + 1,\n-\t\t\t    gfc_option.source);\n+    gfc_build_cstring_const (gfc_option.source);\n }\n \n /* Converts a GMP integer into a backend tree node.  */"}, {"sha": "d38a90fe740637e9354534719dd33712e5f98a6c", "filename": "gcc/fortran/trans-const.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95638988cb96e12a6472bfdde500fa5105d7c251/gcc%2Ffortran%2Ftrans-const.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95638988cb96e12a6472bfdde500fa5105d7c251/gcc%2Ffortran%2Ftrans-const.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-const.h?ref=95638988cb96e12a6472bfdde500fa5105d7c251", "patch": "@@ -35,6 +35,7 @@ tree gfc_conv_constant_to_tree (gfc_expr *);\n void gfc_conv_constant (gfc_se *, gfc_expr *);\n \n tree gfc_build_string_const (int, const char *);\n+tree gfc_build_cstring_const (const char *);\n \n /* Translate a string constant for a static initializer.  */\n tree gfc_conv_string_init (tree, gfc_expr *);"}, {"sha": "ada82976043231830013f51b80ed51239d8fe967", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95638988cb96e12a6472bfdde500fa5105d7c251/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95638988cb96e12a6472bfdde500fa5105d7c251/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=95638988cb96e12a6472bfdde500fa5105d7c251", "patch": "@@ -409,7 +409,7 @@ set_string (stmtblock_t * block, stmtblock_t * postblock, tree var,\n   if (e->ts.type == BT_INTEGER && e->symtree->n.sym->attr.assign == 1)\n     {\n       msg =\n-        gfc_build_string_const (37, \"Assigned label is not a format label\");\n+        gfc_build_cstring_const (\"Assigned label is not a format label\");\n       tmp = GFC_DECL_STRING_LEN (se.expr);\n       tmp = build2 (LE_EXPR, boolean_type_node,\n \t\t    tmp, convert (TREE_TYPE (tmp), integer_minus_one_node));\n@@ -518,7 +518,7 @@ set_error_locus (stmtblock_t * block, locus * where)\n   int line;\n \n   f = where->lb->file;\n-  tmp = gfc_build_string_const (strlen (f->filename) + 1, f->filename);\n+  tmp = gfc_build_cstring_const (f->filename);\n \n   tmp = gfc_build_addr_expr (pchar_type_node, tmp);\n   gfc_add_modify_expr (block, locus_file, tmp);"}, {"sha": "8fd8ff801c20f616b916874f955bcd7675e1776e", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95638988cb96e12a6472bfdde500fa5105d7c251/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95638988cb96e12a6472bfdde500fa5105d7c251/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=95638988cb96e12a6472bfdde500fa5105d7c251", "patch": "@@ -144,7 +144,7 @@ gfc_trans_goto (gfc_code * code)\n   gfc_start_block (&se.pre);\n   gfc_conv_expr (&se, code->expr);\n   assign_error =\n-    gfc_build_string_const (37, \"Assigned label is not a target label\");\n+    gfc_build_cstring_const (\"Assigned label is not a target label\");\n   tmp = GFC_DECL_STRING_LEN (se.expr);\n   tmp = build2 (NE_EXPR, boolean_type_node, tmp, integer_minus_one_node);\n   gfc_trans_runtime_check (tmp, assign_error, &se.pre);\n@@ -160,8 +160,7 @@ gfc_trans_goto (gfc_code * code)\n     }\n \n   /* Check the label list.  */\n-  range_error =\n-    gfc_build_string_const (34, \"Assigned label is not in the list\");\n+  range_error = gfc_build_cstring_const (\"Assigned label is not in the list\");\n \n   do\n     {"}]}