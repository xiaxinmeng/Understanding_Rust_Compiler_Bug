{"sha": "02881b1b7951e0ab69fcd1876a053f01c00f2ff1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI4ODFiMWI3OTUxZTBhYjY5ZmNkMTg3NmEwNTNmMDFjMDBmMmZmMQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-28T19:19:20Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-28T19:19:20Z"}, "message": "(CPP_SPEC): Use include_v not include-v.\n\n(LINK_SPEC): Add missing `-' before `k' option.\n(PREFERRED_DEBUGGING_TYPE): Define to DBX_DEBUG.\n(SDB_DEBUGGING_INFO): Define.\n(MD_EXEC_PREFIX): Define to /usr/local/lib/gcc-.\n(LINK_LIBGCC_SPECIAL_1): Define.\n(NAME__MAIN, SYMBOL__MAIN): Define.\n\nFrom-SVN: r5224", "tree": {"sha": "31550c95bf79c1ede06e11aff2d1fd6573ab0281", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31550c95bf79c1ede06e11aff2d1fd6573ab0281"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02881b1b7951e0ab69fcd1876a053f01c00f2ff1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02881b1b7951e0ab69fcd1876a053f01c00f2ff1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02881b1b7951e0ab69fcd1876a053f01c00f2ff1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02881b1b7951e0ab69fcd1876a053f01c00f2ff1/comments", "author": null, "committer": null, "parents": [{"sha": "bf97b9672d4a6081f1d78850b506abe02a4850c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf97b9672d4a6081f1d78850b506abe02a4850c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf97b9672d4a6081f1d78850b506abe02a4850c7"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "ef4ac7dd81cf633c3878fd1a412f9b75f06d1e8c", "filename": "gcc/config/lynx.h", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02881b1b7951e0ab69fcd1876a053f01c00f2ff1/gcc%2Fconfig%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02881b1b7951e0ab69fcd1876a053f01c00f2ff1/gcc%2Fconfig%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flynx.h?ref=02881b1b7951e0ab69fcd1876a053f01c00f2ff1", "patch": "@@ -6,15 +6,15 @@\n #define ASM_SPEC \"%{mcoff:-C}\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%{mthreads:-D_MULTITHREADED} %{mposix:-D_POSIX_SOURCE} %{msystem-v:-I/usr/include-v}\"\n+#define CPP_SPEC \"%{mthreads:-D_MULTITHREADED} %{mposix:-D_POSIX_SOURCE} %{msystem-v:-I/usr/include_v}\"\n \n /* Provide required defaults for linker switches.  */\n /* ??? The -k option may need to change to whatever option the GNU linker\n    actually accepts.  This is to produce COFF output.  */\n /* ??? The -V option may need to change to whatever option the GNU linker\n    actually accepts.  This is to produce System-V magic numbers.  */\n #undef LINK_SPEC\n-#define LINK_SPEC \"%{!e*:-e __main} %{msystem-v:-V} %{mcoff:k}\"\n+#define LINK_SPEC \"-P1000 %{msystem-v:-V} %{mcoff:-k}\"\n \n #undef LIB_SPEC\n #define LIB_SPEC \"%{mthreads:-L/lib/thread/}%{msystem-v:-lc_v}%{!msystem-v:%{mposix:-lc_p} -lc}\"\n@@ -37,6 +37,13 @@\n /* We want to output DBX debugging information.  */\n \n #define DBX_DEBUGGING_INFO\n+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+\n+/* We optionally want to be able to produce SDB debugging output so that\n+   we can create debuggable SDB/coff files.  This won't be needed when\n+   stabs-in-coff works.  */\n+\n+#define SDB_DEBUGGING_INFO\n \n /* Generate calls to memcpy, memcmp and memset.  */\n \n@@ -75,3 +82,19 @@\n /* Define this so that C++ destructors will use atexit.  */\n \n #define HAVE_ATEXIT\n+\n+/* This is defined only so that we can find the assembler.  Everything else\n+   is in /bin.  */\n+\n+#define MD_EXEC_PREFIX \"/usr/local/lib/gcc-\"\n+\n+/* ??? This is needed because /bin/ld does not handle -L options correctly.\n+   This can be deleted if GNU ld is being used.  */\n+\n+#define LINK_LIBGCC_SPECIAL_1\n+\n+/* The Lynx linker considers __main to be a possible entry point, so we\n+   must use a different name.  */\n+\n+#define NAME__MAIN \"____main\"\n+#define SYMBOL__MAIN ____main"}]}