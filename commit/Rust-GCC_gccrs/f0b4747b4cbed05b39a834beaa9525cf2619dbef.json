{"sha": "f0b4747b4cbed05b39a834beaa9525cf2619dbef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBiNDc0N2I0Y2JlZDA1YjM5YTgzNGJlYWE5NTI1Y2YyNjE5ZGJlZg==", "commit": {"author": {"name": "Craig Black", "email": "craig.black@aonix.com", "date": "2004-11-18T12:53:12Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-11-18T12:53:12Z"}, "message": "BeanInfoEmbryo.java: Use TreeMap for proper sorting.\n\n2004-11-18  Craig Black  <craig.black@aonix.com>\n\n\t* gnu/java/beans/BeanInfoEmbryo.java: Use TreeMap for proper sorting.\n\nFrom-SVN: r90858", "tree": {"sha": "d24efec5a262a8283ca44dcab5e5ffc1c76b625e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d24efec5a262a8283ca44dcab5e5ffc1c76b625e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0b4747b4cbed05b39a834beaa9525cf2619dbef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b4747b4cbed05b39a834beaa9525cf2619dbef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0b4747b4cbed05b39a834beaa9525cf2619dbef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b4747b4cbed05b39a834beaa9525cf2619dbef/comments", "author": null, "committer": null, "parents": [{"sha": "b8610a53763f72f32f5c1c79840d96ba147d93d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8610a53763f72f32f5c1c79840d96ba147d93d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8610a53763f72f32f5c1c79840d96ba147d93d6"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "0e945c549ceb13b22e1af5a45c86ae5d542e0266", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b4747b4cbed05b39a834beaa9525cf2619dbef/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b4747b4cbed05b39a834beaa9525cf2619dbef/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f0b4747b4cbed05b39a834beaa9525cf2619dbef", "patch": "@@ -1,3 +1,7 @@\n+2004-11-18  Craig Black  <craig.black@aonix.com>\n+\n+\t* gnu/java/beans/BeanInfoEmbryo.java: Use TreeMap for proper sorting.\n+\n 2004-11-18  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* Makefile.am: Correct friend function declaration."}, {"sha": "7c60e7cd39b1bbb0881002e006fce86bc1db027e", "filename": "libjava/gnu/java/beans/BeanInfoEmbryo.java", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b4747b4cbed05b39a834beaa9525cf2619dbef/libjava%2Fgnu%2Fjava%2Fbeans%2FBeanInfoEmbryo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b4747b4cbed05b39a834beaa9525cf2619dbef/libjava%2Fgnu%2Fjava%2Fbeans%2FBeanInfoEmbryo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fbeans%2FBeanInfoEmbryo.java?ref=f0b4747b4cbed05b39a834beaa9525cf2619dbef", "patch": "@@ -48,6 +48,9 @@\n import java.util.Arrays;\n import java.util.Enumeration;\n import java.util.Hashtable;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.TreeMap;\n import java.util.Vector;\n \n /**\n@@ -66,7 +69,10 @@\n  **/\n \n public class BeanInfoEmbryo {\n-\tHashtable properties = new Hashtable();\n+\n+\t// by using a TreeMap the properties will be sorted alphabetically by name\n+\t// which matches the (undocumented) behavior of jdk\n+\tTreeMap properties = new TreeMap();\n \tHashtable events = new Hashtable();\n \tVector methods = new Vector();\n \n@@ -85,9 +91,9 @@ public BeanInfo getBeanInfo() {\n \n \t\tPropertyDescriptor[] Aproperties = new PropertyDescriptor[properties.size()];\n \t\tint i = 0;\n-\t\tEnumeration e = properties.elements();\n-\t\twhile (e.hasMoreElements()) {\n-\t\t\tAproperties[i] = (PropertyDescriptor) e.nextElement();\n+\t\tIterator it = properties.entrySet().iterator();\n+\t\twhile (it.hasNext()) {\n+\t\t\tAproperties[i] = (PropertyDescriptor) (((Map.Entry)it.next()).getValue());\n \t\t\tif(defaultPropertyName != null && Aproperties[i].getName().equals(defaultPropertyName)) {\n \t\t\t\tdefaultProperty = i;\n \t\t\t}\n@@ -96,7 +102,7 @@ public BeanInfo getBeanInfo() {\n \n \t\tEventSetDescriptor[] Aevents = new EventSetDescriptor[events.size()];\n \t\ti = 0;\n-\t\te = events.elements();\n+\t\tEnumeration e = events.elements();\n \t\twhile (e.hasMoreElements()) {\n \t\t\tAevents[i] = (EventSetDescriptor) e.nextElement();\n \t\t\tif(defaultEventName != null && Aevents[i].getName().equals(defaultEventName)) {"}]}