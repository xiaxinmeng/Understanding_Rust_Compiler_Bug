{"sha": "fdce493deb6604758d71ea759676ff5f3b4dafd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRjZTQ5M2RlYjY2MDQ3NThkNzFlYTc1OTY3NmZmNWYzYjRkYWZkNw==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-10-13T14:54:01Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-10-13T14:54:01Z"}, "message": "Fix parloops gimple_uid usage\n\n2015-10-13  Tom de Vries  <tom@codesourcery.com>\n\n\t* tree-parloops.c (reduction_phi): Handle cases that gimple_uid is 0 or\n\t-1.  Add assert that returned entry matches phi argument.\n\t(parallelize_loops): Move calls to init_stmt_vec_info_vec and\n\tfree_stmt_vec_info_vec ...\n\t(gather_scalar_reductions): ... here.  Initialize gimple_uids of phis\n\twith -1.\n\nFrom-SVN: r228767", "tree": {"sha": "3566664a4632dd96a92cfe14e3978434744306a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3566664a4632dd96a92cfe14e3978434744306a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdce493deb6604758d71ea759676ff5f3b4dafd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdce493deb6604758d71ea759676ff5f3b4dafd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdce493deb6604758d71ea759676ff5f3b4dafd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdce493deb6604758d71ea759676ff5f3b4dafd7/comments", "author": null, "committer": null, "parents": [{"sha": "f35a4f377119624a1a6afcd576052734a126f9ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f35a4f377119624a1a6afcd576052734a126f9ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f35a4f377119624a1a6afcd576052734a126f9ec"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "15d0c12597261bacc8d244188e9903a1b55ca1fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdce493deb6604758d71ea759676ff5f3b4dafd7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdce493deb6604758d71ea759676ff5f3b4dafd7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdce493deb6604758d71ea759676ff5f3b4dafd7", "patch": "@@ -1,3 +1,12 @@\n+2015-10-13  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* tree-parloops.c (reduction_phi): Handle cases that gimple_uid is 0 or\n+\t-1.  Add assert that returned entry matches phi argument.\n+\t(parallelize_loops): Move calls to init_stmt_vec_info_vec and\n+\tfree_stmt_vec_info_vec ...\n+\t(gather_scalar_reductions): ... here.  Initialize gimple_uids of phis\n+\twith -1.\n+\n 2014-10-13  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \tPR tree-optimization/67909, 67947"}, {"sha": "c7aa62c0827ce5d98762d8ec45f6cf4342a736f6", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdce493deb6604758d71ea759676ff5f3b4dafd7/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdce493deb6604758d71ea759676ff5f3b4dafd7/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=fdce493deb6604758d71ea759676ff5f3b4dafd7", "patch": "@@ -238,9 +238,14 @@ reduction_phi (reduction_info_table_type *reduction_list, gimple *phi)\n   if (reduction_list->elements () == 0 || phi == NULL)\n     return NULL;\n \n+  if (gimple_uid (phi) == (unsigned int)-1\n+      || gimple_uid (phi) == 0)\n+    return NULL;\n+\n   tmpred.reduc_phi = phi;\n   tmpred.reduc_version = gimple_uid (phi);\n   red = reduction_list->find (&tmpred);\n+  gcc_assert (red == NULL || red->reduc_phi == phi);\n \n   return red;\n }\n@@ -2416,6 +2421,9 @@ gather_scalar_reductions (loop_p loop, reduction_info_table_type *reduction_list\n   loop_vec_info simple_inner_loop_info = NULL;\n   bool allow_double_reduc = true;\n \n+  if (!stmt_vec_info_vec.exists ())\n+    init_stmt_vec_info_vec ();\n+\n   simple_loop_info = vect_analyze_loop_form (loop);\n   if (simple_loop_info == NULL)\n     return;\n@@ -2477,9 +2485,16 @@ gather_scalar_reductions (loop_p loop, reduction_info_table_type *reduction_list\n   destroy_loop_vec_info (simple_loop_info, true);\n   destroy_loop_vec_info (simple_inner_loop_info, true);\n \n+  /* Release the claim on gimple_uid.  */\n+  free_stmt_vec_info_vec ();\n+\n   /* As gimple_uid is used by the vectorizer in between vect_analyze_loop_form\n-     and destroy_loop_vec_info, we can set gimple_uid of reduc_phi stmts\n-     only now.  */\n+     and free_stmt_vec_info_vec, we can set gimple_uid of reduc_phi stmts only\n+     now.  */\n+  basic_block bb;\n+  FOR_EACH_BB_FN (bb, cfun)\n+    for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+      gimple_set_uid (gsi_stmt (gsi), (unsigned int)-1);\n   reduction_list->traverse <void *, set_reduc_phi_uids> (NULL);\n }\n \n@@ -2627,7 +2642,6 @@ parallelize_loops (void)\n \n   gcc_obstack_init (&parloop_obstack);\n   reduction_info_table_type reduction_list (10);\n-  init_stmt_vec_info_vec ();\n \n   FOR_EACH_LOOP (loop, 0)\n     {\n@@ -2719,7 +2733,6 @@ parallelize_loops (void)\n \t\t\t n_threads, &niter_desc);\n     }\n \n-  free_stmt_vec_info_vec ();\n   obstack_free (&parloop_obstack, NULL);\n \n   /* Parallelization will cause new function calls to be inserted through"}]}