{"sha": "c22027a00ede06e3f53170a82aa5b6af8697ddc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIyMDI3YTAwZWRlMDZlM2Y1MzE3MGE4MmFhNWI2YWY4Njk3ZGRjNA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-05-20T18:15:34Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-05-20T18:17:52Z"}, "message": "preprocessor: cleanups in c-common handling\n\n\t* c-common.c (try_to_locate_new_include_insertion_point): Use\n\tstrcmp to compare filenames.\n\t* c-lex.c (init_c_lex): Move declaration to initialization.\n\t* c-opts.c (handle_deferred_opts): Move cpp_get_deps call into\n\tdeferred count loop.", "tree": {"sha": "f4ca1067bcafb8009bd9ed8db4c065d37c53f1c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4ca1067bcafb8009bd9ed8db4c065d37c53f1c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c22027a00ede06e3f53170a82aa5b6af8697ddc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c22027a00ede06e3f53170a82aa5b6af8697ddc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c22027a00ede06e3f53170a82aa5b6af8697ddc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c22027a00ede06e3f53170a82aa5b6af8697ddc4/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a8565fa1182ed326721a50c700f9f5275355d40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a8565fa1182ed326721a50c700f9f5275355d40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a8565fa1182ed326721a50c700f9f5275355d40"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "90f022c76228ea3f073857b36d7d9cb29515a583", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c22027a00ede06e3f53170a82aa5b6af8697ddc4/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c22027a00ede06e3f53170a82aa5b6af8697ddc4/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=c22027a00ede06e3f53170a82aa5b6af8697ddc4", "patch": "@@ -1,3 +1,11 @@\n+2020-05-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* c-common.c (try_to_locate_new_include_insertion_point): Use\n+\tstrcmp to compare filenames.\n+\t* c-lex.c (init_c_lex): Move declaration to initialization.\n+\t* c-opts.c (handle_deferred_opts): Move cpp_get_deps call into\n+\tdeferred count loop.\n+\n 2020-05-15  Jason Merrill  <jason@redhat.com>\n \n \t* c-opts.c (set_std_cxx20): Set flag_coroutines."}, {"sha": "10c0353fe4e4c72b023021585d36f161ae77161c", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c22027a00ede06e3f53170a82aa5b6af8697ddc4/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c22027a00ede06e3f53170a82aa5b6af8697ddc4/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=c22027a00ede06e3f53170a82aa5b6af8697ddc4", "patch": "@@ -8708,7 +8708,8 @@ try_to_locate_new_include_insertion_point (const char *file, location_t loc)\n \t    last_ord_map_after_include = NULL;\n \t  }\n \n-      if (ord_map->to_file == file)\n+      if (0 == strcmp (ord_map->to_file, file)\n+\t  && ord_map->to_line)\n \t{\n \t  if (!first_ord_map_in_file)\n \t    first_ord_map_in_file = ord_map;"}, {"sha": "b1cef2345f491a600eaae4173b05b49e5bdf954b", "filename": "gcc/c-family/c-lex.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c22027a00ede06e3f53170a82aa5b6af8697ddc4/gcc%2Fc-family%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c22027a00ede06e3f53170a82aa5b6af8697ddc4/gcc%2Fc-family%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-lex.c?ref=c22027a00ede06e3f53170a82aa5b6af8697ddc4", "patch": "@@ -60,7 +60,6 @@ static void cb_undef (cpp_reader *, unsigned int, cpp_hashnode *);\n void\n init_c_lex (void)\n {\n-  struct cpp_callbacks *cb;\n   struct c_fileinfo *toplevel;\n \n   /* The get_fileinfo data structure must be initialized before\n@@ -73,7 +72,7 @@ init_c_lex (void)\n       toplevel->time = body_time;\n     }\n \n-  cb = cpp_get_callbacks (parse_in);\n+  struct cpp_callbacks *cb = cpp_get_callbacks (parse_in);\n \n   cb->line_change = cb_line_change;\n   cb->ident = cb_ident;"}, {"sha": "8a5131b8ac6f3d16b994707214f7958e96c6a27a", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c22027a00ede06e3f53170a82aa5b6af8697ddc4/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c22027a00ede06e3f53170a82aa5b6af8697ddc4/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=c22027a00ede06e3f53170a82aa5b6af8697ddc4", "patch": "@@ -1317,15 +1317,14 @@ handle_deferred_opts (void)\n   if (!deps_seen)\n     return;\n \n-  mkdeps *deps = cpp_get_deps (parse_in);\n-\n-  for (size_t i = 0; i < deferred_count; i++)\n-    {\n-      struct deferred_opt *opt = &deferred_opts[i];\n+  if (mkdeps *deps = cpp_get_deps (parse_in))\n+    for (unsigned i = 0; i < deferred_count; i++)\n+      {\n+\tstruct deferred_opt *opt = &deferred_opts[i];\n \n-      if (opt->code == OPT_MT || opt->code == OPT_MQ)\n-\tdeps_add_target (deps, opt->arg, opt->code == OPT_MQ);\n-    }\n+\tif (opt->code == OPT_MT || opt->code == OPT_MQ)\n+\t  deps_add_target (deps, opt->arg, opt->code == OPT_MQ);\n+      }\n }\n \n /* These settings are appropriate for GCC, but not necessarily so for"}]}