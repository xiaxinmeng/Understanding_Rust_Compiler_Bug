{"sha": "a23faf7a4f172a09bfb095081491dff1225cbf52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIzZmFmN2E0ZjE3MmEwOWJmYjA5NTA4MTQ5MWRmZjEyMjVjYmY1Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-05-25T14:58:39Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-05-25T14:58:39Z"}, "message": "re PR c/71266 (gcc ICE on x86_64-linux-gnu in \"store_parm_decls_oldstyle\")\n\n\tPR c/71266\n\t* c-decl.c (store_parm_decls_oldstyle): Skip non-PARM_DECLs.\n\n\t* gcc.dg/noncompile/old-style-parm-3.c: New test.\n\nFrom-SVN: r236708", "tree": {"sha": "017c80345fc2b353a4bb9339f25c9182f4f6baf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/017c80345fc2b353a4bb9339f25c9182f4f6baf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a23faf7a4f172a09bfb095081491dff1225cbf52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a23faf7a4f172a09bfb095081491dff1225cbf52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a23faf7a4f172a09bfb095081491dff1225cbf52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a23faf7a4f172a09bfb095081491dff1225cbf52/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95efe6b6f4aea5255aef35e1c150d229f490af6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95efe6b6f4aea5255aef35e1c150d229f490af6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95efe6b6f4aea5255aef35e1c150d229f490af6e"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "f3bb0e9d58a30c6f47a6b8ad9eb6d9599eb01164", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a23faf7a4f172a09bfb095081491dff1225cbf52/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a23faf7a4f172a09bfb095081491dff1225cbf52/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=a23faf7a4f172a09bfb095081491dff1225cbf52", "patch": "@@ -3,6 +3,9 @@\n \tPR c/71265\n \t* c-decl.c (c_make_fname_decl): Don't check seen_error.\n \n+\tPR c/71266\n+\t* c-decl.c (store_parm_decls_oldstyle): Skip non-PARM_DECLs.\n+\n 2016-05-24  Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* c-parser.c (c_parser_oacc_declare): Add support for"}, {"sha": "d79802ee72c39f9ca866d5393e5750cb394858fd", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a23faf7a4f172a09bfb095081491dff1225cbf52/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a23faf7a4f172a09bfb095081491dff1225cbf52/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=a23faf7a4f172a09bfb095081491dff1225cbf52", "patch": "@@ -8605,8 +8605,11 @@ store_parm_decls_oldstyle (tree fndecl, const struct c_arg_info *arg_info)\n \t    continue;\n \t  /* If we got something other than a PARM_DECL it is an error.  */\n \t  if (TREE_CODE (decl) != PARM_DECL)\n-\t    error_at (DECL_SOURCE_LOCATION (decl),\n-\t\t      \"%qD declared as a non-parameter\", decl);\n+\t    {\n+\t      error_at (DECL_SOURCE_LOCATION (decl),\n+\t\t\t\"%qD declared as a non-parameter\", decl);\n+\t      continue;\n+\t    }\n \t  /* If the declaration is already marked, we have a duplicate\n \t     name.  Complain and ignore the duplicate.  */\n \t  else if (seen_args.contains (decl))"}, {"sha": "1b1b97e2c73e32fe55b56e2ba12958265aa49903", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a23faf7a4f172a09bfb095081491dff1225cbf52/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a23faf7a4f172a09bfb095081491dff1225cbf52/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a23faf7a4f172a09bfb095081491dff1225cbf52", "patch": "@@ -3,6 +3,9 @@\n \tPR c/71265\n \t* gcc.dg/noncompile/pr71265.c: New test.\n \n+\tPR c/71266\n+\t* gcc.dg/noncompile/old-style-parm-3.c: New test.\n+\n 2016-05-25  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcc.c-torture/execute/921110-1.c: Fix abort decl."}, {"sha": "f9d6d0f686a8ea6eef821cffbdc46b94f9f98e1c", "filename": "gcc/testsuite/gcc.dg/noncompile/old-style-parm-3.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a23faf7a4f172a09bfb095081491dff1225cbf52/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fold-style-parm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a23faf7a4f172a09bfb095081491dff1225cbf52/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fold-style-parm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fold-style-parm-3.c?ref=a23faf7a4f172a09bfb095081491dff1225cbf52", "patch": "@@ -0,0 +1,9 @@\n+/* PR c/71266 */\n+/* { dg-do compile } */\n+\n+int fn1 (a)\n+  enum b {  /* { dg-warning \"empty declaration\" } */\n+    a /* { dg-error \".a. declared as a non-parameter\" } */\n+  };\n+{\n+}"}]}