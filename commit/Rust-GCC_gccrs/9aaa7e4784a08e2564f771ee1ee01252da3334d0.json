{"sha": "9aaa7e4784a08e2564f771ee1ee01252da3334d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFhYTdlNDc4NGEwOGUyNTY0Zjc3MWVlMWVlMDEyNTJkYTMzMzRkMA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2011-06-10T14:20:44Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2011-06-10T14:20:44Z"}, "message": "ira-costs.c: Remove #ifdefs on dead FORBIDDEN_INC_DEC_CLASSES.\n\n\t* ira-costs.c: Remove #ifdefs on dead FORBIDDEN_INC_DEC_CLASSES.\n\tAdjust comments.\n\t* system.h (FORBIDDEN_INC_DEC_CLASSES): Poison.\n\nFrom-SVN: r174908", "tree": {"sha": "cb38c051fd4426dd2a0239c40df352a4c6963bfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb38c051fd4426dd2a0239c40df352a4c6963bfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9aaa7e4784a08e2564f771ee1ee01252da3334d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aaa7e4784a08e2564f771ee1ee01252da3334d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aaa7e4784a08e2564f771ee1ee01252da3334d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aaa7e4784a08e2564f771ee1ee01252da3334d0/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32293e2bd60afe1e629c5b563e00314b3201495c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32293e2bd60afe1e629c5b563e00314b3201495c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32293e2bd60afe1e629c5b563e00314b3201495c"}], "stats": {"total": 64, "additions": 13, "deletions": 51}, "files": [{"sha": "dc2e04ac1e9e9a171e4038cecab5b7733f19610d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aaa7e4784a08e2564f771ee1ee01252da3334d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aaa7e4784a08e2564f771ee1ee01252da3334d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9aaa7e4784a08e2564f771ee1ee01252da3334d0", "patch": "@@ -1,3 +1,9 @@\n+2011-06-10  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* ira-costs.c: Remove #ifdefs on dead FORBIDDEN_INC_DEC_CLASSES.\n+\tAdjust comments.\n+\t* system.h (FORBIDDEN_INC_DEC_CLASSES): Poison.\n+\n 2011-06-10  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-cp.c (ipcp_process_devirtualization_opportunities):"}, {"sha": "da14089f913b374fcb225ab2370dd56a740a3cd8", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 6, "deletions": 50, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aaa7e4784a08e2564f771ee1ee01252da3334d0/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aaa7e4784a08e2564f771ee1ee01252da3334d0/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=9aaa7e4784a08e2564f771ee1ee01252da3334d0", "patch": "@@ -46,15 +46,9 @@ static bool pseudo_classes_defined_p = false;\n /* TRUE if we work with allocnos.  Otherwise we work with pseudos.  */\n static bool allocno_p;\n \n-/* Number of elements in arrays `in_inc_dec' and `costs'.  */\n+/* Number of elements in array `costs'.  */\n static int cost_elements_num;\n \n-#ifdef FORBIDDEN_INC_DEC_CLASSES\n-/* Indexed by n, is TRUE if allocno or pseudo with number N is used in\n-   an auto-inc or auto-dec context.  */\n-static bool *in_inc_dec;\n-#endif\n-\n /* The `costs' struct records the cost of using hard registers of each\n    class considered for the calculation and of using memory for each\n    allocno or pseudo.  */\n@@ -1135,13 +1129,7 @@ record_address_regs (enum machine_mode mode, rtx x, int context,\n     case PRE_DEC:\n       /* Double the importance of an allocno that is incremented or\n \t decremented, since it would take two extra insns if it ends\n-\t up in the wrong place.  If the operand is a pseudo-register,\n-\t show it is being used in an INC_DEC context.  */\n-#ifdef FORBIDDEN_INC_DEC_CLASSES\n-      if (REG_P (XEXP (x, 0))\n-\t  && REGNO (XEXP (x, 0)) >= FIRST_PSEUDO_REGISTER)\n-\tin_inc_dec[COST_INDEX (REGNO (XEXP (x, 0)))] = true;\n-#endif\n+\t up in the wrong place.  */\n       record_address_regs (mode, XEXP (x, 0), 0, code, SCRATCH, 2 * scale);\n       break;\n \n@@ -1380,9 +1368,6 @@ print_allocno_costs (FILE *f)\n \t{\n \t  rclass = cost_classes[k];\n \t  if (contains_reg_of_mode[rclass][PSEUDO_REGNO_MODE (regno)]\n-#ifdef FORBIDDEN_INC_DEC_CLASSES\n-\t      && (! in_inc_dec[i] || ! forbidden_inc_dec_class[rclass])\n-#endif\n #ifdef CANNOT_CHANGE_MODE_CLASS\n \t      && ! invalid_mode_change_p (regno, (enum reg_class) rclass)\n #endif\n@@ -1425,9 +1410,6 @@ print_pseudo_costs (FILE *f)\n \t{\n \t  rclass = cost_classes[k];\n \t  if (contains_reg_of_mode[rclass][PSEUDO_REGNO_MODE (regno)]\n-#ifdef FORBIDDEN_INC_DEC_CLASSES\n-\t      && (! in_inc_dec[regno] || ! forbidden_inc_dec_class[rclass])\n-#endif\n #ifdef CANNOT_CHANGE_MODE_CLASS\n \t      && ! invalid_mode_change_p (regno, (enum reg_class) rclass)\n #endif\n@@ -1477,9 +1459,6 @@ find_costs_and_classes (FILE *dump_file)\n   enum reg_class *regno_best_class;\n \n   init_recog ();\n-#ifdef FORBIDDEN_INC_DEC_CLASSES\n-  in_inc_dec = ira_allocate (sizeof (bool) * cost_elements_num);\n-#endif /* FORBIDDEN_INC_DEC_CLASSES */\n   regno_best_class\n     = (enum reg_class *) ira_allocate (max_reg_num ()\n \t\t\t\t       * sizeof (enum reg_class));\n@@ -1544,9 +1523,6 @@ find_costs_and_classes (FILE *dump_file)\n       /* Zero out our accumulation of the cost of each class for each\n \t allocno.  */\n       memset (costs, 0, cost_elements_num * struct_costs_size);\n-#ifdef FORBIDDEN_INC_DEC_CLASSES\n-      memset (in_inc_dec, 0, cost_elements_num * sizeof (bool));\n-#endif\n \n       if (allocno_p)\n \t{\n@@ -1578,9 +1554,6 @@ find_costs_and_classes (FILE *dump_file)\n \t  ira_loop_tree_node_t parent;\n \t  int best_cost, allocno_cost;\n \t  enum reg_class best, alt_class;\n-#ifdef FORBIDDEN_INC_DEC_CLASSES\n-\t  int inc_dec_p = false;\n-#endif\n \t  cost_classes_t cost_classes_ptr = regno_cost_classes[i];\n \t  enum reg_class *cost_classes = cost_classes_ptr->classes;\n \t  int *i_costs = temp_costs->cost;\n@@ -1591,9 +1564,6 @@ find_costs_and_classes (FILE *dump_file)\n \t    {\n \t      if (regno_reg_rtx[i] == NULL_RTX)\n \t\tcontinue;\n-#ifdef FORBIDDEN_INC_DEC_CLASSES\n-\t      inc_dec_p = in_inc_dec[i];\n-#endif\n \t      memcpy (temp_costs, COSTS (costs, i), struct_costs_size);\n \t      i_mem_cost = temp_costs->mem_cost;\n \t    }\n@@ -1659,10 +1629,6 @@ find_costs_and_classes (FILE *dump_file)\n \t\t    i_mem_cost = INT_MAX;\n \t\t  else\n \t\t    i_mem_cost += add_cost;\n-#ifdef FORBIDDEN_INC_DEC_CLASSES\n-\t\t  if (in_inc_dec[a_num])\n-\t\t    inc_dec_p = true;\n-#endif\n \t\t}\n \t    }\n \t  if (equiv_savings < 0)\n@@ -1682,12 +1648,9 @@ find_costs_and_classes (FILE *dump_file)\n \t  for (k = 0; k < cost_classes_ptr->num; k++)\n \t    {\n \t      rclass = cost_classes[k];\n-\t      /* Ignore classes that are too small for this operand or\n-\t\t invalid for an operand that was auto-incremented.  */\n+\t      /* Ignore classes that are too small or invalid for this\n+\t\t operand.  */\n \t      if (! contains_reg_of_mode[rclass][PSEUDO_REGNO_MODE (i)]\n-#ifdef FORBIDDEN_INC_DEC_CLASSES\n-\t\t  || (inc_dec_p && forbidden_inc_dec_class[rclass])\n-#endif\n #ifdef CANNOT_CHANGE_MODE_CLASS\n \t\t  || invalid_mode_change_p (i, (enum reg_class) rclass)\n #endif\n@@ -1760,13 +1723,9 @@ find_costs_and_classes (FILE *dump_file)\n \t\t      rclass = cost_classes[k];\n \t\t      if (! ira_class_subset_p[rclass][regno_aclass[i]])\n \t\t\tcontinue;\n-\t\t      /* Ignore classes that are too small for this\n-\t\t\t operand or invalid for an operand that was\n-\t\t\t auto-incremented.  */\n+\t\t      /* Ignore classes that are too small or invalid\n+\t\t\t for this operand.  */\n \t\t      if (! contains_reg_of_mode[rclass][PSEUDO_REGNO_MODE (i)]\n-#ifdef FORBIDDEN_INC_DEC_CLASSES\n-\t\t\t  || (inc_dec_p && forbidden_inc_dec_class[rclass])\n-#endif\n #ifdef CANNOT_CHANGE_MODE_CLASS\n \t\t\t  || invalid_mode_change_p (i, (enum reg_class) rclass)\n #endif\n@@ -1813,9 +1772,6 @@ find_costs_and_classes (FILE *dump_file)\n \t}\n     }\n   ira_free (regno_best_class);\n-#ifdef FORBIDDEN_INC_DEC_CLASSES\n-  ira_free (in_inc_dec);\n-#endif\n }\n \n \f"}, {"sha": "d95b9505443508e15007d7944bfcca638ff6f27e", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aaa7e4784a08e2564f771ee1ee01252da3334d0/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aaa7e4784a08e2564f771ee1ee01252da3334d0/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=9aaa7e4784a08e2564f771ee1ee01252da3334d0", "patch": "@@ -827,7 +827,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tUSING_SVR4_H SVR4_ASM_SPEC FUNCTION_ARG FUNCTION_ARG_ADVANCE\t   \\\n \tFUNCTION_INCOMING_ARG IRA_COVER_CLASSES TARGET_VERSION\t\t   \\\n \tMACHINE_TYPE TARGET_HAS_TARGETCM ASM_OUTPUT_BSS\t\t\t   \\\n-\tSETJMP_VIA_SAVE_AREA\n+\tSETJMP_VIA_SAVE_AREA FORBIDDEN_INC_DEC_CLASSES\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}