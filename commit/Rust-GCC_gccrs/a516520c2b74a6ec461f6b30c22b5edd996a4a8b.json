{"sha": "a516520c2b74a6ec461f6b30c22b5edd996a4a8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUxNjUyMGMyYjc0YTZlYzQ2MWY2YjMwYzIyYjVlZGQ5OTZhNGE4Yg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2010-06-28T17:16:06Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2010-06-28T17:16:06Z"}, "message": "re PR fortran/40158 (Misleading error message for passing a scalar to an array)\n\n2010-06-28  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/40158\n\t* interface.c (argument_rank_mismatch): New function.\n\t(compare_parameter): Call new function instead of generating\n\tthe error directly.\n\n2010-06-28  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/40158\n\t* gfortran.dg/actual_rank_check_1.f90: New test.\n\nFrom-SVN: r161504", "tree": {"sha": "89b5727b5890b0456c8e2256d6bc91ea74d41668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89b5727b5890b0456c8e2256d6bc91ea74d41668"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a516520c2b74a6ec461f6b30c22b5edd996a4a8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a516520c2b74a6ec461f6b30c22b5edd996a4a8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a516520c2b74a6ec461f6b30c22b5edd996a4a8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a516520c2b74a6ec461f6b30c22b5edd996a4a8b/comments", "author": null, "committer": null, "parents": [{"sha": "bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba"}], "stats": {"total": 69, "additions": 63, "deletions": 6}, "files": [{"sha": "60d1e31876ab60a73493e0d0eca78f79cadb4f8d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a516520c2b74a6ec461f6b30c22b5edd996a4a8b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a516520c2b74a6ec461f6b30c22b5edd996a4a8b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a516520c2b74a6ec461f6b30c22b5edd996a4a8b", "patch": "@@ -1,3 +1,10 @@\n+2010-06-28  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/40158\n+\t* interface.c (argument_rank_mismatch): New function.\n+\t(compare_parameter): Call new function instead of generating\n+\tthe error directly.\n+\n 2010-06-28  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* trans-openmp.c (dovar_init): Define.  Define VECs containing it."}, {"sha": "587b09cdf8c15a025ec2312bade08afb3086cad4", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a516520c2b74a6ec461f6b30c22b5edd996a4a8b/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a516520c2b74a6ec461f6b30c22b5edd996a4a8b/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=a516520c2b74a6ec461f6b30c22b5edd996a4a8b", "patch": "@@ -1376,6 +1376,30 @@ compare_pointer (gfc_symbol *formal, gfc_expr *actual)\n }\n \n \n+/* Emit clear error messages for rank mismatch.  */\n+\n+static void\n+argument_rank_mismatch (const char *name, locus *where,\n+\t\t\tint rank1, int rank2)\n+{\n+  if (rank1 == 0)\n+    {\n+      gfc_error (\"Rank mismatch in argument '%s' at %L \"\n+\t\t \"(scalar and rank-%d)\", name, where, rank2);\n+    }\n+  else if (rank2 == 0)\n+    {\n+      gfc_error (\"Rank mismatch in argument '%s' at %L \"\n+\t\t \"(rank-%d and scalar)\", name, where, rank1);\n+    }\n+  else\n+    {    \n+      gfc_error (\"Rank mismatch in argument '%s' at %L \"\n+\t\t \"(rank-%d and rank-%d)\", name, where, rank1, rank2);\n+    }\n+}\n+\n+\n /* Given a symbol of a formal argument list and an expression, see if\n    the two are compatible as arguments.  Returns nonzero if\n    compatible, zero if not compatible.  */\n@@ -1559,9 +1583,8 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \t  && gfc_is_coindexed (actual)))\n     {\n       if (where)\n-\tgfc_error (\"Rank mismatch in argument '%s' at %L (%d and %d)\",\n-\t\t   formal->name, &actual->where, symbol_rank (formal),\n-\t\t   actual->rank);\n+\targument_rank_mismatch (formal->name, &actual->where,\n+\t\t\t\tsymbol_rank (formal), actual->rank);\n       return 0;\n     }\n   else if (actual->rank != 0 && (is_elemental || formal->attr.dimension))\n@@ -1600,9 +1623,8 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n   else if (ref == NULL && actual->expr_type != EXPR_NULL)\n     {\n       if (where)\n-\tgfc_error (\"Rank mismatch in argument '%s' at %L (%d and %d)\",\n-\t\t   formal->name, &actual->where, symbol_rank (formal),\n-\t\t   actual->rank);\n+\targument_rank_mismatch (formal->name, &actual->where,\n+\t\t\t\tsymbol_rank (formal), actual->rank);\n       return 0;\n     }\n "}, {"sha": "e17bb03627d37428ded045a3dc213ea140b519ef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a516520c2b74a6ec461f6b30c22b5edd996a4a8b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a516520c2b74a6ec461f6b30c22b5edd996a4a8b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a516520c2b74a6ec461f6b30c22b5edd996a4a8b", "patch": "@@ -1,3 +1,8 @@\n+2010-06-28  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/40158\n+\t* gfortran.dg/actual_rank_check_1.f90: New test.\n+\n 2010-06-28  Martin Jambor  <mjambor@suse.cz>\n \n \t* testsuite/gcc.dg/ipa/ipa-sra-6.c: New test."}, {"sha": "7167de4270c410f4100f00dd0381efbd88d9e8e4", "filename": "gcc/testsuite/gfortran.dg/actual_rank_check_1.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a516520c2b74a6ec461f6b30c22b5edd996a4a8b/gcc%2Ftestsuite%2Fgfortran.dg%2Factual_rank_check_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a516520c2b74a6ec461f6b30c22b5edd996a4a8b/gcc%2Ftestsuite%2Fgfortran.dg%2Factual_rank_check_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Factual_rank_check_1.f90?ref=a516520c2b74a6ec461f6b30c22b5edd996a4a8b", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do compile }\n+! Test the fix for PR40158, where the errro message was not clear about scalars.\n+!\n+! Contributed by Tobias Burnus  <burnus@gcc.gnu.org>\n+!\n+  implicit none\n+  integer :: i(4,5),j\n+  i = 0\n+  call sub1(i)\n+  call sub1(j)  ! { dg-error \"rank-1 and scalar\" }\n+  call sub2(i)  ! { dg-error \"scalar and rank-2\" }\n+  call sub2(j)\n+  print '(5i0)', i\n+contains\n+  subroutine sub1(i1)\n+    integer :: i1(*)\n+    i1(1) = 2\n+  end subroutine sub1\n+  subroutine sub2(i2)\n+    integer :: i2\n+    i2 = 2\n+  end subroutine sub2\n+end"}]}