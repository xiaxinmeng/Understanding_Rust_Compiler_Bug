{"sha": "f1acdf8b0f9af8020d8eccc2862822e650e1b6d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFhY2RmOGIwZjlhZjgwMjBkOGVjY2MyODYyODIyZTY1MGUxYjZkNA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2002-09-17T19:29:12Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2002-09-17T19:29:12Z"}, "message": "(output_return_instruction): Do not writeback the stack pointer when it is being loaded.\n\n(output_return_instruction): Do not writeback the stack pointer when it is\nbeing loaded.  (arm_output_epilogue): Likewise.\n\nFrom-SVN: r57256", "tree": {"sha": "b463659545c5f10cfd49ff43db2507b17c483ef0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b463659545c5f10cfd49ff43db2507b17c483ef0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1acdf8b0f9af8020d8eccc2862822e650e1b6d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1acdf8b0f9af8020d8eccc2862822e650e1b6d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1acdf8b0f9af8020d8eccc2862822e650e1b6d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1acdf8b0f9af8020d8eccc2862822e650e1b6d4/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "24491a09505847e6e42b50917948ac5dc5780715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24491a09505847e6e42b50917948ac5dc5780715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24491a09505847e6e42b50917948ac5dc5780715"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "78348154a2dfd5c56c224616df9c22cd8c918b72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1acdf8b0f9af8020d8eccc2862822e650e1b6d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1acdf8b0f9af8020d8eccc2862822e650e1b6d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1acdf8b0f9af8020d8eccc2862822e650e1b6d4", "patch": "@@ -1,3 +1,9 @@\n+2002-09-17  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/arm/arm.c (output_return_instruction): Do not\n+\twriteback the stack pointer when it is being loaded.\n+\t(arm_output_epilogue): Likewise.\n+\n 2002-09-17  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* optabs.c (prepare_cmp_insn): Let emit_library_call_value"}, {"sha": "41eb93a9c47f8b9b872fc5852abdc7cf0ff3643b", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1acdf8b0f9af8020d8eccc2862822e650e1b6d4/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1acdf8b0f9af8020d8eccc2862822e650e1b6d4/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f1acdf8b0f9af8020d8eccc2862822e650e1b6d4", "patch": "@@ -7325,6 +7325,8 @@ output_return_instruction (operand, really_return, reverse)\n \t  /* Generate the load multiple instruction to restore the registers.  */\n \t  if (frame_pointer_needed)\n \t    sprintf (instr, \"ldm%sea\\t%%|fp, {\", conditional);\n+\t  else if (live_regs_mask & (1 << SP_REGNUM))\n+\t    sprintf (instr, \"ldm%sfd\\t%%|sp, {\", conditional);\n \t  else\n \t    sprintf (instr, \"ldm%sfd\\t%%|sp!, {\", conditional);\n \n@@ -7736,7 +7738,16 @@ arm_output_epilogue (really_return)\n \t    asm_fprintf (f, \"\\tldr\\t%r, [%r], #4\\n\", LR_REGNUM, SP_REGNUM);\n \t}\n       else if (saved_regs_mask)\n-\tprint_multi_reg (f, \"ldmfd\\t%r!\", SP_REGNUM, saved_regs_mask);\n+\t{\n+\t  if (saved_regs_mask & (1 << SP_REGNUM))\n+\t    /* Note - write back to the stack register is not enabled\n+\t       (ie \"ldmfd sp!...\").  We know that the stack pointer is\n+\t       in the list of registers and if we add writeback the\n+\t       instruction becomes UNPREDICTABLE.  */\n+\t    print_multi_reg (f, \"ldmfd\\t%r\", SP_REGNUM, saved_regs_mask);\n+\t  else\n+\t    print_multi_reg (f, \"ldmfd\\t%r!\", SP_REGNUM, saved_regs_mask);\n+\t}\n \n       if (current_function_pretend_args_size)\n \t{"}]}