{"sha": "2d7d7f0fe49688f097720cd921ae65921034cd59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ3ZDdmMGZlNDk2ODhmMDk3NzIwY2Q5MjFhZTY1OTIxMDM0Y2Q1OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-08-22T16:58:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-08-22T16:58:25Z"}, "message": "re PR c++/62129 (internal compiler error: in output_constant, at varasm.c:4755)\n\n\tPR c++/62129\n\t* class.c (outermost_open_class): New.\n\t* cp-tree.h: Declare it.\n\t* decl.c (maybe_register_incomplete_var): Use it.\n\t(complete_vars): Handle any constant variable.\n\t* expr.c (cplus_expand_constant): Handle CONSTRUCTOR.\n\nFrom-SVN: r214333", "tree": {"sha": "f630fb30ab136daa63badb4f992fceeb4416e73c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f630fb30ab136daa63badb4f992fceeb4416e73c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d7d7f0fe49688f097720cd921ae65921034cd59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7d7f0fe49688f097720cd921ae65921034cd59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d7d7f0fe49688f097720cd921ae65921034cd59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7d7f0fe49688f097720cd921ae65921034cd59/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b517712d78d2d457884dcf23519c7f65c3c28dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b517712d78d2d457884dcf23519c7f65c3c28dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b517712d78d2d457884dcf23519c7f65c3c28dd"}], "stats": {"total": 72, "additions": 64, "deletions": 8}, "files": [{"sha": "8102054c622f40a0477d44b4d05cc82db22e6143", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7d7f0fe49688f097720cd921ae65921034cd59/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7d7f0fe49688f097720cd921ae65921034cd59/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2d7d7f0fe49688f097720cd921ae65921034cd59", "patch": "@@ -1,3 +1,12 @@\n+2014-08-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/62129\n+\t* class.c (outermost_open_class): New.\n+\t* cp-tree.h: Declare it.\n+\t* decl.c (maybe_register_incomplete_var): Use it.\n+\t(complete_vars): Handle any constant variable.\n+\t* expr.c (cplus_expand_constant): Handle CONSTRUCTOR.\n+\n 2014-08-22  Igor Zamyatin  <igor.zamyatin@intel.com>\n \n \tPR other/62008"}, {"sha": "fd22930ffe131778a72083db87e8a1301d707d02", "filename": "gcc/cp/class.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7d7f0fe49688f097720cd921ae65921034cd59/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7d7f0fe49688f097720cd921ae65921034cd59/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=2d7d7f0fe49688f097720cd921ae65921034cd59", "patch": "@@ -7132,6 +7132,27 @@ currently_open_derived_class (tree t)\n   return NULL_TREE;\n }\n \n+/* Return the outermost enclosing class type that is still open, or\n+   NULL_TREE.  */\n+\n+tree\n+outermost_open_class (void)\n+{\n+  if (!current_class_type)\n+    return NULL_TREE;\n+  tree r = NULL_TREE;\n+  for (int i = current_class_depth; i > 0; --i)\n+    {\n+      if (current_class_stack[i].hidden)\n+\tbreak;\n+      tree t = current_class_stack[i].type;\n+      if (!TYPE_BEING_DEFINED (t))\n+\tbreak;\n+      r = t;\n+    }\n+  return r;\n+}\n+\n /* Returns the innermost class type which is not a lambda closure type.  */\n \n tree"}, {"sha": "34373b7456fc80c9eaec7f0fda5925284a50fe29", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7d7f0fe49688f097720cd921ae65921034cd59/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7d7f0fe49688f097720cd921ae65921034cd59/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=2d7d7f0fe49688f097720cd921ae65921034cd59", "patch": "@@ -5154,6 +5154,7 @@ extern void resort_type_method_vec\t\t(void *, void *,\n extern bool add_method\t\t\t\t(tree, tree, tree);\n extern bool currently_open_class\t\t(tree);\n extern tree currently_open_derived_class\t(tree);\n+extern tree outermost_open_class\t\t(void);\n extern tree current_nonlambda_class_type\t(void);\n extern tree finish_struct\t\t\t(tree, tree);\n extern void finish_struct_1\t\t\t(tree);"}, {"sha": "2e4e7f87d6f6089c957c5cca6914a59d9e56d0b6", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7d7f0fe49688f097720cd921ae65921034cd59/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7d7f0fe49688f097720cd921ae65921034cd59/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=2d7d7f0fe49688f097720cd921ae65921034cd59", "patch": "@@ -14311,8 +14311,8 @@ grokmethod (cp_decl_specifier_seq *declspecs,\n /* VAR is a VAR_DECL.  If its type is incomplete, remember VAR so that\n    we can lay it out later, when and if its type becomes complete.\n \n-   Also handle constexpr pointer to member variables where the initializer\n-   is an unlowered PTRMEM_CST because the class isn't complete yet.  */\n+   Also handle constexpr variables where the initializer involves\n+   an unlowered PTRMEM_CST because the class isn't complete yet.  */\n \n void\n maybe_register_incomplete_var (tree var)\n@@ -14337,12 +14337,13 @@ maybe_register_incomplete_var (tree var)\n \t  incomplete_var iv = {var, inner_type};\n \t  vec_safe_push (incomplete_vars, iv);\n \t}\n-      else if (TYPE_PTRMEM_P (inner_type)\n-\t       && DECL_INITIAL (var)\n-\t       && TREE_CODE (DECL_INITIAL (var)) == PTRMEM_CST)\n+      else if (!(DECL_LANG_SPECIFIC (var) && DECL_TEMPLATE_INFO (var))\n+\t       && decl_constant_var_p (var)\n+\t       && (TYPE_PTRMEM_P (inner_type) || CLASS_TYPE_P (inner_type)))\n \t{\n-\t  tree context = TYPE_PTRMEM_CLASS_TYPE (inner_type);\n-\t  gcc_assert (TYPE_BEING_DEFINED (context));\n+\t  /* When the outermost open class is complete we can resolve any\n+\t     pointers-to-members.  */\n+\t  tree context = outermost_open_class ();\n \t  incomplete_var iv = {var, context};\n \t  vec_safe_push (incomplete_vars, iv);\n \t}\n@@ -14366,7 +14367,7 @@ complete_vars (tree type)\n \t  tree var = iv->decl;\n \t  tree type = TREE_TYPE (var);\n \n-\t  if (TYPE_PTRMEM_P (type))\n+\t  if (decl_constant_var_p (var))\n \t    DECL_INITIAL (var) = cplus_expand_constant (DECL_INITIAL (var));\n \t  else\n \t    {"}, {"sha": "99f8006fbd80f4f4ca6eb8d8915dbc9085ce78f4", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7d7f0fe49688f097720cd921ae65921034cd59/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7d7f0fe49688f097720cd921ae65921034cd59/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=2d7d7f0fe49688f097720cd921ae65921034cd59", "patch": "@@ -74,6 +74,14 @@ cplus_expand_constant (tree cst)\n       }\n       break;\n \n+    case CONSTRUCTOR:\n+      {\n+\tconstructor_elt *elt;\n+\tunsigned HOST_WIDE_INT idx;\n+\tFOR_EACH_VEC_SAFE_ELT (CONSTRUCTOR_ELTS (cst), idx, elt)\n+\t  elt->value = cplus_expand_constant (elt->value);\n+      }\n+\n     default:\n       /* There's nothing to do.  */\n       break;"}, {"sha": "c5e2101c0e57cc16ca12160beb579fa022c8132b", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ptrmem3.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7d7f0fe49688f097720cd921ae65921034cd59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ptrmem3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7d7f0fe49688f097720cd921ae65921034cd59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ptrmem3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ptrmem3.C?ref=2d7d7f0fe49688f097720cd921ae65921034cd59", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/62129\n+// { dg-do compile { target c++11 } }\n+\n+class Evaluator\n+{\n+  int MakeChangelist ();\n+  typedef int (Evaluator::*fac_t)();\n+  struct CreatorEntry\n+  {\n+    const char *type;\n+    fac_t factory;\n+  };\n+  static constexpr CreatorEntry kCreators[] = { \"\", &Evaluator::MakeChangelist };\n+};\n+\n+constexpr Evaluator::CreatorEntry Evaluator::kCreators[];"}]}