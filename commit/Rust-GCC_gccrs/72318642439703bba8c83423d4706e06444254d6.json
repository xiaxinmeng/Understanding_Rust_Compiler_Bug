{"sha": "72318642439703bba8c83423d4706e06444254d6", "node_id": "C_kwDOANBUbNoAKDcyMzE4NjQyNDM5NzAzYmJhOGM4MzQyM2Q0NzA2ZTA2NDQ0MjU0ZDY", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-07-28T00:09:54Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-09T08:00:36Z"}, "message": "sphinx: fix cross manual references\n\ngcc/ada/ChangeLog:\n\n\t* doc/gnat_rm/index.rst: Fix cross manual refs.\n\ngcc/ChangeLog:\n\n\t* doc/gcc/gcc-command-options/options-controlling-the-kind-of-output.rst:\n\tFix cross manual refs.\n\t* doc/gcc/language-standards-supported-by-gcc/references-for-other-languages.rst:\n\tLikewise.\n\ngcc/jit/ChangeLog:\n\n\t* doc/internals/index.rst: Fix cross manual refs.\n\t* doc/topics/contexts.rst: Likewise.", "tree": {"sha": "58f071a811fcd2993e1ee5c1e2213060a2911d3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58f071a811fcd2993e1ee5c1e2213060a2911d3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72318642439703bba8c83423d4706e06444254d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72318642439703bba8c83423d4706e06444254d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72318642439703bba8c83423d4706e06444254d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72318642439703bba8c83423d4706e06444254d6/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f5a932e89b0c2c4a7af7f849ca2e2e3dbf329e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f5a932e89b0c2c4a7af7f849ca2e2e3dbf329e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f5a932e89b0c2c4a7af7f849ca2e2e3dbf329e0"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "372c2100e511a3d79c3d29d66864a99f9bbf95b9", "filename": "gcc/ada/doc/gnat_rm/index.rst", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72318642439703bba8c83423d4706e06444254d6/gcc%2Fada%2Fdoc%2Fgnat_rm%2Findex.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72318642439703bba8c83423d4706e06444254d6/gcc%2Fada%2Fdoc%2Fgnat_rm%2Findex.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Findex.rst?ref=72318642439703bba8c83423d4706e06444254d6", "patch": "@@ -1,6 +1,7 @@\n+.. _top:\n+\n GNAT Reference Manual\n =====================\n-\n .. only:: not latex\n \n     *GNAT, The GNU Ada Development Environment*"}, {"sha": "ea9e3cfc168d51bb308843cc2e170b6a1152b398", "filename": "gcc/doc/gcc/gcc-command-options/options-controlling-the-kind-of-output.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72318642439703bba8c83423d4706e06444254d6/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Foptions-controlling-the-kind-of-output.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72318642439703bba8c83423d4706e06444254d6/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Foptions-controlling-the-kind-of-output.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Foptions-controlling-the-kind-of-output.rst?ref=72318642439703bba8c83423d4706e06444254d6", "patch": "@@ -700,7 +700,7 @@ one of the options :option:`-c`, :option:`-S`, or :option:`-E` to say where\n .. option:: -fdump-ada-spec[-slim]\n \n   For C and C++ source and include files, generate corresponding Ada specs.\n-  See :ref:`gnat_ugn:generating-ada-bindings-for-c-and-c++-headers`, which provides detailed documentation on this feature.\n+  See :ref:`gnat_ugn:Generating_Ada_Bindings_for_C_and_C++_headers`, which provides detailed documentation on this feature.\n \n .. option:: -fada-spec-parent={unit}\n "}, {"sha": "b74c27e0fff90ed2088954a1b2302ac9a2370c87", "filename": "gcc/doc/gcc/language-standards-supported-by-gcc/references-for-other-languages.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72318642439703bba8c83423d4706e06444254d6/gcc%2Fdoc%2Fgcc%2Flanguage-standards-supported-by-gcc%2Freferences-for-other-languages.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72318642439703bba8c83423d4706e06444254d6/gcc%2Fdoc%2Fgcc%2Flanguage-standards-supported-by-gcc%2Freferences-for-other-languages.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc%2Flanguage-standards-supported-by-gcc%2Freferences-for-other-languages.rst?ref=72318642439703bba8c83423d4706e06444254d6", "patch": "@@ -10,4 +10,4 @@ See :ref:`gnat_rm:top`, for information on standard\n conformance and compatibility of the Ada compiler.\n \n See :ref:`gfortran:standards`, for details\n-of standards supported by GNU Fortran.\n\\ No newline at end of file\n+of standards supported by GNU Fortran."}, {"sha": "7ca45310ffee9447ecf7f364f9ca2664b90beb1a", "filename": "gcc/jit/doc/internals/index.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72318642439703bba8c83423d4706e06444254d6/gcc%2Fjit%2Fdoc%2Finternals%2Findex.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72318642439703bba8c83423d4706e06444254d6/gcc%2Fjit%2Fdoc%2Finternals%2Findex.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdoc%2Finternals%2Findex.rst?ref=72318642439703bba8c83423d4706e06444254d6", "patch": "@@ -173,7 +173,7 @@ For example, the following invocation verbosely runs the testcase\n   (...shows full valgrind report for this test case...)\n \n When running under valgrind, it's best to have configured gcc with\n-:option:`--enable-valgrind-annotations`, which automatically suppresses\n+:option:`install:--enable-valgrind-annotations`, which automatically suppresses\n various known false positives.\n \n Environment variables"}, {"sha": "0a079976f53225f366255beded53a4345eb97509", "filename": "gcc/jit/doc/topics/contexts.rst", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72318642439703bba8c83423d4706e06444254d6/gcc%2Fjit%2Fdoc%2Ftopics%2Fcontexts.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72318642439703bba8c83423d4706e06444254d6/gcc%2Fjit%2Fdoc%2Ftopics%2Fcontexts.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdoc%2Ftopics%2Fcontexts.rst?ref=72318642439703bba8c83423d4706e06444254d6", "patch": "@@ -237,7 +237,7 @@ future activies on a context to the given `FILE *`.\n    a much simpler executable that performs the equivalent calls into\n    libgccjit, without needing the client code and its data.\n \n-   Typically you need to supply :option:`-Wno-unused-variable` when\n+   Typically you need to supply :option:`gcc:-Wno-unused-variable` when\n    compiling the generated file (since the result of each API call is\n    assigned to a unique variable within the generated C source, and not\n    all are necessarily then used).\n@@ -252,7 +252,7 @@ future activies on a context to the given `FILE *`.\n \n    Parameter \"dumpname\" corresponds to the equivalent gcc command-line\n    option, without the \"-fdump-\" prefix.\n-   For example, to get the equivalent of :option:`-fdump-tree-vrp1`,\n+   For example, to get the equivalent of :option:`-fdump-tree-vrp <gcc:-fdump-tree-all>`,\n    supply ``\"tree-vrp1\"``:\n \n    .. code-block:: c"}]}