{"sha": "0d49ec1158291fa15be03b8a7b89c320212c6e94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ0OWVjMTE1ODI5MWZhMTViZTAzYjhhN2I4OWMzMjAyMTJjNmU5NA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-07-05T20:40:11Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-07-05T20:40:11Z"}, "message": "re PR libgcj/7060 (getMethod() doesn't search super interface)\n\n2002-07-04  Tom Tromey  <tromey@redhat.com>\n            Jeff Sturm  <jsturm@one-point.com>\n\n\tFix for PR libgcj/7060:\n\t* java/lang/Class.h (_getMethod): Renamed from getMethod.\n\t* java/lang/natClass.cc (_getMethod): Renamed from getMethod.\n\tRecurse into superinterfaces.  Don't throw NoSuchMethodException.\n\t* java/lang/Class.java (getMethod): New Java implementation;\n\tcomplies with spec.\n\t(_getMethod): New native method.\n\nCo-Authored-By: Jeff Sturm <jsturm@one-point.com>\n\nFrom-SVN: r55266", "tree": {"sha": "d6831eedd78519f01123093a5f9a1b1695f7a3ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6831eedd78519f01123093a5f9a1b1695f7a3ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d49ec1158291fa15be03b8a7b89c320212c6e94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d49ec1158291fa15be03b8a7b89c320212c6e94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d49ec1158291fa15be03b8a7b89c320212c6e94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d49ec1158291fa15be03b8a7b89c320212c6e94/comments", "author": null, "committer": null, "parents": [{"sha": "9833f6792a3fc80658167415883160d47ddd68b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9833f6792a3fc80658167415883160d47ddd68b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9833f6792a3fc80658167415883160d47ddd68b4"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "d5f5fd826f28e60063c2ff1cc881410321e08644", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d49ec1158291fa15be03b8a7b89c320212c6e94/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d49ec1158291fa15be03b8a7b89c320212c6e94/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0d49ec1158291fa15be03b8a7b89c320212c6e94", "patch": "@@ -1,3 +1,14 @@\n+2002-07-04  Tom Tromey  <tromey@redhat.com>\n+            Jeff Sturm  <jsturm@one-point.com>\n+\n+\tFix for PR libgcj/7060:\n+\t* java/lang/Class.h (_getMethod): Renamed from getMethod.\n+\t* java/lang/natClass.cc (_getMethod): Renamed from getMethod.\n+\tRecurse into superinterfaces.  Don't throw NoSuchMethodException.\n+\t* java/lang/Class.java (getMethod): New Java implementation;\n+\tcomplies with spec.\n+\t(_getMethod): New native method.\n+\n 2002-07-02  Tom Tromey  <tromey@redhat.com>\n             David Hovemeyer  <daveho@cs.umd.edu>\n "}, {"sha": "9eb1a5cac1ac7dea56920640577b1e76f4741b93", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d49ec1158291fa15be03b8a7b89c320212c6e94/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d49ec1158291fa15be03b8a7b89c320212c6e94/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=0d49ec1158291fa15be03b8a7b89c320212c6e94", "patch": "@@ -166,7 +166,7 @@ class java::lang::Class : public java::lang::Object\n \n   void getSignature (java::lang::StringBuffer *buffer);\n   static jstring getSignature (JArray<jclass> *, jboolean is_constructor);\n-  java::lang::reflect::Method *getMethod (jstring, JArray<jclass> *);\n+  java::lang::reflect::Method *_getMethod (jstring, JArray<jclass> *);\n   JArray<java::lang::reflect::Method *> *getMethods (void);\n \n   inline jint getModifiers (void)"}, {"sha": "12306da80618366658c5d3b6a29d7c667dae61f3", "filename": "libjava/java/lang/Class.java", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d49ec1158291fa15be03b8a7b89c320212c6e94/libjava%2Fjava%2Flang%2FClass.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d49ec1158291fa15be03b8a7b89c320212c6e94/libjava%2Fjava%2Flang%2FClass.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.java?ref=0d49ec1158291fa15be03b8a7b89c320212c6e94", "patch": "@@ -121,8 +121,29 @@ public Package getPackage()\n   private static final native String getSignature (Class[] parameterTypes,\n \t\t\t\t\t\t   boolean is_construtor);\n \n-  public native Method getMethod (String methodName, Class[] parameterTypes)\n-    throws NoSuchMethodException, SecurityException;\n+  public native Method _getMethod (String methodName, Class[] parameterTypes);\n+\n+  public Method getMethod (String methodName, Class[] parameterTypes)\n+    throws NoSuchMethodException, SecurityException\n+  {\n+    SecurityManager sm = System.getSecurityManager();\n+    if (sm != null)\n+      {\n+\tsm.checkMemberAccess(this, Member.PUBLIC);\n+\tPackage p = getPackage();\n+\tif (p != null)\n+\t  sm.checkPackageAccess(p.getName());\n+      }\n+\n+    if (\"<init>\".equals(methodName) || \"<clinit>\".equals(methodName))\n+      throw new NoSuchMethodException(methodName);\n+\n+    Method m = _getMethod(methodName, parameterTypes);\n+    if (m == null)\n+      throw new NoSuchMethodException (methodName);\n+    return m;\n+  }\n+\n   private native int _getMethods (Method[] result, int offset);\n   public native Method[] getMethods () throws SecurityException;\n "}, {"sha": "43b79adc9b63e74588de4bade2ae20504c572910", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d49ec1158291fa15be03b8a7b89c320212c6e94/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d49ec1158291fa15be03b8a7b89c320212c6e94/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=0d49ec1158291fa15be03b8a7b89c320212c6e94", "patch": "@@ -485,7 +485,7 @@ java::lang::Class::getInterfaces (void)\n }\n \n java::lang::reflect::Method *\n-java::lang::Class::getMethod (jstring name, JArray<jclass> *param_types)\n+java::lang::Class::_getMethod (jstring name, JArray<jclass> *param_types)\n {\n   jstring partial_sig = getSignature (param_types, false);\n   jint p_len = partial_sig->length();\n@@ -514,7 +514,21 @@ java::lang::Class::getMethod (jstring name, JArray<jclass> *param_types)\n \t    }\n \t}\n     }\n-  throw new java::lang::NoSuchMethodException;\n+\n+  // If we haven't found a match, and this class is an interface, then\n+  // check all the superinterfaces.\n+  if (isInterface())\n+    {\n+      for (int i = 0; i < interface_count; ++i)\n+\t{\n+\t  using namespace java::lang::reflect;\n+\t  Method *rmethod = interfaces[i]->_getMethod (name, param_types);\n+\t  if (rmethod != NULL)\n+\t    return rmethod;\n+\t}\n+    }\n+\n+  return NULL;\n }\n \n // This is a very slow implementation, since it re-scans all the"}]}