{"sha": "55badfdae89adc89970ad3aae587e113d66d99d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTViYWRmZGFlODlhZGM4OTk3MGFkM2FhZTU4N2UxMTNkNjZkOTlkMA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2005-04-01T13:45:36Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2005-04-01T13:45:36Z"}, "message": "strncmp-2.c: Also test x86_64.\n\n\t* gcc.c-torture/execute/builtins/strncmp-2.c: Also test x86_64.\n\tFix unused/uninitialized variable warnings.\n\nFrom-SVN: r97387", "tree": {"sha": "df1144fa0408987521dacfa3b7e5c3d5eddcfab6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df1144fa0408987521dacfa3b7e5c3d5eddcfab6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55badfdae89adc89970ad3aae587e113d66d99d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55badfdae89adc89970ad3aae587e113d66d99d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55badfdae89adc89970ad3aae587e113d66d99d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55badfdae89adc89970ad3aae587e113d66d99d0/comments", "author": null, "committer": null, "parents": [{"sha": "dadd2deec67c9798397d83cf962e29d8bad7d273", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dadd2deec67c9798397d83cf962e29d8bad7d273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dadd2deec67c9798397d83cf962e29d8bad7d273"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "2d00a477aa22aeea8720738e8d90bd4d6f627dcf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55badfdae89adc89970ad3aae587e113d66d99d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55badfdae89adc89970ad3aae587e113d66d99d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=55badfdae89adc89970ad3aae587e113d66d99d0", "patch": "@@ -1,5 +1,8 @@\n 2005-04-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* gcc.c-torture/execute/builtins/strncmp-2.c: Also test x86_64.\n+\tFix unused/uninitialized variable warnings.\n+\n \t* gcc.c-torture/execute/builtins/lib/strncat.c: Fix uninitialized var.\n \t* gcc.c-torture/execute/builtins/lib/strpbrk.c: Fix discarded const.\n \t* gcc.c-torture/execute/builtins/strlen-3.c: Fix uninitialized var."}, {"sha": "fe3462724ea1d4c0ec15f65e3bb06938add23cfd", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/strncmp-2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55badfdae89adc89970ad3aae587e113d66d99d0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncmp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55badfdae89adc89970ad3aae587e113d66d99d0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncmp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncmp-2.c?ref=55badfdae89adc89970ad3aae587e113d66d99d0", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000, 2001, 2003  Free Software Foundation.\n+/* Copyright (C) 2000, 2001, 2003, 2005  Free Software Foundation.\n \n    Ensure all expected transformations of builtin strncmp occur and\n    perform correctly.\n@@ -12,13 +12,13 @@ extern int strncmp (const char *, const char *, size_t);\n void\n main_test (void)\n {\n+#if !defined(__OPTIMIZE__) || ((defined(__i386__) || defined (__x86_64__)) && !defined(__OPTIMIZE_SIZE__))\n+  /* These tests work on platforms which support cmpstrsi.  We test it\n+     at -O0 on all platforms to ensure the strncmp logic is correct.  */\n   const char *const s1 = \"hello world\";\n-  const char *s2, *s3;\n+  const char *s2;\n   int n = 6, x;\n   \n-#if !defined(__OPTIMIZE__) || (defined(__i386__) && !defined(__OPTIMIZE_SIZE__))\n-  /* These tests work on platforms which support cmpstrsi.  We test it\n-     at -O0 on all platforms to ensure the strncmp logic is correct.  */\n   s2 = s1;\n   if (strncmp (++s2, \"ello\", 3) != 0 || s2 != s1+1)\n     abort();"}]}