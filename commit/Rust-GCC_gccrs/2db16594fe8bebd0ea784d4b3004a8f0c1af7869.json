{"sha": "2db16594fe8bebd0ea784d4b3004a8f0c1af7869", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRiMTY1OTRmZThiZWJkMGVhNzg0ZDRiMzAwNGE4ZjBjMWFmNzg2OQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-02-19T14:20:27Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-02-19T14:20:27Z"}, "message": "[AArch64] Skip gcc.target/aarch64/assembler_arch_1.c if assembler does not support it\n\n\t* lib/target-supports.exp: Define aarch64_asm_FUNC_ok checks\n\tfor fp, simd, crypto, crc, lse.\n\t* doc/sourcebuild.texi (AArch64-specific attributes): Document the\n\tabove.\n\t* gcc.target/aarch64/assembler_arch_1.c: Add aarch64_asm_lse_ok\n\teffective target check.\n\nFrom-SVN: r233559", "tree": {"sha": "0ab61fa481a9a16a67e5b0be85b8a9f9d15c82ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ab61fa481a9a16a67e5b0be85b8a9f9d15c82ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2db16594fe8bebd0ea784d4b3004a8f0c1af7869", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db16594fe8bebd0ea784d4b3004a8f0c1af7869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2db16594fe8bebd0ea784d4b3004a8f0c1af7869", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db16594fe8bebd0ea784d4b3004a8f0c1af7869/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a7d9d1e132b7795dc4c88fdf6796fd6524e74d7"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "c5354cfc8f36f453fedf0b6879b1dc1ec663f1b5", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db16594fe8bebd0ea784d4b3004a8f0c1af7869/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db16594fe8bebd0ea784d4b3004a8f0c1af7869/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=2db16594fe8bebd0ea784d4b3004a8f0c1af7869", "patch": "@@ -1606,6 +1606,9 @@ ARM target prefers @code{LDRD} and @code{STRD} instructions over\n @subsubsection AArch64-specific attributes\n \n @table @code\n+@item aarch64_asm_<ext>_ok\n+AArch64 assembler supports the architecture extension @code{ext} via the\n+@code{.arch_extension} pseudo-op.\n @item aarch64_tiny\n AArch64 target which generates instruction sequences for tiny memory model.\n @item aarch64_small"}, {"sha": "604bb3c27dab654ecaab3e0ffc698511efb0d2b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db16594fe8bebd0ea784d4b3004a8f0c1af7869/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db16594fe8bebd0ea784d4b3004a8f0c1af7869/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2db16594fe8bebd0ea784d4b3004a8f0c1af7869", "patch": "@@ -1,3 +1,12 @@\n+2016-02-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* lib/target-supports.exp: Define aarch64_asm_FUNC_ok checks\n+\tfor fp, simd, crypto, crc, lse.\n+\t* doc/sourcebuild.texi (AArch64-specific attributes): Document the\n+\tabove.\n+\t* gcc.target/aarch64/assembler_arch_1.c: Add aarch64_asm_lse_ok\n+\teffective target check.\n+\n 2016-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/69820"}, {"sha": "5deea5cf0ee9306743bc47bace6f762d0e35ce65", "filename": "gcc/testsuite/gcc.target/aarch64/assembler_arch_1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db16594fe8bebd0ea784d4b3004a8f0c1af7869/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fassembler_arch_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db16594fe8bebd0ea784d4b3004a8f0c1af7869/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fassembler_arch_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fassembler_arch_1.c?ref=2db16594fe8bebd0ea784d4b3004a8f0c1af7869", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do assemble } */\n+/* { dg-require-effective-target aarch64_asm_lse_ok } */\n /* { dg-options \"-march=armv8-a\" } */\n \n /* Make sure that the function header in assembly doesn't override"}, {"sha": "0b4252f6434fb8223423e06882a061ccf0f5a015", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db16594fe8bebd0ea784d4b3004a8f0c1af7869/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db16594fe8bebd0ea784d4b3004a8f0c1af7869/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=2db16594fe8bebd0ea784d4b3004a8f0c1af7869", "patch": "@@ -6719,6 +6719,23 @@ proc check_effective_target_aarch64_tiny { } {\n     }\n }\n \n+# Create functions to check that the AArch64 assembler supports the\n+# various architecture extensions via the .arch_extension pseudo-op.\n+\n+foreach { aarch64_ext } { \"fp\" \"simd\" \"crypto\" \"crc\" \"lse\"} {\n+    eval [string map [list FUNC $aarch64_ext] {\n+\tproc check_effective_target_aarch64_asm_FUNC_ok { } {\n+\t  if { [istarget aarch64*-*-*] } {\n+\t\treturn [check_no_compiler_messages aarch64_FUNC_assembler object {\n+\t\t\t__asm__ (\".arch_extension FUNC\");\n+\t\t} \"-march=armv8-a+FUNC\"]\n+\t  } else {\n+\t\treturn 0\n+\t  }\n+\t}\n+    }]\n+}\n+\n proc check_effective_target_aarch64_small { } {\n     if { [istarget aarch64*-*-*] } {\n \treturn [check_no_compiler_messages aarch64_small object {"}]}