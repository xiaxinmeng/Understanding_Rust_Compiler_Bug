{"sha": "5486d91300d0540215978ecde30870e1a337910c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ4NmQ5MTMwMGQwNTQwMjE1OTc4ZWNkZTMwODcwZTFhMzM3OTEwYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-11-07T10:01:52Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-11-07T10:01:52Z"}, "message": "Move c_getstr to fold-const.c\n\nUpcoming patches to fold-const-call.c want to use c_getstr, which is\ncurrently defined in builtins.c.  The function doesn't really do anything\nrelated to built-ins, and I'd rather not make fold-const-call.c depend\non builtins.c and builtins.c depend on fold-const-call.c, so this patch\nmoves the function to fold-const.c instead.\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu and arm-linux-gnueabi.\n\ngcc/\n\t* builtins.h (c_getstr): Move to...\n\t* fold-const.h (c_getstr): ...here.\n\t* builtins.c (c_getstr): Move to...\n\t* fold-const.c (c_getstr): ...here.\n\nFrom-SVN: r229919", "tree": {"sha": "0745360532b642227c4b092f57f659a9b65ff873", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0745360532b642227c4b092f57f659a9b65ff873"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5486d91300d0540215978ecde30870e1a337910c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5486d91300d0540215978ecde30870e1a337910c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5486d91300d0540215978ecde30870e1a337910c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5486d91300d0540215978ecde30870e1a337910c/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb0b164e5f7b8fff929e73fdd0a15a6d769ebc1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb0b164e5f7b8fff929e73fdd0a15a6d769ebc1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb0b164e5f7b8fff929e73fdd0a15a6d769ebc1c"}], "stats": {"total": 51, "additions": 29, "deletions": 22}, "files": [{"sha": "ab06aab2204bfc78f716d34e21224dcde34628f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5486d91300d0540215978ecde30870e1a337910c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5486d91300d0540215978ecde30870e1a337910c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5486d91300d0540215978ecde30870e1a337910c", "patch": "@@ -1,3 +1,10 @@\n+2015-11-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* builtins.h (c_getstr): Move to...\n+\t* fold-const.h (c_getstr): ...here.\n+\t* builtins.c (c_getstr): Move to...\n+\t* fold-const.c (c_getstr): ...here.\n+\n 2015-11-07  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* builtins.def (BUILTIN_RINT, BUILTIN_RINTF, BUILTIN_RINTL): Use"}, {"sha": "69c56e75cd571bd154db884028d51c260b58885f", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5486d91300d0540215978ecde30870e1a337910c/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5486d91300d0540215978ecde30870e1a337910c/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=5486d91300d0540215978ecde30870e1a337910c", "patch": "@@ -616,27 +616,6 @@ c_strlen (tree src, int only_value)\n   return ssize_int (strlen (ptr + offset));\n }\n \n-/* Return a char pointer for a C string if it is a string constant\n-   or sum of string constant and integer constant.  */\n-\n-const char *\n-c_getstr (tree src)\n-{\n-  tree offset_node;\n-\n-  src = string_constant (src, &offset_node);\n-  if (src == 0)\n-    return 0;\n-\n-  if (offset_node == 0)\n-    return TREE_STRING_POINTER (src);\n-  else if (!tree_fits_uhwi_p (offset_node)\n-\t   || compare_tree_int (offset_node, TREE_STRING_LENGTH (src) - 1) > 0)\n-    return 0;\n-\n-  return TREE_STRING_POINTER (src) + tree_to_uhwi (offset_node);\n-}\n-\n /* Return a constant integer corresponding to target reading\n    GET_MODE_BITSIZE (MODE) bits from string constant STR.  */\n "}, {"sha": "b0396322fa0b1c10b9e8b5d7c351efa3a6c3ba67", "filename": "gcc/builtins.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5486d91300d0540215978ecde30870e1a337910c/gcc%2Fbuiltins.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5486d91300d0540215978ecde30870e1a337910c/gcc%2Fbuiltins.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.h?ref=5486d91300d0540215978ecde30870e1a337910c", "patch": "@@ -87,7 +87,6 @@ extern bool is_simple_builtin (tree);\n extern bool is_inexpensive_builtin (tree);\n \n extern bool readonly_data_expr (tree exp);\n-extern const char *c_getstr (tree);\n extern bool init_target_chars (void);\n extern unsigned HOST_WIDE_INT target_newline;\n extern unsigned HOST_WIDE_INT target_percent;"}, {"sha": "ae284452920bd450db2bc16d9ce59c21a4020228", "filename": "gcc/fold-const.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5486d91300d0540215978ecde30870e1a337910c/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5486d91300d0540215978ecde30870e1a337910c/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=5486d91300d0540215978ecde30870e1a337910c", "patch": "@@ -14398,3 +14398,24 @@ fold_build_pointer_plus_hwi_loc (location_t loc, tree ptr, HOST_WIDE_INT off)\n   return fold_build2_loc (loc, POINTER_PLUS_EXPR, TREE_TYPE (ptr),\n \t\t\t  ptr, size_int (off));\n }\n+\n+/* Return a char pointer for a C string if it is a string constant\n+   or sum of string constant and integer constant.  */\n+\n+const char *\n+c_getstr (tree src)\n+{\n+  tree offset_node;\n+\n+  src = string_constant (src, &offset_node);\n+  if (src == 0)\n+    return 0;\n+\n+  if (offset_node == 0)\n+    return TREE_STRING_POINTER (src);\n+  else if (!tree_fits_uhwi_p (offset_node)\n+\t   || compare_tree_int (offset_node, TREE_STRING_LENGTH (src) - 1) > 0)\n+    return 0;\n+\n+  return TREE_STRING_POINTER (src) + tree_to_uhwi (offset_node);\n+}"}, {"sha": "94a21b7652ae4f90c701454a6a0da057a54f8e90", "filename": "gcc/fold-const.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5486d91300d0540215978ecde30870e1a337910c/gcc%2Ffold-const.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5486d91300d0540215978ecde30870e1a337910c/gcc%2Ffold-const.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.h?ref=5486d91300d0540215978ecde30870e1a337910c", "patch": "@@ -180,6 +180,7 @@ extern tree exact_inverse (tree, tree);\n extern tree const_unop (enum tree_code, tree, tree);\n extern tree const_binop (enum tree_code, tree, tree, tree);\n extern bool negate_mathfn_p (enum built_in_function);\n+extern const char *c_getstr (tree);\n \n /* Return OFF converted to a pointer offset type suitable as offset for\n    POINTER_PLUS_EXPR.  Use location LOC for this conversion.  */"}]}