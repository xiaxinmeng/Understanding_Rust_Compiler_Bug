{"sha": "998fbe9f1f7e5ef53ca79fbd28f8a3875a477baa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk4ZmJlOWYxZjdlNWVmNTNjYTc5ZmJkMjhmOGEzODc1YTQ3N2JhYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-01-14T14:31:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-12T13:52:03Z"}, "message": "remove dead debug-bind resets\n\nThis removes debug-bind resets aka\n\n # DEBUG b = NULL\n\nwhen the reset variable is otherwise unused.  I've gathered statistics\nfor a single TU, fold-const.ii which at -O2 -g shows\n\n28 ssa \"dead debug bind reset\" 1\n34 einline \"dead debug bind reset\" 340\n54 release_ssa \"dead debug bind reset\" 176\n54 release_ssa \"live debug bind reset of dead var\" 4\n86 inline \"dead debug bind reset\" 5131\n86 inline \"live debug bind reset of dead var\" 61\n241 optimized \"dead debug bind reset\" 970\n241 optimized \"live debug bind reset of dead var\" 287\n\nwhere \"live debug bind reset of dead var\" means the variable is unused\nbut there were debug binds with a value for them and\n\"dead debug bind reset\" means the variable is unused and there were\nonly debug bind resets (each reset of the same variable is counted\nfor both counters).  This shows A considerable amount of dead stmts\nremoved esp. after IPA inlining.\n\n2020-05-12  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-live.c (remove_unused_locals): Remove dead debug\n\tbind resets.", "tree": {"sha": "dec6551393728fe08005573d5eda237eebc311ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dec6551393728fe08005573d5eda237eebc311ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/998fbe9f1f7e5ef53ca79fbd28f8a3875a477baa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/998fbe9f1f7e5ef53ca79fbd28f8a3875a477baa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/998fbe9f1f7e5ef53ca79fbd28f8a3875a477baa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/998fbe9f1f7e5ef53ca79fbd28f8a3875a477baa/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "119a7db1e05c9741803b3ff93266b00fd535732a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/119a7db1e05c9741803b3ff93266b00fd535732a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/119a7db1e05c9741803b3ff93266b00fd535732a"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "86fa5298110a016411d9fd78d9a5c3ae3a83950c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998fbe9f1f7e5ef53ca79fbd28f8a3875a477baa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998fbe9f1f7e5ef53ca79fbd28f8a3875a477baa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=998fbe9f1f7e5ef53ca79fbd28f8a3875a477baa", "patch": "@@ -1,3 +1,8 @@\n+2020-05-12  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-live.c (remove_unused_locals): Remove dead debug\n+\tbind resets.\n+\n 2020-05-12  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* config/msp430/msp430-protos.h (msp430_output_aligned_decl_common):"}, {"sha": "21a9ee43e6bb0e59a7686d5187eaf1848c56c2fd", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998fbe9f1f7e5ef53ca79fbd28f8a3875a477baa/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998fbe9f1f7e5ef53ca79fbd28f8a3875a477baa/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=998fbe9f1f7e5ef53ca79fbd28f8a3875a477baa", "patch": "@@ -743,6 +743,7 @@ remove_unused_locals (void)\n   mark_scope_block_unused (DECL_INITIAL (current_function_decl));\n \n   usedvars = BITMAP_ALLOC (NULL);\n+  auto_bitmap useddebug;\n \n   /* Walk the CFG marking all referenced symbols.  */\n   FOR_EACH_BB_FN (bb, cfun)\n@@ -763,7 +764,21 @@ remove_unused_locals (void)\n \t     do it.  If the block is not otherwise used, the stmt will\n \t     be cleaned up in clean_unused_block_pointer.  */\n \t  if (is_gimple_debug (stmt))\n-\t    continue;\n+\t    {\n+\t      if (gimple_debug_bind_p (stmt))\n+\t\t{\n+\t\t  tree var = gimple_debug_bind_get_var  (stmt);\n+\t\t  if (VAR_P (var))\n+\t\t    {\n+\t\t      if (!gimple_debug_bind_get_value (stmt))\n+\t\t\t/* Run the 2nd phase.  */\n+\t\t\thave_local_clobbers = true;\n+\t\t      else\n+\t\t\tbitmap_set_bit (useddebug, DECL_UID (var));\n+\t\t    }\n+\t\t}\n+\t      continue;\n+\t    }\n \n \t  if (gimple_clobber_p (stmt))\n \t    {\n@@ -846,6 +861,20 @@ remove_unused_locals (void)\n \t\tif (b)\n \t\t  TREE_USED (b) = true;\n \t      }\n+\t    else if (gimple_debug_bind_p (stmt))\n+\t      {\n+\t\ttree var = gimple_debug_bind_get_var (stmt);\n+\t\tif (VAR_P (var)\n+\t\t    && !bitmap_bit_p (useddebug, DECL_UID (var))\n+\t\t    && !is_used_p (var))\n+\t\t  {\n+\t\t    if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t      fprintf (dump_file, \"Dead debug bind reset to %u\\n\",\n+\t\t\t       DECL_UID (var));\n+\t\t    gsi_remove (&gsi, true);\n+\t\t    continue;\n+\t\t  }\n+\t      }\n \t    gsi_next (&gsi);\n \t  }\n       }"}]}