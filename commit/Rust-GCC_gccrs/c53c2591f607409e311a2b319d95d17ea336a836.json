{"sha": "c53c2591f607409e311a2b319d95d17ea336a836", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUzYzI1OTFmNjA3NDA5ZTMxMWEyYjMxOWQ5NWQxN2VhMzM2YTgzNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-08-11T17:05:38Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-08-11T17:05:38Z"}, "message": "re PR target/8603 ([Alpha] s?addl pattern doesn't work)\n\n\tPR target/8603\n\t* config/alpha/alpha.md (addsi3): Remove expander.\n\t(addsi3): Rename from *addsi3_internal insn pattern.\n\t(subsi3): Remove expander.\n\t(subsi3): Rename from *subsi3_internal insn pattern.\n\nFrom-SVN: r150654", "tree": {"sha": "9c93b4229ab6d8ee889149cb28d2f0f9c9ddc299", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c93b4229ab6d8ee889149cb28d2f0f9c9ddc299"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c53c2591f607409e311a2b319d95d17ea336a836", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53c2591f607409e311a2b319d95d17ea336a836", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c53c2591f607409e311a2b319d95d17ea336a836", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53c2591f607409e311a2b319d95d17ea336a836/comments", "author": null, "committer": null, "parents": [{"sha": "b0d0a8a7c9c50fa660ae35d33e77c0c9a63d93d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d0a8a7c9c50fa660ae35d33e77c0c9a63d93d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0d0a8a7c9c50fa660ae35d33e77c0c9a63d93d6"}], "stats": {"total": 53, "additions": 21, "deletions": 32}, "files": [{"sha": "8acb3b683353abb7ca710f7db84cbcaa28a337e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53c2591f607409e311a2b319d95d17ea336a836/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53c2591f607409e311a2b319d95d17ea336a836/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c53c2591f607409e311a2b319d95d17ea336a836", "patch": "@@ -1,11 +1,19 @@\n+2009-08-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/8603\n+\t* config/alpha/alpha.md (addsi3): Remove expander.\n+\t(addsi3): Rename from *addsi3_internal insn pattern.\n+\t(subsi3): Remove expander.\n+\t(subsi3): Rename from *subsi3_internal insn pattern.\n+\n 2009-08-11  Douglas B Rupp  <rupp@gnat.com>\n \n \t* config/alpha/alpha.c (alpha_init_builtins): Nullify FWRITE and\n \tFWRITE_UNLOCKED.\n \n 2009-08-11  Vasiliy Fofanov  <fofanov@adacore.com>\n-            Eric Botcazou  <botcazou@adacore.com>\n-            Douglas B Rupp  <rupp@gnat.com>\n+\t    Eric Botcazou  <botcazou@adacore.com>\n+\t    Douglas B Rupp  <rupp@gnat.com>\n \n \t* config/alpha/alpha.c (alpha_return_in_memory): On VMS, ensure\n \tthat records that fit in 64 bits are returned by immediate value,\n@@ -22,18 +30,17 @@\n \tnot valid in the outer mode.\n \n 2009-08-11  Richard Guenther  <rguenther@suse.de>\n-        \n-        PR bootstrap/40788\n-        * builtins.c (gimplify_va_arg_expr): Do not call \n-        SET_EXPR_LOCATION.\n+\t\n+\tPR bootstrap/40788\n+\t* builtins.c (gimplify_va_arg_expr): Do not call SET_EXPR_LOCATION.\n \n 2009-08-10  Douglas B Rupp  <rupp@gnat.com>\n \n \t* config/alpha/vms.h (OPTIMIZATION_OPTIONS): Remove\n \t(OVERRIDE_OPTIONS): Incorporate removed OPTIMIZATION_OPTIONS.\n \n 2009-08-10  Olivier Hainque  <hainqueu@adacore.com>\n-            Douglas B Rupp  <rupp@gnat.com>\n+\t    Douglas B Rupp  <rupp@gnat.com>\n \n \t* config/alpha/alpha.c (alpha_sa_size): Force procedure type to\n \tPT_STACK when frame_pointer_needed on OpenVMS.\n@@ -52,7 +59,7 @@\n \tCall alpha_vms_can_eliminate and alpha_vms_initial_elimination_offset.\n \n 2009-08-10  Eric Botcazou  <botcazou@adacore.com>\n-            Douglas B Rupp  <rupp@gnat.com>\n+\t    Douglas B Rupp  <rupp@gnat.com>\n \n \t* config/alpha/alpha.c (common_object_handler): New function.\n \t(vms_attribute_table): Declare a single attribute \"common_object\".\n@@ -116,7 +123,7 @@\n \tdoc/invoke.texi (mmalloc64): Document switch.\n \n 2009-08-09  Olivier Hainque  <hainque@adacore.com>\n-            Douglas B Rupp  <rupp@gnat.com>\n+\t    Douglas B Rupp  <rupp@gnat.com>\n \n \t* config/alpha/alpha.c (struct machine_function): New flag for VMS,\n \tuses_condition_handler.\n@@ -145,7 +152,7 @@\n \t* config/alpha/vms.h (MD_UNWIND_SUPPORT):\n \t\n 2009-08-09  Eric Botcazou  <botcazou@adacore.com>\n-            Douglas B Rupp  <rupp@gnat.com>\n+\t    Douglas B Rupp  <rupp@gnat.com>\n \n \t* config/alpha/alpha.c (alpha_links): Add 'target' field.\n \t(alpha_need_linkage): Handle aliases.  Return function symbol.\n@@ -203,8 +210,7 @@\n 2009-08-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/41016\n-\t* tree-ssa-ifcombine.c (get_name_for_bit_test): Fix tuplification\n-\tbug.\n+\t* tree-ssa-ifcombine.c (get_name_for_bit_test): Fix tuplification bug.\n \t(operand_precision): Remove.\n \t(integral_operand_p): Likewise.\n \t(recognize_single_bit_test): Adjust.\n@@ -252,8 +258,7 @@\n \t(force_expr_to_var_cost): Cast target_spill_cost to int.\n \t(get_address_cost): New arguments STMT_AFTER_INC and MAY_AUTOINC.\n \tAll callers changed.  Check for availability of autoinc addressing\n-\tmodes, both in general for a given mode, and in the specific use\n-\tcase.\n+\tmodes, both in general for a given mode, and in the specific use case.\n \t(get_computation_cost_at): New argument CAN_AUTOINC.  All callers\n \tchanged.\n \t(get_computation_cost): Likewise."}, {"sha": "18817c80c524f1afb98951edcd5fbd5792a4cf5c", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53c2591f607409e311a2b319d95d17ea336a836/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53c2591f607409e311a2b319d95d17ea336a836/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=c53c2591f607409e311a2b319d95d17ea336a836", "patch": "@@ -256,16 +256,7 @@\n \t(sign_extend:DI (match_dup 1)))]\n   \"\")\n \n-;; Don't say we have addsi3 if optimizing.  This generates better code.  We\n-;; have the anonymous addsi3 pattern below in case combine wants to make it.\n-(define_expand \"addsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"\")\n-\t\t (match_operand:SI 2 \"add_operand\" \"\")))]\n-  \"! optimize\"\n-  \"\")\n-\n-(define_insn \"*addsi_internal\"\n+(define_insn \"addsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r\")\n \t(plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"%rJ,rJ,rJ,rJ\")\n \t\t (match_operand:SI 2 \"add_operand\" \"rI,O,K,L\")))]\n@@ -619,14 +610,7 @@\n   \"\"\n   \"subqv $31,%1,%0\")\n \n-(define_expand \"subsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"\")\n-\t\t  (match_operand:SI 2 \"reg_or_8bit_operand\" \"\")))]\n-  \"! optimize\"\n-  \"\")\n-\n-(define_insn \"*subsi_internal\"\n+(define_insn \"subsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n \t\t  (match_operand:SI 2 \"reg_or_8bit_operand\" \"rI\")))]"}]}