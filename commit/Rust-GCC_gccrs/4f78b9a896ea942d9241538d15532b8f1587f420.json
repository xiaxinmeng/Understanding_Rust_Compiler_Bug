{"sha": "4f78b9a896ea942d9241538d15532b8f1587f420", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY3OGI5YTg5NmVhOTQyZDkyNDE1MzhkMTU1MzJiOGYxNTg3ZjQyMA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-01-02T23:49:45Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-01-02T23:49:45Z"}, "message": "c-common.h (ASM_INPUT_P): New.\n\n        * c-common.h (ASM_INPUT_P): New.\n        * c-parse.in (asm): Set it when needed.\n        * c-semantics.c (genrtl_asm_stmt): Test it instead of the\n        existance of an operand.\n\n        * cp/parse.y (asm): Set ASM_INPUT_P.\n\nFrom-SVN: r38638", "tree": {"sha": "6f47d15496d0c5ff8d25acd1c69deaf37c24d9ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f47d15496d0c5ff8d25acd1c69deaf37c24d9ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f78b9a896ea942d9241538d15532b8f1587f420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f78b9a896ea942d9241538d15532b8f1587f420", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f78b9a896ea942d9241538d15532b8f1587f420", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f78b9a896ea942d9241538d15532b8f1587f420/comments", "author": null, "committer": null, "parents": [{"sha": "f941340f5a825b0320300e70ed828577d4b46260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f941340f5a825b0320300e70ed828577d4b46260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f941340f5a825b0320300e70ed828577d4b46260"}], "stats": {"total": 67, "additions": 51, "deletions": 16}, "files": [{"sha": "1e3497fe135534ee3f749b2ec6b67dcc6e71bc08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f78b9a896ea942d9241538d15532b8f1587f420", "patch": "@@ -1,3 +1,10 @@\n+2001-01-02  Richard Henderson  <rth@redhat.com>\n+\n+\t* c-common.h (ASM_INPUT_P): New.\n+\t* c-parse.in (asm): Set it when needed.\n+\t* c-semantics.c (genrtl_asm_stmt): Test it instead of the \n+\texistance of an operand.\n+\n Tue Jan  2 20:27:07 MET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* dwarf2out.c (stack_adjust_offset): Handle PRE_MODIFY."}, {"sha": "c37c38a3d783b445800ef180269afbf998a51961", "filename": "gcc/c-common.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=4f78b9a896ea942d9241538d15532b8f1587f420", "patch": "@@ -31,6 +31,7 @@ Boston, MA 02111-1307, USA.  */\n       SCOPE_BEGIN_P (in SCOPE_STMT)\n       DECL_PRETTY_FUNCTION_P (in VAR_DECL)\n       NEW_FOR_SCOPE_P (in FOR_STMT)\n+      ASM_INPUT_P (in ASM_STMT)\n    1: C_DECLARED_LABEL_FLAG (in LABEL_DECL)\n       STMT_IS_FULL_EXPR_P (in _STMT)\n    2: STMT_LINENO_FOR_FN_P (in _STMT)\n@@ -666,6 +667,10 @@ extern tree strip_array_types                   PARAMS ((tree));\n    initialization variables. */\n #define NEW_FOR_SCOPE_P(NODE) (TREE_LANG_FLAG_0 (NODE))\n \n+/* Nonzero if we want to create an ASM_INPUT instead of an\n+   ASM_OPERAND with no operands.  */\n+#define ASM_INPUT_P(NODE) (TREE_LANG_FLAG_0 (NODE))\n+\n #define DEFTREECODE(SYM, NAME, TYPE, LENGTH) SYM,\n \n enum c_tree_code {\n@@ -694,7 +699,7 @@ extern void genrtl_case_label                   PARAMS ((tree));\n extern void genrtl_compound_stmt                PARAMS ((tree));\n extern void genrtl_asm_stmt                     PARAMS ((tree, tree,\n \t\t\t\t\t\t\t tree, tree,\n-\t\t\t\t\t\t\t tree));\n+\t\t\t\t\t\t\t tree, int));\n extern void genrtl_decl_cleanup                 PARAMS ((tree, tree));\n extern int stmts_are_full_exprs_p               PARAMS ((void));\n extern int anon_aggr_type_p                     PARAMS ((tree));"}, {"sha": "5c46b20b41a6eaf74953330e822d06438ce9de15", "filename": "gcc/c-parse.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=4f78b9a896ea942d9241538d15532b8f1587f420", "patch": "@@ -1,6 +1,6 @@\n /* YACC parser for C syntax and for Objective C.  -*-c-*-\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996,\n-   1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+   1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -1953,6 +1953,7 @@ stmt:\n \t\t      $$ = add_stmt (build_stmt (ASM_STMT, NULL_TREE, $4,\n \t\t\t\t\t\t NULL_TREE, NULL_TREE,\n \t\t\t\t\t\t NULL_TREE));\n+\t\t      ASM_INPUT_P ($$) = 1;\n \t\t    }\n \t\t  else\n \t\t    {"}, {"sha": "d6477f6eb4fec558c5b100e593ceff13222a3a50", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=4f78b9a896ea942d9241538d15532b8f1587f420", "patch": "@@ -1,8 +1,8 @@\n /* This file contains the definitions and documentation for the common\n    tree codes used in the GNU C and C++ compilers (see c-common.def\n    for the standard codes).  \n-   Copyright (C) 2000 Free Software Foundation, Inc.  Written by\n-   Benjamin Chelf (chelf@codesourcery.com).\n+   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+   Written by Benjamin Chelf (chelf@codesourcery.com).\n \n This file is part of GNU CC.\n \n@@ -717,12 +717,13 @@ genrtl_compound_stmt (t)\n \n void\n genrtl_asm_stmt (cv_qualifier, string, output_operands,\n-\t\t input_operands, clobbers)\n+\t\t input_operands, clobbers, asm_input_p)\n      tree cv_qualifier;\n      tree string;\n      tree output_operands;\n      tree input_operands;\n      tree clobbers;\n+     int asm_input_p;\n {\n   if (cv_qualifier != NULL_TREE\n       && cv_qualifier != ridpointers[(int) RID_VOLATILE])\n@@ -733,15 +734,12 @@ genrtl_asm_stmt (cv_qualifier, string, output_operands,\n     }\n \n   emit_line_note (input_filename, lineno);\n-  if (output_operands != NULL_TREE || input_operands != NULL_TREE\n-      || clobbers != NULL_TREE)\n-      c_expand_asm_operands (string, output_operands,\n-\t\t\t     input_operands, \n-\t\t\t     clobbers,\n-\t\t\t     cv_qualifier != NULL_TREE,\n-\t\t\t     input_filename, lineno);\n-  else\n+  if (asm_input_p)\n     expand_asm (string);\n+  else\n+    c_expand_asm_operands (string, output_operands, input_operands, \n+\t\t\t   clobbers, cv_qualifier != NULL_TREE,\n+\t\t\t   input_filename, lineno);\n }\n \n /* Generate the RTL for a DECL_CLEANUP. */\n@@ -842,7 +840,8 @@ expand_stmt (t)\n \n \tcase ASM_STMT:\n \t  genrtl_asm_stmt (ASM_CV_QUAL (t), ASM_STRING (t),\n-\t\t\t   ASM_OUTPUTS (t), ASM_INPUTS (t), ASM_CLOBBERS (t));\n+\t\t\t   ASM_OUTPUTS (t), ASM_INPUTS (t),\n+\t\t\t   ASM_CLOBBERS (t), ASM_INPUT_P (t));\n \t  break;\n \n \tcase SCOPE_STMT:"}, {"sha": "3d894151216240e78efbe8b83c7819f6d58e2792", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4f78b9a896ea942d9241538d15532b8f1587f420", "patch": "@@ -1,3 +1,7 @@\n+2001-01-02  Richard Henderson  <rth@redhat.com>\n+\n+\t* parse.y (asm): Set ASM_INPUT_P.\n+\n 2001-01-02  Jason Merrill  <jason@redhat.com>\n \n \t* tree.c (cp_valid_lang_attribute): Don't set CLASSTYPE_COM_INTERFACE"}, {"sha": "27f949a37e09ca7ed057676942358484b1048238", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=4f78b9a896ea942d9241538d15532b8f1587f420", "patch": "@@ -1,6 +1,6 @@\n /* YACC parser for C++ syntax.\n    Copyright (C) 1988, 1989, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -3398,7 +3398,8 @@ simple_stmt:\n                 { $$ = finish_return_stmt ($2); }\n \t| asm_keyword maybe_cv_qualifier '(' string ')' ';'\n \t\t{ $$ = finish_asm_stmt ($2, $4, NULL_TREE, NULL_TREE,\n-\t\t\t\t\tNULL_TREE); }\n+\t\t\t\t\tNULL_TREE);\n+\t\t  ASM_INPUT_P ($$) = 1; }\n \t/* This is the case with just output operands.  */\n \t| asm_keyword maybe_cv_qualifier '(' string ':' asm_operands ')' ';'\n \t\t{ $$ = finish_asm_stmt ($2, $4, $6, NULL_TREE, NULL_TREE); }"}, {"sha": "80396ae288b33f1d21ebb5cc55e3ce996a6eb6cd", "filename": "gcc/testsuite/gcc.dg/asm-2.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-2.c?ref=4f78b9a896ea942d9241538d15532b8f1587f420", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+int f()\n+{\n+  asm volatile (\"foo%%bar\" : : );\n+}\n+\n+/* { dg-final { scan-assembler asm-2.c \"foo%bar\" } } */"}, {"sha": "5c6864777f187db3bb4fbfb1228bdb6b3f89794d", "filename": "gcc/testsuite/gcc.dg/asm-3.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f78b9a896ea942d9241538d15532b8f1587f420/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-3.c?ref=4f78b9a896ea942d9241538d15532b8f1587f420", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+int f()\n+{\n+  asm (\"foo%%bar\");\n+}\n+\n+/* { dg-final { scan-assembler asm-3.c \"foo%%bar\" } } */"}]}