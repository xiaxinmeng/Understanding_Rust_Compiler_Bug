{"sha": "eb1fcdaa11c571780374065c383708826624f22d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIxZmNkYWExMWM1NzE3ODAzNzQwNjVjMzgzNzA4ODI2NjI0ZjIyZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-03-09T18:54:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-03-09T18:54:25Z"}, "message": "re PR bootstrap/43299 (Subversion id 157264 breaks powerpc 64-bit bootstraps)\n\n\tPR debug/43299\n\t* dwarf2out.c (const_ok_for_output_1): Return 1 for UNSPECs.\n\nFrom-SVN: r157317", "tree": {"sha": "05b3f25ca95fd387712a79e675a76d6f1385d7f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05b3f25ca95fd387712a79e675a76d6f1385d7f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb1fcdaa11c571780374065c383708826624f22d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1fcdaa11c571780374065c383708826624f22d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1fcdaa11c571780374065c383708826624f22d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1fcdaa11c571780374065c383708826624f22d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "69b89883e86e2d346d28c17e64681ff87b1f61cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69b89883e86e2d346d28c17e64681ff87b1f61cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69b89883e86e2d346d28c17e64681ff87b1f61cb"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "dddf99091eb6a1b8d5ff57b795875f95328342d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1fcdaa11c571780374065c383708826624f22d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1fcdaa11c571780374065c383708826624f22d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb1fcdaa11c571780374065c383708826624f22d", "patch": "@@ -1,5 +1,8 @@\n 2010-03-09  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/43299\n+\t* dwarf2out.c (const_ok_for_output_1): Return 1 for UNSPECs.\n+\n \tPR debug/43299\n \t* var-tracking.c (adjust_sets): New function.\n \t(count_with_sets, add_with_sets): Use it."}, {"sha": "5aa9df4417cd35d5491df97cbaec7ba0d24ad268", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1fcdaa11c571780374065c383708826624f22d/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1fcdaa11c571780374065c383708826624f22d/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=eb1fcdaa11c571780374065c383708826624f22d", "patch": "@@ -12826,6 +12826,22 @@ const_ok_for_output_1 (rtx *rtlp, void *data ATTRIBUTE_UNUSED)\n {\n   rtx rtl = *rtlp;\n \n+  if (GET_CODE (rtl) == UNSPEC)\n+    {\n+      /* If delegitimize_address couldn't do anything with the UNSPEC, assume\n+\t we can't express it in the debug info.  */\n+#ifdef ENABLE_CHECKING\n+      inform (current_function_decl\n+\t      ? DECL_SOURCE_LOCATION (current_function_decl)\n+\t      : UNKNOWN_LOCATION,\n+\t      \"non-delegitimized UNSPEC %d found in variable location\",\n+\t      XINT (rtl, 1));\n+#endif\n+      expansion_failed (NULL_TREE, rtl,\n+\t\t\t\"UNSPEC hasn't been delegitimized.\\n\");\n+      return 1;\n+    }\n+\n   if (GET_CODE (rtl) != SYMBOL_REF)\n     return 0;\n "}]}