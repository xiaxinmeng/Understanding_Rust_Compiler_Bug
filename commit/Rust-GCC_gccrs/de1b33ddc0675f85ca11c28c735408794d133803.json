{"sha": "de1b33ddc0675f85ca11c28c735408794d133803", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUxYjMzZGRjMDY3NWY4NWNhMTFjMjhjNzM1NDA4Nzk0ZDEzMzgwMw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-01-27T20:24:34Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-01-27T20:24:34Z"}, "message": "expr.c (emit_move_insn): Add REG_EQUAL note when constant loaded into register was forced into memory.\n\n* expr.c (emit_move_insn): Add REG_EQUAL note when constant loaded\ninto register was forced into memory.\n\nFrom-SVN: r39301", "tree": {"sha": "e6e8448e12a53a8dd2b97c74e776752a9ef0c8cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6e8448e12a53a8dd2b97c74e776752a9ef0c8cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de1b33ddc0675f85ca11c28c735408794d133803", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1b33ddc0675f85ca11c28c735408794d133803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de1b33ddc0675f85ca11c28c735408794d133803", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1b33ddc0675f85ca11c28c735408794d133803/comments", "author": null, "committer": null, "parents": [{"sha": "8a8de62d6de62c383785f84e0d5b3956f73d4f47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a8de62d6de62c383785f84e0d5b3956f73d4f47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a8de62d6de62c383785f84e0d5b3956f73d4f47"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "bc2240df35d74b9e9fe2f0c5f7dc304468ae0101", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1b33ddc0675f85ca11c28c735408794d133803/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1b33ddc0675f85ca11c28c735408794d133803/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de1b33ddc0675f85ca11c28c735408794d133803", "patch": "@@ -1,3 +1,8 @@\n+2001-01-27  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* expr.c (emit_move_insn): Add REG_EQUAL note when constant loaded\n+\tinto register was forced into memory.\n+\n 2001-01-27  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* Makefile.in: Remove uses of + before $(MAKE)."}, {"sha": "d36351020bf0af14465c135c86b959d4d3e239a2", "filename": "gcc/expr.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1b33ddc0675f85ca11c28c735408794d133803/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1b33ddc0675f85ca11c28c735408794d133803/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=de1b33ddc0675f85ca11c28c735408794d133803", "patch": "@@ -2709,6 +2709,8 @@ emit_move_insn (x, y)\n      rtx x, y;\n {\n   enum machine_mode mode = GET_MODE (x);\n+  rtx y_cst = NULL_RTX;\n+  rtx last_insn;\n \n   x = protect_from_queue (x, 1);\n   y = protect_from_queue (y, 0);\n@@ -2720,7 +2722,10 @@ emit_move_insn (x, y)\n   if (GET_CODE (y) == CONSTANT_P_RTX)\n     ;\n   else if (CONSTANT_P (y) && ! LEGITIMATE_CONSTANT_P (y))\n-    y = force_const_mem (mode, y);\n+    {\n+      y_cst = y;\n+      y = force_const_mem (mode, y);\n+    }\n \n   /* If X or Y are memory references, verify that their addresses are valid\n      for the machine.  */\n@@ -2740,7 +2745,13 @@ emit_move_insn (x, y)\n   if (mode == BLKmode)\n     abort ();\n \n-  return emit_move_insn_1 (x, y);\n+  last_insn = emit_move_insn_1 (x, y);\n+\n+  if (y_cst && GET_CODE (x) == REG)\n+    REG_NOTES (last_insn)\n+      = gen_rtx_EXPR_LIST (REG_EQUAL, y_cst, REG_NOTES (last_insn));\n+\n+  return last_insn;\n }\n \n /* Low level part of emit_move_insn."}]}