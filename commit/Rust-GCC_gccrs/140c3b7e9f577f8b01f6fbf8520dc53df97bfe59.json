{"sha": "140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQwYzNiN2U5ZjU3N2Y4YjAxZjZmYmY4NTIwZGM1M2RmOTdiZmU1OQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-10-26T23:17:35Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-10-26T23:17:35Z"}, "message": "label2.C: Tweak to work with V3.\n\n\t* g++.old-deja/g++.brendan/label2.C: Tweak to work with V3.\n\t* g++.old-deja/g++.law/builtin1.C: Likewise.\n\t* g++.old-deja/g++.law/ctors10.C: Likewise.\n\t* g++.old-deja/g++.law/virtual3.C: Likewise.\n\t* g++.old-deja/g++.mike/p658.C: Likewise.\n\t* g++.old-deja/g++.other/sibcall1.C: Likewise.\n\t* g++.old-deja/g++.other/vaarg2.C: Likewise.\n\t* g++.old-deja/g++.robertl/eb124.C: Likewise.\n\t* g++.old-deja/g++.robertl/eb44.C: Likewise.\n\t* g++.old-deja/g++.robertl/eb77.C: Likewise.\n\n\t* include/backward/streambuf.h: New file.\n\nFrom-SVN: r37077", "tree": {"sha": "f9111d1b1c06b8c7cd114eea9187b76af7ec310c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9111d1b1c06b8c7cd114eea9187b76af7ec310c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/comments", "author": null, "committer": null, "parents": [{"sha": "8eb99146fb0cd70a29d359508fe27bfb4767cb8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb99146fb0cd70a29d359508fe27bfb4767cb8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eb99146fb0cd70a29d359508fe27bfb4767cb8c"}], "stats": {"total": 125, "additions": 112, "deletions": 13}, "files": [{"sha": "65d5ae81bea853322ef1a9a3aee944574bb0f2da", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -1,3 +1,16 @@\n+2000-10-26  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* g++.old-deja/g++.brendan/label2.C: Tweak to work with V3.\n+\t* g++.old-deja/g++.law/builtin1.C: Likewise.\n+\t* g++.old-deja/g++.law/ctors10.C: Likewise.\n+\t* g++.old-deja/g++.law/virtual3.C: Likewise.\n+\t* g++.old-deja/g++.mike/p658.C: Likewise.\n+\t* g++.old-deja/g++.other/sibcall1.C: Likewise.\n+\t* g++.old-deja/g++.other/vaarg2.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb124.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb44.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb77.C: Likewise.\n+\n 2000-10-26  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* gcc.c-torture/compile/20001024-1.c: New test."}, {"sha": "5abdb159b5726d3c27494ce1183d14617870e81d", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/label2.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Flabel2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Flabel2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Flabel2.C?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -1,5 +1,8 @@\n // Build don't link: \n // GROUPS passed labels\n+\n+extern \"C\" void abort();\n+\n class X {\n public:\n     X();"}, {"sha": "86a91e7e36f408b91c5e56201e8d2a4245fd3457", "filename": "gcc/testsuite/g++.old-deja/g++.law/builtin1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fbuiltin1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fbuiltin1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fbuiltin1.C?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -12,6 +12,6 @@ extern \"C\" void* alloca( __SIZE_TYPE__ );\n extern \"C\" int printf (const char *, ...);\n \n void* junk() {\n-  return alloca(10);\n+  return std::alloca(10);\n }\n main() { printf (\"PASS\\n\");}"}, {"sha": "6520087d52f29c4accc40db15d1dc8a862e7b4a1", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors10.C?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -13,7 +13,7 @@ class Class\n         class Err : public ostream\n         {\n         public:\n-                Err(void) : ostream() { }\n+                Err(void) : ostream(NULL) { }\n                 ~Err(void) { }\n         };\n public:"}, {"sha": "92e7db8a1e8d227a91b994f37b8fd8b36a3fcca6", "filename": "gcc/testsuite/g++.old-deja/g++.law/virtual3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvirtual3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvirtual3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvirtual3.C?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -29,7 +29,7 @@ BugStream& BugStream::eval()\n    cerr << s << endl;\n    \n    // reset the stream for the next command    \n-   clear(0);\n+   clear(ios::goodbit);\n    rdbuf()->freeze(0);\n    seekp(0);\n    "}, {"sha": "842ae8b78d69532d2bf2a2e8106a28d483e5bc1e", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p658.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp658.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp658.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp658.C?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -1,8 +1,7 @@\n // prms-id: 658\n \n #include <ostream.h>\n-\n-extern \"C\" void abort();\n+#include <stdlib.h>\n \n /* We may not find the libg++ <bool.h>.  */\n #ifndef FALSE"}, {"sha": "99a1dc176e4921090a148043dc5360b08e210659", "filename": "gcc/testsuite/g++.old-deja/g++.other/sibcall1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsibcall1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsibcall1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsibcall1.C?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -1,6 +1,6 @@\n // Special g++ Options: -O2\n \n-#include <iostream>\n+#include <iostream.h>\n \n ostream& foo (char *x, ostream &y)\n {"}, {"sha": "fe1fa7eae0e1e140e302db6c36caf660768ea3da", "filename": "gcc/testsuite/g++.old-deja/g++.other/vaarg2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvaarg2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvaarg2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvaarg2.C?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -1,10 +1,10 @@\n-// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 4 Oct 1999 <nathan@acm.org>\n \n // Make sure we can deal with POD aggregate in va_args\n \n #include <stdarg.h>\n-extern void abort ();\n+extern \"C\" void abort ();\n \n struct X {int m;};\n struct Y {int a; int b; int c; int d; int e; int f;};"}, {"sha": "92fa87256e0dfad96378bea589f67d9a025e7904", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb124.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb124.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb124.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb124.C?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -1,3 +1,5 @@\n //Build don't link:\n #include <stdexcept>\n-class X : public std::runtime_error {};\n+class X : public std::runtime_error {\n+  X ();\n+};"}, {"sha": "04ff13d698ffb28528fa232b1b8287df4505f90b", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb44.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb44.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb44.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb44.C?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -31,6 +31,5 @@ ostream& operator<< (ostream& out, const Vector<char>&)\n int main()\n {\n   Vector<char> vc;\n-  ostream out;\n-  out << vc;\n+  cout << vc;\n }"}, {"sha": "d37b3eab62e9f613f39cf11a47b9571d82a60015", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb77.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb77.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb77.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb77.C?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -12,8 +12,8 @@ main(int, char* [])\n   int nLine = 0;\n \n   while( true ) {\n-    char* line = 0;\n-    s.gets(&line);\n+    char line[100];\n+    s.get(line, 100);\n \n     if( ! line ) {\n       break;"}, {"sha": "70528d825f3095edfe38d8d67733b4396c194e87", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -1,3 +1,7 @@\n+2000-10-26  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* include/backward/streambuf.h: New file.\n+\n 2000-10-26  David Edelsohn  <dje@watson.ibm.com> \n         \n \t* config/os/aix/bits/ctype_inline.h (is): Use __OBJ_DATA directly.\n@@ -144,6 +148,43 @@\n \t* include/c_std/bits/std_cstdlib.h: abort, exit comment.\n \t* include/c_std/stdlib.h: Same here.\n \t\n+2000-10-23  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/21_strings/compare.cc (test01): Add using declarations.\n+\n+\t* include/c_std/bits/std_cerrno.h: And here.\n+\t* include/c_std/bits/std_cassert.h: Tweaks.\n+\n+\t* mkcheck.in: Simplify.\n+\t\n+\t* acinclude.m4 (GLIBCPP_ENABLE_LONG_DOUBLE): Simplify.\n+\t(GLIBCPP_ENABLE_LONG_LONG): Same.\n+\t* aclocal.m4: Regenerate.\n+\n+\t* src/Makefile.am (c_shadow_headers): Add features.h,\n+\tbits/wrap_features.h.\n+\t* src/Makefile.in: Regenerate.\n+\t* include/c_std/features.h: New file.\n+\t* include/c_std/bits/wrap_features.h (_CPP_WRAP_FEATURES_H): New\n+\tfile. Need to have c++config.h included before this file so\n+\t_ISOC99_SOURCE around.\n+\n+\t* include/c_std/sys/cdefs.h: Hack.\n+\t* include/c_std/stdlib.h: Same, use c++config.h.\n+\t* include/c_std/bits/std_cstdlib.h: Use _GLIBCPP_HAVE_STRTOLD.\n+\n+\t* include/c_std/bits/std_cassert.h: Fix.\n+\t* include/c_std/bits/std_cerrno.h: Make consistent.\n+\n+\t* include/c_std/bits/std_csetjmp.h (setjmp): Unscope global\n+\tdeclaration from ::_C_legacy to _C_legacy.\n+\n+\t* include/c_std/bits/std_cstdio.h: same with printf.\n+\t* include/c_std/stdio.h: And here.\n+\n+\t* include/c_std/bits/std_cstdlib.h: abort, exit comment.\n+\t* include/c_std/stdlib.h: Same here.\n+\t\n 2000-10-21  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_ENABLE_LONG_DOUBLE): New macro."}, {"sha": "9bb7646ef049036d8e7455879a135d1a97ad4d66", "filename": "libstdc++-v3/include/backward/streambuf.h", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstreambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140c3b7e9f577f8b01f6fbf8520dc53df97bfe59/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstreambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstreambuf.h?ref=140c3b7e9f577f8b01f6fbf8520dc53df97bfe59", "patch": "@@ -0,0 +1,42 @@\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#ifndef _CPP_BACKWARD_STREAMBUF_H\n+#define _CPP_BACKWARD_STREAMBUF_H 1\n+\n+#include <bits/std_streambuf.h>\n+\n+#ifdef __STL_USE_NAMESPACES\n+using __STD::streambuf;\n+#endif /* __STL_USE_NAMESPACES */\n+\n+#endif /* _CPP_BACKWARD_STREAMBUF_H */\n+\n+// Local Variables:\n+// mode:C++\n+// End:"}]}