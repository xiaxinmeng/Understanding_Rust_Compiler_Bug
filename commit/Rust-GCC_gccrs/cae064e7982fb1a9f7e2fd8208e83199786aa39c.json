{"sha": "cae064e7982fb1a9f7e2fd8208e83199786aa39c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FlMDY0ZTc5ODJmYjFhOWY3ZTJmZDgyMDhlODMxOTk3ODZhYTM5Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-04-05T20:07:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-04-05T20:07:06Z"}, "message": "re PR preprocessor/19475 (missing whitespace after macro name in C90 or C++)\n\n\tPR preprocessor/19475\n\t* macro.c (create_iso_definition): For < ISO C99, don't\n\tpedwarn if there is no whitespace between macro name and its\n\treplacement, but the replacement starts with a basic character\n\tset character.\n\n\t* gcc.dg/cpp/macspace1.c: New test.\n\t* gcc.dg/cpp/macspace2.c: New test.\n\nFrom-SVN: r97652", "tree": {"sha": "304416eee80a3961e14c23478df57dbe2c47ef7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/304416eee80a3961e14c23478df57dbe2c47ef7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cae064e7982fb1a9f7e2fd8208e83199786aa39c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae064e7982fb1a9f7e2fd8208e83199786aa39c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cae064e7982fb1a9f7e2fd8208e83199786aa39c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae064e7982fb1a9f7e2fd8208e83199786aa39c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "87ac6a500a79d67ce4ef3cd0980eedf195ad33d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87ac6a500a79d67ce4ef3cd0980eedf195ad33d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87ac6a500a79d67ce4ef3cd0980eedf195ad33d0"}], "stats": {"total": 171, "additions": 169, "deletions": 2}, "files": [{"sha": "e9a68b3e8503b2e5d7fd19fe0d043233bce639bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae064e7982fb1a9f7e2fd8208e83199786aa39c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae064e7982fb1a9f7e2fd8208e83199786aa39c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cae064e7982fb1a9f7e2fd8208e83199786aa39c", "patch": "@@ -1,3 +1,9 @@\n+2005-04-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/19475\n+\t* gcc.dg/cpp/macspace1.c: New test.\n+\t* gcc.dg/cpp/macspace2.c: New test.\n+\n 2005-04-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* gfortran.dg/pr20755.f: Fixed bad format."}, {"sha": "ddd62c743b9a0e4635ee9b4630f26f6affaeb786", "filename": "gcc/testsuite/gcc.dg/cpp/macspace1.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae064e7982fb1a9f7e2fd8208e83199786aa39c/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacspace1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae064e7982fb1a9f7e2fd8208e83199786aa39c/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacspace1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacspace1.c?ref=cae064e7982fb1a9f7e2fd8208e83199786aa39c", "patch": "@@ -0,0 +1,61 @@\n+/* PR preprocessor/19475 */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=iso9899:1990 -pedantic-errors -fno-show-column\" } */\n+\n+#define a!\t\t/* { dg-warning \"missing whitespace\" } */\n+#define b\"\t\t/* { dg-warning \"missing whitespace\" } */\n+#define c#\t\t/* { dg-warning \"missing whitespace\" } */\n+#define d%\t\t/* { dg-warning \"missing whitespace\" } */\n+#define e&\t\t/* { dg-warning \"missing whitespace\" } */\n+#define f'\t\t/* { dg-warning \"missing whitespace\" } */\n+#define g)\t\t/* { dg-warning \"missing whitespace\" } */\n+#define h*\t\t/* { dg-warning \"missing whitespace\" } */\n+#define i+\t\t/* { dg-warning \"missing whitespace\" } */\n+#define j,\t\t/* { dg-warning \"missing whitespace\" } */\n+#define k-\t\t/* { dg-warning \"missing whitespace\" } */\n+#define l.\t\t/* { dg-warning \"missing whitespace\" } */\n+#define m/\t\t/* { dg-warning \"missing whitespace\" } */\n+#define n:\t\t/* { dg-warning \"missing whitespace\" } */\n+#define o;\t\t/* { dg-warning \"missing whitespace\" } */\n+#define p<\t\t/* { dg-warning \"missing whitespace\" } */\n+#define q=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define r>\t\t/* { dg-warning \"missing whitespace\" } */\n+#define s?\t\t/* { dg-warning \"missing whitespace\" } */\n+#define t[\t\t/* { dg-warning \"missing whitespace\" } */\n+#define u]\t\t/* { dg-warning \"missing whitespace\" } */\n+#define v^\t\t/* { dg-warning \"missing whitespace\" } */\n+#define w{\t\t/* { dg-warning \"missing whitespace\" } */\n+#define x|\t\t/* { dg-warning \"missing whitespace\" } */\n+#define y}\t\t/* { dg-warning \"missing whitespace\" } */\n+#define z~\t\t/* { dg-warning \"missing whitespace\" } */\n+#define A>>\t\t/* { dg-warning \"missing whitespace\" } */\n+#define B<<\t\t/* { dg-warning \"missing whitespace\" } */\n+#define E&&\t\t/* { dg-warning \"missing whitespace\" } */\n+#define F||\t\t/* { dg-warning \"missing whitespace\" } */\n+#define G==\t\t/* { dg-warning \"missing whitespace\" } */\n+#define H!=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define I>=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define J<=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define K+=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define L-=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define M*=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define N/=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define O%=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define P&=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define Q|=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define R^=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define S>>=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define T<<=\t\t/* { dg-warning \"missing whitespace\" } */\n+#define W...\t\t/* { dg-warning \"missing whitespace\" } */\n+#define X++\t\t/* { dg-warning \"missing whitespace\" } */\n+#define Y--\t\t/* { dg-warning \"missing whitespace\" } */\n+#define Z->\t\t/* { dg-warning \"missing whitespace\" } */\n+#define aa::\t\t/* { dg-warning \"missing whitespace\" } */\n+#define ab->*\t\t/* { dg-warning \"missing whitespace\" } */\n+#define ac.*\t\t/* { dg-warning \"missing whitespace\" } */\n+#define ad\\x\t\t/* { dg-warning \"missing whitespace\" } */\n+#define ae\\\\x\t\t/* { dg-warning \"missing whitespace\" } */\n+#define af'1'\t\t/* { dg-warning \"missing whitespace\" } */\n+#define ag\"abc\"\t\t/* { dg-warning \"missing whitespace\" } */\n+\n+int dummy;"}, {"sha": "21576fa22fa438665b46dbf68a7dcaec79ee25f0", "filename": "gcc/testsuite/gcc.dg/cpp/macspace2.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae064e7982fb1a9f7e2fd8208e83199786aa39c/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacspace2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae064e7982fb1a9f7e2fd8208e83199786aa39c/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacspace2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacspace2.c?ref=cae064e7982fb1a9f7e2fd8208e83199786aa39c", "patch": "@@ -0,0 +1,61 @@\n+/* PR preprocessor/19475 */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors -fno-show-column\" } */\n+\n+#define a!\t\t/* { dg-error \"requires whitespace\" } */\n+#define b\"\t\t/* { dg-error \"requires whitespace\" } */\n+#define c#\t\t/* { dg-error \"requires whitespace\" } */\n+#define d%\t\t/* { dg-error \"requires whitespace\" } */\n+#define e&\t\t/* { dg-error \"requires whitespace\" } */\n+#define f'\t\t/* { dg-error \"requires whitespace\" } */\n+#define g)\t\t/* { dg-error \"requires whitespace\" } */\n+#define h*\t\t/* { dg-error \"requires whitespace\" } */\n+#define i+\t\t/* { dg-error \"requires whitespace\" } */\n+#define j,\t\t/* { dg-error \"requires whitespace\" } */\n+#define k-\t\t/* { dg-error \"requires whitespace\" } */\n+#define l.\t\t/* { dg-error \"requires whitespace\" } */\n+#define m/\t\t/* { dg-error \"requires whitespace\" } */\n+#define n:\t\t/* { dg-error \"requires whitespace\" } */\n+#define o;\t\t/* { dg-error \"requires whitespace\" } */\n+#define p<\t\t/* { dg-error \"requires whitespace\" } */\n+#define q=\t\t/* { dg-error \"requires whitespace\" } */\n+#define r>\t\t/* { dg-error \"requires whitespace\" } */\n+#define s?\t\t/* { dg-error \"requires whitespace\" } */\n+#define t[\t\t/* { dg-error \"requires whitespace\" } */\n+#define u]\t\t/* { dg-error \"requires whitespace\" } */\n+#define v^\t\t/* { dg-error \"requires whitespace\" } */\n+#define w{\t\t/* { dg-error \"requires whitespace\" } */\n+#define x|\t\t/* { dg-error \"requires whitespace\" } */\n+#define y}\t\t/* { dg-error \"requires whitespace\" } */\n+#define z~\t\t/* { dg-error \"requires whitespace\" } */\n+#define A>>\t\t/* { dg-error \"requires whitespace\" } */\n+#define B<<\t\t/* { dg-error \"requires whitespace\" } */\n+#define E&&\t\t/* { dg-error \"requires whitespace\" } */\n+#define F||\t\t/* { dg-error \"requires whitespace\" } */\n+#define G==\t\t/* { dg-error \"requires whitespace\" } */\n+#define H!=\t\t/* { dg-error \"requires whitespace\" } */\n+#define I>=\t\t/* { dg-error \"requires whitespace\" } */\n+#define J<=\t\t/* { dg-error \"requires whitespace\" } */\n+#define K+=\t\t/* { dg-error \"requires whitespace\" } */\n+#define L-=\t\t/* { dg-error \"requires whitespace\" } */\n+#define M*=\t\t/* { dg-error \"requires whitespace\" } */\n+#define N/=\t\t/* { dg-error \"requires whitespace\" } */\n+#define O%=\t\t/* { dg-error \"requires whitespace\" } */\n+#define P&=\t\t/* { dg-error \"requires whitespace\" } */\n+#define Q|=\t\t/* { dg-error \"requires whitespace\" } */\n+#define R^=\t\t/* { dg-error \"requires whitespace\" } */\n+#define S>>=\t\t/* { dg-error \"requires whitespace\" } */\n+#define T<<=\t\t/* { dg-error \"requires whitespace\" } */\n+#define W...\t\t/* { dg-error \"requires whitespace\" } */\n+#define X++\t\t/* { dg-error \"requires whitespace\" } */\n+#define Y--\t\t/* { dg-error \"requires whitespace\" } */\n+#define Z->\t\t/* { dg-error \"requires whitespace\" } */\n+#define aa::\t\t/* { dg-error \"requires whitespace\" } */\n+#define ab->*\t\t/* { dg-error \"requires whitespace\" } */\n+#define ac.*\t\t/* { dg-error \"requires whitespace\" } */\n+#define ad\\x\t\t/* { dg-error \"requires whitespace\" } */\n+#define ae\\\\x\t\t/* { dg-error \"requires whitespace\" } */\n+#define af'1'\t\t/* { dg-error \"requires whitespace\" } */\n+#define ag\"abc\"\t\t/* { dg-error \"requires whitespace\" } */\n+\n+int dummy;"}, {"sha": "48b24ecfad98b858610a8447a12fea8255458abe", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae064e7982fb1a9f7e2fd8208e83199786aa39c/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae064e7982fb1a9f7e2fd8208e83199786aa39c/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=cae064e7982fb1a9f7e2fd8208e83199786aa39c", "patch": "@@ -1,3 +1,11 @@\n+2005-04-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/19475\n+\t* macro.c (create_iso_definition): For < ISO C99, don't\n+\tpedwarn if there is no whitespace between macro name and its\n+\treplacement, but the replacement starts with a basic character\n+\tset character.\n+\n 2005-03-28  Andreas Jaeger  <aj@suse.de>\n \n \t* lex.c (warn_about_normalization): Cast field width to int to"}, {"sha": "daa2bd34a0e9ce0643ca02af01aa1343cfd30f5c", "filename": "libcpp/macro.c", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae064e7982fb1a9f7e2fd8208e83199786aa39c/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae064e7982fb1a9f7e2fd8208e83199786aa39c/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=cae064e7982fb1a9f7e2fd8208e83199786aa39c", "patch": "@@ -1430,8 +1430,39 @@ create_iso_definition (cpp_reader *pfile, cpp_macro *macro)\n       macro->fun_like = 1;\n     }\n   else if (ctoken->type != CPP_EOF && !(ctoken->flags & PREV_WHITE))\n-    cpp_error (pfile, CPP_DL_PEDWARN,\n-\t       \"ISO C requires whitespace after the macro name\");\n+    {\n+      /* While ISO C99 requires whitespace before replacement text\n+\t in a macro definition, ISO C90 with TC1 allows there characters\n+\t from the basic source character set.  */\n+      if (CPP_OPTION (pfile, c99))\n+\tcpp_error (pfile, CPP_DL_PEDWARN,\n+\t\t   \"ISO C99 requires whitespace after the macro name\");\n+      else\n+\t{\n+\t  int warntype = CPP_DL_WARNING;\n+\t  switch (ctoken->type)\n+\t    {\n+\t    case CPP_ATSIGN:\n+\t    case CPP_AT_NAME:\n+\t    case CPP_OBJC_STRING:\n+\t      /* '@' is not in basic character set.  */\n+\t      warntype = CPP_DL_PEDWARN;\n+\t      break;\n+\t    case CPP_OTHER:\n+\t      /* Basic character set sans letters, digits and _.  */\n+\t      if (strchr (\"!\\\"#%&'()*+,-./:;<=>?[\\\\]^{|}~\",\n+\t\t\t  ctoken->val.str.text[0]) == NULL)\n+\t\twarntype = CPP_DL_PEDWARN;\n+\t      break;\n+\t    default:\n+\t      /* All other tokens start with a character from basic\n+\t\t character set.  */\n+\t      break;\n+\t    }\n+\t  cpp_error (pfile, warntype,\n+\t\t     \"missing whitespace after the macro name\");\n+\t}\n+    }\n \n   if (macro->fun_like)\n     token = lex_expansion_token (pfile, macro);"}]}