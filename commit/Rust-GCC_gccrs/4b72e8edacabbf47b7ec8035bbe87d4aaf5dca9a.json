{"sha": "4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI3MmU4ZWRhY2FiYmY0N2I3ZWM4MDM1YmJlODdkNGFhZjVkY2E5YQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2002-04-12T10:59:33Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2002-04-12T10:59:33Z"}, "message": "* g++.dg/ext/attrib5.C,\n\n\t* g++.dg/lookup/struct1.C: New tests.\n\nFrom-SVN: r52215", "tree": {"sha": "894c1622fb8812f33954e3ddede30e1af6461b40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/894c1622fb8812f33954e3ddede30e1af6461b40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a/comments", "author": null, "committer": null, "parents": [{"sha": "18778292a06fff84ba30d2df3ea070c30b0a8f62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18778292a06fff84ba30d2df3ea070c30b0a8f62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18778292a06fff84ba30d2df3ea070c30b0a8f62"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "fdf1c38bd49733a04f4f2ae005eef6719c76f892", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a", "patch": "@@ -1,3 +1,8 @@\n+2002-04-12  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* g++.dg/ext/attrib5.C,\n+\t* g++.dg/lookup/struct1.C: New tests.\n+\n 2002-04-11  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/20020411-1.c: New test."}, {"sha": "f67510dabc76236b0e09681a324df2aed05b5517", "filename": "gcc/testsuite/g++.dg/ext/attrib5.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib5.C?ref=4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a", "patch": "@@ -0,0 +1,21 @@\n+// There were two related problems here, depending on the vintage.  At\n+// one time:\n+//\n+//    typedef struct A { ... } A __attribute__ ((aligned (16)));\n+//\n+// would cause original_types to go into an infinite loop.  At other\n+// times, the attributes applied to an explicit typedef would be lost\n+// (check_b3 would have a negative size).\n+\n+// First check that the declaration is accepted and has an effect.\n+typedef struct A { int i; } A __attribute__ ((aligned (16)));\n+int check_A[__alignof__ (A) >= 16 ? 1 : -1];\n+\n+// Check that the alignment is only applied to the typedef.\n+struct B { int i; };\n+struct B b1;\n+typedef struct B B __attribute__((aligned (16)));\n+struct B b2;\n+B b3;\n+int check_b1[__alignof__ (b1) == __alignof__ (b2) ? 1 : -1];\n+int check_b3[__alignof__ (b3) >= 16 ? 1 : -1];"}, {"sha": "c8bc0561be0564fa5d01a19f8a256b82b530bf0c", "filename": "gcc/testsuite/g++.dg/lookup/struct1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstruct1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstruct1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstruct1.C?ref=4b72e8edacabbf47b7ec8035bbe87d4aaf5dca9a", "patch": "@@ -0,0 +1,14 @@\n+// Various struct lookup tests.  We didn't used to complain about\n+// the definition of C.\n+\n+struct A;\n+typedef struct A B;\t\t// { dg-error \"previous declaration\" }\n+struct B;\t\t\t// { dg-error \"conflicting types\" }\n+\n+typedef struct { int i; } C;\t// { dg-error \"previous declaration\" }\n+struct C;\t\t\t// { dg-error \"conflicting types\" }\n+\n+struct D;\n+typedef struct D D;\n+typedef struct D { int i; } D;\n+typedef struct D D;"}]}