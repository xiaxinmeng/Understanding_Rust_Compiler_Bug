{"sha": "e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYyYmI3ZjA4MzQ3MGNjZGFkYmQ4M2VmODg1YzZmZTFlNWNiOWU2Nw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-27T00:16:33Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-27T00:16:33Z"}, "message": "Daily bump.", "tree": {"sha": "66f8a9be1882fbd922e889bd4ab5fa4cbc684262", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66f8a9be1882fbd922e889bd4ab5fa4cbc684262"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/comments", "author": null, "committer": null, "parents": [{"sha": "78739c2df788ee5c868d998a6333d453317d8711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78739c2df788ee5c868d998a6333d453317d8711", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78739c2df788ee5c868d998a6333d453317d8711"}], "stats": {"total": 179, "additions": 178, "deletions": 1}, "files": [{"sha": "8f444d9392e10d5a78211a956e97e34590ca35a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "patch": "@@ -1,3 +1,54 @@\n+2021-01-26  Paul Fee  <paul.f.fee@gmail.com>\n+\n+\t* doc/cpp.texi (__cplusplus): Document value for -std=c++23\n+\tor -std=gnu++23.\n+\t* doc/invoke.texi: Document -std=c++23 and -std=gnu++23.\n+\t* dwarf2out.c (highest_c_language): Recognise C++20 and C++23.\n+\t(gen_compile_unit_die): Recognise C++23.\n+\n+2021-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/98839\n+\t* dwarf2asm.c (dw2_assemble_integer): Cast DWARF2_ADDR_SIZE to int\n+\tin comparison.\n+\n+2021-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/98681\n+\t* config/aarch64/aarch64.c (aarch64_mask_and_shift_for_ubfiz_p):\n+\tUse UINTVAL (shft_amnt) and UINTVAL (mask) instead of INTVAL (shft_amnt)\n+\tand INTVAL (mask).  Add && INTVAL (mask) > 0 condition.\n+\n+2021-01-26  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-pretty-print.c (dump_binary_rhs): Handle\n+\tVEC_WIDEN_{PLUS,MINUS}_{LO,HI}_EXPR.\n+\n+2021-01-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/98726\n+\t* tree.h (vector_cst_int_elt): Remove.\n+\t* tree.c (vector_cst_int_elt): Use poly_wide_int for computations,\n+\tmake static.\n+\n+2021-01-26  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn.c (gcn_expand_reduc_scalar): Use move instructions\n+\tfor V64DFmode min/max reductions.\n+\n+2021-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* dwarf2asm.c (dw2_assemble_integer): Handle size twice as large\n+\tas DWARF2_ADDR_SIZE if x is not a scalar int by emitting it as\n+\ttwo halves, one with x and the other with const0_rtx, ordered\n+\tdepending on endianity.\n+\n+2021-01-26  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* gimplify.c (gimplify_decl_expr): Skip asan marking calls for\n+\ttemporaries not seen in binding block, and not about to be\n+\tadded as gimple variables.\n+\n 2021-01-25  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/98646"}, {"sha": "05d39df46625c1f357660853e28b771088abd25c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "patch": "@@ -1 +1 @@\n-20210126\n+20210127"}, {"sha": "75f75ecb2c1b86f4366e08c150c2ca20697196ff", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "patch": "@@ -1,3 +1,9 @@\n+2021-01-26  Marius Hillenbrand  <mhillen@linux.ibm.com>\n+\n+\tPR ada/98228\n+\t* gcc-interface/utils.c (maybe_pad_type): Test the size of the new\n+\tpackable type instead of its alignment for addressability's sake.\n+\n 2021-01-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (make_covariant_thunk): Set the DECL_CONTEXT"}, {"sha": "b57663dda60f8688557bb170e007662931047af3", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "patch": "@@ -1,3 +1,13 @@\n+2021-01-26  Paul Fee  <paul.f.fee@gmail.com>\n+\n+\t* c-common.h (cxx_dialect): Add cxx23 as a dialect.\n+\t* c.opt: Add options for -std=c++23, std=c++2b, -std=gnu++23\n+\tand -std=gnu++2b\n+\t* c-opts.c (set_std_cxx23): New.\n+\t(c_common_handle_option): Set options when -std=c++23 is enabled.\n+\t(c_common_post_options): Adjust comments.\n+\t(set_std_cxx20): Likewise.\n+\n 2021-01-25  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/98646"}, {"sha": "bad0bc204409d85be36d0747cfa84c4d44a01fcf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "patch": "@@ -1,3 +1,21 @@\n+2021-01-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/97474\n+\t* call.c (type_passed_as): Don't mark invisiref restrict.\n+\n+2021-01-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/97566\n+\tPR c++/98463\n+\t* class.c (layout_class_type): An empty field gets size 0.\n+\t(is_empty_field): New.\n+\t(check_bases): Check it.\n+\t* cp-tree.h (is_empty_field): Declare it.\n+\t* constexpr.c (cxx_eval_store_expression): Check it.\n+\t(cx_check_missing_mem_inits): Likewise.\n+\t* init.c (perform_member_init): Likewise.\n+\t* typeck2.c (process_init_constructor_record): Likewise.\n+\n 2021-01-25  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/98646"}, {"sha": "145b8d8bc82bdb10ad8d5fde153880c48cc2dc55", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "patch": "@@ -1,3 +1,11 @@\n+2021-01-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dmd/MERGE: Merge upstream dmd 609c3ce2d.\n+\t* d-compiler.cc (Compiler::loadModule): Rename to ...\n+\t(Compiler::onParseModule): ... this.\n+\t(Compiler::onImport): New function.\n+\t* d-lang.cc (d_parse_file): Remove call to Compiler::loadModule.\n+\n 2021-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* dmd/MERGE: Merge upstream dmd 3a7ebef73."}, {"sha": "b99ef3a287a9a144eb395c0b1e49ccf32a8940e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "patch": "@@ -1,3 +1,61 @@\n+2021-01-26  Paul Fee  <paul.f.fee@gmail.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_c++2a):\n+\tCheck for C++2a or C++23.\n+\t(check_effective_target_c++20_down): New.\n+\t(check_effective_target_c++23_only): New.\n+\t(check_effective_target_c++23): New.\n+\t* g++.dg/cpp23/cplusplus.C: New.\n+\n+2021-01-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/97474\n+\t* g++.dg/torture/pr97474.C: New test.\n+\n+2021-01-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/97566\n+\t* g++.dg/cpp2a/no_unique_address10.C: New test.\n+\t* g++.dg/cpp2a/no_unique_address9.C: New test.\n+\n+2021-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.target/powerpc/m128-check.h (CHECK_EXP): Remove\n+\toptimize (\"no-strict-aliasing\") attribute.\n+\t* gcc.target/powerpc/sse-andnps-1.c (TEST): Copy e into float[4]\n+\tarray to avoid violating TBAA.\n+\t* gcc.target/powerpc/sse2-andpd-1.c (TEST): Copy e.d into double[2]\n+\tarray to avoid violating TBAA.\n+\t* gcc.target/powerpc/sse-andps-1.c (TEST): Copy e.f into float[4]\n+\tarray to avoid violating TBAA.\n+\t* gcc.target/powerpc/sse2-andnpd-1.c (TEST): Copy e into double[2]\n+\tarray to avoid violating TBAA.\n+\n+2021-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/98681\n+\t* gcc.c-torture/execute/pr98681.c: New test.\n+\n+2021-01-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/67539\n+\t* gfortran.dg/elemental_assignment_1.f90: New test.\n+\n+2021-01-26  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* g++.dg/modules/modules.exp: Remove unused CXX_MODULE_PATH;\n+\tadd previously missing space in '$ident link'.\n+\n+2021-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/98807\n+\t* gcc.dg/pr98807.c: Add -Wno-psabi -w to dg-options.\n+\n+2021-01-26  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* gnat.dg/asan1.adb: New test.\n+\t* gnat.dg/asan1_pkg.ads: New additional source.\n+\n 2021-01-25  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/70070"}, {"sha": "b47e7930a878e604b69b86dde9bff2b9cacf00ba", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "patch": "@@ -1,3 +1,9 @@\n+2021-01-26  Paul Fee  <paul.f.fee@gmail.com>\n+\n+\t* include/cpplib.h (c_lang): Add CXX23 and GNUCXX23.\n+\t* init.c (lang_defaults): Add rows for CXX23 and GNUCXX23.\n+\t(cpp_init_builtins): Set __cplusplus to 202100L for C++23.\n+\n 2021-01-15  Nathan Sidwell  <nathan@acm.org>\n \n \tPR preprocessor/95253"}, {"sha": "94e6f4ff1a860cb3f8f983ed89f016fd69983d0b", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "patch": "@@ -1,3 +1,10 @@\n+2021-01-26  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/98739\n+\t* libgcov.h (gcov_topn_add_value): Do not train when\n+\twe have a merged profile with a negative number of total\n+\tvalue.\n+\n 2021-01-25  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/98739"}, {"sha": "1f9f96aaf1f465e6df7ecaf2682cf2a204c1eae5", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "patch": "@@ -1,3 +1,10 @@\n+2021-01-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* src/MERGE: Merge upstream phobos 3dd5df686.\n+\t* testsuite/libphobos.phobos/phobos.exp: Add compiler flag\n+\t-fversion=Linux_Pre_2639 if target is linux_pre_2639.\n+\t* testsuite/libphobos.phobos_shared/phobos_shared.exp: Likewise.\n+\n 2021-01-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/98806"}, {"sha": "5292f06604277c5bb960b2d0e8ca133feeeca579", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=e62bb7f083470ccdadbd83ef885c6fe1e5cb9e67", "patch": "@@ -1,3 +1,9 @@\n+2021-01-26  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/98828\n+\t* lsan/Makefile.am: Add missing lsan_posix.cpp file.\n+\t* lsan/Makefile.in: Likewise.\n+\n 2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n \n \t* configure: Re-generate."}]}