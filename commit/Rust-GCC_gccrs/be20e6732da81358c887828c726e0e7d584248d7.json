{"sha": "be20e6732da81358c887828c726e0e7d584248d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUyMGU2NzMyZGE4MTM1OGM4ODc4MjhjNzI2ZTBlN2Q1ODQyNDhkNw==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2005-02-02T21:19:07Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2005-02-02T21:19:07Z"}, "message": "cp-tree.h (complete_type_or_else): Remove macro.\n\n\t* cp-tree.h (complete_type_or_else): Remove macro.\n\t(complete_type_or_diagnostic): Rename to complete_type_or_else\n\tand remove last argument.\n\t* typeck.c (complete_type_or_diagnostic): Rename to\n\tcomplete_type_or_else and remove last argument.\n\nFrom-SVN: r94614", "tree": {"sha": "441099b4bc0c5c06345176a6ef1f039d8863c6ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/441099b4bc0c5c06345176a6ef1f039d8863c6ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be20e6732da81358c887828c726e0e7d584248d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be20e6732da81358c887828c726e0e7d584248d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be20e6732da81358c887828c726e0e7d584248d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be20e6732da81358c887828c726e0e7d584248d7/comments", "author": null, "committer": null, "parents": [{"sha": "10b2bcdd509df50958aed053ad7445f8f0e0902e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b2bcdd509df50958aed053ad7445f8f0e0902e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10b2bcdd509df50958aed053ad7445f8f0e0902e"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "284a93315a6bd295607be3af1ae39493c893f0e4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be20e6732da81358c887828c726e0e7d584248d7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be20e6732da81358c887828c726e0e7d584248d7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=be20e6732da81358c887828c726e0e7d584248d7", "patch": "@@ -1,3 +1,11 @@\n+2005-02-02  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* cp-tree.h (complete_type_or_else): Remove macro.\n+\t(complete_type_or_diagnostic): Rename to complete_type_or_else\n+\tand remove last argument.\n+\t* typeck.c (complete_type_or_diagnostic): Rename to\n+\tcomplete_type_or_else and remove last argument.\n+\n 2005-02-02  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \t* cp-tree.h (commonparms): Remove prototype."}, {"sha": "fa4c630d4959279602e04601282f2276d9660f34", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be20e6732da81358c887828c726e0e7d584248d7/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be20e6732da81358c887828c726e0e7d584248d7/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=be20e6732da81358c887828c726e0e7d584248d7", "patch": "@@ -4262,8 +4262,7 @@ extern tree condition_conversion\t\t(tree);\n extern tree target_type\t\t\t\t(tree);\n extern tree require_complete_type\t\t(tree);\n extern tree complete_type\t\t\t(tree);\n-extern tree complete_type_or_diagnostic         (tree, tree, int);\n-#define complete_type_or_else(T,V) (complete_type_or_diagnostic ((T), (V), 0))\n+extern tree complete_type_or_else\t\t(tree, tree);\n extern int type_unknown_p\t\t\t(tree);\n extern tree original_type\t\t\t(tree);\n extern bool comp_except_specs\t\t\t(tree, tree, bool);"}, {"sha": "b35ae979b6d5e1cf3ba1fca480937ffc3addb203", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be20e6732da81358c887828c726e0e7d584248d7/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be20e6732da81358c887828c726e0e7d584248d7/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=be20e6732da81358c887828c726e0e7d584248d7", "patch": "@@ -138,20 +138,19 @@ complete_type (tree type)\n }\n \n /* Like complete_type, but issue an error if the TYPE cannot be completed.\n-   VALUE is used for informative diagnostics.  DIAG_TYPE indicates the type\n-   of diagnostic: 0 for an error, 1 for a warning, 2 for a pedwarn.\n+   VALUE is used for informative diagnostics.\n    Returns NULL_TREE if the type cannot be made complete.  */\n \n tree\n-complete_type_or_diagnostic (tree type, tree value, int diag_type)\n+complete_type_or_else (tree type, tree value)\n {\n   type = complete_type (type);\n   if (type == error_mark_node)\n     /* We already issued an error.  */\n     return NULL_TREE;\n   else if (!COMPLETE_TYPE_P (type))\n     {\n-      cxx_incomplete_type_diagnostic (value, type, diag_type);\n+      cxx_incomplete_type_diagnostic (value, type, 0);\n       return NULL_TREE;\n     }\n   else"}]}