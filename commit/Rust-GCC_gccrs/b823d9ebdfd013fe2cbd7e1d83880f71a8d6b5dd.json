{"sha": "b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgyM2Q5ZWJkZmQwMTNmZTJjYmQ3ZTFkODM4ODBmNzFhOGQ2YjVkZA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-08-17T14:25:38Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-08-17T14:25:38Z"}, "message": "re PR fortran/41075 ([F2008] Implement unlimited format item)\n\n2009-08-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/41075\n\t* scanner.c (gfc_next_char_literal): Add comment to improve \n\treadability.\n\t* io.c (enum format_token): Add FMT_STAR. (format_lex): Add case\n\tfor '*'. (check_format): Check for left paren after '*'.  Change\n\tformat checks to use %L to improve format string error locus.\n\nFrom-SVN: r150843", "tree": {"sha": "cf898a012aacca2005e5d25a8bf6142926e0e0d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf898a012aacca2005e5d25a8bf6142926e0e0d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd/comments", "author": null, "committer": null, "parents": [{"sha": "dee285096f2ac88d3f6ed6260cd5801173b9a4ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dee285096f2ac88d3f6ed6260cd5801173b9a4ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dee285096f2ac88d3f6ed6260cd5801173b9a4ae"}], "stats": {"total": 86, "additions": 66, "deletions": 20}, "files": [{"sha": "3abd3bbed31570e65d20025ccc3acb0e20c835ea", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd", "patch": "@@ -1,3 +1,12 @@\n+2009-08-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/41075\n+\t* scanner.c (gfc_next_char_literal): Add comment to improve \n+\treadability.\n+\t* io.c (enum format_token): Add FMT_STAR. (format_lex): Add case\n+\tfor '*'. (check_format): Check for left paren after '*'.  Change\n+\tformat checks to use %L to improve format string error locus.\n+\n 2009-08-17  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/40877"}, {"sha": "f11ea38f7291bbf1dfb60c9dfcd3777f5ea34c5b", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 56, "deletions": 19, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd", "patch": "@@ -111,7 +111,7 @@ typedef enum\n   FMT_COMMA, FMT_COLON, FMT_SLASH, FMT_DOLLAR, FMT_LPAREN,\n   FMT_RPAREN, FMT_X, FMT_SIGN, FMT_BLANK, FMT_CHAR, FMT_P, FMT_IBOZ, FMT_F,\n   FMT_E, FMT_EXT, FMT_G, FMT_L, FMT_A, FMT_D, FMT_H, FMT_END, FMT_ERROR, FMT_DC,\n-  FMT_DP, FMT_T, FMT_TR, FMT_TL\n+  FMT_DP, FMT_T, FMT_TR, FMT_TL, FMT_STAR\n }\n format_token;\n \n@@ -469,6 +469,10 @@ format_lex (void)\n       token = FMT_END;\n       break;\n \n+    case '*':\n+      token = FMT_STAR;\n+      break;\n+\n     default:\n       token = FMT_UNKNOWN;\n       break;\n@@ -533,6 +537,19 @@ check_format (bool is_input)\n format_item_1:\n   switch (t)\n     {\n+    case FMT_STAR:\n+      repeat = -1;\n+      t = format_lex ();\n+      if (t == FMT_ERROR)\n+\tgoto fail;\n+      if (t == FMT_LPAREN)\n+\t{\n+\t  level++;\n+\t  goto format_item;\n+\t}\n+      error = _(\"Left parenthesis required after '*'\");\n+      goto syntax;\n+\n     case FMT_POSINT:\n       repeat = value;\n       t = format_lex ();\n@@ -575,7 +592,7 @@ check_format (bool is_input)\n     case FMT_X:\n       /* X requires a prior number if we're being pedantic.  */\n       if (gfc_notify_std (GFC_STD_GNU, \"Extension: X descriptor \"\n-\t\t\t  \"requires leading space count at %C\")\n+\t\t\t  \"requires leading space count at %L\", &format_locus)\n \t  == FAILURE)\n \treturn FAILURE;\n       goto between_desc;\n@@ -598,12 +615,13 @@ check_format (bool is_input)\n       if (t == FMT_ERROR)\n \tgoto fail;\n \n-      if (gfc_notify_std (GFC_STD_GNU, \"Extension: $ descriptor at %C\")\n-\t  == FAILURE)\n+      if (gfc_notify_std (GFC_STD_GNU, \"Extension: $ descriptor at %L\",\n+\t  &format_locus) == FAILURE)\n \treturn FAILURE;\n       if (t != FMT_RPAREN || level > 0)\n \t{\n-\t  gfc_warning (\"$ should be the last specifier in format at %C\");\n+\t  gfc_warning (\"$ should be the last specifier in format at %L\",\n+\t\t       &format_locus);\n \t  goto optional_comma_1;\n \t}\n \n@@ -682,8 +700,10 @@ check_format (bool is_input)\n       switch (gfc_notification_std (GFC_STD_GNU))\n \t{\n \t  case WARNING:\n+\t    if (mode != MODE_FORMAT)\n+\t      format_locus.nextc += format_string_pos;\n \t    gfc_warning (\"Extension: Missing positive width after L \"\n-\t\t\t \"descriptor at %C\");\n+\t\t\t \"descriptor at %L\", &format_locus);\n \t    saved_token = t;\n \t    break;\n \n@@ -726,7 +746,7 @@ check_format (bool is_input)\n \t      goto syntax;\n \t    }\n \t  if (gfc_notify_std (GFC_STD_F2008, \"Fortran 2008: 'G0' in \"\n-\t\t\t      \"format at %C\") == FAILURE)\n+\t\t\t      \"format at %L\", &format_locus) == FAILURE)\n \t    return FAILURE;\n \t  u = format_lex ();\n \t  if (u != FMT_PERIOD)\n@@ -756,10 +776,14 @@ check_format (bool is_input)\n       if (u != FMT_PERIOD)\n \t{\n \t  /* Warn if -std=legacy, otherwise error.  */\n+\t  if (mode != MODE_FORMAT)\n+\t    format_locus.nextc += format_string_pos;\n \t  if (gfc_option.warn_std != 0)\n-\t    gfc_error_now (\"Period required in format specifier at %C\");\n+\t    gfc_error_now (\"Period required in format specifier at %L\",\n+\t\t\t   &format_locus);\n \t  else\n-\t    gfc_warning (\"Period required in format specifier at %C\");\n+\t    gfc_warning (\"Period required in format specifier at %L\",\n+\t\t\t &format_locus);\n \t  saved_token = u;\n \t  break;\n \t}\n@@ -819,10 +843,15 @@ check_format (bool is_input)\n       if (t != FMT_PERIOD)\n \t{\n \t  /* Warn if -std=legacy, otherwise error.  */\n+\t  if (mode != MODE_FORMAT)\n+\t    format_locus.nextc += format_string_pos;\n \t  if (gfc_option.warn_std != 0)\n-\t    gfc_error_now (\"Period required in format specifier at %C\");\n-\t  else\n-\t    gfc_warning (\"Period required in format specifier at %C\");\n+\t    {\n+\t      error = _(\"Period required in format specifier at %L\");\n+\t      goto syntax;\n+\t    }\n+\t  gfc_warning (\"Period required in format specifier at %L\",\n+\t\t       &format_locus);\n \t  saved_token = t;\n \t  break;\n \t}\n@@ -840,8 +869,12 @@ check_format (bool is_input)\n \n     case FMT_H:\n       if (!(gfc_option.allow_std & GFC_STD_GNU) && !inhibit_warnings)\n-\tgfc_warning (\"The H format specifier at %C is\"\n-\t\t     \" a Fortran 95 deleted feature\");\n+\t{\n+\t  if (mode != MODE_FORMAT)\n+\t    format_locus.nextc += format_string_pos;\n+\t  gfc_warning (\"The H format specifier at %L is\"\n+\t\t       \" a Fortran 95 deleted feature\", &format_locus);\n+\t}\n \n       if (mode == MODE_STRING)\n \t{\n@@ -925,8 +958,10 @@ check_format (bool is_input)\n       goto syntax;\n \n     default:\n-      if (gfc_notify_std (GFC_STD_GNU, \"Extension: Missing comma at %C\")\n-\t  == FAILURE)\n+      if (mode != MODE_FORMAT)\n+\tformat_locus.nextc += format_string_pos;\n+      if (gfc_notify_std (GFC_STD_GNU, \"Extension: Missing comma at %L\",\n+\t  &format_locus) == FAILURE)\n \treturn FAILURE;\n       goto format_item_1;\n     }\n@@ -982,15 +1017,17 @@ check_format (bool is_input)\n       goto syntax;\n \n     default:\n-      if (gfc_notify_std (GFC_STD_GNU, \"Extension: Missing comma at %C\")\n-\t  == FAILURE)\n+      if (mode != MODE_FORMAT)\n+\tformat_locus.nextc += format_string_pos;\n+      if (gfc_notify_std (GFC_STD_GNU, \"Extension: Missing comma at %L\",\n+\t  &format_locus) == FAILURE)\n \treturn FAILURE;\n       saved_token = t;\n       break;\n     }\n \n   goto format_item;\n-\n+  \n syntax:\n   if (mode != MODE_FORMAT)\n     format_locus.nextc += format_string_pos;"}, {"sha": "8cbb3c55b5c9bc4aa203cf5917051fed1f00ca48", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd", "patch": "@@ -1139,7 +1139,7 @@ gfc_next_char_literal (int in_string)\n \t    }\n \t}\n     }\n-  else\n+  else /* Fixed form.  */\n     {\n       /* Fixed form continuation.  */\n       if (!in_string && c == '!')"}]}