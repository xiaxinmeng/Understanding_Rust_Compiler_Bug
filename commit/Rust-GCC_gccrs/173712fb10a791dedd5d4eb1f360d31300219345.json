{"sha": "173712fb10a791dedd5d4eb1f360d31300219345", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTczNzEyZmIxMGE3OTFkZWRkNWQ0ZWIxZjM2MGQzMTMwMDIxOTM0NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-21T22:54:50Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-21T22:54:50Z"}, "message": "Copy config.status to config.run and then execute.\n\nModify \"ln\" commands to try a \"cp\" if \"ln\" fails.\n($exeext, $objext, $oldobjext): New macros.\n\nFrom-SVN: r8992", "tree": {"sha": "14787386b8665f6eaf292fc78cfbf48b5472cec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14787386b8665f6eaf292fc78cfbf48b5472cec6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/173712fb10a791dedd5d4eb1f360d31300219345", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173712fb10a791dedd5d4eb1f360d31300219345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/173712fb10a791dedd5d4eb1f360d31300219345", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173712fb10a791dedd5d4eb1f360d31300219345/comments", "author": null, "committer": null, "parents": [{"sha": "535d0d1720fe48a9f37e139ddb84c519af79af23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/535d0d1720fe48a9f37e139ddb84c519af79af23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/535d0d1720fe48a9f37e139ddb84c519af79af23"}], "stats": {"total": 72, "additions": 41, "deletions": 31}, "files": [{"sha": "cae99f122c6962fb8661ada1170d3743aac5e4ab", "filename": "gcc/Makefile.in", "status": "modified", "additions": 41, "deletions": 31, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173712fb10a791dedd5d4eb1f360d31300219345/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173712fb10a791dedd5d4eb1f360d31300219345/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=173712fb10a791dedd5d4eb1f360d31300219345", "patch": "@@ -182,6 +182,10 @@ assertdir = $(tooldir)/include\n infodir = $(prefix)/info\n # Extension (if any) to put in installed man-page filename.\n manext = .1\n+exeext =\n+objext = .o\n+oldobjext = .o\n+\n # Directory in which to put man pages.\n mandir = $(prefix)/man/man1\n # Directory in which to find other cross-compilation tools and headers.\n@@ -459,7 +463,7 @@ FLAGS_TO_PASS = \\\n \n # A list of all the language-specific executables.\n # This is overridden by configure.\n-COMPILERS = cc1 cc1obj\n+COMPILERS = cc1$(exeext) cc1obj$(exeext)\n \n # Language-specific object files for C.\n C_OBJS = c-parse.o c-lang.o c-lex.o c-pragma.o \\\n@@ -576,7 +580,8 @@ BYTECODE_H = bytecode.h bc-emit.h bc-optab.h\n Makefile: $(srcdir)/Makefile.in $(srcdir)/configure $(srcdir)/version.c \\\n    $(srcdir)/config/$(xmake_file) $(srcdir)/config/$(tmake_file) \\\n    $(LANG_MAKEFILES)\n-\t$(SHELL) config.status\n+\tcp config.status config.run\n+\t$(SHELL) config.run\n \n all.internal: start.encap rest.encap\n # This is what to compile if making a cross-compiler.\n@@ -736,7 +741,7 @@ libgcc1.a: libgcc1.c $(CONFIG_H) $(LIB1FUNCS_EXTRA) config.status\n \t  rm -f $${name}.o; \\\n \t  $(OLDCC) $(CCLIBFLAGS) $(INCLUDES) -c -DL$${name} $(srcdir)/libgcc1.c; \\\n \t  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t  mv libgcc1.o $${name}.o; \\\n+\t  mv libgcc1$(oldobjext) $${name}.o; \\\n \t  $(OLDAR) $(OLDAR_FLAGS) tmplibgcc1.a $${name}.o; \\\n \t  rm -f $${name}.o; \\\n \tdone\n@@ -1016,8 +1021,9 @@ c-iterate.o: c-iterate.c $(CONFIG_H) $(TREE_H) $(RTL_H) c-tree.h flags.h\n \n # To make a configuration always use collect2, set USE_COLLECT2 to ld.\n ld: collect2\n-\trm -f ld\n-\tln collect2 ld\n+\trm -f ld$(exeext)\n+\tln collect2$(exeext) ld$(exeext) > /dev/null 2>&1\n+\t || cp collect2$(exeext) ld$(exeext)\n \n collect2 : collect2.o version.o $(LIBDEPS)\n # Don't try modifying collect2 (aka ld) in place--it might be linking this.\n@@ -1534,8 +1540,9 @@ bytecode.realclean: bytecode.clean\n \n # Making the preprocessor\n cpp: cccp\n-\t-rm -f cpp\n-\tln cccp cpp\n+\t-rm -f cpp$(exeext)\n+\tln cccp$(exeext) cpp$(exeext) > /dev/null 2>&1 \\\n+\t || cp cccp$(exeext) cpp$(exeext)\n cccp: cccp.o cexp.o version.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o cccp cccp.o cexp.o version.o $(LIBS)\n cexp.o: $(srcdir)/cexp.c $(CONFIG_H)\n@@ -1993,33 +2000,35 @@ install-common: native install-dir xgcc $(EXTRA_PARTS) lang.install-common\n \tfi\n # Install the driver program as $(target)-gcc\n # and also as either gcc (if native) or $(tooldir)/bin/gcc.\n-\t-if [ -f gcc-cross ] ; then \\\n-\t  rm -f $(bindir)/$(GCC_CROSS_NAME); \\\n-\t  $(INSTALL_PROGRAM) gcc-cross $(bindir)/$(GCC_CROSS_NAME); \\\n+\t-if [ -f gcc-cross$(exeext) ] ; then \\\n+\t  rm -f $(bindir)/$(GCC_CROSS_NAME)$(exeext); \\\n+\t  $(INSTALL_PROGRAM) gcc-cross$(exext) $(bindir)/$(GCC_CROSS_NAME)$(exeext); \\\n \t  if [ -d $(tooldir)/bin/. ] ; then \\\n-\t    rm -f $(tooldir)/bin/gcc; \\\n-\t    $(INSTALL_PROGRAM) gcc-cross $(tooldir)/bin/gcc; \\\n+\t    rm -f $(tooldir)/bin/gcc$(exeext); \\\n+\t    $(INSTALL_PROGRAM) gcc-cross$(exeext) $(tooldir)/bin/gcc$(exeext); \\\n \t  else true; fi; \\\n \telse \\\n-\t  rm -f $(bindir)/$(GCC_INSTALL_NAME); \\\n-\t  $(INSTALL_PROGRAM) xgcc $(bindir)/$(GCC_INSTALL_NAME); \\\n-\t  rm -f $(bindir)/$(target)-gcc-1; \\\n-\t  ln $(bindir)/$(GCC_INSTALL_NAME) $(bindir)/$(target)-gcc-1; \\\n-\t  mv $(bindir)/$(target)-gcc-1 $(bindir)/$(target)-gcc; \\\n+\t  rm -f $(bindir)/$(GCC_INSTALL_NAME)$(exeext); \\\n+\t  $(INSTALL_PROGRAM) xgcc$(exeext) $(bindir)/$(GCC_INSTALL_NAME)$(exeext); \\\n+\t  rm -f $(bindir)/$(target)-gcc-1$(exeext); \\\n+\t  ln $(bindir)/$(GCC_INSTALL_NAME)$(exeext) $(bindir)/$(target)-gcc-1$(exeext) \\\n+\t    > /dev/null 2>&1 \\\n+\t    || cp $(bindir)/$(GCC_INSTALL_NAME)$(exeext) $(bindir)/$(target)-gcc-1$(exeext); \\\n+\t  mv $(bindir)/$(target)-gcc-1$(exeext) $(bindir)/$(target)-gcc$(exeext); \\\n \tfi\n # Install protoize if it was compiled.\n-\t-if [ -f protoize ]; \\\n+\t-if [ -f protoize$(exeext) ]; \\\n \tthen \\\n-\t    rm -f $(bindir)/protoize; \\\n-\t    $(INSTALL_PROGRAM) protoize $(bindir)/protoize; \\\n-\t    rm -f $(bindir)/unprotoize; \\\n-\t    $(INSTALL_PROGRAM) unprotoize $(bindir)/unprotoize; \\\n+\t    rm -f $(bindir)/protoize$(exeext); \\\n+\t    $(INSTALL_PROGRAM) protoize$(exeext) $(bindir)/protoize$(exeext); \\\n+\t    rm -f $(bindir)/unprotoize$(exeext); \\\n+\t    $(INSTALL_PROGRAM) unprotoize$(exeext) $(bindir)/unprotoize$(exeext); \\\n \t    rm -f $(libsubdir)/SYSCALLS.c.X; \\\n \t    $(INSTALL_DATA) SYSCALLS.c.X $(libsubdir)/SYSCALLS.c.X; \\\n \t    chmod a-x $(libsubdir)/SYSCALLS.c.X; \\\n \tfi\n-\t-rm -f $(libsubdir)/cpp\n-\t$(INSTALL_PROGRAM) cpp $(libsubdir)/cpp\n+\t-rm -f $(libsubdir)/cpp$(exeexy)\n+\t$(INSTALL_PROGRAM) cpp$(exeext) $(libsubdir)/cpp$(exeext)\n \n # Install the info files.\n install-info: doc install-dir lang.install-info\n@@ -2134,17 +2143,17 @@ install-assert-h: assert.h install-dir\n \n # Use this target to install the program `collect2' under the name `ld'.\n install-collect2: collect2 install-dir\n-\t$(INSTALL_PROGRAM) collect2 $(libsubdir)/ld\n+\t$(INSTALL_PROGRAM) collect2$(exeext) $(libsubdir)/ld$(exeext)\n # Install the driver program as $(libsubdir)/gcc for collect2.\n-\t$(INSTALL_PROGRAM) xgcc $(libsubdir)/gcc\n+\t$(INSTALL_PROGRAM) xgcc$(exeext) $(libsubdir)/gcc$(exeext)\n \n # Cancel installation by deleting the installed files.\n uninstall: lang.uninstall\n \t-rm -rf $(libsubdir)\n-\t-rm -rf $(bindir)/$(GCC_INSTALL_NAME)\n-\t-rm -rf $(bindir)/$(GCC_CROSS_NAME)\n-\t-rm -rf $(bindir)/protoize\n-\t-rm -rf $(bindir)/unprotoize\n+\t-rm -rf $(bindir)/$(GCC_INSTALL_NAME)$(exeext)\n+\t-rm -rf $(bindir)/$(GCC_CROSS_NAME)$(exeext)\n+\t-rm -rf $(bindir)/protoize$(exeext)\n+\t-rm -rf $(bindir)/unprotoize$(exeext)\n \t-rm -rf $(mandir)/$(GCC_INSTALL_NAME)$(manext)\n \t-rm -rf $(mandir)/$(GCC_CROSS_NAME)$(manext)\n \t-rm -rf $(mandir)/cccp$(manext)\n@@ -2219,7 +2228,8 @@ distdir-start: doc $(srcdir)/INSTALL c-parse.y $(srcdir)/c-gperf.h objc-parse.y\n \tdone\n \tcd ginclude; \\\n \tfor file in *[0-9a-zA-Z+]; do \\\n-\t  ln $$file ../tmp/ginclude >/dev/null 2>&1 || cp $$file ../tmp/ginclude; \\\n+\t  ln $$file ../tmp/ginclude >/dev/null 2>&1 \\\n+\t   || cp $$file ../tmp/ginclude; \\\n \tdone\n \tcd objc; \\\n \tfor file in *[0-9a-zA-Z+]; do \\"}]}