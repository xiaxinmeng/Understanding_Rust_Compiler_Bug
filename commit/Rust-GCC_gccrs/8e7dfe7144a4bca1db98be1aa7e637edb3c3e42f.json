{"sha": "8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU3ZGZlNzE0NGE0YmNhMWRiOThiZTFhYTdlNjM3ZWRiM2MzZTQyZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-08-31T07:49:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-08-31T07:49:12Z"}, "message": "re PR middle-end/87138 (wrong code with TI multiplication with -O -march=k8 -fno-tree-fre -mavx512bw)\n\n\tPR middle-end/87138\n\t* expmed.c (expand_mult_const): Use immed_wide_int_const instead of\n\tgen_int_mode.  Formatting fixes.\n\n\t* gcc.target/i386/avx512bw-pr87138.c: New test.\n\nFrom-SVN: r264009", "tree": {"sha": "faa700061e1cd3148b49a828297a03a0624b9943", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faa700061e1cd3148b49a828297a03a0624b9943"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e227341f6e6c3ceef721d3839c8d9eb6292db70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e227341f6e6c3ceef721d3839c8d9eb6292db70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e227341f6e6c3ceef721d3839c8d9eb6292db70"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "f1be88bc06148c0c071e1f7ce27729858709a2f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f", "patch": "@@ -1,3 +1,9 @@\n+2018-08-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/87138\n+\t* expmed.c (expand_mult_const): Use immed_wide_int_const instead of\n+\tgen_int_mode.  Formatting fixes.\n+\n 2018-08-30  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* target.def (custom_function_descriptors): Improve documentation."}, {"sha": "29ce10b4de2f1fe7e6fd2a76d62aed231382ae7a", "filename": "gcc/expmed.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f", "patch": "@@ -3347,19 +3347,21 @@ expand_mult_const (machine_mode mode, rtx op0, HOST_WIDE_INT val,\n \t  /* Write a REG_EQUAL note on the last insn so that we can cse\n \t     multiplication sequences.  Note that if ACCUM is a SUBREG,\n \t     we've set the inner register and must properly indicate that.  */\n-          tem = op0, nmode = mode;\n-          accum_inner = accum;\n-          if (GET_CODE (accum) == SUBREG)\n+\t  tem = op0, nmode = mode;\n+\t  accum_inner = accum;\n+\t  if (GET_CODE (accum) == SUBREG)\n \t    {\n \t      accum_inner = SUBREG_REG (accum);\n \t      nmode = GET_MODE (accum_inner);\n \t      tem = gen_lowpart (nmode, op0);\n \t    }\n \n-          insn = get_last_insn ();\n-          set_dst_reg_note (insn, REG_EQUAL,\n-\t\t\t    gen_rtx_MULT (nmode, tem,\n-\t\t\t\t\t  gen_int_mode (val_so_far, nmode)),\n+\t  insn = get_last_insn ();\n+\t  wide_int wval_so_far\n+\t    = wi::uhwi (val_so_far,\n+\t\t\tGET_MODE_PRECISION (as_a <scalar_mode> (nmode)));\n+\t  rtx c = immed_wide_int_const (wval_so_far, nmode);\n+\t  set_dst_reg_note (insn, REG_EQUAL, gen_rtx_MULT (nmode, tem, c),\n \t\t\t    accum_inner);\n \t}\n     }"}, {"sha": "ac3722a58ebfa6981e3e732c6ded9a0f08be3bab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f", "patch": "@@ -1,3 +1,8 @@\n+2018-08-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/87138\n+\t* gcc.target/i386/avx512bw-pr87138.c: New test.\n+\n 2018-08-31  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/86328"}, {"sha": "46cecb985296b53ece3f3f87038ae4405cd410b8", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-pr87138.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr87138.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr87138.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr87138.c?ref=8e7dfe7144a4bca1db98be1aa7e637edb3c3e42f", "patch": "@@ -0,0 +1,29 @@\n+/* PR middle-end/87138 */\n+/* { dg-do run { target int128 } } */\n+/* { dg-options \"-O -fno-tree-fre -mavx512bw -mtune=k8\" } */\n+/* { dg-require-effective-target avx512bw } */\n+\n+#include \"avx512bw-check.h\"\n+\n+typedef int U __attribute__ ((vector_size (64)));\n+typedef __int128 V __attribute__ ((vector_size (64)));\n+V g, i;\n+\n+static inline void\n+foo (unsigned h, V j, U k, V n)\n+{\n+  k /= h;\n+  __builtin_memmove (&h, &n, 1);\n+  n[j[1]] *= 0x7FFFFFFFFFFFFFFF;\n+  j[k[5]] = 0;\n+  g = n;\n+  i = h + j + n;\n+}\n+\n+void\n+avx512bw_test ()\n+{\n+  foo (~0, (V) { }, (U) { 5 }, (V) { 3 });\n+  if (g[0] != (__int128) 3 * 0x7FFFFFFFFFFFFFFF)\n+    abort ();\n+}"}]}