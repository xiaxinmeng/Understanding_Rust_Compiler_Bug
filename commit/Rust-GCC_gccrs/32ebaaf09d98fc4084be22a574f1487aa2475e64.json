{"sha": "32ebaaf09d98fc4084be22a574f1487aa2475e64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJlYmFhZjA5ZDk4ZmM0MDg0YmUyMmE1NzRmMTQ4N2FhMjQ3NWU2NA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-12-14T20:10:48Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-12-14T20:10:48Z"}, "message": "Initial revision\n\nFrom-SVN: r10717", "tree": {"sha": "f7842f5d93893ffa03ed8ccf241aad44192c2e59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7842f5d93893ffa03ed8ccf241aad44192c2e59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32ebaaf09d98fc4084be22a574f1487aa2475e64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32ebaaf09d98fc4084be22a574f1487aa2475e64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32ebaaf09d98fc4084be22a574f1487aa2475e64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32ebaaf09d98fc4084be22a574f1487aa2475e64/comments", "author": null, "committer": null, "parents": [{"sha": "fe6d5f6576016ee4ac244ce987da38c0fac062ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe6d5f6576016ee4ac244ce987da38c0fac062ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe6d5f6576016ee4ac244ce987da38c0fac062ab"}], "stats": {"total": 288, "additions": 288, "deletions": 0}, "files": [{"sha": "c834926b0857ca686a9c3746ef35aaa7f0936c2c", "filename": "gcc/config/float-i32.h", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ebaaf09d98fc4084be22a574f1487aa2475e64/gcc%2Fconfig%2Ffloat-i32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ebaaf09d98fc4084be22a574f1487aa2475e64/gcc%2Fconfig%2Ffloat-i32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloat-i32.h?ref=32ebaaf09d98fc4084be22a574f1487aa2475e64", "patch": "@@ -0,0 +1,96 @@\n+/* float.h for target with only IEEE 32 bit floating point format */\n+#ifndef _FLOAT_H_\n+#define _FLOAT_H_\n+/* Produced by enquire version 4.3, CWI, Amsterdam */\n+\n+   /* Radix of exponent representation */\n+#undef FLT_RADIX\n+#define FLT_RADIX 2\n+   /* Number of base-FLT_RADIX digits in the significand of a float */\n+#undef FLT_MANT_DIG\n+#define FLT_MANT_DIG 24\n+   /* Number of decimal digits of precision in a float */\n+#undef FLT_DIG\n+#define FLT_DIG 6\n+   /* Addition rounds to 0: zero, 1: nearest, 2: +inf, 3: -inf, -1: unknown */\n+#undef FLT_ROUNDS\n+#define FLT_ROUNDS 1\n+   /* Difference between 1.0 and the minimum float greater than 1.0 */\n+#undef FLT_EPSILON\n+#define FLT_EPSILON 1.19209290e-07F\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised float */\n+#undef FLT_MIN_EXP\n+#define FLT_MIN_EXP (-125)\n+   /* Minimum normalised float */\n+#undef FLT_MIN\n+#define FLT_MIN 1.17549435e-38F\n+   /* Minimum int x such that 10**x is a normalised float */\n+#undef FLT_MIN_10_EXP\n+#define FLT_MIN_10_EXP (-37)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable float */\n+#undef FLT_MAX_EXP\n+#define FLT_MAX_EXP 128\n+   /* Maximum float */\n+#undef FLT_MAX\n+#define FLT_MAX 3.40282347e+38F\n+   /* Maximum int x such that 10**x is a representable float */\n+#undef FLT_MAX_10_EXP\n+#define FLT_MAX_10_EXP 38\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a double */\n+#undef DBL_MANT_DIG\n+#define DBL_MANT_DIG 24\n+   /* Number of decimal digits of precision in a double */\n+#undef DBL_DIG\n+#define DBL_DIG 6\n+   /* Difference between 1.0 and the minimum double greater than 1.0 */\n+#undef DBL_EPSILON\n+#define DBL_EPSILON 1.19209290e-07F\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised double */\n+#undef DBL_MIN_EXP\n+#define DBL_MIN_EXP (-125)\n+   /* Minimum normalised double */\n+#undef DBL_MIN\n+#define DBL_MIN 1.17549435e-38F\n+   /* Minimum int x such that 10**x is a normalised double */\n+#undef DBL_MIN_10_EXP\n+#define DBL_MIN_10_EXP (-37)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable double */\n+#undef DBL_MAX_EXP\n+#define DBL_MAX_EXP 128\n+   /* Maximum double */\n+#undef DBL_MAX\n+#define DBL_MAX 3.40282347e+38F\n+   /* Maximum int x such that 10**x is a representable double */\n+#undef DBL_MAX_10_EXP\n+#define DBL_MAX_10_EXP 38\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a long double */\n+#undef LDBL_MANT_DIG\n+#define LDBL_MANT_DIG 24\n+   /* Number of decimal digits of precision in a long double */\n+#undef LDBL_DIG\n+#define LDBL_DIG 6\n+   /* Difference between 1.0 and the minimum long double greater than 1.0 */\n+#undef LDBL_EPSILON\n+#define LDBL_EPSILON 1.19209290e-07F\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised long double */\n+#undef LDBL_MIN_EXP\n+#define LDBL_MIN_EXP (-125)\n+   /* Minimum normalised long double */\n+#undef LDBL_MIN\n+#define LDBL_MIN 1.17549435e-38F\n+   /* Minimum int x such that 10**x is a normalised long double */\n+#undef LDBL_MIN_10_EXP\n+#define LDBL_MIN_10_EXP (-37)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable long double */\n+#undef LDBL_MAX_EXP\n+#define LDBL_MAX_EXP 128\n+   /* Maximum long double */\n+#undef LDBL_MAX\n+#define LDBL_MAX 3.40282347e+38F\n+   /* Maximum int x such that 10**x is a representable long double */\n+#undef LDBL_MAX_10_EXP\n+#define LDBL_MAX_10_EXP 38\n+\n+#endif /*  _FLOAT_H_ */"}, {"sha": "7dbe4e92a10eb234ccef843e4064d007492ce6cc", "filename": "gcc/config/float-i64.h", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ebaaf09d98fc4084be22a574f1487aa2475e64/gcc%2Fconfig%2Ffloat-i64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ebaaf09d98fc4084be22a574f1487aa2475e64/gcc%2Fconfig%2Ffloat-i64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloat-i64.h?ref=32ebaaf09d98fc4084be22a574f1487aa2475e64", "patch": "@@ -0,0 +1,96 @@\n+/* float.h for target with IEEE 32 bit and 64 bit floating point formats */\n+#ifndef _FLOAT_H_\n+#define _FLOAT_H_\n+/* Produced by enquire version 4.3, CWI, Amsterdam */\n+\n+   /* Radix of exponent representation */\n+#undef FLT_RADIX\n+#define FLT_RADIX 2\n+   /* Number of base-FLT_RADIX digits in the significand of a float */\n+#undef FLT_MANT_DIG\n+#define FLT_MANT_DIG 24\n+   /* Number of decimal digits of precision in a float */\n+#undef FLT_DIG\n+#define FLT_DIG 6\n+   /* Addition rounds to 0: zero, 1: nearest, 2: +inf, 3: -inf, -1: unknown */\n+#undef FLT_ROUNDS\n+#define FLT_ROUNDS 1\n+   /* Difference between 1.0 and the minimum float greater than 1.0 */\n+#undef FLT_EPSILON\n+#define FLT_EPSILON 1.19209290e-07F\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised float */\n+#undef FLT_MIN_EXP\n+#define FLT_MIN_EXP (-125)\n+   /* Minimum normalised float */\n+#undef FLT_MIN\n+#define FLT_MIN 1.17549435e-38F\n+   /* Minimum int x such that 10**x is a normalised float */\n+#undef FLT_MIN_10_EXP\n+#define FLT_MIN_10_EXP (-37)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable float */\n+#undef FLT_MAX_EXP\n+#define FLT_MAX_EXP 128\n+   /* Maximum float */\n+#undef FLT_MAX\n+#define FLT_MAX 3.40282347e+38F\n+   /* Maximum int x such that 10**x is a representable float */\n+#undef FLT_MAX_10_EXP\n+#define FLT_MAX_10_EXP 38\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a double */\n+#undef DBL_MANT_DIG\n+#define DBL_MANT_DIG 53\n+   /* Number of decimal digits of precision in a double */\n+#undef DBL_DIG\n+#define DBL_DIG 15\n+   /* Difference between 1.0 and the minimum double greater than 1.0 */\n+#undef DBL_EPSILON\n+#define DBL_EPSILON 2.2204460492503131e-16\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised double */\n+#undef DBL_MIN_EXP\n+#define DBL_MIN_EXP (-1021)\n+   /* Minimum normalised double */\n+#undef DBL_MIN\n+#define DBL_MIN 2.2250738585072014e-308\n+   /* Minimum int x such that 10**x is a normalised double */\n+#undef DBL_MIN_10_EXP\n+#define DBL_MIN_10_EXP (-307)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable double */\n+#undef DBL_MAX_EXP\n+#define DBL_MAX_EXP 1024\n+   /* Maximum double */\n+#undef DBL_MAX\n+#define DBL_MAX 1.7976931348623157e+308\n+   /* Maximum int x such that 10**x is a representable double */\n+#undef DBL_MAX_10_EXP\n+#define DBL_MAX_10_EXP 308\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a long double */\n+#undef LDBL_MANT_DIG\n+#define LDBL_MANT_DIG 53\n+   /* Number of decimal digits of precision in a long double */\n+#undef LDBL_DIG\n+#define LDBL_DIG 15\n+   /* Difference between 1.0 and the minimum long double greater than 1.0 */\n+#undef LDBL_EPSILON\n+#define LDBL_EPSILON 2.2204460492503131e-16L\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised long double */\n+#undef LDBL_MIN_EXP\n+#define LDBL_MIN_EXP (-1021)\n+   /* Minimum normalised long double */\n+#undef LDBL_MIN\n+#define LDBL_MIN 2.2250738585072014e-308L\n+   /* Minimum int x such that 10**x is a normalised long double */\n+#undef LDBL_MIN_10_EXP\n+#define LDBL_MIN_10_EXP (-307)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable long double */\n+#undef LDBL_MAX_EXP\n+#define LDBL_MAX_EXP 1024\n+   /* Maximum long double */\n+#undef LDBL_MAX\n+#define LDBL_MAX 1.7976931348623157e+308L\n+   /* Maximum int x such that 10**x is a representable long double */\n+#undef LDBL_MAX_10_EXP\n+#define LDBL_MAX_10_EXP 308\n+\n+#endif /*  _FLOAT_H_ */"}, {"sha": "3c87f795ef2dd1d1bc4229638a5ca0d77eac08bb", "filename": "gcc/config/float-vax.h", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ebaaf09d98fc4084be22a574f1487aa2475e64/gcc%2Fconfig%2Ffloat-vax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ebaaf09d98fc4084be22a574f1487aa2475e64/gcc%2Fconfig%2Ffloat-vax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloat-vax.h?ref=32ebaaf09d98fc4084be22a574f1487aa2475e64", "patch": "@@ -0,0 +1,96 @@\n+/* float.h for target with VAX floating point formats */\n+#ifndef _FLOAT_H_\n+#define _FLOAT_H_\n+/* Produced by enquire version 4.3, CWI, Amsterdam */\n+\n+   /* Radix of exponent representation */\n+#undef FLT_RADIX\n+#define FLT_RADIX 2\n+   /* Number of base-FLT_RADIX digits in the significand of a float */\n+#undef FLT_MANT_DIG\n+#define FLT_MANT_DIG 24\n+   /* Number of decimal digits of precision in a float */\n+#undef FLT_DIG\n+#define FLT_DIG 6\n+   /* Addition rounds to 0: zero, 1: nearest, 2: +inf, 3: -inf, -1: unknown */\n+#undef FLT_ROUNDS\n+#define FLT_ROUNDS 1\n+   /* Difference between 1.0 and the minimum float greater than 1.0 */\n+#undef FLT_EPSILON\n+#define FLT_EPSILON 1.19209290e-07F\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised float */\n+#undef FLT_MIN_EXP\n+#define FLT_MIN_EXP (-127)\n+   /* Minimum normalised float */\n+#undef FLT_MIN\n+#define FLT_MIN 2.93873588e-39F\n+   /* Minimum int x such that 10**x is a normalised float */\n+#undef FLT_MIN_10_EXP\n+#define FLT_MIN_10_EXP (-38)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable float */\n+#undef FLT_MAX_EXP\n+#define FLT_MAX_EXP 127\n+   /* Maximum float */\n+#undef FLT_MAX\n+#define FLT_MAX 1.70141173e+38F\n+   /* Maximum int x such that 10**x is a representable float */\n+#undef FLT_MAX_10_EXP\n+#define FLT_MAX_10_EXP 38\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a double */\n+#undef DBL_MANT_DIG\n+#define DBL_MANT_DIG 56\n+   /* Number of decimal digits of precision in a double */\n+#undef DBL_DIG\n+#define DBL_DIG 16\n+   /* Difference between 1.0 and the minimum double greater than 1.0 */\n+#undef DBL_EPSILON\n+#define DBL_EPSILON 2.77555756156289135e-17\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised double */\n+#undef DBL_MIN_EXP\n+#define DBL_MIN_EXP (-127)\n+   /* Minimum normalised double */\n+#undef DBL_MIN\n+#define DBL_MIN 2.93873587705571877e-39\n+   /* Minimum int x such that 10**x is a normalised double */\n+#undef DBL_MIN_10_EXP\n+#define DBL_MIN_10_EXP (-38)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable double */\n+#undef DBL_MAX_EXP\n+#define DBL_MAX_EXP 127\n+   /* Maximum double */\n+#undef DBL_MAX\n+#define DBL_MAX 1.70141183460469229e+38\n+   /* Maximum int x such that 10**x is a representable double */\n+#undef DBL_MAX_10_EXP\n+#define DBL_MAX_10_EXP 38\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a long double */\n+#undef LDBL_MANT_DIG\n+#define LDBL_MANT_DIG 56\n+   /* Number of decimal digits of precision in a long double */\n+#undef LDBL_DIG\n+#define LDBL_DIG 16\n+   /* Difference between 1.0 and the minimum long double greater than 1.0 */\n+#undef LDBL_EPSILON\n+#define LDBL_EPSILON 2.77555756156289135e-17\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised long double */\n+#undef LDBL_MIN_EXP\n+#define LDBL_MIN_EXP (-127)\n+   /* Minimum normalised long double */\n+#undef LDBL_MIN\n+#define LDBL_MIN 2.93873587705571877e-39\n+   /* Minimum int x such that 10**x is a normalised long double */\n+#undef LDBL_MIN_10_EXP\n+#define LDBL_MIN_10_EXP (-38)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable long double */\n+#undef LDBL_MAX_EXP\n+#define LDBL_MAX_EXP 127\n+   /* Maximum long double */\n+#undef LDBL_MAX\n+#define LDBL_MAX 1.70141183460469229e+38\n+   /* Maximum int x such that 10**x is a representable long double */\n+#undef LDBL_MAX_10_EXP\n+#define LDBL_MAX_10_EXP 38\n+\n+#endif /*  _FLOAT_H_ */"}]}