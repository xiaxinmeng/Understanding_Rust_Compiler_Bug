{"sha": "d599b81f46dd2f76deb23313b92a82e8f64bec84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU5OWI4MWY0NmRkMmY3NmRlYjIzMzEzYjkyYTgyZThmNjRiZWM4NA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2000-11-01T01:31:06Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-11-01T01:31:06Z"}, "message": "* c-semantics.c (genrtl_do_stmt): Special case do/while(0).\n\nFrom-SVN: r37177", "tree": {"sha": "55374d4a060bf50c26ed3ef478b1f462ccfa5e6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55374d4a060bf50c26ed3ef478b1f462ccfa5e6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d599b81f46dd2f76deb23313b92a82e8f64bec84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d599b81f46dd2f76deb23313b92a82e8f64bec84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d599b81f46dd2f76deb23313b92a82e8f64bec84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d599b81f46dd2f76deb23313b92a82e8f64bec84/comments", "author": null, "committer": null, "parents": [{"sha": "1426f761420d7726479d9a1174a6f97e3fb79acb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1426f761420d7726479d9a1174a6f97e3fb79acb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1426f761420d7726479d9a1174a6f97e3fb79acb"}], "stats": {"total": 35, "additions": 24, "deletions": 11}, "files": [{"sha": "3b12182d7d22be098ce2c0eea3f5fc3157816c1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d599b81f46dd2f76deb23313b92a82e8f64bec84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d599b81f46dd2f76deb23313b92a82e8f64bec84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d599b81f46dd2f76deb23313b92a82e8f64bec84", "patch": "@@ -1,3 +1,7 @@\n+2000-10-31  Richard Henderson  <rth@redhat.com>\n+\n+\t* c-semantics.c (genrtl_do_stmt): Special case do/while(0).\n+\n 2000-10-31  Nick Clifton  <nickc@redhat.com>\n \n \t* config/arm/unknown-elf.h (UNIQUE_SECTION_P): Do not allow"}, {"sha": "ccc3c7d4e7743b3365b208819609114bec5bd480", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d599b81f46dd2f76deb23313b92a82e8f64bec84/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d599b81f46dd2f76deb23313b92a82e8f64bec84/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=d599b81f46dd2f76deb23313b92a82e8f64bec84", "patch": "@@ -480,19 +480,28 @@ void\n genrtl_do_stmt (t)\n      tree t;\n {\n-  tree cond;\n-  emit_nop ();\n-  emit_line_note (input_filename, lineno);\n-  expand_start_loop_continue_elsewhere (1);\n+  tree cond = DO_COND (t);\n+\n+  /* Recognize the common special-case of do { ... } while (0) and do\n+     not emit the loop widgetry in this case.  In particular this\n+     avoids cluttering the rtl with dummy loop notes, which can affect\n+     alignment of adjacent labels.  */\n+  if (cond == integer_zero_node)\n+    expand_stmt (DO_BODY (t));\n+  else\n+    {\n+      emit_nop ();\n+      emit_line_note (input_filename, lineno);\n+      expand_start_loop_continue_elsewhere (1);\n \n-  expand_stmt (DO_BODY (t));\n+      expand_stmt (DO_BODY (t));\n \n-  expand_loop_continue_here ();\n-\n-  cond = expand_cond (DO_COND (t));\n-  emit_line_note (input_filename, lineno);\n-  expand_exit_loop_if_false (0, cond);\n-  expand_end_loop ();\n+      expand_loop_continue_here ();\n+      cond = expand_cond (cond);\n+      emit_line_note (input_filename, lineno);\n+      expand_exit_loop_if_false (0, cond);\n+      expand_end_loop ();\n+    }\n }\n \n /* Build the node for a return statement and return it. */"}]}