{"sha": "370ae5992fa38d0161157ce8b237174d220054bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcwYWU1OTkyZmEzOGQwMTYxMTU3Y2U4YjIzNzE3NGQyMjAwNTRiZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-07-21T08:50:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-07-21T08:50:57Z"}, "message": "re PR debug/45003 (VTA issues with sign/zero extension and debug temporaries)\n\n\tPR debug/45003\n\t* var-tracking.c (reverse_op): Also handle {SIGN,ZERO}_EXTEND of\n\ta MEM.\n\t* dwarf2out.c (loc_descriptor): Don't handle SIGN_EXTEND nor\n\tZERO_EXTEND here.\n\n\t* gcc.dg/guality/pr45003-2.c: New test.\n\t* gcc.dg/guality/pr45003-3.c: New test.\n\nFrom-SVN: r162364", "tree": {"sha": "b6a2b0a3ebd043807579644d37d17ec082758093", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6a2b0a3ebd043807579644d37d17ec082758093"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/370ae5992fa38d0161157ce8b237174d220054bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370ae5992fa38d0161157ce8b237174d220054bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/370ae5992fa38d0161157ce8b237174d220054bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370ae5992fa38d0161157ce8b237174d220054bf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a431e913309586a8b284a30bcee0d5c3ece1f991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a431e913309586a8b284a30bcee0d5c3ece1f991", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a431e913309586a8b284a30bcee0d5c3ece1f991"}], "stats": {"total": 88, "additions": 80, "deletions": 8}, "files": [{"sha": "2d702330376013ee7adf828fcd18be611e8e216b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370ae5992fa38d0161157ce8b237174d220054bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370ae5992fa38d0161157ce8b237174d220054bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=370ae5992fa38d0161157ce8b237174d220054bf", "patch": "@@ -1,3 +1,11 @@\n+2010-07-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/45003\n+\t* var-tracking.c (reverse_op): Also handle {SIGN,ZERO}_EXTEND of\n+\ta MEM.\n+\t* dwarf2out.c (loc_descriptor): Don't handle SIGN_EXTEND nor\n+\tZERO_EXTEND here.\n+\n 2010-07-20  Richard Henderson  <rth@redhat.com>\n \n \t* vxworks.c (vxworks_emutls_var_fields): Pass locus to build_decls."}, {"sha": "ce35c9182e1e2f99033476de097b2ee9090d890d", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370ae5992fa38d0161157ce8b237174d220054bf/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370ae5992fa38d0161157ce8b237174d220054bf/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=370ae5992fa38d0161157ce8b237174d220054bf", "patch": "@@ -14254,11 +14254,6 @@ loc_descriptor (rtx rtl, enum machine_mode mode,\n       loc_result = reg_loc_descriptor (rtl, initialized);\n       break;\n \n-    case SIGN_EXTEND:\n-    case ZERO_EXTEND:\n-      loc_result = loc_descriptor (XEXP (rtl, 0), mode, initialized);\n-      break;\n-\n     case MEM:\n       loc_result = mem_loc_descriptor (XEXP (rtl, 0), GET_MODE (rtl),\n \t\t\t\t       initialized);"}, {"sha": "3cac73836592ea5ac33c1149d80f207977da3b77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370ae5992fa38d0161157ce8b237174d220054bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370ae5992fa38d0161157ce8b237174d220054bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=370ae5992fa38d0161157ce8b237174d220054bf", "patch": "@@ -2,6 +2,10 @@\n \n \t* gcc.dg/guality/asm-1.c: New test.\n \n+\tPR debug/45003\n+\t* gcc.dg/guality/pr45003-2.c: New test.\n+\t* gcc.dg/guality/pr45003-3.c: New test.\n+\n 2010-07-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/44697"}, {"sha": "dcdba237ff4dcc0c0d67d7c7e7f45d8f96b60089", "filename": "gcc/testsuite/gcc.dg/guality/pr45003-2.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370ae5992fa38d0161157ce8b237174d220054bf/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370ae5992fa38d0161157ce8b237174d220054bf/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-2.c?ref=370ae5992fa38d0161157ce8b237174d220054bf", "patch": "@@ -0,0 +1,31 @@\n+/* PR debug/45003 */\n+/* { dg-do run { target { x86_64-*-* && lp64 } } } */\n+/* { dg-options \"-g\" } */\n+\n+int __attribute__((noinline))\n+foo (unsigned short *p)\n+{\n+  int a = *p;\n+  asm volatile (\"nop\" : : \"D\" ((int) *p));\n+  asm volatile (\"nop\" : : \"D\" ((int) *p));\t/* { dg-final { gdb-test 10 \"a\" \"0x8078\" } } */\n+  return 0;\n+}\n+\n+int __attribute__((noinline))\n+bar (short *p)\n+{\n+  unsigned int a = *p;\n+  asm volatile (\"nop\" : : \"D\" ((unsigned int) *p));\n+  asm volatile (\"nop\" : : \"D\" ((unsigned int) *p));\t/* { dg-final { gdb-test 19 \"a\" \"0xffff8078\" } } */\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  unsigned short us = 0x8078;\n+  foo (&us);\n+  short s = -32648;\n+  bar (&s);\n+  return 0;\n+}"}, {"sha": "3adc4f2383e71ee4e045b99d8169209c95930930", "filename": "gcc/testsuite/gcc.dg/guality/pr45003-3.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370ae5992fa38d0161157ce8b237174d220054bf/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370ae5992fa38d0161157ce8b237174d220054bf/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-3.c?ref=370ae5992fa38d0161157ce8b237174d220054bf", "patch": "@@ -0,0 +1,31 @@\n+/* PR debug/45003 */\n+/* { dg-do run { target { x86_64-*-* && lp64 } } } */\n+/* { dg-options \"-g\" } */\n+\n+int __attribute__((noinline))\n+foo (unsigned short *p)\n+{\n+  int a = (short) *p;\n+  asm volatile (\"nop\" : : \"D\" ((int) *p));\n+  asm volatile (\"nop\" : : \"D\" ((int) *p));\t/* { dg-final { gdb-test 10 \"a\" \"-32648\" } } */\n+  return 0;\n+}\n+\n+int __attribute__((noinline))\n+bar (short *p)\n+{\n+  unsigned int a = (unsigned short) *p;\n+  asm volatile (\"nop\" : : \"D\" ((unsigned int) *p));\n+  asm volatile (\"nop\" : : \"D\" ((unsigned int) *p));\t/* { dg-final { gdb-test 19 \"a\" \"0x8078\" } } */\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  unsigned short us = 0x8078;\n+  foo (&us);\n+  short s = -32648;\n+  bar (&s);\n+  return 0;\n+}"}, {"sha": "d1c584a8435a480f9d68ee03e99c5eee473f7f71", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370ae5992fa38d0161157ce8b237174d220054bf/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370ae5992fa38d0161157ce8b237174d220054bf/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=370ae5992fa38d0161157ce8b237174d220054bf", "patch": "@@ -5187,16 +5187,19 @@ reverse_op (rtx val, const_rtx expr)\n     case XOR:\n     case NOT:\n     case NEG:\n+      if (!REG_P (XEXP (src, 0)))\n+\treturn NULL_RTX;\n+      break;\n     case SIGN_EXTEND:\n     case ZERO_EXTEND:\n+      if (!REG_P (XEXP (src, 0)) && !MEM_P (XEXP (src, 0)))\n+\treturn NULL_RTX;\n       break;\n     default:\n       return NULL_RTX;\n     }\n \n-  if (!REG_P (XEXP (src, 0))\n-      || !SCALAR_INT_MODE_P (GET_MODE (src))\n-      || XEXP (src, 0) == cfa_base_rtx)\n+  if (!SCALAR_INT_MODE_P (GET_MODE (src)) || XEXP (src, 0) == cfa_base_rtx)\n     return NULL_RTX;\n \n   v = cselib_lookup (XEXP (src, 0), GET_MODE (XEXP (src, 0)), 0);"}]}