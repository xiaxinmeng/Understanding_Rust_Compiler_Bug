{"sha": "1b2914a08690ba27783457d7ebe250afba9bd9f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIyOTE0YTA4NjkwYmEyNzc4MzQ1N2Q3ZWJlMjUwYWZiYTliZDlmMg==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2005-10-18T00:22:53Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2005-10-18T00:22:53Z"}, "message": "Fix IA-64 libada build failure, abnormal call edges on non-call insns.\n\nPR rtl-optimization/17356\n* cfgrtl.c (purge_dead_edges): Check for EDGE_ABNORMAL_CALL before\nchecking for EDGE_EH.\n\nFrom-SVN: r105533", "tree": {"sha": "ed724d81437e2a094d7d1b08694e9eb665cee483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed724d81437e2a094d7d1b08694e9eb665cee483"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b2914a08690ba27783457d7ebe250afba9bd9f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b2914a08690ba27783457d7ebe250afba9bd9f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b2914a08690ba27783457d7ebe250afba9bd9f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b2914a08690ba27783457d7ebe250afba9bd9f2/comments", "author": null, "committer": null, "parents": [{"sha": "55ae1d648c1e23c4627716a0a83efb88f24ae32e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ae1d648c1e23c4627716a0a83efb88f24ae32e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ae1d648c1e23c4627716a0a83efb88f24ae32e"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "c7c6e6c1c6feac954b9f3f8b998c66ee658c5a3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b2914a08690ba27783457d7ebe250afba9bd9f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b2914a08690ba27783457d7ebe250afba9bd9f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b2914a08690ba27783457d7ebe250afba9bd9f2", "patch": "@@ -1,3 +1,9 @@\n+2005-10-17  James E Wilson  <wilson@specifix.com>\n+\n+\tPR rtl-optimization/17356\n+\t* cfgrtl.c (purge_dead_edges): Check for EDGE_ABNORMAL_CALL before\n+\tchecking for EDGE_EH.\n+\n 2005-10-17  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* config/sparc/sparc.c (function_arg_slotno): In 64-bit mode, align"}, {"sha": "00a219d48028008f78f42260b84cbe72b34c0869", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b2914a08690ba27783457d7ebe250afba9bd9f2/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b2914a08690ba27783457d7ebe250afba9bd9f2/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=1b2914a08690ba27783457d7ebe250afba9bd9f2", "patch": "@@ -2300,19 +2300,23 @@ purge_dead_edges (basic_block bb)\n   /* Cleanup abnormal edges caused by exceptions or non-local gotos.  */\n   for (ei = ei_start (bb->succs); (e = ei_safe_edge (ei)); )\n     {\n-      if (e->flags & EDGE_EH)\n+      /* We must check for the most restrictive condition first.  Since\n+\t an abnormal call edge is always an EH edge, but an EH edge is not\n+\t always an abnormal call edge, we must check for an abnormal call\n+\t edge first.  */\n+      if (e->flags & EDGE_ABNORMAL_CALL)\n \t{\n-\t  if (can_throw_internal (BB_END (bb)))\n+\t  if (CALL_P (BB_END (bb))\n+\t      && (! (note = find_reg_note (insn, REG_EH_REGION, NULL))\n+\t\t  || INTVAL (XEXP (note, 0)) >= 0))\n \t    {\n \t      ei_next (&ei);\n \t      continue;\n \t    }\n \t}\n-      else if (e->flags & EDGE_ABNORMAL_CALL)\n+      else if (e->flags & EDGE_EH)\n \t{\n-\t  if (CALL_P (BB_END (bb))\n-\t      && (! (note = find_reg_note (insn, REG_EH_REGION, NULL))\n-\t\t  || INTVAL (XEXP (note, 0)) >= 0))\n+\t  if (can_throw_internal (BB_END (bb)))\n \t    {\n \t      ei_next (&ei);\n \t      continue;"}]}