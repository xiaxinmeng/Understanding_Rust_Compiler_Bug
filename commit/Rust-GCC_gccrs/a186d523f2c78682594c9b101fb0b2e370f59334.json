{"sha": "a186d523f2c78682594c9b101fb0b2e370f59334", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE4NmQ1MjNmMmM3ODY4MjU5NGM5YjEwMWZiMGIyZTM3MGY1OTMzNA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2015-11-09T04:30:26Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2015-11-09T04:30:26Z"}, "message": "Silence obstack.c -Wc++compat warning\n\n\t* obstack.c (_obstack_newchunk): Silence -Wc++compat warning.\n\t(_obstack_begin_worker): Likewise.  Move assignment to h->chunk\n\tafter alloc failure check.\n\nFrom-SVN: r229989", "tree": {"sha": "c1be301479b11951aef532b613c5b1aa57cc63c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1be301479b11951aef532b613c5b1aa57cc63c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a186d523f2c78682594c9b101fb0b2e370f59334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a186d523f2c78682594c9b101fb0b2e370f59334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a186d523f2c78682594c9b101fb0b2e370f59334", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a186d523f2c78682594c9b101fb0b2e370f59334/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0e525fe184ae711b4bbb37b9728776938b703de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0e525fe184ae711b4bbb37b9728776938b703de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0e525fe184ae711b4bbb37b9728776938b703de"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "7821e70e57aeb1c7bcbe3f48d045d1dfabc689df", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a186d523f2c78682594c9b101fb0b2e370f59334/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a186d523f2c78682594c9b101fb0b2e370f59334/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=a186d523f2c78682594c9b101fb0b2e370f59334", "patch": "@@ -1,3 +1,9 @@\n+2015-11-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* obstack.c (_obstack_newchunk): Silence -Wc++compat warning.\n+\t(_obstack_begin_worker): Likewise.  Move assignment to h->chunk\n+\tafter alloc failure check.\n+\n 2015-11-09  Alan Modra  <amodra@gmail.com>\n \n \tPR gdb/17133"}, {"sha": "6d8d67261ddc470733ad6ccdccd925dd8afe9e8d", "filename": "libiberty/obstack.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a186d523f2c78682594c9b101fb0b2e370f59334/libiberty%2Fobstack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a186d523f2c78682594c9b101fb0b2e370f59334/libiberty%2Fobstack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fobstack.c?ref=a186d523f2c78682594c9b101fb0b2e370f59334", "patch": "@@ -138,9 +138,10 @@ _obstack_begin_worker (struct obstack *h,\n   h->chunk_size = size;\n   h->alignment_mask = alignment - 1;\n \n-  chunk = h->chunk = call_chunkfun (h, h->chunk_size);\n+  chunk = (struct _obstack_chunk *) call_chunkfun (h, h->chunk_size);\n   if (!chunk)\n     (*obstack_alloc_failed_handler) ();\n+  h->chunk = chunk;\n   h->next_free = h->object_base = __PTR_ALIGN ((char *) chunk, chunk->contents,\n                                                alignment - 1);\n   h->chunk_limit = chunk->limit = (char *) chunk + h->chunk_size;\n@@ -202,7 +203,7 @@ _obstack_newchunk (struct obstack *h, _OBSTACK_SIZE_T length)\n \n   /* Allocate and initialize the new chunk.  */\n   if (obj_size <= sum1 && sum1 <= sum2)\n-    new_chunk = call_chunkfun (h, new_size);\n+    new_chunk = (struct _obstack_chunk *) call_chunkfun (h, new_size);\n   if (!new_chunk)\n     (*obstack_alloc_failed_handler)();\n   h->chunk = new_chunk;"}]}