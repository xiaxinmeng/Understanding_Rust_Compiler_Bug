{"sha": "0780f386d71137d9d3f836a9e296b25c34446cb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc4MGYzODZkNzExMzdkOWQzZjgzNmE5ZTI5NmIyNWMzNDQ0NmNiMA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-01-11T16:36:41Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-01-11T16:36:41Z"}, "message": "insure eabi destructors get called\n\nFrom-SVN: r10962", "tree": {"sha": "1a4b6cdbf8e9852079d5a598198a98ea492e5fd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a4b6cdbf8e9852079d5a598198a98ea492e5fd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0780f386d71137d9d3f836a9e296b25c34446cb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0780f386d71137d9d3f836a9e296b25c34446cb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0780f386d71137d9d3f836a9e296b25c34446cb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0780f386d71137d9d3f836a9e296b25c34446cb0/comments", "author": null, "committer": null, "parents": [{"sha": "ffc1e7b2e9b1fb7feef1c158f442afc32729c7f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffc1e7b2e9b1fb7feef1c158f442afc32729c7f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffc1e7b2e9b1fb7feef1c158f442afc32729c7f1"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "69a78af7cc4ac35212fbbe928c9ef896f293b8b2", "filename": "gcc/config/rs6000/eabi-ctors.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0780f386d71137d9d3f836a9e296b25c34446cb0/gcc%2Fconfig%2Frs6000%2Feabi-ctors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0780f386d71137d9d3f836a9e296b25c34446cb0/gcc%2Fconfig%2Frs6000%2Feabi-ctors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-ctors.c?ref=0780f386d71137d9d3f836a9e296b25c34446cb0", "patch": "@@ -34,15 +34,24 @@ extern func_ptr __CTOR_END__ [];\n extern func_ptr __DTOR_LIST__[];\n extern func_ptr __DTOR_END__ [];\n \n+extern void __do_global_ctors (void);\n+extern void __do_global_dtors (void);\n+\n+void (*__atexit)(func_ptr);\n+\n /* Call all global constructors */\n void\n __do_global_ctors (void)\n {\n   func_ptr *ptr = &__CTOR_LIST__[0];\n   func_ptr *end = &__CTOR_END__[0];\n \n+  if (__atexit)\n+    __atexit (__do_global_dtors);\n+\n   for ( ; ptr != end; ptr++)\n-    (*ptr)();\n+    if (*ptr)\n+      (*ptr)();\n }\n \n /* Call all global destructors */\n@@ -53,6 +62,7 @@ __do_global_dtors (void)\n   func_ptr *end = &__DTOR_END__[0];\n \n   for ( ; ptr != end; ptr++)\n-    (*ptr)();\n+    if (*ptr)\n+      (*ptr)();\n }\n "}, {"sha": "af5b7de8bf62f5d96b3e247490caecf151a231b3", "filename": "gcc/config/rs6000/eabi.asm", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0780f386d71137d9d3f836a9e296b25c34446cb0/gcc%2Fconfig%2Frs6000%2Feabi.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0780f386d71137d9d3f836a9e296b25c34446cb0/gcc%2Fconfig%2Frs6000%2Feabi.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi.asm?ref=0780f386d71137d9d3f836a9e296b25c34446cb0", "patch": "@@ -80,6 +80,13 @@\n .Ldtore = .-.LCTOC1\n \t.long\t__DTOR_END__\t\t\t/* end of .dtor section */\n \n+.Linit = .-.LCTOC1\n+\t.long\t.Linit_p\t\t\t/* address of variable to say we've been called */\n+\n+\t.data\n+.Linit_p:\n+\t.long\t0\n+\n \t.text\n .Lptr:\n \t.long\t.LCTOC1-.Laddr\t\t\t/* PC relative pointer to .got2 */\n@@ -92,9 +99,14 @@ FUNC_START(__eabi)\n \tlwz\t11,(.Lptr-.Laddr)(12)\t\t/* linker generated address of .LCTOC1 */\n \tadd\t11,11,12\t\t\t/* correct to real pointer */\n \tlwz\t12,.Ltable(11)\t\t\t/* get linker's idea of where .Laddr is */\n+\tlwz\t10,.Linit(11)\t\t\t/* address of init flag */\n \tsubf.\t12,12,11\t\t\t/* calculate difference */\n \tmtlr\t0\t\t\t\t/* restore link register */\n-\tbc\t4,2,.Lreloc\t\t\t/* skip if we need to relocate */\n+\tlwzx\t9,10,12\t\t\t\t/* done flag */\n+\tcmplwi\t2,9,0\t\t\t\t/* init flag != 0? */\n+\tbnelr\t2\t\t\t\t/* return now, if we've been called already */\n+\tstwx\t1,10,12\t\t\t\t/* store a non-zero value in the done flag */\n+\tbne\t0,.Lreloc\t\t\t/* skip if we need to relocate */\n \n /* Only load up register 2 if there is a .got section */\n "}, {"sha": "1be7f52e598da7f776effc969e5565afedcb0e5c", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0780f386d71137d9d3f836a9e296b25c34446cb0/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0780f386d71137d9d3f836a9e296b25c34446cb0/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=0780f386d71137d9d3f836a9e296b25c34446cb0", "patch": "@@ -2917,7 +2917,7 @@\n \t\t (match_operand:SF 2 \"gpc_reg_operand\" \"f\")))]\n   \"! TARGET_POWERPC && TARGET_HARD_FLOAT\"\n   \"{fm|fmul} %0,%1,%2\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"dmul\")])\n \n (define_expand \"divsf3\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"\")\n@@ -2940,7 +2940,7 @@\n \t\t(match_operand:SF 2 \"gpc_reg_operand\" \"f\")))]\n   \"! TARGET_POWERPC && TARGET_HARD_FLOAT\"\n   \"{fd|fdiv} %0,%1,%2\"\n-  [(set_attr \"type\" \"sdiv\")])\n+  [(set_attr \"type\" \"ddiv\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")"}]}