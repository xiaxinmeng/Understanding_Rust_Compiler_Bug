{"sha": "9ba08321129e8f2f73e78a138c58d21177d6a1fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJhMDgzMjExMjllOGYyZjczZTc4YTEzOGM1OGQyMTE3N2Q2YTFmYw==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-21T11:11:47Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-21T11:11:47Z"}, "message": "[ARM/AArch64][testsuite] Add vsubl tests, put most of the code in common with vaddl in vXXXl.inc.\n\n2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vXXXl.inc: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vsubl.c: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vaddl.c: Use code from\n\tvXXXl.inc.\n\nFrom-SVN: r219937", "tree": {"sha": "b58e9416df9eaa84c195d459a10953ddea77f136", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b58e9416df9eaa84c195d459a10953ddea77f136"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ba08321129e8f2f73e78a138c58d21177d6a1fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ba08321129e8f2f73e78a138c58d21177d6a1fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ba08321129e8f2f73e78a138c58d21177d6a1fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ba08321129e8f2f73e78a138c58d21177d6a1fc/comments", "author": null, "committer": null, "parents": [{"sha": "09b9cd1f181e2fa7e193b4a9d4cd35ac170f90c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b9cd1f181e2fa7e193b4a9d4cd35ac170f90c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09b9cd1f181e2fa7e193b4a9d4cd35ac170f90c5"}], "stats": {"total": 202, "additions": 129, "deletions": 73}, "files": [{"sha": "6b9948ed32ee27f787bc208b098e357528f8f52f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba08321129e8f2f73e78a138c58d21177d6a1fc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba08321129e8f2f73e78a138c58d21177d6a1fc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9ba08321129e8f2f73e78a138c58d21177d6a1fc", "patch": "@@ -1,3 +1,10 @@\n+2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vXXXl.inc: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vsubl.c: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vaddl.c: Use code from\n+\tvXXXl.inc.\n+\n 2015-01-21  Renlin Li  <renlin.li@arm.com>\n \n \t* g++.dg/tls/thread_local5.C: Skip when dejagnu wrapper is used."}, {"sha": "bd4c8fba2093d91679a2c8a6027838ff71c0f356", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vXXXl.inc", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba08321129e8f2f73e78a138c58d21177d6a1fc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvXXXl.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba08321129e8f2f73e78a138c58d21177d6a1fc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvXXXl.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvXXXl.inc?ref=9ba08321129e8f2f73e78a138c58d21177d6a1fc", "patch": "@@ -0,0 +1,70 @@\n+#define FNNAME1(NAME) exec_ ## NAME\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+void FNNAME (INSN_NAME) (void)\n+{\n+  /* Basic test: y=vaddl(x1,x2), then store the result.  */\n+#define TEST_VADDL1(INSN, T1, T2, W, W2, N)\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W2, N) =\t\t\t\t\t\\\n+    INSN##_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\t\\\n+\t\t   VECT_VAR(vector2, T1, W, N));\t\t\t\\\n+  vst1q_##T2##W2(VECT_VAR(result, T1, W2, N), VECT_VAR(vector_res, T1, W2, N))\n+\n+#define TEST_VADDL(INSN, T1, T2, W, W2, N)\t\\\n+  TEST_VADDL1(INSN, T1, T2, W, W2, N)\n+\n+  DECL_VARIABLE(vector, int, 8, 8);\n+  DECL_VARIABLE(vector, int, 16, 4);\n+  DECL_VARIABLE(vector, int, 32, 2);\n+  DECL_VARIABLE(vector, uint, 8, 8);\n+  DECL_VARIABLE(vector, uint, 16, 4);\n+  DECL_VARIABLE(vector, uint, 32, 2);\n+\n+  DECL_VARIABLE(vector2, int, 8, 8);\n+  DECL_VARIABLE(vector2, int, 16, 4);\n+  DECL_VARIABLE(vector2, int, 32, 2);\n+  DECL_VARIABLE(vector2, uint, 8, 8);\n+  DECL_VARIABLE(vector2, uint, 16, 4);\n+  DECL_VARIABLE(vector2, uint, 32, 2);\n+\n+  DECL_VARIABLE(vector_res, int, 16, 8);\n+  DECL_VARIABLE(vector_res, int, 32, 4);\n+  DECL_VARIABLE(vector_res, int, 64, 2);\n+  DECL_VARIABLE(vector_res, uint, 16, 8);\n+  DECL_VARIABLE(vector_res, uint, 32, 4);\n+  DECL_VARIABLE(vector_res, uint, 64, 2);\n+\n+  clean_results ();\n+\n+  /* Initialize input \"vector\" from \"buffer\".  */\n+  VLOAD(vector, buffer, , int, s, 8, 8);\n+  VLOAD(vector, buffer, , int, s, 16, 4);\n+  VLOAD(vector, buffer, , int, s, 32, 2);\n+  VLOAD(vector, buffer, , uint, u, 8, 8);\n+  VLOAD(vector, buffer, , uint, u, 16, 4);\n+  VLOAD(vector, buffer, , uint, u, 32, 2);\n+\n+  /* Choose init value arbitrarily.  */\n+  VDUP(vector2, , int, s, 8, 8, -13);\n+  VDUP(vector2, , int, s, 16, 4, -14);\n+  VDUP(vector2, , int, s, 32, 2, -16);\n+  VDUP(vector2, , uint, u, 8, 8, 0xf3);\n+  VDUP(vector2, , uint, u, 16, 4, 0xfff1);\n+  VDUP(vector2, , uint, u, 32, 2, 0xfffffff0);\n+\n+  /* Execute the tests.  */\n+  TEST_VADDL(INSN_NAME, int, s, 8, 16, 8);\n+  TEST_VADDL(INSN_NAME, int, s, 16, 32, 4);\n+  TEST_VADDL(INSN_NAME, int, s, 32, 64, 2);\n+  TEST_VADDL(INSN_NAME, uint, u, 8, 16, 8);\n+  TEST_VADDL(INSN_NAME, uint, u, 16, 32, 4);\n+  TEST_VADDL(INSN_NAME, uint, u, 32, 64, 2);\n+\n+  CHECK_RESULTS (TEST_MSG, \"\");\n+}\n+\n+int main (void)\n+{\n+  FNNAME (INSN_NAME) ();\n+  return 0;\n+}"}, {"sha": "020d9f84a1b081c3cd1a3aca977328cdfb5d4004", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vaddl.c", "status": "modified", "additions": 4, "deletions": 73, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba08321129e8f2f73e78a138c58d21177d6a1fc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba08321129e8f2f73e78a138c58d21177d6a1fc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddl.c?ref=9ba08321129e8f2f73e78a138c58d21177d6a1fc", "patch": "@@ -2,6 +2,9 @@\n #include \"arm-neon-ref.h\"\n #include \"compute-ref-data.h\"\n \n+#define INSN_NAME vaddl\n+#define TEST_MSG \"VADDL\"\n+\n /* Expected results.  */\n VECT_VAR_DECL(expected,int,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n \t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n@@ -45,76 +48,4 @@ VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n \t\t\t\t\t   0x33333333, 0x33333333 };\n \n-#define INSN_NAME vaddl\n-#define TEST_MSG \"VADDL\"\n-\n-#define FNNAME1(NAME) exec_ ## NAME\n-#define FNNAME(NAME) FNNAME1(NAME)\n-\n-void FNNAME (INSN_NAME) (void)\n-{\n-  /* Basic test: y=vaddl(x1,x2), then store the result.  */\n-#define TEST_VADDL1(INSN, T1, T2, W, W2, N)\t\t\t\t\\\n-  VECT_VAR(vector_res, T1, W2, N) =\t\t\t\t\t\\\n-    INSN##_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\t\\\n-\t\t   VECT_VAR(vector2, T1, W, N));\t\t\t\\\n-  vst1q_##T2##W2(VECT_VAR(result, T1, W2, N), VECT_VAR(vector_res, T1, W2, N))\n-\n-#define TEST_VADDL(INSN, T1, T2, W, W2, N)\t\\\n-  TEST_VADDL1(INSN, T1, T2, W, W2, N)\n-\n-  DECL_VARIABLE(vector, int, 8, 8);\n-  DECL_VARIABLE(vector, int, 16, 4);\n-  DECL_VARIABLE(vector, int, 32, 2);\n-  DECL_VARIABLE(vector, uint, 8, 8);\n-  DECL_VARIABLE(vector, uint, 16, 4);\n-  DECL_VARIABLE(vector, uint, 32, 2);\n-\n-  DECL_VARIABLE(vector2, int, 8, 8);\n-  DECL_VARIABLE(vector2, int, 16, 4);\n-  DECL_VARIABLE(vector2, int, 32, 2);\n-  DECL_VARIABLE(vector2, uint, 8, 8);\n-  DECL_VARIABLE(vector2, uint, 16, 4);\n-  DECL_VARIABLE(vector2, uint, 32, 2);\n-\n-  DECL_VARIABLE(vector_res, int, 16, 8);\n-  DECL_VARIABLE(vector_res, int, 32, 4);\n-  DECL_VARIABLE(vector_res, int, 64, 2);\n-  DECL_VARIABLE(vector_res, uint, 16, 8);\n-  DECL_VARIABLE(vector_res, uint, 32, 4);\n-  DECL_VARIABLE(vector_res, uint, 64, 2);\n-\n-  clean_results ();\n-\n-  /* Initialize input \"vector\" from \"buffer\".  */\n-  VLOAD(vector, buffer, , int, s, 8, 8);\n-  VLOAD(vector, buffer, , int, s, 16, 4);\n-  VLOAD(vector, buffer, , int, s, 32, 2);\n-  VLOAD(vector, buffer, , uint, u, 8, 8);\n-  VLOAD(vector, buffer, , uint, u, 16, 4);\n-  VLOAD(vector, buffer, , uint, u, 32, 2);\n-\n-  /* Choose init value arbitrarily.  */\n-  VDUP(vector2, , int, s, 8, 8, -13);\n-  VDUP(vector2, , int, s, 16, 4, -14);\n-  VDUP(vector2, , int, s, 32, 2, -16);\n-  VDUP(vector2, , uint, u, 8, 8, 0xf3);\n-  VDUP(vector2, , uint, u, 16, 4, 0xfff1);\n-  VDUP(vector2, , uint, u, 32, 2, 0xfffffff0);\n-\n-  /* Execute the tests.  */\n-  TEST_VADDL(INSN_NAME, int, s, 8, 16, 8);\n-  TEST_VADDL(INSN_NAME, int, s, 16, 32, 4);\n-  TEST_VADDL(INSN_NAME, int, s, 32, 64, 2);\n-  TEST_VADDL(INSN_NAME, uint, u, 8, 16, 8);\n-  TEST_VADDL(INSN_NAME, uint, u, 16, 32, 4);\n-  TEST_VADDL(INSN_NAME, uint, u, 32, 64, 2);\n-\n-  CHECK_RESULTS (TEST_MSG, \"\");\n-}\n-\n-int main (void)\n-{\n-  FNNAME (INSN_NAME) ();\n-  return 0;\n-}\n+#include \"vXXXl.inc\""}, {"sha": "b765b2befb5a2e62fbcfae5bfa11a584886f7871", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vsubl.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba08321129e8f2f73e78a138c58d21177d6a1fc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvsubl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba08321129e8f2f73e78a138c58d21177d6a1fc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvsubl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvsubl.c?ref=9ba08321129e8f2f73e78a138c58d21177d6a1fc", "patch": "@@ -0,0 +1,48 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+#define INSN_NAME vsubl\n+#define TEST_MSG \"VSUBL\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xfffd, 0xfffe, 0xffff, 0x0,\n+\t\t\t\t\t0x1, 0x2, 0x3, 0x4 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xfffffffe, 0xffffffff, 0x0, 0x1 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x0, 0x1 };\n+VECT_VAR_DECL(expected,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xfffd, 0xfffe, 0xffff, 0x0,\n+\t\t\t\t\t 0x1, 0x2, 0x3, 0x4 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xffffffff, 0x0, 0x1, 0x2 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x0, 0x1 };\n+VECT_VAR_DECL(expected,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t   0x33333333, 0x33333333 };\n+\n+#include \"vXXXl.inc\""}]}