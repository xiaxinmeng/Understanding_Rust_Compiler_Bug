{"sha": "46639003c86c36421c93da0da89469d551a30884", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY2MzkwMDNjODZjMzY0MjFjOTNkYTBkYTg5NDY5ZDU1MWEzMDg4NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-08-21T08:30:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-08-21T08:30:38Z"}, "message": "20000606-1.c: New test.\n\n\t* gcc.c-torture/compile/20000606-1.c: New test.\n\t* gcc.c-torture/compile/20000728-1.c: New test.\n\t* gcc.c-torture/execute/20000801-1.c: New test.\n\t* gcc.c-torture/execute/20000801-2.c: New test.\n\t* gcc.c-torture/execute/20000819-1.c: New test.\n\t* gcc.c-torture/execute/20000819-1.x: XFAIL.\n\t* gcc.dg/20000629-1.c: New test.\n\t* gcc.dg/20000724-1.c: New test.\n\t* gcc.dg/20000807-1.c: New test.\n\nFrom-SVN: r35834", "tree": {"sha": "b79ee18798d686ce3420c6158b50b8a6ca679648", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b79ee18798d686ce3420c6158b50b8a6ca679648"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46639003c86c36421c93da0da89469d551a30884", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46639003c86c36421c93da0da89469d551a30884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46639003c86c36421c93da0da89469d551a30884", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46639003c86c36421c93da0da89469d551a30884/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "461f200c268cf93ff4ebd048b39c3f100f6938a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/461f200c268cf93ff4ebd048b39c3f100f6938a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/461f200c268cf93ff4ebd048b39c3f100f6938a9"}], "stats": {"total": 249, "additions": 249, "deletions": 0}, "files": [{"sha": "d0c10da4456a5237396282dafb9ee5309e8b2716", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46639003c86c36421c93da0da89469d551a30884", "patch": "@@ -1,3 +1,15 @@\n+2000-08-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/compile/20000606-1.c: New test.\n+\t* gcc.c-torture/compile/20000728-1.c: New test.\n+\t* gcc.c-torture/execute/20000801-1.c: New test.\n+\t* gcc.c-torture/execute/20000801-2.c: New test.\n+\t* gcc.c-torture/execute/20000819-1.c: New test.\n+\t* gcc.c-torture/execute/20000819-1.x: XFAIL.\n+\t* gcc.dg/20000629-1.c: New test.\n+\t* gcc.dg/20000724-1.c: New test.\n+\t* gcc.dg/20000807-1.c: New test.\n+\n Sun Aug 20 01:41:35 MSD 2000 Dennis Chernoivanov <cdi@sparc.spb.su>\n \n \t* gcc.dg/cpp/pragma-1.c: New test."}, {"sha": "93977c0931a0a00bff3a67a297743472d84f9bfb", "filename": "gcc/testsuite/gcc.c-torture/compile/20000606-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000606-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000606-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000606-1.c?ref=46639003c86c36421c93da0da89469d551a30884", "patch": "@@ -0,0 +1,10 @@\n+typedef struct _foo foo;\n+extern foo bar;\n+struct _foo {\n+  int a;\n+};\n+\n+void baz(void)\n+{\n+  bar.a = 0;\n+}"}, {"sha": "f56d940834eb200e6eaa60b87ef410a19bb1d580", "filename": "gcc/testsuite/gcc.c-torture/compile/20000728-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000728-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000728-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000728-1.c?ref=46639003c86c36421c93da0da89469d551a30884", "patch": "@@ -0,0 +1,16 @@\n+struct clock {\n+  long sec; long usec;\n+};\n+        \n+int foo(void)\n+{\n+  struct clock clock_old = {0, 0};\n+\n+  for (;;) {\n+    long foo;\n+\n+    if (foo == clock_old.sec && 0 == clock_old.usec);\n+  }\n+  return 0;\n+}\n+                                        "}, {"sha": "1bc386ea2528b2387c757eaa47700e95f4d18c96", "filename": "gcc/testsuite/gcc.c-torture/execute/20000801-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000801-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000801-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000801-1.c?ref=46639003c86c36421c93da0da89469d551a30884", "patch": "@@ -0,0 +1,39 @@\n+extern void abort(void);\n+extern void exit(int);\n+\n+void\n+foo (char *bp, unsigned n)\n+{\n+  register char c;\n+  register char *ep = bp + n;\n+  register char *sp;\n+\n+  while (bp < ep)\n+    {\n+      sp = bp + 3;\n+      c = *sp;\n+      *sp = *bp;\n+      *bp++ = c;\n+      sp = bp + 1;\n+      c = *sp;\n+      *sp = *bp;\n+      *bp++ = c;\n+      bp += 2;\n+    }\n+}\n+\n+int main(void)\n+{\n+  int one = 1;\n+\n+  if (sizeof(int) != 4 * sizeof(char))\n+    exit(0);\n+\n+  foo((char *)&one, sizeof(one));\n+  foo((char *)&one, sizeof(one));\n+\n+  if (one != 1)\n+    abort();\n+\n+  exit(0);\n+}"}, {"sha": "5bb17b5db5e906b1a49c0340aef1f2c9c45761cf", "filename": "gcc/testsuite/gcc.c-torture/execute/20000801-2.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000801-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000801-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000801-2.c?ref=46639003c86c36421c93da0da89469d551a30884", "patch": "@@ -0,0 +1,40 @@\n+extern void abort(void);\n+extern void exit(int);\n+int bar(void);\n+int baz(void);\n+\n+struct foo {\n+  struct foo *next;\n+};\n+\n+struct foo *test(struct foo *node)\n+{\n+  while (node) {\n+    if (bar() && !baz())\n+      break;\n+    node = node->next;\n+  }\n+  return node;\n+}\n+\n+int bar (void)\n+{\n+  return 0;\n+}\n+\n+int baz (void)\n+{\n+  return 0;\n+}\n+\n+int main(void)\n+{\n+  struct foo a, b, *c;\n+\n+  a.next = &b;\n+  b.next = (struct foo *)0;\n+  c = test(&a);\n+  if (c)\n+    abort();\n+  exit (0);\n+}"}, {"sha": "e1c2769c08d481dc481b6362d8938d9b4c93efa3", "filename": "gcc/testsuite/gcc.c-torture/execute/20000819-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000819-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000819-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000819-1.c?ref=46639003c86c36421c93da0da89469d551a30884", "patch": "@@ -0,0 +1,17 @@\n+int a[2] = { 2, 0 };\n+\n+void foo(int *sp, int cnt)\n+{\n+  int *p, *top;\n+\n+  top = sp; sp -= cnt;\n+\n+  for(p = sp; p <= top; p++)\n+    if (*p < 2) exit(0);\n+}\n+\n+int main()\n+{\n+  foo(a + 1, 1);\n+  abort();\n+}"}, {"sha": "2f397b96e51b8dd77baecd30d403a01dfab48caf", "filename": "gcc/testsuite/gcc.c-torture/execute/20000819-1.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000819-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000819-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000819-1.x?ref=46639003c86c36421c93da0da89469d551a30884", "patch": "@@ -0,0 +1,2 @@\n+set torture_execute_xfail \"*-*-*\"\n+return 0"}, {"sha": "b8c7f286d6978a304894e54196b73defa04b2b3e", "filename": "gcc/testsuite/gcc.dg/20000629-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.dg%2F20000629-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.dg%2F20000629-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20000629-1.c?ref=46639003c86c36421c93da0da89469d551a30884", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g\" } */\n+\n+void foo(register char *p)\n+{\n+  char c, *q, *sp;\n+  while (1) {\n+    *p++=0;\n+    sp=p+1;\n+    c=*sp;\n+    *p++=0;\n+  }\n+}"}, {"sha": "17d2e7ee0d9efe61a809f2da1d20091bc654dfdc", "filename": "gcc/testsuite/gcc.dg/20000724-1.c", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.dg%2F20000724-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.dg%2F20000724-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20000724-1.c?ref=46639003c86c36421c93da0da89469d551a30884", "patch": "@@ -0,0 +1,63 @@\n+/* { dg-do run { target i?86-*-linux* } } */\n+/* { dg-options \"-O2 -fomit-frame-pointer\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+struct s {\n+  struct { int a; } a;\n+  int b;\n+  struct { struct { int a; } a; struct t { struct t *a, *b; } b; } c;\n+};\n+\n+int bar(int (*fn)(void *), void *arg, unsigned long flags)\n+{\n+  return 0;\n+}\n+\n+int baz(void *x)\n+{\n+  return 0;\n+}\n+\n+void do_check (struct s *) asm (\"do_check\") __attribute__((regparm(1)));\n+\n+void do_check(struct s *x)\n+{\n+  if (x->a.a || x->b || x->c.a.a)\n+    abort();\n+  if (x->c.b.a != &x->c.b || x->c.b.b != &x->c.b)\n+    abort();\n+}\n+\n+asm (\"\n+___checkme:\n+  pushl %eax; pushl %ebx; pushl %ecx; pushl %edx; pushl %esi; pushl %edi; pushl $0; pushl $0\n+  pushl $0; pushl $0; pushl $0; pushl $0; pushl $0; pushl $0; pushl $0; pushl $0\n+  movl %ecx, %eax\n+  call do_check\n+  popl %eax; popl %eax; popl %eax; popl %eax; popl %eax; popl %eax; popl %eax; popl %eax\n+  popl %eax; popl %eax; popl %edi; popl %esi; popl %edx; popl %ecx; popl %ebx; popl %eax\n+  ret\n+\");\n+\n+extern inline void do_asm(struct s * x)\n+{\n+  asm volatile(\"call ___checkme\" : : \"c\" (x) : \"memory\");\n+}\n+\n+int foo(void)\n+{\n+  struct s x = { { 0 }, 0, { { 0 }, { &x.c.b, &x.c.b } } };\n+  bar(baz, &x, 1);\n+  do_asm(&x);\n+  bar(baz, &x, 1);\n+  do_asm(&x);\n+  return 0;\n+}\n+\n+int main()\n+{\n+  foo();\n+  exit(0);\n+}"}, {"sha": "f654764948320ed2bba0b49bafd342f3484e98d4", "filename": "gcc/testsuite/gcc.dg/20000807-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.dg%2F20000807-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46639003c86c36421c93da0da89469d551a30884/gcc%2Ftestsuite%2Fgcc.dg%2F20000807-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20000807-1.c?ref=46639003c86c36421c93da0da89469d551a30884", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do compile { target i?86-*-* } } */\n+/* { dg-options \"-Os -fpic\" } */\n+\n+#include <string.h>\n+\n+typedef struct\n+{\n+  char *a;\n+  char *b;\n+} *foo;\n+\n+void\n+bar (foo x)\n+{\n+  char *c = x->b;\n+  char *d = (void *)0;\n+  unsigned int e = 0, f = 0, g;\n+  while (*c != ':')\n+    if (*c == '%')\n+      {\n+        ++c;\n+        switch (*c++)\n+          {\n+          case 'N':\n+            g = strlen (x->a);\n+            if (e + g >= f) {\n+\t\tchar *h = d;\n+\t\tf += 256 + g;\n+\t\td = (char *) __builtin_alloca (f);\n+\t\tmemcpy (d, h, e);\n+\t    };\n+            memcpy (&d[e], x->a, g);\n+            e += g;\n+            break;\n+\t  }\n+      }\n+}"}]}