{"sha": "1194fc79773b7e3abcf36123c58995e1129315e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE5NGZjNzk3NzNiN2UzYWJjZjM2MTIzYzU4OTk1ZTExMjkzMTVlMg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2004-01-27T12:49:31Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2004-01-27T12:49:31Z"}, "message": "re PR middle-end/13779 ([3.4 only] powerpc64: incorrect initialization of 'long long' with constant)\n\n\t* Makefile.in (bt-load.o): Depend on except.h.\n\t* bt-load.c (except.h): #include.\n\t(compute_defs_uses_and_gen): If insn at end of BB can throw\n\twithin this function, consider registers used by it unavailable for\n\tbtr migration.\n\t(move_btr_def): If insn at end of BB can throw, insert before rather\n\tthan after.\n\n\t* flags.h (flag_btr_bb_exclusive): Declare.\n\t* toplev.c (flag_btr_bb_exclusive): New variable.\n\t(f_options): Add btr-bb-exclusive.\n\t* bt-load.c (augment_live_range): Restore old behaviour if\n\tflag_btr_bb_exclusive is set.\n\t* common.opt: Add entry for -fbtr-bb-exclusive.\n\t* opts.c (common_handle_options): Same.\n\t* doc/invoke.texi: Document -fbtr-bb-exclusive.\n\n\t* bt-load.c (btrs_live_at_end): New variable.\n\t(compute_defs_uses_and_gen): Compute its pointed-to array.\n\t(clear_btr_from_live_range, add_btr_to_live_range): Update it.\n\t(augment_live_range): When augmenting with a new dominator,\n\tuse only its btrs_live_at_end set, but also add in the full set\n\tof the old dominator.\n\t(btr_def_live_range): Use btrs_live_at_end.\n\t(move_btr_def): Set other_btr_uses_before_def, and move new set\n\tto the end of the basic block, if appropriate.\n\t(migrate_btr_defs): Allocate and free btrs_live_at_end.\n\n\t* bt-load.c (basic_block_freq): Remove outdated comment.\n\n2004-01-27  Alan Modra  <amodra@bigpond.net.au>\n\n\t* config/rs6000/rs6000.h: Correct target_flags free bits comment.\n\t(PREDICATE_CODES): Remove duplicate.\n\t* config/rs6000/linux64.h (CPP_SYSV_SPEC): Don't define.\n\t(SUBSUBTARGET_OVERRIDE_OPTIONS): Disallow 32 bit TARGET_PROFILE_KERNEL.\n\t(MASK_PROFILE_KERNEL): Adjust define.\n\n2004-01-27  Jakub Jelinek  <jakub@redhat.com>\n\n\t* config/i386/i386.c (ix86_constant_alignment): Decrease alignment\n\tof long string literals from 32 bytes to sizeof (void *) when !-Os\n\tand to 1 with -Os.\n\n2004-01-26  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/h8300/h8300.c (h8300_tiny_constant_address_p): Accept\n\tconstant addresses in the normal mode.\n\n2004-01-26  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n\n\t* system.h (CHAR_BITFIELD): Delete.\n\t(BOOL_BITFIELD): New.\n\t* c-decl.c (c_scope): Use BOOL_BITFIELD.\n\t* gengtype-lex.l: Recognize BOOL_BITFIELD instead of CHAR_BITFIELD.\n\n2004-01-26  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/arc/arc.c (TARGET_PROMOTE_FUNCTION_ARGS): New.\n\t(TARGET_PROMOTE_FUNCTION_RETURN): Likewise.\n\t(TARGET_PROMOTE_PROTOTYPES): Likewise.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t(arc_return_in_memory): Likewise.\n\t* config/arc/arc.h (PROMOTE_FUNCTION_ARGS): Remove.\n\t(PROMOTE_FUNCTION_RETURN): Likewise.\n\t(RETURN_IN_MEMORY): Likewise.\n\t(STRUCT_VALUE): Likewise.\n\n2004-01-26  Richard Henderson  <rth@redhat.com>\n\n\t* c-parse.in (extension): Use itype.\n\t(SAVE_EXT_FLAGS): Don't allocate a tree.\n\t(RESTORE_EXT_FLAGS): Don't read a tree.\n\n2004-01-26  Jan Hubicka  <jh@suse.cz>\n\n\t* cselib.c (discard_useless_values):  Clear out value pointer pointing\n\tto datastructure to be recycled.\n\n2004-01-25  Jan Hubicka  <jh@suse.cz>\n\n\t* genextract.c (main): Do not output the memset when not checking.\n\n2004-01-26  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/h8300/h8300.c (h8300_tiny_constant_address_p): Use a\n\tswitch statement instead of a chain of if statements.\n\n2004-01-26  Jeff Law  <law@redhat.com>\n\n\t* doc/contrib.texi: Minor cleanup for Paolo Carlini's entry.  Add\n\tacute accents for Petur Runolfsson's entry.\n\n2004-01-26  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/pdp11/pdp11.c (TARGET_STRUCT_VALUE_RTX): New.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t* config/pdp11/pdp11.h (STRUCT_VALUE): Remove.\n\t(RETURN_IN_MEMORY): Likewise.\n\n2004-01-26  Fariborz Jahanian <fjahanian@apple.com>\n\n         * config/rs6000/rs6000.c (rs6000_emit_move): split slow\n         unaligned load/store into smaller loads and stores.\n\n2004-01-26  Fariborz Jahanian <fjahanian@apple.com>\n\n        * function.c (assign_parms): Do not assign\n        long long argument to memory in prologue if\n        is it loaded into register.\n\n2004-01-26  Fariborz Jahanian <fjahanian@apple.com>\n\n\t PR middle-end/13779\n         * expr.c (emit_group_load): split constant\n         correctly into register components of PARALLEL insn.\n\n2004-01-26  Fariborz Jahanian <fjahanian@apple.com>\n\n\t* gcc/config/rs6000/rs6000.md (save_stack_nonlocal):\n\tUse adjust_address_nv directly with appropriate mode.\n\t(restore_stack_nonlocal): Ditto.\n\n2004-01-26  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/xtensa/xtensa-protos.h: Remove the prototype for\n\txtensa_builtin_saveregs.\n\t* config/xtensa/xtensa.c (TARGET_PROMOTE_FUNCTION_ARGS): New.\n\t(TARGET_PROMOTE_FUNCTION_RETURN): Likewise.\n\t(TARGET_PROMOTE_PROTOTYPES): Likewise.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t(TARGET_EXPAND_BUILTIN_SAVEREGS): Likewise.\n\t(xtensa_builtin_saveregs): Make it static.\n\t(xtensa_return_in_memory): New.\n\t* config/xtensa/xtensa.h (PROMOTE_FUNCTION_ARGS: Remove.\n\t(PROMOTE_FUNCTION_RETURN): Likewise.\n\t(PROMOTE_PROTOTYPES): Likewise.\n\t(STRUCT_VALUE): Likewise.\n\t(RETURN_IN_MEMORY): Likewise.\n\t(EXPAND_BUILTIN_SAVEREGS): Likewise.\n\n2004-01-26  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/arm/arm.c (TARGET_SETUP_INCOMING_VARARGS): New.\n\t(arm_setup_incoming_varargs): Likewise.\n\t* config/arm/arm.h (SETUP_INCOMING_VARARGS): Remove.\n\n2004-01-26  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/cris/cris.c (TARGET_SETUP_INCOMING_VARARGS): New.\n\t(cris_setup_incoming_varargs): Likewise.\n\t* config/cris/cris.h (SETUP_INCOMING_VARARGS): Remove.\n\n2004-01-26  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/ns32k/ns32k.c (TARGET_STRUCT_VALUE_RTX): New.\n\t(ns32k_struct_value_rtx): Likewise.\n\t* config/ns32k/ns32k.h (STRUCT_VALUE_REGNUM): Rename to\n\tNS32K_STRUCT_VALUE_REGNUM.\n\n2004-01-26  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/arm/arm.c (TARGET_PROMOTE_FUNCTION_ARGS): New.\n\t(TARGET_PROMOTE_PROTOTYPES): Likewise.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(arm_struct_value_rtx): Likewise.\n\t* config/arm/arm.h (PROMOTE_FUNCTION_ARGS): Remove.\n\t(STRUCT_VALUE): Likewise.\n\t(STRUCT_VALUE_REGNUM): Likewise.\n\t(PROMOTE_PROTOTYPES): Likewise.\n\n2004-01-26  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/ia64/ia64-protos.h: Remove the prototype for\n\tia64_setup_incoming_varargs and ia64_return_in_memory.\n\t* config/ia64/ia64.c (TARGET_STRUCT_VALUE_RTX): New.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t(TARGET_SETUP_INCOMING_VARARGS): Likewise.\n\t(TARGET_STRICT_ARGUMENT_NAMING): Likewise.\n\t(ia64_setup_incoming_varargs): Adjust the arguments to meet\n\tthe requirement of TARGET_SETUP_INCOMING_VARARGS.\n\t(ia64_return_in_memory): Make it static.  Change the return\n\ttype to bool from int.  Add an argument.\n\t(ia64_struct_value_rtx): New.\n\t* config/ia64/ia64.h: Remove commented-out definitions of\n\tPROMOTE_FUNCTION_ARGS, PROMOTE_FUNCTION_RETURN, and\n\tPROMOTE_PROTOTYPES.\n\t(RETURN_IN_MEMORY): Remove.\n\t(STRUCT_VALUE_REGNUM): Likewise.\n\t(STRICT_ARGUMENT_NAMING): Likewise.\n\n2004-01-26  Eric Botcazou  <ebotcazou@libertysurf.fr>\n\n\tPR target/13666\n\t* config/sparc/sparc.c (function_arg_union_value): New function.\n\t(function_arg): Use it to deal with unions.\n\t(function_value): Likewise.  Define 'regbase' only for ARCH64.\n\tReplace a conditional statement by a simpler one.\n\n2004-01-26  Richard Sandiford  <rsandifo@redhat.com>\n\n\t* config/mips/mips.c (mips16_optimize_gp): Delete.\n\t(mips_reorg): Don't call it.\n\n2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n\n\t* config/c4x/c4x.md (addqi3_noclobber): Move up pecking order.\n\t(floatunsqihf2): Remove operand 6.\n\t(fixhfqi_set, fix_trunchfqi2, fixuns_trunchfqi2): Group with other\n\tfix patterns.\n\t(ldi_conditional, ldf_conditional): Validate operands.\n\n2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n\n\t* config/c4x/c4x.h (BCT_CHECK_LOOP_ITERATIONS): Remove.\n\t(HAVE_GAS_HIDDEN): Undefine as interim measure.\n\n2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n\n\t* config/c4x/c4x.c (c4x_legitimate_address_p):  Invalidate direct\n\tmemory references if TARGET_EXPOSE_LDP nonzero.\n\n2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n\n\t* config/c4x/c4x.c (legitimize_operands): Truncate invalid shift counts.\n\n2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n\n\t* config/c4x/c4x.c (c4x_valid_operands): More aggressively reject\n\tinvalid operand combinations.\n\n2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n\n\t* config/c4x/c4x.c (c4x_check_legit_addr): Rename to\n\tc4x_legitimate_address_p.  Fix post_modify check.\n\n\t* config/c4x/c4x-protos.h (c4x_check_legit_addr): Adjust.\n\t* config/c4x/c4x.h (c4x_check_legit_addr): Adjust.\n\n2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/pa/pa-protos.h: Remove the prototype for\n\thppa_builtin_saveregs.  Add a prototype for\n\tpa_return_in_memory.\n\t* config/pa/pa.c (TARGET_PROMOTE_FUNCTION_RETURN): New.\n\t(TARGET_PROMOTE_PROTOTYPES): Likewise.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t(TARGET_EXPAND_BUILTIN_SAVEREGS): Likewise.\n\t(pa_struct_value_rtx): Likewise.\n\t(pa_return_in_memory): Likewise.\n\t* config/pa/pa.h (STRUCT_VALUE_REGNUM): Rename to\n\tPA_STRUCT_VALUE_REGNUM.\n\t(INIT_CUMULATIVE_ARGS): Use pa_return_in_memory.\n\t(EXPAND_BUILTIN_SAVEREGS): Remove.\n\t(PROMOTE_PROTOTYPES): Likewise.\n\t(PROMOTE_FUNCTION_RETURN): Likewise.\n\n2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/vax/vax.c (TARGET_PROMOTE_PROTOTYPES): New.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(vax_struct_value_rtx): Likewise.\n\t* config/vax/vax.h (STRUCT_VALUE_REGNUM): Rename to\n\tVAX_STRUCT_VALUE_REGNUM.\n\t(PROMOTE_PROTOTYPES): Remove.\n\n2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n\n        * config/c4x/c4x.h (LEGITIMIZE_RELOAD_ADDRESS):  Handle symref.\n\n2003-04-25  Chris Demetriou  <cgd@broadcom.com>\n\n\t* config/mips/mips.h (ISA_HAS_HILO_INTERLOCKS): MIPS32, MIPS32r2,\n\tand MIPS64 have HI/LO interlocks.  Update comment.\n\n2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/stormy16/stormy16-protos.h: Remove the prototype for\n\txstormy16_setup_incoming_varargs.\n\t* config/stormy16/stormy16.c\n\t(xstormy16_setup_incoming_varargs): Remove.\n\t(xstormy16_return_in_memory): New.\n\t(TARGET_PROMOTE_FUNCTION_ARGS): Likewise.\n\t(TARGET_PROMOTE_FUNCTION_RETURN): Likewise.\n\t(TARGET_PROMOTE_PROTOTYPES): Likewise.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t* config/stormy16/stormy16.h (PROMOTE_FUNCTION_ARGS): Remove.\n\t(PROMOTE_FUNCTION_RETURN): Likewise\n\t(PROMOTE_PROTOTYPES): Likewise\n\t(RETURN_IN_MEMORY): Likewise\n\t(STRUCT_VALUE): Likewise\n\t(SETUP_INCOMING_VARARGS): Likewise\n\n2004-01-25  Richard Sandiford  <rsandifo@redhat.com>\n\n\t* config/mips/mips.c (mips_offset_within_object_p): New function.\n\t(mips_symbolic_constant_p): Use it in the SYMBOL_SMALL_DATA and\n\tSYMBOL_CONSTANT_POOL cases.  Also use it for SYMBOL_GENERAL if the\n\tABI has 64-bit pointers and the object file only allows 32-bit symbols.\n\n2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/sh/sh.h (PROMOTE_FUNCTION_ARGS): Remove.\n\t(PROMOTE_FUNCTION_RETURN): Likewise.\n\n2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/mn10300/mn10300-protos.h: Remove the prototype for\n\tmn10300_builtin_saveregs.\n\t* config/mn10300/mn10300.c (TARGET_PROMOTE_PROTOTYPES): New.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t(TARGET_EXPAND_BUILTIN_SAVEREGS): Likewise.\n\t(mn10300_return_in_memory): Likewise.\n\t(mn10300_builtin_saveregs): Make it static.\n\t* config/mn10300/mn10300.h (PROMOTE_PROTOTYPES): Remove.\n\t(RETURN_IN_MEMORY): Likewise.\n\t(STRUCT_VALUE): Likewise.\n\t(EXPAND_BUILTIN_SAVEREGS): Likewise.\n\n2004-01-25  Eric Botcazou  <ebotcazou@act-europe.fr>\n\n\tPR bootstrap/13853\n\t* cfgcleanup.c (try_optimize_cfg): Explicitly test against 0.\n\n2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/h8300/lib1funcs.asm (divnorm, modnorm): Optimize by\n\tusing ccr.\n\n2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/i860/i860-protos.h: Remove the prototype for\n\ti860_saveregs.\n\t* config/i860/i860.c (i860_saveregs): Make it static.\n\t(i860_struct_value_rtx): New.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(TARGET_EXPAND_BUILTIN_SAVEREGS): Likewise.\n\t* config/i860/i860.h (STRUCT_VALUE_REGNUM): Rename to\n\tI860_STRUCT_VALUE_REGNUM.\n\t(EXPAND_BUILTIN_SAVEREGS): Remove.\n\n2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/m68hc11/m68hc11.c (TARGET_STRUCT_VALUE_RTX): New.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t(m68hc11_struct_value_rtx): Likewise.\n\t(m68hc11_return_in_memory): Likewise.\n\t* config/m68hc11/m68hc11.h: Remove a commented-out definition\n\tof PROMOTE_PROTOTYPES.\n\t(RETURN_IN_MEMORY): Remove.\n\t(STRUCT_VALUE_REGNUM): Likewise.\n\n2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/mmix/mmix-protos.h: Remove the prototype for\n\tmmix_setup_incoming_varargs.\n\t* config/mmix/mmix.c (TARGET_PROMOTE_FUNCTION_ARGS): New.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(TARGET_SETUP_INCOMING_VARARGS): Likewise.\n\t(mmix_setup_incoming_varargs): Make it static.\n\t(mmix_struct_value_rtx): New.\n\t* config/mmix/mmix.h (PROMOTE_FUNCTION_ARGS): Remove.\n\tRemove a commented-out definition of PROMOTE_FUNCTION_RETURN.\n\t(STRUCT_VALUE_REGNUM): Remove.\n\t(SETUP_INCOMING_VARARGS): Likewise.\n\n2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/mips/mips-protos.h: Remove the prototypes for\n\tmips_setup_incoming_varargs and mips_return_in_memory.\n\t* config/mips/mips.c (TARGET_PROMOTE_FUNCTION_ARGS): New.\n\t(TARGET_PROMOTE_FUNCTION_RETURN): Likewise.\n\t(TARGET_PROMOTE_PROTOTYPES): Likewise.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t(TARGET_SETUP_INCOMING_VARARGS): Likewise.\n\t(TARGET_STRICT_ARGUMENT_NAMING): Likewise.\n\t(mips_setup_incoming_varargs): Match the prototype for\n\tTARGET_SETUP_INCOMING_VARARGS.\n\t(mips_return_in_memory): Make it static.  Add argument fntype.\n\t(mips_strict_argument_naming): New.\n\t* config/mips/mips.h (PROMOTE_PROTOTYPES): Remove.\n\t(PROMOTE_FUNCTION_ARGS): Likewise.\n\t(PROMOTE_FUNCTION_RETURN): Likewise.\n\t(STRUCT_VALUE): Likewise.\n\t(RETURN_IN_MEMORY): Likewise.\n\t(SETUP_INCOMING_VARARGS): Likewise.\n\t(STRICT_ARGUMENT_NAMING): Likewise.\n\n2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/ip2k/ip2k.c (TARGET_STRUCT_VALUE_RTX): New.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t(TARGET_SETUP_INCOMING_VARARGS): Likewise.\n\t(ip2k_return_in_memory): Likewise.\n\t(ip2k_setup_incoming_varargs): Likewise.\n\t* config/ip2k/ip2k.h (RETURN_IN_MEMORY): Remove.\n\t(STRUCT_VALUE): Likewise.\n\t(STRUCT_VALUE_INCOMING): Likewise.\n\t(SETUP_INCOMING_VARARGS): Likewise.\n\n2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/avr/avr.c (TARGET_STRUCT_VALUE_RTX): New.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t(TARGET_STRICT_ARGUMENT_NAMING): Likewise.\n\t(avr_return_in_memory): Remove.\n\t* config/avr/avr.h (RETURN_IN_MEMORY): Remove.\n\t(STRUCT_VALUE): Likewise.\n\t(STRUCT_VALUE_INCOMING): Likewise.\n\t(STRICT_ARGUMENT_NAMING): Likewise.\n\n2004-01-25  Jan Hubicka  <jh@suse.cz>\n\n\t* combine.c (recog_for_combine): Avoid allocating unnecesary RTX.\n\n2004-01-25  Richard Sandiford  <rsandifo@redhat.com>\n\n\t* config/mips/mips-protos.h (mips_reg_mode_ok_for_base_p): Delete.\n\t(mips_regno_mode_ok_for_base_p): Declare.\n\t* config/mips/mips.h (ARG_POINTER_REGNUM): Renumber to 77.\n\t(FRAME_POINTER_REGNUM): Renumber to 78.\n\t(FIRST_PSEUDO_REGISTER): Update comment accordingly.\n\t(BASE_REG_P, GP_REG_OR_PSEUDO_STRICT_P): Delete.\n\t(GP_REG_OR_PSEUDO_NONSTRICT_P): Delete.\n\t(REGNO_MODE_OK_FOR_BASE_P): Use mips_regno_mode_ok_for_base_p.\n\t(REG_MODE_OK_FOR_BASE_P): Likewise.\n\t* config/mips/mips.c (mips_reg_names, mips_sw_reg_names): Change\n\tentry for 77 to \"$arg\" and entry for 78 to \"$frame\".\n\t(mips_regno_to_class): Map 77 and 78 to ALL_REGS.\n\t(mips_reg_mode_ok_for_base_p): Remove.\n\t(mips_regno_mode_ok_for_base_p): New function, derived from old\n\tBASE_REG_P macro.  Don't enforce the mips16 stack pointer\n\trestrictions unless we're being strict.\n\t(mips_valid_base_register_p): Use mips_regno_mode_ok_for_base_p.\n\n2004-01-24  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* c-common.h: Fix comment typos.\n\t* c-decl.c: Likewise.\n\t* cgraphunit.c: Likewise.\n\t* combine.c: Likewise.\n\t* et-forest.c: Likewise.\n\t* flow.c: Likewise.\n\t* function.c: Likewise.\n\t* ifcvt.c: Likewise.\n\t* integrate.c: Likewise.\n\t* jump.c: Likewise.\n\t* postreload.c: Likewise.\n\t* varray.c: Likewise.\n\n2004-01-24  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* doc/frontends.texi: Update copyright.\n\t* doc/gcov.texi: Likewise.\n\t* doc/gty.texi: Likewise.\n\t* doc/sourcebuild.texi: Likewise.\n\t* doc/standards.texi: Likewise.\n\n2004-01-24  Herman A.J. ten Brugge  <hermantenbrugge@home.nl>\n\n\tPR target/12978\n\t* c4x.md: (movstrqi*) Use match_scratch instead of match_dup.\n\tRemove movstrqi_small because it conflicts with movstrqi_large.\n\n2004-01-24  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/cris/cris.c (TARGET_PROMOTE_FUNCTION_ARGS): New.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(cris_struct_value_rtx): Likewise.\n\t* config/cris/cris.h (PROMOTE_FUNCTION_ARGS): Remove.\n\t(CRIS_STACKADJ_REG): Use CRIS_STRUCT_VALUE_REGNUM instead of\n\tSTRUCT_VALUE_REGNUM.\n\t(STRUCT_VALUE_REGNUM): Rename to CRIS_STRUCT_VALUE_REGNUM.\n\n2004-01-24  Ian Lance Taylor  <ian@wasabisystems.com>\n\n\tPR bootstrap/13848\n\t* cse.c (cse_cc_succs): Change the mode of the source expression\n\tas soon as decide we need a new mode.  Don't permit changing modes\n\tif we found a match in a successor block.\n\t(cse_condition_code_reg): Save original mode of source expression\n\tso that we know whether we have to change the mode in other\n\tinsns.\n\n2004-01-24  Jan Hubicka  <jh@suse.cz>\n\n\t* emit-rtl.c (change_address, adjust_address_1, offset_address,\n\twiden_memory_access):  Return early when there is nothing to change.\n\n2004-01-24  Jakub Jelinek  <jakub@redhat.com>\n\n\t* simplify-rtx.c (simplify_relational_operation): Don't\n\tsimplify address == constant into address + -constant == 0.\n\n2004-01-24  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* gcc.c (process_command): Don't internationalize the\n\tCopyright message.\n\t* mips-tfile.c (main): Likewise.\n\n2004-01-24  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* cse.c: (cse_cc_succs) Fix comparison warning.\n\n2004-01-24  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/h8300/h8300.md: Remove extraneous USE in expanders.\n\n2004-01-24  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/h8300/h8300-protos.h: Provide prototypes for\n\th8300_legitimate_constant_p and h8300_legitimate_address_p.\n\t* config/h8300/h8300.c (h8300_legitimate_constant_p): New.\n\t(h8300_rtx_ok_for_base_p): Likewise.\n\t(h8300_legitimate_address_p): Likewise.\n\t* config/h8300/h8300.h (LEGITIMATE_CONSTANT_P): Use\n\th8300_legitimate_constant_p.\n\t(RTX_OK_FOR_BASE_P): Remove.\n\t(GO_IF_LEGITIMATE_ADDRESS): Use h8300_legitimate_address_p.\n\n2004-01-24  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/h8300/h8300.h (REG_OK_FOR_INDEX_NONSTRICT_P): New.\n\t(REG_OK_FOR_BASE_NONSTRICT_P): Likewise.\n\t(REG_OK_FOR_INDEX_STRICT_P): Likewise.\n\t(REG_OK_FOR_BASE_STRICT_P): Likewise.\n\t(REG_OK_FOR_INDEX_STRICT_P): Use REGNO_OK_FOR_INDEX_P.\n\t(REG_OK_FOR_BASE_STRICT_P): Use REGNO_OK_FOR_BASE_P.\n\t(REG_OK_FOR_INDEX_P): Use REG_OK_FOR_INDEX_STRICT_P.\n\t(REG_OK_FOR_BASE_P): Use REG_OK_FOR_BASE_STRICT_P.\n\n2004-01-24  Jan Hubicka  <jh@suse.cz>\n\n\t* cselib.c (remove_useless_values):  Do not access discarded values.\n\n2004-01-24  Joseph S. Myers  <jsm@polyomino.org.uk>\n\n\t* c-typeck.c (build_conditional_expr): Do not allow non-lvalue\n\tarrays.\n\n2004-01-23  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* recog.c: Fix a typo in copyright.\n\n2004-01-23  Andrew Pinski  <apinski@apple.com>\n\n\t* config/rs6000/rs6000.md (call): Fix misappiled patch.\n\t(call_value): Likewise.\n\n2004-01-23  Richard Henderson  <rth@redhat.com>\n\n        PR opt/12941\n        * combine.c (SHIFT_COUNT_TRUNCATED): Provide default value.\n        (simplify_comparison): Don't simplify (eq (zero_extract c 1 r) 0)\n        if SHIFT_COUNT_TRUNCATED is set.\n\n2004-01-23  Bob Wilson  <bob.wilson@acm.org>\n\n\t* config/xtensa/xtensa.c (xtensa_va_arg): Handle complex values as\n\tseparate real and imaginary parts.\n\t* config/xtensa/xtensa.h (SPLIT_COMPLEX_ARGS): Define.\n\n2004-01-23  Hartmut Penner <hpenner@de.ibm.com>\n\n\tPR target/13674\n\t* config/rs6000/rs6000.md (movdf_hardfloat64): Do not disparage\n\tloading into GPR.\n\n2004-01-23  Jan Hubicka  <jh@suse.cz>\n\n\t* emit-rtl.c (change_address_1):  Do not re-generate the RTX if nothing\n\tchange.\n\n\t* alloc-pool.c (align_four): Kill.\n\t(create_alloc_pool): Align size to eight.\n\t(free_alloc_pool, free_pool): Invalidate deallocated data.\n\n2004-01-23  Ian Lance Taylor  <ian@wasabisystems.com>\n\n\tPR gcc/1532\n\t* cse.c (cse_change_cc_mode): New static function.\n\t(cse_change_cc_mode_insns, cse_cc_succs): Likewise.\n\t(cse_condition_code_reg): New function.\n\t* rtl.h (cse_condition_code_reg): Declare.\n\t* toplev.c (rest_of_handle_cse2): Call cse_condition_code_reg.\n\t* target.h (struct gcc_target): Add fixed_condition_code_regs and\n\tcc_modes_compatible.\n\t* target-def.h (TARGET_FIXED_CONDITION_CODE_REGS): Define.\n\t(TARGET_CC_MODES_COMPATIBLE): Define.\n\t(TARGET_INITIALIZER): Add new initializers.\n\t* targhooks.c (default_cc_modes_compatible): New function.\n\t* targhooks.c (default_cc_modes_compatible): Declare.\n\t* hooks.c (hook_bool_intp_intp_false): New function.\n\t* hooks.h (hook_bool_intp_intp_false): Declare.\n\t* config/i386/i386.c (TARGET_FIXED_CONDITION_CODE_REGS): Define.\n\t(TARGET_CC_MODES_COMPATIBLE): Define.\n\t(ix86_fixed_condition_code_regs): New static function.\n\t(ix86_cc_modes_compatible): Likewise.\n\t* doc/tm.texi (Condition Code): Document new hooks.\n\n2004-01-23  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* fixinc/inclhack.def (bad_lval): Renamed to ...\n\t(alpha_bad_lval): ... this.\n\tRemoved file list.\n\tRestrict to alpha*-dec-osf*.\n\t* fixinc/fixincl.x: Regenerate.\n\t* fixinc/tests/base/dirent.h: Remove, moving test ...\n\t* fixinc/tests/base/testing.h: ... here, reflecting new name.\n\n2004-01-23  Zack Weinberg  <zack@codesourcery.com>\n\n\tPR c/13814\n\t* c-decl.c (diagnose_mismatched_decls): Also discard a\n\tbuilt-in if we encounter an old-style definition with the\n\tsame name.\n\n2004-01-23  Jakub Jelinek  <jakub@redhat.com>\n\n\t* config.gcc (powerpc*-*): Clear $with_cpu or $with_tune if it was\n\tset to default{32,64}.\n\n2004-01-21  Jakub Jelinek  <jakub@redhat.com>\n\n\t* config/rs6000/linux64.h (MD_FALLBACK_FRAME_STATE_FOR)\n\t[!__powerpc64__]: Corrected to handle kernels with changed ucontext.\n\n2004-01-23  Eric Botcazou  <ebotcazou@act-europe.fr>\n\t    Olivier Hainque  <hainque@act-europe.fr>\n\n\t* fold-const.c (fold_binary_op_with_conditional_arg): Only\n\tbuild a COMPOUND_EXPR if 'arg' is really a SAVE_EXPR.\n\n2004-01-23  Daniel Jacobowitz  <drow@mvista.com>\n\n\t* config/arm/arm.c (arm_legitimate_address_p): Don't check the mode\n\tsize for minipool references.\n\n2004-01-23  Roger Sayle  <roger@eyesopen.com>\n\n\t* real.c (real_floor, real_ceil): Tweak to allow input and output\n\targuments to overlap.\n\t(real_round): New function to implement round(3m) semantics.\n\t* real.h (real_round): Prototype here.\n\t* builtins.c (fold_builtin_round): New function to constant fold\n\tround, roundf and roundl.\n\t(fold_builtin): Call fold_builtin_round for BUILT_IN_ROUND{,F,L}.\n\n2004-01-23  Alexandre Oliva  <aoliva@redhat.com>\n\n\tPR optimization/13819\n\t* config/sh/sh.c (sh_reorg): Compensate for sharing of CLOBBERs\n\tintroduced by 2004-01-20's Jan Hubicka's copy_insn change.\n\t(sh_handle_sp_switch_attribute): Remove warning.\n\n2003-11-30  Jan Hubicka  <jh@suse.cz>\n\n\t* i386.c (ix86_emit_restore_regs_using_mov):  Deal with large offsets.\n\n2004-01-23  J\"orn Rennecke <joern.rennecke@superh.com>\n\n\t* doc/tm.texi: Insert some weasel words when LOAD_EXTEND_OP\n\tmay or may not return non-NIL.\n\t* postreload.c (reload_cse_simplify_operands): In LOAD_EXTEND_OP code,\n\tcheck CANNOT_CHANGE_MODE_CLASS\n\n2004-01-23  Jan Hubicka  <jh@suse.cz>\n\n\t* basic-block.h (PROP_POSTRELOAD): New macro.\n\t(CLEANUP_LOG_LINKS): New.\n\t* cfgcleanup.c (cleanup_cfg): Only PROP_LOG_LINKS when asked to.\n\t* toplev.c (rest_of_handle_life):  Preserve LOG_LINKS trought cleanup_cfg.\n\n\t* cselib.c (value_pool): New.\n\t(new_cselib_val): Use pool.\n\t(cselib_init): Initialize value_pool\n\t(cselib_finish): Free pool.\n\n2004-01-23  Eric Botcazou  <ebotcazou@libertysurf.fr>\n\n\t* config/sparc/sparc.c (scan_record_type): New function.\n\t(function_arg_slotno): Use it to determine which kinds of\n\tregisters the record can be passed in.\n\n2004-01-22  James A. Mmorrison  <ja2morri@uwaterloo.ca>\n\n\t* config/pa/fptr.c: Fix old-style definition.\n\n2004-01-22  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR optimization/13724\n\t* cse.c (fold_rtx) <SUBREG>:  Fold a SUBREG to zero if it\n\trepresents the zero bits produced by a ZERO_EXTEND operation.\n\n2004-01-22  Roger Sayle  <roger@eyesopen.com>\n\n\tPR optimization/13821\n\t* simplify-rtx.c (simplify_subreg): Use subreg_lowpart_offset to\n\tcorrectly calculate the lowpart offset of the contracted subreg.\n\n2004-01-22  Ian Lance Taylor  <ian@wasabisystems.com>\n\n\t* doc/invoke.texi (Optimize Options): Note that --param arguments\n\tare subject to change without notice.\n\n2004-01-22  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* config.gcc (mips-sgi-irix6*o32): Removed.\n\t* config/mips/iris6-o32-as.h: Likewise.\n\t* config/mips/iris6-o32-gas.h: Likewise.\n\t* config/mips/iris6-o32.h: Likewise.\n\n2004-01-22  Jan Hubicka  <jh@suse.cz>\n\n\t* cfgcleanup.c (first_pass): New static variable.\n\t(try_forward_edges):  Add work limiting check for threading.\n\t(try_crossjump_bb):  Add work limiting check for crossjumping.\n\t(try_optimize_cfg):  Maintain first pass variable.\n\n2004-01-22  Bob Wilson  <bob.wilson@acm.org>\n\n\t* config/xtensa/xtensa.c (function_arg): Generalize logic so that it\n\thandles complex and vector modes.\n\n2004-01-22  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/h8300/h8300.h (REG_OK_FOR_INDEX_P_STRICT): Remove.\n\t(REG_OK_FOR_BASE_P_STRICT): Likewise.\n\t(STRICT): Likewise.\n\n2004-01-22  Daniel Jacobowitz  <drow@mvista.com>\n\n\t* c-semantics.c (genrtl_while_stmt, genrtl_do_stmt_1)\n\t(genrtl_for_stmt): Remove emit_nop calls.\n\n2004-01-22  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n\n\tPR target/13713\n\tPR target/13324\n\t* pa.md (movstrsi_prereload, movstrsi_postreload, movstrdi_prereload,\n\tmovstrdi_postreload, clrstrsi_prereload, clrstrsi_postreload,\n\tclrstrdi_prereload, clrstrdi_postreload): Fix constraints.\n\n2004-01-22  Daniel Jacobowitz  <drow@mvista.com>\n\n\t* config/arm/arm.c: Include \"debug.h\".\n\t(thumb_pushpop): Take two new arguments.  Add some commentary.\n\tOutput frame information when pushing.\n\t(thumb_exit, thumb_unexpanded_epilogue): Update calls to\n\tthumb_pushpop.\n\t(thumb_output_function_prologue): Likewise.  Accumulate a CFA\n\toffset, and pass it to thumb_pushpop.  Output CFI information.\n\t(thumb_expand_prologue): Add some frame-related markers and notes.\n\n2004-01-22  Ulrich Weigand  <uweigand@de.ibm.com>\n\n\t* config/s390/s390.c (s390_frame_info): Allow large frame sizes\n\tfor TARGET_64BIT.\n\t(s390_arg_frame_offset): Change return type to HOST_WIDE_INT.\n\t* config/s390/s390-protos.h (s390_arg_frame_offset): Likewise.\n\n2004-01-22  Roger Sayle  <roger@eyesopen.com>\n\t    Paolo Bonzini  <bonzini@gnu.org>\n\n\t* rtlanal.c (subreg_lsb_1): New function split out from subreg_lsb.\n\t(subreg_lsb): Change to call new subreg_lsb_1 helper function.\n\t* rtl.h (subreg_lsb_1): Prototype here.\n\t* simplify-rtx.c (simplify_subreg): Optimize subregs of zero and\n\tsign extensions.\n\n2004-01-22  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* doc/tm.texi (CASE_VECTOR_PC_RELATIVE): Mention that the\n\tmacro need not be defined if jump-tables should contain\n\trelative addresses only when -fPIC or -fPIC is in effect.\n\n2004-01-22  Jan Hubicka  <jh@suse.cz>\n\n\t* alias.c (reg_base_value): Turn into varray.\n\t(reg_base_value_size): Kill.\n\t(old_reg_base_value): New deletable varray.\n\t(alias_invariant_size): New variable.\n\t(REG_BASE_VALUE): Update to use varray.\n\t(find_base_value): Likewise.\n\t(record_set): Likewise.\n\t(record_base_value): Likewise.\n\t(memrefs_conflict_p): Likewise.\n\t(record_set): Likewise\n\t(record_base_value): Likewise.\n\t(memrefs_conflict_p): Use alias_invariant_size.\n\t(init_alias_analysis): Use varray; set alias_invariant_size;\n\trescale other arrays to be sized by maxreg.\n\t(end_alias_analysis): Save reg_base_value; clear alias_invariant_size.\n\n2004-01-22  Eric Botcazou  <ebotcazou@libertysurf.fr>\n\n\t* config/sparc/sparc.c (function_arg_slotno): Use\n\tFLOAT_TYPE_P to detect FP fields in structures.\n\t(function_arg_record_value_1): Likewise.\n\t(function_arg_record_value_2): Likewise.\n\n2004-01-22  Jan Hubicka  <jh@suse.cz>\n\n\t* function.c (allocate_struct_function): Do not initialize expr, emit\n\tand varasm.\n\t(prepare_function_start): Do it here.\n\t* c-parse.in (maybe_type_qual): Do not produce line number notes.\n\n2004-01-22  Eric Botcazou  <ebotcazou@libertysurf.fr>\n\n\tPR target/13559\n\t* config/sparc/sparc.c (function_arg_record_value_3): Revert\n\tto 'word_mode' once the first slot has been filled.\n\n2004-01-22  Olivier Hainque  <hainque@act-europe.fr>\n\n\t* config/sparc/sparc.c (function_arg_record_value_1): Fix\n\tcomputation of the number of integer registers required.\n\n2004-01-21  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/i386/i386.md: Simplify certain comparisons of\n\tconst_int.\n\n2004-01-21  Andrew Pinski  <apinski@apple.com>\n\n\tPR target/13785\n\t* config/rs6000/rs6000.md (call_value): Force operand\n\t1 not operand 0 into a register.\n\n2004-01-21  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* cpperror.c, cpptrad.c, longlong.h, params.def, rtl.def,\n\tunwind-dw2-fde.h: Update copyright.\n\n2004-01-21  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n\n\t* pa-protos.h: Update copyright.\n\t* pa.h: Likewise.\n\t* pa.md: Likewise.\n\n2004-01-21  Caroline Tice <ctice@apple.com>\n\n\tPR target/12308\n\t* config/i386/i386.md (fix_truncxfdi2): Add clause to clobber\n\tflags register.\n\t(fix_truncdfdi2): Likewise.\n\t(fix_truncsfdi2): Likewise.\n\t(*fix_truncdi_1): Likewise.\n\t(fix_truncxfsi2): Likewise.\n\t(fix_truncdfsi2): Likewise.\n\t(fix_truncsfsi2): Likewise.\n\t(*fix_truncsi_1): Likewise.\n\t(fix_truncxfhi2): Likewise.\n\t(fix_truncdfhi2): Likewise.\n\t(fix_truncsfhi2): Likewise.\n\t(*fix_trunchi_1): Likewise.\n\n2004-01-21  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* alias.c, basic-block.h, c-common.c, c-common.h,\n\tc-cppbuiltin.c, c-opts.c, c-pragma.c, c-pretty-print.c,\n\tcalls.c, cfg.c, cfgcleanup.c, cfgrtl.c, cgraph.h, collect2.c,\n\tcombine.c, cppcharset.c, cpphash.h, cppinit.c, cpplib.c,\n\tcpplib.h, cppmacro.c, crtstuff.c, cselib.c, cselib.h,\n\tdefaults.h, df.c, dominance.c, et-forest.c, expmed.c, expr.c,\n\texpr.h, fix-header.c, function.h, gcc.c, gcse.c, genattrtab.c,\n\tgenautomata.c, genconditions.c, genemit.c, genflags.c,\n\tgengtype.c, gengtype.h, genopinit.c, genrecog.c, gensupport.c,\n\tggc-zone.c, graph.c, haifa-sched.c, input.h, integrate.c,\n\tlanghooks-def.h, langhooks.c, langhooks.h, line-map.c,\n\tline-map.h, local-alloc.c, optabs.c, optabs.h, postreload.c,\n\tra.h, recog.c, reg-stack.c, regmove.c, reload.c, reorg.c,\n\trtl.c, sched-deps.c, sched-ebb.c, sdbout.c, system.h,\n\ttarget.h, targhooks.c, toplev.h, tree-inline.c, unwind-pe.h,\n\tunwind.h, varray.c, varray.h: Update copyright.\n\n2004-01-21  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/h8300/coff.h: Update copyright.\n\t* config/h8300/elf.h: Likewise.\n\t* config/h8300/h8300-protos.h: Likewise.\n\t* config/h8300/h8300.c: Likewise.\n\t* config/h8300/h8300.h: Likewise.\n\t* config/h8300/h8300.md: Likewise.\n\n2004-01-21  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n\n\t* fixinc/inclhack.def (hpux10_stdio_declarations, ultrix_const3,\n\tultrix_locale, ultrix_stdlib, ultrix_strings, ultrix_sys_time,\n\tultrix_unistd): New hacks.\n\t* fixinc/tests/base/stdio.h (HPUX10_STDIO_DECLARATIONS_CHECK,\n\tULTRIX_CONST2_CHECK): Add checks.\n\t* fixinc/tests/base/stdlib.h (ULTRIX_STDLIB_CHECK): Likewise.\n\t* fixinc/tests/base/strings.h (ULTRIX_STRINGS2_CHECK): Likewise.\n\t* fixinc/tests/base/unistd.h (ULTRIX_UNISTD_CHECK): Likewise.\n\t* fixinc/tests/base/sys/time.h (ULTRIX_SYS_TIME_CHECK): Likewise.\n\t* fixinc/tests/base/locale.h: New file.\n\t* fixinc/fixincl.x: Rebuilt.\n\n2004-01-21  Andreas Jaeger  <aj@suse.de>\n\t    Michael Matz  <matz@suse.de>\n\n\t* doc/extend.texi (Extended Asm): Clarify memory clobber.\n\n2004-01-21  Jakub Jelinek  <jakub@redhat.com>\n\n\t* crtstuff.c (frame_dummy, __do_global_ctors_1): Call\n\t_Jv_RegisterClasses through a function pointer.\n\n2004-01-21  Falk Hueffner  <falk@debian.org>\n\n\tPR target/12898\n\t* config/alpha/alpha.c (alpha_emit_set_const_1): If\n\tno_new_pseudos, use gen_rtx_SET directly for SImode constants\n\twhich need multiple instructions to emit.\n\n2004-01-21  Inaoka Kazuhiro  <inaoka.kazuhiro@renesas.com>\n\n\t* config/m32r/m32r.h (CPP_SPEC): Define.\n\n2004-01-21  Zack Weinberg  <zack@codesourcery.com>\n\n\t* c-decl.c (merge_decls): Kill different_binding_level and\n\tdifferent_tu arguments; simplify throughout.\n\t(duplicate_decls): Likewise.\n\t(pushdecl, merge_translation_unit_decls): Update calls to\n\tduplicate_decls.\n\n2004-01-20  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n\n\t* Makefile.in (pretty-print.o): Depend on $(CONFIG_H) and\n\t$(SYSTEM_H).\n\t(print-rtl1.o): Depend on $(SYSTEM_H).\n\n2004-01-20  Kelley Cook  <kcook@gcc.gnu.org>\n\n\tPR bootstrap/12730\n\t* configure.ac: Delete definition and subsitution of docdir.\n\tAdd info, man, srcman and srcinfo to target hooks. Create doc/\n\tdirectory.\n\t* configure: Regenerate.\n\t* Makefile.in: Don't substitute docdir and delete all references\n\tthroughout.\n\t(MAKEINFOFLAGS): Define.\n\t(stmp-docobjdir): Delete.\n\t(INFOFILES, MANFILES): Define.\n\t(info): Call lang.info, srcinfo and lang.srcinfo.\n\t(generated-manpages): Call lang.man, srcman and lang.srcman.\n\t(srcinfo, srcman): New rules to copy back files to source directory.\n\t(doc/%.info, doc/%.dvi, doc/%.1, doc/%.7): New implict rule.\n\t(install-man): Revamp rule.\n\t(clean): Update dvi directory.\n\t(distclean): Delete TAGS from front end directorys.\n\t(maintainer-clean): Delete all document files in source directory.\n\n\tobjc/Make-lang.in (objc.man, objc.info): Dummy entries.\n\t(objc.srcman, objc.srcinfo): Likewise.\n\n2004-01-20  Bruce Korb  <bkorb@gnu.org>\n\n\t* fixinc/inclhack.def(math_exception): bypass only for glibc.\n\t(matherr_decl): rename & relocate as exception_structure.\n\tThis fix must precede the math_exception fix.\n\n2004-01-20  Roger Sayle  <roger@eyesopen.com>\n\n\t* fold-const.c (fold_convert): Rename to fold_convert_const.\n\t(fold_convert_const): Change arguments to take a tree_code,\n\ta type and the operand/expression to be converted.  Return\n\tNULL_TREE if no simplification is possible.  Add support for\n\tFIX_CEIL_EXPR and FIX_FLOOR_EXPR in addition to FIX_TRUNC_EXPR.\n\t(fold): Handle FIX_CEIL_EXPR and FIX_FLOOR_EXPR.\n\tAdjust call to fold_convert to match new fold_convert_const.\n\tAvoid modifying the tree passed to fold in-place.\n\n2004-01-21  Alan Modra  <amodra@bigpond.net.au>\n\n\t* config/rs6000/sysv4.h (DWARF2_FRAME_REG_OUT): Define.\n\t* dwarf2out.c (output_cfi): Map regs using DWARF2_FRAME_REG_OUT.\n\t* doc/tm.texi (DWARF_FRAME_REGNUM, DWARF2_FRAME_REG_OUT): Document.\n\n2004-01-20  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n\n\t* pa-protos.h (compute_frame_size): Use HOST_WIDE_INT for frame sizes.\n\t* pa.c (store_reg, store_reg_modify, load_reg, set_reg_plus_d):\n\tLikewise.  Handle frames larger than 0x7fffffff on 64-bit ports.\n\t(emit_move_sequence): Check scratch_reg first in various if statements.\n\tExtend source simplification to handle all 64-bit CONST_INTs.\n\t(pa_output_function_prologue): Use HOST_WIDE_INT_PRINT_DEC for printing\n\tframe size.\n\t(hppa_expand_prologue, hppa_expand_epilogue): Use HOST_WIDE_INT for\n\tframe offset calculations.\n\t* pa.h (NEW_HP_ASSEMBLER): Add comment.\n\t(MAX_LEGIT_64BIT_CONST_INT, MIN_LEGIT_64BIT_CONST_INT,\n\tLEGITIMATE_64BIT_CONST_INT_P): Define.\n\t(LEGITIMATE_CONSTANT_P): Use LEGITIMATE_64BIT_CONST_INT_P.  Treat\n\tany CONST_INT as legitimate during and after reload.\n\t(VAL_32_BITS_P, INT_32_BITS): Define.\n\t(LEGITIMIZE_RELOAD_ADDRESS): Handle large frame offsets.\n\n2004-01-20  Jan Hubicka  <jh@suse.cz>\n\n\t* emit-rtl.c (verify_rtx_sharing, copy_insn_1,\n\temit_copy_of_insn_after, emit_copy_of_insn_after): Clobbers\n\tcontaining hard regs are shared.\n\t(gen_hard_reg_clobber): New function.\n\t(hard_reg_clobbers): New array.\n\t* genemit.c (gen_exp): Use gen_hard_reg_clobber.\n\t(copy_rtx): Do not copy clobbers containing hard regs.\n\t* rtl.h (gen_hard_reg_clobber): Declare.\n\n2004-01-20  Jan Hubicka  <jh@suse.cz>\n\n\t* varray.c:  Include hashtab.h\n\t(varray_descriptor): New structure.\n\t(hash_descriptor, eq_descriptor, varray_descriptor,\n\tprint_statistics): New static functions\n\t(varray_init, varray_grow): Update statistics\n\t(dump_varray_statistics): New function.\n\t* varray.h (dump_varray_statistics): Declare.\n\t* toplev.c (finalize): Call it.\n\t* Makefile.in (varray.o): Add dependency.\n\n2004-01-20  Jan Hubicka  <jh@suse.cz>\n\n\t* cselib.c: Include alloc-pool.h\n\t(empty_vals, empty_elt_lists, empty_elt_loc_lists): Kill.\n\t(elt_loc_list_pool, elt_list_pool, cselib_val_pool): Declare.\n\t(new_elt_list, new_elt_loc_list, unchain_one_elt_list,\n\tunchain_one_elt_loc_list_pool, unchain_one_value,\n\tnew_cselib_val): Simplify using allocpool.\n\t(cselib_init): Initialize allocpools.\n\t(cselib_finish): Finish allocpools.\n\t* Makefile.in (cselib.o): Depend on alloc-pool.h\n\n2004-01-20  Richard Sandiford  <rsandifo@redhat.com>\n\n\t* config/mips/mips.c (mips_load_call_address): Make the call insn\n\tuse $gp if it could be calling a lazy binding stub.\n\n2004-01-20  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/s390/s390.c (TARGET_PROMOTE_FUNCTION_ARGS): Define.\n\t(TARGET_PROMOTE_FUNCTION_RETURN): Likewise.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t* config/s390/s390.h (PROMOTE_FUNCTION_ARGS): Remove.\n\t(PROMOTE_FUNCTION_RETURN): Remove.\n\t(STRUCT_VALUE): Remove.\n\n2004-01-20  Denis Chertykov  <denisc@overta.ru>\n\n\tPR bootstrap/13735\n\t* config/avr/avr.h (BASE_REG_CLASS): Don't permit to use X\n\tregister as pointer after reload.\n\n2004-01-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n\n\tPR optimization/12440\n\t* loop.c: Include ggc.h.\n\t(loop_optimize): Run garbage collector between optimization of loops.\n\t* Makefile.in (loop.o): Add GGC_H dependency.\n\n2004-01-20  Hartmut Penner  <hpenner@de.ibm.com>\n\n\t* gcc/config/rs6000/rs6000.c (function_arg) Handle\n\tvector register special in function without prototype.\n\t(function_arg_advance): Vector parameters get always\n\tGPRs allocated for the linux64 target.\n\n2004-01-20  Kazuhiro Inaoka  <inaoka.kazuhiro@renesas.com>\n\n\t* config/m32r/m32r.h (TARGET_M32R2). Test for TARGET_M32R2_MASK\n\tnot TARGET_M32RX_MASK.\n\n2004-01-20  Eric Botcazou  <ebotcazou@libertysurf.fr>\n\n\tPR target/13557\n\t* config/sparc/sparc.c (function_arg): Reorder the cases.\n\n2004-01-19  Per Bothner  <per@bothner.com>\n\n\tMove cpp_reader's line_maps field to a shared global.\n\t* cpphash.h (cpp_reader):  Rename line_maps field to line_table\n\tand change the type to a pointer rather than a struct.\n\t* cppinit.c (cpp_push_main_field):  Adjust accordingly.\n\t* cpplib.c (do_include_common, _cpp_do_file_change, cpp_get_callbacks):\n\tLikewise.\n\t* cppfiles.c (validate_pch):  Likewise.\n\t* cppmacro.c (_cpp_warn_if_unused_macro, _cpp_builtin_macro_text):\n\tLikewise.\n\t* cpperror.c (print_location):  Likewise.\n\t* cpplib.h (cpp_create_reader):  New line_maps pointer parameter.\n\t* cppinit.c (cpp_create_reader):  Handle new parameter.\n\t(cpp_destroy):  Don't free line_maps - that's no longer our job.\n\t* input.h (line_table):  New variable.\n\t* toplev.c (line_table):  Declare variable.\n\t(general_init):  Initialize line_table.\n\t* c-opts.c (c_common_init_options):  Pass line_table to\n\tcpp_create_reader.\n\t* fix-header.c (read_scan_file):  New local variable line_table.\n\tInitialize, and pass it to cpp_create_reader.\n\t* Makefile.in (LIBS, LIBDEPS):  Add libcpp.a.\n\t(C_AND_OBJC_OBJS, fix-header):  Remove redundant libcpp.a.\n\n2004-01-19  Per Bothner  <per@bothner.com>\n\n\tImplement a cache for linemap_lookup.\n\t* line-map.h (struct_line_maps):  Add cache field.\n\t* line-map.c (linemap_init):  Zero cache field.\n\t(linemap_add):  Set cache field to offset of newly allocated map.\n\t(linemap_lookup):  Use and set cache field.\n\n2004-01-20  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\tPR optimization/13567\n\t* cse.c (cse_basic_block): Call cse_insn with a non-null\n\tlibcall_insn for the last SET insn of a no-confilict block.\n\n2004-01-20  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* Makefile.in (target_noncanonical, program_transform_name): Use\n\timmediate define instead of deferred.\n\t(GCC_INSTALL_NAME, GCC_TARGET_INSTALL_NAME, CPP_INSTALL_NAME,\n\tPROTOIZE_INSTALL_NAME, UNPROTOIZE_INSTALL_NAME, GCOV_INSTALL_NAME,\n\tGCCBUG_INSTALL_NAME): Define via a immediate $(shell) instead of\n\tdeferred backquote.\n\n2004-01-20  Joseph S. Myers  <jsm@polyomino.org.uk>\n\n\t* c-decl.c (c_init_decl_processing): Set pedantic_lvalues to\n\ttrue unconditionally.\n\t* c-typeck.c (unary_complex_lvalue, pedantic_lvalue_warning):\n\tRemove.\n\t(build_unary_op, build_modify_expr): Don't handle extended\n\tlvalues.\n\t(build_component_ref, build_conditional_expr): Call non_lvalue\n\tinstead of pedantic_non_lvalue.\n\t(build_c_cast): Don't condition use of non_lvalue on pedantic.\n\t* fold-const.c (fold): Don't check pedantic directly for\n\tCOMPOUND_EXPR.  Ensure that results for COMPOUND_EXPR are\n\tpassed to pedantic_non_lvalue.\n\t* doc/extend.texi: Remove documentation of extended lvalues.\n\n2004-01-19  Roger Sayle  <roger@eyesopen.com>\n\n\tPR optimization/5263\n\t* simplify-rtx.c (associative_constant_p): Delete.\n\t(simplify_associative_operation): Rewrite to linearize terms, and\n\tattempt to simplify new term against both left and right subterms.\n\t(simplify_binary_operation): Call swap_commutative_operands_p on\n\top0 and op1, not trueop0 and trueop1.  Move the initialization of\n\ttrueop0 and trueop1 down to where first needed.\n\t(simplify_relational_operation): Likewise.\n\t* rtlanal.c (commutative_operand_precedence): Also order constant\n\toperands using avoid_constant_pool_reference.\n\n2004-01-19  Richard Henderson  <rth@redhat.com>\n\n\t* config/alpha/alpha.c (aligned_memory_operand): Check MEM_ALIGN,\n\tdon't check memory mode.\n\t(unaligned_memory_operand): Likewise.\n\t(reload_inqi, reload_inhi, reload_outqi, reload_outhi): Don't\n\tabort for op0 not MEM.\n\n\t* config/alpha/alpha.c (alpha_expand_mov_nobwx): If the destination\n\tis not a reg, copy to a scratch first.\n\t(aligned_loadqi, aligned_loadhi, unaligned_loadqi, unaligned_loadhi,\n\tunaligned_loadqi_le, unaligned_loadqi_be, unaligned_loadhi_le,\n\tunaligned_loadhi_be): Expect op0 in DImode; don't SUBREG.\n\t(reload_inqi, reload_inhi): Fix mode of op0.\n\t(reload_inqi_help, reload_inhi_help, reload_outqi_help,\n\treload_outhi_help): Likewise.  Use define_insn_and_split.\n\n\t* config/alpha/alpha.md (call peepholes): Check for REG_NORETURN\n\tas well as $29 dead.\n\n2004-01-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n\n\t* config/sparc/sol2.h (ASM_DECLARE_OBJECT_NAME): New.  Emit\n\t\"tls_object\" for thread-local objects.\n\t* config/sparc/sparc.c (sparc_elf_asm_named_section): Emit\n\t\"#tls\" for thread-local sections.\n\t* configure.ac (thread-local checks): Specify --fatal-warnings in\n\tevery binutils-specific checks.  For sparc*-*-*, test whether the\n\tOS is Solaris and the tools are native and act accordingly.\n\t* configure: Rebuild.\n\n2004-01-19  Jeff Law  <law@redhat.com>\n\n\t* contrib.texi: Update Paolo Carlini's entry.  New entries for\n\tJerry Quinn and Petur Runolfsson.\n\n2004-01-19  Roger Sayle  <roger@eyesopen.com>\n\n\t* config/i386/i386.md (*movhi_1, *movqi_1): When optimizing for\n\tsize, don't use the larger zero-extending loads.\n\n2004-01-19  Richard Henderson  <rth@redhat.com>\n\n\t* alpha.h (HARD_REGNO_MODE_OK): Disallow SImode in FP regs.\n\t* alpha.md (UNSPEC_NT_LDA): Remove.\n\t(UNSPEC_CVTLQ, cvtlq): New.\n\t(extendsidi2_1): Rename from extendsidi2_nofix; remove f/f.\n\t(extendsidi2_fix): Remove.\n\t(extendsidi2 splitter): Use cvtlq.\n\t(extendsidi2 fp peepholes): Remove.\n\t(cvtql): Use SFmode instead of SImode.\n\t(fix_trunc?fsi): Update to match.\n\t(floatsisf2_ieee, floatsisf2, floatsidf2_ieee, floatsidf2): New.\n\t(movsi): Rename from movsi_nofix, remove f alternatives.\n\t(movsi_nt_vms): Similarly.\n\t(movsi_fix, movsi_nt_vms_fix): Remove.\n\t(nt_lda): Remove.\n\t* alpha.c (alpha_expand_prologue): Use adddi3, not nt_lda.\n\n2004-01-19  Jan Hubicka  <jh@suse.cz>\n\n\t* cgraph.c (cgraph_remove_node): Fix removal from linked list.\n\t* cgraphunit.c (cgraph_finalize_compilation_unit): Clear next_needed\n\tlist.\n\t(cgraph_remove_unreachable_nodes): New function\n\t(cgraph_decide_inlining_of_small_function): Fix pasto.\n\t(cgraph_decide_inlining_incrementally): Fix pasto.\n\t(cgrpah_decide_inlining): Likewise; remove unreachable nodes.\n\n2004-01-19  Steven Bosscher  <stevenb@suse.de>\n\n\t* gengtype.c (header_file): Make it static.\n\t(write_types_process_field, write_enum_defn): Minor whitespace fixes.\n\t* gengtype.h (header_file): No longer extern.\n\n2004-01-18  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* defaults.h (CASE_VECTOR_PC_RELATIVE): Provide the default.\n\t* expr.c (CASE_VECTOR_PC_RELATIVE): Remove.\n\t* stmt.c (CASE_VECTOR_PC_RELATIVE): Likewise.\n\n2004-01-18  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* stmt.c (HAVE_casesi): Define it not already defined.\n\t(HAVE_tablejump): Likewise.\n\t(expand_end_case_type): Resort to the binary tree method if\n\tneither casesi or tablejump is available.\n\n2004-01-18  Daniel Jacobowitz  <drow@mvista.com>\n\n\t* final.c (final_scan_insn): Make non-static again.\n\t* output.h (final_scan_insn): Re-add prototype.\n\t* config/arc/arc.c (arc_output_function_epilogue): Add NULL\n\tto final_scan_insn call.\n\t* config/cris/cris.c (cris_target_asm_function_epilogue): Likewise.\n\t* config/mips/mips.c (mips_output_conditional_branch): Likewise.\n\t* config/pa/pa.c (output_lbranch, output_call): Likewise.\n\t* config/sh/sh.c (print_slot): Likewise.\n\t* config/sparc/sparc.c (sparc_nonflat_function_epilogue): Likewise.\n\t(output_sibcall, sparc_flat_function_epilogue): Likewise.\n\n2004-01-18  Jan Hubicka  <jh@suse.cz>\n\n\t* basic-block.h (try_redirect_by_replacing_jump): Declare.\n\t* cfgcleanup.c (try_optimize_cfg): Use it.\n\t* cfgrtl.c (try_redirect_by_replacing_jump): Export.\n\t(rtl_redirect_edge_and_branch, cfg_layout_redirect_edge_and_branch):\n\tKill hack.\n\t(cfg_layout_merge_blocks): Use try_redirect_by_replacing_jump.\n\n\tRevert:\n\t2004-01-16  Geoffrey Keating  <geoffk@apple.com>\n\n\t\t* cfgrtl.c (try_redirect_by_replacing_jump): Optimize tablejumps\n\t\teven after reload, just don't remove the actual jump tables.\n\n2004-01-18  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/rs6000/rs6000.h (STRICT_ARGUMENT_NAMING): Remove.\n\n2004-01-18  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* defaults.h (ASM_OUTPUT_ADDR_VEC_ELT): Fix the computation of\n\tthe size of a pointer in bytes.\n\n2004-01-18  Roger Sayle  <roger@eyesopen.com>\n\n\t* builtins.c (expand_builtin_expect_jump): Fix thinko of reusing\n\tlive \"next\" variable, which could lead to an infinite loop.\n\n2004-01-18  Andrew Pinski  <pinskia@physics.uc.edu>\n\n\t* config/rs6000/altivec.h: Wrap C++ functions in extern \"C++\"\n\tblock.\n\n\t* config/rs6000/rs6000.c (rs6000_special_round_type_align):\n\tCheck for NULL in the chain and remove repeated code.\n\n2004-01-18  Jan Hubicka  <jh@suse.cz>\n\n\t* coverage.c (checksum_string): Rename to ...\n\t(coverage_checksum_string): ... this one, Use crc32_string; recognize\n\tnames containing random number and zero the number out in order to get\n\tmatch.\n\n2004-01-18  Richard Sandiford  <rsandifo@redhat.com>\n\n\t* config/mips/mips.c (mips_got_alias_set): Mark for PCH.\n\n2004-01-18  Joseph S. Myers  <jsm@polyomino.org.uk>\n\n\t* doc/c-tree.texi, doc/cpp.texi, doc/extend.texi,\n\tdoc/frontends.texi, doc/gcov.texi, doc/gty.texi, doc/install.texi,\n\tdoc/invoke.texi, doc/libgcc.texi, doc/md.texi, doc/rtl.texi,\n\tdoc/sourcebuild.texi, doc/standards.texi, doc/tm.texi,\n\tdoc/trouble.texi: Remove trailing whitespace.\n\n2004-01-18  Richard Sandiford  <rsandifo@redhat.com>\n\n\tPR target/7618\n\t* config/mips/mips.c: Include cfglayout.h.\n\t(TARGET_ASM_OUTPUT_MI_THUNK, TARGET_ASM_CAN_OUTPUT_MI_THUNK): Define.\n\t(mips_unspec_offset_high): Add temporary register argument.\n\t(mips_load_call_address): New function, split out from...\n\t(mips_expand_call): ...here.\n\t(mips_output_cplocal): New function.\n\t(mips_output_function_prologue, mips_output_function_epilogue): Use it.\n\t(mips_emit_loadgp): New function, split out from...\n\t(mips_expand_prologue): ...here.\n\t(mips_output_mi_thunk): New function.\n\n2004-01-17  Bernardo Innocenti  <bernie@develer.com>\n\n\t* longlong.h (mc68020, __mc68030__, mc68030, __mc68040__, mc68040,\n\tmcpu32): Remove redundant checks for implied target predefines.\n\n2004-1-17  Andrew Pinski  <pinskia@physics.uc.edu>\n\n\t* config/rs6000/rs6000.c (rs6000_special_round_type_align):\n\tReturn type is unsigned int not int.\n\t* config/rs6000/rs6000-protos.h (rs6000_special_round_type_align):\n\tLikewise.\n\n2004-01-18  Joseph S. Myers  <jsm@polyomino.org.uk>\n\n\t* doc/contrib.texi, doc/cppenv.texi, doc/extend.texi,\n\tdoc/install.texi, doc/invoke.texi, doc/tm.texi: Consistently use\n\t\"GNU/Linux\" and \"Microsoft Windows\" terminology.\n\n2004-01-18  Joseph S. Myers  <jsm@polyomino.org.uk>\n\n\t* doc/c-tree.texi, doc/compat.texi, doc/cpp.texi,\n\tdoc/cppopts.texi, doc/extend.texi, doc/install.texi,\n\tdoc/interface.texi, doc/invoke.texi, doc/libgcc.texi, doc/md.texi,\n\tdoc/objc.texi, doc/rtl.texi, doc/tm.texi, doc/trouble.texi: Use\n\t@smallexample instead of @example.\n\n2004-01-17  Ziemowit Laski  <zlaski@apple.com>\n\n\t* objc/objc-act.c (build_objc_method_call): Use target\n\thooks instead of macros to determine if ..._stret\n\tdispatchers should be used (NeXT runtime only).\n\n2004-01-17  Roger Sayle  <roger@eyesopen.com>\n\n\t* builtins.c (expand_builtin_expect_jump): Fix mistake in my\n\tlast patch.  Use XEXP (x, 0) to get a LABEL_REF's CODE_LABEL.\n\n2004-01-17  Daniel Jacobowitz  <drow@mvista.com>\n\n\t* rtl.h (emit_insn_before_sameloc, emit_jump_insn_before_sameloc)\n\t(emit_call_insn_before_sameloc, emit_insn_after_sameloc)\n\t(emit_jump_insn_after_sameloc, emit_call_insn_after_sameloc): New\n\tmacros.\n\t* reload1.c (emit_reload_insns): Use them.\n\t* emit-rtl.c (emit_insn_before_sameloc, emit_insn_after_sameloc)\n\t(emit_jump_insn_after_sameloc, emit_call_insn_after_sameloc): Check\n\tfor NULL PATTERN.\n\n2004-01-17  Daniel Jacobowitz  <drow@mvista.com>\n\n\t* final.c (SEEN_BB, SEEN_NOTE, SEEN_EMITTED): Define.\n\t(final_scan_insn): Update to take an additional SEEN argument.  Emit\n\ta line note after the prologue.  Make static.\n\t(line_note_exists): Remove.\n\t(final): Don't initialize line_note_exists.  Update call to\n\tfinal_scan_insn.\n\t* output.h (final_scan_insn): Remove prologue.\n\t* function.c (set_insn_locators): Update comment.\n\t(thread_prologue_and_epilogue_insns): Add a comment.\n\n2004-01-17  Andrew Pinski  <pinskia@physics.uc.edu>\n\n\tPR target/10781\n\t* config/rs6000/rs6000-protos.h (rs6000_special_round_type_align):\n\tPrototype.\n\t* config/rs6000/rs6000.c (rs6000_special_round_type_align):\n\tNew function.\n\t* config/rs6000/linux64.h (ROUND_TYPE_ALIGN): Use it.\n\t* config/rs6000/aix.h (ROUND_TYPE_ALIGN): Likewise.\n\t* config/rs6000/darwin.h (ROUND_TYPE_ALIGN): Likewise.\n\n2004-01-17  Jan Hubicka  <jh@suse.cz>\n\n\t* toplev.c (rest_of_handle_reorder_blocks): Fix pasto in previous\n\tcommit.\n\n\t* toplev.c (HAVE_conditional_execution): Provide default.\n\t(rest_of_handle_reorder_blocks): For conditional_execution target\n\tupdate liveness once after all transformations\n\t(rest_of_compilation): Do crossjumping before ce3.\n\n2004-01-17  Geoffrey Keating  <geoffk@apple.com>\n\n\t* alias.c (new_alias_set): Mark last_alias_set for PCH.\n\t(get_varargs_alias_set): Rename 'set' to 'varargs_set' and mark it\n\tfor PCH.\n\t(get_frame_alias_set): Likewise, except rename it to 'frame_set'.\n\t* config/rs6000/rs6000.c (rs6000_sr_alias_set): Mark for PCH.\n\t(get_TOC_alias_set): Mark 'set' for PCH.\n\n2004-01-16  Geoffrey Keating  <geoffk@apple.com>\n\n\t* cfgrtl.c (try_redirect_by_replacing_jump): Optimize tablejumps\n\teven after reload, just don't remove the actual jump tables.\n\n2004-01-17  J. Brobecker  <brobecker@gnat.com>\n\n\t* dwarf2out.c (is_subrange_type): Renamed from is_ada_subrange_type().\n\tRemove checks for is_ada() and TREE_UNSIGNED.\n\t(subrange_type_die): Emit a byte_size attribute if the subrange\n\ttype size is different from the base type size.\n\t(modified_type_die): Replace call to is_ada_subrange_type() by\n\tcall to is_subrange_type().\n\n2004-01-16  Andrew Pinski  <pinskia@physics.uc.edu>\n\n\t* config/sh/sh.c: Include ggc.h.\n\n2004-01-16  Geoffrey Keating  <geoffk@apple.com>\n\n\t* Makefile.in (MD5_H): New.\n\t(fold-const.o): Depend on md5.h.\n\t(dwarf2out.o): Likewise.\n\t(cppfiles.o): Likewise.\n\t* cppfiles.c: Include md5.h.\n\t(should_stack_file): Check against list read from PCH file.\n\t(struct pchf_data): New.\n\t(pchf): New variable.\n\t(struct pchf_adder_info): New.\n\t(pchf_adder): New.\n\t(pchf_save_compare): New.\n\t(_cpp_save_file_entries): New.\n\t(_cpp_read_file_entries): New.\n\t(struct pchf_compare_data): New.\n\t(pchf_compare): New.\n\t(check_file_against_entries): New.\n\t* cpphash.h (_cpp_save_file_entries): Prototype.\n\t(_cpp_read_file_entries): Prototype.\n\t* cpppch.c (cpp_write_pch_state): Write the list of headers.\n\t(cpp_read_state): Read the list of headers.\n\n2004-01-17  Jan Hubicka  <jh@suse.cz>\n\n\t* c-common.c (c_estimate_num_insns_1): Handle builtin_constant_p and\n\tbuiltin_expect specially.\n\t* params.def (PARAM_MAX_INLINE_INSNS_AUTO): Set to 100.\n\t(PARAM_LARGE_FUNCTION_INSNS): Set to 3000.\n\t* invoke.texi (max-inline-insns-single): Set to 100.\n\t(large-function-insns): Set to 3000.\n\n2004-01-16  Eric Christopher  <echristo@redhat.com>\n\t    Chandrakala Chavva <cchavva@redhat.com>\n\n\t* cppcharset.c (one_iso88591_to_utf8): New function.\n\t(convert_iso88591_utf8): Ditto. Use.\n\t(conversion_tab): Use.\n\t(_cpp_input_to_utf8): New function.\n\t(_cpp_init_iconv_buffer): Ditto.\n\t(_cpp_close_iconv_buffer): Ditto.\n\t* cpphash.h: Prototype new functions.\n\t(cpp_buffer): Add input_cset_desc.\n\t* cppinit.c: Add input_charset default.\n\t* cpplib.c (cpp_push_buffer): Support init and\n\tclose of iconv.\n\t* cpplib.h (cpp_options): Add input_charset.\n\n2004-01-16  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* system.h (ASM_OUTPUT_SECTION_NAME): Poison.\n\t* config/alpha/unicosmk.h: Remove a commented-out definition\n\tof ASM_OUTPUT_SECTION_NAME.\n\t* config/stormy16/stormy16.h: Likewise.\n\n2004-01-16  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* fixinc/inclhack.def (alpha___extern_prefix): Renamed to ...\n\t(alpha___extern_prefix_sys_stat): ... this.\n\tApply to <sys/mount.h>, too.\n\tTweak to match more variations.\n\t* fixinc/tests/base/sys/stat.h: Adapt for new hackname.\n\n\t* fixinc/inclhack.def (alpha___extern_prefix,\n\talpha___extern_prefix_standards): New hacks to obey\n \t__PRAGMA_EXTERN_PREFIX.\n\t* fixinc/tests/base/testing.h [ALPHA___EXTERN_PREFIX_CHECK]: New\n\ttest.\n\t* fixinc/tests/base/standards.h: Likewise.\n\n\t* fixincl/inclhack.def (alpha_pthread): Tweak to match more\n\tvariations.\n\tNew testcase.\n\t* fixinc/tests/base/pthread.h: Handle it.\n\n\t* fixincl/inclhack.def (bad_lval): Sort file list.\n\tAdd many missing files up to Tru64 UNIX V5.1B.\n\t* gcc/fixinc/tests/base/libgen.h: Renamed to ...\n\t* gcc/fixinc/tests/base/dirent.h: ... this to match new file list\n\torder.\n\n\t* fixinc/fixincl.x: Regenerate.\n\n2004-01-16  Mark Mitchell  <mark@codesourcery.com>\n\n\t* version.c (version_string): Change to 3.5.0.\n\t* doc/include/gcc-common.texi (version-GCC): Likewise.\n\n2004-01-16  Jan Hubicka  <jh@suse.cz>\n\n\t* i386.md (load_tp_di): Fix pasto.\n\n\tPR opt/13608\n\t* i386.c (ix86_compute_frame_layout): Fix for alloca on leaf function.\n\n\t* c-pretty-print.c (pp_c_type_cast, pp_c_abstract_declarator,\n\tpp_c_character_constant, pp_c_floating_constant,\n\tpp_c_additive_expression, pp_c_shift_expression,\n\tpp_c_equality_expression, pp_c_and_expression,\n\tpp_c_exclusive_or_expression, pp_c_inclusive_or_expression,\n\tpp_c_logical_and_expression): Remove inline modifier.\n\t* dwarf2out.c (get_AT): Likewise.\n\t* et-forest.c (et_splay): Likewise.\n\t* ra.h (ra_alloc, ra_calloc): Likewise\n\n2004-01-16  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/frv/frv-protos.h: Fix comment formatting.\n\t* config/frv/frv.c: Likewise.\n\t* config/frv/frv.h: Likewise.\n\t* config/frv/frv.md: Likewise.\n\t* config/frv/frvbegin.c: Likewise.\n\t* config/frv/frvend.c: Likewise.\n\n2004-01-16  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* system.h (LINKER_DOES_NOT_WORK_WITH_DWARF2): Poison.\n\t* doc/tm.texi (PREFERRED_DEBUGGING_TYPE): Don't mention\n\tLINKER_DOES_NOT_WORK_WITH_DWARF2.\n\t(LINKER_DOES_NOT_WORK_WITH_DWARF2): Remove.\n\n2004-01-16  J\"orn Rennecke <joern.rennecke@superh.com>\n\n\tPR 11864\n\t* postreload.c (reload_cse_simplify_operands): Don't remove\n\timplicit extension from LOAD_EXTEND_OP.\n\n2004-01-16  Jan Hubicka  <jh@suse.cz>\n\n\tPR opt/11350\n\t* cfgcleanup.c (try_optimize_cfg): Suppress tablejump removal\n\tafter reload.\n\t* cfgrtl.c (rtl_can_merge_blocks, cfglayout_can_merge_blocks,\n\trtl_try_redirect_by_replacing_branch): Likewise.\n\n2004-01-15  Geoffrey Keating  <geoffk@apple.com>\n\n\tPR pch/13689\n\t* alias.c (struct alias_set_entry): Mark for GC.\n\t(alias_sets): Make static, mark for GC.\n\t(record_alias_subset): Use GC to allocate alias structures.\n\t* varray.c (element): Make generic varrays GCed.\n\n\tPR pch/13361\n\t* c-typeck.c (constructor_asmspec): Delete.\n\t(struct initializer_stack): Delete field 'asmspec'.\n\t(start_init): Delete saving of asmspec.\n\t(finish_init): Don't update constructor_asmspec.\n\t* dwarf2out.c (rtl_for_decl_location): Duplicate string from tree.\n\t* stmt.c (expand_asm): Duplicate strings from tree.\n\t(expand_asm_operands): Likewise.\n\t* tree.c (tree_size): Update computation of size of STRING_CST.\n\t(make_node): Don't make STRING_CST nodes.\n\t(build_string): Allocate string with tree node.\n\t* tree.def (STRING_CST): Update comment.\n\t* tree.h (TREE_STRING_POINTER): Adjust for change to STRING_CST.\n\t(tree_string): Place contents of string in tree node.\n\t* config/sh/sh.c (sh_handle_sp_switch_attribute): Duplicate string\n\tfrom tree.\n\n\t* config/rs6000/rs6000.c (rs6000_va_arg): No need to special-case\n\taltivec operands.\n\n2004-01-15  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* c-common.h: Fix comment formatting.\n\t* c-cppbuiltin.c: Likewise.\n\t* c-pragma.c: Likewise.\n\t* calls.c: Likewise.\n\t* collect2.c: Likewise.\n\t* cppcharset.c: Likewise.\n\t* cpptrad.c: Likewise.\n\t* dbxout.c: Likewise.\n\t* defaults.h: Likewise.\n\t* dwarf2out.c: Likewise.\n\t* fold-const.c: Likewise.\n\t* genautomata.c: Likewise.\n\t* genconditions.c: Likewise.\n\t* genflags.c: Likewise.\n\t* gengtype.c: Likewise.\n\t* integrate.c: Likewise.\n\t* loop.c: Likewise.\n\t* predict.c: Likewise.\n\t* sdbout.c: Likewise.\n\n2004-01-15  Zack Weinberg  <zack@codesourcery.com>\n\n\t* config/ia64/ia64.md (*movti_internal): C output template\n\textracted to ia64.c.\n\t(*movti_internal_reg): Delete.\n\t(reload_inti, reload_outti): Use the correct mode on operand 2\n\tin the first place, don't fix it up in the output template.\n\t(movtf, reload_ointf, reload_outtf): New expanders.\n\t(*movtf_internal): New define_insn_and_split.\n\t* config/ia64/ia64.c (ia64_split_timode): Rename to ia64_split_tmode;\n\tmake static; do not hand TFmode CONST_DOUBLEs to split_double.\n\t(ia64_split_tmode_move): New function, body mostly pulled\n\tfrom ia64.md:*movti_internal.\n\t(ia64_function_arg_words): New function, extracted common\n\tlogic from ia64_function_arg et seq.\n\t(ia64_function_arg_offset): Likewise.  Handle correctly the\n\tcase of a scalar quantity 16 bytes wide with only 8-byte alignment.\n\t(ia64_function_arg, ia64_function_arg_partial_nregs)\n\t(ia64_function_arg_advance): Use ia64_function_arg_words and\n\tia64_function_arg_offset.\n\t(ia64_function_value): TCmode does not go in float regs.\n\t(ia64_secondary_reload_class): Also handle TFmode.\n\t* config/ia64/ia64-protos.h: Remove prototype for\n\tia64_split_timode; add prototype for ia64_split_tmode_move.\n\n2004-01-15  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* Makefile.in (MAINT): Make it an immediate assignment.\n\n2004-01-15  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/m32r/m32r.md: Remove useless calls to gen_lowpart.\n\n2004-01-15  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/h8300/coff.h: Replace Hitachi with Renesas.\n\t* config/h8300/elf.h: Likewise.\n\t* config/h8300/h8300-protos.h: Likewise.\n\t* config/h8300/h8300.c: Likewise.\n\t* config/h8300/h8300.h: Likewise.\n\t* config/h8300/h8300.md: Likewise.\n\t* config/h8300/lib1funcs.asm: Likewise.\n\n2004-01-15  Andrew Pinski  <apinski@apple.com>\n\n\t* config/rs6000/rs6000.c (uses_TOC): Wrap #if TARGET_ELF\n\taround it.\n\n2004-01-15  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/h8300/h8300.c (h8300_return_in_memory): New.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t* config/h8300/h8300.h (STRUCT_VALUE): Remove.\n\t(RETURN_IN_MEMORY): Likewise.\n\n2004-01-15  Richard Earnshaw  <rearnsha@arm.com>\n\n\tPR optimization/13375\n\t* gcse.c (handle_avail_expr): Just return if the source is not a\n\tsingle set.\n\n2004-01-15  Richard Earnshaw  <rearnsha@arm.com>\n\t    Daniel Jacobowitz  <drow@mvista.com>\n\n\t* arm/lib1funcs.asm (ARM_FUNC_START): Correct interworking case.\n\t(EQUIV): Define.\n\t(ARM_FUNC_ALIAS): New macro.\n\t* arm/ieee754-df.S (gedf2, ledf2, nedf2, eqdf2): Use it.\n\t* arm/ieee754-sf.S (gesf2, lesf2, nesf2, eqsf2): Use it.\n\n2004-01-15  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n\n\tPR optimization/12372\n\t* calls.c (expand_call): Add call_fusage data for stack arguments in\n\tconstant calls.\n\n2004-01-15  Alan Modra  <amodra@bigpond.net.au>\n\n\t* config/rs6000/rs6000.c (uses_TOC): Correct comment.  Make static.\n\t(rs6000_elf_declare_function_name): Formatting.\n\t* config/rs6000/rs6000-protos.h (uses_TOC): Remove declaration.\n\n2004-01-15  Jan Hubicka  <jh@suse.cz>\n\n\tPR bootstrap/13692\n\t* sched-deps.c (sched_analyze_1, sched_analyze_2): Fix thinko in\n\tprevious patch.\n\n2004-01-15  Richard Henderson  <rth@redhat.com>\n\n\t* config/alpha/alpha.h (REG_ALLOC_ORDER): Reorder fp regs after\n\tinteger regs of the same call-savedness.\n\n2004-01-15  Andreas Schwab  <schwab@suse.de>\n\n\tPR bootstrap/13562\n\t* config/m68k/m68k.c (output_move_const_into_data_reg): Clear cc\n\tstatus for NOTB/NOTW/NEGW methods.\n\n2004-01-15  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* doc/invoke.texi: Update dump file names.  Fix a typo.\n\n2004-01-15  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* builtins.c (expand_builtin_va_end): Don't use\n\tEXPAND_BUILTIN_VA_END.\n\t* system.h (EXPAND_BUILTIN_VA_END): Poison.\n\t* config/d30v/d30v.h: Remove a commented-out definition of\n\tEXPAND_BUILTIN_VA_END.\n\t* config/stormy16/stormy16.h: Likewise.\n\n2004-01-15  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* system.h (STRUCT_VALUE_INCOMING_REGNUM): Poison.\n\t* targhooks.c (default_struct_value_rtx): Don't use\n\tSTRUCT_VALUE_INCOMING_REGNUM.\n\n2004-01-15  Kelley Cook  <kcook@gcc.gnu.org>\n\n\tPR bootstrap/12744\n\t* configure.in: Revamp enable-generated-files-in-srcdir rule to define\n\tGENINSRC and not parsedir.  Define srcextra as a langhook.\n\t* configure: Regenerate.\n\t* Makefile.in: Suppress default .l.c rule.  Don't substitute\n\tparsedir and delete all references throughout.  Conditionally define\n\trule for srcextra dependent on GENINSRC.\n\t(stmp-docobjdir): Delete.\n\t(c-parse.o, gengtype-lex.o, gengtype-yacc.o): Use implicit build rule.\n\t(srcextra): Copy c-parse.y, c-parse.c, gengtype-lex.c, gengtype-yacc.c,\n\tand gengtype-yacc.h back to source directory.\n\t(maintainer-clean): Delete all parse files in source directory.\n\t(distclean): Delete generated files.\n\n\t* objc/Make-lang.in (objc-parse.o): Use implicit build rule.\n\t(objc-parse.c, objc-parse.y): Don't use parsedir.\n\t(objc.srcextra): Copy objc-parse.y and objc-parse.c back to source\n\tdirectory if requested.\n\t(po-generated): Don't use parsedir.\n\t(objc.maintainer-clean): Delete above files from source directory.\n\n2004-01-14  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* doc/tm.texi (FUNCTION_VALUE): Fix a typo.\n\n2004-01-14  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* doc/tm.texi: Replace RETURN_IN_MEMORY with\n\tTARGET_RETURN_IN_MEMORY.\n\n2004-01-15  Jan Hubicka  <jh@suse.cz>\n\n\t* builtins.c (std_expand_builtin_va_arg): Align operand when needed.\n\t* i386.c (init_cumulative_args): Set warn_sse; fix handling of variadic\n\tfunctions accepting SSE arguments\n\t(function_arg): Warn only when asked to warn.\n\t* i386.h (ix86_args): Add warn_sse/warn_mmx fiels.\n\n2004-01-14  Joseph S. Myers  <jsm@polyomino.org.uk>\n\n\t* c-parse.in (stmts_and_decls): Make label at end of compound\n\tstatement a hard error.\n\n2004-01-14  Jan Hubicka  <jh@suse.cz>\n\n\t* cgraph.c (create_edge): Use local.redefined_extern_inline.\n\t* cgraph.h (cgraph_local_info): Sort fields by size; add\n\tredefined_extern_inline\n\t(cgraph_global_info): Sort fields by size.\n\t(cgraph_node): Likewise.\n\t* cgraphunit.c (cgraph_finalize_function): Se\n\tlocal.redefined_extern_inline on redefinition.\n\t(cgraph_analyze_function): Use it; fix formating.\n\n2004-01-14  Jan Hubicka  <jh@suse.cz>\n\n\tPR c++/10776\n\t* sched-deps.c (trye_dependency_cache, anti_dependency_cache,\n\toutptu_dependency_cache, forward_dependency_cahe): Trun to vectors of\n\tbitmaps\n\t(cache_size): New variable\n\t(add_dependence): Update use; canonize early memory locations\n\t(sched_analyze_1): Likewise.\n\t(sched_analyze_2): Likewise.\n\t(init_dependency_caches): Initialize bitmaps.\n\t(free_dependency_caches): Free bitmaps\n\n2004-01-14  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* calls.c: Replace STRICT_ARGUMENT_NAMING in comments with\n\ttargetm.calls.strict_argument_naming().\n\t* target.h: Likewise.\n\n2004-01-14  Richard Henderson  <rth@redhat.com>\n\n\tPR debug/13231\n\t* dwarf2out.c (dwarf2out_stack_adjust): Skip prologue and epilogue\n\tinstructions.\n\n2004-01-14  Richard Henderson  <rth@redhat.com>\n\n\tPR c++/12491\n\t* except.c (struct eh_region): Add u.fixup.resolved.\n\t(resolve_one_fixup_region): Split out from ...\n\t(resolve_fixup_regions): ... here.\n\n2004-01-14  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/mn10300/mn10300.h (STRUCT_VALUE): Change to 0.\n\n2004-01-14  Kazu Hirata  <kazu@cs.umass.edu>\n\n\t* config/alpha/alpha.h (STRUCT_VALUE): Remove.\n\t* config/alpha/vms.h (STRUCT_VALUE_REGNUM): \u2026", "tree": {"sha": "efb95f15b5890c58e97736739988941af380d1a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efb95f15b5890c58e97736739988941af380d1a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1194fc79773b7e3abcf36123c58995e1129315e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1194fc79773b7e3abcf36123c58995e1129315e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1194fc79773b7e3abcf36123c58995e1129315e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1194fc79773b7e3abcf36123c58995e1129315e2/comments", "author": null, "committer": null, "parents": [{"sha": "51b6facb1aad0114201484c0c0812115355d2a62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51b6facb1aad0114201484c0c0812115355d2a62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51b6facb1aad0114201484c0c0812115355d2a62"}], "stats": {"total": 161, "additions": 143, "deletions": 18}, "files": [{"sha": "1e5bfa2f7235c6852ab0be2c21d957b4a8044764", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1194fc79773b7e3abcf36123c58995e1129315e2", "patch": "@@ -1,3 +1,35 @@\n+2004-01-27  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* Makefile.in (bt-load.o): Depend on except.h.\n+\t* bt-load.c (except.h): #include.\n+\t(compute_defs_uses_and_gen): If insn at end of BB can throw\n+\twithin this function, consider registers used by it unavailable for\n+\tbtr migration.\n+\t(move_btr_def): If insn at end of BB can throw, insert before rather\n+\tthan after.\n+\n+\t* flags.h (flag_btr_bb_exclusive): Declare.\n+\t* toplev.c (flag_btr_bb_exclusive): New variable.\n+\t(f_options): Add btr-bb-exclusive.\n+\t* bt-load.c (augment_live_range): Restore old behaviour if\n+\tflag_btr_bb_exclusive is set.\n+\t* common.opt: Add entry for -fbtr-bb-exclusive.\n+\t* opts.c (common_handle_options): Same.\n+\t* doc/invoke.texi: Document -fbtr-bb-exclusive.\n+   \n+\t* bt-load.c (btrs_live_at_end): New variable.\n+\t(compute_defs_uses_and_gen): Compute its pointed-to array.\n+\t(clear_btr_from_live_range, add_btr_to_live_range): Update it.\n+\t(augment_live_range): When augmenting with a new dominator,\n+\tuse only its btrs_live_at_end set, but also add in the full set\n+\tof the old dominator.\n+\t(btr_def_live_range): Use btrs_live_at_end.\n+\t(move_btr_def): Set other_btr_uses_before_def, and move new set\n+\tto the end of the basic block, if appropriate.\n+\t(migrate_btr_defs): Allocate and free btrs_live_at_end.\n+   \n+\t* bt-load.c (basic_block_freq): Remove outdated comment.\n+\n 2004-01-27  Alan Modra  <amodra@bigpond.net.au>\n \n \t* config/rs6000/rs6000.h: Correct target_flags free bits comment."}, {"sha": "98c07f2e45323e2fe06269f57005923983979a1e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=1194fc79773b7e3abcf36123c58995e1129315e2", "patch": "@@ -1760,7 +1760,7 @@ postreload.o : postreload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H)\n caller-save.o : caller-save.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    flags.h $(REGS_H) hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) function.h \\\n    $(RECOG_H) reload.h $(EXPR_H) toplev.h $(TM_P_H)\n-bt-load.o : bt-load.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+bt-load.o : bt-load.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) except.h \\\n    $(BASIC_BLOCK_H) $(RTL_H) hard-reg-set.h $(REGS_H) $(OBSTACK_H) $(TM_P_H) \\\n    $(FIBHEAP_H) output.h $(TARGET_H) $(EXPR_H) flags.h $(INSN_ATTR_H)\n reorg.o : reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) conditions.h \\"}, {"sha": "9b8f598d0c5f5d4847ceda0fa33eba5a6d162a15", "filename": "gcc/bt-load.c", "status": "modified", "additions": 83, "deletions": 14, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2Fbt-load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2Fbt-load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbt-load.c?ref=1194fc79773b7e3abcf36123c58995e1129315e2", "patch": "@@ -1,5 +1,5 @@\n /* Perform branch target register load optimizations.\n-   Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -36,6 +36,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"flags.h\"\n #include \"insn-attr.h\"\n #include \"function.h\"\n+#include \"except.h\"\n #include \"tm_p.h\"\n \n /* Target register optimizations - these are performed after reload.  */\n@@ -159,6 +160,10 @@ static struct obstack migrate_btrl_obstack;\n    live in that block.  */\n static HARD_REG_SET *btrs_live;\n \n+/* Array indexed by basic block number, giving the set of registers live at\n+  the end of that block, including any uses by a final jump insn, if any.  */\n+static HARD_REG_SET *btrs_live_at_end;\n+\n /* Set of all target registers that we are willing to allocate.  */\n static HARD_REG_SET all_btrs;\n \n@@ -168,8 +173,7 @@ static int first_btr, last_btr;\n \n \n \n-/* Return an estimate of the frequency of execution of block bb.\n-   If we have a profiling count available, we could use it here.  */\n+/* Return an estimate of the frequency of execution of block bb.  */\n static int\n basic_block_freq (basic_block bb)\n {\n@@ -462,6 +466,7 @@ compute_defs_uses_and_gen (fibheap_t all_btr_defs, btr_def *def_array,\n       btr_def defs_this_bb = NULL;\n       rtx insn;\n       rtx last;\n+      int can_throw = 0;\n \n       info.users_this_bb = NULL;\n       info.bb_gen = bb_gen[i];\n@@ -544,7 +549,7 @@ compute_defs_uses_and_gen (fibheap_t all_btr_defs, btr_def *def_array,\n \t\t\t\t\t\t  call_used_reg_set);\n \t\t\t      clobbered = &call_saved;\n \t\t\t    }\n-\t\t\t      \n+\n \t\t      for (regno = first_btr; regno <= last_btr; regno++)\n \t\t\tif (TEST_HARD_REG_BIT (*clobbered, regno))\n \t\t\t  note_btr_set (regno_reg_rtx[regno], NULL_RTX, &info);\n@@ -555,6 +560,35 @@ compute_defs_uses_and_gen (fibheap_t all_btr_defs, btr_def *def_array,\n \n       COPY_HARD_REG_SET (btrs_live[i], info.btrs_live_in_block);\n       COPY_HARD_REG_SET (btrs_written[i], info.btrs_written_in_block);\n+\n+      REG_SET_TO_HARD_REG_SET (btrs_live_at_end[i], bb->global_live_at_end);\n+      /* If this block ends in a jump insn, add any uses or even clobbers\n+\t of branch target registers that it might have.  */\n+      for (insn = BB_END (bb); insn != BB_HEAD (bb) && ! INSN_P (insn); )\n+\tinsn = PREV_INSN (insn);\n+      /* ??? for the fall-through edge, it would make sense to insert the\n+\t btr set on the edge, but that would require to split the block\n+\t early on so that we can distinguish between dominance from the fall\n+\t through edge - which can use the call-clobbered registers - from\n+\t dominance by the throw edge.  */\n+      if (can_throw_internal (insn))\n+\t{\n+\t  HARD_REG_SET tmp;\n+\n+\t  COPY_HARD_REG_SET (tmp, call_used_reg_set);\n+\t  AND_HARD_REG_SET (tmp, all_btrs);\n+\t  IOR_HARD_REG_SET (btrs_live_at_end[i], tmp);\n+\t  can_throw = 1;\n+\t}\n+      if (can_throw || GET_CODE (insn) == JUMP_INSN)\n+\t{\n+\t  int regno;\n+\n+\t  for (regno = first_btr; regno <= last_btr; regno++)\n+\t    if (refers_to_regno_p (regno, regno+1, insn, NULL))\n+\t      SET_HARD_REG_BIT (btrs_live_at_end[i], regno);\n+\t}\n+\n       if (rtl_dump_file)\n \tdump_btrs_live(i);\n     }\n@@ -797,6 +831,7 @@ clear_btr_from_live_range (btr_def def)\n \t   || !block_at_edge_of_live_range_p (bb, def))\n \t {\n \t   CLEAR_HARD_REG_BIT (btrs_live[bb], def->btr);\n+\t   CLEAR_HARD_REG_BIT (btrs_live_at_end[bb], def->btr);\n \t   if (rtl_dump_file)\n \t     dump_btrs_live (bb);\n \t }\n@@ -815,6 +850,7 @@ add_btr_to_live_range (btr_def def)\n     (def->live_range, 0, bb,\n      {\n        SET_HARD_REG_BIT (btrs_live[bb], def->btr);\n+       SET_HARD_REG_BIT (btrs_live_at_end[bb], def->btr);\n        if (rtl_dump_file)\n \t dump_btrs_live (bb);\n      });\n@@ -845,11 +881,18 @@ augment_live_range (bitmap live_range, HARD_REG_SET *btrs_live_in_range,\n       int new_block = new_bb->index;\n \n       bitmap_set_bit (live_range, new_block);\n-      IOR_HARD_REG_SET (*btrs_live_in_range, btrs_live[new_block]);\n+      if (flag_btr_bb_exclusive)\n+\tIOR_HARD_REG_SET (*btrs_live_in_range, btrs_live[new_block]);\n+      else\n+\t{\n+\t  IOR_HARD_REG_SET (*btrs_live_in_range, btrs_live_at_end[new_block]);\n+\t  IOR_HARD_REG_SET (*btrs_live_in_range, btrs_live[head_bb->index]);\n+\t}\n       if (rtl_dump_file)\n \t{\n \t  fprintf (rtl_dump_file,\n-\t\t   \"Adding block %d to live range\\n\", new_block);\n+\t\t   \"Adding end of block %d and rest of %d to live range\\n\",\n+\t\t   new_block, head_bb->index);\n \t  fprintf (rtl_dump_file,\"Now live btrs are \");\n \t  dump_hard_reg_set (*btrs_live_in_range);\n \t  fprintf (rtl_dump_file, \"\\n\");\n@@ -929,7 +972,11 @@ btr_def_live_range (btr_def def, HARD_REG_SET *btrs_live_in_range)\n       def->live_range = BITMAP_XMALLOC ();\n \n       bitmap_set_bit (def->live_range, def->bb->index);\n-      COPY_HARD_REG_SET (*btrs_live_in_range, btrs_live[def->bb->index]);\n+      if (flag_btr_bb_exclusive)\n+\tCOPY_HARD_REG_SET (*btrs_live_in_range, btrs_live[def->bb->index]);\n+      else\n+\tCOPY_HARD_REG_SET (*btrs_live_in_range,\n+\t\t\t   btrs_live_at_end[def->bb->index]);\n \n       for (user = def->uses; user != NULL; user = user->next)\n \taugment_live_range (def->live_range, btrs_live_in_range,\n@@ -942,14 +989,23 @@ btr_def_live_range (btr_def def, HARD_REG_SET *btrs_live_in_range)\n \t of other PT instructions may have affected it.\n       */\n       int bb;\n+      int def_bb = def->bb->index;\n \n       CLEAR_HARD_REG_SET (*btrs_live_in_range);\n-      EXECUTE_IF_SET_IN_BITMAP\n-\t(def->live_range, 0, bb,\n-\t {\n-\t   IOR_HARD_REG_SET (*btrs_live_in_range,\n-\t     btrs_live[bb]);\n-\t });\n+      if (flag_btr_bb_exclusive)\n+\tEXECUTE_IF_SET_IN_BITMAP\n+\t  (def->live_range, 0, bb,\n+\t   {\n+\t     IOR_HARD_REG_SET (*btrs_live_in_range, btrs_live[bb]);\n+\t   });\n+      else\n+\tEXECUTE_IF_SET_IN_BITMAP\n+\t  (def->live_range, 0, bb,\n+\t   {\n+\t     IOR_HARD_REG_SET (*btrs_live_in_range,\n+\t\t\t       (def_bb == bb\n+\t\t\t\t? btrs_live_at_end : btrs_live) [bb]);\n+\t   });\n     }\n   if (!def->other_btr_uses_before_def &&\n       !def->other_btr_uses_after_use)\n@@ -1073,7 +1129,8 @@ move_btr_def (basic_block new_def_bb, int btr, btr_def def, bitmap live_range,\n   def->bb = new_def_bb;\n   def->luid = 0;\n   def->cost = basic_block_freq (new_def_bb);\n-  def->other_btr_uses_before_def = 0;\n+  def->other_btr_uses_before_def\n+    = TEST_HARD_REG_BIT (btrs_live[b->index], btr) ? 1 : 0;\n   bitmap_copy (def->live_range, live_range);\n   combine_btr_defs (def, btrs_live_in_range);\n   btr = def->btr;\n@@ -1085,6 +1142,16 @@ move_btr_def (basic_block new_def_bb, int btr, btr_def def, bitmap live_range,\n      its basic block.  */\n   /* ?? some assertions to check that insp is sensible? */\n \n+  if (def->other_btr_uses_before_def)\n+    {\n+      insp = BB_END (b);\n+      for (insp = BB_END (b); ! INSN_P (insp); insp = PREV_INSN (insp))\n+\tif (insp == BB_HEAD (b))\n+\t  abort ();\n+      if (GET_CODE (insp) == JUMP_INSN || can_throw_internal (insp))\n+\tinsp = PREV_INSN (insp);\n+    }\n+\n   set = single_set (old_insn);\n   src = SET_SRC (set);\n   btr_mode = GET_MODE (SET_DEST (set));\n@@ -1312,6 +1379,7 @@ migrate_btr_defs (enum reg_class btr_class, int allow_callee_save)\n       }\n \n   btrs_live = xcalloc (n_basic_blocks, sizeof (HARD_REG_SET));\n+  btrs_live_at_end = xcalloc (n_basic_blocks, sizeof (HARD_REG_SET));\n \n   build_btr_def_use_webs (all_btr_defs);\n \n@@ -1338,6 +1406,7 @@ migrate_btr_defs (enum reg_class btr_class, int allow_callee_save)\n     }\n \n   free (btrs_live);\n+  free (btrs_live_at_end);\n   obstack_free (&migrate_btrl_obstack, NULL);\n   fibheap_delete (all_btr_defs);\n }"}, {"sha": "a384b0400eeadca61252b1ab63a7cfaad4a3e016", "filename": "gcc/common.opt", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=1194fc79773b7e3abcf36123c58995e1129315e2", "patch": "@@ -1,5 +1,5 @@\n ; Options for the language- and target-independent parts of the compiler.\n-; Copyright (C) 2003 Free Software Foundation, Inc.\n+; Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;\n@@ -243,6 +243,10 @@ fbranch-target-load-optimize2\n Common\n Perform branch target load optimization after prologue / epilogue threading\n \n+fbtr-bb-exclusive\n+Common\n+Restrict target load migration not to re-use registers in any basic block\n+\n fcall-saved-\n Common Joined RejectNegative\n -fcall-saved-<register>\tMark <register> as being preserved across functions"}, {"sha": "c21bdf370bedd5609d5d9167c34c597f4eeda385", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1194fc79773b7e3abcf36123c58995e1129315e2", "patch": "@@ -264,7 +264,8 @@ in the following sections.\n @gccoptlist{-falign-functions=@var{n}  -falign-jumps=@var{n} @gol\n -falign-labels=@var{n}  -falign-loops=@var{n}  @gol\n -fbranch-probabilities -fprofile-values -fvpt -fbranch-target-load-optimize @gol\n--fbranch-target-load-optimize2 -fcaller-saves  -fcprop-registers @gol\n+-fbranch-target-load-optimize2 -fbtr-bb-exclusive @gol\n+-fcaller-saves  -fcprop-registers @gol\n -fcse-follow-jumps  -fcse-skip-blocks  -fdata-sections @gol\n -fdelayed-branch  -fdelete-null-pointer-checks @gol\n -fexpensive-optimizations  -ffast-math  -ffloat-store @gol\n@@ -4651,6 +4652,11 @@ a separate optimization pass.\n Perform branch target register load optimization after prologue / epilogue\n threading.\n \n+@item -fbtr-bb-exclusive\n+@opindex fbtr-bb-exclusive\n+WHen performing branch target register load optimization, don't reuse\n+branch target registers in within any basic block.\n+\n @item --param @var{name}=@var{value}\n @opindex param\n In some places, GCC uses various constants to control the amount of"}, {"sha": "370fb0a19361c5a2b1c306cbb5b3e0bfe94a20b4", "filename": "gcc/flags.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=1194fc79773b7e3abcf36123c58995e1129315e2", "patch": "@@ -1,6 +1,6 @@\n /* Compilation switch flag definitions for GCC.\n    Copyright (C) 1987, 1988, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002,\n-   2003\n+   2003, 2004\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -689,6 +689,10 @@ extern int flag_branch_target_load_optimize;\n \n extern int flag_branch_target_load_optimize2;\n \n+/* For the bt-load pass, nonzero means don't re-use branch target registers \n+   in any basic block.  */\n+extern int flag_btr_bb_exclusive;\n+\n \n /* Nonzero means we should do dwarf2 duplicate elimination.  */\n "}, {"sha": "2f07d6d7f0257d78d80c6bb75fcbe96e1b54ca18", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=1194fc79773b7e3abcf36123c58995e1129315e2", "patch": "@@ -901,6 +901,10 @@ common_handle_option (size_t scode, const char *arg,\n       flag_branch_target_load_optimize2 = value;\n       break;\n \n+    case OPT_fbtr_bb_exclusive:\n+      flag_btr_bb_exclusive = value;\n+      break;\n+\n     case OPT_fcall_used_:\n       fix_register (arg, 0, 1);\n       break;"}, {"sha": "425f94ea6af7f2230d26d62488e5a67b6e1c784c", "filename": "gcc/toplev.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1194fc79773b7e3abcf36123c58995e1129315e2/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=1194fc79773b7e3abcf36123c58995e1129315e2", "patch": "@@ -711,6 +711,11 @@ int flag_branch_target_load_optimize = 0;\n \n int flag_branch_target_load_optimize2 = 0;\n \n+/* For the bt-load pass, nonzero means don't re-use branch target registers\n+   in any basic block.  */\n+\n+int flag_btr_bb_exclusive;\n+\n /* Nonzero means to rerun cse after loop optimization.  This increases\n    compilation time about 20% and picks up a few more common expressions.  */\n \n@@ -1064,6 +1069,7 @@ static const lang_independent_options f_options[] =\n   {\"gcse-las\", &flag_gcse_las, 1 },\n   {\"branch-target-load-optimize\", &flag_branch_target_load_optimize, 1 },\n   {\"branch-target-load-optimize2\", &flag_branch_target_load_optimize2, 1 },\n+  {\"btr-bb-exclusive\", &flag_btr_bb_exclusive, 1 },\n   {\"loop-optimize\", &flag_loop_optimize, 1 },\n   {\"crossjumping\", &flag_crossjumping, 1 },\n   {\"if-conversion\", &flag_if_conversion, 1 },"}]}