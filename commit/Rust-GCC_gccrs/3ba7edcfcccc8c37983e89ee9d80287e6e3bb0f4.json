{"sha": "3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JhN2VkY2ZjY2NjOGMzNzk4M2U4OWVlOWQ4MDI4N2U2ZTNiYjBmNA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-10-21T12:25:12Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-10-21T12:25:12Z"}, "message": "re PR fortran/46007 (wrong code for SHAPE in a scalarized loop)\n\n2010-10-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/46007\n\t* m4/shape.m4 (shape_'rtype_kind`):  Use variable for rank.\n\tAllocate return array if unallocated.\n\t* generated/shape_i4.c:  Regenerated.\n\t* generated/shape_i8.c:  Regenerated.\n\t* generated/shape_i16.c:  Regenerated.\n\n2010-10-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/46007\n\t* gfortran.dg/shape_5.f90:  New test case.\n\nFrom-SVN: r165770", "tree": {"sha": "1e94c7cd4fa400c87e7f43094060b274a34ad669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e94c7cd4fa400c87e7f43094060b274a34ad669"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/comments", "author": null, "committer": null, "parents": [{"sha": "837c4b78f697de3a047f6e6dba919c02fd769809", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/837c4b78f697de3a047f6e6dba919c02fd769809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/837c4b78f697de3a047f6e6dba919c02fd769809"}], "stats": {"total": 70, "additions": 66, "deletions": 4}, "files": [{"sha": "b4f914e808c186a83afa252aa34c2f159a7508a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4", "patch": "@@ -1,3 +1,8 @@\n+2010-10-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/46007\n+\t* gfortran.dg/shape_5.f90:  New test case.\n+\n 2010-10-21  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/46060"}, {"sha": "ed128bcd20282304a1cc7ed9d85801b51deb1419", "filename": "gcc/testsuite/gfortran.dg/shape_5.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fshape_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fshape_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fshape_5.f90?ref=3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do run }\n+! PR 40067 - this used to segfault on an unallocated return array.\n+    integer, dimension(10)             :: int1d\n+    integer, dimension(:), pointer     :: int1d_retrieved\n+\n+    allocate(int1d_retrieved(10))\n+    if (any(shape(int1d_retrieved) /= shape(INT1D))) call abort()\n+    end"}, {"sha": "5b06cef1b4ffe1ad8e98aab90ab9a4ab3ee5f2c6", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4", "patch": "@@ -1,3 +1,12 @@\n+2010-10-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/46007\n+\t* m4/shape.m4 (shape_'rtype_kind`):  Use variable for rank.\n+\tAllocate return array if unallocated.\n+\t* generated/shape_i4.c:  Regenerated.\n+\t* generated/shape_i8.c:  Regenerated.\n+\t* generated/shape_i16.c:  Regenerated.\n+\n 2010-10-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/46079"}, {"sha": "c2c52005a13a52b4436dd13ec8dd4ca0ee89a05a", "filename": "libgfortran/generated/shape_i16.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/libgfortran%2Fgenerated%2Fshape_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/libgfortran%2Fgenerated%2Fshape_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i16.c?ref=3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4", "patch": "@@ -41,13 +41,23 @@ shape_16 (gfc_array_i16 * const restrict ret,\n   int n;\n   index_type stride;\n   index_type extent;\n+  int rank;\n+\n+  rank = GFC_DESCRIPTOR_RANK (array);\n+\n+  if (ret->data == NULL)\n+    {\n+      GFC_DIMENSION_SET(ret->dim[0], 0, rank - 1, 1);\n+      ret->offset = 0;\n+      ret->data = internal_malloc_size (sizeof (GFC_INTEGER_16) * rank);\n+    }\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n   if (GFC_DESCRIPTOR_EXTENT(ret,0) < 1)\n     return;\n \n-  for (n = 0; n < GFC_DESCRIPTOR_RANK (array); n++)\n+  for (n = 0; n < rank; n++)\n     {\n       extent = GFC_DESCRIPTOR_EXTENT(array,n);\n       ret->data[n * stride] = extent > 0 ? extent : 0 ;"}, {"sha": "0cef3327736b6b364b0050236c6c61dd4b49442a", "filename": "libgfortran/generated/shape_i4.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/libgfortran%2Fgenerated%2Fshape_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/libgfortran%2Fgenerated%2Fshape_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i4.c?ref=3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4", "patch": "@@ -41,13 +41,23 @@ shape_4 (gfc_array_i4 * const restrict ret,\n   int n;\n   index_type stride;\n   index_type extent;\n+  int rank;\n+\n+  rank = GFC_DESCRIPTOR_RANK (array);\n+\n+  if (ret->data == NULL)\n+    {\n+      GFC_DIMENSION_SET(ret->dim[0], 0, rank - 1, 1);\n+      ret->offset = 0;\n+      ret->data = internal_malloc_size (sizeof (GFC_INTEGER_4) * rank);\n+    }\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n   if (GFC_DESCRIPTOR_EXTENT(ret,0) < 1)\n     return;\n \n-  for (n = 0; n < GFC_DESCRIPTOR_RANK (array); n++)\n+  for (n = 0; n < rank; n++)\n     {\n       extent = GFC_DESCRIPTOR_EXTENT(array,n);\n       ret->data[n * stride] = extent > 0 ? extent : 0 ;"}, {"sha": "b457ae081c7c54f9cb1b49ff2992d6bdda68d7f2", "filename": "libgfortran/generated/shape_i8.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/libgfortran%2Fgenerated%2Fshape_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/libgfortran%2Fgenerated%2Fshape_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i8.c?ref=3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4", "patch": "@@ -41,13 +41,23 @@ shape_8 (gfc_array_i8 * const restrict ret,\n   int n;\n   index_type stride;\n   index_type extent;\n+  int rank;\n+\n+  rank = GFC_DESCRIPTOR_RANK (array);\n+\n+  if (ret->data == NULL)\n+    {\n+      GFC_DIMENSION_SET(ret->dim[0], 0, rank - 1, 1);\n+      ret->offset = 0;\n+      ret->data = internal_malloc_size (sizeof (GFC_INTEGER_8) * rank);\n+    }\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n   if (GFC_DESCRIPTOR_EXTENT(ret,0) < 1)\n     return;\n \n-  for (n = 0; n < GFC_DESCRIPTOR_RANK (array); n++)\n+  for (n = 0; n < rank; n++)\n     {\n       extent = GFC_DESCRIPTOR_EXTENT(array,n);\n       ret->data[n * stride] = extent > 0 ? extent : 0 ;"}, {"sha": "a289b0a80769f35990d71c92a256edeecfc306ab", "filename": "libgfortran/m4/shape.m4", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/libgfortran%2Fm4%2Fshape.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4/libgfortran%2Fm4%2Fshape.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fshape.m4?ref=3ba7edcfcccc8c37983e89ee9d80287e6e3bb0f4", "patch": "@@ -42,13 +42,23 @@ shape_'rtype_kind` ('rtype` * const restrict ret,\n   int n;\n   index_type stride;\n   index_type extent;\n+  int rank;\n+\n+  rank = GFC_DESCRIPTOR_RANK (array);\n+\n+  if (ret->data == NULL)\n+    {\n+      GFC_DIMENSION_SET(ret->dim[0], 0, rank - 1, 1);\n+      ret->offset = 0;\n+      ret->data = internal_malloc_size (sizeof ('rtype_name`) * rank);\n+    }\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n   if (GFC_DESCRIPTOR_EXTENT(ret,0) < 1)\n     return;\n \n-  for (n = 0; n < GFC_DESCRIPTOR_RANK (array); n++)\n+  for (n = 0; n < rank; n++)\n     {\n       extent = GFC_DESCRIPTOR_EXTENT(array,n);\n       ret->data[n * stride] = extent > 0 ? extent : 0 ;"}]}