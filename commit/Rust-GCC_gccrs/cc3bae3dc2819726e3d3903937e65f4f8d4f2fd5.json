{"sha": "cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MzYmFlM2RjMjgxOTcyNmUzZDM5MDM5MzdlNjVmNGY4ZDRmMmZkNQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-04-12T15:26:16Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-04-12T15:26:16Z"}, "message": "except.c (build_noexcept_spec): Use build_converted_constant_bool_expr instead of perform_implicit_conversion_flags.\n\n\t* except.c (build_noexcept_spec): Use build_converted_constant_bool_expr\n\tinstead of perform_implicit_conversion_flags.\n\n\t* g++.dg/cpp0x/noexcept30.C: Tweak dg-error.\n\t* g++.dg/cpp0x/pr86397-1.C: Likewise.\n\t* g++.dg/cpp0x/pr86397-2.C: Likewise.\n\nFrom-SVN: r270319", "tree": {"sha": "864969e72ddc518f28a9e2169f30fb7e76c7d348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/864969e72ddc518f28a9e2169f30fb7e76c7d348"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01c9d999492e603b514485d4344cd2969dacdcda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c9d999492e603b514485d4344cd2969dacdcda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01c9d999492e603b514485d4344cd2969dacdcda"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "9a126226fe5bd07bd999634a5d2fb417e3abcd66", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5", "patch": "@@ -1,3 +1,8 @@\n+2019-04-12  Marek Polacek  <polacek@redhat.com>\n+\n+\t* except.c (build_noexcept_spec): Use build_converted_constant_bool_expr\n+\tinstead of perform_implicit_conversion_flags.\n+\n 2019-04-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR translation/90035"}, {"sha": "25ab86995896959777d6d094a1e6c8cf7a4a205a", "filename": "gcc/cp/except.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5", "patch": "@@ -1285,9 +1285,7 @@ build_noexcept_spec (tree expr, tsubst_flags_t complain)\n   if (TREE_CODE (expr) != DEFERRED_NOEXCEPT\n       && !value_dependent_expression_p (expr))\n     {\n-      expr = perform_implicit_conversion_flags (boolean_type_node, expr,\n-\t\t\t\t\t\tcomplain,\n-\t\t\t\t\t\tLOOKUP_NORMAL);\n+      expr = build_converted_constant_bool_expr (expr, complain);\n       expr = instantiate_non_dependent_expr (expr);\n       expr = cxx_constant_value (expr);\n     }"}, {"sha": "f20f45d44a2804d0fca7ad527fa4567022fc4858", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5", "patch": "@@ -1,3 +1,9 @@\n+2019-04-12  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/cpp0x/noexcept30.C: Tweak dg-error.\n+\t* g++.dg/cpp0x/pr86397-1.C: Likewise.\n+\t* g++.dg/cpp0x/pr86397-2.C: Likewise.\n+\n 2019-04-12  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* g++.target/arm/arm.exp: Change format of default prune regex."}, {"sha": "6a9f782109223dddde36191af49361b6062099bf", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept30.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept30.C?ref=cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5", "patch": "@@ -5,7 +5,7 @@\n template<typename A>\n struct F {\n   template<typename B>\n-  void f() noexcept(&F::template f<B>) {} // { dg-error \"exception specification\" }\n+  void f() noexcept(&F::template f<B>) {} // { dg-error \"exception specification|convert\" }\n };\n \n int main () {"}, {"sha": "c6cfc1b55615e342d3e85078108711815fd1dd5d", "filename": "gcc/testsuite/g++.dg/cpp0x/pr86397-1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr86397-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr86397-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr86397-1.C?ref=cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++11 } }\n // { dg-options \"-fdelete-null-pointer-checks\" }\n void e();\n-template <bool> void f(int() noexcept(e)) {}\n-template void f<false>(int()); // { dg-error \"does not match\" \"\" { target c++17 } }\n+template <bool> void f(int() noexcept(e)) {} // { dg-error \"convert\" }\n+template void f<false>(int());"}, {"sha": "54aefdb091609fd318730aa04cc9f017a65a60dc", "filename": "gcc/testsuite/g++.dg/cpp0x/pr86397-2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr86397-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr86397-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr86397-2.C?ref=cc3bae3dc2819726e3d3903937e65f4f8d4f2fd5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++11 } }\n // { dg-options \"-fdelete-null-pointer-checks\" }\n void e();\n-template <bool> void f(int() noexcept(e)) {}\n-template void f<false>(int() noexcept);\n+template <bool> void f(int() noexcept(e)) {} // { dg-error \"convert\" }\n+template void f<false>(int() noexcept); // { dg-error \"does not match any template declaration\" \"\" { target c++17 } }"}]}