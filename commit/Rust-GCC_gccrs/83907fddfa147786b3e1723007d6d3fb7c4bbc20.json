{"sha": "83907fddfa147786b3e1723007d6d3fb7c4bbc20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM5MDdmZGRmYTE0Nzc4NmIzZTE3MjMwMDdkNmQzZmI3YzRiYmMyMA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2009-10-14T00:01:09Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2009-10-14T00:01:09Z"}, "message": "re PR rtl-optimization/38948 (unrecognizable insn, postreload.c:395)\n\n\tPR target/38948\n\t* config/cris/cris.h (SECONDARY_RELOAD_CLASS): Handle reload\n\trequests between special registers.\n\nFrom-SVN: r152740", "tree": {"sha": "12bb2f84b764ee421a1252611747d25fcaa2c05b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12bb2f84b764ee421a1252611747d25fcaa2c05b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83907fddfa147786b3e1723007d6d3fb7c4bbc20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83907fddfa147786b3e1723007d6d3fb7c4bbc20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83907fddfa147786b3e1723007d6d3fb7c4bbc20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83907fddfa147786b3e1723007d6d3fb7c4bbc20/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62afe9917d5fbbf3723fbcf90cd7f0a057ec70c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62afe9917d5fbbf3723fbcf90cd7f0a057ec70c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62afe9917d5fbbf3723fbcf90cd7f0a057ec70c7"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "371f4e2c0d89179449554624633339c7ffcb0cb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83907fddfa147786b3e1723007d6d3fb7c4bbc20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83907fddfa147786b3e1723007d6d3fb7c4bbc20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83907fddfa147786b3e1723007d6d3fb7c4bbc20", "patch": "@@ -1,3 +1,9 @@\n+2009-10-14  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR target/38948\n+\t* config/cris/cris.h (SECONDARY_RELOAD_CLASS): Handle reload\n+\trequests between special registers.\n+\n 2009-10-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* dwarf2out.c (mem_loc_descriptor): Accept UNGT as well."}, {"sha": "76ebcefbae76bd5b5e2d495e8c24f654cf015d9a", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83907fddfa147786b3e1723007d6d3fb7c4bbc20/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83907fddfa147786b3e1723007d6d3fb7c4bbc20/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=83907fddfa147786b3e1723007d6d3fb7c4bbc20", "patch": "@@ -630,12 +630,17 @@ enum reg_class\n   ? GENERAL_REGS : (CLASS))\n \n /* We can't move special registers to and from memory in smaller than\n-   word_mode.  */\n-#define SECONDARY_RELOAD_CLASS(CLASS, MODE, X)\t\t\\\n-  (((CLASS) != SPECIAL_REGS && (CLASS) != MOF_REGS)\t\\\n-   || GET_MODE_SIZE (MODE) == 4\t\t\t\t\\\n-   || !MEM_P (X)\t\t\t\t\t\\\n-   ? NO_REGS : GENERAL_REGS)\n+   word_mode.  We also can't move between special registers.  Luckily,\n+   -1, as returned by true_regnum for non-sub/registers, is valid as a\n+   parameter to our REGNO_REG_CLASS, returning GENERAL_REGS, so we get\n+   the effect that any X that isn't a special-register is treated as\n+   a non-empty intersection with GENERAL_REGS.  */\n+#define SECONDARY_RELOAD_CLASS(CLASS, MODE, X)\t\t\t\t\\\n+ ((((CLASS) == SPECIAL_REGS || (CLASS) == MOF_REGS)\t\t\t\\\n+   && ((GET_MODE_SIZE (MODE) < 4 && MEM_P (X))\t\t\t\t\\\n+       || !reg_classes_intersect_p (REGNO_REG_CLASS (true_regnum (X)),\t\\\n+\t\t\t\t    GENERAL_REGS)))\t\t\t\\\n+   ? GENERAL_REGS : NO_REGS)\n \n /* FIXME: Fix regrename.c; it should check validity of replacements,\n    not just with a silly pass-specific macro.  We may miss some"}]}