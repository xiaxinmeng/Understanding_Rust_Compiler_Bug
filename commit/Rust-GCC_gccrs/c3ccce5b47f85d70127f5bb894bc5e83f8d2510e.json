{"sha": "c3ccce5b47f85d70127f5bb894bc5e83f8d2510e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNjY2NlNWI0N2Y4NWQ3MDEyN2Y1YmI4OTRiYzVlODNmOGQyNTEwZQ==", "commit": {"author": {"name": "JunMa", "email": "JunMa@linux.alibaba.com", "date": "2020-01-20T09:46:32Z"}, "committer": {"name": "JunMa", "email": "JunMa@linux.alibaba.com", "date": "2020-02-03T01:24:27Z"}, "message": "coroutines: Bind label_decl of original function to actor function\n\ngcc/cp\n    * coroutines.cc (transform_await_wrapper): Set actor funcion as\n    new context of label_decl.\n    (build_actor_fn): Fill new field of await_xform_data.\n\ngcc/testsuite\n    * g++.dg/coroutines/co-await-04-control-flow.C: Add label.", "tree": {"sha": "6701e6af154d1320716a0c686629673169b52a70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6701e6af154d1320716a0c686629673169b52a70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e/comments", "author": {"login": "junparser", "id": 59546948, "node_id": "MDQ6VXNlcjU5NTQ2OTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/59546948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junparser", "html_url": "https://github.com/junparser", "followers_url": "https://api.github.com/users/junparser/followers", "following_url": "https://api.github.com/users/junparser/following{/other_user}", "gists_url": "https://api.github.com/users/junparser/gists{/gist_id}", "starred_url": "https://api.github.com/users/junparser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junparser/subscriptions", "organizations_url": "https://api.github.com/users/junparser/orgs", "repos_url": "https://api.github.com/users/junparser/repos", "events_url": "https://api.github.com/users/junparser/events{/privacy}", "received_events_url": "https://api.github.com/users/junparser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "junparser", "id": 59546948, "node_id": "MDQ6VXNlcjU5NTQ2OTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/59546948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junparser", "html_url": "https://github.com/junparser", "followers_url": "https://api.github.com/users/junparser/followers", "following_url": "https://api.github.com/users/junparser/following{/other_user}", "gists_url": "https://api.github.com/users/junparser/gists{/gist_id}", "starred_url": "https://api.github.com/users/junparser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junparser/subscriptions", "organizations_url": "https://api.github.com/users/junparser/orgs", "repos_url": "https://api.github.com/users/junparser/repos", "events_url": "https://api.github.com/users/junparser/events{/privacy}", "received_events_url": "https://api.github.com/users/junparser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75201e825d6685ecd293c9640ef4e5a46580db93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75201e825d6685ecd293c9640ef4e5a46580db93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75201e825d6685ecd293c9640ef4e5a46580db93"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "4e2b0c5e4e38188df04e450387462db3dd8f8acf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c3ccce5b47f85d70127f5bb894bc5e83f8d2510e", "patch": "@@ -1,3 +1,9 @@\n+2020-02-03  Jun Ma <JunMa@linux.alibaba.com>\n+\n+\t* coroutines.cc (transform_await_wrapper): Set actor funcion as\n+\tnew context of label_decl.\n+\t(build_actor_fn): Fill new field of await_xform_data.\n+\n 2020-02-02  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/93530 - ICE on invalid alignas in a template."}, {"sha": "62d92d9fc98099cdc8cb55e8ceff6e0c1d090773", "filename": "gcc/cp/coroutines.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e/gcc%2Fcp%2Fcoroutines.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e/gcc%2Fcp%2Fcoroutines.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcoroutines.cc?ref=c3ccce5b47f85d70127f5bb894bc5e83f8d2510e", "patch": "@@ -1580,6 +1580,7 @@ static hash_map<tree, suspend_point_info> *suspend_points;\n \n struct await_xform_data\n {\n+  tree actor_fn;   /* Decl for context.  */\n   tree actor_frame;\n   tree promise_proxy;\n   tree real_promise;\n@@ -1660,12 +1661,16 @@ transform_await_expr (tree await_expr, await_xform_data *xform)\n static tree\n transform_await_wrapper (tree *stmt, int *do_subtree, void *d)\n {\n+  /* Set actor function as new DECL_CONTEXT of label_decl.  */\n+  struct await_xform_data *xform = (struct await_xform_data *) d;\n+  if (TREE_CODE (*stmt) == LABEL_DECL\n+      && DECL_CONTEXT (*stmt) != xform->actor_fn)\n+    DECL_CONTEXT (*stmt) = xform->actor_fn;\n+\n   if (TREE_CODE (*stmt) != CO_AWAIT_EXPR && TREE_CODE (*stmt) != CO_YIELD_EXPR)\n     return NULL_TREE;\n \n   tree await_expr = *stmt;\n-  await_xform_data *xform = (await_xform_data *) d;\n-\n   *stmt = transform_await_expr (await_expr, xform);\n   if (*stmt == error_mark_node)\n     *do_subtree = 0;\n@@ -2018,7 +2023,7 @@ build_actor_fn (location_t loc, tree coro_frame_type, tree actor, tree fnbody,\n      decide where to put things.  */\n \n   await_xform_data xform\n-    = {actor_frame, promise_proxy, ap, self_h_proxy, ash};\n+    = {actor, actor_frame, promise_proxy, ap, self_h_proxy, ash};\n \n   /* Get a reference to the initial suspend var in the frame.  */\n   transform_await_expr (initial_await, &xform);"}, {"sha": "5471778da0babbf2178f159610420bc501b08026", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c3ccce5b47f85d70127f5bb894bc5e83f8d2510e", "patch": "@@ -1,3 +1,7 @@\n+2020-02-03  Jun Ma <JunMa@linux.alibaba.com>\n+\n+\t* g++.dg/coroutines/co-await-04-control-flow.C: Add label.\n+\n 2020-02-02  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/93530 - ICE on invalid alignas in a template."}, {"sha": "e8da2d2e2ad7b815c07aaf2fce81ac60739b81f7", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-await-04-control-flow.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-await-04-control-flow.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ccce5b47f85d70127f5bb894bc5e83f8d2510e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-await-04-control-flow.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-await-04-control-flow.C?ref=c3ccce5b47f85d70127f5bb894bc5e83f8d2510e", "patch": "@@ -16,9 +16,11 @@ coro1\n f ()\n {\n   if (gX < 12) {\n+L1:\n     gX += y;\n     gX += co_await 11;\n   } else\n+L2:\n     gX += co_await 12;\n     \n   co_return gX;"}]}