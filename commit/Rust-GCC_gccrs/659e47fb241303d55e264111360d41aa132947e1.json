{"sha": "659e47fb241303d55e264111360d41aa132947e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU5ZTQ3ZmIyNDEzMDNkNTVlMjY0MTExMzYwZDQxYWExMzI5NDdlMQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2000-09-18T19:27:37Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2000-09-18T19:27:37Z"}, "message": "toplev.c (rest_of_compilation): Call purge_hard_subreg_sets to remove all SETs of SUBREGs of hard registers.\n\n2000-09-15  Andrew Haley  <aph@redhat.com>\n\n        * toplev.c (rest_of_compilation): Call purge_hard_subreg_sets to\n        remove all SETs of SUBREGs of hard registers.\n        * function.c (purge_hard_subreg_sets): New function.\n        (purge_single_hard_subreg_set): New function.\n        * rtl.h: (purge_hard_subreg_sets): New function.\n\nFrom-SVN: r36511", "tree": {"sha": "614e4aa4487dc0588a17968047aee0e298b20627", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/614e4aa4487dc0588a17968047aee0e298b20627"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/659e47fb241303d55e264111360d41aa132947e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/659e47fb241303d55e264111360d41aa132947e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/659e47fb241303d55e264111360d41aa132947e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/659e47fb241303d55e264111360d41aa132947e1/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f2f90c63c8832dcf581120672567453b8e062d7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f90c63c8832dcf581120672567453b8e062d7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2f90c63c8832dcf581120672567453b8e062d7a"}], "stats": {"total": 86, "additions": 82, "deletions": 4}, "files": [{"sha": "4e99ee99762f05d8941232338d96da809aebb22f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659e47fb241303d55e264111360d41aa132947e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659e47fb241303d55e264111360d41aa132947e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=659e47fb241303d55e264111360d41aa132947e1", "patch": "@@ -1,3 +1,11 @@\n+2000-09-15  Andrew Haley  <aph@redhat.com>\n+\n+\t* toplev.c (rest_of_compilation): Call purge_hard_subreg_sets to\n+\tremove all SETs of SUBREGs of hard registers.\n+ \t* function.c (purge_hard_subreg_sets): New function.\n+\t(purge_single_hard_subreg_set): New function.\n+\t* rtl.h: (purge_hard_subreg_sets): New function.\n+\n 2000-09-18  Richard Henderson  <rth@cygnus.com>\n \n \t* config/ia64/ia64-protos.h: Update."}, {"sha": "969887fe94f6e270cafe73004ccfd6dc82c6aec8", "filename": "gcc/function.c", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659e47fb241303d55e264111360d41aa132947e1/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659e47fb241303d55e264111360d41aa132947e1/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=659e47fb241303d55e264111360d41aa132947e1", "patch": "@@ -294,6 +294,7 @@ static void emit_return_into_block PARAMS ((basic_block, rtx));\n static void put_addressof_into_stack PARAMS ((rtx, struct hash_table *));\n static boolean purge_addressof_1 PARAMS ((rtx *, rtx, int, int,\n \t\t\t\t\t  struct hash_table *));\n+static void purge_single_hard_subreg_set PARAMS ((rtx));\n #ifdef HAVE_epilogue\n static void keep_stack_depressed PARAMS ((rtx));\n #endif\n@@ -3393,6 +3394,71 @@ purge_addressof (insns)\n   unshare_all_rtl_again (get_insns ());\n }\n \f\n+/* Convert a SET of a hard subreg to a set of the appropriet hard\n+   register.  A subroutine of purge_hard_subreg_sets.  */\n+\n+static void\n+purge_single_hard_subreg_set (pattern)\n+     rtx pattern;\n+{\n+  rtx reg = SET_DEST (pattern);\n+  enum machine_mode mode = GET_MODE (SET_DEST (pattern));\n+  int word = 0;\n+\t\t  \n+  while (GET_CODE (reg) == SUBREG)\n+    {\n+      word += SUBREG_WORD (reg);\n+      reg = SUBREG_REG (reg);\n+    }\n+\t      \n+  if (REGNO (reg) < FIRST_PSEUDO_REGISTER)\n+    {\n+      reg = gen_rtx_REG (mode, REGNO (reg) + word);\n+      SET_DEST (pattern) = reg;\n+    }\n+}\n+\n+/* Eliminate all occurrences of SETs of hard subregs from INSNS.  The\n+   only such SETs that we expect to see are those left in because\n+   integrate can't handle sets of parts of a return value register.\n+\n+   We don't use alter_subreg because we only want to eliminate subregs\n+   of hard registers.  */\n+\n+void\n+purge_hard_subreg_sets (insn)\n+     rtx insn;\n+{\n+  for (; insn; insn = NEXT_INSN (insn))\n+    {\n+      if (INSN_P (insn))\n+\t{\n+\t  rtx pattern = PATTERN (insn);\n+\t  switch (GET_CODE (pattern))\n+\t    {\n+\t    case SET:\n+\t      if (GET_CODE (SET_DEST (pattern)) == SUBREG)\n+\t\tpurge_single_hard_subreg_set (pattern);\n+\t      break;\t      \n+\t    case PARALLEL:\n+\t      {\n+\t\tint j;\n+\t\tfor (j = XVECLEN (pattern, 0) - 1; j >= 0; j--)\n+\t\t  {\n+\t\t    rtx inner_pattern = XVECEXP (pattern, 0, j);\n+\t\t    if (GET_CODE (inner_pattern) == SET\n+\t\t\t&& GET_CODE (SET_DEST (inner_pattern)) == SUBREG)\n+\t\t      purge_single_hard_subreg_set (inner_pattern);\n+\t\t  }\n+\t      }\n+\t      break;\n+\t    default:\n+\t      break;\n+\t    }\n+\t}\n+    }\n+}\n+\f\n /* Pass through the INSNS of function FNDECL and convert virtual register\n    references to hard register references.  */\n "}, {"sha": "190e9717c374e5cb68ecd58da7bcaaa7d760edf2", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659e47fb241303d55e264111360d41aa132947e1/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659e47fb241303d55e264111360d41aa132947e1/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=659e47fb241303d55e264111360d41aa132947e1", "patch": "@@ -1776,6 +1776,7 @@ extern void preserve_rtl_expr_result\t\t\tPARAMS ((rtx));\n extern void mark_temp_addr_taken\t\t\tPARAMS ((rtx));\n extern void update_temp_slot_address\t\t\tPARAMS ((rtx, rtx));\n extern void purge_addressof\t\t\t\tPARAMS ((rtx));\n+extern void purge_hard_subreg_sets\t\t\tPARAMS ((rtx));\n \n /* In reload.c */\n extern int operands_match_p\t\tPARAMS ((rtx, rtx));"}, {"sha": "74e0e3ebcaebb1b206c5e7e264369a35b3d99e5f", "filename": "gcc/toplev.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659e47fb241303d55e264111360d41aa132947e1/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659e47fb241303d55e264111360d41aa132947e1/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=659e47fb241303d55e264111360d41aa132947e1", "patch": "@@ -2829,11 +2829,14 @@ rest_of_compilation (decl)\n   if (! DECL_DEFER_OUTPUT (decl))\n     TREE_ASM_WRITTEN (decl) = 1;\n \n-  /* Now that integrate will no longer see our rtl, we need not distinguish\n-     between the return value of this function and the return value of called\n-     functions.  */\n+  /* Now that integrate will no longer see our rtl, we need not\n+     distinguish between the return value of this function and the\n+     return value of called functions.  Also, we can remove all SETs\n+     of subregs of hard registers; they are only here because of\n+     integrate.*/\n   rtx_equal_function_value_matters = 0;\n-\n+  purge_hard_subreg_sets (get_insns ());\n+  \n   /* Don't return yet if -Wreturn-type; we need to do jump_optimize.  */\n   if ((rtl_dump_and_exit || flag_syntax_only) && !warn_return_type)\n     goto exit_rest_of_compilation;"}]}