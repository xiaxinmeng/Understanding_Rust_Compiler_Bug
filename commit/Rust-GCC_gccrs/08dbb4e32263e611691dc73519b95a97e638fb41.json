{"sha": "08dbb4e32263e611691dc73519b95a97e638fb41", "node_id": "C_kwDOANBUbNoAKDA4ZGJiNGUzMjI2M2U2MTE2OTFkYzczNTE5Yjk1YTk3ZTYzOGZiNDE", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-02-16T01:14:03Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-02-16T01:14:03Z"}, "message": "macros: Add base for execution tests for macros", "tree": {"sha": "8efd84f917a1a684e0813b55c552f140e89337d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8efd84f917a1a684e0813b55c552f140e89337d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08dbb4e32263e611691dc73519b95a97e638fb41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08dbb4e32263e611691dc73519b95a97e638fb41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08dbb4e32263e611691dc73519b95a97e638fb41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08dbb4e32263e611691dc73519b95a97e638fb41/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29e07e06beff540f6aacec89193ace75ae2d2d23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e07e06beff540f6aacec89193ace75ae2d2d23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29e07e06beff540f6aacec89193ace75ae2d2d23"}], "stats": {"total": 107, "additions": 107, "deletions": 0}, "files": [{"sha": "eab5a0285cf453b103472b03809a2e871d4d3513", "filename": "gcc/testsuite/rust/execute/xfail/macro1.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08dbb4e32263e611691dc73519b95a97e638fb41/gcc%2Ftestsuite%2Frust%2Fexecute%2Fxfail%2Fmacro1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08dbb4e32263e611691dc73519b95a97e638fb41/gcc%2Ftestsuite%2Frust%2Fexecute%2Fxfail%2Fmacro1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Fxfail%2Fmacro1.rs?ref=08dbb4e32263e611691dc73519b95a97e638fb41", "patch": "@@ -0,0 +1,32 @@\n+// { dg-output \"macro\\nmacro\\nmacro\\nmacro\\n\" }\n+extern \"C\" {\n+    fn printf(s: *const i8, ...);\n+}\n+\n+fn f() {\n+    let r_s = \"macro\\n\\0\";\n+    let s_p = r_s as *const str;\n+    let c_p = s_p as *const i8;\n+\n+    printf(c_p);\n+}\n+\n+macro_rules! empty0 {\n+    () => ( f() );\n+}\n+\n+macro_rules! empty1 {\n+    {} => { f() };\n+}\n+\n+macro_rules! empty2 {\n+    [] => [ f() ];\n+}\n+\n+// using multiple parens/brackets/curlies variants allows us to make sure we\n+// parse everything properly\n+fn main() {\n+    empty0!();\n+    empty1!{};\n+    empty2![];\n+}"}, {"sha": "49bd6a8c02655b1507f9d5689ea114133427c24e", "filename": "gcc/testsuite/rust/execute/xfail/macro2.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08dbb4e32263e611691dc73519b95a97e638fb41/gcc%2Ftestsuite%2Frust%2Fexecute%2Fxfail%2Fmacro2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08dbb4e32263e611691dc73519b95a97e638fb41/gcc%2Ftestsuite%2Frust%2Fexecute%2Fxfail%2Fmacro2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Fxfail%2Fmacro2.rs?ref=08dbb4e32263e611691dc73519b95a97e638fb41", "patch": "@@ -0,0 +1,30 @@\n+// { dg-output \"arg\\narg\\n\" }\n+extern \"C\" {\n+    fn printf(s: *const i8, ...);\n+}\n+\n+fn f() {\n+    let r_s = \"arg\\n\\0\";\n+    let s_p = r_s as *const str;\n+    let c_p = s_p as *const i8;\n+\n+    printf(c_p);\n+}\n+\n+macro_rules! kw0 {\n+    (keyword) => { f() };\n+}\n+\n+macro_rules! kw1 {\n+    (fn) => { f() };\n+}\n+\n+macro_rules! kw2 {\n+    (kw0 kw1 kw3) => { f() };\n+}\n+\n+fn main() {\n+    kw0!(keyword);\n+    kw1!(fn);\n+    kw2!(kw0 kw1 kw3);\n+}"}, {"sha": "0d99d7165ac40bc32c8e4b69c8540df2ad3bf102", "filename": "gcc/testsuite/rust/execute/xfail/macro3.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08dbb4e32263e611691dc73519b95a97e638fb41/gcc%2Ftestsuite%2Frust%2Fexecute%2Fxfail%2Fmacro3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08dbb4e32263e611691dc73519b95a97e638fb41/gcc%2Ftestsuite%2Frust%2Fexecute%2Fxfail%2Fmacro3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Fxfail%2Fmacro3.rs?ref=08dbb4e32263e611691dc73519b95a97e638fb41", "patch": "@@ -0,0 +1,45 @@\n+// { dg-output \"invok\\ninvok\\ninvok\\ninvok\\ninvok\\n\" }\n+extern \"C\" {\n+    fn printf(s: *const i8, ...);\n+}\n+\n+fn f() {\n+    let r_s = \"invok\\n\\0\";\n+    let s_p = r_s as *const str;\n+    let c_p = s_p as *const i8;\n+\n+    printf(c_p);\n+}\n+\n+macro_rules! invocation0 {\n+    (valid) => { f() };\n+    () => { };\n+}\n+\n+macro_rules! invocation1 {\n+    (valid) => { };\n+    () => { f() };\n+}\n+\n+macro_rules! invocation2 {\n+    (valid) => { f() };\n+    (invalid) => { };\n+}\n+\n+macro_rules! invocation3 {\n+    (this is a valid invocation) => { f() };\n+    (not this one) => { };\n+}\n+\n+macro_rules! invocation4 {\n+    (fn f() {}) => { f() };\n+    (not a keyword) => { };\n+}\n+\n+fn main() {\n+    invocation0!(valid);\n+    invocation1!();\n+    invocation2!(valid);\n+    invocation3!(this is a valid invocation);\n+    invocation4!(fn f() {});\n+}"}]}