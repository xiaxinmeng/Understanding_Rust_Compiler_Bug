{"sha": "ea8fbf8a3343437071b7bfdccf3b8acacd57b8e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE4ZmJmOGEzMzQzNDM3MDcxYjdiZmRjY2YzYjhhY2FjZDU3YjhlOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-15T02:21:56Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-15T02:21:56Z"}, "message": "(CONCAT): New rtx code.\n\nFrom-SVN: r4924", "tree": {"sha": "6d9e695bd048de6bcc0697c2d5b7071b58d17e46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d9e695bd048de6bcc0697c2d5b7071b58d17e46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea8fbf8a3343437071b7bfdccf3b8acacd57b8e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8fbf8a3343437071b7bfdccf3b8acacd57b8e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea8fbf8a3343437071b7bfdccf3b8acacd57b8e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8fbf8a3343437071b7bfdccf3b8acacd57b8e8/comments", "author": null, "committer": null, "parents": [{"sha": "fc84e8a81c6e02906f467755cca9789200251d36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc84e8a81c6e02906f467755cca9789200251d36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc84e8a81c6e02906f467755cca9789200251d36"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "d7c50d4948bab1c9ee9859776dfe6f3757dc3b2d", "filename": "gcc/rtl.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8fbf8a3343437071b7bfdccf3b8acacd57b8e8/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8fbf8a3343437071b7bfdccf3b8acacd57b8e8/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=ea8fbf8a3343437071b7bfdccf3b8acacd57b8e8", "patch": "@@ -540,6 +540,12 @@ DEF_RTL_EXPR(SUBREG, \"subreg\", \"ei\", 'x')\n \n DEF_RTL_EXPR(STRICT_LOW_PART, \"strict_low_part\", \"e\", 'x')\n \n+/* (CONCAT a b) represents the virtual concatenation of a and b\n+   to make a value that has as many bits as a and b put together.\n+   This is used for complex values.  Normally it appears only\n+   in DECL_RTLs and during RTL generation, but not in the insn chain.  */\n+DEF_RTL_EXPR(CONCAT, \"concat\", \"ee\", 'o')\n+\n /* A memory location; operand is the address.\n    Can be nested inside a VOLATILE.  */\n DEF_RTL_EXPR(MEM, \"mem\", \"e\", 'o')"}]}