{"sha": "1fc017b632c79110bfd8db534e76b81318cb7530", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZjMDE3YjYzMmM3OTExMGJmZDhkYjUzNGU3NmI4MTMxOGNiNzUzMA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2013-12-20T14:37:53Z"}, "committer": {"name": "Yvan Roux", "email": "yroux@gcc.gnu.org", "date": "2013-12-20T14:37:53Z"}, "message": "arm.h (THUMB_SECONDARY_OUTPUT_RELOAD_CLASS): Return NO_REGS for LRA.\n\n2013-12-20  Vladimir Makarov  <vmakarov@redhat.com>\n\n        * config/arm/arm.h (THUMB_SECONDARY_OUTPUT_RELOAD_CLASS): Return NO_REGS\n        for LRA.\n\nFrom-SVN: r206150", "tree": {"sha": "425119c0f8eed60c89cd49a9bbdfc6ffed783023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/425119c0f8eed60c89cd49a9bbdfc6ffed783023"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fc017b632c79110bfd8db534e76b81318cb7530", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fc017b632c79110bfd8db534e76b81318cb7530", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fc017b632c79110bfd8db534e76b81318cb7530", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fc017b632c79110bfd8db534e76b81318cb7530/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "706f749ad8c243cf349169296b8d501348ecb70d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706f749ad8c243cf349169296b8d501348ecb70d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706f749ad8c243cf349169296b8d501348ecb70d"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "bc9f5a3db705d85553ec675e6200216bbf2566de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fc017b632c79110bfd8db534e76b81318cb7530/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fc017b632c79110bfd8db534e76b81318cb7530/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1fc017b632c79110bfd8db534e76b81318cb7530", "patch": "@@ -1,3 +1,8 @@\n+2013-12-20  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* config/arm/arm.h (THUMB_SECONDARY_OUTPUT_RELOAD_CLASS): Return NO_REGS\n+\tfor LRA.\n+\n 2013-12-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm_acle.h: Add underscores before variables."}, {"sha": "288ff8b2fc8e9686b3ae64d891c2a551602d285a", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fc017b632c79110bfd8db534e76b81318cb7530/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fc017b632c79110bfd8db534e76b81318cb7530/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=1fc017b632c79110bfd8db534e76b81318cb7530", "patch": "@@ -1296,11 +1296,12 @@ enum reg_class\n       : NO_REGS))\n \n #define THUMB_SECONDARY_OUTPUT_RELOAD_CLASS(CLASS, MODE, X)\t\t\\\n-  ((CLASS) != LO_REGS && (CLASS) != BASE_REGS\t\t\t\t\\\n-   ? ((true_regnum (X) == -1 ? LO_REGS\t\t\t\t\t\\\n-       : (true_regnum (X) + HARD_REGNO_NREGS (0, MODE) > 8) ? LO_REGS\t\\\n-       : NO_REGS)) \t\t\t\t\t\t\t\\\n-   : NO_REGS)\n+  (lra_in_progress ? NO_REGS\t\t\t\t\t\t\\\n+   : (CLASS) != LO_REGS && (CLASS) != BASE_REGS\t\t\t\t\\\n+      ? ((true_regnum (X) == -1 ? LO_REGS\t\t\t\t\\\n+         : (true_regnum (X) + HARD_REGNO_NREGS (0, MODE) > 8) ? LO_REGS\t\\\n+         : NO_REGS)) \t\t\t\t\t\t\t\\\n+      : NO_REGS)\n \n /* Return the register class of a scratch register needed to copy IN into\n    or out of a register in CLASS in MODE.  If it can be done directly,"}]}