{"sha": "9a2091cd0a703e199c2c50225930071d00675a32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEyMDkxY2QwYTcwM2UxOTljMmM1MDIyNTkzMDA3MWQwMDY3NWEzMg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2011-06-17T02:18:24Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2011-06-17T02:18:24Z"}, "message": "re PR rtl-optimization/48542 (unchanged variables in code which calls setjmp may be clobbered (including the return-address))\n\n\tPR rtl-optimization/48542\n\t* reload.c (find_equiv_reg): Stop looking when finding a\n\tsetjmp-type call.\n\t* reload1.c (reload_as_needed): Invalidate all reload\n\tregisters when crossing a setjmp-type call.\n\nFrom-SVN: r175132", "tree": {"sha": "691aeafddb0a87acbd9aac366c7ea95648cda6d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/691aeafddb0a87acbd9aac366c7ea95648cda6d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a2091cd0a703e199c2c50225930071d00675a32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2091cd0a703e199c2c50225930071d00675a32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a2091cd0a703e199c2c50225930071d00675a32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2091cd0a703e199c2c50225930071d00675a32/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a26335b56fa55e06467e54d2683b156943028c30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26335b56fa55e06467e54d2683b156943028c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a26335b56fa55e06467e54d2683b156943028c30"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "26c1f813011b6c1d5017d0f61e23cc8b9e9962af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2091cd0a703e199c2c50225930071d00675a32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2091cd0a703e199c2c50225930071d00675a32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a2091cd0a703e199c2c50225930071d00675a32", "patch": "@@ -1,3 +1,11 @@\n+2011-06-17  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR rtl-optimization/48542\n+\t* reload.c (find_equiv_reg): Stop looking when finding a\n+\tsetjmp-type call.\n+\t* reload1.c (reload_as_needed): Invalidate all reload\n+\tregisters when crossing a setjmp-type call.\n+\n 2011-06-16  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-threadupdate.c (struct redirection_data): New field"}, {"sha": "3ad46b991ad3a01878ac8a54af30dc552cf11790", "filename": "gcc/reload.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2091cd0a703e199c2c50225930071d00675a32/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2091cd0a703e199c2c50225930071d00675a32/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=9a2091cd0a703e199c2c50225930071d00675a32", "patch": "@@ -6791,6 +6791,15 @@ find_equiv_reg (rtx goal, rtx insn, enum reg_class rclass, int other,\n \t  || num > PARAM_VALUE (PARAM_MAX_RELOAD_SEARCH_INSNS))\n \treturn 0;\n \n+      /* Don't reuse register contents from before a setjmp-type\n+\t function call; on the second return (from the longjmp) it\n+\t might have been clobbered by a later reuse.  It doesn't\n+\t seem worthwhile to actually go and see if it is actually\n+\t reused even if that information would be readily available;\n+\t just don't reuse it across the setjmp call.  */\n+      if (CALL_P (p) && find_reg_note (p, REG_SETJMP, NULL_RTX))\n+\treturn 0;\n+\n       if (NONJUMP_INSN_P (p)\n \t  /* If we don't want spill regs ...  */\n \t  && (! (reload_reg_p != 0"}, {"sha": "a87e6ad08d6f9ba6eb9c3e6d043ceca2d0b688e4", "filename": "gcc/reload1.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2091cd0a703e199c2c50225930071d00675a32/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2091cd0a703e199c2c50225930071d00675a32/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=9a2091cd0a703e199c2c50225930071d00675a32", "patch": "@@ -4844,6 +4844,13 @@ reload_as_needed (int live_known)\n \t{\n \t  AND_COMPL_HARD_REG_SET (reg_reloaded_valid, call_used_reg_set);\n \t  AND_COMPL_HARD_REG_SET (reg_reloaded_valid, reg_reloaded_call_part_clobbered);\n+\n+\t  /* If this is a call to a setjmp-type function, we must not\n+\t     reuse any reload reg contents across the call; that will\n+\t     just be clobbered by other uses of the register in later\n+\t     code, before the longjmp.  */\n+\t  if (find_reg_note (insn, REG_SETJMP, NULL_RTX))\n+\t    CLEAR_HARD_REG_SET (reg_reloaded_valid);\n \t}\n     }\n "}]}