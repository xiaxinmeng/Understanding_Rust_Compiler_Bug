{"sha": "19a0be3d6b537bc6c9566608cd657bcb96c2dec7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTlhMGJlM2Q2YjUzN2JjNmM5NTY2NjA4Y2Q2NTdiY2I5NmMyZGVjNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2014-04-22T16:51:14Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2014-04-22T16:51:14Z"}, "message": "Enable __gnat_alternate_stack for most linux\n\n\t* init.c [__linux__] (HAVE_GNAT_ALTERNATE_STACK): New define.\n\t(__gnat_alternate_stack): Enable for all linux except ia64.\n\nFrom-SVN: r209653", "tree": {"sha": "2c0bb9bc1cc2d95d356116b6b038ada6f5053e4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c0bb9bc1cc2d95d356116b6b038ada6f5053e4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19a0be3d6b537bc6c9566608cd657bcb96c2dec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19a0be3d6b537bc6c9566608cd657bcb96c2dec7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19a0be3d6b537bc6c9566608cd657bcb96c2dec7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19a0be3d6b537bc6c9566608cd657bcb96c2dec7/comments", "author": null, "committer": null, "parents": [{"sha": "793c625fb803247ea5b759c11dbeb3d6882cd74a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793c625fb803247ea5b759c11dbeb3d6882cd74a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/793c625fb803247ea5b759c11dbeb3d6882cd74a"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "0d3c7920e0e4454fd1a10642f15767f04acb3e98", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19a0be3d6b537bc6c9566608cd657bcb96c2dec7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19a0be3d6b537bc6c9566608cd657bcb96c2dec7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=19a0be3d6b537bc6c9566608cd657bcb96c2dec7", "patch": "@@ -1,3 +1,8 @@\n+2014-04-22  Richard Henderson  <rth@redhat.com>\n+\n+\t* init.c [__linux__] (HAVE_GNAT_ALTERNATE_STACK): New define.\n+\t(__gnat_alternate_stack): Enable for all linux except ia64.\n+\n 2014-04-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fe.h (Compiler_Abort): Replace Fat_Pointer with String_Pointer."}, {"sha": "48319d62f413262674819ec9dad43d064e32c607", "filename": "gcc/ada/init.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19a0be3d6b537bc6c9566608cd657bcb96c2dec7/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19a0be3d6b537bc6c9566608cd657bcb96c2dec7/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=19a0be3d6b537bc6c9566608cd657bcb96c2dec7", "patch": "@@ -556,9 +556,14 @@ __gnat_error_handler (int sig, siginfo_t *si ATTRIBUTE_UNUSED, void *ucontext)\n   Raise_From_Signal_Handler (exception, msg);\n }\n \n-#if defined (i386) || defined (__x86_64__) || defined (__powerpc__)\n-/* This must be in keeping with System.OS_Interface.Alternate_Stack_Size.  */\n-char __gnat_alternate_stack[16 * 1024]; /* 2 * SIGSTKSZ */\n+#ifndef __ia64__\n+#define HAVE_GNAT_ALTERNATE_STACK 1\n+/* This must be in keeping with System.OS_Interface.Alternate_Stack_Size.\n+   It must be larger than MINSIGSTKSZ and hopefully near 2 * SIGSTKSZ.  */\n+# if 16 * 1024 < MINSIGSTKSZ\n+#  error \"__gnat_alternate_stack too small\"\n+# endif\n+char __gnat_alternate_stack[16 * 1024];\n #endif\n \n #ifdef __XENO__\n@@ -612,7 +617,7 @@ __gnat_install_handler (void)\n     sigaction (SIGBUS,  &act, NULL);\n   if (__gnat_get_interrupt_state (SIGSEGV) != 's')\n     {\n-#if defined (i386) || defined (__x86_64__) || defined (__powerpc__)\n+#ifdef HAVE_GNAT_ALTERNATE_STACK\n       /* Setup an alternate stack region for the handler execution so that\n \t stack overflows can be handled properly, avoiding a SEGV generation\n \t from stack usage by the handler itself.  */"}]}