{"sha": "0c5e64c4249322a178e1a0e843874e4d6b43b992", "node_id": "C_kwDOANBUbNoAKDBjNWU2NGM0MjQ5MzIyYTE3OGUxYTBlODQzODc0ZTRkNmI0M2I5OTI", "commit": {"author": {"name": "Lin Sinan", "email": "mynameisxiaou@gmail.com", "date": "2023-04-11T16:23:19Z"}, "committer": {"name": "Jeff Law", "email": "jlaw@ventanamicro", "date": "2023-04-11T16:26:59Z"}, "message": "RISC-V: avoid splitting small constant in <or_optab>i<mode>_extrabit pattern\n\nthere is no need to split an xori/ori with an small constant. take the test\ncase `int foo(int idx) { return idx|3; }` as an example,\n\nrv64im_zba generates:\n        ori     a0,a0,3\n        ret\nbut, rv64im_zba_zbs generates:\n        ori     a0,a0,1\n        ori     a0,a0,2\n        ret\n\nwith this change, insn `ori r2,r1,3` will not be splitted in zbs.\n\ngcc/\n\t* config/riscv/predicates.md (uimm_extra_bit_or_twobits): Adjust\n\tpredicate to avoid splitting arith constants.\n\ngcc/testsuite\n\n\t* gcc.target/riscv/zbs-extra-bit-or-twobits.c: New test.", "tree": {"sha": "901d215d9f283ce9c1d30d191d2e0b094d15de6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/901d215d9f283ce9c1d30d191d2e0b094d15de6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c5e64c4249322a178e1a0e843874e4d6b43b992", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c5e64c4249322a178e1a0e843874e4d6b43b992", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c5e64c4249322a178e1a0e843874e4d6b43b992", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c5e64c4249322a178e1a0e843874e4d6b43b992/comments", "author": {"login": "linsinan1995", "id": 47880367, "node_id": "MDQ6VXNlcjQ3ODgwMzY3", "avatar_url": "https://avatars.githubusercontent.com/u/47880367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linsinan1995", "html_url": "https://github.com/linsinan1995", "followers_url": "https://api.github.com/users/linsinan1995/followers", "following_url": "https://api.github.com/users/linsinan1995/following{/other_user}", "gists_url": "https://api.github.com/users/linsinan1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/linsinan1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linsinan1995/subscriptions", "organizations_url": "https://api.github.com/users/linsinan1995/orgs", "repos_url": "https://api.github.com/users/linsinan1995/repos", "events_url": "https://api.github.com/users/linsinan1995/events{/privacy}", "received_events_url": "https://api.github.com/users/linsinan1995/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40fc8e3d4f600d89e6b065d6f12db7a816269c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40fc8e3d4f600d89e6b065d6f12db7a816269c8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40fc8e3d4f600d89e6b065d6f12db7a816269c8f"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "8654dbc5943544a441a6219ddd5b4a118a9fbdad", "filename": "gcc/config/riscv/predicates.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5e64c4249322a178e1a0e843874e4d6b43b992/gcc%2Fconfig%2Friscv%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5e64c4249322a178e1a0e843874e4d6b43b992/gcc%2Fconfig%2Friscv%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fpredicates.md?ref=0c5e64c4249322a178e1a0e843874e4d6b43b992", "patch": "@@ -399,7 +399,7 @@\n (define_predicate \"uimm_extra_bit_or_twobits\"\n   (and (match_code \"const_int\")\n        (ior (match_operand 0 \"uimm_extra_bit_operand\")\n-\t    (match_operand 0 \"const_twobits_operand\"))))\n+\t    (match_operand 0 \"const_twobits_not_arith_operand\"))))\n \n ;; A CONST_INT operand that fits into the negative half of a\n ;; signed-immediate after a single cleared top bit has been"}, {"sha": "ef7ed60461a05be2570f413e7c594a320c24de13", "filename": "gcc/testsuite/gcc.target/riscv/zbs-extra-bit-or-twobits.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5e64c4249322a178e1a0e843874e4d6b43b992/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fzbs-extra-bit-or-twobits.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5e64c4249322a178e1a0e843874e4d6b43b992/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fzbs-extra-bit-or-twobits.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fzbs-extra-bit-or-twobits.c?ref=0c5e64c4249322a178e1a0e843874e4d6b43b992", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gc_zbs -mabi=lp64\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-O0\" \"-Og\" } } */\n+\n+int or_two_bit(int idx) {\n+    return idx|3;\n+}\n+\n+int xor_two_bit(int idx) {\n+    return idx^3;\n+}\n+\n+/* { dg-final { scan-assembler-times \"\\tori\\t\" 1 } } */\n+/* { dg-final { scan-assembler-times \"\\txori\\t\" 1 } } */"}]}