{"sha": "50e6a1482b76a0a06aabf4587bf97da846ff2578", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBlNmExNDgyYjc2YTBhMDZhYWJmNDU4N2JmOTdkYTg0NmZmMjU3OA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2013-12-18T17:32:07Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2013-12-18T17:32:07Z"}, "message": "tree-ssa.texi (SSA Operands): Remove reference to SSA_OP_VMAYUSE.\n\n\t* doc/tree-ssa.texi (SSA Operands): Remove reference to\n\tSSA_OP_VMAYUSE.\n\tSynchronize SSA_OP* definitions with source.\n\t* ssa-iterators.h: Fix comment for FOR_EACH_IMM_USE_STMT.\n\tAdd not to SSA_OP* macro definitions.\n\nFrom-SVN: r206091", "tree": {"sha": "a9e25f7e11eba3819c7aaf8152c23753b9b82edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9e25f7e11eba3819c7aaf8152c23753b9b82edc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50e6a1482b76a0a06aabf4587bf97da846ff2578", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50e6a1482b76a0a06aabf4587bf97da846ff2578", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50e6a1482b76a0a06aabf4587bf97da846ff2578", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50e6a1482b76a0a06aabf4587bf97da846ff2578/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90be6e465c82f68e872ed9f5ea2388f709fee359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90be6e465c82f68e872ed9f5ea2388f709fee359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90be6e465c82f68e872ed9f5ea2388f709fee359"}], "stats": {"total": 47, "additions": 20, "deletions": 27}, "files": [{"sha": "e595132f8d3355c7fe823d7d619d41e3ee458dfe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50e6a1482b76a0a06aabf4587bf97da846ff2578/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50e6a1482b76a0a06aabf4587bf97da846ff2578/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50e6a1482b76a0a06aabf4587bf97da846ff2578", "patch": "@@ -1,3 +1,11 @@\n+2013-12-18  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* doc/tree-ssa.texi (SSA Operands): Remove reference to\n+\tSSA_OP_VMAYUSE.\n+\tSynchronize SSA_OP* definitions with source.\n+\t* ssa-iterators.h: Fix comment for FOR_EACH_IMM_USE_STMT.\n+\tAdd not to SSA_OP* macro definitions.\n+\n 2013-12-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/59539"}, {"sha": "17c1b0c70e4c1365bc1e75350eca61f65447a899", "filename": "gcc/doc/tree-ssa.texi", "status": "modified", "additions": 10, "deletions": 25, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50e6a1482b76a0a06aabf4587bf97da846ff2578/gcc%2Fdoc%2Ftree-ssa.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50e6a1482b76a0a06aabf4587bf97da846ff2578/gcc%2Fdoc%2Ftree-ssa.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftree-ssa.texi?ref=50e6a1482b76a0a06aabf4587bf97da846ff2578", "patch": "@@ -265,15 +265,15 @@ those you are interested in.  They are documented in\n #define SSA_OP_USE              0x01    /* @r{Real USE operands.}  */\n #define SSA_OP_DEF              0x02    /* @r{Real DEF operands.}  */\n #define SSA_OP_VUSE             0x04    /* @r{VUSE operands.}  */\n-#define SSA_OP_VMAYUSE          0x08    /* @r{USE portion of VDEFS.}  */\n-#define SSA_OP_VDEF             0x10    /* @r{DEF portion of VDEFS.}  */\n+#define SSA_OP_VDEF             0x08    /* @r{VDEF operands.}  */\n \n /* @r{These are commonly grouped operand flags.}  */\n-#define SSA_OP_VIRTUAL_USES     (SSA_OP_VUSE | SSA_OP_VMAYUSE)\n-#define SSA_OP_VIRTUAL_DEFS     (SSA_OP_VDEF)\n-#define SSA_OP_ALL_USES         (SSA_OP_VIRTUAL_USES | SSA_OP_USE)\n-#define SSA_OP_ALL_DEFS         (SSA_OP_VIRTUAL_DEFS | SSA_OP_DEF)\n-#define SSA_OP_ALL_OPERANDS     (SSA_OP_ALL_USES | SSA_OP_ALL_DEFS)\n+#define SSA_OP_VIRTUAL_USES\t(SSA_OP_VUSE)\n+#define SSA_OP_VIRTUAL_DEFS\t(SSA_OP_VDEF)\n+#define SSA_OP_ALL_VIRTUALS     (SSA_OP_VIRTUAL_USES | SSA_OP_VIRTUAL_DEFS)\n+#define SSA_OP_ALL_USES\t\t(SSA_OP_VIRTUAL_USES | SSA_OP_USE)\n+#define SSA_OP_ALL_DEFS\t\t(SSA_OP_VIRTUAL_DEFS | SSA_OP_DEF)\n+#define SSA_OP_ALL_OPERANDS\t(SSA_OP_ALL_USES | SSA_OP_ALL_DEFS)\n @end smallexample\n @end enumerate\n \n@@ -307,25 +307,10 @@ aren't using operand pointers, use and defs flags can be mixed.\n \n @code{VDEF}s are broken into two flags, one for the\n @code{DEF} portion (@code{SSA_OP_VDEF}) and one for the USE portion\n-(@code{SSA_OP_VMAYUSE}).  If all you want to look at are the\n-@code{VDEF}s together, there is a fourth iterator macro for this,\n-which returns both a def_operand_p and a use_operand_p for each\n-@code{VDEF} in the statement.  Note that you don't need any flags for\n-this one.\n+(@code{SSA_OP_VUSE}).\n \n-@smallexample\n-  use_operand_p use_p;\n-  def_operand_p def_p;\n-  ssa_op_iter iter;\n-\n-  FOR_EACH_SSA_MAYDEF_OPERAND (def_p, use_p, stmt, iter)\n-    @{\n-      my_code;\n-    @}\n-@end smallexample\n-\n-There are many examples in the code as well, as well as the\n-documentation in @file{tree-ssa-operands.h}.\n+There are many examples in the code, in addition to the documentation\n+in @file{tree-ssa-operands.h} and @file{ssa-iterators.h}.\n \n There are also a couple of variants on the stmt iterators regarding PHI\n nodes."}, {"sha": "7b13928cfb4506b8557a18f42dc4d31b5dc54b31", "filename": "gcc/ssa-iterators.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50e6a1482b76a0a06aabf4587bf97da846ff2578/gcc%2Fssa-iterators.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50e6a1482b76a0a06aabf4587bf97da846ff2578/gcc%2Fssa-iterators.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa-iterators.h?ref=50e6a1482b76a0a06aabf4587bf97da846ff2578", "patch": "@@ -98,7 +98,7 @@ struct imm_use_iterator\n    get access to each occurrence of ssavar on the stmt returned by\n    that iterator..  for instance:\n \n-     FOR_EACH_IMM_USE_STMT (stmt, iter, var)\n+     FOR_EACH_IMM_USE_STMT (stmt, iter, ssavar)\n        {\n          FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n \t   {\n@@ -142,13 +142,13 @@ struct ssa_op_iter\n   gimple stmt;\n };\n \n+/* NOTE: Keep these in sync with doc/tree-ssa.texi.  */\n /* These flags are used to determine which operands are returned during\n    execution of the loop.  */\n #define SSA_OP_USE\t\t0x01\t/* Real USE operands.  */\n #define SSA_OP_DEF\t\t0x02\t/* Real DEF operands.  */\n #define SSA_OP_VUSE\t\t0x04\t/* VUSE operands.  */\n #define SSA_OP_VDEF\t\t0x08\t/* VDEF operands.  */\n-\n /* These are commonly grouped operand flags.  */\n #define SSA_OP_VIRTUAL_USES\t(SSA_OP_VUSE)\n #define SSA_OP_VIRTUAL_DEFS\t(SSA_OP_VDEF)"}]}