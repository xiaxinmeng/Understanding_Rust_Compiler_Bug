{"sha": "0795b6f262e37218e80ee03d9c4c2f63541b149b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc5NWI2ZjI2MmUzNzIxOGU4MGVlMDNkOWM0YzJmNjM1NDFiMTQ5Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-01-08T16:01:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-01-08T16:01:05Z"}, "message": "PR c++/68983 (FE)\n\n\tPR c++/67557\n\t* call.c (unsafe_copy_elision_p): Look through COMPOUND_EXPR.\n\nFrom-SVN: r232166", "tree": {"sha": "a0f4be242d14a07d8b6b2951dfdec65d6f6e1ed8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0f4be242d14a07d8b6b2951dfdec65d6f6e1ed8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0795b6f262e37218e80ee03d9c4c2f63541b149b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0795b6f262e37218e80ee03d9c4c2f63541b149b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0795b6f262e37218e80ee03d9c4c2f63541b149b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0795b6f262e37218e80ee03d9c4c2f63541b149b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8babc12b224cfb1744799ad4d2020522b222e1fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8babc12b224cfb1744799ad4d2020522b222e1fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8babc12b224cfb1744799ad4d2020522b222e1fc"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "33680a4fcd7792e950aed829d1b06787cc47864f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0795b6f262e37218e80ee03d9c4c2f63541b149b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0795b6f262e37218e80ee03d9c4c2f63541b149b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0795b6f262e37218e80ee03d9c4c2f63541b149b", "patch": "@@ -1,3 +1,9 @@\n+2016-01-08  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/68983\n+\tPR c++/67557\n+\t* call.c (unsafe_copy_elision_p): Look through COMPOUND_EXPR.\n+\n 2016-01-05  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/58583"}, {"sha": "ad2c1bc081a4d717cc37c29fb22f25e10420ee4d", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0795b6f262e37218e80ee03d9c4c2f63541b149b/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0795b6f262e37218e80ee03d9c4c2f63541b149b/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=0795b6f262e37218e80ee03d9c4c2f63541b149b", "patch": "@@ -7161,6 +7161,9 @@ unsafe_copy_elision_p (tree target, tree exp)\n       && resolves_to_fixed_type_p (target, NULL))\n     return false;\n   tree init = TARGET_EXPR_INITIAL (exp);\n+  /* build_compound_expr pushes COMPOUND_EXPR inside TARGET_EXPR.  */\n+  while (TREE_CODE (init) == COMPOUND_EXPR)\n+    init = TREE_OPERAND (init, 1);\n   return (TREE_CODE (init) == AGGR_INIT_EXPR\n \t  && !AGGR_INIT_VIA_CTOR_P (init));\n }"}, {"sha": "f85d6eea40a567b9276df8d9203584eeee24f3d1", "filename": "gcc/testsuite/g++.dg/init/elide4.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0795b6f262e37218e80ee03d9c4c2f63541b149b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Felide4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0795b6f262e37218e80ee03d9c4c2f63541b149b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Felide4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Felide4.C?ref=0795b6f262e37218e80ee03d9c4c2f63541b149b", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/67557\n+\n+class A {\n+public:\n+  A m_fn1();\n+  A(A const &);\n+  int *L;\n+  int ref;\n+};\n+struct B : A {\n+  B();\n+};\n+B::B() : A((0, m_fn1())) {}"}]}