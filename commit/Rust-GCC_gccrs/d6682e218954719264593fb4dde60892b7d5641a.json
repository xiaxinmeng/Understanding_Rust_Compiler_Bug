{"sha": "d6682e218954719264593fb4dde60892b7d5641a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY2ODJlMjE4OTU0NzE5MjY0NTkzZmI0ZGRlNjA4OTJiN2Q1NjQxYQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2006-11-07T00:08:32Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2006-11-07T00:08:32Z"}, "message": "sourcebuild.texi (Test Directives): Add output-exists and output-exists-not.\n\ngcc/\n\n2006-11-06  Janis Johnson  <janis187@us.ibm.com>\n\n\t* gcc/doc/sourcebuild.texi (Test Directives): Add output-exists\n\tand output-exists-not.\n\ngcc/testsuite/\n\n2006-11-06  Janis Johnson  <janis187@us.ibm.com\n\t    Bernhard Fischer  <aldot@gcc.gnu.org>\n\n\t* lib/gcc-dg.exp (output-exists): New proc.\n\t(output-exists-not): New proc.\n\t* gcc.test-framework/test-framework.awk: Support new directives.\n\t* gcc.test-framework/dg-outexistsnot-exp-F.c: New test.\n\t* gcc.test-framework/dg-outexistsnot-exp-P.c: New test.\n\t* gcc.test-framework/dg-outexists-exp-F.c: New test.\n\t* gcc.test-framework/dg-outexists-exp-XP.c: New test.\n\t* gcc.test-framework/dg-outexistsnot-exp-XF.c: New test.\n\t* gcc.test-framework/dg-outexists-exp-P.c: New test.\n\nFrom-SVN: r118531", "tree": {"sha": "d7d574cf62797eef3062a916b1322eb815dab24c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7d574cf62797eef3062a916b1322eb815dab24c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6682e218954719264593fb4dde60892b7d5641a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6682e218954719264593fb4dde60892b7d5641a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6682e218954719264593fb4dde60892b7d5641a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6682e218954719264593fb4dde60892b7d5641a/comments", "author": null, "committer": null, "parents": [{"sha": "3ea0e1e4d30782b7e9656a899b7ae306f360c350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea0e1e4d30782b7e9656a899b7ae306f360c350", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ea0e1e4d30782b7e9656a899b7ae306f360c350"}], "stats": {"total": 117, "additions": 112, "deletions": 5}, "files": [{"sha": "165e0373c0c4a62ecb8d36af57a2345b27cabedf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6682e218954719264593fb4dde60892b7d5641a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6682e218954719264593fb4dde60892b7d5641a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6682e218954719264593fb4dde60892b7d5641a", "patch": "@@ -1,3 +1,8 @@\n+2006-11-06  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* gcc/doc/sourcebuild.texi (Test Directives): Add output-exists\n+\tand output-exists-not.\n+\n 2006-11-06  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR tree-opt/29439"}, {"sha": "a2661fe4358f34ee285aee21379e092a7e39e731", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=d6682e218954719264593fb4dde60892b7d5641a", "patch": "@@ -1130,6 +1130,12 @@ suffix @var{suffix}.\n Passes if @var{regex} does not match demangled text in the dump file with\n suffix @var{suffix}.\n \n+@item output-exists [@{ target/xfail @var{selector} @}]\n+Passes if compiler output file exists.\n+\n+@item output-exists-not [@{ target/xfail @var{selector} @}]\n+Passes if compiler output file does not exist.\n+\n @item run-gcov @var{sourcefile}\n Check line counts in @command{gcov} tests.\n "}, {"sha": "f9baa74b8a30e5da351eca4088bbd9a73f8a1e26", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d6682e218954719264593fb4dde60892b7d5641a", "patch": "@@ -1,3 +1,16 @@\n+2006-11-06  Janis Johnson  <janis187@us.ibm.com\n+\t    Bernhard Fischer  <aldot@gcc.gnu.org>\n+\n+\t* lib/gcc-dg.exp (output-exists): New proc.\n+\t(output-exists-not): New proc.\n+\t* gcc.test-framework/test-framework.awk: Support new directives.\n+\t* gcc.test-framework/dg-outexistsnot-exp-F.c: New test.\n+\t* gcc.test-framework/dg-outexistsnot-exp-P.c: New test.\n+\t* gcc.test-framework/dg-outexists-exp-F.c: New test.\n+\t* gcc.test-framework/dg-outexists-exp-XP.c: New test.\n+\t* gcc.test-framework/dg-outexistsnot-exp-XF.c: New test.\n+\t* gcc.test-framework/dg-outexists-exp-P.c: New test.\n+\n 2006-11-06  Erik Edelmann  <eedelman@gcc.gnu.org>\n \n \tPR fortran/29630"}, {"sha": "397ec68a204858284cf8c7c3fefb51ba64a91f02", "filename": "gcc/testsuite/gcc.test-framework/dg-outexists-exp-F.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexists-exp-F.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexists-exp-F.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexists-exp-F.c?ref=d6682e218954719264593fb4dde60892b7d5641a", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-W -Werror\" } */\n+\n+int main (void) { 0; }   /* { dg-warning \"no effect\" } */\n+\n+/* { dg-warning \"warnings being treated as errors\" \"\" { target *-*-* } 0 } */\n+/* { dg-final { output-exists { target *-*-* } } } */"}, {"sha": "04ed266e890febd8ac2952f3eae65dd12e233f19", "filename": "gcc/testsuite/gcc.test-framework/dg-outexists-exp-P.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexists-exp-P.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexists-exp-P.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexists-exp-P.c?ref=d6682e218954719264593fb4dde60892b7d5641a", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+\n+int main (void) { return 0; }\n+\n+/* { dg-final { output-exists } } */"}, {"sha": "61e40ee2c8222b02dfb6e47e077af5d245ae205d", "filename": "gcc/testsuite/gcc.test-framework/dg-outexists-exp-XP.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexists-exp-XP.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexists-exp-XP.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexists-exp-XP.c?ref=d6682e218954719264593fb4dde60892b7d5641a", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do assemble } */\n+\n+int main (void) { return 0; }\n+\n+/* { dg-final { output-exists { xfail *-*-* } } } */"}, {"sha": "f9d58ab2a3dd918ca8c2f772a1adff62cc022359", "filename": "gcc/testsuite/gcc.test-framework/dg-outexistsnot-exp-F.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexistsnot-exp-F.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexistsnot-exp-F.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexistsnot-exp-F.c?ref=d6682e218954719264593fb4dde60892b7d5641a", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do link } */\n+\n+int main (void) { return 0; }\n+\n+/* { dg-final { output-exists-not { target bogus-bogus-bogus } } } */"}, {"sha": "0076752410b3aeac27bf68acab031b5a70efe6c1", "filename": "gcc/testsuite/gcc.test-framework/dg-outexistsnot-exp-P.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexistsnot-exp-P.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexistsnot-exp-P.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexistsnot-exp-P.c?ref=d6682e218954719264593fb4dde60892b7d5641a", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-W -Werror\" } */\n+\n+int main (void) { 0; }   /* { dg-warning \"no effect\" } */\n+\n+/* { dg-warning \"warnings being treated as errors\" \"\" { target *-*-* } 0 } */\n+/* { dg-final { output-exists-not { target *-*-* } } } */"}, {"sha": "818685b5c54b8ebee13e5a2a187b53fc5de58f25", "filename": "gcc/testsuite/gcc.test-framework/dg-outexistsnot-exp-XF.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexistsnot-exp-XF.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexistsnot-exp-XF.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-outexistsnot-exp-XF.c?ref=d6682e218954719264593fb4dde60892b7d5641a", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do link } */\n+\n+int main (void) { return 0; }\n+\n+/* { dg-final { output-exists-not { xfail *-*-* } } } */"}, {"sha": "daefa0ce51c279e1dbfe7becc619b7871842cd45", "filename": "gcc/testsuite/gcc.test-framework/test-framework.awk", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Ftest-framework.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Fgcc.test-framework%2Ftest-framework.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Ftest-framework.awk?ref=d6682e218954719264593fb4dde60892b7d5641a", "patch": "@@ -40,17 +40,20 @@ BEGIN\t\t\t{ skip = 1; passes = 0; fails = 0; }\n /^PASS.*-2.c/\t\t{ ignore(); next }\n # dg-xfail-if applies to the compile step; these should be XPASS for the\n # compile step on dox tests, which are run tests.\n-/^XPASS.*dox.*xiff.*-1.c.*(test for excess errors)/ { ignore(); next }\n+/^XPASS.*dox.*xiff.*-1.c.*\\(test for excess errors\\)/ { ignore(); next }\n # xfail for scan-assembler-not tests doesn't apply to the compile step.\n-/^PASS.*sa.*-1.c.*(test for excess errors)/ { ignore(); next }\n+/^PASS.*sa.*-1.c.*\\(test for excess errors\\)/ { ignore(); next }\n+# ignore compile step, tests for warnings for output-exists[-not] tests.\n+/dg-outexists.*\\(test for excess errors)/ { ignore(); next }\n+/dg-outexists.*\\(test for warnings/ { ignore(); next }\n # The other dox tests pass the compile step; ignore that message.\n-/^PASS.*dox.*(test for excess errors)/ { ignore(); next }\n+/^PASS.*dox.*\\(test for excess errors\\)/ { ignore(); next }\n # The sf tests pass the compile step; ignore that message.\n-/^PASS.*sf.*(test for excess errors)/ { ignore(); next }\n+/^PASS.*sf.*\\(test for excess errors\\)/ { ignore(); next }\n # Ignore lines that begin with comma.\n /^,/\t\t\t{ ignore(); next }\n # For tests of dg-output, ignore successful compilation.\n-/^PASS.*dg-output.*(test for excess error)/\t{ ignore(); next }\n+/^PASS.*dg-output.*\\(test for excess errors\\)/\t{ ignore(); next }\n # For tests of dg-output, ignore successful execution.\n /^PASS.*dg-output.*execution test/\t{ ignore(); next }\n /^PASS/\t\t\t{ if (match ($0, \"exp-P\")) { pass(); next } }"}, {"sha": "2dedf3b512aafb84e226f5ad50bc24f0f7b87971", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6682e218954719264593fb4dde60892b7d5641a/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=d6682e218954719264593fb4dde60892b7d5641a", "patch": "@@ -446,6 +446,52 @@ proc cleanup-modules { modlist } {\n     }\n }\n \n+# Verify that the compiler output file exists, invoked via dg-final.\n+proc output-exists { args } {\n+    # Process an optional target or xfail list.\n+    if { [llength $args] >= 1 } {\n+\tswitch [dg-process-target [lindex $args 0]] {\n+\t    \"S\" { }\n+\t    \"N\" { return }\n+\t    \"F\" { setup_xfail \"*-*-*\" }\n+\t    \"P\" { }\n+\t}\n+    }\n+\n+    # Access variables from gcc-dg-test-1.\n+    upvar 2 name testcase\n+    upvar 2 output_file output_file\n+\n+    if [file exists $output_file] {\n+\tpass \"$testcase output-exists $output_file\"\n+    } else {\n+\tfail \"$testcase output-exists $output_file\"\n+    }\n+}\n+\n+# Verify that the compiler output file does not exist, invoked via dg-final.\n+proc output-exists-not { args } {\n+    # Process an optional target or xfail list.\n+    if { [llength $args] >= 1 } {\n+\tswitch [dg-process-target [lindex $args 0]] {\n+\t    \"S\" { }\n+\t    \"N\" { return }\n+\t    \"F\" { setup_xfail \"*-*-*\" }\n+\t    \"P\" { }\n+\t}\n+    }\n+\n+    # Access variables from gcc-dg-test-1.\n+    upvar 2 name testcase\n+    upvar 2 output_file output_file\n+\n+    if [file exists $output_file] {\n+\tfail \"$testcase output-exists-not $output_file\"\n+    } else {\n+\tpass \"$testcase output-exists-not $output_file\"\n+    }\n+}\n+\n # We need to make sure that additional_* are cleared out after every\n # test.  It is not enough to clear them out *before* the next test run\n # because gcc-target-compile gets run directly from some .exp files"}]}