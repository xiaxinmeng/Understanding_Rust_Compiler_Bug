{"sha": "9077d7fa031b08f503059a48742be592a4244d0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA3N2Q3ZmEwMzFiMDhmNTAzMDU5YTQ4NzQyYmU1OTJhNDI0NGQwZg==", "commit": {"author": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1992-07-09T22:30:46Z"}, "committer": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1992-07-09T22:30:46Z"}, "message": "entered into RCS\n\nFrom-SVN: r1545", "tree": {"sha": "4f5bdc47922fb3cc44ce078a06d3bf3cdcca38c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f5bdc47922fb3cc44ce078a06d3bf3cdcca38c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9077d7fa031b08f503059a48742be592a4244d0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9077d7fa031b08f503059a48742be592a4244d0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9077d7fa031b08f503059a48742be592a4244d0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9077d7fa031b08f503059a48742be592a4244d0f/comments", "author": null, "committer": null, "parents": [{"sha": "3af184704a9eebb740b83ca6f31687fce3a72cae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3af184704a9eebb740b83ca6f31687fce3a72cae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3af184704a9eebb740b83ca6f31687fce3a72cae"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ca506178a106e538a0d8ceea2e9d667934c6da71", "filename": "gcc/longlong.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9077d7fa031b08f503059a48742be592a4244d0f/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9077d7fa031b08f503059a48742be592a4244d0f/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=9077d7fa031b08f503059a48742be592a4244d0f", "patch": "@@ -892,12 +892,12 @@\n   } while (0)\n \n /* If the processor has no udiv_qrnnd but sdiv_qrnnd, go through\n-   __udiv_using_sdiv (defined in libgcc or elsewhere).  */\n+   __udiv_w_sdiv (defined in libgcc or elsewhere).  */\n #if !defined (udiv_qrnnd) && defined (sdiv_qrnnd)\n #define udiv_qrnnd(q, r, nh, nl, d) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     USItype __r;\t\t\t\t\t\t\t\\\n-    (q) = __udiv_using_sdiv (&__r, nh, nl, d);\t\t\t\t\\\n+    (q) = __udiv_w_sdiv (&__r, nh, nl, d);\t\t\t\t\\\n     (r) = __r;\t\t\t\t\t\t\t\t\\\n   } while (0)\n #endif"}]}