{"sha": "243e28bfb984e4cd2f0008e5096d9e5d6941e622", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQzZTI4YmZiOTg0ZTRjZDJmMDAwOGU1MDk2ZDllNWQ2OTQxZTYyMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-03-20T10:06:00Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-03-20T10:06:00Z"}, "message": "MPX: fix PR middle-end/79753\n\n2017-03-20  Martin Liska  <mliska@suse.cz>\n\n\tPR middle-end/79753\n\t* tree-chkp.c (chkp_build_returned_bound): Do not build\n\treturned bounds for a LHS that's not a BOUNDED_P type.\n2017-03-20  Martin Liska  <mliska@suse.cz>\n\n\tPR middle-end/79753\n\t* gcc.target/i386/mpx/pr79753.c: New test.\n\nFrom-SVN: r246276", "tree": {"sha": "dc6752f8d9cebc7d61e8a7709391fa345e70b635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc6752f8d9cebc7d61e8a7709391fa345e70b635"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/243e28bfb984e4cd2f0008e5096d9e5d6941e622", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243e28bfb984e4cd2f0008e5096d9e5d6941e622", "html_url": "https://github.com/Rust-GCC/gccrs/commit/243e28bfb984e4cd2f0008e5096d9e5d6941e622", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243e28bfb984e4cd2f0008e5096d9e5d6941e622/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "918112d378787a2227f61225098289a14b1ccd22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/918112d378787a2227f61225098289a14b1ccd22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/918112d378787a2227f61225098289a14b1ccd22"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "5024c0f56c7c68631b276fb9e4387c9efafd46ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243e28bfb984e4cd2f0008e5096d9e5d6941e622/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243e28bfb984e4cd2f0008e5096d9e5d6941e622/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=243e28bfb984e4cd2f0008e5096d9e5d6941e622", "patch": "@@ -1,3 +1,9 @@\n+2017-03-20  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/79753\n+\t* tree-chkp.c (chkp_build_returned_bound): Do not build\n+\treturned bounds for a LHS that's not a BOUNDED_P type.\n+\n 2017-03-20  Martin Liska  <mliska@suse.cz>\n \n \tPR target/79769"}, {"sha": "2a767588727208d0cfb7fc39a53991c4e32ea3f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243e28bfb984e4cd2f0008e5096d9e5d6941e622/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243e28bfb984e4cd2f0008e5096d9e5d6941e622/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=243e28bfb984e4cd2f0008e5096d9e5d6941e622", "patch": "@@ -1,3 +1,8 @@\n+2017-03-20  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/79753\n+\t* gcc.target/i386/mpx/pr79753.c: New test.\n+\n 2017-03-20  Martin Liska  <mliska@suse.cz>\n \n \tPR target/79769"}, {"sha": "9b7bc52e1ede022194ee8b190fdbe67ea4f00165", "filename": "gcc/testsuite/gcc.target/i386/mpx/pr79753.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243e28bfb984e4cd2f0008e5096d9e5d6941e622/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fpr79753.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243e28bfb984e4cd2f0008e5096d9e5d6941e622/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fpr79753.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fpr79753.c?ref=243e28bfb984e4cd2f0008e5096d9e5d6941e622", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx -O2\" } */\n+\n+int\n+foo (void)\n+{\n+  return 0;\n+}\n+\n+void\n+bar (int **p)\n+{\n+  *p = (int *) (__UINTPTR_TYPE__) foo ();\n+}"}, {"sha": "b1ff21851c6a0aa2602c7a658944cf200bcaa0af", "filename": "gcc/tree-chkp.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243e28bfb984e4cd2f0008e5096d9e5d6941e622/gcc%2Ftree-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243e28bfb984e4cd2f0008e5096d9e5d6941e622/gcc%2Ftree-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp.c?ref=243e28bfb984e4cd2f0008e5096d9e5d6941e622", "patch": "@@ -2218,6 +2218,7 @@ chkp_build_returned_bound (gcall *call)\n   gimple *stmt;\n   tree fndecl = gimple_call_fndecl (call);\n   unsigned int retflags;\n+  tree lhs = gimple_call_lhs (call);\n \n   /* To avoid fixing alloca expands in targets we handle\n      it separately.  */\n@@ -2227,9 +2228,8 @@ chkp_build_returned_bound (gcall *call)\n \t  || DECL_FUNCTION_CODE (fndecl) == BUILT_IN_ALLOCA_WITH_ALIGN))\n     {\n       tree size = gimple_call_arg (call, 0);\n-      tree lb = gimple_call_lhs (call);\n       gimple_stmt_iterator iter = gsi_for_stmt (call);\n-      bounds = chkp_make_bounds (lb, size, &iter, true);\n+      bounds = chkp_make_bounds (lhs, size, &iter, true);\n     }\n   /* We know bounds returned by set_bounds builtin call.  */\n   else if (fndecl\n@@ -2282,9 +2282,10 @@ chkp_build_returned_bound (gcall *call)\n \n       bounds = chkp_find_bounds (gimple_call_arg (call, argno), &iter);\n     }\n-  else if (chkp_call_returns_bounds_p (call))\n+  else if (chkp_call_returns_bounds_p (call)\n+\t   && BOUNDED_P (lhs))\n     {\n-      gcc_assert (TREE_CODE (gimple_call_lhs (call)) == SSA_NAME);\n+      gcc_assert (TREE_CODE (lhs) == SSA_NAME);\n \n       /* In general case build checker builtin call to\n \t obtain returned bounds.  */\n@@ -2311,7 +2312,7 @@ chkp_build_returned_bound (gcall *call)\n       print_gimple_stmt (dump_file, call, 0, TDF_VOPS|TDF_MEMSYMS);\n     }\n \n-  bounds = chkp_maybe_copy_and_register_bounds (gimple_call_lhs (call), bounds);\n+  bounds = chkp_maybe_copy_and_register_bounds (lhs, bounds);\n \n   return bounds;\n }"}]}