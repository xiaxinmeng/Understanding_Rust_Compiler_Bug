{"sha": "0817c46a989afbeedbf5fc68f12d730185d07f6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgxN2M0NmE5ODlhZmJlZWRiZjVmYzY4ZjEyZDczMDE4NWQwN2Y2ZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2006-11-11T16:55:48Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2006-11-11T16:55:48Z"}, "message": "extended.texi (__builtin_expect): We no longer require second argument to be constant.\n\n\n\t* extended.texi (__builtin_expect): We no longer require second argument\n\tto be constant.\n\t* gengtype.c (adjust_field_rtx_def): Drop NOTE_INSN_EXPECTED_VALUE.\n\t* builtins.c (expand_builtin_expect): Simplify.\n\t(expand_builtin_expect_jump): Kill.\n\t* final.c (final_scan_insn): Do not skip the removed notes.\n\t* insn-notes.def (LOOP_BEG, LOOP_END, REPEATED_LINE_NUMBER,\n\tEXPECTED_VALUE): Remove.\n\t* dojump.c (do_jump): Do not care about __builtin_expect.\n\t* predict.c (expected_value_to_br_prob): Kill.\n\t* function.c (expand_function_end): Do not expand\n\tNOTE_INSN_REPEATED_LINE_NUMBER.\n\t* print-rtl.c (print_rtx): Do not pretty print the removed notes.\n\t* expect.c (sjlj_emit_function_enter): Emit directly branch probability.\n\t* cfgexpand.c (add_reg_br_prob_note): Export.\n\t* cfgcleanup.c (rest_of_handle_jump2): Do not call\n\texpected_value_to_br_prob.\n\t* cfglayout.c (duplicate_insn_chain): Do not deal with removed notes.\n\t* rtl.h (add_reg_br_prob_note): Declare.\n\nFrom-SVN: r118697", "tree": {"sha": "ebaf2d0f7f14b8c5384aaefa4b737af4bfe47e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebaf2d0f7f14b8c5384aaefa4b737af4bfe47e3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0817c46a989afbeedbf5fc68f12d730185d07f6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0817c46a989afbeedbf5fc68f12d730185d07f6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0817c46a989afbeedbf5fc68f12d730185d07f6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0817c46a989afbeedbf5fc68f12d730185d07f6d/comments", "author": null, "committer": null, "parents": [{"sha": "ef950eba664843fe4cb27c6d85809e84189b1381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef950eba664843fe4cb27c6d85809e84189b1381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef950eba664843fe4cb27c6d85809e84189b1381"}], "stats": {"total": 14, "additions": 0, "deletions": 14}, "files": [{"sha": "9f942bb354d45cdb460c621110679543d66c51c9", "filename": "gcc/insn-notes.def", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0817c46a989afbeedbf5fc68f12d730185d07f6d/gcc%2Finsn-notes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0817c46a989afbeedbf5fc68f12d730185d07f6d/gcc%2Finsn-notes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finsn-notes.def?ref=0817c46a989afbeedbf5fc68f12d730185d07f6d", "patch": "@@ -43,10 +43,6 @@ INSN_NOTE (DELETED_LABEL)\n INSN_NOTE (BLOCK_BEG)\n INSN_NOTE (BLOCK_END)\n \n-/* These mark the extremes of a loop.  */\n-INSN_NOTE (LOOP_BEG)\n-INSN_NOTE (LOOP_END)\n-\n /* This note indicates the start of the real body of the function,\n    i.e. the point just after all of the parms have been moved into\n    their homes, etc.  */\n@@ -70,19 +66,9 @@ INSN_NOTE (EPILOGUE_BEG)\n INSN_NOTE (EH_REGION_BEG)\n INSN_NOTE (EH_REGION_END)\n \n-/* Generated whenever a duplicate line number note is output.\n-   For example, one is output after the end of an inline function,\n-   in order to prevent the line containing the inline call from\n-   being counted twice in gcov.  */\n-INSN_NOTE (REPEATED_LINE_NUMBER)\n-\n /* The location of a variable.  */\n INSN_NOTE (VAR_LOCATION)\n \n-/* Record the expected value of a register at a location.  Uses\n-   NOTE_EXPECTED_VALUE; stored as (eq (reg) (const_int)).  */\n-INSN_NOTE (EXPECTED_VALUE)\n-\n /* Record the struct for the following basic block.  Uses\n    NOTE_BASIC_BLOCK.  FIXME: Redundant with the basic block pointer\n    now included in every insn.  */"}]}