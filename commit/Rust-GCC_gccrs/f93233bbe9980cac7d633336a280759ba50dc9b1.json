{"sha": "f93233bbe9980cac7d633336a280759ba50dc9b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkzMjMzYmJlOTk4MGNhYzdkNjMzMzM2YTI4MDc1OWJhNTBkYzliMQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-02-10T09:13:41Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-02-10T09:13:41Z"}, "message": "reload1.c (reload_combine_note_store): Second argument is no longer unused/ignored.\n\n        * reload1.c (reload_combine_note_store): Second argument is no\n        longer unused/ignored.  Handle multi-register hard regs.\n        (move2add_note_store): Simplify.\n\nFrom-SVN: r25124", "tree": {"sha": "1943a695b06e8f9a52b958e1ef6bff07bd7f5f21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1943a695b06e8f9a52b958e1ef6bff07bd7f5f21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f93233bbe9980cac7d633336a280759ba50dc9b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f93233bbe9980cac7d633336a280759ba50dc9b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f93233bbe9980cac7d633336a280759ba50dc9b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f93233bbe9980cac7d633336a280759ba50dc9b1/comments", "author": null, "committer": null, "parents": [{"sha": "93ea10ba5b8bee5cc7aa10392d7cc80f3662fba5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93ea10ba5b8bee5cc7aa10392d7cc80f3662fba5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93ea10ba5b8bee5cc7aa10392d7cc80f3662fba5"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "2c610829ebc25ad6d00bf42630f032f94f206d5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93233bbe9980cac7d633336a280759ba50dc9b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93233bbe9980cac7d633336a280759ba50dc9b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f93233bbe9980cac7d633336a280759ba50dc9b1", "patch": "@@ -1,3 +1,9 @@\n+Wed Feb 10 10:09:41 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* reload1.c (reload_combine_note_store): Second argument is no\n+\tlonger unused/ignored.  Handle multi-register hard regs.\n+\t(move2add_note_store): Simplify.\n+\n Wed Feb 10 10:05:23 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \n         * collect2.c (collect_execute): Remove cygwin-specific code."}, {"sha": "bfa25021ba482bd8a8e51daa3183911d229651c1", "filename": "gcc/reload1.c", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93233bbe9980cac7d633336a280759ba50dc9b1/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93233bbe9980cac7d633336a280759ba50dc9b1/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=f93233bbe9980cac7d633336a280759ba50dc9b1", "patch": "@@ -9714,11 +9714,10 @@ reload_combine ()\n \n /* Check if DST is a register or a subreg of a register; if it is,\n    update reg_state[regno].store_ruid and reg_state[regno].use_index\n-   accordingly.  Called via note_stores from reload_combine.\n-   The second argument, SET, is ignored.  */\n+   accordingly.  Called via note_stores from reload_combine.  */\n static void\n reload_combine_note_store (dst, set)\n-     rtx dst, set ATTRIBUTE_UNUSED;\n+     rtx dst, set;\n {\n   int regno = 0;\n   int i;\n@@ -9742,8 +9741,11 @@ reload_combine_note_store (dst, set)\n       || GET_CODE (SET_DEST (set)) == SIGN_EXTRACT\n       || GET_CODE (SET_DEST (set)) == STRICT_LOW_PART)\n     {\n-      reg_state[regno].use_index = -1;\n-      reg_state[regno].store_ruid = reload_combine_ruid;\n+      for (i = size / UNITS_PER_WORD - 1 + regno; i >= regno; i--)\n+\t{\n+\t  reg_state[i].use_index = -1;\n+\t  reg_state[i].store_ruid = reload_combine_ruid;\n+\t}\n     }\n   else\n     {\n@@ -10058,21 +10060,13 @@ move2add_note_store (dst, set)\n \n   regno += REGNO (dst);\n \n-  if (HARD_REGNO_NREGS (regno, mode) == 1 && GET_CODE (set) == SET)\n+  if (HARD_REGNO_NREGS (regno, mode) == 1 && GET_CODE (set) == SET\n+      && GET_CODE (SET_DEST (set)) != ZERO_EXTRACT\n+      && GET_CODE (SET_DEST (set)) != SIGN_EXTRACT\n+      && GET_CODE (SET_DEST (set)) != STRICT_LOW_PART)\n     {\n       rtx src = SET_SRC (set);\n \n-      /* Indicate that this register has been recently written to,\n-\t but the exact contents are not available.  */\n-      if (GET_CODE (SET_DEST (set)) == ZERO_EXTRACT\n-\t  || GET_CODE (SET_DEST (set)) == SIGN_EXTRACT\n-\t  || GET_CODE (SET_DEST (set)) == STRICT_LOW_PART)\n-\t{\n-\t  reg_set_luid[regno] = move2add_luid;\n-\t  reg_offset[regno] = dst;\n-\t  return;\n-\t}\n-\n       reg_mode[regno] = mode;\n       switch (GET_CODE (src))\n \t{"}]}