{"sha": "b95cd48b01b1340475dd7a408af6d665822a8cf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk1Y2Q0OGIwMWIxMzQwNDc1ZGQ3YTQwOGFmNmQ2NjU4MjJhOGNmNQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-06-21T22:11:04Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-06-21T22:11:04Z"}, "message": "libgo: remove old MIPS architecture names\n    \n    This removes the old names for the 3 main MIPS ABIs: mipso32, mipsn32\n    and mipsn64. It also removes the mipso64 ABI which has no equivalent\n    architecture name in go. This ABI has been dead for sometime and I doubt\n    anyone will miss it.\n    \n    Reviewed-on: https://go-review.googlesource.com/46154\n\nFrom-SVN: r249477", "tree": {"sha": "72625660a997749459ccfe70d454dc9febc61f6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72625660a997749459ccfe70d454dc9febc61f6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b95cd48b01b1340475dd7a408af6d665822a8cf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b95cd48b01b1340475dd7a408af6d665822a8cf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b95cd48b01b1340475dd7a408af6d665822a8cf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b95cd48b01b1340475dd7a408af6d665822a8cf5/comments", "author": null, "committer": null, "parents": [{"sha": "1701a9d8f0ca4153bbf3cf75487c6a14606e5121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1701a9d8f0ca4153bbf3cf75487c6a14606e5121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1701a9d8f0ca4153bbf3cf75487c6a14606e5121"}], "stats": {"total": 65, "additions": 19, "deletions": 46}, "files": [{"sha": "7eb0770fd65d0b3975d9b21fbe5f5719debd4bf8", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -1,4 +1,4 @@\n-3f713ddb2a9a2a736f3a12d71c56cb7fd444afba\n+a4b455aa584e0d6e362a88597f11bba1427088e2\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "48feebdb10d4d57ad837272cbb6b84159b87a196", "filename": "libgo/configure", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -13645,7 +13645,7 @@ esac\n # supported by the gofrontend and all architectures supported by the\n # gc toolchain.\n # N.B. Keep in sync with gcc/testsuite/go.test/go-test.exp (go-set-goarch).\n-ALLGOARCH=\"386 alpha amd64 amd64p32 arm armbe arm64 arm64be ia64 m68k mipso32 mipsn32 mipso64 mipsn64 mips mipsle mips64 mips64le mips64p32 mips64p32le ppc ppc64 ppc64le s390 s390x sparc sparc64\"\n+ALLGOARCH=\"386 alpha amd64 amd64p32 arm armbe arm64 arm64be ia64 m68k mips mipsle mips64 mips64le mips64p32 mips64p32le ppc ppc64 ppc64le s390 s390x sparc sparc64\"\n \n # All known GOARCH_FAMILY values.\n ALLGOARCHFAMILY=\"I386 ALPHA AMD64 ARM ARM64 IA64 M68K MIPS MIPS64 PPC PPC64 S390 S390X SPARC SPARC64\"\n@@ -13747,16 +13747,6 @@ else\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n   mips_abi=\"n64\"\n-else\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-#if _MIPS_SIM != _ABIO64\n-#error not o64\n-#endif\n-_ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n-  mips_abi=\"o64\"\n else\n   as_fn_error \"unknown MIPS ABI\" \"$LINENO\" 5\n mips_abi=\"n32\"\n@@ -13765,21 +13755,18 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     case \"$mips_abi\" in\n     \"o32\") GOARCH=mips ;;\n     \"n32\") GOARCH=mips64p32 ;;\n     \"n64\") GOARCH=mips64 ;;\n-    \"o64\") GOARCH=mipso64 ;;\n     esac\n     case \"$mips_abi\" in\n     \"o32\" | \"n32\")\n         GOARCH_FAMILY=MIPS\n \tGOARCH_MINFRAMESIZE=4\n         ;;\n-    \"n64\" | \"o64\")\n+    \"n64\")\n         GOARCH_FAMILY=MIPS64\n \tGOARCH_MINFRAMESIZE=8\n         ;;"}, {"sha": "45cd086b272771107b58282d5fd2c38e03e04726", "filename": "libgo/configure.ac", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -208,7 +208,7 @@ AC_SUBST(USE_DEJAGNU)\n # supported by the gofrontend and all architectures supported by the\n # gc toolchain.\n # N.B. Keep in sync with gcc/testsuite/go.test/go-test.exp (go-set-goarch).\n-ALLGOARCH=\"386 alpha amd64 amd64p32 arm armbe arm64 arm64be ia64 m68k mipso32 mipsn32 mipso64 mipsn64 mips mipsle mips64 mips64le mips64p32 mips64p32le ppc ppc64 ppc64le s390 s390x sparc sparc64\"\n+ALLGOARCH=\"386 alpha amd64 amd64p32 arm armbe arm64 arm64be ia64 m68k mips mipsle mips64 mips64le mips64p32 mips64p32le ppc ppc64 ppc64le s390 s390x sparc sparc64\"\n \n # All known GOARCH_FAMILY values.\n ALLGOARCHFAMILY=\"I386 ALPHA AMD64 ARM ARM64 IA64 M68K MIPS MIPS64 PPC PPC64 S390 S390X SPARC SPARC64\"\n@@ -291,25 +291,19 @@ GOARCH_HUGEPAGESIZE=\"1 << 21\"\n #error not n64\n #endif],\n [mips_abi=\"n64\"],\n-\t[AC_COMPILE_IFELSE([\n-#if _MIPS_SIM != _ABIO64\n-#error not o64\n-#endif],\n-[mips_abi=\"o64\"],\n \t[AC_MSG_ERROR([unknown MIPS ABI])\n-[mips_abi=\"n32\"]])])])])\n+[mips_abi=\"n32\"]])])])\n     case \"$mips_abi\" in\n     \"o32\") GOARCH=mips ;;\n     \"n32\") GOARCH=mips64p32 ;;\n     \"n64\") GOARCH=mips64 ;;\n-    \"o64\") GOARCH=mipso64 ;;\n     esac\n     case \"$mips_abi\" in\n     \"o32\" | \"n32\")\n         GOARCH_FAMILY=MIPS\n \tGOARCH_MINFRAMESIZE=4\n         ;;\n-    \"n64\" | \"o64\")\n+    \"n64\")\n         GOARCH_FAMILY=MIPS64\n \tGOARCH_MINFRAMESIZE=8\n         ;;"}, {"sha": "ac102050dadc18dde2040b378b5f9f43e16e9569", "filename": "libgo/go/cmd/cgo/main.go", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fcmd%2Fcgo%2Fmain.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fcmd%2Fcgo%2Fmain.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fcgo%2Fmain.go?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -145,10 +145,6 @@ var ptrSizeMap = map[string]int64{\n \t\"arm\":         4,\n \t\"arm64\":       8,\n \t\"m68k\":        4,\n-\t\"mipso32\":     4,\n-\t\"mipsn32\":     4,\n-\t\"mipso64\":     8,\n-\t\"mipsn64\":     8,\n \t\"mips\":        4,\n \t\"mipsle\":      4,\n \t\"mips64\":      8,\n@@ -171,10 +167,6 @@ var intSizeMap = map[string]int64{\n \t\"arm\":         4,\n \t\"arm64\":       8,\n \t\"m68k\":        4,\n-\t\"mipso32\":     4,\n-\t\"mipsn32\":     4,\n-\t\"mipso64\":     8,\n-\t\"mipsn64\":     8,\n \t\"mips\":        4,\n \t\"mipsle\":      4,\n \t\"mips64\":      8,"}, {"sha": "290ba9efa0cf6b770617c29c494c1f28b6f687c9", "filename": "libgo/go/go/build/syslist.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fgo%2Fbuild%2Fsyslist.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fgo%2Fbuild%2Fsyslist.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fbuild%2Fsyslist.go?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -5,4 +5,4 @@\n package build\n \n const goosList = \"aix android darwin dragonfly freebsd linux nacl netbsd openbsd plan9 solaris windows zos \"\n-const goarchList = \"386 amd64 amd64p32 arm armbe arm64 arm64be alpha m68k ppc64 ppc64le mips mipsle mips64 mips64le mips64p32 mips64p32le mipso32 mipsn32 mipsn64 mipso64 ppc s390 s390x sparc sparc64 \"\n+const goarchList = \"386 amd64 amd64p32 arm armbe arm64 arm64be alpha m68k ppc64 ppc64le mips mipsle mips64 mips64le mips64p32 mips64p32le ppc s390 s390x sparc sparc64 \""}, {"sha": "4d8f6c53a9929d87435507fcd3f1ed0e41cebc8e", "filename": "libgo/go/internal/syscall/unix/getrandom_linux_mips64p32x.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Finternal%2Fsyscall%2Funix%2Fgetrandom_linux_mips64p32x.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Finternal%2Fsyscall%2Funix%2Fgetrandom_linux_mips64p32x.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fsyscall%2Funix%2Fgetrandom_linux_mips64p32x.go?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build mipsn32 mips64p32 mips64p32le\n+// +build mips64p32 mips64p32le\n \n package unix\n "}, {"sha": "b328b8f1f0e59e5fcc120da0e08455d0ef9046a1", "filename": "libgo/go/internal/syscall/unix/getrandom_linux_mips64x.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Finternal%2Fsyscall%2Funix%2Fgetrandom_linux_mips64x.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Finternal%2Fsyscall%2Funix%2Fgetrandom_linux_mips64x.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fsyscall%2Funix%2Fgetrandom_linux_mips64x.go?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build mips64 mips64le mipsn64 mipso64\n+// +build mips64 mips64le\n \n package unix\n "}, {"sha": "dd2e657fe3f7b42c39d2619c0746f6887183442d", "filename": "libgo/go/runtime/hash32.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fruntime%2Fhash32.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fruntime%2Fhash32.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fhash32.go?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -6,7 +6,7 @@\n //   xxhash: https://code.google.com/p/xxhash/\n // cityhash: https://code.google.com/p/cityhash/\n \n-// +build 386 arm armbe m68k mipso32 mipsn32 mips mipsle ppc s390 sparc\n+// +build 386 arm armbe m68k mips mipsle ppc s390 sparc\n \n package runtime\n "}, {"sha": "f7d4a6f2f2a23a6b93b8f8eeac0d0c6442f60baf", "filename": "libgo/go/runtime/hash64.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fruntime%2Fhash64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fruntime%2Fhash64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fhash64.go?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -6,7 +6,7 @@\n //   xxhash: https://code.google.com/p/xxhash/\n // cityhash: https://code.google.com/p/cityhash/\n \n-// +build amd64 amd64p32 arm64 mips64 mips64le ppc64 ppc64le s390x alpha arm64be ia64 mipso64 mipsn64 mips64p32 mips64p32le sparc64\n+// +build amd64 amd64p32 arm64 mips64 mips64le ppc64 ppc64le s390x alpha arm64be ia64 mips64p32 mips64p32le sparc64\n \n package runtime\n "}, {"sha": "ab0edab68f50f0efeaf28e7e9c0adf361142c43c", "filename": "libgo/go/runtime/lfstack_32bit.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fruntime%2Flfstack_32bit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fruntime%2Flfstack_32bit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Flfstack_32bit.go?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build 386 arm nacl armbe m68k mips mipsle mips64p32 mips64p32le mipso32 mipsn32 ppc s390 sparc\n+// +build 386 arm nacl armbe m68k mips mipsle mips64p32 mips64p32le ppc s390 sparc\n \n package runtime\n "}, {"sha": "3d5588df558b1102bd5b463ae5a6e2bc45d38253", "filename": "libgo/go/runtime/lfstack_64bit.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fruntime%2Flfstack_64bit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fruntime%2Flfstack_64bit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Flfstack_64bit.go?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build amd64 arm64 mips64 mips64le ppc64 ppc64le s390x arm64be alpha mipsn64 sparc64 ia64\n+// +build amd64 arm64 mips64 mips64le ppc64 ppc64le s390x arm64be alpha sparc64 ia64\n \n package runtime\n "}, {"sha": "a33c87acd56a0cf466dcdc2fcf41f685b508e0f4", "filename": "libgo/go/runtime/unaligned2.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fruntime%2Funaligned2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fruntime%2Funaligned2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Funaligned2.go?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build arm mips mipsle mips64 mips64le armbe m68k mipso32 mipsn32 sparc alpha ia64 mipso64 mipsn64 mips64p32 mips64p32le sparc64\n+// +build arm mips mipsle mips64 mips64le armbe m68k sparc alpha ia64 mips64p32 mips64p32le sparc64\n \n package runtime\n "}, {"sha": "f8ee7cfc233f6686cc1601e111d309d291310659", "filename": "libgo/go/syscall/endian_big.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fsyscall%2Fendian_big.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fgo%2Fsyscall%2Fendian_big.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fendian_big.go?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n //\n-// +build ppc64 s390x mips mips64 armbe arm64be m68k ppc mipso32 mipsn32 mipso64 mipsn64 mips64p32 s390 sparc sparc64\n+// +build ppc64 s390x mips mips64 armbe arm64be m68k ppc mips64p32 s390 sparc sparc64\n \n package syscall\n "}, {"sha": "f87a51d8f1f5ed10ccd7bb8ca6790e0dbe01f3e3", "filename": "libgo/match.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fmatch.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Fmatch.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmatch.sh?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -116,7 +116,7 @@ for f in $gofiles; do\n \taix | android | darwin | dragonfly | freebsd | linux | nacl | netbsd | openbsd | plan9 | solaris | windows)\n \t    tag1=nonmatchingtag\n \t    ;;\n-\t386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | mipso32 | mipsn32 | mipsn64 | mipso64 | ppc | s390 | s390x | sparc | sparc64)\n+\t386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | s390 | s390x | sparc | sparc64)\n \t    tag1=nonmatchingtag\n \t    ;;\n     esac\n@@ -128,7 +128,7 @@ for f in $gofiles; do\n \taix | android | darwin | dragonfly | freebsd | linux | nacl | netbsd | openbsd | plan9 | solaris | windows)\n \t    tag2=nonmatchingtag\n \t    ;;\n-\t386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | mipso32 | mipsn32 | mipsn64 | mipso64 | ppc | s390 | s390x | sparc | sparc64)\n+\t386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | s390 | s390x | sparc | sparc64)\n \t    tag2=nonmatchingtag\n \t    ;;\n     esac"}, {"sha": "ad3a485d14fe24c795618108bde575e305807186", "filename": "libgo/testsuite/gotest", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Ftestsuite%2Fgotest", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95cd48b01b1340475dd7a408af6d665822a8cf5/libgo%2Ftestsuite%2Fgotest", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2Fgotest?ref=b95cd48b01b1340475dd7a408af6d665822a8cf5", "patch": "@@ -314,7 +314,7 @@ x)\n \t    aix | android | darwin | dragonfly | freebsd | linux | nacl | netbsd | openbsd | plan9 | solaris | windows)\n \t\ttag1=nonmatchingtag\n \t\t;;\n-\t    386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | mipso32 | mipsn32 | mipsn64 | mipso64 | ppc | s390 | s390x | sparc | sparc64)\n+\t    386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | s390 | s390x | sparc | sparc64)\n \t\ttag1=nonmatchingtag\n \t\t;;\n \t    esac\n@@ -326,7 +326,7 @@ x)\n \t    aix | android | darwin | dragonfly | freebsd | linux | nacl | netbsd | openbsd | plan9 | solaris | windows)\n \t\ttag2=nonmatchingtag\n \t\t;;\n-\t    386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | mipso32 | mipsn32 | mipsn64 | mipso64 | ppc | s390 | s390x | sparc | sparc64)\n+\t    386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | s390 | s390x | sparc | sparc64)\n \t\ttag2=nonmatchingtag\n \t\t;;\n \t    esac"}]}