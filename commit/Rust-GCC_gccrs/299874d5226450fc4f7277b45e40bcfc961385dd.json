{"sha": "299874d5226450fc4f7277b45e40bcfc961385dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk5ODc0ZDUyMjY0NTBmYzRmNzI3N2I0NWU0MGJjZmM5NjEzODVkZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-10-16T19:55:28Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-10-16T19:55:28Z"}, "message": "compiler: Method names must be non-blank.\n\nFixes issue 8078.\n\nFrom-SVN: r216347", "tree": {"sha": "13ad57b78a65a07e11bdc3acb1ceeaf27b591b0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13ad57b78a65a07e11bdc3acb1ceeaf27b591b0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/299874d5226450fc4f7277b45e40bcfc961385dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/299874d5226450fc4f7277b45e40bcfc961385dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/299874d5226450fc4f7277b45e40bcfc961385dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/299874d5226450fc4f7277b45e40bcfc961385dd/comments", "author": null, "committer": null, "parents": [{"sha": "aa19484867eaa93a771e96438eda6947b5e69753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa19484867eaa93a771e96438eda6947b5e69753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa19484867eaa93a771e96438eda6947b5e69753"}], "stats": {"total": 20, "additions": 4, "deletions": 16}, "files": [{"sha": "b97ada19c84b57cb19e8fd29fd5b75992c841c51", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299874d5226450fc4f7277b45e40bcfc961385dd/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299874d5226450fc4f7277b45e40bcfc961385dd/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=299874d5226450fc4f7277b45e40bcfc961385dd", "patch": "@@ -1253,6 +1253,8 @@ Parse::method_spec(Typed_identifier_list* methods)\n   if (this->advance_token()->is_op(OPERATOR_LPAREN))\n     {\n       // This is a MethodName.\n+      if (name == \"_\")\n+\terror_at(this->location(), \"methods must have a unique non-blank name\");\n       name = this->gogo_->pack_hidden_name(name, is_exported);\n       Type* type = this->signature(NULL, location);\n       if (type == NULL)"}, {"sha": "b10d02f2485adb66c1411351ce4909661325ef6d", "filename": "gcc/testsuite/go.test/test/interface/explicit.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299874d5226450fc4f7277b45e40bcfc961385dd/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Finterface%2Fexplicit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299874d5226450fc4f7277b45e40bcfc961385dd/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Finterface%2Fexplicit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Finterface%2Fexplicit.go?ref=299874d5226450fc4f7277b45e40bcfc961385dd", "patch": "@@ -83,12 +83,12 @@ var m4 = M(jj) // ERROR \"invalid|wrong type for M method\"\n \n \n type B1 interface {\n-\t_()\n+\t_() // ERROR \"methods must have a unique non-blank name\"\n }\n \n type B2 interface {\n \tM()\n-\t_()\n+\t_() // ERROR \"methods must have a unique non-blank name\"\n }\n \n type T2 struct{}"}, {"sha": "d40a1513832115bc8c3d015575126d14141f564d", "filename": "gcc/testsuite/go.test/test/interface/fail.go", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299874d5226450fc4f7277b45e40bcfc961385dd/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Finterface%2Ffail.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299874d5226450fc4f7277b45e40bcfc961385dd/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Finterface%2Ffail.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Finterface%2Ffail.go?ref=299874d5226450fc4f7277b45e40bcfc961385dd", "patch": "@@ -14,7 +14,6 @@ type I interface {\n \n func main() {\n \tshouldPanic(p1)\n-\tshouldPanic(p2)\n }\n \n func p1() {\n@@ -30,19 +29,6 @@ type S struct{}\n \n func (s *S) _() {}\n \n-type B interface {\n-\t_()\n-}\n-\n-func p2() {\n-\tvar s *S\n-\tvar b B\n-\tvar e interface{}\n-\te = s\n-\tb = e.(B)\n-\t_ = b\n-}\n-\n func shouldPanic(f func()) {\n \tdefer func() {\n \t\tif recover() == nil {"}]}