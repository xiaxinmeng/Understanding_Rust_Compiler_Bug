{"sha": "bf8b4985abe198142d29a1f570f489ac2de29a2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY4YjQ5ODVhYmUxOTgxNDJkMjlhMWY1NzBmNDg5YWMyZGUyOWEyZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-15T11:46:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-15T11:46:02Z"}, "message": "(max_label_num_after_reload): New variable.\n\n(rest_of_compilation): Set it.\n\nFrom-SVN: r11777", "tree": {"sha": "09946540f79462ca520dea7710d8e981a5fecb27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09946540f79462ca520dea7710d8e981a5fecb27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf8b4985abe198142d29a1f570f489ac2de29a2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf8b4985abe198142d29a1f570f489ac2de29a2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf8b4985abe198142d29a1f570f489ac2de29a2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf8b4985abe198142d29a1f570f489ac2de29a2d/comments", "author": null, "committer": null, "parents": [{"sha": "63eac4d4851a76546d79981f8f285a09183bfa3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63eac4d4851a76546d79981f8f285a09183bfa3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63eac4d4851a76546d79981f8f285a09183bfa3c"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "7fb0810fb20ebe954be69fd4f1982f67307b0ffc", "filename": "gcc/toplev.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8b4985abe198142d29a1f570f489ac2de29a2d/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8b4985abe198142d29a1f570f489ac2de29a2d/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=bf8b4985abe198142d29a1f570f489ac2de29a2d", "patch": "@@ -272,6 +272,10 @@ void (*incomplete_decl_finalize_hook) () = 0;\n \n void (*interim_eh_hook)\tPROTO((tree));\n \n+/* Highest label number used at the end of reload.  */\n+\n+int max_label_num_after_reload;\n+\n /* Nonzero if generating code to do profiling.  */\n \n int profile_flag = 0;\n@@ -3112,6 +3116,10 @@ rest_of_compilation (decl)\n \t     fprintf (global_reg_dump_file, \"\\n;; Function %s\\n\\n\",\n \t\t      IDENTIFIER_POINTER (DECL_NAME (decl))));\n \n+  /* Save the last label number used so far, so reorg can tell\n+     when it's safe to kill spill regs.  */\n+  max_label_num_after_reload = max_label_num ();\n+\n   /* Unless we did stupid register allocation,\n      allocate remaining pseudo-regs, then do the reload pass\n      fixing up any insns that are invalid.  */"}]}