{"sha": "1a27522615276224fb32f46e9627eef0a9ea30d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEyNzUyMjYxNTI3NjIyNGZiMzJmNDZlOTYyN2VlZjBhOWVhMzBkMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-29T05:10:13Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-29T05:10:13Z"}, "message": "h8300-protos.h: Update the prototype of output_a_shift.\n\n\t* config/h8300/h8300-protos.h: Update the prototype of\n\toutput_a_shift.\n\t* config/h8300/h8300.c (output_a_shift): Remove an unused\n\targument 'insn'.  Remove redundant code.\n\t* config/h8300/h8300.md: Adust to the new prototype of\n\toutput_a_shift.\n\nFrom-SVN: r49310", "tree": {"sha": "36eae926eb66986fa716a97e3cd7eb15494baaa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36eae926eb66986fa716a97e3cd7eb15494baaa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a27522615276224fb32f46e9627eef0a9ea30d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a27522615276224fb32f46e9627eef0a9ea30d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a27522615276224fb32f46e9627eef0a9ea30d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a27522615276224fb32f46e9627eef0a9ea30d0/comments", "author": null, "committer": null, "parents": [{"sha": "a11d9dfc0a361855fda8f957ff2a0bba6494d3f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a11d9dfc0a361855fda8f957ff2a0bba6494d3f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a11d9dfc0a361855fda8f957ff2a0bba6494d3f6"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "73370c32e8d7978f3255e3b38ece08bb1b9cbe23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a27522615276224fb32f46e9627eef0a9ea30d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a27522615276224fb32f46e9627eef0a9ea30d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a27522615276224fb32f46e9627eef0a9ea30d0", "patch": "@@ -1,3 +1,12 @@\n+2002-01-29  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300-protos.h: Update the prototype of\n+\toutput_a_shift.\n+\t* config/h8300/h8300.c (output_a_shift): Remove an unused\n+\targument 'insn'.  Remove redundant code.\n+\t* config/h8300/h8300.md: Adust to the new prototype of\n+\toutput_a_shift.\n+\n 2002-01-29  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/h8300-protos.h: Update the prototypes of"}, {"sha": "67f0ed9bf86368780db95792923987165fd7cf68", "filename": "gcc/config/h8300/h8300-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a27522615276224fb32f46e9627eef0a9ea30d0/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a27522615276224fb32f46e9627eef0a9ea30d0/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h?ref=1a27522615276224fb32f46e9627eef0a9ea30d0", "patch": "@@ -26,7 +26,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Declarations for functions used in insn-output.c.  */\n #ifdef RTX_CODE\n-extern const char *output_a_shift PARAMS ((rtx, rtx *));\n+extern const char *output_a_shift PARAMS ((rtx *));\n extern const char *emit_a_rotate PARAMS ((enum rtx_code, rtx *));\n extern const char *output_simode_bld PARAMS ((int, rtx[]));\n extern void print_operand_address PARAMS ((FILE *, rtx));"}, {"sha": "e9962092b621a263e38638dd48822009214dc299", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 14, "deletions": 23, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a27522615276224fb32f46e9627eef0a9ea30d0/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a27522615276224fb32f46e9627eef0a9ea30d0/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=1a27522615276224fb32f46e9627eef0a9ea30d0", "patch": "@@ -2431,8 +2431,7 @@ get_shift_alg (shift_type, shift_mode, count, info)\n /* Emit the assembler code for doing shifts.  */\n \n const char *\n-output_a_shift (insn, operands)\n-     rtx insn ATTRIBUTE_UNUSED;\n+output_a_shift (operands)\n      rtx *operands;\n {\n   static int loopend_lab;\n@@ -2517,18 +2516,15 @@ output_a_shift (insn, operands)\n \t  n = info.remainder;\n \n \t  /* Emit two bit shifts first.  */\n-\t  while (n > 1 && info.shift2 != NULL)\n+\t  if (info.shift2 != NULL)\n \t    {\n-\t      output_asm_insn (info.shift2, operands);\n-\t      n -= 2;\n+\t      for (; n > 1; n -= 2)\n+\t\toutput_asm_insn (info.shift2, operands);\n \t    }\n \n \t  /* Now emit one bit shifts for any residual.  */\n-\t  while (n > 0)\n-\t    {\n-\t      output_asm_insn (info.shift1, operands);\n-\t      n -= 1;\n-\t    }\n+\t  for (; n > 0; n--)\n+\t    output_asm_insn (info.shift1, operands);\n \n \t  /* Keep track of CC.  */\n \t  if (info.cc_valid_p)\n@@ -2542,8 +2538,8 @@ output_a_shift (insn, operands)\n \t  {\n \t    int m = GET_MODE_BITSIZE (mode) - n;\n \t    int mask = (shift_type == SHIFT_ASHIFT\n-\t\t\t? ((1 << (GET_MODE_BITSIZE (mode) - n)) - 1) << n\n-\t\t\t: (1 << (GET_MODE_BITSIZE (mode) - n)) - 1);\n+\t\t\t? ((1 << m) - 1) << n\n+\t\t\t: (1 << m) - 1);\n \t    char insn_buf[200];\n \n \t    /* Not all possibilities of rotate are supported.  They shouldn't\n@@ -2552,18 +2548,15 @@ output_a_shift (insn, operands)\n \t      abort ();\n \n \t    /* Emit two bit rotates first.  */\n-\t    while (m > 1 && info.shift2 != NULL)\n+\t    if (info.shift2 != NULL)\n \t      {\n-\t\toutput_asm_insn (info.shift2, operands);\n-\t\tm -= 2;\n+\t\tfor (; m > 1; m -= 2)\n+\t\t  output_asm_insn (info.shift2, operands);\n \t      }\n \n \t    /* Now single bit rotates for any residual.  */\n-\t    while (m > 0)\n-\t      {\n-\t\toutput_asm_insn (info.shift1, operands);\n-\t\tm -= 1;\n-\t      }\n+\t    for (; m > 0; m--)\n+\t      output_asm_insn (info.shift1, operands);\n \n \t    /* Now mask off the high bits.  */\n \t    if (TARGET_H8300)\n@@ -2579,10 +2572,8 @@ output_a_shift (insn, operands)\n \t\t    sprintf (insn_buf, \"and\\t#%d,%%s0\\n\\tand\\t#%d,%%t0\",\n \t\t\t     mask & 255, mask >> 8);\n \t\t    break;\n-\t\t  case SImode:\n-\t\t    abort ();\n \t\t  default:\n-\t\t    break;\n+\t\t    abort ();\n \t\t  }\n \t      }\n \t    else"}, {"sha": "f67e22e303a0ee2f57579f5b479ea75ebc2dbfa3", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a27522615276224fb32f46e9627eef0a9ea30d0/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a27522615276224fb32f46e9627eef0a9ea30d0/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=1a27522615276224fb32f46e9627eef0a9ea30d0", "patch": "@@ -1837,7 +1837,7 @@\n \t\t\t  (match_operand:QI 2 \"nonmemory_operand\" \"KM,rn\")]))\n    (clobber (match_scratch:QI 4 \"=X,&r\"))]\n   \"\"\n-  \"* return output_a_shift (insn, operands);\"\n+  \"* return output_a_shift (operands);\"\n   [(set_attr \"length\" \"20\")\n    (set_attr \"cc\" \"clobber\")])\n \n@@ -1871,7 +1871,7 @@\n \t\t\t  (match_operand:QI 2 \"nonmemory_operand\" \"KM,rn\")]))\n    (clobber (match_scratch:QI 4 \"=X,&r\"))]\n   \"\"\n-  \"* return output_a_shift (insn, operands);\"\n+  \"* return output_a_shift (operands);\"\n   [(set_attr \"length\" \"20\")\n    (set_attr \"cc\" \"clobber\")])\n \n@@ -1908,7 +1908,7 @@\n \t\t\t  (match_operand:QI 2 \"nonmemory_operand\" \"K,rn\")]))\n    (clobber (match_scratch:QI 4 \"=X,&r\"))]\n   \"\"\n-  \"* return output_a_shift (insn, operands);\"\n+  \"* return output_a_shift (operands);\"\n   [(set_attr \"length\" \"20\")\n    (set_attr \"cc\" \"clobber\")])\n \f"}]}