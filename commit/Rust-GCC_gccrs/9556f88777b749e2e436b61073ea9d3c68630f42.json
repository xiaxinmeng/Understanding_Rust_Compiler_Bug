{"sha": "9556f88777b749e2e436b61073ea9d3c68630f42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU1NmY4ODc3N2I3NDllMmU0MzZiNjEwNzNlYTlkM2M2ODYzMGY0Mg==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2001-07-11T03:59:16Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2001-07-11T03:59:16Z"}, "message": "Add some org packages.\n\nFrom-SVN: r43922", "tree": {"sha": "1cdfe6cbc3f99ecc36f13fbb08586ff97d93a920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cdfe6cbc3f99ecc36f13fbb08586ff97d93a920"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9556f88777b749e2e436b61073ea9d3c68630f42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9556f88777b749e2e436b61073ea9d3c68630f42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9556f88777b749e2e436b61073ea9d3c68630f42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9556f88777b749e2e436b61073ea9d3c68630f42/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "608fe35b1a39afa516f8a1febd3898b89fa95a39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/608fe35b1a39afa516f8a1febd3898b89fa95a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/608fe35b1a39afa516f8a1febd3898b89fa95a39"}], "stats": {"total": 12849, "additions": 12784, "deletions": 65}, "files": [{"sha": "a28900b0a7794216bc5fcfd587c9c90a49151df6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -1,3 +1,46 @@\n+2001-07-10  Anthony Green  <green@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am: Add new files.\n+\t* org/w3c/dom/Attr.java, org/w3c/dom/CDATASection.java,\n+\torg/w3c/dom/CharacterData.java, org/w3c/dom/Comment.java,\n+\torg/w3c/dom/DOMException.java, org/w3c/dom/DOMImplementation.java,\n+\torg/w3c/dom/Document.java, org/w3c/dom/DocumentFragment.java,\n+\torg/w3c/dom/DocumentType.java, org/w3c/dom/Element.java,\n+\torg/w3c/dom/Entity.java, org/w3c/dom/EntityReference.java,\n+\torg/w3c/dom/NamedNodeMap.java, org/w3c/dom/Node.java,\n+\torg/w3c/dom/NodeList.java, org/w3c/dom/Notation.java,\n+\torg/w3c/dom/ProcessingInstruction.java, org/w3c/dom/Text.java,\n+\torg/w3c/dom/ranges/DocumentRange.java,\n+\torg/w3c/dom/ranges/Range.java,\n+\torg/w3c/dom/ranges/RangeException.java,\n+\torg/w3c/dom/traversal/DocumentTraversal.java,\n+\torg/w3c/dom/traversal/NodeFilter.java,\n+\torg/w3c/dom/traversal/NodeIterator.java,\n+\torg/w3c/dom/traversal/TreeWalker.java,\n+\torg/xml/sax/ext/DeclHandler.java,\n+\torg/xml/sax/ext/LexicalHandler.java,\n+\torg/xml/sax/helpers/AttributeListImpl.java,\n+\torg/xml/sax/helpers/AttributesImpl.java,\n+\torg/xml/sax/helpers/DefaultHandler.java,\n+\torg/xml/sax/helpers/LocatorImpl.java,\n+\torg/xml/sax/helpers/NamespaceSupport.java,\n+\torg/xml/sax/helpers/ParserAdapter.java,\n+\torg/xml/sax/helpers/ParserFactory.java,\n+\torg/xml/sax/helpers/XMLFilterImpl.java,\n+\torg/xml/sax/helpers/XMLReaderAdapter.java,\n+\torg/xml/sax/helpers/XMLReaderFactory.java,\n+\torg/xml/sax/AttributeList.java, org/xml/sax/Attributes.java,\n+\torg/xml/sax/ContentHandler.java, org/xml/sax/DTDHandler.java,\n+\torg/xml/sax/DocumentHandler.java, org/xml/sax/EntityResolver.java,\n+\torg/xml/sax/ErrorHandler.java, org/xml/sax/HandlerBase.java,\n+\torg/xml/sax/InputSource.java, org/xml/sax/Locator.java,\n+\torg/xml/sax/Parser.java, org/xml/sax/SAXException.java,\n+\torg/xml/sax/SAXNotRecognizedException.java,\n+\torg/xml/sax/SAXNotSupportedException.java,\n+\torg/xml/sax/SAXParseException.java, org/xml/sax/XMLFilter.java,\n+\torg/xml/sax/XMLReader.java:  New files.\n+\n 2001-07-10  Alexandre Petit-Bianco  <apbianco@redhat.com>\n \n \t* Makefile.am: Added `java/lang/ThreadLocal.java'."}, {"sha": "27e92f3d1c8c1443f804317f877457b25bbfc051", "filename": "libjava/Makefile.am", "status": "modified", "additions": 55, "deletions": 2, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -188,7 +188,7 @@ libgcj.jar: $(built_java_source_files) $(java_source_files) $(x_java_source_file\n \ttest \"$$fail\" = no\n \t-@rm -f tmp-list libgcj.jar\n ## Note that we explicitly want to include directory information.\n-\tfind java gnu -type d -o -type f -name '*.class' | \\\n+\tfind java gnu org -type d -o -type f -name '*.class' | \\\n \t  sed -e '/\\/\\./d' -e '/\\/xlib/d' | \\\n \t  $(ZIP) cfM0E@ $@\n \n@@ -977,7 +977,6 @@ java/util/TooManyListenersException.java \\\n java/util/Vector.java \\\n java/util/WeakHashMap.java\n \n-\n ## List of all .java files to be compiled.  Please keep this list\n ## alphabetical.  Please put files from java/lang, java/io, and java/util\n ## into core_java_source_files. Please put files from gnu/gcj/convert \n@@ -1252,6 +1251,60 @@ java/util/zip/ZipException.java\t\\\n java/util/zip/ZipFile.java \\\n java/util/zip/ZipInputStream.java \\\n java/util/zip/ZipOutputStream.java \\\n+org/w3c/dom/Attr.java \\\n+org/w3c/dom/CDATASection.java \\\n+org/w3c/dom/CharacterData.java \\\n+org/w3c/dom/Comment.java \\\n+org/w3c/dom/DOMException.java \\\n+org/w3c/dom/DOMImplementation.java \\\n+org/w3c/dom/Document.java \\\n+org/w3c/dom/DocumentFragment.java \\\n+org/w3c/dom/DocumentType.java \\\n+org/w3c/dom/Element.java \\\n+org/w3c/dom/Entity.java \\\n+org/w3c/dom/EntityReference.java \\\n+org/w3c/dom/NamedNodeMap.java \\\n+org/w3c/dom/Node.java \\\n+org/w3c/dom/NodeList.java \\\n+org/w3c/dom/Notation.java \\\n+org/w3c/dom/ProcessingInstruction.java \\\n+org/w3c/dom/Text.java \\\n+org/w3c/dom/ranges/DocumentRange.java \\\n+org/w3c/dom/ranges/Range.java \\\n+org/w3c/dom/ranges/RangeException.java \\\n+org/w3c/dom/traversal/DocumentTraversal.java \\\n+org/w3c/dom/traversal/NodeFilter.java \\\n+org/w3c/dom/traversal/NodeIterator.java \\\n+org/w3c/dom/traversal/TreeWalker.java \\\n+org/xml/sax/ext/DeclHandler.java \\\n+org/xml/sax/ext/LexicalHandler.java \\\n+org/xml/sax/helpers/AttributeListImpl.java \\\n+org/xml/sax/helpers/AttributesImpl.java \\\n+org/xml/sax/helpers/DefaultHandler.java \\\n+org/xml/sax/helpers/LocatorImpl.java \\\n+org/xml/sax/helpers/NamespaceSupport.java \\\n+org/xml/sax/helpers/ParserAdapter.java \\\n+org/xml/sax/helpers/ParserFactory.java \\\n+org/xml/sax/helpers/XMLFilterImpl.java \\\n+org/xml/sax/helpers/XMLReaderAdapter.java \\\n+org/xml/sax/helpers/XMLReaderFactory.java \\\n+org/xml/sax/AttributeList.java \\\n+org/xml/sax/Attributes.java \\\n+org/xml/sax/ContentHandler.java \\\n+org/xml/sax/DTDHandler.java \\\n+org/xml/sax/DocumentHandler.java \\\n+org/xml/sax/EntityResolver.java \\\n+org/xml/sax/ErrorHandler.java \\\n+org/xml/sax/HandlerBase.java \\\n+org/xml/sax/InputSource.java \\\n+org/xml/sax/Locator.java \\\n+org/xml/sax/Parser.java \\\n+org/xml/sax/SAXException.java \\\n+org/xml/sax/SAXNotRecognizedException.java \\\n+org/xml/sax/SAXNotSupportedException.java \\\n+org/xml/sax/SAXParseException.java \\\n+org/xml/sax/XMLFilter.java \\\n+org/xml/sax/XMLReader.java \\\n $(awt_java_source_files) \\\n $(convert_source_files)\n "}, {"sha": "d44bbdd7a863a5047c9fc157210e8f415c022509", "filename": "libjava/Makefile.in", "status": "modified", "additions": 1035, "deletions": 63, "changes": 1098, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated automatically by automake 1.4a from Makefile.am\n+# Makefile.in generated automatically by automake 1.4 from Makefile.am\n \n # Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n@@ -46,10 +46,9 @@ AUTOMAKE = @AUTOMAKE@\n AUTOHEADER = @AUTOHEADER@\n \n INSTALL = @INSTALL@\n-INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n-INSTALL_STRIP_FLAG =\n transform = @program_transform_name@\n \n NORMAL_INSTALL = :\n@@ -123,26 +122,26 @@ libgcj_basedir = @libgcj_basedir@\n mkinstalldirs = @mkinstalldirs@\n \n AUTOMAKE_OPTIONS = foreign\n-@TESTSUBDIR_TRUE@SUBDIRS = $(DIRLTDL) testsuite gcj include\n-@TESTSUBDIR_FALSE@SUBDIRS = $(DIRLTDL) gcj include\n-@USE_LIBDIR_TRUE@toolexeclibdir = $(libdir)$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexeclibdir = $(toolexecdir)/lib$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexecdir = $(exec_prefix)/$(target_alias)\n-@XLIB_AWT_TRUE@cond_x_ltlibrary = libgcjx.la\n+@TESTSUBDIR_TRUE@SUBDIRS = @TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n+@TESTSUBDIR_FALSE@SUBDIRS = @TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n+@USE_LIBDIR_TRUE@toolexeclibdir = @USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexeclibdir = @USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexecdir = @USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n+@XLIB_AWT_TRUE@cond_x_ltlibrary = @XLIB_AWT_TRUE@libgcjx.la\n @XLIB_AWT_FALSE@cond_x_ltlibrary = \n \n toolexeclib_LTLIBRARIES = libgcj.la $(cond_x_ltlibrary)\n toolexeclib_DATA = libgcj.spec\n data_DATA = libgcj.jar\n \n-@NATIVE_TRUE@bin_PROGRAMS = jv-convert gij\n+@NATIVE_TRUE@bin_PROGRAMS = @NATIVE_TRUE@jv-convert gij\n \n bin_SCRIPTS = addr2name.awk\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = $(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = jar\n-@CANADIAN_FALSE@ZIP = $(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n-@CANADIAN_TRUE@GCJH = gcjh\n-@CANADIAN_FALSE@GCJH = $(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_FALSE@jar\n+@CANADIAN_FALSE@ZIP = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n+@CANADIAN_TRUE@GCJH = @CANADIAN_TRUE@gcjh\n+@CANADIAN_FALSE@GCJH = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n \n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8\n \n@@ -157,46 +156,60 @@ JAVAC = $(GCJ_WITH_FLAGS) -C\n GCC_UNWIND_INCLUDE = @GCC_UNWIND_INCLUDE@\n \n WARNINGS = -W -Wall\n-AM_CXXFLAGS = -fno-rtti -fnon-call-exceptions \t-fdollars-in-identifiers \t@LIBGCJ_CXXFLAGS@ @X_CFLAGS@ $(WARNINGS) -D_GNU_SOURCE \t-DPREFIX=\"\\\"$(prefix)\\\"\"\n+AM_CXXFLAGS = -fno-rtti -fnon-call-exceptions \\\n+\t-fdollars-in-identifiers \\\n+\t@LIBGCJ_CXXFLAGS@ @X_CFLAGS@ $(WARNINGS) -D_GNU_SOURCE \\\n+\t-DPREFIX=\"\\\"$(prefix)\\\"\"\n \n-@USING_GCC_TRUE@AM_CFLAGS = @LIBGCJ_CFLAGS@ $(WARNINGS)\n-@USING_GCC_FALSE@AM_CFLAGS = @LIBGCJ_CFLAGS@\n+@USING_GCC_TRUE@AM_CFLAGS = @USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n+@USING_GCC_FALSE@AM_CFLAGS = @USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n \n JCFLAGS = -g\n JC1FLAGS = @LIBGCJ_JAVAFLAGS@ $(GCJFLAGS)\n \n LIBFFIINCS = @LIBFFIINCS@\n \n-INCLUDES = -I$(top_srcdir) -Iinclude -I$(top_srcdir)/include \t$(GCINCS) $(THREADINCS) $(INCLTDL) \t$(GCC_UNWIND_INCLUDE) $(ZINCS) $(LIBFFIINCS)\n+INCLUDES = -I$(top_srcdir) -Iinclude -I$(top_srcdir)/include \\\n+\t$(GCINCS) $(THREADINCS) $(INCLTDL) \\\n+\t$(GCC_UNWIND_INCLUDE) $(ZINCS) $(LIBFFIINCS)\n \n \n nat_files = $(nat_source_files:.cc=.lo)\n x_nat_files = $(x_nat_source_files:.cc=.lo)\n c_files = $(c_source_files:.c=.lo)\n-javao_files = $(java_source_files:.java=.lo) \t$(built_java_source_files:.java=.lo)\n+javao_files = $(java_source_files:.java=.lo) \\\n+\t$(built_java_source_files:.java=.lo)\n \n x_javao_files = $(x_java_source_files:.java=.lo)\n \n-libgcj_la_SOURCES = prims.cc posix.cc jni.cc exception.cc \tresolve.cc defineclass.cc interpret.cc name-finder.cc \t$(nat_source_files)\n+libgcj_la_SOURCES = prims.cc posix.cc jni.cc exception.cc \\\n+\tresolve.cc defineclass.cc interpret.cc name-finder.cc \\\n+\t$(nat_source_files)\n \n-EXTRA_libgcj_la_SOURCES = boehm.cc nogc.cc posix-threads.cc no-threads.cc \t$(c_source_files) $(java_source_files) $(built_java_source_files)\n+EXTRA_libgcj_la_SOURCES = boehm.cc nogc.cc posix-threads.cc no-threads.cc \\\n+\t$(c_source_files) $(java_source_files) $(built_java_source_files)\n \n-libgcj_la_DEPENDENCIES = libgcj.jar $(javao_files) \t$(c_files) $(GCOBJS) $(THREADOBJS) $(LIBLTDL)\n+libgcj_la_DEPENDENCIES = libgcj.jar $(javao_files) \\\n+\t$(c_files) $(GCOBJS) $(THREADOBJS) $(LIBLTDL)\n \n \n-libgcj_la_LIBADD = $(javao_files) $(c_files) $(GCOBJS) \t$(THREADOBJS)\n+libgcj_la_LIBADD = $(javao_files) $(c_files) $(GCOBJS) \\\n+\t$(THREADOBJS)\n \n # Include THREADLIBS here to ensure that the correct version of\n # certain linuxthread functions get linked:\n-libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) $(THREADLIBS) $(LIBLTDL) \t-version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n+libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) $(THREADLIBS) $(LIBLTDL) \\\n+\t-version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n \n libgcj_la_LINK = $(LIBLINK)\n \n libgcjx_la_SOURCES = $(x_nat_source_files)\n EXTRA_libgcjx_la_SOURCES = $(x_java_source_files)\n libgcjx_la_DEPENDENCIES = libgcj.jar $(x_javao_files)\n libgcjx_la_LIBADD = $(x_javao_files)\n-libgcjx_la_LDFLAGS = @X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@         -rpath $(toolexeclibdir)         -version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n+libgcjx_la_LDFLAGS = @X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@ \\\n+        -rpath $(toolexeclibdir) \\\n+        -version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n \n libgcjx_la_LINK = $(LIBLINK)\n \n@@ -205,7 +218,10 @@ CLEANFILES = tmp-list libgcj.jar\n \n SUFFIXES = .class .java .h\n \n-nat_headers = $(ordinary_java_source_files:.java=.h) \t$(built_java_source_files:.java=.h) \tjava/io/ObjectOutputStream$$PutField.h \tjava/io/ObjectInputStream$$GetField.h\n+nat_headers = $(ordinary_java_source_files:.java=.h) \\\n+\t$(built_java_source_files:.java=.h) \\\n+\tjava/io/ObjectOutputStream$$PutField.h \\\n+\tjava/io/ObjectInputStream$$GetField.h\n \n \n x_nat_headers = $(x_java_source_files:.java=.h)\n@@ -214,18 +230,21 @@ extra_headers = java/lang/Object.h java/lang/Class.h\n \n NM = nm\n \n-@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = gen-from-JIS\n+@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n \n CONVERT_DIR = gnu/gcj/convert\n \n jv_convert_SOURCES = \n EXTRA_jv_convert_SOURCES = $(convert_source_files)\n-jv_convert_LDFLAGS = --main=gnu.gcj.convert.Convert \t-rpath $(toolexeclibdir) -shared-libgcc\n+jv_convert_LDFLAGS = --main=gnu.gcj.convert.Convert \\\n+\t-rpath $(toolexeclibdir) -shared-libgcc\n \n jv_convert_LINK = $(GCJLINK)\n-jv_convert_LDADD = $(convert_source_files:.java=.lo) libgcj.la \t$(GCLIBS) $(THREADLIBS) $(ZLIBS) -L$(here)/.libs\n+jv_convert_LDADD = $(convert_source_files:.java=.lo) libgcj.la \\\n+\t$(GCLIBS) $(THREADLIBS) $(ZLIBS) -L$(here)/.libs\n \n-jv_convert_DEPENDENCIES = $(convert_source_files:.java=.lo) \t$(GCDEPS) $(THREADDEPS) $(ZDEPS) libgcj.la libgcj.spec\n+jv_convert_DEPENDENCIES = $(convert_source_files:.java=.lo) \\\n+\t$(GCDEPS) $(THREADDEPS) $(ZDEPS) libgcj.la libgcj.spec\n \n \n gij_SOURCES = gij.cc\n@@ -235,49 +254,966 @@ gij_LDADD = libgcj.la $(GCLIBS) $(THREADLIBS) $(ZLIBS) -L$(here)/.libs\n gij_DEPENDENCIES = $(GCDEPS) $(THREADDEPS) $(ZDEPS) libgcj.la libgcj.spec\n \n gen_from_JIS_SOURCES = \n-EXTRA_gen_from_JIS_SOURCES = $(srcdir)/$(CONVERT_DIR)/gen-from-JIS.c \t\t$(srcdir)/$(CONVERT_DIR)/make-trie.c \t\t$(srcdir)/$(CONVERT_DIR)/JIS0201.h \t\t$(srcdir)/$(CONVERT_DIR)/JIS0208.h \t\t$(srcdir)/$(CONVERT_DIR)/JIS0212.h\n+EXTRA_gen_from_JIS_SOURCES = $(srcdir)/$(CONVERT_DIR)/gen-from-JIS.c \\\n+\t\t$(srcdir)/$(CONVERT_DIR)/make-trie.c \\\n+\t\t$(srcdir)/$(CONVERT_DIR)/JIS0201.h \\\n+\t\t$(srcdir)/$(CONVERT_DIR)/JIS0208.h \\\n+\t\t$(srcdir)/$(CONVERT_DIR)/JIS0212.h\n \n gen_from_JIS_LDADD = $(CONVERT_DIR)/gen-from-JIS.o $(CONVERT_DIR)/make-trie.o\n-gen_from_JIS_DEPENDENCIES = $(CONVERT_DIR)/gen-from-JIS.o \t\t$(CONVERT_DIR)/make-trie.o\n-\n-\n-convert_source_files =  gnu/gcj/convert/BytesToUnicode.java gnu/gcj/convert/Convert.java gnu/gcj/convert/Input_8859_1.java gnu/gcj/convert/Input_ASCII.java gnu/gcj/convert/Input_EUCJIS.java gnu/gcj/convert/Input_JavaSrc.java gnu/gcj/convert/Input_SJIS.java gnu/gcj/convert/Input_UTF8.java\tgnu/gcj/convert/Input_iconv.java gnu/gcj/convert/IOConverter.java gnu/gcj/convert/Output_8859_1.java gnu/gcj/convert/Output_ASCII.java gnu/gcj/convert/Output_EUCJIS.java gnu/gcj/convert/Output_JavaSrc.java gnu/gcj/convert/Output_SJIS.java gnu/gcj/convert/Output_UTF8.java gnu/gcj/convert/Output_iconv.java gnu/gcj/convert/UnicodeToBytes.java\n+gen_from_JIS_DEPENDENCIES = $(CONVERT_DIR)/gen-from-JIS.o \\\n+\t\t$(CONVERT_DIR)/make-trie.o\n+\n+\n+convert_source_files = \\\n+gnu/gcj/convert/BytesToUnicode.java \\\n+gnu/gcj/convert/Convert.java \\\n+gnu/gcj/convert/Input_8859_1.java \\\n+gnu/gcj/convert/Input_ASCII.java \\\n+gnu/gcj/convert/Input_EUCJIS.java \\\n+gnu/gcj/convert/Input_JavaSrc.java \\\n+gnu/gcj/convert/Input_SJIS.java \\\n+gnu/gcj/convert/Input_UTF8.java\t\\\n+gnu/gcj/convert/Input_iconv.java \\\n+gnu/gcj/convert/IOConverter.java \\\n+gnu/gcj/convert/Output_8859_1.java \\\n+gnu/gcj/convert/Output_ASCII.java \\\n+gnu/gcj/convert/Output_EUCJIS.java \\\n+gnu/gcj/convert/Output_JavaSrc.java \\\n+gnu/gcj/convert/Output_SJIS.java \\\n+gnu/gcj/convert/Output_UTF8.java \\\n+gnu/gcj/convert/Output_iconv.java \\\n+gnu/gcj/convert/UnicodeToBytes.java\n \n \n special_java_source_files = java/lang/Class.java java/lang/Object.java\n \n-awt_java_source_files =  gnu/awt/LightweightRedirector.java gnu/awt/j2d/AbstractGraphicsState.java gnu/awt/j2d/DirectRasterGraphics.java gnu/awt/j2d/Graphics2DImpl.java gnu/awt/j2d/IntegerGraphicsState.java gnu/awt/j2d/MappedRaster.java gnu/gcj/awt/BitMaskExtent.java gnu/gcj/awt/Buffers.java gnu/gcj/awt/ComponentDataBlitOp.java gnu/gcj/awt/GLightweightPeer.java gnu/java/beans/editors/ColorEditor.java\tgnu/java/beans/editors/FontEditor.java gnu/java/beans/editors/NativeBooleanEditor.java\tgnu/java/beans/editors/NativeByteEditor.java gnu/java/beans/editors/NativeDoubleEditor.java gnu/java/beans/editors/NativeFloatEditor.java gnu/java/beans/editors/NativeIntEditor.java gnu/java/beans/editors/NativeLongEditor.java gnu/java/beans/editors/NativeShortEditor.java gnu/java/beans/editors/StringEditor.java gnu/java/beans/info/ComponentBeanInfo.java gnu/java/beans/BeanInfoEmbryo.java gnu/java/beans/EmptyBeanInfo.java gnu/java/beans/ExplicitBeanInfo.java gnu/java/beans/IntrospectionIncubator.java java/applet/Applet.java java/applet/AppletStub.java java/applet/AppletContext.java java/applet/AudioClip.java java/awt/AWTError.java java/awt/AWTEvent.java java/awt/AWTEventMulticaster.java java/awt/AWTException.java java/awt/AWTPermission.java java/awt/ActiveEvent.java java/awt/Adjustable.java java/awt/BorderLayout.java java/awt/Button.java java/awt/Canvas.java java/awt/CardLayout.java java/awt/Checkbox.java java/awt/CheckboxGroup.java java/awt/CheckboxMenuItem.java java/awt/Choice.java java/awt/Color.java java/awt/Component.java\tjava/awt/ComponentOrientation.java java/awt/Container.java\tjava/awt/Cursor.java java/awt/Dialog.java java/awt/Dimension.java\tjava/awt/Event.java java/awt/EventDispatchThread.java java/awt/EventQueue.java java/awt/FileDialog.java java/awt/FlowLayout.java java/awt/Font.java java/awt/FontMetrics.java java/awt/Frame.java java/awt/Graphics.java java/awt/Graphics2D.java java/awt/GraphicsConfiguration.java java/awt/GridBagConstraints.java java/awt/GridLayout.java java/awt/IllegalComponentStateException.java java/awt/Image.java java/awt/Insets.java java/awt/ItemSelectable.java java/awt/Label.java java/awt/LayoutManager.java java/awt/LayoutManager2.java java/awt/List.java java/awt/Menu.java java/awt/MenuBar.java java/awt/MenuComponent.java java/awt/MenuContainer.java java/awt/MenuItem.java java/awt/MenuShortcut.java java/awt/Paint.java java/awt/PaintContext.java java/awt/Panel.java java/awt/Point.java java/awt/Polygon.java java/awt/PopupMenu.java\tjava/awt/Rectangle.java\tjava/awt/RenderingHints.java java/awt/ScrollPane.java java/awt/Scrollbar.java\tjava/awt/Shape.java java/awt/SystemColor.java java/awt/TextArea.java java/awt/TextComponent.java java/awt/TextField.java\tjava/awt/Toolkit.java java/awt/Transparency.java java/awt/Window.java java/awt/color/ColorSpace.java java/awt/color/ICC_ColorSpace.java java/awt/color/ICC_Profile.java\tjava/awt/datatransfer/Clipboard.java java/awt/event/AWTEventListener.java java/awt/event/ActionEvent.java\tjava/awt/event/ActionListener.java java/awt/event/AdjustmentEvent.java java/awt/event/AdjustmentListener.java java/awt/event/ComponentAdapter.java java/awt/event/ComponentEvent.java java/awt/event/ComponentListener.java java/awt/event/ContainerAdapter.java java/awt/event/ContainerEvent.java java/awt/event/ContainerListener.java java/awt/event/FocusAdapter.java java/awt/event/FocusEvent.java java/awt/event/FocusListener.java java/awt/event/HierarchyBoundsAdapter.java java/awt/event/HierarchyBoundsListener.java java/awt/event/HierarchyEvent.java java/awt/event/HierarchyListener.java java/awt/event/InputEvent.java java/awt/event/InputMethodEvent.java java/awt/event/InputMethodListener.java\tjava/awt/event/InvocationEvent.java java/awt/event/ItemEvent.java java/awt/event/ItemListener.java java/awt/event/KeyAdapter.java java/awt/event/KeyEvent.java java/awt/event/KeyListener.java\tjava/awt/event/MouseAdapter.java java/awt/event/MouseEvent.java java/awt/event/MouseListener.java java/awt/event/MouseMotionAdapter.java java/awt/event/MouseMotionListener.java\tjava/awt/event/PaintEvent.java java/awt/event/TextEvent.java java/awt/event/TextListener.java java/awt/event/WindowAdapter.java java/awt/event/WindowEvent.java\tjava/awt/event/WindowListener.java java/awt/geom/AffineTransform.java java/awt/geom/Dimension2D.java java/awt/geom/Ellipse2D.java java/awt/geom/IllegalPathStateException.java java/awt/geom/Line2D.java java/awt/geom/NoninvertibleTransformException.java java/awt/geom/PathIterator.java\tjava/awt/geom/Point2D.java java/awt/geom/Rectangle2D.java java/awt/geom/RectangularShape.java java/awt/geom/RoundRectangle2D.java java/awt/image/BufferedImage.java java/awt/image/ColorModel.java java/awt/image/ComponentColorModel.java\tjava/awt/image/ComponentSampleModel.java java/awt/image/DataBuffer.java java/awt/image/DataBufferByte.java java/awt/image/DataBufferInt.java java/awt/image/DataBufferUShort.java java/awt/image/DirectColorModel.java java/awt/image/ImageConsumer.java java/awt/image/ImageObserver.java java/awt/image/ImageProducer.java java/awt/image/IndexColorModel.java java/awt/image/PackedColorModel.java java/awt/image/Raster.java java/awt/image/RasterOp.java java/awt/image/SampleModel.java\tjava/awt/image/SinglePixelPackedSampleModel.java java/awt/image/WritableRaster.java java/awt/peer/ButtonPeer.java java/awt/peer/CanvasPeer.java java/awt/peer/CheckboxMenuItemPeer.java\tjava/awt/peer/CheckboxPeer.java\tjava/awt/peer/ChoicePeer.java java/awt/peer/ComponentPeer.java java/awt/peer/ContainerPeer.java java/awt/peer/DialogPeer.java java/awt/peer/FileDialogPeer.java java/awt/peer/FontPeer.java java/awt/peer/FramePeer.java java/awt/peer/LabelPeer.java java/awt/peer/LightweightPeer.java java/awt/peer/ListPeer.java java/awt/peer/MenuBarPeer.java java/awt/peer/MenuComponentPeer.java java/awt/peer/MenuItemPeer.java\tjava/awt/peer/MenuPeer.java java/awt/peer/PanelPeer.java java/awt/peer/PopupMenuPeer.java java/awt/peer/ScrollPanePeer.java java/awt/peer/ScrollbarPeer.java java/awt/peer/TextAreaPeer.java\tjava/awt/peer/TextComponentPeer.java java/awt/peer/TextFieldPeer.java java/awt/peer/WindowPeer.java java/beans/beancontext/BeanContext.java\tjava/beans/beancontext/BeanContextChild.java java/beans/beancontext/BeanContextChildComponentProxy.java java/beans/beancontext/BeanContextChildSupport.java java/beans/beancontext/BeanContextContainerProxy.java java/beans/beancontext/BeanContextEvent.java java/beans/beancontext/BeanContextMembershipEvent.java java/beans/beancontext/BeanContextMembershipListener.java java/beans/beancontext/BeanContextProxy.java java/beans/beancontext/BeanContextServiceAvailableEvent.java java/beans/beancontext/BeanContextServiceProvider.java java/beans/beancontext/BeanContextServiceProviderBeanInfo.java java/beans/beancontext/BeanContextServiceRevokedEvent.java java/beans/beancontext/BeanContextServiceRevokedListener.java java/beans/beancontext/BeanContextServices.java\tjava/beans/beancontext/BeanContextServicesListener.java\tjava/beans/BeanDescriptor.java java/beans/BeanInfo.java java/beans/Beans.java java/beans/Customizer.java java/beans/DesignMode.java java/beans/EventSetDescriptor.java java/beans/FeatureDescriptor.java java/beans/IndexedPropertyDescriptor.java java/beans/IntrospectionException.java java/beans/Introspector.java java/beans/MethodDescriptor.java java/beans/ParameterDescriptor.java java/beans/PropertyChangeEvent.java java/beans/PropertyChangeListener.java java/beans/PropertyChangeSupport.java java/beans/PropertyDescriptor.java java/beans/PropertyEditor.java java/beans/PropertyEditorManager.java java/beans/PropertyEditorSupport.java java/beans/PropertyVetoException.java java/beans/SimpleBeanInfo.java java/beans/VetoableChangeListener.java java/beans/VetoableChangeSupport.java java/beans/Visibility.java\n-\n-\n-built_java_source_files = java/lang/ConcreteProcess.java                           gnu/classpath/Configuration.java\n-\n-\n-core_java_source_files =  java/lang/AbstractMethodError.java java/lang/ArithmeticException.java java/lang/ArrayIndexOutOfBoundsException.java java/lang/ArrayStoreException.java java/lang/Boolean.java java/lang/Byte.java java/lang/Character.java java/lang/ClassCastException.java java/lang/ClassCircularityError.java java/lang/ClassFormatError.java\tjava/lang/ClassLoader.java java/lang/ClassNotFoundException.java java/lang/CloneNotSupportedException.java java/lang/Cloneable.java java/lang/Comparable.java java/lang/Compiler.java\tjava/lang/Double.java java/lang/Error.java java/lang/Exception.java java/lang/ExceptionInInitializerError.java java/lang/Float.java java/lang/IllegalAccessError.java java/lang/IllegalAccessException.java java/lang/IllegalArgumentException.java\tjava/lang/IllegalMonitorStateException.java java/lang/IllegalStateException.java java/lang/IllegalThreadStateException.java java/lang/IncompatibleClassChangeError.java java/lang/IndexOutOfBoundsException.java java/lang/InstantiationError.java java/lang/InstantiationException.java java/lang/Integer.java java/lang/InternalError.java java/lang/InterruptedException.java java/lang/LinkageError.java java/lang/Long.java java/lang/Math.java java/lang/NegativeArraySizeException.java java/lang/NoClassDefFoundError.java java/lang/NoSuchFieldError.java\tjava/lang/NoSuchFieldException.java java/lang/NoSuchMethodError.java java/lang/NoSuchMethodException.java java/lang/NullPointerException.java java/lang/Number.java java/lang/NumberFormatException.java java/lang/OutOfMemoryError.java\tjava/lang/Package.java java/lang/Process.java java/lang/Runnable.java\tjava/lang/Runtime.java java/lang/RuntimeException.java\tjava/lang/RuntimePermission.java java/lang/SecurityException.java java/lang/SecurityManager.java java/lang/Short.java java/lang/StackOverflowError.java java/lang/String.java java/lang/StringBuffer.java java/lang/StringIndexOutOfBoundsException.java java/lang/System.java java/lang/Thread.java java/lang/ThreadDeath.java java/lang/ThreadGroup.java java/lang/ThreadLocal.java java/lang/Throwable.java java/lang/UnknownError.java java/lang/UnsatisfiedLinkError.java java/lang/UnsupportedOperationException.java java/lang/VerifyError.java java/lang/VirtualMachineError.java java/lang/Void.java java/io/BufferedInputStream.java java/io/BufferedOutputStream.java java/io/BufferedReader.java java/io/BufferedWriter.java java/io/ByteArrayInputStream.java java/io/ByteArrayOutputStream.java java/io/CharArrayReader.java java/io/CharArrayWriter.java java/io/CharConversionException.java java/io/DataInput.java java/io/DataInputStream.java java/io/DataOutput.java\tjava/io/DataOutputStream.java java/io/EOFException.java java/io/Externalizable.java java/io/File.java java/io/FileDescriptor.java java/io/FileFilter.java java/io/FileInputStream.java java/io/FileNotFoundException.java java/io/FileOutputStream.java java/io/FilePermission.java java/io/FileReader.java\tjava/io/FileWriter.java\tjava/io/FilenameFilter.java java/io/FilterInputStream.java java/io/FilterOutputStream.java\tjava/io/FilterReader.java java/io/FilterWriter.java java/io/IOException.java java/io/InputStream.java java/io/InputStreamReader.java java/io/InterruptedIOException.java java/io/InvalidClassException.java java/io/InvalidObjectException.java java/io/LineNumberInputStream.java java/io/LineNumberReader.java java/io/NotActiveException.java\tjava/io/NotSerializableException.java java/io/ObjectInput.java java/io/ObjectInputStream.java java/io/ObjectInputValidation.java java/io/ObjectOutput.java java/io/ObjectOutputStream.java\tjava/io/ObjectStreamClass.java java/io/ObjectStreamConstants.java java/io/ObjectStreamException.java java/io/ObjectStreamField.java java/io/OptionalDataException.java java/io/OutputStream.java java/io/OutputStreamWriter.java\tjava/io/PipedInputStream.java java/io/PipedOutputStream.java java/io/PipedReader.java java/io/PipedWriter.java java/io/PrintStream.java java/io/PrintWriter.java java/io/PushbackInputStream.java java/io/PushbackReader.java java/io/RandomAccessFile.java java/io/Reader.java java/io/SequenceInputStream.java java/io/Serializable.java java/io/SerializablePermission.java java/io/StreamCorruptedException.java java/io/StreamTokenizer.java java/io/StringBufferInputStream.java java/io/StringReader.java java/io/StringWriter.java java/io/SyncFailedException.java java/io/UTFDataFormatException.java java/io/UnsupportedEncodingException.java java/io/WriteAbortedException.java java/io/Writer.java java/util/AbstractCollection.java java/util/AbstractList.java java/util/AbstractMap.java java/util/AbstractSequentialList.java java/util/AbstractSet.java java/util/ArrayList.java java/util/Arrays.java java/util/BasicMapEntry.java java/util/BitSet.java java/util/Calendar.java\tjava/util/Collection.java java/util/Collections.java java/util/Comparator.java java/util/ConcurrentModificationException.java java/util/Date.java java/util/Dictionary.java java/util/EmptyStackException.java java/util/Enumeration.java java/util/EventListener.java java/util/EventObject.java java/util/GregorianCalendar.java java/util/HashMap.java java/util/HashSet.java java/util/Hashtable.java java/util/Iterator.java\tjava/util/LinkedList.java java/util/List.java java/util/ListIterator.java java/util/ListResourceBundle.java java/util/Locale.java java/util/Map.java java/util/MissingResourceException.java\tjava/util/NoSuchElementException.java java/util/Observable.java java/util/Observer.java\tjava/util/Properties.java java/util/PropertyPermission.java java/util/PropertyResourceBundle.java java/util/Random.java java/util/ResourceBundle.java java/util/Set.java java/util/SimpleTimeZone.java java/util/SortedMap.java java/util/SortedSet.java java/util/Stack.java java/util/StringTokenizer.java java/util/TimeZone.java\tjava/util/Timer.java java/util/TimerTask.java java/util/TreeMap.java java/util/TreeSet.java java/util/TooManyListenersException.java java/util/Vector.java java/util/WeakHashMap.java\n-\n-\n-ordinary_java_source_files = $(core_java_source_files) gnu/gcj/RawData.java gnu/gcj/io/DefaultMimeTypes.java gnu/gcj/io/MimeTypes.java gnu/gcj/io/SimpleSHSStream.java\tgnu/gcj/math/MPN.java gnu/gcj/protocol/file/Connection.java gnu/gcj/protocol/file/Handler.java gnu/gcj/protocol/http/Connection.java gnu/gcj/protocol/http/Handler.java gnu/gcj/protocol/jar/Connection.java gnu/gcj/protocol/jar/Handler.java gnu/gcj/runtime/FileDeleter.java gnu/gcj/runtime/FirstThread.java gnu/gcj/runtime/VMClassLoader.java gnu/gcj/text/BaseBreakIterator.java gnu/gcj/text/CharacterBreakIterator.java gnu/gcj/text/LineBreakIterator.java gnu/gcj/text/LocaleData_en.java\tgnu/gcj/text/LocaleData_en_US.java gnu/gcj/text/SentenceBreakIterator.java\tgnu/gcj/text/WordBreakIterator.java gnu/gcj/util/EnumerationChain.java gnu/java/io/ClassLoaderObjectInputStream.java gnu/java/io/NullOutputStream.java gnu/java/io/ObjectIdentityWrapper.java gnu/java/lang/ArrayHelper.java gnu/java/lang/ClassHelper.java gnu/java/lang/reflect/TypeSignature.java gnu/java/locale/Calendar.java gnu/java/locale/Calendar_de.java gnu/java/locale/Calendar_en.java gnu/java/locale/Calendar_nl.java gnu/java/security/provider/DefaultPolicy.java gnu/java/security/provider/Gnu.java gnu/java/security/provider/SHA.java gnu/java/security/provider/SHA1PRNG.java java/lang/ref/PhantomReference.java java/lang/ref/Reference.java java/lang/ref/ReferenceQueue.java java/lang/ref/SoftReference.java java/lang/ref/WeakReference.java java/lang/reflect/AccessibleObject.java\tjava/lang/reflect/Array.java java/lang/reflect/Constructor.java java/lang/reflect/Field.java java/lang/reflect/InvocationTargetException.java java/lang/reflect/Member.java java/lang/reflect/Method.java java/lang/reflect/Modifier.java\tjava/lang/reflect/ReflectPermission.java java/math/BigDecimal.java java/math/BigInteger.java java/net/BindException.java java/net/ConnectException.java java/net/ContentHandler.java java/net/ContentHandlerFactory.java java/net/DatagramPacket.java java/net/DatagramSocket.java java/net/DatagramSocketImpl.java java/net/FileNameMap.java java/net/HttpURLConnection.java\tjava/net/InetAddress.java java/net/JarURLConnection.java java/net/MalformedURLException.java java/net/MulticastSocket.java java/net/NetPermission.java java/net/NoRouteToHostException.java java/net/PlainDatagramSocketImpl.java java/net/PlainSocketImpl.java java/net/ProtocolException.java\tjava/net/ServerSocket.java java/net/Socket.java java/net/SocketException.java java/net/SocketImpl.java java/net/SocketImplFactory.java\tjava/net/SocketOptions.java java/net/SocketPermission.java java/net/URL.java java/net/URLClassLoader.java java/net/URLConnection.java java/net/URLDecoder.java java/net/URLEncoder.java java/net/URLStreamHandler.java java/net/URLStreamHandlerFactory.java java/net/UnknownHostException.java java/net/UnknownServiceException.java java/security/AccessControlContext.java java/security/AccessControlException.java java/security/AccessController.java java/security/AlgorithmParameterGenerator.java java/security/AlgorithmParameters.java java/security/AlgorithmParameterGeneratorSpi.java java/security/AlgorithmParametersSpi.java java/security/AllPermission.java java/security/BasicPermission.java java/security/Certificate.java java/security/CodeSource.java java/security/DigestException.java java/security/DigestOutputStream.java java/security/DummyKeyPairGenerator.java java/security/DummySignature.java java/security/DigestInputStream.java java/security/DomainCombiner.java java/security/DummyMessageDigest.java java/security/GeneralSecurityException.java java/security/Guard.java java/security/GuardedObject.java java/security/Identity.java java/security/IdentityScope.java java/security/InvalidAlgorithmParameterException.java java/security/InvalidKeyException.java java/security/InvalidParameterException.java java/security/Key.java java/security/KeyFactorySpi.java java/security/KeyPairGenerator.java java/security/KeyStoreException.java java/security/KeyException.java java/security/KeyManagementException.java java/security/KeyPairGeneratorSpi.java java/security/KeyStoreSpi.java java/security/KeyFactory.java java/security/KeyPair.java java/security/KeyStore.java java/security/MessageDigest.java java/security/MessageDigestSpi.java java/security/NoSuchAlgorithmException.java java/security/NoSuchProviderException.java java/security/Permission.java java/security/Principal.java java/security/PrivilegedExceptionAction.java java/security/PublicKey.java java/security/PermissionCollection.java java/security/PrivateKey.java java/security/ProtectionDomain.java java/security/Permissions.java java/security/PrivilegedAction.java java/security/Provider.java java/security/Policy.java java/security/PrivilegedActionException.java java/security/ProviderException.java java/security/SecureClassLoader.java java/security/SecureRandomSpi.java java/security/SecurityPermission.java java/security/SignatureException.java java/security/SignedObject.java java/security/SecureRandom.java java/security/Security.java java/security/Signature.java java/security/SignatureSpi.java java/security/Signer.java java/security/UnrecoverableKeyException.java java/security/UnresolvedPermission.java java/security/acl/Acl.java java/security/acl/AclNotFoundException.java java/security/acl/LastOwnerException.java java/security/acl/Owner.java java/security/acl/AclEntry.java java/security/acl/Group.java java/security/acl/NotOwnerException.java java/security/acl/Permission.java java/security/cert/CRL.java java/security/cert/CRLException.java java/security/cert/Certificate.java java/security/cert/CertificateEncodingException.java java/security/cert/CertificateException.java java/security/cert/CertificateExpiredException.java java/security/cert/CertificateFactory.java java/security/cert/CertificateFactorySpi.java java/security/cert/CertificateNotYetValidException.java java/security/cert/CertificateParsingException.java java/security/cert/X509CRL.java java/security/cert/X509CRLEntry.java java/security/cert/X509Certificate.java java/security/cert/X509Extension.java java/security/interfaces/DSAKey.java java/security/interfaces/DSAKeyPairGenerator.java java/security/interfaces/DSAParams.java java/security/interfaces/DSAPrivateKey.java java/security/interfaces/DSAPublicKey.java java/security/interfaces/RSAKey.java java/security/interfaces/RSAPrivateCrtKey.java java/security/interfaces/RSAPrivateKey.java java/security/interfaces/RSAPublicKey.java java/security/spec/AlgorithmParameterSpec.java java/security/spec/DSAParameterSpec.java java/security/spec/DSAPrivateKeySpec.java java/security/spec/DSAPublicKeySpec.java java/security/spec/EncodedKeySpec.java java/security/spec/InvalidKeySpecException.java java/security/spec/InvalidParameterSpecException.java java/security/spec/KeySpec.java java/security/spec/PKCS8EncodedKeySpec.java java/security/spec/RSAKeyGenParameterSpec.java java/security/spec/RSAPrivateCrtKeySpec.java java/security/spec/RSAPrivateKeySpec.java java/security/spec/RSAPublicKeySpec.java java/security/spec/X509EncodedKeySpec.java java/sql/Array.java java/sql/BatchUpdateException.java java/sql/Blob.java java/sql/CallableStatement.java\tjava/sql/Clob.java java/sql/Connection.java java/sql/DataTruncation.java java/sql/DatabaseMetaData.java java/sql/Date.java java/sql/Driver.java java/sql/DriverManager.java java/sql/DriverPropertyInfo.java java/sql/PreparedStatement.java\tjava/sql/Ref.java java/sql/ResultSet.java\tjava/sql/ResultSetMetaData.java\tjava/sql/SQLData.java java/sql/SQLException.java java/sql/SQLInput.java java/sql/SQLOutput.java java/sql/SQLWarning.java java/sql/Statement.java\tjava/sql/Struct.java\tjava/sql/Time.java java/sql/Timestamp.java\tjava/sql/Types.java java/text/BreakIterator.java java/text/CharacterIterator.java java/text/ChoiceFormat.java java/text/CollationElementIterator.java\tjava/text/CollationKey.java java/text/Collator.java\tjava/text/DateFormat.java java/text/DateFormatSymbols.java java/text/DecimalFormat.java java/text/DecimalFormatSymbols.java java/text/FieldPosition.java java/text/Format.java java/text/MessageFormat.java java/text/NumberFormat.java java/text/ParseException.java java/text/ParsePosition.java java/text/RuleBasedCollator.java java/text/SimpleDateFormat.java\tjava/text/StringCharacterIterator.java java/util/jar/Attributes.java java/util/jar/JarEntry.java java/util/jar/JarException.java java/util/jar/JarFile.java java/util/jar/JarInputStream.java java/util/jar/JarOutputStream.java java/util/jar/Manifest.java java/util/zip/Adler32.java java/util/zip/CRC32.java java/util/zip/CheckedInputStream.java java/util/zip/CheckedOutputStream.java java/util/zip/Checksum.java java/util/zip/DataFormatException.java java/util/zip/Deflater.java java/util/zip/DeflaterOutputStream.java\tjava/util/zip/GZIPInputStream.java java/util/zip/GZIPOutputStream.java java/util/zip/Inflater.java java/util/zip/InflaterInputStream.java java/util/zip/ZipConstants.java\tjava/util/zip/ZipEntry.java java/util/zip/ZipException.java\tjava/util/zip/ZipFile.java java/util/zip/ZipInputStream.java java/util/zip/ZipOutputStream.java $(awt_java_source_files) $(convert_source_files)\n+awt_java_source_files = \\\n+gnu/awt/LightweightRedirector.java \\\n+gnu/awt/j2d/AbstractGraphicsState.java \\\n+gnu/awt/j2d/DirectRasterGraphics.java \\\n+gnu/awt/j2d/Graphics2DImpl.java \\\n+gnu/awt/j2d/IntegerGraphicsState.java \\\n+gnu/awt/j2d/MappedRaster.java \\\n+gnu/gcj/awt/BitMaskExtent.java \\\n+gnu/gcj/awt/Buffers.java \\\n+gnu/gcj/awt/ComponentDataBlitOp.java \\\n+gnu/gcj/awt/GLightweightPeer.java \\\n+gnu/java/beans/editors/ColorEditor.java\t\\\n+gnu/java/beans/editors/FontEditor.java \\\n+gnu/java/beans/editors/NativeBooleanEditor.java\t\\\n+gnu/java/beans/editors/NativeByteEditor.java \\\n+gnu/java/beans/editors/NativeDoubleEditor.java \\\n+gnu/java/beans/editors/NativeFloatEditor.java \\\n+gnu/java/beans/editors/NativeIntEditor.java \\\n+gnu/java/beans/editors/NativeLongEditor.java \\\n+gnu/java/beans/editors/NativeShortEditor.java \\\n+gnu/java/beans/editors/StringEditor.java \\\n+gnu/java/beans/info/ComponentBeanInfo.java \\\n+gnu/java/beans/BeanInfoEmbryo.java \\\n+gnu/java/beans/EmptyBeanInfo.java \\\n+gnu/java/beans/ExplicitBeanInfo.java \\\n+gnu/java/beans/IntrospectionIncubator.java \\\n+java/applet/Applet.java \\\n+java/applet/AppletStub.java \\\n+java/applet/AppletContext.java \\\n+java/applet/AudioClip.java \\\n+java/awt/AWTError.java \\\n+java/awt/AWTEvent.java \\\n+java/awt/AWTEventMulticaster.java \\\n+java/awt/AWTException.java \\\n+java/awt/AWTPermission.java \\\n+java/awt/ActiveEvent.java \\\n+java/awt/Adjustable.java \\\n+java/awt/BorderLayout.java \\\n+java/awt/Button.java \\\n+java/awt/Canvas.java \\\n+java/awt/CardLayout.java \\\n+java/awt/Checkbox.java \\\n+java/awt/CheckboxGroup.java \\\n+java/awt/CheckboxMenuItem.java \\\n+java/awt/Choice.java \\\n+java/awt/Color.java \\\n+java/awt/Component.java\t\\\n+java/awt/ComponentOrientation.java \\\n+java/awt/Container.java\t\\\n+java/awt/Cursor.java \\\n+java/awt/Dialog.java \\\n+java/awt/Dimension.java\t\\\n+java/awt/Event.java \\\n+java/awt/EventDispatchThread.java \\\n+java/awt/EventQueue.java \\\n+java/awt/FileDialog.java \\\n+java/awt/FlowLayout.java \\\n+java/awt/Font.java \\\n+java/awt/FontMetrics.java \\\n+java/awt/Frame.java \\\n+java/awt/Graphics.java \\\n+java/awt/Graphics2D.java \\\n+java/awt/GraphicsConfiguration.java \\\n+java/awt/GridBagConstraints.java \\\n+java/awt/GridLayout.java \\\n+java/awt/IllegalComponentStateException.java \\\n+java/awt/Image.java \\\n+java/awt/Insets.java \\\n+java/awt/ItemSelectable.java \\\n+java/awt/Label.java \\\n+java/awt/LayoutManager.java \\\n+java/awt/LayoutManager2.java \\\n+java/awt/List.java \\\n+java/awt/Menu.java \\\n+java/awt/MenuBar.java \\\n+java/awt/MenuComponent.java \\\n+java/awt/MenuContainer.java \\\n+java/awt/MenuItem.java \\\n+java/awt/MenuShortcut.java \\\n+java/awt/Paint.java \\\n+java/awt/PaintContext.java \\\n+java/awt/Panel.java \\\n+java/awt/Point.java \\\n+java/awt/Polygon.java \\\n+java/awt/PopupMenu.java\t\\\n+java/awt/Rectangle.java\t\\\n+java/awt/RenderingHints.java \\\n+java/awt/ScrollPane.java \\\n+java/awt/Scrollbar.java\t\\\n+java/awt/Shape.java \\\n+java/awt/SystemColor.java \\\n+java/awt/TextArea.java \\\n+java/awt/TextComponent.java \\\n+java/awt/TextField.java\t\\\n+java/awt/Toolkit.java \\\n+java/awt/Transparency.java \\\n+java/awt/Window.java \\\n+java/awt/color/ColorSpace.java \\\n+java/awt/color/ICC_ColorSpace.java \\\n+java/awt/color/ICC_Profile.java\t\\\n+java/awt/datatransfer/Clipboard.java \\\n+java/awt/event/AWTEventListener.java \\\n+java/awt/event/ActionEvent.java\t\\\n+java/awt/event/ActionListener.java \\\n+java/awt/event/AdjustmentEvent.java \\\n+java/awt/event/AdjustmentListener.java \\\n+java/awt/event/ComponentAdapter.java \\\n+java/awt/event/ComponentEvent.java \\\n+java/awt/event/ComponentListener.java \\\n+java/awt/event/ContainerAdapter.java \\\n+java/awt/event/ContainerEvent.java \\\n+java/awt/event/ContainerListener.java \\\n+java/awt/event/FocusAdapter.java \\\n+java/awt/event/FocusEvent.java \\\n+java/awt/event/FocusListener.java \\\n+java/awt/event/HierarchyBoundsAdapter.java \\\n+java/awt/event/HierarchyBoundsListener.java \\\n+java/awt/event/HierarchyEvent.java \\\n+java/awt/event/HierarchyListener.java \\\n+java/awt/event/InputEvent.java \\\n+java/awt/event/InputMethodEvent.java \\\n+java/awt/event/InputMethodListener.java\t\\\n+java/awt/event/InvocationEvent.java \\\n+java/awt/event/ItemEvent.java \\\n+java/awt/event/ItemListener.java \\\n+java/awt/event/KeyAdapter.java \\\n+java/awt/event/KeyEvent.java \\\n+java/awt/event/KeyListener.java\t\\\n+java/awt/event/MouseAdapter.java \\\n+java/awt/event/MouseEvent.java \\\n+java/awt/event/MouseListener.java \\\n+java/awt/event/MouseMotionAdapter.java \\\n+java/awt/event/MouseMotionListener.java\t\\\n+java/awt/event/PaintEvent.java \\\n+java/awt/event/TextEvent.java \\\n+java/awt/event/TextListener.java \\\n+java/awt/event/WindowAdapter.java \\\n+java/awt/event/WindowEvent.java\t\\\n+java/awt/event/WindowListener.java \\\n+java/awt/geom/AffineTransform.java \\\n+java/awt/geom/Dimension2D.java \\\n+java/awt/geom/Ellipse2D.java \\\n+java/awt/geom/IllegalPathStateException.java \\\n+java/awt/geom/Line2D.java \\\n+java/awt/geom/NoninvertibleTransformException.java \\\n+java/awt/geom/PathIterator.java\t\\\n+java/awt/geom/Point2D.java \\\n+java/awt/geom/Rectangle2D.java \\\n+java/awt/geom/RectangularShape.java \\\n+java/awt/geom/RoundRectangle2D.java \\\n+java/awt/image/BufferedImage.java \\\n+java/awt/image/ColorModel.java \\\n+java/awt/image/ComponentColorModel.java\t\\\n+java/awt/image/ComponentSampleModel.java \\\n+java/awt/image/DataBuffer.java \\\n+java/awt/image/DataBufferByte.java \\\n+java/awt/image/DataBufferInt.java \\\n+java/awt/image/DataBufferUShort.java \\\n+java/awt/image/DirectColorModel.java \\\n+java/awt/image/ImageConsumer.java \\\n+java/awt/image/ImageObserver.java \\\n+java/awt/image/ImageProducer.java \\\n+java/awt/image/IndexColorModel.java \\\n+java/awt/image/PackedColorModel.java \\\n+java/awt/image/Raster.java \\\n+java/awt/image/RasterOp.java \\\n+java/awt/image/SampleModel.java\t\\\n+java/awt/image/SinglePixelPackedSampleModel.java \\\n+java/awt/image/WritableRaster.java \\\n+java/awt/peer/ButtonPeer.java \\\n+java/awt/peer/CanvasPeer.java \\\n+java/awt/peer/CheckboxMenuItemPeer.java\t\\\n+java/awt/peer/CheckboxPeer.java\t\\\n+java/awt/peer/ChoicePeer.java \\\n+java/awt/peer/ComponentPeer.java \\\n+java/awt/peer/ContainerPeer.java \\\n+java/awt/peer/DialogPeer.java \\\n+java/awt/peer/FileDialogPeer.java \\\n+java/awt/peer/FontPeer.java \\\n+java/awt/peer/FramePeer.java \\\n+java/awt/peer/LabelPeer.java \\\n+java/awt/peer/LightweightPeer.java \\\n+java/awt/peer/ListPeer.java \\\n+java/awt/peer/MenuBarPeer.java \\\n+java/awt/peer/MenuComponentPeer.java \\\n+java/awt/peer/MenuItemPeer.java\t\\\n+java/awt/peer/MenuPeer.java \\\n+java/awt/peer/PanelPeer.java \\\n+java/awt/peer/PopupMenuPeer.java \\\n+java/awt/peer/ScrollPanePeer.java \\\n+java/awt/peer/ScrollbarPeer.java \\\n+java/awt/peer/TextAreaPeer.java\t\\\n+java/awt/peer/TextComponentPeer.java \\\n+java/awt/peer/TextFieldPeer.java \\\n+java/awt/peer/WindowPeer.java \\\n+java/beans/beancontext/BeanContext.java\t\\\n+java/beans/beancontext/BeanContextChild.java \\\n+java/beans/beancontext/BeanContextChildComponentProxy.java \\\n+java/beans/beancontext/BeanContextChildSupport.java \\\n+java/beans/beancontext/BeanContextContainerProxy.java \\\n+java/beans/beancontext/BeanContextEvent.java \\\n+java/beans/beancontext/BeanContextMembershipEvent.java \\\n+java/beans/beancontext/BeanContextMembershipListener.java \\\n+java/beans/beancontext/BeanContextProxy.java \\\n+java/beans/beancontext/BeanContextServiceAvailableEvent.java \\\n+java/beans/beancontext/BeanContextServiceProvider.java \\\n+java/beans/beancontext/BeanContextServiceProviderBeanInfo.java \\\n+java/beans/beancontext/BeanContextServiceRevokedEvent.java \\\n+java/beans/beancontext/BeanContextServiceRevokedListener.java \\\n+java/beans/beancontext/BeanContextServices.java\t\\\n+java/beans/beancontext/BeanContextServicesListener.java\t\\\n+java/beans/BeanDescriptor.java \\\n+java/beans/BeanInfo.java \\\n+java/beans/Beans.java \\\n+java/beans/Customizer.java \\\n+java/beans/DesignMode.java \\\n+java/beans/EventSetDescriptor.java \\\n+java/beans/FeatureDescriptor.java \\\n+java/beans/IndexedPropertyDescriptor.java \\\n+java/beans/IntrospectionException.java \\\n+java/beans/Introspector.java \\\n+java/beans/MethodDescriptor.java \\\n+java/beans/ParameterDescriptor.java \\\n+java/beans/PropertyChangeEvent.java \\\n+java/beans/PropertyChangeListener.java \\\n+java/beans/PropertyChangeSupport.java \\\n+java/beans/PropertyDescriptor.java \\\n+java/beans/PropertyEditor.java \\\n+java/beans/PropertyEditorManager.java \\\n+java/beans/PropertyEditorSupport.java \\\n+java/beans/PropertyVetoException.java \\\n+java/beans/SimpleBeanInfo.java \\\n+java/beans/VetoableChangeListener.java \\\n+java/beans/VetoableChangeSupport.java \\\n+java/beans/Visibility.java\n+\n+\n+built_java_source_files = java/lang/ConcreteProcess.java \\\n+                          gnu/classpath/Configuration.java\n+\n+\n+core_java_source_files = \\\n+java/lang/AbstractMethodError.java \\\n+java/lang/ArithmeticException.java \\\n+java/lang/ArrayIndexOutOfBoundsException.java \\\n+java/lang/ArrayStoreException.java \\\n+java/lang/Boolean.java \\\n+java/lang/Byte.java \\\n+java/lang/Character.java \\\n+java/lang/ClassCastException.java \\\n+java/lang/ClassCircularityError.java \\\n+java/lang/ClassFormatError.java\t\\\n+java/lang/ClassLoader.java \\\n+java/lang/ClassNotFoundException.java \\\n+java/lang/CloneNotSupportedException.java \\\n+java/lang/Cloneable.java \\\n+java/lang/Comparable.java \\\n+java/lang/Compiler.java\t\\\n+java/lang/Double.java \\\n+java/lang/Error.java \\\n+java/lang/Exception.java \\\n+java/lang/ExceptionInInitializerError.java \\\n+java/lang/Float.java \\\n+java/lang/IllegalAccessError.java \\\n+java/lang/IllegalAccessException.java \\\n+java/lang/IllegalArgumentException.java\t\\\n+java/lang/IllegalMonitorStateException.java \\\n+java/lang/IllegalStateException.java \\\n+java/lang/IllegalThreadStateException.java \\\n+java/lang/IncompatibleClassChangeError.java \\\n+java/lang/IndexOutOfBoundsException.java \\\n+java/lang/InstantiationError.java \\\n+java/lang/InstantiationException.java \\\n+java/lang/Integer.java \\\n+java/lang/InternalError.java \\\n+java/lang/InterruptedException.java \\\n+java/lang/LinkageError.java \\\n+java/lang/Long.java \\\n+java/lang/Math.java \\\n+java/lang/NegativeArraySizeException.java \\\n+java/lang/NoClassDefFoundError.java \\\n+java/lang/NoSuchFieldError.java\t\\\n+java/lang/NoSuchFieldException.java \\\n+java/lang/NoSuchMethodError.java \\\n+java/lang/NoSuchMethodException.java \\\n+java/lang/NullPointerException.java \\\n+java/lang/Number.java \\\n+java/lang/NumberFormatException.java \\\n+java/lang/OutOfMemoryError.java\t\\\n+java/lang/Package.java \\\n+java/lang/Process.java \\\n+java/lang/Runnable.java\t\\\n+java/lang/Runtime.java \\\n+java/lang/RuntimeException.java\t\\\n+java/lang/RuntimePermission.java \\\n+java/lang/SecurityException.java \\\n+java/lang/SecurityManager.java \\\n+java/lang/Short.java \\\n+java/lang/StackOverflowError.java \\\n+java/lang/String.java \\\n+java/lang/StringBuffer.java \\\n+java/lang/StringIndexOutOfBoundsException.java \\\n+java/lang/System.java \\\n+java/lang/Thread.java \\\n+java/lang/ThreadDeath.java \\\n+java/lang/ThreadGroup.java \\\n+java/lang/ThreadLocal.java \\\n+java/lang/Throwable.java \\\n+java/lang/UnknownError.java \\\n+java/lang/UnsatisfiedLinkError.java \\\n+java/lang/UnsupportedOperationException.java \\\n+java/lang/VerifyError.java \\\n+java/lang/VirtualMachineError.java \\\n+java/lang/Void.java \\\n+java/io/BufferedInputStream.java \\\n+java/io/BufferedOutputStream.java \\\n+java/io/BufferedReader.java \\\n+java/io/BufferedWriter.java \\\n+java/io/ByteArrayInputStream.java \\\n+java/io/ByteArrayOutputStream.java \\\n+java/io/CharArrayReader.java \\\n+java/io/CharArrayWriter.java \\\n+java/io/CharConversionException.java \\\n+java/io/DataInput.java \\\n+java/io/DataInputStream.java \\\n+java/io/DataOutput.java\t\\\n+java/io/DataOutputStream.java \\\n+java/io/EOFException.java \\\n+java/io/Externalizable.java \\\n+java/io/File.java \\\n+java/io/FileDescriptor.java \\\n+java/io/FileFilter.java \\\n+java/io/FileInputStream.java \\\n+java/io/FileNotFoundException.java \\\n+java/io/FileOutputStream.java \\\n+java/io/FilePermission.java \\\n+java/io/FileReader.java\t\\\n+java/io/FileWriter.java\t\\\n+java/io/FilenameFilter.java \\\n+java/io/FilterInputStream.java \\\n+java/io/FilterOutputStream.java\t\\\n+java/io/FilterReader.java \\\n+java/io/FilterWriter.java \\\n+java/io/IOException.java \\\n+java/io/InputStream.java \\\n+java/io/InputStreamReader.java \\\n+java/io/InterruptedIOException.java \\\n+java/io/InvalidClassException.java \\\n+java/io/InvalidObjectException.java \\\n+java/io/LineNumberInputStream.java \\\n+java/io/LineNumberReader.java \\\n+java/io/NotActiveException.java\t\\\n+java/io/NotSerializableException.java \\\n+java/io/ObjectInput.java \\\n+java/io/ObjectInputStream.java \\\n+java/io/ObjectInputValidation.java \\\n+java/io/ObjectOutput.java \\\n+java/io/ObjectOutputStream.java\t\\\n+java/io/ObjectStreamClass.java \\\n+java/io/ObjectStreamConstants.java \\\n+java/io/ObjectStreamException.java \\\n+java/io/ObjectStreamField.java \\\n+java/io/OptionalDataException.java \\\n+java/io/OutputStream.java \\\n+java/io/OutputStreamWriter.java\t\\\n+java/io/PipedInputStream.java \\\n+java/io/PipedOutputStream.java \\\n+java/io/PipedReader.java \\\n+java/io/PipedWriter.java \\\n+java/io/PrintStream.java \\\n+java/io/PrintWriter.java \\\n+java/io/PushbackInputStream.java \\\n+java/io/PushbackReader.java \\\n+java/io/RandomAccessFile.java \\\n+java/io/Reader.java \\\n+java/io/SequenceInputStream.java \\\n+java/io/Serializable.java \\\n+java/io/SerializablePermission.java \\\n+java/io/StreamCorruptedException.java \\\n+java/io/StreamTokenizer.java \\\n+java/io/StringBufferInputStream.java \\\n+java/io/StringReader.java \\\n+java/io/StringWriter.java \\\n+java/io/SyncFailedException.java \\\n+java/io/UTFDataFormatException.java \\\n+java/io/UnsupportedEncodingException.java \\\n+java/io/WriteAbortedException.java \\\n+java/io/Writer.java \\\n+java/util/AbstractCollection.java \\\n+java/util/AbstractList.java \\\n+java/util/AbstractMap.java \\\n+java/util/AbstractSequentialList.java \\\n+java/util/AbstractSet.java \\\n+java/util/ArrayList.java \\\n+java/util/Arrays.java \\\n+java/util/BasicMapEntry.java \\\n+java/util/BitSet.java \\\n+java/util/Calendar.java\t\\\n+java/util/Collection.java \\\n+java/util/Collections.java \\\n+java/util/Comparator.java \\\n+java/util/ConcurrentModificationException.java \\\n+java/util/Date.java \\\n+java/util/Dictionary.java \\\n+java/util/EmptyStackException.java \\\n+java/util/Enumeration.java \\\n+java/util/EventListener.java \\\n+java/util/EventObject.java \\\n+java/util/GregorianCalendar.java \\\n+java/util/HashMap.java \\\n+java/util/HashSet.java \\\n+java/util/Hashtable.java \\\n+java/util/Iterator.java\t\\\n+java/util/LinkedList.java \\\n+java/util/List.java \\\n+java/util/ListIterator.java \\\n+java/util/ListResourceBundle.java \\\n+java/util/Locale.java \\\n+java/util/Map.java \\\n+java/util/MissingResourceException.java\t\\\n+java/util/NoSuchElementException.java \\\n+java/util/Observable.java \\\n+java/util/Observer.java\t\\\n+java/util/Properties.java \\\n+java/util/PropertyPermission.java \\\n+java/util/PropertyResourceBundle.java \\\n+java/util/Random.java \\\n+java/util/ResourceBundle.java \\\n+java/util/Set.java \\\n+java/util/SimpleTimeZone.java \\\n+java/util/SortedMap.java \\\n+java/util/SortedSet.java \\\n+java/util/Stack.java \\\n+java/util/StringTokenizer.java \\\n+java/util/TimeZone.java\t\\\n+java/util/Timer.java \\\n+java/util/TimerTask.java \\\n+java/util/TreeMap.java \\\n+java/util/TreeSet.java \\\n+java/util/TooManyListenersException.java \\\n+java/util/Vector.java \\\n+java/util/WeakHashMap.java\n+\n+\n+ordinary_java_source_files = $(core_java_source_files) \\\n+gnu/gcj/RawData.java \\\n+gnu/gcj/io/DefaultMimeTypes.java \\\n+gnu/gcj/io/MimeTypes.java \\\n+gnu/gcj/io/SimpleSHSStream.java\t\\\n+gnu/gcj/math/MPN.java \\\n+gnu/gcj/protocol/file/Connection.java \\\n+gnu/gcj/protocol/file/Handler.java \\\n+gnu/gcj/protocol/http/Connection.java \\\n+gnu/gcj/protocol/http/Handler.java \\\n+gnu/gcj/protocol/jar/Connection.java \\\n+gnu/gcj/protocol/jar/Handler.java \\\n+gnu/gcj/runtime/FileDeleter.java \\\n+gnu/gcj/runtime/FirstThread.java \\\n+gnu/gcj/runtime/VMClassLoader.java \\\n+gnu/gcj/text/BaseBreakIterator.java \\\n+gnu/gcj/text/CharacterBreakIterator.java \\\n+gnu/gcj/text/LineBreakIterator.java \\\n+gnu/gcj/text/LocaleData_en.java\t\\\n+gnu/gcj/text/LocaleData_en_US.java \\\n+gnu/gcj/text/SentenceBreakIterator.java\t\\\n+gnu/gcj/text/WordBreakIterator.java \\\n+gnu/gcj/util/EnumerationChain.java \\\n+gnu/java/io/ClassLoaderObjectInputStream.java \\\n+gnu/java/io/NullOutputStream.java \\\n+gnu/java/io/ObjectIdentityWrapper.java \\\n+gnu/java/lang/ArrayHelper.java \\\n+gnu/java/lang/ClassHelper.java \\\n+gnu/java/lang/reflect/TypeSignature.java \\\n+gnu/java/locale/Calendar.java \\\n+gnu/java/locale/Calendar_de.java \\\n+gnu/java/locale/Calendar_en.java \\\n+gnu/java/locale/Calendar_nl.java \\\n+gnu/java/security/provider/DefaultPolicy.java \\\n+gnu/java/security/provider/Gnu.java \\\n+gnu/java/security/provider/SHA.java \\\n+gnu/java/security/provider/SHA1PRNG.java \\\n+java/lang/ref/PhantomReference.java \\\n+java/lang/ref/Reference.java \\\n+java/lang/ref/ReferenceQueue.java \\\n+java/lang/ref/SoftReference.java \\\n+java/lang/ref/WeakReference.java \\\n+java/lang/reflect/AccessibleObject.java\t\\\n+java/lang/reflect/Array.java \\\n+java/lang/reflect/Constructor.java \\\n+java/lang/reflect/Field.java \\\n+java/lang/reflect/InvocationTargetException.java \\\n+java/lang/reflect/Member.java \\\n+java/lang/reflect/Method.java \\\n+java/lang/reflect/Modifier.java\t\\\n+java/lang/reflect/ReflectPermission.java \\\n+java/math/BigDecimal.java \\\n+java/math/BigInteger.java \\\n+java/net/BindException.java \\\n+java/net/ConnectException.java \\\n+java/net/ContentHandler.java \\\n+java/net/ContentHandlerFactory.java \\\n+java/net/DatagramPacket.java \\\n+java/net/DatagramSocket.java \\\n+java/net/DatagramSocketImpl.java \\\n+java/net/FileNameMap.java \\\n+java/net/HttpURLConnection.java\t\\\n+java/net/InetAddress.java \\\n+java/net/JarURLConnection.java \\\n+java/net/MalformedURLException.java \\\n+java/net/MulticastSocket.java \\\n+java/net/NetPermission.java \\\n+java/net/NoRouteToHostException.java \\\n+java/net/PlainDatagramSocketImpl.java \\\n+java/net/PlainSocketImpl.java \\\n+java/net/ProtocolException.java\t\\\n+java/net/ServerSocket.java \\\n+java/net/Socket.java \\\n+java/net/SocketException.java \\\n+java/net/SocketImpl.java \\\n+java/net/SocketImplFactory.java\t\\\n+java/net/SocketOptions.java \\\n+java/net/SocketPermission.java \\\n+java/net/URL.java \\\n+java/net/URLClassLoader.java \\\n+java/net/URLConnection.java \\\n+java/net/URLDecoder.java \\\n+java/net/URLEncoder.java \\\n+java/net/URLStreamHandler.java \\\n+java/net/URLStreamHandlerFactory.java \\\n+java/net/UnknownHostException.java \\\n+java/net/UnknownServiceException.java \\\n+java/security/AccessControlContext.java \\\n+java/security/AccessControlException.java \\\n+java/security/AccessController.java \\\n+java/security/AlgorithmParameterGenerator.java \\\n+java/security/AlgorithmParameters.java \\\n+java/security/AlgorithmParameterGeneratorSpi.java \\\n+java/security/AlgorithmParametersSpi.java \\\n+java/security/AllPermission.java \\\n+java/security/BasicPermission.java \\\n+java/security/Certificate.java \\\n+java/security/CodeSource.java \\\n+java/security/DigestException.java \\\n+java/security/DigestOutputStream.java \\\n+java/security/DummyKeyPairGenerator.java \\\n+java/security/DummySignature.java \\\n+java/security/DigestInputStream.java \\\n+java/security/DomainCombiner.java \\\n+java/security/DummyMessageDigest.java \\\n+java/security/GeneralSecurityException.java \\\n+java/security/Guard.java \\\n+java/security/GuardedObject.java \\\n+java/security/Identity.java \\\n+java/security/IdentityScope.java \\\n+java/security/InvalidAlgorithmParameterException.java \\\n+java/security/InvalidKeyException.java \\\n+java/security/InvalidParameterException.java \\\n+java/security/Key.java \\\n+java/security/KeyFactorySpi.java \\\n+java/security/KeyPairGenerator.java \\\n+java/security/KeyStoreException.java \\\n+java/security/KeyException.java \\\n+java/security/KeyManagementException.java \\\n+java/security/KeyPairGeneratorSpi.java \\\n+java/security/KeyStoreSpi.java \\\n+java/security/KeyFactory.java \\\n+java/security/KeyPair.java \\\n+java/security/KeyStore.java \\\n+java/security/MessageDigest.java \\\n+java/security/MessageDigestSpi.java \\\n+java/security/NoSuchAlgorithmException.java \\\n+java/security/NoSuchProviderException.java \\\n+java/security/Permission.java \\\n+java/security/Principal.java \\\n+java/security/PrivilegedExceptionAction.java \\\n+java/security/PublicKey.java \\\n+java/security/PermissionCollection.java \\\n+java/security/PrivateKey.java \\\n+java/security/ProtectionDomain.java \\\n+java/security/Permissions.java \\\n+java/security/PrivilegedAction.java \\\n+java/security/Provider.java \\\n+java/security/Policy.java \\\n+java/security/PrivilegedActionException.java \\\n+java/security/ProviderException.java \\\n+java/security/SecureClassLoader.java \\\n+java/security/SecureRandomSpi.java \\\n+java/security/SecurityPermission.java \\\n+java/security/SignatureException.java \\\n+java/security/SignedObject.java \\\n+java/security/SecureRandom.java \\\n+java/security/Security.java \\\n+java/security/Signature.java \\\n+java/security/SignatureSpi.java \\\n+java/security/Signer.java \\\n+java/security/UnrecoverableKeyException.java \\\n+java/security/UnresolvedPermission.java \\\n+java/security/acl/Acl.java \\\n+java/security/acl/AclNotFoundException.java \\\n+java/security/acl/LastOwnerException.java \\\n+java/security/acl/Owner.java \\\n+java/security/acl/AclEntry.java \\\n+java/security/acl/Group.java \\\n+java/security/acl/NotOwnerException.java \\\n+java/security/acl/Permission.java \\\n+java/security/cert/CRL.java \\\n+java/security/cert/CRLException.java \\\n+java/security/cert/Certificate.java \\\n+java/security/cert/CertificateEncodingException.java \\\n+java/security/cert/CertificateException.java \\\n+java/security/cert/CertificateExpiredException.java \\\n+java/security/cert/CertificateFactory.java \\\n+java/security/cert/CertificateFactorySpi.java \\\n+java/security/cert/CertificateNotYetValidException.java \\\n+java/security/cert/CertificateParsingException.java \\\n+java/security/cert/X509CRL.java \\\n+java/security/cert/X509CRLEntry.java \\\n+java/security/cert/X509Certificate.java \\\n+java/security/cert/X509Extension.java \\\n+java/security/interfaces/DSAKey.java \\\n+java/security/interfaces/DSAKeyPairGenerator.java \\\n+java/security/interfaces/DSAParams.java \\\n+java/security/interfaces/DSAPrivateKey.java \\\n+java/security/interfaces/DSAPublicKey.java \\\n+java/security/interfaces/RSAKey.java \\\n+java/security/interfaces/RSAPrivateCrtKey.java \\\n+java/security/interfaces/RSAPrivateKey.java \\\n+java/security/interfaces/RSAPublicKey.java \\\n+java/security/spec/AlgorithmParameterSpec.java \\\n+java/security/spec/DSAParameterSpec.java \\\n+java/security/spec/DSAPrivateKeySpec.java \\\n+java/security/spec/DSAPublicKeySpec.java \\\n+java/security/spec/EncodedKeySpec.java \\\n+java/security/spec/InvalidKeySpecException.java \\\n+java/security/spec/InvalidParameterSpecException.java \\\n+java/security/spec/KeySpec.java \\\n+java/security/spec/PKCS8EncodedKeySpec.java \\\n+java/security/spec/RSAKeyGenParameterSpec.java \\\n+java/security/spec/RSAPrivateCrtKeySpec.java \\\n+java/security/spec/RSAPrivateKeySpec.java \\\n+java/security/spec/RSAPublicKeySpec.java \\\n+java/security/spec/X509EncodedKeySpec.java \\\n+java/sql/Array.java \\\n+java/sql/BatchUpdateException.java \\\n+java/sql/Blob.java \\\n+java/sql/CallableStatement.java\t\\\n+java/sql/Clob.java \\\n+java/sql/Connection.java \\\n+java/sql/DataTruncation.java \\\n+java/sql/DatabaseMetaData.java \\\n+java/sql/Date.java \\\n+java/sql/Driver.java \\\n+java/sql/DriverManager.java \\\n+java/sql/DriverPropertyInfo.java \\\n+java/sql/PreparedStatement.java\t\\\n+java/sql/Ref.java \\\n+java/sql/ResultSet.java\t\\\n+java/sql/ResultSetMetaData.java\t\\\n+java/sql/SQLData.java \\\n+java/sql/SQLException.java \\\n+java/sql/SQLInput.java \\\n+java/sql/SQLOutput.java \\\n+java/sql/SQLWarning.java \\\n+java/sql/Statement.java\t\\\n+java/sql/Struct.java\t\\\n+java/sql/Time.java \\\n+java/sql/Timestamp.java\t\\\n+java/sql/Types.java \\\n+java/text/BreakIterator.java \\\n+java/text/CharacterIterator.java \\\n+java/text/ChoiceFormat.java \\\n+java/text/CollationElementIterator.java\t\\\n+java/text/CollationKey.java \\\n+java/text/Collator.java\t\\\n+java/text/DateFormat.java \\\n+java/text/DateFormatSymbols.java \\\n+java/text/DecimalFormat.java \\\n+java/text/DecimalFormatSymbols.java \\\n+java/text/FieldPosition.java \\\n+java/text/Format.java \\\n+java/text/MessageFormat.java \\\n+java/text/NumberFormat.java \\\n+java/text/ParseException.java \\\n+java/text/ParsePosition.java \\\n+java/text/RuleBasedCollator.java \\\n+java/text/SimpleDateFormat.java\t\\\n+java/text/StringCharacterIterator.java \\\n+java/util/jar/Attributes.java \\\n+java/util/jar/JarEntry.java \\\n+java/util/jar/JarException.java \\\n+java/util/jar/JarFile.java \\\n+java/util/jar/JarInputStream.java \\\n+java/util/jar/JarOutputStream.java \\\n+java/util/jar/Manifest.java \\\n+java/util/zip/Adler32.java \\\n+java/util/zip/CRC32.java \\\n+java/util/zip/CheckedInputStream.java \\\n+java/util/zip/CheckedOutputStream.java \\\n+java/util/zip/Checksum.java \\\n+java/util/zip/DataFormatException.java \\\n+java/util/zip/Deflater.java \\\n+java/util/zip/DeflaterOutputStream.java\t\\\n+java/util/zip/GZIPInputStream.java \\\n+java/util/zip/GZIPOutputStream.java \\\n+java/util/zip/Inflater.java \\\n+java/util/zip/InflaterInputStream.java \\\n+java/util/zip/ZipConstants.java\t\\\n+java/util/zip/ZipEntry.java \\\n+java/util/zip/ZipException.java\t\\\n+java/util/zip/ZipFile.java \\\n+java/util/zip/ZipInputStream.java \\\n+java/util/zip/ZipOutputStream.java \\\n+org/w3c/dom/Attr.java \\\n+org/w3c/dom/CDATASection.java \\\n+org/w3c/dom/CharacterData.java \\\n+org/w3c/dom/Comment.java \\\n+org/w3c/dom/DOMException.java \\\n+org/w3c/dom/DOMImplementation.java \\\n+org/w3c/dom/Document.java \\\n+org/w3c/dom/DocumentFragment.java \\\n+org/w3c/dom/DocumentType.java \\\n+org/w3c/dom/Element.java \\\n+org/w3c/dom/Entity.java \\\n+org/w3c/dom/EntityReference.java \\\n+org/w3c/dom/NamedNodeMap.java \\\n+org/w3c/dom/Node.java \\\n+org/w3c/dom/NodeList.java \\\n+org/w3c/dom/Notation.java \\\n+org/w3c/dom/ProcessingInstruction.java \\\n+org/w3c/dom/Text.java \\\n+org/w3c/dom/ranges/DocumentRange.java \\\n+org/w3c/dom/ranges/Range.java \\\n+org/w3c/dom/ranges/RangeException.java \\\n+org/w3c/dom/traversal/DocumentTraversal.java \\\n+org/w3c/dom/traversal/NodeFilter.java \\\n+org/w3c/dom/traversal/NodeIterator.java \\\n+org/w3c/dom/traversal/TreeWalker.java \\\n+org/xml/sax/ext/DeclHandler.java \\\n+org/xml/sax/ext/LexicalHandler.java \\\n+org/xml/sax/helpers/AttributeListImpl.java \\\n+org/xml/sax/helpers/AttributesImpl.java \\\n+org/xml/sax/helpers/DefaultHandler.java \\\n+org/xml/sax/helpers/LocatorImpl.java \\\n+org/xml/sax/helpers/NamespaceSupport.java \\\n+org/xml/sax/helpers/ParserAdapter.java \\\n+org/xml/sax/helpers/ParserFactory.java \\\n+org/xml/sax/helpers/XMLFilterImpl.java \\\n+org/xml/sax/helpers/XMLReaderAdapter.java \\\n+org/xml/sax/helpers/XMLReaderFactory.java \\\n+org/xml/sax/AttributeList.java \\\n+org/xml/sax/Attributes.java \\\n+org/xml/sax/ContentHandler.java \\\n+org/xml/sax/DTDHandler.java \\\n+org/xml/sax/DocumentHandler.java \\\n+org/xml/sax/EntityResolver.java \\\n+org/xml/sax/ErrorHandler.java \\\n+org/xml/sax/HandlerBase.java \\\n+org/xml/sax/InputSource.java \\\n+org/xml/sax/Locator.java \\\n+org/xml/sax/Parser.java \\\n+org/xml/sax/SAXException.java \\\n+org/xml/sax/SAXNotRecognizedException.java \\\n+org/xml/sax/SAXNotSupportedException.java \\\n+org/xml/sax/SAXParseException.java \\\n+org/xml/sax/XMLFilter.java \\\n+org/xml/sax/XMLReader.java \\\n+$(awt_java_source_files) \\\n+$(convert_source_files)\n \n \n java_source_files = $(special_java_source_files) $(ordinary_java_source_files)\n \n-c_source_files =    java/lang/dtoa.c        java/lang/k_rem_pio2.c  java/lang/s_tan.c         java/lang/e_acos.c      java/lang/k_sin.c       java/lang/strtod.c        java/lang/e_asin.c      java/lang/k_tan.c       java/lang/w_acos.c        java/lang/e_atan2.c     java/lang/mprec.c       java/lang/w_asin.c        java/lang/e_exp.c       java/lang/s_atan.c      java/lang/w_atan2.c       java/lang/e_fmod.c      java/lang/s_ceil.c      java/lang/w_exp.c         java/lang/e_log.c       java/lang/s_copysign.c  java/lang/w_fmod.c        java/lang/e_pow.c       java/lang/s_cos.c       java/lang/w_log.c         java/lang/e_rem_pio2.c  java/lang/s_fabs.c      java/lang/w_pow.c         java/lang/e_remainder.c java/lang/s_floor.c     java/lang/w_remainder.c   java/lang/e_scalb.c     java/lang/s_rint.c      java/lang/w_sqrt.c        java/lang/e_sqrt.c      java/lang/s_scalbn.c    java/lang/sf_rint.c       java/lang/k_cos.c       java/lang/s_sin.c       java/lang/sf_fabs.c\n+c_source_files = \\\n+  java/lang/dtoa.c        java/lang/k_rem_pio2.c  java/lang/s_tan.c       \\\n+  java/lang/e_acos.c      java/lang/k_sin.c       java/lang/strtod.c      \\\n+  java/lang/e_asin.c      java/lang/k_tan.c       java/lang/w_acos.c      \\\n+  java/lang/e_atan2.c     java/lang/mprec.c       java/lang/w_asin.c      \\\n+  java/lang/e_exp.c       java/lang/s_atan.c      java/lang/w_atan2.c     \\\n+  java/lang/e_fmod.c      java/lang/s_ceil.c      java/lang/w_exp.c       \\\n+  java/lang/e_log.c       java/lang/s_copysign.c  java/lang/w_fmod.c      \\\n+  java/lang/e_pow.c       java/lang/s_cos.c       java/lang/w_log.c       \\\n+  java/lang/e_rem_pio2.c  java/lang/s_fabs.c      java/lang/w_pow.c       \\\n+  java/lang/e_remainder.c java/lang/s_floor.c     java/lang/w_remainder.c \\\n+  java/lang/e_scalb.c     java/lang/s_rint.c      java/lang/w_sqrt.c      \\\n+  java/lang/e_sqrt.c      java/lang/s_scalbn.c    java/lang/sf_rint.c     \\\n+  java/lang/k_cos.c       java/lang/s_sin.c       java/lang/sf_fabs.c\n \n \n #java/awt/natToolkit.cc\n \n-nat_source_files =  gnu/gcj/convert/JIS0208_to_Unicode.cc gnu/gcj/convert/JIS0212_to_Unicode.cc gnu/gcj/convert/Unicode_to_JIS.cc gnu/gcj/convert/natIconv.cc gnu/gcj/convert/natInput_EUCJIS.cc gnu/gcj/convert/natInput_SJIS.cc gnu/gcj/convert/natOutput_EUCJIS.cc gnu/gcj/convert/natOutput_SJIS.cc gnu/gcj/io/natSimpleSHSStream.cc gnu/gcj/io/shs.cc java/io/natFile.cc java/io/natFileDescriptor.cc java/io/natObjectInputStream.cc java/io/natObjectOutputStream.cc java/lang/natCharacter.cc java/lang/natClass.cc java/lang/natClassLoader.cc java/lang/natConcreteProcess.cc java/lang/natDouble.cc java/lang/natFloat.cc java/lang/natMath.cc java/lang/natObject.cc java/lang/natRuntime.cc\tjava/lang/natString.cc java/lang/natStringBuffer.cc java/lang/natSystem.cc java/lang/natThread.cc java/lang/natThrowable.cc java/lang/reflect/natArray.cc java/lang/reflect/natConstructor.cc java/lang/reflect/natField.cc java/lang/reflect/natMethod.cc java/net/natInetAddress.cc java/net/natPlainDatagramSocketImpl.cc java/net/natPlainSocketImpl.cc java/text/natCollator.cc java/util/zip/natDeflater.cc java/util/zip/natInflater.cc\n-\n-\n-x_java_source_files =  gnu/gcj/xlib/Clip.java gnu/gcj/xlib/Colormap.java gnu/gcj/xlib/Display.java gnu/gcj/xlib/Drawable.java gnu/gcj/xlib/Font.java gnu/gcj/xlib/GC.java gnu/gcj/xlib/Pixmap.java gnu/gcj/xlib/Screen.java gnu/gcj/xlib/Visual.java gnu/gcj/xlib/WMSizeHints.java gnu/gcj/xlib/Window.java gnu/gcj/xlib/WindowAttributes.java gnu/gcj/xlib/XAnyEvent.java gnu/gcj/xlib/XButtonEvent.java gnu/gcj/xlib/XColor.java gnu/gcj/xlib/XConfigureEvent.java gnu/gcj/xlib/XConnectException.java gnu/gcj/xlib/XEvent.java gnu/gcj/xlib/XException.java gnu/gcj/xlib/XExposeEvent.java gnu/gcj/xlib/XID.java gnu/gcj/xlib/XImage.java gnu/gcj/xlib/XUnmapEvent.java gnu/awt/xlib/XCanvasPeer.java gnu/awt/xlib/XEventLoop.java gnu/awt/xlib/XEventQueue.java gnu/awt/xlib/XFontMetrics.java gnu/awt/xlib/XFramePeer.java gnu/awt/xlib/XGraphics.java gnu/awt/xlib/XGraphicsConfiguration.java gnu/awt/xlib/XPanelPeer.java gnu/awt/xlib/XToolkit.java\n-\n-\n-x_nat_source_files =  gnu/gcj/xlib/natClip.cc gnu/gcj/xlib/natColormap.cc gnu/gcj/xlib/natDisplay.cc gnu/gcj/xlib/natDrawable.cc gnu/gcj/xlib/natFont.cc gnu/gcj/xlib/natGC.cc gnu/gcj/xlib/natPixmap.cc gnu/gcj/xlib/natScreen.cc gnu/gcj/xlib/natVisual.cc gnu/gcj/xlib/natWMSizeHints.cc gnu/gcj/xlib/natWindow.cc gnu/gcj/xlib/natWindowAttributes.cc gnu/gcj/xlib/natXAnyEvent.cc gnu/gcj/xlib/natXButtonEvent.cc gnu/gcj/xlib/natXColor.cc gnu/gcj/xlib/natXConfigureEvent.cc gnu/gcj/xlib/natXException.cc gnu/gcj/xlib/natXExposeEvent.cc gnu/gcj/xlib/natXImage.cc gnu/gcj/xlib/natXUnmapEvent.cc\n+nat_source_files = \\\n+gnu/gcj/convert/JIS0208_to_Unicode.cc \\\n+gnu/gcj/convert/JIS0212_to_Unicode.cc \\\n+gnu/gcj/convert/Unicode_to_JIS.cc \\\n+gnu/gcj/convert/natIconv.cc \\\n+gnu/gcj/convert/natInput_EUCJIS.cc \\\n+gnu/gcj/convert/natInput_SJIS.cc \\\n+gnu/gcj/convert/natOutput_EUCJIS.cc \\\n+gnu/gcj/convert/natOutput_SJIS.cc \\\n+gnu/gcj/io/natSimpleSHSStream.cc \\\n+gnu/gcj/io/shs.cc \\\n+java/io/natFile.cc \\\n+java/io/natFileDescriptor.cc \\\n+java/io/natObjectInputStream.cc \\\n+java/io/natObjectOutputStream.cc \\\n+java/lang/natCharacter.cc \\\n+java/lang/natClass.cc \\\n+java/lang/natClassLoader.cc \\\n+java/lang/natConcreteProcess.cc \\\n+java/lang/natDouble.cc \\\n+java/lang/natFloat.cc \\\n+java/lang/natMath.cc \\\n+java/lang/natObject.cc \\\n+java/lang/natRuntime.cc\t\\\n+java/lang/natString.cc \\\n+java/lang/natStringBuffer.cc \\\n+java/lang/natSystem.cc \\\n+java/lang/natThread.cc \\\n+java/lang/natThrowable.cc \\\n+java/lang/reflect/natArray.cc \\\n+java/lang/reflect/natConstructor.cc \\\n+java/lang/reflect/natField.cc \\\n+java/lang/reflect/natMethod.cc \\\n+java/net/natInetAddress.cc \\\n+java/net/natPlainDatagramSocketImpl.cc \\\n+java/net/natPlainSocketImpl.cc \\\n+java/text/natCollator.cc \\\n+java/util/zip/natDeflater.cc \\\n+java/util/zip/natInflater.cc\n+\n+\n+x_java_source_files = \\\n+gnu/gcj/xlib/Clip.java \\\n+gnu/gcj/xlib/Colormap.java \\\n+gnu/gcj/xlib/Display.java \\\n+gnu/gcj/xlib/Drawable.java \\\n+gnu/gcj/xlib/Font.java \\\n+gnu/gcj/xlib/GC.java \\\n+gnu/gcj/xlib/Pixmap.java \\\n+gnu/gcj/xlib/Screen.java \\\n+gnu/gcj/xlib/Visual.java \\\n+gnu/gcj/xlib/WMSizeHints.java \\\n+gnu/gcj/xlib/Window.java \\\n+gnu/gcj/xlib/WindowAttributes.java \\\n+gnu/gcj/xlib/XAnyEvent.java \\\n+gnu/gcj/xlib/XButtonEvent.java \\\n+gnu/gcj/xlib/XColor.java \\\n+gnu/gcj/xlib/XConfigureEvent.java \\\n+gnu/gcj/xlib/XConnectException.java \\\n+gnu/gcj/xlib/XEvent.java \\\n+gnu/gcj/xlib/XException.java \\\n+gnu/gcj/xlib/XExposeEvent.java \\\n+gnu/gcj/xlib/XID.java \\\n+gnu/gcj/xlib/XImage.java \\\n+gnu/gcj/xlib/XUnmapEvent.java \\\n+gnu/awt/xlib/XCanvasPeer.java \\\n+gnu/awt/xlib/XEventLoop.java \\\n+gnu/awt/xlib/XEventQueue.java \\\n+gnu/awt/xlib/XFontMetrics.java \\\n+gnu/awt/xlib/XFramePeer.java \\\n+gnu/awt/xlib/XGraphics.java \\\n+gnu/awt/xlib/XGraphicsConfiguration.java \\\n+gnu/awt/xlib/XPanelPeer.java \\\n+gnu/awt/xlib/XToolkit.java\n+\n+\n+x_nat_source_files = \\\n+gnu/gcj/xlib/natClip.cc \\\n+gnu/gcj/xlib/natColormap.cc \\\n+gnu/gcj/xlib/natDisplay.cc \\\n+gnu/gcj/xlib/natDrawable.cc \\\n+gnu/gcj/xlib/natFont.cc \\\n+gnu/gcj/xlib/natGC.cc \\\n+gnu/gcj/xlib/natPixmap.cc \\\n+gnu/gcj/xlib/natScreen.cc \\\n+gnu/gcj/xlib/natVisual.cc \\\n+gnu/gcj/xlib/natWMSizeHints.cc \\\n+gnu/gcj/xlib/natWindow.cc \\\n+gnu/gcj/xlib/natWindowAttributes.cc \\\n+gnu/gcj/xlib/natXAnyEvent.cc \\\n+gnu/gcj/xlib/natXButtonEvent.cc \\\n+gnu/gcj/xlib/natXColor.cc \\\n+gnu/gcj/xlib/natXConfigureEvent.cc \\\n+gnu/gcj/xlib/natXException.cc \\\n+gnu/gcj/xlib/natXExposeEvent.cc \\\n+gnu/gcj/xlib/natXImage.cc \\\n+gnu/gcj/xlib/natXUnmapEvent.cc\n \n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n # friends when we are called from the top level Makefile.\n-AM_MAKEFLAGS =  \t\"AR_FLAGS=$(AR_FLAGS)\" \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \t\"CFLAGS=$(CFLAGS)\" \t\"CXXFLAGS=$(CXXFLAGS)\" \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \t\"INSTALL=$(INSTALL)\" \t\"INSTALL_DATA=$(INSTALL_DATA)\" \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \t\"JC1FLAGS=$(JC1FLAGS)\" \t\"LDFLAGS=$(LDFLAGS)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \t\"MAKE=$(MAKE)\" \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \t\"SHELL=$(SHELL)\" \t\"exec_prefix=$(exec_prefix)\" \t\"infodir=$(infodir)\" \t\"libdir=$(libdir)\" \t\"prefix=$(prefix)\" \t\"AR=$(AR)\" \t\"AS=$(AS)\" \t\"CC=$(CC)\" \t\"CXX=$(CXX)\" \t\"LD=$(LD)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"NM=$(NM)\" \t\"PICFLAG=$(PICFLAG)\" \t\"RANLIB=$(RANLIB)\" \t\"DESTDIR=$(DESTDIR)\"\n+AM_MAKEFLAGS = \\\n+\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n+\t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n+\t\"CFLAGS=$(CFLAGS)\" \\\n+\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n+\t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n+\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n+\t\"INSTALL=$(INSTALL)\" \\\n+\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n+\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n+\t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n+\t\"JC1FLAGS=$(JC1FLAGS)\" \\\n+\t\"LDFLAGS=$(LDFLAGS)\" \\\n+\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+\t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\"MAKE=$(MAKE)\" \\\n+\t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n+\t\"PICFLAG=$(PICFLAG)\" \\\n+\t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n+\t\"SHELL=$(SHELL)\" \\\n+\t\"exec_prefix=$(exec_prefix)\" \\\n+\t\"infodir=$(infodir)\" \\\n+\t\"libdir=$(libdir)\" \\\n+\t\"prefix=$(prefix)\" \\\n+\t\"AR=$(AR)\" \\\n+\t\"AS=$(AS)\" \\\n+\t\"CC=$(CC)\" \\\n+\t\"CXX=$(CXX)\" \\\n+\t\"LD=$(LD)\" \\\n+\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+\t\"NM=$(NM)\" \\\n+\t\"PICFLAG=$(PICFLAG)\" \\\n+\t\"RANLIB=$(RANLIB)\" \\\n+\t\"DESTDIR=$(DESTDIR)\"\n \n \n CONFIG_STATUS_DEPENDENCIES = $(srcdir)/configure.host\n@@ -708,8 +1644,8 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/lang/StringIndexOutOfBoundsException.P \\\n .deps/java/lang/System.P .deps/java/lang/Thread.P \\\n .deps/java/lang/ThreadDeath.P .deps/java/lang/ThreadGroup.P \\\n-.deps/java/lang/Throwable.P .deps/java/lang/UnknownError.P \\\n-.deps/java/lang/UnsatisfiedLinkError.P \\\n+.deps/java/lang/ThreadLocal.P .deps/java/lang/Throwable.P \\\n+.deps/java/lang/UnknownError.P .deps/java/lang/UnsatisfiedLinkError.P \\\n .deps/java/lang/UnsupportedOperationException.P \\\n .deps/java/lang/VerifyError.P .deps/java/lang/VirtualMachineError.P \\\n .deps/java/lang/Void.P .deps/java/lang/dtoa.P .deps/java/lang/e_acos.P \\\n@@ -938,8 +1874,44 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/util/zip/ZipInputStream.P \\\n .deps/java/util/zip/ZipOutputStream.P .deps/java/util/zip/natDeflater.P \\\n .deps/java/util/zip/natInflater.P .deps/jni.P .deps/name-finder.P \\\n-.deps/no-threads.P .deps/nogc.P .deps/posix-threads.P .deps/posix.P \\\n-.deps/prims.P .deps/resolve.P\n+.deps/no-threads.P .deps/nogc.P .deps/org/w3c/dom/Attr.P \\\n+.deps/org/w3c/dom/CDATASection.P .deps/org/w3c/dom/CharacterData.P \\\n+.deps/org/w3c/dom/Comment.P .deps/org/w3c/dom/DOMException.P \\\n+.deps/org/w3c/dom/DOMImplementation.P .deps/org/w3c/dom/Document.P \\\n+.deps/org/w3c/dom/DocumentFragment.P .deps/org/w3c/dom/DocumentType.P \\\n+.deps/org/w3c/dom/Element.P .deps/org/w3c/dom/Entity.P \\\n+.deps/org/w3c/dom/EntityReference.P .deps/org/w3c/dom/NamedNodeMap.P \\\n+.deps/org/w3c/dom/Node.P .deps/org/w3c/dom/NodeList.P \\\n+.deps/org/w3c/dom/Notation.P .deps/org/w3c/dom/ProcessingInstruction.P \\\n+.deps/org/w3c/dom/Text.P .deps/org/w3c/dom/ranges/DocumentRange.P \\\n+.deps/org/w3c/dom/ranges/Range.P \\\n+.deps/org/w3c/dom/ranges/RangeException.P \\\n+.deps/org/w3c/dom/traversal/DocumentTraversal.P \\\n+.deps/org/w3c/dom/traversal/NodeFilter.P \\\n+.deps/org/w3c/dom/traversal/NodeIterator.P \\\n+.deps/org/w3c/dom/traversal/TreeWalker.P \\\n+.deps/org/xml/sax/AttributeList.P .deps/org/xml/sax/Attributes.P \\\n+.deps/org/xml/sax/ContentHandler.P .deps/org/xml/sax/DTDHandler.P \\\n+.deps/org/xml/sax/DocumentHandler.P .deps/org/xml/sax/EntityResolver.P \\\n+.deps/org/xml/sax/ErrorHandler.P .deps/org/xml/sax/HandlerBase.P \\\n+.deps/org/xml/sax/InputSource.P .deps/org/xml/sax/Locator.P \\\n+.deps/org/xml/sax/Parser.P .deps/org/xml/sax/SAXException.P \\\n+.deps/org/xml/sax/SAXNotRecognizedException.P \\\n+.deps/org/xml/sax/SAXNotSupportedException.P \\\n+.deps/org/xml/sax/SAXParseException.P .deps/org/xml/sax/XMLFilter.P \\\n+.deps/org/xml/sax/XMLReader.P .deps/org/xml/sax/ext/DeclHandler.P \\\n+.deps/org/xml/sax/ext/LexicalHandler.P \\\n+.deps/org/xml/sax/helpers/AttributeListImpl.P \\\n+.deps/org/xml/sax/helpers/AttributesImpl.P \\\n+.deps/org/xml/sax/helpers/DefaultHandler.P \\\n+.deps/org/xml/sax/helpers/LocatorImpl.P \\\n+.deps/org/xml/sax/helpers/NamespaceSupport.P \\\n+.deps/org/xml/sax/helpers/ParserAdapter.P \\\n+.deps/org/xml/sax/helpers/ParserFactory.P \\\n+.deps/org/xml/sax/helpers/XMLFilterImpl.P \\\n+.deps/org/xml/sax/helpers/XMLReaderAdapter.P \\\n+.deps/org/xml/sax/helpers/XMLReaderFactory.P .deps/posix-threads.P \\\n+.deps/posix.P .deps/prims.P .deps/resolve.P\n SOURCES = $(libgcj_la_SOURCES) $(EXTRA_libgcj_la_SOURCES) $(libgcjx_la_SOURCES) $(EXTRA_libgcjx_la_SOURCES) $(jv_convert_SOURCES) $(EXTRA_jv_convert_SOURCES) $(gij_SOURCES) $(gen_from_JIS_SOURCES) $(EXTRA_gen_from_JIS_SOURCES)\n OBJECTS = $(libgcj_la_OBJECTS) $(libgcjx_la_OBJECTS) $(jv_convert_OBJECTS) $(gij_OBJECTS) $(gen_from_JIS_OBJECTS)\n \n@@ -1042,8 +2014,8 @@ install-binPROGRAMS: $(bin_PROGRAMS)\n \t$(mkinstalldirs) $(DESTDIR)$(bindir)\n \t@list='$(bin_PROGRAMS)'; for p in $$list; do \\\n \t  if test -f $$p; then \\\n-\t    echo \" $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`\"; \\\n-\t    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \\\n+\t    echo \" $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`\"; \\\n+\t    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \\\n \t  else :; fi; \\\n \tdone\n \n@@ -1367,7 +2339,7 @@ uninstall: uninstall-recursive\n all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA)\n all-redirect: all-recursive\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install\n+\t$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install\n installdirs: installdirs-recursive\n installdirs-am:\n \t$(mkinstalldirs)  $(DESTDIR)$(toolexeclibdir) $(DESTDIR)$(bindir) \\\n@@ -1471,7 +2443,7 @@ libgcj.jar: $(built_java_source_files) $(java_source_files) $(x_java_source_file\n \tdone; \\\n \ttest \"$$fail\" = no\n \t-@rm -f tmp-list libgcj.jar\n-\tfind java gnu -type d -o -type f -name '*.class' | \\\n+\tfind java gnu org -type d -o -type f -name '*.class' | \\\n \t  sed -e '/\\/\\./d' -e '/\\/xlib/d' | \\\n \t  $(ZIP) cfM0E@ $@\n "}, {"sha": "f54467fa212d9c901130313dfb7a4ffdec448002", "filename": "libjava/org/w3c/dom/Attr.java", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FAttr.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FAttr.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FAttr.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,111 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ *  The <code>Attr</code> interface represents an attribute in an \r\n+ * <code>Element</code> object. Typically the allowable values for the \r\n+ * attribute are defined in a document type definition.\r\n+ * <p><code>Attr</code> objects inherit the <code>Node</code> interface, but \r\n+ * since they are not actually child nodes of the element they describe, the \r\n+ * DOM does not consider them part of the document tree. Thus, the \r\n+ * <code>Node</code> attributes <code>parentNode</code>, \r\n+ * <code>previousSibling</code>, and <code>nextSibling</code> have a \r\n+ * <code>null</code> value for <code>Attr</code> objects. The DOM takes the \r\n+ * view that attributes are properties of elements rather than having a \r\n+ * separate identity from the elements they are associated with; this should \r\n+ * make it more efficient to implement such features as default attributes \r\n+ * associated with all elements of a given type. Furthermore, \r\n+ * <code>Attr</code> nodes may not be immediate children of a \r\n+ * <code>DocumentFragment</code>. However, they can be associated with \r\n+ * <code>Element</code> nodes contained within a \r\n+ * <code>DocumentFragment</code>. In short, users and implementors of the \r\n+ * DOM need to be aware that <code>Attr</code> nodes have some things in \r\n+ * common with other objects inheriting the <code>Node</code> interface, but \r\n+ * they also are quite distinct.\r\n+ * <p> The attribute's effective value is determined as follows: if this \r\n+ * attribute has been explicitly assigned any value, that value is the \r\n+ * attribute's effective value; otherwise, if there is a declaration for \r\n+ * this attribute, and that declaration includes a default value, then that \r\n+ * default value is the attribute's effective value; otherwise, the \r\n+ * attribute does not exist on this element in the structure model until it \r\n+ * has been explicitly added. Note that the <code>nodeValue</code> attribute \r\n+ * on the <code>Attr</code> instance can also be used to retrieve the string \r\n+ * version of the attribute's value(s). \r\n+ * <p>In XML, where the value of an attribute can contain entity references, \r\n+ * the child nodes of the <code>Attr</code> node may be either \r\n+ * <code>Text</code> or <code>EntityReference</code> nodes (when these are \r\n+ * in use; see the description of <code>EntityReference</code> for \r\n+ * discussion). Because the DOM Core is not aware of attribute types, it \r\n+ * treats all attribute values as simple strings, even if the DTD or schema \r\n+ * declares them as having tokenized types. \r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface Attr extends Node {\r\n+    /**\r\n+     * Returns the name of this attribute. \r\n+     */\r\n+    public String getName();\r\n+\r\n+    /**\r\n+     * If this attribute was explicitly given a value in the original \r\n+     * document, this is <code>true</code>; otherwise, it is \r\n+     * <code>false</code>. Note that the implementation is in charge of this \r\n+     * attribute, not the user. If the user changes the value of the \r\n+     * attribute (even if it ends up having the same value as the default \r\n+     * value) then the <code>specified</code> flag is automatically flipped \r\n+     * to <code>true</code>. To re-specify the attribute as the default \r\n+     * value from the DTD, the user must delete the attribute. The \r\n+     * implementation will then make a new attribute available with \r\n+     * <code>specified</code> set to <code>false</code> and the default \r\n+     * value (if one exists).\r\n+     * <br>In summary:  If the attribute has an assigned value in the document \r\n+     * then <code>specified</code> is <code>true</code>, and the value is \r\n+     * the assigned value.  If the attribute has no assigned value in the \r\n+     * document and has a default value in the DTD, then \r\n+     * <code>specified</code> is <code>false</code>, and the value is the \r\n+     * default value in the DTD. If the attribute has no assigned value in \r\n+     * the document and has a value of #IMPLIED in the DTD, then the \r\n+     * attribute does not appear in the structure model of the document. If \r\n+     * the <code>ownerElement</code> attribute is <code>null</code> (i.e. \r\n+     * because it was just created or was set to <code>null</code> by the \r\n+     * various removal and cloning operations) <code>specified</code> is \r\n+     * <code>true</code>. \r\n+     */\r\n+    public boolean getSpecified();\r\n+\r\n+    /**\r\n+     * On retrieval, the value of the attribute is returned as a string. \r\n+     * Character and general entity references are replaced with their \r\n+     * values. See also the method <code>getAttribute</code> on the \r\n+     * <code>Element</code> interface.\r\n+     * <br>On setting, this creates a <code>Text</code> node with the unparsed \r\n+     * contents of the string. I.e. any characters that an XML processor \r\n+     * would recognize as markup are instead treated as literal text. See \r\n+     * also the method <code>setAttribute</code> on the <code>Element</code> \r\n+     * interface.\r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.\r\n+     */\r\n+    public String getValue();\r\n+    public void setValue(String value)\r\n+                            throws DOMException;\r\n+\r\n+    /**\r\n+     * The <code>Element</code> node this attribute is attached to or \r\n+     * <code>null</code> if this attribute is not in use.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public Element getOwnerElement();\r\n+\r\n+}\r"}, {"sha": "d9972ef0e1cb77d0df5b2e9a264eb6353e45273b", "filename": "libjava/org/w3c/dom/CDATASection.java", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FCDATASection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FCDATASection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FCDATASection.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,48 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * CDATA sections are used to escape blocks of text containing characters that \r\n+ * would otherwise be regarded as markup. The only delimiter that is \r\n+ * recognized in a CDATA section is the \"]]&gt;\" string that ends the CDATA \r\n+ * section. CDATA sections cannot be nested. Their primary purpose is for \r\n+ * including material such as XML fragments, without needing to escape all \r\n+ * the delimiters.\r\n+ * <p>The <code>DOMString</code> attribute of the <code>Text</code> node holds \r\n+ * the text that is contained by the CDATA section. Note that this may \r\n+ * contain characters that need to be escaped outside of CDATA sections and \r\n+ * that, depending on the character encoding (\"charset\") chosen for \r\n+ * serialization, it may be impossible to write out some characters as part \r\n+ * of a CDATA section. \r\n+ * <p> The <code>CDATASection</code> interface inherits from the \r\n+ * <code>CharacterData</code> interface through the <code>Text</code> \r\n+ * interface. Adjacent <code>CDATASection</code> nodes are not merged by use \r\n+ * of the <code>normalize</code> method of the <code>Node</code> interface.\r\n+ * Because no markup is recognized within a <code>CDATASection</code>, \r\n+ * character numeric references cannot be used as an escape mechanism when \r\n+ * serializing. Therefore, action needs to be taken when serializing a \r\n+ * <code>CDATASection</code> with a character encoding where some of the \r\n+ * contained characters cannot be represented. Failure to do so would not \r\n+ * produce well-formed XML.One potential solution in the serialization \r\n+ * process is to end the CDATA section before the character, output the \r\n+ * character using a character reference or entity reference, and open a new \r\n+ * CDATA section for any further characters in the text node. Note, however, \r\n+ * that some code conversion libraries at the time of writing do not return \r\n+ * an error or exception when a character is missing from the encoding, \r\n+ * making the task of ensuring that data is not corrupted on serialization \r\n+ * more difficult.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface CDATASection extends Text {\r\n+}\r"}, {"sha": "d459252e0f349fc986b71c40183281ff2336d073", "filename": "libjava/org/w3c/dom/CharacterData.java", "status": "added", "additions": 144, "deletions": 0, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FCharacterData.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FCharacterData.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FCharacterData.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,144 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * The <code>CharacterData</code> interface extends Node with a set of \r\n+ * attributes and methods for accessing character data in the DOM. For \r\n+ * clarity this set is defined here rather than on each object that uses \r\n+ * these attributes and methods. No DOM objects correspond directly to \r\n+ * <code>CharacterData</code>, though <code>Text</code> and others do \r\n+ * inherit the interface from it. All <code>offsets</code> in this interface \r\n+ * start from <code>0</code>.\r\n+ * <p>As explained in the <code>DOMString</code> interface, text strings in \r\n+ * the DOM are represented in UTF-16, i.e. as a sequence of 16-bit units. In \r\n+ * the following, the term 16-bit units is used whenever necessary to \r\n+ * indicate that indexing on CharacterData is done in 16-bit units.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface CharacterData extends Node {\r\n+    /**\r\n+     * The character data of the node that implements this interface. The DOM \r\n+     * implementation may not put arbitrary limits on the amount of data \r\n+     * that may be stored in a <code>CharacterData</code> node. However, \r\n+     * implementation limits may mean that the entirety of a node's data may \r\n+     * not fit into a single <code>DOMString</code>. In such cases, the user \r\n+     * may call <code>substringData</code> to retrieve the data in \r\n+     * appropriately sized pieces.\r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.\r\n+     * @exception DOMException\r\n+     *   DOMSTRING_SIZE_ERR: Raised when it would return more characters than \r\n+     *   fit in a <code>DOMString</code> variable on the implementation \r\n+     *   platform.\r\n+     */\r\n+    public String getData()\r\n+                            throws DOMException;\r\n+    public void setData(String data)\r\n+                            throws DOMException;\r\n+\r\n+    /**\r\n+     * The number of 16-bit units that are available through <code>data</code> \r\n+     * and the <code>substringData</code> method below. This may have the \r\n+     * value zero, i.e., <code>CharacterData</code> nodes may be empty.\r\n+     */\r\n+    public int getLength();\r\n+\r\n+    /**\r\n+     * Extracts a range of data from the node.\r\n+     * @param offsetStart offset of substring to extract.\r\n+     * @param countThe number of 16-bit units to extract.\r\n+     * @return The specified substring. If the sum of <code>offset</code> and \r\n+     *   <code>count</code> exceeds the <code>length</code>, then all 16-bit \r\n+     *   units to the end of the data are returned.\r\n+     * @exception DOMException\r\n+     *   INDEX_SIZE_ERR: Raised if the specified <code>offset</code> is \r\n+     *   negative or greater than the number of 16-bit units in \r\n+     *   <code>data</code>, or if the specified <code>count</code> is \r\n+     *   negative.\r\n+     *   <br>DOMSTRING_SIZE_ERR: Raised if the specified range of text does \r\n+     *   not fit into a <code>DOMString</code>.\r\n+     */\r\n+    public String substringData(int offset, \r\n+                                int count)\r\n+                                throws DOMException;\r\n+\r\n+    /**\r\n+     * Append the string to the end of the character data of the node. Upon \r\n+     * success, <code>data</code> provides access to the concatenation of \r\n+     * <code>data</code> and the <code>DOMString</code> specified.\r\n+     * @param argThe <code>DOMString</code> to append.\r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     */\r\n+    public void appendData(String arg)\r\n+                           throws DOMException;\r\n+\r\n+    /**\r\n+     * Insert a string at the specified 16-bit unit offset.\r\n+     * @param offsetThe character offset at which to insert.\r\n+     * @param argThe <code>DOMString</code> to insert.\r\n+     * @exception DOMException\r\n+     *   INDEX_SIZE_ERR: Raised if the specified <code>offset</code> is \r\n+     *   negative or greater than the number of 16-bit units in \r\n+     *   <code>data</code>.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     */\r\n+    public void insertData(int offset, \r\n+                           String arg)\r\n+                           throws DOMException;\r\n+\r\n+    /**\r\n+     * Remove a range of 16-bit units from the node. Upon success, \r\n+     * <code>data</code> and <code>length</code> reflect the change.\r\n+     * @param offsetThe offset from which to start removing.\r\n+     * @param countThe number of 16-bit units to delete. If the sum of \r\n+     *   <code>offset</code> and <code>count</code> exceeds \r\n+     *   <code>length</code> then all 16-bit units from <code>offset</code> \r\n+     *   to the end of the data are deleted.\r\n+     * @exception DOMException\r\n+     *   INDEX_SIZE_ERR: Raised if the specified <code>offset</code> is \r\n+     *   negative or greater than the number of 16-bit units in \r\n+     *   <code>data</code>, or if the specified <code>count</code> is \r\n+     *   negative.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     */\r\n+    public void deleteData(int offset, \r\n+                           int count)\r\n+                           throws DOMException;\r\n+\r\n+    /**\r\n+     * Replace the characters starting at the specified 16-bit unit offset \r\n+     * with the specified string.\r\n+     * @param offsetThe offset from which to start replacing.\r\n+     * @param countThe number of 16-bit units to replace. If the sum of \r\n+     *   <code>offset</code> and <code>count</code> exceeds \r\n+     *   <code>length</code>, then all 16-bit units to the end of the data \r\n+     *   are replaced; (i.e., the effect is the same as a <code>remove</code>\r\n+     *    method call with the same range, followed by an <code>append</code>\r\n+     *    method invocation).\r\n+     * @param argThe <code>DOMString</code> with which the range must be \r\n+     *   replaced.\r\n+     * @exception DOMException\r\n+     *   INDEX_SIZE_ERR: Raised if the specified <code>offset</code> is \r\n+     *   negative or greater than the number of 16-bit units in \r\n+     *   <code>data</code>, or if the specified <code>count</code> is \r\n+     *   negative.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     */\r\n+    public void replaceData(int offset, \r\n+                            int count, \r\n+                            String arg)\r\n+                            throws DOMException;\r\n+\r\n+}\r"}, {"sha": "7c37d965f0912dc42e1f656e21913ca54b54a7e4", "filename": "libjava/org/w3c/dom/Comment.java", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FComment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FComment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FComment.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,24 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * This interface inherits from <code>CharacterData</code> and represents the \r\n+ * content of a comment, i.e., all the characters between the starting '\r\n+ * <code>&lt;!--</code>' and ending '<code>--&gt;</code>'. Note that this is \r\n+ * the definition of a comment in XML, and, in practice, HTML, although some \r\n+ * HTML tools may implement the full SGML comment structure.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface Comment extends CharacterData {\r\n+}\r"}, {"sha": "41ad08a6d96458f49da8701c383664bf0097ae87", "filename": "libjava/org/w3c/dom/DOMException.java", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FDOMException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FDOMException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FDOMException.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,117 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * DOM operations only raise exceptions in \"exceptional\" circumstances, i.e., \r\n+ * when an operation is impossible to perform (either for logical reasons, \r\n+ * because data is lost, or because the implementation has become unstable). \r\n+ * In general, DOM methods return specific error values in ordinary \r\n+ * processing situations, such as out-of-bound errors when using \r\n+ * <code>NodeList</code>. \r\n+ * <p>Implementations should raise other exceptions under other circumstances. \r\n+ * For example, implementations should raise an implementation-dependent \r\n+ * exception if a <code>null</code> argument is passed. \r\n+ * <p>Some languages and object systems do not support the concept of \r\n+ * exceptions. For such systems, error conditions may be indicated using \r\n+ * native error reporting mechanisms. For some bindings, for example, \r\n+ * methods may return error codes similar to those listed in the \r\n+ * corresponding method descriptions.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public class DOMException extends RuntimeException {\r\n+    public DOMException(short code, String message) {\r\n+       super(message);\r\n+       this.code = code;\r\n+    }\r\n+    /** @serial */\r\n+    public short   code;\r\n+    // ExceptionCode\r\n+    /**\r\n+     * If index or size is negative, or greater than the allowed value\r\n+     */\r\n+    public static final short INDEX_SIZE_ERR            = 1;\r\n+    /**\r\n+     * If the specified range of text does not fit into a DOMString\r\n+     */\r\n+    public static final short DOMSTRING_SIZE_ERR        = 2;\r\n+    /**\r\n+     * If any node is inserted somewhere it doesn't belong\r\n+     */\r\n+    public static final short HIERARCHY_REQUEST_ERR     = 3;\r\n+    /**\r\n+     * If a node is used in a different document than the one that created it \r\n+     * (that doesn't support it)\r\n+     */\r\n+    public static final short WRONG_DOCUMENT_ERR        = 4;\r\n+    /**\r\n+     * If an invalid or illegal character is specified, such as in a name. See \r\n+     * production 2 in the XML specification for the definition of a legal \r\n+     * character, and production 5 for the definition of a legal name \r\n+     * character.\r\n+     */\r\n+    public static final short INVALID_CHARACTER_ERR     = 5;\r\n+    /**\r\n+     * If data is specified for a node which does not support data\r\n+     */\r\n+    public static final short NO_DATA_ALLOWED_ERR       = 6;\r\n+    /**\r\n+     * If an attempt is made to modify an object where modifications are not \r\n+     * allowed\r\n+     */\r\n+    public static final short NO_MODIFICATION_ALLOWED_ERR = 7;\r\n+    /**\r\n+     * If an attempt is made to reference a node in a context where it does \r\n+     * not exist\r\n+     */\r\n+    public static final short NOT_FOUND_ERR             = 8;\r\n+    /**\r\n+     * If the implementation does not support the requested type of object or \r\n+     * operation.\r\n+     */\r\n+    public static final short NOT_SUPPORTED_ERR         = 9;\r\n+    /**\r\n+     * If an attempt is made to add an attribute that is already in use \r\n+     * elsewhere\r\n+     */\r\n+    public static final short INUSE_ATTRIBUTE_ERR       = 10;\r\n+    /**\r\n+     * If an attempt is made to use an object that is not, or is no longer, \r\n+     * usable.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public static final short INVALID_STATE_ERR         = 11;\r\n+    /**\r\n+     * If an invalid or illegal string is specified.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public static final short SYNTAX_ERR                = 12;\r\n+    /**\r\n+     * If an attempt is made to modify the type of the underlying object.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public static final short INVALID_MODIFICATION_ERR  = 13;\r\n+    /**\r\n+     * If an attempt is made to create or change an object in a way which is \r\n+     * incorrect with regard to namespaces.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public static final short NAMESPACE_ERR             = 14;\r\n+    /**\r\n+     * If a parameter or an operation is not supported by the underlying \r\n+     * object.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public static final short INVALID_ACCESS_ERR        = 15;\r\n+\r\n+}\r"}, {"sha": "b11d715843137a7f6afbf088c93b7d4441481d9f", "filename": "libjava/org/w3c/dom/DOMImplementation.java", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FDOMImplementation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FDOMImplementation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FDOMImplementation.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,100 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * The <code>DOMImplementation</code> interface provides a number of methods \r\n+ * for performing operations that are independent of any particular instance \r\n+ * of the document object model.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface DOMImplementation {\r\n+    /**\r\n+     * Test if the DOM implementation implements a specific feature.\r\n+     * @param featureThe name of the feature to test (case-insensitive). The \r\n+     *   values used by DOM features are defined throughout the DOM Level 2 \r\n+     *   specifications and listed in the  section. The name must be an XML \r\n+     *   name. To avoid possible conflicts, as a convention, names referring \r\n+     *   to features defined outside the DOM specification should be made \r\n+     *   unique by reversing the name of the Internet domain name of the \r\n+     *   person (or the organization that the person belongs to) who defines \r\n+     *   the feature, component by component, and using this as a prefix. \r\n+     *   For instance, the W3C SVG Working Group defines the feature \r\n+     *   \"org.w3c.dom.svg\".\r\n+     * @param versionThis is the version number of the feature to test. In \r\n+     *   Level 2, the string can be either \"2.0\" or \"1.0\". If the version is \r\n+     *   not specified, supporting any version of the feature causes the \r\n+     *   method to return <code>true</code>.\r\n+     * @return <code>true</code> if the feature is implemented in the \r\n+     *   specified version, <code>false</code> otherwise.\r\n+     */\r\n+    public boolean hasFeature(String feature, \r\n+                              String version);\r\n+\r\n+    /**\r\n+     * Creates an empty <code>DocumentType</code> node. Entity declarations \r\n+     * and notations are not made available. Entity reference expansions and \r\n+     * default attribute additions do not occur. It is expected that a \r\n+     * future version of the DOM will provide a way for populating a \r\n+     * <code>DocumentType</code>.\r\n+     * <br>HTML-only DOM implementations do not need to implement this method.\r\n+     * @param qualifiedNameThe qualified name of the document type to be \r\n+     *   created. \r\n+     * @param publicIdThe external subset public identifier.\r\n+     * @param systemIdThe external subset system identifier.\r\n+     * @return A new <code>DocumentType</code> node with \r\n+     *   <code>Node.ownerDocument</code> set to <code>null</code>.\r\n+     * @exception DOMException\r\n+     *   INVALID_CHARACTER_ERR: Raised if the specified qualified name \r\n+     *   contains an illegal character.\r\n+     *   <br>NAMESPACE_ERR: Raised if the <code>qualifiedName</code> is \r\n+     *   malformed.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public DocumentType createDocumentType(String qualifiedName, \r\n+                                           String publicId, \r\n+                                           String systemId)\r\n+                                           throws DOMException;\r\n+\r\n+    /**\r\n+     * Creates an XML <code>Document</code> object of the specified type with \r\n+     * its document element. HTML-only DOM implementations do not need to \r\n+     * implement this method.\r\n+     * @param namespaceURIThe namespace URI of the document element to create.\r\n+     * @param qualifiedNameThe qualified name of the document element to be \r\n+     *   created.\r\n+     * @param doctypeThe type of document to be created or <code>null</code>.\r\n+     *   When <code>doctype</code> is not <code>null</code>, its \r\n+     *   <code>Node.ownerDocument</code> attribute is set to the document \r\n+     *   being created.\r\n+     * @return A new <code>Document</code> object.\r\n+     * @exception DOMException\r\n+     *   INVALID_CHARACTER_ERR: Raised if the specified qualified name \r\n+     *   contains an illegal character.\r\n+     *   <br>NAMESPACE_ERR: Raised if the <code>qualifiedName</code> is \r\n+     *   malformed, if the <code>qualifiedName</code> has a prefix and the \r\n+     *   <code>namespaceURI</code> is <code>null</code>, or if the \r\n+     *   <code>qualifiedName</code> has a prefix that is \"xml\" and the \r\n+     *   <code>namespaceURI</code> is different from \"\r\n+     *   http://www.w3.org/XML/1998/namespace\" .\r\n+     *   <br>WRONG_DOCUMENT_ERR: Raised if <code>doctype</code> has already \r\n+     *   been used with a different document or was created from a different \r\n+     *   implementation.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public Document createDocument(String namespaceURI, \r\n+                                   String qualifiedName, \r\n+                                   DocumentType doctype)\r\n+                                   throws DOMException;\r\n+\r\n+}\r"}, {"sha": "2db27c9641041c0c19594e892816906605b60adc", "filename": "libjava/org/w3c/dom/Document.java", "status": "added", "additions": 365, "deletions": 0, "changes": 365, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FDocument.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,365 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * The <code>Document</code> interface represents the entire HTML or XML \r\n+ * document. Conceptually, it is the root of the document tree, and provides \r\n+ * the primary access to the document's data.\r\n+ * <p>Since elements, text nodes, comments, processing instructions, etc. \r\n+ * cannot exist outside the context of a <code>Document</code>, the \r\n+ * <code>Document</code> interface also contains the factory methods needed \r\n+ * to create these objects. The <code>Node</code> objects created have a \r\n+ * <code>ownerDocument</code> attribute which associates them with the \r\n+ * <code>Document</code> within whose context they were created.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface Document extends Node {\r\n+    /**\r\n+     * The Document Type Declaration (see <code>DocumentType</code>) \r\n+     * associated with this document. For HTML documents as well as XML \r\n+     * documents without a document type declaration this returns \r\n+     * <code>null</code>. The DOM Level 2 does not support editing the \r\n+     * Document Type Declaration. <code>docType</code> cannot be altered in \r\n+     * any way, including through the use of methods inherited from the \r\n+     * <code>Node</code> interface, such as <code>insertNode</code> or \r\n+     * <code>removeNode</code>.\r\n+     */\r\n+    public DocumentType getDoctype();\r\n+\r\n+    /**\r\n+     * The <code>DOMImplementation</code> object that handles this document. A \r\n+     * DOM application may use objects from multiple implementations.\r\n+     */\r\n+    public DOMImplementation getImplementation();\r\n+\r\n+    /**\r\n+     * This is a convenience attribute that allows direct access to the child \r\n+     * node that is the root element of the document. For HTML documents, \r\n+     * this is the element with the tagName \"HTML\".\r\n+     */\r\n+    public Element getDocumentElement();\r\n+\r\n+    /**\r\n+     * Creates an element of the type specified. Note that the instance \r\n+     * returned implements the <code>Element</code> interface, so attributes \r\n+     * can be specified directly on the returned object.\r\n+     * <br>In addition, if there are known attributes with default values, \r\n+     * <code>Attr</code> nodes representing them are automatically created \r\n+     * and attached to the element.\r\n+     * <br>To create an element with a qualified name and namespace URI, use \r\n+     * the <code>createElementNS</code> method.\r\n+     * @param tagNameThe name of the element type to instantiate. For XML, \r\n+     *   this is case-sensitive. For HTML, the <code>tagName</code> \r\n+     *   parameter may be provided in any case, but it must be mapped to the \r\n+     *   canonical uppercase form by the DOM implementation. \r\n+     * @return A new <code>Element</code> object with the \r\n+     *   <code>nodeName</code> attribute set to <code>tagName</code>, and \r\n+     *   <code>localName</code>, <code>prefix</code>, and \r\n+     *   <code>namespaceURI</code> set to <code>null</code>.\r\n+     * @exception DOMException\r\n+     *   INVALID_CHARACTER_ERR: Raised if the specified name contains an \r\n+     *   illegal character.\r\n+     */\r\n+    public Element createElement(String tagName)\r\n+                                 throws DOMException;\r\n+\r\n+    /**\r\n+     * Creates an empty <code>DocumentFragment</code> object. \r\n+     * @return A new <code>DocumentFragment</code>.\r\n+     */\r\n+    public DocumentFragment createDocumentFragment();\r\n+\r\n+    /**\r\n+     * Creates a <code>Text</code> node given the specified string.\r\n+     * @param dataThe data for the node.\r\n+     * @return The new <code>Text</code> object.\r\n+     */\r\n+    public Text createTextNode(String data);\r\n+\r\n+    /**\r\n+     * Creates a <code>Comment</code> node given the specified string.\r\n+     * @param dataThe data for the node.\r\n+     * @return The new <code>Comment</code> object.\r\n+     */\r\n+    public Comment createComment(String data);\r\n+\r\n+    /**\r\n+     * Creates a <code>CDATASection</code> node whose value is the specified \r\n+     * string.\r\n+     * @param dataThe data for the <code>CDATASection</code> contents.\r\n+     * @return The new <code>CDATASection</code> object.\r\n+     * @exception DOMException\r\n+     *   NOT_SUPPORTED_ERR: Raised if this document is an HTML document.\r\n+     */\r\n+    public CDATASection createCDATASection(String data)\r\n+                                           throws DOMException;\r\n+\r\n+    /**\r\n+     * Creates a <code>ProcessingInstruction</code> node given the specified \r\n+     * name and data strings.\r\n+     * @param targetThe target part of the processing instruction.\r\n+     * @param dataThe data for the node.\r\n+     * @return The new <code>ProcessingInstruction</code> object.\r\n+     * @exception DOMException\r\n+     *   INVALID_CHARACTER_ERR: Raised if the specified target contains an \r\n+     *   illegal character.\r\n+     *   <br>NOT_SUPPORTED_ERR: Raised if this document is an HTML document.\r\n+     */\r\n+    public ProcessingInstruction createProcessingInstruction(String target, \r\n+                                                             String data)\r\n+                                                             throws DOMException;\r\n+\r\n+    /**\r\n+     * Creates an <code>Attr</code> of the given name. Note that the \r\n+     * <code>Attr</code> instance can then be set on an <code>Element</code> \r\n+     * using the <code>setAttributeNode</code> method. \r\n+     * <br>To create an attribute with a qualified name and namespace URI, use \r\n+     * the <code>createAttributeNS</code> method.\r\n+     * @param nameThe name of the attribute.\r\n+     * @return A new <code>Attr</code> object with the <code>nodeName</code> \r\n+     *   attribute set to <code>name</code>, and <code>localName</code>, \r\n+     *   <code>prefix</code>, and <code>namespaceURI</code> set to \r\n+     *   <code>null</code>. The value of the attribute is the empty string.\r\n+     * @exception DOMException\r\n+     *   INVALID_CHARACTER_ERR: Raised if the specified name contains an \r\n+     *   illegal character.\r\n+     */\r\n+    public Attr createAttribute(String name)\r\n+                                throws DOMException;\r\n+\r\n+    /**\r\n+     * Creates an <code>EntityReference</code> object. In addition, if the \r\n+     * referenced entity is known, the child list of the \r\n+     * <code>EntityReference</code> node is made the same as that of the \r\n+     * corresponding <code>Entity</code> node.If any descendant of the \r\n+     * <code>Entity</code> node has an unbound namespace prefix, the \r\n+     * corresponding descendant of the created <code>EntityReference</code> \r\n+     * node is also unbound; (its <code>namespaceURI</code> is \r\n+     * <code>null</code>). The DOM Level 2 does not support any mechanism to \r\n+     * resolve namespace prefixes.\r\n+     * @param nameThe name of the entity to reference. \r\n+     * @return The new <code>EntityReference</code> object.\r\n+     * @exception DOMException\r\n+     *   INVALID_CHARACTER_ERR: Raised if the specified name contains an \r\n+     *   illegal character.\r\n+     *   <br>NOT_SUPPORTED_ERR: Raised if this document is an HTML document.\r\n+     */\r\n+    public EntityReference createEntityReference(String name)\r\n+                                                 throws DOMException;\r\n+\r\n+    /**\r\n+     * Returns a <code>NodeList</code> of all the <code>Elements</code> with a \r\n+     * given tag name in the order in which they are encountered in a \r\n+     * preorder traversal of the <code>Document</code> tree. \r\n+     * @param tagnameThe name of the tag to match on. The special value \"*\" \r\n+     *   matches all tags.\r\n+     * @return A new <code>NodeList</code> object containing all the matched \r\n+     *   <code>Elements</code>.\r\n+     */\r\n+    public NodeList getElementsByTagName(String tagname);\r\n+\r\n+    /**\r\n+     * Imports a node from another document to this document. The returned \r\n+     * node has no parent; (<code>parentNode</code> is <code>null</code>). \r\n+     * The source node is not altered or removed from the original document; \r\n+     * this method creates a new copy of the source node.\r\n+     * <br>For all nodes, importing a node creates a node object owned by the \r\n+     * importing document, with attribute values identical to the source \r\n+     * node's <code>nodeName</code> and <code>nodeType</code>, plus the \r\n+     * attributes related to namespaces (<code>prefix</code>, \r\n+     * <code>localName</code>, and <code>namespaceURI</code>). As in the \r\n+     * <code>cloneNode</code> operation on a <code>Node</code>, the source \r\n+     * node is not altered.\r\n+     * <br>Additional information is copied as appropriate to the \r\n+     * <code>nodeType</code>, attempting to mirror the behavior expected if \r\n+     * a fragment of XML or HTML source was copied from one document to \r\n+     * another, recognizing that the two documents may have different DTDs \r\n+     * in the XML case. The following list describes the specifics for each \r\n+     * type of node. \r\n+     * <dl>\r\n+     * <dt>ATTRIBUTE_NODE</dt>\r\n+     * <dd>The <code>ownerElement</code> attribute \r\n+     * is set to <code>null</code> and the <code>specified</code> flag is \r\n+     * set to <code>true</code> on the generated <code>Attr</code>. The \r\n+     * descendants of the source <code>Attr</code> are recursively imported \r\n+     * and the resulting nodes reassembled to form the corresponding subtree.\r\n+     * Note that the <code>deep</code> parameter has no effect on \r\n+     * <code>Attr</code> nodes; they always carry their children with them \r\n+     * when imported.</dd>\r\n+     * <dt>DOCUMENT_FRAGMENT_NODE</dt>\r\n+     * <dd>If the <code>deep</code> option \r\n+     * was set to <code>true</code>, the descendants of the source element \r\n+     * are recursively imported and the resulting nodes reassembled to form \r\n+     * the corresponding subtree. Otherwise, this simply generates an empty \r\n+     * <code>DocumentFragment</code>.</dd>\r\n+     * <dt>DOCUMENT_NODE</dt>\r\n+     * <dd><code>Document</code> \r\n+     * nodes cannot be imported.</dd>\r\n+     * <dt>DOCUMENT_TYPE_NODE</dt>\r\n+     * <dd><code>DocumentType</code> \r\n+     * nodes cannot be imported.</dd>\r\n+     * <dt>ELEMENT_NODE</dt>\r\n+     * <dd>Specified attribute nodes of the \r\n+     * source element are imported, and the generated <code>Attr</code> \r\n+     * nodes are attached to the generated <code>Element</code>. Default \r\n+     * attributes are not copied, though if the document being imported into \r\n+     * defines default attributes for this element name, those are assigned. \r\n+     * If the <code>importNode</code> <code>deep</code> parameter was set to \r\n+     * <code>true</code>, the descendants of the source element are \r\n+     * recursively imported and the resulting nodes reassembled to form the \r\n+     * corresponding subtree.</dd>\r\n+     * <dt>ENTITY_NODE</dt>\r\n+     * <dd><code>Entity</code> nodes can be \r\n+     * imported, however in the current release of the DOM the \r\n+     * <code>DocumentType</code> is readonly. Ability to add these imported \r\n+     * nodes to a <code>DocumentType</code> will be considered for addition \r\n+     * to a future release of the DOM.On import, the <code>publicId</code>, \r\n+     * <code>systemId</code>, and <code>notationName</code> attributes are \r\n+     * copied. If a <code>deep</code> import is requested, the descendants \r\n+     * of the the source <code>Entity</code> are recursively imported and \r\n+     * the resulting nodes reassembled to form the corresponding subtree.</dd>\r\n+     * <dt>\r\n+     * ENTITY_REFERENCE_NODE</dt>\r\n+     * <dd>Only the <code>EntityReference</code> itself is \r\n+     * copied, even if a <code>deep</code> import is requested, since the \r\n+     * source and destination documents might have defined the entity \r\n+     * differently. If the document being imported into provides a \r\n+     * definition for this entity name, its value is assigned.</dd>\r\n+     * <dt>NOTATION_NODE</dt>\r\n+     * <dd>\r\n+     * <code>Notation</code> nodes can be imported, however in the current \r\n+     * release of the DOM the <code>DocumentType</code> is readonly. Ability \r\n+     * to add these imported nodes to a <code>DocumentType</code> will be \r\n+     * considered for addition to a future release of the DOM.On import, the \r\n+     * <code>publicId</code> and <code>systemId</code> attributes are copied.\r\n+     * Note that the <code>deep</code> parameter has no effect on \r\n+     * <code>Notation</code> nodes since they never have any children.</dd>\r\n+     * <dt>\r\n+     * PROCESSING_INSTRUCTION_NODE</dt>\r\n+     * <dd>The imported node copies its \r\n+     * <code>target</code> and <code>data</code> values from those of the \r\n+     * source node.</dd>\r\n+     * <dt>TEXT_NODE, CDATA_SECTION_NODE, COMMENT_NODE</dt>\r\n+     * <dd>These three \r\n+     * types of nodes inheriting from <code>CharacterData</code> copy their \r\n+     * <code>data</code> and <code>length</code> attributes from those of \r\n+     * the source node.</dd>\r\n+     *  \r\n+     * @param importedNodeThe node to import.\r\n+     * @param deepIf <code>true</code>, recursively import the subtree under \r\n+     *   the specified node; if <code>false</code>, import only the node \r\n+     *   itself, as explained above. This has no effect on <code>Attr</code>\r\n+     *   , <code>EntityReference</code>, and <code>Notation</code> nodes.\r\n+     * @return The imported node that belongs to this <code>Document</code>.\r\n+     * @exception DOMException\r\n+     *   NOT_SUPPORTED_ERR: Raised if the type of node being imported is not \r\n+     *   supported.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public Node importNode(Node importedNode, \r\n+                           boolean deep)\r\n+                           throws DOMException;\r\n+\r\n+    /**\r\n+     * Creates an element of the given qualified name and namespace URI. \r\n+     * HTML-only DOM implementations do not need to implement this method.\r\n+     * @param namespaceURIThe namespace URI of the element to create.\r\n+     * @param qualifiedNameThe qualified name of the element type to \r\n+     *   instantiate.\r\n+     * @return A new <code>Element</code> object with the following \r\n+     *   attributes:AttributeValue<code>Node.nodeName</code>\r\n+     *   <code>qualifiedName</code><code>Node.namespaceURI</code>\r\n+     *   <code>namespaceURI</code><code>Node.prefix</code>prefix, extracted \r\n+     *   from <code>qualifiedName</code>, or <code>null</code> if there is \r\n+     *   no prefix<code>Node.localName</code>local name, extracted from \r\n+     *   <code>qualifiedName</code><code>Element.tagName</code>\r\n+     *   <code>qualifiedName</code>\r\n+     * @exception DOMException\r\n+     *   INVALID_CHARACTER_ERR: Raised if the specified qualified name \r\n+     *   contains an illegal character.\r\n+     *   <br>NAMESPACE_ERR: Raised if the <code>qualifiedName</code> is \r\n+     *   malformed, if the <code>qualifiedName</code> has a prefix and the \r\n+     *   <code>namespaceURI</code> is <code>null</code>, or if the \r\n+     *   <code>qualifiedName</code> has a prefix that is \"xml\" and the \r\n+     *   <code>namespaceURI</code> is different from \"\r\n+     *   http://www.w3.org/XML/1998/namespace\" .\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public Element createElementNS(String namespaceURI, \r\n+                                   String qualifiedName)\r\n+                                   throws DOMException;\r\n+\r\n+    /**\r\n+     * Creates an attribute of the given qualified name and namespace URI. \r\n+     * HTML-only DOM implementations do not need to implement this method.\r\n+     * @param namespaceURIThe namespace URI of the attribute to create.\r\n+     * @param qualifiedNameThe qualified name of the attribute to instantiate.\r\n+     * @return A new <code>Attr</code> object with the following attributes:\r\n+     *   AttributeValue<code>Node.nodeName</code>qualifiedName\r\n+     *   <code>Node.namespaceURI</code><code>namespaceURI</code>\r\n+     *   <code>Node.prefix</code>prefix, extracted from \r\n+     *   <code>qualifiedName</code>, or <code>null</code> if there is no \r\n+     *   prefix<code>Node.localName</code>local name, extracted from \r\n+     *   <code>qualifiedName</code><code>Attr.name</code>\r\n+     *   <code>qualifiedName</code><code>Node.nodeValue</code>the empty \r\n+     *   string\r\n+     * @exception DOMException\r\n+     *   INVALID_CHARACTER_ERR: Raised if the specified qualified name \r\n+     *   contains an illegal character.\r\n+     *   <br>NAMESPACE_ERR: Raised if the <code>qualifiedName</code> is \r\n+     *   malformed, if the <code>qualifiedName</code> has a prefix and the \r\n+     *   <code>namespaceURI</code> is <code>null</code>, if the \r\n+     *   <code>qualifiedName</code> has a prefix that is \"xml\" and the \r\n+     *   <code>namespaceURI</code> is different from \"\r\n+     *   http://www.w3.org/XML/1998/namespace\", or if the \r\n+     *   <code>qualifiedName</code> is \"xmlns\" and the \r\n+     *   <code>namespaceURI</code> is different from \"\r\n+     *   http://www.w3.org/2000/xmlns/\".\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public Attr createAttributeNS(String namespaceURI, \r\n+                                  String qualifiedName)\r\n+                                  throws DOMException;\r\n+\r\n+    /**\r\n+     * Returns a <code>NodeList</code> of all the <code>Elements</code> with a \r\n+     * given local name and namespace URI in the order in which they are \r\n+     * encountered in a preorder traversal of the <code>Document</code> tree.\r\n+     * @param namespaceURIThe namespace URI of the elements to match on. The \r\n+     *   special value \"*\" matches all namespaces.\r\n+     * @param localNameThe local name of the elements to match on. The \r\n+     *   special value \"*\" matches all local names.\r\n+     * @return A new <code>NodeList</code> object containing all the matched \r\n+     *   <code>Elements</code>.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public NodeList getElementsByTagNameNS(String namespaceURI, \r\n+                                           String localName);\r\n+\r\n+    /**\r\n+     * Returns the <code>Element</code> whose <code>ID</code> is given by \r\n+     * <code>elementId</code>. If no such element exists, returns \r\n+     * <code>null</code>. Behavior is not defined if more than one element \r\n+     * has this <code>ID</code>. The DOM implementation must have \r\n+     * information that says which attributes are of type ID. Attributes \r\n+     * with the name \"ID\" are not of type ID unless so defined. \r\n+     * Implementations that do not know whether attributes are of type ID or \r\n+     * not are expected to return <code>null</code>.\r\n+     * @param elementIdThe unique <code>id</code> value for an element.\r\n+     * @return The matching element.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public Element getElementById(String elementId);\r\n+\r\n+}\r"}, {"sha": "9579eb7ec71c28eef50c59f9c08852639e81732d", "filename": "libjava/org/w3c/dom/DocumentFragment.java", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FDocumentFragment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FDocumentFragment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FDocumentFragment.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,52 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * <code>DocumentFragment</code> is a \"lightweight\" or \"minimal\" \r\n+ * <code>Document</code> object. It is very common to want to be able to \r\n+ * extract a portion of a document's tree or to create a new fragment of a \r\n+ * document. Imagine implementing a user command like cut or rearranging a \r\n+ * document by moving fragments around. It is desirable to have an object \r\n+ * which can hold such fragments and it is quite natural to use a Node for \r\n+ * this purpose. While it is true that a <code>Document</code> object could \r\n+ * fulfill this role, a <code>Document</code> object can potentially be a \r\n+ * heavyweight object, depending on the underlying implementation. What is \r\n+ * really needed for this is a very lightweight object. \r\n+ * <code>DocumentFragment</code> is such an object.\r\n+ * <p>Furthermore, various operations -- such as inserting nodes as children \r\n+ * of another <code>Node</code> -- may take <code>DocumentFragment</code> \r\n+ * objects as arguments; this results in all the child nodes of the \r\n+ * <code>DocumentFragment</code> being moved to the child list of this node.\r\n+ * <p>The children of a <code>DocumentFragment</code> node are zero or more \r\n+ * nodes representing the tops of any sub-trees defining the structure of \r\n+ * the document. <code>DocumentFragment</code> nodes do not need to be \r\n+ * well-formed XML documents (although they do need to follow the rules \r\n+ * imposed upon well-formed XML parsed entities, which can have multiple top \r\n+ * nodes). For example, a <code>DocumentFragment</code> might have only one \r\n+ * child and that child node could be a <code>Text</code> node. Such a \r\n+ * structure model represents neither an HTML document nor a well-formed XML \r\n+ * document.\r\n+ * <p>When a <code>DocumentFragment</code> is inserted into a \r\n+ * <code>Document</code> (or indeed any other <code>Node</code> that may \r\n+ * take children) the children of the <code>DocumentFragment</code> and not \r\n+ * the <code>DocumentFragment</code> itself are inserted into the \r\n+ * <code>Node</code>. This makes the <code>DocumentFragment</code> very \r\n+ * useful when the user wishes to create nodes that are siblings; the \r\n+ * <code>DocumentFragment</code> acts as the parent of these nodes so that \r\n+ * the user can use the standard methods from the <code>Node</code> \r\n+ * interface, such as <code>insertBefore</code> and <code>appendChild</code>.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface DocumentFragment extends Node {\r\n+}\r"}, {"sha": "0bbcfac485726c8ef87b6004844189aa665b5b1a", "filename": "libjava/org/w3c/dom/DocumentType.java", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FDocumentType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FDocumentType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FDocumentType.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,79 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * Each <code>Document</code> has a <code>doctype</code> attribute whose value \r\n+ * is either <code>null</code> or a <code>DocumentType</code> object. The \r\n+ * <code>DocumentType</code> interface in the DOM Core provides an interface \r\n+ * to the list of entities that are defined for the document, and little \r\n+ * else because the effect of namespaces and the various XML schema efforts \r\n+ * on DTD representation are not clearly understood as of this writing.\r\n+ * <p>The DOM Level 2 doesn't support editing <code>DocumentType</code> nodes.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface DocumentType extends Node {\r\n+    /**\r\n+     * The name of DTD; i.e., the name immediately following the \r\n+     * <code>DOCTYPE</code> keyword.\r\n+     */\r\n+    public String getName();\r\n+\r\n+    /**\r\n+     * A <code>NamedNodeMap</code> containing the general entities, both \r\n+     * external and internal, declared in the DTD. Parameter entities are \r\n+     * not contained. Duplicates are discarded. For example in: \r\n+     * <pre>&lt;!DOCTYPE \r\n+     * ex SYSTEM \"ex.dtd\" [ &lt;!ENTITY foo \"foo\"&gt; &lt;!ENTITY bar \r\n+     * \"bar\"&gt; &lt;!ENTITY bar \"bar2\"&gt; &lt;!ENTITY % baz \"baz\"&gt; \r\n+     * ]&gt; &lt;ex/&gt;</pre>\r\n+     *  the interface provides access to <code>foo</code> \r\n+     * and the first declaration of <code>bar</code> but not the second \r\n+     * declaration of <code>bar</code> or <code>baz</code>. Every node in \r\n+     * this map also implements the <code>Entity</code> interface.\r\n+     * <br>The DOM Level 2 does not support editing entities, therefore \r\n+     * <code>entities</code> cannot be altered in any way.\r\n+     */\r\n+    public NamedNodeMap getEntities();\r\n+\r\n+    /**\r\n+     * A <code>NamedNodeMap</code> containing the notations declared in the \r\n+     * DTD. Duplicates are discarded. Every node in this map also implements \r\n+     * the <code>Notation</code> interface.\r\n+     * <br>The DOM Level 2 does not support editing notations, therefore \r\n+     * <code>notations</code> cannot be altered in any way.\r\n+     */\r\n+    public NamedNodeMap getNotations();\r\n+\r\n+    /**\r\n+     * The public identifier of the external subset.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public String getPublicId();\r\n+\r\n+    /**\r\n+     * The system identifier of the external subset.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public String getSystemId();\r\n+\r\n+    /**\r\n+     * The internal subset as a string.The actual content returned depends on \r\n+     * how much information is available to the implementation. This may \r\n+     * vary depending on various parameters, including the XML processor \r\n+     * used to build the document.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public String getInternalSubset();\r\n+\r\n+}\r"}, {"sha": "85277faac60ab2494d47ca0b8d526b9494a5e557", "filename": "libjava/org/w3c/dom/Element.java", "status": "added", "additions": 302, "deletions": 0, "changes": 302, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FElement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FElement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FElement.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,302 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * The <code>Element</code> interface represents an element in an HTML or XML \r\n+ * document. Elements may have attributes associated with them; since the \r\n+ * <code>Element</code> interface inherits from <code>Node</code>, the \r\n+ * generic <code>Node</code> interface attribute <code>attributes</code> may \r\n+ * be used to retrieve the set of all attributes for an element. There are \r\n+ * methods on the <code>Element</code> interface to retrieve either an \r\n+ * <code>Attr</code> object by name or an attribute value by name. In XML, \r\n+ * where an attribute value may contain entity references, an \r\n+ * <code>Attr</code> object should be retrieved to examine the possibly \r\n+ * fairly complex sub-tree representing the attribute value. On the other \r\n+ * hand, in HTML, where all attributes have simple string values, methods to \r\n+ * directly access an attribute value can safely be used as a convenience.In \r\n+ * DOM Level 2, the method <code>normalize</code> is inherited from the \r\n+ * <code>Node</code> interface where it was moved.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface Element extends Node {\r\n+    /**\r\n+     * The name of the element. For example, in: \r\n+     * <pre> &lt;elementExample \r\n+     * id=\"demo\"&gt; ... &lt;/elementExample&gt; , </pre>\r\n+     *  <code>tagName</code> has \r\n+     * the value <code>\"elementExample\"</code>. Note that this is \r\n+     * case-preserving in XML, as are all of the operations of the DOM. The \r\n+     * HTML DOM returns the <code>tagName</code> of an HTML element in the \r\n+     * canonical uppercase form, regardless of the case in the source HTML \r\n+     * document. \r\n+     */\r\n+    public String getTagName();\r\n+\r\n+    /**\r\n+     * Retrieves an attribute value by name.\r\n+     * @param nameThe name of the attribute to retrieve.\r\n+     * @return The <code>Attr</code> value as a string, or the empty string \r\n+     *   if that attribute does not have a specified or default value.\r\n+     */\r\n+    public String getAttribute(String name);\r\n+\r\n+    /**\r\n+     * Adds a new attribute. If an attribute with that name is already present \r\n+     * in the element, its value is changed to be that of the value \r\n+     * parameter. This value is a simple string; it is not parsed as it is \r\n+     * being set. So any markup (such as syntax to be recognized as an \r\n+     * entity reference) is treated as literal text, and needs to be \r\n+     * appropriately escaped by the implementation when it is written out. \r\n+     * In order to assign an attribute value that contains entity \r\n+     * references, the user must create an <code>Attr</code> node plus any \r\n+     * <code>Text</code> and <code>EntityReference</code> nodes, build the \r\n+     * appropriate subtree, and use <code>setAttributeNode</code> to assign \r\n+     * it as the value of an attribute.\r\n+     * <br>To set an attribute with a qualified name and namespace URI, use \r\n+     * the <code>setAttributeNS</code> method.\r\n+     * @param nameThe name of the attribute to create or alter.\r\n+     * @param valueValue to set in string form.\r\n+     * @exception DOMException\r\n+     *   INVALID_CHARACTER_ERR: Raised if the specified name contains an \r\n+     *   illegal character.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     */\r\n+    public void setAttribute(String name, \r\n+                             String value)\r\n+                             throws DOMException;\r\n+\r\n+    /**\r\n+     * Removes an attribute by name. If the removed attribute is known to have \r\n+     * a default value, an attribute immediately appears containing the \r\n+     * default value as well as the corresponding namespace URI, local name, \r\n+     * and prefix when applicable.\r\n+     * <br>To remove an attribute by local name and namespace URI, use the \r\n+     * <code>removeAttributeNS</code> method.\r\n+     * @param nameThe name of the attribute to remove.\r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     */\r\n+    public void removeAttribute(String name)\r\n+                                throws DOMException;\r\n+\r\n+    /**\r\n+     * Retrieves an attribute node by name.\r\n+     * <br>To retrieve an attribute node by qualified name and namespace URI, \r\n+     * use the <code>getAttributeNodeNS</code> method.\r\n+     * @param nameThe name (<code>nodeName</code>) of the attribute to \r\n+     *   retrieve.\r\n+     * @return The <code>Attr</code> node with the specified name (\r\n+     *   <code>nodeName</code>) or <code>null</code> if there is no such \r\n+     *   attribute.\r\n+     */\r\n+    public Attr getAttributeNode(String name);\r\n+\r\n+    /**\r\n+     * Adds a new attribute node. If an attribute with that name (\r\n+     * <code>nodeName</code>) is already present in the element, it is \r\n+     * replaced by the new one.\r\n+     * <br>To add a new attribute node with a qualified name and namespace \r\n+     * URI, use the <code>setAttributeNodeNS</code> method.\r\n+     * @param newAttrThe <code>Attr</code> node to add to the attribute list.\r\n+     * @return If the <code>newAttr</code> attribute replaces an existing \r\n+     *   attribute, the replaced <code>Attr</code> node is returned, \r\n+     *   otherwise <code>null</code> is returned.\r\n+     * @exception DOMException\r\n+     *   WRONG_DOCUMENT_ERR: Raised if <code>newAttr</code> was created from a \r\n+     *   different document than the one that created the element.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     *   <br>INUSE_ATTRIBUTE_ERR: Raised if <code>newAttr</code> is already an \r\n+     *   attribute of another <code>Element</code> object. The DOM user must \r\n+     *   explicitly clone <code>Attr</code> nodes to re-use them in other \r\n+     *   elements.\r\n+     */\r\n+    public Attr setAttributeNode(Attr newAttr)\r\n+                                 throws DOMException;\r\n+\r\n+    /**\r\n+     * Removes the specified attribute node. If the removed <code>Attr</code> \r\n+     * has a default value it is immediately replaced. The replacing \r\n+     * attribute has the same namespace URI and local name, as well as the \r\n+     * original prefix, when applicable.\r\n+     * @param oldAttrThe <code>Attr</code> node to remove from the attribute \r\n+     *   list.\r\n+     * @return The <code>Attr</code> node that was removed.\r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     *   <br>NOT_FOUND_ERR: Raised if <code>oldAttr</code> is not an attribute \r\n+     *   of the element.\r\n+     */\r\n+    public Attr removeAttributeNode(Attr oldAttr)\r\n+                                    throws DOMException;\r\n+\r\n+    /**\r\n+     * Returns a <code>NodeList</code> of all descendant <code>Elements</code> \r\n+     * with a given tag name, in the order in which they are encountered in \r\n+     * a preorder traversal of this <code>Element</code> tree.\r\n+     * @param nameThe name of the tag to match on. The special value \"*\" \r\n+     *   matches all tags.\r\n+     * @return A list of matching <code>Element</code> nodes.\r\n+     */\r\n+    public NodeList getElementsByTagName(String name);\r\n+\r\n+    /**\r\n+     * Retrieves an attribute value by local name and namespace URI. HTML-only \r\n+     * DOM implementations do not need to implement this method.\r\n+     * @param namespaceURIThe namespace URI of the attribute to retrieve.\r\n+     * @param localNameThe local name of the attribute to retrieve.\r\n+     * @return The <code>Attr</code> value as a string, or the empty string \r\n+     *   if that attribute does not have a specified or default value.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public String getAttributeNS(String namespaceURI, \r\n+                                 String localName);\r\n+\r\n+    /**\r\n+     * Adds a new attribute. If an attribute with the same local name and \r\n+     * namespace URI is already present on the element, its prefix is \r\n+     * changed to be the prefix part of the <code>qualifiedName</code>, and \r\n+     * its value is changed to be the <code>value</code> parameter. This \r\n+     * value is a simple string; it is not parsed as it is being set. So any \r\n+     * markup (such as syntax to be recognized as an entity reference) is \r\n+     * treated as literal text, and needs to be appropriately escaped by the \r\n+     * implementation when it is written out. In order to assign an \r\n+     * attribute value that contains entity references, the user must create \r\n+     * an <code>Attr</code> node plus any <code>Text</code> and \r\n+     * <code>EntityReference</code> nodes, build the appropriate subtree, \r\n+     * and use <code>setAttributeNodeNS</code> or \r\n+     * <code>setAttributeNode</code> to assign it as the value of an \r\n+     * attribute.\r\n+     * <br>HTML-only DOM implementations do not need to implement this method.\r\n+     * @param namespaceURIThe namespace URI of the attribute to create or \r\n+     *   alter.\r\n+     * @param qualifiedNameThe qualified name of the attribute to create or \r\n+     *   alter.\r\n+     * @param valueThe value to set in string form.\r\n+     * @exception DOMException\r\n+     *   INVALID_CHARACTER_ERR: Raised if the specified qualified name \r\n+     *   contains an illegal character.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     *   <br>NAMESPACE_ERR: Raised if the <code>qualifiedName</code> is \r\n+     *   malformed, if the <code>qualifiedName</code> has a prefix and the \r\n+     *   <code>namespaceURI</code> is <code>null</code>, if the \r\n+     *   <code>qualifiedName</code> has a prefix that is \"xml\" and the \r\n+     *   <code>namespaceURI</code> is different from \"\r\n+     *   http://www.w3.org/XML/1998/namespace\", or if the \r\n+     *   <code>qualifiedName</code> is \"xmlns\" and the \r\n+     *   <code>namespaceURI</code> is different from \"\r\n+     *   http://www.w3.org/2000/xmlns/\".\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public void setAttributeNS(String namespaceURI, \r\n+                               String qualifiedName, \r\n+                               String value)\r\n+                               throws DOMException;\r\n+\r\n+    /**\r\n+     * Removes an attribute by local name and namespace URI. If the removed \r\n+     * attribute has a default value it is immediately replaced. The \r\n+     * replacing attribute has the same namespace URI and local name, as \r\n+     * well as the original prefix.\r\n+     * <br>HTML-only DOM implementations do not need to implement this method.\r\n+     * @param namespaceURIThe namespace URI of the attribute to remove.\r\n+     * @param localNameThe local name of the attribute to remove.\r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public void removeAttributeNS(String namespaceURI, \r\n+                                  String localName)\r\n+                                  throws DOMException;\r\n+\r\n+    /**\r\n+     * Retrieves an <code>Attr</code> node by local name and namespace URI. \r\n+     * HTML-only DOM implementations do not need to implement this method.\r\n+     * @param namespaceURIThe namespace URI of the attribute to retrieve.\r\n+     * @param localNameThe local name of the attribute to retrieve.\r\n+     * @return The <code>Attr</code> node with the specified attribute local \r\n+     *   name and namespace URI or <code>null</code> if there is no such \r\n+     *   attribute.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public Attr getAttributeNodeNS(String namespaceURI, \r\n+                                   String localName);\r\n+\r\n+    /**\r\n+     * Adds a new attribute. If an attribute with that local name and that \r\n+     * namespace URI is already present in the element, it is replaced by \r\n+     * the new one.\r\n+     * <br>HTML-only DOM implementations do not need to implement this method.\r\n+     * @param newAttrThe <code>Attr</code> node to add to the attribute list.\r\n+     * @return If the <code>newAttr</code> attribute replaces an existing \r\n+     *   attribute with the same local name and namespace URI, the replaced \r\n+     *   <code>Attr</code> node is returned, otherwise <code>null</code> is \r\n+     *   returned.\r\n+     * @exception DOMException\r\n+     *   WRONG_DOCUMENT_ERR: Raised if <code>newAttr</code> was created from a \r\n+     *   different document than the one that created the element.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     *   <br>INUSE_ATTRIBUTE_ERR: Raised if <code>newAttr</code> is already an \r\n+     *   attribute of another <code>Element</code> object. The DOM user must \r\n+     *   explicitly clone <code>Attr</code> nodes to re-use them in other \r\n+     *   elements.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public Attr setAttributeNodeNS(Attr newAttr)\r\n+                                   throws DOMException;\r\n+\r\n+    /**\r\n+     * Returns a <code>NodeList</code> of all the descendant \r\n+     * <code>Elements</code> with a given local name and namespace URI in \r\n+     * the order in which they are encountered in a preorder traversal of \r\n+     * this <code>Element</code> tree.\r\n+     * <br>HTML-only DOM implementations do not need to implement this method.\r\n+     * @param namespaceURIThe namespace URI of the elements to match on. The \r\n+     *   special value \"*\" matches all namespaces.\r\n+     * @param localNameThe local name of the elements to match on. The \r\n+     *   special value \"*\" matches all local names.\r\n+     * @return A new <code>NodeList</code> object containing all the matched \r\n+     *   <code>Elements</code>.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public NodeList getElementsByTagNameNS(String namespaceURI, \r\n+                                           String localName);\r\n+\r\n+    /**\r\n+     * Returns <code>true</code> when an attribute with a given name is \r\n+     * specified on this element or has a default value, <code>false</code> \r\n+     * otherwise.\r\n+     * @param nameThe name of the attribute to look for.\r\n+     * @return <code>true</code> if an attribute with the given name is \r\n+     *   specified on this element or has a default value, <code>false</code>\r\n+     *    otherwise.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public boolean hasAttribute(String name);\r\n+\r\n+    /**\r\n+     * Returns <code>true</code> when an attribute with a given local name and \r\n+     * namespace URI is specified on this element or has a default value, \r\n+     * <code>false</code> otherwise. HTML-only DOM implementations do not \r\n+     * need to implement this method.\r\n+     * @param namespaceURIThe namespace URI of the attribute to look for.\r\n+     * @param localNameThe local name of the attribute to look for.\r\n+     * @return <code>true</code> if an attribute with the given local name \r\n+     *   and namespace URI is specified or has a default value on this \r\n+     *   element, <code>false</code> otherwise.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public boolean hasAttributeNS(String namespaceURI, \r\n+                                  String localName);\r\n+\r\n+}\r"}, {"sha": "51a69cb0001bb9af4700498a0b4b6ca5da1dbefb", "filename": "libjava/org/w3c/dom/Entity.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FEntity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FEntity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FEntity.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,68 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * This interface represents an entity, either parsed or unparsed, in an XML \r\n+ * document. Note that this models the entity itself not the entity \r\n+ * declaration. <code>Entity</code> declaration modeling has been left for a \r\n+ * later Level of the DOM specification.\r\n+ * <p>The <code>nodeName</code> attribute that is inherited from \r\n+ * <code>Node</code> contains the name of the entity.\r\n+ * <p>An XML processor may choose to completely expand entities before the \r\n+ * structure model is passed to the DOM; in this case there will be no \r\n+ * <code>EntityReference</code> nodes in the document tree.\r\n+ * <p>XML does not mandate that a non-validating XML processor read and \r\n+ * process entity declarations made in the external subset or declared in \r\n+ * external parameter entities. This means that parsed entities declared in \r\n+ * the external subset need not be expanded by some classes of applications, \r\n+ * and that the replacement value of the entity may not be available. When \r\n+ * the replacement value is available, the corresponding <code>Entity</code> \r\n+ * node's child list represents the structure of that replacement text. \r\n+ * Otherwise, the child list is empty.\r\n+ * <p>The DOM Level 2 does not support editing <code>Entity</code> nodes; if a \r\n+ * user wants to make changes to the contents of an <code>Entity</code>, \r\n+ * every related <code>EntityReference</code> node has to be replaced in the \r\n+ * structure model by a clone of the <code>Entity</code>'s contents, and \r\n+ * then the desired changes must be made to each of those clones instead. \r\n+ * <code>Entity</code> nodes and all their descendants are readonly.\r\n+ * <p>An <code>Entity</code> node does not have any parent.If the entity \r\n+ * contains an unbound namespace prefix, the <code>namespaceURI</code> of \r\n+ * the corresponding node in the <code>Entity</code> node subtree is \r\n+ * <code>null</code>. The same is true for <code>EntityReference</code> \r\n+ * nodes that refer to this entity, when they are created using the \r\n+ * <code>createEntityReference</code> method of the <code>Document</code> \r\n+ * interface. The DOM Level 2 does not support any mechanism to resolve \r\n+ * namespace prefixes.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface Entity extends Node {\r\n+    /**\r\n+     * The public identifier associated with the entity, if specified. If the \r\n+     * public identifier was not specified, this is <code>null</code>.\r\n+     */\r\n+    public String getPublicId();\r\n+\r\n+    /**\r\n+     * The system identifier associated with the entity, if specified. If the \r\n+     * system identifier was not specified, this is <code>null</code>.\r\n+     */\r\n+    public String getSystemId();\r\n+\r\n+    /**\r\n+     * For unparsed entities, the name of the notation for the entity. For \r\n+     * parsed entities, this is <code>null</code>. \r\n+     */\r\n+    public String getNotationName();\r\n+\r\n+}\r"}, {"sha": "31c854d8c6e7a1c316e61038cb4b008e18e1a06b", "filename": "libjava/org/w3c/dom/EntityReference.java", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FEntityReference.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FEntityReference.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FEntityReference.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,39 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * <code>EntityReference</code> objects may be inserted into the structure \r\n+ * model when an entity reference is in the source document, or when the \r\n+ * user wishes to insert an entity reference. Note that character references \r\n+ * and references to predefined entities are considered to be expanded by \r\n+ * the HTML or XML processor so that characters are represented by their \r\n+ * Unicode equivalent rather than by an entity reference. Moreover, the XML \r\n+ * processor may completely expand references to entities while building the \r\n+ * structure model, instead of providing <code>EntityReference</code> \r\n+ * objects. If it does provide such objects, then for a given \r\n+ * <code>EntityReference</code> node, it may be that there is no \r\n+ * <code>Entity</code> node representing the referenced entity. If such an \r\n+ * <code>Entity</code> exists, then the subtree of the \r\n+ * <code>EntityReference</code> node is in general a copy of the \r\n+ * <code>Entity</code> node subtree. However, this may not be true when an \r\n+ * entity contains an unbound namespace prefix. In such a case, because the \r\n+ * namespace prefix resolution depends on where the entity reference is, the \r\n+ * descendants of the <code>EntityReference</code> node may be bound to \r\n+ * different namespace URIs.\r\n+ * <p>As for <code>Entity</code> nodes, <code>EntityReference</code> nodes and \r\n+ * all their descendants are readonly.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface EntityReference extends Node {\r\n+}\r"}, {"sha": "d57ba8d0e88483e479f18900fac96ab7b87b749e", "filename": "libjava/org/w3c/dom/NamedNodeMap.java", "status": "added", "additions": 156, "deletions": 0, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FNamedNodeMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FNamedNodeMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FNamedNodeMap.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,156 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * Objects implementing the <code>NamedNodeMap</code> interface are used to \r\n+ * represent collections of nodes that can be accessed by name. Note that \r\n+ * <code>NamedNodeMap</code> does not inherit from <code>NodeList</code>; \r\n+ * <code>NamedNodeMaps</code> are not maintained in any particular order. \r\n+ * Objects contained in an object implementing <code>NamedNodeMap</code> may \r\n+ * also be accessed by an ordinal index, but this is simply to allow \r\n+ * convenient enumeration of the contents of a <code>NamedNodeMap</code>, \r\n+ * and does not imply that the DOM specifies an order to these Nodes. \r\n+ * <p><code>NamedNodeMap</code> objects in the DOM are live.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface NamedNodeMap {\r\n+    /**\r\n+     * Retrieves a node specified by name.\r\n+     * @param nameThe <code>nodeName</code> of a node to retrieve.\r\n+     * @return A <code>Node</code> (of any type) with the specified \r\n+     *   <code>nodeName</code>, or <code>null</code> if it does not identify \r\n+     *   any node in this map.\r\n+     */\r\n+    public Node getNamedItem(String name);\r\n+\r\n+    /**\r\n+     * Adds a node using its <code>nodeName</code> attribute. If a node with \r\n+     * that name is already present in this map, it is replaced by the new \r\n+     * one.\r\n+     * <br>As the <code>nodeName</code> attribute is used to derive the name \r\n+     * which the node must be stored under, multiple nodes of certain types \r\n+     * (those that have a \"special\" string value) cannot be stored as the \r\n+     * names would clash. This is seen as preferable to allowing nodes to be \r\n+     * aliased.\r\n+     * @param argA node to store in this map. The node will later be \r\n+     *   accessible using the value of its <code>nodeName</code> attribute.\r\n+     * @return If the new <code>Node</code> replaces an existing node the \r\n+     *   replaced <code>Node</code> is returned, otherwise <code>null</code> \r\n+     *   is returned.\r\n+     * @exception DOMException\r\n+     *   WRONG_DOCUMENT_ERR: Raised if <code>arg</code> was created from a \r\n+     *   different document than the one that created this map.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this map is readonly.\r\n+     *   <br>INUSE_ATTRIBUTE_ERR: Raised if <code>arg</code> is an \r\n+     *   <code>Attr</code> that is already an attribute of another \r\n+     *   <code>Element</code> object. The DOM user must explicitly clone \r\n+     *   <code>Attr</code> nodes to re-use them in other elements.\r\n+     */\r\n+    public Node setNamedItem(Node arg)\r\n+                             throws DOMException;\r\n+\r\n+    /**\r\n+     * Removes a node specified by name. When this map contains the attributes \r\n+     * attached to an element, if the removed attribute is known to have a \r\n+     * default value, an attribute immediately appears containing the \r\n+     * default value as well as the corresponding namespace URI, local name, \r\n+     * and prefix when applicable.\r\n+     * @param nameThe <code>nodeName</code> of the node to remove.\r\n+     * @return The node removed from this map if a node with such a name \r\n+     *   exists.\r\n+     * @exception DOMException\r\n+     *   NOT_FOUND_ERR: Raised if there is no node named <code>name</code> in \r\n+     *   this map.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this map is readonly.\r\n+     */\r\n+    public Node removeNamedItem(String name)\r\n+                                throws DOMException;\r\n+\r\n+    /**\r\n+     * Returns the <code>index</code>th item in the map. If <code>index</code> \r\n+     * is greater than or equal to the number of nodes in this map, this \r\n+     * returns <code>null</code>.\r\n+     * @param indexIndex into this map.\r\n+     * @return The node at the <code>index</code>th position in the map, or \r\n+     *   <code>null</code> if that is not a valid index.\r\n+     */\r\n+    public Node item(int index);\r\n+\r\n+    /**\r\n+     * The number of nodes in this map. The range of valid child node indices \r\n+     * is <code>0</code> to <code>length-1</code> inclusive. \r\n+     */\r\n+    public int getLength();\r\n+\r\n+    /**\r\n+     * Retrieves a node specified by local name and namespace URI. HTML-only \r\n+     * DOM implementations do not need to implement this method.\r\n+     * @param namespaceURIThe namespace URI of the node to retrieve.\r\n+     * @param localNameThe local name of the node to retrieve.\r\n+     * @return A <code>Node</code> (of any type) with the specified local \r\n+     *   name and namespace URI, or <code>null</code> if they do not \r\n+     *   identify any node in this map.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public Node getNamedItemNS(String namespaceURI, \r\n+                               String localName);\r\n+\r\n+    /**\r\n+     * Adds a node using its <code>namespaceURI</code> and \r\n+     * <code>localName</code>. If a node with that namespace URI and that \r\n+     * local name is already present in this map, it is replaced by the new \r\n+     * one.\r\n+     * <br>HTML-only DOM implementations do not need to implement this method.\r\n+     * @param argA node to store in this map. The node will later be \r\n+     *   accessible using the value of its <code>namespaceURI</code> and \r\n+     *   <code>localName</code> attributes.\r\n+     * @return If the new <code>Node</code> replaces an existing node the \r\n+     *   replaced <code>Node</code> is returned, otherwise <code>null</code> \r\n+     *   is returned.\r\n+     * @exception DOMException\r\n+     *   WRONG_DOCUMENT_ERR: Raised if <code>arg</code> was created from a \r\n+     *   different document than the one that created this map.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this map is readonly.\r\n+     *   <br>INUSE_ATTRIBUTE_ERR: Raised if <code>arg</code> is an \r\n+     *   <code>Attr</code> that is already an attribute of another \r\n+     *   <code>Element</code> object. The DOM user must explicitly clone \r\n+     *   <code>Attr</code> nodes to re-use them in other elements.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public Node setNamedItemNS(Node arg)\r\n+                               throws DOMException;\r\n+\r\n+    /**\r\n+     * Removes a node specified by local name and namespace URI. A removed \r\n+     * attribute may be known to have a default value when this map contains \r\n+     * the attributes attached to an element, as returned by the attributes \r\n+     * attribute of the <code>Node</code> interface. If so, an attribute \r\n+     * immediately appears containing the default value as well as the \r\n+     * corresponding namespace URI, local name, and prefix when applicable.\r\n+     * <br>HTML-only DOM implementations do not need to implement this method.\r\n+     * @param namespaceURIThe namespace URI of the node to remove.\r\n+     * @param localNameThe local name of the node to remove.\r\n+     * @return The node removed from this map if a node with such a local \r\n+     *   name and namespace URI exists.\r\n+     * @exception DOMException\r\n+     *   NOT_FOUND_ERR: Raised if there is no node with the specified \r\n+     *   <code>namespaceURI</code> and <code>localName</code> in this map.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this map is readonly.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public Node removeNamedItemNS(String namespaceURI, \r\n+                                  String localName)\r\n+                                  throws DOMException;\r\n+\r\n+}\r"}, {"sha": "ef650a276052bbc9ad1c9f23bb06919100be69ce", "filename": "libjava/org/w3c/dom/Node.java", "status": "added", "additions": 390, "deletions": 0, "changes": 390, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FNode.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,390 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * The <code>Node</code> interface is the primary datatype for the entire \r\n+ * Document Object Model. It represents a single node in the document tree. \r\n+ * While all objects implementing the <code>Node</code> interface expose \r\n+ * methods for dealing with children, not all objects implementing the \r\n+ * <code>Node</code> interface may have children. For example, \r\n+ * <code>Text</code> nodes may not have children, and adding children to \r\n+ * such nodes results in a <code>DOMException</code> being raised.\r\n+ * <p>The attributes <code>nodeName</code>, <code>nodeValue</code> and \r\n+ * <code>attributes</code> are included as a mechanism to get at node \r\n+ * information without casting down to the specific derived interface. In \r\n+ * cases where there is no obvious mapping of these attributes for a \r\n+ * specific <code>nodeType</code> (e.g., <code>nodeValue</code> for an \r\n+ * <code>Element</code> or <code>attributes</code> for a <code>Comment</code>\r\n+ * ), this returns <code>null</code>. Note that the specialized interfaces \r\n+ * may contain additional and more convenient mechanisms to get and set the \r\n+ * relevant information.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface Node {\r\n+    // NodeType\r\n+    /**\r\n+     * The node is an <code>Element</code>.\r\n+     */\r\n+    public static final short ELEMENT_NODE              = 1;\r\n+    /**\r\n+     * The node is an <code>Attr</code>.\r\n+     */\r\n+    public static final short ATTRIBUTE_NODE            = 2;\r\n+    /**\r\n+     * The node is a <code>Text</code> node.\r\n+     */\r\n+    public static final short TEXT_NODE                 = 3;\r\n+    /**\r\n+     * The node is a <code>CDATASection</code>.\r\n+     */\r\n+    public static final short CDATA_SECTION_NODE        = 4;\r\n+    /**\r\n+     * The node is an <code>EntityReference</code>.\r\n+     */\r\n+    public static final short ENTITY_REFERENCE_NODE     = 5;\r\n+    /**\r\n+     * The node is an <code>Entity</code>.\r\n+     */\r\n+    public static final short ENTITY_NODE               = 6;\r\n+    /**\r\n+     * The node is a <code>ProcessingInstruction</code>.\r\n+     */\r\n+    public static final short PROCESSING_INSTRUCTION_NODE = 7;\r\n+    /**\r\n+     * The node is a <code>Comment</code>.\r\n+     */\r\n+    public static final short COMMENT_NODE              = 8;\r\n+    /**\r\n+     * The node is a <code>Document</code>.\r\n+     */\r\n+    public static final short DOCUMENT_NODE             = 9;\r\n+    /**\r\n+     * The node is a <code>DocumentType</code>.\r\n+     */\r\n+    public static final short DOCUMENT_TYPE_NODE        = 10;\r\n+    /**\r\n+     * The node is a <code>DocumentFragment</code>.\r\n+     */\r\n+    public static final short DOCUMENT_FRAGMENT_NODE    = 11;\r\n+    /**\r\n+     * The node is a <code>Notation</code>.\r\n+     */\r\n+    public static final short NOTATION_NODE             = 12;\r\n+\r\n+    /**\r\n+     * The name of this node, depending on its type; see the table above. \r\n+     */\r\n+    public String getNodeName();\r\n+\r\n+    /**\r\n+     * The value of this node, depending on its type; see the table above. \r\n+     * When it is defined to be <code>null</code>, setting it has no effect.\r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.\r\n+     * @exception DOMException\r\n+     *   DOMSTRING_SIZE_ERR: Raised when it would return more characters than \r\n+     *   fit in a <code>DOMString</code> variable on the implementation \r\n+     *   platform.\r\n+     */\r\n+    public String getNodeValue()\r\n+                                 throws DOMException;\r\n+    public void setNodeValue(String nodeValue)\r\n+                                 throws DOMException;\r\n+\r\n+    /**\r\n+     * A code representing the type of the underlying object, as defined above.\r\n+     */\r\n+    public short getNodeType();\r\n+\r\n+    /**\r\n+     * The parent of this node. All nodes, except <code>Attr</code>, \r\n+     * <code>Document</code>, <code>DocumentFragment</code>, \r\n+     * <code>Entity</code>, and <code>Notation</code> may have a parent. \r\n+     * However, if a node has just been created and not yet added to the \r\n+     * tree, or if it has been removed from the tree, this is \r\n+     * <code>null</code>.\r\n+     */\r\n+    public Node getParentNode();\r\n+\r\n+    /**\r\n+     * A <code>NodeList</code> that contains all children of this node. If \r\n+     * there are no children, this is a <code>NodeList</code> containing no \r\n+     * nodes.\r\n+     */\r\n+    public NodeList getChildNodes();\r\n+\r\n+    /**\r\n+     * The first child of this node. If there is no such node, this returns \r\n+     * <code>null</code>.\r\n+     */\r\n+    public Node getFirstChild();\r\n+\r\n+    /**\r\n+     * The last child of this node. If there is no such node, this returns \r\n+     * <code>null</code>.\r\n+     */\r\n+    public Node getLastChild();\r\n+\r\n+    /**\r\n+     * The node immediately preceding this node. If there is no such node, \r\n+     * this returns <code>null</code>.\r\n+     */\r\n+    public Node getPreviousSibling();\r\n+\r\n+    /**\r\n+     * The node immediately following this node. If there is no such node, \r\n+     * this returns <code>null</code>.\r\n+     */\r\n+    public Node getNextSibling();\r\n+\r\n+    /**\r\n+     * A <code>NamedNodeMap</code> containing the attributes of this node (if \r\n+     * it is an <code>Element</code>) or <code>null</code> otherwise. \r\n+     */\r\n+    public NamedNodeMap getAttributes();\r\n+\r\n+    /**\r\n+     * The <code>Document</code> object associated with this node. This is \r\n+     * also the <code>Document</code> object used to create new nodes. When \r\n+     * this node is a <code>Document</code> or a <code>DocumentType</code> \r\n+     * which is not used with any <code>Document</code> yet, this is \r\n+     * <code>null</code>.\r\n+     * @version DOM Level 2\r\n+     */\r\n+    public Document getOwnerDocument();\r\n+\r\n+    /**\r\n+     * Inserts the node <code>newChild</code> before the existing child node \r\n+     * <code>refChild</code>. If <code>refChild</code> is <code>null</code>, \r\n+     * insert <code>newChild</code> at the end of the list of children.\r\n+     * <br>If <code>newChild</code> is a <code>DocumentFragment</code> object, \r\n+     * all of its children are inserted, in the same order, before \r\n+     * <code>refChild</code>. If the <code>newChild</code> is already in the \r\n+     * tree, it is first removed.\r\n+     * @param newChildThe node to insert.\r\n+     * @param refChildThe reference node, i.e., the node before which the new \r\n+     *   node must be inserted.\r\n+     * @return The node being inserted.\r\n+     * @exception DOMException\r\n+     *   HIERARCHY_REQUEST_ERR: Raised if this node is of a type that does not \r\n+     *   allow children of the type of the <code>newChild</code> node, or if \r\n+     *   the node to insert is one of this node's ancestors.\r\n+     *   <br>WRONG_DOCUMENT_ERR: Raised if <code>newChild</code> was created \r\n+     *   from a different document than the one that created this node.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly or \r\n+     *   if the parent of the node being inserted is readonly.\r\n+     *   <br>NOT_FOUND_ERR: Raised if <code>refChild</code> is not a child of \r\n+     *   this node.\r\n+     */\r\n+    public Node insertBefore(Node newChild, \r\n+                             Node refChild)\r\n+                             throws DOMException;\r\n+\r\n+    /**\r\n+     * Replaces the child node <code>oldChild</code> with <code>newChild</code>\r\n+     *  in the list of children, and returns the <code>oldChild</code> node.\r\n+     * <br>If <code>newChild</code> is a <code>DocumentFragment</code> object, \r\n+     * <code>oldChild</code> is replaced by all of the \r\n+     * <code>DocumentFragment</code> children, which are inserted in the \r\n+     * same order. If the <code>newChild</code> is already in the tree, it \r\n+     * is first removed.\r\n+     * @param newChildThe new node to put in the child list.\r\n+     * @param oldChildThe node being replaced in the list.\r\n+     * @return The node replaced.\r\n+     * @exception DOMException\r\n+     *   HIERARCHY_REQUEST_ERR: Raised if this node is of a type that does not \r\n+     *   allow children of the type of the <code>newChild</code> node, or if \r\n+     *   the node to put in is one of this node's ancestors.\r\n+     *   <br>WRONG_DOCUMENT_ERR: Raised if <code>newChild</code> was created \r\n+     *   from a different document than the one that created this node.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node or the parent of \r\n+     *   the new node is readonly.\r\n+     *   <br>NOT_FOUND_ERR: Raised if <code>oldChild</code> is not a child of \r\n+     *   this node.\r\n+     */\r\n+    public Node replaceChild(Node newChild, \r\n+                             Node oldChild)\r\n+                             throws DOMException;\r\n+\r\n+    /**\r\n+     * Removes the child node indicated by <code>oldChild</code> from the list \r\n+     * of children, and returns it.\r\n+     * @param oldChildThe node being removed.\r\n+     * @return The node removed.\r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     *   <br>NOT_FOUND_ERR: Raised if <code>oldChild</code> is not a child of \r\n+     *   this node.\r\n+     */\r\n+    public Node removeChild(Node oldChild)\r\n+                            throws DOMException;\r\n+\r\n+    /**\r\n+     * Adds the node <code>newChild</code> to the end of the list of children \r\n+     * of this node. If the <code>newChild</code> is already in the tree, it \r\n+     * is first removed.\r\n+     * @param newChildThe node to add.If it is a <code>DocumentFragment</code>\r\n+     *    object, the entire contents of the document fragment are moved \r\n+     *   into the child list of this node\r\n+     * @return The node added.\r\n+     * @exception DOMException\r\n+     *   HIERARCHY_REQUEST_ERR: Raised if this node is of a type that does not \r\n+     *   allow children of the type of the <code>newChild</code> node, or if \r\n+     *   the node to append is one of this node's ancestors.\r\n+     *   <br>WRONG_DOCUMENT_ERR: Raised if <code>newChild</code> was created \r\n+     *   from a different document than the one that created this node.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     */\r\n+    public Node appendChild(Node newChild)\r\n+                            throws DOMException;\r\n+\r\n+    /**\r\n+     * Returns whether this node has any children.\r\n+     * @return  <code>true</code> if this node has any children, \r\n+     *   <code>false</code> otherwise.\r\n+     */\r\n+    public boolean hasChildNodes();\r\n+\r\n+    /**\r\n+     * Returns a duplicate of this node, i.e., serves as a generic copy \r\n+     * constructor for nodes. The duplicate node has no parent; (\r\n+     * <code>parentNode</code> is <code>null</code>.).\r\n+     * <br>Cloning an <code>Element</code> copies all attributes and their \r\n+     * values, including those generated by the XML processor to represent \r\n+     * defaulted attributes, but this method does not copy any text it \r\n+     * contains unless it is a deep clone, since the text is contained in a \r\n+     * child <code>Text</code> node. Cloning an <code>Attribute</code> \r\n+     * directly, as opposed to be cloned as part of an <code>Element</code> \r\n+     * cloning operation, returns a specified attribute (\r\n+     * <code>specified</code> is <code>true</code>). Cloning any other type \r\n+     * of node simply returns a copy of this node.\r\n+     * <br>Note that cloning an immutable subtree results in a mutable copy, \r\n+     * but the children of an <code>EntityReference</code> clone are readonly\r\n+     * . In addition, clones of unspecified <code>Attr</code> nodes are \r\n+     * specified. And, cloning <code>Document</code>, \r\n+     * <code>DocumentType</code>, <code>Entity</code>, and \r\n+     * <code>Notation</code> nodes is implementation dependent.\r\n+     * @param deepIf <code>true</code>, recursively clone the subtree under \r\n+     *   the specified node; if <code>false</code>, clone only the node \r\n+     *   itself (and its attributes, if it is an <code>Element</code>). \r\n+     * @return The duplicate node.\r\n+     */\r\n+    public Node cloneNode(boolean deep);\r\n+\r\n+    /**\r\n+     * Puts all <code>Text</code> nodes in the full depth of the sub-tree \r\n+     * underneath this <code>Node</code>, including attribute nodes, into a \r\n+     * \"normal\" form where only structure (e.g., elements, comments, \r\n+     * processing instructions, CDATA sections, and entity references) \r\n+     * separates <code>Text</code> nodes, i.e., there are neither adjacent \r\n+     * <code>Text</code> nodes nor empty <code>Text</code> nodes. This can \r\n+     * be used to ensure that the DOM view of a document is the same as if \r\n+     * it were saved and re-loaded, and is useful when operations (such as \r\n+     * XPointer  lookups) that depend on a particular document tree \r\n+     * structure are to be used.In cases where the document contains \r\n+     * <code>CDATASections</code>, the normalize operation alone may not be \r\n+     * sufficient, since XPointers do not differentiate between \r\n+     * <code>Text</code> nodes and <code>CDATASection</code> nodes.\r\n+     * @version DOM Level 2\r\n+     */\r\n+    public void normalize();\r\n+\r\n+    /**\r\n+     * Tests whether the DOM implementation implements a specific feature and \r\n+     * that feature is supported by this node.\r\n+     * @param featureThe name of the feature to test. This is the same name \r\n+     *   which can be passed to the method <code>hasFeature</code> on \r\n+     *   <code>DOMImplementation</code>.\r\n+     * @param versionThis is the version number of the feature to test. In \r\n+     *   Level 2, version 1, this is the string \"2.0\". If the version is not \r\n+     *   specified, supporting any version of the feature will cause the \r\n+     *   method to return <code>true</code>.\r\n+     * @return Returns <code>true</code> if the specified feature is \r\n+     *   supported on this node, <code>false</code> otherwise.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public boolean isSupported(String feature, \r\n+                               String version);\r\n+\r\n+    /**\r\n+     * The namespace URI of this node, or <code>null</code> if it is \r\n+     * unspecified.\r\n+     * <br>This is not a computed value that is the result of a namespace \r\n+     * lookup based on an examination of the namespace declarations in \r\n+     * scope. It is merely the namespace URI given at creation time.\r\n+     * <br>For nodes of any type other than <code>ELEMENT_NODE</code> and \r\n+     * <code>ATTRIBUTE_NODE</code> and nodes created with a DOM Level 1 \r\n+     * method, such as <code>createElement</code> from the \r\n+     * <code>Document</code> interface, this is always <code>null</code>.Per \r\n+     * the Namespaces in XML Specification  an attribute does not inherit \r\n+     * its namespace from the element it is attached to. If an attribute is \r\n+     * not explicitly given a namespace, it simply has no namespace.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public String getNamespaceURI();\r\n+\r\n+    /**\r\n+     * The namespace prefix of this node, or <code>null</code> if it is \r\n+     * unspecified.\r\n+     * <br>Note that setting this attribute, when permitted, changes the \r\n+     * <code>nodeName</code> attribute, which holds the qualified name, as \r\n+     * well as the <code>tagName</code> and <code>name</code> attributes of \r\n+     * the <code>Element</code> and <code>Attr</code> interfaces, when \r\n+     * applicable.\r\n+     * <br>Note also that changing the prefix of an attribute that is known to \r\n+     * have a default value, does not make a new attribute with the default \r\n+     * value and the original prefix appear, since the \r\n+     * <code>namespaceURI</code> and <code>localName</code> do not change.\r\n+     * <br>For nodes of any type other than <code>ELEMENT_NODE</code> and \r\n+     * <code>ATTRIBUTE_NODE</code> and nodes created with a DOM Level 1 \r\n+     * method, such as <code>createElement</code> from the \r\n+     * <code>Document</code> interface, this is always <code>null</code>.\r\n+     * @exception DOMException\r\n+     *   INVALID_CHARACTER_ERR: Raised if the specified prefix contains an \r\n+     *   illegal character.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     *   <br>NAMESPACE_ERR: Raised if the specified <code>prefix</code> is \r\n+     *   malformed, if the <code>namespaceURI</code> of this node is \r\n+     *   <code>null</code>, if the specified prefix is \"xml\" and the \r\n+     *   <code>namespaceURI</code> of this node is different from \"\r\n+     *   http://www.w3.org/XML/1998/namespace\", if this node is an attribute \r\n+     *   and the specified prefix is \"xmlns\" and the \r\n+     *   <code>namespaceURI</code> of this node is different from \"\r\n+     *   http://www.w3.org/2000/xmlns/\", or if this node is an attribute and \r\n+     *   the <code>qualifiedName</code> of this node is \"xmlns\" .\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public String getPrefix();\r\n+    public void setPrefix(String prefix)\r\n+                               throws DOMException;\r\n+\r\n+    /**\r\n+     * Returns the local part of the qualified name of this node.\r\n+     * <br>For nodes of any type other than <code>ELEMENT_NODE</code> and \r\n+     * <code>ATTRIBUTE_NODE</code> and nodes created with a DOM Level 1 \r\n+     * method, such as <code>createElement</code> from the \r\n+     * <code>Document</code> interface, this is always <code>null</code>.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public String getLocalName();\r\n+\r\n+    /**\r\n+     * Returns whether this node (if it is an element) has any attributes.\r\n+     * @return <code>true</code> if this node has any attributes, \r\n+     *   <code>false</code> otherwise.\r\n+     * @since DOM Level 2\r\n+     */\r\n+    public boolean hasAttributes();\r\n+\r\n+}\r"}, {"sha": "f4033f303d637af95d99b84c382d9924bc95bd51", "filename": "libjava/org/w3c/dom/NodeList.java", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FNodeList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FNodeList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FNodeList.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,41 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * The <code>NodeList</code> interface provides the abstraction of an ordered \r\n+ * collection of nodes, without defining or constraining how this collection \r\n+ * is implemented. <code>NodeList</code> objects in the DOM are live.\r\n+ * <p>The items in the <code>NodeList</code> are accessible via an integral \r\n+ * index, starting from 0.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface NodeList {\r\n+    /**\r\n+     * Returns the <code>index</code>th item in the collection. If \r\n+     * <code>index</code> is greater than or equal to the number of nodes in \r\n+     * the list, this returns <code>null</code>.\r\n+     * @param indexIndex into the collection.\r\n+     * @return The node at the <code>index</code>th position in the \r\n+     *   <code>NodeList</code>, or <code>null</code> if that is not a valid \r\n+     *   index.\r\n+     */\r\n+    public Node item(int index);\r\n+\r\n+    /**\r\n+     * The number of nodes in the list. The range of valid child node indices \r\n+     * is 0 to <code>length-1</code> inclusive. \r\n+     */\r\n+    public int getLength();\r\n+\r\n+}\r"}, {"sha": "284e01551a1dae5c20eb07aa40595cdfbb5a1b8d", "filename": "libjava/org/w3c/dom/Notation.java", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FNotation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FNotation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FNotation.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,40 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * This interface represents a notation declared in the DTD. A notation either \r\n+ * declares, by name, the format of an unparsed entity (see section 4.7 of \r\n+ * the XML 1.0 specification ), or is used for formal declaration of \r\n+ * processing instruction targets (see section 2.6 of the XML 1.0 \r\n+ * specification ). The <code>nodeName</code> attribute inherited from \r\n+ * <code>Node</code> is set to the declared name of the notation.\r\n+ * <p>The DOM Level 1 does not support editing <code>Notation</code> nodes; \r\n+ * they are therefore readonly.\r\n+ * <p>A <code>Notation</code> node does not have any parent.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface Notation extends Node {\r\n+    /**\r\n+     * The public identifier of this notation. If the public identifier was \r\n+     * not specified, this is <code>null</code>.\r\n+     */\r\n+    public String getPublicId();\r\n+\r\n+    /**\r\n+     * The system identifier of this notation. If the system identifier was \r\n+     * not specified, this is <code>null</code>.\r\n+     */\r\n+    public String getSystemId();\r\n+\r\n+}\r"}, {"sha": "e3cfd1b0d6eb9470d460688c672fe65a0446525b", "filename": "libjava/org/w3c/dom/ProcessingInstruction.java", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FProcessingInstruction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FProcessingInstruction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FProcessingInstruction.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,40 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * The <code>ProcessingInstruction</code> interface represents a \"processing \r\n+ * instruction\", used in XML as a way to keep processor-specific information \r\n+ * in the text of the document.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface ProcessingInstruction extends Node {\r\n+    /**\r\n+     * The target of this processing instruction. XML defines this as being \r\n+     * the first token following the markup that begins the processing \r\n+     * instruction.\r\n+     */\r\n+    public String getTarget();\r\n+\r\n+    /**\r\n+     * The content of this processing instruction. This is from the first non \r\n+     * white space character after the target to the character immediately \r\n+     * preceding the <code>?&gt;</code>.\r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.\r\n+     */\r\n+    public String getData();\r\n+    public void setData(String data)\r\n+                          throws DOMException;\r\n+\r\n+}\r"}, {"sha": "c7c9971e67eeaef0238c3b22dde3aa33a70c0548", "filename": "libjava/org/w3c/dom/Text.java", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FText.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2FText.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2FText.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,56 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom;\r\n+\r\n+/**\r\n+ * The <code>Text</code> interface inherits from <code>CharacterData</code> \r\n+ * and represents the textual content (termed character data in XML) of an \r\n+ * <code>Element</code> or <code>Attr</code>. If there is no markup inside \r\n+ * an element's content, the text is contained in a single object \r\n+ * implementing the <code>Text</code> interface that is the only child of \r\n+ * the element. If there is markup, it is parsed into the information items \r\n+ * (elements, comments, etc.) and <code>Text</code> nodes that form the list \r\n+ * of children of the element.\r\n+ * <p>When a document is first made available via the DOM, there is only one \r\n+ * <code>Text</code> node for each block of text. Users may create adjacent \r\n+ * <code>Text</code> nodes that represent the contents of a given element \r\n+ * without any intervening markup, but should be aware that there is no way \r\n+ * to represent the separations between these nodes in XML or HTML, so they \r\n+ * will not (in general) persist between DOM editing sessions. The \r\n+ * <code>normalize()</code> method on <code>Node</code> merges any such \r\n+ * adjacent <code>Text</code> objects into a single node for each block of \r\n+ * text.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'>Document Object Model (DOM) Level 2 Core Specification</a>.\r\n+ */\r\n+public interface Text extends CharacterData {\r\n+    /**\r\n+     * Breaks this node into two nodes at the specified <code>offset</code>, \r\n+     * keeping both in the tree as siblings. After being split, this node \r\n+     * will contain all the content up to the <code>offset</code> point. A \r\n+     * new node of the same type, which contains all the content at and \r\n+     * after the <code>offset</code> point, is returned. If the original \r\n+     * node had a parent node, the new node is inserted as the next sibling \r\n+     * of the original node. When the <code>offset</code> is equal to the \r\n+     * length of this node, the new node has no data.\r\n+     * @param offsetThe 16-bit unit offset at which to split, starting from \r\n+     *   <code>0</code>.\r\n+     * @return The new node, of the same type as this node.\r\n+     * @exception DOMException\r\n+     *   INDEX_SIZE_ERR: Raised if the specified offset is negative or greater \r\n+     *   than the number of 16-bit units in <code>data</code>.\r\n+     *   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.\r\n+     */\r\n+    public Text splitText(int offset)\r\n+                          throws DOMException;\r\n+\r\n+}\r"}, {"sha": "f9b764ff4a8cc05661d453088036f2ae38af353e", "filename": "libjava/org/w3c/dom/ranges/DocumentRange.java", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Franges%2FDocumentRange.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Franges%2FDocumentRange.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2Franges%2FDocumentRange.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,33 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom.ranges;\r\n+\r\n+/**\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.\r\n+ * @since DOM Level 2\r\n+ */\r\n+public interface DocumentRange {\r\n+    /**\r\n+     * This interface can be obtained from the object implementing the \r\n+     * <code>Document</code> interface using binding-specific casting \r\n+     * methods.\r\n+     * @return The initial state of the Range returned from this method is \r\n+     *   such that both of its boundary-points are positioned at the \r\n+     *   beginning of the corresponding Document, before any content. The \r\n+     *   Range returned can only be used to select content associated with \r\n+     *   this Document, or with DocumentFragments and Attrs for which this \r\n+     *   Document is the <code>ownerDocument</code>.\r\n+     */\r\n+    public Range createRange();\r\n+\r\n+}\r"}, {"sha": "f4c3608eb08bba2a4ad7938a54a785478d75c465", "filename": "libjava/org/w3c/dom/ranges/Range.java", "status": "added", "additions": 399, "deletions": 0, "changes": 399, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Franges%2FRange.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Franges%2FRange.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2Franges%2FRange.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,399 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom.ranges;\r\n+\r\n+import org.w3c.dom.Node;\r\n+import org.w3c.dom.DocumentFragment;\r\n+import org.w3c.dom.DOMException;\r\n+\r\n+/**\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.\r\n+ * @since DOM Level 2\r\n+ */\r\n+public interface Range {\r\n+    /**\r\n+     * Node within which the Range begins \r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public Node getStartContainer()\r\n+                       throws DOMException;\r\n+\r\n+    /**\r\n+     * Offset within the starting node of the Range. \r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public int getStartOffset()\r\n+                       throws DOMException;\r\n+\r\n+    /**\r\n+     * Node within which the Range ends \r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public Node getEndContainer()\r\n+                       throws DOMException;\r\n+\r\n+    /**\r\n+     * Offset within the ending node of the Range. \r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public int getEndOffset()\r\n+                       throws DOMException;\r\n+\r\n+    /**\r\n+     * TRUE if the Range is collapsed \r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public boolean getCollapsed()\r\n+                       throws DOMException;\r\n+\r\n+    /**\r\n+     * The deepest common ancestor container of the Range's two \r\n+     * boundary-points.\r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public Node getCommonAncestorContainer()\r\n+                       throws DOMException;\r\n+\r\n+    /**\r\n+     * Sets the attributes describing the start of the Range. \r\n+     * @param refNodeThe <code>refNode</code> value. This parameter must be \r\n+     *   different from <code>null</code>.\r\n+     * @param offsetThe <code>startOffset</code> value. \r\n+     * @exception RangeException\r\n+     *   INVALID_NODE_TYPE_ERR: Raised if <code>refNode</code> or an ancestor \r\n+     *   of <code>refNode</code> is an Entity, Notation, or DocumentType \r\n+     *   node.\r\n+     * @exception DOMException\r\n+     *   INDEX_SIZE_ERR: Raised if <code>offset</code> is negative or greater \r\n+     *   than the number of child units in <code>refNode</code>. Child units \r\n+     *   are 16-bit units if <code>refNode</code> is a type of CharacterData \r\n+     *   node (e.g., a Text or Comment node) or a ProcessingInstruction \r\n+     *   node. Child units are Nodes in all other cases.\r\n+     *   <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already \r\n+     *   been invoked on this object.\r\n+     */\r\n+    public void setStart(Node refNode, \r\n+                         int offset)\r\n+                         throws RangeException, DOMException;\r\n+\r\n+    /**\r\n+     * Sets the attributes describing the end of a Range.\r\n+     * @param refNodeThe <code>refNode</code> value. This parameter must be \r\n+     *   different from <code>null</code>.\r\n+     * @param offsetThe <code>endOffset</code> value. \r\n+     * @exception RangeException\r\n+     *   INVALID_NODE_TYPE_ERR: Raised if <code>refNode</code> or an ancestor \r\n+     *   of <code>refNode</code> is an Entity, Notation, or DocumentType \r\n+     *   node.\r\n+     * @exception DOMException\r\n+     *   INDEX_SIZE_ERR: Raised if <code>offset</code> is negative or greater \r\n+     *   than the number of child units in <code>refNode</code>. Child units \r\n+     *   are 16-bit units if <code>refNode</code> is a type of CharacterData \r\n+     *   node (e.g., a Text or Comment node) or a ProcessingInstruction \r\n+     *   node. Child units are Nodes in all other cases.\r\n+     *   <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already \r\n+     *   been invoked on this object.\r\n+     */\r\n+    public void setEnd(Node refNode, \r\n+                       int offset)\r\n+                       throws RangeException, DOMException;\r\n+\r\n+    /**\r\n+     * Sets the start position to be before a node\r\n+     * @param refNodeRange starts before <code>refNode</code> \r\n+     * @exception RangeException\r\n+     *   INVALID_NODE_TYPE_ERR: Raised if the root container of \r\n+     *   <code>refNode</code> is not an Attr, Document, or DocumentFragment \r\n+     *   node or if <code>refNode</code> is a Document, DocumentFragment, \r\n+     *   Attr, Entity, or Notation node.\r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public void setStartBefore(Node refNode)\r\n+                               throws RangeException, DOMException;\r\n+\r\n+    /**\r\n+     * Sets the start position to be after a node\r\n+     * @param refNodeRange starts after <code>refNode</code> \r\n+     * @exception RangeException\r\n+     *   INVALID_NODE_TYPE_ERR: Raised if the root container of \r\n+     *   <code>refNode</code> is not an Attr, Document, or DocumentFragment \r\n+     *   node or if <code>refNode</code> is a Document, DocumentFragment, \r\n+     *   Attr, Entity, or Notation node.\r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public void setStartAfter(Node refNode)\r\n+                              throws RangeException, DOMException;\r\n+\r\n+    /**\r\n+     * Sets the end position to be before a node. \r\n+     * @param refNodeRange ends before <code>refNode</code> \r\n+     * @exception RangeException\r\n+     *   INVALID_NODE_TYPE_ERR: Raised if the root container of \r\n+     *   <code>refNode</code> is not an Attr, Document, or DocumentFragment \r\n+     *   node or if <code>refNode</code> is a Document, DocumentFragment, \r\n+     *   Attr, Entity, or Notation node.\r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public void setEndBefore(Node refNode)\r\n+                             throws RangeException, DOMException;\r\n+\r\n+    /**\r\n+     * Sets the end of a Range to be after a node \r\n+     * @param refNodeRange ends after <code>refNode</code>. \r\n+     * @exception RangeException\r\n+     *   INVALID_NODE_TYPE_ERR: Raised if the root container of \r\n+     *   <code>refNode</code> is not an Attr, Document or DocumentFragment \r\n+     *   node or if <code>refNode</code> is a Document, DocumentFragment, \r\n+     *   Attr, Entity, or Notation node.\r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public void setEndAfter(Node refNode)\r\n+                            throws RangeException, DOMException;\r\n+\r\n+    /**\r\n+     * Collapse a Range onto one of its boundary-points \r\n+     * @param toStartIf TRUE, collapses the Range onto its start; if FALSE, \r\n+     *   collapses it onto its end. \r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public void collapse(boolean toStart)\r\n+                         throws DOMException;\r\n+\r\n+    /**\r\n+     * Select a node and its contents \r\n+     * @param refNodeThe node to select. \r\n+     * @exception RangeException\r\n+     *   INVALID_NODE_TYPE_ERR: Raised if an ancestor of <code>refNode</code> \r\n+     *   is an Entity, Notation or DocumentType node or if \r\n+     *   <code>refNode</code> is a Document, DocumentFragment, Attr, Entity, \r\n+     *   or Notation node.\r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public void selectNode(Node refNode)\r\n+                           throws RangeException, DOMException;\r\n+\r\n+    /**\r\n+     * Select the contents within a node \r\n+     * @param refNodeNode to select from \r\n+     * @exception RangeException\r\n+     *   INVALID_NODE_TYPE_ERR: Raised if <code>refNode</code> or an ancestor \r\n+     *   of <code>refNode</code> is an Entity, Notation or DocumentType node.\r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public void selectNodeContents(Node refNode)\r\n+                                   throws RangeException, DOMException;\r\n+\r\n+    // CompareHow\r\n+    /**\r\n+     * Compare start boundary-point of <code>sourceRange</code> to start \r\n+     * boundary-point of Range on which <code>compareBoundaryPoints</code> \r\n+     * is invoked.\r\n+     */\r\n+    public static final short START_TO_START            = 0;\r\n+    /**\r\n+     * Compare start boundary-point of <code>sourceRange</code> to end \r\n+     * boundary-point of Range on which <code>compareBoundaryPoints</code> \r\n+     * is invoked.\r\n+     */\r\n+    public static final short START_TO_END              = 1;\r\n+    /**\r\n+     * Compare end boundary-point of <code>sourceRange</code> to end \r\n+     * boundary-point of Range on which <code>compareBoundaryPoints</code> \r\n+     * is invoked.\r\n+     */\r\n+    public static final short END_TO_END                = 2;\r\n+    /**\r\n+     * Compare end boundary-point of <code>sourceRange</code> to start \r\n+     * boundary-point of Range on which <code>compareBoundaryPoints</code> \r\n+     * is invoked.\r\n+     */\r\n+    public static final short END_TO_START              = 3;\r\n+\r\n+    /**\r\n+     * Compare the boundary-points of two Ranges in a document.\r\n+     * @param howA code representing the type of comparison, as defined above.\r\n+     * @param sourceRangeThe <code>Range</code> on which this current \r\n+     *   <code>Range</code> is compared to.\r\n+     * @return  -1, 0 or 1 depending on whether the corresponding \r\n+     *   boundary-point of the Range is respectively before, equal to, or \r\n+     *   after the corresponding boundary-point of <code>sourceRange</code>. \r\n+     * @exception DOMException\r\n+     *   WRONG_DOCUMENT_ERR: Raised if the two Ranges are not in the same \r\n+     *   Document or DocumentFragment.\r\n+     *   <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already \r\n+     *   been invoked on this object.\r\n+     */\r\n+    public short compareBoundaryPoints(short how, \r\n+                                       Range sourceRange)\r\n+                                       throws DOMException;\r\n+\r\n+    /**\r\n+     * Removes the contents of a Range from the containing document or \r\n+     * document fragment without returning a reference to the removed \r\n+     * content.  \r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised if any portion of the content of \r\n+     *   the Range is read-only or any of the nodes that contain any of the \r\n+     *   content of the Range are read-only.\r\n+     *   <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already \r\n+     *   been invoked on this object.\r\n+     */\r\n+    public void deleteContents()\r\n+                               throws DOMException;\r\n+\r\n+    /**\r\n+     * Moves the contents of a Range from the containing document or document \r\n+     * fragment to a new DocumentFragment. \r\n+     * @return A DocumentFragment containing the extracted contents. \r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised if any portion of the content of \r\n+     *   the Range is read-only or any of the nodes which contain any of the \r\n+     *   content of the Range are read-only.\r\n+     *   <br>HIERARCHY_REQUEST_ERR: Raised if a DocumentType node would be \r\n+     *   extracted into the new DocumentFragment.\r\n+     *   <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already \r\n+     *   been invoked on this object.\r\n+     */\r\n+    public DocumentFragment extractContents()\r\n+                                            throws DOMException;\r\n+\r\n+    /**\r\n+     * Duplicates the contents of a Range \r\n+     * @return A DocumentFragment that contains content equivalent to this \r\n+     *   Range.\r\n+     * @exception DOMException\r\n+     *   HIERARCHY_REQUEST_ERR: Raised if a DocumentType node would be \r\n+     *   extracted into the new DocumentFragment.\r\n+     *   <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already \r\n+     *   been invoked on this object.\r\n+     */\r\n+    public DocumentFragment cloneContents()\r\n+                                          throws DOMException;\r\n+\r\n+    /**\r\n+     * Inserts a node into the Document or DocumentFragment at the start of \r\n+     * the Range. If the container is a Text node, this will be split at the \r\n+     * start of the Range (as if the Text node's splitText method was \r\n+     * performed at the insertion point) and the insertion will occur \r\n+     * between the two resulting Text nodes. Adjacent Text nodes will not be \r\n+     * automatically merged. If the node to be inserted is a \r\n+     * DocumentFragment node, the children will be inserted rather than the \r\n+     * DocumentFragment node itself.\r\n+     * @param newNodeThe node to insert at the start of the Range \r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of the \r\n+     *   start of the Range is read-only.\r\n+     *   <br>WRONG_DOCUMENT_ERR: Raised if <code>newNode</code> and the \r\n+     *   container of the start of the Range were not created from the same \r\n+     *   document.\r\n+     *   <br>HIERARCHY_REQUEST_ERR: Raised if the container of the start of \r\n+     *   the Range is of a type that does not allow children of the type of \r\n+     *   <code>newNode</code> or if <code>newNode</code> is an ancestor of \r\n+     *   the container.\r\n+     *   <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already \r\n+     *   been invoked on this object.\r\n+     * @exception RangeException\r\n+     *   INVALID_NODE_TYPE_ERR: Raised if <code>newNode</code> is an Attr, \r\n+     *   Entity, Notation, or Document node.\r\n+     */\r\n+    public void insertNode(Node newNode)\r\n+                           throws DOMException, RangeException;\r\n+\r\n+    /**\r\n+     * Reparents the contents of the Range to the given node and inserts the \r\n+     * node at the position of the start of the Range. \r\n+     * @param newParentThe node to surround the contents with. \r\n+     * @exception DOMException\r\n+     *   NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of \r\n+     *   either boundary-point of the Range is read-only.\r\n+     *   <br>WRONG_DOCUMENT_ERR: Raised if <code> newParent</code> and the \r\n+     *   container of the start of the Range were not created from the same \r\n+     *   document.\r\n+     *   <br>HIERARCHY_REQUEST_ERR: Raised if the container of the start of \r\n+     *   the Range is of a type that does not allow children of the type of \r\n+     *   <code>newParent</code> or if <code>newParent</code> is an ancestor \r\n+     *   of the container or if <code>node</code> would end up with a child \r\n+     *   node of a type not allowed by the type of <code>node</code>.\r\n+     *   <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already \r\n+     *   been invoked on this object.\r\n+     * @exception RangeException\r\n+     *   BAD_BOUNDARYPOINTS_ERR: Raised if the Range partially selects a \r\n+     *   non-text node.\r\n+     *   <br>INVALID_NODE_TYPE_ERR: Raised if <code> node</code> is an Attr, \r\n+     *   Entity, DocumentType, Notation, Document, or DocumentFragment node.\r\n+     */\r\n+    public void surroundContents(Node newParent)\r\n+                                 throws DOMException, RangeException;\r\n+\r\n+    /**\r\n+     * Produces a new Range whose boundary-points are equal to the \r\n+     * boundary-points of the Range. \r\n+     * @return The duplicated Range. \r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public Range cloneRange()\r\n+                            throws DOMException;\r\n+\r\n+    /**\r\n+     * Returns the contents of a Range as a string. This string contains only \r\n+     * the data characters, not any markup. \r\n+     * @return The contents of the Range.\r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public String toString()\r\n+                           throws DOMException;\r\n+\r\n+    /**\r\n+     * Called to indicate that the Range is no longer in use and that the \r\n+     * implementation may relinquish any resources associated with this \r\n+     * Range. Subsequent calls to any methods or attribute getters on this \r\n+     * Range will result in a <code>DOMException</code> being thrown with an \r\n+     * error code of <code>INVALID_STATE_ERR</code>.\r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if <code>detach()</code> has already been \r\n+     *   invoked on this object.\r\n+     */\r\n+    public void detach()\r\n+                       throws DOMException;\r\n+\r\n+}\r"}, {"sha": "abf9a9f09adc8adc9827e6021c54fb67e010a334", "filename": "libjava/org/w3c/dom/ranges/RangeException.java", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Franges%2FRangeException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Franges%2FRangeException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2Franges%2FRangeException.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,39 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom.ranges;\r\n+\r\n+/**\r\n+ * Range operations may throw a <code>RangeException</code> as specified in \r\n+ * their method descriptions.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.\r\n+ * @since DOM Level 2\r\n+ */\r\n+public class RangeException extends RuntimeException {\r\n+    public RangeException(short code, String message) {\r\n+       super(message);\r\n+       this.code = code;\r\n+    }\r\n+    public short   code;\r\n+    // RangeExceptionCode\r\n+    /**\r\n+     * If the boundary-points of a Range do not meet specific requirements.\r\n+     */\r\n+    public static final short BAD_BOUNDARYPOINTS_ERR    = 1;\r\n+    /**\r\n+     * If the container of an boundary-point of a Range is being set to either \r\n+     * a node of an invalid type or a node with an ancestor of an invalid \r\n+     * type.\r\n+     */\r\n+    public static final short INVALID_NODE_TYPE_ERR     = 2;\r\n+\r\n+}\r"}, {"sha": "88e7a92d2be5a6b43759c5e342a9cd01a9bd862d", "filename": "libjava/org/w3c/dom/traversal/DocumentTraversal.java", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Ftraversal%2FDocumentTraversal.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Ftraversal%2FDocumentTraversal.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2Ftraversal%2FDocumentTraversal.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,90 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom.traversal;\r\n+\r\n+import org.w3c.dom.Node;\r\n+import org.w3c.dom.DOMException;\r\n+\r\n+/**\r\n+ * <code>DocumentTraversal</code> contains methods that create iterators and \r\n+ * tree-walkers to traverse a node and its children in document order (depth \r\n+ * first, pre-order traversal, which is equivalent to the order in which the \r\n+ * start tags occur in the text representation of the document). In DOMs \r\n+ * which support the Traversal feature, <code>DocumentTraversal</code> will \r\n+ * be implemented by the same objects that implement the Document interface.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.\r\n+ * @since DOM Level 2\r\n+ */\r\n+public interface DocumentTraversal {\r\n+    /**\r\n+     * Create a new <code>NodeIterator</code> over the subtree rooted at the \r\n+     * specified node.\r\n+     * @param rootThe node which will be iterated together with its children. \r\n+     *   The iterator is initially positioned just before this node. The \r\n+     *   <code>whatToShow</code> flags and the filter, if any, are not \r\n+     *   considered when setting this position. The root must not be \r\n+     *   <code>null</code>.\r\n+     * @param whatToShowThis flag specifies which node types may appear in \r\n+     *   the logical view of the tree presented by the iterator. See the \r\n+     *   description of <code>NodeFilter</code> for the set of possible \r\n+     *   <code>SHOW_</code> values.These flags can be combined using \r\n+     *   <code>OR</code>.\r\n+     * @param filterThe <code>NodeFilter</code> to be used with this \r\n+     *   <code>TreeWalker</code>, or <code>null</code> to indicate no filter.\r\n+     * @param entityReferenceExpansionThe value of this flag determines \r\n+     *   whether entity reference nodes are expanded.\r\n+     * @return The newly created <code>NodeIterator</code>.\r\n+     * @exception DOMException\r\n+     *   NOT_SUPPORTED_ERR: Raised if the specified <code>root</code> is \r\n+     *   <code>null</code>.\r\n+     */\r\n+    public NodeIterator createNodeIterator(Node root, \r\n+                                           int whatToShow, \r\n+                                           NodeFilter filter, \r\n+                                           boolean entityReferenceExpansion)\r\n+                                           throws DOMException;\r\n+\r\n+    /**\r\n+     * Create a new <code>TreeWalker</code> over the subtree rooted at the \r\n+     * specified node.\r\n+     * @param rootThe node which will serve as the <code>root</code> for the \r\n+     *   <code>TreeWalker</code>. The <code>whatToShow</code> flags and the \r\n+     *   <code>NodeFilter</code> are not considered when setting this value; \r\n+     *   any node type will be accepted as the <code>root</code>. The \r\n+     *   <code>currentNode</code> of the <code>TreeWalker</code> is \r\n+     *   initialized to this node, whether or not it is visible. The \r\n+     *   <code>root</code> functions as a stopping point for traversal \r\n+     *   methods that look upward in the document structure, such as \r\n+     *   <code>parentNode</code> and nextNode. The <code>root</code> must \r\n+     *   not be <code>null</code>.\r\n+     * @param whatToShowThis flag specifies which node types may appear in \r\n+     *   the logical view of the tree presented by the tree-walker. See the \r\n+     *   description of <code>NodeFilter</code> for the set of possible \r\n+     *   SHOW_ values.These flags can be combined using <code>OR</code>.\r\n+     * @param filterThe <code>NodeFilter</code> to be used with this \r\n+     *   <code>TreeWalker</code>, or <code>null</code> to indicate no filter.\r\n+     * @param entityReferenceExpansionIf this flag is false, the contents of \r\n+     *   <code>EntityReference</code> nodes are not presented in the logical \r\n+     *   view.\r\n+     * @return The newly created <code>TreeWalker</code>.\r\n+     * @exception DOMException\r\n+     *    NOT_SUPPORTED_ERR: Raised if the specified <code>root</code> is \r\n+     *   <code>null</code>.\r\n+     */\r\n+    public TreeWalker createTreeWalker(Node root, \r\n+                                       int whatToShow, \r\n+                                       NodeFilter filter, \r\n+                                       boolean entityReferenceExpansion)\r\n+                                       throws DOMException;\r\n+\r\n+}\r"}, {"sha": "8901059ee14bb4a427c4b804b3f77395198a7688", "filename": "libjava/org/w3c/dom/traversal/NodeFilter.java", "status": "added", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Ftraversal%2FNodeFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Ftraversal%2FNodeFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2Ftraversal%2FNodeFilter.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,142 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom.traversal;\r\n+\r\n+import org.w3c.dom.Node;\r\n+\r\n+/**\r\n+ * Filters are objects that know how to \"filter out\" nodes. If a \r\n+ * <code>NodeIterator</code> or <code>TreeWalker</code> is given a \r\n+ * <code>NodeFilter</code>, it applies the filter before it returns the next \r\n+ * node. If the filter says to accept the node, the traversal logic returns \r\n+ * it; otherwise, traversal looks for the next node and pretends that the \r\n+ * node that was rejected was not there.\r\n+ * <p>The DOM does not provide any filters. <code>NodeFilter</code> is just an \r\n+ * interface that users can implement to provide their own filters. \r\n+ * <p><code>NodeFilters</code> do not need to know how to traverse from node \r\n+ * to node, nor do they need to know anything about the data structure that \r\n+ * is being traversed. This makes it very easy to write filters, since the \r\n+ * only thing they have to know how to do is evaluate a single node. One \r\n+ * filter may be used with a number of different kinds of traversals, \r\n+ * encouraging code reuse.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.\r\n+ * @since DOM Level 2\r\n+ */\r\n+public interface NodeFilter {\r\n+    // Constants returned by acceptNode\r\n+    /**\r\n+     * Accept the node. Navigation methods defined for \r\n+     * <code>NodeIterator</code> or <code>TreeWalker</code> will return this \r\n+     * node.\r\n+     */\r\n+    public static final short FILTER_ACCEPT             = 1;\r\n+    /**\r\n+     * Reject the node. Navigation methods defined for \r\n+     * <code>NodeIterator</code> or <code>TreeWalker</code> will not return \r\n+     * this node. For <code>TreeWalker</code>, the children of this node \r\n+     * will also be rejected. <code>NodeIterators</code> treat this as a \r\n+     * synonym for <code>FILTER_SKIP</code>.\r\n+     */\r\n+    public static final short FILTER_REJECT             = 2;\r\n+    /**\r\n+     * Skip this single node. Navigation methods defined for \r\n+     * <code>NodeIterator</code> or <code>TreeWalker</code> will not return \r\n+     * this node. For both <code>NodeIterator</code> and \r\n+     * <code>TreeWalker</code>, the children of this node will still be \r\n+     * considered. \r\n+     */\r\n+    public static final short FILTER_SKIP               = 3;\r\n+\r\n+    // Constants for whatToShow\r\n+    /**\r\n+     * Show all <code>Nodes</code>.\r\n+     */\r\n+    public static final int SHOW_ALL                  = 0xFFFFFFFF;\r\n+    /**\r\n+     * Show <code>Element</code> nodes.\r\n+     */\r\n+    public static final int SHOW_ELEMENT              = 0x00000001;\r\n+    /**\r\n+     * Show <code>Attr</code> nodes. This is meaningful only when creating an \r\n+     * iterator or tree-walker with an attribute node as its \r\n+     * <code>root</code>; in this case, it means that the attribute node \r\n+     * will appear in the first position of the iteration or traversal. \r\n+     * Since attributes are never children of other nodes, they do not \r\n+     * appear when traversing over the document tree.\r\n+     */\r\n+    public static final int SHOW_ATTRIBUTE            = 0x00000002;\r\n+    /**\r\n+     * Show <code>Text</code> nodes.\r\n+     */\r\n+    public static final int SHOW_TEXT                 = 0x00000004;\r\n+    /**\r\n+     * Show <code>CDATASection</code> nodes.\r\n+     */\r\n+    public static final int SHOW_CDATA_SECTION        = 0x00000008;\r\n+    /**\r\n+     * Show <code>EntityReference</code> nodes.\r\n+     */\r\n+    public static final int SHOW_ENTITY_REFERENCE     = 0x00000010;\r\n+    /**\r\n+     * Show <code>Entity</code> nodes. This is meaningful only when creating \r\n+     * an iterator or tree-walker with an<code> Entity</code> node as its \r\n+     * <code>root</code>; in this case, it means that the <code>Entity</code>\r\n+     *  node will appear in the first position of the traversal. Since \r\n+     * entities are not part of the document tree, they do not appear when \r\n+     * traversing over the document tree.\r\n+     */\r\n+    public static final int SHOW_ENTITY               = 0x00000020;\r\n+    /**\r\n+     * Show <code>ProcessingInstruction</code> nodes.\r\n+     */\r\n+    public static final int SHOW_PROCESSING_INSTRUCTION = 0x00000040;\r\n+    /**\r\n+     * Show <code>Comment</code> nodes.\r\n+     */\r\n+    public static final int SHOW_COMMENT              = 0x00000080;\r\n+    /**\r\n+     * Show <code>Document</code> nodes.\r\n+     */\r\n+    public static final int SHOW_DOCUMENT             = 0x00000100;\r\n+    /**\r\n+     * Show <code>DocumentType</code> nodes.\r\n+     */\r\n+    public static final int SHOW_DOCUMENT_TYPE        = 0x00000200;\r\n+    /**\r\n+     * Show <code>DocumentFragment</code> nodes.\r\n+     */\r\n+    public static final int SHOW_DOCUMENT_FRAGMENT    = 0x00000400;\r\n+    /**\r\n+     * Show <code>Notation</code> nodes. This is meaningful only when creating \r\n+     * an iterator or tree-walker with a <code>Notation</code> node as its \r\n+     * <code>root</code>; in this case, it means that the \r\n+     * <code>Notation</code> node will appear in the first position of the \r\n+     * traversal. Since notations are not part of the document tree, they do \r\n+     * not appear when traversing over the document tree.\r\n+     */\r\n+    public static final int SHOW_NOTATION             = 0x00000800;\r\n+\r\n+    /**\r\n+     * Test whether a specified node is visible in the logical view of a \r\n+     * <code>TreeWalker</code> or <code>NodeIterator</code>. This function \r\n+     * will be called by the implementation of <code>TreeWalker</code> and \r\n+     * <code>NodeIterator</code>; it is not normally called directly from \r\n+     * user code. (Though you could do so if you wanted to use the same \r\n+     * filter to guide your own application logic.)\r\n+     * @param nThe node to check to see if it passes the filter or not.\r\n+     * @return a constant to determine whether the node is accepted, \r\n+     *   rejected, or skipped, as defined above.\r\n+     */\r\n+    public short acceptNode(Node n);\r\n+\r\n+}\r"}, {"sha": "3563e80a8ddfd5256fc566c1721d1120bf409d22", "filename": "libjava/org/w3c/dom/traversal/NodeIterator.java", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Ftraversal%2FNodeIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Ftraversal%2FNodeIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2Ftraversal%2FNodeIterator.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,108 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom.traversal;\r\n+\r\n+import org.w3c.dom.Node;\r\n+import org.w3c.dom.DOMException;\r\n+\r\n+/**\r\n+ * <code>Iterators</code> are used to step through a set of nodes, e.g. the \r\n+ * set of nodes in a <code>NodeList</code>, the document subtree governed by \r\n+ * a particular <code>Node</code>, the results of a query, or any other set \r\n+ * of nodes. The set of nodes to be iterated is determined by the \r\n+ * implementation of the <code>NodeIterator</code>. DOM Level 2 specifies a \r\n+ * single <code>NodeIterator</code> implementation for document-order \r\n+ * traversal of a document subtree. Instances of these iterators are created \r\n+ * by calling <code>DocumentTraversal</code>\r\n+ * <code>.createNodeIterator()</code>.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.\r\n+ * @since DOM Level 2\r\n+ */\r\n+public interface NodeIterator {\r\n+    /**\r\n+     * The root node of the <code>NodeIterator</code>, as specified when it \r\n+     * was created.\r\n+     */\r\n+    public Node getRoot();\r\n+\r\n+    /**\r\n+     * This attribute determines which node types are presented via the \r\n+     * iterator. The available set of constants is defined in the \r\n+     * <code>NodeFilter</code> interface.  Nodes not accepted by \r\n+     * <code>whatToShow</code> will be skipped, but their children may still \r\n+     * be considered. Note that this skip takes precedence over the filter, \r\n+     * if any. \r\n+     */\r\n+    public int getWhatToShow();\r\n+\r\n+    /**\r\n+     * The <code>NodeFilter</code> used to screen nodes.\r\n+     */\r\n+    public NodeFilter getFilter();\r\n+\r\n+    /**\r\n+     *  The value of this flag determines whether the children of entity \r\n+     * reference nodes are visible to the iterator. If false, they  and \r\n+     * their descendants will be rejected. Note that this rejection takes \r\n+     * precedence over <code>whatToShow</code> and the filter. Also note \r\n+     * that this is currently the only situation where \r\n+     * <code>NodeIterators</code> may reject a complete subtree rather than \r\n+     * skipping individual nodes. \r\n+     * <br>\r\n+     * <br> To produce a view of the document that has entity references \r\n+     * expanded and does not expose the entity reference node itself, use \r\n+     * the <code>whatToShow</code> flags to hide the entity reference node \r\n+     * and set <code>expandEntityReferences</code> to true when creating the \r\n+     * iterator. To produce a view of the document that has entity reference \r\n+     * nodes but no entity expansion, use the <code>whatToShow</code> flags \r\n+     * to show the entity reference node and set \r\n+     * <code>expandEntityReferences</code> to false.\r\n+     */\r\n+    public boolean getExpandEntityReferences();\r\n+\r\n+    /**\r\n+     * Returns the next node in the set and advances the position of the \r\n+     * iterator in the set. After a <code>NodeIterator</code> is created, \r\n+     * the first call to <code>nextNode()</code> returns the first node in \r\n+     * the set.\r\n+     * @return The next <code>Node</code> in the set being iterated over, or \r\n+     *   <code>null</code> if there are no more members in that set.\r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if this method is called after the \r\n+     *   <code>detach</code> method was invoked.\r\n+     */\r\n+    public Node nextNode()\r\n+                         throws DOMException;\r\n+\r\n+    /**\r\n+     * Returns the previous node in the set and moves the position of the \r\n+     * <code>NodeIterator</code> backwards in the set.\r\n+     * @return The previous <code>Node</code> in the set being iterated over, \r\n+     *   or <code>null</code> if there are no more members in that set. \r\n+     * @exception DOMException\r\n+     *   INVALID_STATE_ERR: Raised if this method is called after the \r\n+     *   <code>detach</code> method was invoked.\r\n+     */\r\n+    public Node previousNode()\r\n+                             throws DOMException;\r\n+\r\n+    /**\r\n+     * Detaches the <code>NodeIterator</code> from the set which it iterated \r\n+     * over, releasing any computational resources and placing the iterator \r\n+     * in the INVALID state. After <code>detach</code> has been invoked, \r\n+     * calls to <code>nextNode</code> or <code>previousNode</code> will \r\n+     * raise the exception INVALID_STATE_ERR.\r\n+     */\r\n+    public void detach();\r\n+\r\n+}\r"}, {"sha": "ed0292980a2bb90d19a9b6f976fb0509095295d0", "filename": "libjava/org/w3c/dom/traversal/TreeWalker.java", "status": "added", "additions": 167, "deletions": 0, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Ftraversal%2FTreeWalker.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fw3c%2Fdom%2Ftraversal%2FTreeWalker.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fw3c%2Fdom%2Ftraversal%2FTreeWalker.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,167 @@\n+/*\r\n+ * Copyright (c) 2000 World Wide Web Consortium,\r\n+ * (Massachusetts Institute of Technology, Institut National de\r\n+ * Recherche en Informatique et en Automatique, Keio University). All\r\n+ * Rights Reserved. This program is distributed under the W3C's Software\r\n+ * Intellectual Property License. This program is distributed in the\r\n+ * hope that it will be useful, but WITHOUT ANY WARRANTY; without even\r\n+ * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n+ * PURPOSE.\r\n+ * See W3C License http://www.w3.org/Consortium/Legal/ for more details.\r\n+ */\r\n+\r\n+package org.w3c.dom.traversal;\r\n+\r\n+import org.w3c.dom.Node;\r\n+import org.w3c.dom.DOMException;\r\n+\r\n+/**\r\n+ * <code>TreeWalker</code> objects are used to navigate a document tree or \r\n+ * subtree using the view of the document defined by their \r\n+ * <code>whatToShow</code> flags and filter (if any). Any function which \r\n+ * performs navigation using a <code>TreeWalker</code> will automatically \r\n+ * support any view defined by a <code>TreeWalker</code>.\r\n+ * <p>Omitting nodes from the logical view of a subtree can result in a \r\n+ * structure that is substantially different from the same subtree in the \r\n+ * complete, unfiltered document. Nodes that are siblings in the \r\n+ * <code>TreeWalker</code> view may be children of different, widely \r\n+ * separated nodes in the original view. For instance, consider a \r\n+ * <code>NodeFilter</code> that skips all nodes except for Text nodes and \r\n+ * the root node of a document. In the logical view that results, all text \r\n+ * nodes will be siblings and appear as direct children of the root node, no \r\n+ * matter how deeply nested the structure of the original document.\r\n+ * <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.\r\n+ * @since DOM Level 2\r\n+ */\r\n+public interface TreeWalker {\r\n+    /**\r\n+     * The <code>root</code> node of the <code>TreeWalker</code>, as specified \r\n+     * when it was created.\r\n+     */\r\n+    public Node getRoot();\r\n+\r\n+    /**\r\n+     * This attribute determines which node types are presented via the \r\n+     * <code>TreeWalker</code>. The available set of constants is defined in \r\n+     * the <code>NodeFilter</code> interface.  Nodes not accepted by \r\n+     * <code>whatToShow</code> will be skipped, but their children may still \r\n+     * be considered. Note that this skip takes precedence over the filter, \r\n+     * if any. \r\n+     */\r\n+    public int getWhatToShow();\r\n+\r\n+    /**\r\n+     * The filter used to screen nodes.\r\n+     */\r\n+    public NodeFilter getFilter();\r\n+\r\n+    /**\r\n+     * The value of this flag determines whether the children of entity \r\n+     * reference nodes are visible to the <code>TreeWalker</code>. If false, \r\n+     * they  and their descendants will be rejected. Note that this \r\n+     * rejection takes precedence over <code>whatToShow</code> and the \r\n+     * filter, if any. \r\n+     * <br> To produce a view of the document that has entity references \r\n+     * expanded and does not expose the entity reference node itself, use \r\n+     * the <code>whatToShow</code> flags to hide the entity reference node \r\n+     * and set <code>expandEntityReferences</code> to true when creating the \r\n+     * <code>TreeWalker</code>. To produce a view of the document that has \r\n+     * entity reference nodes but no entity expansion, use the \r\n+     * <code>whatToShow</code> flags to show the entity reference node and \r\n+     * set <code>expandEntityReferences</code> to false.\r\n+     */\r\n+    public boolean getExpandEntityReferences();\r\n+\r\n+    /**\r\n+     * The node at which the <code>TreeWalker</code> is currently positioned.\r\n+     * <br>Alterations to the DOM tree may cause the current node to no longer \r\n+     * be accepted by the <code>TreeWalker</code>'s associated filter. \r\n+     * <code>currentNode</code> may also be explicitly set to any node, \r\n+     * whether or not it is within the subtree specified by the \r\n+     * <code>root</code> node or would be accepted by the filter and \r\n+     * <code>whatToShow</code> flags. Further traversal occurs relative to \r\n+     * <code>currentNode</code> even if it is not part of the current view, \r\n+     * by applying the filters in the requested direction; if no traversal \r\n+     * is possible, <code>currentNode</code> is not changed. \r\n+     * @exception DOMException\r\n+     *   NOT_SUPPORTED_ERR: Raised if an attempt is made to set \r\n+     *   <code>currentNode</code> to <code>null</code>.\r\n+     */\r\n+    public Node getCurrentNode();\r\n+    public void setCurrentNode(Node currentNode)\r\n+                         throws DOMException;\r\n+\r\n+    /**\r\n+     * Moves to and returns the closest visible ancestor node of the current \r\n+     * node. If the search for <code>parentNode</code> attempts to step \r\n+     * upward from the <code>TreeWalker</code>'s <code>root</code> node, or \r\n+     * if it fails to find a visible ancestor node, this method retains the \r\n+     * current position and returns <code>null</code>.\r\n+     * @return The new parent node, or <code>null</code> if the current node \r\n+     *   has no parent  in the <code>TreeWalker</code>'s logical view.  \r\n+     */\r\n+    public Node parentNode();\r\n+\r\n+    /**\r\n+     * Moves the <code>TreeWalker</code> to the first visible child of the \r\n+     * current node, and returns the new node. If the current node has no \r\n+     * visible children, returns <code>null</code>, and retains the current \r\n+     * node.\r\n+     * @return The new node, or <code>null</code> if the current node has no \r\n+     *   visible children  in the <code>TreeWalker</code>'s logical view.  \r\n+     */\r\n+    public Node firstChild();\r\n+\r\n+    /**\r\n+     * Moves the <code>TreeWalker</code> to the last visible child of the \r\n+     * current node, and returns the new node. If the current node has no \r\n+     * visible children, returns <code>null</code>, and retains the current \r\n+     * node.\r\n+     * @return The new node, or <code>null</code> if the current node has no \r\n+     *   children  in the <code>TreeWalker</code>'s logical view.  \r\n+     */\r\n+    public Node lastChild();\r\n+\r\n+    /**\r\n+     * Moves the <code>TreeWalker</code> to the previous sibling of the \r\n+     * current node, and returns the new node. If the current node has no \r\n+     * visible previous sibling, returns <code>null</code>, and retains the \r\n+     * current node.\r\n+     * @return The new node, or <code>null</code> if the current node has no \r\n+     *   previous sibling.  in the <code>TreeWalker</code>'s logical view.  \r\n+     */\r\n+    public Node previousSibling();\r\n+\r\n+    /**\r\n+     * Moves the <code>TreeWalker</code> to the next sibling of the current \r\n+     * node, and returns the new node. If the current node has no visible \r\n+     * next sibling, returns <code>null</code>, and retains the current node.\r\n+     * @return The new node, or <code>null</code> if the current node has no \r\n+     *   next sibling.  in the <code>TreeWalker</code>'s logical view.  \r\n+     */\r\n+    public Node nextSibling();\r\n+\r\n+    /**\r\n+     * Moves the <code>TreeWalker</code> to the previous visible node in \r\n+     * document order relative to the current node, and returns the new \r\n+     * node. If the current node has no previous node,  or if the search for \r\n+     * <code>previousNode</code> attempts to step upward from the \r\n+     * <code>TreeWalker</code>'s <code>root</code> node,  returns \r\n+     * <code>null</code>, and retains the current node. \r\n+     * @return The new node, or <code>null</code> if the current node has no \r\n+     *   previous node  in the <code>TreeWalker</code>'s logical view.  \r\n+     */\r\n+    public Node previousNode();\r\n+\r\n+    /**\r\n+     * Moves the <code>TreeWalker</code> to the next visible node in document \r\n+     * order relative to the current node, and returns the new node. If the \r\n+     * current node has no next node, or if the search for nextNode attempts \r\n+     * to step upward from the <code>TreeWalker</code>'s <code>root</code> \r\n+     * node, returns <code>null</code>, and retains the current node.\r\n+     * @return The new node, or <code>null</code> if the current node has no \r\n+     *   next node  in the <code>TreeWalker</code>'s logical view.  \r\n+     */\r\n+    public Node nextNode();\r\n+\r\n+}\r"}, {"sha": "9ea9295e191f4ae9d9d73d4f01b7c9896be79c7c", "filename": "libjava/org/xml/sax/AttributeList.java", "status": "added", "additions": 191, "deletions": 0, "changes": 191, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FAttributeList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FAttributeList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FAttributeList.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,191 @@\n+// SAX Attribute List Interface.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: AttributeList.java,v 1.1 2000/10/02 02:43:16 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+/**\r\n+ * Interface for an element's attribute specifications.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This is the original SAX1 interface for reporting an element's\r\n+ * attributes.  Unlike the new {@link org.xml.sax.Attributes Attributes}\r\n+ * interface, it does not support Namespace-related information.</p>\r\n+ *\r\n+ * <p>When an attribute list is supplied as part of a\r\n+ * {@link org.xml.sax.DocumentHandler#startElement startElement}\r\n+ * event, the list will return valid results only during the\r\n+ * scope of the event; once the event handler returns control\r\n+ * to the parser, the attribute list is invalid.  To save a\r\n+ * persistent copy of the attribute list, use the SAX1\r\n+ * {@link org.xml.sax.helpers.AttributeListImpl AttributeListImpl}\r\n+ * helper class.</p>\r\n+ *\r\n+ * <p>An attribute list includes only attributes that have been\r\n+ * specified or defaulted: #IMPLIED attributes will not be included.</p>\r\n+ *\r\n+ * <p>There are two ways for the SAX application to obtain information\r\n+ * from the AttributeList.  First, it can iterate through the entire\r\n+ * list:</p>\r\n+ *\r\n+ * <pre>\r\n+ * public void startElement (String name, AttributeList atts) {\r\n+ *   for (int i = 0; i < atts.getLength(); i++) {\r\n+ *     String name = atts.getName(i);\r\n+ *     String type = atts.getType(i);\r\n+ *     String value = atts.getValue(i);\r\n+ *     [...]\r\n+ *   }\r\n+ * }\r\n+ * </pre>\r\n+ *\r\n+ * <p>(Note that the result of getLength() will be zero if there\r\n+ * are no attributes.)\r\n+ *\r\n+ * <p>As an alternative, the application can request the value or\r\n+ * type of specific attributes:</p>\r\n+ *\r\n+ * <pre>\r\n+ * public void startElement (String name, AttributeList atts) {\r\n+ *   String identifier = atts.getValue(\"id\");\r\n+ *   String label = atts.getValue(\"label\");\r\n+ *   [...]\r\n+ * }\r\n+ * </pre>\r\n+ *\r\n+ * @deprecated This interface has been replaced by the SAX2\r\n+ *             {@link org.xml.sax.Attributes Attributes}\r\n+ *             interface, which includes Namespace support.\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.DocumentHandler#startElement startElement\r\n+ * @see org.xml.sax.helpers.AttributeListImpl AttributeListImpl\r\n+ */\r\n+public interface AttributeList {\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Iteration methods.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+\r\n+    /**\r\n+     * Return the number of attributes in this list.\r\n+     *\r\n+     * <p>The SAX parser may provide attributes in any\r\n+     * arbitrary order, regardless of the order in which they were\r\n+     * declared or specified.  The number of attributes may be\r\n+     * zero.</p>\r\n+     *\r\n+     * @return The number of attributes in the list.  \r\n+     */\r\n+    public abstract int getLength ();\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the name of an attribute in this list (by position).\r\n+     *\r\n+     * <p>The names must be unique: the SAX parser shall not include the\r\n+     * same attribute twice.  Attributes without values (those declared\r\n+     * #IMPLIED without a value specified in the start tag) will be\r\n+     * omitted from the list.</p>\r\n+     *\r\n+     * <p>If the attribute name has a namespace prefix, the prefix\r\n+     * will still be attached.</p>\r\n+     *\r\n+     * @param i The index of the attribute in the list (starting at 0).\r\n+     * @return The name of the indexed attribute, or null\r\n+     *         if the index is out of range.\r\n+     * @see #getLength \r\n+     */\r\n+    public abstract String getName (int i);\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the type of an attribute in the list (by position).\r\n+     *\r\n+     * <p>The attribute type is one of the strings \"CDATA\", \"ID\",\r\n+     * \"IDREF\", \"IDREFS\", \"NMTOKEN\", \"NMTOKENS\", \"ENTITY\", \"ENTITIES\",\r\n+     * or \"NOTATION\" (always in upper case).</p>\r\n+     *\r\n+     * <p>If the parser has not read a declaration for the attribute,\r\n+     * or if the parser does not report attribute types, then it must\r\n+     * return the value \"CDATA\" as stated in the XML 1.0 Recommentation\r\n+     * (clause 3.3.3, \"Attribute-Value Normalization\").</p>\r\n+     *\r\n+     * <p>For an enumerated attribute that is not a notation, the\r\n+     * parser will report the type as \"NMTOKEN\".</p>\r\n+     *\r\n+     * @param i The index of the attribute in the list (starting at 0).\r\n+     * @return The attribute type as a string, or\r\n+     *         null if the index is out of range.\r\n+     * @see #getLength \r\n+     * @see #getType(java.lang.String)\r\n+     */\r\n+    public abstract String getType (int i);\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the value of an attribute in the list (by position).\r\n+     *\r\n+     * <p>If the attribute value is a list of tokens (IDREFS,\r\n+     * ENTITIES, or NMTOKENS), the tokens will be concatenated\r\n+     * into a single string separated by whitespace.</p>\r\n+     *\r\n+     * @param i The index of the attribute in the list (starting at 0).\r\n+     * @return The attribute value as a string, or\r\n+     *         null if the index is out of range.\r\n+     * @see #getLength\r\n+     * @see #getValue(java.lang.String)\r\n+     */\r\n+    public abstract String getValue (int i);\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Lookup methods.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the type of an attribute in the list (by name).\r\n+     *\r\n+     * <p>The return value is the same as the return value for\r\n+     * getType(int).</p>\r\n+     *\r\n+     * <p>If the attribute name has a namespace prefix in the document,\r\n+     * the application must include the prefix here.</p>\r\n+     *\r\n+     * @param name The name of the attribute.\r\n+     * @return The attribute type as a string, or null if no\r\n+     *         such attribute exists.\r\n+     * @see #getType(int)\r\n+     */\r\n+    public abstract String getType (String name);\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the value of an attribute in the list (by name).\r\n+     *\r\n+     * <p>The return value is the same as the return value for\r\n+     * getValue(int).</p>\r\n+     *\r\n+     * <p>If the attribute name has a namespace prefix in the document,\r\n+     * the application must include the prefix here.</p>\r\n+     *\r\n+     * @param i The index of the attribute in the list.\r\n+     * @return The attribute value as a string, or null if\r\n+     *         no such attribute exists.\r\n+     * @see #getValue(int)\r\n+     */\r\n+    public abstract String getValue (String name);\r\n+    \r\n+}\r\n+\r\n+// end of AttributeList.java\r"}, {"sha": "f10067a928893678e6dd14efec162d6891b924e6", "filename": "libjava/org/xml/sax/Attributes.java", "status": "added", "additions": 243, "deletions": 0, "changes": 243, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FAttributes.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,243 @@\n+// Attributes.java - attribute list with Namespace support\r\n+// Written by David Megginson, sax@megginson.com\r\n+// NO WARRANTY!  This class is in the public domain.\r\n+\r\n+// $Id: Attributes.java,v 1.1 2000/10/02 02:43:16 sboag Exp $\r\n+\r\n+\r\n+package org.xml.sax;\r\n+\r\n+\r\n+/**\r\n+ * Interface for a list of XML attributes.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This interface allows access to a list of attributes in\r\n+ * three different ways:</p>\r\n+ *\r\n+ * <ol>\r\n+ * <li>by attribute index;</li>\r\n+ * <li>by Namespace-qualified name; or</li>\r\n+ * <li>by qualified (prefixed) name.</li>\r\n+ * </ol>\r\n+ *\r\n+ * <p>The list will not contain attributes that were declared\r\n+ * #IMPLIED but not specified in the start tag.  It will also not\r\n+ * contain attributes used as Namespace declarations (xmlns*) unless\r\n+ * the <code>http://xml.org/sax/features/namespace-prefixes</code> \r\n+ * feature is set to <var>true</var> (it is <var>false</var> by \r\n+ * default).</p>\r\n+ *\r\n+ * <p>If the namespace-prefixes feature (see above) is <var>false</var>, \r\n+ * access by qualified name may not be available; if the \r\n+ * <code>http://xml.org/sax/features/namespaces</code>\r\n+ * feature is <var>false</var>, access by Namespace-qualified names \r\n+ * may not be available.</p>\r\n+ *\r\n+ * <p>This interface replaces the now-deprecated SAX1 {@link\r\n+ * org.xml.sax.AttributeList AttributeList} interface, which does not \r\n+ * contain Namespace support.  In addition to Namespace support, it \r\n+ * adds the <var>getIndex</var> methods (below).</p>\r\n+ *\r\n+ * <p>The order of attributes in the list is unspecified, and will\r\n+ * vary from implementation to implementation.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.helpers.AttributeListImpl\r\n+ */\r\n+public interface Attributes\r\n+{\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Indexed access.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Return the number of attributes in the list.\r\n+     *\r\n+     * <p>Once you know the number of attributes, you can iterate\r\n+     * through the list.</p>\r\n+     *\r\n+     * @return The number of attributes in the list.\r\n+     * @see #getURI(int)\r\n+     * @see #getLocalName(int)\r\n+     * @see #getQName(int)\r\n+     * @see #getType(int)\r\n+     * @see #getValue(int)\r\n+     */\r\n+    public abstract int getLength ();\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's Namespace URI by index.\r\n+     *\r\n+     * @param index The attribute index (zero-based).\r\n+     * @return The Namespace URI, or the empty string if none\r\n+     *         is available, or null if the index is out of\r\n+     *         range.\r\n+     * @see #getLength\r\n+     */\r\n+    public abstract String getURI (int index);\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's local name by index.\r\n+     *\r\n+     * @param index The attribute index (zero-based).\r\n+     * @return The local name, or the empty string if Namespace\r\n+     *         processing is not being performed, or null\r\n+     *         if the index is out of range.\r\n+     * @see #getLength\r\n+     */\r\n+    public abstract String getLocalName (int index);\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's XML 1.0 qualified name by index.\r\n+     *\r\n+     * @param index The attribute index (zero-based).\r\n+     * @return The XML 1.0 qualified name, or the empty string\r\n+     *         if none is available, or null if the index\r\n+     *         is out of range.\r\n+     * @see #getLength\r\n+     */\r\n+    public abstract String getQName (int index);\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's type by index.\r\n+     *\r\n+     * <p>The attribute type is one of the strings \"CDATA\", \"ID\",\r\n+     * \"IDREF\", \"IDREFS\", \"NMTOKEN\", \"NMTOKENS\", \"ENTITY\", \"ENTITIES\",\r\n+     * or \"NOTATION\" (always in upper case).</p>\r\n+     *\r\n+     * <p>If the parser has not read a declaration for the attribute,\r\n+     * or if the parser does not report attribute types, then it must\r\n+     * return the value \"CDATA\" as stated in the XML 1.0 Recommentation\r\n+     * (clause 3.3.3, \"Attribute-Value Normalization\").</p>\r\n+     *\r\n+     * <p>For an enumerated attribute that is not a notation, the\r\n+     * parser will report the type as \"NMTOKEN\".</p>\r\n+     *\r\n+     * @param index The attribute index (zero-based).\r\n+     * @return The attribute's type as a string, or null if the\r\n+     *         index is out of range.\r\n+     * @see #getLength\r\n+     */\r\n+    public abstract String getType (int index);\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's value by index.\r\n+     *\r\n+     * <p>If the attribute value is a list of tokens (IDREFS,\r\n+     * ENTITIES, or NMTOKENS), the tokens will be concatenated\r\n+     * into a single string with each token separated by a\r\n+     * single space.</p>\r\n+     *\r\n+     * @param index The attribute index (zero-based).\r\n+     * @return The attribute's value as a string, or null if the\r\n+     *         index is out of range.\r\n+     * @see #getLength\r\n+     */\r\n+    public abstract String getValue (int index);\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Name-based query.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Look up the index of an attribute by Namespace name.\r\n+     *\r\n+     * @param uri The Namespace URI, or the empty string if\r\n+     *        the name has no Namespace URI.\r\n+     * @param localName The attribute's local name.\r\n+     * @return The index of the attribute, or -1 if it does not\r\n+     *         appear in the list.\r\n+     */\r\n+    public int getIndex (String uri, String localPart);\r\n+\r\n+\r\n+    /**\r\n+     * Look up the index of an attribute by XML 1.0 qualified name.\r\n+     *\r\n+     * @param qName The qualified (prefixed) name.\r\n+     * @return The index of the attribute, or -1 if it does not\r\n+     *         appear in the list.\r\n+     */\r\n+    public int getIndex (String qName);\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's type by Namespace name.\r\n+     *\r\n+     * <p>See {@link #getType(int) getType(int)} for a description\r\n+     * of the possible types.</p>\r\n+     *\r\n+     * @param uri The Namespace URI, or the empty String if the\r\n+     *        name has no Namespace URI.\r\n+     * @param localName The local name of the attribute.\r\n+     * @return The attribute type as a string, or null if the\r\n+     *         attribute is not in the list or if Namespace\r\n+     *         processing is not being performed.\r\n+     */\r\n+    public abstract String getType (String uri, String localName);\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's type by XML 1.0 qualified name.\r\n+     *\r\n+     * <p>See {@link #getType(int) getType(int)} for a description\r\n+     * of the possible types.</p>\r\n+     *\r\n+     * @param qName The XML 1.0 qualified name.\r\n+     * @return The attribute type as a string, or null if the\r\n+     *         attribute is not in the list or if qualified names\r\n+     *         are not available.\r\n+     */\r\n+    public abstract String getType (String qName);\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's value by Namespace name.\r\n+     *\r\n+     * <p>See {@link #getValue(int) getValue(int)} for a description\r\n+     * of the possible values.</p>\r\n+     *\r\n+     * @param uri The Namespace URI, or the empty String if the\r\n+     *        name has no Namespace URI.\r\n+     * @param localName The local name of the attribute.\r\n+     * @return The attribute value as a string, or null if the\r\n+     *         attribute is not in the list.\r\n+     */\r\n+    public abstract String getValue (String uri, String localName);\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's value by XML 1.0 qualified name.\r\n+     *\r\n+     * <p>See {@link #getValue(int) getValue(int)} for a description\r\n+     * of the possible values.</p>\r\n+     *\r\n+     * @param qName The XML 1.0 qualified name.\r\n+     * @return The attribute value as a string, or null if the\r\n+     *         attribute is not in the list or if qualified names\r\n+     *         are not available.\r\n+     */\r\n+    public abstract String getValue (String qName);\r\n+\r\n+}\r\n+\r\n+// end of Attributes.java\r"}, {"sha": "0d84d0eae991198aeb37a150fd91e644ed6fcea6", "filename": "libjava/org/xml/sax/ContentHandler.java", "status": "added", "additions": 374, "deletions": 0, "changes": 374, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FContentHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FContentHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FContentHandler.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,374 @@\n+// ContentHandler.java - handle main document content.\r\n+// Written by David Megginson, sax@megginson.com\r\n+// NO WARRANTY!  This class is in the public domain.\r\n+\r\n+// $Id: ContentHandler.java,v 1.1 2000/10/02 02:43:16 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+\r\n+/**\r\n+ * Receive notification of the logical content of a document.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This is the main interface that most SAX applications\r\n+ * implement: if the application needs to be informed of basic parsing \r\n+ * events, it implements this interface and registers an instance with \r\n+ * the SAX parser using the {@link org.xml.sax.XMLReader#setContentHandler \r\n+ * setContentHandler} method.  The parser uses the instance to report \r\n+ * basic document-related events like the start and end of elements \r\n+ * and character data.</p>\r\n+ *\r\n+ * <p>The order of events in this interface is very important, and\r\n+ * mirrors the order of information in the document itself.  For\r\n+ * example, all of an element's content (character data, processing\r\n+ * instructions, and/or subelements) will appear, in order, between\r\n+ * the startElement event and the corresponding endElement event.</p>\r\n+ *\r\n+ * <p>This interface is similar to the now-deprecated SAX 1.0\r\n+ * DocumentHandler interface, but it adds support for Namespaces\r\n+ * and for reporting skipped entities (in non-validating XML\r\n+ * processors).</p>\r\n+ *\r\n+ * <p>Implementors should note that there is also a Java class\r\n+ * {@link java.net.ContentHandler ContentHandler} in the java.net\r\n+ * package; that means that it's probably a bad idea to do</p>\r\n+ *\r\n+ * <blockquote>\r\n+ * import java.net.*;\r\n+ * import org.xml.sax.*;\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>In fact, \"import ...*\" is usually a sign of sloppy programming\r\n+ * anyway, so the user should consider this a feature rather than a\r\n+ * bug.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.XMLReader\r\n+ * @see org.xml.sax.DTDHandler\r\n+ * @see org.xml.sax.ErrorHandler\r\n+ */\r\n+public interface ContentHandler\r\n+{\r\n+\r\n+    /**\r\n+     * Receive an object for locating the origin of SAX document events.\r\n+     *\r\n+     * <p>SAX parsers are strongly encouraged (though not absolutely\r\n+     * required) to supply a locator: if it does so, it must supply\r\n+     * the locator to the application by invoking this method before\r\n+     * invoking any of the other methods in the ContentHandler\r\n+     * interface.</p>\r\n+     *\r\n+     * <p>The locator allows the application to determine the end\r\n+     * position of any document-related event, even if the parser is\r\n+     * not reporting an error.  Typically, the application will\r\n+     * use this information for reporting its own errors (such as\r\n+     * character content that does not match an application's\r\n+     * business rules).  The information returned by the locator\r\n+     * is probably not sufficient for use with a search engine.</p>\r\n+     *\r\n+     * <p>Note that the locator will return correct information only\r\n+     * during the invocation of the events in this interface.  The\r\n+     * application should not attempt to use it at any other time.</p>\r\n+     *\r\n+     * @param locator An object that can return the location of\r\n+     *                any SAX document event.\r\n+     * @see org.xml.sax.Locator\r\n+     */\r\n+    public void setDocumentLocator (Locator locator);\r\n+\r\n+\r\n+    /**\r\n+     * Receive notification of the beginning of a document.\r\n+     *\r\n+     * <p>The SAX parser will invoke this method only once, before any\r\n+     * other methods in this interface or in {@link org.xml.sax.DTDHandler\r\n+     * DTDHandler} (except for {@link #setDocumentLocator \r\n+     * setDocumentLocator}).</p>\r\n+     *\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see #endDocument\r\n+     */\r\n+    public void startDocument ()\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Receive notification of the end of a document.\r\n+     *\r\n+     * <p>The SAX parser will invoke this method only once, and it will\r\n+     * be the last method invoked during the parse.  The parser shall\r\n+     * not invoke this method until it has either abandoned parsing\r\n+     * (because of an unrecoverable error) or reached the end of\r\n+     * input.</p>\r\n+     *\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see #startDocument\r\n+     */\r\n+    public void endDocument()\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Begin the scope of a prefix-URI Namespace mapping.\r\n+     *\r\n+     * <p>The information from this event is not necessary for\r\n+     * normal Namespace processing: the SAX XML reader will \r\n+     * automatically replace prefixes for element and attribute\r\n+     * names when the <code>http://xml.org/sax/features/namespaces</code>\r\n+     * feature is <var>true</var> (the default).</p>\r\n+     *\r\n+     * <p>There are cases, however, when applications need to\r\n+     * use prefixes in character data or in attribute values,\r\n+     * where they cannot safely be expanded automatically; the\r\n+     * start/endPrefixMapping event supplies the information\r\n+     * to the application to expand prefixes in those contexts\r\n+     * itself, if necessary.</p>\r\n+     *\r\n+     * <p>Note that start/endPrefixMapping events are not\r\n+     * guaranteed to be properly nested relative to each-other:\r\n+     * all startPrefixMapping events will occur before the\r\n+     * corresponding {@link #startElement startElement} event, \r\n+     * and all {@link #endPrefixMapping endPrefixMapping}\r\n+     * events will occur after the corresponding {@link #endElement\r\n+     * endElement} event, but their order is not otherwise \r\n+     * guaranteed.</p>\r\n+     *\r\n+     * <p>There should never be start/endPrefixMapping events for the\r\n+     * \"xml\" prefix, since it is predeclared and immutable.</p>\r\n+     *\r\n+     * @param prefix The Namespace prefix being declared.\r\n+     * @param uri The Namespace URI the prefix is mapped to.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see #endPrefixMapping\r\n+     * @see #startElement\r\n+     */\r\n+    public void startPrefixMapping (String prefix, String uri)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * End the scope of a prefix-URI mapping.\r\n+     *\r\n+     * <p>See {@link #startPrefixMapping startPrefixMapping} for \r\n+     * details.  This event will always occur after the corresponding \r\n+     * {@link #endElement endElement} event, but the order of \r\n+     * {@link #endPrefixMapping endPrefixMapping} events is not otherwise\r\n+     * guaranteed.</p>\r\n+     *\r\n+     * @param prefix The prefix that was being mapping.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see #startPrefixMapping\r\n+     * @see #endElement\r\n+     */\r\n+    public void endPrefixMapping (String prefix)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Receive notification of the beginning of an element.\r\n+     *\r\n+     * <p>The Parser will invoke this method at the beginning of every\r\n+     * element in the XML document; there will be a corresponding\r\n+     * {@link #endElement endElement} event for every startElement event\r\n+     * (even when the element is empty). All of the element's content will be\r\n+     * reported, in order, before the corresponding endElement\r\n+     * event.</p>\r\n+     *\r\n+     * <p>This event allows up to three name components for each\r\n+     * element:</p>\r\n+     *\r\n+     * <ol>\r\n+     * <li>the Namespace URI;</li>\r\n+     * <li>the local name; and</li>\r\n+     * <li>the qualified (prefixed) name.</li>\r\n+     * </ol>\r\n+     *\r\n+     * <p>Any or all of these may be provided, depending on the\r\n+     * values of the <var>http://xml.org/sax/features/namespaces</var>\r\n+     * and the <var>http://xml.org/sax/features/namespace-prefixes</var>\r\n+     * properties:</p>\r\n+     *\r\n+     * <ul>\r\n+     * <li>the Namespace URI and local name are required when \r\n+     * the namespaces property is <var>true</var> (the default), and are\r\n+     * optional when the namespaces property is <var>false</var> (if one is\r\n+     * specified, both must be);</li>\r\n+     * <li>the qualified name is required when the namespace-prefixes property\r\n+     * is <var>true</var>, and is optional when the namespace-prefixes property\r\n+     * is <var>false</var> (the default).</li>\r\n+     * </ul>\r\n+     *\r\n+     * <p>Note that the attribute list provided will contain only\r\n+     * attributes with explicit values (specified or defaulted):\r\n+     * #IMPLIED attributes will be omitted.  The attribute list\r\n+     * will contain attributes used for Namespace declarations\r\n+     * (xmlns* attributes) only if the\r\n+     * <code>http://xml.org/sax/features/namespace-prefixes</code>\r\n+     * property is true (it is false by default, and support for a \r\n+     * true value is optional).</p>\r\n+     *\r\n+     * @param uri The Namespace URI, or the empty string if the\r\n+     *        element has no Namespace URI or if Namespace\r\n+     *        processing is not being performed.\r\n+     * @param localName The local name (without prefix), or the\r\n+     *        empty string if Namespace processing is not being\r\n+     *        performed.\r\n+     * @param qName The qualified name (with prefix), or the\r\n+     *        empty string if qualified names are not available.\r\n+     * @param atts The attributes attached to the element.  If\r\n+     *        there are no attributes, it shall be an empty\r\n+     *        Attributes object.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see #endElement\r\n+     * @see org.xml.sax.Attributes\r\n+     */\r\n+    public void startElement (String namespaceURI, String localName,\r\n+\t\t\t      String qName, Attributes atts)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Receive notification of the end of an element.\r\n+     *\r\n+     * <p>The SAX parser will invoke this method at the end of every\r\n+     * element in the XML document; there will be a corresponding\r\n+     * {@link #startElement startElement} event for every endElement \r\n+     * event (even when the element is empty).</p>\r\n+     *\r\n+     * <p>For information on the names, see startElement.</p>\r\n+     *\r\n+     * @param uri The Namespace URI, or the empty string if the\r\n+     *        element has no Namespace URI or if Namespace\r\n+     *        processing is not being performed.\r\n+     * @param localName The local name (without prefix), or the\r\n+     *        empty string if Namespace processing is not being\r\n+     *        performed.\r\n+     * @param qName The qualified XML 1.0 name (with prefix), or the\r\n+     *        empty string if qualified names are not available.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     */\r\n+    public void endElement (String namespaceURI, String localName,\r\n+\t\t\t    String qName)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Receive notification of character data.\r\n+     *\r\n+     * <p>The Parser will call this method to report each chunk of\r\n+     * character data.  SAX parsers may return all contiguous character\r\n+     * data in a single chunk, or they may split it into several\r\n+     * chunks; however, all of the characters in any single event\r\n+     * must come from the same external entity so that the Locator\r\n+     * provides useful information.</p>\r\n+     *\r\n+     * <p>The application must not attempt to read from the array\r\n+     * outside of the specified range.</p>\r\n+     *\r\n+     * <p>Note that some parsers will report whitespace in element\r\n+     * content using the {@link #ignorableWhitespace ignorableWhitespace}\r\n+     * method rather than this one (validating parsers <em>must</em> \r\n+     * do so).</p>\r\n+     *\r\n+     * @param ch The characters from the XML document.\r\n+     * @param start The start position in the array.\r\n+     * @param length The number of characters to read from the array.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see #ignorableWhitespace \r\n+     * @see org.xml.sax.Locator\r\n+     */\r\n+    public void characters (char ch[], int start, int length)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Receive notification of ignorable whitespace in element content.\r\n+     *\r\n+     * <p>Validating Parsers must use this method to report each chunk\r\n+     * of whitespace in element content (see the W3C XML 1.0 recommendation,\r\n+     * section 2.10): non-validating parsers may also use this method\r\n+     * if they are capable of parsing and using content models.</p>\r\n+     *\r\n+     * <p>SAX parsers may return all contiguous whitespace in a single\r\n+     * chunk, or they may split it into several chunks; however, all of\r\n+     * the characters in any single event must come from the same\r\n+     * external entity, so that the Locator provides useful\r\n+     * information.</p>\r\n+     *\r\n+     * <p>The application must not attempt to read from the array\r\n+     * outside of the specified range.</p>\r\n+     *\r\n+     * @param ch The characters from the XML document.\r\n+     * @param start The start position in the array.\r\n+     * @param length The number of characters to read from the array.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see #characters\r\n+     */\r\n+    public void ignorableWhitespace (char ch[], int start, int length)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Receive notification of a processing instruction.\r\n+     *\r\n+     * <p>The Parser will invoke this method once for each processing\r\n+     * instruction found: note that processing instructions may occur\r\n+     * before or after the main document element.</p>\r\n+     *\r\n+     * <p>A SAX parser must never report an XML declaration (XML 1.0,\r\n+     * section 2.8) or a text declaration (XML 1.0, section 4.3.1)\r\n+     * using this method.</p>\r\n+     *\r\n+     * @param target The processing instruction target.\r\n+     * @param data The processing instruction data, or null if\r\n+     *        none was supplied.  The data does not include any\r\n+     *        whitespace separating it from the target.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     */\r\n+    public void processingInstruction (String target, String data)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Receive notification of a skipped entity.\r\n+     *\r\n+     * <p>The Parser will invoke this method once for each entity\r\n+     * skipped.  Non-validating processors may skip entities if they\r\n+     * have not seen the declarations (because, for example, the\r\n+     * entity was declared in an external DTD subset).  All processors\r\n+     * may skip external entities, depending on the values of the\r\n+     * <code>http://xml.org/sax/features/external-general-entities</code>\r\n+     * and the\r\n+     * <code>http://xml.org/sax/features/external-parameter-entities</code>\r\n+     * properties.</p>\r\n+     *\r\n+     * @param name The name of the skipped entity.  If it is a \r\n+     *        parameter entity, the name will begin with '%', and if\r\n+     *        it is the external DTD subset, it will be the string\r\n+     *        \"[dtd]\".\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     */\r\n+    public void skippedEntity (String name)\r\n+\tthrows SAXException;\r\n+}\r\n+\r\n+// end of ContentHandler.java\r"}, {"sha": "509a0069ba84e1547aa91ff7d897f3fa4eb6e72f", "filename": "libjava/org/xml/sax/DTDHandler.java", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FDTDHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FDTDHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FDTDHandler.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,108 @@\n+// SAX DTD handler.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: DTDHandler.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+/**\r\n+ * Receive notification of basic DTD-related events.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>If a SAX application needs information about notations and\r\n+ * unparsed entities, then the application implements this \r\n+ * interface and registers an instance with the SAX parser using \r\n+ * the parser's setDTDHandler method.  The parser uses the \r\n+ * instance to report notation and unparsed entity declarations to \r\n+ * the application.</p>\r\n+ *\r\n+ * <p>Note that this interface includes only those DTD events that\r\n+ * the XML recommendation <em>requires</em> processors to report:\r\n+ * notation and unparsed entity declarations.</p>\r\n+ *\r\n+ * <p>The SAX parser may report these events in any order, regardless\r\n+ * of the order in which the notations and unparsed entities were\r\n+ * declared; however, all DTD events must be reported after the\r\n+ * document handler's startDocument event, and before the first\r\n+ * startElement event.</p>\r\n+ *\r\n+ * <p>It is up to the application to store the information for \r\n+ * future use (perhaps in a hash table or object tree).\r\n+ * If the application encounters attributes of type \"NOTATION\",\r\n+ * \"ENTITY\", or \"ENTITIES\", it can use the information that it\r\n+ * obtained through this interface to find the entity and/or\r\n+ * notation corresponding with the attribute value.</p>\r\n+ *\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.Parser#setDTDHandler\r\n+ * @see org.xml.sax.HandlerBase \r\n+ */\r\n+public interface DTDHandler {\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a notation declaration event.\r\n+     *\r\n+     * <p>It is up to the application to record the notation for later\r\n+     * reference, if necessary.</p>\r\n+     *\r\n+     * <p>At least one of publicId and systemId must be non-null.\r\n+     * If a system identifier is present, and it is a URL, the SAX\r\n+     * parser must resolve it fully before passing it to the\r\n+     * application through this event.</p>\r\n+     *\r\n+     * <p>There is no guarantee that the notation declaration will be\r\n+     * reported before any unparsed entities that use it.</p>\r\n+     *\r\n+     * @param name The notation name.\r\n+     * @param publicId The notation's public identifier, or null if\r\n+     *        none was given.\r\n+     * @param systemId The notation's system identifier, or null if\r\n+     *        none was given.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see #unparsedEntityDecl\r\n+     * @see org.xml.sax.AttributeList\r\n+     */\r\n+    public abstract void notationDecl (String name,\r\n+\t\t\t\t       String publicId,\r\n+\t\t\t\t       String systemId)\r\n+\tthrows SAXException;\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of an unparsed entity declaration event.\r\n+     *\r\n+     * <p>Note that the notation name corresponds to a notation\r\n+     * reported by the {@link #notationDecl notationDecl} event.  \r\n+     * It is up to the application to record the entity for later \r\n+     * reference, if necessary.</p>\r\n+     *\r\n+     * <p>If the system identifier is a URL, the parser must resolve it\r\n+     * fully before passing it to the application.</p>\r\n+     *\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @param name The unparsed entity's name.\r\n+     * @param publicId The entity's public identifier, or null if none\r\n+     *        was given.\r\n+     * @param systemId The entity's system identifier.\r\n+     * @param notation name The name of the associated notation.\r\n+     * @see #notationDecl\r\n+     * @see org.xml.sax.AttributeList\r\n+     */\r\n+    public abstract void unparsedEntityDecl (String name,\r\n+\t\t\t\t\t     String publicId,\r\n+\t\t\t\t\t     String systemId,\r\n+\t\t\t\t\t     String notationName)\r\n+\tthrows SAXException;\r\n+    \r\n+}\r\n+\r\n+// end of DTDHandler.java\r"}, {"sha": "be0a189c45bf7d3b8c1469016337d72e0ad79590", "filename": "libjava/org/xml/sax/DocumentHandler.java", "status": "added", "additions": 230, "deletions": 0, "changes": 230, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FDocumentHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FDocumentHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FDocumentHandler.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,230 @@\n+// SAX document handler.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: DocumentHandler.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+/**\r\n+ * Receive notification of general document events.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This was the main event-handling interface for SAX1; in\r\n+ * SAX2, it has been replaced by {@link org.xml.sax.ContentHandler\r\n+ * ContentHandler}, which provides Namespace support and reporting\r\n+ * of skipped entities.  This interface is included in SAX2 only\r\n+ * to support legacy SAX1 applications.</p>\r\n+ *\r\n+ * <p>The order of events in this interface is very important, and\r\n+ * mirrors the order of information in the document itself.  For\r\n+ * example, all of an element's content (character data, processing\r\n+ * instructions, and/or subelements) will appear, in order, between\r\n+ * the startElement event and the corresponding endElement event.</p>\r\n+ *\r\n+ * <p>Application writers who do not want to implement the entire\r\n+ * interface can derive a class from HandlerBase, which implements\r\n+ * the default functionality; parser writers can instantiate\r\n+ * HandlerBase to obtain a default handler.  The application can find\r\n+ * the location of any document event using the Locator interface\r\n+ * supplied by the Parser through the setDocumentLocator method.</p>\r\n+ *\r\n+ * @deprecated This interface has been replaced by the SAX2\r\n+ *             {@link org.xml.sax.ContentHandler ContentHandler}\r\n+ *             interface, which includes Namespace support.\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.Parser#setDocumentHandler\r\n+ * @see org.xml.sax.Locator\r\n+ * @see org.xml.sax.HandlerBase\r\n+ */\r\n+public interface DocumentHandler {\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive an object for locating the origin of SAX document events.\r\n+     *\r\n+     * <p>SAX parsers are strongly encouraged (though not absolutely\r\n+     * required) to supply a locator: if it does so, it must supply\r\n+     * the locator to the application by invoking this method before\r\n+     * invoking any of the other methods in the DocumentHandler\r\n+     * interface.</p>\r\n+     *\r\n+     * <p>The locator allows the application to determine the end\r\n+     * position of any document-related event, even if the parser is\r\n+     * not reporting an error.  Typically, the application will\r\n+     * use this information for reporting its own errors (such as\r\n+     * character content that does not match an application's\r\n+     * business rules).  The information returned by the locator\r\n+     * is probably not sufficient for use with a search engine.</p>\r\n+     *\r\n+     * <p>Note that the locator will return correct information only\r\n+     * during the invocation of the events in this interface.  The\r\n+     * application should not attempt to use it at any other time.</p>\r\n+     *\r\n+     * @param locator An object that can return the location of\r\n+     *                any SAX document event.\r\n+     * @see org.xml.sax.Locator\r\n+     */\r\n+    public abstract void setDocumentLocator (Locator locator);\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of the beginning of a document.\r\n+     *\r\n+     * <p>The SAX parser will invoke this method only once, before any\r\n+     * other methods in this interface or in DTDHandler (except for\r\n+     * setDocumentLocator).</p>\r\n+     *\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     */\r\n+    public abstract void startDocument ()\r\n+\tthrows SAXException;\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of the end of a document.\r\n+     *\r\n+     * <p>The SAX parser will invoke this method only once, and it will\r\n+     * be the last method invoked during the parse.  The parser shall\r\n+     * not invoke this method until it has either abandoned parsing\r\n+     * (because of an unrecoverable error) or reached the end of\r\n+     * input.</p>\r\n+     *\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     */\r\n+    public abstract void endDocument ()\r\n+\tthrows SAXException;\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of the beginning of an element.\r\n+     *\r\n+     * <p>The Parser will invoke this method at the beginning of every\r\n+     * element in the XML document; there will be a corresponding\r\n+     * endElement() event for every startElement() event (even when the\r\n+     * element is empty). All of the element's content will be\r\n+     * reported, in order, before the corresponding endElement()\r\n+     * event.</p>\r\n+     *\r\n+     * <p>If the element name has a namespace prefix, the prefix will\r\n+     * still be attached.  Note that the attribute list provided will\r\n+     * contain only attributes with explicit values (specified or\r\n+     * defaulted): #IMPLIED attributes will be omitted.</p>\r\n+     *\r\n+     * @param name The element type name.\r\n+     * @param atts The attributes attached to the element, if any.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see #endElement\r\n+     * @see org.xml.sax.AttributeList \r\n+     */\r\n+    public abstract void startElement (String name, AttributeList atts)\r\n+\tthrows SAXException;\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of the end of an element.\r\n+     *\r\n+     * <p>The SAX parser will invoke this method at the end of every\r\n+     * element in the XML document; there will be a corresponding\r\n+     * startElement() event for every endElement() event (even when the\r\n+     * element is empty).</p>\r\n+     *\r\n+     * <p>If the element name has a namespace prefix, the prefix will\r\n+     * still be attached to the name.</p>\r\n+     *\r\n+     * @param name The element type name\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     */\r\n+    public abstract void endElement (String name)\r\n+\tthrows SAXException;\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of character data.\r\n+     *\r\n+     * <p>The Parser will call this method to report each chunk of\r\n+     * character data.  SAX parsers may return all contiguous character\r\n+     * data in a single chunk, or they may split it into several\r\n+     * chunks; however, all of the characters in any single event\r\n+     * must come from the same external entity, so that the Locator\r\n+     * provides useful information.</p>\r\n+     *\r\n+     * <p>The application must not attempt to read from the array\r\n+     * outside of the specified range.</p>\r\n+     *\r\n+     * <p>Note that some parsers will report whitespace using the\r\n+     * ignorableWhitespace() method rather than this one (validating\r\n+     * parsers must do so).</p>\r\n+     *\r\n+     * @param ch The characters from the XML document.\r\n+     * @param start The start position in the array.\r\n+     * @param length The number of characters to read from the array.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see #ignorableWhitespace \r\n+     * @see org.xml.sax.Locator\r\n+     */\r\n+    public abstract void characters (char ch[], int start, int length)\r\n+\tthrows SAXException;\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of ignorable whitespace in element content.\r\n+     *\r\n+     * <p>Validating Parsers must use this method to report each chunk\r\n+     * of ignorable whitespace (see the W3C XML 1.0 recommendation,\r\n+     * section 2.10): non-validating parsers may also use this method\r\n+     * if they are capable of parsing and using content models.</p>\r\n+     *\r\n+     * <p>SAX parsers may return all contiguous whitespace in a single\r\n+     * chunk, or they may split it into several chunks; however, all of\r\n+     * the characters in any single event must come from the same\r\n+     * external entity, so that the Locator provides useful\r\n+     * information.</p>\r\n+     *\r\n+     * <p>The application must not attempt to read from the array\r\n+     * outside of the specified range.</p>\r\n+     *\r\n+     * @param ch The characters from the XML document.\r\n+     * @param start The start position in the array.\r\n+     * @param length The number of characters to read from the array.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see #characters\r\n+     */\r\n+    public abstract void ignorableWhitespace (char ch[], int start, int length)\r\n+\tthrows SAXException;\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a processing instruction.\r\n+     *\r\n+     * <p>The Parser will invoke this method once for each processing\r\n+     * instruction found: note that processing instructions may occur\r\n+     * before or after the main document element.</p>\r\n+     *\r\n+     * <p>A SAX parser should never report an XML declaration (XML 1.0,\r\n+     * section 2.8) or a text declaration (XML 1.0, section 4.3.1)\r\n+     * using this method.</p>\r\n+     *\r\n+     * @param target The processing instruction target.\r\n+     * @param data The processing instruction data, or null if\r\n+     *        none was supplied.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     */\r\n+    public abstract void processingInstruction (String target, String data)\r\n+\tthrows SAXException;\r\n+    \r\n+}\r\n+\r\n+// end of DocumentHandler.java\r"}, {"sha": "3270471453a2fc4f7fc7c4bb8c33bf10f255f481", "filename": "libjava/org/xml/sax/EntityResolver.java", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FEntityResolver.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FEntityResolver.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FEntityResolver.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,110 @@\n+// SAX entity resolver.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: EntityResolver.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+import java.io.IOException;\r\n+\r\n+\r\n+/**\r\n+ * Basic interface for resolving entities.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>If a SAX application needs to implement customized handling\r\n+ * for external entities, it must implement this interface and\r\n+ * register an instance with the SAX driver using the\r\n+ * {@link org.xml.sax.XMLReader#setEntityResolver setEntityResolver}\r\n+ * method.</p>\r\n+ *\r\n+ * <p>The XML reader will then allow the application to intercept any\r\n+ * external entities (including the external DTD subset and external\r\n+ * parameter entities, if any) before including them.</p>\r\n+ *\r\n+ * <p>Many SAX applications will not need to implement this interface,\r\n+ * but it will be especially useful for applications that build\r\n+ * XML documents from databases or other specialised input sources,\r\n+ * or for applications that use URI types other than URLs.</p>\r\n+ *\r\n+ * <p>The following resolver would provide the application\r\n+ * with a special character stream for the entity with the system\r\n+ * identifier \"http://www.myhost.com/today\":</p>\r\n+ *\r\n+ * <pre>\r\n+ * import org.xml.sax.EntityResolver;\r\n+ * import org.xml.sax.InputSource;\r\n+ *\r\n+ * public class MyResolver implements EntityResolver {\r\n+ *   public InputSource resolveEntity (String publicId, String systemId)\r\n+ *   {\r\n+ *     if (systemId.equals(\"http://www.myhost.com/today\")) {\r\n+ *              // return a special input source\r\n+ *       MyReader reader = new MyReader();\r\n+ *       return new InputSource(reader);\r\n+ *     } else {\r\n+ *              // use the default behaviour\r\n+ *       return null;\r\n+ *     }\r\n+ *   }\r\n+ * }\r\n+ * </pre>\r\n+ *\r\n+ * <p>The application can also use this interface to redirect system\r\n+ * identifiers to local URIs or to look up replacements in a catalog\r\n+ * (possibly by using the public identifier).</p>\r\n+ *\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.Parser#setEntityResolver\r\n+ * @see org.xml.sax.InputSource\r\n+ */\r\n+public interface EntityResolver {\r\n+    \r\n+    \r\n+    /**\r\n+     * Allow the application to resolve external entities.\r\n+     *\r\n+     * <p>The Parser will call this method before opening any external\r\n+     * entity except the top-level document entity (including the\r\n+     * external DTD subset, external entities referenced within the\r\n+     * DTD, and external entities referenced within the document\r\n+     * element): the application may request that the parser resolve\r\n+     * the entity itself, that it use an alternative URI, or that it\r\n+     * use an entirely different input source.</p>\r\n+     *\r\n+     * <p>Application writers can use this method to redirect external\r\n+     * system identifiers to secure and/or local URIs, to look up\r\n+     * public identifiers in a catalogue, or to read an entity from a\r\n+     * database or other input source (including, for example, a dialog\r\n+     * box).</p>\r\n+     *\r\n+     * <p>If the system identifier is a URL, the SAX parser must\r\n+     * resolve it fully before reporting it to the application.</p>\r\n+     *\r\n+     * @param publicId The public identifier of the external entity\r\n+     *        being referenced, or null if none was supplied.\r\n+     * @param systemId The system identifier of the external entity\r\n+     *        being referenced.\r\n+     * @return An InputSource object describing the new input source,\r\n+     *         or null to request that the parser open a regular\r\n+     *         URI connection to the system identifier.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @exception java.io.IOException A Java-specific IO exception,\r\n+     *            possibly the result of creating a new InputStream\r\n+     *            or Reader for the InputSource.\r\n+     * @see org.xml.sax.InputSource\r\n+     */\r\n+    public abstract InputSource resolveEntity (String publicId,\r\n+\t\t\t\t\t       String systemId)\r\n+\tthrows SAXException, IOException;\r\n+    \r\n+}\r\n+\r\n+// end of EntityResolver.java\r"}, {"sha": "8b3e090cd6d7ea72a7b23bed409447697e814362", "filename": "libjava/org/xml/sax/ErrorHandler.java", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FErrorHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FErrorHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FErrorHandler.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,123 @@\n+// SAX error handler.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: ErrorHandler.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+\r\n+/**\r\n+ * Basic interface for SAX error handlers.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>If a SAX application needs to implement customized error\r\n+ * handling, it must implement this interface and then register an\r\n+ * instance with the XML reader using the\r\n+ * {@link org.xml.sax.XMLReader#setErrorHandler setErrorHandler}\r\n+ * method.  The parser will then report all errors and warnings\r\n+ * through this interface.</p>\r\n+ *\r\n+ * <p><strong>WARNING:</strong> If an application does <em>not</em>\r\n+ * register an ErrorHandler, XML parsing errors will go unreported\r\n+ * and bizarre behaviour may result.</p>\r\n+ *\r\n+ * <p>For XML processing errors, a SAX driver must use this interface \r\n+ * instead of throwing an exception: it is up to the application \r\n+ * to decide whether to throw an exception for different types of \r\n+ * errors and warnings.  Note, however, that there is no requirement that \r\n+ * the parser continue to provide useful information after a call to \r\n+ * {@link #fatalError fatalError} (in other words, a SAX driver class \r\n+ * could catch an exception and report a fatalError).</p>\r\n+ *\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.Parser#setErrorHandler\r\n+ * @see org.xml.sax.SAXParseException \r\n+ */\r\n+public interface ErrorHandler {\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a warning.\r\n+     *\r\n+     * <p>SAX parsers will use this method to report conditions that\r\n+     * are not errors or fatal errors as defined by the XML 1.0\r\n+     * recommendation.  The default behaviour is to take no action.</p>\r\n+     *\r\n+     * <p>The SAX parser must continue to provide normal parsing events\r\n+     * after invoking this method: it should still be possible for the\r\n+     * application to process the document through to the end.</p>\r\n+     *\r\n+     * <p>Filters may use this method to report other, non-XML warnings\r\n+     * as well.</p>\r\n+     *\r\n+     * @param exception The warning information encapsulated in a\r\n+     *                  SAX parse exception.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.SAXParseException \r\n+     */\r\n+    public abstract void warning (SAXParseException exception)\r\n+\tthrows SAXException;\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a recoverable error.\r\n+     *\r\n+     * <p>This corresponds to the definition of \"error\" in section 1.2\r\n+     * of the W3C XML 1.0 Recommendation.  For example, a validating\r\n+     * parser would use this callback to report the violation of a\r\n+     * validity constraint.  The default behaviour is to take no\r\n+     * action.</p>\r\n+     *\r\n+     * <p>The SAX parser must continue to provide normal parsing events\r\n+     * after invoking this method: it should still be possible for the\r\n+     * application to process the document through to the end.  If the\r\n+     * application cannot do so, then the parser should report a fatal\r\n+     * error even if the XML 1.0 recommendation does not require it to\r\n+     * do so.</p>\r\n+     *\r\n+     * <p>Filters may use this method to report other, non-XML errors\r\n+     * as well.</p>\r\n+     *\r\n+     * @param exception The error information encapsulated in a\r\n+     *                  SAX parse exception.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.SAXParseException \r\n+     */\r\n+    public abstract void error (SAXParseException exception)\r\n+\tthrows SAXException;\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a non-recoverable error.\r\n+     *\r\n+     * <p>This corresponds to the definition of \"fatal error\" in\r\n+     * section 1.2 of the W3C XML 1.0 Recommendation.  For example, a\r\n+     * parser would use this callback to report the violation of a\r\n+     * well-formedness constraint.</p>\r\n+     *\r\n+     * <p>The application must assume that the document is unusable\r\n+     * after the parser has invoked this method, and should continue\r\n+     * (if at all) only for the sake of collecting addition error\r\n+     * messages: in fact, SAX parsers are free to stop reporting any\r\n+     * other events once this method has been invoked.</p>\r\n+     *\r\n+     * @param exception The error information encapsulated in a\r\n+     *                  SAX parse exception.  \r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.SAXParseException\r\n+     */\r\n+    public abstract void fatalError (SAXParseException exception)\r\n+\tthrows SAXException;\r\n+    \r\n+}\r\n+\r\n+// end of ErrorHandler.java\r"}, {"sha": "297aced7aaa12d7bb31146b2ec9349e445a1c74f", "filename": "libjava/org/xml/sax/HandlerBase.java", "status": "added", "additions": 368, "deletions": 0, "changes": 368, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FHandlerBase.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FHandlerBase.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FHandlerBase.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,368 @@\n+// SAX default handler base class.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: HandlerBase.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+/**\r\n+ * Default base class for handlers.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This class implements the default behaviour for four SAX1\r\n+ * interfaces: EntityResolver, DTDHandler, DocumentHandler,\r\n+ * and ErrorHandler.  It is now obsolete, but is included in SAX2 to\r\n+ * support legacy SAX1 applications.  SAX2 applications should use\r\n+ * the {@link org.xml.sax.helpers.DefaultHandler DefaultHandler}\r\n+ * class instead.</p>\r\n+ *\r\n+ * <p>Application writers can extend this class when they need to\r\n+ * implement only part of an interface; parser writers can\r\n+ * instantiate this class to provide default handlers when the\r\n+ * application has not supplied its own.</p>\r\n+ *\r\n+ * <p>Note that the use of this class is optional.</p>\r\n+ *\r\n+ * @deprecated This class works with the deprecated\r\n+ *             {@link org.xml.sax.DocumentHandler DocumentHandler}\r\n+ *             interface.  It has been replaced by the SAX2\r\n+ *             {@link org.xml.sax.helpers.DefaultHandler DefaultHandler}\r\n+ *             class.\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.EntityResolver\r\n+ * @see org.xml.sax.DTDHandler\r\n+ * @see org.xml.sax.DocumentHandler\r\n+ * @see org.xml.sax.ErrorHandler\r\n+ */\r\n+public class HandlerBase\r\n+    implements EntityResolver, DTDHandler, DocumentHandler, ErrorHandler\r\n+{\r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Default implementation of the EntityResolver interface.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    /**\r\n+     * Resolve an external entity.\r\n+     *\r\n+     * <p>Always return null, so that the parser will use the system\r\n+     * identifier provided in the XML document.  This method implements\r\n+     * the SAX default behaviour: application writers can override it\r\n+     * in a subclass to do special translations such as catalog lookups\r\n+     * or URI redirection.</p>\r\n+     *\r\n+     * @param publicId The public identifer, or null if none is\r\n+     *                 available.\r\n+     * @param systemId The system identifier provided in the XML \r\n+     *                 document.\r\n+     * @return The new input source, or null to require the\r\n+     *         default behaviour.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.EntityResolver#resolveEntity\r\n+     */\r\n+    public InputSource resolveEntity (String publicId, String systemId)\r\n+\tthrows SAXException\r\n+    {\r\n+\treturn null;\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Default implementation of DTDHandler interface.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a notation declaration.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass if they wish to keep track of the notations\r\n+     * declared in a document.</p>\r\n+     *\r\n+     * @param name The notation name.\r\n+     * @param publicId The notation public identifier, or null if not\r\n+     *                 available.\r\n+     * @param systemId The notation system identifier.\r\n+     * @see org.xml.sax.DTDHandler#notationDecl\r\n+     */\r\n+    public void notationDecl (String name, String publicId, String systemId)\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of an unparsed entity declaration.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to keep track of the unparsed entities\r\n+     * declared in a document.</p>\r\n+     *\r\n+     * @param name The entity name.\r\n+     * @param publicId The entity public identifier, or null if not\r\n+     *                 available.\r\n+     * @param systemId The entity system identifier.\r\n+     * @param notationName The name of the associated notation.\r\n+     * @see org.xml.sax.DTDHandler#unparsedEntityDecl\r\n+     */\r\n+    public void unparsedEntityDecl (String name, String publicId,\r\n+\t\t\t\t    String systemId, String notationName)\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Default implementation of DocumentHandler interface.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive a Locator object for document events.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass if they wish to store the locator for use\r\n+     * with other document events.</p>\r\n+     *\r\n+     * @param locator A locator for all SAX document events.\r\n+     * @see org.xml.sax.DocumentHandler#setDocumentLocator\r\n+     * @see org.xml.sax.Locator\r\n+     */\r\n+    public void setDocumentLocator (Locator locator)\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of the beginning of the document.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions at the beginning\r\n+     * of a document (such as allocating the root node of a tree or\r\n+     * creating an output file).</p>\r\n+     *\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.DocumentHandler#startDocument\r\n+     */\r\n+    public void startDocument ()\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of the end of the document.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions at the beginning\r\n+     * of a document (such as finalising a tree or closing an output\r\n+     * file).</p>\r\n+     *\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.DocumentHandler#endDocument\r\n+     */\r\n+    public void endDocument ()\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of the start of an element.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions at the start of\r\n+     * each element (such as allocating a new tree node or writing\r\n+     * output to a file).</p>\r\n+     *\r\n+     * @param name The element type name.\r\n+     * @param attributes The specified or defaulted attributes.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.DocumentHandler#startElement\r\n+     */\r\n+    public void startElement (String name, AttributeList attributes)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of the end of an element.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions at the end of\r\n+     * each element (such as finalising a tree node or writing\r\n+     * output to a file).</p>\r\n+     *\r\n+     * @param name The element type name.\r\n+     * @param attributes The specified or defaulted attributes.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.DocumentHandler#endElement\r\n+     */\r\n+    public void endElement (String name)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of character data inside an element.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method to take specific actions for each chunk of character data\r\n+     * (such as adding the data to a node or buffer, or printing it to\r\n+     * a file).</p>\r\n+     *\r\n+     * @param ch The characters.\r\n+     * @param start The start position in the character array.\r\n+     * @param length The number of characters to use from the\r\n+     *               character array.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.DocumentHandler#characters\r\n+     */\r\n+    public void characters (char ch[], int start, int length)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of ignorable whitespace in element content.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method to take specific actions for each chunk of ignorable\r\n+     * whitespace (such as adding data to a node or buffer, or printing\r\n+     * it to a file).</p>\r\n+     *\r\n+     * @param ch The whitespace characters.\r\n+     * @param start The start position in the character array.\r\n+     * @param length The number of characters to use from the\r\n+     *               character array.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.DocumentHandler#ignorableWhitespace\r\n+     */\r\n+    public void ignorableWhitespace (char ch[], int start, int length)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a processing instruction.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions for each\r\n+     * processing instruction, such as setting status variables or\r\n+     * invoking other methods.</p>\r\n+     *\r\n+     * @param target The processing instruction target.\r\n+     * @param data The processing instruction data, or null if\r\n+     *             none is supplied.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.DocumentHandler#processingInstruction\r\n+     */\r\n+    public void processingInstruction (String target, String data)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Default implementation of the ErrorHandler interface.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a parser warning.\r\n+     *\r\n+     * <p>The default implementation does nothing.  Application writers\r\n+     * may override this method in a subclass to take specific actions\r\n+     * for each warning, such as inserting the message in a log file or\r\n+     * printing it to the console.</p>\r\n+     *\r\n+     * @param e The warning information encoded as an exception.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ErrorHandler#warning\r\n+     * @see org.xml.sax.SAXParseException\r\n+     */\r\n+    public void warning (SAXParseException e)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a recoverable parser error.\r\n+     *\r\n+     * <p>The default implementation does nothing.  Application writers\r\n+     * may override this method in a subclass to take specific actions\r\n+     * for each error, such as inserting the message in a log file or\r\n+     * printing it to the console.</p>\r\n+     *\r\n+     * @param e The warning information encoded as an exception.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ErrorHandler#warning\r\n+     * @see org.xml.sax.SAXParseException\r\n+     */\r\n+    public void error (SAXParseException e)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Report a fatal XML parsing error.\r\n+     *\r\n+     * <p>The default implementation throws a SAXParseException.\r\n+     * Application writers may override this method in a subclass if\r\n+     * they need to take specific actions for each fatal error (such as\r\n+     * collecting all of the errors into a single report): in any case,\r\n+     * the application must stop all regular processing when this\r\n+     * method is invoked, since the document is no longer reliable, and\r\n+     * the parser may no longer report parsing events.</p>\r\n+     *\r\n+     * @param e The error information encoded as an exception.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ErrorHandler#fatalError\r\n+     * @see org.xml.sax.SAXParseException\r\n+     */\r\n+    public void fatalError (SAXParseException e)\r\n+\tthrows SAXException\r\n+    {\r\n+\tthrow e;\r\n+    }\r\n+    \r\n+}\r\n+\r\n+// end of HandlerBase.java\r"}, {"sha": "985ca220387c4c79eeb051cc4be9870929c324ff", "filename": "libjava/org/xml/sax/InputSource.java", "status": "added", "additions": 321, "deletions": 0, "changes": 321, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FInputSource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FInputSource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FInputSource.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,321 @@\n+// SAX input source.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: InputSource.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+import java.io.Reader;\r\n+import java.io.InputStream;\r\n+\r\n+/**\r\n+ * A single input source for an XML entity.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This class allows a SAX application to encapsulate information\r\n+ * about an input source in a single object, which may include\r\n+ * a public identifier, a system identifier, a byte stream (possibly\r\n+ * with a specified encoding), and/or a character stream.</p>\r\n+ *\r\n+ * <p>There are two places that the application will deliver this\r\n+ * input source to the parser: as the argument to the Parser.parse\r\n+ * method, or as the return value of the EntityResolver.resolveEntity\r\n+ * method.</p>\r\n+ *\r\n+ * <p>The SAX parser will use the InputSource object to determine how\r\n+ * to read XML input.  If there is a character stream available, the\r\n+ * parser will read that stream directly; if not, the parser will use\r\n+ * a byte stream, if available; if neither a character stream nor a\r\n+ * byte stream is available, the parser will attempt to open a URI\r\n+ * connection to the resource identified by the system\r\n+ * identifier.</p>\r\n+ *\r\n+ * <p>An InputSource object belongs to the application: the SAX parser\r\n+ * shall never modify it in any way (it may modify a copy if \r\n+ * necessary).</p>\r\n+ *\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.Parser#parse\r\n+ * @see org.xml.sax.EntityResolver#resolveEntity\r\n+ * @see java.io.InputStream\r\n+ * @see java.io.Reader\r\n+ */\r\n+public class InputSource {\r\n+    \r\n+    /**\r\n+     * Zero-argument default constructor.\r\n+     *\r\n+     * @see #setPublicId\r\n+     * @see #setSystemId\r\n+     * @see #setByteStream\r\n+     * @see #setCharacterStream\r\n+     * @see #setEncoding\r\n+     */\r\n+    public InputSource ()\r\n+    {\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Create a new input source with a system identifier.\r\n+     *\r\n+     * <p>Applications may use setPublicId to include a \r\n+     * public identifier as well, or setEncoding to specify\r\n+     * the character encoding, if known.</p>\r\n+     *\r\n+     * <p>If the system identifier is a URL, it must be full resolved.</p>\r\n+     *\r\n+     * @param systemId The system identifier (URI).\r\n+     * @see #setPublicId\r\n+     * @see #setSystemId\r\n+     * @see #setByteStream\r\n+     * @see #setEncoding\r\n+     * @see #setCharacterStream\r\n+     */\r\n+    public InputSource (String systemId)\r\n+    {\r\n+\tsetSystemId(systemId);\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Create a new input source with a byte stream.\r\n+     *\r\n+     * <p>Application writers may use setSystemId to provide a base \r\n+     * for resolving relative URIs, setPublicId to include a \r\n+     * public identifier, and/or setEncoding to specify the object's\r\n+     * character encoding.</p>\r\n+     *\r\n+     * @param byteStream The raw byte stream containing the document.\r\n+     * @see #setPublicId\r\n+     * @see #setSystemId\r\n+     * @see #setEncoding\r\n+     * @see #setByteStream\r\n+     * @see #setCharacterStream\r\n+     */\r\n+    public InputSource (InputStream byteStream)\r\n+    {\r\n+\tsetByteStream(byteStream);\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Create a new input source with a character stream.\r\n+     *\r\n+     * <p>Application writers may use setSystemId() to provide a base \r\n+     * for resolving relative URIs, and setPublicId to include a \r\n+     * public identifier.</p>\r\n+     *\r\n+     * <p>The character stream shall not include a byte order mark.</p>\r\n+     *\r\n+     * @see #setPublicId\r\n+     * @see #setSystemId\r\n+     * @see #setByteStream\r\n+     * @see #setCharacterStream\r\n+     */\r\n+    public InputSource (Reader characterStream)\r\n+    {\r\n+\tsetCharacterStream(characterStream);\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Set the public identifier for this input source.\r\n+     *\r\n+     * <p>The public identifier is always optional: if the application\r\n+     * writer includes one, it will be provided as part of the\r\n+     * location information.</p>\r\n+     *\r\n+     * @param publicId The public identifier as a string.\r\n+     * @see #getPublicId\r\n+     * @see org.xml.sax.Locator#getPublicId\r\n+     * @see org.xml.sax.SAXParseException#getPublicId\r\n+     */\r\n+    public void setPublicId (String publicId)\r\n+    {\r\n+\tthis.publicId = publicId;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Get the public identifier for this input source.\r\n+     *\r\n+     * @return The public identifier, or null if none was supplied.\r\n+     * @see #setPublicId\r\n+     */\r\n+    public String getPublicId ()\r\n+    {\r\n+\treturn publicId;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Set the system identifier for this input source.\r\n+     *\r\n+     * <p>The system identifier is optional if there is a byte stream\r\n+     * or a character stream, but it is still useful to provide one,\r\n+     * since the application can use it to resolve relative URIs\r\n+     * and can include it in error messages and warnings (the parser\r\n+     * will attempt to open a connection to the URI only if\r\n+     * there is no byte stream or character stream specified).</p>\r\n+     *\r\n+     * <p>If the application knows the character encoding of the\r\n+     * object pointed to by the system identifier, it can register\r\n+     * the encoding using the setEncoding method.</p>\r\n+     *\r\n+     * <p>If the system ID is a URL, it must be fully resolved.</p>\r\n+     *\r\n+     * @param systemId The system identifier as a string.\r\n+     * @see #setEncoding\r\n+     * @see #getSystemId\r\n+     * @see org.xml.sax.Locator#getSystemId\r\n+     * @see org.xml.sax.SAXParseException#getSystemId\r\n+     */\r\n+    public void setSystemId (String systemId)\r\n+    {\r\n+\tthis.systemId = systemId;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Get the system identifier for this input source.\r\n+     *\r\n+     * <p>The getEncoding method will return the character encoding\r\n+     * of the object pointed to, or null if unknown.</p>\r\n+     *\r\n+     * <p>If the system ID is a URL, it will be fully resolved.</p>\r\n+     *\r\n+     * @return The system identifier.\r\n+     * @see #setSystemId\r\n+     * @see #getEncoding\r\n+     */\r\n+    public String getSystemId ()\r\n+    {\r\n+\treturn systemId;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Set the byte stream for this input source.\r\n+     *\r\n+     * <p>The SAX parser will ignore this if there is also a character\r\n+     * stream specified, but it will use a byte stream in preference\r\n+     * to opening a URI connection itself.</p>\r\n+     *\r\n+     * <p>If the application knows the character encoding of the\r\n+     * byte stream, it should set it with the setEncoding method.</p>\r\n+     *\r\n+     * @param byteStream A byte stream containing an XML document or\r\n+     *        other entity.\r\n+     * @see #setEncoding\r\n+     * @see #getByteStream\r\n+     * @see #getEncoding\r\n+     * @see java.io.InputStream\r\n+     */\r\n+    public void setByteStream (InputStream byteStream)\r\n+    {\r\n+\tthis.byteStream = byteStream;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Get the byte stream for this input source.\r\n+     *\r\n+     * <p>The getEncoding method will return the character\r\n+     * encoding for this byte stream, or null if unknown.</p>\r\n+     *\r\n+     * @return The byte stream, or null if none was supplied.\r\n+     * @see #getEncoding\r\n+     * @see #setByteStream\r\n+     */\r\n+    public InputStream getByteStream ()\r\n+    {\r\n+\treturn byteStream;\r\n+    }\r\n+    \r\n+    \r\n+    /** \r\n+     * Set the character encoding, if known.\r\n+     *\r\n+     * <p>The encoding must be a string acceptable for an\r\n+     * XML encoding declaration (see section 4.3.3 of the XML 1.0\r\n+     * recommendation).</p>\r\n+     *\r\n+     * <p>This method has no effect when the application provides a\r\n+     * character stream.</p>\r\n+     *\r\n+     * @param encoding A string describing the character encoding.\r\n+     * @see #setSystemId\r\n+     * @see #setByteStream\r\n+     * @see #getEncoding\r\n+     */\r\n+    public void setEncoding (String encoding)\r\n+    {\r\n+\tthis.encoding = encoding;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Get the character encoding for a byte stream or URI.\r\n+     *\r\n+     * @return The encoding, or null if none was supplied.\r\n+     * @see #setByteStream\r\n+     * @see #getSystemId\r\n+     * @see #getByteStream\r\n+     */\r\n+    public String getEncoding ()\r\n+    {\r\n+\treturn encoding;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Set the character stream for this input source.\r\n+     *\r\n+     * <p>If there is a character stream specified, the SAX parser\r\n+     * will ignore any byte stream and will not attempt to open\r\n+     * a URI connection to the system identifier.</p>\r\n+     *\r\n+     * @param characterStream The character stream containing the\r\n+     *        XML document or other entity.\r\n+     * @see #getCharacterStream\r\n+     * @see java.io.Reader\r\n+     */\r\n+    public void setCharacterStream (Reader characterStream)\r\n+    {\r\n+\tthis.characterStream = characterStream;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Get the character stream for this input source.\r\n+     *\r\n+     * @return The character stream, or null if none was supplied.\r\n+     * @see #setCharacterStream\r\n+     */\r\n+    public Reader getCharacterStream ()\r\n+    {\r\n+\treturn characterStream;\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal state.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    private String publicId;\r\n+    private String systemId;\r\n+    private InputStream byteStream;\r\n+    private String encoding;\r\n+    private Reader characterStream;\r\n+    \r\n+}\r\n+\r\n+// end of InputSource.java\r"}, {"sha": "be55656042e9b94153877031de0d13bea9b1e330", "filename": "libjava/org/xml/sax/Locator.java", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FLocator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FLocator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FLocator.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,126 @@\n+// SAX locator interface for document events.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: Locator.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+\r\n+/**\r\n+ * Interface for associating a SAX event with a document location.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>If a SAX parser provides location information to the SAX\r\n+ * application, it does so by implementing this interface and then\r\n+ * passing an instance to the application using the content\r\n+ * handler's {@link org.xml.sax.ContentHandler#setDocumentLocator\r\n+ * setDocumentLocator} method.  The application can use the\r\n+ * object to obtain the location of any other content handler event\r\n+ * in the XML source document.</p>\r\n+ *\r\n+ * <p>Note that the results returned by the object will be valid only\r\n+ * during the scope of each content handler method: the application\r\n+ * will receive unpredictable results if it attempts to use the\r\n+ * locator at any other time.</p>\r\n+ *\r\n+ * <p>SAX parsers are not required to supply a locator, but they are\r\n+ * very strongly encouraged to do so.  If the parser supplies a\r\n+ * locator, it must do so before reporting any other document events.\r\n+ * If no locator has been set by the time the application receives\r\n+ * the {@link org.xml.sax.ContentHandler#startDocument startDocument}\r\n+ * event, the application should assume that a locator is not \r\n+ * available.</p>\r\n+ *\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.ContentHandler#setDocumentLocator \r\n+ */\r\n+public interface Locator {\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the public identifier for the current document event.\r\n+     *\r\n+     * <p>The return value is the public identifier of the document\r\n+     * entity or of the external parsed entity in which the markup\r\n+     * triggering the event appears.</p>\r\n+     *\r\n+     * @return A string containing the public identifier, or\r\n+     *         null if none is available.\r\n+     * @see #getSystemId\r\n+     */\r\n+    public abstract String getPublicId ();\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the system identifier for the current document event.\r\n+     *\r\n+     * <p>The return value is the system identifier of the document\r\n+     * entity or of the external parsed entity in which the markup\r\n+     * triggering the event appears.</p>\r\n+     *\r\n+     * <p>If the system identifier is a URL, the parser must resolve it\r\n+     * fully before passing it to the application.</p>\r\n+     *\r\n+     * @return A string containing the system identifier, or null\r\n+     *         if none is available.\r\n+     * @see #getPublicId\r\n+     */\r\n+    public abstract String getSystemId ();\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the line number where the current document event ends.\r\n+     *\r\n+     * <p><strong>Warning:</strong> The return value from the method\r\n+     * is intended only as an approximation for the sake of error\r\n+     * reporting; it is not intended to provide sufficient information\r\n+     * to edit the character content of the original XML document.</p>\r\n+     *\r\n+     * <p>The return value is an approximation of the line number\r\n+     * in the document entity or external parsed entity where the\r\n+     * markup triggering the event appears.</p>\r\n+     *\r\n+     * <p>If possible, the SAX driver should provide the line position \r\n+     * of the first character after the text associated with the document \r\n+     * event.  The first line in the document is line 1.</p>\r\n+     *\r\n+     * @return The line number, or -1 if none is available.\r\n+     * @see #getColumnNumber\r\n+     */\r\n+    public abstract int getLineNumber ();\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the column number where the current document event ends.\r\n+     *\r\n+     * <p><strong>Warning:</strong> The return value from the method\r\n+     * is intended only as an approximation for the sake of error\r\n+     * reporting; it is not intended to provide sufficient information\r\n+     * to edit the character content of the original XML document.</p>\r\n+     *\r\n+     * <p>The return value is an approximation of the column number\r\n+     * in the document entity or external parsed entity where the\r\n+     * markup triggering the event appears.</p>\r\n+     *\r\n+     * <p>If possible, the SAX driver should provide the line position \r\n+     * of the first character after the text associated with the document \r\n+     * event.</p>\r\n+     *\r\n+     * <p>If possible, the SAX driver should provide the line position \r\n+     * of the first character after the text associated with the document \r\n+     * event.  The first column in each line is column 1.</p>\r\n+     *\r\n+     * @return The column number, or -1 if none is available.\r\n+     * @see #getLineNumber\r\n+     */\r\n+    public abstract int getColumnNumber ();\r\n+    \r\n+}\r\n+\r\n+// end of Locator.java\r"}, {"sha": "e775ca97c870dbaf24cfb15ef4cfb86f6b03e9f5", "filename": "libjava/org/xml/sax/Parser.java", "status": "added", "additions": 207, "deletions": 0, "changes": 207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FParser.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,207 @@\n+// SAX parser interface.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: Parser.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+import java.io.IOException;\r\n+import java.util.Locale;\r\n+\r\n+\r\n+/**\r\n+ * Basic interface for SAX (Simple API for XML) parsers.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This was the main event supplier interface for SAX1; it has\r\n+ * been replaced in SAX2 by {@link org.xml.sax.XMLReader XMLReader},\r\n+ * which includes Namespace support and sophisticated configurability\r\n+ * and extensibility.</p>\r\n+ *\r\n+ * <p>All SAX1 parsers must implement this basic interface: it allows\r\n+ * applications to register handlers for different types of events\r\n+ * and to initiate a parse from a URI, or a character stream.</p>\r\n+ *\r\n+ * <p>All SAX1 parsers must also implement a zero-argument constructor\r\n+ * (though other constructors are also allowed).</p>\r\n+ *\r\n+ * <p>SAX1 parsers are reusable but not re-entrant: the application\r\n+ * may reuse a parser object (possibly with a different input source)\r\n+ * once the first parse has completed successfully, but it may not\r\n+ * invoke the parse() methods recursively within a parse.</p>\r\n+ *\r\n+ * @deprecated This interface has been replaced by the SAX2\r\n+ *             {@link org.xml.sax.XMLReader XMLReader}\r\n+ *             interface, which includes Namespace support.\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.EntityResolver\r\n+ * @see org.xml.sax.DTDHandler\r\n+ * @see org.xml.sax.DocumentHandler\r\n+ * @see org.xml.sax.ErrorHandler\r\n+ * @see org.xml.sax.HandlerBase\r\n+ * @see org.xml.sax.InputSource\r\n+ */\r\n+public interface Parser \r\n+{\r\n+    \r\n+    /**\r\n+     * Allow an application to request a locale for errors and warnings.\r\n+     *\r\n+     * <p>SAX parsers are not required to provide localisation for errors\r\n+     * and warnings; if they cannot support the requested locale,\r\n+     * however, they must throw a SAX exception.  Applications may\r\n+     * not request a locale change in the middle of a parse.</p>\r\n+     *\r\n+     * @param locale A Java Locale object.\r\n+     * @exception org.xml.sax.SAXException Throws an exception\r\n+     *            (using the previous or default locale) if the \r\n+     *            requested locale is not supported.\r\n+     * @see org.xml.sax.SAXException\r\n+     * @see org.xml.sax.SAXParseException\r\n+     */\r\n+    public abstract void setLocale (Locale locale)\r\n+\tthrows SAXException;\r\n+    \r\n+    \r\n+    /**\r\n+     * Allow an application to register a custom entity resolver.\r\n+     *\r\n+     * <p>If the application does not register an entity resolver, the\r\n+     * SAX parser will resolve system identifiers and open connections\r\n+     * to entities itself (this is the default behaviour implemented in\r\n+     * HandlerBase).</p>\r\n+     *\r\n+     * <p>Applications may register a new or different entity resolver\r\n+     * in the middle of a parse, and the SAX parser must begin using\r\n+     * the new resolver immediately.</p>\r\n+     *\r\n+     * @param resolver The object for resolving entities.\r\n+     * @see EntityResolver\r\n+     * @see HandlerBase\r\n+     */\r\n+    public abstract void setEntityResolver (EntityResolver resolver);\r\n+    \r\n+    \r\n+    /**\r\n+     * Allow an application to register a DTD event handler.\r\n+     *\r\n+     * <p>If the application does not register a DTD handler, all DTD\r\n+     * events reported by the SAX parser will be silently\r\n+     * ignored (this is the default behaviour implemented by\r\n+     * HandlerBase).</p>\r\n+     *\r\n+     * <p>Applications may register a new or different\r\n+     * handler in the middle of a parse, and the SAX parser must\r\n+     * begin using the new handler immediately.</p>\r\n+     *\r\n+     * @param handler The DTD handler.\r\n+     * @see DTDHandler\r\n+     * @see HandlerBase\r\n+     */\r\n+    public abstract void setDTDHandler (DTDHandler handler);\r\n+    \r\n+    \r\n+    /**\r\n+     * Allow an application to register a document event handler.\r\n+     *\r\n+     * <p>If the application does not register a document handler, all\r\n+     * document events reported by the SAX parser will be silently\r\n+     * ignored (this is the default behaviour implemented by\r\n+     * HandlerBase).</p>\r\n+     *\r\n+     * <p>Applications may register a new or different handler in the\r\n+     * middle of a parse, and the SAX parser must begin using the new\r\n+     * handler immediately.</p>\r\n+     *\r\n+     * @param handler The document handler.\r\n+     * @see DocumentHandler\r\n+     * @see HandlerBase\r\n+     */\r\n+    public abstract void setDocumentHandler (DocumentHandler handler);\r\n+    \r\n+    \r\n+    /**\r\n+     * Allow an application to register an error event handler.\r\n+     *\r\n+     * <p>If the application does not register an error event handler,\r\n+     * all error events reported by the SAX parser will be silently\r\n+     * ignored, except for fatalError, which will throw a SAXException\r\n+     * (this is the default behaviour implemented by HandlerBase).</p>\r\n+     *\r\n+     * <p>Applications may register a new or different handler in the\r\n+     * middle of a parse, and the SAX parser must begin using the new\r\n+     * handler immediately.</p>\r\n+     *\r\n+     * @param handler The error handler.\r\n+     * @see ErrorHandler\r\n+     * @see SAXException\r\n+     * @see HandlerBase\r\n+     */\r\n+    public abstract void setErrorHandler (ErrorHandler handler);\r\n+    \r\n+    \r\n+    /**\r\n+     * Parse an XML document.\r\n+     *\r\n+     * <p>The application can use this method to instruct the SAX parser\r\n+     * to begin parsing an XML document from any valid input\r\n+     * source (a character stream, a byte stream, or a URI).</p>\r\n+     *\r\n+     * <p>Applications may not invoke this method while a parse is in\r\n+     * progress (they should create a new Parser instead for each\r\n+     * additional XML document).  Once a parse is complete, an\r\n+     * application may reuse the same Parser object, possibly with a\r\n+     * different input source.</p>\r\n+     *\r\n+     * @param source The input source for the top-level of the\r\n+     *        XML document.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @exception java.io.IOException An IO exception from the parser,\r\n+     *            possibly from a byte stream or character stream\r\n+     *            supplied by the application.\r\n+     * @see org.xml.sax.InputSource\r\n+     * @see #parse(java.lang.String)\r\n+     * @see #setEntityResolver\r\n+     * @see #setDTDHandler\r\n+     * @see #setDocumentHandler\r\n+     * @see #setErrorHandler\r\n+     */\r\n+    public abstract void parse (InputSource source)\r\n+\tthrows SAXException, IOException;\r\n+    \r\n+    \r\n+    /**\r\n+     * Parse an XML document from a system identifier (URI).\r\n+     *\r\n+     * <p>This method is a shortcut for the common case of reading a\r\n+     * document from a system identifier.  It is the exact\r\n+     * equivalent of the following:</p>\r\n+     *\r\n+     * <pre>\r\n+     * parse(new InputSource(systemId));\r\n+     * </pre>\r\n+     *\r\n+     * <p>If the system identifier is a URL, it must be fully resolved\r\n+     * by the application before it is passed to the parser.</p>\r\n+     *\r\n+     * @param systemId The system identifier (URI).\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @exception java.io.IOException An IO exception from the parser,\r\n+     *            possibly from a byte stream or character stream\r\n+     *            supplied by the application.\r\n+     * @see #parse(org.xml.sax.InputSource)\r\n+     */\r\n+    public abstract void parse (String systemId)\r\n+\tthrows SAXException, IOException;\r\n+    \r\n+}\r\n+\r\n+// end of Parser.java\r"}, {"sha": "69537e91706cdaa1b24f5a461a50590fc253cf3b", "filename": "libjava/org/xml/sax/SAXException.java", "status": "added", "additions": 144, "deletions": 0, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FSAXException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FSAXException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FSAXException.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,144 @@\n+// SAX exception class.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: SAXException.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+/**\r\n+ * Encapsulate a general SAX error or warning.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This class can contain basic error or warning information from\r\n+ * either the XML parser or the application: a parser writer or\r\n+ * application writer can subclass it to provide additional\r\n+ * functionality.  SAX handlers may throw this exception or\r\n+ * any exception subclassed from it.</p>\r\n+ *\r\n+ * <p>If the application needs to pass through other types of\r\n+ * exceptions, it must wrap those exceptions in a SAXException\r\n+ * or an exception derived from a SAXException.</p>\r\n+ *\r\n+ * <p>If the parser or application needs to include information about a\r\n+ * specific location in an XML document, it should use the\r\n+ * {@link org.xml.sax.SAXParseException SAXParseException} subclass.</p>\r\n+ *\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.SAXParseException\r\n+ */\r\n+public class SAXException extends Exception {\r\n+    \r\n+    \r\n+    /**\r\n+     * Create a new SAXException.\r\n+     *\r\n+     * @param message The error or warning message.\r\n+     * @see org.xml.sax.Parser#setLocale\r\n+     */\r\n+    public SAXException (String message) {\r\n+\tsuper(message);\r\n+\tthis.exception = null;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Create a new SAXException wrapping an existing exception.\r\n+     *\r\n+     * <p>The existing exception will be embedded in the new\r\n+     * one, and its message will become the default message for\r\n+     * the SAXException.</p>\r\n+     *\r\n+     * @param e The exception to be wrapped in a SAXException.\r\n+     */\r\n+    public SAXException (Exception e)\r\n+    {\r\n+\tsuper();\r\n+\tthis.exception = e;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Create a new SAXException from an existing exception.\r\n+     *\r\n+     * <p>The existing exception will be embedded in the new\r\n+     * one, but the new exception will have its own message.</p>\r\n+     *\r\n+     * @param message The detail message.\r\n+     * @param e The exception to be wrapped in a SAXException.\r\n+     * @see org.xml.sax.Parser#setLocale\r\n+     */\r\n+    public SAXException (String message, Exception e)\r\n+    {\r\n+\tsuper(message);\r\n+\tthis.exception = e;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Return a detail message for this exception.\r\n+     *\r\n+     * <p>If there is an embedded exception, and if the SAXException\r\n+     * has no detail message of its own, this method will return\r\n+     * the detail message from the embedded exception.</p>\r\n+     *\r\n+     * @return The error or warning message.\r\n+     * @see org.xml.sax.Parser#setLocale\r\n+     */\r\n+    public String getMessage ()\r\n+    {\r\n+\tString message = super.getMessage();\r\n+\t\r\n+\tif (message == null && exception != null) {\r\n+\t    return exception.getMessage();\r\n+\t} else {\r\n+\t    return message;\r\n+\t}\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the embedded exception, if any.\r\n+     *\r\n+     * @return The embedded exception, or null if there is none.\r\n+     */\r\n+    public Exception getException ()\r\n+    {\r\n+\treturn exception;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Override toString to pick up any embedded exception.\r\n+     *\r\n+     * @return A string representation of this exception.\r\n+     */\r\n+    public String toString ()\r\n+    {\r\n+\tif (exception != null) {\r\n+\t    return exception.toString();\r\n+\t} else {\r\n+\t    return super.toString();\r\n+\t}\r\n+    }\r\n+    \r\n+    \r\n+    \f\r\n+    //////////////////////////////////////////////////////////////////////\r\n+    // Internal state.\r\n+    //////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * @serial The embedded exception if tunnelling, or null.\r\n+     */    \r\n+    private Exception exception;\r\n+    \r\n+}\r\n+\r\n+// end of SAXException.java\r"}, {"sha": "0fbc4c85ba95ae74ddfbeb728ce66b4bc9a51e9a", "filename": "libjava/org/xml/sax/SAXNotRecognizedException.java", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FSAXNotRecognizedException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FSAXNotRecognizedException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FSAXNotRecognizedException.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,44 @@\n+// SAXNotRecognizedException.java - unrecognized feature or value.\r\n+// Written by David Megginson, sax@megginson.com\r\n+// NO WARRANTY!  This class is in the Public Domain.\r\n+\r\n+// $Id: SAXNotRecognizedException.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+\r\n+package org.xml.sax;\r\n+\r\n+\r\n+/**\r\n+ * Exception class for an unrecognized identifier.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>An XMLReader will throw this exception when it finds an\r\n+ * unrecognized feature or property identifier; SAX applications and\r\n+ * extensions may use this class for other, similar purposes.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.SAXNotSupportedException\r\n+ */\r\n+public class SAXNotRecognizedException extends SAXException\r\n+{\r\n+\r\n+    /**\r\n+     * Construct a new exception with the given message.\r\n+     *\r\n+     * @param message The text message of the exception.\r\n+     */\r\n+    public SAXNotRecognizedException (String message)\r\n+    {\r\n+\tsuper(message);\r\n+    }\r\n+\r\n+}\r\n+\r\n+// end of SAXNotRecognizedException.java\r"}, {"sha": "3376d47cc5b7a293af712590d1c9dc9f58e8ebae", "filename": "libjava/org/xml/sax/SAXNotSupportedException.java", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FSAXNotSupportedException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FSAXNotSupportedException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FSAXNotSupportedException.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,44 @@\n+// SAXNotSupportedException.java - unsupported feature or value.\r\n+// Written by David Megginson, sax@megginson.com\r\n+// NO WARRANTY!  This class is in the Public Domain.\r\n+\r\n+// $Id: SAXNotSupportedException.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+\r\n+package org.xml.sax;\r\n+\r\n+/**\r\n+ * Exception class for an unsupported operation.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>An XMLReader will throw this exception when it recognizes a\r\n+ * feature or property identifier, but cannot perform the requested\r\n+ * operation (setting a state or value).  Other SAX2 applications and\r\n+ * extensions may use this class for similar purposes.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.SAXNotRecognizedException \r\n+ */\r\n+public class SAXNotSupportedException extends SAXException\r\n+{\r\n+\r\n+    /**\r\n+     * Construct a new exception with the given message.\r\n+     *\r\n+     * @param message The text message of the exception.\r\n+     */\r\n+    public SAXNotSupportedException (String message)\r\n+    {\r\n+\tsuper(message);\r\n+    }\r\n+\r\n+}\r\n+\r\n+// end of SAXNotSupportedException.java\r"}, {"sha": "bcfb94ebd2598e943e120c03eb345237ffa6d975", "filename": "libjava/org/xml/sax/SAXParseException.java", "status": "added", "additions": 264, "deletions": 0, "changes": 264, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FSAXParseException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FSAXParseException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FSAXParseException.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,264 @@\n+// SAX exception class.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: SAXParseException.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+/**\r\n+ * Encapsulate an XML parse error or warning.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This exception will include information for locating the error\r\n+ * in the original XML document.  Note that although the application\r\n+ * will receive a SAXParseException as the argument to the handlers\r\n+ * in the {@link org.xml.sax.ErrorHandler ErrorHandler} interface, \r\n+ * the application is not actually required to throw the exception; \r\n+ * instead, it can simply read the information in it and take a \r\n+ * different action.</p>\r\n+ *\r\n+ * <p>Since this exception is a subclass of {@link org.xml.sax.SAXException \r\n+ * SAXException}, it inherits the ability to wrap another exception.</p>\r\n+ *\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.SAXException\r\n+ * @see org.xml.sax.Locator\r\n+ * @see org.xml.sax.ErrorHandler\r\n+ */\r\n+public class SAXParseException extends SAXException {\r\n+    \r\n+    \f\r\n+    //////////////////////////////////////////////////////////////////////\r\n+    // Constructors.\r\n+    //////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Create a new SAXParseException from a message and a Locator.\r\n+     *\r\n+     * <p>This constructor is especially useful when an application is\r\n+     * creating its own exception from within a {@link org.xml.sax.ContentHandler\r\n+     * ContentHandler} callback.</p>\r\n+     *\r\n+     * @param message The error or warning message.\r\n+     * @param locator The locator object for the error or warning (may be\r\n+     *        null).\r\n+     * @see org.xml.sax.Locator\r\n+     * @see org.xml.sax.Parser#setLocale \r\n+     */\r\n+    public SAXParseException (String message, Locator locator) {\r\n+\tsuper(message);\r\n+\tif (locator != null) {\r\n+\t    init(locator.getPublicId(), locator.getSystemId(),\r\n+\t\t locator.getLineNumber(), locator.getColumnNumber());\r\n+\t} else {\r\n+\t    init(null, null, -1, -1);\r\n+\t}\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Wrap an existing exception in a SAXParseException.\r\n+     *\r\n+     * <p>This constructor is especially useful when an application is\r\n+     * creating its own exception from within a {@link org.xml.sax.ContentHandler\r\n+     * ContentHandler} callback, and needs to wrap an existing exception that is not a\r\n+     * subclass of {@link org.xml.sax.SAXException SAXException}.</p>\r\n+     *\r\n+     * @param message The error or warning message, or null to\r\n+     *                use the message from the embedded exception.\r\n+     * @param locator The locator object for the error or warning (may be\r\n+     *        null).\r\n+     * @param e Any exception.\r\n+     * @see org.xml.sax.Locator\r\n+     * @see org.xml.sax.Parser#setLocale\r\n+     */\r\n+    public SAXParseException (String message, Locator locator,\r\n+\t\t\t      Exception e) {\r\n+\tsuper(message, e);\r\n+\tif (locator != null) {\r\n+\t    init(locator.getPublicId(), locator.getSystemId(),\r\n+\t\t locator.getLineNumber(), locator.getColumnNumber());\r\n+\t} else {\r\n+\t    init(null, null, -1, -1);\r\n+\t}\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Create a new SAXParseException.\r\n+     *\r\n+     * <p>This constructor is most useful for parser writers.</p>\r\n+     *\r\n+     * <p>If the system identifier is a URL, the parser must resolve it\r\n+     * fully before creating the exception.</p>\r\n+     *\r\n+     * @param message The error or warning message.\r\n+     * @param publicId The public identifer of the entity that generated\r\n+     *                 the error or warning.\r\n+     * @param systemId The system identifer of the entity that generated\r\n+     *                 the error or warning.\r\n+     * @param lineNumber The line number of the end of the text that\r\n+     *                   caused the error or warning.\r\n+     * @param columnNumber The column number of the end of the text that\r\n+     *                     cause the error or warning.\r\n+     * @see org.xml.sax.Parser#setLocale\r\n+     */\r\n+    public SAXParseException (String message, String publicId, String systemId,\r\n+\t\t\t      int lineNumber, int columnNumber)\r\n+    {\r\n+\tsuper(message);\r\n+\tinit(publicId, systemId, lineNumber, columnNumber);\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Create a new SAXParseException with an embedded exception.\r\n+     *\r\n+     * <p>This constructor is most useful for parser writers who\r\n+     * need to wrap an exception that is not a subclass of\r\n+     * {@link org.xml.sax.SAXException SAXException}.</p>\r\n+     *\r\n+     * <p>If the system identifier is a URL, the parser must resolve it\r\n+     * fully before creating the exception.</p>\r\n+     *\r\n+     * @param message The error or warning message, or null to use\r\n+     *                the message from the embedded exception.\r\n+     * @param publicId The public identifer of the entity that generated\r\n+     *                 the error or warning.\r\n+     * @param systemId The system identifer of the entity that generated\r\n+     *                 the error or warning.\r\n+     * @param lineNumber The line number of the end of the text that\r\n+     *                   caused the error or warning.\r\n+     * @param columnNumber The column number of the end of the text that\r\n+     *                     cause the error or warning.\r\n+     * @param e Another exception to embed in this one.\r\n+     * @see org.xml.sax.Parser#setLocale\r\n+     */\r\n+    public SAXParseException (String message, String publicId, String systemId,\r\n+\t\t\t      int lineNumber, int columnNumber, Exception e)\r\n+    {\r\n+\tsuper(message, e);\r\n+\tinit(publicId, systemId, lineNumber, columnNumber);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Internal initialization method.\r\n+     *\r\n+     * @param publicId The public identifier of the entity which generated the exception,\r\n+     *        or null.\r\n+     * @param systemId The system identifier of the entity which generated the exception,\r\n+     *        or null.\r\n+     * @param lineNumber The line number of the error, or -1.\r\n+     * @param columnNumber The column number of the error, or -1.\r\n+     */\r\n+    private void init (String publicId, String systemId,\r\n+\t\t       int lineNumber, int columnNumber)\r\n+    {\r\n+\tthis.publicId = publicId;\r\n+\tthis.systemId = systemId;\r\n+\tthis.lineNumber = lineNumber;\r\n+\tthis.columnNumber = columnNumber;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Get the public identifier of the entity where the exception occurred.\r\n+     *\r\n+     * @return A string containing the public identifier, or null\r\n+     *         if none is available.\r\n+     * @see org.xml.sax.Locator#getPublicId\r\n+     */\r\n+    public String getPublicId ()\r\n+    {\r\n+\treturn this.publicId;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Get the system identifier of the entity where the exception occurred.\r\n+     *\r\n+     * <p>If the system identifier is a URL, it will be resolved\r\n+     * fully.</p>\r\n+     *\r\n+     * @return A string containing the system identifier, or null\r\n+     *         if none is available.\r\n+     * @see org.xml.sax.Locator#getSystemId\r\n+     */\r\n+    public String getSystemId ()\r\n+    {\r\n+\treturn this.systemId;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * The line number of the end of the text where the exception occurred.\r\n+     *\r\n+     * @return An integer representing the line number, or -1\r\n+     *         if none is available.\r\n+     * @see org.xml.sax.Locator#getLineNumber\r\n+     */\r\n+    public int getLineNumber ()\r\n+    {\r\n+\treturn this.lineNumber;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * The column number of the end of the text where the exception occurred.\r\n+     *\r\n+     * <p>The first column in a line is position 1.</p>\r\n+     *\r\n+     * @return An integer representing the column number, or -1\r\n+     *         if none is available.\r\n+     * @see org.xml.sax.Locator#getColumnNumber\r\n+     */\r\n+    public int getColumnNumber ()\r\n+    {\r\n+\treturn this.columnNumber;\r\n+    }\r\n+    \r\n+    \r\n+    \f\r\n+    //////////////////////////////////////////////////////////////////////\r\n+    // Internal state.\r\n+    //////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * @serial The public identifier, or null.\r\n+     * @see #getPublicId\r\n+     */    \r\n+    private String publicId;\r\n+\r\n+\r\n+    /**\r\n+     * @serial The system identifier, or null.\r\n+     * @see #getSystemId\r\n+     */\r\n+    private String systemId;\r\n+\r\n+\r\n+    /**\r\n+     * @serial The line number, or -1.\r\n+     * @see #getLineNumber\r\n+     */\r\n+    private int lineNumber;\r\n+\r\n+\r\n+    /**\r\n+     * @serial The column number, or -1.\r\n+     * @see #getColumnNumber\r\n+     */\r\n+    private int columnNumber;\r\n+    \r\n+}\r\n+\r\n+// end of SAXParseException.java\r"}, {"sha": "b10e8647ff0aeaa8a6d496574d00225440596254", "filename": "libjava/org/xml/sax/XMLFilter.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FXMLFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FXMLFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FXMLFilter.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,65 @@\n+// XMLFilter.java - filter SAX2 events.\r\n+// Written by David Megginson, sax@megginson.com\r\n+// NO WARRANTY!  This class is in the Public Domain.\r\n+\r\n+// $Id: XMLFilter.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+\r\n+package org.xml.sax;\r\n+\r\n+\r\n+/**\r\n+ * Interface for an XML filter.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>An XML filter is like an XML reader, except that it obtains its\r\n+ * events from another XML reader rather than a primary source like\r\n+ * an XML document or database.  Filters can modify a stream of\r\n+ * events as they pass on to the final application.</p>\r\n+ *\r\n+ * <p>The XMLFilterImpl helper class provides a convenient base\r\n+ * for creating SAX2 filters, by passing on all {@link org.xml.sax.EntityResolver\r\n+ * EntityResolver}, {@link org.xml.sax.DTDHandler DTDHandler},\r\n+ * {@link org.xml.sax.ContentHandler ContentHandler} and {@link org.xml.sax.ErrorHandler\r\n+ * ErrorHandler} events automatically.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.helpers.XMLFilterImpl\r\n+ */\r\n+public interface XMLFilter extends XMLReader\r\n+{\r\n+\r\n+    /**\r\n+     * Set the parent reader.\r\n+     *\r\n+     * <p>This method allows the application to link the filter to\r\n+     * a parent reader (which may be another filter).  The argument\r\n+     * may not be null.</p>\r\n+     *\r\n+     * @param parent The parent reader.\r\n+     */\r\n+    public abstract void setParent (XMLReader parent);\r\n+\r\n+\r\n+    /**\r\n+     * Get the parent reader.\r\n+     *\r\n+     * <p>This method allows the application to query the parent\r\n+     * reader (which may be another filter).  It is generally a\r\n+     * bad idea to perform any operations on the parent reader\r\n+     * directly: they should all pass through this filter.</p>\r\n+     *\r\n+     * @return The parent filter, or null if none has been set.\r\n+     */\r\n+    public abstract XMLReader getParent ();\r\n+\r\n+}\r\n+\r\n+// end of XMLFilter.java\r"}, {"sha": "26e382b9fa902a418fcfceb7cb1e0c1677bafce3", "filename": "libjava/org/xml/sax/XMLReader.java", "status": "added", "additions": 415, "deletions": 0, "changes": 415, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FXMLReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2FXMLReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2FXMLReader.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,415 @@\n+// XMLReader.java - read an XML document.\r\n+// Written by David Megginson, sax@megginson.com\r\n+// NO WARRANTY!  This class is in the Public Domain.\r\n+\r\n+// $Id: XMLReader.java,v 1.1 2000/10/02 02:43:17 sboag Exp $\r\n+\r\n+package org.xml.sax;\r\n+\r\n+import java.io.IOException;\r\n+\r\n+\r\n+/**\r\n+ * Interface for reading an XML document using callbacks.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p><strong>Note:</strong> despite its name, this interface does \r\n+ * <em>not</em> extend the standard Java {@link java.io.Reader Reader} \r\n+ * interface, because reading XML is a fundamentally different activity \r\n+ * than reading character data.</p>\r\n+ *\r\n+ * <p>XMLReader is the interface that an XML parser's SAX2 driver must\r\n+ * implement.  This interface allows an application to set and\r\n+ * query features and properties in the parser, to register\r\n+ * event handlers for document processing, and to initiate\r\n+ * a document parse.</p>\r\n+ *\r\n+ * <p>All SAX interfaces are assumed to be synchronous: the\r\n+ * {@link #parse parse} methods must not return until parsing\r\n+ * is complete, and readers must wait for an event-handler callback\r\n+ * to return before reporting the next event.</p>\r\n+ *\r\n+ * <p>This interface replaces the (now deprecated) SAX 1.0 {@link\r\n+ * org.xml.sax.Parser Parser} interface.  The XMLReader interface\r\n+ * contains two important enhancements over the old Parser\r\n+ * interface:</p>\r\n+ *\r\n+ * <ol>\r\n+ * <li>it adds a standard way to query and set features and \r\n+ *  properties; and</li>\r\n+ * <li>it adds Namespace support, which is required for many\r\n+ *  higher-level XML standards.</li>\r\n+ * </ol>\r\n+ *\r\n+ * <p>There are adapters available to convert a SAX1 Parser to\r\n+ * a SAX2 XMLReader and vice-versa.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.XMLFilter\r\n+ * @see org.xml.sax.helpers.ParserAdapter\r\n+ * @see org.xml.sax.helpers.XMLReaderAdapter \r\n+ */\r\n+public interface XMLReader\r\n+{\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Configuration.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Look up the value of a feature.\r\n+     *\r\n+     * <p>The feature name is any fully-qualified URI.  It is\r\n+     * possible for an XMLReader to recognize a feature name but\r\n+     * to be unable to return its value; this is especially true\r\n+     * in the case of an adapter for a SAX1 Parser, which has\r\n+     * no way of knowing whether the underlying parser is\r\n+     * performing validation or expanding external entities.</p>\r\n+     *\r\n+     * <p>All XMLReaders are required to recognize the\r\n+     * http://xml.org/sax/features/namespaces and the\r\n+     * http://xml.org/sax/features/namespace-prefixes feature names.</p>\r\n+     *\r\n+     * <p>Some feature values may be available only in specific\r\n+     * contexts, such as before, during, or after a parse.</p>\r\n+     *\r\n+     * <p>Typical usage is something like this:</p>\r\n+     *\r\n+     * <pre>\r\n+     * XMLReader r = new MySAXDriver();\r\n+     *\r\n+     *                         // try to activate validation\r\n+     * try {\r\n+     *   r.setFeature(\"http://xml.org/sax/features/validation\", true);\r\n+     * } catch (SAXException e) {\r\n+     *   System.err.println(\"Cannot activate validation.\"); \r\n+     * }\r\n+     *\r\n+     *                         // register event handlers\r\n+     * r.setContentHandler(new MyContentHandler());\r\n+     * r.setErrorHandler(new MyErrorHandler());\r\n+     *\r\n+     *                         // parse the first document\r\n+     * try {\r\n+     *   r.parse(\"http://www.foo.com/mydoc.xml\");\r\n+     * } catch (IOException e) {\r\n+     *   System.err.println(\"I/O exception reading XML document\");\r\n+     * } catch (SAXException e) {\r\n+     *   System.err.println(\"XML exception reading document.\");\r\n+     * }\r\n+     * </pre>\r\n+     *\r\n+     * <p>Implementors are free (and encouraged) to invent their own features,\r\n+     * using names built on their own URIs.</p>\r\n+     *\r\n+     * @param name The feature name, which is a fully-qualified URI.\r\n+     * @return The current state of the feature (true or false).\r\n+     * @exception org.xml.sax.SAXNotRecognizedException When the\r\n+     *            XMLReader does not recognize the feature name.\r\n+     * @exception org.xml.sax.SAXNotSupportedException When the\r\n+     *            XMLReader recognizes the feature name but \r\n+     *            cannot determine its value at this time.\r\n+     * @see #setFeature\r\n+     */\r\n+    public boolean getFeature (String name)\r\n+        throws SAXNotRecognizedException, SAXNotSupportedException;\r\n+\r\n+\r\n+    /**\r\n+     * Set the state of a feature.\r\n+     *\r\n+     * <p>The feature name is any fully-qualified URI.  It is\r\n+     * possible for an XMLReader to recognize a feature name but\r\n+     * to be unable to set its value; this is especially true\r\n+     * in the case of an adapter for a SAX1 {@link org.xml.sax.Parser Parser},\r\n+     * which has no way of affecting whether the underlying parser is\r\n+     * validating, for example.</p>\r\n+     *\r\n+     * <p>All XMLReaders are required to support setting\r\n+     * http://xml.org/sax/features/namespaces to true and\r\n+     * http://xml.org/sax/features/namespace-prefixes to false.</p>\r\n+     *\r\n+     * <p>Some feature values may be immutable or mutable only \r\n+     * in specific contexts, such as before, during, or after \r\n+     * a parse.</p>\r\n+     *\r\n+     * @param name The feature name, which is a fully-qualified URI.\r\n+     * @param state The requested state of the feature (true or false).\r\n+     * @exception org.xml.sax.SAXNotRecognizedException When the\r\n+     *            XMLReader does not recognize the feature name.\r\n+     * @exception org.xml.sax.SAXNotSupportedException When the\r\n+     *            XMLReader recognizes the feature name but \r\n+     *            cannot set the requested value.\r\n+     * @see #getFeature\r\n+     */\r\n+    public void setFeature (String name, boolean value)\r\n+\tthrows SAXNotRecognizedException, SAXNotSupportedException;\r\n+\r\n+\r\n+    /**\r\n+     * Look up the value of a property.\r\n+     *\r\n+     * <p>The property name is any fully-qualified URI.  It is\r\n+     * possible for an XMLReader to recognize a property name but\r\n+     * to be unable to return its state; this is especially true\r\n+     * in the case of an adapter for a SAX1 {@link org.xml.sax.Parser\r\n+     * Parser}.</p>\r\n+     *\r\n+     * <p>XMLReaders are not required to recognize any specific\r\n+     * property names, though an initial core set is documented for\r\n+     * SAX2.</p>\r\n+     *\r\n+     * <p>Some property values may be available only in specific\r\n+     * contexts, such as before, during, or after a parse.</p>\r\n+     *\r\n+     * <p>Implementors are free (and encouraged) to invent their own properties,\r\n+     * using names built on their own URIs.</p>\r\n+     *\r\n+     * @param name The property name, which is a fully-qualified URI.\r\n+     * @return The current value of the property.\r\n+     * @exception org.xml.sax.SAXNotRecognizedException When the\r\n+     *            XMLReader does not recognize the property name.\r\n+     * @exception org.xml.sax.SAXNotSupportedException When the\r\n+     *            XMLReader recognizes the property name but \r\n+     *            cannot determine its value at this time.\r\n+     * @see #setProperty\r\n+     */\r\n+    public Object getProperty (String name)\r\n+\tthrows SAXNotRecognizedException, SAXNotSupportedException;\r\n+\r\n+\r\n+    /**\r\n+     * Set the value of a property.\r\n+     *\r\n+     * <p>The property name is any fully-qualified URI.  It is\r\n+     * possible for an XMLReader to recognize a property name but\r\n+     * to be unable to set its value; this is especially true\r\n+     * in the case of an adapter for a SAX1 {@link org.xml.sax.Parser\r\n+     * Parser}.</p>\r\n+     *\r\n+     * <p>XMLReaders are not required to recognize setting\r\n+     * any specific property names, though a core set is provided with \r\n+     * SAX2.</p>\r\n+     *\r\n+     * <p>Some property values may be immutable or mutable only \r\n+     * in specific contexts, such as before, during, or after \r\n+     * a parse.</p>\r\n+     *\r\n+     * <p>This method is also the standard mechanism for setting\r\n+     * extended handlers.</p>\r\n+     *\r\n+     * @param name The property name, which is a fully-qualified URI.\r\n+     * @param state The requested value for the property.\r\n+     * @exception org.xml.sax.SAXNotRecognizedException When the\r\n+     *            XMLReader does not recognize the property name.\r\n+     * @exception org.xml.sax.SAXNotSupportedException When the\r\n+     *            XMLReader recognizes the property name but \r\n+     *            cannot set the requested value.\r\n+     */\r\n+    public void setProperty (String name, Object value)\r\n+\tthrows SAXNotRecognizedException, SAXNotSupportedException;\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Event handlers.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Allow an application to register an entity resolver.\r\n+     *\r\n+     * <p>If the application does not register an entity resolver,\r\n+     * the XMLReader will perform its own default resolution.</p>\r\n+     *\r\n+     * <p>Applications may register a new or different resolver in the\r\n+     * middle of a parse, and the SAX parser must begin using the new\r\n+     * resolver immediately.</p>\r\n+     *\r\n+     * @param resolver The entity resolver.\r\n+     * @exception java.lang.NullPointerException If the resolver \r\n+     *            argument is null.\r\n+     * @see #getEntityResolver\r\n+     */\r\n+    public void setEntityResolver (EntityResolver resolver);\r\n+\r\n+\r\n+    /**\r\n+     * Return the current entity resolver.\r\n+     *\r\n+     * @return The current entity resolver, or null if none\r\n+     *         has been registered.\r\n+     * @see #setEntityResolver\r\n+     */\r\n+    public EntityResolver getEntityResolver ();\r\n+\r\n+\r\n+    /**\r\n+     * Allow an application to register a DTD event handler.\r\n+     *\r\n+     * <p>If the application does not register a DTD handler, all DTD\r\n+     * events reported by the SAX parser will be silently ignored.</p>\r\n+     *\r\n+     * <p>Applications may register a new or different handler in the\r\n+     * middle of a parse, and the SAX parser must begin using the new\r\n+     * handler immediately.</p>\r\n+     *\r\n+     * @param handler The DTD handler.\r\n+     * @exception java.lang.NullPointerException If the handler \r\n+     *            argument is null.\r\n+     * @see #getDTDHandler\r\n+     */\r\n+    public void setDTDHandler (DTDHandler handler);\r\n+\r\n+\r\n+    /**\r\n+     * Return the current DTD handler.\r\n+     *\r\n+     * @return The current DTD handler, or null if none\r\n+     *         has been registered.\r\n+     * @see #setDTDHandler\r\n+     */\r\n+    public DTDHandler getDTDHandler ();\r\n+\r\n+\r\n+    /**\r\n+     * Allow an application to register a content event handler.\r\n+     *\r\n+     * <p>If the application does not register a content handler, all\r\n+     * content events reported by the SAX parser will be silently\r\n+     * ignored.</p>\r\n+     *\r\n+     * <p>Applications may register a new or different handler in the\r\n+     * middle of a parse, and the SAX parser must begin using the new\r\n+     * handler immediately.</p>\r\n+     *\r\n+     * @param handler The content handler.\r\n+     * @exception java.lang.NullPointerException If the handler \r\n+     *            argument is null.\r\n+     * @see #getContentHandler\r\n+     */\r\n+    public void setContentHandler (ContentHandler handler);\r\n+\r\n+\r\n+    /**\r\n+     * Return the current content handler.\r\n+     *\r\n+     * @return The current content handler, or null if none\r\n+     *         has been registered.\r\n+     * @see #setContentHandler\r\n+     */\r\n+    public ContentHandler getContentHandler ();\r\n+\r\n+\r\n+    /**\r\n+     * Allow an application to register an error event handler.\r\n+     *\r\n+     * <p>If the application does not register an error handler, all\r\n+     * error events reported by the SAX parser will be silently\r\n+     * ignored; however, normal processing may not continue.  It is\r\n+     * highly recommended that all SAX applications implement an\r\n+     * error handler to avoid unexpected bugs.</p>\r\n+     *\r\n+     * <p>Applications may register a new or different handler in the\r\n+     * middle of a parse, and the SAX parser must begin using the new\r\n+     * handler immediately.</p>\r\n+     *\r\n+     * @param handler The error handler.\r\n+     * @exception java.lang.NullPointerException If the handler \r\n+     *            argument is null.\r\n+     * @see #getErrorHandler\r\n+     */\r\n+    public void setErrorHandler (ErrorHandler handler);\r\n+\r\n+\r\n+    /**\r\n+     * Return the current error handler.\r\n+     *\r\n+     * @return The current error handler, or null if none\r\n+     *         has been registered.\r\n+     * @see #setErrorHandler\r\n+     */\r\n+    public ErrorHandler getErrorHandler ();\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Parsing.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+    /**\r\n+     * Parse an XML document.\r\n+     *\r\n+     * <p>The application can use this method to instruct the XML\r\n+     * reader to begin parsing an XML document from any valid input\r\n+     * source (a character stream, a byte stream, or a URI).</p>\r\n+     *\r\n+     * <p>Applications may not invoke this method while a parse is in\r\n+     * progress (they should create a new XMLReader instead for each\r\n+     * nested XML document).  Once a parse is complete, an\r\n+     * application may reuse the same XMLReader object, possibly with a\r\n+     * different input source.</p>\r\n+     *\r\n+     * <p>During the parse, the XMLReader will provide information\r\n+     * about the XML document through the registered event\r\n+     * handlers.</p>\r\n+     *\r\n+     * <p>This method is synchronous: it will not return until parsing\r\n+     * has ended.  If a client application wants to terminate \r\n+     * parsing early, it should throw an exception.</p>\r\n+     *\r\n+     * @param source The input source for the top-level of the\r\n+     *        XML document.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @exception java.io.IOException An IO exception from the parser,\r\n+     *            possibly from a byte stream or character stream\r\n+     *            supplied by the application.\r\n+     * @see org.xml.sax.InputSource\r\n+     * @see #parse(java.lang.String)\r\n+     * @see #setEntityResolver\r\n+     * @see #setDTDHandler\r\n+     * @see #setContentHandler\r\n+     * @see #setErrorHandler \r\n+     */\r\n+    public void parse (InputSource input)\r\n+\tthrows IOException, SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Parse an XML document from a system identifier (URI).\r\n+     *\r\n+     * <p>This method is a shortcut for the common case of reading a\r\n+     * document from a system identifier.  It is the exact\r\n+     * equivalent of the following:</p>\r\n+     *\r\n+     * <pre>\r\n+     * parse(new InputSource(systemId));\r\n+     * </pre>\r\n+     *\r\n+     * <p>If the system identifier is a URL, it must be fully resolved\r\n+     * by the application before it is passed to the parser.</p>\r\n+     *\r\n+     * @param systemId The system identifier (URI).\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @exception java.io.IOException An IO exception from the parser,\r\n+     *            possibly from a byte stream or character stream\r\n+     *            supplied by the application.\r\n+     * @see #parse(org.xml.sax.InputSource)\r\n+     */\r\n+    public void parse (String systemId)\r\n+\tthrows IOException, SAXException;\r\n+\r\n+}\r\n+\r\n+// end of XMLReader.java\r"}, {"sha": "1fede3428de517cf0b8a0e5f05b798ba2b7a67e3", "filename": "libjava/org/xml/sax/ext/DeclHandler.java", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fext%2FDeclHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fext%2FDeclHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2Fext%2FDeclHandler.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,131 @@\n+// DeclHandler.java - Optional handler for DTD declaration events.\r\n+// Public Domain: no warranty.\r\n+// $Id: DeclHandler.java,v 1.1 2000/10/02 02:43:19 sboag Exp $\r\n+\r\n+package org.xml.sax.ext;\r\n+\r\n+import org.xml.sax.SAXException;\r\n+\r\n+\r\n+/**\r\n+ * SAX2 extension handler for DTD declaration events.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This is an optional extension handler for SAX2 to provide\r\n+ * information about DTD declarations in an XML document.  XML\r\n+ * readers are not required to support this handler.</p>\r\n+ *\r\n+ * <p>Note that data-related DTD declarations (unparsed entities and\r\n+ * notations) are already reported through the {@link\r\n+ * org.xml.sax.DTDHandler DTDHandler} interface.</p>\r\n+ *\r\n+ * <p>If you are using the declaration handler together with a lexical\r\n+ * handler, all of the events will occur between the\r\n+ * {@link org.xml.sax.ext.LexicalHandler#startDTD startDTD} and the\r\n+ * {@link org.xml.sax.ext.LexicalHandler#endDTD endDTD} events.</p>\r\n+ *\r\n+ * <p>To set the DeclHandler for an XML reader, use the\r\n+ * {@link org.xml.sax.XMLReader#setProperty setProperty} method\r\n+ * with the propertyId \"http://xml.org/sax/handlers/DeclHandler\".\r\n+ * If the reader does not support declaration events, it will throw a\r\n+ * {@link org.xml.sax.SAXNotRecognizedException SAXNotRecognizedException}\r\n+ * or a\r\n+ * {@link org.xml.sax.SAXNotSupportedException SAXNotSupportedException}\r\n+ * when you attempt to register the handler.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0beta\r\n+ * @see org.xml.sax.XMLReader\r\n+ */\r\n+public interface DeclHandler\r\n+{\r\n+\r\n+    /**\r\n+     * Report an element type declaration.\r\n+     *\r\n+     * <p>The content model will consist of the string \"EMPTY\", the\r\n+     * string \"ANY\", or a parenthesised group, optionally followed\r\n+     * by an occurrence indicator.  The model will be normalized so\r\n+     * that all whitespace is removed,and will include the enclosing\r\n+     * parentheses.</p>\r\n+     *\r\n+     * @param name The element type name.\r\n+     * @param model The content model as a normalized string.\r\n+     * @exception SAXException The application may raise an exception.\r\n+     */\r\n+    public abstract void elementDecl (String name, String model)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Report an attribute type declaration.\r\n+     *\r\n+     * <p>Only the effective (first) declaration for an attribute will\r\n+     * be reported.  The type will be one of the strings \"CDATA\",\r\n+     * \"ID\", \"IDREF\", \"IDREFS\", \"NMTOKEN\", \"NMTOKENS\", \"ENTITY\",\r\n+     * \"ENTITIES\", or \"NOTATION\", or a parenthesized token group with \r\n+     * the separator \"|\" and all whitespace removed.</p>\r\n+     *\r\n+     * @param eName The name of the associated element.\r\n+     * @param aName The name of the attribute.\r\n+     * @param type A string representing the attribute type.\r\n+     * @param valueDefault A string representing the attribute default\r\n+     *        (\"#IMPLIED\", \"#REQUIRED\", or \"#FIXED\") or null if\r\n+     *        none of these applies.\r\n+     * @param value A string representing the attribute's default value,\r\n+     *        or null if there is none.\r\n+     * @exception SAXException The application may raise an exception.\r\n+     */\r\n+    public abstract void attributeDecl (String eName,\r\n+\t\t\t\t\tString aName,\r\n+\t\t\t\t\tString type,\r\n+\t\t\t\t\tString valueDefault,\r\n+\t\t\t\t\tString value)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Report an internal entity declaration.\r\n+     *\r\n+     * <p>Only the effective (first) declaration for each entity\r\n+     * will be reported.</p>\r\n+     *\r\n+     * @param name The name of the entity.  If it is a parameter\r\n+     *        entity, the name will begin with '%'.\r\n+     * @param value The replacement text of the entity.\r\n+     * @exception SAXException The application may raise an exception.\r\n+     * @see #externalEntityDecl\r\n+     * @see org.xml.sax.DTDHandler#unparsedEntityDecl\r\n+     */\r\n+    public abstract void internalEntityDecl (String name, String value)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Report a parsed external entity declaration.\r\n+     *\r\n+     * <p>Only the effective (first) declaration for each entity\r\n+     * will be reported.</p>\r\n+     *\r\n+     * @param name The name of the entity.  If it is a parameter\r\n+     *        entity, the name will begin with '%'.\r\n+     * @param publicId The declared public identifier of the entity, or\r\n+     *        null if none was declared.\r\n+     * @param systemId The declared system identifier of the entity.\r\n+     * @exception SAXException The application may raise an exception.\r\n+     * @see #internalEntityDecl\r\n+     * @see org.xml.sax.DTDHandler#unparsedEntityDecl\r\n+     */\r\n+    public abstract void externalEntityDecl (String name, String publicId,\r\n+\t\t\t\t\t     String systemId)\r\n+\tthrows SAXException;\r\n+\r\n+}\r\n+\r\n+// end of DeclHandler.java\r"}, {"sha": "4ac1617ca00e669e34b83aa073e63cd1b3a3a405", "filename": "libjava/org/xml/sax/ext/LexicalHandler.java", "status": "added", "additions": 161, "deletions": 0, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fext%2FLexicalHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fext%2FLexicalHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2Fext%2FLexicalHandler.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,161 @@\n+// LexicalHandler.java - optional handler for lexical parse events.\r\n+// Public Domain: no warranty.\r\n+// $Id: LexicalHandler.java,v 1.1 2000/10/02 02:43:20 sboag Exp $\r\n+\r\n+package org.xml.sax.ext;\r\n+\r\n+import org.xml.sax.SAXException;\r\n+\r\n+/**\r\n+ * SAX2 extension handler for lexical events.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This is an optional extension handler for SAX2 to provide\r\n+ * lexical information about an XML document, such as comments\r\n+ * and CDATA section boundaries; XML readers are not required to \r\n+ * support this handler.</p>\r\n+ *\r\n+ * <p>The events in the lexical handler apply to the entire document,\r\n+ * not just to the document element, and all lexical handler events\r\n+ * must appear between the content handler's startDocument and\r\n+ * endDocument events.</p>\r\n+ *\r\n+ * <p>To set the LexicalHandler for an XML reader, use the\r\n+ * {@link org.xml.sax.XMLReader#setProperty setProperty} method\r\n+ * with the propertyId \"http://xml.org/sax/handlers/LexicalHandler\".\r\n+ * If the reader does not support lexical events, it will throw a\r\n+ * {@link org.xml.sax.SAXNotRecognizedException SAXNotRecognizedException}\r\n+ * or a\r\n+ * {@link org.xml.sax.SAXNotSupportedException SAXNotSupportedException}\r\n+ * when you attempt to register the handler.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0beta\r\n+ * @see org.xml.sax.XMLReader#setProperty\r\n+ * @see org.xml.sax.SAXNotRecognizedException\r\n+ * @see org.xml.sax.SAXNotSupportedException\r\n+ */\r\n+public interface LexicalHandler\r\n+{\r\n+\r\n+    /**\r\n+     * Report the start of DTD declarations, if any.\r\n+     *\r\n+     * <p>Any declarations are assumed to be in the internal subset\r\n+     * unless otherwise indicated by a {@link #startEntity startEntity}\r\n+     * event.</p>\r\n+     *\r\n+     * <p>Note that the start/endDTD events will appear within\r\n+     * the start/endDocument events from ContentHandler and\r\n+     * before the first startElement event.</p>\r\n+     *\r\n+     * @param name The document type name.\r\n+     * @param publicId The declared public identifier for the\r\n+     *        external DTD subset, or null if none was declared.\r\n+     * @param systemId The declared system identifier for the\r\n+     *        external DTD subset, or null if none was declared.\r\n+     * @exception SAXException The application may raise an\r\n+     *            exception.\r\n+     * @see #endDTD\r\n+     * @see #startEntity\r\n+     */\r\n+    public abstract void startDTD (String name, String publicId,\r\n+\t\t\t\t   String systemId)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Report the end of DTD declarations.\r\n+     *\r\n+     * @exception SAXException The application may raise an exception.\r\n+     * @see #startDTD\r\n+     */\r\n+    public abstract void endDTD ()\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Report the beginning of an entity in content.\r\n+     *\r\n+     * <p><strong>NOTE:</entity> entity references in attribute\r\n+     * values -- and the start and end of the document entity --\r\n+     * are never reported.</p>\r\n+     *\r\n+     * <p>The start and end of the external DTD subset are reported\r\n+     * using the pseudo-name \"[dtd]\".  All other events must be\r\n+     * properly nested within start/end entity events.</p>\r\n+     *\r\n+     * <p>Note that skipped entities will be reported through the\r\n+     * {@link org.xml.sax.ContentHandler#skippedEntity skippedEntity}\r\n+     * event, which is part of the ContentHandler interface.</p>\r\n+     *\r\n+     * @param name The name of the entity.  If it is a parameter\r\n+     *        entity, the name will begin with '%'.\r\n+     * @exception SAXException The application may raise an exception.\r\n+     * @see #endEntity\r\n+     * @see org.xml.sax.ext.DeclHandler#internalEntityDecl\r\n+     * @see org.xml.sax.ext.DeclHandler#externalEntityDecl\r\n+     */\r\n+    public abstract void startEntity (String name)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Report the end of an entity.\r\n+     *\r\n+     * @param name The name of the entity that is ending.\r\n+     * @exception SAXException The application may raise an exception.\r\n+     * @see #startEntity\r\n+     */\r\n+    public abstract void endEntity (String name)\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Report the start of a CDATA section.\r\n+     *\r\n+     * <p>The contents of the CDATA section will be reported through\r\n+     * the regular {@link org.xml.sax.ContentHandler#characters\r\n+     * characters} event.</p>\r\n+     *\r\n+     * @exception SAXException The application may raise an exception.\r\n+     * @see #endCDATA\r\n+     */\r\n+    public abstract void startCDATA ()\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Report the end of a CDATA section.\r\n+     *\r\n+     * @exception SAXException The application may raise an exception.\r\n+     * @see #startCDATA\r\n+     */\r\n+    public abstract void endCDATA ()\r\n+\tthrows SAXException;\r\n+\r\n+\r\n+    /**\r\n+     * Report an XML comment anywhere in the document.\r\n+     *\r\n+     * <p>This callback will be used for comments inside or outside the\r\n+     * document element, including comments in the external DTD\r\n+     * subset (if read).</p>\r\n+     *\r\n+     * @param ch An array holding the characters in the comment.\r\n+     * @param start The starting position in the array.\r\n+     * @param length The number of characters to use from the array.\r\n+     * @exception SAXException The application may raise an exception.\r\n+     */\r\n+    public abstract void comment (char ch[], int start, int length)\r\n+\tthrows SAXException;\r\n+\r\n+}\r\n+\r\n+// end of LexicalHandler.java\r"}, {"sha": "69754728c1f788cbeda7d9071eb8f88f519505a6", "filename": "libjava/org/xml/sax/helpers/AttributeListImpl.java", "status": "added", "additions": 310, "deletions": 0, "changes": 310, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FAttributeListImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FAttributeListImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FAttributeListImpl.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,310 @@\n+// SAX default implementation for AttributeList.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: AttributeListImpl.java,v 1.1 2000/10/02 02:43:20 sboag Exp $\r\n+\r\n+package org.xml.sax.helpers;\r\n+\r\n+import org.xml.sax.AttributeList;\r\n+\r\n+import java.util.Vector;\r\n+\r\n+\r\n+/**\r\n+ * Default implementation for AttributeList.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>AttributeList implements the deprecated SAX1 {@link\r\n+ * org.xml.sax.AttributeList AttributeList} interface, and has been\r\n+ * replaced by the new SAX2 {@link org.xml.sax.helpers.AttributesImpl\r\n+ * AttributesImpl} interface.</p>\r\n+ *\r\n+ * <p>This class provides a convenience implementation of the SAX\r\n+ * {@link org.xml.sax.AttributeList AttributeList} interface.  This \r\n+ * implementation is useful both for SAX parser writers, who can use \r\n+ * it to provide attributes to the application, and for SAX application \r\n+ * writers, who can use it to create a persistent copy of an element's \r\n+ * attribute specifications:</p>\r\n+ *\r\n+ * <pre>\r\n+ * private AttributeList myatts;\r\n+ *\r\n+ * public void startElement (String name, AttributeList atts)\r\n+ * {\r\n+ *              // create a persistent copy of the attribute list\r\n+ *              // for use outside this method\r\n+ *   myatts = new AttributeListImpl(atts);\r\n+ *   [...]\r\n+ * }\r\n+ * </pre>\r\n+ *\r\n+ * <p>Please note that SAX parsers are not required to use this\r\n+ * class to provide an implementation of AttributeList; it is\r\n+ * supplied only as an optional convenience.  In particular, \r\n+ * parser writers are encouraged to invent more efficient\r\n+ * implementations.</p>\r\n+ *\r\n+ * @deprecated This class implements a deprecated interface,\r\n+ *             {@link org.xml.sax.AttributeList AttributeList};\r\n+ *             that interface has been replaced by\r\n+ *             {@link org.xml.sax.Attributes Attributes},\r\n+ *             which is implemented in the\r\n+ *             {@link org.xml.sax.helpers.AttributesImpl \r\n+ *            AttributesImpl} helper class.\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.AttributeList\r\n+ * @see org.xml.sax.DocumentHandler#startElement \r\n+ */\r\n+public class AttributeListImpl implements AttributeList\r\n+{\r\n+    \r\n+    /**\r\n+     * Create an empty attribute list.\r\n+     *\r\n+     * <p>This constructor is most useful for parser writers, who\r\n+     * will use it to create a single, reusable attribute list that\r\n+     * can be reset with the clear method between elements.</p>\r\n+     *\r\n+     * @see #addAttribute\r\n+     * @see #clear\r\n+     */\r\n+    public AttributeListImpl ()\r\n+    {\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Construct a persistent copy of an existing attribute list.\r\n+     *\r\n+     * <p>This constructor is most useful for application writers,\r\n+     * who will use it to create a persistent copy of an existing\r\n+     * attribute list.</p>\r\n+     *\r\n+     * @param atts The attribute list to copy\r\n+     * @see org.xml.sax.DocumentHandler#startElement\r\n+     */\r\n+    public AttributeListImpl (AttributeList atts)\r\n+    {\r\n+\tsetAttributeList(atts);\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Methods specific to this class.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    \r\n+    /**\r\n+     * Set the attribute list, discarding previous contents.\r\n+     *\r\n+     * <p>This method allows an application writer to reuse an\r\n+     * attribute list easily.</p>\r\n+     *\r\n+     * @param atts The attribute list to copy.\r\n+     */\r\n+    public void setAttributeList (AttributeList atts)\r\n+    {\r\n+\tint count = atts.getLength();\r\n+\t\r\n+\tclear();\r\n+\t\r\n+\tfor (int i = 0; i < count; i++) {\r\n+\t    addAttribute(atts.getName(i), atts.getType(i), atts.getValue(i));\r\n+\t}\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Add an attribute to an attribute list.\r\n+     *\r\n+     * <p>This method is provided for SAX parser writers, to allow them\r\n+     * to build up an attribute list incrementally before delivering\r\n+     * it to the application.</p>\r\n+     *\r\n+     * @param name The attribute name.\r\n+     * @param type The attribute type (\"NMTOKEN\" for an enumeration).\r\n+     * @param value The attribute value (must not be null).\r\n+     * @see #removeAttribute\r\n+     * @see org.xml.sax.DocumentHandler#startElement\r\n+     */\r\n+    public void addAttribute (String name, String type, String value)\r\n+    {\r\n+\tnames.addElement(name);\r\n+\ttypes.addElement(type);\r\n+\tvalues.addElement(value);\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Remove an attribute from the list.\r\n+     *\r\n+     * <p>SAX application writers can use this method to filter an\r\n+     * attribute out of an AttributeList.  Note that invoking this\r\n+     * method will change the length of the attribute list and\r\n+     * some of the attribute's indices.</p>\r\n+     *\r\n+     * <p>If the requested attribute is not in the list, this is\r\n+     * a no-op.</p>\r\n+     *\r\n+     * @param name The attribute name.\r\n+     * @see #addAttribute\r\n+     */\r\n+    public void removeAttribute (String name)\r\n+    {\r\n+\tint i = names.indexOf(name);\r\n+\t\r\n+\tif (i >= 0) {\r\n+\t    names.removeElementAt(i);\r\n+\t    types.removeElementAt(i);\r\n+\t    values.removeElementAt(i);\r\n+\t}\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Clear the attribute list.\r\n+     *\r\n+     * <p>SAX parser writers can use this method to reset the attribute\r\n+     * list between DocumentHandler.startElement events.  Normally,\r\n+     * it will make sense to reuse the same AttributeListImpl object\r\n+     * rather than allocating a new one each time.</p>\r\n+     *\r\n+     * @see org.xml.sax.DocumentHandler#startElement\r\n+     */\r\n+    public void clear ()\r\n+    {\r\n+\tnames.removeAllElements();\r\n+\ttypes.removeAllElements();\r\n+\tvalues.removeAllElements();\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.AttributeList\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the number of attributes in the list.\r\n+     *\r\n+     * @return The number of attributes in the list.\r\n+     * @see org.xml.sax.AttributeList#getLength\r\n+     */\r\n+    public int getLength ()\r\n+    {\r\n+\treturn names.size();\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Get the name of an attribute (by position).\r\n+     *\r\n+     * @param i The position of the attribute in the list.\r\n+     * @return The attribute name as a string, or null if there\r\n+     *         is no attribute at that position.\r\n+     * @see org.xml.sax.AttributeList#getName(int)\r\n+     */\r\n+    public String getName (int i)\r\n+    {\r\n+\tif (i < 0) {\r\n+\t    return null;\r\n+\t}\r\n+\ttry {\r\n+\t    return (String)names.elementAt(i);\r\n+\t} catch (ArrayIndexOutOfBoundsException e) {\r\n+\t    return null;\r\n+\t}\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Get the type of an attribute (by position).\r\n+     *\r\n+     * @param i The position of the attribute in the list.\r\n+     * @return The attribute type as a string (\"NMTOKEN\" for an\r\n+     *         enumeration, and \"CDATA\" if no declaration was\r\n+     *         read), or null if there is no attribute at\r\n+     *         that position.\r\n+     * @see org.xml.sax.AttributeList#getType(int)\r\n+     */\r\n+    public String getType (int i)\r\n+    {\r\n+\tif (i < 0) {\r\n+\t    return null;\r\n+\t}\r\n+\ttry {\r\n+\t    return (String)types.elementAt(i);\r\n+\t} catch (ArrayIndexOutOfBoundsException e) {\r\n+\t    return null;\r\n+\t}\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Get the value of an attribute (by position).\r\n+     *\r\n+     * @param i The position of the attribute in the list.\r\n+     * @return The attribute value as a string, or null if\r\n+     *         there is no attribute at that position.\r\n+     * @see org.xml.sax.AttributeList#getValue(int)\r\n+     */\r\n+    public String getValue (int i)\r\n+    {\r\n+\tif (i < 0) {\r\n+\t    return null;\r\n+\t}\r\n+\ttry {\r\n+\t    return (String)values.elementAt(i);\r\n+\t} catch (ArrayIndexOutOfBoundsException e) {\r\n+\t    return null;\r\n+\t}\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Get the type of an attribute (by name).\r\n+     *\r\n+     * @param name The attribute name.\r\n+     * @return The attribute type as a string (\"NMTOKEN\" for an\r\n+     *         enumeration, and \"CDATA\" if no declaration was\r\n+     *         read).\r\n+     * @see org.xml.sax.AttributeList#getType(java.lang.String)\r\n+     */\r\n+    public String getType (String name)\r\n+    {\r\n+\treturn getType(names.indexOf(name));\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Get the value of an attribute (by name).\r\n+     *\r\n+     * @param name The attribute name.\r\n+     * @see org.xml.sax.AttributeList#getValue(java.lang.String)\r\n+     */\r\n+    public String getValue (String name)\r\n+    {\r\n+\treturn getValue(names.indexOf(name));\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal state.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+    Vector names = new Vector();\r\n+    Vector types = new Vector();\r\n+    Vector values = new Vector();\r\n+\r\n+}\r\n+\r\n+// end of AttributeListImpl.java\r"}, {"sha": "b714f39fdb8630602400e646505237f4f9c89fce", "filename": "libjava/org/xml/sax/helpers/AttributesImpl.java", "status": "added", "additions": 606, "deletions": 0, "changes": 606, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FAttributesImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FAttributesImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FAttributesImpl.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,606 @@\n+// AttributesImpl.java - default implementation of Attributes.\r\n+// Written by David Megginson, sax@megginson.com\r\n+// NO WARRANTY!  This class is in the public domain.\r\n+\r\n+// $Id: AttributesImpl.java,v 1.2 2001/05/31 16:03:17 garyp Exp $\r\n+\r\n+\r\n+package org.xml.sax.helpers;\r\n+\r\n+import org.xml.sax.Attributes;\r\n+\r\n+\r\n+/**\r\n+ * Default implementation of the Attributes interface.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This class provides a default implementation of the SAX2\r\n+ * {@link org.xml.sax.Attributes Attributes} interface, with the \r\n+ * addition of manipulators so that the list can be modified or \r\n+ * reused.</p>\r\n+ *\r\n+ * <p>There are two typical uses of this class:</p>\r\n+ *\r\n+ * <ol>\r\n+ * <li>to take a persistent snapshot of an Attributes object\r\n+ *  in a {@link org.xml.sax.ContentHandler#startElement startElement} event; or</li>\r\n+ * <li>to construct or modify an Attributes object in a SAX2 driver or filter.</li>\r\n+ * </ol>\r\n+ *\r\n+ * <p>This class replaces the now-deprecated SAX1 {@link \r\n+ * org.xml.sax.helpers.AttributeListImpl AttributeListImpl}\r\n+ * class; in addition to supporting the updated Attributes\r\n+ * interface rather than the deprecated {@link org.xml.sax.AttributeList\r\n+ * AttributeList} interface, it also includes a much more efficient \r\n+ * implementation using a single array rather than a set of Vectors.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ */\r\n+public class AttributesImpl implements Attributes\r\n+{\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Constructors.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Construct a new, empty AttributesImpl object.\r\n+     */\r\n+    public AttributesImpl ()\r\n+    {\r\n+\tlength = 0;\r\n+\tdata = null;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Copy an existing Attributes object.\r\n+     *\r\n+     * <p>This constructor is especially useful inside a\r\n+     * {@link org.xml.sax.ContentHandler#startElement startElement} event.</p>\r\n+     *\r\n+     * @param atts The existing Attributes object.\r\n+     */\r\n+    public AttributesImpl (Attributes atts)\r\n+    {\r\n+\tsetAttributes(atts);\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.Attributes.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Return the number of attributes in the list.\r\n+     *\r\n+     * @return The number of attributes in the list.\r\n+     * @see org.xml.sax.Attributes#getLength\r\n+     */\r\n+    public int getLength ()\r\n+    {\r\n+\treturn length;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return an attribute's Namespace URI.\r\n+     *\r\n+     * @param index The attribute's index (zero-based).\r\n+     * @return The Namespace URI, the empty string if none is\r\n+     *         available, or null if the index is out of range.\r\n+     * @see org.xml.sax.Attributes#getURI\r\n+     */\r\n+    public String getURI (int index)\r\n+    {\r\n+\tif (index >= 0 && index < length) {\r\n+\t    return data[index*5];\r\n+\t} else {\r\n+\t    return null;\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return an attribute's local name.\r\n+     *\r\n+     * @param index The attribute's index (zero-based).\r\n+     * @return The attribute's local name, the empty string if \r\n+     *         none is available, or null if the index if out of range.\r\n+     * @see org.xml.sax.Attributes#getLocalName\r\n+     */\r\n+    public String getLocalName (int index)\r\n+    {\r\n+\tif (index >= 0 && index < length) {\r\n+\t    return data[index*5+1];\r\n+\t} else {\r\n+\t    return null;\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return an attribute's qualified (prefixed) name.\r\n+     *\r\n+     * @param index The attribute's index (zero-based).\r\n+     * @return The attribute's qualified name, the empty string if \r\n+     *         none is available, or null if the index is out of bounds.\r\n+     * @see org.xml.sax.Attributes#getQName\r\n+     */\r\n+    public String getQName (int index)\r\n+    {\r\n+\tif (index >= 0 && index < length) {\r\n+\t    return data[index*5+2];\r\n+\t} else {\r\n+\t    return null;\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return an attribute's type by index.\r\n+     *\r\n+     * @param index The attribute's index (zero-based).\r\n+     * @return The attribute's type, \"CDATA\" if the type is unknown, or null\r\n+     *         if the index is out of bounds.\r\n+     * @see org.xml.sax.Attributes#getType(int)\r\n+     */\r\n+    public String getType (int index)\r\n+    {\r\n+\tif (index >= 0 && index < length) {\r\n+\t    return data[index*5+3];\r\n+\t} else {\r\n+\t    return null;\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return an attribute's value by index.\r\n+     *\r\n+     * @param index The attribute's index (zero-based).\r\n+     * @return The attribute's value or null if the index is out of bounds.\r\n+     * @see org.xml.sax.Attributes#getValue(int)\r\n+     */\r\n+    public String getValue (int index)\r\n+    {\r\n+\tif (index >= 0 && index < length) {\r\n+\t    return data[index*5+4];\r\n+\t} else {\r\n+\t    return null;\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's index by Namespace name.\r\n+     *\r\n+     * <p>In many cases, it will be more efficient to look up the name once and\r\n+     * use the index query methods rather than using the name query methods\r\n+     * repeatedly.</p>\r\n+     *\r\n+     * @param uri The attribute's Namespace URI, or the empty\r\n+     *        string if none is available.\r\n+     * @param localName The attribute's local name.\r\n+     * @return The attribute's index, or -1 if none matches.\r\n+     * @see org.xml.sax.Attributes#getIndex(java.lang.String,java.lang.String)\r\n+     */\r\n+    public int getIndex (String uri, String localName)\r\n+    {\r\n+\tint max = length * 5;\r\n+\tfor (int i = 0; i < max; i += 5) {\r\n+\t    if (data[i].equals(uri) && data[i+1].equals(localName)) {\r\n+\t\treturn i / 5;\r\n+\t    }\r\n+\t} \r\n+\treturn -1;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's index by qualified (prefixed) name.\r\n+     *\r\n+     * @param qName The qualified name.\r\n+     * @return The attribute's index, or -1 if none matches.\r\n+     * @see org.xml.sax.Attributes#getIndex(java.lang.String)\r\n+     */\r\n+    public int getIndex (String qName)\r\n+    {\r\n+\tint max = length * 5;\r\n+\tfor (int i = 0; i < max; i += 5) {\r\n+\t    if (data[i+2].equals(qName)) {\r\n+\t\treturn i / 5;\r\n+\t    }\r\n+\t} \r\n+\treturn -1;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's type by Namespace-qualified name.\r\n+     *\r\n+     * @param uri The Namespace URI, or the empty string for a name\r\n+     *        with no explicit Namespace URI.\r\n+     * @param localName The local name.\r\n+     * @return The attribute's type, or null if there is no\r\n+     *         matching attribute.\r\n+     * @see org.xml.sax.Attributes#getType(java.lang.String,java.lang.String)\r\n+     */\r\n+    public String getType (String uri, String localName)\r\n+    {\r\n+\tint max = length * 5;\r\n+\tfor (int i = 0; i < max; i += 5) {\r\n+\t    if (data[i].equals(uri) && data[i+1].equals(localName)) {\r\n+\t\treturn data[i+3];\r\n+\t    }\r\n+\t} \r\n+\treturn null;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's type by qualified (prefixed) name.\r\n+     *\r\n+     * @param qName The qualified name.\r\n+     * @return The attribute's type, or null if there is no\r\n+     *         matching attribute.\r\n+     * @see org.xml.sax.Attributes#getType(java.lang.String)\r\n+     */\r\n+    public String getType (String qName)\r\n+    {\r\n+\tint max = length * 5;\r\n+\tfor (int i = 0; i < max; i += 5) {\r\n+\t    if (data[i+2].equals(qName)) {\r\n+\t\treturn data[i+3];\r\n+\t    }\r\n+\t}\r\n+\treturn null;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's value by Namespace-qualified name.\r\n+     *\r\n+     * @param uri The Namespace URI, or the empty string for a name\r\n+     *        with no explicit Namespace URI.\r\n+     * @param localName The local name.\r\n+     * @return The attribute's value, or null if there is no\r\n+     *         matching attribute.\r\n+     * @see org.xml.sax.Attributes#getValue(java.lang.String,java.lang.String)\r\n+     */\r\n+    public String getValue (String uri, String localName)\r\n+    {\r\n+\tint max = length * 5;\r\n+\tfor (int i = 0; i < max; i += 5) {\r\n+\t    if (data[i].equals(uri) && data[i+1].equals(localName)) {\r\n+\t\treturn data[i+4];\r\n+\t    }\r\n+\t}\r\n+\treturn null;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Look up an attribute's value by qualified (prefixed) name.\r\n+     *\r\n+     * @param qName The qualified name.\r\n+     * @return The attribute's value, or null if there is no\r\n+     *         matching attribute.\r\n+     * @see org.xml.sax.Attributes#getValue(java.lang.String)\r\n+     */\r\n+    public String getValue (String qName)\r\n+    {\r\n+\tint max = length * 5;\r\n+\tfor (int i = 0; i < max; i += 5) {\r\n+\t    if (data[i+2].equals(qName)) {\r\n+\t\treturn data[i+4];\r\n+\t    }\r\n+\t}\r\n+\treturn null;\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Manipulators.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Clear the attribute list for reuse.\r\n+     *\r\n+     * <p>Note that no memory is actually freed by this call:\r\n+     * the current arrays are kept so that they can be \r\n+     * reused.</p>\r\n+     */\r\n+    public void clear ()\r\n+    {\r\n+\tlength = 0;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Copy an entire Attributes object.\r\n+     *\r\n+     * <p>It may be more efficient to reuse an existing object\r\n+     * rather than constantly allocating new ones.</p>\r\n+     * \r\n+     * @param atts The attributes to copy.\r\n+     */\r\n+    public void setAttributes (Attributes atts)\r\n+    {\r\n+\tclear();\r\n+\tlength = atts.getLength();\r\n+\tdata = new String[length*5]; \r\n+\tfor (int i = 0; i < length; i++) {\r\n+\t    data[i*5] = atts.getURI(i);\r\n+\t    data[i*5+1] = atts.getLocalName(i);\r\n+\t    data[i*5+2] = atts.getQName(i);\r\n+\t    data[i*5+3] = atts.getType(i);\r\n+\t    data[i*5+4] = atts.getValue(i);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Add an attribute to the end of the list.\r\n+     *\r\n+     * <p>For the sake of speed, this method does no checking\r\n+     * to see if the attribute is already in the list: that is\r\n+     * the responsibility of the application.</p>\r\n+     *\r\n+     * @param uri The Namespace URI, or the empty string if\r\n+     *        none is available or Namespace processing is not\r\n+     *        being performed.\r\n+     * @param localName The local name, or the empty string if\r\n+     *        Namespace processing is not being performed.\r\n+     * @param qName The qualified (prefixed) name, or the empty string\r\n+     *        if qualified names are not available.\r\n+     * @param type The attribute type as a string.\r\n+     * @param value The attribute value.\r\n+     */\r\n+    public void addAttribute (String uri, String localName, String qName,\r\n+\t\t\t      String type, String value)\r\n+    {\r\n+\tensureCapacity(length+1);\r\n+\tdata[length*5] = uri;\r\n+\tdata[length*5+1] = localName;\r\n+\tdata[length*5+2] = qName;\r\n+\tdata[length*5+3] = type;\r\n+\tdata[length*5+4] = value;\r\n+\tlength++;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set an attribute in the list.\r\n+     *\r\n+     * <p>For the sake of speed, this method does no checking\r\n+     * for name conflicts or well-formedness: such checks are the\r\n+     * responsibility of the application.</p>\r\n+     *\r\n+     * @param index The index of the attribute (zero-based).\r\n+     * @param uri The Namespace URI, or the empty string if\r\n+     *        none is available or Namespace processing is not\r\n+     *        being performed.\r\n+     * @param localName The local name, or the empty string if\r\n+     *        Namespace processing is not being performed.\r\n+     * @param qName The qualified name, or the empty string\r\n+     *        if qualified names are not available.\r\n+     * @param type The attribute type as a string.\r\n+     * @param value The attribute value.\r\n+     * @exception java.lang.ArrayIndexOutOfBoundsException When the\r\n+     *            supplied index does not point to an attribute\r\n+     *            in the list.\r\n+     */\r\n+    public void setAttribute (int index, String uri, String localName,\r\n+\t\t\t      String qName, String type, String value)\r\n+    {\r\n+\tif (index >= 0 && index < length) {\r\n+\t    data[index*5] = uri;\r\n+\t    data[index*5+1] = localName;\r\n+\t    data[index*5+2] = qName;\r\n+\t    data[index*5+3] = type;\r\n+\t    data[index*5+4] = value;\r\n+\t} else {\r\n+\t    badIndex(index);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Remove an attribute from the list.\r\n+     *\r\n+     * @param index The index of the attribute (zero-based).\r\n+     * @exception java.lang.ArrayIndexOutOfBoundsException When the\r\n+     *            supplied index does not point to an attribute\r\n+     *            in the list.\r\n+     */\r\n+    public void removeAttribute (int index)\r\n+    {\r\n+\tif (index >= 0 && index < length) {\r\n+\t    data[index*5] = null;\r\n+\t    data[index*5+1] = null;\r\n+\t    data[index*5+2] = null;\r\n+\t    data[index*5+3] = null;\r\n+\t    data[index*5+4] = null;\r\n+\t    if (index < length - 1) {\r\n+\t\tSystem.arraycopy(data, (index+1)*5, data, index*5,\r\n+\t\t\t\t (length-index-1)*5);\r\n+\t    }\r\n+\t    length--;\r\n+\t} else {\r\n+\t    badIndex(index);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the Namespace URI of a specific attribute.\r\n+     *\r\n+     * @param index The index of the attribute (zero-based).\r\n+     * @param uri The attribute's Namespace URI, or the empty\r\n+     *        string for none.\r\n+     * @exception java.lang.ArrayIndexOutOfBoundsException When the\r\n+     *            supplied index does not point to an attribute\r\n+     *            in the list.\r\n+     */\r\n+    public void setURI (int index, String uri)\r\n+    {\r\n+\tif (index >= 0 && index < length) {\r\n+\t    data[index*5] = uri;\r\n+\t} else {\r\n+\t    badIndex(index);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the local name of a specific attribute.\r\n+     *\r\n+     * @param index The index of the attribute (zero-based).\r\n+     * @param localName The attribute's local name, or the empty\r\n+     *        string for none.\r\n+     * @exception java.lang.ArrayIndexOutOfBoundsException When the\r\n+     *            supplied index does not point to an attribute\r\n+     *            in the list.\r\n+     */\r\n+    public void setLocalName (int index, String localName)\r\n+    {\r\n+\tif (index >= 0 && index < length) {\r\n+\t    data[index*5+1] = localName;\r\n+\t} else {\r\n+\t    badIndex(index);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the qualified name of a specific attribute.\r\n+     *\r\n+     * @param index The index of the attribute (zero-based).\r\n+     * @param qName The attribute's qualified name, or the empty\r\n+     *        string for none.\r\n+     * @exception java.lang.ArrayIndexOutOfBoundsException When the\r\n+     *            supplied index does not point to an attribute\r\n+     *            in the list.\r\n+     */\r\n+    public void setQName (int index, String qName)\r\n+    {\r\n+\tif (index >= 0 && index < length) {\r\n+\t    data[index*5+2] = qName;\r\n+\t} else {\r\n+\t    badIndex(index);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the type of a specific attribute.\r\n+     *\r\n+     * @param index The index of the attribute (zero-based).\r\n+     * @param type The attribute's type.\r\n+     * @exception java.lang.ArrayIndexOutOfBoundsException When the\r\n+     *            supplied index does not point to an attribute\r\n+     *            in the list.\r\n+     */\r\n+    public void setType (int index, String type)\r\n+    {\r\n+\tif (index >= 0 && index < length) {\r\n+\t    data[index*5+3] = type;\r\n+\t} else {\r\n+\t    badIndex(index);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the value of a specific attribute.\r\n+     *\r\n+     * @param index The index of the attribute (zero-based).\r\n+     * @param value The attribute's value.\r\n+     * @exception java.lang.ArrayIndexOutOfBoundsException When the\r\n+     *            supplied index does not point to an attribute\r\n+     *            in the list.\r\n+     */\r\n+    public void setValue (int index, String value)\r\n+    {\r\n+\tif (index >= 0 && index < length) {\r\n+\t    data[index*5+4] = value;\r\n+\t} else {\r\n+\t    badIndex(index);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal methods.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Ensure the internal array's capacity.\r\n+     *\r\n+     * @param n The minimum number of attributes that the array must\r\n+     *        be able to hold.\r\n+     */\r\n+    private void ensureCapacity (int n)\r\n+    {\r\n+\tif (n > 0 && data == null) {\r\n+\t    data = new String[25];\r\n+\t}\r\n+\r\n+\tint max = data.length;\r\n+\tif (max >= n * 5) {\r\n+\t    return;\r\n+\t}\r\n+\r\n+\r\n+\twhile (max < n * 5) {\r\n+\t    max *= 2;\r\n+\t}\r\n+\tString newData[] = new String[max];\r\n+\tSystem.arraycopy(data, 0, newData, 0, length*5);\r\n+\tdata = newData;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Report a bad array index in a manipulator.\r\n+     *\r\n+     * @param index The index to report.\r\n+     * @exception java.lang.ArrayIndexOutOfBoundsException Always.\r\n+     */\r\n+    private void badIndex (int index)\r\n+\tthrows ArrayIndexOutOfBoundsException\r\n+    {\r\n+\tString msg =\r\n+\t    \"Attempt to modify attribute at illegal index: \" + index;\r\n+\tthrow new ArrayIndexOutOfBoundsException(msg);\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal state.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+    int length;\r\n+    String data [];\r\n+\r\n+}\r\n+\r\n+// end of AttributesImpl.java\r\n+\r"}, {"sha": "dfda9c39a940ebc113ae0778a2991fc72b634b59", "filename": "libjava/org/xml/sax/helpers/DefaultHandler.java", "status": "added", "additions": 447, "deletions": 0, "changes": 447, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FDefaultHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FDefaultHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FDefaultHandler.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,447 @@\n+// DefaultHandler.java - default implementation of the core handlers.\r\n+// Written by David Megginson, sax@megginson.com\r\n+// NO WARRANTY!  This class is in the public domain.\r\n+\r\n+// $Id: DefaultHandler.java,v 1.1 2000/10/02 02:43:20 sboag Exp $\r\n+\r\n+package org.xml.sax.helpers;\r\n+\r\n+import org.xml.sax.InputSource;\r\n+import org.xml.sax.Locator;\r\n+import org.xml.sax.Attributes;\r\n+import org.xml.sax.EntityResolver;\r\n+import org.xml.sax.DTDHandler;\r\n+import org.xml.sax.ContentHandler;\r\n+import org.xml.sax.ErrorHandler;\r\n+import org.xml.sax.SAXException;\r\n+import org.xml.sax.SAXParseException;\r\n+\r\n+\r\n+/**\r\n+ * Default base class for SAX2 event handlers.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This class is available as a convenience base class for SAX2\r\n+ * applications: it provides default implementations for all of the\r\n+ * callbacks in the four core SAX2 handler classes:</p>\r\n+ *\r\n+ * <ul>\r\n+ * <li>{@link org.xml.sax.EntityResolver EntityResolver}</li>\r\n+ * <li>{@link org.xml.sax.DTDHandler DTDHandler}</li>\r\n+ * <li>{@link org.xml.sax.ContentHandler ContentHandler}</li>\r\n+ * <li>{@link org.xml.sax.ErrorHandler ErrorHandler}</li>\r\n+ * </ul>\r\n+ *\r\n+ * <p>Application writers can extend this class when they need to\r\n+ * implement only part of an interface; parser writers can\r\n+ * instantiate this class to provide default handlers when the\r\n+ * application has not supplied its own.</p>\r\n+ *\r\n+ * <p>This class replaces the deprecated SAX1\r\n+ * {@link org.xml.sax.HandlerBase HandlerBase} class.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.EntityResolver\r\n+ * @see org.xml.sax.DTDHandler\r\n+ * @see org.xml.sax.ContentHandler\r\n+ * @see org.xml.sax.ErrorHandler\r\n+ */\r\n+public class DefaultHandler\r\n+    implements EntityResolver, DTDHandler, ContentHandler, ErrorHandler\r\n+{\r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Default implementation of the EntityResolver interface.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    /**\r\n+     * Resolve an external entity.\r\n+     *\r\n+     * <p>Always return null, so that the parser will use the system\r\n+     * identifier provided in the XML document.  This method implements\r\n+     * the SAX default behaviour: application writers can override it\r\n+     * in a subclass to do special translations such as catalog lookups\r\n+     * or URI redirection.</p>\r\n+     *\r\n+     * @param publicId The public identifer, or null if none is\r\n+     *                 available.\r\n+     * @param systemId The system identifier provided in the XML \r\n+     *                 document.\r\n+     * @return The new input source, or null to require the\r\n+     *         default behaviour.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.EntityResolver#resolveEntity\r\n+     */\r\n+    public InputSource resolveEntity (String publicId, String systemId)\r\n+\tthrows SAXException\r\n+    {\r\n+\treturn null;\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Default implementation of DTDHandler interface.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a notation declaration.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass if they wish to keep track of the notations\r\n+     * declared in a document.</p>\r\n+     *\r\n+     * @param name The notation name.\r\n+     * @param publicId The notation public identifier, or null if not\r\n+     *                 available.\r\n+     * @param systemId The notation system identifier.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.DTDHandler#notationDecl\r\n+     */\r\n+    public void notationDecl (String name, String publicId, String systemId)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of an unparsed entity declaration.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to keep track of the unparsed entities\r\n+     * declared in a document.</p>\r\n+     *\r\n+     * @param name The entity name.\r\n+     * @param publicId The entity public identifier, or null if not\r\n+     *                 available.\r\n+     * @param systemId The entity system identifier.\r\n+     * @param notationName The name of the associated notation.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.DTDHandler#unparsedEntityDecl\r\n+     */\r\n+    public void unparsedEntityDecl (String name, String publicId,\r\n+\t\t\t\t    String systemId, String notationName)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Default implementation of ContentHandler interface.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive a Locator object for document events.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass if they wish to store the locator for use\r\n+     * with other document events.</p>\r\n+     *\r\n+     * @param locator A locator for all SAX document events.\r\n+     * @see org.xml.sax.ContentHandler#setDocumentLocator\r\n+     * @see org.xml.sax.Locator\r\n+     */\r\n+    public void setDocumentLocator (Locator locator)\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of the beginning of the document.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions at the beginning\r\n+     * of a document (such as allocating the root node of a tree or\r\n+     * creating an output file).</p>\r\n+     *\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ContentHandler#startDocument\r\n+     */\r\n+    public void startDocument ()\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of the end of the document.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions at the end\r\n+     * of a document (such as finalising a tree or closing an output\r\n+     * file).</p>\r\n+     *\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ContentHandler#endDocument\r\n+     */\r\n+    public void endDocument ()\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Receive notification of the start of a Namespace mapping.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions at the start of\r\n+     * each Namespace prefix scope (such as storing the prefix mapping).</p>\r\n+     *\r\n+     * @param prefix The Namespace prefix being declared.\r\n+     * @param uri The Namespace URI mapped to the prefix.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ContentHandler#startPrefixMapping\r\n+     */\r\n+    public void startPrefixMapping (String prefix, String uri)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Receive notification of the end of a Namespace mapping.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions at the end of\r\n+     * each prefix mapping.</p>\r\n+     *\r\n+     * @param prefix The Namespace prefix being declared.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ContentHandler#endPrefixMapping\r\n+     */\r\n+    public void endPrefixMapping (String prefix)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of the start of an element.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions at the start of\r\n+     * each element (such as allocating a new tree node or writing\r\n+     * output to a file).</p>\r\n+     *\r\n+     * @param name The element type name.\r\n+     * @param attributes The specified or defaulted attributes.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ContentHandler#startElement\r\n+     */\r\n+    public void startElement (String uri, String localName,\r\n+\t\t\t      String qName, Attributes attributes)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of the end of an element.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions at the end of\r\n+     * each element (such as finalising a tree node or writing\r\n+     * output to a file).</p>\r\n+     *\r\n+     * @param name The element type name.\r\n+     * @param attributes The specified or defaulted attributes.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ContentHandler#endElement\r\n+     */\r\n+    public void endElement (String uri, String localName, String qName)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of character data inside an element.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method to take specific actions for each chunk of character data\r\n+     * (such as adding the data to a node or buffer, or printing it to\r\n+     * a file).</p>\r\n+     *\r\n+     * @param ch The characters.\r\n+     * @param start The start position in the character array.\r\n+     * @param length The number of characters to use from the\r\n+     *               character array.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ContentHandler#characters\r\n+     */\r\n+    public void characters (char ch[], int start, int length)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of ignorable whitespace in element content.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method to take specific actions for each chunk of ignorable\r\n+     * whitespace (such as adding data to a node or buffer, or printing\r\n+     * it to a file).</p>\r\n+     *\r\n+     * @param ch The whitespace characters.\r\n+     * @param start The start position in the character array.\r\n+     * @param length The number of characters to use from the\r\n+     *               character array.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ContentHandler#ignorableWhitespace\r\n+     */\r\n+    public void ignorableWhitespace (char ch[], int start, int length)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a processing instruction.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions for each\r\n+     * processing instruction, such as setting status variables or\r\n+     * invoking other methods.</p>\r\n+     *\r\n+     * @param target The processing instruction target.\r\n+     * @param data The processing instruction data, or null if\r\n+     *             none is supplied.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ContentHandler#processingInstruction\r\n+     */\r\n+    public void processingInstruction (String target, String data)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Receive notification of a skipped entity.\r\n+     *\r\n+     * <p>By default, do nothing.  Application writers may override this\r\n+     * method in a subclass to take specific actions for each\r\n+     * processing instruction, such as setting status variables or\r\n+     * invoking other methods.</p>\r\n+     *\r\n+     * @param name The name of the skipped entity.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ContentHandler#processingInstruction\r\n+     */\r\n+    public void skippedEntity (String name)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Default implementation of the ErrorHandler interface.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a parser warning.\r\n+     *\r\n+     * <p>The default implementation does nothing.  Application writers\r\n+     * may override this method in a subclass to take specific actions\r\n+     * for each warning, such as inserting the message in a log file or\r\n+     * printing it to the console.</p>\r\n+     *\r\n+     * @param e The warning information encoded as an exception.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ErrorHandler#warning\r\n+     * @see org.xml.sax.SAXParseException\r\n+     */\r\n+    public void warning (SAXParseException e)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Receive notification of a recoverable parser error.\r\n+     *\r\n+     * <p>The default implementation does nothing.  Application writers\r\n+     * may override this method in a subclass to take specific actions\r\n+     * for each error, such as inserting the message in a log file or\r\n+     * printing it to the console.</p>\r\n+     *\r\n+     * @param e The warning information encoded as an exception.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ErrorHandler#warning\r\n+     * @see org.xml.sax.SAXParseException\r\n+     */\r\n+    public void error (SAXParseException e)\r\n+\tthrows SAXException\r\n+    {\r\n+\t// no op\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Report a fatal XML parsing error.\r\n+     *\r\n+     * <p>The default implementation throws a SAXParseException.\r\n+     * Application writers may override this method in a subclass if\r\n+     * they need to take specific actions for each fatal error (such as\r\n+     * collecting all of the errors into a single report): in any case,\r\n+     * the application must stop all regular processing when this\r\n+     * method is invoked, since the document is no longer reliable, and\r\n+     * the parser may no longer report parsing events.</p>\r\n+     *\r\n+     * @param e The error information encoded as an exception.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @see org.xml.sax.ErrorHandler#fatalError\r\n+     * @see org.xml.sax.SAXParseException\r\n+     */\r\n+    public void fatalError (SAXParseException e)\r\n+\tthrows SAXException\r\n+    {\r\n+\tthrow e;\r\n+    }\r\n+    \r\n+}\r\n+\r\n+// end of DefaultHandler.java\r"}, {"sha": "634044ccff25f21028b3c9d9f3da651631eba65a", "filename": "libjava/org/xml/sax/helpers/LocatorImpl.java", "status": "added", "additions": 212, "deletions": 0, "changes": 212, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FLocatorImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FLocatorImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FLocatorImpl.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,212 @@\n+// SAX default implementation for Locator.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: LocatorImpl.java,v 1.1 2000/10/02 02:43:20 sboag Exp $\r\n+\r\n+package org.xml.sax.helpers;\r\n+\r\n+import org.xml.sax.Locator;\r\n+\r\n+\r\n+/**\r\n+ * Provide an optional convenience implementation of Locator.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This class is available mainly for application writers, who\r\n+ * can use it to make a persistent snapshot of a locator at any\r\n+ * point during a document parse:</p>\r\n+ *\r\n+ * <pre>\r\n+ * Locator locator;\r\n+ * Locator startloc;\r\n+ *\r\n+ * public void setLocator (Locator locator)\r\n+ * {\r\n+ *         // note the locator\r\n+ *   this.locator = locator;\r\n+ * }\r\n+ *\r\n+ * public void startDocument ()\r\n+ * {\r\n+ *         // save the location of the start of the document\r\n+ *         // for future use.\r\n+ *   Locator startloc = new LocatorImpl(locator);\r\n+ * }\r\n+ *</pre>\r\n+ *\r\n+ * <p>Normally, parser writers will not use this class, since it\r\n+ * is more efficient to provide location information only when\r\n+ * requested, rather than constantly updating a Locator object.</p>\r\n+ *\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.Locator Locator\r\n+ */\r\n+public class LocatorImpl implements Locator\r\n+{\r\n+    \r\n+    \r\n+    /**\r\n+     * Zero-argument constructor.\r\n+     *\r\n+     * <p>This will not normally be useful, since the main purpose\r\n+     * of this class is to make a snapshot of an existing Locator.</p>\r\n+     */\r\n+    public LocatorImpl ()\r\n+    {\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Copy constructor.\r\n+     *\r\n+     * <p>Create a persistent copy of the current state of a locator.\r\n+     * When the original locator changes, this copy will still keep\r\n+     * the original values (and it can be used outside the scope of\r\n+     * DocumentHandler methods).</p>\r\n+     *\r\n+     * @param locator The locator to copy.\r\n+     */\r\n+    public LocatorImpl (Locator locator)\r\n+    {\r\n+\tsetPublicId(locator.getPublicId());\r\n+\tsetSystemId(locator.getSystemId());\r\n+\tsetLineNumber(locator.getLineNumber());\r\n+\tsetColumnNumber(locator.getColumnNumber());\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.Locator\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the saved public identifier.\r\n+     *\r\n+     * @return The public identifier as a string, or null if none\r\n+     *         is available.\r\n+     * @see org.xml.sax.Locator#getPublicId\r\n+     * @see #setPublicId\r\n+     */\r\n+    public String getPublicId ()\r\n+    {\r\n+\treturn publicId;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the saved system identifier.\r\n+     *\r\n+     * @return The system identifier as a string, or null if none\r\n+     *         is available.\r\n+     * @see org.xml.sax.Locator#getSystemId\r\n+     * @see #setSystemId\r\n+     */\r\n+    public String getSystemId ()\r\n+    {\r\n+\treturn systemId;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the saved line number (1-based).\r\n+     *\r\n+     * @return The line number as an integer, or -1 if none is available.\r\n+     * @see org.xml.sax.Locator#getLineNumber\r\n+     * @see #setLineNumber\r\n+     */\r\n+    public int getLineNumber ()\r\n+    {\r\n+\treturn lineNumber;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Return the saved column number (1-based).\r\n+     *\r\n+     * @return The column number as an integer, or -1 if none is available.\r\n+     * @see org.xml.sax.Locator#getColumnNumber\r\n+     * @see #setColumnNumber\r\n+     */\r\n+    public int getColumnNumber ()\r\n+    {\r\n+\treturn columnNumber;\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Setters for the properties (not in org.xml.sax.Locator)\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    \r\n+    /**\r\n+     * Set the public identifier for this locator.\r\n+     *\r\n+     * @param publicId The new public identifier, or null \r\n+     *        if none is available.\r\n+     * @see #getPublicId\r\n+     */\r\n+    public void setPublicId (String publicId)\r\n+    {\r\n+\tthis.publicId = publicId;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Set the system identifier for this locator.\r\n+     *\r\n+     * @param systemId The new system identifier, or null \r\n+     *        if none is available.\r\n+     * @see #getSystemId\r\n+     */\r\n+    public void setSystemId (String systemId)\r\n+    {\r\n+\tthis.systemId = systemId;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Set the line number for this locator (1-based).\r\n+     *\r\n+     * @param lineNumber The line number, or -1 if none is available.\r\n+     * @see #getLineNumber\r\n+     */\r\n+    public void setLineNumber (int lineNumber)\r\n+    {\r\n+\tthis.lineNumber = lineNumber;\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Set the column number for this locator (1-based).\r\n+     *\r\n+     * @param columnNumber The column number, or -1 if none is available.\r\n+     * @see #getColumnNumber\r\n+     */\r\n+    public void setColumnNumber (int columnNumber)\r\n+    {\r\n+\tthis.columnNumber = columnNumber;\r\n+    }\r\n+    \r\n+    \r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal state.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    \r\n+    private String publicId;\r\n+    private String systemId;\r\n+    private int lineNumber;\r\n+    private int columnNumber;\r\n+    \r\n+}\r\n+\r\n+// end of LocatorImpl.java\r"}, {"sha": "a4588c3d2c726de6972e74c345fd2db974afc56b", "filename": "libjava/org/xml/sax/helpers/NamespaceSupport.java", "status": "added", "additions": 689, "deletions": 0, "changes": 689, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FNamespaceSupport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FNamespaceSupport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FNamespaceSupport.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,689 @@\n+// NamespaceSupport.java - generic Namespace support for SAX.\r\n+// Written by David Megginson, sax@megginson.com\r\n+// This class is in the Public Domain.  NO WARRANTY!\r\n+\r\n+// $Id: NamespaceSupport.java,v 1.1 2000/10/02 02:43:20 sboag Exp $\r\n+\r\n+package org.xml.sax.helpers;\r\n+\r\n+import java.util.EmptyStackException;\r\n+import java.util.Enumeration;\r\n+import java.util.Hashtable;\r\n+import java.util.Vector;\r\n+\r\n+\r\n+/**\r\n+ * Encapsulate Namespace logic for use by SAX drivers.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This class encapsulates the logic of Namespace processing:\r\n+ * it tracks the declarations currently in force for each context\r\n+ * and automatically processes qualified XML 1.0 names into their\r\n+ * Namespace parts; it can also be used in reverse for generating\r\n+ * XML 1.0 from Namespaces.</p>\r\n+ *\r\n+ * <p>Namespace support objects are reusable, but the reset method\r\n+ * must be invoked between each session.</p>\r\n+ *\r\n+ * <p>Here is a simple session:</p>\r\n+ *\r\n+ * <pre>\r\n+ * String parts[] = new String[3];\r\n+ * NamespaceSupport support = new NamespaceSupport();\r\n+ *\r\n+ * support.pushContext();\r\n+ * support.declarePrefix(\"\", \"http://www.w3.org/1999/xhtml\");\r\n+ * support.declarePrefix(\"dc\", \"http://www.purl.org/dc#\");\r\n+ *\r\n+ * String parts[] = support.processName(\"p\", parts, false);\r\n+ * System.out.println(\"Namespace URI: \" + parts[0]);\r\n+ * System.out.println(\"Local name: \" + parts[1]);\r\n+ * System.out.println(\"Raw name: \" + parts[2]);\r\n+\r\n+ * String parts[] = support.processName(\"dc:title\", parts, false);\r\n+ * System.out.println(\"Namespace URI: \" + parts[0]);\r\n+ * System.out.println(\"Local name: \" + parts[1]);\r\n+ * System.out.println(\"Raw name: \" + parts[2]);\r\n+\r\n+ * support.popContext();\r\n+ * </pre>\r\n+ *\r\n+ * <p>Note that this class is optimized for the use case where most\r\n+ * elements do not contain Namespace declarations: if the same\r\n+ * prefix/URI mapping is repeated for each context (for example), this\r\n+ * class will be somewhat less efficient.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ */\r\n+public class NamespaceSupport\r\n+{\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Constants.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * The XML Namespace as a constant.\r\n+     *\r\n+     * <p>This is the Namespace URI that is automatically mapped\r\n+     * to the \"xml\" prefix.</p>\r\n+     */\r\n+    public final static String XMLNS =\r\n+\t\"http://www.w3.org/XML/1998/namespace\";\r\n+\r\n+\r\n+    /**\r\n+     * An empty enumeration.\r\n+     */\r\n+    private final static Enumeration EMPTY_ENUMERATION =\r\n+\tnew Vector().elements();\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Constructor.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Create a new Namespace support object.\r\n+     */\r\n+    public NamespaceSupport ()\r\n+    {\r\n+\treset();\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Context management.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Reset this Namespace support object for reuse.\r\n+     *\r\n+     * <p>It is necessary to invoke this method before reusing the\r\n+     * Namespace support object for a new session.</p>\r\n+     */\r\n+    public void reset ()\r\n+    {\r\n+\tcontexts = new Context[32];\r\n+\tcontextPos = 0;\r\n+\tcontexts[contextPos] = currentContext = new Context();\r\n+\tcurrentContext.declarePrefix(\"xml\", XMLNS);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Start a new Namespace context.\r\n+     *\r\n+     * <p>Normally, you should push a new context at the beginning\r\n+     * of each XML element: the new context will automatically inherit\r\n+     * the declarations of its parent context, but it will also keep\r\n+     * track of which declarations were made within this context.</p>\r\n+     *\r\n+     * <p>The Namespace support object always starts with a base context\r\n+     * already in force: in this context, only the \"xml\" prefix is\r\n+     * declared.</p>\r\n+     *\r\n+     * @see #popContext\r\n+     */\r\n+    public void pushContext ()\r\n+    {\r\n+\tint max = contexts.length;\r\n+\tcontextPos++;\r\n+\r\n+\t\t\t\t// Extend the array if necessary\r\n+\tif (contextPos >= max) {\r\n+\t    Context newContexts[] = new Context[max*2];\r\n+\t    System.arraycopy(contexts, 0, newContexts, 0, max);\r\n+\t    max *= 2;\r\n+\t    contexts = newContexts;\r\n+\t}\r\n+\r\n+\t\t\t\t// Allocate the context if necessary.\r\n+\tcurrentContext = contexts[contextPos];\r\n+\tif (currentContext == null) {\r\n+\t    contexts[contextPos] = currentContext = new Context();\r\n+\t}\r\n+\r\n+\t\t\t\t// Set the parent, if any.\r\n+\tif (contextPos > 0) {\r\n+\t    currentContext.setParent(contexts[contextPos - 1]);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Revert to the previous Namespace context.\r\n+     *\r\n+     * <p>Normally, you should pop the context at the end of each\r\n+     * XML element.  After popping the context, all Namespace prefix\r\n+     * mappings that were previously in force are restored.</p>\r\n+     *\r\n+     * <p>You must not attempt to declare additional Namespace\r\n+     * prefixes after popping a context, unless you push another\r\n+     * context first.</p>\r\n+     *\r\n+     * @see #pushContext\r\n+     */\r\n+    public void popContext ()\r\n+    {\r\n+\tcontextPos--;\r\n+\tif (contextPos < 0) {\r\n+\t    throw new EmptyStackException();\r\n+\t}\r\n+\tcurrentContext = contexts[contextPos];\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Operations within a context.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Declare a Namespace prefix.\r\n+     *\r\n+     * <p>This method declares a prefix in the current Namespace\r\n+     * context; the prefix will remain in force until this context\r\n+     * is popped, unless it is shadowed in a descendant context.</p>\r\n+     *\r\n+     * <p>To declare a default Namespace, use the empty string.  The\r\n+     * prefix must not be \"xml\" or \"xmlns\".</p>\r\n+     *\r\n+     * <p>Note that you must <em>not</em> declare a prefix after\r\n+     * you've pushed and popped another Namespace.</p>\r\n+     *\r\n+     * <p>Note that there is an asymmetry in this library: while {@link\r\n+     * #getPrefix getPrefix} will not return the default \"\" prefix,\r\n+     * even if you have declared one; to check for a default prefix,\r\n+     * you have to look it up explicitly using {@link #getURI getURI}.\r\n+     * This asymmetry exists to make it easier to look up prefixes\r\n+     * for attribute names, where the default prefix is not allowed.</p>\r\n+     *\r\n+     * @param prefix The prefix to declare, or null for the empty\r\n+     *        string.\r\n+     * @param uri The Namespace URI to associate with the prefix.\r\n+     * @return true if the prefix was legal, false otherwise\r\n+     * @see #processName\r\n+     * @see #getURI\r\n+     * @see #getPrefix\r\n+     */\r\n+    public boolean declarePrefix (String prefix, String uri)\r\n+    {\r\n+\tif (prefix.equals(\"xml\") || prefix.equals(\"xmlns\")) {\r\n+\t    return false;\r\n+\t} else {\r\n+\t    currentContext.declarePrefix(prefix, uri);\r\n+\t    return true;\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Process a raw XML 1.0 name.\r\n+     *\r\n+     * <p>This method processes a raw XML 1.0 name in the current\r\n+     * context by removing the prefix and looking it up among the\r\n+     * prefixes currently declared.  The return value will be the\r\n+     * array supplied by the caller, filled in as follows:</p>\r\n+     *\r\n+     * <dl>\r\n+     * <dt>parts[0]</dt>\r\n+     * <dd>The Namespace URI, or an empty string if none is\r\n+     *  in use.</dd>\r\n+     * <dt>parts[1]</dt>\r\n+     * <dd>The local name (without prefix).</dd>\r\n+     * <dt>parts[2]</dt>\r\n+     * <dd>The original raw name.</dd>\r\n+     * </dl>\r\n+     *\r\n+     * <p>All of the strings in the array will be internalized.  If\r\n+     * the raw name has a prefix that has not been declared, then\r\n+     * the return value will be null.</p>\r\n+     *\r\n+     * <p>Note that attribute names are processed differently than\r\n+     * element names: an unprefixed element name will received the\r\n+     * default Namespace (if any), while an unprefixed element name\r\n+     * will not.</p>\r\n+     *\r\n+     * @param qName The raw XML 1.0 name to be processed.\r\n+     * @param parts An array supplied by the caller, capable of\r\n+     *        holding at least three members.\r\n+     * @param isAttribute A flag indicating whether this is an\r\n+     *        attribute name (true) or an element name (false).\r\n+     * @return The supplied array holding three internalized strings \r\n+     *        representing the Namespace URI (or empty string), the\r\n+     *        local name, and the raw XML 1.0 name; or null if there\r\n+     *        is an undeclared prefix.\r\n+     * @see #declarePrefix\r\n+     * @see java.lang.String#intern */\r\n+    public String [] processName (String qName, String parts[],\r\n+\t\t\t\t  boolean isAttribute)\r\n+    {\r\n+\tString myParts[] = currentContext.processName(qName, isAttribute);\r\n+\tif (myParts == null) {\r\n+\t    return null;\r\n+\t} else {\r\n+\t    parts[0] = myParts[0];\r\n+\t    parts[1] = myParts[1];\r\n+\t    parts[2] = myParts[2];\r\n+\t    return parts;\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Look up a prefix and get the currently-mapped Namespace URI.\r\n+     *\r\n+     * <p>This method looks up the prefix in the current context.\r\n+     * Use the empty string (\"\") for the default Namespace.</p>\r\n+     *\r\n+     * @param prefix The prefix to look up.\r\n+     * @return The associated Namespace URI, or null if the prefix\r\n+     *         is undeclared in this context.\r\n+     * @see #getPrefix\r\n+     * @see #getPrefixes\r\n+     */\r\n+    public String getURI (String prefix)\r\n+    {\r\n+\treturn currentContext.getURI(prefix);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return an enumeration of all prefixes currently declared.\r\n+     *\r\n+     * <p><strong>Note:</strong> if there is a default prefix, it will not be\r\n+     * returned in this enumeration; check for the default prefix\r\n+     * using the {@link #getURI getURI} with an argument of \"\".</p>\r\n+     *\r\n+     * @return An enumeration of all prefixes declared in the\r\n+     *         current context except for the empty (default)\r\n+     *         prefix.\r\n+     * @see #getDeclaredPrefixes\r\n+     * @see #getURI\r\n+     */\r\n+    public Enumeration getPrefixes ()\r\n+    {\r\n+\treturn currentContext.getPrefixes();\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return one of the prefixes mapped to a Namespace URI.\r\n+     *\r\n+     * <p>If more than one prefix is currently mapped to the same\r\n+     * URI, this method will make an arbitrary selection; if you\r\n+     * want all of the prefixes, use the {@link #getPrefixes}\r\n+     * method instead.</p>\r\n+     *\r\n+     * <p><strong>Note:</strong> this will never return the empty (default) prefix;\r\n+     * to check for a default prefix, use the {@link #getURI getURI}\r\n+     * method with an argument of \"\".</p>\r\n+     *\r\n+     * @param uri The Namespace URI.\r\n+     * @param isAttribute true if this prefix is for an attribute\r\n+     *        (and the default Namespace is not allowed).\r\n+     * @return One of the prefixes currently mapped to the URI supplied,\r\n+     *         or null if none is mapped or if the URI is assigned to\r\n+     *         the default Namespace.\r\n+     * @see #getPrefixes(java.lang.String)\r\n+     * @see #getURI\r\n+     */\r\n+    public String getPrefix (String uri)\r\n+    {\r\n+\treturn currentContext.getPrefix(uri);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return an enumeration of all prefixes currently declared for a URI.\r\n+     *\r\n+     * <p>This method returns prefixes mapped to a specific Namespace\r\n+     * URI.  The xml: prefix will be included.  If you want only one\r\n+     * prefix that's mapped to the Namespace URI, and you don't care \r\n+     * which one you get, use the {@link #getPrefix getPrefix}\r\n+     *  method instead.</p>\r\n+     *\r\n+     * <p><strong>Note:</strong> the empty (default) prefix is <em>never</em> included\r\n+     * in this enumeration; to check for the presence of a default\r\n+     * Namespace, use the {@link #getURI getURI} method with an\r\n+     * argument of \"\".</p>\r\n+     *\r\n+     * @param uri The Namespace URI.\r\n+     * @return An enumeration of all prefixes declared in the\r\n+     *         current context.\r\n+     * @see #getPrefix\r\n+     * @see #getDeclaredPrefixes\r\n+     * @see #getURI\r\n+     */\r\n+    public Enumeration getPrefixes (String uri)\r\n+    {\r\n+\tVector prefixes = new Vector();\r\n+\tEnumeration allPrefixes = getPrefixes();\r\n+\twhile (allPrefixes.hasMoreElements()) {\r\n+\t    String prefix = (String)allPrefixes.nextElement();\r\n+\t    if (uri.equals(getURI(prefix))) {\r\n+\t\tprefixes.addElement(prefix);\r\n+\t    }\r\n+\t}\r\n+\treturn prefixes.elements();\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return an enumeration of all prefixes declared in this context.\r\n+     *\r\n+     * <p>The empty (default) prefix will be included in this \r\n+     * enumeration; note that this behaviour differs from that of\r\n+     * {@link #getPrefix} and {@link #getPrefixes}.</p>\r\n+     *\r\n+     * @return An enumeration of all prefixes declared in this\r\n+     *         context.\r\n+     * @see #getPrefixes\r\n+     * @see #getURI\r\n+     */\r\n+    public Enumeration getDeclaredPrefixes ()\r\n+    {\r\n+\treturn currentContext.getDeclaredPrefixes();\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal state.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+    private Context contexts[];\r\n+    private Context currentContext;\r\n+    private int contextPos;\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal classes.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+    /**\r\n+     * Internal class for a single Namespace context.\r\n+     *\r\n+     * <p>This module caches and reuses Namespace contexts, so the number allocated\r\n+     * will be equal to the element depth of the document, not to the total\r\n+     * number of elements (i.e. 5-10 rather than tens of thousands).</p>\r\n+     */\r\n+    final class Context {\r\n+\r\n+\t/**\r\n+\t * Create the root-level Namespace context.\r\n+\t */\r\n+\tContext ()\r\n+\t{\r\n+\t    copyTables();\r\n+\t}\r\n+\t\r\n+\t\r\n+\t/**\r\n+\t * (Re)set the parent of this Namespace context.\r\n+\t *\r\n+\t * @param context The parent Namespace context object.\r\n+\t */\r\n+\tvoid setParent (Context parent)\r\n+\t{\r\n+\t    this.parent = parent;\r\n+\t    declarations = null;\r\n+\t    prefixTable = parent.prefixTable;\r\n+\t    uriTable = parent.uriTable;\r\n+\t    elementNameTable = parent.elementNameTable;\r\n+\t    attributeNameTable = parent.attributeNameTable;\r\n+\t    defaultNS = parent.defaultNS;\r\n+\t    tablesDirty = false;\r\n+\t}\r\n+\t\r\n+\t\r\n+\t/**\r\n+\t * Declare a Namespace prefix for this context.\r\n+\t *\r\n+\t * @param prefix The prefix to declare.\r\n+\t * @param uri The associated Namespace URI.\r\n+\t * @see org.xml.sax.helpers.NamespaceSupport#declarePrefix\r\n+\t */\r\n+\tvoid declarePrefix (String prefix, String uri)\r\n+\t{\r\n+\t\t\t\t// Lazy processing...\r\n+\t    if (!tablesDirty) {\r\n+\t\tcopyTables();\r\n+\t    }\r\n+\t    if (declarations == null) {\r\n+\t\tdeclarations = new Vector();\r\n+\t    }\r\n+\t    \r\n+\t    prefix = prefix.intern();\r\n+\t    uri = uri.intern();\r\n+\t    if (\"\".equals(prefix)) {\r\n+\t\tif (\"\".equals(uri)) {\r\n+\t\t    defaultNS = null;\r\n+\t\t} else {\r\n+\t\t    defaultNS = uri;\r\n+\t\t}\r\n+\t    } else {\r\n+\t\tprefixTable.put(prefix, uri);\r\n+\t\turiTable.put(uri, prefix); // may wipe out another prefix\r\n+\t    }\r\n+\t    declarations.addElement(prefix);\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Process a raw XML 1.0 name in this context.\r\n+\t *\r\n+\t * @param qName The raw XML 1.0 name.\r\n+\t * @param isAttribute true if this is an attribute name.\r\n+\t * @return An array of three strings containing the\r\n+\t *         URI part (or empty string), the local part,\r\n+\t *         and the raw name, all internalized, or null\r\n+\t *         if there is an undeclared prefix.\r\n+\t * @see org.xml.sax.helpers.NamespaceSupport#processName\r\n+\t */\r\n+\tString [] processName (String qName, boolean isAttribute)\r\n+\t{\r\n+\t    String name[];\r\n+\t    Hashtable table;\r\n+\t    \r\n+\t\t\t\t// Select the appropriate table.\r\n+\t    if (isAttribute) {\r\n+\t\ttable = elementNameTable;\r\n+\t    } else {\r\n+\t\ttable = attributeNameTable;\r\n+\t    }\r\n+\t    \r\n+\t\t\t\t// Start by looking in the cache, and\r\n+\t\t\t\t// return immediately if the name\r\n+\t\t\t\t// is already known in this content\r\n+\t    name = (String[])table.get(qName);\r\n+\t    if (name != null) {\r\n+\t\treturn name;\r\n+\t    }\r\n+\t    \r\n+\t\t\t\t// We haven't seen this name in this\r\n+\t\t\t\t// context before.\r\n+\t    name = new String[3];\r\n+\t    int index = qName.indexOf(':');\r\n+\t    \r\n+\t    \r\n+\t\t\t\t// No prefix.\r\n+\t    if (index == -1) {\r\n+\t\tif (isAttribute || defaultNS == null) {\r\n+\t\t    name[0] = \"\";\r\n+\t\t} else {\r\n+\t\t    name[0] = defaultNS;\r\n+\t\t}\r\n+\t\tname[1] = qName.intern();\r\n+\t\tname[2] = name[1];\r\n+\t    }\r\n+\t    \r\n+\t\t\t\t// Prefix\r\n+\t    else {\r\n+\t\tString prefix = qName.substring(0, index);\r\n+\t\tString local = qName.substring(index+1);\r\n+\t\tString uri;\r\n+\t\tif (\"\".equals(prefix)) {\r\n+\t\t    uri = defaultNS;\r\n+\t\t} else {\r\n+\t\t    uri = (String)prefixTable.get(prefix);\r\n+\t\t}\r\n+\t\tif (uri == null) {\r\n+\t\t    return null;\r\n+\t\t}\r\n+\t\tname[0] = uri;\r\n+\t\tname[1] = local.intern();\r\n+\t\tname[2] = qName.intern();\r\n+\t    }\r\n+\t    \r\n+\t\t\t\t// Save in the cache for future use.\r\n+\t    table.put(name[2], name);\r\n+\t    tablesDirty = true;\r\n+\t    return name;\r\n+\t}\r\n+\t\r\n+\r\n+\t/**\r\n+\t * Look up the URI associated with a prefix in this context.\r\n+\t *\r\n+\t * @param prefix The prefix to look up.\r\n+\t * @return The associated Namespace URI, or null if none is\r\n+\t *         declared.\t\r\n+\t * @see org.xml.sax.helpers.NamespaceSupport#getURI\r\n+\t */\r\n+\tString getURI (String prefix)\r\n+\t{\r\n+\t    if (\"\".equals(prefix)) {\r\n+\t\treturn defaultNS;\r\n+\t    } else if (prefixTable == null) {\r\n+\t\treturn null;\r\n+\t    } else {\r\n+\t\treturn (String)prefixTable.get(prefix);\r\n+\t    }\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Look up one of the prefixes associated with a URI in this context.\r\n+\t *\r\n+\t * <p>Since many prefixes may be mapped to the same URI,\r\n+\t * the return value may be unreliable.</p>\r\n+\t *\r\n+\t * @param uri The URI to look up.\r\n+\t * @return The associated prefix, or null if none is declared.\r\n+\t * @see org.xml.sax.helpers.NamespaceSupport#getPrefix\r\n+\t */\r\n+\tString getPrefix (String uri)\r\n+\t{\r\n+\t    if (uriTable == null) {\r\n+\t\treturn null;\r\n+\t    } else {\r\n+\t\treturn (String)uriTable.get(uri);\r\n+\t    }\r\n+\t}\r\n+\t\r\n+\t\r\n+\t/**\r\n+\t * Return an enumeration of prefixes declared in this context.\r\n+\t *\r\n+\t * @return An enumeration of prefixes (possibly empty).\r\n+\t * @see org.xml.sax.helpers.NamespaceSupport#getDeclaredPrefixes\r\n+\t */\r\n+\tEnumeration getDeclaredPrefixes ()\r\n+\t{\r\n+\t    if (declarations == null) {\r\n+\t\treturn EMPTY_ENUMERATION;\r\n+\t    } else {\r\n+\t\treturn declarations.elements();\r\n+\t    }\r\n+\t}\r\n+\t\r\n+\t\r\n+\t/**\r\n+\t * Return an enumeration of all prefixes currently in force.\r\n+\t *\r\n+\t * <p>The default prefix, if in force, is <em>not</em>\r\n+\t * returned, and will have to be checked for separately.</p>\r\n+\t *\r\n+\t * @return An enumeration of prefixes (never empty).\r\n+\t * @see org.xml.sax.helpers.NamespaceSupport#getPrefixes\r\n+\t */\r\n+\tEnumeration getPrefixes ()\r\n+\t{\r\n+\t    if (prefixTable == null) {\r\n+\t\treturn EMPTY_ENUMERATION;\r\n+\t    } else {\r\n+\t\treturn prefixTable.keys();\r\n+\t    }\r\n+\t}\r\n+\t\r\n+\t\r\n+\f\r\n+\t////////////////////////////////////////////////////////////////\r\n+\t// Internal methods.\r\n+\t////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+\t/**\r\n+\t * Copy on write for the internal tables in this context.\r\n+\t *\r\n+\t * <p>This class is optimized for the normal case where most\r\n+\t * elements do not contain Namespace declarations.</p>\r\n+\t */\t\r\n+\tprivate void copyTables ()\r\n+\t{\r\n+\t    if (prefixTable != null) {\r\n+\t\tprefixTable = (Hashtable)prefixTable.clone();\r\n+\t    } else {\r\n+\t\tprefixTable = new Hashtable();\r\n+\t    }\r\n+\t    if (uriTable != null) {\r\n+\t\turiTable = (Hashtable)uriTable.clone();\r\n+\t    } else {\r\n+\t\turiTable = new Hashtable();\r\n+\t    }\r\n+\t    elementNameTable = new Hashtable();\r\n+\t    attributeNameTable = new Hashtable();\r\n+\t    tablesDirty = true;\r\n+\t}\r\n+\r\n+\r\n+\f\r\n+\t////////////////////////////////////////////////////////////////\r\n+\t// Protected state.\r\n+\t////////////////////////////////////////////////////////////////\r\n+\t\r\n+\tHashtable prefixTable;\r\n+\tHashtable uriTable;\r\n+\tHashtable elementNameTable;\r\n+\tHashtable attributeNameTable;\r\n+\tString defaultNS = null;\r\n+\t\r\n+\r\n+\f\r\n+\t////////////////////////////////////////////////////////////////\r\n+\t// Internal state.\r\n+\t////////////////////////////////////////////////////////////////\r\n+\t\r\n+\tprivate Vector declarations = null;\r\n+\tprivate boolean tablesDirty = false;\r\n+\tprivate Context parent = null;\r\n+    }\r\n+}\r\n+\r\n+// end of NamespaceSupport.java\r"}, {"sha": "06071b7bdd5d9ccf713759021abb1c10f4927fb2", "filename": "libjava/org/xml/sax/helpers/ParserAdapter.java", "status": "added", "additions": 1008, "deletions": 0, "changes": 1008, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FParserAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FParserAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FParserAdapter.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,1008 @@\n+// ParserAdapter.java - adapt a SAX1 Parser to a SAX2 XMLReader.\r\n+// Written by David Megginson, sax@megginson.com\r\n+// NO WARRANTY!  This class is in the public domain.\r\n+\r\n+// $Id: ParserAdapter.java,v 1.1 2000/10/02 02:43:20 sboag Exp $\r\n+\r\n+package org.xml.sax.helpers;\r\n+\r\n+import java.io.IOException;\r\n+import java.util.Enumeration;\r\n+\r\n+import org.xml.sax.Parser;\t// deprecated\r\n+import org.xml.sax.InputSource;\r\n+import org.xml.sax.Locator;\r\n+import org.xml.sax.AttributeList; // deprecated\r\n+import org.xml.sax.EntityResolver;\r\n+import org.xml.sax.DTDHandler;\r\n+import org.xml.sax.DocumentHandler; // deprecated\r\n+import org.xml.sax.ErrorHandler;\r\n+import org.xml.sax.SAXException;\r\n+import org.xml.sax.SAXParseException;\r\n+\r\n+import org.xml.sax.XMLReader;\r\n+import org.xml.sax.Attributes;\r\n+import org.xml.sax.ContentHandler;\r\n+import org.xml.sax.SAXNotRecognizedException;\r\n+import org.xml.sax.SAXNotSupportedException;\r\n+\r\n+\r\n+/**\r\n+ * Adapt a SAX1 Parser as a SAX2 XMLReader.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This class wraps a SAX1 {@link org.xml.sax.Parser Parser}\r\n+ * and makes it act as a SAX2 {@link org.xml.sax.XMLReader XMLReader},\r\n+ * with feature, property, and Namespace support.  Note\r\n+ * that it is not possible to report {@link org.xml.sax.ContentHandler#skippedEntity\r\n+ * skippedEntity} events, since SAX1 does not make that information available.</p>\r\n+ *\r\n+ * <p>This adapter does not test for duplicate Namespace-qualified\r\n+ * attribute names.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.helpers.XMLReaderAdapter\r\n+ * @see org.xml.sax.XMLReader\r\n+ * @see org.xml.sax.Parser\r\n+ */\r\n+public class ParserAdapter implements XMLReader, DocumentHandler\r\n+{\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Constructors.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Construct a new parser adapter.\r\n+     *\r\n+     * <p>Use the \"org.xml.sax.parser\" property to locate the\r\n+     * embedded SAX1 driver.</p>\r\n+     *\r\n+     * @exception org.xml.sax.SAXException If the embedded driver\r\n+     *            cannot be instantiated or if the\r\n+     *            org.xml.sax.parser property is not specified.\r\n+     */\r\n+    public ParserAdapter ()\r\n+      throws SAXException\r\n+    {\r\n+\tsuper();\r\n+\r\n+\tString driver = System.getProperty(\"org.xml.sax.parser\");\r\n+\r\n+\ttry {\r\n+\t    setup(ParserFactory.makeParser());\r\n+\t} catch (ClassNotFoundException e1) {\r\n+\t    throw new\r\n+\t\tSAXException(\"Cannot find SAX1 driver class \" +\r\n+\t\t\t     driver, e1);\r\n+\t} catch (IllegalAccessException e2) {\r\n+\t    throw new\r\n+\t\tSAXException(\"SAX1 driver class \" +\r\n+\t\t\t     driver +\r\n+\t\t\t     \" found but cannot be loaded\", e2);\r\n+\t} catch (InstantiationException e3) {\r\n+\t    throw new\r\n+\t\tSAXException(\"SAX1 driver class \" +\r\n+\t\t\t     driver +\r\n+\t\t\t     \" loaded but cannot be instantiated\", e3);\r\n+\t} catch (ClassCastException e4) {\r\n+\t    throw new\r\n+\t\tSAXException(\"SAX1 driver class \" +\r\n+\t\t\t     driver +\r\n+\t\t\t     \" does not implement org.xml.sax.Parser\");\r\n+\t} catch (NullPointerException e5) {\r\n+\t    throw new \r\n+\t\tSAXException(\"System property org.xml.sax.parser not specified\");\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Construct a new parser adapter.\r\n+     *\r\n+     * <p>Note that the embedded parser cannot be changed once the\r\n+     * adapter is created; to embed a different parser, allocate\r\n+     * a new ParserAdapter.</p>\r\n+     *\r\n+     * @param parser The SAX1 parser to embed.\r\n+     * @exception java.lang.NullPointerException If the parser parameter\r\n+     *            is null.\r\n+     */\r\n+    public ParserAdapter (Parser parser)\r\n+    {\r\n+\tsuper();\r\n+\tsetup(parser);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Internal setup method.\r\n+     *\r\n+     * @param parser The embedded parser.\r\n+     * @exception java.lang.NullPointerException If the parser parameter\r\n+     *            is null.\r\n+     */\r\n+    private void setup (Parser parser)\r\n+    {\r\n+\tif (parser == null) {\r\n+\t    throw new\r\n+\t\tNullPointerException(\"Parser argument must not be null\");\r\n+\t}\r\n+\tthis.parser = parser;\r\n+\tatts = new AttributesImpl();\r\n+\tnsSupport = new NamespaceSupport();\r\n+\tattAdapter = new AttributeListAdapter();\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.XMLReader.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    //\r\n+    // Internal constants for the sake of convenience.\r\n+    //\r\n+    private final static String FEATURES = \"http://xml.org/sax/features/\";\r\n+    private final static String NAMESPACES = FEATURES + \"namespaces\";\r\n+    private final static String NAMESPACE_PREFIXES = FEATURES + \"namespace-prefixes\";\r\n+    private final static String VALIDATION = FEATURES + \"validation\";\r\n+    private final static String EXTERNAL_GENERAL =\r\n+\tFEATURES + \"external-general-entities\";\r\n+    private final static String EXTERNAL_PARAMETER =\r\n+\tFEATURES + \"external-parameter-entities\";\r\n+\r\n+\r\n+    /**\r\n+     * Set a feature for the parser.\r\n+     *\r\n+     * <p>The only features supported are namespaces and \r\n+     * namespace-prefixes.</p>\r\n+     *\r\n+     * @param name The feature name, as a complete URI.\r\n+     * @param state The requested feature state.\r\n+     * @exception org.xml.sax.SAXNotRecognizedException If the feature\r\n+     *            name is not known.\r\n+     * @exception org.xml.sax.SAXNotSupportedException If the feature\r\n+     *            state is not supported.\r\n+     * @see org.xml.sax.XMLReader#setFeature\r\n+     */\r\n+    public void setFeature (String name, boolean state)\r\n+\tthrows SAXNotRecognizedException, SAXNotSupportedException\r\n+    {\r\n+\tif (name.equals(NAMESPACES)) {\r\n+\t    checkNotParsing(\"feature\", name);\r\n+\t    namespaces = state;\r\n+\t    if (!namespaces && !prefixes) {\r\n+\t\tprefixes = true;\r\n+\t    }\r\n+\t} else if (name.equals(NAMESPACE_PREFIXES)) {\r\n+\t    checkNotParsing(\"feature\", name);\r\n+\t    prefixes = state;\r\n+\t    if (!prefixes && !namespaces) {\r\n+\t\tnamespaces = true;\r\n+\t    }\r\n+\t} else if (name.equals(VALIDATION) ||\r\n+\t\t   name.equals(EXTERNAL_GENERAL) ||\r\n+\t\t   name.equals(EXTERNAL_PARAMETER)) {\r\n+\t    throw new SAXNotSupportedException(\"Feature: \" + name);\r\n+\t} else {\r\n+\t    throw new SAXNotRecognizedException(\"Feature: \" + name);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Check a parser feature.\r\n+     *\r\n+     * <p>The only features supported are namespaces and \r\n+     * namespace-prefixes.</p>\r\n+     *\r\n+     * @param name The feature name, as a complete URI.\r\n+     * @return The current feature state.\r\n+     * @exception org.xml.sax.SAXNotRecognizedException If the feature\r\n+     *            name is not known.\r\n+     * @exception org.xml.sax.SAXNotSupportedException If querying the\r\n+     *            feature state is not supported.\r\n+     * @see org.xml.sax.XMLReader#setFeature\r\n+     */\r\n+    public boolean getFeature (String name)\r\n+\tthrows SAXNotRecognizedException, SAXNotSupportedException\r\n+    {\r\n+\tif (name.equals(NAMESPACES)) {\r\n+\t    return namespaces;\r\n+\t} else if (name.equals(NAMESPACE_PREFIXES)) {\r\n+\t    return prefixes;\r\n+\t} else if (name.equals(VALIDATION) ||\r\n+\t\t   name.equals(EXTERNAL_GENERAL) ||\r\n+\t\t   name.equals(EXTERNAL_PARAMETER)) {\r\n+\t    throw new SAXNotSupportedException(\"Feature: \" + name);\r\n+\t} else {\r\n+\t    throw new SAXNotRecognizedException(\"Feature: \" + name);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set a parser property.\r\n+     *\r\n+     * <p>No special properties are currently supported.</p>\r\n+     *\r\n+     * @param name The property name.\r\n+     * @param value The property value.\r\n+     * @exception org.xml.sax.SAXNotRecognizedException If the feature\r\n+     *            name is not known.\r\n+     * @exception org.xml.sax.SAXNotSupportedException If the feature\r\n+     *            state is not supported.\r\n+     * @see org.xml.sax.XMLReader#setProperty\r\n+     */\r\n+    public void setProperty (String name, Object value)\r\n+\tthrows SAXNotRecognizedException, SAXNotSupportedException\r\n+    {\r\n+\tthrow new SAXNotRecognizedException(\"Property: \" + name);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Get a parser property.\r\n+     *\r\n+     * <p>No special properties are currently supported.</p>\r\n+     *\r\n+     * @param name The property name.\r\n+     * @return The property value.\r\n+     * @exception org.xml.sax.SAXNotRecognizedException If the feature\r\n+     *            name is not known.\r\n+     * @exception org.xml.sax.SAXNotSupportedException If the feature\r\n+     *            state is not supported.\r\n+     * @see org.xml.sax.XMLReader#getProperty\r\n+     */\r\n+    public Object getProperty (String name)\r\n+\tthrows SAXNotRecognizedException, SAXNotSupportedException\r\n+    {\r\n+\tthrow new SAXNotRecognizedException(\"Property: \" + name);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the entity resolver.\r\n+     *\r\n+     * @param resolver The new entity resolver.\r\n+     * @exception java.lang.NullPointerException If the entity resolver\r\n+     *            parameter is null.\r\n+     * @see org.xml.sax.XMLReader#setEntityResolver\r\n+     */\r\n+    public void setEntityResolver (EntityResolver resolver)\r\n+    {\r\n+\tif (resolver == null) {\r\n+\t    throw new NullPointerException(\"Null entity resolver\");\r\n+\t}\r\n+\tentityResolver = resolver;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return the current entity resolver.\r\n+     *\r\n+     * @return The current entity resolver, or null if none was supplied.\r\n+     * @see org.xml.sax.XMLReader#getEntityResolver\r\n+     */\r\n+    public EntityResolver getEntityResolver ()\r\n+    {\r\n+\treturn entityResolver;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the DTD handler.\r\n+     *\r\n+     * @param resolver The new DTD handler.\r\n+     * @exception java.lang.NullPointerException If the DTD handler\r\n+     *            parameter is null.\r\n+     * @see org.xml.sax.XMLReader#setEntityResolver\r\n+     */\r\n+    public void setDTDHandler (DTDHandler handler)\r\n+    {\r\n+\tif (handler == null) {\r\n+\t    throw new NullPointerException(\"Null DTD handler\");\r\n+\t}\r\n+\tdtdHandler = handler;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return the current DTD handler.\r\n+     *\r\n+     * @return The current DTD handler, or null if none was supplied.\r\n+     * @see org.xml.sax.XMLReader#getEntityResolver\r\n+     */\r\n+    public DTDHandler getDTDHandler ()\r\n+    {\r\n+\treturn dtdHandler;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the content handler.\r\n+     *\r\n+     * @param resolver The new content handler.\r\n+     * @exception java.lang.NullPointerException If the content handler\r\n+     *            parameter is null.\r\n+     * @see org.xml.sax.XMLReader#setEntityResolver\r\n+     */\r\n+    public void setContentHandler (ContentHandler handler)\r\n+    {\r\n+\tif (handler == null) {\r\n+\t    throw new NullPointerException(\"Null content handler\");\r\n+\t}\r\n+\tcontentHandler = handler;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return the current content handler.\r\n+     *\r\n+     * @return The current content handler, or null if none was supplied.\r\n+     * @see org.xml.sax.XMLReader#getEntityResolver\r\n+     */\r\n+    public ContentHandler getContentHandler ()\r\n+    {\r\n+\treturn contentHandler;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the error handler.\r\n+     *\r\n+     * @param resolver The new error handler.\r\n+     * @exception java.lang.NullPointerException If the error handler\r\n+     *            parameter is null.\r\n+     * @see org.xml.sax.XMLReader#setEntityResolver\r\n+     */\r\n+    public void setErrorHandler (ErrorHandler handler)\r\n+    {\r\n+\tif (handler == null) {\r\n+\t    throw new NullPointerException(\"Null error handler\");\r\n+\t}\r\n+\terrorHandler = handler;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Return the current error handler.\r\n+     *\r\n+     * @return The current error handler, or null if none was supplied.\r\n+     * @see org.xml.sax.XMLReader#getEntityResolver\r\n+     */\r\n+    public ErrorHandler getErrorHandler ()\r\n+    {\r\n+\treturn errorHandler;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Parse an XML document.\r\n+     *\r\n+     * @param systemId The absolute URL of the document.\r\n+     * @exception java.io.IOException If there is a problem reading\r\n+     *            the raw content of the document.\r\n+     * @exception org.xml.sax.SAXException If there is a problem\r\n+     *            processing the document.\r\n+     * @see #parse(org.xml.sax.InputSource)\r\n+     * @see org.xml.sax.Parser#parse(java.lang.String)\r\n+     */\r\n+    public void parse (String systemId)\r\n+\tthrows IOException, SAXException\r\n+    {\r\n+\tparse(new InputSource(systemId));\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Parse an XML document.\r\n+     *\r\n+     * @param input An input source for the document.\r\n+     * @exception java.io.IOException If there is a problem reading\r\n+     *            the raw content of the document.\r\n+     * @exception org.xml.sax.SAXException If there is a problem\r\n+     *            processing the document.\r\n+     * @see #parse(java.lang.String)\r\n+     * @see org.xml.sax.Parser#parse(org.xml.sax.InputSource)\r\n+     */\r\n+    public void parse (InputSource input)\r\n+\tthrows IOException, SAXException\r\n+    {\r\n+\tif (parsing) {\r\n+\t    throw new SAXException(\"Parser is already in use\");\r\n+\t}\r\n+\tsetupParser();\r\n+\tparsing = true;\r\n+\ttry {\r\n+\t    parser.parse(input);\r\n+\t} finally {\r\n+\t    parsing = false;\r\n+\t}\r\n+\tparsing = false;\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.DocumentHandler.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX1 document locator event.\r\n+     *\r\n+     * @param locator A document locator.\r\n+     * @see org.xml.sax.ContentHandler#setDocumentLocator\r\n+     */\r\n+    public void setDocumentLocator (Locator locator)\r\n+    {\r\n+\tthis.locator = locator;\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.setDocumentLocator(locator);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX1 start document event.\r\n+     *\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.DocumentHandler#startDocument\r\n+     */\r\n+    public void startDocument ()\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.startDocument();\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX1 end document event.\r\n+     *\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.DocumentHandler#endDocument\r\n+     */\r\n+    public void endDocument ()\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.endDocument();\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX1 startElement event.\r\n+     *\r\n+     * <p>If necessary, perform Namespace processing.</p>\r\n+     *\r\n+     * @param qName The qualified (prefixed) name.\r\n+     * @param qAtts The XML 1.0 attribute list (with qnames).\r\n+     */\r\n+    public void startElement (String qName, AttributeList qAtts)\r\n+\tthrows SAXException\r\n+    {\r\n+\t\t\t\t// If we're not doing Namespace\r\n+\t\t\t\t// processing, dispatch this quickly.\r\n+\tif (!namespaces) {\r\n+\t    if (contentHandler != null) {\r\n+\t\tattAdapter.setAttributeList(qAtts);\r\n+\t\tcontentHandler.startElement(\"\", \"\", qName.intern(),\r\n+\t\t\t\t\t    attAdapter);\r\n+\t    }\r\n+\t    return;\r\n+\t}\r\n+\r\n+\r\n+\t\t\t\t// OK, we're doing Namespace processing.\r\n+\tnsSupport.pushContext();\r\n+\tboolean seenDecl = false;\r\n+\tatts.clear();\r\n+\t\r\n+\t\t\t\t// Take a first pass and copy all\r\n+\t\t\t\t// attributes into the SAX2 attribute\r\n+\t\t\t\t// list, noting any Namespace \r\n+\t\t\t\t// declarations.\r\n+\tint length = qAtts.getLength();\r\n+\tfor (int i = 0; i < length; i++) {\r\n+\t    String attQName = qAtts.getName(i);\r\n+\t    String type = qAtts.getType(i);\r\n+\t    String value = qAtts.getValue(i);\r\n+\r\n+\t\t\t\t// Found a declaration...\r\n+\t    if (attQName.startsWith(\"xmlns\")) {\r\n+\t\tString prefix;\r\n+\t\tint n = attQName.indexOf(':');\r\n+\t\tif (n == -1) {\r\n+\t\t    prefix = \"\";\r\n+\t\t} else {\r\n+\t\t    prefix = attQName.substring(n+1);\r\n+\t\t}\r\n+\t\tif (!nsSupport.declarePrefix(prefix, value)) {\r\n+\t\t    reportError(\"Illegal Namespace prefix: \" + prefix);\r\n+\t\t}\r\n+\t\tif (contentHandler != null) {\r\n+\t\t    contentHandler.startPrefixMapping(prefix, value);\r\n+\t\t}\r\n+\t\t\t\t// We may still have to add this to\r\n+\t\t\t\t// the list.\r\n+\t\tif (prefixes) {\r\n+\t\t    atts.addAttribute(\"\", \"\", attQName.intern(),\r\n+\t\t\t\t      type, value);\r\n+\t\t}\r\n+\t\tseenDecl = true;\r\n+\r\n+\t\t\t\t// This isn't a declaration.\r\n+\t    } else {\r\n+\t\tString attName[] = processName(attQName, true);\r\n+\t\tatts.addAttribute(attName[0], attName[1], attName[2],\r\n+\t\t\t\t  type, value);\r\n+\t    }\r\n+\t}\r\n+\t\r\n+\t\t\t\t// If there was a Namespace declaration,\r\n+\t\t\t\t// we have to make a second pass just\r\n+\t\t\t\t// to be safe -- this will happen very\r\n+\t\t\t\t// rarely, possibly only once for each\r\n+\t\t\t\t// document.\r\n+\tif (seenDecl) {\r\n+\t    length = atts.getLength();\r\n+\t    for (int i = 0; i < length; i++) {\r\n+\t\tString attQName = atts.getQName(i);\r\n+\t\tif (!attQName.startsWith(\"xmlns\")) {\r\n+\t\t    String attName[] = processName(attQName, true);\r\n+\t\t    atts.setURI(i, attName[0]);\r\n+\t\t    atts.setLocalName(i, attName[1]);\r\n+\t\t}\r\n+\t    }\r\n+\t}\r\n+\r\n+\t\t\t\t// OK, finally report the event.\r\n+\tif (contentHandler != null) {\r\n+\t    String name[] = processName(qName, false);\r\n+\t    contentHandler.startElement(name[0], name[1], name[2], atts);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX1 end element event.\r\n+     *\r\n+     * @param qName The qualified (prefixed) name.\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.DocumentHandler#endElement\r\n+     */\r\n+    public void endElement (String qName)\r\n+\tthrows SAXException\r\n+    {\r\n+\t\t\t\t// If we're not doing Namespace\r\n+\t\t\t\t// processing, dispatch this quickly.\r\n+\tif (!namespaces) {\r\n+\t    if (contentHandler != null) {\r\n+\t\tcontentHandler.endElement(\"\", \"\", qName.intern());\r\n+\t    }\r\n+\t    return;\r\n+\t}\r\n+\r\n+\t\t\t\t// Split the name.\r\n+\tString names[] = processName(qName, false);\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.endElement(names[0], names[1], names[2]);\r\n+\t    Enumeration prefixes = nsSupport.getDeclaredPrefixes();\r\n+\t    while (prefixes.hasMoreElements()) {\r\n+\t\tString prefix = (String)prefixes.nextElement();\r\n+\t\tcontentHandler.endPrefixMapping(prefix);\r\n+\t    }\r\n+\t}\r\n+\tnsSupport.popContext();\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX1 characters event.\r\n+     *\r\n+     * @param ch An array of characters.\r\n+     * @param start The starting position in the array.\r\n+     * @param length The number of characters to use.\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.DocumentHandler#characters\r\n+     */\r\n+    public void characters (char ch[], int start, int length)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.characters(ch, start, length);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX1 ignorable whitespace event.\r\n+     *\r\n+     * @param ch An array of characters.\r\n+     * @param start The starting position in the array.\r\n+     * @param length The number of characters to use.\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.DocumentHandler#ignorableWhitespace\r\n+     */\r\n+    public void ignorableWhitespace (char ch[], int start, int length)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.ignorableWhitespace(ch, start, length);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX1 processing instruction event.\r\n+     *\r\n+     * @param target The processing instruction target.\r\n+     * @param data The remainder of the processing instruction\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.DocumentHandler#processingInstruction\r\n+     */\r\n+    public void processingInstruction (String target, String data)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.processingInstruction(target, data);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal utility methods.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Initialize the parser before each run.\r\n+     */\r\n+    private void setupParser ()\r\n+    {\r\n+\tnsSupport.reset();\r\n+\r\n+\tif (entityResolver != null) {\r\n+\t    parser.setEntityResolver(entityResolver);\r\n+\t}\r\n+\tif (dtdHandler != null) {\r\n+\t    parser.setDTDHandler(dtdHandler);\r\n+\t}\r\n+\tif (errorHandler != null) {\r\n+\t    parser.setErrorHandler(errorHandler);\r\n+\t}\r\n+\tparser.setDocumentHandler(this);\r\n+\tlocator = null;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Process a qualified (prefixed) name.\r\n+     *\r\n+     * <p>If the name has an undeclared prefix, use only the qname\r\n+     * and make an ErrorHandler.error callback in case the app is\r\n+     * interested.</p>\r\n+     *\r\n+     * @param qName The qualified (prefixed) name.\r\n+     * @param isAttribute true if this is an attribute name.\r\n+     * @return The name split into three parts.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception if there is an error callback.\r\n+     */\r\n+    private String [] processName (String qName, boolean isAttribute)\r\n+\tthrows SAXException\r\n+    {\r\n+\tString parts[] = nsSupport.processName(qName, nameParts,\r\n+\t\t\t\t\t       isAttribute);\r\n+\tif (parts == null) {\r\n+\t    parts = new String[3];\r\n+\t    parts[2] = qName.intern();\r\n+\t    reportError(\"Undeclared prefix: \" + qName);\r\n+\t}\r\n+\treturn parts;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Report a non-fatal error.\r\n+     *\r\n+     * @param message The error message.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception.\r\n+     */\r\n+    void reportError (String message)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (errorHandler == null) {\r\n+\t    return;\r\n+\t}\r\n+\r\n+\tSAXParseException e;\r\n+\tif (locator != null) {\r\n+\t    e = new SAXParseException(message, locator);\r\n+\t} else {\r\n+\t    e = new SAXParseException(message, null, null, -1, -1);\r\n+\t}\r\n+\terrorHandler.error(e);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Throw an exception if we are parsing.\r\n+     *\r\n+     * <p>Use this method to detect illegal feature or\r\n+     * property changes.</p>\r\n+     *\r\n+     * @param type The type of thing (feature or property).\r\n+     * @param name The feature or property name.\r\n+     * @exception org.xml.sax.SAXNotSupportedException If a\r\n+     *            document is currently being parsed.\r\n+     */\r\n+    private void checkNotParsing (String type, String name)\r\n+\tthrows SAXNotSupportedException\r\n+    {\r\n+\tif (parsing) {\r\n+\t    throw new SAXNotSupportedException(\"Cannot change \" +\r\n+\t\t\t\t\t       type + ' ' +\r\n+\t\t\t\t\t       name + \" while parsing\");\r\n+\t\t\t\t\t       \r\n+\t}\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal state.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+    private NamespaceSupport nsSupport;\r\n+    private AttributeListAdapter attAdapter;\r\n+\r\n+    private boolean parsing = false;\r\n+    private String nameParts[] = new String[3];\r\n+\r\n+    private Parser parser = null;\r\n+\r\n+    private AttributesImpl atts = null;\r\n+\r\n+\t\t\t\t// Features\r\n+    private boolean namespaces = true;\r\n+    private boolean prefixes = false;\r\n+\r\n+\t\t\t\t// Properties\r\n+\r\n+\t\t\t\t// Handlers\r\n+    Locator locator;\r\n+\r\n+    EntityResolver entityResolver = null;\r\n+    DTDHandler dtdHandler = null;\r\n+    ContentHandler contentHandler = null;\r\n+    ErrorHandler errorHandler = null;\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Inner class to wrap an AttributeList when not doing NS proc.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX1 AttributeList as a SAX2 Attributes object.\r\n+     *\r\n+     * <p>This class is in the Public Domain, and comes with NO\r\n+     * WARRANTY of any kind.</p>\r\n+     *\r\n+     * <p>This wrapper class is used only when Namespace support\r\n+     * is disabled -- it provides pretty much a direct mapping\r\n+     * from SAX1 to SAX2, except that names and types are \r\n+     * interned whenever requested.</p>\r\n+     */\r\n+    final class AttributeListAdapter implements Attributes\r\n+    {\r\n+\r\n+\t/**\r\n+\t * Construct a new adapter.\r\n+\t */\r\n+\tAttributeListAdapter ()\r\n+\t{\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Set the embedded AttributeList.\r\n+\t *\r\n+\t * <p>This method must be invoked before any of the others\r\n+\t * can be used.</p>\r\n+\t *\r\n+\t * @param The SAX1 attribute list (with qnames).\r\n+\t */\r\n+\tvoid setAttributeList (AttributeList qAtts)\r\n+\t{\r\n+\t    this.qAtts = qAtts;\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Return the length of the attribute list.\r\n+\t *\r\n+\t * @return The number of attributes in the list.\r\n+\t * @see org.xml.sax.Attributes#getLength\r\n+\t */\r\n+\tpublic int getLength ()\r\n+\t{\r\n+\t    return qAtts.getLength();\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Return the Namespace URI of the specified attribute.\r\n+\t *\r\n+\t * @param The attribute's index.\r\n+\t * @return Always the empty string.\r\n+\t * @see org.xml.sax.Attributes#getURI\r\n+\t */\r\n+\tpublic String getURI (int i)\r\n+\t{\r\n+\t    return \"\";\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Return the local name of the specified attribute.\r\n+\t *\r\n+\t * @param The attribute's index.\r\n+\t * @return Always the empty string.\r\n+\t * @see org.xml.sax.Attributes#getLocalName\r\n+\t */\r\n+\tpublic String getLocalName (int i)\r\n+\t{\r\n+\t    return \"\";\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Return the qualified (prefixed) name of the specified attribute.\r\n+\t *\r\n+\t * @param The attribute's index.\r\n+\t * @return The attribute's qualified name, internalized.\r\n+\t */\r\n+\tpublic String getQName (int i)\r\n+\t{\r\n+\t    return qAtts.getName(i).intern();\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Return the type of the specified attribute.\r\n+\t *\r\n+\t * @param The attribute's index.\r\n+\t * @return The attribute's type as an internalized string.\r\n+\t */\r\n+\tpublic String getType (int i)\r\n+\t{\r\n+\t    return qAtts.getType(i).intern();\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Return the value of the specified attribute.\r\n+\t *\r\n+\t * @param The attribute's index.\r\n+\t * @return The attribute's value.\r\n+\t */\r\n+\tpublic String getValue (int i)\r\n+\t{\r\n+\t    return qAtts.getValue(i);\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Look up an attribute index by Namespace name.\r\n+\t *\r\n+\t * @param uri The Namespace URI or the empty string.\r\n+\t * @param localName The local name.\r\n+\t * @return The attributes index, or -1 if none was found.\r\n+\t * @see org.xml.sax.Attributes#getIndex(java.lang.String,java.lang.String)\r\n+\t */\r\n+\tpublic int getIndex (String uri, String localName)\r\n+\t{\r\n+\t    return -1;\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Look up an attribute index by qualified (prefixed) name.\r\n+\t *\r\n+\t * @param qName The qualified name.\r\n+\t * @return The attributes index, or -1 if none was found.\r\n+\t * @see org.xml.sax.Attributes#getIndex(java.lang.String)\r\n+\t */\r\n+\tpublic int getIndex (String qName)\r\n+\t{\r\n+\t    int max = atts.getLength();\r\n+\t    for (int i = 0; i < max; i++) {\r\n+\t\tif (qAtts.getName(i).equals(qName)) {\r\n+\t\t    return i;\r\n+\t\t}\r\n+\t    }\r\n+\t    return -1;\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Look up the type of an attribute by Namespace name.\r\n+\t *\r\n+\t * @param uri The Namespace URI\r\n+\t * @param localName The local name.\r\n+\t * @return The attribute's type as an internalized string.\r\n+\t */\r\n+\tpublic String getType (String uri, String localName)\r\n+\t{\r\n+\t    return null;\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Look up the type of an attribute by qualified (prefixed) name.\r\n+\t *\r\n+\t * @param qName The qualified name.\r\n+\t * @return The attribute's type as an internalized string.\r\n+\t */\r\n+\tpublic String getType (String qName)\r\n+\t{\r\n+\t    return qAtts.getType(qName).intern();\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Look up the value of an attribute by Namespace name.\r\n+\t *\r\n+\t * @param uri The Namespace URI\r\n+\t * @param localName The local name.\r\n+\t * @return The attribute's value.\r\n+\t */\r\n+\tpublic String getValue (String uri, String localName)\r\n+\t{\r\n+\t    return null;\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Look up the value of an attribute by qualified (prefixed) name.\r\n+\t *\r\n+\t * @param qName The qualified name.\r\n+\t * @return The attribute's value.\r\n+\t */\r\n+\tpublic String getValue (String qName)\r\n+\t{\r\n+\t    return qAtts.getValue(qName);\r\n+\t}\r\n+\r\n+\tprivate AttributeList qAtts;\r\n+    }\r\n+}\r\n+\r\n+// end of ParserAdapter.java\r"}, {"sha": "9ca7b55002f2aaa5996582e4775cf948c8c69bd8", "filename": "libjava/org/xml/sax/helpers/ParserFactory.java", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FParserFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FParserFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FParserFactory.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,129 @@\n+// SAX parser factory.\r\n+// No warranty; no copyright -- use this as you will.\r\n+// $Id: ParserFactory.java,v 1.1 2000/10/02 02:43:20 sboag Exp $\r\n+\r\n+package org.xml.sax.helpers;\r\n+\r\n+import java.lang.ClassNotFoundException;\r\n+import java.lang.IllegalAccessException;\r\n+import java.lang.InstantiationException;\r\n+import java.lang.SecurityException;\r\n+import java.lang.ClassCastException;\r\n+\r\n+import org.xml.sax.Parser;\r\n+\r\n+\r\n+/**\r\n+ * Java-specific class for dynamically loading SAX parsers.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p><strong>Note:</strong> This class is designed to work with the now-deprecated\r\n+ * SAX1 {@link org.xml.sax.Parser Parser} class.  SAX2 applications should use\r\n+ * {@link org.xml.sax.helpers.XMLReaderFactory XMLReaderFactory} instead.</p>\r\n+ *\r\n+ * <p>ParserFactory is not part of the platform-independent definition\r\n+ * of SAX; it is an additional convenience class designed\r\n+ * specifically for Java XML application writers.  SAX applications\r\n+ * can use the static methods in this class to allocate a SAX parser\r\n+ * dynamically at run-time based either on the value of the\r\n+ * `org.xml.sax.parser' system property or on a string containing the class\r\n+ * name.</p>\r\n+ *\r\n+ * <p>Note that the application still requires an XML parser that\r\n+ * implements SAX1.</p>\r\n+ *\r\n+ * @deprecated This class works with the deprecated\r\n+ *             {@link org.xml.sax.Parser Parser}\r\n+ *             interface.\r\n+ * @since SAX 1.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.Parser\r\n+ * @see java.lang.Class\r\n+ */\r\n+public class ParserFactory {\r\n+    \r\n+    \r\n+    /**\r\n+     * Private null constructor.\r\n+     */\r\n+    private ParserFactory ()\r\n+    {\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Create a new SAX parser using the `org.xml.sax.parser' system property.\r\n+     *\r\n+     * <p>The named class must exist and must implement the\r\n+     * {@link org.xml.sax.Parser Parser} interface.</p>\r\n+     *\r\n+     * @exception java.lang.NullPointerException There is no value\r\n+     *            for the `org.xml.sax.parser' system property.\r\n+     * @exception java.lang.ClassNotFoundException The SAX parser\r\n+     *            class was not found (check your CLASSPATH).\r\n+     * @exception IllegalAccessException The SAX parser class was\r\n+     *            found, but you do not have permission to load\r\n+     *            it.\r\n+     * @exception InstantiationException The SAX parser class was\r\n+     *            found but could not be instantiated.\r\n+     * @exception java.lang.ClassCastException The SAX parser class\r\n+     *            was found and instantiated, but does not implement\r\n+     *            org.xml.sax.Parser.\r\n+     * @see #makeParser(java.lang.String)\r\n+     * @see org.xml.sax.Parser\r\n+     */\r\n+    public static Parser makeParser ()\r\n+\tthrows ClassNotFoundException,\r\n+\tIllegalAccessException, \r\n+\tInstantiationException,\r\n+\tNullPointerException,\r\n+\tClassCastException\r\n+    {\r\n+\tString className = System.getProperty(\"org.xml.sax.parser\");\r\n+\tif (className == null) {\r\n+\t    throw new NullPointerException(\"No value for sax.parser property\");\r\n+\t} else {\r\n+\t    return makeParser(className);\r\n+\t}\r\n+    }\r\n+    \r\n+    \r\n+    /**\r\n+     * Create a new SAX parser object using the class name provided.\r\n+     *\r\n+     * <p>The named class must exist and must implement the\r\n+     * {@link org.xml.sax.Parser Parser} interface.</p>\r\n+     *\r\n+     * @param className A string containing the name of the\r\n+     *                  SAX parser class.\r\n+     * @exception java.lang.ClassNotFoundException The SAX parser\r\n+     *            class was not found (check your CLASSPATH).\r\n+     * @exception IllegalAccessException The SAX parser class was\r\n+     *            found, but you do not have permission to load\r\n+     *            it.\r\n+     * @exception InstantiationException The SAX parser class was\r\n+     *            found but could not be instantiated.\r\n+     * @exception java.lang.ClassCastException The SAX parser class\r\n+     *            was found and instantiated, but does not implement\r\n+     *            org.xml.sax.Parser.\r\n+     * @see #makeParser()\r\n+     * @see org.xml.sax.Parser\r\n+     */\r\n+    public static Parser makeParser (String className)\r\n+\tthrows ClassNotFoundException,\r\n+\tIllegalAccessException, \r\n+\tInstantiationException,\r\n+\tClassCastException\r\n+    {\r\n+\treturn (Parser)(Class.forName(className).newInstance());\r\n+    }\r\n+    \r\n+}\r\n+\r\n+// end of ParserFactory.java\r"}, {"sha": "5b1afaf6c2f75d9488f75bef62193b6b5b999ce9", "filename": "libjava/org/xml/sax/helpers/XMLFilterImpl.java", "status": "added", "additions": 769, "deletions": 0, "changes": 769, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLFilterImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLFilterImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLFilterImpl.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,769 @@\n+// XMLFilterImpl.java - base SAX2 filter implementation.\r\n+// Written by David Megginson, sax@megginson.com\r\n+// NO WARRANTY!  This class is in the Public Domain.\r\n+\r\n+// $Id: XMLFilterImpl.java,v 1.1 2000/10/02 02:43:20 sboag Exp $\r\n+\r\n+package org.xml.sax.helpers;\r\n+\r\n+import java.io.IOException;\r\n+\r\n+import org.xml.sax.XMLReader;\r\n+import org.xml.sax.XMLFilter;\r\n+import org.xml.sax.InputSource;\r\n+import org.xml.sax.Locator;\r\n+import org.xml.sax.Attributes;\r\n+import org.xml.sax.EntityResolver;\r\n+import org.xml.sax.DTDHandler;\r\n+import org.xml.sax.ContentHandler;\r\n+import org.xml.sax.ErrorHandler;\r\n+import org.xml.sax.SAXException;\r\n+import org.xml.sax.SAXParseException;\r\n+import org.xml.sax.SAXNotSupportedException;\r\n+import org.xml.sax.SAXNotRecognizedException;\r\n+\r\n+\r\n+/**\r\n+ * Base class for deriving an XML filter.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This class is designed to sit between an {@link org.xml.sax.XMLReader\r\n+ * XMLReader} and the client application's event handlers.  By default, it\r\n+ * does nothing but pass requests up to the reader and events\r\n+ * on to the handlers unmodified, but subclasses can override\r\n+ * specific methods to modify the event stream or the configuration\r\n+ * requests as they pass through.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.XMLFilter\r\n+ * @see org.xml.sax.XMLReader\r\n+ * @see org.xml.sax.EntityResolver\r\n+ * @see org.xml.sax.DTDHandler\r\n+ * @see org.xml.sax.ContentHandler\r\n+ * @see org.xml.sax.ErrorHandler\r\n+ */\r\n+public class XMLFilterImpl\r\n+    implements XMLFilter, EntityResolver, DTDHandler, ContentHandler, ErrorHandler\r\n+{\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Constructors.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Construct an empty XML filter, with no parent.\r\n+     *\r\n+     * <p>This filter will have no parent: you must assign a parent\r\n+     * before you start a parse or do any configuration with\r\n+     * setFeature or setProperty.</p>\r\n+     *\r\n+     * @see org.xml.sax.XMLReader#setFeature\r\n+     * @see org.xml.sax.XMLReader#setProperty\r\n+     */\r\n+    public XMLFilterImpl ()\r\n+    {\r\n+\tsuper();\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Construct an XML filter with the specified parent.\r\n+     *\r\n+     * @see #setParent\r\n+     * @see #getParent\r\n+     */\r\n+    public XMLFilterImpl (XMLReader parent)\r\n+    {\r\n+        super();\r\n+\tsetParent(parent);\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.XMLFilter.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Set the parent reader.\r\n+     *\r\n+     * <p>This is the {@link org.xml.sax.XMLReader XMLReader} from which \r\n+     * this filter will obtain its events and to which it will pass its \r\n+     * configuration requests.  The parent may itself be another filter.</p>\r\n+     *\r\n+     * <p>If there is no parent reader set, any attempt to parse\r\n+     * or to set or get a feature or property will fail.</p>\r\n+     *\r\n+     * @param parent The parent XML reader.\r\n+     * @exception java.lang.NullPointerException If the parent is null.\r\n+     * @see #getParent\r\n+     */\r\n+    public void setParent (XMLReader parent)\r\n+    {\r\n+\tif (parent == null) {\r\n+\t    throw new NullPointerException(\"Null parent\");\r\n+\t}\r\n+\tthis.parent = parent;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Get the parent reader.\r\n+     *\r\n+     * @return The parent XML reader, or null if none is set.\r\n+     * @see #setParent\r\n+     */\r\n+    public XMLReader getParent ()\r\n+    {\r\n+\treturn parent;\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.XMLReader.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Set the state of a feature.\r\n+     *\r\n+     * <p>This will always fail if the parent is null.</p>\r\n+     *\r\n+     * @param name The feature name.\r\n+     * @param state The requested feature state.\r\n+     * @exception org.xml.sax.SAXNotRecognizedException When the\r\n+     *            XMLReader does not recognize the feature name.\r\n+     * @exception org.xml.sax.SAXNotSupportedException When the\r\n+     *            XMLReader recognizes the feature name but \r\n+     *            cannot set the requested value.\r\n+     * @see org.xml.sax.XMLReader#setFeature\r\n+     */\r\n+    public void setFeature (String name, boolean state)\r\n+\tthrows SAXNotRecognizedException, SAXNotSupportedException\r\n+    {\r\n+\tif (parent != null) {\r\n+\t    parent.setFeature(name, state);\r\n+\t} else {\r\n+\t    throw new SAXNotRecognizedException(\"Feature: \" + name);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Look up the state of a feature.\r\n+     *\r\n+     * <p>This will always fail if the parent is null.</p>\r\n+     *\r\n+     * @param name The feature name.\r\n+     * @return The current state of the feature.\r\n+     * @exception org.xml.sax.SAXNotRecognizedException When the\r\n+     *            XMLReader does not recognize the feature name.\r\n+     * @exception org.xml.sax.SAXNotSupportedException When the\r\n+     *            XMLReader recognizes the feature name but \r\n+     *            cannot determine its state at this time.\r\n+     * @see org.xml.sax.XMLReader#getFeature\r\n+     */\r\n+    public boolean getFeature (String name)\r\n+\tthrows SAXNotRecognizedException, SAXNotSupportedException\r\n+    {\r\n+\tif (parent != null) {\r\n+\t    return parent.getFeature(name);\r\n+\t} else {\r\n+\t    throw new SAXNotRecognizedException(\"Feature: \" + name);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the value of a property.\r\n+     *\r\n+     * <p>This will always fail if the parent is null.</p>\r\n+     *\r\n+     * @param name The property name.\r\n+     * @param state The requested property value.\r\n+     * @exception org.xml.sax.SAXNotRecognizedException When the\r\n+     *            XMLReader does not recognize the property name.\r\n+     * @exception org.xml.sax.SAXNotSupportedException When the\r\n+     *            XMLReader recognizes the property name but \r\n+     *            cannot set the requested value.\r\n+     * @see org.xml.sax.XMLReader#setProperty\r\n+     */\r\n+    public void setProperty (String name, Object value)\r\n+\tthrows SAXNotRecognizedException, SAXNotSupportedException\r\n+    {\r\n+\tif (parent != null) {\r\n+\t    parent.setProperty(name, value);\r\n+\t} else {\r\n+\t    throw new SAXNotRecognizedException(\"Property: \" + name);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Look up the value of a property.\r\n+     *\r\n+     * @param name The property name.\r\n+     * @return The current value of the property.\r\n+     * @exception org.xml.sax.SAXNotRecognizedException When the\r\n+     *            XMLReader does not recognize the feature name.\r\n+     * @exception org.xml.sax.SAXNotSupportedException When the\r\n+     *            XMLReader recognizes the property name but \r\n+     *            cannot determine its value at this time.\r\n+     * @see org.xml.sax.XMLReader#setFeature\r\n+     */\r\n+    public Object getProperty (String name)\r\n+\tthrows SAXNotRecognizedException, SAXNotSupportedException\r\n+    {\r\n+\tif (parent != null) {\r\n+\t    return parent.getProperty(name);\r\n+\t} else {\r\n+\t    throw new SAXNotRecognizedException(\"Property: \" + name);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the entity resolver.\r\n+     *\r\n+     * @param resolver The new entity resolver.\r\n+     * @exception java.lang.NullPointerException If the resolver\r\n+     *            is null.\r\n+     * @see org.xml.sax.XMLReader#setEntityResolver\r\n+     */\r\n+    public void setEntityResolver (EntityResolver resolver)\r\n+    {\r\n+\tif (resolver == null) {\r\n+\t    throw new NullPointerException(\"Null entity resolver\");\r\n+\t} else {\r\n+\t    entityResolver = resolver;\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Get the current entity resolver.\r\n+     *\r\n+     * @return The current entity resolver, or null if none was set.\r\n+     * @see org.xml.sax.XMLReader#getEntityResolver\r\n+     */\r\n+    public EntityResolver getEntityResolver ()\r\n+    {\r\n+\treturn entityResolver;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the DTD event handler.\r\n+     *\r\n+     * @param resolver The new DTD handler.\r\n+     * @exception java.lang.NullPointerException If the handler\r\n+     *            is null.\r\n+     * @see org.xml.sax.XMLReader#setDTDHandler\r\n+     */\r\n+    public void setDTDHandler (DTDHandler handler)\r\n+    {\r\n+\tif (handler == null) {\r\n+\t    throw new NullPointerException(\"Null DTD handler\");\r\n+\t} else {\r\n+\t    dtdHandler = handler;\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Get the current DTD event handler.\r\n+     *\r\n+     * @return The current DTD handler, or null if none was set.\r\n+     * @see org.xml.sax.XMLReader#getDTDHandler\r\n+     */\r\n+    public DTDHandler getDTDHandler ()\r\n+    {\r\n+\treturn dtdHandler;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the content event handler.\r\n+     *\r\n+     * @param resolver The new content handler.\r\n+     * @exception java.lang.NullPointerException If the handler\r\n+     *            is null.\r\n+     * @see org.xml.sax.XMLReader#setContentHandler\r\n+     */\r\n+    public void setContentHandler (ContentHandler handler)\r\n+    {\r\n+\tif (handler == null) {\r\n+\t    throw new NullPointerException(\"Null content handler\");\r\n+\t} else {\r\n+\t    contentHandler = handler;\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Get the content event handler.\r\n+     *\r\n+     * @return The current content handler, or null if none was set.\r\n+     * @see org.xml.sax.XMLReader#getContentHandler\r\n+     */\r\n+    public ContentHandler getContentHandler ()\r\n+    {\r\n+\treturn contentHandler;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set the error event handler.\r\n+     *\r\n+     * @param handle The new error handler.\r\n+     * @exception java.lang.NullPointerException If the handler\r\n+     *            is null.\r\n+     * @see org.xml.sax.XMLReader#setErrorHandler\r\n+     */\r\n+    public void setErrorHandler (ErrorHandler handler)\r\n+    {\r\n+\tif (handler == null) {\r\n+\t    throw new NullPointerException(\"Null error handler\");\r\n+\t} else {\r\n+\t    errorHandler = handler;\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Get the current error event handler.\r\n+     *\r\n+     * @return The current error handler, or null if none was set.\r\n+     * @see org.xml.sax.XMLReader#getErrorHandler\r\n+     */\r\n+    public ErrorHandler getErrorHandler ()\r\n+    {\r\n+\treturn errorHandler;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Parse a document.\r\n+     *\r\n+     * @param input The input source for the document entity.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @exception java.io.IOException An IO exception from the parser,\r\n+     *            possibly from a byte stream or character stream\r\n+     *            supplied by the application.\r\n+     * @see org.xml.sax.XMLReader#parse(org.xml.sax.InputSource)\r\n+     */\r\n+    public void parse (InputSource input)\r\n+\tthrows SAXException, IOException\r\n+    {\r\n+\tsetupParse();\r\n+\tparent.parse(input);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Parse a document.\r\n+     *\r\n+     * @param systemId The system identifier as a fully-qualified URI.\r\n+     * @exception org.xml.sax.SAXException Any SAX exception, possibly\r\n+     *            wrapping another exception.\r\n+     * @exception java.io.IOException An IO exception from the parser,\r\n+     *            possibly from a byte stream or character stream\r\n+     *            supplied by the application.\r\n+     * @see org.xml.sax.XMLReader#parse(java.lang.String)\r\n+     */\r\n+    public void parse (String systemId)\r\n+\tthrows SAXException, IOException\r\n+    {\r\n+\tparse(new InputSource(systemId));\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.EntityResolver.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Filter an external entity resolution.\r\n+     *\r\n+     * @param publicId The entity's public identifier, or null.\r\n+     * @param systemId The entity's system identifier.\r\n+     * @return A new InputSource or null for the default.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @exception java.io.IOException The client may throw an\r\n+     *            I/O-related exception while obtaining the\r\n+     *            new InputSource.\r\n+     * @see org.xml.sax.EntityResolver#resolveEntity\r\n+     */\r\n+    public InputSource resolveEntity (String publicId, String systemId)\r\n+\tthrows SAXException, IOException\r\n+    {\r\n+\tif (entityResolver != null) {\r\n+\t    return entityResolver.resolveEntity(publicId, systemId);\r\n+\t} else {\r\n+\t    return null;\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.DTDHandler.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+    \r\n+    /**\r\n+     * Filter a notation declaration event.\r\n+     *\r\n+     * @param name The notation name.\r\n+     * @param publicId The notation's public identifier, or null.\r\n+     * @param systemId The notation's system identifier, or null.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.DTDHandler#notationDecl\r\n+     */\r\n+    public void notationDecl (String name, String publicId, String systemId)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (dtdHandler != null) {\r\n+\t    dtdHandler.notationDecl(name, publicId, systemId);\r\n+\t}\r\n+    }\r\n+\r\n+    \r\n+    /**\r\n+     * Filter an unparsed entity declaration event.\r\n+     *\r\n+     * @param name The entity name.\r\n+     * @param publicId The entity's public identifier, or null.\r\n+     * @param systemId The entity's system identifier, or null.\r\n+     * @param notationName The name of the associated notation.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.DTDHandler#unparsedEntityDecl\r\n+     */\r\n+    public void unparsedEntityDecl (String name, String publicId,\r\n+\t\t\t\t    String systemId, String notationName)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (dtdHandler != null) {\r\n+\t    dtdHandler.unparsedEntityDecl(name, publicId, systemId,\r\n+\t\t\t\t\t  notationName);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.ContentHandler.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Filter a new document locator event.\r\n+     *\r\n+     * @param locator The document locator.\r\n+     * @see org.xml.sax.ContentHandler#setDocumentLocator\r\n+     */\r\n+    public void setDocumentLocator (Locator locator)\r\n+    {\r\n+\tthis.locator = locator;\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.setDocumentLocator(locator);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Filter a start document event.\r\n+     *\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ContentHandler#startDocument\r\n+     */\r\n+    public void startDocument ()\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.startDocument();\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Filter an end document event.\r\n+     *\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ContentHandler#endDocument\r\n+     */\r\n+    public void endDocument ()\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.endDocument();\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Filter a start Namespace prefix mapping event.\r\n+     *\r\n+     * @param prefix The Namespace prefix.\r\n+     * @param uri The Namespace URI.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ContentHandler#startPrefixMapping\r\n+     */\r\n+    public void startPrefixMapping (String prefix, String uri)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.startPrefixMapping(prefix, uri);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Filter an end Namespace prefix mapping event.\r\n+     *\r\n+     * @param prefix The Namespace prefix.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ContentHandler#endPrefixMapping\r\n+     */\r\n+    public void endPrefixMapping (String prefix)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.endPrefixMapping(prefix);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Filter a start element event.\r\n+     *\r\n+     * @param uri The element's Namespace URI, or the empty string.\r\n+     * @param localName The element's local name, or the empty string.\r\n+     * @param qName The element's qualified (prefixed) name, or the empty\r\n+     *        string.\r\n+     * @param atts The element's attributes.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ContentHandler#startElement\r\n+     */\r\n+    public void startElement (String uri, String localName, String qName,\r\n+\t\t\t      Attributes atts)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.startElement(uri, localName, qName, atts);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Filter an end element event.\r\n+     *\r\n+     * @param uri The element's Namespace URI, or the empty string.\r\n+     * @param localName The element's local name, or the empty string.\r\n+     * @param qName The element's qualified (prefixed) name, or the empty\r\n+     *        string.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ContentHandler#endElement\r\n+     */\r\n+    public void endElement (String uri, String localName, String qName)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.endElement(uri, localName, qName);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Filter a character data event.\r\n+     *\r\n+     * @param ch An array of characters.\r\n+     * @param start The starting position in the array.\r\n+     * @param length The number of characters to use from the array.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ContentHandler#characters\r\n+     */\r\n+    public void characters (char ch[], int start, int length)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.characters(ch, start, length);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Filter an ignorable whitespace event.\r\n+     *\r\n+     * @param ch An array of characters.\r\n+     * @param start The starting position in the array.\r\n+     * @param length The number of characters to use from the array.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ContentHandler#ignorableWhitespace\r\n+     */\r\n+    public void ignorableWhitespace (char ch[], int start, int length)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.ignorableWhitespace(ch, start, length);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Filter a processing instruction event.\r\n+     *\r\n+     * @param target The processing instruction target.\r\n+     * @param data The text following the target.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ContentHandler#processingInstruction\r\n+     */\r\n+    public void processingInstruction (String target, String data)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.processingInstruction(target, data);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Filter a skipped entity event.\r\n+     *\r\n+     * @param name The name of the skipped entity.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ContentHandler#skippedEntity\r\n+     */\r\n+    public void skippedEntity (String name)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (contentHandler != null) {\r\n+\t    contentHandler.skippedEntity(name);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.ErrorHandler.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Filter a warning event.\r\n+     *\r\n+     * @param e The nwarning as an exception.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ErrorHandler#warning\r\n+     */\r\n+    public void warning (SAXParseException e)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (errorHandler != null) {\r\n+\t    errorHandler.warning(e);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Filter an error event.\r\n+     *\r\n+     * @param e The error as an exception.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ErrorHandler#error\r\n+     */\r\n+    public void error (SAXParseException e)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (errorHandler != null) {\r\n+\t    errorHandler.error(e);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Filter a fatal error event.\r\n+     *\r\n+     * @param e The error as an exception.\r\n+     * @exception org.xml.sax.SAXException The client may throw\r\n+     *            an exception during processing.\r\n+     * @see org.xml.sax.ErrorHandler#fatalError\r\n+     */\r\n+    public void fatalError (SAXParseException e)\r\n+\tthrows SAXException\r\n+    {\r\n+\tif (errorHandler != null) {\r\n+\t    errorHandler.fatalError(e);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal methods.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Set up before a parse.\r\n+     *\r\n+     * <p>Before every parse, check whether the parent is\r\n+     * non-null, and re-register the filter for all of the \r\n+     * events.</p>\r\n+     */\r\n+    private void setupParse ()\r\n+    {\r\n+\tif (parent == null) {\r\n+\t    throw new NullPointerException(\"No parent for filter\");\r\n+\t}\r\n+\tparent.setEntityResolver(this);\r\n+\tparent.setDTDHandler(this);\r\n+\tparent.setContentHandler(this);\r\n+\tparent.setErrorHandler(this);\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal state.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+    private XMLReader parent = null;\r\n+    private Locator locator = null;\r\n+    private EntityResolver entityResolver = null;\r\n+    private DTDHandler dtdHandler = null;\r\n+    private ContentHandler contentHandler = null;\r\n+    private ErrorHandler errorHandler = null;\r\n+\r\n+}\r\n+\r\n+// end of XMLFilterImpl.java\r"}, {"sha": "4fb44d91d8edec3b4c42e31b1d93098a3c461bb4", "filename": "libjava/org/xml/sax/helpers/XMLReaderAdapter.java", "status": "added", "additions": 526, "deletions": 0, "changes": 526, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderAdapter.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,526 @@\n+// XMLReaderAdapter.java - adapt an SAX2 XMLReader to a SAX1 Parser\r\n+// Written by David Megginson, sax@megginson.com\r\n+// NO WARRANTY!  This class is in the public domain.\r\n+\r\n+// $Id: XMLReaderAdapter.java,v 1.1 2000/10/02 02:43:20 sboag Exp $\r\n+\r\n+package org.xml.sax.helpers;\r\n+\r\n+import java.io.IOException;\r\n+import java.util.Locale;\r\n+\r\n+import org.xml.sax.Parser;\t// deprecated\r\n+import org.xml.sax.Locator;\r\n+import org.xml.sax.InputSource;\r\n+import org.xml.sax.AttributeList; // deprecated\r\n+import org.xml.sax.EntityResolver;\r\n+import org.xml.sax.DTDHandler;\r\n+import org.xml.sax.DocumentHandler; // deprecated\r\n+import org.xml.sax.ErrorHandler;\r\n+import org.xml.sax.SAXException;\r\n+\r\n+import org.xml.sax.XMLReader;\r\n+import org.xml.sax.Attributes;\r\n+import org.xml.sax.ContentHandler;\r\n+import org.xml.sax.SAXNotSupportedException;\r\n+\r\n+\r\n+/**\r\n+ * Adapt a SAX2 XMLReader as a SAX1 Parser.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This class wraps a SAX2 {@link org.xml.sax.XMLReader XMLReader}\r\n+ * and makes it act as a SAX1 {@link org.xml.sax.Parser Parser}.  The XMLReader \r\n+ * must support a true value for the \r\n+ * http://xml.org/sax/features/namespace-prefixes property or parsing will fail\r\n+ * with a {@link org.xml.sax.SAXException SAXException}; if the XMLReader \r\n+ * supports a false value for the http://xml.org/sax/features/namespaces \r\n+ * property, that will also be used to improve efficiency.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.Parser\r\n+ * @see org.xml.sax.XMLReader\r\n+ */\r\n+public class XMLReaderAdapter implements Parser, ContentHandler\r\n+{\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Constructor.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Create a new adapter.\r\n+     *\r\n+     * <p>Use the \"org.xml.sax.driver\" property to locate the SAX2\r\n+     * driver to embed.</p>\r\n+     *\r\n+     * @exception org.xml.sax.SAXException If the embedded driver\r\n+     *            cannot be instantiated or if the\r\n+     *            org.xml.sax.driver property is not specified.\r\n+     */\r\n+    public XMLReaderAdapter ()\r\n+      throws SAXException\r\n+    {\r\n+\tsetup(XMLReaderFactory.createXMLReader());\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Create a new adapter.\r\n+     *\r\n+     * <p>Create a new adapter, wrapped around a SAX2 XMLReader.\r\n+     * The adapter will make the XMLReader act like a SAX1\r\n+     * Parser.</p>\r\n+     *\r\n+     * @param xmlReader The SAX2 XMLReader to wrap.\r\n+     * @exception java.lang.NullPointerException If the argument is null.\r\n+     */\r\n+    public XMLReaderAdapter (XMLReader xmlReader)\r\n+    {\r\n+\tsetup(xmlReader);\r\n+    }\r\n+\r\n+\r\n+\r\n+    /**\r\n+     * Internal setup.\r\n+     *\r\n+     * @param xmlReader The embedded XMLReader.\r\n+     */\r\n+    private void setup (XMLReader xmlReader)\r\n+    {\r\n+\tif (xmlReader == null) {\r\n+\t    throw new NullPointerException(\"XMLReader must not be null\");\r\n+\t}\r\n+\tthis.xmlReader = xmlReader;\r\n+\tqAtts = new AttributesAdapter();\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.Parser.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Set the locale for error reporting.\r\n+     *\r\n+     * <p>This is not supported in SAX2, and will always throw\r\n+     * an exception.</p>\r\n+     *\r\n+     * @param The locale for error reporting.\r\n+     * @see org.xml.sax.Parser#setLocale\r\n+     */\r\n+    public void setLocale (Locale locale)\r\n+\tthrows SAXException\r\n+    {\r\n+\tthrow new SAXNotSupportedException(\"setLocale not supported\");\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Register the entity resolver.\r\n+     *\r\n+     * @param resolver The new resolver.\r\n+     * @see org.xml.sax.Parser#setEntityResolver\r\n+     */\r\n+    public void setEntityResolver (EntityResolver resolver)\r\n+    {\r\n+\txmlReader.setEntityResolver(resolver);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Register the DTD event handler.\r\n+     *\r\n+     * @param handler The new DTD event handler.\r\n+     * @see org.xml.sax.Parser#setDTDHandler\r\n+     */\r\n+    public void setDTDHandler (DTDHandler handler)\r\n+    {\r\n+\txmlReader.setDTDHandler(handler);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Register the SAX1 document event handler.\r\n+     *\r\n+     * <p>Note that the SAX1 document handler has no Namespace\r\n+     * support.</p>\r\n+     *\r\n+     * @param handler The new SAX1 document event handler.\r\n+     * @see org.xml.sax.Parser#setDocumentHandler\r\n+     */\r\n+    public void setDocumentHandler (DocumentHandler handler)\r\n+    {\r\n+\tdocumentHandler = handler;\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Register the error event handler.\r\n+     *\r\n+     * @param handler The new error event handler.\r\n+     * @see org.xml.sax.Parser#setErrorHandler\r\n+     */\r\n+    public void setErrorHandler (ErrorHandler handler)\r\n+    {\r\n+\txmlReader.setErrorHandler(handler);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Parse the document.\r\n+     *\r\n+     * <p>This method will throw an exception if the embedded\r\n+     * XMLReader does not support the \r\n+     * http://xml.org/sax/features/namespace-prefixes property.</p>\r\n+     *\r\n+     * @param systemId The absolute URL of the document.\r\n+     * @exception java.io.IOException If there is a problem reading\r\n+     *            the raw content of the document.\r\n+     * @exception org.xml.sax.SAXException If there is a problem\r\n+     *            processing the document.\r\n+     * @see #parse(org.xml.sax.InputSource)\r\n+     * @see org.xml.sax.Parser#parse(java.lang.String)\r\n+     */\r\n+    public void parse (String systemId)\r\n+\tthrows IOException, SAXException\r\n+    {\r\n+\tparse(new InputSource(systemId));\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Parse the document.\r\n+     *\r\n+     * <p>This method will throw an exception if the embedded\r\n+     * XMLReader does not support the \r\n+     * http://xml.org/sax/features/namespace-prefixes property.</p>\r\n+     *\r\n+     * @param input An input source for the document.\r\n+     * @exception java.io.IOException If there is a problem reading\r\n+     *            the raw content of the document.\r\n+     * @exception org.xml.sax.SAXException If there is a problem\r\n+     *            processing the document.\r\n+     * @see #parse(java.lang.String)\r\n+     * @see org.xml.sax.Parser#parse(org.xml.sax.InputSource)\r\n+     */\r\n+    public void parse (InputSource input)\r\n+\tthrows IOException, SAXException\r\n+    {\r\n+\tsetupXMLReader();\r\n+\txmlReader.parse(input);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Set up the XML reader.\r\n+     */\r\n+    private void setupXMLReader ()\r\n+\tthrows SAXException\r\n+    {\r\n+\txmlReader.setFeature(\"http://xml.org/sax/features/namespace-prefixes\", true);\r\n+\ttry {\r\n+\t    xmlReader.setFeature(\"http://xml.org/sax/features/namespaces\",\r\n+\t                         false);\r\n+\t} catch (SAXException e) {\r\n+\t    // NO OP: it's just extra information, and we can ignore it\r\n+\t}\r\n+\txmlReader.setContentHandler(this);\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Implementation of org.xml.sax.ContentHandler.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Set a document locator.\r\n+     *\r\n+     * @param locator The document locator.\r\n+     * @see org.xml.sax.ContentHandler#setDocumentLocator\r\n+     */\r\n+    public void setDocumentLocator (Locator locator)\r\n+    {\r\n+\tdocumentHandler.setDocumentLocator(locator);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Start document event.\r\n+     *\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.ContentHandler#startDocument\r\n+     */\r\n+    public void startDocument ()\r\n+\tthrows SAXException\r\n+    {\r\n+\tdocumentHandler.startDocument();\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * End document event.\r\n+     *\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.ContentHandler#endDocument\r\n+     */\r\n+    public void endDocument ()\r\n+\tthrows SAXException\r\n+    {\r\n+\tdocumentHandler.endDocument();\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX2 start prefix mapping event.\r\n+     *\r\n+     * @param prefix The prefix being mapped.\r\n+     * @param uri The Namespace URI being mapped to.\r\n+     * @see org.xml.sax.ContentHandler#startPrefixMapping\r\n+     */\r\n+    public void startPrefixMapping (String prefix, String uri)\r\n+    {\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX2 end prefix mapping event.\r\n+     *\r\n+     * @param prefix The prefix being mapped.\r\n+     * @see org.xml.sax.ContentHandler#endPrefixMapping\r\n+     */\r\n+    public void endPrefixMapping (String prefix)\r\n+    {\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX2 start element event.\r\n+     *\r\n+     * @param uri The Namespace URI.\r\n+     * @param localName The Namespace local name.\r\n+     * @param qName The qualified (prefixed) name.\r\n+     * @param atts The SAX2 attributes.\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.ContentHandler#endDocument\r\n+     */\r\n+    public void startElement (String uri, String localName,\r\n+\t\t\t      String qName, Attributes atts)\r\n+\tthrows SAXException\r\n+    {\r\n+\tqAtts.setAttributes(atts);\r\n+\tdocumentHandler.startElement(qName, qAtts);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX2 end element event.\r\n+     *\r\n+     * @param uri The Namespace URI.\r\n+     * @param localName The Namespace local name.\r\n+     * @param qName The qualified (prefixed) name.\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.ContentHandler#endElement\r\n+     */\r\n+    public void endElement (String uri, String localName,\r\n+\t\t\t    String qName)\r\n+\tthrows SAXException\r\n+    {\r\n+\tdocumentHandler.endElement(qName);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX2 characters event.\r\n+     *\r\n+     * @param ch An array of characters.\r\n+     * @param start The starting position in the array.\r\n+     * @param length The number of characters to use.\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.ContentHandler#characters\r\n+     */\r\n+    public void characters (char ch[], int start, int length)\r\n+\tthrows SAXException\r\n+    {\r\n+\tdocumentHandler.characters(ch, start, length);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX2 ignorable whitespace event.\r\n+     *\r\n+     * @param ch An array of characters.\r\n+     * @param start The starting position in the array.\r\n+     * @param length The number of characters to use.\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.ContentHandler#ignorableWhitespace\r\n+     */\r\n+    public void ignorableWhitespace (char ch[], int start, int length)\r\n+\tthrows SAXException\r\n+    {\r\n+\tdocumentHandler.ignorableWhitespace(ch, start, length);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX2 processing instruction event.\r\n+     *\r\n+     * @param target The processing instruction target.\r\n+     * @param data The remainder of the processing instruction\r\n+     * @exception org.xml.sax.SAXException The client may raise a\r\n+     *            processing exception.\r\n+     * @see org.xml.sax.ContentHandler#processingInstruction\r\n+     */\r\n+    public void processingInstruction (String target, String data)\r\n+\tthrows SAXException\r\n+    {\r\n+\tdocumentHandler.processingInstruction(target, data);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Adapt a SAX2 skipped entity event.\r\n+     *\r\n+     * @param name The name of the skipped entity.\r\n+     * @see org.xml.sax.ContentHandler#skippedEntity\r\n+     */\r\n+    public void skippedEntity (String name)\r\n+\tthrows SAXException\r\n+    {\r\n+    }\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal state.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+    XMLReader xmlReader;\r\n+    DocumentHandler documentHandler;\r\n+    AttributesAdapter qAtts;\r\n+\r\n+\r\n+\f\r\n+    ////////////////////////////////////////////////////////////////////\r\n+    // Internal class.\r\n+    ////////////////////////////////////////////////////////////////////\r\n+\r\n+\r\n+    /**\r\n+     * Internal class to wrap a SAX2 Attributes object for SAX1.\r\n+     */\r\n+    final class AttributesAdapter implements AttributeList\r\n+    {\r\n+\tAttributesAdapter ()\r\n+\t{\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Set the embedded Attributes object.\r\n+\t *\r\n+\t * @param The embedded SAX2 Attributes.\r\n+\t */ \r\n+\tvoid setAttributes (Attributes attributes)\r\n+\t{\r\n+\t    this.attributes = attributes;\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Return the number of attributes.\r\n+\t *\r\n+\t * @return The length of the attribute list.\r\n+\t * @see org.xml.sax.AttributeList#getLength\r\n+\t */\r\n+\tpublic int getLength ()\r\n+\t{\r\n+\t    return attributes.getLength();\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Return the qualified (prefixed) name of an attribute by position.\r\n+\t *\r\n+\t * @return The qualified name.\r\n+\t * @see org.xml.sax.AttributeList#getName\r\n+\t */\r\n+\tpublic String getName (int i)\r\n+\t{\r\n+\t    return attributes.getQName(i);\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Return the type of an attribute by position.\r\n+\t *\r\n+\t * @return The type.\r\n+\t * @see org.xml.sax.AttributeList#getType(int)\r\n+\t */\r\n+\tpublic String getType (int i)\r\n+\t{\r\n+\t    return attributes.getType(i);\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Return the value of an attribute by position.\r\n+\t *\r\n+\t * @return The value.\r\n+\t * @see org.xml.sax.AttributeList#getValue(int)\r\n+\t */\r\n+\tpublic String getValue (int i)\r\n+\t{\r\n+\t    return attributes.getValue(i);\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Return the type of an attribute by qualified (prefixed) name.\r\n+\t *\r\n+\t * @return The type.\r\n+\t * @see org.xml.sax.AttributeList#getType(java.lang.String)\r\n+\t */\r\n+\tpublic String getType (String qName)\r\n+\t{\r\n+\t    return attributes.getType(qName);\r\n+\t}\r\n+\r\n+\r\n+\t/**\r\n+\t * Return the value of an attribute by qualified (prefixed) name.\r\n+\t *\r\n+\t * @return The value.\r\n+\t * @see org.xml.sax.AttributeList#getValue(java.lang.String)\r\n+\t */\r\n+\tpublic String getValue (String qName)\r\n+\t{\r\n+\t    return attributes.getValue(qName);\r\n+\t}\r\n+\r\n+\tprivate Attributes attributes;\r\n+    }\r\n+\r\n+}\r\n+\r\n+// end of XMLReaderAdapter.java\r"}, {"sha": "9443b27dcca0f2a51e43e6a6142e4eb30d884931", "filename": "libjava/org/xml/sax/helpers/XMLReaderFactory.java", "status": "added", "additions": 136, "deletions": 0, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9556f88777b749e2e436b61073ea9d3c68630f42/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderFactory.java?ref=9556f88777b749e2e436b61073ea9d3c68630f42", "patch": "@@ -0,0 +1,136 @@\n+// XMLReaderFactory.java - factory for creating a new reader.\r\n+// Written by David Megginson, sax@megginson.com\r\n+// NO WARRANTY!  This class is in the Public Domain.\r\n+\r\n+// $Id: XMLReaderFactory.java,v 1.1 2000/10/02 02:43:20 sboag Exp $\r\n+\r\n+package org.xml.sax.helpers;\r\n+import org.xml.sax.Parser;\r\n+import org.xml.sax.XMLReader;\r\n+import org.xml.sax.SAXException;\r\n+\r\n+\r\n+/**\r\n+ * Factory for creating an XML reader.\r\n+ *\r\n+ * <blockquote>\r\n+ * <em>This module, both source code and documentation, is in the\r\n+ * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\r\n+ * </blockquote>\r\n+ *\r\n+ * <p>This class contains static methods for creating an XML reader\r\n+ * from an explicit class name, or for creating an XML reader based\r\n+ * on the value of the <code>org.xml.sax.driver</code> system \r\n+ * property:</p>\r\n+ *\r\n+ * <pre>\r\n+ * try {\r\n+ *   XMLReader myReader = XMLReaderFactory.createXMLReader();\r\n+ * } catch (SAXException e) {\r\n+ *   System.err.println(e.getMessage());\r\n+ * }\r\n+ * </pre>\r\n+ *\r\n+ * <p>Note that these methods will not be usable in environments where\r\n+ * system properties are not accessible or where the application or\r\n+ * applet is not permitted to load classes dynamically.</p>\r\n+ *\r\n+ * <p><strong>Note to implementors:</strong> SAX implementations in specialized\r\n+ * environments may replace this class with a different one optimized for the\r\n+ * environment, as long as its method signatures remain the same.</p>\r\n+ *\r\n+ * @since SAX 2.0\r\n+ * @author David Megginson, \r\n+ *         <a href=\"mailto:sax@megginson.com\">sax@megginson.com</a>\r\n+ * @version 2.0\r\n+ * @see org.xml.sax.XMLReader\r\n+ */\r\n+final public class XMLReaderFactory\r\n+{\r\n+\r\n+    /**\r\n+     * Private constructor.\r\n+     *\r\n+     * <p>This constructor prevents the class from being instantiated.</p>\r\n+     */\r\n+    private XMLReaderFactory ()\r\n+    {\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Attempt to create an XML reader from a system property.\r\n+     *\r\n+     * <p>This method uses the value of the system property\r\n+     * \"org.xml.sax.driver\" as the full name of a Java class\r\n+     * and tries to instantiate that class as a SAX2 \r\n+     * XMLReader.</p>\r\n+     *\r\n+     * <p>Note that many Java interpreters allow system properties\r\n+     * to be specified on the command line.</p>\r\n+     *\r\n+     * @return A new XMLReader.\r\n+     * @exception org.xml.sax.SAXException If the value of the\r\n+     *            \"org.xml.sax.driver\" system property is null,\r\n+     *            or if the class cannot be loaded and instantiated.\r\n+     * @see #createXMLReader(java.lang.String)\r\n+     */\r\n+    public static XMLReader createXMLReader ()\r\n+\tthrows SAXException\r\n+    {\r\n+\tString className = System.getProperty(\"org.xml.sax.driver\");\r\n+\tif (className == null) {\r\n+\t    Parser parser;\r\n+\t    try {\r\n+\t\tparser = ParserFactory.makeParser();\r\n+\t    } catch (Exception e) {\r\n+\t\tparser = null;\r\n+\t    }\r\n+\t    if (parser == null) {\r\n+\t\tthrow new\r\n+\t\t    SAXException(\"System property org.xml.sax.driver not specified\");\r\n+\t    } else {\r\n+\t\treturn new ParserAdapter(parser);\r\n+\t    }\r\n+\t} else {\r\n+\t    return createXMLReader(className);\r\n+\t}\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * Attempt to create an XML reader from a class name.\r\n+     *\r\n+     * <p>Given a class name, this method attempts to load\r\n+     * and instantiate the class as an XML reader.</p>\r\n+     *\r\n+     * @return A new XML reader.\r\n+     * @exception org.xml.sax.SAXException If the class cannot be\r\n+     *            loaded, instantiated, and cast to XMLReader.\r\n+     * @see #createXMLReader()\r\n+     */\r\n+    public static XMLReader createXMLReader (String className)\r\n+\tthrows SAXException\r\n+    {\r\n+\ttry {\r\n+\t    return (XMLReader)(Class.forName(className).newInstance());\r\n+\t} catch (ClassNotFoundException e1) {\r\n+\t    throw new SAXException(\"SAX2 driver class \" + className +\r\n+\t\t\t\t   \" not found\", e1);\r\n+\t} catch (IllegalAccessException e2) {\r\n+\t    throw new SAXException(\"SAX2 driver class \" + className +\r\n+\t\t\t\t   \" found but cannot be loaded\", e2);\r\n+\t} catch (InstantiationException e3) {\r\n+\t    throw new SAXException(\"SAX2 driver class \" + className +\r\n+\t\t\t\t   \" loaded but cannot be instantiated (no empty public constructor?)\",\r\n+\t\t\t\t   e3);\r\n+\t} catch (ClassCastException e4) {\r\n+\t    throw new SAXException(\"SAX2 driver class \" + className +\r\n+\t\t\t\t   \" does not implement XMLReader\", e4);\r\n+\t}\r\n+\t\t\t\t   \r\n+    }\r\n+\r\n+}\r\n+\r\n+// end of XMLReaderFactory.java\r"}]}