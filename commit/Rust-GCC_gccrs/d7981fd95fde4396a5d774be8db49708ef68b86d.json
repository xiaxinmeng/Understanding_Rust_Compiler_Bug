{"sha": "d7981fd95fde4396a5d774be8db49708ef68b86d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc5ODFmZDk1ZmRlNDM5NmE1ZDc3NGJlOGRiNDk3MDhlZjY4Yjg2ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2004-05-18T19:53:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-05-18T19:53:21Z"}, "message": "* class.c (build_base_path): Tidy a bit.\n\nFrom-SVN: r82004", "tree": {"sha": "3d225bf185c5ce4a94b6386d6e62e88b33cf3578", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d225bf185c5ce4a94b6386d6e62e88b33cf3578"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7981fd95fde4396a5d774be8db49708ef68b86d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7981fd95fde4396a5d774be8db49708ef68b86d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7981fd95fde4396a5d774be8db49708ef68b86d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7981fd95fde4396a5d774be8db49708ef68b86d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "ec73835eb555ee9dbd6525f8d6369fe5c077beb4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7981fd95fde4396a5d774be8db49708ef68b86d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7981fd95fde4396a5d774be8db49708ef68b86d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d7981fd95fde4396a5d774be8db49708ef68b86d", "patch": "@@ -1,3 +1,7 @@\n+2004-05-18  Jason Merrill  <jason@redhat.com>\n+\n+\t* class.c (build_base_path): Tidy a bit.\n+\n 2004-05-14  Geoffrey Keating  <geoffk@apple.com>\n \n \t* name-lookup.c (struct scope_binding): New."}, {"sha": "33cbdb64746277b7a4fb774824cd50a56f7be3eb", "filename": "gcc/cp/class.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7981fd95fde4396a5d774be8db49708ef68b86d/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7981fd95fde4396a5d774be8db49708ef68b86d/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d7981fd95fde4396a5d774be8db49708ef68b86d", "patch": "@@ -255,6 +255,7 @@ build_base_path (enum tree_code code,\n   int fixed_type_p;\n   int want_pointer = TREE_CODE (TREE_TYPE (expr)) == POINTER_TYPE;\n   bool has_empty = false;\n+  bool virtual_access;\n \n   if (expr == error_mark_node || binfo == error_mark_node || !binfo)\n     return error_mark_node;\n@@ -296,21 +297,24 @@ build_base_path (enum tree_code code,\n   offset = BINFO_OFFSET (binfo);\n   fixed_type_p = resolves_to_fixed_type_p (expr, &nonnull);\n \n-  if (want_pointer && !nonnull\n-      && (!integer_zerop (offset) || (v_binfo && fixed_type_p <= 0)))\n+  /* Do we need to look in the vtable for the real offset?  */\n+  virtual_access = (v_binfo && fixed_type_p <= 0);\n+\n+  /* Do we need to check for a null pointer?  */\n+  if (want_pointer && !nonnull && (virtual_access || !integer_zerop (offset)))\n     null_test = error_mark_node;\n \n-  if (TREE_SIDE_EFFECTS (expr)\n-      && (null_test || (v_binfo && fixed_type_p <= 0)))\n+  /* Protect against multiple evaluation if necessary.  */\n+  if (TREE_SIDE_EFFECTS (expr) && (null_test || virtual_access))\n     expr = save_expr (expr);\n \n+  /* Now that we've saved expr, build the real null test.  */\n   if (null_test)\n     null_test = fold (build2 (NE_EXPR, boolean_type_node,\n \t\t\t      expr, integer_zero_node));\n \n   /* If this is a simple base reference, express it as a COMPONENT_REF.  */\n-  if (code == PLUS_EXPR\n-      && (v_binfo == NULL_TREE || fixed_type_p > 0)\n+  if (code == PLUS_EXPR && !virtual_access\n       /* We don't build base fields for empty bases, and they aren't very\n \t interesting to the optimizers anyway.  */\n       && !has_empty)\n@@ -323,7 +327,7 @@ build_base_path (enum tree_code code,\n       goto out;\n     }\n \n-  if (v_binfo && fixed_type_p <= 0)\n+  if (virtual_access)\n     {\n       /* Going via virtual base V_BINFO.  We need the static offset\n          from V_BINFO to BINFO, and the dynamic offset from D_BINFO to"}]}