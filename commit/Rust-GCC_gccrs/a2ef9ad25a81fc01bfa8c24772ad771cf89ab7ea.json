{"sha": "a2ef9ad25a81fc01bfa8c24772ad771cf89ab7ea", "node_id": "C_kwDOANBUbNoAKGEyZWY5YWQyNWE4MWZjMDFiZmE4YzI0NzcyYWQ3NzFjZjg5YWI3ZWE", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-01T09:54:29Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-03-01T21:31:47Z"}, "message": "ast: Add NodeId and clone to RestPattern\n\nThe RestPattern AST node did not have any NodeId to identify it and\ncould therefore not be instanciated.\n\ngcc/rust/ChangeLog:\n\n\t* ast/rust-pattern.h (class RestPattern): Add NodeId as well as\n\tthe clone_impl function.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "32b710e919c685989070fa43c5aed6936ce4267c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32b710e919c685989070fa43c5aed6936ce4267c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2ef9ad25a81fc01bfa8c24772ad771cf89ab7ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ef9ad25a81fc01bfa8c24772ad771cf89ab7ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2ef9ad25a81fc01bfa8c24772ad771cf89ab7ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ef9ad25a81fc01bfa8c24772ad771cf89ab7ea/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac375e498312c00c3eebc738e77792f8b39e7d8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac375e498312c00c3eebc738e77792f8b39e7d8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac375e498312c00c3eebc738e77792f8b39e7d8d"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "0cc8425264063b779e659d2da03a50cd3ec12620", "filename": "gcc/rust/ast/rust-pattern.h", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2ef9ad25a81fc01bfa8c24772ad771cf89ab7ea/gcc%2Frust%2Fast%2Frust-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2ef9ad25a81fc01bfa8c24772ad771cf89ab7ea/gcc%2Frust%2Fast%2Frust-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-pattern.h?ref=a2ef9ad25a81fc01bfa8c24772ad771cf89ab7ea", "patch": "@@ -194,15 +194,26 @@ class WildcardPattern : public Pattern\n class RestPattern : public Pattern\n {\n   Location locus;\n+  NodeId node_id;\n \n public:\n   std::string as_string () const override { return \"..\"; }\n \n-  RestPattern (Location locus) : locus (locus) {}\n+  RestPattern (Location locus)\n+    : locus (locus), node_id (Analysis::Mappings::get ()->get_next_node_id ())\n+  {}\n \n   Location get_locus () const override final { return locus; }\n \n   void accept_vis (ASTVisitor &vis) override;\n+\n+  NodeId get_pattern_node_id () const override final { return node_id; }\n+\n+protected:\n+  RestPattern *clone_pattern_impl () const override\n+  {\n+    return new RestPattern (*this);\n+  }\n };\n \n // Base range pattern bound (lower or upper limit) - abstract"}]}