{"sha": "7a615b25793c2201a7b92c8fd3425567b96b22ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E2MTViMjU3OTNjMjIwMWE3YjkyYzhmZDM0MjU1NjdiOTZiMjJjZQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-04-11T04:40:57Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-04-11T04:40:57Z"}, "message": "Makefile.in (fixinc.sh): Pass BUILD_LIBERTY as LIBERTY to mkfixinc.sh.\n\n* Makefile.in (fixinc.sh): Pass BUILD_LIBERTY as LIBERTY to\nmkfixinc.sh.\n* fixinc/mkfixinc.sh (defs): Add LIBERTY.\n* configure.in (STMP_FIXINC, STMP_FIXPROTO): Don't disable on\nbuild != host sysrooted builds.\n* configure.in (SYSTEM_HEADER_DIR): Make sure it contains\nTARGET_SYSTEM_ROOT even on sysrooted natives.\n* configure: Rebuilt.\n\nFrom-SVN: r65462", "tree": {"sha": "b472e45609357c9565f9f2a1bcac7e179a72d3ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b472e45609357c9565f9f2a1bcac7e179a72d3ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a615b25793c2201a7b92c8fd3425567b96b22ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a615b25793c2201a7b92c8fd3425567b96b22ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a615b25793c2201a7b92c8fd3425567b96b22ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a615b25793c2201a7b92c8fd3425567b96b22ce/comments", "author": null, "committer": null, "parents": [{"sha": "0b87e18ef1c2c54458dd76a54ea38ae1571dc237", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b87e18ef1c2c54458dd76a54ea38ae1571dc237", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b87e18ef1c2c54458dd76a54ea38ae1571dc237"}], "stats": {"total": 94, "additions": 58, "deletions": 36}, "files": [{"sha": "02775219dec84b5ff21daad70a31c22533c69385", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a615b25793c2201a7b92c8fd3425567b96b22ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a615b25793c2201a7b92c8fd3425567b96b22ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a615b25793c2201a7b92c8fd3425567b96b22ce", "patch": "@@ -1,3 +1,14 @@\n+2003-04-11  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* Makefile.in (fixinc.sh): Pass BUILD_LIBERTY as LIBERTY to\n+\tmkfixinc.sh.\n+\t* fixinc/mkfixinc.sh (defs): Add LIBERTY.\n+\t* configure.in (STMP_FIXINC, STMP_FIXPROTO): Don't disable on\n+\tbuild != host sysrooted builds.\n+\t* configure.in (SYSTEM_HEADER_DIR): Make sure it contains\n+\tTARGET_SYSTEM_ROOT even on sysrooted natives.\n+\t* configure: Rebuilt.\n+\n 2003-04-10  Zack Weinberg  <zack@codesourcery.com>\n \n \t* c-decl.c (struct binding_level): Add shadowed_tags and"}, {"sha": "6b9e64fe4f32dc701a212b4173db41eb6215f67d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a615b25793c2201a7b92c8fd3425567b96b22ce/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a615b25793c2201a7b92c8fd3425567b96b22ce/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7a615b25793c2201a7b92c8fd3425567b96b22ce", "patch": "@@ -2490,8 +2490,9 @@ fixinc.sh: $(FIXINCSRCDIR)/mkfixinc.sh $(FIXINCSRCDIR)/fixincl.c \\\n \t$(FIXINCSRCDIR)/server.h $(FIXINCSRCDIR)/inclhack.def specs.ready\n \t(MAKE=\"$(MAKE)\"; srcdir=`cd $(srcdir)/fixinc && ${PWD}` ; \\\n \tCC=\"$(BUILD_CC)\"; CFLAGS=\"$(BUILD_CFLAGS)\"; LDFLAGS=\"$(BUILD_LDFLAGS)\"; \\\n-\tWARN_CFLAGS=\"$(WARN_CFLAGS)\"; \\\n-\texport MAKE srcdir CC CFLAGS LDFLAGS WARN_CFLAGS; cd ./fixinc && \\\n+\tWARN_CFLAGS=\"$(WARN_CFLAGS)\"; LIBERTY=`pwd`/\"$(BUILD_LIBIBERTY)\"; \\\n+\texport MAKE srcdir CC CFLAGS LDFLAGS WARN_CFLAGS LIBERTY; \\\n+\tcd ./fixinc && \\\n \t$(SHELL) $${srcdir}/mkfixinc.sh $(build_canonical) $(target))\n \n .PHONY: install-gcc-tooldir"}, {"sha": "e42c97df27cf84a7b83a5d931d0252b896bfabf4", "filename": "gcc/configure", "status": "modified", "additions": 36, "deletions": 31, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a615b25793c2201a7b92c8fd3425567b96b22ce/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a615b25793c2201a7b92c8fd3425567b96b22ce/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=7a615b25793c2201a7b92c8fd3425567b96b22ce", "patch": "@@ -2434,7 +2434,7 @@ fi\n \n \n # Find some useful tools\n-for ac_prog in mawk gawk nawk awk\n+for ac_prog in gawk mawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -7319,6 +7319,9 @@ then\n \t    | powerpc*-*-*,powerpc64*-*-*)\n \t\tCROSS=\"$CROSS -DNATIVE_CROSS\" ;;\n \tesac\n+elif test \"x$TARGET_SYSTEM_ROOT\" != x; then\n+        # This is just $(TARGET_SYSTEM_ROOT)$(NATIVE_SYSTEM_HEADER_DIR)\n+        SYSTEM_HEADER_DIR='$(CROSS_SYSTEM_HEADER_DIR)'\n fi\n \n # If this is a cross-compiler that does not\n@@ -7356,8 +7359,10 @@ then\n     BUILD_CC='$(CC_FOR_BUILD)'\n     BUILD_CFLAGS='$(INTERNAL_CFLAGS) $(T_CFLAGS) $(CFLAGS_FOR_BUILD) $(XCFLAGS)'\n \n-    STMP_FIXINC=\n-    STMP_FIXPROTO=\n+    if test \"x$TARGET_SYSTEM_ROOT\" = x; then\n+\tSTMP_FIXINC=\n+\tSTMP_FIXPROTO=\n+    fi\n fi\n \n # Expand extra_headers to include complete path.\n@@ -7407,7 +7412,7 @@ fi\n # build->target assembler and hope that it will have the same features\n # as the host->target assembler we'll be using.\n echo $ac_n \"checking what assembler to use\"\"... $ac_c\" 1>&6\n-echo \"configure:7411: checking what assembler to use\" >&5\n+echo \"configure:7416: checking what assembler to use\" >&5\n in_tree_gas=no\n gcc_cv_as=\n gcc_cv_gas_major_version=\n@@ -7516,7 +7521,7 @@ esac\n # build->target linker and hope that it will have the same features\n # as the host->target linker we'll be using.\n echo $ac_n \"checking what linker to use\"\"... $ac_c\" 1>&6\n-echo \"configure:7520: checking what linker to use\" >&5\n+echo \"configure:7525: checking what linker to use\" >&5\n in_tree_ld=no\n gcc_cv_ld=\n gcc_cv_gld_major_version=\n@@ -7615,7 +7620,7 @@ esac\n \n # Figure out what nm we will be using.\n echo $ac_n \"checking what nm to use\"\"... $ac_c\" 1>&6\n-echo \"configure:7619: checking what nm to use\" >&5\n+echo \"configure:7624: checking what nm to use\" >&5\n if test -x nm$host_exeext; then\n \tgcc_cv_nm=./nm$host_exeext\n elif test \"x$program_prefix\" != xNONE; then\n@@ -7627,7 +7632,7 @@ echo \"$ac_t\"\"$gcc_cv_nm\" 1>&6\n \n # Figure out what objdump we will be using.\n echo $ac_n \"checking what objdump to use\"\"... $ac_c\" 1>&6\n-echo \"configure:7631: checking what objdump to use\" >&5\n+echo \"configure:7636: checking what objdump to use\" >&5\n if test -x objdump$host_exeext; then\n \tgcc_cv_objdump=./objdump$host_exeext\n elif test \"x$program_prefix\" != xNONE; then\n@@ -7639,7 +7644,7 @@ echo \"$ac_t\"\"$gcc_cv_objdump\" 1>&6\n \n # Figure out what assembler alignment features are present.\n echo $ac_n \"checking assembler alignment features\"\"... $ac_c\" 1>&6\n-echo \"configure:7643: checking assembler alignment features\" >&5\n+echo \"configure:7648: checking assembler alignment features\" >&5\n gcc_cv_as_alignment_features=none\n if test $in_tree_gas = yes; then\n   # Gas version 2.6 and later support for .balign and .p2align.\n@@ -7700,7 +7705,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_alignment_features\" 1>&6\n \n echo $ac_n \"checking assembler subsection support\"\"... $ac_c\" 1>&6\n-echo \"configure:7704: checking assembler subsection support\" >&5\n+echo \"configure:7709: checking assembler subsection support\" >&5\n gcc_cv_as_subsections=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7749,7 +7754,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_subsections\" 1>&6\n \n echo $ac_n \"checking assembler weak support\"\"... $ac_c\" 1>&6\n-echo \"configure:7753: checking assembler weak support\" >&5\n+echo \"configure:7758: checking assembler weak support\" >&5\n gcc_cv_as_weak=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7779,7 +7784,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_weak\" 1>&6\n \n echo $ac_n \"checking assembler hidden support\"\"... $ac_c\" 1>&6\n-echo \"configure:7783: checking assembler hidden support\" >&5\n+echo \"configure:7788: checking assembler hidden support\" >&5\n gcc_cv_as_hidden=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7860,7 +7865,7 @@ esac\n \n \n echo $ac_n \"checking assembler leb128 support\"\"... $ac_c\" 1>&6\n-echo \"configure:7864: checking assembler leb128 support\" >&5\n+echo \"configure:7869: checking assembler leb128 support\" >&5\n gcc_cv_as_leb128=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7914,7 +7919,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_leb128\" 1>&6\n \n echo $ac_n \"checking assembler eh_frame optimization\"\"... $ac_c\" 1>&6\n-echo \"configure:7918: checking assembler eh_frame optimization\" >&5\n+echo \"configure:7923: checking assembler eh_frame optimization\" >&5\n gcc_cv_as_eh_frame=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8004,7 +8009,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_eh_frame\" 1>&6\n \n echo $ac_n \"checking assembler section merging support\"\"... $ac_c\" 1>&6\n-echo \"configure:8008: checking assembler section merging support\" >&5\n+echo \"configure:8013: checking assembler section merging support\" >&5\n gcc_cv_as_shf_merge=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8036,7 +8041,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_shf_merge\" 1>&6\n \n echo $ac_n \"checking assembler thread-local storage support\"\"... $ac_c\" 1>&6\n-echo \"configure:8040: checking assembler thread-local storage support\" >&5\n+echo \"configure:8045: checking assembler thread-local storage support\" >&5\n gcc_cv_as_tls=no\n conftest_s=\n tls_first_major=\n@@ -8183,7 +8188,7 @@ case \"$target\" in\n   # All TARGET_ABI_OSF targets.\n   alpha*-*-osf* | alpha*-*-linux* | alpha*-*-*bsd*)\n     echo $ac_n \"checking assembler supports explicit relocations\"\"... $ac_c\" 1>&6\n-echo \"configure:8187: checking assembler supports explicit relocations\" >&5\n+echo \"configure:8192: checking assembler supports explicit relocations\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_explicit_relocs'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8236,7 +8241,7 @@ EOF\n     ;;\n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:8240: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:8245: checking assembler .register pseudo-op support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8264,7 +8269,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler supports -relax\"\"... $ac_c\" 1>&6\n-echo \"configure:8268: checking assembler supports -relax\" >&5\n+echo \"configure:8273: checking assembler supports -relax\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_relax_opt'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8292,7 +8297,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler and linker support unaligned pc related relocs\"\"... $ac_c\" 1>&6\n-echo \"configure:8296: checking assembler and linker support unaligned pc related relocs\" >&5\n+echo \"configure:8301: checking assembler and linker support unaligned pc related relocs\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_sparc_ua_pcrel'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8319,7 +8324,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler and linker support unaligned pc related relocs against hidden symbols\"\"... $ac_c\" 1>&6\n-echo \"configure:8323: checking assembler and linker support unaligned pc related relocs against hidden symbols\" >&5\n+echo \"configure:8328: checking assembler and linker support unaligned pc related relocs against hidden symbols\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_sparc_ua_pcrel_hidden'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8359,7 +8364,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:8363: checking for assembler offsetable %lo() support\" >&5\n+echo \"configure:8368: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8398,7 +8403,7 @@ EOF\n \n   i[34567]86-*-* | x86_64-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:8402: checking assembler instructions\" >&5\n+echo \"configure:8407: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test $in_tree_gas = yes ; then \n        if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8432,7 +8437,7 @@ EOF\n     echo \"$ac_t\"\"$gcc_cv_as_instructions\" 1>&6\n \n     echo $ac_n \"checking assembler GOTOFF in data directives\"\"... $ac_c\" 1>&6\n-echo \"configure:8436: checking assembler GOTOFF in data directives\" >&5\n+echo \"configure:8441: checking assembler GOTOFF in data directives\" >&5\n     gcc_cv_as_gotoff_in_data=no\n     if test $in_tree_gas = yes ; then\n        if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8466,7 +8471,7 @@ EOF\n \n   ia64*-*-*)\n     echo $ac_n \"checking assembler supports ltoffx and ldxmov\"\"... $ac_c\" 1>&6\n-echo \"configure:8470: checking assembler supports ltoffx and ldxmov\" >&5\n+echo \"configure:8475: checking assembler supports ltoffx and ldxmov\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_ltoffx_ldxmov_relocs'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8511,7 +8516,7 @@ EOF\n esac\n \n echo $ac_n \"checking assembler dwarf2 debug_line support\"\"... $ac_c\" 1>&6\n-echo \"configure:8515: checking assembler dwarf2 debug_line support\" >&5\n+echo \"configure:8520: checking assembler dwarf2 debug_line support\" >&5\n gcc_cv_as_dwarf2_debug_line=no\n # ??? Not all targets support dwarf2 debug_line, even within a version\n # of gas.  Moreover, we need to emit a valid instruction to trigger any\n@@ -8573,7 +8578,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_dwarf2_debug_line\" 1>&6\n \n echo $ac_n \"checking assembler --gdwarf2 support\"\"... $ac_c\" 1>&6\n-echo \"configure:8577: checking assembler --gdwarf2 support\" >&5\n+echo \"configure:8582: checking assembler --gdwarf2 support\" >&5\n gcc_cv_as_gdwarf2_flag=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8607,7 +8612,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_gdwarf2_flag\" 1>&6\n \n echo $ac_n \"checking assembler --gstabs support\"\"... $ac_c\" 1>&6\n-echo \"configure:8611: checking assembler --gstabs support\" >&5\n+echo \"configure:8616: checking assembler --gstabs support\" >&5\n gcc_cv_as_gstabs_flag=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8640,7 +8645,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_gstabs_flag\" 1>&6\n \n echo $ac_n \"checking linker read-only and read-write section mixing\"\"... $ac_c\" 1>&6\n-echo \"configure:8644: checking linker read-only and read-write section mixing\" >&5\n+echo \"configure:8649: checking linker read-only and read-write section mixing\" >&5\n gcc_cv_ld_ro_rw_mix=unknown\n if test $in_tree_ld = yes ; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 10 -o \"$gcc_cv_gld_major_version\" -gt 2 && grep 'EMUL = elf' ../ld/Makefile > /dev/null; then\n@@ -8678,7 +8683,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_ld_ro_rw_mix\" 1>&6\n \n echo $ac_n \"checking linker PT_GNU_EH_FRAME support\"\"... $ac_c\" 1>&6\n-echo \"configure:8682: checking linker PT_GNU_EH_FRAME support\" >&5\n+echo \"configure:8687: checking linker PT_GNU_EH_FRAME support\" >&5\n gcc_cv_ld_eh_frame_hdr=no\n if test $in_tree_ld = yes ; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 12 -o \"$gcc_cv_gld_major_version\" -gt 2 && grep 'EMUL = elf' ../ld/Makefile > /dev/null; then\n@@ -8702,7 +8707,7 @@ echo \"$ac_t\"\"$gcc_cv_ld_eh_frame_hdr\" 1>&6\n case \"$target\" in\n   mips*-*-*)\n     echo $ac_n \"checking whether libgloss uses STARTUP directives consistently\"\"... $ac_c\" 1>&6\n-echo \"configure:8706: checking whether libgloss uses STARTUP directives consistently\" >&5\n+echo \"configure:8711: checking whether libgloss uses STARTUP directives consistently\" >&5\n     gcc_cv_mips_libgloss_startup=no\n     gcc_cv_libgloss_srcdir=`echo $srcdir | sed -e 's,/gcc$,,'`/libgloss\n     if test \"x$exec_prefix\" = xNONE; then\n@@ -8907,7 +8912,7 @@ fi\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:8911: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:8916: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\""}, {"sha": "ebbe37f658f40168f46622831e474302122a83df", "filename": "gcc/configure.in", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a615b25793c2201a7b92c8fd3425567b96b22ce/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a615b25793c2201a7b92c8fd3425567b96b22ce/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=7a615b25793c2201a7b92c8fd3425567b96b22ce", "patch": "@@ -1368,6 +1368,9 @@ then\n \t    | powerpc*-*-*,powerpc64*-*-*)\n \t\tCROSS=\"$CROSS -DNATIVE_CROSS\" ;;\n \tesac\n+elif test \"x$TARGET_SYSTEM_ROOT\" != x; then\n+        # This is just $(TARGET_SYSTEM_ROOT)$(NATIVE_SYSTEM_HEADER_DIR)\n+        SYSTEM_HEADER_DIR='$(CROSS_SYSTEM_HEADER_DIR)'\n fi\n \n # If this is a cross-compiler that does not\n@@ -1405,8 +1408,10 @@ then\n     BUILD_CC='$(CC_FOR_BUILD)'\n     BUILD_CFLAGS='$(INTERNAL_CFLAGS) $(T_CFLAGS) $(CFLAGS_FOR_BUILD) $(XCFLAGS)'\n \n-    STMP_FIXINC=\n-    STMP_FIXPROTO=\n+    if test \"x$TARGET_SYSTEM_ROOT\" = x; then\n+\tSTMP_FIXINC=\n+\tSTMP_FIXPROTO=\n+    fi\n fi\n \n # Expand extra_headers to include complete path."}, {"sha": "042ed820af18f87c175149d255d82413aab23984", "filename": "gcc/fixinc/mkfixinc.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a615b25793c2201a7b92c8fd3425567b96b22ce/gcc%2Ffixinc%2Fmkfixinc.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a615b25793c2201a7b92c8fd3425567b96b22ce/gcc%2Ffixinc%2Fmkfixinc.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fmkfixinc.sh?ref=7a615b25793c2201a7b92c8fd3425567b96b22ce", "patch": "@@ -119,7 +119,7 @@ fi\n #  OK.  We gotta make the thing.\n #  make and install either the binary or the default script\n \n-defs=\"SHELL=\\\"$SHELL\\\" CC=\\\"$CC\\\" CFLAGS=\\\"$CFLAGS\\\" LDFLAGS=\\\"$LDFLAGS\\\"\"\n+defs=\"SHELL=\\\"$SHELL\\\" CC=\\\"$CC\\\" CFLAGS=\\\"$CFLAGS\\\" LDFLAGS=\\\"$LDFLAGS\\\" LIBERTY=\\\"$LIBERTY\\\"\"\n cmd=\"$MAKE ${defs} install-bin\"\n echo $cmd\n eval $cmd"}]}