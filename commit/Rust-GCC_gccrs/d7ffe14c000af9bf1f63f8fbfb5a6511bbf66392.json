{"sha": "d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdmZmUxNGMwMDBhZjliZjFmNjNmOGZiZmI1YTY1MTFiYmY2NjM5Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:27:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:27:16Z"}, "message": "[multiple changes]\n\n2013-02-06  Tristan Gingold  <gingold@adacore.com>\n\n\t* raise-gcc.c: Remove useless includes (sys/stat.h, adaint.h)\n\tEnclosing debugging functions within #ifndef inhibit_libc to\n\tsupport builds without full C headers.\n\n2013-02-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* gnat_rm.texi: Add a minimal example of Scalar_Storage_Order.\n\n2013-02-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch10.adb (Install_Limited_Withed_Unit): Add a missing\n\tcheck to detect a parent-child relationship between two units in\n\torder to correctly bypass the installation of a limited view. In\n\tother words, the comment on the intended usage of the check was\n\tcorrect, but the code itself did not reflect the behavior.\n\nFrom-SVN: r195794", "tree": {"sha": "048ed428886f8760b2f07ebf65de182a448f9203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/048ed428886f8760b2f07ebf65de182a448f9203"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392/comments", "author": null, "committer": null, "parents": [{"sha": "c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c91dbd184bc0dde2d04895dc15a7fe169d7169d7"}], "stats": {"total": 82, "additions": 71, "deletions": 11}, "files": [{"sha": "3d7dbfd5666549896af029b96f874e8f43462bb8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392", "patch": "@@ -1,3 +1,21 @@\n+2013-02-06  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* raise-gcc.c: Remove useless includes (sys/stat.h, adaint.h)\n+\tEnclosing debugging functions within #ifndef inhibit_libc to\n+\tsupport builds without full C headers.\n+\n+2013-02-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* gnat_rm.texi: Add a minimal example of Scalar_Storage_Order.\n+\n+2013-02-06  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch10.adb (Install_Limited_Withed_Unit): Add a missing\n+\tcheck to detect a parent-child relationship between two units in\n+\torder to correctly bypass the installation of a limited view. In\n+\tother words, the comment on the intended usage of the check was\n+\tcorrect, but the code itself did not reflect the behavior.\n+\n 2013-02-06  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_ch5.adb (Expand_N_Assignment_Statement): Do not generate the"}, {"sha": "1d2003e083ec07ea9269276a7638724d90771da6", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392", "patch": "@@ -7051,13 +7051,47 @@ this attribute.\n @noindent\n For every array or record type @var{S}, the representation attribute\n @code{Scalar_Storage_Order} denotes the order in which storage elements\n-that make up scalar components are ordered within S. Other properties are\n+that make up scalar components are ordered within S:\n+\n+@smallexample @c ada\n+   --  Component type definitions\n+\n+   subtype Yr_Type is Natural range 0 .. 127;\n+   subtype Mo_Type is Natural range 1 .. 12;\n+   subtype Da_Type is Natural range 1 .. 31;\n+\n+   --  Record declaration\n+\n+   type Date is record\n+      Years_Since_1980 : Yr_Type;\n+      Month            : Mo_Type;\n+      Day_Of_Month     : Da_Type;\n+   end record;\n+\n+   --  Record representation clause\n+\n+   for Date use record\n+      Years_Since_1980 at 0 range 0  ..  6;\n+      Month            at 0 range 7  .. 10;\n+      Day_Of_Month     at 0 range 11 .. 15;\n+   end record;\n+\n+   --  Attribute definition clauses\n+\n+   for Date'Bit_Order use System.High_Order_First;\n+   for Date'Scalar_Storage_Order use System.High_Order_First;\n+   --  If Scalar_Storage_Order is specified, it must be consistent with\n+   --  Bit_Order, so it's best to always define the latter explicitly if\n+   --  the former is used.\n+@end smallexample\n+\n+Other properties are\n as for standard representation attribute @code{Bit_Order}, as defined by\n Ada RM 13.5.3(4). The default is @code{System.Default_Bit_Order}.\n \n For a record type @var{S}, if @code{@var{S}'Scalar_Storage_Order} is\n specified explicitly, it shall be equal to @code{@var{S}'Bit_Order}. Note:\n-This means that if a @code{Scalar_Storage_Order} attribute definition\n+this means that if a @code{Scalar_Storage_Order} attribute definition\n clause is not confirming, then the type's @code{Bit_Order} shall be\n specified explicitly and set to the same value.\n "}, {"sha": "42c5a5c4b45e23fffbd8cc9d4f12f018760727ce", "filename": "gcc/ada/raise-gcc.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392/gcc%2Fada%2Fraise-gcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392/gcc%2Fada%2Fraise-gcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise-gcc.c?ref=d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *             Copyright (C) 1992-2012, Free Software Foundation, Inc.      *\n+ *             Copyright (C) 1992-2013, Free Software Foundation, Inc.      *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -38,13 +38,12 @@\n \n #include \"tconfig.h\"\n #include \"tsystem.h\"\n-#include <sys/stat.h>\n+\n #include <stdarg.h>\n typedef char bool;\n # define true 1\n # define false 0\n \n-#include \"adaint.h\"\n #include \"raise.h\"\n \n #ifdef __APPLE__\n@@ -81,7 +80,6 @@ extern struct Exception_Occurrence *__gnat_setup_current_excep\n  (_Unwind_Exception *);\n extern void __gnat_unhandled_except_handler (_Unwind_Exception *);\n \n-#include \"dwarf2.h\"\n #include \"unwind-pe.h\"\n \n /* The known and handled exception classes.  */\n@@ -93,6 +91,8 @@ extern void __gnat_unhandled_except_handler (_Unwind_Exception *);\n    -- The DB stuff below is there for debugging purposes only. --\n    -------------------------------------------------------------- */\n \n+#ifndef inhibit_libc\n+\n #define DB_PHASES     0x1\n #define DB_CSITE      0x2\n #define DB_ACTIONS    0x4\n@@ -193,7 +193,11 @@ db_phases (int phases)\n \n   db (DB_PHASES, \" :\\n\");\n }\n-\n+#else /* !inhibit_libc */\n+#define db_phases(X)\n+#define db_indent(X)\n+#define db(X, ...)\n+#endif /* !inhibit_libc */\n \n /* ---------------------------------------------------------------\n    --  Now come a set of useful structures and helper routines. --\n@@ -516,6 +520,7 @@ get_ip_from_context (_Unwind_Context *uw_context)\n static void\n db_region_for (region_descriptor *region, _Unwind_Ptr ip)\n {\n+#ifndef inhibit_libc\n   if (! (db_accepted_codes () & DB_REGIONS))\n     return;\n \n@@ -527,6 +532,7 @@ db_region_for (region_descriptor *region, _Unwind_Ptr ip)\n     db (DB_REGIONS, \"no lsda\");\n \n   db (DB_REGIONS, \"\\n\");\n+#endif\n }\n \n /* Retrieve the ttype entry associated with FILTER in the REGION's\n@@ -647,6 +653,7 @@ typedef struct\n static void\n db_action_for (action_descriptor *action, _Unwind_Ptr ip)\n {\n+#ifndef inhibit_libc\n   db (DB_ACTIONS, \"For ip @ %p => \", (void *)ip);\n \n   switch (action->kind)\n@@ -672,8 +679,7 @@ db_action_for (action_descriptor *action, _Unwind_Ptr ip)\n        db (DB_ACTIONS, \"Err? Unexpected action kind !\\n\");\n        break;\n     }\n-\n-  return;\n+#endif\n }\n \n /* Search the call_site_table of REGION for an entry appropriate for the"}, {"sha": "e936838694a9871fe5079f1b47cceca4ac854da1", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=d7ffe14c000af9bf1f63f8fbfb5a6511bbf66392", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -4743,7 +4743,9 @@ package body Sem_Ch10 is\n       if P = Cunit_Entity (Current_Sem_Unit)\n         or else\n          (Nkind (Unit (Cunit (Current_Sem_Unit))) = N_Package_Body\n-            and then P = Main_Unit_Entity)\n+            and then P = Main_Unit_Entity\n+            and then\n+              Is_Ancestor_Unit (Cunit (Main_Unit), Cunit (Current_Sem_Unit)))\n       then\n          return;\n       end if;"}]}