{"sha": "7a912730535b73d3bece5a80a91efca68b6cb74a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E5MTI3MzA1MzViNzNkM2JlY2U1YTgwYTkxZWZjYTY4YjZjYjc0YQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2007-08-14T08:48:07Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-14T08:48:07Z"}, "message": "gnatlink.adb (Gnatlink): Pass switches to the linker even if the binder-generated file is not in Ada.\n\n2007-08-14  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* gnatlink.adb (Gnatlink): Pass switches to the linker even if the\n\tbinder-generated file is not in Ada.\n\tPass -mrtp to the linker if it is GCC and --RTS=rtp has been\n\trecorded in the ALI file.\n\tPass -fsjlj to the linker if it is GCC and --RTS=sjlj has been recorded.\n\nFrom-SVN: r127452", "tree": {"sha": "bdff4b70efae888a74f505a86da9f2c0049b53e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdff4b70efae888a74f505a86da9f2c0049b53e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a912730535b73d3bece5a80a91efca68b6cb74a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a912730535b73d3bece5a80a91efca68b6cb74a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a912730535b73d3bece5a80a91efca68b6cb74a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a912730535b73d3bece5a80a91efca68b6cb74a/comments", "author": null, "committer": null, "parents": [{"sha": "171d182e7f3a5cb93f9e95aded02ed5a2d48e0c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/171d182e7f3a5cb93f9e95aded02ed5a2d48e0c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/171d182e7f3a5cb93f9e95aded02ed5a2d48e0c4"}], "stats": {"total": 53, "additions": 45, "deletions": 8}, "files": [{"sha": "9d79b0a91ced35efa8b8c43948eda9d5052fce53", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 45, "deletions": 8, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a912730535b73d3bece5a80a91efca68b6cb74a/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a912730535b73d3bece5a80a91efca68b6cb74a/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=7a912730535b73d3bece5a80a91efca68b6cb74a", "patch": "@@ -1549,21 +1549,58 @@ begin\n               Index in Units.Table (ALIs.Table (A).First_Unit).First_Arg ..\n                        Units.Table (ALIs.Table (A).First_Unit).Last_Arg\n             loop\n-               --  Do not compile with the front end switches except for --RTS\n-               --  if the binder generated file is in Ada.\n+               --  Do not compile with the front end switches. However, --RTS\n+               --  is to be dealt with specially because it needs to be passed\n+               --  if the binder-generated file is in Ada and may also be used\n+               --  to drive the linker.\n \n                declare\n                   Arg : String_Ptr renames Args.Table (Index);\n                begin\n-                  if not Is_Front_End_Switch (Arg.all)\n-                    or else\n-                      (Ada_Bind_File\n-                        and then Arg'Length > 5\n-                        and then Arg (Arg'First + 2 .. Arg'First + 5) = \"RTS=\")\n-                  then\n+                  if not Is_Front_End_Switch (Arg.all) then\n                      Binder_Options_From_ALI.Increment_Last;\n                      Binder_Options_From_ALI.Table\n                        (Binder_Options_From_ALI.Last) := String_Access (Arg);\n+\n+                  elsif Arg'Length > 5\n+                    and then Arg (Arg'First + 2 .. Arg'First + 5) = \"RTS=\"\n+                  then\n+                     if Ada_Bind_File then\n+                        Binder_Options_From_ALI.Increment_Last;\n+                        Binder_Options_From_ALI.Table\n+                          (Binder_Options_From_ALI.Last)\n+                            := String_Access (Arg);\n+                     end if;\n+\n+                     --  GNAT doesn't support the GCC multilib mechanism.\n+                     --  This means that, when a multilib switch is used\n+                     --  to request a particular compilation mode, the\n+                     --  corresponding runtime switch (--RTS) must also be\n+                     --  specified. The long-term goal is to fully support the\n+                     --  multilib mechanism; however, in the meantime, it is\n+                     --  convenient to eliminate the redundancy by keying the\n+                     --  compilation mode on a single switch, namely --RTS.\n+\n+                     --  Pass -mrtp to the linker if --RTS=rtp was passed.\n+\n+                     if Linker_Path = Gcc_Path\n+                       and then Arg'Length > 8\n+                       and then Arg (Arg'First + 6 .. Arg'First + 8) = \"rtp\"\n+                     then\n+                        Linker_Options.Increment_Last;\n+                        Linker_Options.Table (Linker_Options.Last) :=\n+                          new String'(\"-mrtp\");\n+\n+                     --  Pass -fsjlj to the linker if --RTS=sjlj was passed.\n+\n+                     elsif Linker_Path = Gcc_Path\n+                       and then Arg'Length > 9\n+                       and then Arg (Arg'First + 6 .. Arg'First + 9) = \"sjlj\"\n+                     then\n+                        Linker_Options.Increment_Last;\n+                        Linker_Options.Table (Linker_Options.Last) :=\n+                          new String'(\"-fsjlj\");\n+                     end if;\n                   end if;\n                end;\n             end loop;"}]}