{"sha": "6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU3YjA3YTc1MGVlYjM4ZTZiNmE4YmM0MmE0YTlhNWIzNzkyZjBiOA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2000-09-25T09:49:20Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-09-25T09:49:20Z"}, "message": "definitions in config/m[368]*:\n\nChanges add TABs on either or both sides, covering start of line,\nup to any operand for all .*ASM.*_OP definitions.\n\nFrom-SVN: r36609", "tree": {"sha": "6399d1830dd2e2560848034ebd4d59a550e2343a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6399d1830dd2e2560848034ebd4d59a550e2343a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de323aa15733d3a075a3586e736f4cb9b1383ff8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de323aa15733d3a075a3586e736f4cb9b1383ff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de323aa15733d3a075a3586e736f4cb9b1383ff8"}], "stats": {"total": 306, "additions": 177, "deletions": 129}, "files": [{"sha": "a648269a0fcfe42a10150f59ef8e73194831fc72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -142,6 +142,54 @@\n \tCOMMON_ASM_OP, ASCII_DATA_ASM_OP, INIT_SECTION_ASM_OP,\n \tFINI_SECTION_ASM_OP, CTORS_SECTION_ASM_OP, DTORS_SECTION_ASM_OP,\n \tSDATA_SECTION_ASM_OP, SBSS_SECTION_ASM_OP): Here.\n+\t* config/m32r/m32r.h (SCOMMON_ASM_OP): Here.\n+\t* config/m68hc11/m68hc11.h (GLOBAL_ASM_OP): Here.\n+\t* config/m68k/auxas.h (BYTE_ASM_OP, WORD_ASM_OP, LONG_ASM_OP,\n+\tSPACE_ASM_OP, ALIGN_ASM_OP, GLOBAL_ASM_OP, SWBEG_ASM_OP,\n+\tSET_ASM_OP): Here.\n+\t* config/m68k/coff.h (BSS_SECTION_ASM_OP, CTORS_SECTION_ASM_OP,\n+\tDTORS_SECTION_ASM_OP, INT_ASM_OP): Here.\n+\t* config/m68k/crds.h (BSS_SECTION_ASM_OP): Here.\n+\t* config/m68k/dpx2.h (ASM_BYTE_OP, GLOBAL_ASM_OP): Here.\n+\t* config/m68k/hp320.h (ASCII_DATA_ASM_OP, GLOBAL_ASM_OP): Here.\n+\t* config/m68k/linux.h (BSS_SECTION_ASM_OP): Here.\n+\t* config/m68k/lynx.h (BSS_SECTION_ASM_OP): Here.\n+\t* config/m68k/m68k.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP,\n+\tGLOBAL_ASM_OP): Here.\n+\t* config/m68k/m68kelf.h (SWBEG_ASM_OP, BSS_ASM_OP,\n+\tBSS_SECTION_ASM_OP): Here.\n+\t* config/m68k/m68kv4.h (BSS_ASM_OP): Here.\n+\t* config/m68k/mot3300.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP,\n+\tASCII_DATA_ASM_OP, SET_ASM_OP, CTORS_SECTION_ASM_OP,\n+\tDTORS_SECTION_ASM_OP, GLOBAL_ASM_OP, ASM_BYTE_OP, ALIGN_ASM_OP,\n+\tSKIP_ASM_OP): Here.\n+\t* config/m68k/newsgas.h (SET_ASM_OP): Here.\n+\t* config/m68k/rtemself.h (INIT_SECTION_ASM_OP,\n+\tFINI_SECTION_ASM_OP, EH_FRAME_SECTION_ASM_OP): Here.\n+\t* config/m68k/sgs.h (BYTE_ASM_OP, WORD_ASM_OP, LONG_ASM_OP,\n+\tSPACE_ASM_OP, ALIGN_ASM_OP, GLOBAL_ASM_OP, SWBEG_ASM_OP,\n+\tSET_ASM_OP, UNALIGNED_SHORT_ASM_OP, UNALIGNED_INT_ASM_OP): Here,\n+\tbut use trailing spaces.\n+\t* config/m68k/tower-as.h (TEXT_SECTION_ASM_OP,\n+\tDATA_SECTION_ASM_OP, GLOBAL_ASM_OP, INIT_SECTION_ASM_OP,\n+\tFINI_SECTION_ASM_OP, CONST_SECTION_ASM_OP, BSS_SECTION_ASM_OP):\n+\tHere.\n+\t* config/m88k/dgux.h (FINI_SECTION_ASM_OP, INIT_SECTION_ASM_OP,\n+\tCTORS_SECTION_ASM_OP, DTORS_SECTION_ASM_OP): Here.\n+\t* config/m88k/m88k.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP,\n+\tCONST_SECTION_ASM_OP, TDESC_SECTION_ASM_OP, CTORS_SECTION_ASM_OP,\n+\tDTORS_SECTION_ASM_OP, INIT_SECTION_ASM_OP, FINI_SECTION_ASM_OP,\n+\tIDENT_ASM_OP, FILE_ASM_OP, SECTION_ASM_OP, SET_ASM_OP,\n+\tGLOBAL_ASM_OP, ALIGN_ASM_OP, SKIP_ASM_OP, COMMON_ASM_OP,\n+\tBSS_ASM_OP, FLOAT_ASM_OP, DOUBLE_ASM_OP, INT_ASM_OP, SHORT_ASM_OP,\n+\tCHAR_ASM_OP, ASCII_DATA_ASM_OP, SBSS_ASM_OP, SCOMM_ASM_OP,\n+\tSDATA_SECTION_ASM_OP, TYPE_ASM_OP, SIZE_ASM_OP, INTERNAL_ASM_OP,\n+\tVERSION_ASM_OP, UNALIGNED_SHORT_ASM_OP, UNALIGNED_INT_ASM_OP,\n+\tPUSHSECTION_ASM_OP, POPSECTION_ASM_OP, REQUIRES_88110_ASM_OP,\n+\tASM_BYTE_OP): Here.\n+\t* config/m88k/openbsd.h (SET_ASM_OP): Here.\n+\t* config/m88k/sysv4.h (INIT_SECTION_ASM_OP, FINI_SECTION_ASM_OP,\n+\tCTORS_SECTION_ASM_OP, DTORS_SECTION_ASM_OP): Here.\n \n 2000-09-25  Richard Henderson  <rth@cygnus.com>\n "}, {"sha": "722998178d4f24d4dfde1d5b8fc831156c22ff91", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, Mitsubishi M32R cpu.\n-   Copyright (C) 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -2018,7 +2018,7 @@ extern char m32r_punct_chars[];\n    handling the required alignment of the variable.  The alignment is\n    specified as the number of bits.  */\n \n-#define SCOMMON_ASM_OP \".scomm\"\n+#define SCOMMON_ASM_OP \"\\t.scomm\\t\"\n \n #undef  ASM_OUTPUT_ALIGNED_COMMON\n #define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\"}, {"sha": "b1a4917582c56dfc85b4015c5b6d047ba9d26066", "filename": "gcc/config/m68hc11/m68hc11.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1798,7 +1798,7 @@ do { long l;\t\t\t\t\t\t\\\n \n /* The prefix for immediate operands.  */\n #define IMMEDIATE_PREFIX \"#\"\n-#define GLOBAL_ASM_OP   \".globl\"\n+#define GLOBAL_ASM_OP   \"\\t.globl\\t\"\n #define ASM_LONG        \".long\"\n #define ASM_SHORT       \".word\"\n "}, {"sha": "23832afe1d6cb8511fca2ac9f60befd89ee1abd4", "filename": "gcc/config/m68k/auxas.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fauxas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fauxas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fauxas.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Motorola 680x0 running A/UX using /bin/as\n-   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -45,28 +45,28 @@ Boston, MA 02111-1307, USA.  */\n #define DATA_SECTION_ASM_OP\t\"\\tdata\\t1\"\n \n #undef BYTE_ASM_OP\n-#define\tBYTE_ASM_OP\t\t\"byte\"\n+#define\tBYTE_ASM_OP\t\t\"\\tbyte\\t\"\n \n #undef WORD_ASM_OP\n-#define WORD_ASM_OP\t\t\"short\"\n+#define WORD_ASM_OP\t\t\"\\tshort\\t\"\n \n #undef LONG_ASM_OP\n-#define LONG_ASM_OP\t\t\"long\"\n+#define LONG_ASM_OP\t\t\"\\tlong\\t\"\n \n #undef SPACE_ASM_OP\n-#define SPACE_ASM_OP\t\t\"space\"\n+#define SPACE_ASM_OP\t\t\"\\tspace\\t\"\n \n #undef ALIGN_ASM_OP\n-#define ALIGN_ASM_OP\t\t\"align\"\n+#define ALIGN_ASM_OP\t\t\"\\talign\\t\"\n \n #undef GLOBAL_ASM_OP\n-#define GLOBAL_ASM_OP\t\t\"\\tglobal\"\n+#define GLOBAL_ASM_OP\t\t\"\\tglobal\\t\"\n \n #undef SWBEG_ASM_OP\n-#define SWBEG_ASM_OP\t\t\"swbeg\"\n+#define SWBEG_ASM_OP\t\t\"\\tswbeg\\t\"\n \n #undef SET_ASM_OP\n-#define SET_ASM_OP\t\t\"set\"\n+#define SET_ASM_OP\t\t\"\\tset\\t\"\n \n #undef ASM_PN_FORMAT\n #define ASM_PN_FORMAT\t\t\"%s%%%d\""}, {"sha": "dde140a10865a5b6295127ab1cb1484961869f6a", "filename": "gcc/config/m68k/coff.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fcoff.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    m68k series COFF object files and debugging, version.\n-   Copyright (C) 1994, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1996, 1997, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -90,7 +90,7 @@ Boston, MA 02111-1307, USA.  */\n    assembler operation to identify the following data as uninitialized global\n    data.  */\n \n-#define BSS_SECTION_ASM_OP\t\".section\\t.bss\"\n+#define BSS_SECTION_ASM_OP\t\"\\t.section\\t.bss\"\n \n /* A C statement (sans semicolon) to output to the stdio stream\n    FILE the assembler definition of uninitialized global DECL named\n@@ -110,8 +110,8 @@ Boston, MA 02111-1307, USA.  */\n \n /* Support the ctors and dtors sections for g++.  */\n \n-#define CTORS_SECTION_ASM_OP\t\".section\\t.ctors,\\\"x\\\"\"\n-#define DTORS_SECTION_ASM_OP\t\".section\\t.dtors,\\\"x\\\"\"\n+#define CTORS_SECTION_ASM_OP\t\"\\t.section\\t.ctors,\\\"x\\\"\"\n+#define DTORS_SECTION_ASM_OP\t\"\\t.section\\t.dtors,\\\"x\\\"\"\n \n /* A list of other sections which the compiler might be \"in\" at any\n    given time.  */\n@@ -148,7 +148,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n-#define INT_ASM_OP \".long\"\n+#define INT_ASM_OP \"\\t.long\\t\"\n \n /* A C statement (sans semicolon) to output an element in the table of\n    global constructors.  */"}, {"sha": "7f2e0384e2f2b31bd5b0c911677e5b9bec536e5e", "filename": "gcc/config/m68k/crds.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fcrds.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fcrds.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fcrds.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler;\n    Charles River Data Systems UNiverse/32.\n-   Copyright (C) 1987, 93, 94, 96, 97, 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 93, 94, 96, 97, 1998, 1999, 2000 Free Software Foundation, Inc.\n    Contributed by Gary E. Miller (Gary_Edmunds_Miller@cup.portal.com)\n \n This file is part of GNU CC.\n@@ -112,7 +112,7 @@ Boston, MA 02111-1307, USA.  */\n #define STRUCT_VALUE gen_rtx_MEM (Pmode, gen_rtx( , , ) )\n */\n \n-#define BSS_SECTION_ASM_OP \".bss\"\n+#define BSS_SECTION_ASM_OP \"\\t.bss\"\n \n /* Specify how to pad function arguments.\n    Value should be `upward', `downward' or `none'."}, {"sha": "a98c444b2b3e6e6ed70504634df0977114363be3", "filename": "gcc/config/m68k/dpx2.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fdpx2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fdpx2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fdpx2.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  \n    Bull DPX/2 200 and 300 systems (m68k, SysVr3).\n-   Copyright (C) 1987, 1993, 1994, 1995, 1996, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1993, 1994, 1995, 1996, 1999, 2000 Free Software Foundation, Inc.\n    Contributed by Frederic Pierresteguy (F.Pierresteguy@frcl.bull.fr).\n \n This file is part of GNU CC.\n@@ -118,7 +118,7 @@ Boston, MA 02111-1307, USA.  */\n /* Assembler pseudos to introduce constants of various size.  */\n \n #undef ASM_BYTE_OP\n-#define ASM_BYTE_OP \"\\tdc.b\"\n+#define ASM_BYTE_OP \"\\tdc.b\\t\"\n #undef ASM_LONG\n #define ASM_LONG \"\\tdc.l\"\n \n@@ -134,7 +134,7 @@ Boston, MA 02111-1307, USA.  */\n   fprintf (FILE, \"\\tdcb.b %u,0\\n\", (SIZE))\n \n #undef GLOBAL_ASM_OP \n-#define GLOBAL_ASM_OP \"\\txdef\"\n+#define GLOBAL_ASM_OP \"\\txdef\\t\"\n \n #undef ASM_OUTPUT_ALIGN\n #define ASM_OUTPUT_ALIGN(FILE,LOG)\t\\"}, {"sha": "1a1964479bee37ec653ee43ed0285a72cf6ae521", "filename": "gcc/config/m68k/hp320.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fhp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fhp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  HP-UX 68000/68020 version.\n-   Copyright (C) 1987, 88, 93, 94, 95, 96, 1997, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 93, 94, 95, 96, 1997, 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -228,12 +228,12 @@ Boston, MA 02111-1307, USA.  */\n #define TEXT_SECTION_ASM_OP \"text\"\n #define DATA_SECTION_ASM_OP \"data\"\n #endif\n-#define\tASCII_DATA_ASM_OP \"byte\"\n+#define\tASCII_DATA_ASM_OP \"\\tbyte\\t\"\n  \n /* This is the command to make the user-level label named NAME\n    defined for reference from other files.  */\n \n-#define GLOBAL_ASM_OP \"global\"\n+#define GLOBAL_ASM_OP \"\\tglobal\\t\"\n \n /* This says how to output an assembler line\n    to define a global common symbol.  */"}, {"sha": "bcaea44c6535ebf2b3ade2c896f4913a7794cc34", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for Motorola 68k running Linux-based GNU systems with\n    ELF format.\n-   Copyright (C) 1995, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -209,7 +209,7 @@ Boston, MA 02111-1307, USA.  */\n    assembler operation to identify the following data as uninitialized global\n    data.  */\n \n-#define BSS_SECTION_ASM_OP \".section\\t.bss\"\n+#define BSS_SECTION_ASM_OP \"\\t.section\\t.bss\"\n \n /* A C statement (sans semicolon) to output to the stdio stream\n    FILE the assembler definition of uninitialized global DECL named"}, {"sha": "ff5503215aaac41625a18462b9f31a879176b222", "filename": "gcc/config/m68k/lynx.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flynx.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Motorola 680x0 running LynxOS.\n-   Copyright (C) 1993, 94, 95, 96, 98, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 94, 95, 96, 98, 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -26,7 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #undef ASM_OUTPUT_DESTRUCTOR\n #undef SELECT_RTX_SECTION\n \n-#define BSS_SECTION_ASM_OP \".bss\"\n+#define BSS_SECTION_ASM_OP \"\\t.bss\"\n \n #define ASM_LONG \".long\"\n "}, {"sha": "61bad0a097f5d4ab26ca968bb9fd8ee8bce344fa", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1810,11 +1810,11 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n \n /* Output before read-only data.  */\n \n-#define TEXT_SECTION_ASM_OP \".text\"\n+#define TEXT_SECTION_ASM_OP \"\\t.text\"\n \n /* Output before writable data.  */\n \n-#define DATA_SECTION_ASM_OP \".data\"\n+#define DATA_SECTION_ASM_OP \"\\t.data\"\n \n /* Here are four prefixes that are used by asm_fprintf to\n    facilitate customization for alternate assembler syntaxes.\n@@ -1892,7 +1892,7 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n /* This is how to output a command to make the user-level label named NAME\n    defined for reference from other files.  */\n \n-#define GLOBAL_ASM_OP \".globl\"\n+#define GLOBAL_ASM_OP \"\\t.globl\\t\"\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fprintf (FILE, \"%s \", GLOBAL_ASM_OP);\t\t\\\n        assemble_name (FILE, NAME);\t\t\t\\"}, {"sha": "1f50d2bb4f3d9499e771f065a177f65903455a32", "filename": "gcc/config/m68k/m68kelf.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kelf.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,7 +1,7 @@\n /* m68kelf support, derived from m68kv4.h */\n \n /* Target definitions for GNU compiler for mc680x0 running System V.4\n-   Copyright (C) 1991, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993, 2000 Free Software Foundation, Inc.\n \n    Written by Ron Guilmette (rfg@netcom.com) and Fred Fish (fnf@cygnus.com).\n \n@@ -33,7 +33,7 @@ Boston, MA 02111-1307, USA.  */\n #endif\n \n #ifndef SWBEG_ASM_OP\n-#define SWBEG_ASM_OP \".swbeg\"\n+#define SWBEG_ASM_OP \"\\t.swbeg\\t\"\n #endif\n \n /* Here are four prefixes that are used by asm_fprintf to\n@@ -134,7 +134,7 @@ Boston, MA 02111-1307, USA.  */\n    than \".bss\", so override the definition in svr4.h */\n \n #undef BSS_ASM_OP\n-#define BSS_ASM_OP\t\".lcomm\"\n+#define BSS_ASM_OP\t\"\\t.lcomm\\t\"\n \n /* Register in which address to store a structure value is passed to a\n    function.  The default in m68k.h is a1.  For m68k/SVR4 it is a0. */\n@@ -284,7 +284,7 @@ extern int switch_table_difference_label_flag;\n    `-fno-common' is passed, otherwise `ASM_OUTPUT_COMMON' will be\n    used.  */\n #ifndef BSS_SECTION_ASM_OP\n-#define BSS_SECTION_ASM_OP\t\".section\\t.bss\"\n+#define BSS_SECTION_ASM_OP\t\"\\t.section\\t.bss\"\n #endif\n \n /* Like `ASM_OUTPUT_BSS' except takes the required alignment as a"}, {"sha": "5d0c055e6bbc939df942aa4d7849b1767ababfd3", "filename": "gcc/config/m68k/m68kv4.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kv4.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for mc680x0 running System V.4\n-   Copyright (C) 1991, 93, 94, 95, 96, 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 93, 94, 95, 96, 1998, 1999, 2000 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com) and\n    Fred Fish (fnf@cygnus.com).\n \n@@ -106,7 +106,7 @@ while (0)\n /* ??? svr4.h no longer defines this, and this is only used by m68k/amix.h.  */\n \n #undef BSS_ASM_OP\n-#define BSS_ASM_OP\t\".lcomm\"\n+#define BSS_ASM_OP\t\"\\t.lcomm\\t\"\n \n /* Register in which address to store a structure value is passed to a\n    function.  The default in m68k.h is a1.  For m68k/SVR4 it is a0. */"}, {"sha": "f19835941da282e8aab5aa096d9c939e4a587ccc", "filename": "gcc/config/m68k/mot3300.h", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -177,22 +177,22 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_APP_OFF \"\"\n \n #undef TEXT_SECTION_ASM_OP\n-#define TEXT_SECTION_ASM_OP \"text\"\n+#define TEXT_SECTION_ASM_OP \"\\ttext\"\n #undef DATA_SECTION_ASM_OP\n-#define DATA_SECTION_ASM_OP \"data\"\n+#define DATA_SECTION_ASM_OP \"\\tdata\"\n #undef ASCII_DATA_ASM_OP\n-#define\tASCII_DATA_ASM_OP \"byte\"\n+#define\tASCII_DATA_ASM_OP \"\\tbyte\\t\"\n \n #undef SET_ASM_OP\n-#define SET_ASM_OP \"set\"\n+#define SET_ASM_OP \"\\tset\\t\"\n \n #endif /* USE_GAS */\n \n #ifdef USE_GLD\n /* Support the ctors and dtors sections for g++.  */\n \n-#define CTORS_SECTION_ASM_OP\t\".section\\t.ctors,\\\"x\\\"\"\n-#define DTORS_SECTION_ASM_OP\t\".section\\t.dtors,\\\"x\\\"\"\n+#define CTORS_SECTION_ASM_OP\t\"\\t.section\\t.ctors,\\\"x\\\"\"\n+#define DTORS_SECTION_ASM_OP\t\"\\t.section\\t.dtors,\\\"x\\\"\"\n \n /* A list of other sections which the compiler might be \"in\" at any\n    given time.  */\n@@ -334,7 +334,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n    defined for reference from other files.  */\n \n #undef GLOBAL_ASM_OP\n-#define GLOBAL_ASM_OP \"global\"\n+#define GLOBAL_ASM_OP \"\\tglobal\\t\"\n #endif /* USE_GAS */\n \n /* Store in OUTPUT a string (made with alloca) containing\n@@ -356,7 +356,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #undef ASM_BYTE\n #define ASM_BYTE\t\".byte\"\n #undef ASM_BYTE_OP\n-#define ASM_BYTE_OP\t\".byte\"\n+#define ASM_BYTE_OP\t\"\\t.byte\\t\"\n #else\n #undef ASM_LONG\n #define ASM_LONG\t\"long\"\n@@ -367,7 +367,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #undef ASM_BYTE\n #define ASM_BYTE\t\"byte\"\n #undef ASM_BYTE_OP\n-#define ASM_BYTE_OP\t\"byte\"\n+#define ASM_BYTE_OP\t\"\\tbyte\\t\"\n #endif /* USE_GAS */\n \n /* The sysV68 as doesn't know about double's and float's.  */\n@@ -429,9 +429,9 @@ do { long l;\t\t\t\t\t\\\n    to a multiple of 2**LOG bytes.  */\n \n #ifndef USE_GAS\n-#define ALIGN_ASM_OP\t\"even\"\n+#define ALIGN_ASM_OP\t\"\\teven\"\n #else /* USE_GAS */\n-#define ALIGN_ASM_OP\t\".even\"\n+#define ALIGN_ASM_OP\t\"\\t.even\"\n #endif /* USE_GAS */\n \n #undef ASM_OUTPUT_ALIGN\n@@ -440,9 +440,9 @@ do { long l;\t\t\t\t\t\\\n     fprintf (FILE, \"\\t%s\\n\", ALIGN_ASM_OP);\n \n #ifndef USE_GAS\n-#define SKIP_ASM_OP\t\"space\"\n+#define SKIP_ASM_OP\t\"\\tspace\\t\"\n #else /* USE_GAS */\n-#define SKIP_ASM_OP\t\".skip\"\n+#define SKIP_ASM_OP\t\"\\t.skip\\t\"\n #endif /* USE_GAS */\n \n #undef ASM_OUTPUT_SKIP"}, {"sha": "56db6dedd9d4d786299e2b93ba8100c6a6bdb0f7", "filename": "gcc/config/m68k/newsgas.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fnewsgas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fnewsgas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnewsgas.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -7,7 +7,7 @@\n /* This is the assembler directive to equate two values.  */\n \n #undef SET_ASM_OP\n-#define SET_ASM_OP    \".set\"\n+#define SET_ASM_OP    \"\\t.set\\t\"\n \n /* This is how we tell the assembler that a symbol is weak.  */\n "}, {"sha": "c7561cb28237cc443fdb8a3103d966c368c66a15", "filename": "gcc/config/m68k/rtemself.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Frtemself.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -54,12 +54,12 @@ Boston, MA 02111-1307, USA.  */\n  *  information at startup.\n  */\n #undef INIT_SECTION_ASM_OP\n-#define INIT_SECTION_ASM_OP    \".section\\t.init\"\n+#define INIT_SECTION_ASM_OP    \"\\t.section\\t.init\"\n #undef FINI_SECTION_ASM_OP\n-#define FINI_SECTION_ASM_OP    \".section\\t.fini\"\n+#define FINI_SECTION_ASM_OP    \"\\t.section\\t.fini\"\n \n #undef EH_FRAME_SECTION_ASM_OP\n-#define EH_FRAME_SECTION_ASM_OP        \".section\\t.eh_frame\"\n+#define EH_FRAME_SECTION_ASM_OP        \"\\t.section\\t.eh_frame\"\n \n /* Do I need this? */\n #undef INVOKE__main"}, {"sha": "fa00d8ea3ee688c73632a627f55f315e04ac5f52", "filename": "gcc/config/m68k/sgs.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fsgs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Fsgs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsgs.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler for m68k targets using\n    assemblers derived from AT&T \"SGS\" releases.\n-   Copyright (C) 1991, 1993, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993, 1996, 2000 Free Software Foundation, Inc.\n    Written by Fred Fish (fnf@cygnus.com)\n \n This file is part of GNU CC.\n@@ -32,18 +32,18 @@ Boston, MA 02111-1307, USA.  */\n \n /* SGS specific assembler pseudo ops. */\n \n-#define\tBYTE_ASM_OP\t\t\".byte\"\n-#define WORD_ASM_OP\t\t\".short\"\n-#define LONG_ASM_OP\t\t\".long\"\n-#define SPACE_ASM_OP\t\t\".space\"\n-#define ALIGN_ASM_OP\t\t\".align\"\n+#define\tBYTE_ASM_OP\t\t\"\\t.byte \"\n+#define WORD_ASM_OP\t\t\"\\t.short \"\n+#define LONG_ASM_OP\t\t\"\\t.long \"\n+#define SPACE_ASM_OP\t\t\"\\t.space \"\n+#define ALIGN_ASM_OP\t\t\"\\t.align \"\n #undef GLOBAL_ASM_OP\n-#define GLOBAL_ASM_OP\t\t\".global\"\n-#define SWBEG_ASM_OP\t\t\".swbeg\"\n-#define SET_ASM_OP\t\t\".set\"\n+#define GLOBAL_ASM_OP\t\t\"\\t.global \"\n+#define SWBEG_ASM_OP\t\t\"\\t.swbeg \"\n+#define SET_ASM_OP\t\t\"\\t.set \"\n \n-#define UNALIGNED_SHORT_ASM_OP\t\".short\"\t/* Used in dwarfout.c */\n-#define UNALIGNED_INT_ASM_OP\t\".long\"\t\t/* Used in dwarfout.c */\n+#define UNALIGNED_SHORT_ASM_OP\t\"\\t.short \"\t/* Used in dwarfout.c */\n+#define UNALIGNED_INT_ASM_OP\t\"\\t.long \"\t\t/* Used in dwarfout.c */\n \n #define ASM_PN_FORMAT\t\t\"%s_%d\"\t\t/* Format for private names */\n "}, {"sha": "ce31c369baa130a8ff2370acb8cc84981bac790f", "filename": "gcc/config/m68k/tower-as.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ftower-as.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    For NCR Tower 32/4x0 and 32/6x0 running System V Release 3.\n-   Copyright (C) 1990, 1993, 1994, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1990, 1993, 1994, 1996, 1997, 2000 Free Software Foundation, Inc.\n    Contributed by Robert Andersson (ra@intsys.no), International Systems,\n    Oslo, Norway.\n \n@@ -209,10 +209,10 @@ Boston, MA 02111-1307, USA.  */\n   output_file_directive ((FILE), main_input_filename))\n \n #undef TEXT_SECTION_ASM_OP\n-#define TEXT_SECTION_ASM_OP \"text\"\n+#define TEXT_SECTION_ASM_OP \"\\ttext\"\n \n #undef DATA_SECTION_ASM_OP\n-#define DATA_SECTION_ASM_OP \"data\"\n+#define DATA_SECTION_ASM_OP \"\\tdata\"\n \n /* This says how to output an assembler line to define a global common symbol.\n    We use SIZE rather than ROUNDED, as this is what the native cc does.  */\n@@ -245,7 +245,7 @@ Boston, MA 02111-1307, USA.  */\n    defined for reference from other files.  */\n \n #undef GLOBAL_ASM_OP\n-#define GLOBAL_ASM_OP \"global\"\n+#define GLOBAL_ASM_OP \"\\tglobal\\t\"\n \n #undef ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\\\n@@ -593,18 +593,18 @@ do { fprintf (asm_out_file, \"\\ttag\\t\");\t\\\n \n #define ASM_LONG\t\"\\tlong\"\n #undef INIT_SECTION_ASM_OP\n-#define INIT_SECTION_ASM_OP\t\"section\\t~init\"\n+#define INIT_SECTION_ASM_OP\t\"\\tsection\\t~init\"\n #undef FINI_SECTION_ASM_OP\n-#define FINI_SECTION_ASM_OP\t\"section\\t~fini\"\n+#define FINI_SECTION_ASM_OP\t\"\\tsection\\t~fini\"\n #undef CONST_SECTION_ASM_OP\n-#define CONST_SECTION_ASM_OP\t\"section\\t~rodata\"\n+#define CONST_SECTION_ASM_OP\t\"\\tsection\\t~rodata\"\n \n #define CTOR_LIST_BEGIN\t\t\t\t\\\n   asm (INIT_SECTION_ASM_OP);\t\t\t\\\n   asm (\"clr.l -(%sp)\")\n #define CTOR_LIST_END CTOR_LIST_BEGIN\n \n-#define BSS_SECTION_ASM_OP\t\"section\\t~bss\"\n+#define BSS_SECTION_ASM_OP\t\"\\tsection\\t~bss\"\n \n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\\\n   do {\t\t\t\t\t\t\\"}, {"sha": "8c8f0b554d13f49f041d5f045d3e3c5cf3a461b8", "filename": "gcc/config/m88k/dgux.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm88k%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm88k%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdgux.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola m88100 running DG/UX.\n-   Copyright (C) 1988, 92, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 93, 94, 95, 96, 1997, 2000 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n    Currently maintained by (gcc@dg-rtp.dg.com)\n \n@@ -214,30 +214,30 @@ Boston, MA 02111-1307, USA.  */\n #if defined (CRT_BEGIN) || defined (CRT_END) || defined (L__main)\n /* routines to invoke global constructors and destructors are always COFF \n    to enable linking mixed COFF and ELF objects */\n-#define FINI_SECTION_ASM_OP (\"section  .fini,\\\"x\\\"\")\n+#define FINI_SECTION_ASM_OP (\"\\tsection  .fini,\\\"x\\\"\")\n #ifndef BCS\n #define INIT_SECTION_PREAMBLE asm (\"\\taddu\\tr31,r31,0x20\")\n #endif\n #undef\tINIT_SECTION_ASM_OP\n-#define INIT_SECTION_ASM_OP (\"section\\t .init,\\\"x\\\"\")\n+#define INIT_SECTION_ASM_OP (\"\\tsection\\t .init,\\\"x\\\"\")\n #undef\tCTORS_SECTION_ASM_OP\n-#define CTORS_SECTION_ASM_OP (\"section\\t .ctors,\\\"d\\\"\")\n+#define CTORS_SECTION_ASM_OP (\"\\tsection\\t .ctors,\\\"d\\\"\")\n #undef\tDTORS_SECTION_ASM_OP\n-#define DTORS_SECTION_ASM_OP (\"section\\t .dtors,\\\"d\\\"\")\n+#define DTORS_SECTION_ASM_OP (\"\\tsection\\t .dtors,\\\"d\\\"\")\n #undef OBJECT_FORMAT_ELF\n #else\n #undef        INIT_SECTION_ASM_OP\n #define INIT_SECTION_ASM_OP (TARGET_SVR4                      \\\n-                           ? \"section\\t .init,\\\"xa\\\"\"         \\\n-                           : \"section\\t .init,\\\"x\\\"\")\n+                           ? \"\\tsection\\t .init,\\\"xa\\\"\"         \\\n+                           : \"\\tsection\\t .init,\\\"x\\\"\")\n #undef        CTORS_SECTION_ASM_OP\n #define CTORS_SECTION_ASM_OP (TARGET_SVR4                     \\\n-                            ? \"section\\t .ctors,\\\"aw\\\"\"       \\\n-                            : \"section\\t .ctors,\\\"d\\\"\")\n+                            ? \"\\tsection\\t .ctors,\\\"aw\\\"\"       \\\n+                            : \"\\tsection\\t .ctors,\\\"d\\\"\")\n #undef        DTORS_SECTION_ASM_OP\n #define DTORS_SECTION_ASM_OP (TARGET_SVR4                     \\\n-                            ? \"section\\t .dtors,\\\"aw\\\"\"       \\\n-                            : \"section\\t .dtors,\\\"d\\\"\")\n+                            ? \"\\tsection\\t .dtors,\\\"aw\\\"\"       \\\n+                            : \"\\tsection\\t .dtors,\\\"d\\\"\")\n #endif /* crtstuff.c */\n \n /* The lists of global object constructors and global destructors are always"}, {"sha": "46d83167b0ee7b07057459cc62087ba1cf1cb5d7", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1697,49 +1697,49 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n #undef\tIDENT_ASM_OP\n \n /* These are used in varasm.c as well.  */\n-#define TEXT_SECTION_ASM_OP\t\"text\"\n-#define DATA_SECTION_ASM_OP\t\"data\"\n+#define TEXT_SECTION_ASM_OP\t\"\\ttext\"\n+#define DATA_SECTION_ASM_OP\t\"\\tdata\"\n \n /* Other sections.  */\n #define CONST_SECTION_ASM_OP (TARGET_SVR4\t\t\t\\\n-\t\t\t      ? \"section\\t .rodata,\\\"a\\\"\"\t\\\n-\t\t\t      : \"section\\t .rodata,\\\"x\\\"\")\n+\t\t\t      ? \"\\tsection\\t .rodata,\\\"a\\\"\"\t\\\n+\t\t\t      : \"\\tsection\\t .rodata,\\\"x\\\"\")\n #define TDESC_SECTION_ASM_OP (TARGET_SVR4\t\t\t\\\n-\t\t\t      ? \"section\\t .tdesc,\\\"a\\\"\"\t\\\n-\t\t\t      : \"section\\t .tdesc,\\\"x\\\"\")\n+\t\t\t      ? \"\\tsection\\t .tdesc,\\\"a\\\"\"\t\\\n+\t\t\t      : \"\\tsection\\t .tdesc,\\\"x\\\"\")\n \n /* These must be constant strings for crtstuff.c.  */\n-#define CTORS_SECTION_ASM_OP\t\"section\\t .ctors,\\\"d\\\"\"\n-#define DTORS_SECTION_ASM_OP\t\"section\\t .dtors,\\\"d\\\"\"\n-#define INIT_SECTION_ASM_OP\t\"section\\t .init,\\\"x\\\"\"\n-#define FINI_SECTION_ASM_OP\t\"section\\t .fini,\\\"x\\\"\"\n+#define CTORS_SECTION_ASM_OP\t\"\\tsection\\t .ctors,\\\"d\\\"\"\n+#define DTORS_SECTION_ASM_OP\t\"\\tsection\\t .dtors,\\\"d\\\"\"\n+#define INIT_SECTION_ASM_OP\t\"\\tsection\\t .init,\\\"x\\\"\"\n+#define FINI_SECTION_ASM_OP\t\"\\tsection\\t .fini,\\\"x\\\"\"\n \n /* These are pretty much common to all assemblers.  */\n-#define IDENT_ASM_OP\t\t\"ident\"\n-#define FILE_ASM_OP\t\t\"file\"\n-#define SECTION_ASM_OP\t\t\"section\"\n-#define SET_ASM_OP\t\t\"def\"\n-#define GLOBAL_ASM_OP\t\t\"global\"\n-#define ALIGN_ASM_OP\t\t\"align\"\n-#define SKIP_ASM_OP\t\t\"zero\"\n-#define COMMON_ASM_OP\t\t\"comm\"\n-#define BSS_ASM_OP\t\t\"bss\"\n-#define FLOAT_ASM_OP\t\t\"float\"\n-#define DOUBLE_ASM_OP\t\t\"double\"\n-#define INT_ASM_OP\t\t\"word\"\n+#define IDENT_ASM_OP\t\t\"\\tident\\t\"\n+#define FILE_ASM_OP\t\t\"\\tfile\\t\"\n+#define SECTION_ASM_OP\t\t\"\\tsection\\t\"\n+#define SET_ASM_OP\t\t\"\\tdef\\t\"\n+#define GLOBAL_ASM_OP\t\t\"\\tglobal\\\"\n+#define ALIGN_ASM_OP\t\t\"\\talign\\t\"\n+#define SKIP_ASM_OP\t\t\"\\tzero\\t\"\n+#define COMMON_ASM_OP\t\t\"\\tcomm\\t\"\n+#define BSS_ASM_OP\t\t\"\\tbss\\t\"\n+#define FLOAT_ASM_OP\t\t\"\\tfloat\\t\"\n+#define DOUBLE_ASM_OP\t\t\"\\tdouble\\t\"\n+#define INT_ASM_OP\t\t\"\\tword\\t\"\n #define ASM_LONG\t\tINT_ASM_OP\n-#define SHORT_ASM_OP\t\t\"half\"\n-#define CHAR_ASM_OP\t\t\"byte\"\n-#define ASCII_DATA_ASM_OP\t\"string\"\n+#define SHORT_ASM_OP\t\t\"\\thalf\\t\"\n+#define CHAR_ASM_OP\t\t\"\\tbyte\\t\"\n+#define ASCII_DATA_ASM_OP\t\"\\tstring\\t\"\n \n /* These are particular to the global pool optimization.  */\n-#define SBSS_ASM_OP\t\t\"sbss\"\n-#define SCOMM_ASM_OP\t\t\"scomm\"\n-#define SDATA_SECTION_ASM_OP\t\"sdata\"\n+#define SBSS_ASM_OP\t\t\"\\tsbss\\t\"\n+#define SCOMM_ASM_OP\t\t\"\\tscomm\\t\"\n+#define SDATA_SECTION_ASM_OP\t\"\\tsdata\"\n \n /* These are specific to PIC.  */\n-#define TYPE_ASM_OP\t\t\"type\"\n-#define SIZE_ASM_OP\t\t\"size\"\n+#define TYPE_ASM_OP\t\t\"\\ttype\\t\"\n+#define SIZE_ASM_OP\t\t\"\\tsize\\t\"\n #ifndef AS_BUG_POUND_TYPE /* Faulty assemblers require @ rather than #.  */\n #undef\tTYPE_OPERAND_FMT\n #define TYPE_OPERAND_FMT\t\"#%s\"\n@@ -1753,15 +1753,15 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n        fputc ('\\n', FILE); } while (0)\n \n /* These are specific to version 03.00 assembler syntax.  */\n-#define INTERNAL_ASM_OP\t\t\"local\"\n-#define VERSION_ASM_OP\t\t\"version\"\n-#define UNALIGNED_SHORT_ASM_OP\t\"uahalf\"\n-#define UNALIGNED_INT_ASM_OP\t\"uaword\"\n-#define PUSHSECTION_ASM_OP\t\"section\"\n-#define POPSECTION_ASM_OP\t\"previous\"\n+#define INTERNAL_ASM_OP\t\t\"\\tlocal\\\"\n+#define VERSION_ASM_OP\t\t\"\\tversion\\t\"\n+#define UNALIGNED_SHORT_ASM_OP\t\"\\tuahalf\\t\"\n+#define UNALIGNED_INT_ASM_OP\t\"\\tuaword\\t\"\n+#define PUSHSECTION_ASM_OP\t\"\\tsection\\t\"\n+#define POPSECTION_ASM_OP\t\"\\tprevious\"\n \n /* These are specific to the version 04.00 assembler syntax.  */\n-#define REQUIRES_88110_ASM_OP\t\"requires_88110\"\n+#define REQUIRES_88110_ASM_OP\t\"\\trequires_88110\"\n \n /* Output any initial stuff to the assembly file.  Always put out\n    a file directive, even if not debugging.\n@@ -2112,7 +2112,7 @@ do {\t\t\t\t\t\t\t\t\t \\\n \n /* The single-byte pseudo-op is the default.  Override svr[34].h.  */\n #undef\tASM_BYTE_OP\n-#define ASM_BYTE_OP \"byte\"\n+#define ASM_BYTE_OP \"\\tbyte\\t\"\n #undef\tASM_OUTPUT_ASCII\n #define ASM_OUTPUT_ASCII(FILE, P, SIZE)  \\\n   output_ascii (FILE, ASCII_DATA_ASM_OP, 48, P, SIZE)"}, {"sha": "1f3479912c42f3cafe3f9acf9afeed10d7ac93e6", "filename": "gcc/config/m88k/openbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm88k%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm88k%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fopenbsd.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -67,5 +67,5 @@ Boston, MA 02111-1307, USA.  */\n #define DEFAULT_PCC_STRUCT_RETURN 0\n \n #undef SET_ASM_OP\n-#define SET_ASM_OP\t\".def\"   \n+#define SET_ASM_OP\t\"\\t.def\\t\"\n "}, {"sha": "f354e187f75d6bd9c348f2c8f81f5c110ae38fe7", "filename": "gcc/config/m88k/sysv4.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm88k%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8/gcc%2Fconfig%2Fm88k%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fsysv4.h?ref=6e7b07a750eeb38e6b6a8bc42a4a9a5b3792f0b8", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola 88100 in an 88open ABI environment.\n-   Copyright (C) 1990, 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1990, 1991, 2000 Free Software Foundation, Inc.\n \n    Written by Ron Guilmette (rfg@netcom.com).\n    Contributed to FSF by Network Computing Devices.\n@@ -60,9 +60,9 @@ Boston, MA 02111-1307, USA.  */\n \n /* Override svr4.h and m88k.h.  */\n #undef\tINIT_SECTION_ASM_OP\n-#define INIT_SECTION_ASM_OP \"section\\t.init,\\\"xa\\\",#progbits\"\n+#define INIT_SECTION_ASM_OP \"\\tsection\\t.init,\\\"xa\\\",#progbits\"\n #undef\tFINI_SECTION_ASM_OP\n-#define FINI_SECTION_ASM_OP \"section\\t.fini,\\\"xa\\\",#progbits\"\n+#define FINI_SECTION_ASM_OP \"\\tsection\\t.fini,\\\"xa\\\",#progbits\"\n \n /* Define the pseudo-ops used to switch to the .ctors and .dtors sections.\n  \n@@ -80,6 +80,6 @@ Boston, MA 02111-1307, USA.  */\n    via the SHF_WRITE attribute.)  */\n  \n #undef\tCTORS_SECTION_ASM_OP\n-#define CTORS_SECTION_ASM_OP\t\"section\\t.ctors,\\\"aw\\\"\"\n+#define CTORS_SECTION_ASM_OP\t\"\\tsection\\t.ctors,\\\"aw\\\"\"\n #undef\tDTORS_SECTION_ASM_OP\n-#define DTORS_SECTION_ASM_OP\t\"section\\t.dtors,\\\"aw\\\"\"\n+#define DTORS_SECTION_ASM_OP\t\"\\tsection\\t.dtors,\\\"aw\\\"\""}]}