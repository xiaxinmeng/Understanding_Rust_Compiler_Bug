{"sha": "f18578157dadbe06c19ac23c5bcb3dff242f4bec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE4NTc4MTU3ZGFkYmUwNmMxOWFjMjNjNWJjYjNkZmYyNDJmNGJlYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-11-18T17:15:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-11-18T17:15:07Z"}, "message": "elf.c (SHN_UNDEF): Define.\n\n\t* elf.c (SHN_UNDEF): Define.\n\t(elf_initialize_syminfo): Add base_address argument.  Ignore symbols\n\twith st_shndx == SHN_UNDEF.  Add base_address to address fields.\n\t(elf_add): Adjust caller.\n\nFrom-SVN: r204975", "tree": {"sha": "1f27ce16eebea2f380be6c423498e1f3d32d8c58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f27ce16eebea2f380be6c423498e1f3d32d8c58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f18578157dadbe06c19ac23c5bcb3dff242f4bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18578157dadbe06c19ac23c5bcb3dff242f4bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18578157dadbe06c19ac23c5bcb3dff242f4bec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18578157dadbe06c19ac23c5bcb3dff242f4bec/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "582f5a2df8331e51cbe2e34437c8bd0d6adf756f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/582f5a2df8331e51cbe2e34437c8bd0d6adf756f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/582f5a2df8331e51cbe2e34437c8bd0d6adf756f"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "c06194df3e48369673d79312b5ffaeca8f57f0da", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18578157dadbe06c19ac23c5bcb3dff242f4bec/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18578157dadbe06c19ac23c5bcb3dff242f4bec/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=f18578157dadbe06c19ac23c5bcb3dff242f4bec", "patch": "@@ -1,5 +1,10 @@\n 2013-11-18  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* elf.c (SHN_UNDEF): Define.\n+\t(elf_initialize_syminfo): Add base_address argument.  Ignore symbols\n+\twith st_shndx == SHN_UNDEF.  Add base_address to address fields.\n+\t(elf_add): Adjust caller.\n+\n \t* elf.c (phdr_callback): Process info->dlpi_addr == 0 normally.\n \n 2013-11-16  Ian Lance Taylor  <iant@google.com>"}, {"sha": "659b349f73b7cc7acac6a60c6466f15881c91ffe", "filename": "libbacktrace/elf.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18578157dadbe06c19ac23c5bcb3dff242f4bec/libbacktrace%2Felf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18578157dadbe06c19ac23c5bcb3dff242f4bec/libbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Felf.c?ref=f18578157dadbe06c19ac23c5bcb3dff242f4bec", "patch": "@@ -98,6 +98,7 @@ dl_iterate_phdr (int (*callback) (struct dl_phdr_info *,\n #undef EV_CURRENT\n #undef SHN_LORESERVE\n #undef SHN_XINDEX\n+#undef SHN_UNDEF\n #undef SHT_SYMTAB\n #undef SHT_STRTAB\n #undef SHT_DYNSYM\n@@ -183,6 +184,7 @@ typedef struct {\n   b_elf_wxword\tsh_entsize;\t\t/* Entry size if section holds table */\n } b_elf_shdr;  /* Elf_Shdr.  */\n \n+#define SHN_UNDEF\t0x0000\t\t/* Undefined section */\n #define SHN_LORESERVE\t0xFF00\t\t/* Begin range of reserved indices */\n #define SHN_XINDEX\t0xFFFF\t\t/* Section index is held elsewhere */\n \n@@ -342,6 +344,7 @@ elf_symbol_search (const void *vkey, const void *ventry)\n \n static int\n elf_initialize_syminfo (struct backtrace_state *state,\n+\t\t\tuintptr_t base_address,\n \t\t\tconst unsigned char *symtab_data, size_t symtab_size,\n \t\t\tconst unsigned char *strtab, size_t strtab_size,\n \t\t\tbacktrace_error_callback error_callback,\n@@ -365,7 +368,8 @@ elf_initialize_syminfo (struct backtrace_state *state,\n       int info;\n \n       info = sym->st_info & 0xf;\n-      if (info == STT_FUNC || info == STT_OBJECT)\n+      if ((info == STT_FUNC || info == STT_OBJECT)\n+\t  && sym->st_shndx != SHN_UNDEF)\n \t++elf_symbol_count;\n     }\n \n@@ -385,6 +389,8 @@ elf_initialize_syminfo (struct backtrace_state *state,\n       info = sym->st_info & 0xf;\n       if (info != STT_FUNC && info != STT_OBJECT)\n \tcontinue;\n+      if (sym->st_shndx == SHN_UNDEF)\n+\tcontinue;\n       if (sym->st_name >= strtab_size)\n \t{\n \t  error_callback (data, \"symbol string index out of range\", 0);\n@@ -393,7 +399,7 @@ elf_initialize_syminfo (struct backtrace_state *state,\n \t  return 0;\n \t}\n       elf_symbols[j].name = (const char *) strtab + sym->st_name;\n-      elf_symbols[j].address = sym->st_value;\n+      elf_symbols[j].address = sym->st_value + base_address;\n       elf_symbols[j].size = sym->st_size;\n       ++j;\n     }\n@@ -733,7 +739,7 @@ elf_add (struct backtrace_state *state, int descriptor, uintptr_t base_address,\n       if (sdata == NULL)\n \tgoto fail;\n \n-      if (!elf_initialize_syminfo (state,\n+      if (!elf_initialize_syminfo (state, base_address,\n \t\t\t\t   symtab_view.data, symtab_shdr->sh_size,\n \t\t\t\t   strtab_view.data, strtab_shdr->sh_size,\n \t\t\t\t   error_callback, data, sdata))"}]}