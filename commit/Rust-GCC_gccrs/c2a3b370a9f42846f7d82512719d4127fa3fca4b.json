{"sha": "c2a3b370a9f42846f7d82512719d4127fa3fca4b", "node_id": "C_kwDOANBUbNoAKGMyYTNiMzcwYTlmNDI4NDZmN2Q4MjUxMjcxOWQ0MTI3ZmEzZmNhNGI", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-28T16:34:31Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-02-28T22:37:17Z"}, "message": "ast: Add RestPattern AST node\n\nAdd the RestPattern AST node representing \"..\" code in some rust\ncontext. This commit also provides the different visitors for this node.\n\ngcc/rust/ChangeLog:\n\n\t* ast/rust-ast-dump.cc (Dump::visit): Add visitor.\n\t* ast/rust-ast-dump.h: Add visitor prototype.\n\t* ast/rust-ast-full-decls.h (class RestPattern): Add forward\n\tdeclaration for class RestPattern.\n\t* ast/rust-ast-visitor.h: Add visitor prototype.\n\t* ast/rust-ast.cc (RestPattern::accept_vis): Add function to\n\taccept a foreign visitor.\n\t* ast/rust-pattern.h (class RestPattern): Add class RestPattern.\n\t* checks/errors/rust-feature-gate.h: Add visitor prototype.\n\t* expand/rust-attribute-visitor.cc (AttrVisitor::visit): Add\n\tvisitor implementation.\n\t* expand/rust-attribute-visitor.h: Add visitor prototype.\n\t* hir/rust-ast-lower-base.cc (ASTLoweringBase::visit): Add\n\tvisitor implementation.\n\t* hir/rust-ast-lower-base.h: Add visitor prototype.\n\t* resolve/rust-ast-resolve-base.cc (ResolverBase::visit): Add\n\tvisitor implementation.\n\t* resolve/rust-ast-resolve-base.h: Add visitor prototype.\n\t* resolve/rust-early-name-resolver.cc (EarlyNameResolver::visit):\n\tAdd visitor implementation.\n\t* resolve/rust-early-name-resolver.h: Add visitor prototype.\n\t* util/rust-attributes.cc (AttributeChecker::visit): Add visitor\n\timplementation.\n\t* util/rust-attributes.h: Add visitor prototype.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "e4a71c66ac76dc47c704b63b7d7de8f5423eaaa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4a71c66ac76dc47c704b63b7d7de8f5423eaaa5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2a3b370a9f42846f7d82512719d4127fa3fca4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2a3b370a9f42846f7d82512719d4127fa3fca4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2a3b370a9f42846f7d82512719d4127fa3fca4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2a3b370a9f42846f7d82512719d4127fa3fca4b/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41890d20e27d9be91fe5b35d5c85fb6a4ddcd2dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41890d20e27d9be91fe5b35d5c85fb6a4ddcd2dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41890d20e27d9be91fe5b35d5c85fb6a4ddcd2dd"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "9315bc5292d43defe90dd89825184f347a1947b1", "filename": "gcc/rust/ast/rust-ast-dump.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.cc?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -1610,6 +1610,10 @@ void\n Dump::visit (WildcardPattern &)\n {}\n \n+void\n+Dump::visit (RestPattern &)\n+{}\n+\n // void Dump::visit(RangePatternBound& ){}\n \n void"}, {"sha": "b68619d286207776abc02e3fce134ad22b7546e7", "filename": "gcc/rust/ast/rust-ast-dump.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fast%2Frust-ast-dump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fast%2Frust-ast-dump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.h?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -273,6 +273,7 @@ class Dump : public ASTVisitor\n   void visit (LiteralPattern &pattern);\n   void visit (IdentifierPattern &pattern);\n   void visit (WildcardPattern &pattern);\n+  void visit (RestPattern &pattern);\n   // void visit(RangePatternBound& bound);\n   void visit (RangePatternBoundLiteral &bound);\n   void visit (RangePatternBoundPath &bound);"}, {"sha": "eafc82f482037aa3039e4b5d42d4541ccc93f3b0", "filename": "gcc/rust/ast/rust-ast-full-decls.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fast%2Frust-ast-full-decls.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fast%2Frust-ast-full-decls.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-full-decls.h?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -228,6 +228,7 @@ class MetaListNameValueStr;\n class LiteralPattern;\n class IdentifierPattern;\n class WildcardPattern;\n+class RestPattern;\n class RangePatternBound;\n class RangePatternBoundLiteral;\n class RangePatternBoundPath;"}, {"sha": "c0a5b995d7be94e58616b88cc9f7f97fa643955f", "filename": "gcc/rust/ast/rust-ast-visitor.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fast%2Frust-ast-visitor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fast%2Frust-ast-visitor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-visitor.h?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -183,6 +183,7 @@ class ASTVisitor\n   virtual void visit (LiteralPattern &pattern) = 0;\n   virtual void visit (IdentifierPattern &pattern) = 0;\n   virtual void visit (WildcardPattern &pattern) = 0;\n+  virtual void visit (RestPattern &pattern) = 0;\n   // virtual void visit(RangePatternBound& bound) = 0;\n   virtual void visit (RangePatternBoundLiteral &bound) = 0;\n   virtual void visit (RangePatternBoundPath &bound) = 0;"}, {"sha": "3d1b573968f0171f02f0b5b0d428bb6d78b95a03", "filename": "gcc/rust/ast/rust-ast.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fast%2Frust-ast.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fast%2Frust-ast.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast.cc?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -5574,6 +5574,12 @@ WildcardPattern::accept_vis (ASTVisitor &vis)\n   vis.visit (*this);\n }\n \n+void\n+RestPattern::accept_vis (ASTVisitor &vis)\n+{\n+  vis.visit (*this);\n+}\n+\n void\n RangePatternBoundLiteral::accept_vis (ASTVisitor &vis)\n {"}, {"sha": "ac0bd26f84a7994b939be73204cc7253a9d8075b", "filename": "gcc/rust/ast/rust-pattern.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fast%2Frust-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fast%2Frust-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-pattern.h?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -191,6 +191,20 @@ class WildcardPattern : public Pattern\n   }\n };\n \n+class RestPattern : public Pattern\n+{\n+  Location locus;\n+\n+public:\n+  std::string as_string () const override { return \"..\"; }\n+\n+  RestPattern (Location locus) : locus (locus) {}\n+\n+  Location get_locus () const override final { return locus; }\n+\n+  void accept_vis (ASTVisitor &vis) override;\n+};\n+\n // Base range pattern bound (lower or upper limit) - abstract\n class RangePatternBound\n {"}, {"sha": "0262903f12354b64bd2fdd86f8829a2d5d727f61", "filename": "gcc/rust/checks/errors/rust-feature-gate.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature-gate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature-gate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-feature-gate.h?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -151,6 +151,7 @@ class FeatureGate : public AST::ASTVisitor\n   void visit (AST::LiteralPattern &pattern) override {}\n   void visit (AST::IdentifierPattern &pattern) override {}\n   void visit (AST::WildcardPattern &pattern) override {}\n+  void visit (AST::RestPattern &pattern) override {}\n   void visit (AST::RangePatternBoundLiteral &bound) override {}\n   void visit (AST::RangePatternBoundPath &bound) override {}\n   void visit (AST::RangePatternBoundQualPath &bound) override {}"}, {"sha": "d416505eeafa634e80bbf3d95c0655f1026154f1", "filename": "gcc/rust/expand/rust-attribute-visitor.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fexpand%2Frust-attribute-visitor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fexpand%2Frust-attribute-visitor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-attribute-visitor.cc?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -2937,6 +2937,11 @@ AttrVisitor::visit (AST::WildcardPattern &)\n   // not possible\n }\n void\n+AttrVisitor::visit (AST::RestPattern &)\n+{\n+  // not possible\n+}\n+void\n AttrVisitor::visit (AST::RangePatternBoundLiteral &)\n {\n   // not possible"}, {"sha": "ceada6039a5f67ad54ab1edc6df96287e5946409", "filename": "gcc/rust/expand/rust-attribute-visitor.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fexpand%2Frust-attribute-visitor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fexpand%2Frust-attribute-visitor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-attribute-visitor.h?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -242,6 +242,7 @@ class AttrVisitor : public AST::ASTVisitor\n   void visit (AST::LiteralPattern &) override;\n   void visit (AST::IdentifierPattern &pattern) override;\n   void visit (AST::WildcardPattern &) override;\n+  void visit (AST::RestPattern &) override;\n   void visit (AST::RangePatternBoundLiteral &) override;\n   void visit (AST::RangePatternBoundPath &bound) override;\n   void visit (AST::RangePatternBoundQualPath &bound) override;"}, {"sha": "c21f511dc8d5d64eece70af860d2c118a30a537e", "filename": "gcc/rust/hir/rust-ast-lower-base.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fhir%2Frust-ast-lower-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fhir%2Frust-ast-lower-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-base.cc?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -409,6 +409,9 @@ ASTLoweringBase::visit (AST::IdentifierPattern &)\n void\n ASTLoweringBase::visit (AST::WildcardPattern &)\n {}\n+void\n+ASTLoweringBase::visit (AST::RestPattern &)\n+{}\n //  void ASTLoweringBase::visit(RangePatternBoundbound) {}\n void\n ASTLoweringBase::visit (AST::RangePatternBoundLiteral &)"}, {"sha": "d0171a54e2e2019d6aec17763b077a165f48c0cb", "filename": "gcc/rust/hir/rust-ast-lower-base.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fhir%2Frust-ast-lower-base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fhir%2Frust-ast-lower-base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-base.h?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -211,6 +211,7 @@ class ASTLoweringBase : public AST::ASTVisitor\n   virtual void visit (AST::LiteralPattern &pattern);\n   virtual void visit (AST::IdentifierPattern &pattern);\n   virtual void visit (AST::WildcardPattern &pattern);\n+  virtual void visit (AST::RestPattern &pattern);\n   //  virtual void visit(RangePatternBound& bound);\n   virtual void visit (AST::RangePatternBoundLiteral &bound);\n   virtual void visit (AST::RangePatternBoundPath &bound);"}, {"sha": "2667a246561077b058ed91f9eb4eb82374997048", "filename": "gcc/rust/resolve/rust-ast-resolve-base.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.cc?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -518,6 +518,10 @@ void\n ResolverBase::visit (AST::WildcardPattern &)\n {}\n \n+void\n+ResolverBase::visit (AST::RestPattern &)\n+{}\n+\n void\n ResolverBase::visit (AST::RangePatternBoundLiteral &)\n {}"}, {"sha": "df70303a6eb9df89e925e3609a689668628ee7fd", "filename": "gcc/rust/resolve/rust-ast-resolve-base.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.h?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -158,6 +158,7 @@ class ResolverBase : public AST::ASTVisitor\n   void visit (AST::LiteralPattern &);\n   void visit (AST::IdentifierPattern &);\n   void visit (AST::WildcardPattern &);\n+  void visit (AST::RestPattern &);\n \n   void visit (AST::RangePatternBoundLiteral &);\n   void visit (AST::RangePatternBoundPath &);"}, {"sha": "10f7626dc7f4eff7d2e73c308944c973f66ed1d5", "filename": "gcc/rust/resolve/rust-early-name-resolver.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fresolve%2Frust-early-name-resolver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fresolve%2Frust-early-name-resolver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-early-name-resolver.cc?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -956,6 +956,10 @@ void\n EarlyNameResolver::visit (AST::WildcardPattern &)\n {}\n \n+void\n+EarlyNameResolver::visit (AST::RestPattern &)\n+{}\n+\n void\n EarlyNameResolver::visit (AST::RangePatternBoundLiteral &)\n {}"}, {"sha": "c94a77501a3568830e3f268816c41c0539015a7c", "filename": "gcc/rust/resolve/rust-early-name-resolver.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fresolve%2Frust-early-name-resolver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Fresolve%2Frust-early-name-resolver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-early-name-resolver.h?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -233,6 +233,7 @@ class EarlyNameResolver : public AST::ASTVisitor\n   virtual void visit (AST::LiteralPattern &pattern);\n   virtual void visit (AST::IdentifierPattern &pattern);\n   virtual void visit (AST::WildcardPattern &pattern);\n+  virtual void visit (AST::RestPattern &pattern);\n   virtual void visit (AST::RangePatternBoundLiteral &bound);\n   virtual void visit (AST::RangePatternBoundPath &bound);\n   virtual void visit (AST::RangePatternBoundQualPath &bound);"}, {"sha": "6df00ad95beea06734a25d06e2f6e04164a482b2", "filename": "gcc/rust/util/rust-attributes.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Futil%2Frust-attributes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Futil%2Frust-attributes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-attributes.cc?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -695,6 +695,10 @@ void\n AttributeChecker::visit (AST::WildcardPattern &)\n {}\n \n+void\n+AttributeChecker::visit (AST::RestPattern &)\n+{}\n+\n // void AttributeChecker::visit(RangePatternBound& ){}\n \n void"}, {"sha": "a9c8a33b690be43b6f2d43a3b13a053113a89ef1", "filename": "gcc/rust/util/rust-attributes.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Futil%2Frust-attributes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a3b370a9f42846f7d82512719d4127fa3fca4b/gcc%2Frust%2Futil%2Frust-attributes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-attributes.h?ref=c2a3b370a9f42846f7d82512719d4127fa3fca4b", "patch": "@@ -222,6 +222,7 @@ class AttributeChecker : public AST::ASTVisitor\n   void visit (AST::LiteralPattern &pattern);\n   void visit (AST::IdentifierPattern &pattern);\n   void visit (AST::WildcardPattern &pattern);\n+  void visit (AST::RestPattern &pattern);\n   // void visit(RangePatternBound& bound);\n   void visit (AST::RangePatternBoundLiteral &bound);\n   void visit (AST::RangePatternBoundPath &bound);"}]}