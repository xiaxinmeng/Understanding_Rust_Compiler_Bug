{"sha": "1f663989d2ec5a2c4b372a69819826cad6ed6266", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY2NjM5ODlkMmVjNWEyYzRiMzcyYTY5ODE5ODI2Y2FkNmVkNjI2Ng==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2003-11-19T20:01:10Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2003-11-19T20:01:10Z"}, "message": "reload1.c (reload): Revert 2 previous checkins.\n\n2003-11-19  Eric Christopher  <echristo@redhat.com>\n\n        * reload1.c (reload): Revert 2 previous checkins.\n\nFrom-SVN: r73742", "tree": {"sha": "9e02c1b0d67ed46ca347a1fd90cd2337d312672d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e02c1b0d67ed46ca347a1fd90cd2337d312672d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f663989d2ec5a2c4b372a69819826cad6ed6266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f663989d2ec5a2c4b372a69819826cad6ed6266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f663989d2ec5a2c4b372a69819826cad6ed6266", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f663989d2ec5a2c4b372a69819826cad6ed6266/comments", "author": null, "committer": null, "parents": [{"sha": "b0e667aafc5806a1a4f3308acbfe84f77b8f6e08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0e667aafc5806a1a4f3308acbfe84f77b8f6e08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0e667aafc5806a1a4f3308acbfe84f77b8f6e08"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "717489f3216c216612261e94abf991282f0123df", "filename": "gcc/reload1.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f663989d2ec5a2c4b372a69819826cad6ed6266/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f663989d2ec5a2c4b372a69819826cad6ed6266/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=1f663989d2ec5a2c4b372a69819826cad6ed6266", "patch": "@@ -910,24 +910,18 @@ reload (rtx first, int global)\n \tif (reg_renumber[i] < 0 && reg_equiv_memory_loc[i])\n \t  {\n \t    rtx x = eliminate_regs (reg_equiv_memory_loc[i], 0, NULL_RTX);\n-\t    enum reg_class class = MODE_BASE_REG_CLASS (GET_MODE (x));\n \n \t    if (strict_memory_address_p (GET_MODE (regno_reg_rtx[i]),\n \t\t\t\t\t XEXP (x, 0)))\n \t      reg_equiv_mem[i] = x, reg_equiv_address[i] = 0;\n-\t    else if ((CONSTANT_P (XEXP (x, 0))\n-\t\t      && LEGITIMATE_CONSTANT_P (XEXP (x, 0))\n-\t\t      && PREFERRED_RELOAD_CLASS (XEXP (x, 0), class) != NO_REGS)\n+\t    else if (CONSTANT_P (XEXP (x, 0))\n \t\t     || (GET_CODE (XEXP (x, 0)) == REG\n \t\t\t && REGNO (XEXP (x, 0)) < FIRST_PSEUDO_REGISTER)\n \t\t     || (GET_CODE (XEXP (x, 0)) == PLUS\n \t\t\t && GET_CODE (XEXP (XEXP (x, 0), 0)) == REG\n \t\t\t && (REGNO (XEXP (XEXP (x, 0), 0))\n \t\t\t     < FIRST_PSEUDO_REGISTER)\n-\t\t\t && (CONSTANT_P (XEXP (XEXP (x, 0), 1))\n-\t\t\t     && LEGITIMATE_CONSTANT_P (XEXP (XEXP (x, 0), 1))\n-\t\t\t     && PREFERRED_RELOAD_CLASS (XEXP (XEXP (x, 0), 1), class)\n-\t\t\t                                    != NO_REGS)))\n+\t\t\t && CONSTANT_P (XEXP (XEXP (x, 0), 1))))\n \t      reg_equiv_address[i] = XEXP (x, 0), reg_equiv_mem[i] = 0;\n \t    else\n \t      {"}]}