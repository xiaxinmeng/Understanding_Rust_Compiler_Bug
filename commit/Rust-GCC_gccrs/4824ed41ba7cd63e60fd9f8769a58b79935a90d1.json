{"sha": "4824ed41ba7cd63e60fd9f8769a58b79935a90d1", "node_id": "C_kwDOANBUbNoAKDQ4MjRlZDQxYmE3Y2Q2M2U2MGZkOWY4NzY5YTU4Yjc5OTM1YTkwZDE", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-08-30T21:31:46Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-10-20T12:35:52Z"}, "message": "libffi: Integrate testsuite with GCC testsuite\n\n\t* testsuite/lib/libffi.exp (load_gcc_lib): Load library from GCC\n\ttestsuite.\n\tLoad target-supports.exp and target-supports-dg.exp.\n\t(libffi-init): Use libraries in GCC build tree.\n\t(libffi_target_compile): Link with -shared-libgcc -lstdc++ for\n\tC++ sources.", "tree": {"sha": "8c0b5bce915ec0e32f1774a0790dbc1aba50952e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c0b5bce915ec0e32f1774a0790dbc1aba50952e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4824ed41ba7cd63e60fd9f8769a58b79935a90d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4824ed41ba7cd63e60fd9f8769a58b79935a90d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4824ed41ba7cd63e60fd9f8769a58b79935a90d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4824ed41ba7cd63e60fd9f8769a58b79935a90d1/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5be7b66998127286fada45e4f23bd8a2056d553e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5be7b66998127286fada45e4f23bd8a2056d553e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5be7b66998127286fada45e4f23bd8a2056d553e"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "7dc7b5d19a3c106e3e8e7973827f061f196307d5", "filename": "libffi/testsuite/lib/libffi.exp", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4824ed41ba7cd63e60fd9f8769a58b79935a90d1/libffi%2Ftestsuite%2Flib%2Flibffi.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4824ed41ba7cd63e60fd9f8769a58b79935a90d1/libffi%2Ftestsuite%2Flib%2Flibffi.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flib%2Flibffi.exp?ref=4824ed41ba7cd63e60fd9f8769a58b79935a90d1", "patch": "@@ -15,12 +15,15 @@\n # <http://www.gnu.org/licenses/>.\n \n proc load_gcc_lib { filename } {\n-    global srcdir\n-    load_file $srcdir/lib/$filename\n+    global srcdir loaded_libs\n+    load_file $srcdir/../../gcc/testsuite/lib/$filename\n+    set loaded_libs($filename) \"\"\n }\n \n load_lib dg.exp\n load_lib libgloss.exp\n+load_gcc_lib target-supports.exp\n+load_gcc_lib target-supports-dg.exp\n load_gcc_lib target-libpath.exp\n load_gcc_lib wrapper.exp\n \n@@ -277,6 +280,7 @@ proc libffi-init { args } {\n     global srcdir\n     global blddirffi\n     global objdir\n+    global blddircxx\n     global TOOL_OPTIONS\n     global tool\n     global libffi_include\n@@ -285,13 +289,13 @@ proc libffi-init { args } {\n     global ld_library_path\n     global compiler_vendor\n \n-    if ![info exists blddirffi] {\n-\tset blddirffi [pwd]/..\n-    }\n-\n+    set blddirffi [lookfor_file [get_multilibs] libffi]\n     verbose \"libffi $blddirffi\"\n+    set blddircxx [lookfor_file [get_multilibs] libstdc++-v3]\n+    verbose \"libstdc++ $blddircxx\"\n+\n+    set compiler_vendor \"gnu\"\n \n-    # Which compiler are we building with?\n     if { [string match $compiler_vendor \"gnu\"] } {\n         set gccdir [lookfor_file $tool_root_dir gcc/libgcc.a]\n         if {$gccdir != \"\"} {\n@@ -320,6 +324,8 @@ proc libffi-init { args } {\n \n     # add the library path for libffi.\n     append ld_library_path \":${blddirffi}/.libs\"\n+    # add the library path for libstdc++ as well.\n+    append ld_library_path \":${blddircxx}/src/.libs\"\n \n     verbose \"ld_library_path: $ld_library_path\"\n \n@@ -332,6 +338,7 @@ proc libffi-init { args } {\n     if { $libffi_dir != \"\" } {\n \tset libffi_dir [file dirname ${libffi_dir}]\n \tset libffi_link_flags \"-L${libffi_dir}/.libs\"\n+\tlappend libffi_link_flags \"-L${blddircxx}/src/.libs\"\n     }\n \n     set_ld_library_path_env_vars\n@@ -398,9 +405,8 @@ proc libffi_target_compile { source dest type options } {\n \tlappend options \"libs= -lpthread\"\n     }\n \n-    # this may be required for g++, but just confused clang.\n     if { [string match \"*.cc\" $source] } {\n-        lappend options \"c++\"\n+\tlappend options \"ldflags=-shared-libgcc -lstdc++\"\n     }\n \n     if { [string match \"arc*-*-linux*\" $target_triplet] } {"}]}