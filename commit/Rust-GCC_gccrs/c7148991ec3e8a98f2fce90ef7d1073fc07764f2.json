{"sha": "c7148991ec3e8a98f2fce90ef7d1073fc07764f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzcxNDg5OTFlYzNlOGE5OGYyZmNlOTBlZjdkMTA3M2ZjMDc3NjRmMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-03-07T22:11:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-03-07T22:11:55Z"}, "message": "re PR debug/47991 (Var-tracking ICE on s390x *setmem_long insn)\n\n\tPR debug/47991\n\t* var-tracking.c (find_use_val): Return NULL for\n\tcui->sets && cui->store_p BLKmode MEMs.\n\n\t* gcc.dg/pr47991.c: New test.\n\nFrom-SVN: r170759", "tree": {"sha": "42ab2b8833f8c3a1123d34aa1635fa2f941b1a81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42ab2b8833f8c3a1123d34aa1635fa2f941b1a81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7148991ec3e8a98f2fce90ef7d1073fc07764f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7148991ec3e8a98f2fce90ef7d1073fc07764f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7148991ec3e8a98f2fce90ef7d1073fc07764f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7148991ec3e8a98f2fce90ef7d1073fc07764f2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "691a924baf30c73fd91a19b6b9679ab9da6e29b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/691a924baf30c73fd91a19b6b9679ab9da6e29b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/691a924baf30c73fd91a19b6b9679ab9da6e29b3"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "8b1b64fc47e99bd0c506590d453b62b6a60f476c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7148991ec3e8a98f2fce90ef7d1073fc07764f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7148991ec3e8a98f2fce90ef7d1073fc07764f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7148991ec3e8a98f2fce90ef7d1073fc07764f2", "patch": "@@ -1,3 +1,9 @@\n+2011-03-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/47991\n+\t* var-tracking.c (find_use_val): Return NULL for\n+\tcui->sets && cui->store_p BLKmode MEMs.\n+\n 2011-03-07  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/stormy16/stormy16.h (PRINT_OPERAND, PRINT_OPERAND_ADDRESS):"}, {"sha": "f5783968966be2f21c97cfff00c93477bec6a3e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7148991ec3e8a98f2fce90ef7d1073fc07764f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7148991ec3e8a98f2fce90ef7d1073fc07764f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7148991ec3e8a98f2fce90ef7d1073fc07764f2", "patch": "@@ -1,3 +1,8 @@\n+2011-03-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/47991\n+\t* gcc.dg/pr47991.c: New test.\n+\n 2011-03-07  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/abi/mangle46.C: New."}, {"sha": "688be5c02d735346171116ddad64162228a84dcc", "filename": "gcc/testsuite/gcc.dg/pr47991.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7148991ec3e8a98f2fce90ef7d1073fc07764f2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47991.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7148991ec3e8a98f2fce90ef7d1073fc07764f2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47991.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47991.c?ref=c7148991ec3e8a98f2fce90ef7d1073fc07764f2", "patch": "@@ -0,0 +1,25 @@\n+/* PR debug/47991 */\n+/* { dg-do compile } */\n+/* { dg-options \"-g -Os\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+extern inline __attribute__ ((__always_inline__))\n+void *\n+memset (void *x, int y, size_t z)\n+{\n+  return __builtin___memset_chk (x, y, z, __builtin_object_size (x, 0));\n+}\n+\n+void\n+foo (unsigned char *x, unsigned char *y, unsigned char *z,\n+     unsigned char *w, unsigned int v, int u, int t)\n+{\n+  int i;\n+  for (i = 0; i < t; i++)\n+    {\n+      memset (z, x[0], v);\n+      memset (w, y[0], v);\n+      x += u;\n+    }\n+  __builtin_memcpy (z, x, u);\n+}"}, {"sha": "a9efcb14ecf1dfb1db20ab894adf949d695a8c5b", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7148991ec3e8a98f2fce90ef7d1073fc07764f2/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7148991ec3e8a98f2fce90ef7d1073fc07764f2/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=c7148991ec3e8a98f2fce90ef7d1073fc07764f2", "patch": "@@ -1,5 +1,5 @@\n /* Variable tracking routines for the GNU compiler.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n+   Copyright (C) 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n \n    This file is part of GCC.\n@@ -4784,12 +4784,19 @@ find_use_val (rtx x, enum machine_mode mode, struct count_use_info *cui)\n   if (cui->sets)\n     {\n       /* This is called after uses are set up and before stores are\n-\t processed bycselib, so it's safe to look up srcs, but not\n+\t processed by cselib, so it's safe to look up srcs, but not\n \t dsts.  So we look up expressions that appear in srcs or in\n \t dest expressions, but we search the sets array for dests of\n \t stores.  */\n       if (cui->store_p)\n \t{\n+\t  /* Some targets represent memset and memcpy patterns\n+\t     by (set (mem:BLK ...) (reg:[QHSD]I ...)) or\n+\t     (set (mem:BLK ...) (const_int ...)) or\n+\t     (set (mem:BLK ...) (mem:BLK ...)).  Don't return anything\n+\t     in that case, otherwise we end up with mode mismatches.  */\n+\t  if (mode == BLKmode && MEM_P (x))\n+\t    return NULL;\n \t  for (i = 0; i < cui->n_sets; i++)\n \t    if (cui->sets[i].dest == x)\n \t      return cui->sets[i].src_elt;"}]}