{"sha": "a9ae16db8cbb2c0ec8e8384ac38ce618f9af1e3a", "node_id": "C_kwDOANBUbNoAKGE5YWUxNmRiOGNiYjJjMGVjOGU4Mzg0YWMzOGNlNjE4ZjlhZjFlM2E", "commit": {"author": {"name": "Hu, Lin1", "email": "lin1.hu@intel.com", "date": "2023-03-13T07:50:11Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2023-03-15T03:24:14Z"}, "message": "i386:Add missing OPTION_MASK_ISA_AVX512VL in i386-builtin.def for VAES builtins\n\ngcc/ChangeLog:\n\n\tPR target/109117\n\t* config/i386/i386-builtin.def (__builtin_ia32_vaesdec_v16qi,\n\t__builtin_ia32_vaesdeclast_v16qi,__builtin_ia32_vaesenc_v16qi,\n\t__builtin_ia32_vaesenclast_v16qi): Require OPTION_MASK_ISA_AVX512VL.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/109117\n\t* gcc.target/i386/pr109117-1.c: New test.", "tree": {"sha": "cd4a81d0b2c8ac67b65d5601a99e7391d957f00e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd4a81d0b2c8ac67b65d5601a99e7391d957f00e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9ae16db8cbb2c0ec8e8384ac38ce618f9af1e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9ae16db8cbb2c0ec8e8384ac38ce618f9af1e3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9ae16db8cbb2c0ec8e8384ac38ce618f9af1e3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9ae16db8cbb2c0ec8e8384ac38ce618f9af1e3a/comments", "author": {"login": "Rejur", "id": 27907959, "node_id": "MDQ6VXNlcjI3OTA3OTU5", "avatar_url": "https://avatars.githubusercontent.com/u/27907959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejur", "html_url": "https://github.com/Rejur", "followers_url": "https://api.github.com/users/Rejur/followers", "following_url": "https://api.github.com/users/Rejur/following{/other_user}", "gists_url": "https://api.github.com/users/Rejur/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejur/subscriptions", "organizations_url": "https://api.github.com/users/Rejur/orgs", "repos_url": "https://api.github.com/users/Rejur/repos", "events_url": "https://api.github.com/users/Rejur/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "17dfe40fac7f674cf012a367ece27eaf0cb61ae6", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ae16db8cbb2c0ec8e8384ac38ce618f9af1e3a/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ae16db8cbb2c0ec8e8384ac38ce618f9af1e3a/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=a9ae16db8cbb2c0ec8e8384ac38ce618f9af1e3a", "patch": "@@ -2797,16 +2797,16 @@ BDESC (0, OPTION_MASK_ISA2_AVX5124VNNIW, CODE_FOR_avx5124vnniw_vp4dpwssds_mask,\n BDESC (0, OPTION_MASK_ISA2_RDPID, CODE_FOR_rdpid, \"__builtin_ia32_rdpid\", IX86_BUILTIN_RDPID, UNKNOWN, (int) UNSIGNED_FTYPE_VOID)\n \n /* VAES.  */\n-BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdec_v16qi, \"__builtin_ia32_vaesdec_v16qi\", IX86_BUILTIN_VAESDEC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdec_v16qi, \"__builtin_ia32_vaesdec_v16qi\", IX86_BUILTIN_VAESDEC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdec_v32qi, \"__builtin_ia32_vaesdec_v32qi\", IX86_BUILTIN_VAESDEC32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdec_v64qi, \"__builtin_ia32_vaesdec_v64qi\", IX86_BUILTIN_VAESDEC64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n-BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdeclast_v16qi, \"__builtin_ia32_vaesdeclast_v16qi\", IX86_BUILTIN_VAESDECLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdeclast_v16qi, \"__builtin_ia32_vaesdeclast_v16qi\", IX86_BUILTIN_VAESDECLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdeclast_v32qi, \"__builtin_ia32_vaesdeclast_v32qi\", IX86_BUILTIN_VAESDECLAST32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdeclast_v64qi, \"__builtin_ia32_vaesdeclast_v64qi\", IX86_BUILTIN_VAESDECLAST64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n-BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenc_v16qi, \"__builtin_ia32_vaesenc_v16qi\", IX86_BUILTIN_VAESENC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenc_v16qi, \"__builtin_ia32_vaesenc_v16qi\", IX86_BUILTIN_VAESENC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenc_v32qi, \"__builtin_ia32_vaesenc_v32qi\", IX86_BUILTIN_VAESENC32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenc_v64qi, \"__builtin_ia32_vaesenc_v64qi\", IX86_BUILTIN_VAESENC64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n-BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenclast_v16qi, \"__builtin_ia32_vaesenclast_v16qi\", IX86_BUILTIN_VAESENCLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenclast_v16qi, \"__builtin_ia32_vaesenclast_v16qi\", IX86_BUILTIN_VAESENCLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenclast_v32qi, \"__builtin_ia32_vaesenclast_v32qi\", IX86_BUILTIN_VAESENCLAST32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenclast_v64qi, \"__builtin_ia32_vaesenclast_v64qi\", IX86_BUILTIN_VAESENCLAST64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n "}, {"sha": "87a5c0e7fc93df499f56d6e9707b43f14d9a731f", "filename": "gcc/testsuite/gcc.target/i386/pr109117-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ae16db8cbb2c0ec8e8384ac38ce618f9af1e3a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr109117-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ae16db8cbb2c0ec8e8384ac38ce618f9af1e3a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr109117-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr109117-1.c?ref=a9ae16db8cbb2c0ec8e8384ac38ce618f9af1e3a", "patch": "@@ -0,0 +1,14 @@\n+/* PR target/109117 */\n+/* { dg-do compile } */\n+/* { dg-options \"-mvaes -mno-avx512vl\" } */\n+\n+typedef char __v16qi __attribute__ ((__vector_size__(16)));\n+typedef long long __m128i __attribute__((__vector_size__(16), __aligned__(16)));\n+volatile __v16qi x, y;\n+volatile __m128i res;\n+\n+void\n+foo (void)\n+{\n+      res = __builtin_ia32_vaesdec_v16qi (x, y); /* { dg-warning \"implicit declaration of function\" } */\n+}     /* { dg-error \"incompatible types when assigning to type\" \"\" { target *-*-* } .-1 } */"}]}