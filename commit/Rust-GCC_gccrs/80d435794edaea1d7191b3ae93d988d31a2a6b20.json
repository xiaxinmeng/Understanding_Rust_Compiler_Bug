{"sha": "80d435794edaea1d7191b3ae93d988d31a2a6b20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBkNDM1Nzk0ZWRhZWExZDcxOTFiM2FlOTNkOTg4ZDMxYTJhNmIyMA==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2016-12-08T19:18:33Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2016-12-08T19:18:33Z"}, "message": "This patch fixes an issue in aarch64_classify_address.\n\nThis patch fixes an issue in aarch64_classify_address.  TImode and TFmode\ncan either use a 64-bit LDP/STP or 128-bit LDR/STR.  The addressing mode\nmust be carefully modelled as the intersection of both.  This is done for\nthe immediate offsets, however load_store_pair_p must be set as well to\navoid LDP with a PC-relative address if aarch64_pcrelative_literal_loads\nis true.\n\n    gcc/\n\tPR target/78733\n\t* config/aarch64/aarch64.c (aarch64_classify_address):\n\tSet load_store_pair_p for TImode and TFmode.\n\n    testsuite/\n\t* gcc.target/aarch64/pr78733.c: New test.\n\nFrom-SVN: r243456", "tree": {"sha": "e2fecc79734bfc862c1cce548342eddf0fd76f1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2fecc79734bfc862c1cce548342eddf0fd76f1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80d435794edaea1d7191b3ae93d988d31a2a6b20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d435794edaea1d7191b3ae93d988d31a2a6b20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80d435794edaea1d7191b3ae93d988d31a2a6b20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d435794edaea1d7191b3ae93d988d31a2a6b20/comments", "author": null, "committer": null, "parents": [{"sha": "7bf65250f195566a57ab6338aef7aa4d13c035a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bf65250f195566a57ab6338aef7aa4d13c035a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bf65250f195566a57ab6338aef7aa4d13c035a2"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "ccb8281167698a6bbdde23bb702612e7a1317881", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80d435794edaea1d7191b3ae93d988d31a2a6b20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80d435794edaea1d7191b3ae93d988d31a2a6b20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80d435794edaea1d7191b3ae93d988d31a2a6b20", "patch": "@@ -3,6 +3,12 @@\n \t* gcc.target/i386/i386.h (HARD_REGNO_NREGS): Use GENERAL_REGNO_P.\n \t(HARD_REGNO_NREGS_HAS_PADDING): Ditto.  Simplify macro.\n \n+2015-12-08  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\tPR target/78733\n+\t* config/aarch64/aarch64.c (aarch64_classify_address):\n+\tSet load_store_pair_p for TImode and TFmode.\n+\n 2016-12-08  David Malcolm  <dmalcolm@redhat.com>\n \n \t* emit-rtl.c (gen_reg_rtx): Move regno_pointer_align and"}, {"sha": "e87831f56e94c44e6db06f346cb4176fc90df982", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80d435794edaea1d7191b3ae93d988d31a2a6b20/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80d435794edaea1d7191b3ae93d988d31a2a6b20/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=80d435794edaea1d7191b3ae93d988d31a2a6b20", "patch": "@@ -4273,8 +4273,11 @@ aarch64_classify_address (struct aarch64_address_info *info,\n   enum rtx_code code = GET_CODE (x);\n   rtx op0, op1;\n \n-  /* On BE, we use load/store pair for all large int mode load/stores.  */\n+  /* On BE, we use load/store pair for all large int mode load/stores.\n+     TI/TFmode may also use a load/store pair.  */\n   bool load_store_pair_p = (outer_code == PARALLEL\n+\t\t\t    || mode == TImode\n+\t\t\t    || mode == TFmode\n \t\t\t    || (BYTES_BIG_ENDIAN\n \t\t\t\t&& aarch64_vect_struct_mode_p (mode)));\n "}, {"sha": "ba30327cb1f747365702b800332a9920ab208996", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80d435794edaea1d7191b3ae93d988d31a2a6b20/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80d435794edaea1d7191b3ae93d988d31a2a6b20/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=80d435794edaea1d7191b3ae93d988d31a2a6b20", "patch": "@@ -1,3 +1,8 @@\n+2015-12-08  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\tPR target/78733\n+\t* gcc.target/aarch64/pr78733.c: New test.\n+\n 2016-12-08  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/78551"}]}