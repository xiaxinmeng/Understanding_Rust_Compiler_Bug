{"sha": "7969d9c83d061e57ea80795768469cffb1a859f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk2OWQ5YzgzZDA2MWU1N2VhODA3OTU3Njg0NjljZmZiMWE4NTlmOA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-06-09T16:07:43Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-06-09T16:07:43Z"}, "message": "arm: Auto-vectorization for MVE: vclz\n\nThis patch adds support for auto-vectorization of clz for MVE.\n\nIt does so by removing the unspec from mve_vclzq_<supf><mode> and uses\n'clz' instead. It moves to neon_vclz<mode> expander from neon.md to\nvec-common.md and renames it into the standard name clz<mode>2.\n\n2021-06-09  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tgcc/\n\t* config/arm/iterators.md (<supf>): Remove VCLZQ_U, VCLZQ_S.\n\t(VCLZQ): Remove.\n\t* config/arm/mve.md (mve_vclzq_<supf><mode>): Add '@' prefix,\n\tremove <supf> iterator.\n\t(mve_vclzq_u<mode>): New.\n\t* config/arm/neon.md (clz<mode>2): Rename to neon_vclz<mode>.\n\t(neon_vclz<mode): Move to ...\n\t* config/arm/unspecs.md (VCLZQ_U, VCLZQ_S): Remove.\n\t* config/arm/vec-common.md: ... here. Add support for MVE.\n\n\tgcc/testsuite/\n\t* gcc.target/arm/simd/mve-vclz.c: New test.", "tree": {"sha": "95c092922d62441444d7909210507f2ae410272d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95c092922d62441444d7909210507f2ae410272d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7969d9c83d061e57ea80795768469cffb1a859f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7969d9c83d061e57ea80795768469cffb1a859f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7969d9c83d061e57ea80795768469cffb1a859f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7969d9c83d061e57ea80795768469cffb1a859f8/comments", "author": null, "committer": null, "parents": [{"sha": "880198da50e1beac9b7cf8ff1bff570359c5f2a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/880198da50e1beac9b7cf8ff1bff570359c5f2a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/880198da50e1beac9b7cf8ff1bff570359c5f2a0"}], "stats": {"total": 63, "additions": 46, "deletions": 17}, "files": [{"sha": "5c4fe895268589615ba776c766e5f5385a8ae27b", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7969d9c83d061e57ea80795768469cffb1a859f8/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7969d9c83d061e57ea80795768469cffb1a859f8/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=7969d9c83d061e57ea80795768469cffb1a859f8", "patch": "@@ -1288,7 +1288,7 @@\n \t\t       (VMOVLBQ_U \"u\") (VCVTQ_FROM_F_S \"s\") (VCVTQ_FROM_F_U \"u\")\n \t\t       (VCVTPQ_S \"s\") (VCVTPQ_U \"u\") (VCVTNQ_S \"s\")\n \t\t       (VCVTNQ_U \"u\") (VCVTMQ_S \"s\") (VCVTMQ_U \"u\")\n-\t\t       (VCLZQ_U \"u\") (VCLZQ_S \"s\") (VREV32Q_U \"u\")\n+\t\t       (VREV32Q_U \"u\")\n \t\t       (VREV32Q_S \"s\") (VADDLVQ_U \"u\") (VADDLVQ_S \"s\")\n \t\t       (VCVTQ_N_TO_F_S \"s\") (VCVTQ_N_TO_F_U \"u\")\n \t\t       (VCREATEQ_U \"u\") (VCREATEQ_S \"s\") (VSHRQ_N_S \"s\")\n@@ -1538,7 +1538,6 @@\n (define_int_iterator VREV16Q [VREV16Q_U VREV16Q_S])\n (define_int_iterator VCVTAQ [VCVTAQ_U VCVTAQ_S])\n (define_int_iterator VDUPQ_N [VDUPQ_N_U VDUPQ_N_S])\n-(define_int_iterator VCLZQ [VCLZQ_U VCLZQ_S])\n (define_int_iterator VADDVQ [VADDVQ_U VADDVQ_S])\n (define_int_iterator VREV32Q [VREV32Q_U VREV32Q_S])\n (define_int_iterator VMOVLBQ [VMOVLBQ_S VMOVLBQ_U])"}, {"sha": "99e46d0bc69e6cc47c88d3a1a4087f8aa360c0a7", "filename": "gcc/config/arm/mve.md", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7969d9c83d061e57ea80795768469cffb1a859f8/gcc%2Fconfig%2Farm%2Fmve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7969d9c83d061e57ea80795768469cffb1a859f8/gcc%2Fconfig%2Farm%2Fmve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmve.md?ref=7969d9c83d061e57ea80795768469cffb1a859f8", "patch": "@@ -435,16 +435,22 @@\n ;;\n ;; [vclzq_u, vclzq_s])\n ;;\n-(define_insn \"mve_vclzq_<supf><mode>\"\n+(define_insn \"@mve_vclzq_s<mode>\"\n   [\n    (set (match_operand:MVE_2 0 \"s_register_operand\" \"=w\")\n-\t(unspec:MVE_2 [(match_operand:MVE_2 1 \"s_register_operand\" \"w\")]\n-\t VCLZQ))\n+\t(clz:MVE_2 (match_operand:MVE_2 1 \"s_register_operand\" \"w\")))\n   ]\n   \"TARGET_HAVE_MVE\"\n   \"vclz.i%#<V_sz_elem>  %q0, %q1\"\n   [(set_attr \"type\" \"mve_move\")\n ])\n+(define_expand \"mve_vclzq_u<mode>\"\n+  [\n+   (set (match_operand:MVE_2 0 \"s_register_operand\")\n+\t(clz:MVE_2 (match_operand:MVE_2 1 \"s_register_operand\")))\n+  ]\n+  \"TARGET_HAVE_MVE\"\n+)\n \n ;;\n ;; [vclsq_s])"}, {"sha": "0fdffaf4ec48ac3ab4174a69e6081dede8d84eb8", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7969d9c83d061e57ea80795768469cffb1a859f8/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7969d9c83d061e57ea80795768469cffb1a859f8/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=7969d9c83d061e57ea80795768469cffb1a859f8", "patch": "@@ -3018,23 +3018,14 @@\n   [(set_attr \"type\" \"neon_cls<q>\")]\n )\n \n-(define_insn \"clz<mode>2\"\n+(define_insn \"neon_vclz<mode>\"\n   [(set (match_operand:VDQIW 0 \"s_register_operand\" \"=w\")\n         (clz:VDQIW (match_operand:VDQIW 1 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vclz.<V_if_elem>\\t%<V_reg>0, %<V_reg>1\"\n   [(set_attr \"type\" \"neon_cnt<q>\")]\n )\n \n-(define_expand \"neon_vclz<mode>\"\n-  [(match_operand:VDQIW 0 \"s_register_operand\")\n-   (match_operand:VDQIW 1 \"s_register_operand\")]\n-  \"TARGET_NEON\"\n-{\n-  emit_insn (gen_clz<mode>2 (operands[0], operands[1]));\n-  DONE;\n-})\n-\n (define_insn \"popcount<mode>2\"\n   [(set (match_operand:VE 0 \"s_register_operand\" \"=w\")\n         (popcount:VE (match_operand:VE 1 \"s_register_operand\" \"w\")))]"}, {"sha": "ad1c6edd0055b4ac2cc944b35a0b149605481b52", "filename": "gcc/config/arm/unspecs.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7969d9c83d061e57ea80795768469cffb1a859f8/gcc%2Fconfig%2Farm%2Funspecs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7969d9c83d061e57ea80795768469cffb1a859f8/gcc%2Fconfig%2Farm%2Funspecs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funspecs.md?ref=7969d9c83d061e57ea80795768469cffb1a859f8", "patch": "@@ -556,8 +556,6 @@\n   VQABSQ_S\n   VDUPQ_N_U\n   VDUPQ_N_S\n-  VCLZQ_U\n-  VCLZQ_S\n   VCLSQ_S\n   VADDVQ_S\n   VADDVQ_U"}, {"sha": "430a92ce966d196eebbe9cdbc953ed0ac4758fa8", "filename": "gcc/config/arm/vec-common.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7969d9c83d061e57ea80795768469cffb1a859f8/gcc%2Fconfig%2Farm%2Fvec-common.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7969d9c83d061e57ea80795768469cffb1a859f8/gcc%2Fconfig%2Farm%2Fvec-common.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvec-common.md?ref=7969d9c83d061e57ea80795768469cffb1a859f8", "patch": "@@ -625,3 +625,10 @@\n \t\t\t       operands[0], operands[1], operands[2]));\n   DONE;\n })\n+\n+(define_expand \"clz<mode>2\"\n+ [(set (match_operand:VDQIW 0 \"s_register_operand\")\n+       (clz:VDQIW (match_operand:VDQIW 1 \"s_register_operand\")))]\n+  \"ARM_HAVE_<MODE>_ARITH\n+   && !TARGET_REALLY_IWMMXT\"\n+)"}, {"sha": "7068736bc283ad51a97ae4a524f6c9a89373abfe", "filename": "gcc/testsuite/gcc.target/arm/simd/mve-vclz.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7969d9c83d061e57ea80795768469cffb1a859f8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vclz.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7969d9c83d061e57ea80795768469cffb1a859f8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vclz.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vclz.c?ref=7969d9c83d061e57ea80795768469cffb1a859f8", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_1m_mve_ok } */\n+/* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+#include <stdint.h>\n+\n+#define FUNC(SIGN, TYPE, BITS, NAME)\t\t\t\t\t\\\n+  void test_ ## NAME ##_ ## SIGN ## BITS (TYPE##BITS##_t * __restrict__ dest, \\\n+\t\t\t\t\t  TYPE##BITS##_t *a) {\t\t\\\n+    int i;\t\t\t\t\t\t\t\t\\\n+    for (i=0; i < (128 / BITS); i++) {\t\t\t\t\t\\\n+      dest[i] = (TYPE##BITS##_t)__builtin_clz(a[i]);\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+}\n+\n+FUNC(s, int, 32, clz)\n+FUNC(u, uint, 32, clz)\n+FUNC(s, int, 16, clz)\n+FUNC(u, uint, 16, clz)\n+FUNC(s, int, 8, clz)\n+FUNC(u, uint, 8, clz)\n+\n+/* 16 and 8-bit versions are not vectorized because they need pack/unpack\n+   patterns since __builtin_clz uses 32-bit parameter and return value.  */\n+/* { dg-final { scan-assembler-times {vclz\\.i32  q[0-9]+, q[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vclz\\.i16  q[0-9]+, q[0-9]+} 2 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {vclz\\.i8  q[0-9]+, q[0-9]+} 2 { xfail *-*-* } } } */"}]}