{"sha": "330aa9a385a89f4d46225e10522c3b2f251305e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMwYWE5YTM4NWE4OWY0ZDQ2MjI1ZTEwNTIyYzNiMmYyNTEzMDVlNQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-01-02T18:15:18Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-01-02T18:15:18Z"}, "message": "* tree.def (TRUTH_NOT_EXPR): Improve documentation.\n\nFrom-SVN: r38631", "tree": {"sha": "04976a909b1ea2e838e9a78e907260001947357d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04976a909b1ea2e838e9a78e907260001947357d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/330aa9a385a89f4d46225e10522c3b2f251305e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/330aa9a385a89f4d46225e10522c3b2f251305e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/330aa9a385a89f4d46225e10522c3b2f251305e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/330aa9a385a89f4d46225e10522c3b2f251305e5/comments", "author": null, "committer": null, "parents": [{"sha": "eeebb824377d936450adefc8ea868e23ae35b9ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeebb824377d936450adefc8ea868e23ae35b9ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeebb824377d936450adefc8ea868e23ae35b9ef"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "884a4befc612dce8fb3e21f13412285654ed9100", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/330aa9a385a89f4d46225e10522c3b2f251305e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/330aa9a385a89f4d46225e10522c3b2f251305e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=330aa9a385a89f4d46225e10522c3b2f251305e5", "patch": "@@ -1,3 +1,7 @@\n+2001-01-02  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* tree.def (TRUTH_NOT_EXPR): Improve documentation.\n+\n Tue Jan  2 10:47:38 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.\n \n \t* expr.c (store_constructor_field): Update ALIGN before calling"}, {"sha": "23fda18c516a0823fac04328f61958da32470fb8", "filename": "gcc/tree.def", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/330aa9a385a89f4d46225e10522c3b2f251305e5/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/330aa9a385a89f4d46225e10522c3b2f251305e5/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=330aa9a385a89f4d46225e10522c3b2f251305e5", "patch": "@@ -620,11 +620,15 @@ DEFTREECODE (BIT_AND_EXPR, \"bit_and_expr\", '2', 2)\n DEFTREECODE (BIT_ANDTC_EXPR, \"bit_andtc_expr\", '2', 2)\n DEFTREECODE (BIT_NOT_EXPR, \"bit_not_expr\", '1', 1)\n \n-/* Combination of boolean values or of integers considered only\n-   as zero or nonzero.  ANDIF and ORIF allow the second operand\n-   not to be computed if the value of the expression is determined\n-   from the first operand.  AND, OR, and XOR always compute the second\n-   operand whether its value is needed or not (for side effects).  */\n+/* ANDIF and ORIF allow the second operand not to be computed if the\n+   value of the expression is determined from the first operand.  AND,\n+   OR, and XOR always compute the second operand whether its value is\n+   needed or not (for side effects).  The operand may have\n+   BOOLEAN_TYPE or INTEGER_TYPE.  In either case, the argument will be\n+   either zero or one.  For example, a TRUTH_NOT_EXPR will never have\n+   a INTEGER_TYPE VAR_DECL as its argument; instead, a NE_EXPR will be\n+   used to compare the VAR_DECL to zero, thereby obtaining a node with\n+   value zero or one.  */\n DEFTREECODE (TRUTH_ANDIF_EXPR, \"truth_andif_expr\", 'e', 2)\n DEFTREECODE (TRUTH_ORIF_EXPR, \"truth_orif_expr\", 'e', 2)\n DEFTREECODE (TRUTH_AND_EXPR, \"truth_and_expr\", 'e', 2)"}]}