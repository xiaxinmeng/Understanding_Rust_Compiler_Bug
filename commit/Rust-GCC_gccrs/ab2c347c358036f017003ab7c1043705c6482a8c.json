{"sha": "ab2c347c358036f017003ab7c1043705c6482a8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIyYzM0N2MzNTgwMzZmMDE3MDAzYWI3YzEwNDM3MDVjNjQ4MmE4Yw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-06-18T21:50:51Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-06-18T21:50:51Z"}, "message": "re PR c++/84698 (ICE when using noexcept(noexcept()) declaration on global friend function of template class)\n\n\tPR c++/84698\n\t* g++.dg/cpp0x/noexcept42.C: New test.\n\nFrom-SVN: r272443", "tree": {"sha": "e047d082fd800beb5ee7f372aa1ec0373ed7188e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e047d082fd800beb5ee7f372aa1ec0373ed7188e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab2c347c358036f017003ab7c1043705c6482a8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab2c347c358036f017003ab7c1043705c6482a8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab2c347c358036f017003ab7c1043705c6482a8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab2c347c358036f017003ab7c1043705c6482a8c/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8797dd71e710120158a191ace6dbe769b2485cf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8797dd71e710120158a191ace6dbe769b2485cf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8797dd71e710120158a191ace6dbe769b2485cf0"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "2848d2ceecab8326c82ad9f76a2d2cd670f745d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab2c347c358036f017003ab7c1043705c6482a8c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab2c347c358036f017003ab7c1043705c6482a8c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab2c347c358036f017003ab7c1043705c6482a8c", "patch": "@@ -1,5 +1,8 @@\n 2019-06-18  Marek Polacek  <polacek@redhat.com>\n \n+\tPR c++/84698\n+\t* g++.dg/cpp0x/noexcept42.C: New test.\n+\n \tPR c++/71548\n \t* g++.dg/cpp0x/variadic177.C: New test.\n "}, {"sha": "5d7218dd3e0bbba71d1fbbc744962c464504d434", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept42.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab2c347c358036f017003ab7c1043705c6482a8c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept42.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab2c347c358036f017003ab7c1043705c6482a8c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept42.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept42.C?ref=ab2c347c358036f017003ab7c1043705c6482a8c", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/84698\n+// { dg-do compile { target c++11 } }\n+\n+template<typename A, typename B>\n+struct X {\n+  void swap(X& o) noexcept { }\n+\n+  template<typename... Args>\n+  friend void swap(X<Args...>& a, X<Args...>& b) noexcept(noexcept(a.swap(b)));\n+};\n+\n+template<typename... Args>\n+inline void swap(X<Args...>& a, X<Args...>& b) noexcept(noexcept(a.swap(b)))\n+{\n+}\n+\n+int\n+main ()\n+{\n+  X<int, int> x;\n+}"}]}