{"sha": "ec728fb0026bbe5bc9f0d9ccb4215000f77ab206", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM3MjhmYjAwMjZiYmU1YmM5ZjBkOWNjYjQyMTUwMDBmNzdhYjIwNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-03-16T12:22:55Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-10T07:20:39Z"}, "message": "c++: remove redundand NULL check.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/99616\n\t* decl.c (grokdeclarator): Remove redundant NULL check.", "tree": {"sha": "9eafcd3cf83abefb77e98275318f3fafb3500d3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9eafcd3cf83abefb77e98275318f3fafb3500d3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec728fb0026bbe5bc9f0d9ccb4215000f77ab206", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec728fb0026bbe5bc9f0d9ccb4215000f77ab206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec728fb0026bbe5bc9f0d9ccb4215000f77ab206", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec728fb0026bbe5bc9f0d9ccb4215000f77ab206/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8bf524b8c1dd129e6894d7138ebfd69c0d4f5d16", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec728fb0026bbe5bc9f0d9ccb4215000f77ab206/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec728fb0026bbe5bc9f0d9ccb4215000f77ab206/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ec728fb0026bbe5bc9f0d9ccb4215000f77ab206", "patch": "@@ -12310,7 +12310,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t  int attr_flags;\n \n \t  attr_flags = 0;\n-\t  if (declarator == NULL || declarator->kind == cdk_id)\n+\t  if (declarator->kind == cdk_id)\n \t    attr_flags |= (int) ATTR_FLAG_DECL_NEXT;\n \t  if (declarator->kind == cdk_function)\n \t    attr_flags |= (int) ATTR_FLAG_FUNCTION_NEXT;"}]}