{"sha": "eaee472d05fea91e1dde0bb9347d179ebf1aafa3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFlZTQ3MmQwNWZlYTkxZTFkZGUwYmI5MzQ3ZDE3OWViZjFhYWZhMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-06-22T14:50:23Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-06-22T14:50:23Z"}, "message": "profile-count.h (apply_probability, [...]): Fix checks for zero.\n\n\n\t* profile-count.h (apply_probability,\n\tapply_scale, probability_in): Fix checks for zero.\n\nFrom-SVN: r249563", "tree": {"sha": "6c8ca0f5e51138f355d7e078ec444df14c9deb30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c8ca0f5e51138f355d7e078ec444df14c9deb30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaee472d05fea91e1dde0bb9347d179ebf1aafa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaee472d05fea91e1dde0bb9347d179ebf1aafa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaee472d05fea91e1dde0bb9347d179ebf1aafa3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaee472d05fea91e1dde0bb9347d179ebf1aafa3/comments", "author": null, "committer": null, "parents": [{"sha": "c016fd32fe7da1a8c97f96f7e9767e4e300b3d28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c016fd32fe7da1a8c97f96f7e9767e4e300b3d28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c016fd32fe7da1a8c97f96f7e9767e4e300b3d28"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "0a3426eef3ebf42e0666997407f02e41ffdf9dc9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaee472d05fea91e1dde0bb9347d179ebf1aafa3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaee472d05fea91e1dde0bb9347d179ebf1aafa3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eaee472d05fea91e1dde0bb9347d179ebf1aafa3", "patch": "@@ -1,3 +1,8 @@\n+2017-06-22  Jan Hubicka <hubicka@ucw.cz>\n+\n+\t* profile-count.h (apply_probability,\n+\tapply_scale, probability_in): Fix checks for zero.\n+\n 2017-06-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* incpath.c (add_sysroot_to_chain): Allow for $SYSROOT prefix."}, {"sha": "0f77e4efc36cd62a9ab10394c712c2be59c6618e", "filename": "gcc/profile-count.h", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaee472d05fea91e1dde0bb9347d179ebf1aafa3/gcc%2Fprofile-count.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaee472d05fea91e1dde0bb9347d179ebf1aafa3/gcc%2Fprofile-count.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile-count.h?ref=eaee472d05fea91e1dde0bb9347d179ebf1aafa3", "patch": "@@ -255,7 +255,7 @@ class GTY(()) profile_count\n   profile_count apply_probability (int prob) const\n     {\n       gcc_checking_assert (prob >= 0 && prob <= REG_BR_PROB_BASE);\n-      if (*this == profile_count::zero ())\n+      if (m_val == 0)\n \treturn *this;\n       if (!initialized_p ())\n \treturn profile_count::uninitialized ();\n@@ -267,24 +267,25 @@ class GTY(()) profile_count\n   /* Return *THIS * NUM / DEN.  */\n   profile_count apply_scale (int64_t num, int64_t den) const\n     {\n-      if (*this == profile_count::zero ())\n+      if (m_val == 0)\n \treturn *this;\n       if (!initialized_p ())\n \treturn profile_count::uninitialized ();\n       profile_count ret;\n+      gcc_checking_assert (num >= 0 && den > 0);\n       /* FIXME: shrink wrapping violates this sanity check.  */\n-      gcc_checking_assert ((num >= 0\n-\t\t\t    && (num <= REG_BR_PROB_BASE\n-\t\t\t        || den <= REG_BR_PROB_BASE)\n-\t\t\t    && den > 0) || 1);\n+      gcc_checking_assert ((num <= REG_BR_PROB_BASE\n+\t\t\t    || den <= REG_BR_PROB_BASE) || 1);\n       ret.m_val = RDIV (m_val * num, den);\n       ret.m_quality = MIN (m_quality, count_adjusted);\n       return ret;\n     }\n   profile_count apply_scale (profile_count num, profile_count den) const\n     {\n-      if (*this == profile_count::zero () || num == profile_count::zero ())\n-\treturn profile_count::zero ();\n+      if (m_val == 0)\n+\treturn *this;\n+      if (num.m_val == 0)\n+\treturn num;\n       if (!initialized_p () || !num.initialized_p () || !den.initialized_p ())\n \treturn profile_count::uninitialized ();\n       gcc_checking_assert (den > 0);\n@@ -306,7 +307,7 @@ class GTY(()) profile_count\n      OVERALL.  */\n   int probability_in (profile_count overall)\n     {\n-      if (*this == profile_count::zero ())\n+      if (!m_val)\n \treturn 0;\n       if (!initialized_p () || !overall.initialized_p ())\n \treturn REG_BR_PROB_BASE / 2;"}]}