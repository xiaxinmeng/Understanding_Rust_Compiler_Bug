{"sha": "fa528281a9d056bf5beb867333ea4eea638a102d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE1MjgyODFhOWQwNTZiZjViZWI4NjczMzNlYTRlZWE2MzhhMTAyZA==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2019-07-04T08:06:30Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-04T08:06:30Z"}, "message": "[Ada] Missing actual for generated initialization procedure\n\nThis patch fixes an issue whereby the use of an allocator with a\ncomposite type containing null-excluding components may lead to a\ncompile time error due to incorrect code generation.\n\n2019-07-04  Justin Squirek  <squirek@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch3.adb (Build_Initialization_Call): Fixup\n\t*_skip_null_excluding_check argument to handle new default.\n\t(Init_Formals): Make *_skip_null_excluding_check formal default\n\tto False\n\t* exp_ch4.adb (Expand_N_Allocator): Add comment to note heavy\n\tcode duplication\n\ngcc/testsuite/\n\n\t* gnat.dg/allocator.adb: New testcase.\n\nFrom-SVN: r273061", "tree": {"sha": "6965417b38eebeb0c1d8bba9b413c09254dcf3b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6965417b38eebeb0c1d8bba9b413c09254dcf3b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa528281a9d056bf5beb867333ea4eea638a102d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa528281a9d056bf5beb867333ea4eea638a102d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa528281a9d056bf5beb867333ea4eea638a102d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa528281a9d056bf5beb867333ea4eea638a102d/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b27f2c40019569ba7c4d7e38edb3e2ebcd0593c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b27f2c40019569ba7c4d7e38edb3e2ebcd0593c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b27f2c40019569ba7c4d7e38edb3e2ebcd0593c6"}], "stats": {"total": 58, "additions": 41, "deletions": 17}, "files": [{"sha": "b5e9bd62095e3133720bb7377593599a244e549f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa528281a9d056bf5beb867333ea4eea638a102d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa528281a9d056bf5beb867333ea4eea638a102d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fa528281a9d056bf5beb867333ea4eea638a102d", "patch": "@@ -1,3 +1,12 @@\n+2019-07-04  Justin Squirek  <squirek@adacore.com>\n+\n+\t* exp_ch3.adb (Build_Initialization_Call): Fixup\n+\t*_skip_null_excluding_check argument to handle new default.\n+\t(Init_Formals): Make *_skip_null_excluding_check formal default\n+\tto False\n+\t* exp_ch4.adb (Expand_N_Allocator): Add comment to note heavy\n+\tcode duplication\n+\n 2019-07-04  Bob Duff  <duff@adacore.com>\n \n \t* sem_ch3.adb (Access_Definition): Do not create a master unless"}, {"sha": "49fcfd75d30c91feb1208fd03793d82c4a595c7f", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa528281a9d056bf5beb867333ea4eea638a102d/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa528281a9d056bf5beb867333ea4eea638a102d/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=fa528281a9d056bf5beb867333ea4eea638a102d", "patch": "@@ -1555,23 +1555,19 @@ package body Exp_Ch3 is\n \n       --  Handle the optionally generated formal *_skip_null_excluding_checks\n \n-      if Needs_Conditional_Null_Excluding_Check (Full_Init_Type) then\n-\n-         --  Look at the associated node for the object we are referencing\n-         --  and verify that we are expanding a call to an Init_Proc for an\n-         --  internally generated object declaration before passing True and\n-         --  skipping the relevant checks.\n-\n-         if Nkind (Id_Ref) in N_Has_Entity\n-           and then Comes_From_Source (Associated_Node (Id_Ref))\n-         then\n-            Append_To (Args, New_Occurrence_Of (Standard_True, Loc));\n-\n-         --  Otherwise, we pass False to perform null-excluding checks\n-\n-         else\n-            Append_To (Args, New_Occurrence_Of (Standard_False, Loc));\n-         end if;\n+      --  Look at the associated node for the object we are referencing and\n+      --  verify that we are expanding a call to an Init_Proc for an internally\n+      --  generated object declaration before passing True and skipping the\n+      --  relevant checks.\n+\n+      if Needs_Conditional_Null_Excluding_Check (Full_Init_Type)\n+        and then Nkind (Id_Ref) in N_Has_Entity\n+        and then (Comes_From_Source (Id_Ref)\n+                   or else (Present (Associated_Node (Id_Ref))\n+                             and then Comes_From_Source\n+                                        (Associated_Node (Id_Ref))))\n+      then\n+         Append_To (Args, New_Occurrence_Of (Standard_True, Loc));\n       end if;\n \n       --  Add discriminant values if discriminants are present\n@@ -8695,6 +8691,7 @@ package body Exp_Ch3 is\n                Make_Defining_Identifier (Loc,\n                  New_External_Name (Chars\n                    (Component_Type (Typ)), \"_skip_null_excluding_check\")),\n+             Expression          => New_Occurrence_Of (Standard_False, Loc),\n              In_Present          => True,\n              Parameter_Type      =>\n                New_Occurrence_Of (Standard_Boolean, Loc)));"}, {"sha": "7a757e481c430651ca404e48411749a91bbf0d09", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa528281a9d056bf5beb867333ea4eea638a102d/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa528281a9d056bf5beb867333ea4eea638a102d/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=fa528281a9d056bf5beb867333ea4eea638a102d", "patch": "@@ -4751,6 +4751,9 @@ package body Exp_Ch4 is\n \n          --  Case of initialization procedure present, must be called\n \n+         --  NOTE: There is a *huge* amount of code duplication here from\n+         --  Build_Initialization_Call. We should probably refactor???\n+\n          else\n             Check_Restriction (No_Default_Initialization, N);\n "}, {"sha": "c4b0046141b590899b258e4e29a843fe218225c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa528281a9d056bf5beb867333ea4eea638a102d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa528281a9d056bf5beb867333ea4eea638a102d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa528281a9d056bf5beb867333ea4eea638a102d", "patch": "@@ -1,3 +1,7 @@\n+2019-07-04  Justin Squirek  <squirek@adacore.com>\n+\n+\t* gnat.dg/allocator.adb: New testcase.\n+\n 2019-07-04  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/default_initial_condition.adb,"}, {"sha": "c3840aa4e1804843f5e70a634bde969ab1353974", "filename": "gcc/testsuite/gnat.dg/allocator.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa528281a9d056bf5beb867333ea4eea638a102d/gcc%2Ftestsuite%2Fgnat.dg%2Fallocator.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa528281a9d056bf5beb867333ea4eea638a102d/gcc%2Ftestsuite%2Fgnat.dg%2Fallocator.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fallocator.adb?ref=fa528281a9d056bf5beb867333ea4eea638a102d", "patch": "@@ -0,0 +1,11 @@\n+--  { dg-do compile }\n+\n+procedure Allocator is\n+   type Object_Type      is not null access all Integer;\n+   type Object_Array     is array (Positive range <>) of Object_Type;\n+   type Object_Array_Ptr is access Object_Array;\n+   type Data_Ptr         is access Object_Array_Ptr;\n+   Copy : Data_Ptr := new Object_Array_Ptr;\n+begin\n+   Copy.all := new Object_Array (1..2);\n+end;"}]}