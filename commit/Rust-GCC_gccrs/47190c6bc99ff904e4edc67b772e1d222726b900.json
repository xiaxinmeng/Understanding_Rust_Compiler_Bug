{"sha": "47190c6bc99ff904e4edc67b772e1d222726b900", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDcxOTBjNmJjOTlmZjkwNGU0ZWRjNjdiNzcyZTFkMjIyNzI2YjkwMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-11-19T11:24:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-11-19T11:24:53Z"}, "message": "exp_pakd.adb (Convert_To_PAT_Type): After replacing the original type of the object with the packed array type...\n\n\t* exp_pakd.adb (Convert_To_PAT_Type): After replacing the original\n\ttype of the object with the packed array type, set the Analyzed flag\n\ton the object if it is an entity or simple indexed component, to avoid\n\tspurious type errors.\n\nFrom-SVN: r90909", "tree": {"sha": "cafcece665f852b06482a6b8414798e383854e43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cafcece665f852b06482a6b8414798e383854e43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47190c6bc99ff904e4edc67b772e1d222726b900", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47190c6bc99ff904e4edc67b772e1d222726b900", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47190c6bc99ff904e4edc67b772e1d222726b900", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47190c6bc99ff904e4edc67b772e1d222726b900/comments", "author": null, "committer": null, "parents": [{"sha": "d10ad8ffac60c5c05393a22990c6f051ab877ee9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d10ad8ffac60c5c05393a22990c6f051ab877ee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d10ad8ffac60c5c05393a22990c6f051ab877ee9"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "d6f47ddc4b8953b2b2fb8109caea69810909bbf8", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47190c6bc99ff904e4edc67b772e1d222726b900/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47190c6bc99ff904e4edc67b772e1d222726b900/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=47190c6bc99ff904e4edc67b772e1d222726b900", "patch": "@@ -685,7 +685,24 @@ package body Exp_Pakd is\n       --  because the expression will not be further analyzed, and Gigi\n       --  considers the two types equivalent in any case.\n \n+      --  This is not strictly the case ??? If the reference is an actual\n+      --  in a call, the expansion of the prefix is delayed, and must be\n+      --  reanalyzed, see Reset_Packed_Prefix. On the other hand, if the\n+      --  prefix is a simple array reference, reanalysis can produce spurious\n+      --  type errors when the PAT type is replaced again with the original\n+      --  type of the array. The following is correct and minimal, but the\n+      --  handling of more complex packed expressions in actuals is confused.\n+      --  It is likely that the problem only remains for actuals in calls.\n+\n       Set_Etype (Aexp, Packed_Array_Type (Act_ST));\n+\n+      if Is_Entity_Name (Aexp)\n+        or else\n+           (Nkind (Aexp) = N_Indexed_Component\n+             and then Is_Entity_Name (Prefix (Aexp)))\n+      then\n+         Set_Analyzed (Aexp);\n+      end if;\n    end Convert_To_PAT_Type;\n \n    ------------------------------"}]}