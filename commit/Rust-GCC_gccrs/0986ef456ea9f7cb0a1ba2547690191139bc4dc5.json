{"sha": "0986ef456ea9f7cb0a1ba2547690191139bc4dc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk4NmVmNDU2ZWE5ZjdjYjBhMWJhMjU0NzY5MDE5MTEzOWJjNGRjNQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2009-12-24T10:46:00Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2009-12-24T10:46:00Z"}, "message": "re PR target/40887 (GCC generates suboptimal code for indirect function calls on ARM)\n\nFix PR target/40887\n\n\n\n2009-12-24  Julian Brown  <julian@codesourcery.com>\n            Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n        PR target/40887\n\n        * config/arm/arm.c (output_call_mem): Remove armv5 support.\n        * config/arm/arm.md (*call_mem): Disable for armv5. Add note.\n        (*call_value_mem): Likewise.\n\n\n        PR target/40887\n\n        * gcc.target/gcc.arm/pr40887.c: New test.\n\nCo-Authored-By: Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>\n\nFrom-SVN: r155453", "tree": {"sha": "f6f0314bf4dd56f06ecd57f3fd34fd361484f9f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6f0314bf4dd56f06ecd57f3fd34fd361484f9f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0986ef456ea9f7cb0a1ba2547690191139bc4dc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0986ef456ea9f7cb0a1ba2547690191139bc4dc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0986ef456ea9f7cb0a1ba2547690191139bc4dc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0986ef456ea9f7cb0a1ba2547690191139bc4dc5/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b8a1859cf0412d2eca92c22e532dd56f013337e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8a1859cf0412d2eca92c22e532dd56f013337e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b8a1859cf0412d2eca92c22e532dd56f013337e"}], "stats": {"total": 54, "additions": 41, "deletions": 13}, "files": [{"sha": "f7583c26fbc28ec46b5dad712aade59876ab608f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0986ef456ea9f7cb0a1ba2547690191139bc4dc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0986ef456ea9f7cb0a1ba2547690191139bc4dc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0986ef456ea9f7cb0a1ba2547690191139bc4dc5", "patch": "@@ -1,3 +1,11 @@\n+2009-12-24  Julian Brown  <julian@codesourcery.com>\n+            Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+        PR target/40887\n+        * config/arm/arm.c (output_call_mem): Remove armv5 support.\n+        * config/arm/arm.md (*call_mem): Disable for armv5. Add note.\n+        (*call_value_mem): Likewise.\n+\n 2009-12-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/42475"}, {"sha": "e9ea2bd1ca0cdcbb987094839f51fb00f71a0b78", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0986ef456ea9f7cb0a1ba2547690191139bc4dc5/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0986ef456ea9f7cb0a1ba2547690191139bc4dc5/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=0986ef456ea9f7cb0a1ba2547690191139bc4dc5", "patch": "@@ -11772,11 +11772,14 @@ output_call (rtx *operands)\n   return \"\";\n }\n \n-/* Output a 'call' insn that is a reference in memory.  */\n+/* Output a 'call' insn that is a reference in memory. This is\n+   disabled for ARMv5 and we prefer a blx instead because otherwise\n+   there's a significant performance overhead.  */\n const char *\n output_call_mem (rtx *operands)\n {\n-  if (TARGET_INTERWORK && !arm_arch5)\n+  gcc_assert (!arm_arch5);\n+  if (TARGET_INTERWORK)\n     {\n       output_asm_insn (\"ldr%?\\t%|ip, %0\", operands);\n       output_asm_insn (\"mov%?\\t%|lr, %|pc\", operands);\n@@ -11788,16 +11791,11 @@ output_call_mem (rtx *operands)\n \t first instruction.  It's safe to use IP as the target of the\n \t load since the call will kill it anyway.  */\n       output_asm_insn (\"ldr%?\\t%|ip, %0\", operands);\n-      if (arm_arch5)\n-\toutput_asm_insn (\"blx%?\\t%|ip\", operands);\n+      output_asm_insn (\"mov%?\\t%|lr, %|pc\", operands);\n+      if (arm_arch4t)\n+\toutput_asm_insn (\"bx%?\\t%|ip\", operands);\n       else\n-\t{\n-\t  output_asm_insn (\"mov%?\\t%|lr, %|pc\", operands);\n-\t  if (arm_arch4t)\n-\t    output_asm_insn (\"bx%?\\t%|ip\", operands);\n-\t  else\n-\t    output_asm_insn (\"mov%?\\t%|pc, %|ip\", operands);\n-\t}\n+\toutput_asm_insn (\"mov%?\\t%|pc, %|ip\", operands);\n     }\n   else\n     {"}, {"sha": "cbb0a1bdf1439e099cfcc9277ed226dcf7c102ac", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0986ef456ea9f7cb0a1ba2547690191139bc4dc5/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0986ef456ea9f7cb0a1ba2547690191139bc4dc5/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=0986ef456ea9f7cb0a1ba2547690191139bc4dc5", "patch": "@@ -8453,12 +8453,17 @@\n    (set_attr \"type\" \"call\")]\n )\n \n+\n+;; Note: not used for armv5+ because the sequence used (ldr pc, ...) is not\n+;; considered a function call by the branch predictor of some cores (PR40887).\n+;; Falls back to blx rN (*call_reg_armv5).\n+\n (define_insn \"*call_mem\"\n   [(call (mem:SI (match_operand:SI 0 \"call_memory_operand\" \"m\"))\n \t (match_operand 1 \"\" \"\"))\n    (use (match_operand 2 \"\" \"\"))\n    (clobber (reg:SI LR_REGNUM))]\n-  \"TARGET_ARM\"\n+  \"TARGET_ARM && !arm_arch5\"\n   \"*\n   return output_call_mem (operands);\n   \"\n@@ -8560,13 +8565,15 @@\n    (set_attr \"type\" \"call\")]\n )\n \n+;; Note: see *call_mem\n+\n (define_insn \"*call_value_mem\"\n   [(set (match_operand 0 \"\" \"\")\n \t(call (mem:SI (match_operand:SI 1 \"call_memory_operand\" \"m\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (match_operand 3 \"\" \"\"))\n    (clobber (reg:SI LR_REGNUM))]\n-  \"TARGET_ARM && (!CONSTANT_ADDRESS_P (XEXP (operands[1], 0)))\"\n+  \"TARGET_ARM && !arm_arch5 && (!CONSTANT_ADDRESS_P (XEXP (operands[1], 0)))\"\n   \"*\n   return output_call_mem (&operands[1]);\n   \""}, {"sha": "f2d89276540ba4877b5068b4cf5e98d5e07d64dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0986ef456ea9f7cb0a1ba2547690191139bc4dc5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0986ef456ea9f7cb0a1ba2547690191139bc4dc5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0986ef456ea9f7cb0a1ba2547690191139bc4dc5", "patch": "@@ -1,3 +1,9 @@\n+2009-12-24  Julian Brown  <julian@codesourcery.com>\n+            Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+        PR target/40887\n+\t* gcc.target/arm/pr40887.c: New test.\n+\n 2009-12-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/42475"}, {"sha": "ca896fc166691cf0b3d526279b130f39daf9aa1c", "filename": "gcc/testsuite/gcc.target/arm/pr40887.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0986ef456ea9f7cb0a1ba2547690191139bc4dc5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr40887.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0986ef456ea9f7cb0a1ba2547690191139bc4dc5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr40887.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr40887.c?ref=0986ef456ea9f7cb0a1ba2547690191139bc4dc5", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-options \"-O2 -march=armv5te\" }  */\n+/* { dg-final { scan-assembler \"blx\" } } */\n+\n+int (*indirect_func)();\n+\n+int indirect_call()\n+{\n+    return indirect_func();\n+}"}]}