{"sha": "9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM1MzNlN2RmYjQ1MzM0Mzk1YWQ0YWVlZmRmYTViNDc0MGQ1YzFkYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2017-04-25T15:59:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T15:59:28Z"}, "message": "gnat_rm.texi, [...]: Update documentation.\n\n\t* gnat_rm.texi, gnat_ugn.texi,\n\tdoc/gnat_ugn/building_executable_programs_with_gnat.rst,\n\tdoc/gnat_ugn/platform_specific_information.rst,\n\tdoc/gnat_ugn/gnat_and_program_execution.rst,\n\tdoc/gnat_ugn/gnat_utility_programs.rst,\n\tdoc/gnat_ugn/the_gnat_compilation_model.rst,\n\tdoc/gnat_rm/implementation_defined_attributes.rst,\n\tdoc/gnat_rm/the_gnat_library.rst,\n\tdoc/gnat_rm/implementation_defined_pragmas.rst,\n\tdoc/gnat_rm/representation_clauses_and_pragmas.rst,\n\tdoc/gnat_rm/implementation_of_specific_ada_features.rst,\n\tdoc/gnat_rm/implementation_defined_aspects.rst,\n\tdoc/gnat_rm/implementation_defined_characteristics.rst: Update\n\tdocumentation.\n\nFrom-SVN: r247253", "tree": {"sha": "908b4c72a48cde412ee5c1c997db6e61ad78f0e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/908b4c72a48cde412ee5c1c997db6e61ad78f0e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "211e7410b32e6cb4b45d414883c5d6d5f37faa31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/211e7410b32e6cb4b45d414883c5d6d5f37faa31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/211e7410b32e6cb4b45d414883c5d6d5f37faa31"}], "stats": {"total": 3003, "additions": 1627, "deletions": 1376}, "files": [{"sha": "c2bd56207dd1eec70b6a30349aead1024b3b8789", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -1,3 +1,20 @@\n+2017-04-25  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat_rm.texi, gnat_ugn.texi,\n+\tdoc/gnat_ugn/building_executable_programs_with_gnat.rst,\n+\tdoc/gnat_ugn/platform_specific_information.rst,\n+\tdoc/gnat_ugn/gnat_and_program_execution.rst,\n+\tdoc/gnat_ugn/gnat_utility_programs.rst,\n+\tdoc/gnat_ugn/the_gnat_compilation_model.rst,\n+\tdoc/gnat_rm/implementation_defined_attributes.rst,\n+\tdoc/gnat_rm/the_gnat_library.rst,\n+\tdoc/gnat_rm/implementation_defined_pragmas.rst,\n+\tdoc/gnat_rm/representation_clauses_and_pragmas.rst,\n+\tdoc/gnat_rm/implementation_of_specific_ada_features.rst,\n+\tdoc/gnat_rm/implementation_defined_aspects.rst,\n+\tdoc/gnat_rm/implementation_defined_characteristics.rst: Update\n+\tdocumentation.\n+\n 2017-04-25  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_ch4.adb (Expand_N_Case_Expression): Emit error message when"}, {"sha": "0fd528dc54ea86e08ebf1e18aaac49de95eca68a", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_aspects.rst", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_aspects.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_aspects.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_aspects.rst?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -66,8 +66,9 @@ Aspect Abstract_State\n \n This aspect is equivalent to :ref:`pragma Abstract_State<Pragma-Abstract_State>`.\n \n-Annotate\n-========\n+Aspect Annotate\n+===============\n+\n .. index:: Annotate\n \n There are three forms of this aspect (where ID is an identifier,\n@@ -147,7 +148,7 @@ used when doing formatted output of dimensioned quantities. The syntax is::\n \n \n This aspect can only be applied to a subtype whose parent type has\n-a `Dimension_Systen` aspect. The aspect must specify values for\n+a `Dimension_System` aspect. The aspect must specify values for\n all dimensions of the system. The rational values are the powers of the\n corresponding dimensions that are used by the compiler to verify that\n physical (numeric) computations are dimensionally consistent. For example,\n@@ -361,7 +362,6 @@ This boolean aspect is equivalent to :ref:`pragma Lock_Free<Pragma-Lock_Free>`.\n \n Aspect Max_Queue_Length\n =======================\n-\n .. index:: Max_Queue_Length\n \n This aspect is equivalent to :ref:`pragma Max_Queue_Length<Pragma-Max_Queue_Length>`."}, {"sha": "38731f3cab1f34ea9c16db3d6b47f3efb98ccd97", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_attributes.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -1168,7 +1168,7 @@ used in contexts (e.g., preelaborable packages) which require a\n static expression and where the function call could not be used\n (since the function call is always nonstatic, even if its\n argument is static). The argument must be in the range\n--(2**(m-1) .. 2**m-1, where m is the memory size\n+-(2**(m-1)) .. 2**m-1, where m is the memory size\n (typically 32 or 64). Negative values are intepreted in a\n modular manner (e.g., -1 means the same as 16#FFFF_FFFF# on\n a 32 bits machine)."}, {"sha": "10c4a09f0bf0364d9c6310dcd85ba887a48e0eb4", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_characteristics.rst", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -986,13 +986,13 @@ The policy is the same as that of the underlying threads implementation.\n   in a pragma `Locking_Policy`.  See D.3(4).\"\n \n The two implementation defined policies permitted in GNAT are\n-`Inheritance_Locking` and  `Conccurent_Readers_Locking`.  On\n+`Inheritance_Locking` and  `Concurrent_Readers_Locking`. On\n targets that support the `Inheritance_Locking` policy, locking is\n implemented by inheritance, i.e., the task owning the lock operates\n at a priority equal to the highest priority of any task currently\n-requesting the lock.  On targets that support the\n-`Conccurent_Readers_Locking` policy, locking is implemented with a\n-read/write lock allowing multiple propected object functions to enter\n+requesting the lock. On targets that support the\n+`Concurrent_Readers_Locking` policy, locking is implemented with a\n+read/write lock allowing multiple protected object functions to enter\n concurrently.\n \n *"}, {"sha": "e5f0c82ea5e0061918167c5c226f683780ecb344", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_pragmas.rst", "status": "modified", "additions": 106, "deletions": 39, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -564,7 +564,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Asynch_Readers   [ (boolean_EXPRESSION) ];\n+  pragma Asynch_Readers [ (boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect `Async_Readers` in\n the SPARK 2014 Reference Manual, section 7.1.2.\n@@ -578,7 +578,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Asynch_Writers   [ (boolean_EXPRESSION) ];\n+  pragma Asynch_Writers [ (boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect `Async_Writers` in\n the SPARK 2014 Reference Manual, section 7.1.2.\n@@ -1203,9 +1203,9 @@ following is an example of use within a package spec:\n   package Math_Functions is\n      ...\n      function Sqrt (Arg : Float) return Float;\n-     pragma Contract_Cases ((Arg in 0 .. 99) => Sqrt'Result < 10,\n-                            Arg >= 100       => Sqrt'Result >= 10,\n-                            others           => Sqrt'Result = 0);\n+     pragma Contract_Cases (((Arg in 0.0 .. 99.0) => Sqrt'Result < 10.0,\n+                             Arg >= 100.0         => Sqrt'Result >= 10.0,\n+                             others               => Sqrt'Result = 0.0));\n      ...\n   end Math_Functions;\n \n@@ -1380,6 +1380,21 @@ This pragma is standard in Ada 2012, but is available in all earlier\n versions of Ada as an implementation-defined pragma.\n See Ada 2012 Reference Manual for details.\n \n+Pragma Deadline_Floor\n+=====================\n+\n+Syntax:\n+\n+\n+.. code-block:: ada\n+\n+  pragma Deadline_Floor (time_span_EXPRESSION);\n+\n+\n+This pragma applies only to protected types and specifies the floor\n+deadline inherited by a task when the task enters a protected object.\n+It is effective only when the EDF scheduling policy is used.\n+\n .. _Pragma-Default_Initial_Condition:\n \n Pragma Default_Initial_Condition\n@@ -1628,7 +1643,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Effective_Reads  [ (boolean_EXPRESSION) ];\n+  pragma Effective_Reads [ (boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect `Effective_Reads` in\n the SPARK 2014 Reference Manual, section 7.1.2.\n@@ -2248,14 +2263,13 @@ Syntax:\n   pragma Favor_Top_Level (type_NAME);\n \n \n-The named type must be an access-to-subprogram type. This pragma is an\n-efficiency hint to the compiler, regarding the use of 'Access or\n-'Unrestricted_Access on nested (non-library-level) subprograms. The\n-pragma means that nested subprograms are not used with this type, or\n-are rare, so that the generated code should be efficient in the\n-top-level case. When this pragma is used, dynamically generated\n-trampolines may be used on some targets for nested subprograms.\n-See also the No_Implicit_Dynamic_Code restriction.\n+The argument of pragma `Favor_Top_Level` must be a named access-to-subprogram\n+type. This pragma is an efficiency hint to the compiler, regarding the use of\n+`'Access` or `'Unrestricted_Access` on nested (non-library-level) subprograms.\n+The pragma means that nested subprograms are not used with this type, or are\n+rare, so that the generated code should be efficient in the top-level case.\n+When this pragma is used, dynamically generated trampolines may be used on some\n+targets for nested subprograms. See restriction `No_Implicit_Dynamic_Code`.\n \n Pragma Finalize_Storage_Only\n ============================\n@@ -2268,11 +2282,14 @@ Syntax:\n   pragma Finalize_Storage_Only (first_subtype_LOCAL_NAME);\n \n \n-This pragma allows the compiler not to emit a Finalize call for objects\n-defined at the library level.  This is mostly useful for types where\n-finalization is only used to deal with storage reclamation since in most\n-environments it is not necessary to reclaim memory just before terminating\n-execution, hence the name.\n+The argument of pragma `Finalize_Storage_Only` must denote a local type which\n+is derived from `Ada.Finalization.Controlled` or `Limited_Controlled`. The\n+pragma suppresses the call to `Finalize` for declared library-level objects\n+of the argument type. This is mostly useful for types where finalization is\n+only used to deal with storage reclamation since in most environments it is\n+not necessary to reclaim memory just before terminating execution, hence the\n+name. Note that this pragma does not suppress Finalize calls for library-level\n+heap-allocated objects (see pragma `No_Heap_Finalization`).\n \n Pragma Float_Representation\n ===========================\n@@ -2849,9 +2866,13 @@ Syntax:\n   pragma Inline_Always (NAME [, NAME]);\n \n \n-Similar to pragma `Inline` except that inlining is not subject to\n-the use of option *-gnatn* or *-gnatN* and the inlining\n-happens regardless of whether these options are used.\n+Similar to pragma `Inline` except that inlining is unconditional.\n+Inline_Always instructs the compiler to inline every direct call to the\n+subprogram or else to emit a compilation error, independently of any\n+option, in particular *-gnatn* or *-gnatN* or the optimization level.\n+It is an error to take the address or access of `NAME`. It is also an error to\n+apply this pragma to a primitive operation of a tagged type. Thanks to such\n+restrictions, the compiler is allowed to remove the out-of-line body of `NAME`.\n \n Pragma Inline_Generic\n =====================\n@@ -2974,7 +2995,9 @@ Interrupts can be in one of three states:\n \n   The interrupt is reserved (no Ada handler can be installed), and the\n   Ada run-time may not install a handler. As a result you are guaranteed\n-  standard system default action if this interrupt is raised.\n+  standard system default action if this interrupt is raised. This also allows\n+  installing a low level handler via C APIs such as sigaction(), outside\n+  of Ada control.\n \n * Runtime\n \n@@ -2984,7 +3007,8 @@ Interrupts can be in one of three states:\n \n * User\n \n-  The interrupt is unreserved.  The user may install a handler to provide\n+  The interrupt is unreserved.  The user may install an Ada handler via\n+  Ada.Interrupts and pragma Interrupt_Handler or Attach_Handler to provide\n   some other action.\n \n These states are the allowed values of the `State` parameter of the\n@@ -3614,12 +3638,44 @@ Syntax:\n \n This is a program unit pragma (there is also an equivalent aspect of the\n same name) that establishes the restriction `No_Elaboration_Code` for\n-the current unit and any extended main source units (body and subunits.\n-It also has has the effect of enforcing a transitive application of this\n-aspect, so that if any unit is implicitly or explicitly WITH'ed by the\n+the current unit and any extended main source units (body and subunits).\n+It also has the effect of enforcing a transitive application of this\n+aspect, so that if any unit is implicitly or explicitly with'ed by the\n current unit, it must also have the No_Elaboration_Code_All aspect set.\n It may be applied to package or subprogram specs or their generic versions.\n \n+Pragma No_Heap_Finalization\n+===========================\n+\n+Syntax:\n+\n+\n+::\n+\n+  pragma No_Heap_Finalization [ (first_subtype_LOCAL_NAME) ];\n+\n+\n+Pragma `No_Heap_Finalization` may be used as a configuration pragma or as a\n+type-specific pragma.\n+\n+In its configuration form, the pragma must appear within a configuration file\n+such as gnat.adc, without an argument. The pragma suppresses the call to\n+`Finalize` for heap-allocated objects created through library-level named\n+access-to-object types in cases where the designated type requires finalization\n+actions.\n+\n+In its type-specific form, the argument of the pragma must denote a\n+library-level named access-to-object type. The pragma suppresses the call to\n+`Finalize` for heap-allocated objects created through the specific access type\n+in cases where the designated type requires finalization actions.\n+\n+It is still possible to finalize such heap-allocated objects by explicitly\n+deallocating them.\n+\n+A library-level named access-to-object type declared within a generic unit will\n+lose its `No_Heap_Finalization` pragma when the corresponding instance does not\n+appear at the library level.\n+\n Pragma No_Inline\n ================\n \n@@ -4855,14 +4911,16 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Profile (Ravenscar | Restricted | Rational | GNAT_Extended_Ravenscar);\n+  pragma Profile (Ravenscar | Restricted | Rational |\n+                  GNAT_Extended_Ravenscar | GNAT_Ravenscar_EDF );\n \n \n This pragma is standard in Ada 2005, but is available in all earlier\n versions of Ada as an implementation-defined pragma. This is a\n configuration pragma that establishes a set of configuration pragmas\n that depend on the argument. `Ravenscar` is standard in Ada 2005.\n-The other possibilities (`Restricted`, `Rational`, `GNAT_Extended_Ravenscar`)\n+The other possibilities (`Restricted`, `Rational`,\n+`GNAT_Extended_Ravenscar`, `GNAT_Ravenscar_EDF`)\n are implementation-defined. The set of configuration pragmas\n is defined in the following sections.\n \n@@ -4992,6 +5050,11 @@ is defined in the following sections.\n   The ``Max_Protected_Entries``, ``Max_Entry_Queue_Length``, and\n   ``No_Relative_Delay`` restrictions have been removed.\n \n+* Pragma Profile (GNAT_Ravenscar_EDF)\n+\n+  This profile corresponds to the Ravenscar profile but using\n+  EDF_Across_Priority as the Task_Scheduling_Policy.\n+\n * Pragma Profile (Restricted)\n \n   This profile corresponds to the GNAT restricted run time. It\n@@ -5536,26 +5599,26 @@ Syntax:\n \n   pragma Secondary_Stack_Size (integer_EXPRESSION);\n \n-This pragma appears within the task definition of a single task declaration \n-or a task type declaration (like pragma `Storage_Size`) and applies to all \n-task objects of that type. The argument specifies the size of the secondary \n+This pragma appears within the task definition of a single task declaration\n+or a task type declaration (like pragma `Storage_Size`) and applies to all\n+task objects of that type. The argument specifies the size of the secondary\n stack to be used by these task objects, and must be of an integer type. The\n-secondary stack is used to handle functions that return a variable-sized \n+secondary stack is used to handle functions that return a variable-sized\n result, for example a function returning an unconstrained String.\n \n Note this pragma only applies to targets using fixed secondary stacks, like\n-VxWorks 653 and bare board targets, where a fixed block for the \n+VxWorks 653 and bare board targets, where a fixed block for the\n secondary stack is allocated from the primary stack of the task. By default,\n these targets assign a percentage of the primary stack for the secondary stack,\n-as defined by `System.Parameter.Sec_Stack_Percentage`. With this pragma, \n+as defined by `System.Parameter.Sec_Stack_Percentage`. With this pragma,\n an `integer_EXPRESSION` of bytes is assigned from the primary stack instead.\n \n-For most targets, the pragma does not apply as the secondary stack grows on \n-demand: allocated as a chain of blocks in the heap. The default size of these \n-blocks can be modified via the `-D` binder option as described in \n+For most targets, the pragma does not apply as the secondary stack grows on\n+demand: allocated as a chain of blocks in the heap. The default size of these\n+blocks can be modified via the `-D` binder option as described in\n :title:`GNAT User's Guide`.\n \n-Note that no check is made to see if the secondary stack can fit inside the \n+Note that no check is made to see if the secondary stack can fit inside the\n primary stack.\n \n Note the pragma cannot appear when the restriction `No_Secondary_Stack`\n@@ -7384,6 +7447,10 @@ also be used at any point that a pragma is allowed, and it is permissible\n to have more than one such pragma in a file, allowing multiple encodings\n to appear within the same file.\n \n+However, note that the pragma cannot immediately precede the relevant\n+wide character, because then the previous encoding will still be in\n+effect, causing \"illegal character\" errors.\n+\n The argument can be an identifier or a character literal. In the identifier\n case, it is one of `HEX`, `UPPER`, `SHIFT_JIS`,\n `EUC`, `UTF8`, or `BRACKETS`. In the character literal"}, {"sha": "979752fa409b4f0d136edfa32df7ece4ae6e3db5", "filename": "gcc/ada/doc/gnat_rm/implementation_of_specific_ada_features.rst", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_of_specific_ada_features.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_of_specific_ada_features.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_of_specific_ada_features.rst?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -285,6 +285,31 @@ Note that this simple scheme preserves the relative order of the tasks\n that were ready to execute in the priority queue where R has been\n placed at the end.\n \n+.. Support_for_Locking_Policies\n+\n+Support for Locking Policies\n+----------------------------\n+\n+This section specifies which policies specified by pragma Locking_Policy\n+are supported on which platforms.\n+\n+GNAT supports the standard `Ceiling_Locking` policy, and the\n+implementation defined `Inheritance_Locking` and\n+`Concurrent_Readers_Locking` policies.\n+\n+`Ceiling_Locking` is supported on all platforms if the operating system\n+supports it. In particular, `Ceiling_Locking` is not supported on\n+VxWorks.\n+`Inheritance_Locking` is supported on\n+Linux,\n+Darwin (Mac OS X),\n+LynxOS 178,\n+and VxWorks.\n+`Concurrent_Readers_Locking` is supported on Linux.\n+\n+Note that on Linux, `Ceiling_Locking` requires the program to be running\n+with root privileges. Otherwise, the policy is ignored.\n+\n .. _GNAT_Implementation_of_Shared_Passive_Packages:\n \n GNAT Implementation of Shared Passive Packages"}, {"sha": "72987b4688f9b358344c19ce576c3be7d533822c", "filename": "gcc/ada/doc/gnat_rm/representation_clauses_and_pragmas.rst", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_rm%2Frepresentation_clauses_and_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_rm%2Frepresentation_clauses_and_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Frepresentation_clauses_and_pragmas.rst?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -1576,10 +1576,9 @@ check Alignment_Check is suppressed, or if\n `pragma Restrictions (No_Elaboration_Code)` is in effect. It is also\n suppressed by default on non-strict alignment machines (such as the x86).\n \n-Finally, GNAT does not permit overlaying of objects of controlled types or\n-composite types containing a controlled component. In most cases, the compiler\n-can detect an attempt at such overlays and will generate a warning at compile\n-time and a Program_Error exception at run time.\n+Finally, GNAT does not permit overlaying of objects of class-wide types. In\n+most cases, the compiler can detect an attempt at such overlays and will\n+generate a warning at compile time and a Program_Error exception at run time.\n \n .. index:: Export\n "}, {"sha": "2c36592d058f5d727de96b453c0aa3cd5421c139", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -2713,6 +2713,8 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n \n   * :samp:`-gnatw.h` (holes in record layouts)\n \n+  * :samp:`-gnatw.j` (late primitives of tagged types)\n+\n   * :samp:`-gnatw.k` (redefinition of names in standard)\n \n   * :samp:`-gnatwl` (elaboration warnings)\n@@ -3186,6 +3188,24 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n   This switch disables warnings on use of obsolescent features.\n \n \n+.. index:: -gnatw.j  (gcc)\n+\n+:samp:`-gnatw.j`\n+  *Activate warnings on late declarations of tagged type primitives.*\n+\n+  This switch activates warnings on visible primitives added to a\n+  tagged type after deriving a private extension from it.\n+\n+\n+.. index:: -gnatw.J  (gcc)\n+\n+:samp:`-gnatw.J`\n+  *Suppress warnings on late declarations of tagged type primitives.*\n+\n+  This switch suppresses warnings on visible primitives added to a\n+  tagged type after deriving a private extension from it.\n+\n+\n .. index:: -gnatwk  (gcc)\n \n :samp:`-gnatwk`\n@@ -6114,7 +6134,7 @@ be presented in subsequent sections.\n   sized result, for example a function returning an unconstrained\n   String. There are two ways in which this secondary stack is allocated.\n \n-  For most targets, the secondary stack is growing on demand and is allocated\n+  For most targets, the secondary stack grows on demand and is allocated\n   as a chain of blocks in the heap. The -D option is not very\n   relevant. It only give some control over the size of the allocated\n   blocks (whose size is the minimum of the default secondary stack size value,"}, {"sha": "39becd673f1ba09784d947bde672c1a60f8ff1c4", "filename": "gcc/ada/doc/gnat_ugn/gnat_and_program_execution.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -3354,7 +3354,7 @@ and similarly for `Mass`, `Time`, `Electric_Current`,\n The package also defines conventional names for values of each unit, for\n example:\n \n-  .. code-block\":: ada\n+  .. code-block:: ada\n \n      m   : constant Length           := 1.0;\n      kg  : constant Mass             := 1.0;"}, {"sha": "406455dd783327897139bdad0044bd58c9620760", "filename": "gcc/ada/doc/gnat_ugn/gnat_utility_programs.rst", "status": "modified", "additions": 88, "deletions": 127, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -535,20 +535,20 @@ The following switches are available for *gnatxref*:\n \n .. index:: --version (gnatxref)\n \n-:samp:`-version`\n+:samp:`--version`\n   Display Copyright and version, then exit disregarding all other options.\n \n \n .. index:: --help (gnatxref)\n \n-:samp:`-help`\n+:samp:`--help`\n   If *--version* was not used, display usage, then exit disregarding\n   all other options.\n \n \n .. index:: -a (gnatxref)\n \n-:samp:`a`\n+:samp:`-a`\n   If this switch is present, `gnatfind` and `gnatxref` will parse\n   the read-only files found in the library search path. Otherwise, these files\n   will be ignored. This option can be used to protect Gnat sources or your own\n@@ -559,34 +559,34 @@ The following switches are available for *gnatxref*:\n \n .. index:: -aIDIR (gnatxref)\n \n-:samp:`aI{DIR}`\n+:samp:`-aI{DIR}`\n   When looking for source files also look in directory DIR. The order in which\n   source file search is undertaken is the same as for *gnatmake*.\n \n \n .. index:: -aODIR (gnatxref)\n \n :samp:`aO{DIR}`\n-  When searching for library and object files, look in directory\n+  When -searching for library and object files, look in directory\n   DIR. The order in which library files are searched is the same as for\n   *gnatmake*.\n \n \n .. index:: -nostdinc (gnatxref)\n \n-:samp:`nostdinc`\n+:samp:`-nostdinc`\n   Do not look for sources in the system default directory.\n \n \n .. index:: -nostdlib (gnatxref)\n \n-:samp:`nostdlib`\n+:samp:`-nostdlib`\n   Do not look for library files in the system default directory.\n \n \n .. index:: --ext (gnatxref)\n \n-:samp:`-ext={extension}`\n+:samp:`--ext={extension}`\n   Specify an alternate ali file extension. The default is `ali` and other\n   extensions (e.g. `gli` for C/C++ sources when using *-fdump-xref*)\n   may be specified via this switch. Note that if this switch overrides the\n@@ -595,60 +595,58 @@ The following switches are available for *gnatxref*:\n \n .. index:: --RTS (gnatxref)\n \n-:samp:`-RTS={rts-path}`\n+:samp:`--RTS={rts-path}`\n   Specifies the default location of the runtime library. Same meaning as the\n   equivalent *gnatmake* flag (:ref:`Switches_for_gnatmake`).\n \n \n .. index:: -d (gnatxref)\n \n-:samp:`d`\n+:samp:`-d`\n   If this switch is set `gnatxref` will output the parent type\n   reference for each matching derived types.\n \n \n .. index:: -f (gnatxref)\n \n-:samp:`f`\n+:samp:`-f`\n   If this switch is set, the output file names will be preceded by their\n   directory (if the file was found in the search path). If this switch is\n   not set, the directory will not be printed.\n \n \n .. index:: -g (gnatxref)\n \n-:samp:`g`\n+:samp:`-g`\n   If this switch is set, information is output only for library-level\n   entities, ignoring local entities. The use of this switch may accelerate\n   `gnatfind` and `gnatxref`.\n \n \n .. index:: -IDIR (gnatxref)\n \n-:samp:`I{DIR}`\n+:samp:`-I{DIR}`\n   Equivalent to :samp:`-aODIR -aIDIR`.\n \n \n .. index:: -pFILE (gnatxref)\n \n-:samp:`p{FILE}`\n-  Specify a project file to use.\n+:samp:`-p{FILE}`\n+  Specify a configuration file to use to list the source and object directories.\n \n-  By default, `gnatxref` and `gnatfind` will try to locate a\n-  project file in the current directory.\n+  If a file is specified, then the content of the source directory and object\n+  directory lines are added as if they had been specified respectively\n+  by :samp:`-aI` and :samp:`-aO`.\n \n-  If a project file is either specified or found by the tools, then the content\n-  of the source directory and object directory lines are added as if they\n-  had been specified respectively by :samp:`-aI`\n-  and :samp:`-aO`.\n+  See :ref:`Configuration_Files_for_gnatxref_and_gnatfind` for the syntax\n+  of this configuration file.\n \n-:samp:`u`\n+:samp:`-u`\n   Output only unused symbols. This may be really useful if you give your\n   main compilation unit on the command line, as `gnatxref` will then\n   display every unused entity and 'with'ed package.\n \n-\n-:samp:`v`\n+:samp:`-v`\n   Instead of producing the default output, `gnatxref` will generate a\n   :file:`tags` file that can be used by vi. For examples how to use this\n   feature, see :ref:`Examples_of_gnatxref_Usage`. The tags file is output\n@@ -719,7 +717,6 @@ with the following iterpretation of the command arguments:\n   Note that if you specify at least one file in this part, `gnatfind` may\n   sometimes not be able to find the body of the subprograms.\n \n-\n At least one of 'sourcefile' or 'pattern' has to be present on\n the command line.\n \n@@ -733,14 +730,14 @@ The following switches are available:\n \n .. index:: --help (gnatfind)\n \n-:samp:`-help`\n+:samp:`--help`\n   If *--version* was not used, display usage, then exit disregarding\n   all other options.\n \n \n .. index:: -a (gnatfind)\n \n-:samp:`a`\n+:samp:`-a`\n   If this switch is present, `gnatfind` and `gnatxref` will parse\n   the read-only files found in the library search path. Otherwise, these files\n   will be ignored. This option can be used to protect Gnat sources or your own\n@@ -751,34 +748,34 @@ The following switches are available:\n \n .. index:: -aIDIR (gnatfind)\n \n-:samp:`aI{DIR}`\n+:samp:`-aI{DIR}`\n   When looking for source files also look in directory DIR. The order in which\n   source file search is undertaken is the same as for *gnatmake*.\n \n \n .. index:: -aODIR (gnatfind)\n \n-:samp:`aO{DIR}`\n+:samp:`-aO{DIR}`\n   When searching for library and object files, look in directory\n   DIR. The order in which library files are searched is the same as for\n   *gnatmake*.\n \n \n .. index:: -nostdinc (gnatfind)\n \n-:samp:`nostdinc`\n+:samp:`-nostdinc`\n   Do not look for sources in the system default directory.\n \n \n .. index:: -nostdlib (gnatfind)\n \n-:samp:`nostdlib`\n+:samp:`-nostdlib`\n   Do not look for library files in the system default directory.\n \n \n .. index:: --ext (gnatfind)\n \n-:samp:`-ext={extension}`\n+:samp:`--ext={extension}`\n   Specify an alternate ali file extension. The default is `ali` and other\n   extensions (e.g. `gli` for C/C++ sources when using *-fdump-xref*)\n   may be specified via this switch. Note that if this switch overrides the\n@@ -787,64 +784,63 @@ The following switches are available:\n \n .. index:: --RTS (gnatfind)\n \n-:samp:`-RTS={rts-path}`\n+:samp:`--RTS={rts-path}`\n   Specifies the default location of the runtime library. Same meaning as the\n   equivalent *gnatmake* flag (:ref:`Switches_for_gnatmake`).\n \n \n .. index:: -d (gnatfind)\n \n-:samp:`d`\n+:samp:`-d`\n   If this switch is set, then `gnatfind` will output the parent type\n   reference for each matching derived types.\n \n \n .. index:: -e (gnatfind)\n \n-:samp:`e`\n+:samp:`-e`\n   By default, `gnatfind` accept the simple regular expression set for\n   `pattern`. If this switch is set, then the pattern will be\n   considered as full Unix-style regular expression.\n \n \n .. index:: -f (gnatfind)\n \n-:samp:`f`\n+:samp:`-f`\n   If this switch is set, the output file names will be preceded by their\n   directory (if the file was found in the search path). If this switch is\n   not set, the directory will not be printed.\n \n \n .. index:: -g (gnatfind)\n \n-:samp:`g`\n+:samp:`-g`\n   If this switch is set, information is output only for library-level\n   entities, ignoring local entities. The use of this switch may accelerate\n   `gnatfind` and `gnatxref`.\n \n \n .. index:: -IDIR (gnatfind)\n \n-:samp:`I{DIR}`\n+:samp:`-I{DIR}`\n   Equivalent to :samp:`-aODIR -aIDIR`.\n \n \n .. index:: -pFILE (gnatfind)\n \n-:samp:`p{FILE}`\n-  Specify a project file.\n-  By default, `gnatxref` and `gnatfind` will try to locate a\n-  project file in the current directory.\n+:samp:`-p{FILE}`\n+  Specify a configuration file to use to list the source and object directories.\n \n-  If a project file is either specified or found by the tools, then the content\n-  of the source directory and object directory lines are added as if they\n-  had been specified respectively by :samp:`-aI` and\n-  :samp:`-aO`.\n+  If a file is specified, then the content of the source directory and object\n+  directory lines are added as if they had been specified respectively\n+  by :samp:`-aI` and :samp:`-aO`.\n \n+  See :ref:`Configuration_Files_for_gnatxref_and_gnatfind` for the syntax\n+  of this configuration file.\n \n .. index:: -r (gnatfind)\n \n-:samp:`r`\n+:samp:`-r`\n   By default, `gnatfind` will output only the information about the\n   declaration, body or type completion of the entities. If this switch is\n   set, the `gnatfind` will locate every reference to the entities in\n@@ -854,14 +850,14 @@ The following switches are available:\n \n .. index:: -s (gnatfind)\n \n-:samp:`s`\n+:samp:`-s`\n   If this switch is set, then `gnatfind` will output the content\n   of the Ada source file lines were the entity was found.\n \n \n .. index:: -t (gnatfind)\n \n-:samp:`t`\n+:samp:`-t`\n   If this switch is set, then `gnatfind` will output the type hierarchy for\n   the specified type. It act like -d option but recursively from parent\n   type to parent type. When this switch is set it is not possible to\n@@ -877,95 +873,30 @@ As stated previously, gnatfind will search in every directory in the\n search path. You can force it to look only in the current directory if\n you specify `*` at the end of the command line.\n \n-.. _Project_Files_for_gnatxref_and_gnatfind:\n+.. _Configuration_Files_for_gnatxref_and_gnatfind:\n \n-Project Files for *gnatxref* and *gnatfind*\n--------------------------------------------\n+Configuration Files for *gnatxref* and *gnatfind*\n+-------------------------------------------------\n \n-Project files allow a programmer to specify how to compile its\n-application, where to find sources, etc.  These files are used\n-primarily by GPS, but they can also be used\n-by the two tools `gnatxref` and `gnatfind`.\n+Configuration files are used by `gnatxref` and `gnatfind` to specify\n+the list of source and object directories to consider. They can be\n+specified via the :samp:`-p` switch.\n \n-A project file name must end with :file:`.gpr`. If a single one is\n-present in the current directory, then `gnatxref` and `gnatfind` will\n-extract the information from it. If multiple project files are found, none of\n-them is read, and you have to use the :samp:`-p` switch to specify the one\n-you want to use.\n-\n-The following lines can be included, even though most of them have default\n-values which can be used in most cases.\n-The lines can be entered in any order in the file.\n-Except for :file:`src_dir` and :file:`obj_dir`, you can only have one instance of\n-each line. If you have multiple instances, only the last one is taken into\n-account.\n+The following lines can be included, in any order in the file:\n \n * *src_dir=DIR*\n     [default: `\"./\"`].\n     Specifies a directory where to look for source files. Multiple `src_dir`\n     lines can be specified and they will be searched in the order they\n     are specified.\n \n-\n * *obj_dir=DIR*\n     [default: `\"./\"`].\n     Specifies a directory where to look for object and library files. Multiple\n     `obj_dir` lines can be specified, and they will be searched in the order\n     they are specified\n \n-\n-* *comp_opt=SWITCHES*\n-    [default: `\"\"`].\n-    Creates a variable which can be referred to subsequently by using\n-    the `${comp_opt}` notation. This is intended to store the default\n-    switches given to *gnatmake* and *gcc*.\n-\n-\n-* *bind_opt=SWITCHES*\n-    [default: `\"\"`].\n-    Creates a variable which can be referred to subsequently by using\n-    the :samp:`${bind_opt}` notation. This is intended to store the default\n-    switches given to *gnatbind*.\n-\n-\n-* *link_opt=SWITCHES*\n-    [default: `\"\"`].\n-    Creates a variable which can be referred to subsequently by using\n-    the :samp:`${link_opt}` notation. This is intended to store the default\n-    switches given to *gnatlink*.\n-\n-\n-* *main=EXECUTABLE*\n-    [default: `\"\"`].\n-    Specifies the name of the executable for the application. This variable can\n-    be referred to in the following lines by using the :samp:`{${main}` notation.\n-\n-\n-* *comp_cmd=COMMAND*\n-    [default: `\"gcc -c -I${src_dir} -g -gnatq\"`].\n-    Specifies the command used to compile a single file in the application.\n-\n-\n-* *make_cmd=COMMAND*\n-    [default: `\"gnatmake ${main} -aI${src_dir}\n-    -aO${obj_dir} -g -gnatq -cargs ${comp_opt}\n-    -bargs ${bind_opt} -largs ${link_opt}\"`].\n-    Specifies the command used to recompile the whole application.\n-\n-\n-* *run_cmd=COMMAND*\n-    [default: `\"${main}\"`].\n-    Specifies the command used to run the application.\n-\n-\n-* *debug_cmd=COMMAND*\n-    [default: `\"gdb ${main}\"`].\n-    Specifies the command used to debug the application\n-\n-\n-*gnatxref* and *gnatfind* only take into account the\n-`src_dir` and `obj_dir` lines, and ignore the others.\n-\n+Any other line will be silently ignored.\n \n .. _Regular_Expressions_in_gnatfind_and_gnatxref:\n \n@@ -3316,7 +3247,8 @@ Alternatively, you may run the script using the following command line:\n    :samp:`--par_threshold={nnn}`\n      If the number of parameter specifications is greater than `nnn`\n      (or equal to `nnn` in case of a function), start each specification from\n-     a new line. This feature is disabled by default.\n+     a new line. If `nnn` is 0, and `--no-separate-is` was not specified, then\n+     the \"is\" is placed on a separate line. This feature is disabled by default.\n \n \n    .. _Setting_the_Source_Search_Path:\n@@ -4356,6 +4288,10 @@ Alternatively, you may run the script using the following command line:\n   :samp:`-r`\n     Recursively considers all sources from all projects.\n \n+    .. index:: -files (gnattest)\n+\n+  :samp:`-files={filename}`\n+    The name of a text file containing a list of Ada source files to process.\n \n     .. index:: --RTS (gnattest)\n \n@@ -4625,7 +4561,7 @@ Alternatively, you may run the script using the following command line:\n     ::\n \n        $ cd obj/driver\n-       $ gnatmake -Ptest_driver\n+       $ gprbuild -Ptest_driver\n        $ test_runner\n \n   One failed test with the diagnosis \"test not implemented\" is reported.\n@@ -4852,7 +4788,7 @@ Alternatively, you may run the script using the following command line:\n   Testing with Contracts\n   ----------------------\n \n-  *gnattest* supports pragmas *Precondition*, *Postcondition*, and *Test_Case*,\n+  *gnattest* supports pragmas *Pre*, *Post*, and *Test_Case*,\n   as well as the corresponding Ada 2012 aspects.\n   Test routines are generated, one per each *Test_Case* associated with a tested\n   subprogram. Those test routines have special wrappers for tested functions\n@@ -5002,6 +4938,29 @@ Alternatively, you may run the script using the following command line:\n      attempting to use this powerful feature.\n \n \n+  .. _Gnatcov_Integration:\n+\n+  Integration with GNATcoverage\n+  -----------------------------\n+\n+  In addition to the harness, *gnattest* generates a Makefile. This Makefile\n+  provides targets for building the test drivers and also the targets for\n+  computing the coverage information using GNATcoverage framework when this\n+  coverage analysis tool is available. The target ``coverage`` fully automates\n+  the process: it will first build all test drivers, then run them under\n+  GNATcoverage, analyze individual trace files, and finally aggregate them:\n+\n+    ::\n+\n+        make coverage\n+\n+  GNATcoverage options, such as coverage criteria and generated report format,\n+  can be adjusted using Makefile variables provided for this purpose.\n+\n+  Note that coverage targets are not generated in the Makefile when\n+  --separate-drivers=test is passed to gnattest.\n+\n+\n   .. _Putting_Tests_under_Version_Control:\n \n   Putting Tests under Version Control\n@@ -5075,10 +5034,12 @@ Alternatively, you may run the script using the following command line:\n       from projects imported either directly or indirectly by ``proj``.\n       Otherwise this option has no effect.\n \n-   :samp:`-U {main_unit}`\n+   :samp:`-U {source_file}`\n       Similar to :samp:`-U`, but if no sources are specified then\n       process only those source files for units in the closure of\n-      `main_unit`.\n+      the Ada source contained in `source_file`. Note that this option\n+      expects the source file name but not the Ada unit name as its\n+      parameter.\n \n    :samp:`-X{name}={val}`\n       Indicates that the external variable ``name`` in the project has the"}, {"sha": "3618b0abf12b0946e03b44099f9dd549db2c8ca9", "filename": "gcc/ada/doc/gnat_ugn/platform_specific_information.rst", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -237,6 +237,20 @@ value greater than 0.0, or else use the corresponding *-T*\n binder option.\n \n \n+To make sure a program is running as root, you can put something like\n+this in a library package body in your application:\n+\n+  .. code-block:: ada\n+\n+     function geteuid return Integer;\n+     pragma Import (C, geteuid, \"geteuid\");\n+     Ignore : constant Boolean :=\n+       (if geteuid = 0 then True else raise Program_Error with \"must be root\");\n+\n+It gets the effective user id, and if it's not 0 (i.e. root), it raises\n+Program_Error.\n+\n+\n .. index:: Solaris Sparc threads libraries\n \n .. _Solaris-Specific_Considerations:\n@@ -2215,7 +2229,7 @@ This setting can be done with *gnatlink* using either of the following:\n \n   This sets the stack reserve size to 0x1000000 bytes. Note that with\n   *-Wl* option it is not possible to set the stack commit size\n-  because the coma is a separator for this option.\n+  because the comma is a separator for this option.\n \n \n .. _Setting_Heap_Size_from_gnatlink:\n@@ -2244,7 +2258,7 @@ Under Windows systems, it is possible to specify the program heap size from\n \n   This sets the heap reserve size to 0x1000000 bytes. Note that with\n   *-Wl* option it is not possible to set the heap commit size\n-  because the coma is a separator for this option.\n+  because the comma is a separator for this option.\n \n \n .. _Win32_Specific_Addons:"}, {"sha": "d4985cd614f4cc3db7920f7ad903179205008822", "filename": "gcc/ada/doc/gnat_ugn/the_gnat_compilation_model.rst", "status": "modified", "additions": 142, "deletions": 103, "changes": 245, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -2796,17 +2796,17 @@ The preprocessing language allows such constructs as\n .. code-block:: c\n \n        #if DEBUG or else (PRIORITY > 4) then\n-          bunch of declarations\n+          sequence of declarations\n        #else\n-          completely different bunch of declarations\n+          completely different sequence of declarations\n        #end if;\n \n The values of the symbols `DEBUG` and `PRIORITY` can be\n defined either on the command line or in a separate file.\n \n The other way of running the preprocessor is even closer to the C style and\n often more convenient. In this approach the preprocessing is integrated into\n-the compilation process. The compiler is fed the preprocessor input which\n+the compilation process. The compiler is given the preprocessor input which\n includes `#if` lines etc, and then the compiler carries out the\n preprocessing internally and processes the resulting output.\n For more details on this approach, see :ref:`Integrated_Preprocessing`.\n@@ -2831,8 +2831,8 @@ For further discussion of conditional compilation in general, see\n Preprocessing Symbols\n ^^^^^^^^^^^^^^^^^^^^^\n \n-Preprocessing symbols are defined in definition files and referred to in\n-sources to be preprocessed. A Preprocessing symbol is an identifier, following\n+Preprocessing symbols are defined in *definition files* and referenced in the\n+sources to be preprocessed. A preprocessing symbol is an identifier, following\n normal Ada (case-insensitive) rules for its syntax, with the restriction that\n all characters need to be in the ASCII set (no accented letters).\n \n@@ -2859,7 +2859,7 @@ where\n * *outfile*\n     is the full name of the output file, which is an Ada source\n     in standard Ada form. When used with GNAT, this file name will\n-    normally have an ads or adb suffix.\n+    normally have an *ads* or *adb* suffix.\n \n * *deffile*\n     is the full name of a text file containing definitions of\n@@ -2880,7 +2880,7 @@ Switches for `gnatprep`\n .. index:: --help (gnatprep)\n \n :samp:`--help`\n-  If *--version* was not used, display usage, then exit disregarding\n+  If :option:`--version` was not used, display usage and then exit disregarding\n   all other options.\n \n .. index:: -b (gnatprep)\n@@ -2904,15 +2904,15 @@ Switches for `gnatprep`\n   Causes comments to be scanned. Normally comments are ignored by gnatprep.\n   If this option is specified, then comments are scanned and any $symbol\n   substitutions performed as in program text. This is particularly useful\n-  when structured comments are used (e.g., when writing programs in the\n-  SPARK dialect of Ada). Note that this switch is not available when\n-  doing integrated preprocessing (it would be useless in this context\n-  since comments are ignored by the compiler in any case).\n+  when structured comments are used (e.g., for programs written in a\n+  pre-2014 version of the SPARK Ada subset). Note that this switch is not\n+  available when  doing integrated preprocessing (it would be useless in\n+  this context since comments are ignored by the compiler in any case).\n \n .. index:: -D (gnatprep)\n \n-:samp:`-D{symbol}={value}`\n-  Defines a new preprocessing symbol, associated with value. If no value is given\n+:samp:`-D{symbol}[={value}]`\n+  Defines a new preprocessing symbol with the specified value. If no value is given\n   on the command line, then symbol is considered to be `True`. This switch\n   can be used in place of a definition file.\n \n@@ -3119,84 +3119,134 @@ and then the substitution will occur as desired.\n Integrated Preprocessing\n ------------------------\n \n-GNAT sources may be preprocessed immediately before compilation.\n-In this case, the actual\n-text of the source is not the text of the source file, but is derived from it\n-through a process called preprocessing. Integrated preprocessing is specified\n-through switches *-gnatep* and/or *-gnateD*. *-gnatep*\n-indicates, through a text file, the preprocessing data to be used.\n-:samp:`-gnateD` specifies or modifies the values of preprocessing symbol.\n-Note that integrated preprocessing applies only to Ada source files, it is\n+As noted above, a file to be preprocessed consists of Ada source code\n+in which preprocessing lines have been inserted. However,\n+instead of using *gnatprep* to explicitly preprocess a file as a separate\n+step before compilation, you can carry out the preprocessing implicitly\n+as part of compilation. Such *integrated preprocessing*, which is the common\n+style with C, is performed when either or both of the following switches\n+are passed to the compiler:\n+\n+   *   :option:`-gnatep`, which specifies the *preprocessor data file*.\n+       This file dictates how the source files will be preprocessed (e.g., which\n+       symbol definition files apply to which sources).\n+\n+   *   :option:`-gnateD`, which defines values for preprocessing symbols.\n+\n+Integrated preprocessing applies only to Ada source files, it is\n not available for configuration pragma files.\n \n-Note that when integrated preprocessing is used, the output from the\n-preprocessor is not written to any external file. Instead it is passed\n-internally to the compiler. If you need to preserve the result of\n-preprocessing in a file, then you should use *gnatprep*\n-to perform the desired preprocessing in stand-alone mode.\n+With integrated preprocessing, the output from the preprocessor is not,\n+by default, written to any external file. Instead it is passed\n+internally to the compiler. To preserve the result of\n+preprocessing in a file, either run *gnatprep*\n+in standalone mode or else supply the :option:`-gnateG` switch\n+(described below) to the compiler.\n \n-It is recommended that *gnatmake* switch -s should be\n-used when Integrated Preprocessing is used. The reason is that preprocessing\n-with another Preprocessing Data file without changing the sources will\n-not trigger recompilation without this switch.\n+The *gnatmake* switch :option:`-s` should be used with integrated\n+preprocessing; otherwise the use of a different preprocessor data file\n+without changing the sources will not cause recompilation.\n \n-Note that *gnatmake* switch -m will almost\n+Note that the *gnatmake* switch :option:`-m` will almost\n always trigger recompilation for sources that are preprocessed,\n because *gnatmake* cannot compute the checksum of the source after\n preprocessing.\n \n-The actual preprocessing function is described in detail in section\n-:ref:`Preprocessing_with_gnatprep`. This section only describes how integrated\n-preprocessing is triggered and parameterized.\n-\n+The actual preprocessing function is described in detail in\n+:ref:`Preprocessing_with_gnatprep`. This section explains the switches\n+that relate to integrated preprocessing.\n \n .. index:: -gnatep (gcc)\n \n-:samp:`-gnatep={file}`\n-  This switch indicates to the compiler the file name (without directory\n-  information) of the preprocessor data file to use. The preprocessor data file\n-  should be found in the source directories. Alternatively when using project\n-  files, you can reference to the project file's directory via the\n-  ``project name'Project_Dir`` project attribute, e.g:\n-\n-  .. code-block:: gpr\n-\n-      project Prj is\n-         package Compiler is\n-            for Switches (\"Ada\") use\n-              (\"-gnatep=\" & Prj'Project_Dir & \"prep.def\");\n-         end Compiler;\n-      end Prj;\n-\n-  A preprocessing data file is a text file with significant lines indicating\n-  how should be preprocessed either a specific source or all sources not\n-  mentioned in other lines. A significant line is a nonempty, non-comment line.\n-  Comments are similar to Ada comments.\n-\n-  Each significant line starts with either a literal string or the character '*'.\n-  A literal string is the file name (without directory information) of the source\n-  to preprocess. A character '*' indicates the preprocessing for all the sources\n-  that are not specified explicitly on other lines (order of the lines is not\n-  significant). It is an error to have two lines with the same file name or two\n+:samp:`-gnatep={preprocessor_data_file}`\n+  This switch specifies the file name (without directory\n+  information) of the preprocessor data file. Either place this file\n+  in one of the source directories, or, when using project\n+  files, reference the project file's directory via the\n+  ``project_name'Project_Dir`` project attribute; e.g:\n+\n+     .. code-block:: gpr\n+\n+         project Prj is\n+            package Compiler is\n+               for Switches (\"Ada\") use\n+                 (\"-gnatep=\" & Prj'Project_Dir & \"prep.def\");\n+            end Compiler;\n+         end Prj;\n+\n+  A preprocessor data file is a text file that contains *preprocessor\n+  control lines*.  A preprocessor control line directs the preprocessing of\n+  either a particular source file, or, analogous to *others* in Ada,\n+  all sources not specified elsewhere in  the preprocessor data file.\n+  A preprocessor control line\n+  can optionally identify a *definition file* that assigns values to\n+  preprocessor symbols, as well as a list of switches that relate to\n+  preprocessing.\n+  Empty lines and comments (using Ada syntax) are also permitted, with no\n+  semantic effect.\n+\n+  Here's an example of a preprocessor data file:\n+\n+    .. code-block:: ada\n+\n+        \"toto.adb\"  \"prep.def\" -u\n+        --  Preprocess toto.adb, using definition file prep.def\n+        --  Undefined symbols are treated as False\n+\n+        * -c -DVERSION=V101\n+        --  Preprocess all other sources without using a definition file\n+        --  Suppressed lined are commented\n+        --  Symbol VERSION has the value V101\n+\n+        \"tata.adb\" \"prep2.def\" -s\n+        --  Preprocess tata.adb, using definition file prep2.def\n+        --  List all symbols with their values\n+\n+  A preprocessor control line has the following syntax:\n+\n+    ::\n+\n+        <preprocessor_control_line> ::=\n+           <preprocessor_input> [ <definition_file_name> ] { <switch> }\n+\n+        <preprocessor_input> ::= <source_file_name> | '*'\n+\n+        <definition_file_name> ::= <string_literal>\n+\n+        <source_file_name> := <string_literal>\n+\n+        <switch> := (See below for list)\n+\n+  Thus  each preprocessor control line starts with either a literal string or\n+  the character '*':\n+\n+  *  A literal string is the file name (without directory information) of the source\n+     file that will be input to the preprocessor.\n+\n+  *  The character '*' is a wild-card indicator; the additional parameters on the line\n+     indicate the preprocessing for all the sources\n+     that are not specified explicitly on other lines (the order of the lines is not\n+     significant).\n+\n+  It is an error to have two lines with the same file name or two\n   lines starting with the character '*'.\n \n-  After the file name or the character '*', another optional literal string\n-  indicating the file name of the definition file to be used for preprocessing\n+  After the file name or '*', an optional literal string specifies the name of\n+  the definition file to be used for preprocessing\n   (:ref:`Form_of_Definitions_File`). The definition files are found by the\n   compiler in one of the source directories. In some cases, when compiling\n   a source in a directory other than the current directory, if the definition\n   file is in the current directory, it may be necessary to add the current\n-  directory as a source directory through switch -I., otherwise\n+  directory as a source directory through the :option:`-I` switch; otherwise\n   the compiler would not find the definition file.\n \n-  Then, optionally, switches similar to those of `gnatprep` may\n-  be found. Those switches are:\n+  Finally, switches similar to those of *gnatprep* may optionally appear:\n \n   :samp:`-b`\n     Causes both preprocessor lines and the lines deleted by\n     preprocessing to be replaced by blank lines, preserving the line number.\n-    This switch is always implied; however, if specified after *-c*\n-    it cancels the effect of *-c*.\n+    This switch is always implied; however, if specified after :option:`-c`\n+    it cancels the effect of :option:`-c`.\n \n \n   :samp:`-c`\n@@ -3205,11 +3255,12 @@ preprocessing is triggered and parameterized.\n     with the special string '`--!`'.\n \n \n-  :samp:`-Dsymbol={value}`\n-    Define or redefine a symbol, associated with value. A symbol is an Ada\n-    identifier, or an Ada reserved word, with the exception of `if`,\n+  :samp:`-D{symbol}={new_value}`\n+    Define or redefine *symbol* to have *new_value* as its value.\n+    The permitted form for *symbol* is either an Ada identifier, or any Ada reserved word\n+    aside from `if`,\n     `else`, `elsif`, `end`, `and`, `or` and `then`.\n-    `value` is either a literal string, an Ada identifier or any Ada reserved\n+    The permitted form for `new_value` is a literal string, an Ada identifier or any Ada reserved\n     word. A symbol declared with this switch replaces a symbol with the\n     same name defined in a definition file.\n \n@@ -3226,51 +3277,39 @@ preprocessing is triggered and parameterized.\n     a `#if` or `#elsif` test will be treated as an error.\n \n \n-  Examples of valid lines in a preprocessor data file:\n-\n-  .. code-block:: ada\n-\n-      \"toto.adb\"  \"prep.def\" -u\n-      --  preprocess \"toto.adb\", using definition file \"prep.def\",\n-      --  undefined symbol are False.\n-\n-      * -c -DVERSION=V101\n-      --  preprocess all other sources without a definition file;\n-      --  suppressed lined are commented; symbol VERSION has the value V101.\n-\n-      \"titi.adb\" \"prep2.def\" -s\n-      --  preprocess \"titi.adb\", using definition file \"prep2.def\";\n-      --  list all symbols with their values.\n-\n .. index:: -gnateD (gcc)\n \n-:samp:`-gnateDsymbol[=value]`\n-  Define or redefine a preprocessing symbol, associated with value. If no value\n-  is given on the command line, then the value of the symbol is `True`.\n-  A symbol is an identifier, following normal Ada (case-insensitive)\n-  rules for its syntax, and value is either an arbitrary string between double\n+:samp:`-gnateD{symbol}[={new_value}]`\n+  Define or redefine *symbol* to have *new_value* as its value. If no value\n+  is supplied, then the value of *symbol* is `True`.\n+  The form of *symbol* is an identifier, following normal Ada (case-insensitive)\n+  rules for its syntax, and *new_value* is either an arbitrary string between double\n   quotes or any sequence (including an empty sequence) of characters from the\n   set (letters, digits, period, underline).\n   Ada reserved words may be used as symbols, with the exceptions of `if`,\n   `else`, `elsif`, `end`, `and`, `or` and `then`.\n \n-  Examples::\n+  Examples:\n+\n+    ::\n \n-       -gnateDToto=Titi\n-       -gnateDFoo\n-       -gnateDFoo=\\\"Foo-Bar\\\"\n+        -gnateDToto=Tata\n+        -gnateDFoo\n+        -gnateDFoo=\\\"Foo-Bar\\\"\n \n   A symbol declared with this switch on the command line replaces a\n   symbol with the same name either in a definition file or specified with a\n-  switch -D in the preprocessor data file.\n+  switch :option:`-D` in the preprocessor data file.\n \n-  This switch is similar to switch *-D* of `gnatprep`.\n+  This switch is similar to switch :option:`-D` of `gnatprep`.\n \n \n :samp:`-gnateG`\n-  When integrated preprocessing is performed and the preprocessor modifies\n-  the source text, write the result of this preprocessing into a file\n-  <source>.prep.\n+  When integrated preprocessing is performed on source file :file:`filename.extension`,\n+  create or overwrite :file:`filename.extension.prep` to contain\n+  the result of the preprocessing.\n+  For example if the source file is :file:`foo.adb` then\n+  the output file will be :file:`foo.adb.prep`.\n \n \n .. _Mixed_Language_Programming:\n@@ -3340,7 +3379,7 @@ the main subprogram in Ada:\n        --  Declare an Ada procedure spec for Print_Num, then use\n        --  C function print_num for the implementation.\n        procedure Print_Num (Num : Integer);\n-       pragma Import (C, Print_Num, \"print_num\";\n+       pragma Import (C, Print_Num, \"print_num\");\n \n     begin\n        Print_Num (Get_Num);"}, {"sha": "ace680e1f4aa5db6abb69e36c54d920ea56b1a94", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 922, "deletions": 822, "changes": 1744, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc"}, {"sha": "2e1a78839cbb0ba6bc2036f5a4e2567546826dfc", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 277, "deletions": 268, "changes": 545, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=9c533e7dfb45334395ad4aeefdfa5b4740d5c1dc", "patch": "@@ -3,7 +3,7 @@\n @setfilename gnat_ugn.info\n @documentencoding UTF-8\n @ifinfo\n-@*Generated by Sphinx 1.3b2.@*\n+@*Generated by Sphinx 1.4.6.@*\n @end ifinfo\n @settitle GNAT User's Guide for Native Platforms\n @defindex ge\n@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT User's Guide for Native Platforms , January 13, 2017\n+GNAT User's Guide for Native Platforms , Apr 25, 2017\n \n AdaCore\n \n@@ -331,7 +331,7 @@ The Cross-Referencing Tools gnatxref and gnatfind\n \n * gnatxref Switches:: \n * gnatfind Switches:: \n-* Project Files for gnatxref and gnatfind:: \n+* Configuration Files for gnatxref and gnatfind:: \n * Regular Expressions in gnatfind and gnatxref:: \n * Examples of gnatxref Usage:: \n * Examples of gnatfind Usage:: \n@@ -4611,9 +4611,9 @@ The preprocessing language allows such constructs as\n \n @example\n #if DEBUG or else (PRIORITY > 4) then\n-   bunch of declarations\n+   sequence of declarations\n #else\n-   completely different bunch of declarations\n+   completely different sequence of declarations\n #end if;\n @end example\n \n@@ -4622,7 +4622,7 @@ defined either on the command line or in a separate file.\n \n The other way of running the preprocessor is even closer to the C style and\n often more convenient. In this approach the preprocessing is integrated into\n-the compilation process. The compiler is fed the preprocessor input which\n+the compilation process. The compiler is given the preprocessor input which\n includes @cite{#if} lines etc, and then the compiler carries out the\n preprocessing internally and processes the resulting output.\n For more details on this approach, see @ref{18,,Integrated Preprocessing}.\n@@ -4657,8 +4657,8 @@ For further discussion of conditional compilation in general, see\n @subsubsection Preprocessing Symbols\n \n \n-Preprocessing symbols are defined in definition files and referred to in\n-sources to be preprocessed. A Preprocessing symbol is an identifier, following\n+Preprocessing symbols are defined in @emph{definition files} and referenced in the\n+sources to be preprocessed. A preprocessing symbol is an identifier, following\n normal Ada (case-insensitive) rules for its syntax, with the restriction that\n all characters need to be in the ASCII set (no accented letters).\n \n@@ -4705,7 +4705,7 @@ file containing preprocessor directives.\n \n is the full name of the output file, which is an Ada source\n in standard Ada form. When used with GNAT, this file name will\n-normally have an ads or adb suffix.\n+normally have an @emph{ads} or @emph{adb} suffix.\n @end table\n \n @item \n@@ -4742,7 +4742,7 @@ Display Copyright and version, then exit disregarding all other options.\n \n @item @code{--help}\n \n-If @emph{--version} was not used, display usage, then exit disregarding\n+If @code{--version} was not used, display usage and then exit disregarding\n all other options.\n @end table\n \n@@ -4781,20 +4781,20 @@ being preserved in the output file.\n Causes comments to be scanned. Normally comments are ignored by gnatprep.\n If this option is specified, then comments are scanned and any $symbol\n substitutions performed as in program text. This is particularly useful\n-when structured comments are used (e.g., when writing programs in the\n-SPARK dialect of Ada). Note that this switch is not available when\n-doing integrated preprocessing (it would be useless in this context\n-since comments are ignored by the compiler in any case).\n+when structured comments are used (e.g., for programs written in a\n+pre-2014 version of the SPARK Ada subset). Note that this switch is not\n+available when  doing integrated preprocessing (it would be useless in\n+this context since comments are ignored by the compiler in any case).\n @end table\n \n @geindex -D (gnatprep)\n \n \n @table @asis\n \n-@item @code{-D@emph{symbol}=@emph{value}}\n+@item @code{-D@emph{symbol}[=@emph{value}]}\n \n-Defines a new preprocessing symbol, associated with value. If no value is given\n+Defines a new preprocessing symbol with the specified value. If no value is given\n on the command line, then symbol is considered to be @cite{True}. This switch\n can be used in place of a definition file.\n @end table\n@@ -5038,48 +5038,66 @@ and then the substitution will occur as desired.\n @subsection Integrated Preprocessing\n \n \n-GNAT sources may be preprocessed immediately before compilation.\n-In this case, the actual\n-text of the source is not the text of the source file, but is derived from it\n-through a process called preprocessing. Integrated preprocessing is specified\n-through switches @emph{-gnatep} and/or @emph{-gnateD}. @emph{-gnatep}\n-indicates, through a text file, the preprocessing data to be used.\n-@code{-gnateD} specifies or modifies the values of preprocessing symbol.\n-Note that integrated preprocessing applies only to Ada source files, it is\n+As noted above, a file to be preprocessed consists of Ada source code\n+in which preprocessing lines have been inserted. However,\n+instead of using @emph{gnatprep} to explicitly preprocess a file as a separate\n+step before compilation, you can carry out the preprocessing implicitly\n+as part of compilation. Such @emph{integrated preprocessing}, which is the common\n+style with C, is performed when either or both of the following switches\n+are passed to the compiler:\n+\n+@quotation\n+\n+\n+@itemize *\n+\n+@item \n+@code{-gnatep}, which specifies the @emph{preprocessor data file}.\n+This file dictates how the source files will be preprocessed (e.g., which\n+symbol definition files apply to which sources).\n+\n+@item \n+@code{-gnateD}, which defines values for preprocessing symbols.\n+@end itemize\n+@end quotation\n+\n+Integrated preprocessing applies only to Ada source files, it is\n not available for configuration pragma files.\n \n-Note that when integrated preprocessing is used, the output from the\n-preprocessor is not written to any external file. Instead it is passed\n-internally to the compiler. If you need to preserve the result of\n-preprocessing in a file, then you should use @emph{gnatprep}\n-to perform the desired preprocessing in stand-alone mode.\n+With integrated preprocessing, the output from the preprocessor is not,\n+by default, written to any external file. Instead it is passed\n+internally to the compiler. To preserve the result of\n+preprocessing in a file, either run @emph{gnatprep}\n+in standalone mode or else supply the @code{-gnateG} switch\n+(described below) to the compiler.\n \n-It is recommended that @emph{gnatmake} switch -s should be\n-used when Integrated Preprocessing is used. The reason is that preprocessing\n-with another Preprocessing Data file without changing the sources will\n-not trigger recompilation without this switch.\n+The @emph{gnatmake} switch @code{-s} should be used with integrated\n+preprocessing; otherwise the use of a different preprocessor data file\n+without changing the sources will not cause recompilation.\n \n-Note that @emph{gnatmake} switch -m will almost\n+Note that the @emph{gnatmake} switch @code{-m} will almost\n always trigger recompilation for sources that are preprocessed,\n because @emph{gnatmake} cannot compute the checksum of the source after\n preprocessing.\n \n-The actual preprocessing function is described in detail in section\n-@ref{17,,Preprocessing with gnatprep}. This section only describes how integrated\n-preprocessing is triggered and parameterized.\n+The actual preprocessing function is described in detail in\n+@ref{17,,Preprocessing with gnatprep}. This section explains the switches\n+that relate to integrated preprocessing.\n \n @geindex -gnatep (gcc)\n \n \n @table @asis\n \n-@item @code{-gnatep=@emph{file}}\n+@item @code{-gnatep=@emph{preprocessor_data_file}}\n \n-This switch indicates to the compiler the file name (without directory\n-information) of the preprocessor data file to use. The preprocessor data file\n-should be found in the source directories. Alternatively when using project\n-files, you can reference to the project file's directory via the\n-@code{project name'Project_Dir} project attribute, e.g:\n+This switch specifies the file name (without directory\n+information) of the preprocessor data file. Either place this file\n+in one of the source directories, or, when using project\n+files, reference the project file's directory via the\n+@code{project_name'Project_Dir} project attribute; e.g:\n+\n+@quotation\n \n @example\n project Prj is\n@@ -5089,30 +5107,87 @@ project Prj is\n    end Compiler;\n end Prj;\n @end example\n+@end quotation\n+\n+A preprocessor data file is a text file that contains @emph{preprocessor\n+control lines}.  A preprocessor control line directs the preprocessing of\n+either a particular source file, or, analogous to @emph{others} in Ada,\n+all sources not specified elsewhere in  the preprocessor data file.\n+A preprocessor control line\n+can optionally identify a @emph{definition file} that assigns values to\n+preprocessor symbols, as well as a list of switches that relate to\n+preprocessing.\n+Empty lines and comments (using Ada syntax) are also permitted, with no\n+semantic effect.\n+\n+Here's an example of a preprocessor data file:\n+\n+@quotation\n+\n+@example\n+\"toto.adb\"  \"prep.def\" -u\n+--  Preprocess toto.adb, using definition file prep.def\n+--  Undefined symbols are treated as False\n+\n+* -c -DVERSION=V101\n+--  Preprocess all other sources without using a definition file\n+--  Suppressed lined are commented\n+--  Symbol VERSION has the value V101\n+\n+\"tata.adb\" \"prep2.def\" -s\n+--  Preprocess tata.adb, using definition file prep2.def\n+--  List all symbols with their values\n+@end example\n+@end quotation\n+\n+A preprocessor control line has the following syntax:\n+\n+@quotation\n+\n+@example\n+<preprocessor_control_line> ::=\n+   <preprocessor_input> [ <definition_file_name> ] @{ <switch> @}\n+\n+<preprocessor_input> ::= <source_file_name> | '*'\n+\n+<definition_file_name> ::= <string_literal>\n+\n+<source_file_name> := <string_literal>\n+\n+<switch> := (See below for list)\n+@end example\n+@end quotation\n+\n+Thus  each preprocessor control line starts with either a literal string or\n+the character '*':\n \n-A preprocessing data file is a text file with significant lines indicating\n-how should be preprocessed either a specific source or all sources not\n-mentioned in other lines. A significant line is a nonempty, non-comment line.\n-Comments are similar to Ada comments.\n \n-Each significant line starts with either a literal string or the character '*'.\n+@itemize *\n+\n+@item \n A literal string is the file name (without directory information) of the source\n-to preprocess. A character '*' indicates the preprocessing for all the sources\n-that are not specified explicitly on other lines (order of the lines is not\n-significant). It is an error to have two lines with the same file name or two\n+file that will be input to the preprocessor.\n+\n+@item \n+The character '*' is a wild-card indicator; the additional parameters on the line\n+indicate the preprocessing for all the sources\n+that are not specified explicitly on other lines (the order of the lines is not\n+significant).\n+@end itemize\n+\n+It is an error to have two lines with the same file name or two\n lines starting with the character '*'.\n \n-After the file name or the character '*', another optional literal string\n-indicating the file name of the definition file to be used for preprocessing\n+After the file name or '*', an optional literal string specifies the name of\n+the definition file to be used for preprocessing\n (@ref{ac,,Form of Definitions File}). The definition files are found by the\n compiler in one of the source directories. In some cases, when compiling\n a source in a directory other than the current directory, if the definition\n file is in the current directory, it may be necessary to add the current\n-directory as a source directory through switch -I., otherwise\n+directory as a source directory through the @code{-I} switch; otherwise\n the compiler would not find the definition file.\n \n-Then, optionally, switches similar to those of @cite{gnatprep} may\n-be found. Those switches are:\n+Finally, switches similar to those of @emph{gnatprep} may optionally appear:\n \n \n @table @asis\n@@ -5121,21 +5196,22 @@ be found. Those switches are:\n \n Causes both preprocessor lines and the lines deleted by\n preprocessing to be replaced by blank lines, preserving the line number.\n-This switch is always implied; however, if specified after @emph{-c}\n-it cancels the effect of @emph{-c}.\n+This switch is always implied; however, if specified after @code{-c}\n+it cancels the effect of @code{-c}.\n \n @item @code{-c}\n \n Causes both preprocessor lines and the lines deleted\n by preprocessing to be retained as comments marked\n with the special string '@cite{--!}'.\n \n-@item @code{-Dsymbol=@emph{value}}\n+@item @code{-D@emph{symbol}=@emph{new_value}}\n \n-Define or redefine a symbol, associated with value. A symbol is an Ada\n-identifier, or an Ada reserved word, with the exception of @cite{if},\n+Define or redefine @emph{symbol} to have @emph{new_value} as its value.\n+The permitted form for @emph{symbol} is either an Ada identifier, or any Ada reserved word\n+aside from @cite{if},\n @cite{else}, @cite{elsif}, @cite{end}, @cite{and}, @cite{or} and @cite{then}.\n-@cite{value} is either a literal string, an Ada identifier or any Ada reserved\n+The permitted form for @cite{new_value} is a literal string, an Ada identifier or any Ada reserved\n word. A symbol declared with this switch replaces a symbol with the\n same name defined in a definition file.\n \n@@ -5151,59 +5227,48 @@ in the context\n of a preprocessor test. In the absence of this option, an undefined symbol in\n a @cite{#if} or @cite{#elsif} test will be treated as an error.\n @end table\n-\n-Examples of valid lines in a preprocessor data file:\n-\n-@example\n-\"toto.adb\"  \"prep.def\" -u\n---  preprocess \"toto.adb\", using definition file \"prep.def\",\n---  undefined symbol are False.\n-\n-* -c -DVERSION=V101\n---  preprocess all other sources without a definition file;\n---  suppressed lined are commented; symbol VERSION has the value V101.\n-\n-\"titi.adb\" \"prep2.def\" -s\n---  preprocess \"titi.adb\", using definition file \"prep2.def\";\n---  list all symbols with their values.\n-@end example\n @end table\n \n @geindex -gnateD (gcc)\n \n \n @table @asis\n \n-@item @code{-gnateDsymbol[=value]}\n+@item @code{-gnateD@emph{symbol}[=@emph{new_value}]}\n \n-Define or redefine a preprocessing symbol, associated with value. If no value\n-is given on the command line, then the value of the symbol is @cite{True}.\n-A symbol is an identifier, following normal Ada (case-insensitive)\n-rules for its syntax, and value is either an arbitrary string between double\n+Define or redefine @emph{symbol} to have @emph{new_value} as its value. If no value\n+is supplied, then the value of @emph{symbol} is @cite{True}.\n+The form of @emph{symbol} is an identifier, following normal Ada (case-insensitive)\n+rules for its syntax, and @emph{new_value} is either an arbitrary string between double\n quotes or any sequence (including an empty sequence) of characters from the\n set (letters, digits, period, underline).\n Ada reserved words may be used as symbols, with the exceptions of @cite{if},\n @cite{else}, @cite{elsif}, @cite{end}, @cite{and}, @cite{or} and @cite{then}.\n \n Examples:\n \n+@quotation\n+\n @example\n--gnateDToto=Titi\n+-gnateDToto=Tata\n -gnateDFoo\n -gnateDFoo=\\\"Foo-Bar\\\"\n @end example\n+@end quotation\n \n A symbol declared with this switch on the command line replaces a\n symbol with the same name either in a definition file or specified with a\n-switch -D in the preprocessor data file.\n+switch @code{-D} in the preprocessor data file.\n \n-This switch is similar to switch @emph{-D} of @cite{gnatprep}.\n+This switch is similar to switch @code{-D} of @cite{gnatprep}.\n \n @item @code{-gnateG}\n \n-When integrated preprocessing is performed and the preprocessor modifies\n-the source text, write the result of this preprocessing into a file\n-<source>.prep.\n+When integrated preprocessing is performed on source file @code{filename.extension},\n+create or overwrite @code{filename.extension.prep} to contain\n+the result of the preprocessing.\n+For example if the source file is @code{foo.adb} then\n+the output file will be @code{foo.adb.prep}.\n @end table\n \n @node Mixed Language Programming,GNAT and Other Compilation Models,Conditional Compilation,The GNAT Compilation Model\n@@ -5281,7 +5346,7 @@ procedure My_Main is\n    --  Declare an Ada procedure spec for Print_Num, then use\n    --  C function print_num for the implementation.\n    procedure Print_Num (Num : Integer);\n-   pragma Import (C, Print_Num, \"print_num\";\n+   pragma Import (C, Print_Num, \"print_num\");\n \n begin\n    Print_Num (Get_Num);\n@@ -10765,6 +10830,9 @@ switch are:\n @item \n @code{-gnatw.h} (holes in record layouts)\n \n+@item \n+@code{-gnatw.j} (late primitives of tagged types)\n+\n @item \n @code{-gnatw.k} (redefinition of names in standard)\n \n@@ -11395,6 +11463,32 @@ Second, the restriction does flag uses of package @cite{ASCII}.\n This switch disables warnings on use of obsolescent features.\n @end table\n \n+@geindex -gnatw.j (gcc)\n+\n+\n+@table @asis\n+\n+@item @code{-gnatw.j}\n+\n+@emph{Activate warnings on late declarations of tagged type primitives.}\n+\n+This switch activates warnings on visible primitives added to a\n+tagged type after deriving a private extension from it.\n+@end table\n+\n+@geindex -gnatw.J (gcc)\n+\n+\n+@table @asis\n+\n+@item @code{-gnatw.J}\n+\n+@emph{Suppress warnings on late declarations of tagged type primitives.}\n+\n+This switch suppresses warnings on visible primitives added to a\n+tagged type after deriving a private extension from it.\n+@end table\n+\n @geindex -gnatwk (gcc)\n \n \n@@ -15029,7 +15123,7 @@ This chapter describes the GNAT binder, @cite{gnatbind}, which is used\n to bind compiled GNAT objects.\n \n Note: to invoke @cite{gnatbind} with a project file, use the @cite{gnat}\n-driver (see @emph{The_GNAT_Driver_and_Project_Files}).\n+driver (see The_GNAT_Driver_and_Project_Files).\n \n The @cite{gnatbind} program performs four separate functions:\n \n@@ -15286,7 +15380,7 @@ The secondary stack is used to deal with functions that return a variable\n sized result, for example a function returning an unconstrained\n String. There are two ways in which this secondary stack is allocated.\n \n-For most targets, the secondary stack is growing on demand and is allocated\n+For most targets, the secondary stack grows on demand and is allocated\n as a chain of blocks in the heap. The -D option is not very\n relevant. It only give some control over the size of the allocated\n blocks (whose size is the minimum of the default secondary stack size value,\n@@ -16346,7 +16440,7 @@ references for the Ada part of a program. It uses the binder file\n generated by the @emph{gnatbind} to determine this list.\n \n Note: to invoke @cite{gnatlink} with a project file, use the @cite{gnat}\n-driver (see @emph{The_GNAT_Driver_and_Project_Files}).\n+driver (see The_GNAT_Driver_and_Project_Files).\n \n @menu\n * Running gnatlink:: \n@@ -17222,7 +17316,7 @@ files. It can also be used to check the source dependencies of a unit\n as well as various characteristics.\n \n Note: to invoke @cite{gnatls} with a project file, use the @cite{gnat}\n-driver (see @emph{The_GNAT_Driver_and_Project_Files}).\n+driver (see The_GNAT_Driver_and_Project_Files).\n \n @menu\n * Running gnatls:: \n@@ -17606,12 +17700,12 @@ To use these tools, you must not compile your application using the\n information will not be generated.\n \n Note: to invoke @cite{gnatxref} or @cite{gnatfind} with a project file,\n-use the @cite{gnat} driver (see @emph{The_GNAT_Driver_and_Project_Files}).\n+use the @cite{gnat} driver (see The_GNAT_Driver_and_Project_Files).\n \n @menu\n * gnatxref Switches:: \n * gnatfind Switches:: \n-* Project Files for gnatxref and gnatfind:: \n+* Configuration Files for gnatxref and gnatfind:: \n * Regular Expressions in gnatfind and gnatxref:: \n * Examples of gnatxref Usage:: \n * Examples of gnatfind Usage:: \n@@ -17659,7 +17753,7 @@ The following switches are available for @emph{gnatxref}:\n \n @table @asis\n \n-@item @code{-version}\n+@item @code{--version}\n \n Display Copyright and version, then exit disregarding all other options.\n @end table\n@@ -17669,7 +17763,7 @@ Display Copyright and version, then exit disregarding all other options.\n \n @table @asis\n \n-@item @code{-help}\n+@item @code{--help}\n \n If @emph{--version} was not used, display usage, then exit disregarding\n all other options.\n@@ -17680,7 +17774,7 @@ all other options.\n \n @table @asis\n \n-@item @code{a}\n+@item @code{-a}\n \n If this switch is present, @cite{gnatfind} and @cite{gnatxref} will parse\n the read-only files found in the library search path. Otherwise, these files\n@@ -17695,7 +17789,7 @@ or permissions status in the file system for the current user.\n \n @table @asis\n \n-@item @code{aI@emph{DIR}}\n+@item @code{-aI@emph{DIR}}\n \n When looking for source files also look in directory DIR. The order in which\n source file search is undertaken is the same as for @emph{gnatmake}.\n@@ -17708,7 +17802,7 @@ source file search is undertaken is the same as for @emph{gnatmake}.\n \n @item @code{aO@emph{DIR}}\n \n-When searching for library and object files, look in directory\n+When -searching for library and object files, look in directory\n DIR. The order in which library files are searched is the same as for\n @emph{gnatmake}.\n @end table\n@@ -17718,7 +17812,7 @@ DIR. The order in which library files are searched is the same as for\n \n @table @asis\n \n-@item @code{nostdinc}\n+@item @code{-nostdinc}\n \n Do not look for sources in the system default directory.\n @end table\n@@ -17728,7 +17822,7 @@ Do not look for sources in the system default directory.\n \n @table @asis\n \n-@item @code{nostdlib}\n+@item @code{-nostdlib}\n \n Do not look for library files in the system default directory.\n @end table\n@@ -17738,7 +17832,7 @@ Do not look for library files in the system default directory.\n \n @table @asis\n \n-@item @code{-ext=@emph{extension}}\n+@item @code{--ext=@emph{extension}}\n \n Specify an alternate ali file extension. The default is @cite{ali} and other\n extensions (e.g. @cite{gli} for C/C++ sources when using @emph{-fdump-xref})\n@@ -17751,7 +17845,7 @@ default, which means that only the new extension will be considered.\n \n @table @asis\n \n-@item @code{-RTS=@emph{rts-path}}\n+@item @code{--RTS=@emph{rts-path}}\n \n Specifies the default location of the runtime library. Same meaning as the\n equivalent @emph{gnatmake} flag (@ref{dc,,Switches for gnatmake}).\n@@ -17762,7 +17856,7 @@ equivalent @emph{gnatmake} flag (@ref{dc,,Switches for gnatmake}).\n \n @table @asis\n \n-@item @code{d}\n+@item @code{-d}\n \n If this switch is set @cite{gnatxref} will output the parent type\n reference for each matching derived types.\n@@ -17773,7 +17867,7 @@ reference for each matching derived types.\n \n @table @asis\n \n-@item @code{f}\n+@item @code{-f}\n \n If this switch is set, the output file names will be preceded by their\n directory (if the file was found in the search path). If this switch is\n@@ -17785,7 +17879,7 @@ not set, the directory will not be printed.\n \n @table @asis\n \n-@item @code{g}\n+@item @code{-g}\n \n If this switch is set, information is output only for library-level\n entities, ignoring local entities. The use of this switch may accelerate\n@@ -17797,7 +17891,7 @@ entities, ignoring local entities. The use of this switch may accelerate\n \n @table @asis\n \n-@item @code{I@emph{DIR}}\n+@item @code{-I@emph{DIR}}\n \n Equivalent to @code{-aODIR -aIDIR}.\n @end table\n@@ -17807,38 +17901,37 @@ Equivalent to @code{-aODIR -aIDIR}.\n \n @table @asis\n \n-@item @code{p@emph{FILE}}\n+@item @code{-p@emph{FILE}}\n \n-Specify a project file to use.\n+Specify a configuration file to use to list the source and object directories.\n \n-By default, @cite{gnatxref} and @cite{gnatfind} will try to locate a\n-project file in the current directory.\n+If a file is specified, then the content of the source directory and object\n+directory lines are added as if they had been specified respectively\n+by @code{-aI} and @code{-aO}.\n \n-If a project file is either specified or found by the tools, then the content\n-of the source directory and object directory lines are added as if they\n-had been specified respectively by @code{-aI}\n-and @code{-aO}.\n+See @ref{154,,Configuration Files for gnatxref and gnatfind} for the syntax\n+of this configuration file.\n \n-@item @code{u}\n+@item @code{-u}\n \n Output only unused symbols. This may be really useful if you give your\n main compilation unit on the command line, as @cite{gnatxref} will then\n display every unused entity and 'with'ed package.\n \n-@item @code{v}\n+@item @code{-v}\n \n Instead of producing the default output, @cite{gnatxref} will generate a\n @code{tags} file that can be used by vi. For examples how to use this\n-feature, see @ref{154,,Examples of gnatxref Usage}. The tags file is output\n+feature, see @ref{155,,Examples of gnatxref Usage}. The tags file is output\n to the standard output, thus you will have to redirect it to a file.\n @end table\n \n All these switches may be in any order on the command line, and may even\n appear after the file names. They need not be separated by spaces, thus\n you can say @code{gnatxref -ag} instead of @code{gnatxref -a -g}.\n \n-@node gnatfind Switches,Project Files for gnatxref and gnatfind,gnatxref Switches,The Cross-Referencing Tools gnatxref and gnatfind\n-@anchor{gnat_ugn/gnat_utility_programs id11}@anchor{155}@anchor{gnat_ugn/gnat_utility_programs gnatfind-switches}@anchor{156}\n+@node gnatfind Switches,Configuration Files for gnatxref and gnatfind,gnatxref Switches,The Cross-Referencing Tools gnatxref and gnatfind\n+@anchor{gnat_ugn/gnat_utility_programs id11}@anchor{156}@anchor{gnat_ugn/gnat_utility_programs gnatfind-switches}@anchor{157}\n @subsection @cite{gnatfind} Switches\n \n \n@@ -17860,7 +17953,7 @@ with the following iterpretation of the command arguments:\n @item @emph{pattern}\n \n An entity will be output only if it matches the regular expression found\n-in @cite{pattern}, see @ref{157,,Regular Expressions in gnatfind and gnatxref}.\n+in @cite{pattern}, see @ref{158,,Regular Expressions in gnatfind and gnatxref}.\n \n Omitting the pattern is equivalent to specifying @code{*}, which\n will match any entity. Note that if you do not provide a pattern, you\n@@ -17874,7 +17967,7 @@ for matching purposes. At the current time there is no support for\n \n @cite{gnatfind} will look for references, bodies or declarations\n of symbols referenced in @code{sourcefile}, at line @cite{line}\n-and column @cite{column}. See @ref{158,,Examples of gnatfind Usage}\n+and column @cite{column}. See @ref{159,,Examples of gnatfind Usage}\n for syntax examples.\n \n @item @emph{line}\n@@ -17928,7 +18021,7 @@ Display Copyright and version, then exit disregarding all other options.\n \n @table @asis\n \n-@item @code{-help}\n+@item @code{--help}\n \n If @emph{--version} was not used, display usage, then exit disregarding\n all other options.\n@@ -17939,7 +18032,7 @@ all other options.\n \n @table @asis\n \n-@item @code{a}\n+@item @code{-a}\n \n If this switch is present, @cite{gnatfind} and @cite{gnatxref} will parse\n the read-only files found in the library search path. Otherwise, these files\n@@ -17954,7 +18047,7 @@ or permission status in the file system for the current user.\n \n @table @asis\n \n-@item @code{aI@emph{DIR}}\n+@item @code{-aI@emph{DIR}}\n \n When looking for source files also look in directory DIR. The order in which\n source file search is undertaken is the same as for @emph{gnatmake}.\n@@ -17965,7 +18058,7 @@ source file search is undertaken is the same as for @emph{gnatmake}.\n \n @table @asis\n \n-@item @code{aO@emph{DIR}}\n+@item @code{-aO@emph{DIR}}\n \n When searching for library and object files, look in directory\n DIR. The order in which library files are searched is the same as for\n@@ -17977,7 +18070,7 @@ DIR. The order in which library files are searched is the same as for\n \n @table @asis\n \n-@item @code{nostdinc}\n+@item @code{-nostdinc}\n \n Do not look for sources in the system default directory.\n @end table\n@@ -17987,7 +18080,7 @@ Do not look for sources in the system default directory.\n \n @table @asis\n \n-@item @code{nostdlib}\n+@item @code{-nostdlib}\n \n Do not look for library files in the system default directory.\n @end table\n@@ -17997,7 +18090,7 @@ Do not look for library files in the system default directory.\n \n @table @asis\n \n-@item @code{-ext=@emph{extension}}\n+@item @code{--ext=@emph{extension}}\n \n Specify an alternate ali file extension. The default is @cite{ali} and other\n extensions (e.g. @cite{gli} for C/C++ sources when using @emph{-fdump-xref})\n@@ -18010,7 +18103,7 @@ default, which means that only the new extension will be considered.\n \n @table @asis\n \n-@item @code{-RTS=@emph{rts-path}}\n+@item @code{--RTS=@emph{rts-path}}\n \n Specifies the default location of the runtime library. Same meaning as the\n equivalent @emph{gnatmake} flag (@ref{dc,,Switches for gnatmake}).\n@@ -18021,7 +18114,7 @@ equivalent @emph{gnatmake} flag (@ref{dc,,Switches for gnatmake}).\n \n @table @asis\n \n-@item @code{d}\n+@item @code{-d}\n \n If this switch is set, then @cite{gnatfind} will output the parent type\n reference for each matching derived types.\n@@ -18032,7 +18125,7 @@ reference for each matching derived types.\n \n @table @asis\n \n-@item @code{e}\n+@item @code{-e}\n \n By default, @cite{gnatfind} accept the simple regular expression set for\n @cite{pattern}. If this switch is set, then the pattern will be\n@@ -18044,7 +18137,7 @@ considered as full Unix-style regular expression.\n \n @table @asis\n \n-@item @code{f}\n+@item @code{-f}\n \n If this switch is set, the output file names will be preceded by their\n directory (if the file was found in the search path). If this switch is\n@@ -18056,7 +18149,7 @@ not set, the directory will not be printed.\n \n @table @asis\n \n-@item @code{g}\n+@item @code{-g}\n \n If this switch is set, information is output only for library-level\n entities, ignoring local entities. The use of this switch may accelerate\n@@ -18068,7 +18161,7 @@ entities, ignoring local entities. The use of this switch may accelerate\n \n @table @asis\n \n-@item @code{I@emph{DIR}}\n+@item @code{-I@emph{DIR}}\n \n Equivalent to @code{-aODIR -aIDIR}.\n @end table\n@@ -18078,24 +18171,24 @@ Equivalent to @code{-aODIR -aIDIR}.\n \n @table @asis\n \n-@item @code{p@emph{FILE}}\n+@item @code{-p@emph{FILE}}\n+\n+Specify a configuration file to use to list the source and object directories.\n \n-Specify a project file.\n-By default, @cite{gnatxref} and @cite{gnatfind} will try to locate a\n-project file in the current directory.\n+If a file is specified, then the content of the source directory and object\n+directory lines are added as if they had been specified respectively\n+by @code{-aI} and @code{-aO}.\n \n-If a project file is either specified or found by the tools, then the content\n-of the source directory and object directory lines are added as if they\n-had been specified respectively by @code{-aI} and\n-@code{-aO}.\n+See @ref{154,,Configuration Files for gnatxref and gnatfind} for the syntax\n+of this configuration file.\n @end table\n \n @geindex -r (gnatfind)\n \n \n @table @asis\n \n-@item @code{r}\n+@item @code{-r}\n \n By default, @cite{gnatfind} will output only the information about the\n declaration, body or type completion of the entities. If this switch is\n@@ -18109,7 +18202,7 @@ path if no file is given on the command line).\n \n @table @asis\n \n-@item @code{s}\n+@item @code{-s}\n \n If this switch is set, then @cite{gnatfind} will output the content\n of the Ada source file lines were the entity was found.\n@@ -18120,7 +18213,7 @@ of the Ada source file lines were the entity was found.\n \n @table @asis\n \n-@item @code{t}\n+@item @code{-t}\n \n If this switch is set, then @cite{gnatfind} will output the type hierarchy for\n the specified type. It act like -d option but recursively from parent\n@@ -18137,28 +18230,16 @@ As stated previously, gnatfind will search in every directory in the\n search path. You can force it to look only in the current directory if\n you specify @cite{*} at the end of the command line.\n \n-@node Project Files for gnatxref and gnatfind,Regular Expressions in gnatfind and gnatxref,gnatfind Switches,The Cross-Referencing Tools gnatxref and gnatfind\n-@anchor{gnat_ugn/gnat_utility_programs project-files-for-gnatxref-and-gnatfind}@anchor{159}@anchor{gnat_ugn/gnat_utility_programs id12}@anchor{15a}\n-@subsection Project Files for @emph{gnatxref} and @emph{gnatfind}\n+@node Configuration Files for gnatxref and gnatfind,Regular Expressions in gnatfind and gnatxref,gnatfind Switches,The Cross-Referencing Tools gnatxref and gnatfind\n+@anchor{gnat_ugn/gnat_utility_programs configuration-files-for-gnatxref-and-gnatfind}@anchor{154}@anchor{gnat_ugn/gnat_utility_programs id12}@anchor{15a}\n+@subsection Configuration Files for @emph{gnatxref} and @emph{gnatfind}\n \n \n-Project files allow a programmer to specify how to compile its\n-application, where to find sources, etc.  These files are used\n-primarily by GPS, but they can also be used\n-by the two tools @cite{gnatxref} and @cite{gnatfind}.\n+Configuration files are used by @cite{gnatxref} and @cite{gnatfind} to specify\n+the list of source and object directories to consider. They can be\n+specified via the @code{-p} switch.\n \n-A project file name must end with @code{.gpr}. If a single one is\n-present in the current directory, then @cite{gnatxref} and @cite{gnatfind} will\n-extract the information from it. If multiple project files are found, none of\n-them is read, and you have to use the @code{-p} switch to specify the one\n-you want to use.\n-\n-The following lines can be included, even though most of them have default\n-values which can be used in most cases.\n-The lines can be entered in any order in the file.\n-Except for @code{src_dir} and @code{obj_dir}, you can only have one instance of\n-each line. If you have multiple instances, only the last one is taken into\n-account.\n+The following lines can be included, in any order in the file:\n \n \n @itemize *\n@@ -18186,100 +18267,12 @@ Specifies a directory where to look for object and library files. Multiple\n @cite{obj_dir} lines can be specified, and they will be searched in the order\n they are specified\n @end table\n-\n-@item \n-\n-@table @asis\n-\n-@item @emph{comp_opt=SWITCHES}\n-\n-[default: @cite{\"\"}].\n-Creates a variable which can be referred to subsequently by using\n-the @cite{$@{comp_opt@}} notation. This is intended to store the default\n-switches given to @emph{gnatmake} and @emph{gcc}.\n-@end table\n-\n-@item \n-\n-@table @asis\n-\n-@item @emph{bind_opt=SWITCHES}\n-\n-[default: @cite{\"\"}].\n-Creates a variable which can be referred to subsequently by using\n-the @code{$@emph{bind_opt}} notation. This is intended to store the default\n-switches given to @emph{gnatbind}.\n-@end table\n-\n-@item \n-\n-@table @asis\n-\n-@item @emph{link_opt=SWITCHES}\n-\n-[default: @cite{\"\"}].\n-Creates a variable which can be referred to subsequently by using\n-the @code{$@emph{link_opt}} notation. This is intended to store the default\n-switches given to @emph{gnatlink}.\n-@end table\n-\n-@item \n-\n-@table @asis\n-\n-@item @emph{main=EXECUTABLE}\n-\n-[default: @cite{\"\"}].\n-Specifies the name of the executable for the application. This variable can\n-be referred to in the following lines by using the @code{@emph{$@{main}} notation.\n-@end table\n-\n-@item \n-\n-@table @asis\n-\n-@item @emph{comp_cmd=COMMAND}\n-\n-[default: @cite{\"gcc -c -I$@{src_dir@} -g -gnatq\"}].\n-Specifies the command used to compile a single file in the application.\n-@end table\n-\n-@item \n-\n-@table @asis\n-\n-@item @emph{make_cmd=COMMAND}\n-\n-[default: @cite{\"gnatmake $@{main@} -aI$@{src_dir@} -aO$@{obj_dir@} -g -gnatq -cargs $@{comp_opt@} -bargs $@{bind_opt@} -largs $@{link_opt@}\"}].\n-Specifies the command used to recompile the whole application.\n-@end table\n-\n-@item \n-\n-@table @asis\n-\n-@item @emph{run_cmd=COMMAND}\n-\n-[default: @cite{\"$@{main@}\"}].\n-Specifies the command used to run the application.\n-@end table\n-\n-@item \n-\n-@table @asis\n-\n-@item @emph{debug_cmd=COMMAND}\n-\n-[default: @cite{\"gdb $@{main@}\"}].\n-Specifies the command used to debug the application\n-@end table\n @end itemize\n \n-@emph{gnatxref} and @emph{gnatfind} only take into account the\n-@cite{src_dir} and @cite{obj_dir} lines, and ignore the others.\n+Any other line will be silently ignored.\n \n-@node Regular Expressions in gnatfind and gnatxref,Examples of gnatxref Usage,Project Files for gnatxref and gnatfind,The Cross-Referencing Tools gnatxref and gnatfind\n-@anchor{gnat_ugn/gnat_utility_programs id13}@anchor{15b}@anchor{gnat_ugn/gnat_utility_programs regular-expressions-in-gnatfind-and-gnatxref}@anchor{157}\n+@node Regular Expressions in gnatfind and gnatxref,Examples of gnatxref Usage,Configuration Files for gnatxref and gnatfind,The Cross-Referencing Tools gnatxref and gnatfind\n+@anchor{gnat_ugn/gnat_utility_programs id13}@anchor{15b}@anchor{gnat_ugn/gnat_utility_programs regular-expressions-in-gnatfind-and-gnatxref}@anchor{158}\n @subsection Regular Expressions in @cite{gnatfind} and @cite{gnatxref}\n \n \n@@ -18372,7 +18365,7 @@ least one character.\n @end itemize\n \n @node Examples of gnatxref Usage,Examples of gnatfind Usage,Regular Expressions in gnatfind and gnatxref,The Cross-Referencing Tools gnatxref and gnatfind\n-@anchor{gnat_ugn/gnat_utility_programs examples-of-gnatxref-usage}@anchor{154}@anchor{gnat_ugn/gnat_utility_programs id14}@anchor{15c}\n+@anchor{gnat_ugn/gnat_utility_programs examples-of-gnatxref-usage}@anchor{155}@anchor{gnat_ugn/gnat_utility_programs id14}@anchor{15c}\n @subsection Examples of @cite{gnatxref} Usage\n \n \n@@ -18514,7 +18507,7 @@ From @emph{vi}, you can then use the command @code{:tag @emph{entity}}\n display a new file with the corresponding declaration of entity.\n \n @node Examples of gnatfind Usage,,Examples of gnatxref Usage,The Cross-Referencing Tools gnatxref and gnatfind\n-@anchor{gnat_ugn/gnat_utility_programs id15}@anchor{15f}@anchor{gnat_ugn/gnat_utility_programs examples-of-gnatfind-usage}@anchor{158}\n+@anchor{gnat_ugn/gnat_utility_programs id15}@anchor{15f}@anchor{gnat_ugn/gnat_utility_programs examples-of-gnatfind-usage}@anchor{159}\n @subsection Examples of @cite{gnatfind} Usage\n \n \n@@ -22485,12 +22478,12 @@ example:\n \n @quotation\n \n-@c code-block\":: ada\n-@c \n-@c m   : constant Length           := 1.0;\n-@c kg  : constant Mass             := 1.0;\n-@c s   : constant Time             := 1.0;\n-@c A   : constant Electric_Current := 1.0;\n+@example\n+m   : constant Length           := 1.0;\n+kg  : constant Mass             := 1.0;\n+s   : constant Time             := 1.0;\n+A   : constant Electric_Current := 1.0;\n+@end example\n @end quotation\n \n as well as useful multiples of these units:\n@@ -23551,6 +23544,22 @@ you should use @cite{pragma Time_Slice} with a\n value greater than 0.0, or else use the corresponding @emph{-T}\n binder option.\n \n+To make sure a program is running as root, you can put something like\n+this in a library package body in your application:\n+\n+@quotation\n+\n+@example\n+function geteuid return Integer;\n+pragma Import (C, geteuid, \"geteuid\");\n+Ignore : constant Boolean :=\n+  (if geteuid = 0 then True else raise Program_Error with \"must be root\");\n+@end example\n+@end quotation\n+\n+It gets the effective user id, and if it's not 0 (i.e. root), it raises\n+Program_Error.\n+\n @geindex Solaris Sparc threads libraries\n \n @node Solaris-Specific Considerations,Solaris Threads Issues,Choosing the Scheduling Policy,Specifying a Run-Time Library\n@@ -25949,7 +25958,7 @@ $ gnatlink hello -Wl,--stack=0x1000000\n \n This sets the stack reserve size to 0x1000000 bytes. Note that with\n @emph{-Wl} option it is not possible to set the stack commit size\n-because the coma is a separator for this option.\n+because the comma is a separator for this option.\n @end itemize\n \n @node Setting Heap Size from gnatlink,,Setting Stack Size from gnatlink,Mixed-Language Programming on Windows\n@@ -25982,7 +25991,7 @@ $ gnatlink hello -Wl,--heap=0x1000000\n \n This sets the heap reserve size to 0x1000000 bytes. Note that with\n @emph{-Wl} option it is not possible to set the heap commit size\n-because the coma is a separator for this option.\n+because the comma is a separator for this option.\n @end itemize\n \n @node Windows Specific Add-Ons,,Mixed-Language Programming on Windows,Microsoft Windows Topics"}]}