{"sha": "73eb130916f39f689a0c6089e4ee699d89f85907", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNlYjEzMDkxNmYzOWY2ODlhMGM2MDg5ZTRlZTY5OWQ4OWY4NTkwNw==", "commit": {"author": {"name": "Jeroen Frijters", "email": "jeroen@frijters.net", "date": "2004-09-24T09:05:10Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-09-24T09:05:10Z"}, "message": "ObjectInputStream.java (readObject): Delegate instantation of Externalizable classes to ObjectStreamClass.\n\n2004-09-24  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* java/io/ObjectInputStream.java (readObject): Delegate instantation\n\tof Externalizable classes to ObjectStreamClass.\n\t* java/io/ObjectStreamClass.java (newInstance): New method to\n\tinstantiate Externalizable (while ignoring the accessibility of\n\tthe constructor). (constructor): New field to cache the constructor.\n\nFrom-SVN: r88019", "tree": {"sha": "fafed187ed98f844353a70527ed246a64b37301c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fafed187ed98f844353a70527ed246a64b37301c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73eb130916f39f689a0c6089e4ee699d89f85907", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73eb130916f39f689a0c6089e4ee699d89f85907", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73eb130916f39f689a0c6089e4ee699d89f85907", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73eb130916f39f689a0c6089e4ee699d89f85907/comments", "author": {"login": "jfrijters", "id": 2994393, "node_id": "MDQ6VXNlcjI5OTQzOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2994393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfrijters", "html_url": "https://github.com/jfrijters", "followers_url": "https://api.github.com/users/jfrijters/followers", "following_url": "https://api.github.com/users/jfrijters/following{/other_user}", "gists_url": "https://api.github.com/users/jfrijters/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfrijters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfrijters/subscriptions", "organizations_url": "https://api.github.com/users/jfrijters/orgs", "repos_url": "https://api.github.com/users/jfrijters/repos", "events_url": "https://api.github.com/users/jfrijters/events{/privacy}", "received_events_url": "https://api.github.com/users/jfrijters/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ac4bd37068ea73ca55ebeaba16ec72709f0d617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ac4bd37068ea73ca55ebeaba16ec72709f0d617", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ac4bd37068ea73ca55ebeaba16ec72709f0d617"}], "stats": {"total": 81, "additions": 58, "deletions": 23}, "files": [{"sha": "a6807eccbcf14398948d4099c37314b6983a60f5", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73eb130916f39f689a0c6089e4ee699d89f85907/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73eb130916f39f689a0c6089e4ee699d89f85907/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=73eb130916f39f689a0c6089e4ee699d89f85907", "patch": "@@ -1,3 +1,11 @@\n+2004-09-24  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* java/io/ObjectInputStream.java (readObject): Delegate instantation\n+\tof Externalizable classes to ObjectStreamClass.\n+\t* java/io/ObjectStreamClass.java (newInstance): New method to\n+\tinstantiate Externalizable (while ignoring the accessibility of\n+\tthe constructor). (constructor): New field to cache the constructor.\n+\n 2004-09-24  Mark Wielaard  <mark@klomp.org>\n \n \t* java/net/URL.java (systemClassLoader): New static field."}, {"sha": "b9bba27b09bd6b07fcadfe7b0adfdf551c6a9968", "filename": "libjava/java/io/ObjectInputStream.java", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73eb130916f39f689a0c6089e4ee699d89f85907/libjava%2Fjava%2Fio%2FObjectInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73eb130916f39f689a0c6089e4ee699d89f85907/libjava%2Fjava%2Fio%2FObjectInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FObjectInputStream.java?ref=73eb130916f39f689a0c6089e4ee699d89f85907", "patch": "@@ -291,29 +291,7 @@ public final Object readObject() throws ClassNotFoundException, IOException\n \t      \n \t      if (osc.realClassIsExternalizable)\n \t\t{\n-\t\t  Externalizable obj = null;\n-\t\t  \n-\t\t  try\n-\t\t    {\n-\t\t      obj = (Externalizable)clazz.newInstance();\n-\t\t    }\n-\t\t  catch (InstantiationException e)\n-\t\t    {\n-\t\t      throw new ClassNotFoundException\n-\t\t\t(\"Instance of \" + clazz + \" could not be created\");\n-\t\t    }\n-\t\t  catch (IllegalAccessException e)\n-\t\t    {\n-\t\t      throw new ClassNotFoundException\n-\t\t\t(\"Instance of \" + clazz + \" could not be created because class or \"\n-\t\t\t + \"zero-argument constructor is not accessible\");\n-\t\t    }\n-\t\t  catch (NoSuchMethodError e)\n-\t\t    {\n-\t\t      throw new ClassNotFoundException\n-\t\t\t(\"Instance of \" + clazz\n-\t\t\t + \" could not be created because zero-argument constructor is not defined\");\n-\t\t    }\n+\t\t  Externalizable obj = osc.newInstance();\n \t\t  \n \t\t  int handle = assignNewHandle(obj);\n \t\t  "}, {"sha": "050ed3d7bac0ad932b540baa9e6f48d7fdc00392", "filename": "libjava/java/io/ObjectStreamClass.java", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73eb130916f39f689a0c6089e4ee699d89f85907/libjava%2Fjava%2Fio%2FObjectStreamClass.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73eb130916f39f689a0c6089e4ee699d89f85907/libjava%2Fjava%2Fio%2FObjectStreamClass.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FObjectStreamClass.java?ref=73eb130916f39f689a0c6089e4ee699d89f85907", "patch": "@@ -811,6 +811,54 @@ private ObjectStreamField[] getSerialPersistentFields(Class clazz)\n     return fieldsArray;\n   }\n \n+  /**\n+   * Returns a new instance of the Class this ObjectStreamClass corresponds\n+   * to.\n+   * Note that this should only be used for Externalizable classes.\n+   *\n+   * @return A new instance.\n+   */\n+  Externalizable newInstance() throws InvalidClassException\n+  {\n+    synchronized(this)\n+    {\n+\tif (constructor == null)\n+\t{\n+\t    try\n+\t    {\n+\t\tfinal Constructor c = clazz.getConstructor(new Class[0]);\n+\n+\t\tAccessController.doPrivileged(new PrivilegedAction()\n+\t\t{\n+\t\t    public Object run()\n+\t\t    {\n+\t\t\tc.setAccessible(true);\n+\t\t\treturn null;\n+\t\t    }\n+\t\t});\n+\n+\t\tconstructor = c;\n+\t    }\n+\t    catch(NoSuchMethodException x)\n+\t    {\n+\t\tthrow new InvalidClassException(clazz.getName(),\n+\t\t    \"No public zero-argument constructor\");\n+\t    }\n+\t}\n+    }\n+\n+    try\n+    {\n+\treturn (Externalizable)constructor.newInstance(null);\n+    }\n+    catch(Throwable t)\n+    {\n+\tthrow (InvalidClassException)\n+\t    new InvalidClassException(clazz.getName(),\n+\t\t     \"Unable to instantiate\").initCause(t);\n+    }\n+  }\n+\n   public static final ObjectStreamField[] NO_FIELDS = {};\n \n   private static Hashtable classLookupTable = new Hashtable();\n@@ -840,6 +888,7 @@ private ObjectStreamField[] getSerialPersistentFields(Class clazz)\n   boolean realClassIsExternalizable;\n   ObjectStreamField[] fieldMapping;\n   Class firstNonSerializableParent;\n+  private Constructor constructor;  // default constructor for Externalizable\n \n   boolean isProxyClass = false;\n "}]}