{"sha": "8bca10f462ac3981b5e1a3ad8d6592618aa72961", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJjYTEwZjQ2MmFjMzk4MWI1ZTFhM2FkOGQ2NTkyNjE4YWE3Mjk2MQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-04-10T22:39:01Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-04-10T22:39:01Z"}, "message": "(sne): Modified to use negc instead of xor.\n\n(sne+1): New define_split for new sne pattern.\n\nFrom-SVN: r13848", "tree": {"sha": "30afda86f147bb2eef659e3888aabaf7e2b0b8c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30afda86f147bb2eef659e3888aabaf7e2b0b8c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bca10f462ac3981b5e1a3ad8d6592618aa72961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bca10f462ac3981b5e1a3ad8d6592618aa72961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bca10f462ac3981b5e1a3ad8d6592618aa72961", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bca10f462ac3981b5e1a3ad8d6592618aa72961/comments", "author": null, "committer": null, "parents": [{"sha": "f3cd53755be56e7d6a05687789916f072ba8e9ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3cd53755be56e7d6a05687789916f072ba8e9ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3cd53755be56e7d6a05687789916f072ba8e9ab"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "342b3e40911adfebb993e3b6659855904494a76c", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bca10f462ac3981b5e1a3ad8d6592618aa72961/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bca10f462ac3981b5e1a3ad8d6592618aa72961/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=8bca10f462ac3981b5e1a3ad8d6592618aa72961", "patch": "@@ -2287,12 +2287,41 @@\n   \"\"\n   \"operands[1] = prepare_scc_operands (GEU);\")\n \n+;; sne moves the complement of the T reg to DEST like this:\n+;;      cmp/eq ...\n+;;      mov    #-1,temp\n+;;      negc   temp,dest\n+;;   This is better than xoring compare result with 1 because it does\n+;;   not require r0 and further, the -1 may be CSE-ed or lifted out of a\n+;;   loop.\n+\n (define_expand \"sne\"\n+  [(set (match_dup 2) (const_int -1))\n+   (parallel [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n+\t\t   (neg:SI (plus:SI (match_dup 1)\n+\t\t\t\t    (match_dup 2))))\n+\t      (set (reg:SI 18)\n+\t\t   (ne:SI (ior:SI (match_dup 1) (match_dup 2))\n+\t\t\t  (const_int 0)))])]  \n+  \"\"\n+  \"\n+{\n+   operands[1] = prepare_scc_operands (EQ);\n+   operands[2] = gen_reg_rtx (SImode);\n+}\")\n+\n+;; Recognize mov #-1/negc/neg sequence, and change it to movt/add #-1.\n+;; This prevents a regression that occured when we switched from xor to\n+;; mov/neg for sne.\n+\n+(define_split\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n-\t(match_dup 1))\n-   (set (match_dup 0) (xor:SI (match_dup 0) (const_int 1)))]\n+\t(plus:SI (reg:SI 18)\n+\t\t (const_int -1)))]\n   \"\"\n-  \"operands[1] = prepare_scc_operands (EQ);\")\n+  [(set (match_dup 0) (eq:SI (reg:SI 18) (const_int 1)))\n+   (set (match_dup 0) (plus:SI (match_dup 0) (const_int -1)))]\n+  \"\")\n \n ;; -------------------------------------------------------------------------\n ;; Instructions to cope with inline literal tables"}]}