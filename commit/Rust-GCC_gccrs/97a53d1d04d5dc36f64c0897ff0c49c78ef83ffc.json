{"sha": "97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdhNTNkMWQwNGQ1ZGMzNmY2NGMwODk3ZmYwYzQ5Yzc4ZWY4M2ZmYw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-06-05T12:10:22Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-06-05T12:10:22Z"}, "message": "Support variables in expansion of -fprofile-generate option (PR gcov-profile/47618).\n\n2018-06-05  Martin Liska  <mliska@suse.cz>\n\n\tPR gcov-profile/47618\n\t* doc/invoke.texi: Document how -fprofile-dir format\n        is extended.\n2018-06-05  Martin Liska  <mliska@suse.cz>\n\n\tPR gcov-profile/47618\n\t* libgcov-driver-system.c (replace_filename_variables): New\n        function.\n\t(gcov_exit_open_gcda_file): Use it.\n\nFrom-SVN: r261199", "tree": {"sha": "d088d0aa4d340c24d5eedc905d9cd05b01c035ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d088d0aa4d340c24d5eedc905d9cd05b01c035ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "066c4268db267ef6d88498b001b143db404e495e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/066c4268db267ef6d88498b001b143db404e495e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/066c4268db267ef6d88498b001b143db404e495e"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "25ab6bded67904adf38b101132976ed953459672", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc", "patch": "@@ -1,3 +1,9 @@\n+2018-06-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/47618\n+\t* doc/invoke.texi: Document how -fprofile-dir format\n+        is extended.\n+\n 2018-06-05  Richard Biener  <rguenther@suse.de>\n \n \t* tree-cfgcleanup.c (cleanup_control_flow_pre): For edge"}, {"sha": "3d767b64e856adf155bd77c68157618ba45bbcab", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc", "patch": "@@ -11343,6 +11343,20 @@ and its related options.  Both absolute and relative paths can be used.\n By default, GCC uses the current directory as @var{path}, thus the\n profile data file appears in the same directory as the object file.\n \n+When an executable is run in a massive parallel environment, it is recommended\n+to save profile to different folders.  That can be done with variables\n+in @var{path} that are exported during run-time:\n+\n+@table @gcctabopt\n+\n+@item %p\n+process ID.\n+\n+@item %q@{VAR@}\n+value of environment variable @var{VAR}\n+\n+@end table\n+\n @item -fprofile-generate\n @itemx -fprofile-generate=@var{path}\n @opindex fprofile-generate"}, {"sha": "5389999cd8c52bf0096e88a4d780b5515c095a60", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc", "patch": "@@ -1,3 +1,10 @@\n+2018-06-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/47618\n+\t* libgcov-driver-system.c (replace_filename_variables): New\n+        function.\n+\t(gcov_exit_open_gcda_file): Use it.\n+\n 2018-06-05  Martin Liska  <mliska@suse.cz>\n \n \t* libgcov-driver.c (gcov_compute_histogram): Remove usage"}, {"sha": "7f3de6317018853f04f1d8ab5ece2edfb57e1355", "filename": "libgcc/libgcov-driver-system.c", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc/libgcc%2Flibgcov-driver-system.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc/libgcc%2Flibgcov-driver-system.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-driver-system.c?ref=97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc", "patch": "@@ -136,6 +136,74 @@ create_file_directory (char *filename)\n #endif\n }\n \n+/* Replace filename variables in FILENAME.  We currently support expansion:\n+\n+   %p - process ID\n+   %q{ENV} - value of environment variable ENV\n+   */\n+\n+static char *\n+replace_filename_variables (char *filename)\n+{\n+  char buffer[16];\n+  char empty[] = \"\";\n+  for (char *p = filename; *p != '\\0'; p++)\n+    {\n+      unsigned length = strlen (filename);\n+      if (*p == '%' && *(p + 1) != '\\0')\n+\t{\n+\t  unsigned start = p - filename;\n+\t  p++;\n+\t  char *replacement = NULL;\n+\t  switch (*p)\n+\t    {\n+\t    case 'p':\n+\t      sprintf (buffer, \"%d\", getpid ());\n+\t      replacement = buffer;\n+\t      p++;\n+\t      break;\n+\t    case 'q':\n+\t      if (*(p + 1) == '{')\n+\t\t{\n+\t\t  p += 2;\n+\t\t  char *e = strchr (p, '}');\n+\t\t  if (e)\n+\t\t    {\n+\t\t      *e = '\\0';\n+\t\t      replacement = getenv (p);\n+\t\t      if (replacement == NULL)\n+\t\t\treplacement = empty;\n+\t\t      p = e + 1;\n+\t\t    }\n+\t\t  else\n+\t\t    return filename;\n+\t\t}\n+\t      break;\n+\t    default:\n+\t      return filename;\n+\t    }\n+\n+\t  /* Concat beginning of the path, replacement and\n+\t     ending of the path.  */\n+\t  unsigned end = length - (p - filename);\n+\t  unsigned repl_length = strlen (replacement);\n+\n+\t  char *buffer = (char *)xmalloc (start + end + repl_length + 1);\n+\t  char *buffer_ptr = buffer;\n+\t  buffer_ptr = (char *)mempcpy (buffer_ptr, filename, start);\n+\t  buffer_ptr = (char *)mempcpy (buffer_ptr, replacement, repl_length);\n+\t  buffer_ptr = (char *)mempcpy (buffer_ptr, p, end);\n+\t  *buffer_ptr = '\\0';\n+\n+\t  free (filename);\n+\t  filename = buffer;\n+\t  p = buffer + start + repl_length;\n+\t}\n+    }\n+\n+  return filename;\n+}\n+\n static void\n allocate_filename_struct (struct gcov_filename *gf)\n {\n@@ -224,6 +292,8 @@ gcov_exit_open_gcda_file (struct gcov_info *gi_ptr,\n     }\n   strcpy (dst, fname);\n \n+  gf->filename = replace_filename_variables (gf->filename);\n+\n   if (!gcov_open (gf->filename))\n     {\n       /* Open failed likely due to missed directory."}]}