{"sha": "40a99889160feec59b82f191abe944c1eedaa2b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBhOTk4ODkxNjBmZWVjNTliODJmMTkxYWJlOTQ0YzFlZWRhYTJiMA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2009-08-30T17:22:15Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2009-08-30T17:22:15Z"}, "message": "dwarf2out.c (switch_to_frame_table_section): Move definition prior to first use.\n\n        * dwarf2out.c (switch_to_frame_table_section): Move\n        definition prior to first use.\n\nFrom-SVN: r151230", "tree": {"sha": "e4a224cf4c04eafa519c1e2718302a0ab55bfa7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4a224cf4c04eafa519c1e2718302a0ab55bfa7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40a99889160feec59b82f191abe944c1eedaa2b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a99889160feec59b82f191abe944c1eedaa2b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40a99889160feec59b82f191abe944c1eedaa2b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a99889160feec59b82f191abe944c1eedaa2b0/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f945e22962a013fac2d7ee26bb510734e0cf4dac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f945e22962a013fac2d7ee26bb510734e0cf4dac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f945e22962a013fac2d7ee26bb510734e0cf4dac"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "83081f795da690cd6df919f0ccdad22b5621916a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a99889160feec59b82f191abe944c1eedaa2b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a99889160feec59b82f191abe944c1eedaa2b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40a99889160feec59b82f191abe944c1eedaa2b0", "patch": "@@ -1,3 +1,8 @@\n+2009-08-30  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* dwarf2out.c (switch_to_frame_table_section): Move\n+\tdefinition prior to first use.\n+\n 2009-08-30  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/41186"}, {"sha": "9ff6a172a086bb757edab1969b8e0f24f8ad40bc", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40a99889160feec59b82f191abe944c1eedaa2b0/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40a99889160feec59b82f191abe944c1eedaa2b0/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=40a99889160feec59b82f191abe944c1eedaa2b0", "patch": "@@ -2992,6 +2992,23 @@ switch_to_eh_frame_section (bool back)\n     }\n }\n \n+/* Switch [BACK] to the eh or debug frame table section, depending on\n+   FOR_EH.  */\n+\n+static void\n+switch_to_frame_table_section (int for_eh, bool back)\n+{\n+  if (for_eh)\n+    switch_to_eh_frame_section (back);\n+  else\n+    {\n+      if (!debug_frame_section)\n+\tdebug_frame_section = get_section (DEBUG_FRAME_SECTION,\n+\t\t\t\t\t   SECTION_DEBUG, NULL);\n+      switch_to_section (debug_frame_section);\n+    }\n+}\n+\n /* Output a Call Frame Information opcode and its operand(s).  */\n \n static void\n@@ -3560,23 +3577,6 @@ output_fde (dw_fde_ref fde, bool for_eh, bool second,\n   j += 2;\n }\n \n-\n-/* Switch [BACK] to the eh or debug frame table section, depending on\n-   FOR_EH.  */\n-static void\n-switch_to_frame_table_section (int for_eh, bool back)\n-{\n-  if (for_eh)\n-    switch_to_eh_frame_section (back);\n-  else\n-    {\n-      if (!debug_frame_section)\n-\tdebug_frame_section = get_section (DEBUG_FRAME_SECTION,\n-\t\t\t\t\t   SECTION_DEBUG, NULL);\n-      switch_to_section (debug_frame_section);\n-    }\n-}\n-\n /* Output the call frame information used to record information\n    that relates to calculating the frame pointer, and records the\n    location of saved registers.  */"}]}