{"sha": "b46c79a1f6f5ed512218196e5d5fca8ca0545b92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ2Yzc5YTFmNmY1ZWQ1MTIyMTgxOTZlNWQ1ZmNhOGNhMDU0NWI5Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-04-07T21:47:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-04-07T21:47:45Z"}, "message": "re PR c++/48450 ([C++0x][SFINAE] Hard errors with static_cast expressions)\n\n\tPR c++/48450\n\t* call.c (resolve_args): Take complain.\n\t(build_new_function_call, build_operator_new_call): Pass it.\n\t(build_op_call, build_new_op, build_new_method_call): Pass it.\n\nFrom-SVN: r172146", "tree": {"sha": "d8a9aa4a6398d3ca1d068200366a8e7c7237d035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8a9aa4a6398d3ca1d068200366a8e7c7237d035"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b46c79a1f6f5ed512218196e5d5fca8ca0545b92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b46c79a1f6f5ed512218196e5d5fca8ca0545b92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b46c79a1f6f5ed512218196e5d5fca8ca0545b92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b46c79a1f6f5ed512218196e5d5fca8ca0545b92/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f89235e9d26a56e848d99a812177e149d87df3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f89235e9d26a56e848d99a812177e149d87df3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f89235e9d26a56e848d99a812177e149d87df3c"}], "stats": {"total": 47, "additions": 39, "deletions": 8}, "files": [{"sha": "976c7fb6f653b77669bca83c25af481cde663e6a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b46c79a1f6f5ed512218196e5d5fca8ca0545b92/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b46c79a1f6f5ed512218196e5d5fca8ca0545b92/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b46c79a1f6f5ed512218196e5d5fca8ca0545b92", "patch": "@@ -1,5 +1,10 @@\n 2011-04-07  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48450\n+\t* call.c (resolve_args): Take complain.\n+\t(build_new_function_call, build_operator_new_call): Pass it.\n+\t(build_op_call, build_new_op, build_new_method_call): Pass it.\n+\n \tPR c++/48450\n \t* typeck.c (check_for_casting_away_constness): Take complain.\n \t(build_static_cast_1, build_reinterpret_cast_1): Pass it."}, {"sha": "f283bd116609fd76d7aa77eb9227c2964746d42d", "filename": "gcc/cp/call.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b46c79a1f6f5ed512218196e5d5fca8ca0545b92/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b46c79a1f6f5ed512218196e5d5fca8ca0545b92/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=b46c79a1f6f5ed512218196e5d5fca8ca0545b92", "patch": "@@ -155,7 +155,6 @@ static tree convert_like_real (conversion *, tree, tree, int, int, bool,\n \t\t\t       bool, tsubst_flags_t);\n static void op_error (enum tree_code, enum tree_code, tree, tree,\n \t\t      tree, bool);\n-static VEC(tree,gc) *resolve_args (VEC(tree,gc) *);\n static struct z_candidate *build_user_type_conversion_1 (tree, tree, int);\n static void print_z_candidate (const char *, struct z_candidate *);\n static void print_z_candidates (location_t, struct z_candidate *);\n@@ -3525,7 +3524,7 @@ build_integral_nontype_arg_conv (tree type, tree expr, tsubst_flags_t complain)\n /* Do any initial processing on the arguments to a function call.  */\n \n static VEC(tree,gc) *\n-resolve_args (VEC(tree,gc) *args)\n+resolve_args (VEC(tree,gc) *args, tsubst_flags_t complain)\n {\n   unsigned int ix;\n   tree arg;\n@@ -3536,7 +3535,8 @@ resolve_args (VEC(tree,gc) *args)\n \treturn NULL;\n       else if (VOID_TYPE_P (TREE_TYPE (arg)))\n \t{\n-\t  error (\"invalid use of void expression\");\n+\t  if (complain & tf_error)\n+\t    error (\"invalid use of void expression\");\n \t  return NULL;\n \t}\n       else if (invalid_nonstatic_memfn_p (arg, tf_warning_or_error))\n@@ -3636,7 +3636,7 @@ build_new_function_call (tree fn, VEC(tree,gc) **args, bool koenig_p,\n \n   if (args != NULL && *args != NULL)\n     {\n-      *args = resolve_args (*args);\n+      *args = resolve_args (*args, complain);\n       if (*args == NULL)\n \treturn error_mark_node;\n     }\n@@ -3707,7 +3707,7 @@ build_operator_new_call (tree fnname, VEC(tree,gc) **args,\n   if (fn)\n     *fn = NULL_TREE;\n   VEC_safe_insert (tree, gc, *args, 0, *size);\n-  *args = resolve_args (*args);\n+  *args = resolve_args (*args, tf_warning_or_error);\n   if (*args == NULL)\n     return error_mark_node;\n \n@@ -3820,7 +3820,7 @@ build_op_call (tree obj, VEC(tree,gc) **args, tsubst_flags_t complain)\n \n   if (args != NULL && *args != NULL)\n     {\n-      *args = resolve_args (*args);\n+      *args = resolve_args (*args, complain);\n       if (*args == NULL)\n \treturn error_mark_node;\n     }\n@@ -4864,7 +4864,7 @@ build_new_op (enum tree_code code, int flags, tree arg1, tree arg2, tree arg3,\n \t  if (overloaded_p)\n \t    *overloaded_p = true;\n \n-\t  if (resolve_args (arglist) == NULL)\n+\t  if (resolve_args (arglist, complain) == NULL)\n \t    result = error_mark_node;\n \t  else\n \t    result = build_over_call (cand, LOOKUP_NORMAL, complain);\n@@ -6850,7 +6850,7 @@ build_new_method_call (tree instance, tree fns, VEC(tree,gc) **args,\n   /* Process the argument list.  */\n   if (args != NULL && *args != NULL)\n     {\n-      *args = resolve_args (*args);\n+      *args = resolve_args (*args, complain);\n       if (*args == NULL)\n \treturn error_mark_node;\n     }"}, {"sha": "dcdd32d9895bb7d9bfecf5cdfc0ee1026ea589b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b46c79a1f6f5ed512218196e5d5fca8ca0545b92/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b46c79a1f6f5ed512218196e5d5fca8ca0545b92/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b46c79a1f6f5ed512218196e5d5fca8ca0545b92", "patch": "@@ -1,5 +1,7 @@\n 2011-04-07  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/sfinae9.C: New.\n+\n \t* c-c++-common/Wcast-qual-1.c: Move here from...\n \t* gcc.dg/cast-qual-3.c: ...here, and...\n \t* g++.dg/warn/Wcast-qual2.C: ...here."}, {"sha": "6f1de21d51d89fdf78e9987a6017aa4823815a4f", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae9.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b46c79a1f6f5ed512218196e5d5fca8ca0545b92/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b46c79a1f6f5ed512218196e5d5fca8ca0545b92/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae9.C?ref=b46c79a1f6f5ed512218196e5d5fca8ca0545b92", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/48450\n+// { dg-options -std=c++0x }\n+\n+namespace std {\n+  template <class T> T&& declval();\n+};\n+\n+template<class To, class From,\n+  class = decltype(static_cast<To>(std::declval<From>()))\n+>\n+char f(int);\n+\n+template<class, class>\n+char (&f(...))[2];\n+\n+struct A { virtual ~A() = 0; };\n+struct B {};\n+struct D : B {};\n+\n+static_assert(sizeof(f<A, int>(0)) != 1, \"Error\"); // a\n+static_assert(sizeof(f<int*, const void*>(0)) != 1, \"Error\"); // b\n+static_assert(sizeof(f<D*, const B*>(0)) != 1, \"Error\"); // c\n+static_assert(sizeof(f<int B::*, const int D::*>(0)) != 1, \"Error\"); // d\n+static_assert(sizeof(f<B, void>(0)) != 1, \"Error\"); // e"}]}