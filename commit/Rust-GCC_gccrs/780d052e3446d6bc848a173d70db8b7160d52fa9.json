{"sha": "780d052e3446d6bc848a173d70db8b7160d52fa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgwZDA1MmUzNDQ2ZDZiYzg0OGExNzNkNzBkYjhiNzE2MGQ1MmZhOQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-02T08:06:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T08:06:18Z"}, "message": "sem_ch8.adb: Minor code reorganization, comment updates.\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch8.adb: Minor code reorganization, comment updates.\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_res.adb (Matching_Static_Array_Bounds): Moved to Sem_Util\n\t* sem_util.ads, sem_util.adb (Matching_Static_Array_Bounds): Moved\n\there from Sem_Res.\n\t(Matching_Static_Array_Bounds): Use Is_Ok_Static_Expression\n\t(Matching_Static_Array_Bounds): Moved here from Sem_Res\n\nFrom-SVN: r177091", "tree": {"sha": "0c03e4ebb5f14f4f361a847a905e0f996629e8eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c03e4ebb5f14f4f361a847a905e0f996629e8eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/780d052e3446d6bc848a173d70db8b7160d52fa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/780d052e3446d6bc848a173d70db8b7160d52fa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/780d052e3446d6bc848a173d70db8b7160d52fa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/780d052e3446d6bc848a173d70db8b7160d52fa9/comments", "author": null, "committer": null, "parents": [{"sha": "29efbb8cc60bc986c8a761e2a947b84d3e10a9fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29efbb8cc60bc986c8a761e2a947b84d3e10a9fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29efbb8cc60bc986c8a761e2a947b84d3e10a9fd"}], "stats": {"total": 175, "additions": 97, "deletions": 78}, "files": [{"sha": "ae47e20e5a1cfe97d9fd50c7cb6b28119b72fae6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/780d052e3446d6bc848a173d70db8b7160d52fa9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/780d052e3446d6bc848a173d70db8b7160d52fa9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=780d052e3446d6bc848a173d70db8b7160d52fa9", "patch": "@@ -1,3 +1,15 @@\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch8.adb: Minor code reorganization, comment updates.\n+\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_res.adb (Matching_Static_Array_Bounds): Moved to Sem_Util\n+\t* sem_util.ads, sem_util.adb (Matching_Static_Array_Bounds): Moved\n+\there from Sem_Res.\n+\t(Matching_Static_Array_Bounds): Use Is_Ok_Static_Expression\n+\t(Matching_Static_Array_Bounds): Moved here from Sem_Res\n+\n 2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n \n \t* atree.h, atree.ads, atree.adb: New subprograms to manipulate Elist5."}, {"sha": "7f4e4b166ffa48b7d63f750246f379e5a59a3cab", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/780d052e3446d6bc848a173d70db8b7160d52fa9/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/780d052e3446d6bc848a173d70db8b7160d52fa9/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=780d052e3446d6bc848a173d70db8b7160d52fa9", "patch": "@@ -2679,9 +2679,13 @@ package body Sem_Ch8 is\n          Chain_Use_Clause (N);\n       end if;\n \n-      --  Commented needed???\n+      --  If the Used_Operations list is already initialized, the clause has\n+      --  been analyzed previously, and it is begin reinstalled, for example\n+      --  when the clause appears in a package spec and we are compiling the\n+      --  corresponding package body. In that case, make the entities on the\n+      --  existing list use-visible.\n \n-      if Used_Operations (N) /= No_Elist then\n+      if Present (Used_Operations (N)) then\n          declare\n             Elmt : Elmt_Id;\n          begin\n@@ -2695,6 +2699,9 @@ package body Sem_Ch8 is\n          return;\n       end if;\n \n+      --  Otherwise, create new list and attach to it the operations that\n+      --  are made use-visible by the clause.\n+\n       Set_Used_Operations (N, New_Elmt_List);\n       Id := First (Subtype_Marks (N));\n       while Present (Id) loop"}, {"sha": "7f71d1bfff1a88d371ea2e877bf6373522d85c3e", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 13, "deletions": 76, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/780d052e3446d6bc848a173d70db8b7160d52fa9/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/780d052e3446d6bc848a173d70db8b7160d52fa9/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=780d052e3446d6bc848a173d70db8b7160d52fa9", "patch": "@@ -92,12 +92,6 @@ package body Sem_Res is\n \n    --  Note that Resolve_Attribute is separated off in Sem_Attr\n \n-   function Matching_Static_Array_Bounds\n-     (L_Typ : Node_Id;\n-      R_Typ : Node_Id) return Boolean;\n-   --  L_Typ and R_Typ are two array types. Returns True when they have the\n-   --  same dimension, and, for each index position, the same static bounds.\n-\n    function Bad_Unordered_Enumeration_Reference\n      (N : Node_Id;\n       T : Entity_Id) return Boolean;\n@@ -1577,65 +1571,6 @@ package body Sem_Res is\n       end if;\n    end Make_Call_Into_Operator;\n \n-   ----------------------------------\n-   -- Matching_Static_Array_Bounds --\n-   ----------------------------------\n-\n-   function Matching_Static_Array_Bounds\n-     (L_Typ : Node_Id;\n-      R_Typ : Node_Id) return Boolean\n-   is\n-      L_Ndims : constant Nat := Number_Dimensions (L_Typ);\n-      R_Ndims : constant Nat := Number_Dimensions (R_Typ);\n-\n-      L_Index : Node_Id;\n-      R_Index : Node_Id;\n-      L_Low   : Node_Id;\n-      L_High  : Node_Id;\n-      R_Low   : Node_Id;\n-      R_High  : Node_Id;\n-\n-   begin\n-      if L_Ndims /= R_Ndims then\n-         return False;\n-      end if;\n-\n-      --  Unconstrained types do not have static bounds\n-\n-      if not Is_Constrained (L_Typ) or else not Is_Constrained (R_Typ) then\n-         return False;\n-      end if;\n-\n-      L_Index := First_Index (L_Typ);\n-      R_Index := First_Index (R_Typ);\n-\n-      for Indx in 1 .. L_Ndims loop\n-         Get_Index_Bounds (L_Index, L_Low, L_High);\n-         Get_Index_Bounds (R_Index, R_Low, R_High);\n-\n-         if True\n-           and then Is_Static_Expression (L_Low)\n-           and then Is_Static_Expression (L_High)\n-           and then Is_Static_Expression (R_Low)\n-           and then Is_Static_Expression (R_High)\n-           and then Expr_Value (L_Low)  = Expr_Value (R_Low)\n-           and then Expr_Value (L_High) = Expr_Value (R_High)\n-         then\n-            --  Matching so far, continue with next index\n-\n-            null;\n-\n-         else\n-            return False;\n-         end if;\n-\n-         Next (L_Index);\n-         Next (R_Index);\n-      end loop;\n-\n-      return True;\n-   end Matching_Static_Array_Bounds;\n-\n    -------------------\n    -- Operator_Kind --\n    -------------------\n@@ -3634,15 +3569,16 @@ package body Sem_Res is\n                   Operand     : constant Node_Id   := Expression (A);\n                   Operand_Typ : constant Entity_Id := Etype (Operand);\n                   Target_Typ  : constant Entity_Id := A_Typ;\n+\n                begin\n                   if not (Is_Tagged_Type (Target_Typ)\n-                          and then not Is_Class_Wide_Type (Target_Typ)\n-                          and then Is_Tagged_Type (Operand_Typ)\n-                          and then not Is_Class_Wide_Type (Operand_Typ)\n-                          and then Is_Ancestor (Target_Typ, Operand_Typ))\n+                           and then not Is_Class_Wide_Type (Target_Typ)\n+                           and then Is_Tagged_Type (Operand_Typ)\n+                           and then not Is_Class_Wide_Type (Operand_Typ)\n+                           and then Is_Ancestor (Target_Typ, Operand_Typ))\n                   then\n                      Error_Msg_F (\"|~~ancestor conversion is the only \"\n-                                  & \"view conversion\", A);\n+                                  & \"permitted view conversion\", A);\n                   end if;\n                end;\n             end if;\n@@ -4893,7 +4829,7 @@ package body Sem_Res is\n \n       if Formal_Verification_Mode\n         and then (Is_Fixed_Point_Type (Etype (L))\n-                  or else Is_Fixed_Point_Type (Etype (R)))\n+                   or else Is_Fixed_Point_Type (Etype (R)))\n         and then Nkind_In (N, N_Op_Multiply, N_Op_Divide)\n         and then\n           not Nkind_In (Parent (N), N_Qualified_Expression, N_Type_Conversion)\n@@ -4921,10 +4857,10 @@ package body Sem_Res is\n \n             if Compile_Time_Known_Value (Rop)\n               and then ((Is_Integer_Type (Etype (Rop))\n-                           and then Expr_Value (Rop) = Uint_0)\n-                          or else\n-                        (Is_Real_Type (Etype (Rop))\n-                           and then Expr_Value_R (Rop) = Ureal_0))\n+                          and then Expr_Value (Rop) = Uint_0)\n+                         or else\n+                           (Is_Real_Type (Etype (Rop))\n+                             and then Expr_Value_R (Rop) = Ureal_0))\n             then\n                --  Specialize the warning message according to the operation\n \n@@ -5911,7 +5847,8 @@ package body Sem_Res is\n            and then Base_Type (T) /= Standard_String\n          then\n             Error_Msg_F\n-              (\"|~~comparison is not defined on array type except String\", N);\n+              (\"|~~comparison is not defined on array types \" &\n+               \"other than String\", N);\n          end if;\n       end if;\n "}, {"sha": "78348d4d1519e1352c302708c4147d47b7101d9c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/780d052e3446d6bc848a173d70db8b7160d52fa9/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/780d052e3446d6bc848a173d70db8b7160d52fa9/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=780d052e3446d6bc848a173d70db8b7160d52fa9", "patch": "@@ -7998,6 +7998,62 @@ package body Sem_Util is\n       return N;\n    end Last_Source_Statement;\n \n+   ----------------------------------\n+   -- Matching_Static_Array_Bounds --\n+   ----------------------------------\n+\n+   function Matching_Static_Array_Bounds\n+     (L_Typ : Node_Id;\n+      R_Typ : Node_Id) return Boolean\n+   is\n+      L_Ndims : constant Nat := Number_Dimensions (L_Typ);\n+      R_Ndims : constant Nat := Number_Dimensions (R_Typ);\n+\n+      L_Index : Node_Id;\n+      R_Index : Node_Id;\n+      L_Low   : Node_Id;\n+      L_High  : Node_Id;\n+      R_Low   : Node_Id;\n+      R_High  : Node_Id;\n+\n+   begin\n+      if L_Ndims /= R_Ndims then\n+         return False;\n+      end if;\n+\n+      --  Unconstrained types do not have static bounds\n+\n+      if not Is_Constrained (L_Typ) or else not Is_Constrained (R_Typ) then\n+         return False;\n+      end if;\n+\n+      L_Index := First_Index (L_Typ);\n+      R_Index := First_Index (R_Typ);\n+\n+      for Indx in 1 .. L_Ndims loop\n+         Get_Index_Bounds (L_Index, L_Low, L_High);\n+         Get_Index_Bounds (R_Index, R_Low, R_High);\n+\n+         if         Is_OK_Static_Expression (L_Low)\n+           and then Is_OK_Static_Expression (L_High)\n+           and then Is_OK_Static_Expression (R_Low)\n+           and then Is_OK_Static_Expression (R_High)\n+           and then Expr_Value (L_Low)  = Expr_Value (R_Low)\n+           and then Expr_Value (L_High) = Expr_Value (R_High)\n+         then\n+            Next (L_Index);\n+            Next (R_Index);\n+\n+         else\n+            return False;\n+         end if;\n+      end loop;\n+\n+      --  If we fall through the loop, all indexes matched\n+\n+      return True;\n+   end Matching_Static_Array_Bounds;\n+\n    -------------------\n    -- May_Be_Lvalue --\n    -------------------"}, {"sha": "6410db4a9b57c34e1a8e20315e693a96cb099002", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/780d052e3446d6bc848a173d70db8b7160d52fa9/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/780d052e3446d6bc848a173d70db8b7160d52fa9/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=780d052e3446d6bc848a173d70db8b7160d52fa9", "patch": "@@ -939,6 +939,13 @@ package Sem_Util is\n    --  See Sinfo. We rename Make_Return_Statement to the correct Ada 2005\n    --  terminology here. Clients should use Make_Simple_Return_Statement.\n \n+   function Matching_Static_Array_Bounds\n+     (L_Typ : Node_Id;\n+      R_Typ : Node_Id) return Boolean;\n+   --  L_Typ and R_Typ are two array types. Returns True when they have the\n+   --  same number of dimensions, and the same static bounds for each index\n+   --  position.\n+\n    Make_Return_Statement : constant := -2 ** 33;\n    --  Attempt to prevent accidental uses of Make_Return_Statement. If this\n    --  and the one in Nmake are both potentially use-visible, it will cause"}]}