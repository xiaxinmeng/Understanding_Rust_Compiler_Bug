{"sha": "1d146030e28eb829762a0c888abf8733ec500b89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQxNDYwMzBlMjhlYjgyOTc2MmEwYzg4OGFiZjg3MzNlYzUwMGI4OQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-04-06T08:33:31Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-04-06T08:33:31Z"}, "message": "re PR fortran/39414 (PROCEDURE statement double declaration bug)\n\n2009-04-06  Janus Weil  <janus@gcc.gnu.org>\n\n       PR fortran/39414\n       * decl.c (match_procedure_decl): Fix double declaration problems with\n       PROCEDURE statements.\n       * symbol.c (gfc_add_type): Ditto.\n\n\n2009-04-06  Janus Weil  <janus@gcc.gnu.org>\n\n       PR fortran/39414\n       * gfortran.dg/proc_decl_21.f90: New.\n\nFrom-SVN: r145583", "tree": {"sha": "9559bbc93d5db9e66bb147c44b2a1e1dac14cc6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9559bbc93d5db9e66bb147c44b2a1e1dac14cc6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d146030e28eb829762a0c888abf8733ec500b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d146030e28eb829762a0c888abf8733ec500b89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d146030e28eb829762a0c888abf8733ec500b89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d146030e28eb829762a0c888abf8733ec500b89/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d253f6e46182cfb4d2964d968f70989ca79118c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d253f6e46182cfb4d2964d968f70989ca79118c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d253f6e46182cfb4d2964d968f70989ca79118c"}], "stats": {"total": 66, "additions": 62, "deletions": 4}, "files": [{"sha": "6db6c63c41d94db45460f475eb31f2acdbd53dc6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d146030e28eb829762a0c888abf8733ec500b89/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d146030e28eb829762a0c888abf8733ec500b89/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1d146030e28eb829762a0c888abf8733ec500b89", "patch": "@@ -1,3 +1,10 @@\n+2009-04-06  Janus Weil  <janus@gcc.gnu.org>\n+\n+       PR fortran/39414\n+       * decl.c (match_procedure_decl): Fix double declaration problems with\n+       PROCEDURE statements.\n+       * symbol.c (gfc_add_type): Ditto.\n+\n 2009-04-06  Paul Thomas  <pault@gcc.gnu.org>\n \n         PR fortran/36091"}, {"sha": "2e541471f2ba4936833820609688941cd4dda0cc", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d146030e28eb829762a0c888abf8733ec500b89/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d146030e28eb829762a0c888abf8733ec500b89/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=1d146030e28eb829762a0c888abf8733ec500b89", "patch": "@@ -4207,12 +4207,20 @@ match_procedure_decl (void)\n       /* Set interface.  */\n       if (proc_if != NULL)\n \t{\n+          if (sym->ts.type != BT_UNKNOWN)\n+\t    {\n+\t      gfc_error (\"Procedure '%s' at %L already has basic type of %s\",\n+\t\t\t sym->name, &gfc_current_locus,\n+\t\t\t gfc_basic_typename (sym->ts.type));\n+\t      return MATCH_ERROR;\n+\t    }\n \t  sym->ts.interface = proc_if;\n \t  sym->attr.untyped = 1;\n \t}\n       else if (current_ts.type != BT_UNKNOWN)\n \t{\n-\t  sym->ts = current_ts;\n+\t  if (gfc_add_type (sym, &current_ts, &gfc_current_locus) == FAILURE)\n+\t    return MATCH_ERROR;\n \t  sym->ts.interface = gfc_new_symbol (\"\", gfc_current_ns);\n \t  sym->ts.interface->ts = current_ts;\n \t  sym->ts.interface->attr.function = 1;"}, {"sha": "74146165637b83281bf126cc65e73f98f33501d3", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d146030e28eb829762a0c888abf8733ec500b89/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d146030e28eb829762a0c888abf8733ec500b89/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=1d146030e28eb829762a0c888abf8733ec500b89", "patch": "@@ -1555,8 +1555,7 @@ gfc_add_type (gfc_symbol *sym, gfc_typespec *ts, locus *where)\n   if (sym->ts.type != BT_UNKNOWN)\n     {\n       const char *msg = \"Symbol '%s' at %L already has basic type of %s\";\n-      if (!(sym->ts.type == ts->type\n-\t    && (sym->attr.flavor == FL_PROCEDURE || sym->attr.result))\n+      if (!(sym->ts.type == ts->type && sym->attr.result)\n \t  || gfc_notification_std (GFC_STD_GNU) == ERROR\n \t  || pedantic)\n \t{\n@@ -1570,6 +1569,13 @@ gfc_add_type (gfc_symbol *sym, gfc_typespec *ts, locus *where)\n \tgfc_warning (msg, sym->name, where, gfc_basic_typename (sym->ts.type));\n     }\n \n+  if (sym->attr.procedure && sym->ts.interface)\n+    {\n+      gfc_error (\"Procedure '%s' at %L may not have basic type of %s\", sym->name, where,\n+\t\t gfc_basic_typename (ts->type));\n+      return FAILURE;\n+    }\n+\n   flavor = sym->attr.flavor;\n \n   if (flavor == FL_PROGRAM || flavor == FL_BLOCK_DATA || flavor == FL_MODULE"}, {"sha": "3bedcb74caf8e6b7f7af1173174906f837c51f98", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d146030e28eb829762a0c888abf8733ec500b89/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d146030e28eb829762a0c888abf8733ec500b89/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1d146030e28eb829762a0c888abf8733ec500b89", "patch": "@@ -1,4 +1,9 @@\n-2009-04-06  Paul Thomas  <pault@gcc.gnu.org\n+2009-04-06  Janus Weil  <janus@gcc.gnu.org>\n+\n+       PR fortran/39414\n+       * gfortran.dg/proc_decl_21.f90: New.\n+\n+2009-04-06  Paul Thomas  <pault@gcc.gnu.org>\n \n         PR fortran/36091\n         * gfortran.dg/forall_13.f90: Add -fbounds-check option."}, {"sha": "4fd4020cb80c813bd49fe4a124ed034f99e9a3f0", "filename": "gcc/testsuite/gfortran.dg/proc_decl_21.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d146030e28eb829762a0c888abf8733ec500b89/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_21.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d146030e28eb829762a0c888abf8733ec500b89/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_21.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_21.f90?ref=1d146030e28eb829762a0c888abf8733ec500b89", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+!\n+! PR fortran/39414: PROCEDURE statement double declaration bug\n+!\n+! Discovered by Paul Thomas <pault@gcc.gnu.org>\n+! Modified by Janus Weil <janus@gcc.gnu.org>\n+\n+\n+! forbidden\n+\n+procedure(integer) :: a\n+integer :: a   ! { dg-error \"already has basic type of\" }\n+\n+integer :: b\n+procedure(integer) :: b\t  ! { dg-error \"already has basic type of\" }\n+\n+procedure(iabs) :: c\n+integer :: c   ! { dg-error \"may not have basic type of\" }\n+\n+integer :: d\n+procedure(iabs) :: d   ! { dg-error \"already has basic type of\" }\n+\n+! allowed\n+\n+integer :: e\n+procedure() :: e\n+\n+procedure() :: f\n+integer :: f\n+\n+end\n+"}]}