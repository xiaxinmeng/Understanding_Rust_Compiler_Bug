{"sha": "1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWViM2U4NDQyZjhjNTQ5YzliMmVkMjFjYTc1ZWI3ZmIxMmIxMGIwZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-23T04:41:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-23T04:41:58Z"}, "message": "Initial revision\n\nFrom-SVN: r18770", "tree": {"sha": "9bc386a0875ecd26d247a4eb18407b6c59020a25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bc386a0875ecd26d247a4eb18407b6c59020a25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/comments", "author": null, "committer": null, "parents": [{"sha": "34b6478b59f51c9d5b2b634ea0aefa6813cdbb2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34b6478b59f51c9d5b2b634ea0aefa6813cdbb2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34b6478b59f51c9d5b2b634ea0aefa6813cdbb2a"}], "stats": {"total": 47363, "additions": 47363, "deletions": 0}, "files": [{"sha": "75f8a27fda13634ae63ebf2ce7d65f51991cc978", "filename": "texinfo/ABOUT-NLS", "status": "added", "additions": 226, "deletions": 0, "changes": 226, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2FABOUT-NLS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2FABOUT-NLS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2FABOUT-NLS?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,226 @@\n+Notes on the GNU Translation Project\n+************************************\n+\n+   GNU is going international!  The GNU Translation Project is a way to\n+get maintainers, translators, and users all together, so that GNU will\n+gradually become able to speak many languages.  A few packages already\n+provide translations for their messages.\n+\n+   If you found this `ABOUT-NLS' file inside a GNU distribution, you\n+may assume that the distributed package does use GNU `gettext'\n+internally, itself available at your nearest GNU archive site.  But you\n+do *not* need to install GNU `gettext' prior to configuring, installing\n+or using this package with messages translated.\n+\n+   Installers will find here some useful hints.  These notes also\n+explain how users should proceed for getting the programs to use the\n+available translations.  They tell how people wanting to contribute and\n+work at translations should contact the appropriate team.\n+\n+   When reporting bugs in the `intl/' directory or bugs which may be\n+related to internationalization, you should tell about the version of\n+`gettext' which is used.  The information can be found in the\n+`intl/VERSION' file, in internationalized packages.\n+\n+One advise in advance\n+=====================\n+\n+   If you want to exploit the full power of internationalization, you\n+should configure it using\n+\n+     ./configure --with-included-gettext\n+\n+to force usage of internationalizing routines provided within this\n+package, despite the existence of internationalizing capabilities in\n+the operating system where this package is being installed.  So far, no\n+prior implementation provides as many useful features (such as locale\n+alias or message inheritance).  It is also not possible to offer this\n+additional functionality on top of a `catgets' implementation.  Future\n+versions of GNU `gettext' will very likely convey even more\n+functionality.  So it might be a good idea to change to GNU `gettext'\n+as soon as possible.\n+\n+INSTALL Matters\n+===============\n+\n+   Some GNU packages are \"localizable\" when properly installed; the\n+programs they contain can be made to speak your own native language.\n+Most such packages use GNU `gettext'.  Other packages have their own\n+ways to internationalization, predating GNU `gettext'.\n+\n+   By default, this package will be installed to allow translation of\n+messages.  It will automatically detect whether the system provides\n+usable `catgets' (if using this is selected by the installer) or\n+`gettext' functions.  If neither is available, the GNU `gettext' own\n+library will be used.  This library is wholly contained within this\n+package, usually in the `intl/' subdirectory, so prior installation of\n+the GNU `gettext' package is *not* required.  Installers may use\n+special options at configuration time for changing the default\n+behaviour.  The commands:\n+\n+     ./configure --with-included-gettext\n+     ./configure --with-catgets\n+     ./configure --disable-nls\n+\n+will respectively bypass any pre-existing `catgets' or `gettext' to use\n+the internationalizing routines provided within this package, enable\n+the use of the `catgets' functions (if found on the locale system), or\n+else, *totally* disable translation of messages.\n+\n+   When you already have GNU `gettext' installed on your system and run\n+configure without an option for your new package, `configure' will\n+probably detect the previously built and installed `libintl.a' file and\n+will decide to use this.  This might be not what is desirable.  You\n+should use the more recent version of the GNU `gettext' library.  I.e.\n+if the file `intl/VERSION' shows that the library which comes with this\n+package is more recent, you should use\n+\n+     ./configure --with-included-gettext\n+\n+to prevent auto-detection.\n+\n+   By default the configuration process will not test for the `catgets'\n+function and therefore they will not be used.  The reasons are already\n+given above: the emulation on top of `catgets' cannot provide all the\n+extensions provided by the GNU `gettext' library.  If you nevertheless\n+want to use the `catgets' functions use\n+\n+     ./configure --with-catgets\n+\n+to enable the test for `catgets' (this causes no harm if `catgets' is\n+not available on your system).  If you really select this option we\n+would like to hear about the reasons because we cannot think of any\n+good one ourself.\n+\n+   Internationalized packages have usually many `po/LL.po' files, where\n+LL gives an ISO 639 two-letter code identifying the language.  Unless\n+translations have been forbidden at `configure' time by using the\n+`--disable-nls' switch, all available translations are installed\n+together with the package.  However, the environment variable `LINGUAS'\n+may be set, prior to configuration, to limit the installed set.\n+`LINGUAS' should then contain a space separated list of two-letter\n+codes, stating which languages are allowed.\n+\n+Using This Package\n+==================\n+\n+   As a user, if your language has been installed for this package, you\n+only have to set the `LANG' environment variable to the appropriate\n+ISO 639 `LL' two-letter code prior to using the programs in the\n+package.  For example, let's suppose that you speak German.  At the\n+shell prompt, merely execute `setenv LANG de' (in `csh'),\n+`export LANG; LANG=de' (in `sh') or `export LANG=de' (in `bash').  This\n+can be done from your `.login' or `.profile' file, once and for all.\n+\n+   An operating system might already offer message localization for\n+many of its programs, while other programs (whether GNU or not) have\n+been installed locally with the full capabilities of GNU `gettext'.\n+Just using `gettext' extended syntax for `LANG' would break proper\n+localization of already available operating system programs.  In this\n+case, users should set both `LANGUAGE' and `LANG' variables in their\n+environment, as programs using GNU `gettext' give preference to\n+`LANGUAGE'.  For example, some Swedish users would rather read\n+translations in German than English for when Swedish is not available.\n+This is easily accomplished by setting `LANGUAGE' to `sv:de' while\n+leaving `LANG' to `sv'.\n+\n+Translating Teams\n+=================\n+\n+   For the GNU Translation Project to be a success, we need interested\n+people who like their own language and write it well, and who are also\n+able to synergize with other translators speaking the same language.\n+Each translation team has its own mailing list, courtesy of Linux\n+International.  You may reach your translation team at the address\n+`LL@li.org', replacing LL by the two-letter ISO 639 code for your\n+language.  Language codes are *not* the same as the country codes given\n+in ISO 3166.  The following translation teams exist, as of February\n+1997:\n+\n+     Arabic `ar', Chinese `zh', Czech `cs', Danish `da', Dutch `nl',\n+     English `en', Esperanto `eo', Finnish `fi', French `fr', German\n+     `de', Greek `el', Hebrew `he', Hungarian `hu', Irish `ga', Italian\n+     `it', Indonesian `id', Japanese `ja', Korean `ko', Latin `la',\n+     Norwegian `no', Persian `fa', Polish `pl', Portuguese `pt',\n+     Russian `ru', Slovenian `sl', Spanish `es', Swedish `sv', Telugu\n+     `te', Turkish `tr' and Ukrainian `uk'.\n+\n+For example, you may reach the Chinese translation team by writing to\n+`zh@li.org'.\n+\n+   If you'd like to volunteer to *work* at translating messages, you\n+should become a member of the translating team for your own language.\n+The subscribing address is *not* the same as the list itself, it has\n+`-request' appended.  For example, speakers of Swedish can send a\n+message to `sv-request@li.org', having this message body:\n+\n+     subscribe\n+\n+   Keep in mind that team members are expected to participate\n+*actively* in translations, or at solving translational difficulties,\n+rather than merely lurking around.  If your team does not exist yet and\n+you want to start one, or if you are unsure about what to do or how to\n+get started, please write to `gnu-translation@gnu.ai.mit.edu' to reach\n+the GNU coordinator for all translator teams.\n+\n+   The English team is special.  It works at improving and uniformizing\n+the terminology used in GNU.  Proven linguistic skill are praised more\n+than programming skill, here.  For the time being, please avoid\n+subscribing to the English team unless explicitly invited to do so.\n+\n+Available Packages\n+==================\n+\n+   Languages are not equally supported in all GNU packages.  The\n+following matrix shows the current state of GNU internationalization,\n+as of February 1997.  The matrix shows, in regard of each package, for\n+which languages PO files have been submitted to translation\n+coordination.\n+\n+     Ready PO files    cs de en es fi fr ja ko nl no pl pt sl sv\n+                     .-------------------------------------------.\n+     bash            |    []          []       []                |  3\n+     bison           |    []          []       []                |  3\n+     clisp           |    [] []       []                         |  3\n+     cpio            |    []    []    []       []    []          |  5\n+     diffutils       |          []    []             []       [] |  4\n+     enscript        |    []       [] []       []          []    |  5\n+     fileutils       |    []    []    []       []    [] [] [] [] |  8\n+     findutils       |    []    []    []    [] []    []       [] |  7\n+     flex            |                []    []                [] |  3\n+     gcal            |    []          []       []                |  3\n+     gettext         |    []    []    []    [] [] [] [] [] [] [] | 11\n+     grep            |          []    []    [] [] [] []    [] [] |  8\n+     hello           |    []    []    []    [] [] [] [] [] [] [] | 10\n+     id-utils        |    []          []                         |  2\n+     indent          |    []                []                   |  2\n+     libc            |    []    []    []    [] []    []       [] |  7\n+     m4              |    []          [] []    []             [] |  5\n+     make            |    []    []    []    [] []    []          |  6\n+     music           |                []                         |  1\n+     ptx             |    []    []    []       [] [] [] []    [] |  8\n+     recode          |    []    []    []       []    [] [] [] [] |  8\n+     sh-utils        |    []          []       []       []    [] |  5\n+     sharutils       |    []    []    []       []             [] |  5\n+     tar             |    []          []    [] [] [] [] [] [] [] |  9\n+     texinfo         |                                           |  0\n+     textutils       |    []    []    []    [] []    []          |  6\n+     wdiff           | [] []    []    []       [] [] []       [] |  8\n+                     `-------------------------------------------'\n+       14 languages    cs de en es fi fr ja ko nl no pl pt sl sv\n+       27 packages      1 22  1 14  1 25  1 10 20  7 14  7  7 15  145\n+\n+   Some counters in the preceding matrix are higher than the number of\n+visible blocks let us expect.  This is because a few extra PO files are\n+used for implementing regional variants of languages, or language\n+dialects.\n+\n+   For a PO file in the matrix above to be effective, the package to\n+which it applies should also have been internationalized and\n+distributed as such by its maintainer.  There might be an observable\n+lag between the mere existence a PO file and its wide availability in a\n+GNU distribution.\n+\n+   If February 1997 seems to be old, you may fetch a more recent copy\n+of this `ABOUT-NLS' file on most GNU archive sites.\n+"}, {"sha": "647ea29772d47043caa70391f39b9f19184757f6", "filename": "texinfo/AUTHORS", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2FAUTHORS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2FAUTHORS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2FAUTHORS?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,3 @@\n+Richard Stallman, Brian Fox, Bob Chassell, Noah Friedman, Paul Rubin,\n+Karl Berry, and no doubt many others.\n+"}, {"sha": "90d861b80ee05bd7f4ca22081bdf6ed74d74213c", "filename": "texinfo/Makefile.am", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2FMakefile.am?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,15 @@\n+## Makefile.am for texinfo.\n+## $Id: Makefile.am,v 1.1 1998/03/23 04:42:02 law Exp $\n+## Process this file with automake to produce Makefile.in in all directories.\n+\n+## Be sure we're using the right version of Automake.\n+AUTOMAKE_OPTIONS = 1.1p\n+\n+# Additional files to distribute.\n+EXTRA_DIST = INTRODUCTION dir-example README-alpha\n+\n+# All subdirectories.\n+# Do intl/ and lib/ first since the C programs depend on them.\n+# Do doc/ last so makeinfo will be built when we get there.\n+# Others are alphabetical.\n+SUBDIRS = intl lib emacs info makeinfo po util doc"}, {"sha": "2661145da82ee5f76f666c26ef207ddd36ac94b0", "filename": "texinfo/README-alpha", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2FREADME-alpha", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2FREADME-alpha", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2FREADME-alpha?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,11 @@\n+Please report bugs in this alpha distribution to\n+  texinfo-pretest@cs.umb.edu\n+rather than bug-texinfo@prep.  Thanks.\n+\n+You can get on texinfo-pretest, if you're not already,\n+by sending a message whose body is\n+  subscribe you@your.preferred.email.address\n+\n+to texinfo-pretest-request@cs.umb.edu.\n+And you can get off the list by sending an unsubscribe message.\n+(I use majordomo to maintain the list.)"}, {"sha": "daa1cfe7098f589908a95aab00dbcd0d9d21ba59", "filename": "texinfo/THANKS", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2FTHANKS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2FTHANKS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2FTHANKS?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,9 @@\n+Thanks to these contributors and many more ...\n+\n+Dave Love\n+Donald Knuth\n+Erick Branderhorst\n+Karl Eichwalder\n+Laurent Bourbeau\n+Stephen Gildea\n+William Bader"}, {"sha": "6c34c33acc2b7db27eafb4ce3a678f1de79ad175", "filename": "texinfo/acconfig.h", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Facconfig.h?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,51 @@\n+/* acconfig.h\n+   This file is in the public domain.\n+\n+   Descriptive text for the C preprocessor macros that\n+   the distributed Autoconf macros can define.\n+   No software package will use all of them; autoheader copies the ones\n+   your configure.in uses into your configuration header file templates.\n+\n+   The entries are in sort -df order: alphabetical, case insensitive,\n+   ignoring punctuation (such as underscores).  Although this order\n+   can split up related entries, it makes it easier to check whether\n+   a given entry is in the file.\n+\n+   Leave the following blank line there!!  Autoheader needs it.  */\n+\f\n+\n+@TOP@\n+\n+/* Define to 1 if NLS is requested.  */\n+#undef ENABLE_NLS\n+\n+/* Define as 1 if you have catgets and don't want to use GNU gettext.  */\n+#undef HAVE_CATGETS\n+\n+/* Define as 1 if you have gettext and don't want to use GNU gettext.  */\n+#undef HAVE_GETTEXT\n+\n+/* Define if your locale.h file contains LC_MESSAGES.  */\n+#undef HAVE_LC_MESSAGES\n+\n+/* Define as 1 if you have the stpcpy function.  */\n+#undef HAVE_STPCPY\n+\n+/* Define to the name of the distribution.  */\n+#undef PACKAGE\n+\n+/* Define to the version of the distribution.  */\n+#undef VERSION\n+\n+@BOTTOM@\n+\n+/* For gettext (NLS) */\n+#include <libintl.h>\n+#define _(String) gettext (String)\n+#define N_(String) (String)\n+\n+\f\n+/* Leave that blank line there!!  Autoheader needs it.\n+   If you're adding to this file, keep in mind:\n+   The entries are in sort -df order: alphabetical, case insensitive,\n+   ignoring punctuation (such as underscores).  */"}, {"sha": "8021b87b4221c59a0cef38447ff4500a02b8b402", "filename": "texinfo/acinclude.m4", "status": "added", "additions": 349, "deletions": 0, "changes": 349, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Facinclude.m4?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,349 @@\n+# Macro to add for using GNU gettext.\n+# Ulrich Drepper <drepper@cygnus.com>, 1995.\n+\n+# serial 2\n+\n+AC_DEFUN(AM_WITH_NLS,\n+  [AC_MSG_CHECKING([whether NLS is requested])\n+    dnl Default is enabled NLS\n+    AC_ARG_ENABLE(nls,\n+      [  --disable-nls           do not use Native Language Support],\n+      USE_NLS=$enableval, USE_NLS=yes)\n+    AC_MSG_RESULT($USE_NLS)\n+    AC_SUBST(USE_NLS)\n+\n+    USE_INCLUDED_LIBINTL=no\n+\n+    dnl If we use NLS figure out what method\n+    if test \"$USE_NLS\" = \"yes\"; then\n+      AC_DEFINE(ENABLE_NLS)\n+      AC_MSG_CHECKING([whether included gettext is requested])\n+      AC_ARG_WITH(included-gettext,\n+        [  --with-included-gettext use the GNU gettext library included here],\n+        nls_cv_force_use_gnu_gettext=$withval,\n+        nls_cv_force_use_gnu_gettext=no)\n+      AC_MSG_RESULT($nls_cv_force_use_gnu_gettext)\n+\n+      nls_cv_use_gnu_gettext=\"$nls_cv_force_use_gnu_gettext\"\n+      if test \"$nls_cv_force_use_gnu_gettext\" != \"yes\"; then\n+        dnl User does not insist on using GNU NLS library.  Figure out what\n+        dnl to use.  If gettext or catgets are available (in this order) we\n+        dnl use this.  Else we have to fall back to GNU NLS library.\n+\tdnl catgets is only used if permitted by option --with-catgets.\n+\tnls_cv_header_intl=\n+\tnls_cv_header_libgt=\n+\tCATOBJEXT=NONE\n+\n+\tAC_CHECK_HEADER(libintl.h,\n+\t  [AC_CACHE_CHECK([for gettext in libc], gt_cv_func_gettext_libc,\n+\t    [AC_TRY_LINK([#include <libintl.h>], [return (int) gettext (\"\")],\n+\t       gt_cv_func_gettext_libc=yes, gt_cv_func_gettext_libc=no)])\n+\n+\t   if test \"$gt_cv_func_gettext_libc\" != \"yes\"; then\n+\t     AC_CHECK_LIB(intl, bindtextdomain,\n+\t       [AC_CACHE_CHECK([for gettext in libintl],\n+\t\t gt_cv_func_gettext_libintl,\n+\t\t [AC_TRY_LINK([], [return (int) gettext (\"\")],\n+\t\t gt_cv_func_gettext_libintl=yes,\n+\t\t gt_cv_func_gettext_libintl=no)])])\n+\t   fi\n+\n+\t   if test \"$gt_cv_func_gettext_libc\" = \"yes\" \\\n+\t      || test \"$gt_cv_func_gettext_libintl\" = \"yes\"; then\n+\t      AC_DEFINE(HAVE_GETTEXT)\n+\t      AM_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,\n+\t\t[test -z \"`$ac_dir/$ac_word -h 2>&1 | grep 'dv '`\"], no)dnl\n+\t      if test \"$MSGFMT\" != \"no\"; then\n+\t\tAC_CHECK_FUNCS(dcgettext)\n+\t\tAC_PATH_PROG(GMSGFMT, gmsgfmt, $MSGFMT)\n+\t\tAM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,\n+\t\t  [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep '(HELP)'`\"], :)\n+\t\tAC_TRY_LINK(, [extern int _nl_msg_cat_cntr;\n+\t\t\t       return _nl_msg_cat_cntr],\n+\t\t  [CATOBJEXT=.gmo\n+\t\t   DATADIRNAME=share],\n+\t\t  [CATOBJEXT=.mo\n+\t\t   DATADIRNAME=lib])\n+\t\tINSTOBJEXT=.mo\n+\t      fi\n+\t    fi\n+\t])\n+\n+        if test \"$CATOBJEXT\" = \"NONE\"; then\n+\t  AC_MSG_CHECKING([whether catgets can be used])\n+\t  AC_ARG_WITH(catgets,\n+\t    [  --with-catgets          use catgets functions if available],\n+\t    nls_cv_use_catgets=$withval, nls_cv_use_catgets=no)\n+\t  AC_MSG_RESULT($nls_cv_use_catgets)\n+\n+\t  if test \"$nls_cv_use_catgets\" = \"yes\"; then\n+\t    dnl No gettext in C library.  Try catgets next.\n+\t    AC_CHECK_LIB(i, main)\n+\t    AC_CHECK_FUNC(catgets,\n+\t      [AC_DEFINE(HAVE_CATGETS)\n+\t       INTLOBJS=\"\\$(CATOBJS)\"\n+\t       AC_PATH_PROG(GENCAT, gencat, no)dnl\n+\t       if test \"$GENCAT\" != \"no\"; then\n+\t\t AC_PATH_PROG(GMSGFMT, gmsgfmt, no)\n+\t\t if test \"$GMSGFMT\" = \"no\"; then\n+\t\t   AM_PATH_PROG_WITH_TEST(GMSGFMT, msgfmt,\n+\t\t    [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep 'dv '`\"], no)\n+\t\t fi\n+\t\t AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,\n+\t\t   [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep '(HELP)'`\"], :)\n+\t\t USE_INCLUDED_LIBINTL=yes\n+\t\t CATOBJEXT=.cat\n+\t\t INSTOBJEXT=.cat\n+\t\t DATADIRNAME=lib\n+\t\t INTLDEPS=\"../intl/libintl.a\"\n+\t\t INTLLIBS=$INTLDEPS\n+\t\t LIBS=`echo $LIBS | sed -e 's/-lintl//'`\n+\t\t nls_cv_header_intl=intl/libintl.h\n+\t\t nls_cv_header_libgt=intl/libgettext.h\n+\t       fi])\n+\t  fi\n+        fi\n+\n+        if test \"$CATOBJEXT\" = \"NONE\"; then\n+\t  dnl Neither gettext nor catgets in included in the C library.\n+\t  dnl Fall back on GNU gettext library.\n+\t  nls_cv_use_gnu_gettext=yes\n+        fi\n+      fi\n+\n+      if test \"$nls_cv_use_gnu_gettext\" = \"yes\"; then\n+        dnl Mark actions used to generate GNU NLS library.\n+        INTLOBJS=\"\\$(GETTOBJS)\"\n+        AM_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,\n+\t  [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep 'dv '`\"], msgfmt)\n+        AC_PATH_PROG(GMSGFMT, gmsgfmt, $MSGFMT)\n+        AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,\n+\t  [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep '(HELP)'`\"], :)\n+        AC_SUBST(MSGFMT)\n+\tUSE_INCLUDED_LIBINTL=yes\n+        CATOBJEXT=.gmo\n+        INSTOBJEXT=.mo\n+        DATADIRNAME=share\n+\tINTLDEPS=\"../intl/libintl.a\"\n+\tINTLLIBS=$INTLDEPS\n+\tLIBS=`echo $LIBS | sed -e 's/-lintl//'`\n+        nls_cv_header_intl=intl/libintl.h\n+        nls_cv_header_libgt=intl/libgettext.h\n+      fi\n+\n+      dnl Test whether we really found GNU xgettext.\n+      if test \"$XGETTEXT\" != \":\"; then\n+\tdnl If it is no GNU xgettext we define it as : so that the\n+\tdnl Makefiles still can work.\n+\tif $XGETTEXT --omit-header /dev/null 2> /dev/null; then\n+\t  : ;\n+\telse\n+\t  AC_MSG_RESULT(\n+\t    [found xgettext programs is not GNU xgettext; ignore it])\n+\t  XGETTEXT=\":\"\n+\tfi\n+      fi\n+\n+      # We need to process the po/ directory.\n+      POSUB=po\n+    else\n+      DATADIRNAME=share\n+      nls_cv_header_intl=intl/libintl.h\n+      nls_cv_header_libgt=intl/libgettext.h\n+    fi\n+\n+    # If this is used in GNU gettext we have to set USE_NLS to `yes'\n+    # because some of the sources are only built for this goal.\n+    if test \"$PACKAGE\" = gettext; then\n+      USE_NLS=yes\n+      USE_INCLUDED_LIBINTL=yes\n+    fi\n+\n+    dnl These rules are solely for the distribution goal.  While doing this\n+    dnl we only have to keep exactly one list of the available catalogs\n+    dnl in configure.in.\n+    for lang in $ALL_LINGUAS; do\n+      GMOFILES=\"$GMOFILES $lang.gmo\"\n+      POFILES=\"$POFILES $lang.po\"\n+    done\n+\n+    dnl Make all variables we use known to autoconf.\n+    AC_SUBST(USE_INCLUDED_LIBINTL)\n+    AC_SUBST(CATALOGS)\n+    AC_SUBST(CATOBJEXT)\n+    AC_SUBST(DATADIRNAME)\n+    AC_SUBST(GMOFILES)\n+    AC_SUBST(INSTOBJEXT)\n+    AC_SUBST(INTLDEPS)\n+    AC_SUBST(INTLLIBS)\n+    AC_SUBST(INTLOBJS)\n+    AC_SUBST(POFILES)\n+    AC_SUBST(POSUB)\n+  ])\n+\n+AC_DEFUN(AM_GNU_GETTEXT,\n+  [AC_REQUIRE([AC_PROG_MAKE_SET])dnl\n+   AC_REQUIRE([AC_PROG_CC])dnl\n+   AC_REQUIRE([AC_ISC_POSIX])dnl\n+   AC_REQUIRE([AC_HEADER_STDC])dnl\n+   AC_REQUIRE([AC_C_CONST])dnl\n+   AC_REQUIRE([AC_C_INLINE])dnl\n+   AC_REQUIRE([AC_TYPE_OFF_T])dnl\n+   AC_REQUIRE([AC_TYPE_SIZE_T])dnl\n+   AC_REQUIRE([AC_FUNC_ALLOCA])dnl\n+   AC_REQUIRE([AC_FUNC_MMAP])dnl\n+\n+   AC_CHECK_HEADERS([argz.h limits.h locale.h nl_types.h malloc.h string.h \\\n+unistd.h values.h])\n+   AC_CHECK_FUNCS([getcwd munmap putenv setenv setlocale strchr strcasecmp \\\n+__argz_count __argz_stringify __argz_next])\n+\n+   if test \"${ac_cv_func_stpcpy+set}\" != \"set\"; then\n+     AC_CHECK_FUNCS(stpcpy)\n+   fi\n+   if test \"${ac_cv_func_stpcpy}\" = \"yes\"; then\n+     AC_DEFINE(HAVE_STPCPY)\n+   fi\n+\n+   AM_LC_MESSAGES\n+   AM_WITH_NLS\n+\n+   if test \"x$CATOBJEXT\" != \"x\"; then\n+     if test \"x$ALL_LINGUAS\" = \"x\"; then\n+       LINGUAS=\n+     else\n+       AC_MSG_CHECKING(for catalogs to be installed)\n+       NEW_LINGUAS=\n+       for lang in ${LINGUAS=$ALL_LINGUAS}; do\n+         case \"$ALL_LINGUAS\" in\n+          *$lang*) NEW_LINGUAS=\"$NEW_LINGUAS $lang\" ;;\n+         esac\n+       done\n+       LINGUAS=$NEW_LINGUAS\n+       AC_MSG_RESULT($LINGUAS)\n+     fi\n+\n+     dnl Construct list of names of catalog files to be constructed.\n+     if test -n \"$LINGUAS\"; then\n+       for lang in $LINGUAS; do CATALOGS=\"$CATALOGS $lang$CATOBJEXT\"; done\n+     fi\n+   fi\n+\n+   dnl Determine which catalog format we have (if any is needed)\n+   dnl For now we know about two different formats:\n+   dnl   Linux libc-5 and the normal X/Open format\n+   test -d intl || mkdir intl\n+   if test \"$CATOBJEXT\" = \".cat\"; then\n+     AC_CHECK_HEADER(linux/version.h, msgformat=linux, msgformat=xopen)\n+\n+     dnl Transform the SED scripts while copying because some dumb SEDs\n+     dnl cannot handle comments.\n+     sed -e '/^#/d' $srcdir/intl/$msgformat-msg.sed > intl/po2msg.sed\n+   fi\n+   dnl po2tbl.sed is always needed.\n+   sed -e '/^#.*[^\\\\]$/d' -e '/^#$/d' \\\n+     $srcdir/intl/po2tbl.sed.in > intl/po2tbl.sed\n+\n+   dnl In the intl/Makefile.in we have a special dependency which makes\n+   dnl only sense for gettext.  We comment this out for non-gettext\n+   dnl packages.\n+   if test \"$PACKAGE\" = \"gettext\"; then\n+     GT_NO=\"#NO#\"\n+     GT_YES=\n+   else\n+     GT_NO=\n+     GT_YES=\"#YES#\"\n+   fi\n+   AC_SUBST(GT_NO)\n+   AC_SUBST(GT_YES)\n+\n+   dnl If the AC_CONFIG_AUX_DIR macro for autoconf is used we possibly\n+   dnl find the mkinstalldirs script in another subdir but ($top_srcdir).\n+   dnl Try to locate is.\n+   MKINSTALLDIRS=\n+   if test $ac_aux_dir; then\n+     MKINSTALLDIRS=\"$ac_aux_dir/mkinstalldirs\"\n+   fi\n+   if test -z $MKINSTALLDIRS; then\n+     MKINSTALLDIRS=\"\\$(top_srcdir)/mkinstalldirs\"\n+   fi\n+   AC_SUBST(MKINSTALLDIRS)\n+\n+   dnl *** For now the libtool support in intl/Makefile is not for real.\n+   l=\n+   AC_SUBST(l)\n+\n+   dnl Generate list of files to be processed by xgettext which will\n+   dnl be included in po/Makefile.\n+   test -d po || mkdir po\n+   if test \"x$srcdir\" != \"x.\"; then\n+     if test \"x`echo $srcdir | sed 's@/.*@@'`\" = \"x\"; then\n+       posrcprefix=\"$srcdir/\"\n+     else\n+       posrcprefix=\"../$srcdir/\"\n+     fi\n+   else\n+     posrcprefix=\"../\"\n+   fi\n+   sed -e \"/^#/d\" -e \"/^\\$/d\" -e \"s,.*,\t$posrcprefix& \\\\\\\\,\" -e \"\\$s/\\(.*\\) \\\\\\\\/\\1/\" \\\n+\t< $srcdir/po/POTFILES.in > po/POTFILES\n+  ])\n+\n+# Search path for a program which passes the given test.\n+# Ulrich Drepper <drepper@cygnus.com>, 1996.\n+\n+# serial 1\n+\n+dnl AM_PATH_PROG_WITH_TEST(VARIABLE, PROG-TO-CHECK-FOR,\n+dnl   TEST-PERFORMED-ON-FOUND_PROGRAM [, VALUE-IF-NOT-FOUND [, PATH]])\n+AC_DEFUN(AM_PATH_PROG_WITH_TEST,\n+[# Extract the first word of \"$2\", so it can be a program name with args.\n+set dummy $2; ac_word=[$]2\n+AC_MSG_CHECKING([for $ac_word])\n+AC_CACHE_VAL(ac_cv_path_$1,\n+[case \"[$]$1\" in\n+  /*)\n+  ac_cv_path_$1=\"[$]$1\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n+  for ac_dir in ifelse([$5], , $PATH, [$5]); do\n+    test -z \"$ac_dir\" && ac_dir=.\n+    if test -f $ac_dir/$ac_word; then\n+      if [$3]; then\n+\tac_cv_path_$1=\"$ac_dir/$ac_word\"\n+\tbreak\n+      fi\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+dnl If no 4th arg is given, leave the cache variable unset,\n+dnl so AC_PATH_PROGS will keep looking.\n+ifelse([$4], , , [  test -z \"[$]ac_cv_path_$1\" && ac_cv_path_$1=\"$4\"\n+])dnl\n+  ;;\n+esac])dnl\n+$1=\"$ac_cv_path_$1\"\n+if test -n \"[$]$1\"; then\n+  AC_MSG_RESULT([$]$1)\n+else\n+  AC_MSG_RESULT(no)\n+fi\n+AC_SUBST($1)dnl\n+])\n+\n+# Check whether LC_MESSAGES is available in <locale.h>.\n+# Ulrich Drepper <drepper@cygnus.com>, 1995.\n+\n+# serial 1\n+\n+AC_DEFUN(AM_LC_MESSAGES,\n+  [if test $ac_cv_header_locale_h = yes; then\n+    AC_CACHE_CHECK([for LC_MESSAGES], am_cv_val_LC_MESSAGES,\n+      [AC_TRY_LINK([#include <locale.h>], [return LC_MESSAGES],\n+       am_cv_val_LC_MESSAGES=yes, am_cv_val_LC_MESSAGES=no)])\n+    if test $am_cv_val_LC_MESSAGES = yes; then\n+      AC_DEFINE(HAVE_LC_MESSAGES)\n+    fi\n+  fi])\n+"}, {"sha": "a33514f246262bee20ddb4336558304e621b8a38", "filename": "texinfo/config.guess", "status": "added", "additions": 713, "deletions": 0, "changes": 713, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fconfig.guess?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,713 @@\n+#! /bin/sh\n+# Attempt to guess a canonical system name.\n+#   Copyright (C) 1992, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n+#\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that program.\n+\n+# Written by Per Bothner <bothner@cygnus.com>.\n+# The master version of this file is at the FSF in /home/gd/gnu/lib.\n+#\n+# This script attempts to guess a canonical system name similar to\n+# config.sub.  If it succeeds, it prints the system name on stdout, and\n+# exits with 0.  Otherwise, it exits with 1.\n+#\n+# The plan is that this can be called by configure scripts if you\n+# don't specify an explicit system type (host/target name).\n+#\n+# Only a few systems have been added to this list; please add others\n+# (but try to keep the structure clean).\n+#\n+\n+# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n+# (ghazi@noc.rutgers.edu 8/24/94.)\n+if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n+\tPATH=$PATH:/.attbin ; export PATH\n+fi\n+\n+UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\n+UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n+UNAME_SYSTEM=`(uname -s) 2>/dev/null` || UNAME_SYSTEM=unknown\n+UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n+\n+trap 'rm -f dummy.c dummy.o dummy; exit 1' 1 2 15\n+\n+# Note: order is significant - the case branches are not exclusive.\n+\n+case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n+    alpha:OSF1:*:*)\n+\t# A Vn.n version is a released version.\n+\t# A Tn.n version is a released field test version.\n+\t# A Xn.n version is an unreleased experimental baselevel.\n+\t# 1.2 uses \"1.2\" for uname -r.\n+\techo alpha-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//'`\n+\texit 0 ;;\n+    21064:Windows_NT:50:3)\n+\techo alpha-dec-winnt3.5\n+\texit 0 ;;\n+    Amiga*:UNIX_System_V:4.0:*)\n+\techo m68k-cbm-sysv4\n+\texit 0;;\n+    amiga:NetBSD:*:*)\n+      echo m68k-cbm-netbsd${UNAME_RELEASE}\n+      exit 0 ;;\n+    amiga:OpenBSD:*:*)\n+      echo m68k-cbm-openbsd${UNAME_RELEASE}\n+      exit 0 ;;\n+    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n+\techo arm-acorn-riscix${UNAME_RELEASE}\n+\texit 0;;\n+    SR2?01:HI-UX/MPP:*:*)\n+\techo hppa1.1-hitachi-hiuxmpp\n+\texit 0;;\n+    Pyramid*:OSx*:*:*|MIS*:OSx*:*:*)\n+\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n+\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n+\t\techo pyramid-pyramid-sysv3\n+\telse\n+\t\techo pyramid-pyramid-bsd\n+\tfi\n+\texit 0 ;;\n+    NILE:*:*:dcosx)\n+\techo pyramid-pyramid-svr4\n+\texit 0 ;;\n+    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n+\techo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit 0 ;;\n+    i86pc:SunOS:5.*:*)\n+\techo i386-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit 0 ;;\n+    sun4*:SunOS:6*:*)\n+\t# According to config.sub, this is the proper way to canonicalize\n+\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n+\t# it's likely to be more like Solaris than SunOS4.\n+\techo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit 0 ;;\n+    sun4*:SunOS:*:*)\n+\tcase \"`/usr/bin/arch -k`\" in\n+\t    Series*|S4*)\n+\t\tUNAME_RELEASE=`uname -v`\n+\t\t;;\n+\tesac\n+\t# Japanese Language versions have a version number like `4.1.3-JL'.\n+\techo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`\n+\texit 0 ;;\n+    sun3*:SunOS:*:*)\n+\techo m68k-sun-sunos${UNAME_RELEASE}\n+\texit 0 ;;\n+    aushp:SunOS:*:*)\n+\techo sparc-auspex-sunos${UNAME_RELEASE}\n+\texit 0 ;;\n+    atari*:NetBSD:*:*)\n+\techo m68k-atari-netbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    atari*:OpenBSD:*:*)\n+\techo m68k-atari-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    sun3*:NetBSD:*:*)\n+\techo m68k-sun-netbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    sun3*:OpenBSD:*:*)\n+\techo m68k-sun-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    mac68k:NetBSD:*:*)\n+\techo m68k-apple-netbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    mac68k:OpenBSD:*:*)\n+\techo m68k-apple-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    powerpc:machten:*:*)\n+\techo powerpc-apple-machten${UNAME_RELEASE}\n+\texit 0 ;;\n+    RISC*:Mach:*:*)\n+\techo mips-dec-mach_bsd4.3\n+\texit 0 ;;\n+    RISC*:ULTRIX:*:*)\n+\techo mips-dec-ultrix${UNAME_RELEASE}\n+\texit 0 ;;\n+    VAX*:ULTRIX*:*:*)\n+\techo vax-dec-ultrix${UNAME_RELEASE}\n+\texit 0 ;;\n+    mips:*:*:UMIPS | mips:*:*:RISCos)\n+\tsed 's/^\t//' << EOF >dummy.c\n+\tint main (argc, argv) int argc; char **argv; {\n+\t#if defined (host_mips) && defined (MIPSEB)\n+\t#if defined (SYSTYPE_SYSV)\n+\t  printf (\"mips-mips-riscos%ssysv\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#if defined (SYSTYPE_SVR4)\n+\t  printf (\"mips-mips-riscos%ssvr4\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n+\t  printf (\"mips-mips-riscos%sbsd\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#endif\n+\t  exit (-1);\n+\t}\n+EOF\n+\t${CC-cc} dummy.c -o dummy \\\n+\t  && ./dummy `echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` \\\n+\t  && rm dummy.c dummy && exit 0\n+\trm -f dummy.c dummy\n+\techo mips-mips-riscos${UNAME_RELEASE}\n+\texit 0 ;;\n+    Night_Hawk:Power_UNIX:*:*)\n+\techo powerpc-harris-powerunix\n+\texit 0 ;;\n+    m88k:CX/UX:7*:*)\n+\techo m88k-harris-cxux7\n+\texit 0 ;;\n+    m88k:*:4*:R4*)\n+\techo m88k-motorola-sysv4\n+\texit 0 ;;\n+    m88k:*:3*:R3*)\n+\techo m88k-motorola-sysv3\n+\texit 0 ;;\n+    AViiON:dgux:*:*)\n+        # DG/UX returns AViiON for all architectures\n+        UNAME_PROCESSOR=`/usr/bin/uname -p`\n+        if [ $UNAME_PROCESSOR = mc88100 -o $UNAME_PROCESSOR = mc88110 ] ; then\n+\tif [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx \\\n+\t     -o ${TARGET_BINARY_INTERFACE}x = x ] ; then\n+\t\techo m88k-dg-dgux${UNAME_RELEASE}\n+\telse\n+\t\techo m88k-dg-dguxbcs${UNAME_RELEASE}\n+\tfi\n+        else echo i586-dg-dgux${UNAME_RELEASE}\n+        fi\n+ \texit 0 ;;\n+    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n+\techo m88k-dolphin-sysv3\n+\texit 0 ;;\n+    M88*:*:R3*:*)\n+\t# Delta 88k system running SVR3\n+\techo m88k-motorola-sysv3\n+\texit 0 ;;\n+    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n+\techo m88k-tektronix-sysv3\n+\texit 0 ;;\n+    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n+\techo m68k-tektronix-bsd\n+\texit 0 ;;\n+    *:IRIX*:*:*)\n+\techo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`\n+\texit 0 ;;\n+    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n+\techo romp-ibm-aix      # uname -m gives an 8 hex-code CPU id\n+\texit 0 ;;              # Note that: echo \"'`uname -s`'\" gives 'AIX '\n+    i?86:AIX:*:*)\n+\techo i386-ibm-aix\n+\texit 0 ;;\n+    *:AIX:2:3)\n+\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\tsed 's/^\t\t//' << EOF >dummy.c\n+\t\t#include <sys/systemcfg.h>\n+\n+\t\tmain()\n+\t\t\t{\n+\t\t\tif (!__power_pc())\n+\t\t\t\texit(1);\n+\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n+\t\t\texit(0);\n+\t\t\t}\n+EOF\n+\t\t${CC-cc} dummy.c -o dummy && ./dummy && rm dummy.c dummy && exit 0\n+\t\trm -f dummy.c dummy\n+\t\techo rs6000-ibm-aix3.2.5\n+\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\techo rs6000-ibm-aix3.2.4\n+\telse\n+\t\techo rs6000-ibm-aix3.2\n+\tfi\n+\texit 0 ;;\n+    *:AIX:*:4)\n+\tif /usr/sbin/lsattr -EHl proc0 | grep POWER >/dev/null 2>&1; then\n+\t\tIBM_ARCH=rs6000\n+\telse\n+\t\tIBM_ARCH=powerpc\n+\tfi\n+\tif [ -x /usr/bin/oslevel ] ; then\n+\t\tIBM_REV=`/usr/bin/oslevel`\n+\telse\n+\t\tIBM_REV=4.${UNAME_RELEASE}\n+\tfi\n+\techo ${IBM_ARCH}-ibm-aix${IBM_REV}\n+\texit 0 ;;\n+    *:AIX:*:*)\n+\techo rs6000-ibm-aix\n+\texit 0 ;;\n+    ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n+\techo romp-ibm-bsd4.4\n+\texit 0 ;;\n+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC NetBSD and\n+\techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n+\texit 0 ;;                           # report: romp-ibm BSD 4.3\n+    *:BOSX:*:*)\n+\techo rs6000-bull-bosx\n+\texit 0 ;;\n+    DPX/2?00:B.O.S.:*:*)\n+\techo m68k-bull-sysv3\n+\texit 0 ;;\n+    9000/[34]??:4.3bsd:1.*:*)\n+\techo m68k-hp-bsd\n+\texit 0 ;;\n+    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n+\techo m68k-hp-bsd4.4\n+\texit 0 ;;\n+    9000/[3478]??:HP-UX:*:*)\n+\tcase \"${UNAME_MACHINE}\" in\n+\t    9000/31? )            HP_ARCH=m68000 ;;\n+\t    9000/[34]?? )         HP_ARCH=m68k ;;\n+\t    9000/7?? | 9000/8?[1679] ) HP_ARCH=hppa1.1 ;;\n+\t    9000/8?? )            HP_ARCH=hppa1.0 ;;\n+\tesac\n+\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n+\techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n+\texit 0 ;;\n+    3050*:HI-UX:*:*)\n+\tsed 's/^\t//' << EOF >dummy.c\n+\t#include <unistd.h>\n+\tint\n+\tmain ()\n+\t{\n+\t  long cpu = sysconf (_SC_CPU_VERSION);\n+\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n+\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n+\t     results, however.  */\n+\t  if (CPU_IS_PA_RISC (cpu))\n+\t    {\n+\t      switch (cpu)\n+\t\t{\n+\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n+\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n+\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n+\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n+\t\t}\n+\t    }\n+\t  else if (CPU_IS_HP_MC68K (cpu))\n+\t    puts (\"m68k-hitachi-hiuxwe2\");\n+\t  else puts (\"unknown-hitachi-hiuxwe2\");\n+\t  exit (0);\n+\t}\n+EOF\n+\t${CC-cc} dummy.c -o dummy && ./dummy && rm dummy.c dummy && exit 0\n+\trm -f dummy.c dummy\n+\techo unknown-hitachi-hiuxwe2\n+\texit 0 ;;\n+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )\n+\techo hppa1.1-hp-bsd\n+\texit 0 ;;\n+    9000/8??:4.3bsd:*:*)\n+\techo hppa1.0-hp-bsd\n+\texit 0 ;;\n+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n+\techo hppa1.1-hp-osf\n+\texit 0 ;;\n+    hp8??:OSF1:*:*)\n+\techo hppa1.0-hp-osf\n+\texit 0 ;;\n+    i?86:OSF1:*:*)\n+\tif [ -x /usr/sbin/sysversion ] ; then\n+\t    echo ${UNAME_MACHINE}-unknown-osf1mk\n+\telse\n+\t    echo ${UNAME_MACHINE}-unknown-osf1\n+\tfi\n+\texit 0 ;;\n+    parisc*:Lites*:*:*)\n+\techo hppa1.1-hp-lites\n+\texit 0 ;;\n+    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n+\techo c1-convex-bsd\n+        exit 0 ;;\n+    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n+\tif getsysinfo -f scalar_acc\n+\tthen echo c32-convex-bsd\n+\telse echo c2-convex-bsd\n+\tfi\n+        exit 0 ;;\n+    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n+\techo c34-convex-bsd\n+        exit 0 ;;\n+    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n+\techo c38-convex-bsd\n+        exit 0 ;;\n+    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n+\techo c4-convex-bsd\n+        exit 0 ;;\n+    CRAY*X-MP:*:*:*)\n+\techo xmp-cray-unicos\n+        exit 0 ;;\n+    CRAY*Y-MP:*:*:*)\n+\techo ymp-cray-unicos${UNAME_RELEASE}\n+\texit 0 ;;\n+    CRAY*[A-Z]90:*:*:*)\n+\techo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \\\n+\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n+\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/\n+\texit 0 ;;\n+    CRAY*TS:*:*:*)\n+\techo t90-cray-unicos${UNAME_RELEASE}\n+\texit 0 ;;\n+    CRAY-2:*:*:*)\n+\techo cray2-cray-unicos\n+        exit 0 ;;\n+    F300:UNIX_System_V:*:*)\n+        FUJITSU_SYS=`uname -p | tr [A-Z] [a-z] | sed -e 's/\\///'`\n+        FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n+        echo \"f300-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n+        exit 0 ;;\n+    F301:UNIX_System_V:*:*)\n+       echo f301-fujitsu-uxpv`echo $UNAME_RELEASE | sed 's/ .*//'`\n+       exit 0 ;;\n+    hp3[0-9][05]:NetBSD:*:*)\n+\techo m68k-hp-netbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    hp3[0-9][05]:OpenBSD:*:*)\n+\techo m68k-hp-openbsd${UNAME_RELEASE}\n+\texit 0 ;;\n+    i?86:BSD/386:*:* | *:BSD/OS:*:*)\n+\techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n+\texit 0 ;;\n+    *:FreeBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n+\texit 0 ;;\n+    *:NetBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n+\texit 0 ;;\n+    *:OpenBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-openbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n+\texit 0 ;;\n+    i*:CYGWIN*:*)\n+\techo i386-pc-cygwin32\n+\texit 0 ;;\n+    p*:CYGWIN*:*)\n+\techo powerpcle-unknown-cygwin32\n+\texit 0 ;;\n+    prep*:SunOS:5.*:*)\n+\techo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit 0 ;;\n+    *:GNU:*:*)\n+\techo `echo ${UNAME_MACHINE}|sed -e 's,-.*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n+\texit 0 ;;\n+    *:Linux:*:*)\n+\t# The BFD linker knows what the default object file format is, so\n+\t# first see if it will tell us.\n+\tld_help_string=`ld --help 2>&1`\n+\tif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: elf_i.86\"; then\n+\t  echo \"${UNAME_MACHINE}-pc-linux-gnu\" ; exit 0\n+\telif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: i.86linux\"; then\n+\t  echo \"${UNAME_MACHINE}-pc-linux-gnuaout\" ; exit 0\n+\telif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: i.86coff\"; then\n+\t  echo \"${UNAME_MACHINE}-pc-linux-gnucoff\" ; exit 0\n+\telif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: m68kelf\"; then\n+\t  echo \"${UNAME_MACHINE}-unknown-linux-gnu\" ; exit 0\n+\telif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: m68klinux\"; then\n+\t  echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0\n+\telif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: elf32ppc\"; then\n+\t  echo \"powerpc-unknown-linux-gnu\" ; exit 0\n+\telif test \"${UNAME_MACHINE}\" = \"alpha\" ; then\n+\t  echo alpha-unknown-linux-gnu ; exit 0\n+\telif test \"${UNAME_MACHINE}\" = \"sparc\" ; then\n+\t  echo sparc-unknown-linux-gnu ; exit 0\n+\telif test \"${UNAME_MACHINE}\" = \"mips\" ; then\n+\t  cat >dummy.c <<EOF\n+main(argc, argv)\n+int argc;\n+char *argv[];\n+{\n+#ifdef __MIPSEB__\n+  printf (\"%s-unknown-linux-gnu\\n\", argv[1]);\n+#endif\n+#ifdef __MIPSEL__\n+  printf (\"%sel-unknown-linux-gnu\\n\", argv[1]);\n+#endif\n+  return 0;\n+}\n+EOF\n+\t  ${CC-cc} dummy.c -o dummy 2>/dev/null && ./dummy \"${UNAME_MACHINE}\" && rm dummy.c dummy && exit 0\n+\t  rm -f dummy.c dummy\n+\telse\n+\t  # Either a pre-BFD a.out linker (linux-gnuoldld) or one that does not give us\n+\t  # useful --help.  Gcc wants to distinguish between linux-gnuoldld and linux-gnuaout.\n+\t  test ! -d /usr/lib/ldscripts/. \\\n+\t    && echo \"${UNAME_MACHINE}-pc-linux-gnuoldld\" && exit 0\n+\t  # Determine whether the default compiler is a.out or elf\n+\t  cat >dummy.c <<EOF\n+main(argc, argv)\n+int argc;\n+char *argv[];\n+{\n+#ifdef __ELF__\n+  printf (\"%s-pc-linux-gnu\\n\", argv[1]);\n+#else\n+  printf (\"%s-pc-linux-gnuaout\\n\", argv[1]);\n+#endif\n+  return 0;\n+}\n+EOF\n+\t  ${CC-cc} dummy.c -o dummy 2>/dev/null && ./dummy \"${UNAME_MACHINE}\" && rm dummy.c dummy && exit 0\n+\t  rm -f dummy.c dummy\n+\tfi ;;\n+# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.  earlier versions\n+# are messed up and put the nodename in both sysname and nodename.\n+    i?86:DYNIX/ptx:4*:*)\n+\techo i386-sequent-sysv4\n+\texit 0 ;;\n+    i?86:*:4.*:* | i?86:SYSTEM_V:4.*:*)\n+\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n+\t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_RELEASE}\n+\telse\n+\t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_RELEASE}\n+\tfi\n+\texit 0 ;;\n+    i?86:*:3.2:*)\n+\tif test -f /usr/options/cb.name; then\n+\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n+\t\techo ${UNAME_MACHINE}-pc-isc$UNAME_REL\n+\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n+\t\tUNAME_REL=`(/bin/uname -X|egrep Release|sed -e 's/.*= //')`\n+\t\t(/bin/uname -X|egrep i80486 >/dev/null) && UNAME_MACHINE=i486\n+\t\t(/bin/uname -X|egrep '^Machine.*Pentium' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i586\n+\t\techo ${UNAME_MACHINE}-pc-sco$UNAME_REL\n+\telse\n+\t\techo ${UNAME_MACHINE}-pc-sysv32\n+\tfi\n+\texit 0 ;;\n+    Intel:Mach:3*:*)\n+\techo i386-pc-mach3\n+\texit 0 ;;\n+    paragon:*:*:*)\n+\techo i860-intel-osf1\n+\texit 0 ;;\n+    i860:*:4.*:*) # i860-SVR4\n+\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n+\t  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4\n+\telse # Add other i860-SVR4 vendors below as they are discovered.\n+\t  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4\n+\tfi\n+\texit 0 ;;\n+    mini*:CTIX:SYS*5:*)\n+\t# \"miniframe\"\n+\techo m68010-convergent-sysv\n+\texit 0 ;;\n+    M68*:*:R3V[567]*:*)\n+\ttest -r /sysV68 && echo 'm68k-motorola-sysv' && exit 0 ;;\n+    3[34]??:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 4850:*:4.0:3.0)\n+\tOS_REL=''\n+\ttest -r /etc/.relid \\\n+\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t  && echo i486-ncr-sysv4.3${OS_REL} && exit 0\n+\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n+\t  && echo i586-ncr-sysv4.3${OS_REL} && exit 0 ;;\n+    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n+        /bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+          && echo i486-ncr-sysv4 && exit 0 ;;\n+    m68*:LynxOS:2.*:*)\n+\techo m68k-unknown-lynxos${UNAME_RELEASE}\n+\texit 0 ;;\n+    mc68030:UNIX_System_V:4.*:*)\n+\techo m68k-atari-sysv4\n+\texit 0 ;;\n+    i?86:LynxOS:2.*:*)\n+\techo i386-unknown-lynxos${UNAME_RELEASE}\n+\texit 0 ;;\n+    TSUNAMI:LynxOS:2.*:*)\n+\techo sparc-unknown-lynxos${UNAME_RELEASE}\n+\texit 0 ;;\n+    rs6000:LynxOS:2.*:* | PowerPC:LynxOS:2.*:*)\n+\techo rs6000-unknown-lynxos${UNAME_RELEASE}\n+\texit 0 ;;\n+    SM[BE]S:UNIX_SV:*:*)\n+\techo mips-dde-sysv${UNAME_RELEASE}\n+\texit 0 ;;\n+    RM*:SINIX-*:*:*)\n+\techo mips-sni-sysv4\n+\texit 0 ;;\n+    *:SINIX-*:*:*)\n+\tif uname -p 2>/dev/null >/dev/null ; then\n+\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n+\t\techo ${UNAME_MACHINE}-sni-sysv4\n+\telse\n+\t\techo ns32k-sni-sysv\n+\tfi\n+\texit 0 ;;\n+    PENTIUM:CPunix:4.0*:*) # Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n+                           # says <Richard.M.Bartel@ccMail.Census.GOV>\n+        echo i586-unisys-sysv4\n+        exit 0 ;;\n+    *:UNIX_System_V:4*:FTX*)\n+\t# From Gerald Hewes <hewes@openmarket.com>.\n+\t# How about differentiating between stratus architectures? -djm\n+\techo hppa1.1-stratus-sysv4\n+\texit 0 ;;\n+    *:*:*:FTX*)\n+\t# From seanf@swdc.stratus.com.\n+\techo i860-stratus-sysv4\n+\texit 0 ;;\n+    mc68*:A/UX:*:*)\n+\techo m68k-apple-aux${UNAME_RELEASE}\n+\texit 0 ;;\n+    R3000:*System_V*:*:* | R4000:UNIX_SYSV:*:*)\n+\tif [ -d /usr/nec ]; then\n+\t        echo mips-nec-sysv${UNAME_RELEASE}\n+\telse\n+\t        echo mips-unknown-sysv${UNAME_RELEASE}\n+\tfi\n+        exit 0 ;;\n+esac\n+\n+#echo '(No uname command or uname output not recognized.)' 1>&2\n+#echo \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" 1>&2\n+\n+cat >dummy.c <<EOF\n+#ifdef _SEQUENT_\n+# include <sys/types.h>\n+# include <sys/utsname.h>\n+#endif\n+main ()\n+{\n+#if defined (sony)\n+#if defined (MIPSEB)\n+  /* BFD wants \"bsd\" instead of \"newsos\".  Perhaps BFD should be changed,\n+     I don't know....  */\n+  printf (\"mips-sony-bsd\\n\"); exit (0);\n+#else\n+#include <sys/param.h>\n+  printf (\"m68k-sony-newsos%s\\n\",\n+#ifdef NEWSOS4\n+          \"4\"\n+#else\n+\t  \"\"\n+#endif\n+         ); exit (0);\n+#endif\n+#endif\n+\n+#if defined (__arm) && defined (__acorn) && defined (__unix)\n+  printf (\"arm-acorn-riscix\"); exit (0);\n+#endif\n+\n+#if defined (hp300) && !defined (hpux)\n+  printf (\"m68k-hp-bsd\\n\"); exit (0);\n+#endif\n+\n+#if defined (NeXT)\n+#if !defined (__ARCHITECTURE__)\n+#define __ARCHITECTURE__ \"m68k\"\n+#endif\n+  int version;\n+  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n+  printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n+  exit (0);\n+#endif\n+\n+#if defined (MULTIMAX) || defined (n16)\n+#if defined (UMAXV)\n+  printf (\"ns32k-encore-sysv\\n\"); exit (0);\n+#else\n+#if defined (CMU)\n+  printf (\"ns32k-encore-mach\\n\"); exit (0);\n+#else\n+  printf (\"ns32k-encore-bsd\\n\"); exit (0);\n+#endif\n+#endif\n+#endif\n+\n+#if defined (__386BSD__)\n+  printf (\"i386-pc-bsd\\n\"); exit (0);\n+#endif\n+\n+#if defined (sequent)\n+#if defined (i386)\n+  printf (\"i386-sequent-dynix\\n\"); exit (0);\n+#endif\n+#if defined (ns32000)\n+  printf (\"ns32k-sequent-dynix\\n\"); exit (0);\n+#endif\n+#endif\n+\n+#if defined (_SEQUENT_)\n+    struct utsname un;\n+\n+    uname(&un);\n+\n+    if (strncmp(un.version, \"V2\", 2) == 0) {\n+\tprintf (\"i386-sequent-ptx2\\n\"); exit (0);\n+    }\n+    if (strncmp(un.version, \"V1\", 2) == 0) { /* XXX is V1 correct? */\n+\tprintf (\"i386-sequent-ptx1\\n\"); exit (0);\n+    }\n+    printf (\"i386-sequent-ptx\\n\"); exit (0);\n+\n+#endif\n+\n+#if defined (vax)\n+#if !defined (ultrix)\n+  printf (\"vax-dec-bsd\\n\"); exit (0);\n+#else\n+  printf (\"vax-dec-ultrix\\n\"); exit (0);\n+#endif\n+#endif\n+\n+#if defined (alliant) && defined (i860)\n+  printf (\"i860-alliant-bsd\\n\"); exit (0);\n+#endif\n+\n+  exit (1);\n+}\n+EOF\n+\n+${CC-cc} dummy.c -o dummy 2>/dev/null && ./dummy && rm dummy.c dummy && exit 0\n+rm -f dummy.c dummy\n+\n+# Apollos put the system type in the environment.\n+\n+test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit 0; }\n+\n+# Convex versions that predate uname can use getsysinfo(1)\n+\n+if [ -x /usr/convex/getsysinfo ]\n+then\n+    case `getsysinfo -f cpu_type` in\n+    c1*)\n+\techo c1-convex-bsd\n+\texit 0 ;;\n+    c2*)\n+\tif getsysinfo -f scalar_acc\n+\tthen echo c32-convex-bsd\n+\telse echo c2-convex-bsd\n+\tfi\n+\texit 0 ;;\n+    c34*)\n+\techo c34-convex-bsd\n+\texit 0 ;;\n+    c38*)\n+\techo c38-convex-bsd\n+\texit 0 ;;\n+    c4*)\n+\techo c4-convex-bsd\n+\texit 0 ;;\n+    esac\n+fi\n+\n+#echo '(Unable to guess system type)' 1>&2\n+\n+exit 1"}, {"sha": "94c0061d52495f5f7a7166ef2894772711bcc396", "filename": "texinfo/config.h.in", "status": "added", "additions": 248, "deletions": 0, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fconfig.h.in?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,248 @@\n+/* config.h.in.  Generated automatically from configure.in by autoheader.  */\n+/* acconfig.h\n+   This file is in the public domain.\n+\n+   Descriptive text for the C preprocessor macros that\n+   the distributed Autoconf macros can define.\n+   No software package will use all of them; autoheader copies the ones\n+   your configure.in uses into your configuration header file templates.\n+\n+   The entries are in sort -df order: alphabetical, case insensitive,\n+   ignoring punctuation (such as underscores).  Although this order\n+   can split up related entries, it makes it easier to check whether\n+   a given entry is in the file.\n+\n+   Leave the following blank line there!!  Autoheader needs it.  */\n+\f\n+\n+\n+/* Define if using alloca.c.  */\n+#undef C_ALLOCA\n+\n+/* Define to empty if the keyword does not work.  */\n+#undef const\n+\n+/* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.\n+   This function is required for alloca.c support on those systems.  */\n+#undef CRAY_STACKSEG_END\n+\n+/* Define if you have alloca, as a function or macro.  */\n+#undef HAVE_ALLOCA\n+\n+/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */\n+#undef HAVE_ALLOCA_H\n+\n+/* Define if you don't have vprintf but do have _doprnt.  */\n+#undef HAVE_DOPRNT\n+\n+/* Define if you have a working `mmap' system call.  */\n+#undef HAVE_MMAP\n+\n+/* Define if you have the vprintf function.  */\n+#undef HAVE_VPRINTF\n+\n+/* Define as __inline if that's what the C compiler calls it.  */\n+#undef inline\n+\n+/* Define if on MINIX.  */\n+#undef _MINIX\n+\n+/* Define to `long' if <sys/types.h> doesn't define.  */\n+#undef off_t\n+\n+/* Define if the system does not provide POSIX.1 features except\n+   with this defined.  */\n+#undef _POSIX_1_SOURCE\n+\n+/* Define if you need to in order for stat and other things to work.  */\n+#undef _POSIX_SOURCE\n+\n+/* Define as the return type of signal handlers (int or void).  */\n+#undef RETSIGTYPE\n+\n+/* Define if the setvbuf function takes the buffering type as its second\n+   argument and the buffer pointer as the third, as on System V\n+   before release 3.  */\n+#undef SETVBUF_REVERSED\n+\n+/* Define to `unsigned' if <sys/types.h> doesn't define.  */\n+#undef size_t\n+\n+/* If using the C implementation of alloca, define if you know the\n+   direction of stack growth for your system; otherwise it will be\n+   automatically deduced at run-time.\n+ STACK_DIRECTION > 0 => grows toward higher addresses\n+ STACK_DIRECTION < 0 => grows toward lower addresses\n+ STACK_DIRECTION = 0 => direction of growth unknown\n+ */\n+#undef STACK_DIRECTION\n+\n+/* Define if you have the ANSI C header files.  */\n+#undef STDC_HEADERS\n+\n+/* Define if your <sys/time.h> declares struct tm.  */\n+#undef TM_IN_SYS_TIME\n+\n+/* Define to 1 if NLS is requested.  */\n+#undef ENABLE_NLS\n+\n+/* Define as 1 if you have catgets and don't want to use GNU gettext.  */\n+#undef HAVE_CATGETS\n+\n+/* Define as 1 if you have gettext and don't want to use GNU gettext.  */\n+#undef HAVE_GETTEXT\n+\n+/* Define if your locale.h file contains LC_MESSAGES.  */\n+#undef HAVE_LC_MESSAGES\n+\n+/* Define as 1 if you have the stpcpy function.  */\n+#undef HAVE_STPCPY\n+\n+/* Define to the name of the distribution.  */\n+#undef PACKAGE\n+\n+/* Define to the version of the distribution.  */\n+#undef VERSION\n+\n+/* Define if you have the __argz_count function.  */\n+#undef HAVE___ARGZ_COUNT\n+\n+/* Define if you have the __argz_next function.  */\n+#undef HAVE___ARGZ_NEXT\n+\n+/* Define if you have the __argz_stringify function.  */\n+#undef HAVE___ARGZ_STRINGIFY\n+\n+/* Define if you have the bzero function.  */\n+#undef HAVE_BZERO\n+\n+/* Define if you have the dcgettext function.  */\n+#undef HAVE_DCGETTEXT\n+\n+/* Define if you have the getcwd function.  */\n+#undef HAVE_GETCWD\n+\n+/* Define if you have the getpagesize function.  */\n+#undef HAVE_GETPAGESIZE\n+\n+/* Define if you have the memcpy function.  */\n+#undef HAVE_MEMCPY\n+\n+/* Define if you have the memmove function.  */\n+#undef HAVE_MEMMOVE\n+\n+/* Define if you have the memset function.  */\n+#undef HAVE_MEMSET\n+\n+/* Define if you have the munmap function.  */\n+#undef HAVE_MUNMAP\n+\n+/* Define if you have the putenv function.  */\n+#undef HAVE_PUTENV\n+\n+/* Define if you have the setenv function.  */\n+#undef HAVE_SETENV\n+\n+/* Define if you have the setlocale function.  */\n+#undef HAVE_SETLOCALE\n+\n+/* Define if you have the setvbuf function.  */\n+#undef HAVE_SETVBUF\n+\n+/* Define if you have the sigprocmask function.  */\n+#undef HAVE_SIGPROCMASK\n+\n+/* Define if you have the sigsetmask function.  */\n+#undef HAVE_SIGSETMASK\n+\n+/* Define if you have the stpcpy function.  */\n+#undef HAVE_STPCPY\n+\n+/* Define if you have the strcasecmp function.  */\n+#undef HAVE_STRCASECMP\n+\n+/* Define if you have the strchr function.  */\n+#undef HAVE_STRCHR\n+\n+/* Define if you have the strdup function.  */\n+#undef HAVE_STRDUP\n+\n+/* Define if you have the strerror function.  */\n+#undef HAVE_STRERROR\n+\n+/* Define if you have the <argz.h> header file.  */\n+#undef HAVE_ARGZ_H\n+\n+/* Define if you have the <fcntl.h> header file.  */\n+#undef HAVE_FCNTL_H\n+\n+/* Define if you have the <limits.h> header file.  */\n+#undef HAVE_LIMITS_H\n+\n+/* Define if you have the <locale.h> header file.  */\n+#undef HAVE_LOCALE_H\n+\n+/* Define if you have the <malloc.h> header file.  */\n+#undef HAVE_MALLOC_H\n+\n+/* Define if you have the <nl_types.h> header file.  */\n+#undef HAVE_NL_TYPES_H\n+\n+/* Define if you have the <pwd.h> header file.  */\n+#undef HAVE_PWD_H\n+\n+/* Define if you have the <string.h> header file.  */\n+#undef HAVE_STRING_H\n+\n+/* Define if you have the <strings.h> header file.  */\n+#undef HAVE_STRINGS_H\n+\n+/* Define if you have the <sys/fcntl.h> header file.  */\n+#undef HAVE_SYS_FCNTL_H\n+\n+/* Define if you have the <sys/file.h> header file.  */\n+#undef HAVE_SYS_FILE_H\n+\n+/* Define if you have the <sys/ptem.h> header file.  */\n+#undef HAVE_SYS_PTEM_H\n+\n+/* Define if you have the <sys/time.h> header file.  */\n+#undef HAVE_SYS_TIME_H\n+\n+/* Define if you have the <sys/ttold.h> header file.  */\n+#undef HAVE_SYS_TTOLD_H\n+\n+/* Define if you have the <sys/wait.h> header file.  */\n+#undef HAVE_SYS_WAIT_H\n+\n+/* Define if you have the <termcap.h> header file.  */\n+#undef HAVE_TERMCAP_H\n+\n+/* Define if you have the <termio.h> header file.  */\n+#undef HAVE_TERMIO_H\n+\n+/* Define if you have the <termios.h> header file.  */\n+#undef HAVE_TERMIOS_H\n+\n+/* Define if you have the <unistd.h> header file.  */\n+#undef HAVE_UNISTD_H\n+\n+/* Define if you have the <values.h> header file.  */\n+#undef HAVE_VALUES_H\n+\n+/* Define if you have the bsd library (-lbsd).  */\n+#undef HAVE_LIBBSD\n+\n+/* Define if you have the i library (-li).  */\n+#undef HAVE_LIBI\n+\n+/* For gettext (NLS) */\n+#include <libintl.h>\n+#define _(String) gettext (String)\n+#define N_(String) (String)\n+\n+\f\n+/* Leave that blank line there!!  Autoheader needs it.\n+   If you're adding to this file, keep in mind:\n+   The entries are in sort -df order: alphabetical, case insensitive,\n+   ignoring punctuation (such as underscores).  */"}, {"sha": "cd3425354010cd5bf085d6fc7d67adeb9fb1c3ea", "filename": "texinfo/config.sub", "status": "added", "additions": 939, "deletions": 0, "changes": 939, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fconfig.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fconfig.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fconfig.sub?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,939 @@\n+#! /bin/sh\n+# Configuration validation subroutine script, version 1.1.\n+#   Copyright (C) 1991, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n+# This file is (in principle) common to ALL GNU software.\n+# The presence of a machine in this file suggests that SOME GNU software\n+# can handle that machine.  It does not imply ALL GNU software can.\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330,\n+# Boston, MA 02111-1307, USA.\n+\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that program.\n+\n+# Configuration subroutine to validate and canonicalize a configuration type.\n+# Supply the specified configuration type as an argument.\n+# If it is invalid, we print an error message on stderr and exit with code 1.\n+# Otherwise, we print the canonical config type on stdout and succeed.\n+\n+# This file is supposed to be the same for all GNU packages\n+# and recognize all the CPU types, system types and aliases\n+# that are meaningful with *any* GNU software.\n+# Each package is responsible for reporting which valid configurations\n+# it does not support.  The user should be able to distinguish\n+# a failure to support a valid configuration from a meaningless\n+# configuration.\n+\n+# The goal of this file is to map all the various variations of a given\n+# machine specification into a single specification in the form:\n+#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n+# or in some cases, the newer four-part form:\n+#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n+# It is wrong to echo any other type of specification.\n+\n+if [ x$1 = x ]\n+then\n+\techo Configuration name missing. 1>&2\n+\techo \"Usage: $0 CPU-MFR-OPSYS\" 1>&2\n+\techo \"or     $0 ALIAS\" 1>&2\n+\techo where ALIAS is a recognized configuration type. 1>&2\n+\texit 1\n+fi\n+\n+# First pass through any local machine types.\n+case $1 in\n+\t*local*)\n+\t\techo $1\n+\t\texit 0\n+\t\t;;\n+\t*)\n+\t;;\n+esac\n+\n+# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).\n+# Here we must recognize all the valid KERNEL-OS combinations.\n+maybe_os=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\2/'`\n+case $maybe_os in\n+  linux-gnu*)\n+    os=-$maybe_os\n+    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n+    ;;\n+  *)\n+    basic_machine=`echo $1 | sed 's/-[^-]*$//'`\n+    if [ $basic_machine != $1 ]\n+    then os=`echo $1 | sed 's/.*-/-/'`\n+    else os=; fi\n+    ;;\n+esac\n+\n+### Let's recognize common machines as not being operating systems so\n+### that things like config.sub decstation-3100 work.  We also\n+### recognize some manufacturers as not being operating systems, so we\n+### can provide default operating systems below.\n+case $os in\n+\t-sun*os*)\n+\t\t# Prevent following clause from handling this invalid input.\n+\t\t;;\n+\t-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \\\n+\t-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \\\n+\t-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \\\n+\t-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\\\n+\t-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \\\n+\t-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \\\n+\t-apple)\n+\t\tos=\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-hiux*)\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\t-sco5)\n+\t\tos=sco3.2v5\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco4)\n+\t\tos=-sco3.2v4\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco3.2.[4-9]*)\n+\t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco3.2v[4-9]*)\n+\t\t# Don't forget version if it is 3.2v4 or newer.\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco*)\n+\t\tos=-sco3.2v2\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-isc)\n+\t\tos=-isc2.2\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-clix*)\n+\t\tbasic_machine=clipper-intergraph\n+\t\t;;\n+\t-isc*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-lynx*)\n+\t\tos=-lynxos\n+\t\t;;\n+\t-ptx*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`\n+\t\t;;\n+\t-windowsnt*)\n+\t\tos=`echo $os | sed -e 's/windowsnt/winnt/'`\n+\t\t;;\n+\t-psos*)\n+\t\tos=-psos\n+\t\t;;\n+esac\n+\n+# Decode aliases for certain CPU-COMPANY combinations.\n+case $basic_machine in\n+\t# Recognize the basic CPU types without company name.\n+\t# Some are omitted here because they have special meanings below.\n+\ttahoe | i860 | m68k | m68000 | m88k | ns32k | arm \\\n+\t\t| arme[lb] | pyramid \\\n+\t\t| tron | a29k | 580 | i960 | h8300 | hppa | hppa1.0 | hppa1.1 \\\n+\t\t| alpha | we32k | ns16k | clipper | i370 | sh \\\n+\t\t| powerpc | powerpcle | 1750a | dsp16xx | mips64 | mipsel \\\n+\t\t| pdp11 | mips64el | mips64orion | mips64orionel \\\n+\t\t| sparc | sparclet | sparclite | sparc64)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\t;;\n+\t# We use `pc' rather than `unknown'\n+\t# because (1) that's what they normally are, and\n+\t# (2) the word \"unknown\" tends to confuse beginning users.\n+\ti[3456]86)\n+\t  basic_machine=$basic_machine-pc\n+\t  ;;\n+\t# Object if more than one company name word.\n+\t*-*-*)\n+\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+\t# Recognize the basic CPU types with company name.\n+\tvax-* | tahoe-* | i[3456]86-* | i860-* | m68k-* | m68000-* | m88k-* \\\n+\t      | sparc-* | ns32k-* | fx80-* | arm-* | c[123]* \\\n+\t      | mips-* | pyramid-* | tron-* | a29k-* | romp-* | rs6000-* | power-* \\\n+\t      | none-* | 580-* | cray2-* | h8300-* | i960-* | xmp-* | ymp-* \\\n+\t      | hppa-* | hppa1.0-* | hppa1.1-* | alpha-* | we32k-* | cydra-* | ns16k-* \\\n+\t      | pn-* | np1-* | xps100-* | clipper-* | orion-* | sparclite-* \\\n+\t      | pdp11-* | sh-* | powerpc-* | powerpcle-* | sparc64-* | mips64-* | mipsel-* \\\n+\t      | mips64el-* | mips64orion-* | mips64orionel-* | f301-*)\n+\t\t;;\n+\t# Recognize the various machine names and aliases which stand\n+\t# for a CPU type and a company and sometimes even an OS.\n+\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n+\t\tbasic_machine=m68000-att\n+\t\t;;\n+\t3b*)\n+\t\tbasic_machine=we32k-att\n+\t\t;;\n+\talliant | fx80)\n+\t\tbasic_machine=fx80-alliant\n+\t\t;;\n+\taltos | altos3068)\n+\t\tbasic_machine=m68k-altos\n+\t\t;;\n+\tam29k)\n+\t\tbasic_machine=a29k-none\n+\t\tos=-bsd\n+\t\t;;\n+\tamdahl)\n+\t\tbasic_machine=580-amdahl\n+\t\tos=-sysv\n+\t\t;;\n+\tamiga | amiga-*)\n+\t\tbasic_machine=m68k-cbm\n+\t\t;;\n+\tamigados)\n+\t\tbasic_machine=m68k-cbm\n+\t\tos=-amigados\n+\t\t;;\n+\tamigaunix | amix)\n+\t\tbasic_machine=m68k-cbm\n+\t\tos=-sysv4\n+\t\t;;\n+\tapollo68)\n+\t\tbasic_machine=m68k-apollo\n+\t\tos=-sysv\n+\t\t;;\n+\taux)\n+\t\tbasic_machine=m68k-apple\n+\t\tos=-aux\n+\t\t;;\n+\tbalance)\n+\t\tbasic_machine=ns32k-sequent\n+\t\tos=-dynix\n+\t\t;;\n+\tconvex-c1)\n+\t\tbasic_machine=c1-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c2)\n+\t\tbasic_machine=c2-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c32)\n+\t\tbasic_machine=c32-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c34)\n+\t\tbasic_machine=c34-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c38)\n+\t\tbasic_machine=c38-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tcray | ymp)\n+\t\tbasic_machine=ymp-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tcray2)\n+\t\tbasic_machine=cray2-cray\n+\t\tos=-unicos\n+\t\t;;\n+\t[ctj]90-cray)\n+\t\tbasic_machine=c90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tcrds | unos)\n+\t\tbasic_machine=m68k-crds\n+\t\t;;\n+\tda30 | da30-*)\n+\t\tbasic_machine=m68k-da30\n+\t\t;;\n+\tdecstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)\n+\t\tbasic_machine=mips-dec\n+\t\t;;\n+\tdelta | 3300 | motorola-3300 | motorola-delta \\\n+\t      | 3300-motorola | delta-motorola)\n+\t\tbasic_machine=m68k-motorola\n+\t\t;;\n+\tdelta88)\n+\t\tbasic_machine=m88k-motorola\n+\t\tos=-sysv3\n+\t\t;;\n+\tdpx20 | dpx20-*)\n+\t\tbasic_machine=rs6000-bull\n+\t\tos=-bosx\n+\t\t;;\n+\tdpx2* | dpx2*-bull)\n+\t\tbasic_machine=m68k-bull\n+\t\tos=-sysv3\n+\t\t;;\n+\tebmon29k)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-ebmon\n+\t\t;;\n+\telxsi)\n+\t\tbasic_machine=elxsi-elxsi\n+\t\tos=-bsd\n+\t\t;;\n+\tencore | umax | mmax)\n+\t\tbasic_machine=ns32k-encore\n+\t\t;;\n+\tfx2800)\n+\t\tbasic_machine=i860-alliant\n+\t\t;;\n+\tgenix)\n+\t\tbasic_machine=ns32k-ns\n+\t\t;;\n+\tgmicro)\n+\t\tbasic_machine=tron-gmicro\n+\t\tos=-sysv\n+\t\t;;\n+\th3050r* | hiux*)\n+\t\tbasic_machine=hppa1.1-hitachi\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\th8300hms)\n+\t\tbasic_machine=h8300-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\tharris)\n+\t\tbasic_machine=m88k-harris\n+\t\tos=-sysv3\n+\t\t;;\n+\thp300-*)\n+\t\tbasic_machine=m68k-hp\n+\t\t;;\n+\thp300bsd)\n+\t\tbasic_machine=m68k-hp\n+\t\tos=-bsd\n+\t\t;;\n+\thp300hpux)\n+\t\tbasic_machine=m68k-hp\n+\t\tos=-hpux\n+\t\t;;\n+\thp9k2[0-9][0-9] | hp9k31[0-9])\n+\t\tbasic_machine=m68000-hp\n+\t\t;;\n+\thp9k3[2-9][0-9])\n+\t\tbasic_machine=m68k-hp\n+\t\t;;\n+\thp9k7[0-9][0-9] | hp7[0-9][0-9] | hp9k8[0-9]7 | hp8[0-9]7)\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thppa-next)\n+\t\tos=-nextstep3\n+\t\t;;\n+\ti370-ibm* | ibm*)\n+\t\tbasic_machine=i370-ibm\n+\t\tos=-mvs\n+\t\t;;\n+# I'm not sure what \"Sysv32\" means.  Should this be sysv3.2?\n+\ti[3456]86v32)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv32\n+\t\t;;\n+\ti[3456]86v4*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv4\n+\t\t;;\n+\ti[3456]86v)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv\n+\t\t;;\n+\ti[3456]86sol2)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-solaris2\n+\t\t;;\n+\tiris | iris4d)\n+\t\tbasic_machine=mips-sgi\n+\t\tcase $os in\n+\t\t    -irix*)\n+\t\t\t;;\n+\t\t    *)\n+\t\t\tos=-irix4\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\tisi68 | isi)\n+\t\tbasic_machine=m68k-isi\n+\t\tos=-sysv\n+\t\t;;\n+\tm88k-omron*)\n+\t\tbasic_machine=m88k-omron\n+\t\t;;\n+\tmagnum | m3230)\n+\t\tbasic_machine=mips-mips\n+\t\tos=-sysv\n+\t\t;;\n+\tmerlin)\n+\t\tbasic_machine=ns32k-utek\n+\t\tos=-sysv\n+\t\t;;\n+\tminiframe)\n+\t\tbasic_machine=m68000-convergent\n+\t\t;;\n+\tmipsel*-linux*)\n+\t\tbasic_machine=mipsel-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tmips*-linux*)\n+\t\tbasic_machine=mips-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tmips3*-*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`\n+\t\t;;\n+\tmips3*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown\n+\t\t;;\n+\tncr3000)\n+\t\tbasic_machine=i486-ncr\n+\t\tos=-sysv4\n+\t\t;;\n+\tnews | news700 | news800 | news900)\n+\t\tbasic_machine=m68k-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnews1000)\n+\t\tbasic_machine=m68030-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnews-3600 | risc-news)\n+\t\tbasic_machine=mips-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnext | m*-next )\n+\t\tbasic_machine=m68k-next\n+\t\tcase $os in\n+\t\t    -nextstep* )\n+\t\t\t;;\n+\t\t    -ns2*)\n+\t\t      os=-nextstep2\n+\t\t\t;;\n+\t\t    *)\n+\t\t      os=-nextstep3\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\tnh3000)\n+\t\tbasic_machine=m68k-harris\n+\t\tos=-cxux\n+\t\t;;\n+\tnh[45]000)\n+\t\tbasic_machine=m88k-harris\n+\t\tos=-cxux\n+\t\t;;\n+\tnindy960)\n+\t\tbasic_machine=i960-intel\n+\t\tos=-nindy\n+\t\t;;\n+\tnp1)\n+\t\tbasic_machine=np1-gould\n+\t\t;;\n+\tpa-hitachi)\n+\t\tbasic_machine=hppa1.1-hitachi\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\tparagon)\n+\t\tbasic_machine=i860-intel\n+\t\tos=-osf\n+\t\t;;\n+\tpbd)\n+\t\tbasic_machine=sparc-tti\n+\t\t;;\n+\tpbb)\n+\t\tbasic_machine=m68k-tti\n+\t\t;;\n+        pc532 | pc532-*)\n+\t\tbasic_machine=ns32k-pc532\n+\t\t;;\n+\tpentium | p5)\n+\t\tbasic_machine=i586-intel\n+\t\t;;\n+\tpentiumpro | p6)\n+\t\tbasic_machine=i686-intel\n+\t\t;;\n+\tpentium-* | p5-*)\n+\t\tbasic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentiumpro-* | p6-*)\n+\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tk5)\n+\t\t# We don't have specific support for AMD's K5 yet, so just call it a Pentium\n+\t\tbasic_machine=i586-amd\n+\t\t;;\n+\tnexen)\n+\t\t# We don't have specific support for Nexgen yet, so just call it a Pentium\n+\t\tbasic_machine=i586-nexgen\n+\t\t;;\n+\tpn)\n+\t\tbasic_machine=pn-gould\n+\t\t;;\n+\tpower)\tbasic_machine=rs6000-ibm\n+\t\t;;\n+\tppc)\tbasic_machine=powerpc-unknown\n+\t        ;;\n+\tppc-*)\tbasic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppcle | powerpclittle | ppc-le | powerpc-little)\n+\t\tbasic_machine=powerpcle-unknown\n+\t        ;;\n+\tppcle-* | powerpclittle-*)\n+\t\tbasic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tps2)\n+\t\tbasic_machine=i386-ibm\n+\t\t;;\n+\trm[46]00)\n+\t\tbasic_machine=mips-siemens\n+\t\t;;\n+\trtpc | rtpc-*)\n+\t\tbasic_machine=romp-ibm\n+\t\t;;\n+\tsequent)\n+\t\tbasic_machine=i386-sequent\n+\t\t;;\n+\tsh)\n+\t\tbasic_machine=sh-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\tsps7)\n+\t\tbasic_machine=m68k-bull\n+\t\tos=-sysv2\n+\t\t;;\n+\tspur)\n+\t\tbasic_machine=spur-unknown\n+\t\t;;\n+\tsun2)\n+\t\tbasic_machine=m68000-sun\n+\t\t;;\n+\tsun2os3)\n+\t\tbasic_machine=m68000-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun2os4)\n+\t\tbasic_machine=m68000-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun3os3)\n+\t\tbasic_machine=m68k-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun3os4)\n+\t\tbasic_machine=m68k-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun4os3)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun4os4)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun4sol2)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-solaris2\n+\t\t;;\n+\tsun3 | sun3-*)\n+\t\tbasic_machine=m68k-sun\n+\t\t;;\n+\tsun4)\n+\t\tbasic_machine=sparc-sun\n+\t\t;;\n+\tsun386 | sun386i | roadrunner)\n+\t\tbasic_machine=i386-sun\n+\t\t;;\n+\tsymmetry)\n+\t\tbasic_machine=i386-sequent\n+\t\tos=-dynix\n+\t\t;;\n+\ttower | tower-32)\n+\t\tbasic_machine=m68k-ncr\n+\t\t;;\n+\tudi29k)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tultra3)\n+\t\tbasic_machine=a29k-nyu\n+\t\tos=-sym1\n+\t\t;;\n+\tvaxv)\n+\t\tbasic_machine=vax-dec\n+\t\tos=-sysv\n+\t\t;;\n+\tvms)\n+\t\tbasic_machine=vax-dec\n+\t\tos=-vms\n+\t\t;;\n+       vpp*|vx|vx-*)\n+               basic_machine=f301-fujitsu\n+               ;;\n+\tvxworks960)\n+\t\tbasic_machine=i960-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tvxworks68)\n+\t\tbasic_machine=m68k-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tvxworks29k)\n+\t\tbasic_machine=a29k-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\txmp)\n+\t\tbasic_machine=xmp-cray\n+\t\tos=-unicos\n+\t\t;;\n+        xps | xps100)\n+\t\tbasic_machine=xps100-honeywell\n+\t\t;;\n+\tnone)\n+\t\tbasic_machine=none-none\n+\t\tos=-none\n+\t\t;;\n+\n+# Here we handle the default manufacturer of certain CPU types.  It is in\n+# some cases the only manufacturer, in others, it is the most popular.\n+\tmips)\n+\t\tif [ x$os = x-linux ]; then\n+\t\t\tbasic_machine=mips-unknown\n+\t\telse\n+\t\t\tbasic_machine=mips-mips\n+\t\tfi\n+\t\t;;\n+\tromp)\n+\t\tbasic_machine=romp-ibm\n+\t\t;;\n+\trs6000)\n+\t\tbasic_machine=rs6000-ibm\n+\t\t;;\n+\tvax)\n+\t\tbasic_machine=vax-dec\n+\t\t;;\n+\tpdp11)\n+\t\tbasic_machine=pdp11-dec\n+\t\t;;\n+\twe32k)\n+\t\tbasic_machine=we32k-att\n+\t\t;;\n+\tsparc)\n+\t\tbasic_machine=sparc-sun\n+\t\t;;\n+        cydra)\n+\t\tbasic_machine=cydra-cydrome\n+\t\t;;\n+\torion)\n+\t\tbasic_machine=orion-highlevel\n+\t\t;;\n+\torion105)\n+\t\tbasic_machine=clipper-highlevel\n+\t\t;;\n+\t*)\n+\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+\n+# Here we canonicalize certain aliases for manufacturers.\n+case $basic_machine in\n+\t*-digital*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`\n+\t\t;;\n+\t*-commodore*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`\n+\t\t;;\n+\t*)\n+\t\t;;\n+esac\n+\n+# Decode manufacturer-specific aliases for certain operating systems.\n+\n+if [ x\"$os\" != x\"\" ]\n+then\n+case $os in\n+        # First match some system type aliases\n+        # that might get confused with valid system types.\n+\t# -solaris* is a basic system type, with this one exception.\n+\t-solaris1 | -solaris1.*)\n+\t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n+\t\t;;\n+\t-solaris)\n+\t\tos=-solaris2\n+\t\t;;\n+\t-unixware* | svr4*)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-gnu/linux*)\n+\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n+\t\t;;\n+\t# First accept the basic system types.\n+\t# The portable systems comes first.\n+\t# Each alternative MUST END IN A *, to match a version number.\n+\t# -sysv* is not here because it comes later, after sysvr4.\n+\t-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \\\n+\t      | -*vms* | -sco* | -esix* | -isc* | -aix* | -sunos | -sunos[34]*\\\n+\t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -solaris* | -sym* \\\n+\t      | -amigados* | -msdos* | -newsos* | -unicos* | -aof* | -aos* \\\n+\t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n+\t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n+\t      | -hiux* | -386bsd* | -netbsd* | -openbsd* | -freebsd* | -riscix* \\\n+\t      | -lynxos* | -bosx* | -nextstep* | -cxux* | -aout* | -elf* \\\n+\t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n+\t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n+\t      | -cygwin32* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n+\t      | -linux-gnu* | -uxpv*)\n+\t# Remember, each alternative MUST END IN *, to match a version number.\n+\t\t;;\n+\t-linux*)\n+\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n+\t\t;;\n+\t-sunos5*)\n+\t\tos=`echo $os | sed -e 's|sunos5|solaris2|'`\n+\t\t;;\n+\t-sunos6*)\n+\t\tos=`echo $os | sed -e 's|sunos6|solaris3|'`\n+\t\t;;\n+\t-osfrose*)\n+\t\tos=-osfrose\n+\t\t;;\n+\t-osf*)\n+\t\tos=-osf\n+\t\t;;\n+\t-utek*)\n+\t\tos=-bsd\n+\t\t;;\n+\t-dynix*)\n+\t\tos=-bsd\n+\t\t;;\n+\t-acis*)\n+\t\tos=-aos\n+\t\t;;\n+\t-ctix* | -uts*)\n+\t\tos=-sysv\n+\t\t;;\n+\t-ns2 )\n+\t        os=-nextstep2\n+\t\t;;\n+\t# Preserve the version number of sinix5.\n+\t-sinix5.*)\n+\t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n+\t\t;;\n+\t-sinix*)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-triton*)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-oss*)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-svr4)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-svr3)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-sysvr4)\n+\t\tos=-sysv4\n+\t\t;;\n+\t# This must come after -sysvr4.\n+\t-sysv*)\n+\t\t;;\n+\t-xenix)\n+\t\tos=-xenix\n+\t\t;;\n+\t-none)\n+\t\t;;\n+\t*)\n+\t\t# Get rid of the `-' at the beginning of $os.\n+\t\tos=`echo $os | sed 's/[^-]*-//'`\n+\t\techo Invalid configuration \\`$1\\': system \\`$os\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+else\n+\n+# Here we handle the default operating systems that come with various machines.\n+# The value should be what the vendor currently ships out the door with their\n+# machine or put another way, the most popular os provided with the machine.\n+\n+# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n+# \"-sun\"), then you have to tell the case statement up towards the top\n+# that MANUFACTURER isn't an operating system.  Otherwise, code above\n+# will signal an error saying that MANUFACTURER isn't an operating\n+# system, and we'll never get to this point.\n+\n+case $basic_machine in\n+\t*-acorn)\n+\t\tos=-riscix1.2\n+\t\t;;\n+\tarm*-semi)\n+\t\tos=-aout\n+\t\t;;\n+        pdp11-*)\n+\t\tos=-none\n+\t\t;;\n+\t*-dec | vax-*)\n+\t\tos=-ultrix4.2\n+\t\t;;\n+\tm68*-apollo)\n+\t\tos=-domain\n+\t\t;;\n+\ti386-sun)\n+\t\tos=-sunos4.0.2\n+\t\t;;\n+\tm68000-sun)\n+\t\tos=-sunos3\n+\t\t# This also exists in the configure program, but was not the\n+\t\t# default.\n+\t\t# os=-sunos4\n+\t\t;;\n+\t*-tti)\t# must be before sparc entry or we get the wrong os.\n+\t\tos=-sysv3\n+\t\t;;\n+\tsparc-* | *-sun)\n+\t\tos=-sunos4.1.1\n+\t\t;;\n+\t*-ibm)\n+\t\tos=-aix\n+\t\t;;\n+\t*-hp)\n+\t\tos=-hpux\n+\t\t;;\n+\t*-hitachi)\n+\t\tos=-hiux\n+\t\t;;\n+\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n+\t\tos=-sysv\n+\t\t;;\n+\t*-cbm)\n+\t\tos=-amigados\n+\t\t;;\n+\t*-dg)\n+\t\tos=-dgux\n+\t\t;;\n+\t*-dolphin)\n+\t\tos=-sysv3\n+\t\t;;\n+\tm68k-ccur)\n+\t\tos=-rtu\n+\t\t;;\n+\tm88k-omron*)\n+\t\tos=-luna\n+\t\t;;\n+\t*-next )\n+\t\tos=-nextstep\n+\t\t;;\n+\t*-sequent)\n+\t\tos=-ptx\n+\t\t;;\n+\t*-crds)\n+\t\tos=-unos\n+\t\t;;\n+\t*-ns)\n+\t\tos=-genix\n+\t\t;;\n+\ti370-*)\n+\t\tos=-mvs\n+\t\t;;\n+\t*-next)\n+\t\tos=-nextstep3\n+\t\t;;\n+        *-gould)\n+\t\tos=-sysv\n+\t\t;;\n+        *-highlevel)\n+\t\tos=-bsd\n+\t\t;;\n+\t*-encore)\n+\t\tos=-bsd\n+\t\t;;\n+        *-sgi)\n+\t\tos=-irix\n+\t\t;;\n+        *-siemens)\n+\t\tos=-sysv4\n+\t\t;;\n+\t*-masscomp)\n+\t\tos=-rtu\n+\t\t;;\n+\tf301-fujitsu)\n+\t\tos=-uxpv\n+\t\t;;\n+\t*)\n+\t\tos=-none\n+\t\t;;\n+esac\n+fi\n+\n+# Here we handle the case where we know the os, and the CPU type, but not the\n+# manufacturer.  We pick the logical manufacturer.\n+vendor=unknown\n+case $basic_machine in\n+\t*-unknown)\n+\t\tcase $os in\n+\t\t\t-riscix*)\n+\t\t\t\tvendor=acorn\n+\t\t\t\t;;\n+\t\t\t-sunos*)\n+\t\t\t\tvendor=sun\n+\t\t\t\t;;\n+\t\t\t-aix*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-hpux*)\n+\t\t\t\tvendor=hp\n+\t\t\t\t;;\n+\t\t\t-hiux*)\n+\t\t\t\tvendor=hitachi\n+\t\t\t\t;;\n+\t\t\t-unos*)\n+\t\t\t\tvendor=crds\n+\t\t\t\t;;\n+\t\t\t-dgux*)\n+\t\t\t\tvendor=dg\n+\t\t\t\t;;\n+\t\t\t-luna*)\n+\t\t\t\tvendor=omron\n+\t\t\t\t;;\n+\t\t\t-genix*)\n+\t\t\t\tvendor=ns\n+\t\t\t\t;;\n+\t\t\t-mvs*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-ptx*)\n+\t\t\t\tvendor=sequent\n+\t\t\t\t;;\n+\t\t\t-vxsim* | -vxworks*)\n+\t\t\t\tvendor=wrs\n+\t\t\t\t;;\n+\t\t\t-aux*)\n+\t\t\t\tvendor=apple\n+\t\t\t\t;;\n+\t\tesac\n+\t\tbasic_machine=`echo $basic_machine | sed \"s/unknown/$vendor/\"`\n+\t\t;;\n+esac\n+\n+echo $basic_machine$os"}, {"sha": "178c463cc455a7974be20303efe0c187a7999c9e", "filename": "texinfo/cygnus/Makefile.in", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fcygnus%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fcygnus%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fcygnus%2FMakefile.in?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,69 @@\n+# Makefile for Cygnus overrides to Texinfo distribution. -*- Indented-Text -*-\n+# Copyright (C) 1993 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+\n+#### Start of system configuration section. ####\n+\n+srcdir = @srcdir@\n+VPATH  = @srcdir@\n+\n+LN\t= ln\n+RM\t= rm -f\n+\n+SHELL = /bin/sh\n+\n+# We do not use texi2dvi because (a) we need no index, and\n+# (b) texi2dvi monkeys with TEXINPUTS \n+TEX = tex\n+\n+#### End of system configuration section. ####\n+\n+all: dvi\n+\n+sub-all:\n+check:\n+installcheck:\n+info:\n+install-info:\n+\n+TAGS:\n+\n+dvi: license.dvi lgpl.dvi\n+\n+install:\n+\n+uninstall:\n+\n+Makefile: Makefile.in ../config.status\n+\tcd ..; $(SHELL) ./config.status\n+\n+clean mostlyclean:\n+\t$(RM) license.?? license.??? liblic.?? liblic.??? lgpl.?? lgpl.???\n+\n+distclean realclean: clean\n+\t$(RM) Makefile config.status fsf-texi.tex\n+\n+license.dvi: texiplus.tex texinfo.tex $(srcdir)/../license.texi $(srcdir)/../gpl.texinfo fsf-texi.tex\n+\tTEXINPUTS=$(srcdir):.:$(srcdir)/.. $(TEX) $(srcdir)/../license.texi\n+\n+lgpl.dvi: texiplus.tex texinfo.tex $(srcdir)/../liblic.texi $(srcdir)/../lgpl.texinfo fsf-texi.tex\n+\tTEXINPUTS=$(srcdir):.:$(srcdir)/.. $(TEX) $(srcdir)/../liblic.texi\n+\tmv liblic.dvi lgpl.dvi\n+\n+fsf-texi.tex: $(srcdir)/../texinfo.tex\n+\tcp $(srcdir)/../texinfo.tex fsf-texi.tex\n+\n+force:"}, {"sha": "cd4030abf325cc195508518c13c93c7c51861f6d", "filename": "texinfo/cygnus/texinfo.tex", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fcygnus%2Ftexinfo.tex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fcygnus%2Ftexinfo.tex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fcygnus%2Ftexinfo.tex?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,7 @@\n+%$Id: texinfo.tex,v 1.1 1998/03/23 04:42:12 law Exp $\n+% Cover file to permit easy management of FSF texinfo.tex and use of\n+% Cygnus local revisions.\n+% First we get the official FSF one:\n+\\input fsf-texi.tex\n+@c Now we get the Cygnus mods to override things we like to do differently:\n+@input texiplus.tex"}, {"sha": "195f4ddcfe869af7c58e96b46750bfad6b820069", "filename": "texinfo/cygnus/texiplus.tex", "status": "added", "additions": 325, "deletions": 0, "changes": 325, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fcygnus%2Ftexiplus.tex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fcygnus%2Ftexiplus.tex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fcygnus%2Ftexiplus.tex?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,325 @@\n+@tex\n+%% Cygnus revisions to texinfo.tex, TeX macros to handle texinfo files\n+%   Copyright (C) 1991 Free Software Foundation, Inc.\n+%% Maintained at Cygnus Support as: \n+%%$Id: texiplus.tex,v 1.1 1998/03/23 04:42:12 law Exp $\n+  \n+%This texi+.tex file is free software; you can redistribute it and/or\n+%modify it under the terms of the GNU General Public License as\n+%published by the Free Software Foundation; either version 1, or (at\n+\n+{\\let\\fsfvn=\\texinfoversion\n+\\xdef\\texinfoversion{\\fsfvn\\ (Cygnus)}}\n+\\message{Loading Cygnus texinfo revisions [\\texinfoversion]:}\n+  \n+% Print the version number if in a .fmt file.\n+\\everyjob{\\message{[Cygnus Texinfo \\texinfoversion]}}\n+\n+\\globaldefs=1 % Escape the bounds of @tex/@end tex surrounding us\n+\n+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%CROPMARKS%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n+% These differ only slightly from FSF defaults; all crop dimens are\n+% defined here (whether different or not) for ease in revising.\n+\\cornerlong=1pc\\cornerthick=.3pt\t% These set size of cropmarks\n+\\outerhsize=7in\n+\\outervsize=9in\n+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n+\t\t\n+\\newif\\ifdraft\\drafttrue % Extra markings; turn off with @finalout\n+\n+% There are only two small changes to standard \\title from texinfo \n+% (1) to include DRAFT marking on title page unless @finalout\n+% (2) to include a title-sized \\tt font\n+% However, since \\title is local to \\titlepage, we have to redefine\n+% *that* whole damned thing.  \n+%%%%%%%%%%This is sensitive to conflict w/FSF changes!****************\n+\\def\\titlepage{\\begingroup \\parindent=0pt \\textfonts\n+   \\let\\subtitlerm=\\tenrm\n+% I deinstalled the following change because \\cmr12 is undefined.\n+% This change was not in the ChangeLog anyway.  --rms.\n+%   \\let\\subtitlerm=\\cmr12\n+   \\def\\subtitlefont{\\subtitlerm \\normalbaselineskip = 13pt \\normalbaselines}%\n+   %\n+   \\def\\authorfont{\\authorrm \\normalbaselineskip = 16pt \\normalbaselines}%\n+   %\n+   % Leave some space at the very top of the page.\n+   \\vglue\\titlepagetopglue\n+   %\n+   % Now you can print the title using @title.\n+   \\def\\title{\\parsearg\\titlezzz}%\n+%changes from FSF only in following line:\n+   \\def\\titlezzz##1{{\\let\\tentt=\\titlett\n+                    \\leftline{\\titlefont{##1\\ifdraft\\hfill DRAFT\\fi }}}\n+%end real changes from FSF version\n+\t\t    % print a rule at the page bottom also.\n+\t\t    \\finishedtitlepagefalse\n+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n+% The ``width \\hsize'' below should be unnecessary, since the rule is\n+% supposed to default to the smallest enclosing box...but *something*\n+% in texiplus breaks that default, so we force it to hsize.\n+\t\t    \\vskip4pt \\hrule height 4pt width \\hsize \\vskip4pt}%\n+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n+   % No rule at page bottom unless we print one at the top with @title.\n+   \\finishedtitlepagetrue\n+   %\n+   % Now you can put text using @subtitle.\n+   \\def\\subtitle{\\parsearg\\subtitlezzz}%\n+   \\def\\subtitlezzz##1{{\\subtitlefont \\rightline{##1}}}%\n+   %\n+   % @author should come last, but may come many times.\n+   \\def\\author{\\parsearg\\authorzzz}%\n+   \\def\\authorzzz##1{\\ifseenauthor\\else\\vskip 0pt plus 1filll\\seenauthortrue\\fi\n+      {\\authorfont \\leftline{##1}}}%\n+   %  \n+   % Most title ``pages'' are actually two pages long, with space\n+   % at the top of the second.  We don't want the ragged left on the second.\n+   \\let\\oldpage = \\page\n+   \\def\\page{%\n+      \\iffinishedtitlepage\\else\n+\t \\finishtitlepage\n+      \\fi\n+      \\oldpage\n+      \\let\\page = \\oldpage\n+      \\hbox{}}%\n+%   \\def\\page{\\oldpage \\hbox{}}\n+}\n+\\def\\finishtitlepage{%\n+% same comment re ``width \\hsize'' as on last hrule...\n+   \\vskip4pt \\hrule width \\hsize height 2pt\n+   \\vskip\\titlepagebottomglue\n+   \\finishedtitlepagetrue\n+}\n+%%%%%%%%%%end sensitive to conflict w/FSF changes!********************\n+\n+% Cygnus uses different default page headings and footers\n+\\def\\leadline{\\ \\leaders\\hrule height 2.5pt depth -2pt\\hfil\\ }\n+\\def\\manvers{}% Empty default version in case manual doesn't supply\n+% This is for _explicitly_ turning headers off.  Note that we're more\n+% literal-minded than the FSF: we don't turn off _footers_!  This\n+% means that, unlike with the FSF macros, our ``@headings off'' do not\n+% return to the default Texinfo heading-state of the document.\n+% Reconsider if this gives trouble...\n+\\def\\HEADINGSoff{\n+\\global\\evenheadline={\\hfil}\n+\\global\\evenfootline={\\line{\\let\\,=\\thinspace\\ftfnt c\\,y\\,g\\,n\\,u\\,s\\quad s\\,u\\,p\\,p\\,o\\,r\\,t\\leadline\\manvers}}\n+\\global\\oddheadline={\\hfil}\n+\\global\\oddfootline={\\line {\\let\\,=\\thinspace\\ftfnt c\\,y\\,g\\,n\\,u\\,s\\quad s\\,u\\,p\\,p\\,o\\,r\\,t\\leadline\\manvers}}}\n+% SINGLEPAGE:\n+\\def\\HEADINGSsingle{\n+\\global\\pageno=1\\HEADINGSsinglex}\n+\\def\\HEADINGSsinglex{\n+\\global\\evenfootline={%\n+{\\let\\,=\\thinspace\\ftfnt c\\,y\\,g\\,n\\,u\\,s\\quad s\\,u\\,p\\,p\\,o\\,r\\,t}%\n+\\leadline\\manvers}\n+\\global\\oddfootline={%\n+{\\let\\,=\\thinspace\\ftfnt c\\,y\\,g\\,n\\,u\\,s\\quad s\\,u\\,p\\,p\\,o\\,r\\,t}%\n+\\leadline\\manvers}\n+\\global\\evenheadline={\\ftfnt\\thischapter\\leadline\n+\t\t\\ifdraft DRAFT\\leadline\\fi\n+\t\t\\bf\\folio}\n+\\global\\oddheadline={\\ftfnt\\thischapter\\leadline\n+\t\t\\ifdraft DRAFT\\leadline\\fi\n+\t\t\\bf\\folio}\n+}\n+%\n+% DOUBLEPAGE:\n+% use hrule leaders to delimit headings, footings from\n+%               body; timestamp footer; pagenos outside *bottom* to\n+%               permit moving chaptername to outside *top* (for easier\n+%               skimming).  1990 dec 31, pesch@cygnus.com\n+\\def\\HEADINGSdouble{\n+\\global\\pageno=1\\HEADINGSdoublex}\n+\\def\\HEADINGSdoublex{\n+\\global\\evenfootline={%\n+{\\bf\\folio}\\ftfnt\\leadline\\ifdraft DRAFT\\quad\\fi\n+\\ftfnt\\manvers\\qquad\\today\n+}\n+\\global\\oddfootline={%\n+{\\let\\,=\\thinspace\\ftfnt c\\,y\\,g\\,n\\,u\\,s\\quad s\\,u\\,p\\,p\\,o\\,r\\,t}%\n+\\leadline{\\bf\\folio}%\n+}\n+\\global\\evenheadline={\\ftfnt\\thistitle\\leadline\\ifdraft DRAFT\\fi}\n+\\global\\oddheadline={\\rm\\leadline\\thischapter}\n+}\n+\n+% CHANGE to @finalout ---also use it to remove DRAFT markings from\n+% title, footers\n+%% For a final copy, take out the rectangles\n+%% that mark overfull boxes (in case you have decided\n+%% that the text looks ok even though it passes the margin).\n+\\def\\finalout{\\overfullrule=0pt\n+%% Also take out ``DRAFT'' markings\n+\t\\global\\draftfalse\n+\t\t\t}\n+\n+%Font overrides; we use PostScript when possible.\n+\\font\\textrm=pncr scaled \\magstephalf\n+\\font\\texttt=pcrr\n+\\font\\textbf=pncb scaled \\magstephalf \n+\\font\\textit=pncri scaled \\magstephalf\n+\\font\\textsl=pcrro\n+\\font\\textsf=slcrst at 9.5pt\n+% FIXME: figure out, test dvips smallcaps kluge\n+%\\font\\textsc=Times-SmallCaps scaled \\magstephalf\n+\\font\\ftfnt=phvr at 8pt % Cygnus Support footer-font\n+\n+\\font\\defbf=pncb scaled \\magstep1 %was 1314\n+\n+\\font\\ninett=pcrr at 9pt\n+\\let\\indtt=\\ninett\n+\\font\\indrm=pncr at 9pt\n+\\font\\indit=pncri at 9pt\n+\\font\\indsl=pcrro at 9pt\n+\\let\\indsf=\\indrm\n+\\let\\indbf=\\indrm\n+\\let\\indsc=\\indrm\n+\n+\\font\\chaprm=pncb at 17pt\n+\\font\\chapit=pncbi at 17pt\n+\\font\\chapsl=pcrbo at 16pt\n+\\font\\chaptt=pcrb at 16pt\n+\\font\\chapsf=slcrst at 16pt\n+\\let\\chapbf=\\chaprm\n+% \\chapfonts mod from FSF vn is to include baselineskip, for the few\n+% cases where a title chapter overflows its line.\n+\\def\\chapfonts{\\baselineskip=19pt%\n+  \\let\\tenrm=\\chaprm \\let\\tenit=\\chapit \\let\\tensl=\\chapsl \n+  \\let\\tenbf=\\chapbf \\let\\tentt=\\chaptt \\let\\smallcaps=\\chapsc\n+  \\let\\tensf=\\chapsf \\let\\teni=\\chapi \\let\\tensy=\\chapsy\n+  \\resetmathfonts}\n+\n+\n+\\font\\secrm=pncb at 14pt\n+\\font\\secit=pncbi at 14pt\n+\\font\\secsl=pcrbo at 13pt\n+\\font\\sectt=pcrb at 13pt\n+\\font\\secsf=slcrst at 13pt\n+\\font\\secbf=pncb at 14pt\n+\n+\\font\\ssecrm=pncr at 13pt\n+\\font\\ssecit=pncri at 13pt\n+\\font\\ssecsl=pcrro at 12pt\n+\\font\\ssectt=pcrr at 12pt\n+\\font\\ssecsf=slcrst at 12pt\n+\\font\\ssecbf=pncb at 13pt\n+\n+\\font\\titlerm=pncb at 21pt\n+\\font\\titlett=pcrr at 20pt\n+\\font\\authorrm=pncr scaled \\magstep2\n+\n+\\font\\truesecrm=pncr at 12pt\n+\n+% Fonts for short table of contents\n+\\font\\shortcontrm=pncr at 12pt \n+\\font\\shortcontbf=pncb at 12pt \n+\\font\\shortcontsl=pncri at 12pt\n+\n+% \\smartitalic{ARG} outputs arg in italics, followed by an italic correction\n+% unless the following character is such as not to need one.\n+\\def\\smartitalicx{\\ifx\\next,\\else\\ifx\\next-\\else\\ifx\\next.\\else\\/\\fi\\fi\\fi}\n+\\def\\smartitalic#1{{\\it #1}\\futurelet\\next\\smartitalicx}\n+% \\smartitalic is used for @emph; FSF keeps trying to make it match\n+% @var.\n+%\n+% \\smartslant{ARG} outputs arg in a slanted font, followed by an\n+% italic correction unless the following character is such as not to need one.\n+\\def\\smartslantx{\\ifx\\next,\\else\\ifx\\next-\\else\\ifx\\next.\\else\\/\\fi\\fi\\fi}\n+\\def\\smartslant#1{{\\sl #1}\\futurelet\\next\\smartslantx}\n+\n+\\let\\i=\\smartitalic\n+\\let\\var=\\smartslant\n+\\let\\dfn=\\smartitalic\n+\\let\\emph=\\smartitalic\n+\\let\\cite=\\smartitalic\n+\n+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n+% @altref, if called explicitly (inside @iftex), switches the @ref\n+% printed output so it lacks the square brackets used by default.\n+% While we're at it, we use double quotes instead of square brackets \n+% (or no decorator at all, depending on state of @altref toggle).\n+% Unfortunately this requires reproducing the entire damn xrefX\n+% definition. WARNING: may need to track texinfo.tex changes to xrefX...\n+\\newif\\ifbra\\bratrue\n+\\def\\altref{\\ifbra\\brafalse\\else\\bratrue\\fi}% Toggle.\n+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Begin duplicate xrefX:\n+\\def\\xrefX[#1,#2,#3,#4,#5,#6]{\\begingroup%\n+\\def\\printedmanual{\\ignorespaces #5}%\n+\\def\\printednodename{\\ignorespaces #3}%\n+%\n+\\setbox1=\\hbox{\\printedmanual}%\n+\\setbox0=\\hbox{\\printednodename}%\n+\\ifdim \\wd0=0pt%\n+\\def\\printednodename{\\ignorespaces #1}%\n+%%% Uncommment the following line to make the actual chapter or section title\n+%%% appear inside the square brackets.\n+%\\def\\printednodename{#1-title}%\n+\\fi%\n+%\n+%\n+% If we use \\unhbox0 and \\unhbox1 to print the node names, TeX does\n+% not insert empty discretionaries after hyphens, which means that it\n+% will not find a line break at a hyphen in a node names.  Since some\n+% manuals are best written with fairly long node names, containing\n+% hyphens, this is a loss.  Therefore, we simply give the text of\n+% the node name again, so it is as if TeX is seeing it for the first\n+% time.\n+\\ifdim \\wd1>0pt\n+section ``\\printednodename'' in \\cite{\\printedmanual}%\n+\\else%\n+\\turnoffactive%\n+%%%%%%%%%%%%%%%Here's the change for @altref:\n+\\ifbra\n+\\refx{#1-snt}{} ``\\printednodename,'' page\\tie\\refx{#1-pg}{}%\n+\\else\n+\\refx{#1-snt}{} \\printednodename, page\\tie\\refx{#1-pg}{}%\n+\\fi\n+%%%%%%%%%%%%%%%end change for @altref\n+\\fi\n+\\endgroup}\n+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%:End duplicate xrefX\n+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n+% \\widen: let examples (or whatever) fall into margins.  Symmetric.  Cancel\n+% ``@widen{N}'' with ``@widen{-N}''.\n+\\newdimen\\extra\\extra=0pt % for ``widen''\n+\\global\\def\\widen#1{\\advance\\extra by #1%\n+\\advance\\leftskip by -#1\\advance\\rightskip by -#1}\n+%\n+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n+% ONLY INTENDED CHANGES from FSF smallbook: tolerance and page centering\n+% Use @smallbook to reset parameters for 7x9.5 format  (or else 7x9.25)\n+\\def\\smallbook{\n+\n+% These values for secheadingskip and subsecheadingskip are\n+% experiments.  RJC 7 Aug 1992\n+\\global\\secheadingskip = 17pt plus 6pt minus 3pt\n+\\global\\subsecheadingskip = 14pt plus 6pt minus 3pt\n+\n+\\global\\lispnarrowing = 0.3in\n+\\setleading{12pt}\n+\\advance\\topskip by -1cm\n+\\global\\parskip 3pt plus 1pt\n+\\global\\hsize = 5in\n+\\advance\\normaloffset by .75in % half of difference from 6.5in default hsize\n+\\global\\vsize=7.5in\n+\\advance\\voffset by .7in % half of difference from 8.9in default vsize\n+\\global\\tolerance=1400\n+\\global\\hfuzz=1pt\n+\\global\\contentsrightmargin=0pt\n+\n+\\global\\pagewidth=\\hsize\n+\\global\\pageheight=\\vsize\n+\n+\\global\\let\\smalllisp=\\smalllispx\n+\\global\\let\\smallexample=\\smalllispx\n+\\global\\def\\Esmallexample{\\Esmalllisp}\n+}\\textfonts\n+\n+\\globaldefs=0 % this is NOT redundant; the \\endgroup done by@end tex\n+\t      % would restore the value, but before doing that would\n+\t      % screw up if globaldefs=1 were allowed to remain here.\n+@end tex\n+@rm\n+@smallbook\n+@c some manuals (notably as) contain stuff that only looks good in\n+@c smallbook; this switch controls its appearance, by local convention\n+@set SMALL"}, {"sha": "c03ca8807fef36ecadb63d15252f85467d44831e", "filename": "texinfo/cygnus/tocfix", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fcygnus%2Ftocfix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fcygnus%2Ftocfix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fcygnus%2Ftocfix?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,37 @@\n+#!/bin/sh\n+# tocfix - move a DVI file table of contents to its proper position\n+\n+# TeX puts the table of contents at the end of the DVI file.\n+# If you're printing multiple pages per sheet, you can't fix it\n+# on the printout.  This program moves the TOC to be right after\n+# the titlepage and copyright page.\n+# It's a safe no-op to run this program on a DVI file more than once.\n+\n+# Some explanation: the TOC has negative page numbers, represented\n+# to dviselect by an underscore.  The titlepage and copyright page\n+# have TeX page numbers 1 and 2, but so do the first two pages of the\n+# first chapter.  So we have to use absolute, as opposed to TeX,\n+# page numbers to get them right, represented to dviselect by an\n+# equals sign.\n+\n+# This program assumes that the DVI file has the standard Texinfo\n+# format -- a titlepage, a copyright page, then the real text.\n+\n+# djm@cygnus.com (David MacKenzie)\n+\n+trap 'rm -f new-*.dvi title.dvi toc.dvi body_plus_toc.dvi body.dvi; exit 1' 1 3 15\n+\n+if [ $# -eq 0 ]; then\n+    echo \"Usage; tocfix dvifile...\" >&2; exit 1\n+fi\n+\n+for dvi\n+do\n+    dviselect -i $dvi -o title.dvi =1:2\n+    dviselect -i $dvi -o toc.dvi :_1\n+    dviselect -i $dvi -o body_plus_toc.dvi =3:\n+    dviselect -i body_plus_toc.dvi -o body.dvi 1:\n+    dviconcat -o new-$dvi title.dvi toc.dvi body.dvi\n+    mv new-$dvi $dvi\n+    rm -f title.dvi toc.dvi body_plus_toc.dvi body.dvi\n+done"}, {"sha": "09469b1f6a479e75e73219065344cec3244ad4fd", "filename": "texinfo/doc/Makefile.am", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fdoc%2FMakefile.am?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,56 @@\n+## Makefile.am for texinfo/emacs.\n+## $Id: Makefile.am,v 1.1 1998/03/23 04:42:12 law Exp $\n+## Run automake in .. to produce Makefile.in from this.\n+\n+info_TEXINFOS = info-stnd.texi info.texi texinfo.texi\n+\n+# Use the makeinfo built in our distribution.\n+MAKEINFO = ../makeinfo/makeinfo\n+\n+# Include our texinfo.tex, not Automake's.\n+EXTRA_DIST = macro.texi userdoc.texi epsf.tex texinfo.tex\n+\n+# We try to discover this via configure just to give a better help message.\n+TEXMF = @TEXMF@\n+\n+install-data-local:\n+\t@echo \"WARNING: You must install texinfo.tex and epsf.tex manually,\"\n+\t@echo \"WARNING: perhaps in $(TEXMF)/tex/texinfo/\"\n+\t@echo \"WARNING: and $(TEXMF)/tex/generic/dvips/ respectively.\"\n+\t@echo \"WARNING: See doc/README for some considerations.\"\n+\n+# Do not create info files for distribution.\n+dist-info:\n+\n+# Do not try to build the info files in $(srcdir),\n+# since we don't distribute them.\n+.texi.info:\n+\t$(MAKEINFO) -I$(srcdir) `echo $< | sed 's,.*/,,'`\n+texinfo: $(srcdir)/texinfo.texi\n+\t$(MAKEINFO) -I$(srcdir) texinfo.texi\n+\n+# Do not try to install them from $(srcdir).\n+install-info-am: $(INFO_DEPS)\n+\t@$(NORMAL_INSTALL)\n+\t$(mkinstalldirs) $(infodir)\n+\t@for file in $(INFO_DEPS); do \\\n+\t  d=.; \\\n+\t  for ifile in `cd $$d && echo $$file $$file-[0-9] $$file-[0-9][0-9]`; do \\\n+\t    if test -f $$d/$$ifile; then \\\n+\t      echo \" $(INSTALL_DATA) $$d/$$ifile $(infodir)/$$ifile\"; \\\n+\t      $(INSTALL_DATA) $$d/$$ifile $(infodir)/$$ifile; \\\n+\t    else : ; fi; \\\n+\t  done; \\\n+\tdone\n+\t@$(POST_INSTALL)\n+\t@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \\\n+\t  for file in $(INFO_DEPS); do \\\n+\t    echo \" install-info --info-dir=$(infodir) $(infodir)/$$file\";\\\n+\t    install-info --info-dir=$(infodir) $(infodir)/$$file || :;\\\n+\t  done; \\\n+\telse : ; fi\n+\n+\n+# Remove them at make distclean.\n+distclean-aminfo:\n+\trm -f texinfo texinfo-* info*.info*"}, {"sha": "cd882e787327b48827155695f39d1c71de0ad01e", "filename": "texinfo/doc/Makefile.in", "status": "added", "additions": 304, "deletions": 0, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fdoc%2FMakefile.in?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,304 @@\n+# Makefile.in generated automatically by automake 1.2 from Makefile.am\n+\n+# Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy, distribute and modify it.\n+\n+\n+SHELL = /bin/sh\n+\n+srcdir = @srcdir@\n+top_srcdir = @top_srcdir@\n+VPATH = @srcdir@\n+prefix = @prefix@\n+exec_prefix = @exec_prefix@\n+\n+bindir = @bindir@\n+sbindir = @sbindir@\n+libexecdir = @libexecdir@\n+datadir = @datadir@\n+sysconfdir = @sysconfdir@\n+sharedstatedir = @sharedstatedir@\n+localstatedir = @localstatedir@\n+libdir = @libdir@\n+infodir = @infodir@\n+mandir = @mandir@\n+includedir = @includedir@\n+oldincludedir = /usr/include\n+\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+\n+top_builddir = ..\n+\n+ACLOCAL = @ACLOCAL@\n+AUTOCONF = @AUTOCONF@\n+AUTOMAKE = @AUTOMAKE@\n+AUTOHEADER = @AUTOHEADER@\n+\n+INSTALL = @INSTALL@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+transform = @program_transform_name@\n+\n+NORMAL_INSTALL = true\n+PRE_INSTALL = true\n+POST_INSTALL = true\n+NORMAL_UNINSTALL = true\n+PRE_UNINSTALL = true\n+POST_UNINSTALL = true\n+CATALOGS = @CATALOGS@\n+CATOBJEXT = @CATOBJEXT@\n+CC = @CC@\n+DATADIRNAME = @DATADIRNAME@\n+EXEEXT = @EXEEXT@\n+GENCAT = @GENCAT@\n+GMOFILES = @GMOFILES@\n+GMSGFMT = @GMSGFMT@\n+GT_NO = @GT_NO@\n+GT_YES = @GT_YES@\n+INSTOBJEXT = @INSTOBJEXT@\n+INTLDEPS = @INTLDEPS@\n+INTLLIBS = @INTLLIBS@\n+INTLOBJS = @INTLOBJS@\n+MAINT = @MAINT@\n+MKINSTALLDIRS = @MKINSTALLDIRS@\n+MSGFMT = @MSGFMT@\n+PACKAGE = @PACKAGE@\n+POFILES = @POFILES@\n+POSUB = @POSUB@\n+RANLIB = @RANLIB@\n+TERMLIBS = @TERMLIBS@\n+TEXCONFIG = @TEXCONFIG@\n+USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@\n+USE_NLS = @USE_NLS@\n+VERSION = @VERSION@\n+l = @l@\n+\n+info_TEXINFOS = info-stnd.texi info.texi texinfo.texi\n+\n+# Use the makeinfo built in our distribution.\n+MAKEINFO = ../makeinfo/makeinfo\n+\n+# Include our texinfo.tex, not Automake's.\n+EXTRA_DIST = macro.texi userdoc.texi epsf.tex texinfo.tex\n+\n+# We try to discover this via configure just to give a better help message.\n+TEXMF = @TEXMF@\n+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs\n+CONFIG_HEADER = ../config.h\n+CONFIG_CLEAN_FILES = \n+TEXI2DVI = `if test -f $(top_srcdir)/../texinfo/util/texi2dvi; then echo $(top_srcdir)/../texinfo/util/texi2dvi; else echo texi2dvi; fi`\n+TEXINFO_TEX = $(top_srcdir)/../texinfo/texinfo.tex\n+INFO_DEPS = info-stnd.info info.info texinfo\n+DVIS = info-stnd.dvi info.dvi texinfo.dvi\n+TEXINFOS = info-stnd.texi info.texi texinfo.texi\n+DIST_COMMON =  README $(info_TEXINFOS) Makefile.am Makefile.in \\\n+texinfo.tex\n+\n+\n+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n+\n+TAR = tar\n+GZIP = --best\n+default: all\n+\n+.SUFFIXES:\n+.SUFFIXES: .dvi .info .ps .texi .texinfo\n+$(srcdir)/Makefile.in: @MAINT@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) \n+\tcd $(top_srcdir) && $(AUTOMAKE) --cygnus doc/Makefile\n+\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\tcd $(top_builddir) \\\n+\t  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status\n+\n+\n+info-stnd.info: info-stnd.texi\n+info-stnd.dvi: info-stnd.texi\n+\n+\n+info.info: info.texi $(info_TEXINFOS)\n+info.dvi: info.texi $(info_TEXINFOS)\n+\n+\n+texinfo: texinfo.texi\n+texinfo.dvi: texinfo.texi\n+\n+\n+DVIPS = dvips\n+\n+.texi.dvi:\n+\tTEXINPUTS=$(top_srcdir)/../texinfo:$$TEXINPUTS \\\n+\t  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2DVI) $<\n+\n+.texi:\n+\t@rm -f $@ $@-[0-9] $@-[0-9][0-9]\n+\t$(MAKEINFO) -I $(srcdir) $<\n+\n+.texinfo.info:\n+\t@rm -f $@ $@-[0-9] $@-[0-9][0-9]\n+\t$(MAKEINFO) -I $(srcdir) $<\n+\n+.texinfo:\n+\t@rm -f $@ $@-[0-9] $@-[0-9][0-9]\n+\t$(MAKEINFO) -I $(srcdir) $<\n+\n+.texinfo.dvi:\n+\tTEXINPUTS=$(top_srcdir)/../texinfo:$$TEXINPUTS \\\n+\t  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2DVI) $<\n+.dvi.ps:\n+\t$(DVIPS) $< -o $@\n+\n+uninstall-info:\n+\t$(PRE_UNINSTALL)\n+\t@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \\\n+\t  ii=yes; \\\n+\telse ii=; fi; \\\n+\tfor file in $(INFO_DEPS); do \\\n+\t  test -z $ii || install-info --info-dir=$(infodir) --remove $$file; \\\n+\tdone\n+\t$(NORMAL_UNINSTALL)\n+\tfor file in $(INFO_DEPS); do \\\n+\t  (cd $(infodir) && rm -f $$file $$file-[0-9] $$file-[0-9][0-9]); \\\n+\tdone\n+\n+mostlyclean-aminfo:\n+\trm -f info-stnd.aux info-stnd.cp info-stnd.cps info-stnd.dvi \\\n+\t  info-stnd.fn info-stnd.fns info-stnd.ky info-stnd.log \\\n+\t  info-stnd.pg info-stnd.toc info-stnd.tp info-stnd.tps \\\n+\t  info-stnd.vr info-stnd.vrs info-stnd.op info-stnd.tr \\\n+\t  info-stnd.cv info.aux info.cp info.cps info.dvi info.fn \\\n+\t  info.fns info.ky info.log info.pg info.toc info.tp info.tps \\\n+\t  info.vr info.vrs info.op info.tr info.cv texinfo.aux \\\n+\t  texinfo.cp texinfo.cps texinfo.dvi texinfo.fn texinfo.fns \\\n+\t  texinfo.ky texinfo.log texinfo.pg texinfo.toc texinfo.tp \\\n+\t  texinfo.tps texinfo.vr texinfo.vrs texinfo.op texinfo.tr \\\n+\t  texinfo.cv\n+\n+clean-aminfo:\n+\n+distclean-aminfo:\n+\n+maintainer-clean-aminfo:\n+\tfor i in $(INFO_DEPS); do rm -f `eval echo $$i*`; done\n+clean-info: mostlyclean-aminfo\n+tags: TAGS\n+TAGS:\n+\n+\n+distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)\n+\n+subdir = doc\n+\n+distdir: $(DISTFILES)\n+\t@for file in $(DISTFILES); do \\\n+\t  if test -f $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  test -f $(distdir)/$$file \\\n+\t  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n+\t  || cp -p $$d/$$file $(distdir)/$$file; \\\n+\tdone\n+\t$(MAKE) top_distdir=\"$(top_distdir)\" distdir=\"$(distdir)\" dist-info\n+info: $(INFO_DEPS)\n+dvi: $(DVIS)\n+check: all\n+\t$(MAKE)\n+installcheck:\n+install-info: install-info-am\n+install-exec: \n+\t@$(NORMAL_INSTALL)\n+\n+install-data: install-data-local\n+\t@$(NORMAL_INSTALL)\n+\n+install: install-exec install-data all\n+\t@:\n+\n+uninstall: \n+\n+all: Makefile\n+\n+install-strip:\n+\t$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' INSTALL_SCRIPT='$(INSTALL_PROGRAM)' install\n+installdirs:\n+\n+\n+mostlyclean-generic:\n+\ttest -z \"$(MOSTLYCLEANFILES)\" || rm -f $(MOSTLYCLEANFILES)\n+\n+clean-generic:\n+\ttest -z \"$(CLEANFILES)\" || rm -f $(CLEANFILES)\n+\n+distclean-generic:\n+\trm -f Makefile $(DISTCLEANFILES)\n+\trm -f config.cache config.log stamp-h stamp-h[0-9]*\n+\ttest -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\n+maintainer-clean-generic:\n+\ttest -z \"$(MAINTAINERCLEANFILES)\" || rm -f $(MAINTAINERCLEANFILES)\n+\ttest -z \"$(BUILT_SOURCES)\" || rm -f $(BUILT_SOURCES)\n+mostlyclean:  mostlyclean-aminfo mostlyclean-generic\n+\n+clean:  clean-aminfo clean-generic mostlyclean\n+\n+distclean:  distclean-aminfo distclean-generic clean\n+\trm -f config.status\n+\n+maintainer-clean:  maintainer-clean-aminfo maintainer-clean-generic \\\n+\t\tdistclean\n+\t@echo \"This command is intended for maintainers to use;\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+\n+.PHONY: default install-info-am uninstall-info mostlyclean-aminfo \\\n+distclean-aminfo clean-aminfo maintainer-clean-aminfo tags distdir info \\\n+dvi installcheck install-info install-exec install-data install \\\n+uninstall all installdirs mostlyclean-generic distclean-generic \\\n+clean-generic maintainer-clean-generic clean mostlyclean distclean \\\n+maintainer-clean\n+\n+\n+install-data-local:\n+\t@echo \"WARNING: You must install texinfo.tex and epsf.tex manually,\"\n+\t@echo \"WARNING: perhaps in $(TEXMF)/tex/texinfo/\"\n+\t@echo \"WARNING: and $(TEXMF)/tex/generic/dvips/ respectively.\"\n+\t@echo \"WARNING: See doc/README for some considerations.\"\n+\n+# Do not create info files for distribution.\n+dist-info:\n+\n+# Do not try to build the info files in $(srcdir),\n+# since we don't distribute them.\n+.texi.info:\n+\t$(MAKEINFO) -I$(srcdir) `echo $< | sed 's,.*/,,'`\n+texinfo: $(srcdir)/texinfo.texi\n+\t$(MAKEINFO) -I$(srcdir) texinfo.texi\n+\n+# Do not try to install them from $(srcdir).\n+install-info-am: $(INFO_DEPS)\n+\t@$(NORMAL_INSTALL)\n+\t$(mkinstalldirs) $(infodir)\n+\t@for file in $(INFO_DEPS); do \\\n+\t  d=.; \\\n+\t  for ifile in `cd $$d && echo $$file $$file-[0-9] $$file-[0-9][0-9]`; do \\\n+\t    if test -f $$d/$$ifile; then \\\n+\t      echo \" $(INSTALL_DATA) $$d/$$ifile $(infodir)/$$ifile\"; \\\n+\t      $(INSTALL_DATA) $$d/$$ifile $(infodir)/$$ifile; \\\n+\t    else : ; fi; \\\n+\t  done; \\\n+\tdone\n+\t@$(POST_INSTALL)\n+\t@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \\\n+\t  for file in $(INFO_DEPS); do \\\n+\t    echo \" install-info --info-dir=$(infodir) $(infodir)/$$file\";\\\n+\t    install-info --info-dir=$(infodir) $(infodir)/$$file || :;\\\n+\t  done; \\\n+\telse : ; fi\n+\n+# Remove them at make distclean.\n+distclean-aminfo:\n+\trm -f texinfo texinfo-* info*.info*\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "e7518e6be77be135911feaba5ea2c2e596a34208", "filename": "texinfo/doc/README", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fdoc%2FREADME?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,26 @@\n+This directory contains documentation on the Texinfo system and the TeX\n+sources needed to process Texinfo sources.\n+\n+The .tex files are not installed automatically because TeX installations\n+vary so widely.  Installing them in the wrong place would give a false\n+sense of security.  So, you should simply cp *.tex to the appropriate\n+place.  If your installation follows the TeX Directory Structure\n+standard (http://www.tug.org/tds/), this will be the directory\n+<texmf>/tex/texinfo/ for texinfo.tex and <texmf>/tex/plain/dvips/ for\n+epsf.tex.  If you use the default installation paths, <texmf> will be\n+/usr/local/share/texmf.  If you have teTeX, you can find <texmf> by\n+running:\n+  texconfig confall | grep \\^TEXMF=\n+(The configure script tries to do this for you.)\n+\n+You can get the latest texinfo.tex from\n+ftp://ftp.tug.org/tex/texinfo.tex\n+ftp://ftp.cs.umb.edu/pub/tex/texinfo.tex\n+or on the FSF machines in /home/gd/gnu/doc/texinfo.tex.\n+If you have problems with the version in this distribution, please check\n+for a newer version.\n+\n+epsf.tex comes with dvips distributions, and you may already have it\n+installed.  The version here is functionally identical but slightly\n+nicer than the one in dvips574.  The changes have been sent to the\n+epsf.tex maintainer."}, {"sha": "4f9dded4fdd638600fe90259530dd71672cc560e", "filename": "texinfo/doc/epsf.tex", "status": "added", "additions": 546, "deletions": 0, "changes": 546, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Fepsf.tex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Fepsf.tex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fdoc%2Fepsf.tex?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,546 @@\n+%%% ====================================================================\n+%%%   This file is freely redistributable and placed into the\n+%%%   public domain by Tomas Rokicki.\n+%%%  @TeX-file{\n+%%%     author          = \"Tom Rokicki\",\n+%%%     version         = \"2.7k\",\n+%%%     date            = \"19 July 1997\",\n+%%%     time            = \"10:00:05 MDT\",\n+%%%     filename        = \"epsf.tex\",\n+%%%     address         = \"Tom Rokicki\n+%%%                        Box 2081\n+%%%                        Stanford, CA 94309\n+%%%                        USA\",\n+%%%     telephone       = \"+1 415 855 9989\",\n+%%%     email           = \"rokicki@cs.stanford.edu (Internet)\",\n+%%%     codetable       = \"ISO/ASCII\",\n+%%%     keywords        = \"PostScript, TeX\",\n+%%%     supported       = \"yes\",\n+%%%     abstract        = \"This file contains macros to support the inclusion\n+%%%                        of Encapsulated PostScript files in TeX documents.\",\n+%%%     docstring       = \"This file contains TeX macros to include an\n+%%%                        Encapsulated PostScript graphic.  It works\n+%%%                        by finding the bounding box comment,\n+%%%                        calculating the correct scale values, and\n+%%%                        inserting a vbox of the appropriate size at\n+%%%                        the current position in the TeX document.\n+%%%\n+%%%                        To use, simply say\n+%%%\n+%%%                        \\input epsf % somewhere early on in your TeX file\n+%%%\n+%%%                        % then where you want to insert a vbox for a figure:\n+%%%                        \\epsfbox{filename.ps}\n+%%%\n+%%%                        Alternatively, you can supply your own\n+%%%                        bounding box by\n+%%%\n+%%%                        \\epsfbox[0 0 30 50]{filename.ps}\n+%%%\n+%%%                        This will not read in the file, and will\n+%%%                        instead use the bounding box you specify.\n+%%%\n+%%%                        The effect will be to typeset the figure as\n+%%%                        a TeX box, at the point of your \\epsfbox\n+%%%                        command. By default, the graphic will have\n+%%%                        its `natural' width (namely the width of\n+%%%                        its bounding box, as described in\n+%%%                        filename.ps). The TeX box will have depth\n+%%%                        zero.\n+%%%\n+%%%                        You can enlarge or reduce the figure by\n+%%%                        saying\n+%%%\n+%%%                          \\epsfxsize=<dimen> \\epsfbox{filename.ps}\n+%%%                        or\n+%%%                          \\epsfysize=<dimen> \\epsfbox{filename.ps}\n+%%%\n+%%%                        instead. Then the width of the TeX box will\n+%%%                        be \\epsfxsize and its height will be scaled\n+%%%                        proportionately (or the height will be\n+%%%                        \\epsfysize and its width will be scaled\n+%%%                        proportionately).\n+%%%\n+%%%                        The width (and height) is restored to zero\n+%%%                        after each use, so \\epsfxsize or \\epsfysize\n+%%%                        must be specified before EACH use of\n+%%%                        \\epsfbox.\n+%%%\n+%%%                        A more general facility for sizing is\n+%%%                        available by defining the \\epsfsize macro.\n+%%%                        Normally you can redefine this macro to do\n+%%%                        almost anything.  The first parameter is\n+%%%                        the natural x size of the PostScript\n+%%%                        graphic, the second parameter is the\n+%%%                        natural y size of the PostScript graphic.\n+%%%                        It must return the xsize to use, or 0 if\n+%%%                        natural scaling is to be used.  Common uses\n+%%%                        include:\n+%%%\n+%%%                           \\epsfxsize  % just leave the old value alone\n+%%%                           0pt         % use the natural sizes\n+%%%                           #1          % use the natural sizes\n+%%%                           \\hsize      % scale to full width\n+%%%                           0.5#1       % scale to 50% of natural size\n+%%%                           \\ifnum #1>\\hsize\\hsize\\else#1\\fi\n+%%%                                       % smaller of natural, hsize\n+%%%\n+%%%                        If you want TeX to report the size of the\n+%%%                        figure (as a message on your terminal when\n+%%%                        it processes each figure), say\n+%%%                        `\\epsfverbosetrue'.\n+%%%\n+%%%                        If you only want to get the bounding box\n+%%%                        extents, without producing any output boxes\n+%%%                        or \\special{}, then say\n+%%%                        \\epsfgetbb{filename}.  The extents will be\n+%%%                        saved in the macros \\epsfllx \\epsflly\n+%%%                        \\epsfurx \\epsfury in PostScript units of\n+%%%                        big points.\n+%%%\n+%%%                        Revision history:\n+%%%\n+%%%                        ---------------------------------------------\n+%%%                        epsf.tex macro file:\n+%%%                        Originally written by Tomas Rokicki of\n+%%%                        Radical Eye Software, 29 Mar 1989.\n+%%%\n+%%%                        ---------------------------------------------\n+%%%                        Revised by Don Knuth, 3 Jan 1990.\n+%%%\n+%%%                        ---------------------------------------------\n+%%%                        Revised by Tomas Rokicki, 18 Jul 1990.\n+%%%                        Accept bounding boxes with no space after\n+%%%                        the colon.\n+%%%\n+%%%                        ---------------------------------------------\n+%%%                        Revised by Nelson H. F. Beebe\n+%%%                        <beebe@math.utah.edu>, 03 Dec 1991 [2.0].\n+%%%                        Add version number and date typeout.\n+%%%\n+%%%                        Use \\immediate\\write16 instead of \\message\n+%%%                        to ensure output on new line.\n+%%%\n+%%%                        Handle nested EPS files.\n+%%%\n+%%%                        Handle %%BoundingBox: (atend) lines.\n+%%%\n+%%%                        Do not quit when blank lines are found.\n+%%%\n+%%%                        Add a few percents to remove generation of\n+%%%                        spurious blank space.\n+%%%\n+%%%                        Move \\special output to\n+%%%                        \\epsfspecial{filename} so that other macro\n+%%%                        packages can input this one, then change\n+%%%                        the definition of \\epsfspecial to match\n+%%%                        another DVI driver.\n+%%%\n+%%%                        Move size computation to \\epsfsetsize which\n+%%%                        can be called by the user; the verbose\n+%%%                        output of the bounding box and scaled width\n+%%%                        and height happens here.\n+%%%\n+%%%                        ---------------------------------------------\n+%%%                        Revised by Nelson H. F. Beebe\n+%%%                        <beebe@math.utah.edu>, 05 May 1992 [2.1].\n+%%%                        Wrap \\leavevmode\\hbox{} around \\vbox{} with\n+%%%                        the \\special so that \\epsffile{} can be\n+%%%                        used inside \\begin{center}...\\end{center}\n+%%%\n+%%%                        ---------------------------------------------\n+%%%                        Revised by Nelson H. F. Beebe\n+%%%                        <beebe@math.utah.edu>, 09 Dec 1992 [2.2].\n+%%%                        Introduce \\epsfshow{true,false} and\n+%%%                        \\epsfframe{true,false} macros; the latter\n+%%%                        suppresses the insertion of the PostScript,\n+%%%                        and instead just creates an empty box,\n+%%%                        which may be handy for rapid prototyping.\n+%%%\n+%%%                        ---------------------------------------------\n+%%%                        Revised by Nelson H. F. Beebe\n+%%%                        <beebe@math.utah.edu>, 14 Dec 1992 [2.3].\n+%%%                        Add \\epsfshowfilename{true,false}.  When\n+%%%                        true, and \\epsfshowfalse is specified, the\n+%%%                        PostScript file name will be displayed\n+%%%                        centered in the figure box.\n+%%%\n+%%%                        ---------------------------------------------\n+%%%                        Revised by Nelson H. F. Beebe\n+%%%                        <beebe@math.utah.edu>, 20 June 1993 [2.4].\n+%%%                        Remove non-zero debug setting of \\epsfframemargin,\n+%%%                        and change margin handling to preserve EPS image\n+%%%                        size and aspect ratio, so that the actual\n+%%%                        box is \\epsfxsize+\\epsfframemargin wide by\n+%%%                        \\epsfysize+\\epsfframemargin high.\n+%%%                        Reduce output of \\epsfshowfilenametrue to\n+%%%                        just the bare file name.\n+%%%\n+%%%                        ---------------------------------------------\n+%%%                        Revised by Nelson H. F. Beebe\n+%%%                        <beebe@math.utah.edu>, 13 July 1993 [2.5].\n+%%%                        Add \\epsfframethickness for control of\n+%%%                        \\epsfframe frame lines.\n+%%%\n+%%%                        ---------------------------------------------\n+%%%                        Revised by Nelson H. F. Beebe\n+%%%                        <beebe@math.utah.edu>, 02 July 1996 [2.6]\n+%%%                        Add missing initialization \\epsfatendfalse;\n+%%%                        the lack of this resulted in the wrong\n+%%%                        BoundingBox being picked up, mea culpa, sigh...\n+%%%                        ---------------------------------------------\n+%%%\n+%%%                        ---------------------------------------------\n+%%%                        Revised by Nelson H. F. Beebe\n+%%%                        <beebe@math.utah.edu>, 25 October 1996 [2.7]\n+%%%                        Update to match changes in from dvips 5-600\n+%%%                        distribution: new user-accessible macros:\n+%%%                        \\epsfclipon, \\epsfclipoff, \\epsfdrafton,\n+%%%                        \\epsfdraftoff, change \\empty to \\epsfempty.\n+%%%                        ---------------------------------------------\n+%%%                        \n+%%%                        Modified to avoid verbosity, give help.\n+%%%                        --kb@cs.umb.edu, for Texinfo.\n+%%%  }\n+%%% ====================================================================\n+%\n+\\ifx\\epsfannounce\\undefined \\def\\epsfannounce{\\immediate\\write16}\\fi\n+ \\epsfannounce{This is `epsf.tex' v2.7k <10 July 1997>}%\n+%\n+\\newread\\epsffilein    % file to \\read\n+\\newif\\ifepsfatend     % need to scan to LAST %%BoundingBox comment?\n+\\newif\\ifepsfbbfound   % success?\n+\\newif\\ifepsfdraft     % use draft mode?\n+\\newif\\ifepsffileok    % continue looking for the bounding box?\n+\\newif\\ifepsfframe     % frame the bounding box?\n+\\newif\\ifepsfshow      % show PostScript file, or just bounding box?\n+\\epsfshowtrue          % default is to display PostScript file\n+\\newif\\ifepsfshowfilename % show the file name if \\epsfshowfalse specified?\n+\\newif\\ifepsfverbose   % report what you're making?\n+\\newdimen\\epsfframemargin % margin between box and frame\n+\\newdimen\\epsfframethickness % thickness of frame rules\n+\\newdimen\\epsfrsize    % vertical size before scaling\n+\\newdimen\\epsftmp      % register for arithmetic manipulation\n+\\newdimen\\epsftsize    % horizontal size before scaling\n+\\newdimen\\epsfxsize    % horizontal size after scaling\n+\\newdimen\\epsfysize    % vertical size after scaling\n+\\newdimen\\pspoints     % conversion factor\n+%\n+\\pspoints = 1bp        % Adobe points are `big'\n+\\epsfxsize = 0pt       % default value, means `use natural size'\n+\\epsfysize = 0pt       % ditto\n+\\epsfframemargin = 0pt % default value: frame box flush around picture\n+\\epsfframethickness = 0.4pt % TeX's default rule thickness\n+%\n+\\def\\epsfbox#1{\\global\\def\\epsfllx{72}\\global\\def\\epsflly{72}%\n+   \\global\\def\\epsfurx{540}\\global\\def\\epsfury{720}%\n+   \\def\\lbracket{[}\\def\\testit{#1}\\ifx\\testit\\lbracket\n+   \\let\\next=\\epsfgetlitbb\\else\\let\\next=\\epsfnormal\\fi\\next{#1}}%\n+%\n+% We use \\epsfgetlitbb if the user specified an explicit bounding box,\n+% and \\epsfnormal otherwise.  Because \\epsfgetbb can be called\n+% separately to retrieve the bounding box, we move the verbose\n+% printing the bounding box extents and size on the terminal to\n+% \\epsfstatus.  Therefore, when the user provided the bounding box,\n+% \\epsfgetbb will not be called, so we must call \\epsfsetsize and\n+% \\epsfstatus ourselves.\n+%\n+\\def\\epsfgetlitbb#1#2 #3 #4 #5]#6{%\n+   \\epsfgrab #2 #3 #4 #5 .\\\\%\n+   \\epsfsetsize\n+   \\epsfstatus{#6}%\n+   \\epsfsetgraph{#6}%\n+}%\n+%\n+\\def\\epsfnormal#1{%\n+    \\epsfgetbb{#1}%\n+    \\epsfsetgraph{#1}%\n+}%\n+%\n+\\newhelp\\epsfnoopenhelp{The PostScript image file must be findable by\n+TeX, i.e., somewhere in the TEXINPUTS (or equivalent) path.}%\n+%\n+\\def\\epsfgetbb#1{%\n+%\n+%   The first thing we need to do is to open the\n+%   PostScript file, if possible.\n+%\n+    \\openin\\epsffilein=#1\n+    \\ifeof\\epsffilein\n+        \\errhelp = \\epsfnoopenhelp\n+        \\errmessage{Could not open file #1, ignoring it}%\n+    \\else                       %process the file\n+        {%                      %start a group to contain catcode changes\n+            % Make all special characters, except space, to be of type\n+            % `other' so we process the file in almost verbatim mode\n+            % (TeXbook, p. 344).\n+            \\chardef\\other=12\n+            \\def\\do##1{\\catcode`##1=\\other}%\n+            \\dospecials\n+            \\catcode`\\ =10\n+            \\epsffileoktrue         %true while we are looping\n+            \\epsfatendfalse     %[02-Jul-1996]: add forgotten initialization\n+            \\loop               %reading lines from the EPS file\n+                \\read\\epsffilein to \\epsffileline\n+                \\ifeof\\epsffilein %then no more input\n+                \\epsffileokfalse %so set completion flag\n+            \\else                %otherwise process one line\n+                \\expandafter\\epsfaux\\epsffileline:. \\\\%\n+            \\fi\n+            \\ifepsffileok\n+            \\repeat\n+            \\ifepsfbbfound\n+            \\else\n+                \\ifepsfverbose\n+                    \\immediate\\write16{No BoundingBox comment found in %\n+                                    file #1; using defaults}%\n+                \\fi\n+            \\fi\n+        }%                      %end catcode changes\n+        \\closein\\epsffilein\n+    \\fi                         %end of file processing\n+    \\epsfsetsize                %compute size parameters\n+    \\epsfstatus{#1}%\n+}%\n+%\n+% Clipping control:\n+\\def\\epsfclipon{\\def\\epsfclipstring{ clip}}%\n+\\def\\epsfclipoff{\\def\\epsfclipstring{\\ifepsfdraft\\space clip\\fi}}%\n+\\epsfclipoff % default for dvips is OFF\n+%\n+% The special that is emitted by \\epsfsetgraph comes from this macro.\n+% It is defined separately to allow easy customization by other\n+% packages that first \\input epsf.tex, then redefine \\epsfspecial.\n+% This macro is invoked in the lower-left corner of a box of the\n+% width and height determined from the arguments to \\epsffile, or\n+% from the %%BoundingBox in the EPS file itself.\n+%\n+% This version is for dvips:\n+\\def\\epsfspecial#1{%\n+     \\epsftmp=10\\epsfxsize\n+     \\divide\\epsftmp\\pspoints\n+     \\ifnum\\epsfrsize=0\\relax\n+       \\special{PSfile=\\ifepsfdraft psdraft.ps\\else#1\\fi\\space\n+\t\tllx=\\epsfllx\\space\n+\t\tlly=\\epsflly\\space\n+\t\turx=\\epsfurx\\space\n+\t\tury=\\epsfury\\space\n+\t\trwi=\\number\\epsftmp\n+\t\t\\epsfclipstring\n+               }%\n+     \\else\n+       \\epsfrsize=10\\epsfysize\n+       \\divide\\epsfrsize\\pspoints\n+       \\special{PSfile=\\ifepsfdraft psdraft.ps\\else#1\\fi\\space\n+\t\tllx=\\epsfllx\\space\n+\t\tlly=\\epsflly\\space\n+\t\turx=\\epsfurx\\space\n+\t\tury=\\epsfury\\space\n+\t\trwi=\\number\\epsftmp\n+\t\trhi=\\number\\epsfrsize\n+\t\t\\epsfclipstring\n+               }%\n+     \\fi\n+}%\n+%\n+% \\epsfframe macro adapted from the TeXbook, exercise 21.3, p. 223, 331.\n+% but modified to set the box width to the natural width, rather\n+% than the line width, and to include space for margins and rules\n+\\def\\epsfframe#1%\n+{%\n+  \\leavevmode                   % so we can put this inside\n+                                % a centered environment\n+  \\setbox0 = \\hbox{#1}%\n+  \\dimen0 = \\wd0                                % natural width of argument\n+  \\advance \\dimen0 by 2\\epsfframemargin         % plus width of 2 margins\n+  \\advance \\dimen0 by 2\\epsfframethickness      % plus width of 2 rule lines\n+  \\vbox\n+  {%\n+    \\hrule height \\epsfframethickness depth 0pt\n+    \\hbox to \\dimen0\n+    {%\n+      \\hss\n+      \\vrule width \\epsfframethickness\n+      \\kern \\epsfframemargin\n+      \\vbox {\\kern \\epsfframemargin \\box0 \\kern \\epsfframemargin }%\n+      \\kern \\epsfframemargin\n+      \\vrule width \\epsfframethickness\n+      \\hss\n+    }% end hbox\n+    \\hrule height 0pt depth \\epsfframethickness\n+  }% end vbox\n+}%\n+%\n+\\def\\epsfsetgraph#1%\n+{%\n+   %\n+   % Make the vbox and stick in a \\special that the DVI driver can\n+   % parse.  \\vfil and \\hfil are used to place the \\special origin at\n+   % the lower-left corner of the vbox.  \\epsfspecial can be redefined\n+   % to produce alternate \\special syntaxes.\n+   %\n+   \\leavevmode\n+   \\hbox{% so we can put this in \\begin{center}...\\end{center}\n+     \\ifepsfframe\\expandafter\\epsfframe\\fi\n+     {\\vbox to\\epsfysize\n+     {%\n+        \\ifepsfshow\n+            % output \\special{} at lower-left corner of figure box\n+            \\vfil\n+            \\hbox to \\epsfxsize{\\epsfspecial{#1}\\hfil}%\n+        \\else\n+            \\vfil\n+            \\hbox to\\epsfxsize{%\n+               \\hss\n+               \\ifepsfshowfilename\n+               {%\n+                  \\epsfframemargin=3pt % local change of margin\n+                  \\epsfframe{{\\tt #1}}%\n+               }%\n+               \\fi\n+               \\hss\n+            }%\n+            \\vfil\n+        \\fi\n+     }%\n+   }}%\n+   %\n+   % Reset \\epsfxsize and \\epsfysize, as documented above.\n+   %\n+   \\global\\epsfxsize=0pt\n+   \\global\\epsfysize=0pt\n+}%\n+%\n+%   Now we have to calculate the scale and offset values to use.\n+%   First we compute the natural sizes.\n+%\n+\\def\\epsfsetsize\n+{%\n+   \\epsfrsize=\\epsfury\\pspoints\n+   \\advance\\epsfrsize by-\\epsflly\\pspoints\n+   \\epsftsize=\\epsfurx\\pspoints\n+   \\advance\\epsftsize by-\\epsfllx\\pspoints\n+%\n+%   If `epsfxsize' is 0, we default to the natural size of the picture.\n+%   Otherwise we scale the graph to be \\epsfxsize wide.\n+%\n+   \\epsfxsize=\\epsfsize{\\epsftsize}{\\epsfrsize}%\n+   \\ifnum \\epsfxsize=0\n+      \\ifnum \\epsfysize=0\n+\t\\epsfxsize=\\epsftsize\n+        \\epsfysize=\\epsfrsize\n+\t\\epsfrsize=0pt\n+%\n+%   We have a sticky problem here:  TeX doesn't do floating point arithmetic!\n+%   Our goal is to compute y = rx/t. The following loop does this reasonably\n+%   fast, with an error of at most about 16 sp (about 1/4000 pt).\n+%\n+      \\else\n+\t\\epsftmp=\\epsftsize \\divide\\epsftmp\\epsfrsize\n+\t\\epsfxsize=\\epsfysize \\multiply\\epsfxsize\\epsftmp\n+\t\\multiply\\epsftmp\\epsfrsize \\advance\\epsftsize-\\epsftmp\n+\t\\epsftmp=\\epsfysize\n+\t\\loop \\advance\\epsftsize\\epsftsize \\divide\\epsftmp 2\n+\t\\ifnum \\epsftmp>0\n+\t   \\ifnum \\epsftsize<\\epsfrsize\n+           \\else\n+\t      \\advance\\epsftsize-\\epsfrsize \\advance\\epsfxsize\\epsftmp\n+           \\fi\n+\t\\repeat\n+\t\\epsfrsize=0pt\n+      \\fi\n+   \\else\n+     \\ifnum \\epsfysize=0\n+       \\epsftmp=\\epsfrsize \\divide\\epsftmp\\epsftsize\n+       \\epsfysize=\\epsfxsize \\multiply\\epsfysize\\epsftmp\n+       \\multiply\\epsftmp\\epsftsize \\advance\\epsfrsize-\\epsftmp\n+       \\epsftmp=\\epsfxsize\n+       \\loop \\advance\\epsfrsize\\epsfrsize \\divide\\epsftmp 2\n+       \\ifnum \\epsftmp>0\n+\t  \\ifnum \\epsfrsize<\\epsftsize\n+          \\else\n+\t     \\advance\\epsfrsize-\\epsftsize \\advance\\epsfysize\\epsftmp\n+          \\fi\n+       \\repeat\n+       \\epsfrsize=0pt\n+     \\else\n+       \\epsfrsize=\\epsfysize\n+     \\fi\n+   \\fi\n+}%\n+%\n+% Issue some status messages if the user requested them\n+%\n+\\def\\epsfstatus#1{% arg = filename\n+   \\ifepsfverbose\n+     \\immediate\\write16{#1: BoundingBox:\n+                  llx = \\epsfllx\\space lly = \\epsflly\\space\n+                  urx = \\epsfurx\\space ury = \\epsfury\\space}%\n+     \\immediate\\write16{#1: scaled width = \\the\\epsfxsize\\space\n+                  scaled height = \\the\\epsfysize}%\n+   \\fi\n+}%\n+%\n+%   We still need to define the tricky \\epsfaux macro. This requires\n+%   a couple of magic constants for comparison purposes.\n+%\n+{\\catcode`\\%=12 \\global\\let\\epsfpercent=%\\global\\def\\epsfbblit{%BoundingBox}}%\n+\\global\\def\\epsfatend{(atend)}%\n+%\n+%   So we're ready to check for `%BoundingBox:' and to grab the\n+%   values if they are found.\n+%\n+%   If we find a line\n+%\n+%   %%BoundingBox: (atend)\n+%\n+%   then we ignore it, but set a flag to force parsing all of the\n+%   file, so the last %%BoundingBox parsed will be the one used.  This\n+%   is necessary, because EPS files can themselves contain other EPS\n+%   files with their own %%BoundingBox comments.\n+%\n+%   If we find a line\n+%\n+%   %%BoundingBox: llx lly urx ury\n+%\n+%   then we save the 4 values in \\epsfllx, \\epsflly, \\epsfurx, \\epsfury.\n+%   Then, if we have not previously parsed an (atend), we flag completion\n+%   and can stop reading the file.  Otherwise, we must keep on reading\n+%   to end of file so that we find the values on the LAST %%BoundingBox.\n+\\long\\def\\epsfaux#1#2:#3\\\\%\n+{%\n+   \\def\\testit{#2}%             % save second character up to just before colon\n+   \\ifx#1\\epsfpercent           % then first char is percent (quick test)\n+       \\ifx\\testit\\epsfbblit    % then (slow test) we have %%BoundingBox\n+            \\epsfgrab #3 . . . \\\\%\n+            \\ifx\\epsfllx\\epsfatend % then ignore %%BoundingBox: (atend)\n+                \\global\\epsfatendtrue\n+            \\else               % else found %%BoundingBox: llx lly urx ury\n+                \\ifepsfatend    % then keep parsing ALL %%BoundingBox lines\n+                \\else           % else stop after first one parsed\n+                    \\epsffileokfalse\n+                \\fi\n+                \\global\\epsfbbfoundtrue\n+            \\fi\n+       \\fi\n+   \\fi\n+}%\n+%\n+%   Here we grab the values and stuff them in the appropriate definitions.\n+%\n+\\def\\epsfempty{}%\n+\\def\\epsfgrab #1 #2 #3 #4 #5\\\\{%\n+   \\global\\def\\epsfllx{#1}\\ifx\\epsfllx\\epsfempty\n+      \\epsfgrab #2 #3 #4 #5 .\\\\\\else\n+   \\global\\def\\epsflly{#2}%\n+   \\global\\def\\epsfurx{#3}\\global\\def\\epsfury{#4}\\fi\n+}%\n+%\n+%   We default the epsfsize macro.\n+%\n+\\def\\epsfsize#1#2{\\epsfxsize}%\n+%\n+%   Finally, another definition for compatibility with older macros.\n+%\n+\\let\\epsffile=\\epsfbox\n+\\endinput"}, {"sha": "d705acd6cf5d88b59d964beff6f0ff078e79831c", "filename": "texinfo/doc/info-stnd.texi", "status": "added", "additions": 1373, "deletions": 0, "changes": 1373, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Finfo-stnd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Finfo-stnd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fdoc%2Finfo-stnd.texi?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,1373 @@\n+\\input texinfo    @c -*-texinfo-*-\n+@comment %**start of header\n+@setfilename info-stnd.info\n+@settitle GNU Info\n+@set InfoProgVer 2.11\n+@paragraphindent none\n+@footnotestyle end\n+@synindex vr cp\n+@synindex fn cp\n+@synindex ky cp\n+@comment %**end of header\n+@comment $Id: info-stnd.texi,v 1.1 1998/03/23 04:42:12 law Exp $\n+\n+@dircategory Texinfo documentation system\n+@direntry\n+* info program: (info-stnd).    Standalone Info-reading program.\n+@end direntry\n+\n+@ifinfo\n+This file documents GNU Info, a program for viewing the on-line formatted\n+versions of Texinfo files.  This documentation is different from the\n+documentation for the Info reader that is part of GNU Emacs.  If you do\n+not know how to use Info, but have a working Info reader, you should\n+read that documentation first.\n+\n+Copyright @copyright{} 1992, 93, 96, 97 Free Software Foundation, Inc.\n+\n+Permission is granted to make and distribute verbatim copies of this\n+manual provided the copyright notice and this permission notice are\n+preserved on all copies.\n+\n+@ignore\n+Permission is granted to process this file through TeX and print the\n+results, provided the printed document carries a copying permission\n+notice identical to this one except for the removal of this paragraph\n+(this paragraph not being relevant to the printed manual).\n+@end ignore\n+\n+Permission is granted to copy and distribute modified versions of this\n+manual under the conditions for verbatim copying, provided also that the\n+sections entitled ``Copying'' and ``GNU General Public License'' are\n+included exactly as in the original, and provided that the entire\n+resulting derived work is distributed under the terms of a permission\n+notice identical to this one.\n+\n+Permission is granted to copy and distribute translations of this manual\n+into another language, under the above conditions for modified versions,\n+except that this permission notice may be stated in a translation\n+approved by the Free Software Foundation.\n+@end ifinfo\n+\n+@titlepage\n+@title GNU Info User's Guide\n+@subtitle For GNU Info version @value{InfoProgVer}\n+@author Brian J. Fox (bfox@@ai.mit.edu)\n+@page\n+@vskip 0pt plus 1filll\n+Copyright @copyright{} 1992, 1993, 1997 Free Software Foundation\n+\n+Permission is granted to make and distribute verbatim copies of this\n+manual provided the copyright notice and this permission notice are\n+preserved on all copies.\n+\n+Permission is granted to copy and distribute modified versions of this\n+manual under the conditions for verbatim copying, provided also that the\n+sections entitled ``Copying'' and ``GNU General Public License'' are\n+included exactly as in the original, and provided that the entire\n+resulting derived work is distributed under the terms of a permission\n+notice identical to this one.\n+\n+Permission is granted to copy and distribute translations of this manual\n+into another language, under the above conditions for modified versions,\n+except that this permission notice may be stated in a translation\n+approved by the Free Software Foundation.\n+@end titlepage\n+\n+@ifinfo\n+@node Top, What is Info, , (dir)\n+@top The GNU Info Program\n+\n+This file documents GNU Info, a program for viewing the on-line\n+formatted versions of Texinfo files, version @value{InfoProgVer}.  This\n+documentation is different from the documentation for the Info reader\n+that is part of GNU Emacs.\n+@end ifinfo\n+\n+@menu\n+* What is Info::                \n+* Options::                     Options you can pass on the command line.\n+* Cursor Commands::             Commands which move the cursor within a node.\n+* Scrolling Commands::          Commands for moving the node around \n+                                  in a window.\n+* Node Commands::               Commands for selecting a new node.\n+* Searching Commands::          Commands for searching an Info file.\n+* Xref Commands::               Commands for selecting cross references.\n+* Window Commands::             Commands which manipulate multiple windows.\n+* Printing Nodes::              How to print out the contents of a node.\n+* Miscellaneous Commands::      A few commands that defy categories.\n+* Variables::                   How to change the default behavior of Info.\n+* GNU Info Global Index::       Global index containing keystrokes, \n+                                  command names, variable names, \n+                                  and general concepts.\n+@end menu\n+\n+@node What is Info, Options, Top, Top\n+@chapter What is Info?\n+\n+@iftex\n+This file documents GNU Info, a program for viewing the on-line formatted\n+versions of Texinfo files, version @value{InfoProgVer}.\n+@end iftex\n+\n+@dfn{Info} is a program which is used to view Info files on an ASCII\n+terminal.  @dfn{Info files} are the result of processing Texinfo files\n+with the program @code{makeinfo} or with one of the Emacs commands, such\n+as @code{M-x texinfo-format-buffer}.  Texinfo itself is a documentation\n+system that uses a single source file to produce both on-line\n+information and printed output.  You can typeset and print the\n+files that you read in Info.@refill\n+\n+@node Options, Cursor Commands, What is Info, Top\n+@chapter Command Line Options\n+@cindex command line options\n+@cindex arguments, command line\n+\n+GNU Info accepts several options to control the initial node being\n+viewed, and to specify which directories to search for Info files.  Here\n+is a template showing an invocation of GNU Info from the shell:\n+\n+@example\n+info [--@var{option-name} @var{option-value}] @var{menu-item}@dots{}\n+@end example\n+\n+The following @var{option-names} are available when invoking Info from\n+the shell:\n+\n+@table @code\n+@cindex directory path\n+@item --directory @var{directory-path}\n+@itemx -d @var{directory-path}\n+Add @var{directory-path} to the list of directory paths searched when\n+Info needs to find a file.  You may issue @code{--directory} multiple\n+times; once for each directory which contains Info files.\n+Alternatively, you may specify a value for the environment variable\n+@code{INFOPATH}; if @code{--directory} is not given, the value of\n+@code{INFOPATH} is used.  The value of @code{INFOPATH} is a colon\n+separated list of directory names.  If you do not supply @code{INFOPATH}\n+or @code{--directory-path}, Info uses a default path.\n+\n+@item --file @var{filename}\n+@itemx -f @var{filename}\n+@cindex Info file, selecting\n+Specify a particular Info file to visit.  By default, Info visits\n+the file @code{dir}; if you use this option, Info will start with\n+@code{(@var{filename})Top} as the first file and node.\n+\n+@item --index-search @var{string}\n+@cindex index search, selecting\n+@cindex online help, using Info as\n+Go to the index entry @var{string} in the Info file specified with\n+@samp{--file}.  If no such entry, print @samp{no entries found} and exit\n+with nonzero status.  This can used from another program as a way to\n+provide online help.\n+\n+@item --node @var{nodename}\n+@itemx -n @var{nodename}\n+@cindex node, selecting\n+Specify a particular node to visit in the initial file that Info\n+loads.  This is especially useful in conjunction with\n+@code{--file}@footnote{Of course, you can specify both the file and node\n+in a @code{--node} command; but don't forget to escape the open and\n+close parentheses from the shell as in: @code{info --node\n+\"(emacs)Buffers\"}}.  You may specify @code{--node} multiple times; for\n+an interactive Info, each @var{nodename} is visited in its own window,\n+for a non-interactive Info (such as when @code{--output} is given) each\n+@var{nodename} is processed sequentially.\n+\n+@item --output @var{filename}\n+@itemx -o @var{filename}\n+@cindex file, outputting to\n+@cindex outputting to a file\n+Specify @var{filename} as the name of a file to which to direct output.\n+Each node that Info visits will be output to @var{filename} instead of\n+interactively viewed.  A value of @code{-} for @var{filename} specifies\n+the standard output.\n+\n+@item --subnodes\n+@cindex @code{--subnodes}, command line option\n+This option only has meaning when given in conjunction with\n+@code{--output}.  It means to recursively output the nodes appearing in\n+the menus of each node being output.  Menu items which resolve to\n+external Info files are not output, and neither are menu items which are\n+members of an index.  Each node is only output once.\n+\n+@item --help\n+@itemx -h\n+Produces a relatively brief description of the available Info options.\n+\n+@item --version\n+@cindex version information\n+Prints the version information of Info and exits.\n+\n+@item @var{menu-item}\n+@cindex menu, following\n+Info treats its remaining arguments as the names of menu items.  The\n+first argument is a menu item in the initial node visited, while\n+the second argument is a menu item in the first argument's node.\n+You can easily move to the node of your choice by specifying the menu\n+names which describe the path to that node.  For example,\n+\n+@example\n+info emacs buffers\n+@end example\n+\n+@noindent\n+first selects the menu item @samp{Emacs} in the node @samp{(dir)Top},\n+and then selects the menu item @samp{Buffers} in the node\n+@samp{(emacs)Top}.\n+@end table\n+\n+@node Cursor Commands, Scrolling Commands, Options, Top\n+@chapter Moving the Cursor\n+@cindex cursor, moving\n+\n+Many people find that reading screens of text page by page is made\n+easier when one is able to indicate particular pieces of text with some\n+kind of pointing device.  Since this is the case, GNU Info (both the\n+Emacs and standalone versions) have several commands which allow you to\n+move the cursor about the screen.  The notation used in this manual to\n+describe keystrokes is identical to the notation used within the Emacs\n+manual, and the GNU Readline manual.  @xref{Characters, , Character\n+Conventions, emacs, the GNU Emacs Manual}, if you are unfamiliar with the\n+notation.\n+\n+The following table lists the basic cursor movement commands in Info.\n+Each entry consists of the key sequence you should type to execute the\n+cursor movement, the @code{M-x}@footnote{@code{M-x} is also a command; it\n+invokes @code{execute-extended-command}.  @xref{M-x, , Executing an\n+extended command, emacs, the GNU Emacs Manual}, for more detailed\n+information.} command name (displayed in parentheses), and a short\n+description of what the command does.  All of the cursor motion commands\n+can take an @dfn{numeric} argument (@pxref{Miscellaneous Commands,\n+@code{universal-argument}}), to find out how to supply them.  With a\n+numeric argument, the motion commands are simply executed that\n+many times; for example, a numeric argument of 4 given to\n+@code{next-line} causes the cursor to move down 4 lines.  With a\n+negative numeric argument, the motion is reversed; an argument of -4\n+given to the @code{next-line} command would cause the cursor to move\n+@emph{up} 4 lines.\n+\n+@table @asis\n+@item @code{C-n} (@code{next-line})\n+@kindex C-n\n+@findex next-line\n+Move the cursor down to the next line.\n+\n+@item @code{C-p} (@code{prev-line})\n+@kindex C-p\n+@findex prev-line\n+Move the cursor up to the previous line.\n+\n+@item @code{C-a} (@code{beginning-of-line})\n+@kindex C-a, in Info windows\n+@findex beginning-of-line\n+Move the cursor to the start of the current line.\n+\n+@item @code{C-e} (@code{end-of-line})\n+@kindex C-e, in Info windows\n+@findex end-of-line\n+Move the cursor to the end of the current line.\n+\n+@item @code{C-f} (@code{forward-char})\n+@kindex C-f, in Info windows\n+@findex forward-char\n+Move the cursor forward a character.\n+\n+@item @code{C-b} (@code{backward-char})\n+@kindex C-b, in Info windows\n+@findex backward-char\n+Move the cursor backward a character.\n+\n+@item @code{M-f} (@code{forward-word})\n+@kindex M-f, in Info windows\n+@findex forward-word\n+Move the cursor forward a word.\n+\n+@item @code{M-b} (@code{backward-word})\n+@kindex M-b, in Info windows\n+@findex backward-word\n+Move the cursor backward a word.\n+\n+@item @code{M-<} (@code{beginning-of-node})\n+@itemx @code{b}\n+@kindex b, in Info windows\n+@kindex M-<\n+@findex beginning-of-node\n+Move the cursor to the start of the current node.\n+\n+@item @code{M->} (@code{end-of-node})\n+@kindex M->\n+@findex end-of-node\n+Move the cursor to the end of the current node.\n+\n+@item @code{M-r} (@code{move-to-window-line})\n+@kindex M-r\n+@findex move-to-window-line\n+Move the cursor to a specific line of the window.  Without a numeric\n+argument, @code{M-r} moves the cursor to the start of the line in the\n+center of the window.  With a numeric argument of @var{n}, @code{M-r}\n+moves the cursor to the start of the @var{n}th line in the window.\n+@end table\n+\n+@node Scrolling Commands, Node Commands, Cursor Commands, Top\n+@chapter Moving Text Within a Window\n+@cindex scrolling\n+\n+Sometimes you are looking at a screenful of text, and only part of the\n+current paragraph you are reading is visible on the screen.  The\n+commands detailed in this section are used to shift which part of the\n+current node is visible on the screen.\n+\n+@table @asis\n+@item @code{SPC} (@code{scroll-forward})\n+@itemx @code{C-v}\n+@kindex SPC, in Info windows\n+@kindex C-v\n+@findex scroll-forward\n+Shift the text in this window up.  That is, show more of the node which\n+is currently below the bottom of the window.  With a numeric argument,\n+show that many more lines at the bottom of the window; a numeric\n+argument of 4 would shift all of the text in the window up 4 lines\n+(discarding the top 4 lines), and show you four new lines at the bottom\n+of the window.  Without a numeric argument, @key{SPC} takes the bottom\n+two lines of the window and places them at the top of the window,\n+redisplaying almost a completely new screenful of lines.\n+\n+@item @code{DEL} (@code{scroll-backward})\n+@itemx @code{M-v}\n+@kindex DEL, in Info windows\n+@kindex M-v\n+@findex scroll-backward\n+Shift the text in this window down.  The inverse of\n+@code{scroll-forward}.\n+@end table\n+\n+@cindex scrolling through node structure\n+The @code{scroll-forward} and @code{scroll-backward} commands can also\n+move forward and backward through the node structure of the file.  If\n+you press @key{SPC} while viewing the end of a node, or @key{DEL} while\n+viewing the beginning of a node, what happens is controlled by the\n+variable @code{scroll-behavior}.  @xref{Variables,\n+@code{scroll-behavior}}, for more information.\n+\n+@table @asis\n+@item @code{C-l} (@code{redraw-display})\n+@kindex C-l\n+@findex redraw-display\n+Redraw the display from scratch, or shift the line containing the cursor\n+to a specified location.  With no numeric argument, @samp{C-l} clears\n+the screen, and then redraws its entire contents.  Given a numeric\n+argument of @var{n}, the line containing the cursor is shifted so that\n+it is on the @var{n}th line of the window.\n+\n+@item @code{C-x w} (@code{toggle-wrap})\n+@kindex C-w\n+@findex toggle-wrap\n+Toggles the state of line wrapping in the current window.  Normally,\n+lines which are longer than the screen width @dfn{wrap}, i.e., they are\n+continued on the next line.  Lines which wrap have a @samp{\\} appearing\n+in the rightmost column of the screen.  You can cause such lines to be\n+terminated at the rightmost column by changing the state of line\n+wrapping in the window with @code{C-x w}.  When a line which needs more\n+space than one screen width to display is displayed, a @samp{$} appears\n+in the rightmost column of the screen, and the remainder of the line is\n+invisible.\n+@end table\n+\n+@node Node Commands, Searching Commands, Scrolling Commands, Top\n+@chapter Selecting a New Node\n+@cindex nodes, selection of\n+\n+This section details the numerous Info commands which select a new node\n+to view in the current window.\n+\n+The most basic node commands are @samp{n}, @samp{p}, @samp{u}, and\n+@samp{l}.\n+\n+When you are viewing a node, the top line of the node contains some Info\n+@dfn{pointers} which describe where the next, previous, and up nodes\n+are.  Info uses this line to move about the node structure of the file\n+when you use the following commands:\n+\n+@table @asis\n+@item @code{n} (@code{next-node})\n+@kindex n\n+@findex next-node\n+Select the `Next' node.  \n+\n+@item @code{p} (@code{prev-node})\n+@kindex p\n+@findex prev-node\n+Select the `Prev' node.\n+\n+@item @code{u} (@code{up-node})\n+@kindex u\n+@findex up-node\n+Select the `Up' node.\n+@end table\n+\n+You can easily select a node that you have already viewed in this window\n+by using the @samp{l} command -- this name stands for \"last\", and\n+actually moves through the list of already visited nodes for this\n+window.  @samp{l} with a negative numeric argument moves forward through\n+the history of nodes for this window, so you can quickly step between\n+two adjacent (in viewing history) nodes.\n+\n+@table @asis\n+@item @code{l} (@code{history-node})\n+@kindex l\n+@findex history-node\n+Select the most recently selected node in this window.\n+@end table\n+\n+Two additional commands make it easy to select the most commonly\n+selected nodes; they are @samp{t} and @samp{d}.\n+\n+@table @asis\n+@item @code{t} (@code{top-node})\n+@kindex t\n+@findex top-node\n+Select the node @samp{Top} in the current Info file.\n+\n+@item @code{d} (@code{dir-node})\n+@kindex d\n+@findex dir-node\n+Select the directory node (i.e., the node @samp{(dir)}).\n+@end table\n+\n+Here are some other commands which immediately result in the selection\n+of a different node in the current window:\n+\n+@table @asis\n+@item @code{<} (@code{first-node})\n+@kindex <\n+@findex first-node\n+Selects the first node which appears in this file.  This node is most\n+often @samp{Top}, but it does not have to be.\n+\n+@item @code{>} (@code{last-node})\n+@kindex >\n+@findex last-node\n+Select the last node which appears in this file.\n+\n+@item @code{]} (@code{global-next-node})\n+@kindex ]\n+@findex global-next-node\n+Move forward or down through node structure.  If the node that you are\n+currently viewing has a @samp{Next} pointer, that node is selected.\n+Otherwise, if this node has a menu, the first menu item is selected.  If\n+there is no @samp{Next} and no menu, the same process is tried with the\n+@samp{Up} node of this node.\n+\n+@item @code{[} (@code{global-prev-node})\n+@kindex [\n+@findex global-prev-node\n+Move backward or up through node structure.  If the node that you are\n+currently viewing has a @samp{Prev} pointer, that node is selected.\n+Otherwise, if the node has an @samp{Up} pointer, that node is selected,\n+and if it has a menu, the last item in the menu is selected.\n+@end table\n+\n+You can get the same behavior as @code{global-next-node} and\n+@code{global-prev-node} while simply scrolling through the file with\n+@key{SPC} and @key{DEL}; @xref{Variables, @code{scroll-behavior}}, for\n+more information.\n+\n+@table @asis\n+@item @code{g} (@code{goto-node})\n+@kindex g\n+@findex goto-node\n+Read the name of a node and select it.  No completion is done while\n+reading the node name, since the desired node may reside in a separate\n+file.  The node must be typed exactly as it appears in the Info file.  A\n+file name may be included as with any node specification, for example\n+\n+@example\n+@code{g(emacs)Buffers}\n+@end example\n+\n+finds the node @samp{Buffers} in the Info file @file{emacs}.\n+\n+@item @code{C-x k} (@code{kill-node})\n+@kindex C-x k\n+@findex kill-node\n+Kill a node.  The node name is prompted for in the echo area, with a\n+default of the current node.  @dfn{Killing} a node means that Info tries\n+hard to forget about it, removing it from the list of history nodes kept\n+for the window where that node is found.  Another node is selected in\n+the window which contained the killed node.\n+\n+@item @code{C-x C-f} (@code{view-file})\n+@kindex C-x C-f\n+@findex view-file\n+Read the name of a file and selects the entire file.  The command\n+@example\n+@code{C-x C-f @var{filename}}\n+@end example\n+is equivalent to typing\n+@example\n+@code{g(@var{filename})*}\n+@end example\n+\n+@item @code{C-x C-b} (@code{list-visited-nodes})\n+@kindex C-x C-b\n+@findex list-visited-nodes\n+Make a window containing a menu of all of the currently visited nodes.\n+This window becomes the selected window, and you may use the standard\n+Info commands within it.\n+\n+@item @code{C-x b} (@code{select-visited-node})\n+@kindex C-x b\n+@findex select-visited-node\n+Select a node which has been previously visited in a visible window.\n+This is similar to @samp{C-x C-b} followed by @samp{m}, but no window is\n+created.\n+@end table\n+\n+@node Searching Commands, Xref Commands, Node Commands, Top\n+@chapter Searching an Info File\n+@cindex searching\n+\n+GNU Info allows you to search for a sequence of characters throughout an\n+entire Info file, search through the indices of an Info file, or find\n+areas within an Info file which discuss a particular topic.\n+\n+@table @asis\n+@item @code{s} (@code{search})\n+@kindex s\n+@findex search\n+Read a string in the echo area and search for it.\n+\n+@item @code{C-s} (@code{isearch-forward})\n+@kindex C-s\n+@findex isearch-forward\n+Interactively search forward through the Info file for a string as you\n+type it.\n+\n+@item @code{C-r} (@code{isearch-backward})\n+@kindex C-r\n+@findex isearch-backward\n+Interactively search backward through the Info file for a string as\n+you type it.\n+\n+@item @code{i} (@code{index-search})\n+@kindex i\n+@findex index-search\n+Look up a string in the indices for this Info file, and select a node\n+where the found index entry points to.\n+\n+@item @code{,} (@code{next-index-match})\n+@kindex ,\n+@findex next-index-match\n+Move to the node containing the next matching index item from the last\n+@samp{i} command.\n+@end table\n+\n+The most basic searching command is @samp{s} (@code{search}).  The\n+@samp{s} command prompts you for a string in the echo area, and then\n+searches the remainder of the Info file for an occurrence of that string.\n+If the string is found, the node containing it is selected, and the\n+cursor is left positioned at the start of the found string.  Subsequent\n+@samp{s} commands show you the default search string within @samp{[} and\n+@samp{]}; pressing @key{RET} instead of typing a new string will use the\n+default search string.\n+\n+@dfn{Incremental searching} is similar to basic searching, but the\n+string is looked up while you are typing it, instead of waiting until\n+the entire search string has been specified.\n+\n+@node Xref Commands, Window Commands, Searching Commands, Top\n+@chapter Selecting Cross References\n+\n+We have already discussed the @samp{Next}, @samp{Prev}, and @samp{Up}\n+pointers which appear at the top of a node.  In addition to these\n+pointers, a node may contain other pointers which refer you to a\n+different node, perhaps in another Info file.  Such pointers are called\n+@dfn{cross references}, or @dfn{xrefs} for short.\n+\n+@menu\n+* Parts of an Xref::            What a cross reference is made of.\n+* Selecting Xrefs::             Commands for selecting menu or note items.\n+@end menu\n+\n+@node Parts of an Xref, Selecting Xrefs,  , Xref Commands\n+@section Parts of an Xref\n+\n+Cross references have two major parts: the first part is called the\n+@dfn{label}; it is the name that you can use to refer to the cross\n+reference, and the second is the @dfn{target}; it is the full name of\n+the node that the cross reference points to.\n+\n+The target is separated from the label by a colon @samp{:}; first the\n+label appears, and then the target.  For example, in the sample menu\n+cross reference below, the single colon separates the label from the\n+target.\n+\n+@example\n+* Foo Label: Foo Target.        More information about Foo.\n+@end example\n+\n+Note the @samp{.} which ends the name of the target.  The @samp{.} is\n+not part of the target; it serves only to let Info know where the target\n+name ends.\n+\n+A shorthand way of specifying references allows two adjacent colons to\n+stand for a target name which is the same as the label name:\n+\n+@example\n+* Foo Commands::                Commands pertaining to Foo.\n+@end example\n+\n+In the above example, the name of the target is the same as the name of\n+the label, in this case @code{Foo Commands}.\n+\n+You will normally see two types of cross reference while viewing nodes:\n+@dfn{menu} references, and @dfn{note} references.  Menu references\n+appear within a node's menu; they begin with a @samp{*} at the beginning\n+of a line, and continue with a label, a target, and a comment which\n+describes what the contents of the node pointed to contains.\n+\n+Note references appear within the body of the node text; they begin with\n+@code{*Note}, and continue with a label and a target.\n+\n+Like @samp{Next}, @samp{Prev}, and @samp{Up} pointers, cross references\n+can point to any valid node.  They are used to refer you to a place\n+where more detailed information can be found on a particular subject.\n+Here is a cross reference which points to a node within the Texinfo\n+documentation:  @xref{xref, , Writing an Xref, texinfo, the Texinfo\n+Manual}, for more information on creating your own texinfo cross\n+references.\n+\n+@node Selecting Xrefs,  , Parts of an Xref, Xref Commands\n+@section Selecting Xrefs\n+\n+The following table lists the Info commands which operate on menu items.\n+\n+@table @asis\n+@item @code{1} (@code{menu-digit})\n+@itemx @code{2} @dots{} @code{9}\n+@cindex 1 @dots{} 9, in Info windows\n+@kindex 1 @dots{} 9, in Info windows\n+@findex menu-digit\n+Within an Info window, pressing a single digit, (such as @samp{1}),\n+selects that menu item, and places its node in the current window.\n+For convenience, there is one exception; pressing @samp{0} selects the\n+@emph{last} item in the node's menu.\n+\n+@item @code{0} (@code{last-menu-item})\n+@kindex 0, in Info windows\n+@findex last-menu-item\n+Select the last item in the current node's menu.\n+\n+@item @code{m} (@code{menu-item})\n+@kindex m\n+@findex menu-item\n+Reads the name of a menu item in the echo area and selects its node.\n+Completion is available while reading the menu label.\n+\n+@item @code{M-x find-menu}\n+@findex find-menu\n+Move the cursor to the start of this node's menu.\n+@end table\n+\n+This table lists the Info commands which operate on note cross references.\n+\n+@table @asis\n+@item @code{f} (@code{xref-item})\n+@itemx @code{r}\n+@kindex f\n+@kindex r\n+@findex xref-item\n+Reads the name of a note cross reference in the echo area and selects\n+its node.  Completion is available while reading the cross reference\n+label.\n+@end table\n+\n+Finally, the next few commands operate on menu or note references alike:\n+\n+@table @asis\n+@item @code{TAB} (@code{move-to-next-xref})\n+@kindex TAB, in Info windows\n+@findex move-to-next-xref\n+Move the cursor to the start of the next nearest menu item or note\n+reference in this node.  You can then use @key{RET}\n+(@code{select-reference-this-line}) to select the menu or note reference.\n+\n+@item @code{M-TAB} (@code{move-to-prev-xref})\n+@kindex M-TAB, in Info windows\n+@findex move-to-prev-xref\n+Move the cursor the start of the nearest previous menu item or note\n+reference in this node.\n+\n+@item @code{RET} (@code{select-reference-this-line})\n+@kindex RET, in Info windows\n+@findex select-reference-this-line\n+Select the menu item or note reference appearing on this line.\n+@end table\n+\n+@node Window Commands, Printing Nodes, Xref Commands, Top\n+@chapter Manipulating Multiple Windows\n+@cindex windows, manipulating\n+\n+A @dfn{window} is a place to show the text of a node.  Windows have a\n+view area where the text of the node is displayed, and an associated\n+@dfn{mode line}, which briefly describes the node being viewed.\n+\n+GNU Info supports multiple windows appearing in a single screen; each\n+window is separated from the next by its modeline.  At any time, there\n+is only one @dfn{active} window, that is, the window in which the cursor\n+appears.  There are commands available for creating windows, changing\n+the size of windows, selecting which window is active, and for deleting\n+windows.\n+\n+@menu\n+* The Mode Line::               What appears in the mode line?\n+* Basic Windows::               Manipulating windows in Info.\n+* The Echo Area::               Used for displaying errors and reading input.\n+@end menu\n+\n+@node The Mode Line, Basic Windows,  , Window Commands\n+@section The Mode Line\n+\n+A @dfn{mode line} is a line of inverse video which appears at the bottom\n+of an Info window.  It describes the contents of the window just above\n+it; this information includes the name of the file and node appearing in\n+that window, the number of screen lines it takes to display the node,\n+and the percentage of text that is above the top of the window.  It can\n+also tell you if the indirect tags table for this Info file needs to be\n+updated, and whether or not the Info file was compressed when stored on\n+disk.\n+\n+Here is a sample mode line for a window containing an uncompressed file\n+named @file{dir}, showing the node @samp{Top}.\n+\n+@example\n+@group\n+-----Info: (dir)Top, 40 lines --Top---------------------------------------\n+            ^^   ^   ^^^        ^^\n+          (file)Node #lines    where\n+@end group\n+@end example\n+\n+When a node comes from a file which is compressed on disk, this is\n+indicated in the mode line with two small @samp{z}'s.  In addition, if\n+the Info file containing the node has been split into subfiles, the name\n+of the subfile containing the node appears in the modeline as well:\n+\n+@example\n+--zz-Info: (emacs)Top, 291 lines --Top-- Subfile: emacs-1.Z---------------\n+@end example \n+\n+When Info makes a node internally, such that there is no corresponding\n+info file on disk, the name of the node is surrounded by asterisks\n+(@samp{*}).  The name itself tells you what the contents of the window\n+are; the sample mode line below shows an internally constructed node\n+showing possible completions:\n+\n+@example\n+-----Info: *Completions*, 7 lines --All-----------------------------------\n+@end example\n+\n+@node Basic Windows, The Echo Area, The Mode Line, Window Commands\n+@section Window Commands\n+\n+It can be convenient to view more than one node at a time.  To allow\n+this, Info can display more than one @dfn{window}.  Each window has its\n+own mode line (@pxref{The Mode Line}) and history of nodes viewed in that\n+window (@pxref{Node Commands, , @code{history-node}}).\n+\n+@table @asis\n+@item @code{C-x o} (@code{next-window})\n+@cindex windows, selecting\n+@kindex C-x o\n+@findex next-window\n+Select the next window on the screen.  Note that the echo area can only be\n+selected if it is already in use, and you have left it temporarily.\n+Normally, @samp{C-x o} simply moves the cursor into the next window on\n+the screen, or if you are already within the last window, into the first\n+window on the screen.  Given a numeric argument, @samp{C-x o} moves over\n+that many windows.  A negative argument causes @samp{C-x o} to select\n+the previous window on the screen.\n+\n+@item @code{M-x prev-window}\n+@findex prev-window\n+Select the previous window on the screen.  This is identical to\n+@samp{C-x o} with a negative argument.\n+\n+@item @code{C-x 2} (@code{split-window})\n+@cindex windows, creating\n+@kindex C-x 2\n+@findex split-window\n+Split the current window into two windows, both showing the same node.\n+Each window is one half the size of the original window, and the cursor\n+remains in the original window.  The variable @code{automatic-tiling}\n+can cause all of the windows on the screen to be resized for you\n+automatically, please @pxref{Variables, , automatic-tiling} for more\n+information.\n+\n+@item @code{C-x 0} (@code{delete-window})\n+@cindex windows, deleting\n+@kindex C-x 0\n+@findex delete-window\n+Delete the current window from the screen.  If you have made too many\n+windows and your screen appears cluttered, this is the way to get rid of\n+some of them.\n+\n+@item @code{C-x 1} (@code{keep-one-window})\n+@kindex C-x 1\n+@findex keep-one-window\n+Delete all of the windows excepting the current one.\n+\n+@item @code{ESC C-v} (@code{scroll-other-window})\n+@kindex ESC C-v, in Info windows\n+@findex scroll-other-window\n+Scroll the other window, in the same fashion that @samp{C-v} might\n+scroll the current window.  Given a negative argument, scroll the\n+\"other\" window backward.\n+\n+@item @code{C-x ^} (@code{grow-window})\n+@kindex C-x ^\n+@findex grow-window\n+Grow (or shrink) the current window.  Given a numeric argument, grow\n+the current window that many lines; with a negative numeric argument,\n+shrink the window instead.\n+\n+@item @code{C-x t} (@code{tile-windows})\n+@cindex tiling\n+@kindex C-x t\n+@findex tile-windows\n+Divide the available screen space among all of the visible windows.\n+Each window is given an equal portion of the screen in which to display\n+its contents.  The variable @code{automatic-tiling} can cause\n+@code{tile-windows} to be called when a window is created or deleted.\n+@xref{Variables, , @code{automatic-tiling}}.\n+@end table\n+\n+@node The Echo Area,  , Basic Windows, Window Commands\n+@section The Echo Area\n+@cindex echo area\n+\n+The @dfn{echo area} is a one line window which appears at the bottom of\n+the screen.  It is used to display informative or error messages, and to\n+read lines of input from you when that is necessary.  Almost all of the\n+commands available in the echo area are identical to their Emacs\n+counterparts, so please refer to that documentation for greater depth of\n+discussion on the concepts of editing a line of text.  The following\n+table briefly lists the commands that are available while input is being\n+read in the echo area:\n+\n+@table @asis\n+@item @code{C-f} (@code{echo-area-forward})\n+@kindex C-f, in the echo area\n+@findex echo-area-forward\n+Move forward a character.\n+\n+@item @code{C-b} (@code{echo-area-backward})\n+@kindex C-b, in the echo area\n+@findex echo-area-backward\n+Move backward a character.\n+\n+@item @code{C-a} (@code{echo-area-beg-of-line})\n+@kindex C-a, in the echo area\n+@findex echo-area-beg-of-line\n+Move to the start of the input line.\n+\n+@item @code{C-e} (@code{echo-area-end-of-line})\n+@kindex C-e, in the echo area\n+@findex echo-area-end-of-line\n+Move to the end of the input line.\n+\n+@item @code{M-f} (@code{echo-area-forward-word})\n+@kindex M-f, in the echo area\n+@findex echo-area-forward-word\n+Move forward a word.\n+\n+@item @code{M-b} (@code{echo-area-backward-word})\n+@kindex M-b, in the echo area\n+@findex echo-area-backward-word\n+Move backward a word.\n+\n+@item @code{C-d} (@code{echo-area-delete})\n+@kindex C-d, in the echo area\n+@findex echo-area-delete\n+Delete the character under the cursor.\n+\n+@item @code{DEL} (@code{echo-area-rubout})\n+@kindex DEL, in the echo area\n+@findex echo-area-rubout\n+Delete the character behind the cursor.\n+\n+@item @code{C-g} (@code{echo-area-abort})\n+@kindex C-g, in the echo area\n+@findex echo-area-abort\n+Cancel or quit the current operation.  If completion is being read,\n+@samp{C-g} discards the text of the input line which does not match any\n+completion.  If the input line is empty, @samp{C-g} aborts the calling\n+function.\n+\n+@item @code{RET} (@code{echo-area-newline})\n+@kindex RET, in the echo area\n+@findex echo-area-newline\n+Accept (or forces completion of) the current input line.\n+\n+@item @code{C-q} (@code{echo-area-quoted-insert})\n+@kindex C-q, in the echo area\n+@findex echo-area-quoted-insert\n+Insert the next character verbatim.  This is how you can insert control\n+characters into a search string, for example.\n+\n+@item @var{printing character} (@code{echo-area-insert})\n+@kindex printing characters, in the echo area\n+@findex echo-area-insert\n+Insert the character.\n+\n+@item @code{M-TAB} (@code{echo-area-tab-insert})\n+@kindex M-TAB, in the echo area\n+@findex echo-area-tab-insert\n+Insert a TAB character.\n+\n+@item @code{C-t} (@code{echo-area-transpose-chars})\n+@kindex C-t, in the echo area\n+@findex echo-area-transpose-chars\n+Transpose the characters at the cursor.\n+@end table\n+\n+The next group of commands deal with @dfn{killing}, and @dfn{yanking}\n+text.  For an in depth discussion of killing and yanking,\n+@pxref{Killing, , Killing and Deleting, emacs, the GNU Emacs Manual}\n+\n+@table @asis\n+@item @code{M-d} (@code{echo-area-kill-word})\n+@kindex M-d, in the echo area\n+@findex echo-area-kill-word\n+Kill the word following the cursor.\n+\n+@item @code{M-DEL} (@code{echo-area-backward-kill-word})\n+@kindex M-DEL, in the echo area\n+@findex echo-area-backward-kill-word\n+Kill the word preceding the cursor.\n+\n+@item @code{C-k} (@code{echo-area-kill-line})\n+@kindex C-k, in the echo area\n+@findex echo-area-kill-line\n+Kill the text from the cursor to the end of the line.\n+\n+@item @code{C-x DEL} (@code{echo-area-backward-kill-line})\n+@kindex C-x DEL, in the echo area\n+@findex echo-area-backward-kill-line\n+Kill the text from the cursor to the beginning of the line.\n+\n+@item @code{C-y} (@code{echo-area-yank})\n+@kindex C-y, in the echo area\n+@findex echo-area-yank\n+Yank back the contents of the last kill.\n+\n+@item @code{M-y} (@code{echo-area-yank-pop})\n+@kindex M-y, in the echo area\n+@findex echo-area-yank-pop\n+Yank back a previous kill, removing the last yanked text first.\n+@end table\n+\n+Sometimes when reading input in the echo area, the command that needed\n+input will only accept one of a list of several choices.  The choices\n+represent the @dfn{possible completions}, and you must respond with one\n+of them.  Since there are a limited number of responses you can make,\n+Info allows you to abbreviate what you type, only typing as much of the\n+response as is necessary to uniquely identify it.  In addition, you can\n+request Info to fill in as much of the response as is possible; this\n+is called @dfn{completion}.\n+\n+The following commands are available when completing in the echo area:\n+\n+@table @asis\n+@item @code{TAB} (@code{echo-area-complete})\n+@itemx @code{SPC}\n+@kindex TAB, in the echo area\n+@kindex SPC, in the echo area\n+@findex echo-area-complete\n+Insert as much of a completion as is possible.\n+\n+@item @code{?} (@code{echo-area-possible-completions})\n+@kindex ?, in the echo area\n+@findex echo-area-possible-completions\n+Display a window containing a list of the possible completions of what\n+you have typed so far.  For example, if the available choices are:\n+\n+@example\n+@group\n+bar\n+foliate\n+food\n+forget\n+@end group\n+@end example\n+\n+@noindent\n+and you have typed an @samp{f}, followed by @samp{?}, the possible\n+completions would contain:\n+\n+@example\n+@group\n+foliate\n+food\n+forget\n+@end group\n+@end example\n+\n+@noindent\n+i.e., all of the choices which begin with @samp{f}.  Pressing @key{SPC}\n+or @key{TAB} would result in @samp{fo} appearing in the echo area, since\n+all of the choices which begin with @samp{f} continue with @samp{o}.\n+Now, typing @samp{l} followed by @samp{TAB} results in @samp{foliate}\n+appearing in the echo area, since that is the only choice which begins\n+with @samp{fol}.\n+\n+@item @code{ESC C-v} (@code{echo-area-scroll-completions-window})\n+@kindex ESC C-v, in the echo area\n+@findex echo-area-scroll-completions-window\n+Scroll the completions window, if that is visible, or the \"other\"\n+window if not.\n+@end table\n+\n+@node Printing Nodes, Miscellaneous Commands, Window Commands, Top\n+@chapter Printing Out Nodes\n+@cindex printing\n+\n+You may wish to print out the contents of a node as  a quick reference\n+document for later use.  Info provides you with a command for doing\n+this.  In general, we recommend that you use @TeX{} to format the\n+document and print sections of it, by running @code{tex} on the Texinfo\n+source file.\n+\n+@table @asis\n+@item @code{M-x print-node}\n+@findex print-node\n+@cindex INFO_PRINT_COMMAND, environment variable\n+Pipe the contents of the current node through the command in the\n+environment variable @code{INFO_PRINT_COMMAND}.  If the variable does not\n+exist, the node is simply piped to @code{lpr}.\n+@end table\n+\n+@node Miscellaneous Commands, Variables, Printing Nodes, Top\n+@chapter Miscellaneous Commands\n+\n+GNU Info contains several commands which self-document GNU Info:\n+\n+@table @asis\n+@item @code{M-x describe-command}\n+@cindex functions, describing\n+@cindex commands, describing\n+@findex describe-command\n+Read the name of an Info command in the echo area and then display a\n+brief description of what that command does.\n+\n+@item @code{M-x describe-key}\n+@cindex keys, describing\n+@findex describe-key\n+Read a key sequence in the echo area, and then display the name and\n+documentation of the Info command that the key sequence invokes.\n+\n+@item @code{M-x describe-variable}\n+Read the name of a variable in the echo area and then display a brief\n+description of what the variable affects.\n+\n+@item @code{M-x where-is}\n+@findex where-is\n+Read the name of an Info command in the echo area, and then display\n+a key sequence which can be typed in order to invoke that command.\n+\n+@item @code{C-h} (@code{get-help-window})\n+@itemx @code{?}\n+@kindex C-h\n+@kindex ?, in Info windows\n+@findex get-help-window\n+Create (or Move into) the window displaying @code{*Help*}, and place\n+a node containing a quick reference card into it.  This window displays\n+the most concise information about GNU Info available.\n+\n+@item @code{h} (@code{get-info-help-node})\n+@kindex h\n+@findex get-info-help-node\n+Try hard to visit the node @code{(info)Help}.  The Info file\n+@file{info.texi} distributed with GNU Info contains this node.  Of\n+course, the file must first be processed with @code{makeinfo}, and then\n+placed into the location of your Info directory.\n+@end table\n+\n+Here are the commands for creating a numeric argument:\n+\n+@table @asis\n+@item @code{C-u} (@code{universal-argument})\n+@cindex numeric arguments\n+@kindex C-u\n+@findex universal-argument\n+Start (or multiply by 4) the current numeric argument.  @samp{C-u} is\n+a good way to give a small numeric argument to cursor movement or\n+scrolling commands; @samp{C-u C-v} scrolls the screen 4 lines, while\n+@samp{C-u C-u C-n} moves the cursor down 16 lines.\n+\n+@item @code{M-1} (@code{add-digit-to-numeric-arg})\n+@itemx @code{M-2} @dots{} @code{M-9}\n+@kindex M-1 @dots{} M-9\n+@findex add-digit-to-numeric-arg\n+Add the digit value of the invoking key to the current numeric\n+argument.  Once Info is reading a numeric argument, you may just type\n+the digits of the argument, without the Meta prefix.  For example, you\n+might give @samp{C-l} a numeric argument of 32 by typing:\n+\n+@example\n+@kbd{C-u 3 2 C-l}\n+@end example\n+\n+@noindent\n+or\n+\n+@example\n+@kbd{M-3 2 C-l}\n+@end example\n+@end table\n+\n+@samp{C-g} is used to abort the reading of a multi-character key\n+sequence, to cancel lengthy operations (such as multi-file searches) and\n+to cancel reading input in the echo area.\n+\n+@table @asis\n+@item @code{C-g} (@code{abort-key})\n+@cindex cancelling typeahead\n+@cindex cancelling the current operation\n+@kindex C-g, in Info windows\n+@findex abort-key\n+Cancel current operation.\n+@end table\n+\n+The @samp{q} command of Info simply quits running Info.\n+\n+@table @asis\n+@item @code{q} (@code{quit})\n+@cindex quitting\n+@kindex q\n+@findex quit\n+Exit GNU Info.\n+@end table\n+\n+If the operating system tells GNU Info that the screen is 60 lines tall,\n+and it is actually only 40 lines tall, here is a way to tell Info that\n+the operating system is correct.\n+\n+@table @asis\n+@item @code{M-x set-screen-height}\n+@findex set-screen-height\n+@cindex screen, changing the height of\n+Read a height value in the echo area and set the height of the\n+displayed screen to that value.\n+@end table\n+\n+Finally, Info provides a convenient way to display footnotes which might\n+be associated with the current node that you are viewing:\n+\n+@table @asis\n+@item @code{ESC C-f} (@code{show-footnotes})\n+@kindex ESC C-f\n+@findex show-footnotes\n+@cindex footnotes, displaying\n+Show the footnotes (if any) associated with the current node in another\n+window.  You can have Info automatically display the footnotes\n+associated with a node when the node is selected by setting the variable\n+@code{automatic-footnotes}.  @xref{Variables, , @code{automatic-footnotes}}.\n+@end table\n+\n+@node Variables, GNU Info Global Index, Miscellaneous Commands, Top\n+@chapter Manipulating Variables\n+\n+GNU Info contains several @dfn{variables} whose values are looked at by\n+various Info commands.  You can change the values of these variables,\n+and thus change the behavior of Info to more closely match your\n+environment and Info file reading manner.\n+\n+@table @asis\n+@item @code{M-x set-variable}\n+@cindex variables, setting\n+@findex set-variable\n+Read the name of a variable, and the value for it, in the echo area and\n+then set the variable to that value.  Completion is available when\n+reading the variable name; often, completion is available when reading\n+the value to give to the variable, but that depends on the variable\n+itself.  If a variable does @emph{not} supply multiple choices to\n+complete over, it expects a numeric value.\n+\n+@item @code{M-x describe-variable}\n+@cindex variables, describing\n+@findex describe-variable\n+Read the name of a variable in the echo area and then display a brief\n+description of what the variable affects.\n+@end table\n+\n+Here is a list of the variables that you can set in Info.\n+\n+@table @code\n+@item automatic-footnotes\n+@vindex automatic-footnotes\n+When set to @code{On}, footnotes appear and disappear automatically.\n+This variable is @code{On} by default.  When a node is selected, a\n+window containing the footnotes which appear in that node is created,\n+and the footnotes are displayed within the new window.  The window that\n+Info creates to contain the footnotes is called @samp{*Footnotes*}.  If\n+a node is selected which contains no footnotes, and a @samp{*Footnotes*}\n+window is on the screen, the @samp{*Footnotes*} window is deleted.\n+Footnote windows created in this fashion are not automatically tiled so\n+that they can use as little of the display as is possible.\n+\n+@item automatic-tiling\n+@vindex automatic-tiling\n+When set to @code{On}, creating or deleting a window resizes other\n+windows.  This variable is @code{Off} by default.  Normally, typing\n+@samp{C-x 2} divides the current window into two equal parts.  When\n+@code{automatic-tiling} is set to @code{On}, all of the windows are\n+resized automatically, keeping an equal number of lines visible in each\n+window.  There are exceptions to the automatic tiling; specifically, the\n+windows @samp{*Completions*} and @samp{*Footnotes*} are @emph{not}\n+resized through automatic tiling; they remain their original size.\n+\n+@item visible-bell\n+@vindex visible-bell\n+When set to @code{On}, GNU Info attempts to flash the screen instead of\n+ringing the bell.  This variable is @code{Off} by default.  Of course,\n+Info can only flash the screen if the terminal allows it; in the case\n+that the terminal does not allow it, the setting of this variable has no\n+effect.  However, you can make Info perform quietly by setting the\n+@code{errors-ring-bell} variable to @code{Off}.\n+\n+@item errors-ring-bell\n+@vindex errors-ring-bell\n+When set to @code{On}, errors cause the bell to ring.  The default\n+setting of this variable is @code{On}.\n+\n+@item gc-compressed-files\n+@vindex gc-compressed-files\n+When set to @code{On}, Info garbage collects files which had to be\n+uncompressed.  The default value of this variable is @code{Off}.\n+Whenever a node is visited in Info, the Info file containing that node\n+is read into core, and Info reads information about the tags and nodes\n+contained in that file.  Once the tags information is read by Info, it\n+is never forgotten.  However, the actual text of the nodes does not need\n+to remain in core unless a particular Info window needs it.  For\n+non-compressed files, the text of the nodes does not remain in core when\n+it is no longer in use.  But de-compressing a file can be a time\n+consuming operation, and so Info tries hard not to do it twice.\n+@code{gc-compressed-files} tells Info it is okay to garbage collect the\n+text of the nodes of a file which was compressed on disk.\n+\n+@item show-index-match\n+@vindex show-index-match\n+When set to @code{On}, the portion of the matched search string is\n+highlighted in the message which explains where the matched search\n+string was found.  The default value of this variable is @code{On}.\n+When Info displays the location where an index match was found,\n+(@pxref{Searching Commands, , @code{next-index-match}}), the portion of the\n+string that you had typed is highlighted by displaying it in the inverse\n+case from its surrounding characters.\n+\n+@item scroll-behavior\n+@vindex scroll-behavior\n+Control what happens when forward scrolling is requested at the end of\n+a node, or when backward scrolling is requested at the beginning of a\n+node.  The default value for this variable is @code{Continuous}.  There\n+are three possible values for this variable:\n+\n+@table @code\n+@item Continuous\n+Try to get the first item in this node's menu, or failing that, the\n+@samp{Next} node, or failing that, the @samp{Next} of the @samp{Up}.\n+This behavior is identical to using the @samp{]}\n+(@code{global-next-node}) and @samp{[} (@code{global-prev-node})\n+commands.\n+\n+@item Next Only\n+Only try to get the @samp{Next} node.\n+\n+@item Page Only\n+Simply give up, changing nothing.  If @code{scroll-behavior} is\n+@code{Page Only}, no scrolling command can change the node that is being\n+viewed.\n+@end table\n+\n+@item scroll-step\n+@vindex scroll-step\n+The number of lines to scroll when the cursor moves out of the window.\n+Scrolling happens automatically if the cursor has moved out of the\n+visible portion of the node text when it is time to display.  Usually\n+the scrolling is done so as to put the cursor on the center line of the\n+current window.  However, if the variable @code{scroll-step} has a\n+nonzero value, Info attempts to scroll the node text by that many lines;\n+if that is enough to bring the cursor back into the window, that is what\n+is done.  The default value of this variable is 0, thus placing the\n+cursor (and the text it is attached to) in the center of the window.\n+Setting this variable to 1 causes a kind of \"smooth scrolling\" which\n+some people prefer.\n+\n+@item ISO-Latin\n+@cindex ISO Latin characters\n+@vindex ISO-Latin\n+When set to @code{On}, Info accepts and displays ISO Latin characters.\n+By default, Info assumes an ASCII character set.  @code{ISO-Latin} tells\n+Info that it is running in an environment where the European standard\n+character set is in use, and allows you to input such characters to\n+Info, as well as display them.\n+@end table\n+\n+\n+\n+@c the following is incomplete\n+@ignore\n+@c node Info for Sys Admins\n+@c chapter Info for System Administrators\n+\n+This text describes some common ways of setting up an Info hierarchy\n+from scratch, and details the various options that are available when\n+installing Info.  This text is designed for the person who is installing\n+GNU Info on the system; although users may find the information present\n+in this section interesting, none of it is vital to understanding how to\n+use GNU Info.\n+\n+@menu\n+* Setting the INFOPATH::        Where are my Info files kept?\n+* Editing the DIR node::        What goes in `DIR', and why?\n+* Storing Info files::          Alternate formats allow flexibility in setups.\n+* Using `localdir'::            Building DIR on the fly.\n+* Example setups::              Some common ways to organize Info files.\n+@end menu\n+\n+@c node Setting the INFOPATH\n+@c section Setting the INFOPATH\n+\n+Where are my Info files kept?\n+\n+@c node Editing the DIR node\n+@c section Editing the DIR node\n+\n+What goes in `DIR', and why?\n+\n+@c node Storing Info files\n+@c section Storing Info files\n+\n+Alternate formats allow flexibility in setups.\n+\n+@c node Using `localdir'\n+@c section Using `localdir'\n+\n+Building DIR on the fly.\n+\n+@c node Example setups\n+@c section Example setups\n+\n+Some common ways to organize Info files.\n+@end ignore\n+\n+@node GNU Info Global Index,  , Variables, Top\n+@appendix Global Index\n+\n+@printindex cp\n+\n+@contents\n+@bye"}, {"sha": "5f06282b15cf6c6c4889f8aa0bcbf391049c6c44", "filename": "texinfo/doc/info.texi", "status": "added", "additions": 911, "deletions": 0, "changes": 911, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Finfo.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Finfo.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fdoc%2Finfo.texi?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,911 @@\n+\\input texinfo    @c -*-texinfo-*-\n+@comment %**start of header \n+@setfilename info.info\n+@settitle Info 1.0\n+@comment %**end of header \n+@comment $Id: info.texi,v 1.1 1998/03/23 04:42:12 law Exp $\n+\n+@dircategory Texinfo documentation system\n+@direntry\n+* Info: (info).                 Documentation browsing system.\n+@end direntry\n+\n+@ifinfo\n+This file describes how to use Info, \n+the on-line, menu-driven GNU documentation system.\n+\n+Copyright (C) 1989, 92, 96, 97 Free Software Foundation, Inc.\n+\n+Permission is granted to make and distribute verbatim copies of\n+this manual provided the copyright notice and this permission notice\n+are preserved on all copies.\n+\n+@ignore\n+Permission is granted to process this file through TeX and print the\n+results, provided the printed document carries copying permission\n+notice identical to this one except for the removal of this paragraph\n+(this paragraph not being relevant to the printed manual).\n+\n+@end ignore\n+Permission is granted to copy and distribute modified versions of this\n+manual under the conditions for verbatim copying, provided that the entire\n+resulting derived work is distributed under the terms of a permission\n+notice identical to this one.\n+\n+Permission is granted to copy and distribute translations of this manual\n+into another language, under the above conditions for modified versions,\n+except that this permission notice may be stated in a translation approved\n+by the Free Software Foundation.\n+@end ifinfo\n+\n+@titlepage\n+@title Info\n+@subtitle The online, menu-driven GNU documentation system\n+@author Brian Fox\n+@page\n+@vskip 0pt plus 1filll\n+Copyright @copyright{} 1989, 1992, 1993, 1996, 1997 Free Software\n+Foundation, Inc.\n+@sp 2\n+\n+Published by the Free Software Foundation @*\n+59 Temple Place - Suite 330 @*\n+Boston, MA 02111-1307, USA.\n+\n+Permission is granted to make and distribute verbatim copies of\n+this manual provided the copyright notice and this permission notice\n+are preserved on all copies.\n+\n+Permission is granted to copy and distribute modified versions of this\n+manual under the conditions for verbatim copying, provided that the entire\n+resulting derived work is distributed under the terms of a permission\n+notice identical to this one.\n+\n+Permission is granted to copy and distribute translations of this manual\n+into another language, under the above conditions for modified versions,\n+except that this permission notice may be stated in a translation approved\n+by the Free Software Foundation.\n+@end titlepage\n+\n+@ifinfo\n+@node Top, Getting Started, , (dir)\n+@top Info: An Introduction\n+\n+Info is a program for reading documentation, which you are using now.\n+\n+To learn how to use Info, type the command @kbd{h}.  It brings you\n+to a programmed instruction sequence.\n+\n+@c Need to make sure that `Info-help' goes to the right node, \n+@c which is the first node of the first chapter. (It should.) \n+@c   (Info-find-node \"info\"\n+@c                (if (< (window-height) 23)\n+@c                    \"Help-Small-Screen\"\n+@c                  \"Help\")))\n+\n+To learn advanced Info commands, type @kbd{n} twice.  This brings you to\n+@cite{Info for Experts}, skipping over the `Getting Started' chapter.\n+@end ifinfo\n+\n+@menu\n+* Getting Started::             Getting started using an Info reader.\n+* Advanced Info::               Advanced commands within Info.\n+* Create an Info File::         How to make your own Info file.\n+* The Standalone Info Program: (info-stnd.info).\n+@end menu\n+\n+@node Getting Started, Advanced Info, Top, Top\n+@comment  node-name,  next,  previous,  up\n+@chapter Getting Started\n+\n+This first part of the Info manual describes how to get around inside\n+of Info.  The second part of the manual describes various advanced\n+Info commands, and how to write an Info as distinct from a Texinfo\n+file.  The third part is about how to generate Info files from \n+Texinfo files.\n+\n+@iftex\n+This manual is primarily designed for use on a computer, so that you can\n+try Info commands while reading about them.  Reading it on paper is less\n+effective, since you must take it on faith that the commands described\n+really do what the manual says.  By all means go through this manual now\n+that you have it; but please try going through the on-line version as\n+well.  \n+\n+There are two ways of looking at the online version of this manual:\n+\n+@enumerate\n+@item\n+Type @code{info} at your shell's command line.  This approach uses a\n+small stand-alone program designed just to read Info files.\n+\n+@item\n+Type @code{emacs} at the command line; then type @kbd{C-h i} (Control\n+@kbd{h}, followed by @kbd{i}).  This approach uses the Info mode of the\n+Emacs program, an editor with many other capabilities.\n+@end enumerate\n+\n+In either case, then type @kbd{mInfo} (just the letters), followed by\n+@key{RET}---the ``Return'' or ``Enter'' key.  At this point, you should\n+be ready to follow the instructions in this manual as you read them on\n+the screen.\n+@c FIXME! (pesch@cygnus.com, 14 dec 1992)\n+@c Is it worth worrying about what-if the beginner goes to somebody\n+@c else's Emacs session, which already has an Info running in the middle\n+@c of something---in which case these simple instructions won't work?\n+@end iftex\n+\n+@menu\n+* Help-Small-Screen::   Starting Info on a Small Screen\n+* Help::                How to use Info\n+* Help-P::              Returning to the Previous node\n+* Help-^L::             The Space, Rubout, B and ^L commands.\n+* Help-M::              Menus\n+* Help-Adv::            Some advanced Info commands\n+* Help-Q::              Quitting Info\n+@end menu\n+\n+@node Help-Small-Screen, Help,  , Getting Started\n+@comment  node-name,  next,  previous,  up\n+@section Starting Info on a Small Screen\n+\n+@iftex\n+(In Info, you only see this section if your terminal has a small\n+number of lines; most readers pass by it without seeing it.)\n+@end iftex\n+\n+Since your terminal has an unusually small number of lines on its\n+screen, it is necessary to give you special advice at the beginning.\n+\n+If you see the text @samp{--All----} at near the bottom right corner\n+of the screen, it means the entire text you are looking at fits on the\n+screen.  If you see @samp{--Top----} instead, it means that there is\n+more text below that does not fit.  To move forward through the text\n+and see another screen full, press the Space bar, @key{SPC}.  To move\n+back up, press the key labeled @samp{Backspace} or @key{Delete}.\n+\n+@ifinfo\n+Here are 40 lines of junk, so you can try Spaces and Deletes and\n+see what they do.  At the end are instructions of what you should do\n+next.\n+\n+This is line 17 @*\n+This is line 18 @*\n+This is line 19 @*\n+This is line 20 @*\n+This is line 21 @*\n+This is line 22 @*\n+This is line 23 @*\n+This is line 24 @*\n+This is line 25 @*\n+This is line 26 @*\n+This is line 27 @*\n+This is line 28 @*\n+This is line 29 @*\n+This is line 30 @*\n+This is line 31 @*\n+This is line 32 @*\n+This is line 33 @*\n+This is line 34 @*\n+This is line 35 @*\n+This is line 36 @*\n+This is line 37 @*\n+This is line 38 @*\n+This is line 39 @*\n+This is line 40 @*\n+This is line 41 @*\n+This is line 42 @*\n+This is line 43 @*\n+This is line 44 @*\n+This is line 45 @*\n+This is line 46 @*\n+This is line 47 @*\n+This is line 48 @*\n+This is line 49 @*\n+This is line 50 @*\n+This is line 51 @*\n+This is line 52 @*\n+This is line 53 @*\n+This is line 54 @*\n+This is line 55 @*\n+This is line 56 @*\n+\n+If you have managed to get here, go back to the beginning with\n+Delete, and come back here again, then you understand Space and\n+Delete.  So now type an @kbd{n} ---just one character; don't type\n+the quotes and don't type the Return key afterward--- to\n+get to the normal start of the course.\n+@end ifinfo\n+\n+@node Help, Help-P, Help-Small-Screen, Getting Started\n+@comment  node-name,  next,  previous,  up\n+@section How to use Info\n+\n+You are talking to the program Info, for reading documentation.\n+\n+  Right now you are looking at one @dfn{Node} of Information.\n+A node contains text describing a specific topic at a specific\n+level of detail.  This node's topic is ``how to use Info''.\n+\n+  The top line of a node is its @dfn{header}.  This node's header (look at\n+it now) says that it is the node named @samp{Help} in the file\n+@file{info}.  It says that the @samp{Next} node after this one is the node\n+called @samp{Help-P}.  An advanced Info command lets you go to any node\n+whose name you know.\n+\n+  Besides a @samp{Next}, a node can have a @samp{Previous} or an @samp{Up}.\n+This node has a @samp{Previous} but no @samp{Up}, as you can see.\n+\n+  Now it is time to move on to the @samp{Next} node, named @samp{Help-P}.\n+\n+>> Type @samp{n} to move there.  Type just one character;\n+   do not type the quotes and do not type a @key{RET} afterward.\n+\n+@samp{>>} in the margin means it is really time to try a command.\n+\n+@node Help-P, Help-^L, Help, Getting Started\n+@comment  node-name,  next,  previous,  up\n+@section Returning to the Previous node\n+\n+This node is called @samp{Help-P}.  The @samp{Previous} node, as you see,\n+is @samp{Help}, which is the one you just came from using the @kbd{n}\n+command.  Another @kbd{n} command now would take you to the next\n+node, @samp{Help-^L}.\n+\n+>> But do not do that yet.  First, try the @kbd{p} command, which takes\n+   you to the @samp{Previous} node.  When you get there, you can do an\n+   @kbd{n} again to return here.\n+\n+  This all probably seems insultingly simple so far, but @emph{do not} be\n+led into skimming.  Things will get more complicated soon.  Also,\n+do not try a new command until you are told it is time to.  Otherwise,\n+you may make Info skip past an important warning that was coming up.\n+\n+>> Now do an @kbd{n} to get to the node @samp{Help-^L} and learn more.\n+\n+@node Help-^L, Help-M, Help-P, Getting Started\n+@comment  node-name,  next,  previous,  up\n+@section The Space, Delete, B and ^L commands.\n+\n+  This node's header tells you that you are now at node @samp{Help-^L}, and\n+that @kbd{p} would get you back to @samp{Help-P}.  The node's title is\n+underlined; it says what the node is about (most nodes have titles).\n+\n+  This is a big node and it does not all fit on your display screen.\n+You can tell that there is more that is not visible because you\n+can see the string @samp{--Top-----} rather than @samp{--All----} near\n+the bottom right corner of the screen.\n+\n+  The Space, Delete and @kbd{B} commands exist to allow you to ``move\n+around'' in a node that does not all fit on the screen at once.\n+Space moves forward, to show what was below the bottom of the screen.\n+Delete moves backward, to show what was above the top of the screen\n+(there is not anything above the top until you have typed some spaces).\n+\n+>> Now try typing a Space (afterward, type a Delete to return here).\n+\n+  When you type the space, the two lines that were at the bottom of\n+the screen appear at the top, followed by more lines.  Delete takes\n+the two lines from the top and moves them to the bottom,\n+@emph{usually}, but if there are not a full screen's worth of lines\n+above them they may not make it all the way to the bottom.\n+\n+  If you type Space when there is no more to see, it rings the\n+bell and otherwise does nothing.  The same goes for Delete when\n+the header of the node is visible.\n+\n+  If your screen is ever garbaged, you can tell Info to print it out\n+again by typing @kbd{C-l} (@kbd{Control-L}, that is---hold down ``Control'' and\n+type an @key{L} or @kbd{l}).\n+\n+>> Type @kbd{C-l} now.\n+\n+  To move back to the beginning of the node you are on, you can type\n+a lot of Deletes.  You can also type simply @kbd{b} for beginning.\n+>> Try that now.  (We have put in enough verbiage to push this past\n+the first screenful, but screens are so big nowadays that perhaps it\n+isn't enough.  You may need to shrink your Emacs or Info window.)\n+Then come back, with Spaces.\n+\n+  If your screen is very tall, all of this node might fit at once.\n+In that case, \"b\" won't do anything.  Sorry; what can we do?\n+\n+  You have just learned a considerable number of commands.  If you\n+want to use one but have trouble remembering which, you should type\n+a @key{?} which prints out a brief list of commands.  When you are\n+finished looking at the list, make it go away by pressing @key{SPC}\n+repeatedly.\n+\n+>> Type a @key{?} now.  Press @key{SPC} to see consecutive screenfuls of\n+>> the list until finished.\n+\n+  From now on, you will encounter large nodes without warning, and\n+will be expected to know how to use Space and Delete to move\n+around in them without being told.  Since not all terminals have\n+the same size screen, it would be impossible to warn you anyway.\n+\n+>> Now type @kbd{n} to see the description of the @kbd{m} command.\n+\n+@node Help-M, Help-Adv, Help-^L, Getting Started\n+@comment  node-name,  next,  previous,  up\n+@section Menus\n+\n+Menus and the @kbd{m} command\n+\n+  With only the @kbd{n} and @kbd{p} commands for moving between nodes, nodes\n+are restricted to a linear sequence.  Menus allow a branching\n+structure.  A menu is a list of other nodes you can move to.  It is\n+actually just part of the text of the node formatted specially so that\n+Info can interpret it.  The beginning of a menu is always identified\n+by a line which starts with @samp{* Menu:}.  A node contains a menu if and\n+only if it has a line in it which starts that way.  The only menu you\n+can use at any moment is the one in the node you are in.  To use a\n+menu in any other node, you must move to that node first. \n+\n+  After the start of the menu, each line that starts with a @samp{*}\n+identifies one subtopic.  The line usually contains a brief name\n+for the subtopic (followed by a @samp{:}), the name of the node that talks\n+about that subtopic, and optionally some further description of the\n+subtopic.  Lines in the menu that do not start with a @samp{*} have no\n+special meaning---they are only for the human reader's benefit and do\n+not define additional subtopics.  Here is an example:\n+\n+@example\n+* Foo:  FOO's Node      This tells about FOO\n+@end example\n+\n+The subtopic name is Foo, and the node describing it is @samp{FOO's Node}.\n+The rest of the line is just for the reader's Information.\n+[[ But this line is not a real menu item, simply because there is\n+no line above it which starts with @samp{* Menu:}.]]\n+\n+  When you use a menu to go to another node (in a way that will be\n+described soon), what you specify is the subtopic name, the first\n+thing in the menu line.  Info uses it to find the menu line, extracts\n+the node name from it, and goes to that node.  The reason that there\n+is both a subtopic name and a node name is that the node name must be\n+meaningful to the computer and may therefore have to be ugly looking.\n+The subtopic name can be chosen just to be convenient for the user to\n+specify.  Often the node name is convenient for the user to specify\n+and so both it and the subtopic name are the same.  There is an\n+abbreviation for this:\n+\n+@example\n+* Foo::   This tells about FOO\n+@end example\n+\n+@noindent\n+This means that the subtopic name and node name are the same; they are\n+both @samp{Foo}.\n+\n+>> Now use Spaces to find the menu in this node, then come back to\n+   the front with a @kbd{b} and some Spaces.  As you see, a menu is\n+   actually visible in its node.  If you cannot find a menu in a node\n+   by looking at it, then the node does not have a menu and the\n+   @kbd{m} command is not available.\n+\n+  The command to go to one of the subnodes is @kbd{m}---but @emph{do\n+not do it yet!}  Before you use @kbd{m}, you must understand the\n+difference between commands and arguments.  So far, you have learned\n+several commands that do not need arguments.  When you type one, Info\n+processes it and is instantly ready for another command.  The @kbd{m}\n+command is different: it is incomplete without the @dfn{name of the\n+subtopic}.  Once you have typed @kbd{m}, Info tries to read the\n+subtopic name.\n+\n+  Now look for the line containing many dashes near the bottom of the\n+screen.  There is one more line beneath that one, but usually it is\n+blank.  If it is empty, Info is ready for a command, such as @kbd{n}\n+or @kbd{b} or Space or @kbd{m}.  If that line contains text ending\n+in a colon, it mean Info is trying to read the @dfn{argument} to a\n+command.  At such times, commands do not work, because Info tries to\n+use them as the argument.  You must either type the argument and\n+finish the command you started, or type @kbd{Control-g} to cancel the\n+command.  When you have done one of those things, the line becomes\n+blank again.\n+\n+  The command to go to a subnode via a menu is @kbd{m}.  After you type\n+the @kbd{m}, the line at the bottom of the screen says @samp{Menu item: }.\n+You must then type the name of the subtopic you want, and end it with\n+a @key{RET}.\n+\n+  You can abbreviate the subtopic name.  If the abbreviation is not\n+unique, the first matching subtopic is chosen.  Some menus put\n+the shortest possible abbreviation for each subtopic name in capital\n+letters, so you can see how much you need to type.  It does not\n+matter whether you use upper case or lower case when you type the\n+subtopic.  You should not put any spaces at the end, or inside of the\n+item name, except for one space where a space appears in the item in\n+the menu.\n+\n+  You can also use the @dfn{completion} feature to help enter the subtopic\n+name.  If you type the Tab key after entering part of a name, it will\n+magically fill in more of the name---as much as follows uniquely from\n+what you have entered.\n+\n+  If you move the cursor to one of the menu subtopic lines, then you do\n+not need to type the argument: you just type a Return, and it stands for\n+the subtopic of the line you are on.\n+\n+Here is a menu to give you a chance to practice.\n+\n+* Menu:    The menu starts here.\n+\n+This menu gives you three ways of going to one place, Help-FOO.\n+\n+* Foo:  Help-FOO.       A node you can visit for fun.@*\n+* Bar:  Help-FOO.       Strange!  two ways to get to the same place.@*\n+* Help-FOO::            And yet another!@*\n+\n+\n+>>  Now type just an @kbd{m} and see what happens:\n+\n+  Now you are ``inside'' an @kbd{m} command.  Commands cannot be used\n+now; the next thing you will type must be the name of a subtopic.\n+\n+  You can change your mind about doing the @kbd{m} by typing Control-g.\n+\n+>> Try that now;  notice the bottom line clear.\n+\n+>> Then type another @kbd{m}.\n+\n+>> Now type @samp{BAR} item name.  Do not type Return yet.\n+\n+  While you are typing the item name, you can use the Delete key to\n+cancel one character at a time if you make a mistake.\n+\n+>> Type one to cancel the @samp{R}.  You could type another @samp{R} to\n+   replace it.  You do not have to, since @samp{BA} is a valid abbreviation.\n+\n+>> Now you are ready to go.  Type a @key{RET}.\n+\n+  After visiting Help-FOO, you should return here.\n+\n+>> Type @kbd{n} to see more commands.\n+\n+@c If a menu appears at the end of this node, remove it.\n+@c It is an accident of the menu updating command.\n+\n+Here is another way to get to  Help-FOO, a menu.  You can ignore this\n+if you want, or else try it (but then please come back to here).\n+\n+@menu\n+* Help-FOO::\n+@end menu\n+\n+@node Help-FOO,  ,  , Help-M\n+@comment  node-name,  next,  previous,  up\n+@subsection The @kbd{u} command\n+\n+  Congratulations!  This is the node @samp{Help-FOO}.  Unlike the other\n+nodes you have seen, this one has an @samp{Up}: @samp{Help-M}, the node you\n+just came from via the @kbd{m} command.  This is the usual\n+convention---the nodes you reach from a menu have @samp{Up} nodes that lead\n+back to the menu.  Menus move Down in the tree, and @samp{Up} moves Up.\n+@samp{Previous}, on the other hand, is usually used to ``stay on the same\n+level but go backwards''\n+\n+  You can go back to the node @samp{Help-M} by typing the command\n+@kbd{u} for ``Up''.  That puts you at the @emph{front} of the\n+node---to get back to where you were reading you have to type\n+some @key{SPC}s.\n+\n+>> Now type @kbd{u} to move back up to @samp{Help-M}.\n+\n+@node Help-Adv, Help-Q, Help-M, Getting Started\n+@comment  node-name,  next,  previous,  up\n+@section Some advanced Info commands\n+\n+  The course is almost over, so please stick with it to the end.\n+\n+  If you have been moving around to different nodes and wish to\n+retrace your steps, the @kbd{l} command (@kbd{l} for @dfn{last}) will\n+do that, one node-step at a time.  As you move from node to node, Info\n+records the nodes where you have been in a special history list.  The\n+@kbd{l} command revisits nodes in the history list; each successive\n+@kbd{l} command moves one step back through the history.\n+\n+  If you have been following directions, ad @kbd{l} command now will get\n+you back to @samp{Help-M}.  Another @kbd{l} command would undo the\n+@kbd{u} and get you back to @samp{Help-FOO}.  Another @kbd{l} would undo\n+the @kbd{m} and get you back to @samp{Help-M}.\n+\n+>> Try typing three @kbd{l}'s, pausing in between to see what each\n+    @kbd{l} does.\n+\n+Then follow directions again and you will end up back here.\n+\n+  Note the difference between @kbd{l} and @kbd{p}: @kbd{l} moves to\n+where @emph{you} last were, whereas @kbd{p} always moves to the node\n+which the header says is the @samp{Previous} node (from this node, to\n+@samp{Help-M}).\n+\n+  The @samp{d} command gets you instantly to the Directory node.\n+This node, which is the first one you saw when you entered Info,\n+has a menu which leads (directly, or indirectly through other menus),\n+to all the nodes that exist.\n+\n+>> Try doing a @samp{d}, then do an @kbd{l} to return here (yes,\n+   @emph{do} return).\n+\n+  Sometimes, in Info documentation, you will see a cross reference.\n+Cross references look like this: @xref{Help-Cross, Cross}.  That is a\n+real, live cross reference which is named @samp{Cross} and points at\n+the node named @samp{Help-Cross}.\n+\n+  If you wish to follow a cross reference, you must use the @samp{f}\n+command.  The @samp{f} must be followed by the cross reference name\n+(in this case, @samp{Cross}).  While you enter the name, you can use the\n+Delete key to edit your input.  If you change your mind about following\n+any reference, you can use @kbd{Control-g} to cancel the command.\n+\n+  Completion is available in the @samp{f} command; you can complete among\n+all the cross reference names in the current node by typing a Tab.\n+\n+>> Type @samp{f}, followed by @samp{Cross}, and a @key{RET}.\n+\n+  To get a list of all the cross references in the current node, you can\n+type @kbd{?} after an @samp{f}.  The @samp{f} continues to await a\n+cross reference name even after printing the list, so if you don't\n+actually want to follow a reference, you should type a @kbd{Control-g}\n+to cancel the @samp{f}.\n+\n+>> Type \"f?\" to get a list of the cross references in this node.  Then\n+   type a @kbd{Control-g} and see how the @samp{f} gives up.\n+\n+>> Now type @kbd{n} to see the last node of the course.\n+\n+@c If a menu appears at the end of this node, remove it.\n+@c It is an accident of the menu updating command.\n+\n+@node Help-Cross,  ,  , Help-Adv\n+@comment  node-name,  next,  previous,  up\n+@unnumberedsubsec The node reached by the cross reference in Info\n+\n+  This is the node reached by the cross reference named @samp{Cross}.\n+\n+  While this node is specifically intended to be reached by a cross\n+reference, most cross references lead to nodes that ``belong''\n+someplace else far away in the structure of Info.  So you cannot expect\n+the footnote to have a @samp{Next}, @samp{Previous} or @samp{Up} pointing back to\n+where you came from.  In general, the @kbd{l} (el) command is the only\n+way to get back there.\n+\n+>> Type @kbd{l} to return to the node where the cross reference was.\n+\n+@node Help-Q,  , Help-Adv, Getting Started\n+@comment  node-name,  next,  previous,  up\n+@section Quitting Info\n+\n+  To get out of Info, back to what you were doing before, type @kbd{q}\n+for @dfn{Quit}.\n+\n+  This is the end of the course on using Info.  There are some other\n+commands that are meant for experienced users; they are useful, and you\n+can find them by looking in the directory node for documentation on\n+Info.  Finding them will be a good exercise in using Info in the usual\n+manner.\n+\n+>> Type @samp{d} to go to the Info directory node; then type\n+   @samp{mInfo} and Return, to get to the node about Info and\n+   see what other help is available.\n+\n+@node Advanced Info, Create an Info File, Getting Started, Top\n+@comment  node-name,  next,  previous,  up\n+@chapter Info for Experts\n+\n+This chapter describes various advanced Info commands, and how to write\n+an Info as distinct from a Texinfo file.  (However, in most cases, writing a\n+Texinfo file is better, since you can use it @emph{both} to generate an\n+Info file and to make a printed manual.  @xref{Top,, Overview of\n+Texinfo, texinfo, Texinfo: The GNU Documentation Format}.)\n+\n+@menu\n+* Expert::               Advanced Info commands: g, s, e, and 1 - 5.\n+* Add::                  Describes how to add new nodes to the hierarchy.\n+                           Also tells what nodes look like.\n+* Menus::                How to add to or create menus in Info nodes.\n+* Cross-refs::           How to add cross-references to Info nodes.\n+* Tags::                 How to make tag tables for Info files.\n+* Checking::             Checking an Info File\n+* Emacs Info Variables:: Variables modifying the behavior of Emacs Info.\n+@end menu\n+\n+@node Expert, Add,  , Advanced Info\n+@comment  node-name,  next,  previous,  up\n+@section Advanced Info Commands\n+\n+@kbd{g}, @kbd{s}, @kbd{1}, -- @kbd{9}, and @kbd{e}\n+\n+If you know a node's name, you can go there by typing @kbd{g}, the\n+name, and @key{RET}.  Thus, @kbd{gTop@key{RET}} would go to the node\n+called @samp{Top} in this file (its directory node).\n+@kbd{gExpert@key{RET}} would come back here.\n+\n+Unlike @kbd{m}, @kbd{g} does not allow the use of abbreviations.\n+\n+To go to a node in another file, you can include the filename in the\n+node name by putting it at the front, in parentheses.  Thus,\n+@kbd{g(dir)Top@key{RET}} would go to the Info Directory node, which is\n+node @samp{Top} in the file @file{dir}.\n+\n+The node name @samp{*} specifies the whole file.  So you can look at\n+all of the current file by typing @kbd{g*@key{RET}} or all of any\n+other file with @kbd{g(FILENAME)@key{RET}}.\n+\n+The @kbd{s} command allows you to search a whole file for a string.\n+It switches to the next node if and when that is necessary.  You\n+type @kbd{s} followed by the string to search for, terminated by\n+@key{RET}.  To search for the same string again, just @kbd{s} followed\n+by @key{RET} will do.  The file's nodes are scanned in the order\n+they are in in the file, which has no necessary relationship to the\n+order that they may be in in the tree structure of menus and @samp{next} pointers.\n+But normally the two orders are not very different.  In any case,\n+you can always do a @kbd{b} to find out what node you have reached, if\n+the header is not visible (this can happen, because @kbd{s} puts your\n+cursor at the occurrence of the string, not at the beginning of the\n+node).\n+\n+If you grudge the system each character of type-in it requires, you\n+might like to use the commands @kbd{1}, @kbd{2}, @kbd{3}, @kbd{4}, ...\n+@kbd{9}.  They are short for the @kbd{m} command together with an\n+argument.  @kbd{1} goes through the first item in the current node's\n+menu; @kbd{2} goes through the second item, etc.\n+\n+If you display supports multiple fonts, and you are using Emacs' Info\n+mode to read Info files, the @samp{*} for the fifth menu item is\n+underlines, and so is the @samp{*} for the ninth item; these underlines\n+make it easy to see at a glance which number to use for an item.\n+\n+On ordinary terminals, you won't have underlining.  If you need to\n+actually count items, it is better to use @kbd{m} instead, and specify\n+the name.\n+\n+The Info command @kbd{e} changes from Info mode to an ordinary\n+Emacs editing mode, so that you can edit the text of the current node.\n+Type @kbd{C-c C-c} to switch back to Info.  The @kbd{e} command is allowed\n+only if the variable @code{Info-enable-edit} is non-@code{nil}.\n+\n+@node Add, Menus, Expert, Advanced Info\n+@comment  node-name,  next,  previous,  up\n+@section Adding a new node to Info\n+\n+To add a new topic to the list in the Info directory, you must:\n+@enumerate\n+@item\n+Create some nodes, in some file, to document that topic.\n+@item\n+Put that topic in the menu in the directory.  @xref{Menus, Menu}.\n+@end enumerate\n+\n+Usually, the way to create the nodes is with Texinfo @pxref{Top,, Overview of\n+Texinfo, texinfo, Texinfo: The GNU Documentation Format}); this has the\n+advantage that you can also make a printed manual from them.  However,\n+if hyou want to edit an Info file, here is how.\n+\n+  The new node can live in an existing documentation file, or in a new\n+one.  It must have a @key{^_} character before it (invisible to the\n+user; this node has one but you cannot see it), and it ends with either\n+a @key{^_}, a @key{^L}, or the end of file.  Note: If you put in a\n+@key{^L} to end a new node, be sure that there is a @key{^_} after it\n+to start the next one, since @key{^L} cannot @emph{start} a node.\n+Also, a nicer way to make a node boundary be a page boundary as well\n+is to put a @key{^L} @emph{right after} the @key{^_}.\n+\n+  The @key{^_} starting a node must be followed by a newline or a\n+@key{^L} newline, after which comes the node's header line.  The\n+header line must give the node's name (by which Info finds it),\n+and state the names of the @samp{Next}, @samp{Previous}, and @samp{Up} nodes (if\n+there are any).  As you can see, this node's @samp{Up} node is the node\n+@samp{Top}, which points at all the documentation for Info.  The @samp{Next}\n+node is @samp{Menus}.\n+\n+  The keywords @dfn{Node}, @dfn{Previous}, @dfn{Up}, and @dfn{Next},\n+may appear in any order, anywhere in the header line, but the\n+recommended order is the one in this sentence.  Each keyword must be\n+followed by a colon, spaces and tabs, and then the appropriate name.\n+The name may be terminated with a tab, a comma, or a newline.  A space\n+does not end it; node names may contain spaces.  The case of letters\n+in the names is insignificant.\n+\n+  A node name has two forms.  A node in the current file is named by\n+what appears after the @samp{Node: } in that node's first line.  For\n+example, this node's name is @samp{Add}.  A node in another file is\n+named by @samp{(@var{filename})@var{node-within-file}}, as in\n+@samp{(info)Add} for this node.  If the file name starts with ``./'',\n+then it is relative to the current directory; otherwise, it is relative\n+starting from the standard Info file directory of your site.\n+The name @samp{(@var{filename})Top} can be abbreviated to just\n+@samp{(@var{filename})}.  By convention, the name @samp{Top} is used for\n+the ``highest'' node in any single file---the node whose @samp{Up} points\n+out of the file.  The Directory node is @file{(dir)}.  The @samp{Top} node\n+of a document file listed in the Directory should have an @samp{Up:\n+(dir)} in it.\n+\n+  The node name @kbd{*} is special: it refers to the entire file.\n+Thus, @kbd{g*} shows you the whole current file.  The use of the\n+node @kbd{*} is to make it possible to make old-fashioned,\n+unstructured files into nodes of the tree.\n+\n+  The @samp{Node:} name, in which a node states its own name, must not\n+contain a filename, since Info when searching for a node does not\n+expect one to be there.  The @samp{Next}, @samp{Previous} and @samp{Up} names may\n+contain them.  In this node, since the @samp{Up} node is in the same file,\n+it was not necessary to use one.\n+\n+  Note that the nodes in this file have a file name in the header\n+line.  The file names are ignored by Info, but they serve as comments\n+to help identify the node for the user.\n+\n+@node Menus, Cross-refs, Add, Advanced Info\n+@comment  node-name,  next,  previous,  up\n+@section How to Create Menus\n+\n+  Any node in the Info hierarchy may have a @dfn{menu}---a list of subnodes. \n+The @kbd{m} command searches the current node's menu for the topic which it\n+reads from the terminal.\n+\n+  A menu begins with a line starting with @samp{* Menu:}.  The rest of the\n+line is a comment.  After the starting line, every line that begins\n+with a @samp{* } lists a single topic.  The name of the topic--the\n+argument that the user must give to the @kbd{m} command to select this\n+topic---comes right after the star and space, and is followed by a\n+colon, spaces and tabs, and the name of the node which discusses that\n+topic.  The node name, like node names following @samp{Next}, @samp{Previous}\n+and @samp{Up}, may be terminated with a tab, comma, or newline; it may also\n+be terminated with a period.\n+\n+  If the node name and topic name are the same, then rather than\n+giving the name twice, the abbreviation @samp{* NAME::} may be used\n+(and should be used, whenever possible, as it reduces the visual\n+clutter in the menu).\n+\n+  It is considerate to choose the topic names so that they differ\n+from each other very near the beginning---this allows the user to type\n+short abbreviations.  In a long menu, it is a good idea to capitalize\n+the beginning of each item name which is the minimum acceptable\n+abbreviation for it (a long menu is more than 5 or so entries).\n+\n+  The nodes listed in a node's menu are called its ``subnodes'', and\n+it is their ``superior''.  They should each have an @samp{Up:} pointing at\n+the superior.  It is often useful to arrange all or most of the\n+subnodes in a sequence of @samp{Next} and @samp{Previous} pointers so that someone who\n+wants to see them all need not keep revisiting the Menu.\n+\n+  The Info Directory is simply the menu of the node @samp{(dir)Top}---that\n+is, node @samp{Top} in file @file{.../info/dir}.  You can put new entries\n+in that menu just like any other menu.  The Info Directory is @emph{not} the\n+same as the file directory called @file{info}.  It happens that many of\n+Info's files live on that file directory, but they do not have to; and\n+files on that directory are not automatically listed in the Info\n+Directory node.\n+\n+  Also, although the Info node graph is claimed to be a ``hierarchy'',\n+in fact it can be @emph{any} directed graph.  Shared structures and\n+pointer cycles are perfectly possible, and can be used if they are\n+appropriate to the meaning to be expressed.  There is no need for all\n+the nodes in a file to form a connected structure.  In fact, this file\n+has two connected components.  You are in one of them, which is under\n+the node @samp{Top}; the other contains the node @samp{Help} which the\n+@kbd{h} command goes to.  In fact, since there is no garbage\n+collector, nothing terrible happens if a substructure is not pointed\n+to, but such a substructure is rather useless since nobody can\n+ever find out that it exists.\n+\n+@node Cross-refs, Tags, Menus, Advanced Info\n+@comment  node-name,  next,  previous,  up\n+@section Creating Cross References\n+\n+  A cross reference can be placed anywhere in the text, unlike a menu\n+item which must go at the front of a line.  A cross reference looks\n+like a menu item except that it has @samp{*note} instead of @kbd{*}.\n+It @emph{cannot} be terminated by a @samp{)}, because @samp{)}'s are\n+so often part of node names.  If you wish to enclose a cross reference\n+in parentheses, terminate it with a period first.  Here are two\n+examples of cross references pointers:\n+\n+@example\n+*Note details: commands.  (See *note 3: Full Proof.)\n+@end example\n+\n+They are just examples.  The places they ``lead to'' do not really exist!\n+\n+@node Tags, Checking, Cross-refs, Advanced Info\n+@comment  node-name,  next,  previous,  up\n+@section Tag Tables for Info Files\n+\n+  You can speed up the access to nodes of a large Info file by giving\n+it a tag table.  Unlike the tag table for a program, the tag table for\n+an Info file lives inside the file itself and is used \n+automatically whenever Info reads in the file.\n+\n+  To make a tag table, go to a node in the file using Emacs Info mode and type\n+@kbd{M-x Info-tagify}.  Then you must use @kbd{C-x C-s} to save the\n+file.\n+\n+  Once the Info file has a tag table, you must make certain it is up\n+to date.  If, as a result of deletion of text, any node moves back\n+more than a thousand characters in the file from the position\n+recorded in the tag table, Info will no longer be able to find that\n+node.  To update the tag table, use the @code{Info-tagify} command again.\n+\n+  An Info file tag table appears at the end of the file and looks like\n+this:\n+\n+@example\n+^_\f\n+Tag Table:\n+File: info, Node: Cross-refs^?21419\n+File: info,  Node: Tags^?22145\n+^_\n+End Tag Table\n+@end example\n+\n+@noindent\n+Note that it contains one line per node, and this line contains\n+the beginning of the node's header (ending just after the node name),\n+a Delete character, and the character position in the file of the\n+beginning of the node.\n+\n+@node Checking, Emacs Info Variables, Tags, Advanced Info\n+@comment  node-name,  next,  previous,  up\n+@section Checking an Info File\n+\n+  When creating an Info file, it is easy to forget the name of a node\n+when you are making a pointer to it from another node.  If you put in\n+the wrong name for a node, this is not detected until someone\n+tries to go through the pointer using Info.  Verification of the Info\n+file is an automatic process which checks all pointers to nodes and\n+reports any pointers which are invalid.  Every @samp{Next}, @samp{Previous}, and\n+@samp{Up} is checked, as is every menu item and every cross reference.  In\n+addition, any @samp{Next} which does not have a @samp{Previous} pointing back is\n+reported.  Only pointers within the file are checked, because checking\n+pointers to other files would be terribly slow.  But those are usually\n+few.\n+\n+  To check an Info file, do @kbd{M-x Info-validate} while looking at\n+any node of the file with Emacs Info mode.\n+\n+@node Emacs Info Variables, , Checking, Advanced Info\n+@section Emacs Info-mode Variables\n+\n+The following variables may modify the behaviour of Info-mode in Emacs;\n+you may wish to set one or several of these variables interactively, or\n+in your @file{~/.emacs} init file.  @xref{Examining, Examining and Setting\n+Variables, Examining and Setting Variables, emacs, The GNU Emacs\n+Manual}.\n+\n+@vtable @code\n+@item Info-enable-edit\n+Set to @code{nil}, disables the @samp{e} (@code{Info-edit}) command.  A\n+non-@code{nil} value enables it.  @xref{Add, Edit}.\n+\n+@item Info-enable-active-nodes\n+When set to a non-@code{nil} value, allows Info to execute Lisp code\n+associated with nodes.  The Lisp code is executed when the node is\n+selected.\n+\n+@item Info-directory-list\n+The list of directories to search for Info files.  Each element is a\n+string (directory name) or @code{nil} (try default directory).\n+\n+@item Info-directory\n+The standard directory for Info documentation files.  Only used when the\n+function @code{Info-directory} is called.\n+@end vtable\n+\n+@node Create an Info File,  , Advanced Info, Top\n+@comment  node-name,  next,  previous,  up\n+@chapter Creating an Info File from a Makeinfo file\n+\n+@code{makeinfo} is a utility that converts a Texinfo file into an Info\n+file; @code{texinfo-format-region} and @code{texinfo-format-buffer} are\n+GNU Emacs functions that do the same.\n+\n+@xref{Create an Info File, , Creating an Info File, texinfo, the Texinfo\n+Manual}, to learn how to create an Info file from a Texinfo file.\n+\n+@xref{Top,, Overview of Texinfo, texinfo, Texinfo: The GNU Documentation\n+Format}, to learn how to write a Texinfo file.\n+\n+@bye"}, {"sha": "8a3fe802392e32ca9446dd0d59b73b3d5f339e22", "filename": "texinfo/doc/macro.texi", "status": "added", "additions": 177, "deletions": 0, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Fmacro.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Fmacro.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fdoc%2Fmacro.texi?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,177 @@\n+@c This file is included in makeinfo.texi.\n+@c\n+@ifinfo\n+@comment Here are some useful examples of the macro facility.\n+\n+@c Simply insert the right version of the texinfo name.\n+@macro texinfo{}\n+TeXinfo\n+@end macro\n+\n+@macro dfn{text}\n+@dfn{\\text\\}\n+@cpindex \\text\\\n+@end macro\n+\n+@c Define a macro which expands to a pretty version of the name of the\n+@c Makeinfo program.\n+@macro makeinfo{}\n+@code{Makeinfo}\n+@end macro\n+\n+@c Define a macro which is used to define other macros.  This one makes\n+@c a macro which creates a node and gives it a sectioning command.  Note\n+@c that the created macro uses the original definition within the\n+@c expansion text.  This takes advantage of the non-recursion feature of\n+@c macro execution.\n+@macro node_define{orig-name}\n+@macro \\orig-name\\{title}\n+@node \\title\\\n+@\\orig-name\\ \\title\\\n+@end macro\n+@end macro\n+\n+@c Now actually define a new set of sectioning commands.\n+@node_define {chapter}\n+@node_define {section}\n+@node_define {subsection}\n+@end ifinfo\n+\n+@chapter The Macro Facility\n+\n+This chapter describes the new macro facility.\n+\n+A @dfn{macro} is a command that you define in terms of other commands.\n+It doesn't exist as a @texinfo{} command until you define it as part of\n+the input file to @makeinfo{}.  Once the command exists, it behaves much\n+as any other @texinfo{} command.  Macros are a useful way to ease the\n+details and tedium of writing a `correct' info file.  The following\n+sections explain how to write and invoke macros.\n+\n+@menu\n+* How to Use Macros in @texinfo{}::\n+                        How to use the macro facility.\n+\n+* Using Macros Recursively::\n+                        How to write a macro which does (or doesn't) recurse.\n+\n+* Using @texinfo{} Macros As Arguments::\n+                        Passing a macro as an argument.\n+@end menu\n+\n+@section How to Use Macros in @texinfo{}\n+\n+Using macros in @texinfo{} is easy.  First you define the macro.  After\n+that, the macro command is available as a normal @texinfo{} command.\n+Here is what a definition looks like:\n+\n+@example\n+@@macro @var{name}@{@var{arg1}, @var{@dots{}} @var{argn}@}\n+@var{@texinfo{} commands@dots{}}\n+@@end macro\n+@end example\n+\n+The arguments that you specify that the macro takes are expanded with\n+the actual parameters used when calling the macro if they are seen\n+surrounded by backslashes.  For example, here is a definition of\n+@code{@@codeitem}, a macro which can be used wherever @code{@@item} can\n+be used, but which surrounds its argument with @code{@@code@{@dots{}@}}.\n+\n+@example\n+@@macro codeitem@{item@}\n+@@item @@code@{\\item\\@}\n+@@end macro\n+@end example\n+\n+When the macro is expanded, all of the text between the @code{@@macro}\n+and @code{@@end macro} is inserted into the document at the expansion\n+point, with the actual parameters substituted for the named parameters.\n+So, a call to the above macro might look like:\n+\n+@example\n+@@codeitem@{Foo@}\n+@end example\n+\n+and @makeinfo{} would execute the following code:\n+\n+@example\n+@@item @@code@{Foo@}\n+@end example\n+\n+A special case is made for macros which only take a single argument, and\n+which are invoked without any brace characters (i.e.,\n+@samp{@{}@dots{}@samp{@}}) surrounding an argument; the rest of the line\n+is supplied as is as the sole argument to the macro.  This special case\n+allows one to redefine some standard @texinfo{} commands without\n+modifying the input file.  Along with the non-recursive action of macro\n+invocation, one can easily redefine the sectioning commands to also\n+provide index entries:\n+\n+@example\n+@@macro chapter@{name@}\n+@@chapter \\name\\\n+@@findex \\name\\\n+@@end macro\n+@end example\n+\n+Thus, the text:\n+\n+@example\n+@@chapter strlen\n+@end example\n+\n+will expand to:\n+\n+@example\n+@@chapter strlen\n+@@findex strlen\n+@end example\n+\n+@section Using Macros Recursively\n+\n+Normally, while a particular macro is executing, any call to that macro\n+will be seen as a call to a builtin @texinfo{} command.  This allows one\n+to redefine a builtin @texinfo{} command as a macro, and then use that\n+command within the definition of the macro itself.  For example, one\n+might wish to make sure that whereever a term was defined with\n+@code{@@dfn@{@dots{}@}}, the location of the definition would appear\n+in the concept index for the manual.  Here is a macro which redefines\n+@code{@@dfn} to do just that:\n+\n+@example\n+@@macro dfn@{text@}\n+@@dfn@{\\text\\@}\n+@@cpindex \\text\\\n+@@end macro\n+@end example\n+\n+Note that we used the builtin @texinfo{} command @code{@@dfn} within our\n+overriding macro definition.\n+\n+This behaviour itself can be overridden for macro execution by writing a\n+special @dfn{macro control command} in the definition of the macro.  The\n+command is considered special because it doesn't affect the output text\n+directly, rather, it affects the way in which the macro is defined.  One\n+such special command is @code{@@allow-recursion}.\n+\n+@example\n+@@macro silly@{arg@}\n+@@allow-recursion\n+\\arg\\\n+@@end macro\n+@end example\n+\n+Now @code{@@silly} is a macro that can be used within a call to itself:\n+\n+@example\n+This text @@silly@{@@silly@{some text@}@} is ``some text''.\n+@end example\n+\n+@section Using @texinfo{} Macros As Arguments\n+\n+@printindex cp\n+How to use @texinfo{} macros as arguments to other @texinfo{} macros.\n+\n+@bye\n+\n+"}, {"sha": "0c69f8839c1804ec661410c06a88f5f0b3b2b662", "filename": "texinfo/doc/texinfo.tex", "status": "added", "additions": 4935, "deletions": 0, "changes": 4935, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Ftexinfo.tex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Ftexinfo.tex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fdoc%2Ftexinfo.tex?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d"}, {"sha": "46a87ea06ab77dbef45d4bdd5a656bc5a5fc5c37", "filename": "texinfo/doc/texinfo.texi", "status": "added", "additions": 17289, "deletions": 0, "changes": 17289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Ftexinfo.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Ftexinfo.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fdoc%2Ftexinfo.texi?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d"}, {"sha": "cee6b084efab54ef360891de2680e64dcb7f8f41", "filename": "texinfo/doc/userdoc.texi", "status": "added", "additions": 1270, "deletions": 0, "changes": 1270, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Fuserdoc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fdoc%2Fuserdoc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fdoc%2Fuserdoc.texi?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,1270 @@\n+@c This file is meant to be included in any arbitrary piece of\n+@c documentation that wishes to describe the info program.  Some day\n+@c info-stnd.texi should probably use this file instead of duplicating\n+@c its contents. \n+@c\n+@c This file documents the use of the standalone GNU Info program,\n+@c versions 2.7 and later. \n+\n+@ifclear InfoProgVer\n+@set InfoProgVer 2.11\n+@end ifclear\n+@synindex vr cp\n+@synindex fn cp\n+@synindex ky cp\n+\n+@heading What is Info?\n+\n+This text documents the use of the GNU Info program, version\n+@value{InfoProgVer}.\n+\n+@dfn{Info} is a program which is used to view info files on an ASCII\n+terminal. @dfn{info files} are the result of processing texinfo files\n+with the program @code{makeinfo} or with  the Emacs command @code{M-x\n+texinfo-format-buffer}.  Finally, @dfn{texinfo} is a documentation\n+language which allows a printed manual and online documentation (an info\n+file) to be produced from a single source file.\n+\n+@menu\n+* Options::                 Options you can pass on the command line.\n+* Cursor Commands::         Commands which move the cursor within a node.\n+* Scrolling Commands::      Commands for moving the node around in a window.\n+* Node Commands::           Commands for selecting a new node.\n+* Searching Commands::      Commands for searching an info file.\n+* Xref Commands::           Commands for selecting cross references.\n+* Window Commands::         Commands which manipulate multiple windows.\n+* Printing Nodes::          How to print out the contents of a node.\n+* Miscellaneous Commands::  A few commands that defy categories.\n+* Variables::               How to change the default behaviour of Info.\n+@ifset NOTSET\n+* Info for Sys Admins::     How to setup Info.  Using special options.\n+@end ifset\n+@ifset STANDALONE\n+* GNU Info Global Index::   Global index containing keystrokes, command names,\n+                            variable names, and general concepts.\n+@end ifset\n+@end menu\n+\n+@node Options\n+@chapter Command Line Options\n+@cindex command line options\n+@cindex arguments, command line\n+\n+GNU Info accepts several options to control the initial node being\n+viewed, and to specify which directories to search for info files.  Here\n+is a template showing an invocation of GNU Info from the shell:\n+\n+@example\n+info [--@var{option-name} @var{option-value}] @var{menu-item}@dots{}\n+@end example\n+\n+The following @var{option-names} are available when invoking Info from\n+the shell:\n+\n+@table @code\n+@cindex directory path\n+@item --directory @var{directory-path}\n+@itemx -d @var{directory-path}\n+Adds @var{directory-path} to the list of directory paths searched when\n+Info needs to find a file.  You may issue @code{--directory} multiple\n+times; once for each directory which contains info files.\n+Alternatively, you may specify a value for the environment variable\n+@code{INFOPATH}; if @code{--directory} is not given, the value of\n+@code{INFOPATH} is used.  The value of @code{INFOPATH} is a colon\n+separated list of directory names.  If you do not supply\n+@code{INFOPATH} or @code{--directory-path} a default path is used.\n+\n+@item --file @var{filename}\n+@itemx -f @var{filename}\n+@cindex info file, selecting\n+Specifies a particular info file to visit.  Instead of visiting the file\n+@code{dir}, Info will start with @code{(@var{filename})Top} as the first\n+file and node.\n+\n+@item --node @var{nodename}\n+@itemx -n @var{nodename}\n+@cindex node, selecting\n+Specifies a particular node to visit in the initial file loaded.  This\n+is especially useful in conjunction with @code{--file}@footnote{Of\n+course, you can specify both the file and node in a @code{--node}\n+command; but don't forget to escape the open and close parentheses from\n+the shell as in: @code{info --node '(emacs)Buffers'}}.  You may specify\n+@code{--node} multiple times; for an interactive Info, each\n+@var{nodename} is visited in its own window, for a non-interactive Info\n+(such as when @code{--output} is given) each @var{nodename} is processed\n+sequentially.\n+\n+@item --output @var{filename}\n+@itemx -o @var{filename}\n+@cindex file, outputting to\n+@cindex outputting to a file\n+Specify @var{filename} as the name of a file to output to.  Each node\n+that Info visits will be output to @var{filename} instead of\n+interactively viewed.  A value of @code{-} for @var{filename} specifies\n+the standard output.\n+\n+@item --subnodes\n+@cindex @code{--subnodes}, command line option\n+This option only has meaning when given in conjunction with\n+@code{--output}.  It means to recursively output the nodes appearing in\n+the menus of each node being output.  Menu items which resolve to\n+external info files are not output, and neither are menu items which are\n+members of an index.  Each node is only output once.\n+\n+@item --help\n+@itemx -h\n+Produces a relatively brief description of the available Info options.\n+\n+@item --version\n+@cindex version information\n+Prints the version information of Info and exits.\n+\n+@item @var{menu-item}\n+@cindex menu, following\n+Remaining arguments to Info are treated as the names of menu items.  The\n+first argument would be a menu item in the initial node visited, while\n+the second argument would be a menu item in the first argument's node.\n+You can easily move to the node of your choice by specifying the menu\n+names which describe the path to that node.  For example,\n+\n+@example\n+info emacs buffers\n+@end example\n+\n+first selects the menu item @samp{Emacs} in the node @samp{(dir)Top},\n+and then selects the menu item @samp{Buffers} in the node\n+@samp{(emacs)Top}.\n+\n+@end table\n+\n+@node Cursor Commands\n+@chapter Moving the Cursor\n+@cindex cursor, moving\n+Many people find that reading screens of text page by page is made\n+easier when one is able to indicate particular pieces of text with some\n+kind of pointing device.  Since this is the case, GNU Info (both the\n+Emacs and standalone versions) have several commands which allow you to\n+move the cursor about the screen.  The notation used in this manual to\n+describe keystrokes is identical to the notation used within the Emacs\n+manual, and the GNU Readline manual.  @xref{Characters, , Character\n+Conventions, emacs, the GNU Emacs Manual}, if you are unfamilar with the\n+notation.\n+\n+The following table lists the basic cursor movement commands in Info.\n+Each entry consists of the key sequence you should type to execute the\n+cursor movement, the @code{M-x}@footnote{@code{M-x} is also a command; it\n+invokes @code{execute-extended-command}.  @xref{M-x, , Executing an\n+extended command, emacs, the GNU Emacs Manual}, for more detailed\n+information.} command name (displayed in parentheses), and a short\n+description of what the command does.  All of the cursor motion commands\n+can take an @dfn{numeric} argument (@pxref{Miscellaneous Commands,\n+@code{universal-argument}}), to find out how to supply them.  With a\n+numeric argument, the motion commands are simply executed that\n+many times; for example, a numeric argument of 4 given to\n+@code{next-line} causes the cursor to move down 4 lines.  With a\n+negative numeric argument, the motion is reversed; an argument of -4\n+given to the @code{next-line} command would cause the cursor to move\n+@emph{up} 4 lines.\n+\n+@table @asis\n+@item @code{C-n} (@code{next-line})\n+@kindex C-n\n+@findex next-line\n+Moves the cursor down to the next line.\n+\n+@item @code{C-p} (@code{prev-line})\n+@kindex C-p\n+@findex prev-line\n+Move the cursor up to the previous line.\n+\n+@item @code{C-a} (@code{beginning-of-line})\n+@kindex C-a, in Info windows\n+@findex beginning-of-line\n+Move the cursor to the start of the current line.\n+\n+@item @code{C-e} (@code{end-of-line})\n+@kindex C-e, in Info windows\n+@findex end-of-line\n+Moves the cursor to the end of the current line.\n+\n+@item @code{C-f} (@code{forward-char})\n+@kindex C-f, in Info windows\n+@findex forward-char\n+Move the cursor forward a character.\n+\n+@item @code{C-b} (@code{backward-char})\n+@kindex C-b, in Info windows\n+@findex backward-char\n+Move the cursor backward a character.\n+\n+@item @code{M-f} (@code{forward-word})\n+@kindex M-f, in Info windows\n+@findex forward-word\n+Moves the cursor forward a word.\n+\n+@item @code{M-b} (@code{backward-word})\n+@kindex M-b, in Info winows\n+@findex backward-word\n+Moves the cursor backward a word.\n+\n+@item @code{M-<} (@code{beginning-of-node})\n+@itemx @code{b}\n+@kindex b, in Info winows\n+@kindex M-<\n+@findex beginning-of-node\n+Moves the cursor to the start of the current node.\n+\n+@item @code{M->} (@code{end-of-node})\n+@kindex M->\n+@findex end-of-node\n+Moves the cursor to the end of the current node.\n+\n+@item @code{M-r} (@code{move-to-window-line})\n+@kindex M-r\n+@findex move-to-window-line\n+Moves the cursor to a specific line of the window.  Without a numeric\n+argument, @code{M-r} moves the cursor to the start of the line in the\n+center of the window.  With a numeric argument of @var{n}, @code{M-r}\n+moves the cursor to the start of the @var{n}th line in the window.\n+@end table\n+\n+@node Scrolling Commands\n+@chapter Moving Text Within a Window\n+@cindex scrolling\n+\n+Sometimes you are looking at a screenful of text, and only part of the\n+current paragraph you are reading is visible on the screen.  The\n+commands detailed in this section are used to shift which part of the\n+current node is visible on the screen.\n+\n+@table @asis\n+@item @code{SPC} (@code{scroll-forward})\n+@itemx @code{C-v}\n+@kindex SPC, in Info windows\n+@kindex C-v\n+@findex scroll-forward\n+Shift the text in this window up.  That is, show more of the node which\n+is currently below the bottom of the window.  With a numeric argument,\n+show that many more lines at the bottom of the window; a numeric\n+argument of 4 would shift all of the text in the window up 4 lines\n+(discarding the top 4 lines), and show you four new lines at the bottom\n+of the window.  Without a numeric argument, @key{SPC} takes the bottom\n+two lines of the window and places them at the top of the window,\n+redisplaying almost a completely new screenful of lines.\n+\n+@item @code{DEL} (@code{scroll-backward})\n+@itemx @code{M-v}\n+@kindex DEL, in Info windows\n+@kindex M-v\n+@findex scroll-backward\n+Shift the text in this window down.  The inverse of\n+@code{scroll-forward}.\n+\n+@end table\n+\n+@cindex scrolling through node structure\n+The @code{scroll-forward} and @code{scroll-backward} commands can also\n+move forward and backward through the node structure of the file.  If\n+you press @key{SPC} while viewing the end of a node, or @key{DEL} while\n+viewing the beginning of a node, what happens is controlled by the\n+variable @code{scroll-behaviour}.  @xref{Variables,\n+@code{scroll-behaviour}}, for more information.\n+\n+@table @asis\n+@item @code{C-l} (@code{redraw-display})\n+@kindex C-l\n+@findex redraw-display\n+Redraw the display from scratch, or shift the line containing the cursor\n+to a specified location.  With no numeric argument, @samp{C-l} clears\n+the screen, and then redraws its entire contents.  Given a numeric\n+argument of @var{n}, the line containing the cursor is shifted so that\n+it is on the @var{n}th line of the window.\n+\n+@item @code{C-x w} (@code{toggle-wrap})\n+@kindex C-w\n+@findex toggle-wrap\n+Toggles the state of line wrapping in the current window.  Normally,\n+lines which are longer than the screen width @dfn{wrap}, i.e., they are\n+continued on the next line.  Lines which wrap have a @samp{\\} appearing\n+in the rightmost column of the screen.  You can cause such lines to be\n+terminated at the rightmost column by changing the state of line\n+wrapping in the window with @code{C-x w}.  When a line which needs more\n+space than one screen width to display is displayed, a @samp{$} appears\n+in the rightmost column of the screen, and the remainder of the line is\n+invisible.\n+@end table\n+\n+@node Node Commands\n+@chapter Selecting a New Node\n+@cindex nodes, selection of\n+\n+This section details the numerous Info commands which select a new node\n+to view in the current window.\n+\n+The most basic node commands are @samp{n}, @samp{p}, @samp{u}, and\n+@samp{l}.\n+\n+When you are viewing a node, the top line of the node contains some Info\n+@dfn{pointers} which describe where the next, previous, and up nodes\n+are.  Info uses this line to move about the node structure of the file\n+when you use the following commands:\n+\n+@table @asis\n+@item @code{n} (@code{next-node})\n+@kindex n\n+@findex next-node\n+Selects the `Next' node.  \n+\n+@item @code{p} (@code{prev-node})\n+@kindex p\n+@findex prev-node\n+Selects the `Prev' node.\n+\n+@item @code{u} (@code{up-node})\n+@kindex u\n+@findex up-node\n+Selects the `Up' node.\n+@end table\n+\n+You can easily select a node that you have already viewed in this window\n+by using the @samp{l} command -- this name stands for \"last\", and\n+actually moves through the list of already visited nodes for this\n+window.  @samp{l} with a negative numeric argument moves forward through\n+the history of nodes for this window, so you can quickly step between\n+two adjacent (in viewing history) nodes.\n+\n+@table @asis\n+@item @code{l} (@code{history-node})\n+@kindex l\n+@findex history-node\n+Selects the most recently selected node in this window.\n+@end table\n+\n+Two additional commands make it easy to select the most commonly\n+selected nodes; they are @samp{t} and @samp{d}.\n+\n+@table @asis\n+@item @code{t} (@code{top-node})\n+@kindex t\n+@findex top-node\n+Selects the node @samp{Top} in the current info file.\n+\n+@item @code{d} (@code{dir-node})\n+@kindex d\n+@findex dir-node\n+Selects the directory node (i.e., the node @samp{(dir)}).\n+@end table\n+\n+Here are some other commands which immediately result in the selection\n+of a different node in the current window:\n+\n+@table @asis\n+@item @code{<} (@code{first-node})\n+@kindex <\n+@findex first-node\n+Selects the first node which appears in this file.  This node is most\n+often @samp{Top}, but it doesn't have to be.\n+\n+@item @code{>} (@code{last-node})\n+@kindex >\n+@findex last-node\n+Selects the last node which appears in this file.\n+\n+@item @code{]} (@code{global-next-node})\n+@kindex ]\n+@findex global-next-node\n+Moves forward or down through node structure.  If the node that you are\n+currently viewing has a @samp{Next} pointer, that node is selected.\n+Otherwise, if this node has a menu, the first menu item is selected.  If\n+there is no @samp{Next} and no menu, the same process is tried with the\n+@samp{Up} node of this node.\n+\n+@item @code{[} (@code{global-prev-node})\n+@kindex [\n+@findex global-prev-node\n+Moves backward or up through node structure.  If the node that you are\n+currently viewing has a @samp{Prev} pointer, that node is selected.\n+Otherwise, if the node has an @samp{Up} pointer, that node is selected,\n+and if it has a menu, the last item in the menu is selected.\n+@end table\n+\n+You can get the same behaviour as @code{global-next-node} and\n+@code{global-prev-node} while simply scrolling through the file with\n+@key{SPC} and @key{DEL}; @xref{Variables, @code{scroll-behaviour}}, for\n+more information.\n+\n+@table @asis\n+@item @code{g} (@code{goto-node})\n+@kindex g\n+@findex goto-node\n+Reads the name of a node and selects it.  No completion is done while\n+reading the node name, since the desired node may reside in a separate\n+file.  The node must be typed exactly as it appears in the info file.  A\n+file name may be included as with any node specification, for example\n+\n+@example\n+@code{g(emacs)Buffers}\n+@end example\n+\n+finds the node @samp{Buffers} in the info file @file{emacs}.\n+\n+@item @code{C-x k} (@code{kill-node})\n+@kindex C-x k\n+@findex kill-node\n+Kills a node.  The node name is prompted for in the echo area, with a\n+default of the current node.  @dfn{Killing} a node means that Info tries\n+hard to forget about it, removing it from the list of history nodes kept\n+for the window where that node is found.  Another node is selected in\n+the window which contained the killed node.\n+\n+@item @code{C-x C-f} (@code{view-file})\n+@kindex C-x C-f\n+@findex view-file\n+Reads the name of a file and selects the entire file.  The command\n+@example\n+@code{C-x C-f @var{filename}}\n+@end example\n+is equivalent to typing\n+@example\n+@code{g(@var{filename})*}\n+@end example\n+\n+@item @code{C-x C-b} (@code{list-visited-nodes})\n+@kindex C-x C-b\n+@findex list-visited-nodes\n+Makes a window containing a menu of all of the currently visited nodes.\n+This window becomes the selected window, and you may use the standard\n+Info commands within it.\n+\n+@item @code{C-x b} (@code{select-visited-node})\n+@kindex C-x b\n+@findex select-visited-node\n+Selects a node which has been previously visited in a visible window.\n+This is similar to @samp{C-x C-b} followed by @samp{m}, but no window is\n+created.\n+@end table\n+\n+@node Searching Commands\n+@chapter Searching an Info File\n+@cindex searching\n+\n+GNU Info allows you to search for a sequence of characters throughout an\n+entire info file, search through the indices of an info file, or find\n+areas within an info file which discuss a particular topic.\n+\n+@table @asis\n+@item @code{s} (@code{search})\n+@kindex s\n+@findex search\n+Reads a string in the echo area and searches for it.\n+\n+@item @code{C-s} (@code{isearch-forward})\n+@kindex C-s\n+@findex isearch-forward\n+Interactively searches forward through the info file for a string as you\n+type it.\n+\n+@item @code{C-r} (@code{isearch-backward})\n+@kindex C-r\n+@findex isearch-backward\n+Interactively searches backward through the info file for a string as\n+you type it.\n+\n+@item @code{i} (@code{index-search})\n+@kindex i\n+@findex index-search\n+Looks up a string in the indices for this info file, and selects a node\n+where the found index entry points to.\n+\n+@item @code{,} (@code{next-index-match})\n+@kindex ,\n+@findex next-index-match\n+Moves to the node containing the next matching index item from the last\n+@samp{i} command.\n+@end table\n+\n+The most basic searching command is @samp{s} (@code{search}).  The\n+@samp{s} command prompts you for a string in the echo area, and then\n+searches the remainder of the info file for an ocurrence of that string.\n+If the string is found, the node containing it is selected, and the\n+cursor is left positioned at the start of the found string.  Subsequent\n+@samp{s} commands show you the default search string within @samp{[} and\n+@samp{]}; pressing @key{RET} instead of typing a new string will use the\n+default search string.\n+\n+@dfn{Incremental searching} is similar to basic searching, but the\n+string is looked up while you are typing it, instead of waiting until\n+the entire search string has been specified.\n+\n+@node Xref Commands\n+@chapter Selecting Cross References\n+\n+We have already discussed the @samp{Next}, @samp{Prev}, and @samp{Up}\n+pointers which appear at the top of a node.  In addition to these\n+pointers, a node may contain other pointers which refer you to a\n+different node, perhaps in another info file.  Such pointers are called\n+@dfn{cross references}, or @dfn{xrefs} for short.\n+\n+@menu\n+* Parts of an Xref::    What a cross reference is made of.\n+* Selecting Xrefs::     Commands for selecting menu or note items.\n+@end menu\n+\n+@node Parts of an Xref\n+@section Parts of an Xref\n+\n+Cross references have two major parts: the first part is called the\n+@dfn{label}; it is the name that you can use to refer to the cross\n+reference, and the second is the @dfn{target}; it is the full name of\n+the node that the cross reference points to.\n+\n+The target is separated from the label by a colon @samp{:}; first the\n+label appears, and then the target.  For example, in the sample menu\n+cross reference below, the single colon separates the label from the\n+target.\n+\n+@example\n+* Foo Label: Foo Target.        More information about Foo.\n+@end example\n+\n+Note the @samp{.} which ends the name of the target.  The @samp{.} is\n+not part of the target; it serves only to let Info know where the target\n+name ends.\n+\n+A shorthand way of specifying references allows two adjacent colons to\n+stand for a target name which is the same as the label name:\n+\n+@example\n+* Foo Commands::                Commands pertaining to Foo.\n+@end example\n+\n+In the above example, the name of the target is the same as the name of\n+the label, in this case @code{Foo Commands}.\n+\n+You will normally see two types of cross references while viewing nodes:\n+@dfn{menu} references, and @dfn{note} references.  Menu references\n+appear within a node's menu; they begin with a @samp{*} at the beginning\n+of a line, and continue with a label, a target, and a comment which\n+describes what the contents of the node pointed to contains.\n+\n+Note references appear within the body of the node text; they begin with\n+@code{*Note}, and continue with a label and a target.\n+\n+Like @samp{Next}, @samp{Prev} and @samp{Up} pointers, cross references\n+can point to any valid node.  They are used to refer you to a place\n+where more detailed information can be found on a particular subject.\n+Here is a cross reference which points to a node within the Texinfo\n+documentation:  @xref{xref, , Writing an Xref, texinfo, the Texinfo\n+Manual}, for more information on creating your own texinfo cross\n+references.\n+\n+@node Selecting Xrefs\n+@section Selecting Xrefs\n+\n+The following table lists the Info commands which operate on menu items.\n+\n+@table @asis\n+@item @code{1} (@code{menu-digit})\n+@itemx @code{2} @dots{} @code{9}\n+@cindex 1 @dots{} 9, in Info windows\n+@kindex 1 @dots{} 9, in Info windows\n+@findex menu-digit\n+Within an Info window, pressing a single digit, (such as @samp{1}),\n+selects that menu item, and places its node in the current window.\n+For convenience, there is one exception; pressing @samp{0} selects the\n+@emph{last} item in the node's menu.\n+\n+@item @code{0} (@code{last-menu-item})\n+@kindex 0, in Info windows\n+@findex last-menu-item\n+Select the last item in the current node's menu.\n+\n+@item @code{m} (@code{menu-item})\n+@kindex m\n+@findex menu-item\n+Reads the name of a menu item in the echo area and selects its node.\n+Completion is available while reading the menu label.\n+\n+@item @code{M-x find-menu}\n+@findex find-menu\n+Moves the cursor to the start of this node's menu.\n+@end table\n+\n+This table lists the Info commands which operate on note cross references.\n+\n+@table @asis\n+@item @code{f} (@code{xref-item})\n+@itemx @code{r}\n+@kindex f\n+@kindex r\n+@findex xref-item\n+Reads the name of a note cross reference in the echo area and selects\n+its node.  Completion is available while reading the cross reference\n+label.\n+@end table\n+\n+Finally, the next few commands operate on menu or note references alike:\n+\n+@table @asis\n+@item @code{TAB} (@code{move-to-next-xref})\n+@kindex TAB, in Info windows\n+@findex move-to-next-xref\n+Moves the cursor to the start of the next nearest menu item or note\n+reference in this node.  You can then use @key{RET}\n+(@code{select-reference-this-line} to select the menu or note reference.\n+\n+@item @code{M-TAB} (@code{move-to-prev-xref})\n+@kindex M-TAB, in Info windows\n+@findex move-to-prev-xref\n+Moves the cursor the start of the nearest previous menu item or note\n+reference in this node.\n+\n+@item @code{RET} (@code{select-reference-this-line})\n+@kindex RET, in Info windows\n+@findex select-reference-this-line\n+Selects the menu item or note reference appearing on this line.\n+@end table\n+\n+@node Window Commands\n+@chapter Manipulating Multiple Windows\n+@cindex windows, manipulating\n+\n+A @dfn{window} is a place to show the text of a node.  Windows have a\n+view area where the text of the node is displayed, and an associated\n+@dfn{mode line}, which briefly describes the node being viewed.\n+\n+GNU Info supports multiple windows appearing in a single screen; each\n+window is separated from the next by its modeline.  At any time, there\n+is only one @dfn{active} window, that is, the window in which the cursor\n+appears.  There are commands available for creating windows, changing\n+the size of windows, selecting which window is active, and for deleting\n+windows.\n+\n+@menu\n+* The Mode Line::       What appears in the mode line?\n+* Basic Windows::       Manipulating windows in Info.\n+* The Echo Area::       Used for displaying errors and reading input.\n+@end menu\n+\n+@node The Mode Line\n+@section The Mode Line\n+\n+A @dfn{mode line} is a line of inverse video which appears at the bottom\n+of an info window.  It describes the contents of the window just above\n+it; this information includes the name of the file and node appearing in\n+that window, the number of screen lines it takes to display the node,\n+and the percentage of text that is above the top of the window.  It can\n+also tell you if the indirect tags table for this info file needs to be\n+updated, and whether or not the info file was compressed when stored on\n+disk.\n+\n+Here is a sample mode line for a window containing an uncompressed file\n+named @file{dir}, showing the node @samp{Top}.\n+\n+@example\n+-----Info: (dir)Top, 40 lines --Top---------------------------------------\n+            ^^   ^   ^^^        ^^\n+          (file)Node #lines    where\n+@end example\n+\n+When a node comes from a file which is compressed on disk, this is\n+indicated in the mode line with two small @samp{z}'s.  In addition, if\n+the info file containing the node has been split into subfiles, the name\n+of the subfile containing the node appears in the modeline as well:\n+\n+@example\n+--zz-Info: (emacs)Top, 291 lines --Top-- Subfile: emacs-1.Z---------------\n+@end example \n+\n+When Info makes a node internally, such that there is no corresponding\n+info file on disk, the name of the node is surrounded by asterisks\n+(@samp{*}).  The name itself tells you what the contents of the window\n+are; the sample mode line below shows an internally constructed node\n+showing possible completions:\n+\n+@example\n+-----Info: *Completions*, 7 lines --All-----------------------------------\n+@end example\n+\n+@node Basic Windows\n+@section Window Commands\n+\n+It can be convenient to view more than one node at a time.  To allow\n+this, Info can display more than one @dfn{window}.  Each window has its\n+own mode line (@pxref{The Mode Line}) and history of nodes viewed in that\n+window (@pxref{Node Commands, , @code{history-node}}).\n+\n+@table @asis\n+@item @code{C-x o} (@code{next-window})\n+@cindex windows, selecting\n+@kindex C-x o\n+@findex next-window\n+Selects the next window on the screen.  Note that the echo area can only be\n+selected if it is already in use, and you have left it temporarily.\n+Normally, @samp{C-x o} simply moves the cursor into the next window on\n+the screen, or if you are already within the last window, into the first\n+window on the screen.  Given a numeric argument, @samp{C-x o} moves over\n+that many windows.  A negative argument causes @samp{C-x o} to select\n+the previous window on the screen.\n+\n+@item @code{M-x prev-window}\n+@findex prev-window\n+Selects the previous window on the screen.  This is identical to\n+@samp{C-x o} with a negative argument.\n+\n+@item @code{C-x 2} (@code{split-window})\n+@cindex windows, creating\n+@kindex C-x 2\n+@findex split-window\n+Splits the current window into two windows, both showing the same node.\n+Each window is one half the size of the original window, and the cursor\n+remains in the original window.  The variable @code{automatic-tiling}\n+can cause all of the windows on the screen to be resized for you\n+automatically, please @pxref{Variables, , automatic-tiling} for more\n+information.\n+\n+@item @code{C-x 0} (@code{delete-window})\n+@cindex windows, deleting\n+@kindex C-x 0\n+@findex delete-window\n+Deletes the current window from the screen.  If you have made too many\n+windows and your screen appears cluttered, this is the way to get rid of\n+some of them.\n+\n+@item @code{C-x 1} (@code{keep-one-window})\n+@kindex C-x 1\n+@findex keep-one-window\n+Deletes all of the windows excepting the current one.\n+\n+@item @code{ESC C-v} (@code{scroll-other-window})\n+@kindex ESC C-v, in Info windows\n+@findex scroll-other-window\n+Scrolls the other window, in the same fashion that @samp{C-v} might\n+scroll the current window.  Given a negative argument, the \"other\"\n+window is scrolled backward.\n+\n+@item @code{C-x ^} (@code{grow-window})\n+@kindex C-x ^\n+@findex grow-window\n+Grows (or shrinks) the current window.  Given a numeric argument, grows\n+the current window that many lines; with a negative numeric argument,\n+the window is shrunk instead.\n+\n+@item @code{C-x t} (@code{tile-windows})\n+@cindex tiling\n+@kindex C-x t\n+@findex tile-windows\n+Divides the available screen space among all of the visible windows.\n+Each window is given an equal portion of the screen in which to display\n+its contents.  The variable @code{automatic-tiling} can cause\n+@code{tile-windows} to be called when a window is created or deleted.\n+@xref{Variables, , @code{automatic-tiling}}.\n+@end table\n+\n+@node The Echo Area\n+@section The Echo Area\n+@cindex echo area\n+\n+The @dfn{echo area} is a one line window which appears at the bottom of\n+the screen.  It is used to display informative or error messages, and to\n+read lines of input from you when that is necessary.  Almost all of the\n+commands available in the echo area are identical to their Emacs\n+counterparts, so please refer to that documentation for greater depth of\n+discussion on the concepts of editing a line of text.  The following\n+table briefly lists the commands that are available while input is being\n+read in the echo area:\n+\n+@table @asis\n+@item @code{C-f} (@code{echo-area-forward})\n+@kindex C-f, in the echo area\n+@findex echo-area-forward\n+Moves forward a character.\n+\n+@item @code{C-b} (@code{echo-area-backward})\n+@kindex C-b, in the echo area\n+@findex echo-area-backward\n+Moves backward a character.\n+\n+@item @code{C-a} (@code{echo-area-beg-of-line})\n+@kindex C-a, in the echo area\n+@findex echo-area-beg-of-line\n+Moves to the start of the input line.\n+\n+@item @code{C-e} (@code{echo-area-end-of-line})\n+@kindex C-e, in the echo area\n+@findex echo-area-end-of-line\n+Moves to the end of the input line.\n+\n+@item @code{M-f} (@code{echo-area-forward-word})\n+@kindex M-f, in the echo area\n+@findex echo-area-forward-word\n+Moves forward a word.\n+\n+@item @code{M-b} (@code{echo-area-backward-word})\n+@kindex M-b, in the echo area\n+@findex echo-area-backward-word\n+Moves backward a word.\n+\n+@item @code{C-d} (@code{echo-area-delete})\n+@kindex C-d, in the echo area\n+@findex echo-area-delete\n+Deletes the character under the cursor.\n+\n+@item @code{DEL} (@code{echo-area-rubout})\n+@kindex DEL, in the echo area\n+@findex echo-area-rubout\n+Deletes the character behind the cursor.\n+\n+@item @code{C-g} (@code{echo-area-abort})\n+@kindex C-g, in the echo area\n+@findex echo-area-abort\n+Cancels or quits the current operation.  If completion is being read,\n+@samp{C-g} discards the text of the input line which does not match any\n+completion.  If the input line is empty, @samp{C-g} aborts the calling\n+function.\n+\n+@item @code{RET} (@code{echo-area-newline})\n+@kindex RET, in the echo area\n+@findex echo-area-newline\n+Accepts (or forces completion of) the current input line.\n+\n+@item @code{C-q} (@code{echo-area-quoted-insert})\n+@kindex C-q, in the echo area\n+@findex echo-area-quoted-insert\n+Inserts the next character verbatim.  This is how you can insert control\n+characters into a search string, for example.\n+\n+@item @var{printing character} (@code{echo-area-insert})\n+@kindex printing characters, in the echo area\n+@findex echo-area-insert\n+Inserts the character.\n+\n+@item @code{M-TAB} (@code{echo-area-tab-insert})\n+@kindex M-TAB, in the echo area\n+@findex echo-area-tab-insert\n+Inserts a TAB character.\n+\n+@item @code{C-t} (@code{echo-area-transpose-chars})\n+@kindex C-t, in the echo area\n+@findex echo-area-transpose-chars\n+Transposes the characters at the cursor.\n+@end table\n+\n+The next group of commands deal with @dfn{killing}, and @dfn{yanking}\n+text.  For an in depth discussion of killing and yanking,\n+@pxref{Killing, , Killing and Deleting, emacs, the GNU Emacs Manual}\n+\n+@table @asis\n+@item @code{M-d} (@code{echo-area-kill-word})\n+@kindex M-d, in the echo area\n+@findex echo-area-kill-word\n+Kills the word following the cursor.\n+\n+@item @code{M-DEL} (@code{echo-area-backward-kill-word})\n+@kindex M-DEL, in the echo area\n+@findex echo-area-backward-kill-word\n+Kills the word preceding the cursor.\n+\n+@item @code{C-k} (@code{echo-area-kill-line})\n+@kindex C-k, in the echo area\n+@findex echo-area-kill-line\n+Kills the text from the cursor to the end of the line.\n+\n+@item @code{C-x DEL} (@code{echo-area-backward-kill-line})\n+@kindex C-x DEL, in the echo area\n+@findex echo-area-backward-kill-line\n+Kills the text from the cursor to the beginning of the line.\n+\n+@item @code{C-y} (@code{echo-area-yank})\n+@kindex C-y, in the echo area\n+@findex echo-area-yank\n+Yanks back the contents of the last kill.\n+\n+@item @code{M-y} (@code{echo-area-yank-pop})\n+@kindex M-y, in the echo area\n+@findex echo-area-yank-pop\n+Yanks back a previous kill, removing the last yanked text first.\n+@end table\n+\n+Sometimes when reading input in the echo area, the command that needed\n+input will only accept one of a list of several choices.  The choices\n+represent the @dfn{possible completions}, and you must respond with one\n+of them.  Since there are a limited number of responses you can make,\n+Info allows you to abbreviate what you type, only typing as much of the\n+response as is necessary to uniquely identify it.  In addition, you can\n+request Info to fill in as much of the response as is possible; this\n+is called @dfn{completion}.\n+\n+The following commands are available when completing in the echo area:\n+\n+@table @asis\n+@item @code{TAB} (@code{echo-area-complete})\n+@itemx @code{SPC}\n+@kindex TAB, in the echo area\n+@kindex SPC, in the echo area\n+@findex echo-area-complete\n+Inserts as much of a completion as is possible.\n+\n+@item @code{?} (@code{echo-area-possible-completions})\n+@kindex ?, in the echo area\n+@findex echo-area-possible-completions\n+Displays a window containing a list of the possible completions of what\n+you have typed so far.  For example, if the available choices are:\n+@example\n+bar\n+foliate\n+food\n+forget\n+@end example\n+and you have typed an @samp{f}, followed by @samp{?}, the possible\n+completions would contain:\n+@example\n+foliate\n+food\n+forget\n+@end example\n+i.e., all of the choices which begin with @samp{f}.  Pressing @key{SPC}\n+or @key{TAB} would result in @samp{fo} appearing in the echo area, since\n+all of the choices which begin with @samp{f} continue with @samp{o}.\n+Now, typing @samp{l} followed by @samp{TAB} results in @samp{foliate}\n+appearing in the echo area, since that is the only choice which begins\n+with @samp{fol}.\n+\n+@item @code{ESC C-v} (@code{echo-area-scroll-completions-window})\n+@kindex ESC C-v, in the echo area\n+@findex echo-area-scroll-completions-window\n+Scrolls the completions window, if that is visible, or the \"other\"\n+window if not.\n+@end table\n+\n+@node Printing Nodes\n+@chapter Printing Out Nodes\n+@cindex printing\n+\n+You may wish to print out the contents of a node as  a quick reference\n+document for later use.  Info provides you with a command for doing\n+this.  In general, we recommend that you use @TeX{} to format the\n+document and print sections of it, by running @code{tex} on the texinfo\n+source file.\n+\n+@table @asis\n+@item @code{M-x print-node}\n+@findex print-node\n+@cindex INFO_PRINT_COMMAND, environment variable\n+Pipes the contents of the current node through the command in the\n+environment variable @code{INFO_PRINT_COMMAND}.  If the variable doesn't\n+exist, the node is simply piped to @code{lpr}.\n+@end table\n+\n+@node Miscellaneous Commands\n+@chapter Miscellaneous Commands\n+\n+GNU Info contains several commands which self-document GNU Info:\n+\n+@table @asis\n+@item @code{M-x describe-command}\n+@cindex functions, describing\n+@cindex commands, describing\n+@findex describe-command\n+Reads the name of an Info command in the echo area and then displays a\n+brief description of what that command does.\n+\n+@item @code{M-x describe-key}\n+@cindex keys, describing\n+@findex describe-key\n+Reads a key sequence in the echo area, and then displays the name and\n+documentation of the Info command that the key sequence invokes.\n+\n+@item @code{M-x describe-variable}\n+Reads the name of a variable in the echo area and then displays a brief\n+description of what the variable affects.\n+\n+@item @code{M-x where-is}\n+@findex where-is\n+Reads the name of an Info command in the echo area, and then displays\n+a key sequence which can be typed in order to invoke that command.\n+\n+@item @code{C-h} (@code{get-help-window})\n+@itemx @code{?}\n+@kindex C-h\n+@kindex ?, in Info windows\n+@findex get-help-window\n+Creates (or moves into) the window displaying @code{*Help*}, and places\n+a node containing a quick reference card into it.  This window displays\n+the most concise information about GNU Info available.\n+\n+@item @code{h} (@code{get-info-help-node})\n+@kindex h\n+@findex get-info-help-node\n+Tries hard to visit the node @code{(info)Help}.  The info file\n+@file{info.texi} distributed with GNU Info contains this node.  Of\n+course, the file must first be processed with @code{makeinfo}, and then\n+placed into the location of your info directory.\n+@end table\n+\n+Here are the commands for creating a numeric argument:\n+\n+@table @asis\n+@item @code{C-u} (@code{universal-argument})\n+@cindex numeric arguments\n+@kindex C-u\n+@findex universal-argument\n+Starts (or multiplies by 4) the current numeric argument.  @samp{C-u} is\n+a good way to give a small numeric argument to cursor movement or\n+scrolling commands; @samp{C-u C-v} scrolls the screen 4 lines, while\n+@samp{C-u C-u C-n} moves the cursor down 16 lines.\n+\n+@item @code{M-1} (@code{add-digit-to-numeric-arg})\n+@itemx @code{M-2} @dots{} @code{M-9}\n+@kindex M-1 @dots{} M-9\n+@findex add-digit-to-numeric-arg\n+Adds the digit value of the invoking key to the current numeric\n+argument.  Once Info is reading a numeric argument, you may just type\n+the digits of the argument, without the Meta prefix.  For example, you\n+might give @samp{C-l} a numeric argument of 32 by typing:\n+\n+@example\n+@kbd{C-u 3 2 C-l}\n+@end example\n+or\n+@example\n+@kbd{M-3 2 C-l}\n+@end example\n+@end table\n+\n+@samp{C-g} is used to abort the reading of a multi-character key\n+sequence, to cancel lengthy operations (such as multi-file searches) and\n+to cancel reading input in the echo area.\n+\n+@table @asis\n+@item @code{C-g} (@code{abort-key})\n+@cindex cancelling typeahead\n+@cindex cancelling the current operation\n+@kindex C-g, in Info windows\n+@findex abort-key\n+Cancels current operation.\n+@end table\n+\n+The @samp{q} command of Info simply quits running Info.\n+\n+@table @asis\n+@item @code{q} (@code{quit})\n+@cindex quitting\n+@kindex q\n+@findex quit\n+Exits GNU Info.\n+@end table\n+\n+If the operating system tells GNU Info that the screen is 60 lines tall,\n+and it is actually only 40 lines tall, here is a way to tell Info that\n+the operating system is correct.\n+\n+@table @asis\n+@item @code{M-x set-screen-height}\n+@findex set-screen-height\n+@cindex screen, changing the height of\n+Reads a height value in the echo area and sets the height of the\n+displayed screen to that value.\n+@end table\n+\n+Finally, Info provides a convenient way to display footnotes which might\n+be associated with the current node that you are viewing:\n+\n+@table @asis\n+@item @code{ESC C-f} (@code{show-footnotes})\n+@kindex ESC C-f\n+@findex show-footnotes\n+@cindex footnotes, displaying\n+Shows the footnotes (if any) associated with the current node in another\n+window.  You can have Info automatically display the footnotes\n+associated with a node when the node is selected by setting the variable\n+@code{automatic-footnotes}.  @xref{Variables, , @code{automatic-footnotes}}.\n+@end table\n+\n+@node Variables\n+@chapter Manipulating Variables\n+\n+GNU Info contains several @dfn{variables} whose values are looked at by various\n+Info commands.  You can change the values of these variables, and thus\n+change the behaviour of Info to more closely match your environment and\n+info file reading manner.\n+\n+@table @asis\n+@item @code{M-x set-variable}\n+@cindex variables, setting\n+@findex set-variable\n+Reads the name of a variable, and the value for it, in the echo area and\n+then sets the variable to that value.  Completion is available when\n+reading the variable name; often, completion is available when reading\n+the value to give to the variable, but that depends on the variable\n+itself.  If a variable does @emph{not} supply multiple choices to\n+complete over, it expects a numeric value.\n+\n+@item @code{M-x describe-variable}\n+@cindex variables, describing\n+@findex describe-variable\n+Reads the name of a variable in the echo area and then displays a brief\n+description of what the variable affects.\n+@end table\n+\n+Here is a list of the variables that you can set in Info.\n+\n+@table @code\n+@item automatic-footnotes\n+@vindex automatic-footnotes\n+When set to @code{On}, footnotes appear and disappear automatically.\n+This variable is @code{On} by default.  When a node is selected, a\n+window containing the footnotes which appear in that node is created,\n+and the footnotes are displayed within the new window.  The window that\n+Info creates to contain the footnotes is called @samp{*Footnotes*}.  If\n+a node is selected which contains no footnotes, and a @samp{*Footnotes*}\n+window is on the screen, the @samp{*Footnotes*} window is deleted.\n+Footnote windows created in this fashion are not automatically tiled so\n+that they can use as little of the display as is possible.\n+\n+@item automatic-tiling\n+@vindex automatic-tiling\n+When set to @code{On}, creating or deleting a window resizes other\n+windows.  This variable is @code{Off} by default.  Normally, typing\n+@samp{C-x 2} divides the current window into two equal parts.  When\n+@code{automatic-tiling} is set to @code{On}, all of the windows are\n+resized automatically, keeping an equal number of lines visible in each\n+window.  There are exceptions to the automatic tiling; specifically, the\n+windows @samp{*Completions*} and @samp{*Footnotes*} are @emph{not}\n+resized through automatic tiling; they remain their original size.\n+\n+@item visible-bell\n+@vindex visible-bell\n+When set to @code{On}, GNU Info attempts to flash the screen instead of\n+ringing the bell.  This variable is @code{Off} by default.  Of course,\n+Info can only flash the screen if the terminal allows it; in the case\n+that the terminal does not allow it, the setting of this variable has no\n+effect.  However, you can make Info perform quietly by setting the\n+@code{errors-ring-bell} variable to @code{Off}.\n+\n+@item errors-ring-bell\n+@vindex errors-ring-bell\n+When set to @code{On}, errors cause the bell to ring.  The default\n+setting of this variable is @code{On}.\n+\n+@item gc-compressed-files\n+@vindex gc-compressed-files\n+When set to @code{On}, Info garbage collects files which had to be\n+uncompressed.  The default value of this variable is @code{Off}.\n+Whenever a node is visited in Info, the info file containing that node\n+is read into core, and Info reads information about the tags and nodes\n+contained in that file.  Once the tags information is read by Info, it\n+is never forgotten.  However, the actual text of the nodes does not need\n+to remain in core unless a particular info window needs it.  For\n+non-compressed files, the text of the nodes does not remain in core when\n+it is no longer in use.  But de-compressing a file can be a time\n+consuming operation, and so Info tries hard not to do it twice.\n+@code{gc-compressed-files} tells Info it is okay to garbage collect the\n+text of the nodes of a file which was compressed on disk.\n+\n+@item show-index-match\n+@vindex show-index-match\n+When set to @code{On}, the portion of the matched search string is\n+highlighted in the message which explains where the matched search\n+string was found.  The default value of this variable is @code{On}.\n+When Info displays the location where an index match was found,\n+(@pxref{Searching Commands, , @code{next-index-match}}), the portion of the\n+string that you had typed is highlighted by displaying it in the inverse\n+case from its surrounding characters.\n+\n+@item scroll-behaviour\n+@vindex scroll-behaviour\n+Controls what happens when forward scrolling is requested at the end of\n+a node, or when backward scrolling is requested at the beginning of a\n+node.  The default value for this variable is @code{Continuous}.  There\n+are three possible values for this variable:\n+\n+@table @code\n+@item Continuous\n+Tries to get the first item in this node's menu, or failing that, the\n+@samp{Next} node, or failing that, the @samp{Next} of the @samp{Up}.\n+This behaviour is identical to using the @samp{]}\n+(@code{global-next-node}) and @samp{[} (@code{global-prev-node})\n+commands.\n+\n+@item Next Only\n+Only tries to get the @samp{Next} node.\n+\n+@item Page Only\n+Simply gives up, changing nothing.  If @code{scroll-behaviour} is\n+@code{Page Only}, no scrolling command can change the node that is being\n+viewed.\n+@end table\n+\n+@item scroll-step\n+@vindex scroll-step\n+The number of lines to scroll when the cursor moves out of the window.\n+Scrolling happens automatically if the cursor has moved out of the\n+visible portion of the node text when it is time to display.  Usually\n+the scrolling is done so as to put the cursor on the center line of the\n+current window.  However, if the variable @code{scroll-step} has a\n+nonzero value, Info attempts to scroll the node text by that many lines;\n+if that is enough to bring the cursor back into the window, that is what\n+is done.  The default value of this variable is 0, thus placing the\n+cursor (and the text it is attached to) in the center of the window.\n+Setting this variable to 1 causes a kind of \"smooth scrolling\" which\n+some people prefer.\n+\n+@item ISO-Latin\n+@cindex ISO Latin characters\n+@vindex ISO-Latin\n+When set to @code{On}, Info accepts and displays ISO Latin characters.\n+By default, Info assumes an ASCII character set.  @code{ISO-Latin} tells\n+Info that it is running in an environment where the European standard\n+character set is in use, and allows you to input such characters to\n+Info, as well as display them.\n+@end table\n+\n+@c The following node and its children are currently unfinished.  Please feel\n+@c free to finish it!\n+\n+@ifset NOTSET\n+@node Info for Sys Admins\n+@chapter Info for System Administrators\n+\n+This text describes some common ways of setting up an Info heierarchy\n+from scratch, and details the various options that are available when\n+installing Info.  This text is designed for the person who is installing\n+GNU Info on the system; although users may find the information present\n+in this section interesting, none of it is vital to understanding how to\n+use GNU Info.\n+\n+@menu\n+* Setting the INFOPATH::        Where are my Info files kept?\n+* Editing the DIR node::        What goes in `DIR', and why?\n+* Storing Info files::          Alternate formats allow flexibilty in setups.\n+* Using `localdir'::            Building DIR on the fly.\n+* Example setups::              Some common ways to origanize Info files.\n+@end menu\n+\n+@node Setting the INFOPATH\n+@section Setting the INFOPATH\n+Where are my Info files kept?\n+\n+@node Editing the DIR node\n+@section Editing the DIR node\n+What goes in `DIR', and why?\n+\n+@node Storing Info files\n+@section Storing Info files\n+Alternate formats allow flexibilty in setups.\n+\n+@node Using `localdir'\n+@section Using `localdir'\n+Building DIR on the fly.\n+\n+@node Example setups\n+@section Example setups\n+Some common ways to origanize Info files.\n+@end ifset\n+\n+@ifset STANDALONE\n+@node GNU Info Global Index\n+@appendix Global Index\n+@printindex cp\n+@end ifset"}, {"sha": "8f4b4591713adaaeadc92ebba40c5456a50f2a4b", "filename": "texinfo/emacs/Makefile.am", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Femacs%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Femacs%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Femacs%2FMakefile.am?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,21 @@\n+## Makefile.am for texinfo/emacs.\n+## $Id: Makefile.am,v 1.1 1998/03/23 04:42:12 law Exp $\n+## Run automake in .. to produce Makefile.in from this.\n+\n+# Do not byte compile our Elisp files by default.\n+ELCFILES =\n+\n+# Do not install our Elisp files by default, either.\n+noinst_LISP = info.el informat.el makeinfo.el \\\n+              texinfmt.el texinfo.el texnfo-upd.el\n+\n+EXTRA_DIST = README elisp-comp new-useful-setqs $(noinst_LISP)\n+\n+install-data-local:\n+\t@echo \"WARNING: You must (compile and) install the Emacs Lisp files\"\n+\t@echo \"WARNING: manually.  See ./emacs/README for some considerations.\"\n+\n+# For some reason these do not get defined.\n+distclean-lisp:\n+clean-lisp:\n+mostlyclean-lisp:"}, {"sha": "23053166c3f11eba111a1abd7acca4ba4c70b4fd", "filename": "texinfo/emacs/README", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Femacs%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Femacs%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Femacs%2FREADME?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,17 @@\n+This directory contains Emacs Lisp sources related to Texinfo.\n+\n+M-x texinfo-format-buffer is no longer the standard way to make .info\n+files, and may or may not work.  Use makeinfo instead.  See the\n+`makeinfo advantages' in the manual for why.\n+\n+The files here may or may not be newer than the versions in the latest\n+Emacs distribution -- there is only one master source, so it simply\n+depends on what was released later.  Use whatever works better for you.\n+\n+They are not compiled or installed by default, because of the above, and\n+also due to the wide variations in sites' Emacs installations.\n+\n+Even if you do install them, you may not want to compile them if your\n+site is running multiple versions of Emacs, since .elc files are not\n+portable between all Emacs releases.  If you do want to compile them,\n+just run the ./elisp-comp shell script."}, {"sha": "b4c96d5d9e911fd9af53e2a2c618508adf4d96bf", "filename": "texinfo/info/Makefile.am", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Finfo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Finfo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Finfo%2FMakefile.am?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,44 @@\n+## Makefile.am for texinfo/info.\n+## $Id: Makefile.am,v 1.1 1998/03/23 04:42:20 law Exp $\n+## Run automake in .. to produce Makefile.in from this.\n+\n+noinst_PROGRAMS = makedoc\n+\n+# Use `ginfo' for building to avoid confusion with the standard `info'\n+# target.  The install rule removes the `g' before applying any\n+# user-specified name transformations.\n+bin_PROGRAMS = ginfo\n+transform = s/ginfo/info/; @program_transform_name@\n+\n+localedir = $(datadir)/locale\n+\n+# -I. for funs.h.\n+INCLUDES = -I. -I$(top_srcdir)/lib -I../intl -DLOCALEDIR=\\\"$(localedir)\\\"\n+LDADD = ../lib/libtxi.a @TERMLIBS@ @INTLLIBS@\n+\n+makedoc_SOURCES = makedoc.c\n+ginfo_SOURCES = dir.c display.c display.h doc.c doc.h dribble.c dribble.h \\\n+  echo-area.c echo-area.h \\\n+  filesys.c filesys.h footnotes.c footnotes.h funs.h gc.c gc.h \\\n+  indices.c indices.h info-utils.c info-utils.h info.c info.h infodoc.c \\\n+  infomap.c infomap.h m-x.c man.c man.h nodemenu.c nodes.c nodes.h \\\n+  search.c search.h session.c session.h signals.c signals.h \\\n+  termdep.h terminal.c terminal.h tilde.c tilde.h \\\n+  variables.c variables.h window.c window.h\n+\n+EXTRA_DIST = README\n+\n+# The files `doc.c' and `funs.h' are created by ./makedoc run over the source\n+# files which contain DECLARE_INFO_COMMAND.  `funs.h' is a header file\n+# listing the functions found.  `doc.c' is a structure containing pointers\n+# to those functions along with completable names and documentation strings.\n+# \n+# I do not know how to get this right.\n+# BUILT_SOURCES = doc.c funs.h\n+#\n+#cmd_sources = $(srcdir)/session.c $(srcdir)/echo-area.c $(srcdir)/infodoc.c \\\n+#  $(srcdir)/m-x.c $(srcdir)/indices.c $(srcdir)/nodemenu.c \\\n+#  $(srcdir)/footnotes.c $(srcdir)/variables.c\n+#\n+#$(BUILTSOURCES): makedoc $(cmd_sources)\n+#\t./makedoc $(cmd_sources)"}, {"sha": "3859b7fd66afa4708fed9991079ef8c53228e921", "filename": "texinfo/info/doc.c", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Finfo%2Fdoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Finfo%2Fdoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Finfo%2Fdoc.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,129 @@\n+/* doc.c -- Generated structure containing function names and doc strings.\n+\n+   This file was automatically made from various source files with the\n+   command \"./makedoc\".  DO NOT EDIT THIS FILE, only \"./makedoc.c\".\n+   Source files groveled to make this file include:\n+\n+\t./session.c\n+\t./echo-area.c\n+\t./infodoc.c\n+\t./m-x.c\n+\t./indices.c\n+\t./nodemenu.c\n+\t./footnotes.c\n+\t./variables.c\n+\n+   An entry in the array FUNCTION_DOC_ARRAY is made for each command\n+   found in the above files; each entry consists of a function pointer,\n+   a string which is the user-visible name of the function,\n+   and a string which documents its purpose. */\n+\n+#include \"doc.h\"\n+#include \"funs.h\"\n+\n+FUNCTION_DOC function_doc_array[] = {\n+\n+/* Commands found in \"./session.c\". */\n+   { info_next_line, \"next-line\", N_(\"Move down to the next line\") },\n+   { info_prev_line, \"prev-line\", N_(\"Move up to the previous line\") },\n+   { info_end_of_line, \"end-of-line\", N_(\"Move to the end of the line\") },\n+   { info_beginning_of_line, \"beginning-of-line\", N_(\"Move to the start of the line\") },\n+   { info_forward_char, \"forward-char\", N_(\"Move forward a character\") },\n+   { info_backward_char, \"backward-char\", N_(\"Move backward a character\") },\n+   { info_forward_word, \"forward-word\", N_(\"Move forward a word\") },\n+   { info_backward_word, \"backward-word\", N_(\"Move backward a word\") },\n+   { info_global_next_node, \"global-next-node\", N_(\"Move forwards or down through node structure\") },\n+   { info_global_prev_node, \"global-prev-node\", N_(\"Move backwards or up through node structure\") },\n+   { info_scroll_forward, \"scroll-forward\", N_(\"Scroll forward in this window\") },\n+   { info_scroll_backward, \"scroll-backward\", N_(\"Scroll backward in this window\") },\n+   { info_beginning_of_node, \"beginning-of-node\", N_(\"Move to the start of this node\") },\n+   { info_end_of_node, \"end-of-node\", N_(\"Move to the end of this node\") },\n+   { info_next_window, \"next-window\", N_(\"Select the next window\") },\n+   { info_prev_window, \"prev-window\", N_(\"Select the previous window\") },\n+   { info_split_window, \"split-window\", N_(\"Split the current window\") },\n+   { info_delete_window, \"delete-window\", N_(\"Delete the current window\") },\n+   { info_keep_one_window, \"keep-one-window\", N_(\"Delete all other windows\") },\n+   { info_scroll_other_window, \"scroll-other-window\", N_(\"Scroll the other window\") },\n+   { info_grow_window, \"grow-window\", N_(\"Grow (or shrink) this window\") },\n+   { info_tile_windows, \"tile-windows\", N_(\"Divide the available screen space among the visible windows\") },\n+   { info_toggle_wrap, \"toggle-wrap\", N_(\"Toggle the state of line wrapping in the current window\") },\n+   { info_next_node, \"next-node\", N_(\"Select the `Next' node\") },\n+   { info_prev_node, \"prev-node\", N_(\"Select the `Prev' node\") },\n+   { info_up_node, \"up-node\", N_(\"Select the `Up' node\") },\n+   { info_last_node, \"last-node\", N_(\"Select the last node in this file\") },\n+   { info_first_node, \"first-node\", N_(\"Select the first node in this file\") },\n+   { info_history_node, \"history-node\", N_(\"Select the most recently selected node\") },\n+   { info_last_menu_item, \"last-menu-item\", N_(\"Select the last item in this node's menu\") },\n+   { info_menu_digit, \"menu-digit\", N_(\"Select this menu item\") },\n+   { info_menu_item, \"menu-item\", N_(\"Read a menu item and select its node\") },\n+   { info_xref_item, \"xref-item\", N_(\"Read a footnote or cross reference and select its node\") },\n+   { info_find_menu, \"find-menu\", N_(\"Move to the start of this node's menu\") },\n+   { info_visit_menu, \"visit-menu\", N_(\"Visit as many menu items at once as possible\") },\n+   { info_goto_node, \"goto-node\", N_(\"Read a node name and select it\") },\n+   { info_man, \"man\", N_(\"Read a manpage reference and select it\") },\n+   { info_top_node, \"top-node\", N_(\"Select the node `Top' in this file\") },\n+   { info_dir_node, \"dir-node\", N_(\"Select the node `(dir)'\") },\n+   { info_kill_node, \"kill-node\", N_(\"Kill this node\") },\n+   { info_view_file, \"view-file\", N_(\"Read the name of a file and select it\") },\n+   { info_print_node, \"print-node\", N_(\"Pipe the contents of this node through INFO_PRINT_COMMAND\") },\n+   { info_search, \"search\", N_(\"Read a string and search for it\") },\n+   { isearch_forward, \"isearch-forward\", N_(\"Search interactively for a string as you type it\") },\n+   { isearch_backward, \"isearch-backward\", N_(\"Search interactively for a string as you type it\") },\n+   { info_move_to_prev_xref, \"move-to-prev-xref\", N_(\"Move to the previous cross reference\") },\n+   { info_move_to_next_xref, \"move-to-next-xref\", N_(\"Move to the next cross reference\") },\n+   { info_select_reference_this_line, \"select-reference-this-line\", N_(\"Select reference or menu item appearing on this line\") },\n+   { info_abort_key, \"abort-key\", N_(\"Cancel current operation\") },\n+   { info_move_to_window_line, \"move-to-window-line\", N_(\"Move to the cursor to a specific line of the window\") },\n+   { info_redraw_display, \"redraw-display\", N_(\"Redraw the display\") },\n+   { info_quit, \"quit\", N_(\"Quit using Info\") },\n+   { info_do_lowercase_version, \"do-lowercase-version\", \"\" },\n+   { info_add_digit_to_numeric_arg, \"add-digit-to-numeric-arg\", N_(\"Add this digit to the current numeric argument\") },\n+   { info_universal_argument, N_(\"universal-argument\"), N_(\"Start (or multiply by 4) the current numeric argument\") },\n+   { info_numeric_arg_digit_loop, \"numeric-arg-digit-loop\", N_(\"Internally used by \\\\[universal-argument]\") },\n+/* Commands found in \"./echo-area.c\". */\n+   { ea_forward, \"echo-area-forward\", N_(\"Move forward a character\") },\n+   { ea_backward, \"echo-area-backward\", N_(\"Move backward a character\") },\n+   { ea_beg_of_line, \"echo-area-beg-of-line\", N_(\"Move to the start of this line\") },\n+   { ea_end_of_line, \"echo-area-end-of-line\", N_(\"Move to the end of this line\") },\n+   { ea_forward_word, \"echo-area-forward-word\", N_(\"Move forward a word\") },\n+   { ea_backward_word, \"echo-area-backward-word\", N_(\"Move backward a word\") },\n+   { ea_delete, \"echo-area-delete\", N_(\"Delete the character under the cursor\") },\n+   { ea_rubout, \"echo-area-rubout\", N_(\"Delete the character behind the cursor\") },\n+   { ea_abort, \"echo-area-abort\", N_(\"Cancel or quit operation\") },\n+   { ea_newline, \"echo-area-newline\", N_(\"Accept (or force completion of) this line\") },\n+   { ea_quoted_insert, \"echo-area-quoted-insert\", N_(\"Insert next character verbatim\") },\n+   { ea_insert, \"echo-area-insert\", N_(\"Insert this character\") },\n+   { ea_tab_insert, \"echo-area-tab-insert\", N_(\"Insert a TAB character\") },\n+   { ea_transpose_chars, \"echo-area-transpose-chars\", N_(\"Transpose characters at point\") },\n+   { ea_yank, \"echo-area-yank\", N_(\"Yank back the contents of the last kill\") },\n+   { ea_yank_pop, \"echo-area-yank-pop\", N_(\"Yank back a previous kill\") },\n+   { ea_kill_line, \"echo-area-kill-line\", N_(\"Kill to the end of the line\") },\n+   { ea_backward_kill_line, \"echo-area-backward-kill-line\", N_(\"Kill to the beginning of the line\") },\n+   { ea_kill_word, \"echo-area-kill-word\", N_(\"Kill the word following the cursor\") },\n+   { ea_backward_kill_word, \"echo-area-backward-kill-word\", N_(\"Kill the word preceding the cursor\") },\n+   { ea_possible_completions, \"echo-area-possible-completions\", N_(\"List possible completions\") },\n+   { ea_complete, \"echo-area-complete\", N_(\"Insert completion\") },\n+   { ea_scroll_completions_window, \"echo-area-scroll-completions-window\", N_(\"Scroll the completions window\") },\n+/* Commands found in \"./infodoc.c\". */\n+   { info_get_help_window, \"get-help-window\", N_(\"Display help message\") },\n+   { info_get_info_help_node, \"get-info-help-node\", N_(\"Visit Info node `(info)Help'\") },\n+   { describe_key, \"describe-key\", N_(\"Print documentation for KEY\") },\n+   { info_where_is, \"where-is\", N_(\"Show what to type to execute a given command\") },\n+/* Commands found in \"./m-x.c\". */\n+   { describe_command, \"describe-command\", N_(\"Read the name of an Info command and describe it\") },\n+   { info_execute_command, \"execute-command\", N_(\"Read a command name in the echo area and execute it\") },\n+   { set_screen_height, \"set-screen-height\", N_(\"Set the height of the displayed window\") },\n+/* Commands found in \"./indices.c\". */\n+   { info_index_search, \"index-search\", N_(\"Look up a string in the index for this file\") },\n+   { info_next_index_match, \"next-index-match\", N_(\"Go to the next matching index item from the last `\\\\[index-search]' command\") },\n+   { info_index_apropos, \"index-apropos\", N_(\"Grovel all known info file's indices for a string and build a menu\") },\n+/* Commands found in \"./nodemenu.c\". */\n+   { list_visited_nodes, \"list-visited-nodes\", N_(\"Make a window containing a menu of all of the currently visited nodes\") },\n+   { select_visited_node, \"select-visited-node\", N_(\"Select a node which has been previously visited in a visible window\") },\n+/* Commands found in \"./footnotes.c\". */\n+   { info_show_footnotes, \"show-footnotes\", N_(\"Show the footnotes associated with this node in another window\") },\n+/* Commands found in \"./variables.c\". */\n+   { describe_variable, \"describe-variable\", N_(\"Explain the use of a variable\") },\n+   { set_variable, \"set-variable\", N_(\"Set the value of an Info variable\") },\n+   { (VFunction *)NULL, (char *)NULL, (char *)NULL }\n+};"}, {"sha": "6f97a14d6937498871955133d5d00c5a90ee225c", "filename": "texinfo/info/echo-area.c", "status": "added", "additions": 1505, "deletions": 0, "changes": 1505, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Finfo%2Fecho-area.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Finfo%2Fecho-area.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Finfo%2Fecho-area.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,1505 @@\n+/* echo-area.c -- How to read a line in the echo area.\n+   $Id: echo-area.c,v 1.1 1998/03/23 04:42:27 law Exp $\n+\n+   Copyright (C) 1993, 97 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+\n+   Written by Brian Fox (bfox@ai.mit.edu). */\n+\n+#include \"info.h\"\n+\n+#if defined (FD_SET)\n+#  if defined (hpux)\n+#    define fd_set_cast(x) (int *)(x)\n+#  else\n+#    define fd_set_cast(x) (fd_set *)(x)\n+#  endif /* !hpux */\n+#endif /* FD_SET */\n+\n+/* Non-zero means that C-g was used to quit reading input. */\n+int info_aborted_echo_area = 0;\n+\n+/* Non-zero means that the echo area is being used to read input. */\n+int echo_area_is_active = 0;\n+\n+/* The address of the last command executed in the echo area. */\n+VFunction *ea_last_executed_command = (VFunction *)NULL;\n+\n+/* Non-zero means that the last command executed while reading input\n+   killed some text. */\n+int echo_area_last_command_was_kill = 0;\n+\n+/* Variables which hold on to the current state of the input line. */\n+static char input_line[1 + EA_MAX_INPUT];\n+static char *input_line_prompt;\n+static int input_line_point;\n+static int input_line_beg;\n+static int input_line_end;\n+static NODE input_line_node = {\n+  (char *)NULL, (char *)NULL, (char *)NULL, input_line, EA_MAX_INPUT, 0\n+};\n+\n+static void echo_area_initialize_node ();\n+static void push_echo_area (), pop_echo_area ();\n+static int echo_area_stack_contains_completions_p ();\n+\n+static void ea_kill_text ();\n+\n+/* Non-zero means we force the user to complete. */\n+static int echo_area_must_complete_p = 0;\n+static int completions_window_p ();\n+\n+/* If non-null, this is a window which was specifically created to display\n+   possible completions output.  We remember it so we can delete it when\n+   appropriate. */\n+static WINDOW *echo_area_completions_window = (WINDOW *)NULL;\n+\n+/* Variables which keep track of the window which was active prior to\n+   entering the echo area. */\n+static WINDOW *calling_window = (WINDOW *)NULL;\n+static NODE *calling_window_node = (NODE *)NULL;\n+static long calling_window_point = 0;\n+static long calling_window_pagetop = 0;\n+\n+/* Remember the node and pertinent variables of the calling window. */\n+static void\n+remember_calling_window (window)\n+     WINDOW *window;\n+{\n+  /* Only do this if the calling window is not the completions window, or,\n+     if it is the completions window and there is no other window. */\n+  if (!completions_window_p (window) ||\n+      ((window == windows) && !(window->next)))\n+    {\n+      calling_window = window;\n+      calling_window_node = window->node;\n+      calling_window_point = window->point;\n+      calling_window_pagetop = window->pagetop;\n+    }\n+}\n+\n+/* Restore the caller's window so that it shows the node that it was showing\n+   on entry to info_read_xxx_echo_area (). */\n+static void\n+restore_calling_window ()\n+{\n+  register WINDOW *win, *compwin = (WINDOW *)NULL;\n+\n+  /* If the calling window is still visible, and it is the window that\n+     we used for completions output, then restore the calling window. */\n+  for (win = windows; win; win = win->next)\n+    {\n+      if (completions_window_p (win))\n+        compwin = win;\n+\n+      if (win == calling_window && win == compwin)\n+        {\n+          window_set_node_of_window (calling_window, calling_window_node);\n+          calling_window->point = calling_window_point;\n+          calling_window->pagetop = calling_window_pagetop;\n+          compwin = (WINDOW *)NULL;\n+          break;\n+        }\n+    }\n+\n+  /* Delete the completions window if it is still present, it isn't the\n+     last window on the screen, and there aren't any prior echo area reads\n+     pending which created a completions window. */\n+  if (compwin)\n+    {\n+      if ((compwin != windows || windows->next) &&\n+          !echo_area_stack_contains_completions_p ())\n+        {\n+          WINDOW *next;\n+          int pagetop, start, end, amount;\n+\n+          next = compwin->next;\n+          if (next)\n+            {\n+              start = next->first_row;\n+              end = start + next->height;\n+              amount = - (compwin->height + 1);\n+              pagetop = next->pagetop;\n+            }\n+\n+          info_delete_window_internal (compwin);\n+\n+          /* This is not necessary because info_delete_window_internal ()\n+             calls echo_area_inform_of_deleted_window (), which does the\n+             right thing. */\n+#if defined (UNNECESSARY)\n+          echo_area_completions_window = (WINDOW *)NULL;\n+#endif /* UNNECESSARY */\n+\n+          if (next)\n+            {\n+              display_scroll_display (start, end, amount);\n+              next->pagetop = pagetop;\n+              display_update_display (windows);\n+            }\n+        }\n+    }\n+}\n+\n+/* Set up a new input line with PROMPT. */\n+static void\n+initialize_input_line (prompt)\n+     char *prompt;\n+{\n+  input_line_prompt = prompt;\n+  if (prompt)\n+    strcpy (input_line, prompt);\n+  else\n+    input_line[0] = '\\0';\n+\n+  input_line_beg = input_line_end = input_line_point = strlen (prompt);\n+}\n+\n+static char *\n+echo_area_after_read ()\n+{\n+  char *return_value;\n+\n+  if (info_aborted_echo_area)\n+    {\n+      info_aborted_echo_area = 0;\n+      return_value = (char *)NULL;\n+    }\n+  else\n+    {\n+      if (input_line_beg == input_line_end)\n+        return_value = xstrdup (\"\");\n+      else\n+        {\n+          int line_len = input_line_end - input_line_beg;\n+          return_value = (char *) xmalloc (1 + line_len);\n+          strncpy (return_value, &input_line[input_line_beg], line_len);\n+          return_value[line_len] = '\\0';\n+        }\n+    }\n+  return (return_value);\n+}\n+\n+/* Read a line of text in the echo area.  Return a malloc ()'ed string,\n+   or NULL if the user aborted out of this read.  WINDOW is the currently\n+   active window, so that we can restore it when we need to.  PROMPT, if\n+   non-null, is a prompt to print before reading the line. */\n+char *\n+info_read_in_echo_area (window, prompt)\n+     WINDOW *window;\n+     char *prompt;\n+{\n+  char *line;\n+\n+  /* If the echo area is already active, remember the current state. */\n+  if (echo_area_is_active)\n+    push_echo_area ();\n+\n+  /* Initialize our local variables. */\n+  initialize_input_line (prompt);\n+\n+  /* Initialize the echo area for the first (but maybe not the last) time. */\n+  echo_area_initialize_node ();\n+\n+  /* Save away the original node of this window, and the window itself,\n+     so echo area commands can temporarily use this window. */\n+  remember_calling_window (window);\n+\n+  /* Let the rest of Info know that the echo area is active. */\n+  echo_area_is_active++;\n+  active_window = the_echo_area;\n+\n+  /* Read characters in the echo area. */\n+  info_read_and_dispatch ();\n+\n+  echo_area_is_active--;\n+\n+  /* Restore the original active window and show point in it. */\n+  active_window = calling_window;\n+  restore_calling_window ();\n+  display_cursor_at_point (active_window);\n+  fflush (stdout);\n+\n+  /* Get the value of the line. */\n+  line = echo_area_after_read ();\n+\n+  /* If there is a previous loop waiting for us, restore it now. */\n+  if (echo_area_is_active)\n+    pop_echo_area ();\n+\n+  /* Return the results to the caller. */\n+  return (line);\n+}\n+\n+/* (re) Initialize the echo area node. */\n+static void\n+echo_area_initialize_node ()\n+{\n+  register int i;\n+\n+  for (i = input_line_end; i < sizeof (input_line); i++)\n+    input_line[i] = ' ';\n+\n+  input_line[i - 1] = '\\n';\n+  window_set_node_of_window (the_echo_area, &input_line_node);\n+  input_line[input_line_end] = '\\n';\n+}\n+\n+/* Prepare to read characters in the echo area.  This can initialize the\n+   echo area node, but its primary purpose is to side effect the input\n+   line buffer contents. */\n+void\n+echo_area_prep_read ()\n+{\n+  if (the_echo_area->node != &input_line_node)\n+    echo_area_initialize_node ();\n+\n+  the_echo_area->point = input_line_point;\n+  input_line[input_line_end] = '\\n';\n+  display_update_one_window (the_echo_area);\n+  display_cursor_at_point (active_window);\n+}\n+\n+\f\n+/* **************************************************************** */\n+/*                                                                  */\n+/*                   Echo Area Movement Commands                    */\n+/*                                                                  */\n+/* **************************************************************** */\n+\n+DECLARE_INFO_COMMAND (ea_forward, _(\"Move forward a character\"))\n+{\n+  if (count < 0)\n+    ea_backward (window, -count, key);\n+  else\n+    {\n+      input_line_point += count;\n+      if (input_line_point > input_line_end)\n+        input_line_point = input_line_end;\n+    }\n+}\n+\n+DECLARE_INFO_COMMAND (ea_backward, _(\"Move backward a character\"))\n+{\n+  if (count < 0)\n+    ea_forward (window, -count, key);\n+  else\n+    {\n+      input_line_point -= count;\n+      if (input_line_point < input_line_beg)\n+        input_line_point = input_line_beg;\n+    }\n+}\n+\n+DECLARE_INFO_COMMAND (ea_beg_of_line, _(\"Move to the start of this line\"))\n+{\n+  input_line_point = input_line_beg;\n+}\n+\n+DECLARE_INFO_COMMAND (ea_end_of_line, _(\"Move to the end of this line\"))\n+{\n+  input_line_point = input_line_end;\n+}\n+\n+#define alphabetic(c) (islower (c) || isupper (c) || isdigit (c))\n+\n+/* Move forward a word in the input line. */\n+DECLARE_INFO_COMMAND (ea_forward_word, _(\"Move forward a word\"))\n+{\n+  int c;\n+\n+  if (count < 0)\n+    ea_backward_word (window, -count, key);\n+  else\n+    {\n+      while (count--)\n+        {\n+          if (input_line_point == input_line_end)\n+            return;\n+\n+          /* If we are not in a word, move forward until we are in one.\n+             Then, move forward until we hit a non-alphabetic character. */\n+          c = input_line[input_line_point];\n+\n+          if (!alphabetic (c))\n+            {\n+              while (++input_line_point < input_line_end)\n+                {\n+                  c = input_line[input_line_point];\n+                  if (alphabetic (c))\n+                    break;\n+                }\n+            }\n+\n+          if (input_line_point == input_line_end)\n+            return;\n+\n+          while (++input_line_point < input_line_end)\n+            {\n+              c = input_line[input_line_point];\n+              if (!alphabetic (c))\n+                break;\n+            }\n+        }\n+    }\n+}\n+\n+DECLARE_INFO_COMMAND (ea_backward_word, _(\"Move backward a word\"))\n+{\n+  int c;\n+\n+  if (count < 0)\n+    ea_forward_word (window, -count, key);\n+  else\n+    {\n+      while (count--)\n+        {\n+          if (input_line_point == input_line_beg)\n+            return;\n+\n+          /* Like ea_forward_word (), except that we look at the\n+             characters just before point. */\n+\n+          c = input_line[input_line_point - 1];\n+\n+          if (!alphabetic (c))\n+            {\n+              while ((--input_line_point) != input_line_beg)\n+                {\n+                  c = input_line[input_line_point - 1];\n+                  if (alphabetic (c))\n+                    break;\n+                }\n+            }\n+\n+          while (input_line_point != input_line_beg)\n+            {\n+              c = input_line[input_line_point - 1];\n+              if (!alphabetic (c))\n+                break;\n+              else\n+                --input_line_point;\n+            }\n+        }\n+    }\n+}\n+\n+DECLARE_INFO_COMMAND (ea_delete, _(\"Delete the character under the cursor\"))\n+{\n+  register int i;\n+\n+  if (count < 0)\n+    ea_rubout (window, -count, key);\n+  else\n+    {\n+      if (input_line_point == input_line_end)\n+        return;\n+\n+      if (info_explicit_arg || count > 1)\n+        {\n+          int orig_point;\n+\n+          orig_point = input_line_point;\n+          ea_forward (window, count, key);\n+          ea_kill_text (orig_point, input_line_point);\n+          input_line_point = orig_point;\n+        }\n+      else\n+        {\n+          for (i = input_line_point; i < input_line_end; i++)\n+            input_line[i] = input_line[i + 1];\n+\n+          input_line_end--;\n+        }\n+    }\n+}\n+\n+DECLARE_INFO_COMMAND (ea_rubout, _(\"Delete the character behind the cursor\"))\n+{\n+  if (count < 0)\n+    ea_delete (window, -count, key);\n+  else\n+    {\n+      int start;\n+\n+      if (input_line_point == input_line_beg)\n+        return;\n+\n+      start = input_line_point;\n+      ea_backward (window, count, key);\n+\n+      if (info_explicit_arg || count > 1)\n+        ea_kill_text (start, input_line_point);\n+      else\n+        ea_delete (window, count, key);\n+    }\n+}\n+\n+DECLARE_INFO_COMMAND (ea_abort, _(\"Cancel or quit operation\"))\n+{\n+  /* If any text, just discard it, and restore the calling window's node.\n+     If no text, quit. */\n+  if (input_line_end != input_line_beg)\n+    {\n+      terminal_ring_bell ();\n+      input_line_end = input_line_point = input_line_beg;\n+      if (calling_window->node != calling_window_node)\n+        restore_calling_window ();\n+    }\n+  else\n+    info_aborted_echo_area = 1;\n+}\n+\n+DECLARE_INFO_COMMAND (ea_newline, _(\"Accept (or force completion of) this line\"))\n+{\n+  /* Stub does nothing.  Simply here to see if it has been executed. */\n+}\n+\n+DECLARE_INFO_COMMAND (ea_quoted_insert, _(\"Insert next character verbatim\"))\n+{\n+  unsigned char character;\n+\n+  character = info_get_another_input_char ();\n+  ea_insert (window, count, character);\n+}\n+\n+DECLARE_INFO_COMMAND (ea_insert, _(\"Insert this character\"))\n+{\n+  register int i;\n+\n+  if ((input_line_end + 1) == EA_MAX_INPUT)\n+    {\n+      terminal_ring_bell ();\n+      return;\n+    }\n+\n+  for (i = input_line_end + 1; i != input_line_point; i--)\n+    input_line[i] = input_line[i - 1];\n+\n+  input_line[input_line_point] = key;\n+  input_line_point++;\n+  input_line_end++;\n+}\n+\n+DECLARE_INFO_COMMAND (ea_tab_insert, _(\"Insert a TAB character\"))\n+{\n+  ea_insert (window, count, '\\t');\n+}\n+\n+/* Transpose the characters at point.  If point is at the end of the line,\n+   then transpose the characters before point. */\n+DECLARE_INFO_COMMAND (ea_transpose_chars, _(\"Transpose characters at point\"))\n+{\n+  /* Handle conditions that would make it impossible to transpose\n+     characters. */\n+  if (!count || !input_line_point || (input_line_end - input_line_beg) < 2)\n+    return;\n+\n+  while (count)\n+    {\n+      int t;\n+      if (input_line_point == input_line_end)\n+        {\n+          t = input_line[input_line_point - 1];\n+\n+          input_line[input_line_point - 1] = input_line[input_line_point - 2];\n+          input_line[input_line_point - 2] = t;\n+        }\n+      else\n+        {\n+          t = input_line[input_line_point];\n+\n+          input_line[input_line_point] = input_line[input_line_point - 1];\n+          input_line[input_line_point - 1] = t;\n+\n+          if (count < 0 && input_line_point != input_line_beg)\n+            input_line_point--;\n+          else\n+            input_line_point++;\n+        }\n+\n+      if (count < 0)\n+        count++;\n+      else\n+        count--;\n+    }\n+}\n+\f\n+/* **************************************************************** */\n+/*                                                                  */\n+/*                   Echo Area Killing and Yanking                  */\n+/*                                                                  */\n+/* **************************************************************** */\n+\n+static char **kill_ring = (char **)NULL;\n+static int kill_ring_index = 0; /* Number of kills appearing in KILL_RING. */\n+static int kill_ring_slots = 0; /* Number of slots allocated to KILL_RING. */\n+static int kill_ring_loc = 0;   /* Location of current yank pointer. */\n+\n+/* The largest number of kills that we remember at one time. */\n+static int max_retained_kills = 15;\n+\n+DECLARE_INFO_COMMAND (ea_yank, _(\"Yank back the contents of the last kill\"))\n+{\n+  register int i;\n+  register char *text;\n+\n+  if (!kill_ring_index)\n+    {\n+      inform_in_echo_area (_(\"Kill ring is empty\"));\n+      return;\n+    }\n+\n+  text = kill_ring[kill_ring_loc];\n+\n+  for (i = 0; text[i]; i++)\n+    ea_insert (window, 1, text[i]);\n+}\n+\n+/* If the last command was yank, or yank_pop, and the text just before\n+   point is identical to the current kill item, then delete that text\n+   from the line, rotate the index down, and yank back some other text. */\n+DECLARE_INFO_COMMAND (ea_yank_pop, _(\"Yank back a previous kill\"))\n+{\n+  register int len;\n+\n+  if (((ea_last_executed_command != ea_yank) &&\n+       (ea_last_executed_command != ea_yank_pop)) ||\n+      (kill_ring_index == 0))\n+    return;\n+\n+  len = strlen (kill_ring[kill_ring_loc]);\n+\n+  /* Delete the last yanked item from the line. */\n+  {\n+    register int i, counter;\n+\n+    counter = input_line_end - input_line_point;\n+    \n+    for (i = input_line_point - len; counter; i++, counter--)\n+      input_line[i] = input_line[i + len];\n+\n+    input_line_end -= len;\n+    input_line_point -= len;\n+  }\n+\n+  /* Get a previous kill, and yank that. */\n+  kill_ring_loc--;\n+  if (kill_ring_loc < 0)\n+    kill_ring_loc = kill_ring_index - 1;\n+\n+  ea_yank (window, count, key);\n+}\n+\n+/* Delete the text from point to end of line. */\n+DECLARE_INFO_COMMAND (ea_kill_line, _(\"Kill to the end of the line\"))\n+{\n+  if (count < 0)\n+    {\n+      ea_kill_text (input_line_point, input_line_beg);\n+      input_line_point = input_line_beg;\n+    }\n+  else\n+    ea_kill_text (input_line_point, input_line_end);\n+}\n+\n+/* Delete the text from point to beg of line. */\n+DECLARE_INFO_COMMAND (ea_backward_kill_line,\n+                      _(\"Kill to the beginning of the line\"))\n+{\n+  if (count < 0)\n+    ea_kill_text (input_line_point, input_line_end);\n+  else\n+    {\n+      ea_kill_text (input_line_point, input_line_beg);\n+      input_line_point = input_line_beg;\n+    }\n+}\n+\n+/* Delete from point to the end of the current word. */\n+DECLARE_INFO_COMMAND (ea_kill_word, _(\"Kill the word following the cursor\"))\n+{\n+  int orig_point = input_line_point;\n+\n+  if (count < 0)\n+    ea_backward_kill_word (window, -count, key);\n+  else\n+    {\n+      ea_forward_word (window, count, key);\n+\n+      if (input_line_point != orig_point)\n+        ea_kill_text (orig_point, input_line_point);\n+\n+      input_line_point = orig_point;\n+    }\n+}\n+\n+/* Delete from point to the start of the current word. */\n+DECLARE_INFO_COMMAND (ea_backward_kill_word,\n+                      _(\"Kill the word preceding the cursor\"))\n+{\n+  int orig_point = input_line_point;\n+\n+  if (count < 0)\n+    ea_kill_word (window, -count, key);\n+  else\n+    {\n+      ea_backward_word (window, count, key);\n+\n+      if (input_line_point != orig_point)\n+        ea_kill_text (orig_point, input_line_point);\n+    }\n+}\n+\n+/* The way to kill something.  This appends or prepends to the last\n+   kill, if the last command was a kill command.  If FROM is less\n+   than TO, then the killed text is appended to the most recent kill,\n+   otherwise it is prepended.  If the last command was not a kill command,\n+   then a new slot is made for this kill. */\n+static void\n+ea_kill_text (from, to)\n+     int from, to;\n+{\n+  register int i, counter, distance;\n+  int killing_backwards, slot;\n+  char *killed_text;\n+\n+  killing_backwards = (from > to);\n+\n+  /* If killing backwards, reverse the values of FROM and TO. */\n+  if (killing_backwards)\n+    {\n+      int temp = from;\n+      from = to;\n+      to = temp;\n+    }\n+\n+  /* Remember the text that we are about to delete. */\n+  distance = to - from;\n+  killed_text = (char *)xmalloc (1 + distance);\n+  strncpy (killed_text, &input_line[from], distance);\n+  killed_text[distance] = '\\0';\n+\n+  /* Actually delete the text from the line. */\n+  counter = input_line_end - to;\n+\n+  for (i = from; counter; i++, counter--)\n+    input_line[i] = input_line[i + distance];\n+\n+  input_line_end -= distance;\n+\n+  /* If the last command was a kill, append or prepend the killed text to\n+     the last command's killed text. */\n+  if (echo_area_last_command_was_kill)\n+    {\n+      char *old, *new;\n+\n+      slot = kill_ring_loc;\n+      old = kill_ring[slot];\n+      new = (char *)xmalloc (1 + strlen (old) + strlen (killed_text));\n+\n+      if (killing_backwards)\n+        {\n+          /* Prepend TEXT to current kill. */\n+          strcpy (new, killed_text);\n+          strcat (new, old);\n+        }\n+      else\n+        {\n+          /* Append TEXT to current kill. */\n+          strcpy (new, old);\n+          strcat (new, killed_text);\n+        }\n+\n+      free (old);\n+      free (killed_text);\n+      kill_ring[slot] = new;\n+    }\n+  else\n+    {\n+      /* Try to store the kill in a new slot, unless that would cause there\n+         to be too many remembered kills. */\n+      slot = kill_ring_index;\n+\n+      if (slot == max_retained_kills)\n+        slot = 0;\n+\n+      if (slot + 1 > kill_ring_slots)\n+        kill_ring = (char **) xrealloc\n+          (kill_ring,\n+           (kill_ring_slots += max_retained_kills) * sizeof (char *));\n+\n+      if (slot != kill_ring_index)\n+        free (kill_ring[slot]);\n+      else\n+        kill_ring_index++;\n+\n+      kill_ring[slot] = killed_text;\n+\n+      kill_ring_loc = slot;\n+    }\n+\n+  /* Notice that the last command was a kill. */\n+  echo_area_last_command_was_kill++;\n+}\n+\f\n+/* **************************************************************** */\n+/*                                                                  */\n+/*                      Echo Area Completion                        */\n+/*                                                                  */\n+/* **************************************************************** */\n+\n+/* Pointer to an array of REFERENCE to complete over. */\n+static REFERENCE **echo_area_completion_items = (REFERENCE **)NULL;\n+\n+/* Sorted array of REFERENCE * which is the possible completions found in\n+   the variable echo_area_completion_items.  If there is only one element,\n+   it is the only possible completion. */\n+static REFERENCE **completions_found = (REFERENCE **)NULL;\n+static int completions_found_index = 0;\n+static int completions_found_slots = 0;\n+\n+/* The lowest common denominator found while completing. */\n+static REFERENCE *LCD_completion;\n+\n+/* Internal functions used by the user calls. */\n+static void build_completions (), completions_must_be_rebuilt ();\n+\n+/* Variable which holds the output of completions. */\n+static NODE *possible_completions_output_node = (NODE *)NULL;\n+\n+static char *compwin_name = \"*Completions*\";\n+\n+/* Return non-zero if WINDOW is a window used for completions output. */\n+static int\n+completions_window_p (window)\n+     WINDOW *window;\n+{\n+  int result = 0;\n+\n+  if (internal_info_node_p (window->node) &&\n+      (strcmp (window->node->nodename, compwin_name) == 0))\n+    result = 1;\n+\n+  return (result);\n+}\n+\n+/* Workhorse for completion readers.  If FORCE is non-zero, the user cannot\n+   exit unless the line read completes, or is empty. */\n+char *\n+info_read_completing_internal (window, prompt, completions, force)\n+     WINDOW *window;\n+     char *prompt;\n+     REFERENCE **completions;\n+     int force;\n+{\n+  char *line;\n+\n+  /* If the echo area is already active, remember the current state. */\n+  if (echo_area_is_active)\n+    push_echo_area ();\n+\n+  echo_area_must_complete_p = force;\n+\n+  /* Initialize our local variables. */\n+  initialize_input_line (prompt);\n+\n+  /* Initialize the echo area for the first (but maybe not the last) time. */\n+  echo_area_initialize_node ();\n+\n+  /* Save away the original node of this window, and the window itself,\n+     so echo area commands can temporarily use this window. */\n+  remember_calling_window (window);\n+\n+  /* Save away the list of items to complete over. */\n+  echo_area_completion_items = completions;\n+  completions_must_be_rebuilt ();\n+\n+  active_window = the_echo_area;\n+  echo_area_is_active++;\n+\n+  /* Read characters in the echo area. */\n+  while (1)\n+    {\n+      info_read_and_dispatch ();\n+\n+      line = echo_area_after_read ();\n+\n+      /* Force the completion to take place if the user hasn't accepted\n+         a default or aborted, and if FORCE is active. */\n+      if (force && line && *line && completions)\n+        {\n+          register int i;\n+\n+          build_completions ();\n+\n+          /* If there is only one completion, then make the line be that\n+             completion. */\n+          if (completions_found_index == 1)\n+            {\n+              free (line);\n+              line = xstrdup (completions_found[0]->label);\n+              break;\n+            }\n+\n+          /* If one of the completions matches exactly, then that is okay, so\n+             return the current line. */\n+          for (i = 0; i < completions_found_index; i++)\n+            if (strcasecmp (completions_found[i]->label, line) == 0)\n+              {\n+                free (line);\n+                line = xstrdup (completions_found[i]->label);\n+                break;\n+              }\n+\n+          /* If no match, go back and try again. */\n+          if (i == completions_found_index)\n+            {\n+              inform_in_echo_area (_(\"Not complete\"));\n+              continue;\n+            }\n+        }\n+      break;\n+    }\n+  echo_area_is_active--;\n+\n+  /* Restore the original active window and show point in it. */\n+  active_window = calling_window;\n+  restore_calling_window ();\n+  display_cursor_at_point (active_window);\n+  fflush (stdout);\n+\n+  echo_area_completion_items = (REFERENCE **)NULL;\n+  completions_must_be_rebuilt ();\n+\n+  /* If there is a previous loop waiting for us, restore it now. */\n+  if (echo_area_is_active)\n+    pop_echo_area ();\n+\n+  return (line);\n+}\n+  \n+/* Read a line in the echo area with completion over COMPLETIONS. */\n+char *\n+info_read_completing_in_echo_area (window, prompt, completions)\n+     WINDOW *window;\n+     char *prompt;\n+     REFERENCE **completions;\n+{\n+  return (info_read_completing_internal (window, prompt, completions, 1));\n+}\n+\n+/* Read a line in the echo area allowing completion over COMPLETIONS, but\n+   not requiring it. */\n+char *\n+info_read_maybe_completing (window, prompt, completions)\n+     WINDOW *window;\n+     char *prompt;\n+     REFERENCE **completions;\n+{\n+  return (info_read_completing_internal (window, prompt, completions, 0));\n+}\n+\n+DECLARE_INFO_COMMAND (ea_possible_completions, _(\"List possible completions\"))\n+{\n+  if (!echo_area_completion_items)\n+    {\n+      ea_insert (window, count, key);\n+      return;\n+    }\n+\n+  build_completions ();\n+\n+  if (!completions_found_index)\n+    {\n+      terminal_ring_bell ();\n+      inform_in_echo_area (_(\"No completions\"));\n+    }\n+  else if ((completions_found_index == 1) && (key != '?'))\n+    {\n+      inform_in_echo_area (_(\"Sole completion\"));\n+    }\n+  else\n+    {\n+      register int i, l;\n+      int limit, count, max_label = 0;\n+\n+      initialize_message_buffer ();\n+      printf_to_message_buffer\n+        (_(\"There %s %d \"), completions_found_index == 1 ? _(\"is\") : _(\"are\"),\n+         completions_found_index);\n+      printf_to_message_buffer\n+        (_(\"completion%s:\\n\"), completions_found_index == 1 ? \"\" : \"s\");\n+\n+      /* Find the maximum length of a label. */\n+      for (i = 0; i < completions_found_index; i++)\n+        {\n+          int len = strlen (completions_found[i]->label);\n+          if (len > max_label)\n+            max_label = len;\n+        }\n+\n+      max_label += 4;\n+\n+      /* Find out how many columns we should print in. */\n+      limit = calling_window->width / max_label;\n+      if (limit != 1 && (limit * max_label == calling_window->width))\n+        limit--;\n+\n+      /* Avoid a possible floating exception.  If max_label > width then\n+         the limit will be 0 and a divide-by-zero fault will result. */\n+      if (limit == 0)\n+        limit = 1;\n+\n+      /* How many iterations of the printing loop? */\n+      count = (completions_found_index + (limit - 1)) / limit;\n+\n+      /* Watch out for special case.  If the number of completions is less\n+         than LIMIT, then just do the inner printing loop. */\n+      if (completions_found_index < limit)\n+        count = 1;\n+\n+      /* Print the sorted items, up-and-down alphabetically. */\n+      for (i = 0; i < count; i++)\n+        {\n+          register int j;\n+\n+          for (j = 0, l = i; j < limit; j++)\n+            {\n+              if (l >= completions_found_index)\n+                break;\n+              else\n+                {\n+                  char *label;\n+                  int printed_length, k;\n+\n+                  label = completions_found[l]->label;\n+                  printed_length = strlen (label);\n+                  printf_to_message_buffer (\"%s\", label);\n+\n+                  if (j + 1 < limit)\n+                    {\n+                      for (k = 0; k < max_label - printed_length; k++)\n+                        printf_to_message_buffer (\" \");\n+                    }\n+                }\n+              l += count;\n+            }\n+          printf_to_message_buffer (\"\\n\");\n+        }\n+\n+      /* Make a new node to hold onto possible completions.  Don't destroy\n+         dangling pointers. */\n+      {\n+        NODE *temp;\n+\n+        temp = message_buffer_to_node ();\n+        add_gcable_pointer (temp->contents);\n+        name_internal_node (temp, compwin_name);\n+        possible_completions_output_node = temp;\n+      }\n+\n+      /* Find a suitable window for displaying the completions output.\n+         First choice is an existing window showing completions output.\n+         If there is only one window, and it is large, make another\n+         (smaller) window, and use that one.  Otherwise, use the caller's\n+         window. */\n+      {\n+        WINDOW *compwin;\n+\n+        compwin = get_internal_info_window (compwin_name);\n+\n+        if (!compwin)\n+          {\n+            /* If we can split the window to display most of the completion\n+               items, then do so. */\n+            if (calling_window->height > (count * 2)\n+\t\t&& calling_window->height / 2 >= WINDOW_MIN_SIZE)\n+              {\n+                int start, pagetop;\n+#ifdef SPLIT_BEFORE_ACTIVE\n+                int end;\n+#endif\n+\n+                active_window = calling_window;\n+\n+                /* Perhaps we can scroll this window on redisplay. */\n+                start = calling_window->first_row;\n+                pagetop = calling_window->pagetop;\n+\n+                compwin =\n+                  window_make_window (possible_completions_output_node);\n+                active_window = the_echo_area;\n+                window_change_window_height\n+                  (compwin, -(compwin->height - (count + 2)));\n+\n+                window_adjust_pagetop (calling_window);\n+                remember_calling_window (calling_window);\n+\n+#if defined (SPLIT_BEFORE_ACTIVE)\n+                /* If the pagetop hasn't changed, scrolling the calling\n+                   window is a reasonable thing to do. */\n+                if (pagetop == calling_window->pagetop)\n+                  {\n+                    end = start + calling_window->height;\n+                    display_scroll_display\n+                      (start, end, calling_window->prev->height + 1);\n+                  }\n+#else /* !SPLIT_BEFORE_ACTIVE */\n+                /* If the pagetop has changed, set the new pagetop here. */\n+                if (pagetop != calling_window->pagetop)\n+                  {\n+                    int newtop = calling_window->pagetop;\n+                    calling_window->pagetop = pagetop;\n+                    set_window_pagetop (calling_window, newtop);\n+                  }\n+#endif /* !SPLIT_BEFORE_ACTIVE */\n+\n+                echo_area_completions_window = compwin;\n+                remember_window_and_node (compwin, compwin->node);\n+              }\n+            else\n+              compwin = calling_window;\n+          }\n+\n+        if (compwin->node != possible_completions_output_node)\n+          {\n+            window_set_node_of_window\n+              (compwin, possible_completions_output_node);\n+            remember_window_and_node (compwin, compwin->node);\n+          }\n+\n+        display_update_display (windows);\n+      }\n+    }\n+}\n+\n+DECLARE_INFO_COMMAND (ea_complete, _(\"Insert completion\"))\n+{\n+  if (!echo_area_completion_items)\n+    {\n+      ea_insert (window, count, key);\n+      return;\n+    }\n+\n+  /* If KEY is SPC, and we are not forcing completion to take place, simply\n+     insert the key. */\n+  if (!echo_area_must_complete_p && key == SPC)\n+    {\n+      ea_insert (window, count, key);\n+      return;\n+    }\n+\n+  if (ea_last_executed_command == ea_complete)\n+    {\n+      /* If the keypress is a SPC character, and we have already tried\n+         completing once, and there are several completions, then check\n+         the batch of completions to see if any continue with a space.\n+         If there are some, insert the space character and continue. */\n+      if (key == SPC && completions_found_index > 1)\n+        {\n+          register int i, offset;\n+\n+          offset = input_line_end - input_line_beg;\n+\n+          for (i = 0; i < completions_found_index; i++)\n+            if (completions_found[i]->label[offset] == ' ')\n+              break;\n+\n+          if (completions_found[i])\n+            ea_insert (window, 1, ' ');\n+          else\n+            {\n+              ea_possible_completions (window, count, key);\n+              return;\n+            }\n+        }\n+      else\n+        {\n+          ea_possible_completions (window, count, key);\n+          return;\n+        }\n+    }\n+\n+  input_line_point = input_line_end;\n+  build_completions ();\n+\n+  if (!completions_found_index)\n+    terminal_ring_bell ();\n+  else if (LCD_completion->label[0] == '\\0')\n+    ea_possible_completions (window, count, key);\n+  else\n+    {\n+      register int i;\n+      input_line_point = input_line_end = input_line_beg;\n+      for (i = 0; LCD_completion->label[i]; i++)\n+        ea_insert (window, 1, LCD_completion->label[i]);\n+    }\n+}\n+\n+/* Utility REFERENCE used to store possible LCD. */\n+static REFERENCE LCD_reference = { (char *)NULL, (char *)NULL, (char *)NULL };\n+\n+static void remove_completion_duplicates ();\n+\n+/* Variables which remember the state of the most recent call\n+   to build_completions (). */\n+static char *last_completion_request = (char *)NULL;\n+static REFERENCE **last_completion_items = (REFERENCE **)NULL;\n+\n+/* How to tell the completion builder to reset internal state. */\n+static void\n+completions_must_be_rebuilt ()\n+{\n+  maybe_free (last_completion_request);\n+  last_completion_request = (char *)NULL;\n+  last_completion_items = (REFERENCE **)NULL;\n+}\n+\n+/* Build a list of possible completions from echo_area_completion_items,\n+   and the contents of input_line. */\n+static void\n+build_completions ()\n+{\n+  register int i, len;\n+  register REFERENCE *entry;\n+  char *request;\n+  int informed_of_lengthy_job = 0;\n+\n+  /* If there are no items to complete over, exit immediately. */\n+  if (!echo_area_completion_items)\n+    {\n+      completions_found_index = 0;\n+      LCD_completion = (REFERENCE *)NULL;\n+      return;\n+    }\n+\n+  /* Check to see if this call to build completions is the same as the last\n+     call to build completions. */\n+  len = input_line_end - input_line_beg;\n+  request = (char *)xmalloc (1 + len);\n+  strncpy (request, &input_line[input_line_beg], len);\n+  request[len] = '\\0';\n+\n+  if (last_completion_request && last_completion_items &&\n+      last_completion_items == echo_area_completion_items &&\n+      (strcmp (last_completion_request, request) == 0))\n+    {\n+      free (request);\n+      return;\n+    }\n+\n+  maybe_free (last_completion_request);\n+  last_completion_request = request;\n+  last_completion_items = echo_area_completion_items;\n+\n+  /* Always start at the beginning of the list. */\n+  completions_found_index = 0;\n+  LCD_completion = (REFERENCE *)NULL;\n+\n+  for (i = 0; (entry = echo_area_completion_items[i]); i++)\n+    {\n+      if (strncasecmp (request, entry->label, len) == 0)\n+        add_pointer_to_array (entry, completions_found_index,\n+                              completions_found, completions_found_slots,\n+                              20, REFERENCE *);\n+\n+      if (!informed_of_lengthy_job && completions_found_index > 100)\n+        {\n+          informed_of_lengthy_job = 1;\n+          window_message_in_echo_area (_(\"Building completions...\"));\n+        }\n+    }\n+\n+  if (!completions_found_index)\n+    return;\n+\n+  /* Sort and prune duplicate entries from the completions array. */\n+  remove_completion_duplicates ();\n+\n+  /* If there is only one completion, just return that. */\n+  if (completions_found_index == 1)\n+    {\n+      LCD_completion = completions_found[0];\n+      return;\n+    }\n+\n+  /* Find the least common denominator. */\n+  {\n+    long shortest = 100000;\n+\n+    for (i = 1; i < completions_found_index; i++)\n+      {\n+        register int j;\n+        int c1, c2;\n+\n+        for (j = 0;\n+             (c1 = info_tolower (completions_found[i - 1]->label[j])) &&\n+             (c2 = info_tolower (completions_found[i]->label[j]));\n+             j++)\n+          if (c1 != c2)\n+            break;\n+\n+        if (shortest > j)\n+          shortest = j;\n+      }\n+\n+    maybe_free (LCD_reference.label);\n+    LCD_reference.label = (char *)xmalloc (1 + shortest);\n+    strncpy (LCD_reference.label, completions_found[0]->label, shortest);\n+    LCD_reference.label[shortest] = '\\0';\n+    LCD_completion = &LCD_reference;\n+  }\n+\n+  if (informed_of_lengthy_job)\n+    echo_area_initialize_node ();\n+}\n+\n+/* Function called by qsort. */\n+static int\n+compare_references (entry1, entry2)\n+     REFERENCE **entry1, **entry2;\n+{\n+  return (strcasecmp ((*entry1)->label, (*entry2)->label));\n+}\n+\n+/* Prune duplicate entries from COMPLETIONS_FOUND. */\n+static void\n+remove_completion_duplicates ()\n+{\n+  register int i, j;\n+  REFERENCE **temp;\n+  int newlen;\n+\n+  if (!completions_found_index)\n+    return;\n+\n+  /* Sort the items. */\n+  qsort (completions_found, completions_found_index, sizeof (REFERENCE *),\n+         compare_references);\n+\n+  for (i = 0, newlen = 1; i < completions_found_index - 1; i++)\n+    {\n+      if (strcmp (completions_found[i]->label,\n+                  completions_found[i + 1]->label) == 0)\n+        completions_found[i] = (REFERENCE *)NULL;\n+      else\n+        newlen++;\n+    }\n+\n+  /* We have marked all the dead slots.  It is faster to copy the live slots\n+     twice than to prune the dead slots one by one. */\n+  temp = (REFERENCE **)xmalloc ((1 + newlen) * sizeof (REFERENCE *));\n+  for (i = 0, j = 0; i < completions_found_index; i++)\n+    if (completions_found[i])\n+      temp[j++] = completions_found[i];\n+\n+  for (i = 0; i < newlen; i++)\n+    completions_found[i] = temp[i];\n+\n+  completions_found[i] = (REFERENCE *)NULL;\n+  completions_found_index = newlen;\n+  free (temp);\n+}\n+\n+/* Scroll the \"other\" window.  If there is a window showing completions, scroll\n+   that one, otherwise scroll the window which was active on entering the read\n+   function. */\n+DECLARE_INFO_COMMAND (ea_scroll_completions_window, _(\"Scroll the completions window\"))\n+{\n+  WINDOW *compwin;\n+  int old_pagetop;\n+\n+  compwin = get_internal_info_window (compwin_name);\n+\n+  if (!compwin)\n+    compwin = calling_window;\n+\n+  old_pagetop = compwin->pagetop;\n+\n+  /* Let info_scroll_forward () do the work, and print any messages that\n+     need to be displayed. */\n+  info_scroll_forward (compwin, count, key);\n+}\n+\n+/* Function which gets called when an Info window is deleted while the\n+   echo area is active.  WINDOW is the window which has just been deleted. */\n+void\n+echo_area_inform_of_deleted_window (window)\n+     WINDOW *window;\n+{\n+  /* If this is the calling_window, forget what we remembered about it. */\n+  if (window == calling_window)\n+    {\n+      if (active_window != the_echo_area)\n+        remember_calling_window (active_window);\n+      else\n+        remember_calling_window (windows);\n+    }\n+\n+  /* If this window was the echo_area_completions_window, then notice that\n+     the window has been deleted. */\n+  if (window == echo_area_completions_window)\n+    echo_area_completions_window = (WINDOW *)NULL;\n+}\n+\f\n+/* **************************************************************** */\n+/*                                                                  */\n+/*                 Pushing and Popping the Echo Area                */\n+/*                                                                  */\n+/* **************************************************************** */\n+\n+/* Push and Pop the echo area. */\n+typedef struct {\n+  char *line;\n+  char *prompt;\n+  REFERENCE **comp_items;\n+  int point, beg, end;\n+  int must_complete;\n+  NODE node;\n+  WINDOW *compwin;\n+} PUSHED_EA;\n+\n+static PUSHED_EA **pushed_echo_areas = (PUSHED_EA **)NULL;\n+static int pushed_echo_areas_index = 0;\n+static int pushed_echo_areas_slots = 0;\n+\n+/* Pushing the echo_area has a side effect of zeroing the completion_items. */\n+static void\n+push_echo_area ()\n+{\n+  PUSHED_EA *pushed;\n+\n+  pushed = (PUSHED_EA *)xmalloc (sizeof (PUSHED_EA));\n+  pushed->line = xstrdup (input_line);\n+  pushed->prompt = input_line_prompt;\n+  pushed->point = input_line_point;\n+  pushed->beg = input_line_beg;\n+  pushed->end = input_line_end;\n+  pushed->node = input_line_node;\n+  pushed->comp_items = echo_area_completion_items;\n+  pushed->must_complete = echo_area_must_complete_p;\n+  pushed->compwin = echo_area_completions_window;\n+\n+  add_pointer_to_array (pushed, pushed_echo_areas_index, pushed_echo_areas,\n+                        pushed_echo_areas_slots, 4, PUSHED_EA *);\n+\n+  echo_area_completion_items = (REFERENCE **)NULL;\n+}\n+\n+static void\n+pop_echo_area ()\n+{\n+  PUSHED_EA *popped;\n+\n+  popped = pushed_echo_areas[--pushed_echo_areas_index];\n+\n+  strcpy (input_line, popped->line);\n+  free (popped->line);\n+  input_line_prompt = popped->prompt;\n+  input_line_point = popped->point;\n+  input_line_beg = popped->beg;\n+  input_line_end = popped->end;\n+  input_line_node = popped->node;\n+  echo_area_completion_items = popped->comp_items;\n+  echo_area_must_complete_p = popped->must_complete;\n+  echo_area_completions_window = popped->compwin;\n+  completions_must_be_rebuilt ();\n+\n+  /* If the completion window no longer exists, forget about it. */\n+  if (echo_area_completions_window)\n+    {\n+      register WINDOW *win;\n+\n+      for (win = windows; win; win = win->next)\n+        if (echo_area_completions_window == win)\n+          break;\n+\n+      /* If the window wasn't found, then it has already been deleted. */\n+      if (!win)\n+        echo_area_completions_window = (WINDOW *)NULL;\n+    }\n+\n+  free (popped);\n+}\n+\n+/* Returns non-zero if any of the prior stacked calls to read in the echo\n+   area produced a completions window. */\n+static int\n+echo_area_stack_contains_completions_p ()\n+{\n+  register int i;\n+\n+  for (i = 0; i < pushed_echo_areas_index; i++)\n+    if (pushed_echo_areas[i]->compwin)\n+      return (1);\n+\n+  return (0);\n+}\n+\f\n+/* **************************************************************** */\n+/*                                                                  */\n+/*             Error Messages While Reading in Echo Area            */\n+/*                                                                  */\n+/* **************************************************************** */\n+\n+#if defined (HAVE_SYS_TIME_H)\n+#  include <sys/time.h>\n+#  define HAVE_STRUCT_TIMEVAL\n+#endif /* HAVE_SYS_TIME_H */\n+\n+static void\n+pause_or_input ()\n+{\n+#if defined (FD_SET)\n+  struct timeval timer;\n+  fd_set readfds;\n+  int ready;\n+\n+  FD_ZERO (&readfds);\n+  FD_SET (fileno (stdin), &readfds);\n+  timer.tv_sec = 2;\n+  timer.tv_usec = 750;\n+  ready = select (fileno (stdin) + 1, &readfds, (fd_set *) NULL,\n+                  (fd_set *) NULL, &timer);\n+#endif /* FD_SET */\n+}\n+\n+/* Print MESSAGE right after the end of the current line, and wait\n+   for input or 2.75 seconds, whichever comes first.  Then flush the\n+   informational message that was printed. */\n+void\n+inform_in_echo_area (message)\n+     char *message;\n+{\n+  register int i;\n+  char *text;\n+\n+  text = xstrdup (message);\n+  for (i = 0; text[i] && text[i] != '\\n'; i++);\n+  text[i] = '\\0';\n+\n+  echo_area_initialize_node ();\n+  sprintf (&input_line[input_line_end], \"%s[%s]\\n\",\n+           echo_area_is_active ? \" \": \"\", text);\n+  free (text);\n+  the_echo_area->point = input_line_point;\n+  display_update_one_window (the_echo_area);\n+  display_cursor_at_point (active_window);\n+  fflush (stdout);\n+  pause_or_input ();\n+  echo_area_initialize_node ();\n+}"}, {"sha": "b2386790c61969e08d3dce3b65ba60e0dadf12e2", "filename": "texinfo/info/echo-area.h", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Finfo%2Fecho-area.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Finfo%2Fecho-area.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Finfo%2Fecho-area.h?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,64 @@\n+/* echo-area.h -- Functions used in reading information from the echo area.\n+   $Id: echo-area.h,v 1.1 1998/03/23 04:42:27 law Exp $\n+\n+   This file is part of GNU Info, a program for reading online documentation\n+   stored in Info format.\n+\n+   Copyright (C) 1993, 97 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+\n+   Written by Brian Fox (bfox@ai.mit.edu). */\n+\n+#ifndef INFO_ECHO_AREA_H\n+#define INFO_ECHO_AREA_H\n+\n+#define EA_MAX_INPUT 256\n+\n+extern int echo_area_is_active, info_aborted_echo_area;\n+\n+/* Non-zero means that the last command executed while reading input\n+   killed some text. */\n+extern int echo_area_last_command_was_kill;\n+\n+extern void inform_in_echo_area (), echo_area_inform_of_deleted_window ();\n+extern void echo_area_prep_read ();\n+extern VFunction *ea_last_executed_command;\n+\n+/* Read a line of text in the echo area.  Return a malloc ()'ed string,\n+   or NULL if the user aborted out of this read.  WINDOW is the currently\n+   active window, so that we can restore it when we need to.  PROMPT, if\n+   non-null, is a prompt to print before reading the line. */\n+extern char *info_read_in_echo_area ();\n+\n+/* Read a line in the echo area with completion over COMPLETIONS.\n+   Takes arguments of WINDOW, PROMPT, and COMPLETIONS, a REFERENCE **. */\n+char *info_read_completing_in_echo_area ();\n+\n+/* Read a line in the echo area allowing completion over COMPLETIONS, but\n+   not requiring it.  Takes arguments of WINDOW, PROMPT, and COMPLETIONS,\n+   a REFERENCE **. */\n+extern char *info_read_maybe_completing ();\n+\n+extern void ea_insert (), ea_quoted_insert ();\n+extern void ea_beg_of_line (), ea_backward (), ea_delete (), ea_end_of_line ();\n+extern void ea_forward (), ea_abort (), ea_rubout (), ea_complete ();\n+extern void ea_newline (), ea_kill_line (), ea_transpose_chars ();\n+extern void ea_yank (), ea_tab_insert (), ea_possible_completions ();\n+extern void ea_backward_word (), ea_kill_word (), ea_forward_word ();\n+extern void ea_yank_pop (), ea_backward_kill_word ();\n+extern void ea_scroll_completions_window ();\n+\n+#endif /* not INFO_ECHO_AREA_H */"}, {"sha": "45fcb6ae274709e6122ccfce74e64ced0f783ffc", "filename": "texinfo/info/funs.h", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Finfo%2Ffuns.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Finfo%2Ffuns.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Finfo%2Ffuns.h?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,111 @@\n+/* funs.h -- Generated declarations for Info commands. */\n+\n+/* Functions declared in \"./session.c\". */\n+extern void info_next_line ();\n+extern void info_prev_line ();\n+extern void info_end_of_line ();\n+extern void info_beginning_of_line ();\n+extern void info_forward_char ();\n+extern void info_backward_char ();\n+extern void info_forward_word ();\n+extern void info_backward_word ();\n+extern void info_global_next_node ();\n+extern void info_global_prev_node ();\n+extern void info_scroll_forward ();\n+extern void info_scroll_backward ();\n+extern void info_beginning_of_node ();\n+extern void info_end_of_node ();\n+extern void info_next_window ();\n+extern void info_prev_window ();\n+extern void info_split_window ();\n+extern void info_delete_window ();\n+extern void info_keep_one_window ();\n+extern void info_scroll_other_window ();\n+extern void info_grow_window ();\n+extern void info_tile_windows ();\n+extern void info_toggle_wrap ();\n+extern void info_next_node ();\n+extern void info_prev_node ();\n+extern void info_up_node ();\n+extern void info_last_node ();\n+extern void info_first_node ();\n+extern void info_history_node ();\n+extern void info_last_menu_item ();\n+extern void info_menu_digit ();\n+extern void info_menu_item ();\n+extern void info_xref_item ();\n+extern void info_find_menu ();\n+extern void info_visit_menu ();\n+extern void info_goto_node ();\n+extern void info_man ();\n+extern void info_top_node ();\n+extern void info_dir_node ();\n+extern void info_kill_node ();\n+extern void info_view_file ();\n+extern void info_print_node ();\n+extern void info_search ();\n+extern void isearch_forward ();\n+extern void isearch_backward ();\n+extern void info_move_to_prev_xref ();\n+extern void info_move_to_next_xref ();\n+extern void info_select_reference_this_line ();\n+extern void info_abort_key ();\n+extern void info_move_to_window_line ();\n+extern void info_redraw_display ();\n+extern void info_quit ();\n+extern void info_do_lowercase_version ();\n+extern void info_add_digit_to_numeric_arg ();\n+extern void info_universal_argument ();\n+extern void info_numeric_arg_digit_loop ();\n+\n+/* Functions declared in \"./echo-area.c\". */\n+extern void ea_forward ();\n+extern void ea_backward ();\n+extern void ea_beg_of_line ();\n+extern void ea_end_of_line ();\n+extern void ea_forward_word ();\n+extern void ea_backward_word ();\n+extern void ea_delete ();\n+extern void ea_rubout ();\n+extern void ea_abort ();\n+extern void ea_newline ();\n+extern void ea_quoted_insert ();\n+extern void ea_insert ();\n+extern void ea_tab_insert ();\n+extern void ea_transpose_chars ();\n+extern void ea_yank ();\n+extern void ea_yank_pop ();\n+extern void ea_kill_line ();\n+extern void ea_backward_kill_line ();\n+extern void ea_kill_word ();\n+extern void ea_backward_kill_word ();\n+extern void ea_possible_completions ();\n+extern void ea_complete ();\n+extern void ea_scroll_completions_window ();\n+\n+/* Functions declared in \"./infodoc.c\". */\n+extern void info_get_help_window ();\n+extern void info_get_info_help_node ();\n+extern void describe_key ();\n+extern void info_where_is ();\n+\n+/* Functions declared in \"./m-x.c\". */\n+extern void describe_command ();\n+extern void info_execute_command ();\n+extern void set_screen_height ();\n+\n+/* Functions declared in \"./indices.c\". */\n+extern void info_index_search ();\n+extern void info_next_index_match ();\n+extern void info_index_apropos ();\n+\n+/* Functions declared in \"./nodemenu.c\". */\n+extern void list_visited_nodes ();\n+extern void select_visited_node ();\n+\n+/* Functions declared in \"./footnotes.c\". */\n+extern void info_show_footnotes ();\n+\n+/* Functions declared in \"./variables.c\". */\n+extern void describe_variable ();\n+extern void set_variable ();"}, {"sha": "718808e087b352ccb29f74ddd4410256e426c4f2", "filename": "texinfo/intl/ChangeLog", "status": "added", "additions": 971, "deletions": 0, "changes": 971, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2FChangeLog?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,971 @@\n+Thu Sep  4 15:01:11 1997  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* Makefile.in (install-info): Add dummy target.\n+\n+Mon Mar 10 06:51:17 1997  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* Makefile.in: Implement handling of libtool.\n+\n+\t* gettextP.h: Change data structures for use of generic lowlevel\n+\ti18n file handling.\n+\n+Wed Dec  4 20:21:18 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* textdomain.c: Put parentheses around arguments of memcpy macro\n+\tdefinition.\n+\t* localealias.c: Likewise.\n+\t* l10nflist.c: Likewise.\n+\t* finddomain.c: Likewise.\n+\t* bindtextdom.c: Likewise.\n+\tReported by Thomas Esken.\n+\n+Mon Nov 25 22:57:51 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* textdomain.c: Move definition of `memcpy` macro to right\n+\tposition.\n+\n+Fri Nov 22 04:01:58 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* finddomain.c [!HAVE_STRING_H && !_LIBC]: Define memcpy using\n+ \tbcopy if not already defined.  Reported by Thomas Esken.\n+\t* bindtextdom.c: Likewise.\n+\t* l10nflist.c: Likewise.\n+\t* localealias.c: Likewise.\n+\t* textdomain.c: Likewise.\n+\n+Tue Oct 29 11:10:27 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* Makefile.in (libdir): Change to use exec_prefix instead of\n+ \tprefix.  Reported by Knut-H\ufffdvardAksnes <etokna@eto.ericsson.se>.\n+\n+Sat Aug 31 03:07:09 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* l10nflist.c (_nl_normalize_codeset): We convert to lower case,\n+\tso don't prepend uppercase `ISO' for only numeric arg.\n+\n+Fri Jul 19 00:15:46 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* l10nflist.c: Move inclusion of argz.h, ctype.h, stdlib.h after\n+\tdefinition of _GNU_SOURCE.  Patch by Roland McGrath.\n+\n+\t* Makefile.in (uninstall): Fix another bug with `for' loop and\n+\tempty arguments.  Patch by Jim Meyering.  Correct name os\n+\tuninstalled files: no intl- prefix anymore.\n+\n+\t* Makefile.in (install-data): Again work around shells which\n+\tcannot handle mpty for list.  Reported by Jim Meyering.\n+\n+Sat Jul 13 18:11:35 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* Makefile.in (install): Split goal.  Now depend on install-exec\n+        and install-data.\n+\t(install-exec, install-data): New goals.  Created from former\n+\tinstall goal.\n+\tReported by Karl Berry.\n+\n+Sat Jun 22 04:58:14 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* Makefile.in (MKINSTALLDIRS): New variable.  Path to\n+        mkinstalldirs script.\n+\t(install): use MKINSTALLDIRS variable or if the script is not present\n+\ttry to find it in the $top_scrdir).\n+\n+Wed Jun 19 02:56:56 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* l10nflist.c: Linux libc *partly* includes the argz_* functions.\n+\tGrr.  Work around by renaming the static version and use macros\n+\tfor renaming.\n+\n+Tue Jun 18 20:11:17 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* l10nflist.c: Correct presence test macros of __argz_* functions.\n+\n+\t* l10nflist.c: Include <argz.h> based on test of it instead when\n+\t__argz_* functions are available.\n+\tReported by Andreas Schwab.\n+\n+Thu Jun 13 15:17:44 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* explodename.c, l10nflist.c: Define NULL for dumb systems.\n+\n+Tue Jun 11 17:05:13 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* intlh.inst.in, libgettext.h (dcgettext): Rename local variable\n+\tresult to __result to prevent name clash.\n+\n+\t* l10nflist.c, localealias.c, dcgettext.c: Define _GNU_SOURCE to\n+        get prototype for stpcpy and strcasecmp.\n+\n+\t* intlh.inst.in, libgettext.h: Move declaration of\n+\t`_nl_msg_cat_cntr' outside __extension__ block to prevent warning\n+\tfrom gcc's -Wnested-extern option.\n+\n+Fri Jun  7 01:58:00 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* Makefile.in (install): Remove comment.\n+\n+Thu Jun  6 17:28:17 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* Makefile.in (install): Work around for another Buglix stupidity.\n+\tAlways use an `else' close for `if's.  Reported by Nelson Beebe.\n+\n+\t* Makefile.in (intlh.inst): Correct typo in phony rule.\n+\tReported by Nelson Beebe.\n+\n+Thu Jun  6 01:49:52 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* dcgettext.c (read_alias_file): Rename variable alloca_list to\n+\tblock_list as the macro calls assume.\n+\tPatch by Eric Backus.\n+\n+\t* localealias.c [!HAVE_ALLOCA]: Define alloca as macro using\n+        malloc.\n+\t(read_alias_file): Rename varriabe alloca_list to block_list as the\n+\tmacro calls assume.\n+\tPatch by Eric Backus.\n+\n+\t* l10nflist.c: Correct conditional for <argz.h> inclusion.\n+\tReported by Roland McGrath.\n+\n+\t* Makefile.in (all): Depend on all-@USE_INCLUDED_LIBINTL@, not\n+        all-@USE_NLS@.\n+\n+\t* Makefile.in (install): intlh.inst comes from local dir, not\n+        $(srcdir).\n+\n+\t* Makefile.in (intlh.inst): Special handling of this goal.  If\n+\tused in gettext, this is really a rul to construct this file.  If\n+\tused in any other package it is defined as a .PHONY rule with\n+\tempty body.\n+\n+\t* finddomain.c: Extract locale file information handling into\n+\tl10nfile.c.  Rename local stpcpy__ function to stpcpy.\n+\n+\t* dcgettext.c (stpcpy): Add local definition.\n+\n+\t* l10nflist.c: Solve some portability problems.  Patches partly by\n+\tThomas Esken.  Add local definition of stpcpy.\n+\n+Tue Jun  4 02:47:49 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* intlh.inst.in: Don't depend including <locale.h> on\n+\tHAVE_LOCALE_H.  Instead configure must rewrite this fiile\n+\tdepending on the result of the configure run.\n+\n+\t* Makefile.in (install): libintl.inst is now called intlh.inst.\n+\tAdd rules for updating intlh.inst from intlh.inst.in.\n+\n+\t* libintl.inst: Renamed to intlh.inst.in.\n+\n+\t* localealias.c, dcgettext.c [__GNUC__]: Define HAVE_ALLOCA to 1\n+        because gcc has __buitlin_alloca.\n+\tReported by Roland McGrath.\n+\n+Mon Jun  3 00:32:16 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* Makefile.in (installcheck): New goal to fulfill needs of\n+        automake's distcheck.\n+\n+\t* Makefile.in (install): Reorder commands so that VERSION is\n+        found.\n+\n+\t* Makefile.in (gettextsrcdir): Now use subdirectory intl/ in\n+        @datadir@/gettext.\n+\t(COMSRCS): Add l10nfile.c.\n+\t(OBJECTS): Add l10nfile.o.\n+\t(DISTFILES): Rename to DISTFILE.normal.  Remove $(DISTFILES.common).\n+\t(DISTFILE.gettext): Remove $(DISTFILES.common).\n+\t(all-gettext): Remove goal.\n+\t(install): If $(PACKAGE) = gettext install, otherwose do nothing.  No\n+\tpackage but gettext itself should install libintl.h + headers.\n+\t(dist): Extend goal to work for gettext, too.\n+\t(dist-gettext): Remove goal.\n+\n+\t* dcgettext.c [!HAVE_ALLOCA]: Define macro alloca by using malloc.\n+\n+Sun Jun  2 17:33:06 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* loadmsgcat.c (_nl_load_domain): Parameter is now comes from\n+        find_l10nfile.\n+\n+Sat Jun  1 02:23:03 1996  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* l10nflist.c (__argz_next): Add definition.\n+\n+\t* dcgettext.c [!HAVE_ALLOCA]: Add code for handling missing alloca\n+\tcode.  Use new l10nfile handling.\n+\n+\t* localealias.c [!HAVE_ALLOCA]: Add code for handling missing\n+        alloca code.\n+\n+\t* l10nflist.c: Initial revision.\n+\n+Tue Apr  2 18:51:18 1996  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (all-gettext): New goal.  Same as all-yes.\n+\n+Thu Mar 28 23:01:22 1996  Karl Eichwalder  <ke@ke.central.de>\n+\n+\t* Makefile.in (gettextsrcdir): Define using @datadir@.\n+\n+Tue Mar 26 12:39:14 1996  Ulrich Drepper  <drepper@myware>\n+\n+\t* finddomain.c: Include <ctype.h>.  Reported by Roland McGrath.\n+\n+Sat Mar 23 02:00:35 1996  Ulrich Drepper  <drepper@myware>\n+\n+\t* finddomain.c (stpcpy): Rename to stpcpy__ to prevent clashing\n+        with external declaration.\n+\n+Sat Mar  2 00:47:09 1996  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (all-no): Rename from all_no.\n+\n+Sat Feb 17 00:25:59 1996  Ulrich Drepper  <drepper@myware>\n+\n+\t* gettextP.h [loaded_domain]: Array `successor' must now contain up\n+        to 63 elements (because of codeset name normalization).\n+\n+\t* finddomain.c: Implement codeset name normalization.\n+\n+Thu Feb 15 04:39:09 1996  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (all): Define to `all-@USE_NLS@'.\n+\t(all-yes, all_no): New goals.  `all-no' is noop, `all-yes'\n+\tis former all.\n+\n+Mon Jan 15 21:46:01 1996  Howard Gayle  <howard@hal.com>\n+\n+\t* localealias.c (alias_compare): Increment string pointers in loop\n+        of strcasecmp replacement.\n+\n+Fri Dec 29 21:16:34 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (install-src): Who commented this goal out ? :-)\n+\n+Fri Dec 29 15:08:16 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* dcgettext.c (DCGETTEXT): Save `errno'.  Failing system calls\n+\tshould not effect it because a missing catalog is no error.\n+\tReported by Harald K<o:>nig <koenig@tat.physik.uni-tuebingen.de>.\n+\n+Tue Dec 19 22:09:13 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (Makefile): Explicitly use $(SHELL) for running\n+        shell scripts.\n+\n+Fri Dec 15 17:34:59 1995  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* Makefile.in (install-src): Only install library and header when\n+\twe use the own implementation.  Don't do it when using the\n+\tsystem's gettext or catgets functions.\n+\n+\t* dcgettext.c (find_msg): Must not swap domain->hash_size here.\n+\n+Sat Dec  9 16:24:37 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* localealias.c, libintl.inst, libgettext.h, hash-string.h,\n+\tgettextP.h, finddomain.c, dcgettext.c, cat-compat.c:\n+\tUse PARAMS instead of __P.  Suggested by Roland McGrath.\n+\n+Tue Dec  5 11:39:14 1995  Larry Schwimmer  <rosebud@cyclone.stanford.edu>\n+\n+\t* libgettext.h: Use `#if !defined (_LIBINTL_H)' instead of `#if\n+\t!_LIBINTL_H' because Solaris defines _LIBINTL_H as empty.\n+\n+Mon Dec  4 15:42:07 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (install-src):\n+\tInstall libintl.inst instead of libintl.h.install.\n+\n+Sat Dec  2 22:51:38 1995  Marcus Daniels  <marcus@sysc.pdx.edu>\n+\n+\t* cat-compat.c (textdomain):\n+\tReverse order in which files are tried you load.  First\n+\ttry local file, when this failed absolute path.\n+\n+Wed Nov 29 02:03:53 1995  Nelson H. F. Beebe  <beebe@math.utah.edu>\n+\n+\t* cat-compat.c (bindtextdomain): Add missing { }.\n+\n+Sun Nov 26 18:21:41 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* libintl.inst: Add missing __P definition.  Reported by Nelson Beebe.\n+\n+\t* Makefile.in:\n+\tAdd dummy `all' and `dvi' goals.  Reported by Tom Tromey.\n+\n+Sat Nov 25 16:12:01 1995  Franc,ois Pinard  <pinard@iro.umontreal.ca>\n+\n+\t* hash-string.h: Capitalize arguments of macros.\n+\n+Sat Nov 25 12:01:36 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (DISTFILES): Prevent files names longer than 13\n+\tcharacters.  libintl.h.glibc->libintl.glibc,\n+\tlibintl.h.install->libintl.inst.  Reported by Joshua R. Poulson.\n+\n+Sat Nov 25 11:31:12 1995  Eric Backus  <ericb@lsid.hp.com>\n+\n+\t* dcgettext.c: Fix bug in preprocessor conditionals.\n+\n+Sat Nov 25 02:35:27 1995  Nelson H. F. Beebe  <beebe@math.utah.edu>\n+\n+\t* libgettext.h: Solaris cc does not understand\n+\t #if !SYMBOL1 && !SYMBOL2.  Sad\tbut true.\n+\n+Thu Nov 23 16:22:14 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* hash-string.h (hash_string):\n+\tFix for machine with >32 bit `unsigned long's.\n+\n+\t* dcgettext.c (DCGETTEXT):\n+\tFix horrible bug in loop for alternative translation.\n+\n+Thu Nov 23 01:45:29 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* po2tbl.sed.in, linux-msg.sed, xopen-msg.sed:\n+\tSome further simplifications in message number generation.\n+\n+Mon Nov 20 21:08:43 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* libintl.h.glibc: Use __const instead of const in prototypes.\n+\n+\t* Makefile.in (install-src):\n+\tInstall libintl.h.install instead of libintl.h.  This\n+\tis a stripped-down version.  Suggested by Peter Miller.\n+\n+\t* libintl.h.install, libintl.h.glibc: Initial revision.\n+\n+\t* localealias.c (_nl_expand_alias, read_alias_file):\n+\tProtect prototypes in type casts by __P.\n+\n+Tue Nov 14 16:43:58 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* hash-string.h: Correct prototype for hash_string.\n+\n+Sun Nov 12 12:42:30 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* hash-string.h (hash_string): Add prototype.\n+\n+\t* gettextP.h: Fix copyright.\n+\t(SWAP): Add prototype.\n+\n+Wed Nov  8 22:56:33 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* localealias.c (read_alias_file): Forgot sizeof.\n+\tAvoid calling *printf function.  This introduces a big overhead.\n+\tPatch by Roland McGrath.\n+\n+Tue Nov  7 14:21:08 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* finddomain.c, cat-compat.c: Wrong indentation in #if for stpcpy.\n+\n+\t* finddomain.c (stpcpy):\n+\tDefine substitution function local.  The macro was to flaky.\n+\n+\t* cat-compat.c: Fix typo.\n+\n+\t* xopen-msg.sed, linux-msg.sed:\n+\tWhile bringing message number to right place only accept digits.\n+\n+\t* linux-msg.sed, xopen-msg.sed: Now that the counter does not have\n+\tleading 0s we don't need to remove them.  Reported by Marcus\n+\tDaniels.\n+\n+\t* Makefile.in (../po/cat-id-tbl.o): Use $(top_srdir) in\n+\tdependency.  Reported by Marcus Daniels.\n+\n+\t* cat-compat.c: (stpcpy) [!_LIBC && !HAVE_STPCPY]: Define replacement.\n+\tGenerally cleanup using #if instead of #ifndef.\n+\n+\t* Makefile.in: Correct typos in comment.  By Franc,ois Pinard.\n+\n+Mon Nov  6 00:27:02 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (install-src): Don't install libintl.h and libintl.a\n+\tif we use an available gettext implementation.\n+\n+Sun Nov  5 22:02:08 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* libgettext.h: Fix typo: HAVE_CATGETTS -> HAVE_CATGETS.  Reported\n+\tby Franc,ois Pinard.\n+\n+\t* libgettext.h: Use #if instead of #ifdef/#ifndef.\n+\n+\t* finddomain.c:\n+\tComments describing what has to be done should start with FIXME.\n+\n+Sun Nov  5 19:38:01 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (DISTFILES): Split.  Use DISTFILES with normal meaning.\n+\tDISTFILES.common names the files common to both dist goals.\n+\tDISTFILES.gettext are the files only distributed in GNU gettext.\n+\n+Sun Nov  5 17:32:54 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* dcgettext.c (DCGETTEXT): Correct searching in derived locales.\n+\tThis was necessary since a change in _nl_find_msg several weeks\n+\tago.  I really don't know this is still not fixed.\n+\n+Sun Nov  5 12:43:12 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* loadmsgcat.c (_nl_load_domain): Test for FILENAME == NULL.  This\n+\tmight mark a special condition.\n+\n+\t* finddomain.c (make_entry_rec): Don't make illegal entry as decided.\n+\n+\t* Makefile.in (dist): Suppress error message when ln failed.\n+\tGet files from $(srcdir) explicitly.\n+\n+\t* libgettext.h (gettext_const): Rename to gettext_noop.\n+\n+Fri Nov  3 07:36:50 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* finddomain.c (make_entry_rec):\n+\tProtect against wrong locale names by testing mask.\n+\n+\t* libgettext.h (gettext_const): Add macro definition.\n+\tCapitalize macro arguments.\n+\n+Thu Nov  2 23:15:51 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* finddomain.c (_nl_find_domain):\n+\tTest for pointer != NULL before accessing value.\n+\tReported by Tom Tromey.\n+\n+\t* gettext.c (NULL):\n+\tDefine as (void*)0 instad of 0.  Reported by Franc,ois Pinard.\n+\n+Mon Oct 30 21:28:52 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* po2tbl.sed.in: Serious typo bug fixed by Jim Meyering.\n+\n+Sat Oct 28 23:20:47 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* libgettext.h: Disable dcgettext optimization for Solaris 2.3.\n+\n+\t* localealias.c (alias_compare):\n+\tPeter Miller reported that tolower in some systems is\n+\teven dumber than I thought.  Protect call by `isupper'.\n+\n+Fri Oct 27 22:22:51 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (libdir, includedir): New variables.\n+\t(install-src): Install libintl.a and libintl.h in correct dirs.\n+\n+Fri Oct 27 22:07:29 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (SOURCES): Fix typo: intrl.compat.c -> intl-compat.c.\n+\n+\t* po2tbl.sed.in: Patch for buggy SEDs by Christian von Roques.\n+\n+\t* localealias.c:\n+\tFix typo and superflous test.  Reported by Christian von Roques.\n+\n+Fri Oct  6 11:52:05 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* finddomain.c (_nl_find_domain):\n+\tCorrect some remainder from the pre-CEN syntax.  Now\n+\twe don't have a constant number of successors anymore.\n+\n+Wed Sep 27 21:41:13 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (DISTFILES): Add libintl.h.glibc.\n+\n+\t* Makefile.in (dist-libc): Add goal for packing sources for glibc.\n+\t(COMSRCS, COMHDRS): Splitted to separate sources shared with glibc.\n+\n+\t* loadmsgcat.c: Forget to continue #if line.\n+\n+\t* localealias.c:\n+\t[_LIBC]: Rename strcasecmp to __strcasecmp to keep ANSI C name\n+\tspace clean.\n+\n+\t* dcgettext.c, finddomain.c: Better comment to last change.\n+\n+\t* loadmsgcat.c:\n+\t[_LIBC]: Rename fstat, open, close, read, mmap, and munmap to\n+\t__fstat, __open, __close, __read, __mmap, and __munmap resp\n+\tto keep ANSI C name space clean.\n+\n+\t* finddomain.c:\n+\t[_LIBC]: Rename stpcpy to __stpcpy to keep ANSI C name space clean.\n+\n+\t* dcgettext.c:\n+\t[_LIBC]: Rename getced and stpcpy to __getcwd and __stpcpy resp to\n+\tkeep ANSI C name space clean.\n+\n+\t* libgettext.h:\n+\tInclude sys/types.h for those old SysV systems out there.\n+\tReported by Francesco Potorti`.\n+\n+\t* loadmsgcat.c (use_mmap): Define if compiled for glibc.\n+\n+\t* bindtextdom.c: Include all those standard headers\n+\tunconditionally if _LIBC is defined.\n+\n+\t* finddomain.c: Fix 2 times defiend -> defined.\n+\n+\t* textdomain.c: Include libintl.h instead of libgettext.h when\n+\tcompiling for glibc.  Include all those standard headers\n+\tunconditionally if _LIBC is defined.\n+\n+\t* localealias.c, loadmsgcat.c: Prepare to be compiled in glibc.\n+\n+\t* gettext.c:\n+\tInclude libintl.h instead of libgettext.h when compiling for glibc.\n+\tGet NULL from stddef.h if we compile for glibc.\n+\n+\t* finddomain.c: Include libintl.h instead of libgettext.h when\n+\tcompiling for glibc.  Include all those standard headers\n+\tunconditionally if _LIBC is defined.\n+\n+\t* dcgettext.c: Include all those standard headers unconditionally\n+\tif _LIBC is defined.\n+\n+\t* dgettext.c: If compiled in glibc include libintl.h instead of\n+\tlibgettext.h.\n+\t(locale.h): Don't rely on HAVE_LOCALE_H when compiling for glibc.\n+\n+\t* dcgettext.c: If compiled in glibc include libintl.h instead of\n+\tlibgettext.h.\n+\t(getcwd): Don't rely on HAVE_GETCWD when compiling for glibc.\n+\n+\t* bindtextdom.c:\n+\tIf compiled in glibc include libintl.h instead of libgettext.h.\n+\n+Mon Sep 25 22:23:06 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* localealias.c (_nl_expand_alias): Don't call bsearch if NMAP <= 0.\n+\tReported by Marcus Daniels.\n+\n+\t* cat-compat.c (bindtextdomain):\n+\tString used in putenv must not be recycled.\n+\tReported by Marcus Daniels.\n+\n+\t* libgettext.h (__USE_GNU_GETTEXT):\n+\tAdditional symbol to signal that we use GNU gettext\n+\tlibrary.\n+\n+\t* cat-compat.c (bindtextdomain):\n+\tFix bug with the strange stpcpy replacement.\n+\tReported by Nelson Beebe.\n+\n+Sat Sep 23 08:23:51 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* cat-compat.c: Include <string.h> for stpcpy prototype.\n+\n+\t* localealias.c (read_alias_file):\n+\tWhile expand strdup code temporary variable `cp' hided\n+\thigher level variable with same name.  Rename to `tp'.\n+\n+\t* textdomain.c (textdomain):\n+\tAvoid warning by using temporary variable in strdup code.\n+\n+\t* finddomain.c (_nl_find_domain): Remove unused variable `application'.\n+\n+Thu Sep 21 15:51:44 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* localealias.c (alias_compare):\n+\tUse strcasecmp() only if available.  Else use\n+\timplementation in place.\n+\n+\t* intl-compat.c:\n+\tWrapper functions now call *__ functions instead of __*.\n+\n+\t* libgettext.h: Declare prototypes for *__ functions instead for __*.\n+\n+\t* cat-compat.c, loadmsgcat.c:\n+\tDon't use xmalloc, xstrdup, and stpcpy.  These functions are not part\n+\tof the standard libc and so prevent libintl.a from being used\n+\tstandalone.\n+\n+\t* bindtextdom.c:\n+\tDon't use xmalloc, xstrdup, and stpcpy.  These functions are not part\n+\tof the standard libc and so prevent libintl.a from being used\n+\tstandalone.\n+\tRename to bindtextdomain__ if not used in GNU C Library.\n+\n+\t* dgettext.c:\n+\tRename function to dgettext__ if not used in GNU C Library.\n+\n+\t* gettext.c:\n+\tDon't use xmalloc, xstrdup, and stpcpy.  These functions are not part\n+\tof the standard libc and so prevent libintl.a from being used\n+\tstandalone.\n+\tFunctions now called gettext__ if not used in GNU C Library.\n+\n+\t* dcgettext.c, localealias.c, textdomain.c, finddomain.c:\n+\tDon't use xmalloc, xstrdup, and stpcpy.  These functions are not part\n+\tof the standard libc and so prevent libintl.a from being used\n+\tstandalone.\n+\n+Sun Sep 17 23:14:49 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* finddomain.c: Correct some bugs in handling of CEN standard\n+ \tlocale definitions.\n+\n+Thu Sep  7 01:49:28 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* finddomain.c: Implement CEN syntax.\n+\n+\t* gettextP.h (loaded_domain): Extend number of successors to 31.\n+\n+Sat Aug 19 19:25:29 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (aliaspath): Remove path to X11 locale dir.\n+\n+\t* Makefile.in: Make install-src depend on install.  This helps\n+ \tgettext to install the sources and other packages can use the\n+ \tinstall goal.\n+\n+Sat Aug 19 15:19:33 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (uninstall): Remove stuff installed by install-src.\n+\n+Tue Aug 15 13:13:53 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* VERSION.in: Initial revision.\n+\n+\t* Makefile.in (DISTFILES):\n+\tAdd VERSION file.  This is not necessary for gettext, but\n+\tfor other packages using this library.\n+\n+Tue Aug 15 06:16:44 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* gettextP.h (_nl_find_domain):\n+\tNew prototype after changing search strategy.\n+\n+\t* finddomain.c (_nl_find_domain):\n+\tWe now try only to find a specified catalog.  Fall back to other\n+\tcatalogs listed in the locale list is now done in __dcgettext.\n+\n+\t* dcgettext.c (__dcgettext):\n+\tNow we provide message fall back even to different languages.\n+\tI.e. if a message is not available in one language all the other\n+ \tin the locale list a tried.  Formerly fall back was only possible\n+ \twithin one language.  Implemented by moving one loop from\n+ \t_nl_find_domain to here.\n+\n+Mon Aug 14 23:45:50 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (gettextsrcdir):\n+\tDirectory where source of GNU gettext library are made\n+\tavailable.\n+\t(INSTALL, INSTALL_DATA): Programs used for installing sources.\n+\t(gettext-src): New.  Rule to install GNU gettext sources for use in\n+\tgettextize shell script.\n+\n+Sun Aug 13 14:40:48 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* loadmsgcat.c (_nl_load_domain):\n+\tUse mmap for loading only when munmap function is\n+\talso available.\n+\n+\t* Makefile.in (install): Depend on `all' goal.\n+\n+Wed Aug  9 11:04:33 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* localealias.c (read_alias_file):\n+\tDo not overwrite '\\n' when terminating alias value string.\n+\n+\t* localealias.c (read_alias_file):\n+\tHandle long lines.  Ignore the rest not fitting in\n+\tthe buffer after the initial `fgets' call.\n+\n+Wed Aug  9 00:54:29 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* gettextP.h (_nl_load_domain):\n+\tAdd prototype, replacing prototype for _nl_load_msg_cat.\n+\n+\t* finddomain.c (_nl_find_domain):\n+\tRemove unneeded variable filename and filename_len.\n+\t(expand_alias): Remove prototype because functions does not\n+ \texist anymore.\n+\n+\t* localealias.c (read_alias_file):\n+\tChange type of fname_len parameter to int.\n+\t(xmalloc): Add prototype.\n+\n+\t* loadmsgcat.c: Better prototypes for xmalloc.\n+\n+Tue Aug  8 22:30:39 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* finddomain.c (_nl_find_domain):\n+\tAllow alias name to be constructed from the four components.\n+\n+\t* Makefile.in (aliaspath): New variable.  Set to preliminary value.\n+\t(SOURCES): Add localealias.c.\n+\t(OBJECTS): Add localealias.o.\n+\n+\t* gettextP.h: Add prototype for _nl_expand_alias.\n+\n+\t* finddomain.c: Aliasing handled in intl/localealias.c.\n+\n+\t* localealias.c: Aliasing for locale names.\n+\n+\t* bindtextdom.c: Better prototypes for xmalloc and xstrdup.\n+\n+Mon Aug  7 23:47:42 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (DISTFILES): gettext.perl is now found in misc/.\n+\n+\t* cat-compat.c (bindtextdomain):\n+\tCorrect implementation.  dirname parameter was not used.\n+\tReported by Marcus Daniels.\n+\n+\t* gettextP.h (loaded_domain):\n+\tNew fields `successor' and `decided' for oo, lazy\n+\tmessage handling implementation.\n+\n+\t* dcgettext.c:\n+\tAdopt for oo, lazy message handliing.\n+  \tNow we can inherit translations from less specific locales.\n+\t(find_msg): New function.\n+\n+\t* loadmsgcat.c, finddomain.c:\n+\tComplete rewrite.  Implement oo, lazy message handling :-).\n+  \tWe now have an additional environment variable `LANGUAGE' with\n+ \ta higher priority than LC_ALL for the LC_MESSAGE locale.\n+  \tHere we can set a colon separated list of specifications each\n+ \tof the form `language[_territory[.codeset]][@modifier]'.\n+\n+Sat Aug  5 09:55:42 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* finddomain.c (unistd.h):\n+\tInclude to get _PC_PATH_MAX defined on system having it.\n+\n+Fri Aug  4 22:42:00 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* finddomain.c (stpcpy): Include prototype.\n+\n+\t* Makefile.in (dist): Remove `copying instead' message.\n+\n+Wed Aug  2 18:52:03 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (ID, TAGS): Do not use $^.\n+\n+Tue Aug  1 20:07:11 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (TAGS, ID): Use $^ as command argument.\n+\t(TAGS): Give etags -o option t write to current directory,\n+ \tnot $(srcdir).\n+\t(ID): Use $(srcdir) instead os $(top_srcdir)/src.\n+\t(distclean): Remove ID.\n+\n+Sun Jul 30 11:51:46 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (gnulocaledir):\n+\tNew variable, always using share/ for data directory.\n+\t(DEFS): Add GNULOCALEDIR, used in finddomain.c.\n+\n+\t* finddomain.c (_nl_default_dirname):\n+\tSet to GNULOCALEDIR, because it always has to point\n+\tto the directory where GNU gettext Library writes it to.\n+\n+\t* intl-compat.c (textdomain, bindtextdomain):\n+\tUndefine macros before function definition.\n+\n+Sat Jul 22 01:10:02 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* libgettext.h (_LIBINTL_H):\n+\tProtect definition in case where this file is included as\n+\tlibgettext.h on Solaris machines.  Add comment about this.\n+\n+Wed Jul 19 02:36:42 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* intl-compat.c (textdomain): Correct typo.\n+\n+Wed Jul 19 01:51:35 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* dcgettext.c (dcgettext): Function now called __dcgettext.\n+\n+\t* dgettext.c (dgettext): Now called __dgettext and calls\n+ \t__dcgettext.\n+\n+\t* gettext.c (gettext):\n+\tFunction now called __gettext and calls __dgettext.\n+\n+\t* textdomain.c (textdomain): Function now called __textdomain.\n+\n+\t* bindtextdom.c (bindtextdomain): Function now called\n+ \t__bindtextdomain.\n+\n+\t* intl-compat.c: Initial revision.\n+\n+\t* Makefile.in (SOURCES): Add intl-compat.c.\n+\t(OBJECTS): We always compile the GNU gettext library functions.\n+  \tOBJECTS contains all objects but cat-compat.o, ../po/cat-if-tbl.o,\n+ \tand intl-compat.o.\n+  \t(GETTOBJS): Contains now only intl-compat.o.\n+\n+\t* libgettext.h:\n+\tRe-include protection matches dualistic character of libgettext.h.\n+\tFor all functions in GNU gettext library define __ counter part.\n+\n+\t* finddomain.c (strchr): Define as index if not found in C library.\n+\t(_nl_find_domain): For relative paths paste / in between.\n+\n+Tue Jul 18 16:37:45 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* loadmsgcat.c, finddomain.c: Add inclusion of sys/types.h.\n+\n+\t* xopen-msg.sed: Fix bug with `msgstr \"\"' lines.\n+\tA little bit better comments.\n+\n+Tue Jul 18 01:18:27 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in:\n+\tpo-mode.el, makelinks, combine-sh are now found in ../misc.\n+\n+\t* po-mode.el, makelinks, combine-sh, elisp-comp:\n+\tMoved to ../misc/.\n+\n+\t* libgettext.h, gettextP.h, gettext.h: Uniform test for __STDC__.\n+\n+Sun Jul 16 22:33:02 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (INSTALL, INSTALL_DATA): New variables.\n+\t(install-data, uninstall): Install/uninstall .elc file.\n+\n+\t* po-mode.el (Installation comment):\n+\tAdd .pox as possible extension of .po files.\n+\n+Sun Jul 16 13:23:27 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* elisp-comp: Complete new version by Franc,ois: This does not\n+ \tfail when not compiling in the source directory.\n+\n+Sun Jul 16 00:12:17 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (../po/cat-id-tbl.o):\n+\tUse $(MAKE) instead of make for recursive make.\n+\n+\t* Makefile.in (.el.elc): Use $(SHELL) instead of /bin/sh.\n+\t(install-exec): Add missing dummy goal.\n+\t(install-data, uninstall): @ in multi-line shell command at\n+ \tbeginning, not in front of echo.  Reported by Eric Backus.\n+\n+Sat Jul 15 00:21:28 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (DISTFILES):\n+\tRename libgettext.perl to gettext.perl to fit in 14 chars\n+\tfile systems.\n+\n+\t* gettext.perl:\n+ \tRename to gettext.perl to fit in 14 chars file systems.\n+\n+Thu Jul 13 23:17:20 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* cat-compat.c: If !STDC_HEADERS try to include malloc.h.\n+\n+Thu Jul 13 20:55:02 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* po2tbl.sed.in: Pretty printing.\n+\n+\t* linux-msg.sed, xopen-msg.sed:\n+\tCorrect bugs with handling substitute flags in branches.\n+\n+\t* hash-string.h (hash_string):\n+\tOld K&R compilers don't under stand `unsigned char'.\n+\n+\t* gettext.h (nls_uint32):\n+\tSome old K&R compilers (eg HP) don't understand `unsigned int'.\n+\n+\t* cat-compat.c (msg_to_cat_id): De-ANSI-fy prototypes.\n+\n+Thu Jul 13 01:34:33 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (ELCFILES): New variable.\n+\t(DISTFILES): Add elisp-comp.\n+\tAdd implicit rule for .el -> .elc compilation.\n+\t(install-data): install $ELCFILES\n+\t(clean): renamed po-to-tbl and po-to-msg to po2tbl and po2msg resp.\n+\n+\t* elisp-comp: Initial revision\n+\n+Wed Jul 12 16:14:52 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in:\n+\tcat-id-tbl.c is now found in po/.  This enables us to use an identical\n+\tintl/ directory in all packages.\n+\n+\t* dcgettext.c (dcgettext): hashing does not work for table size <= 2.\n+\n+\t* textdomain.c: fix typo (#if def -> #if defined)\n+\n+Tue Jul 11 18:44:43 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in (stamp-cat-id): use top_srcdir to address source files\n+\t(DISTFILES,distclean): move tupdate.perl to src/\n+\n+\t* po-to-tbl.sed.in:\n+\tadd additional jump to clear change flag to recognize multiline strings\n+\n+Tue Jul 11 01:32:50 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* textdomain.c: Protect inclusion of stdlib.h and string.h.\n+\n+\t* loadmsgcat.c: Protect inclusion of stdlib.h.\n+\n+\t* libgettext.h: Protect inclusion of locale.h.\n+\tAllow use in C++ programs.\n+\tDefine NULL is not happened already.\n+\n+\t* Makefile.in (DISTFILES): ship po-to-tbl.sed.in instead of\n+\tpo-to-tbl.sed.\n+\t(distclean): remove po-to-tbl.sed and tupdate.perl.\n+\n+\t* tupdate.perl.in: Substitute Perl path even in exec line.\n+\tDon't include entries without translation from old .po file.\n+\n+Tue Jul  4 00:41:51 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* tupdate.perl.in: use \"Updated: \" in msgid \"\".\n+\n+\t* cat-compat.c: Fix typo (LOCALDIR -> LOCALEDIR).\n+ \tDefine getenv if !__STDC__.\n+\n+\t* bindtextdom.c: Protect stdlib.h and string.h inclusion.\n+ \tDefine free if !__STDC__.\n+\n+\t* finddomain.c: Change DEF_MSG_DOM_DIR to LOCALEDIR.\n+ \tDefine free if !__STDC__.\n+\n+\t* cat-compat.c: Change DEF_MSG_DOM_DIR to LOCALEDIR.\n+\n+Mon Jul  3 23:56:30 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* Makefile.in: Use LOCALEDIR instead of DEF_MSG_DOM_DIR.\n+\tRemove unneeded $(srcdir) from Makefile.in dependency.\n+\n+\t* makelinks: Add copyright and short description.\n+\n+\t* po-mode.el: Last version for 0.7.\n+\n+\t* tupdate.perl.in: Fix die message.\n+\n+\t* dcgettext.c: Protect include of string.h.\n+\n+\t* gettext.c: Protect include of stdlib.h and further tries to get NULL.\n+\n+\t* finddomain.c: Some corrections in includes.\n+\n+\t* Makefile.in (INCLUDES): Prune list correct path to Makefile.in.\n+\n+\t* po-to-tbl.sed: Adopt for new .po file format.\n+\n+\t* linux-msg.sed, xopen-msg.sed: Adopt for new .po file format.\n+\n+Sun Jul  2 23:55:03 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* tupdate.perl.in: Complete rewrite for new .po file format.\n+\n+Sun Jul  2 02:06:50 1995  Ulrich Drepper  <drepper@myware>\n+\n+\t* First official release.  This directory contains all the code\n+\tneeded to internationalize own packages.  It provides functions\n+\twhich allow to use the X/Open catgets function with an interface\n+\tlike the Uniforum gettext function.  For system which does not\n+\thave neither of those a complete implementation is provided."}, {"sha": "e617bbc287528c9fe4c22a42e17091fffcd05270", "filename": "texinfo/intl/Makefile.in", "status": "added", "additions": 214, "deletions": 0, "changes": 214, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2FMakefile.in?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,214 @@\n+# Makefile for directory with message catalog handling in GNU NLS Utilities.\n+# Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+\n+PACKAGE = @PACKAGE@\n+VERSION = @VERSION@\n+\n+SHELL = /bin/sh\n+\n+srcdir = @srcdir@\n+top_srcdir = @top_srcdir@\n+top_builddir = ..\n+VPATH = @srcdir@\n+\n+prefix = @prefix@\n+exec_prefix = @exec_prefix@\n+transform = @program_transform_name@\n+libdir = $(exec_prefix)/lib\n+includedir = $(prefix)/include\n+datadir = $(prefix)/@DATADIRNAME@\n+localedir = $(datadir)/locale\n+gnulocaledir = $(prefix)/share/locale\n+gettextsrcdir = @datadir@/gettext/intl\n+aliaspath = $(localedir):.\n+subdir = intl\n+\n+INSTALL = @INSTALL@\n+INSTALL_DATA = @INSTALL_DATA@\n+MKINSTALLDIRS = @MKINSTALLDIRS@\n+\n+l = @l@\n+\n+AR = ar\n+CC = @CC@\n+LIBTOOL = @LIBTOOL@\n+RANLIB = @RANLIB@\n+\n+DEFS = -DLOCALEDIR=\\\"$(localedir)\\\" -DGNULOCALEDIR=\\\"$(gnulocaledir)\\\" \\\n+-DLOCALE_ALIAS_PATH=\\\"$(aliaspath)\\\" @DEFS@\n+CFLAGS = @CFLAGS@\n+LDFLAGS = @LDFLAGS@\n+\n+COMPILE = $(CC) -c $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(XCFLAGS)\n+\n+HEADERS = $(COMHDRS) libgettext.h loadinfo.h\n+COMHDRS = gettext.h gettextP.h hash-string.h\n+SOURCES = $(COMSRCS) intl-compat.c cat-compat.c\n+COMSRCS = bindtextdom.c dcgettext.c dgettext.c gettext.c \\\n+finddomain.c loadmsgcat.c localealias.c textdomain.c l10nflist.c \\\n+explodename.c\n+OBJECTS = @INTLOBJS@ bindtextdom.$lo dcgettext.$lo dgettext.$lo gettext.$lo \\\n+finddomain.$lo loadmsgcat.$lo localealias.$lo textdomain.$lo l10nflist.$lo \\\n+explodename.$lo\n+CATOBJS = cat-compat.$lo ../po/cat-id-tbl.$lo\n+GETTOBJS = intl-compat.$lo\n+DISTFILES.common = ChangeLog Makefile.in linux-msg.sed po2tbl.sed.in \\\n+xopen-msg.sed $(HEADERS) $(SOURCES)\n+DISTFILES.normal = VERSION\n+DISTFILES.gettext = libintl.glibc intlh.inst.in\n+\n+.SUFFIXES:\n+.SUFFIXES: .c .o .lo\n+.c.o:\n+\t$(COMPILE) $<\n+.c.lo:\n+\t$(LIBTOOL) --mode=compile $(COMPILE) $<\n+\n+INCLUDES = -I.. -I. -I$(top_srcdir)/intl -I$(top_srcdir)/lib\n+\n+all: all-@USE_INCLUDED_LIBINTL@\n+\n+all-yes: libintl.$la intlh.inst\n+all-no:\n+\n+libintl.a: $(OBJECTS)\n+\trm -f $@\n+\t$(AR) cru $@ $(OBJECTS)\n+\t$(RANLIB) $@\n+\n+libintl.la: $(OBJECTS)\n+\t$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ $(OBJECTS) \\\n+\t\t   -version-info 1:0 -rpath $(libdir)\n+\n+../po/cat-id-tbl.$lo: ../po/cat-id-tbl.c $(top_srcdir)/po/$(PACKAGE).pot\n+\tcd ../po && $(MAKE) cat-id-tbl.$lo\n+\n+check: all\n+\n+# This installation goal is only used in GNU gettext.  Packages which\n+# only use the library should use install instead.\n+\n+# We must not install the libintl.h/libintl.a files if we are on a\n+# system which has the gettext() function in its C library or in a\n+# separate library or use the catgets interface.  A special case is\n+# where configure found a previously installed GNU gettext library.\n+# If you want to use the one which comes with this version of the\n+# package, you have to use `configure --with-included-gettext'.\n+install: install-exec install-data\n+install-exec: all\n+\tif test \"$(PACKAGE)\" = \"gettext\" \\\n+\t   && test '@INTLOBJS@' = '$(GETTOBJS)'; then \\\n+\t  if test -r $(MKINSTALLDIRS); then \\\n+\t    $(MKINSTALLDIRS) $(libdir) $(includedir); \\\n+\t  else \\\n+\t    $(top_srcdir)/mkinstalldirs $(libdir) $(includedir); \\\n+\t  fi; \\\n+\t  $(INSTALL_DATA) intlh.inst $(includedir)/libintl.h; \\\n+\t  $(INSTALL_DATA) libintl.a $(libdir)/libintl.a; \\\n+\telse \\\n+\t  : ; \\\n+\tfi\n+install-data: all\n+\tif test \"$(PACKAGE)\" = \"gettext\"; then \\\n+\t  if test -r $(MKINSTALLDIRS); then \\\n+\t    $(MKINSTALLDIRS) $(gettextsrcdir); \\\n+\t  else \\\n+\t    $(top_srcdir)/mkinstalldirs $(gettextsrcdir); \\\n+\t  fi; \\\n+\t  $(INSTALL_DATA) VERSION $(gettextsrcdir)/VERSION; \\\n+\t  cd $(srcdir) && \\\n+\t  dists=\"$(DISTFILES.common)\"; \\\n+\t  for file in $$dists; do \\\n+\t    $(INSTALL_DATA) $$file $(gettextsrcdir)/$$file; \\\n+\t  done; \\\n+\telse \\\n+\t  : ; \\\n+\tfi\n+\n+# Define this as empty until I found a useful application.\n+installcheck:\n+\n+uninstall:\n+\tdists=\"$(DISTFILES.common)\"; \\\n+\tfor file in $$dists; do \\\n+\t  rm -f $(gettextsrcdir)/$$file; \\\n+\tdone\n+\n+info dvi install-info:\n+\n+$(OBJECTS): ../config.h libgettext.h\n+bindtextdom.$lo finddomain.$lo loadmsgcat.$lo: gettextP.h gettext.h loadinfo.h\n+dcgettext.$lo: gettextP.h gettext.h hash-string.h loadinfo.h\n+\n+tags: TAGS\n+\n+TAGS: $(HEADERS) $(SOURCES)\n+\there=`pwd`; cd $(srcdir) && etags -o $$here/TAGS $(HEADERS) $(SOURCES)\n+\n+id: ID\n+\n+ID: $(HEADERS) $(SOURCES)\n+\there=`pwd`; cd $(srcdir) && mkid -f$$here/ID $(HEADERS) $(SOURCES)\n+\n+\n+mostlyclean:\n+\trm -f *.a *.o *.lo core core.*\n+\n+clean: mostlyclean\n+\n+distclean: clean\n+\trm -f Makefile ID TAGS po2msg.sed po2tbl.sed libintl.h\n+\n+maintainer-clean: distclean\n+\t@echo \"This command is intended for maintainers to use;\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+\n+\n+# GNU gettext needs not contain the file `VERSION' but contains some\n+# other files which should not be distributed in other packages.\n+distdir = ../$(PACKAGE)-$(VERSION)/$(subdir)\n+dist distdir: Makefile $(DISTFILES)\n+\tif test \"$(PACKAGE)\" = gettext; then \\\n+\t  additional=\"$(DISTFILES.gettext)\"; \\\n+\telse \\\n+\t  additional=\"$(DISTFILES.normal)\"; \\\n+\tfi; \\\n+\tfor file in $(DISTFILES.common) $$additional; do \\\n+\t  ln $(srcdir)/$$file $(distdir) 2> /dev/null \\\n+\t    || cp -p $(srcdir)/$$file $(distdir); \\\n+\tdone\n+\n+dist-libc:\n+\ttar zcvf intl-glibc.tar.gz $(COMSRCS) $(COMHDRS) libintl.h.glibc\n+\n+Makefile: Makefile.in ../config.status\n+\tcd .. \\\n+\t  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status\n+\n+# The dependency for intlh.inst is different in gettext and all other\n+# packages.  Because we cannot you GNU make features we have to solve\n+# the problem while rewriting Makefile.in.\n+@GT_YES@intlh.inst: intlh.inst.in ../config.status\n+@GT_YES@\tcd .. \\\n+@GT_YES@\t&& CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= \\\n+@GT_YES@\t  $(SHELL) ./config.status\n+@GT_NO@.PHONY: intlh.inst\n+@GT_NO@intlh.inst:\n+\n+# Tell versions [3.59,3.63) of GNU make not to export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "7d069b886d65cef7997f30d41010f3664de42a25", "filename": "texinfo/intl/VERSION", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2FVERSION", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2FVERSION", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2FVERSION?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1 @@\n+GNU gettext library from gettext-0.10.27"}, {"sha": "72583f25783fd949a78e9dc60514d420781ad192", "filename": "texinfo/intl/bindtextdom.c", "status": "added", "additions": 175, "deletions": 0, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fbindtextdom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fbindtextdom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Fbindtextdom.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,175 @@\n+/* bindtextdom.c -- implementation of the bindtextdomain(3) function\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software Foundation,\n+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#if defined STDC_HEADERS || defined _LIBC\n+# include <stdlib.h>\n+#else\n+# ifdef HAVE_MALLOC_H\n+#  include <malloc.h>\n+# else\n+void free ();\n+# endif\n+#endif\n+\n+#if defined HAVE_STRING_H || defined _LIBC\n+# include <string.h>\n+#else\n+# include <strings.h>\n+# ifndef memcpy\n+#  define memcpy(Dst, Src, Num) bcopy ((Src), (Dst), (Num))\n+# endif\n+#endif\n+\n+#ifdef _LIBC\n+# include <libintl.h>\n+#else\n+# include \"libgettext.h\"\n+#endif\n+#include \"gettext.h\"\n+#include \"gettextP.h\"\n+\n+/* @@ end of prolog @@ */\n+\n+/* Contains the default location of the message catalogs.  */\n+extern const char _nl_default_dirname[];\n+\n+/* List with bindings of specific domains.  */\n+extern struct binding *_nl_domain_bindings;\n+\n+\n+/* Names for the libintl functions are a problem.  They must not clash\n+   with existing names and they should follow ANSI C.  But this source\n+   code is also used in GNU C Library where the names have a __\n+   prefix.  So we have to make a difference here.  */\n+#ifdef _LIBC\n+# define BINDTEXTDOMAIN __bindtextdomain\n+#else\n+# define BINDTEXTDOMAIN bindtextdomain__\n+#endif\n+\n+/* Specify that the DOMAINNAME message catalog will be found\n+   in DIRNAME rather than in the system locale data base.  */\n+char *\n+BINDTEXTDOMAIN (domainname, dirname)\n+     const char *domainname;\n+     const char *dirname;\n+{\n+  struct binding *binding;\n+\n+  /* Some sanity checks.  */\n+  if (domainname == NULL || domainname[0] == '\\0')\n+    return NULL;\n+\n+  for (binding = _nl_domain_bindings; binding != NULL; binding = binding->next)\n+    {\n+      int compare = strcmp (domainname, binding->domainname);\n+      if (compare == 0)\n+\t/* We found it!  */\n+\tbreak;\n+      if (compare < 0)\n+\t{\n+\t  /* It is not in the list.  */\n+\t  binding = NULL;\n+\t  break;\n+\t}\n+    }\n+\n+  if (dirname == NULL)\n+    /* The current binding has be to returned.  */\n+    return binding == NULL ? (char *) _nl_default_dirname : binding->dirname;\n+\n+  if (binding != NULL)\n+    {\n+      /* The domain is already bound.  Replace the old binding.  */\n+      char *new_dirname;\n+\n+      if (strcmp (dirname, _nl_default_dirname) == 0)\n+\tnew_dirname = (char *) _nl_default_dirname;\n+      else\n+\t{\n+\t  size_t len = strlen (dirname) + 1;\n+\t  new_dirname = (char *) malloc (len);\n+\t  if (new_dirname == NULL)\n+\t    return NULL;\n+\n+\t  memcpy (new_dirname, dirname, len);\n+\t}\n+\n+      if (strcmp (binding->dirname, _nl_default_dirname) != 0)\n+        free (binding->dirname);\n+\n+      binding->dirname = new_dirname;\n+    }\n+  else\n+    {\n+      /* We have to create a new binding.  */\n+      size_t len;\n+      struct binding *new_binding =\n+\t(struct binding *) malloc (sizeof (*new_binding));\n+\n+      if (new_binding == NULL)\n+\treturn NULL;\n+\n+      len = strlen (domainname) + 1;\n+      new_binding->domainname = (char *) malloc (len);\n+      if (new_binding->domainname == NULL)\n+\t  return NULL;\n+      memcpy (new_binding->domainname, domainname, len);\n+\n+      if (strcmp (dirname, _nl_default_dirname) == 0)\n+\tnew_binding->dirname = (char *) _nl_default_dirname;\n+      else\n+\t{\n+\t  len = strlen (dirname) + 1;\n+\t  new_binding->dirname = (char *) malloc (len);\n+\t  if (new_binding->dirname == NULL)\n+\t    return NULL;\n+\t  memcpy (new_binding->dirname, dirname, len);\n+\t}\n+\n+      /* Now enqueue it.  */\n+      if (_nl_domain_bindings == NULL\n+\t  || strcmp (domainname, _nl_domain_bindings->domainname) < 0)\n+\t{\n+\t  new_binding->next = _nl_domain_bindings;\n+\t  _nl_domain_bindings = new_binding;\n+\t}\n+      else\n+\t{\n+\t  binding = _nl_domain_bindings;\n+\t  while (binding->next != NULL\n+\t\t && strcmp (domainname, binding->next->domainname) > 0)\n+\t    binding = binding->next;\n+\n+\t  new_binding->next = binding->next;\n+\t  binding->next = new_binding;\n+\t}\n+\n+      binding = new_binding;\n+    }\n+\n+  return binding->dirname;\n+}\n+\n+#ifdef _LIBC\n+/* Alias for function name in GNU C Library.  */\n+weak_alias (__bindtextdomain, bindtextdomain);\n+#endif"}, {"sha": "4a9a1d898f4a25d624c2175dc1061e535efc7adf", "filename": "texinfo/intl/cat-compat.c", "status": "added", "additions": 252, "deletions": 0, "changes": 252, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fcat-compat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fcat-compat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Fcat-compat.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,252 @@\n+/* Compatibility code for gettext-using-catgets interface.\n+   Copyright (C) 1995 Free Software Foundation, Inc.\n+\n+The GNU C Library is free software; you can redistribute it and/or\n+modify it under the terms of the GNU Library General Public License as\n+published by the Free Software Foundation; either version 2 of the\n+License, or (at your option) any later version.\n+\n+The GNU C Library is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+Library General Public License for more details.\n+\n+You should have received a copy of the GNU Library General Public\n+License along with the GNU C Library; see the file COPYING.LIB.  If\n+not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#include <stdio.h>\n+\n+#ifdef STDC_HEADERS\n+# include <stdlib.h>\n+# include <string.h>\n+#else\n+char *getenv ();\n+# ifdef HAVE_MALLOC_H\n+#  include <malloc.h>\n+# endif\n+#endif\n+\n+#ifdef HAVE_NL_TYPES_H\n+# include <nl_types.h>\n+#endif\n+\n+#include \"libgettext.h\"\n+\n+/* @@ end of prolog @@ */\n+\n+/* The catalog descriptor.  */\n+static nl_catd catalog = (nl_catd) -1;\n+\n+/* Name of the default catalog.  */\n+static const char default_catalog_name[] = \"messages\";\n+\n+/* Name of currently used catalog.  */\n+static const char *catalog_name = default_catalog_name;\n+\n+/* Get ID for given string.  If not found return -1.  */\n+static int msg_to_cat_id PARAMS ((const char *msg));\n+\n+/* Substitution for systems lacking this function in their C library.  */\n+#if !_LIBC && !HAVE_STPCPY\n+static char *stpcpy PARAMS ((char *dest, const char *src));\n+#endif\n+\n+\n+/* Set currently used domain/catalog.  */\n+char *\n+textdomain (domainname)\n+     const char *domainname;\n+{\n+  nl_catd new_catalog;\n+  char *new_name;\n+  size_t new_name_len;\n+  char *lang;\n+\n+#if HAVE_SETLOCALE && HAVE_LC_MESSAGES && HAVE_SETLOCALE_NULL\n+  lang = setlocale (LC_MESSAGES, NULL);\n+#else\n+  lang = getenv (\"LC_ALL\");\n+  if (lang == NULL || lang[0] == '\\0')\n+    {\n+      lang = getenv (\"LC_MESSAGES\");\n+      if (lang == NULL || lang[0] == '\\0')\n+\tlang = getenv (\"LANG\");\n+    }\n+#endif\n+  if (lang == NULL || lang[0] == '\\0')\n+    lang = \"C\";\n+\n+  /* See whether name of currently used domain is asked.  */\n+  if (domainname == NULL)\n+    return (char *) catalog_name;\n+\n+  if (domainname[0] == '\\0')\n+    domainname = default_catalog_name;\n+\n+  /* Compute length of added path element.  */\n+  new_name_len = sizeof (LOCALEDIR) - 1 + 1 + strlen (lang)\n+\t\t + sizeof (\"/LC_MESSAGES/\") - 1 + sizeof (PACKAGE) - 1\n+\t\t + sizeof (\".cat\");\n+\n+  new_name = (char *) malloc (new_name_len);\n+  if (new_name == NULL)\n+    return NULL;\n+\n+  strcpy (new_name, PACKAGE);\n+  new_catalog = catopen (new_name, 0);\n+\n+  if (new_catalog == (nl_catd) -1)\n+    {\n+      /* NLSPATH search didn't work, try absolute path */\n+      sprintf (new_name, \"%s/%s/LC_MESSAGES/%s.cat\", LOCALEDIR, lang,\n+\t       PACKAGE);\n+      new_catalog = catopen (new_name, 0);\n+\n+      if (new_catalog == (nl_catd) -1)\n+\t{\n+\t  free (new_name);\n+\t  return (char *) catalog_name;\n+\t}\n+    }\n+\n+  /* Close old catalog.  */\n+  if (catalog != (nl_catd) -1)\n+    catclose (catalog);\n+  if (catalog_name != default_catalog_name)\n+    free ((char *) catalog_name);\n+\n+  catalog = new_catalog;\n+  catalog_name = new_name;\n+\n+  return (char *) catalog_name;\n+}\n+\n+char *\n+bindtextdomain (domainname, dirname)\n+     const char *domainname;\n+     const char *dirname;\n+{\n+#if HAVE_SETENV || HAVE_PUTENV\n+  char *old_val, *new_val, *cp;\n+  size_t new_val_len;\n+\n+  /* This does not make much sense here but to be compatible do it.  */\n+  if (domainname == NULL)\n+    return NULL;\n+\n+  /* Compute length of added path element.  If we use setenv we don't need\n+     the first byts for NLSPATH=, but why complicate the code for this\n+     peanuts.  */\n+  new_val_len = sizeof (\"NLSPATH=\") - 1 + strlen (dirname)\n+\t\t+ sizeof (\"/%L/LC_MESSAGES/%N.cat\");\n+\n+  old_val = getenv (\"NLSPATH\");\n+  if (old_val == NULL || old_val[0] == '\\0')\n+    {\n+      old_val = NULL;\n+      new_val_len += 1 + sizeof (LOCALEDIR) - 1\n+\t             + sizeof (\"/%L/LC_MESSAGES/%N.cat\");\n+    }\n+  else\n+    new_val_len += strlen (old_val);\n+\n+  new_val = (char *) malloc (new_val_len);\n+  if (new_val == NULL)\n+    return NULL;\n+\n+# if HAVE_SETENV\n+  cp = new_val;\n+# else\n+  cp = stpcpy (new_val, \"NLSPATH=\");\n+# endif\n+\n+  cp = stpcpy (cp, dirname);\n+  cp = stpcpy (cp, \"/%L/LC_MESSAGES/%N.cat:\");\n+\n+  if (old_val == NULL)\n+    {\n+# if __STDC__\n+      stpcpy (cp, LOCALEDIR \"/%L/LC_MESSAGES/%N.cat\");\n+# else\n+\n+      cp = stpcpy (cp, LOCALEDIR);\n+      stpcpy (cp, \"/%L/LC_MESSAGES/%N.cat\");\n+# endif\n+    }\n+  else\n+    stpcpy (cp, old_val);\n+\n+# if HAVE_SETENV\n+  setenv (\"NLSPATH\", new_val, 1);\n+  free (new_val);\n+# else\n+  putenv (new_val);\n+  /* Do *not* free the environment entry we just entered.  It is used\n+     from now on.   */\n+# endif\n+\n+#endif\n+\n+  return (char *) domainname;\n+}\n+\n+#undef gettext\n+char *\n+gettext (msg)\n+     const char *msg;\n+{\n+  int msgid;\n+\n+  if (msg == NULL || catalog == (nl_catd) -1)\n+    return (char *) msg;\n+\n+  /* Get the message from the catalog.  We always use set number 1.\n+     The message ID is computed by the function `msg_to_cat_id'\n+     which works on the table generated by `po-to-tbl'.  */\n+  msgid = msg_to_cat_id (msg);\n+  if (msgid == -1)\n+    return (char *) msg;\n+\n+  return catgets (catalog, 1, msgid, (char *) msg);\n+}\n+\n+/* Look through the table `_msg_tbl' which has `_msg_tbl_length' entries\n+   for the one equal to msg.  If it is found return the ID.  In case when\n+   the string is not found return -1.  */\n+static int\n+msg_to_cat_id (msg)\n+     const char *msg;\n+{\n+  int cnt;\n+\n+  for (cnt = 0; cnt < _msg_tbl_length; ++cnt)\n+    if (strcmp (msg, _msg_tbl[cnt]._msg) == 0)\n+      return _msg_tbl[cnt]._msg_number;\n+\n+  return -1;\n+}\n+\n+\n+/* @@ begin of epilog @@ */\n+\n+/* We don't want libintl.a to depend on any other library.  So we\n+   avoid the non-standard function stpcpy.  In GNU C Library this\n+   function is available, though.  Also allow the symbol HAVE_STPCPY\n+   to be defined.  */\n+#if !_LIBC && !HAVE_STPCPY\n+static char *\n+stpcpy (dest, src)\n+     char *dest;\n+     const char *src;\n+{\n+  while ((*dest++ = *src++) != '\\0')\n+    /* Do nothing. */ ;\n+  return dest - 1;\n+}\n+#endif"}, {"sha": "9ce1b3a9a1aad8ff15c00ff9e4fd9d90f885aac1", "filename": "texinfo/intl/dcgettext.c", "status": "added", "additions": 596, "deletions": 0, "changes": 596, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fdcgettext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fdcgettext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Fdcgettext.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,596 @@\n+/* dcgettext.c -- implementation of the dcgettext(3) function\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+\n+This program is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#include <sys/types.h>\n+\n+#ifdef __GNUC__\n+# define alloca __builtin_alloca\n+# define HAVE_ALLOCA 1\n+#else\n+# if defined HAVE_ALLOCA_H || defined _LIBC\n+#  include <alloca.h>\n+# else\n+#  ifdef _AIX\n+ #pragma alloca\n+#  else\n+#   ifndef alloca\n+char *alloca ();\n+#   endif\n+#  endif\n+# endif\n+#endif\n+\n+#include <errno.h>\n+#ifndef errno\n+extern int errno;\n+#endif\n+\n+#if defined STDC_HEADERS || defined _LIBC\n+# include <stdlib.h>\n+#else\n+char *getenv ();\n+# ifdef HAVE_MALLOC_H\n+#  include <malloc.h>\n+# else\n+void free ();\n+# endif\n+#endif\n+\n+#if defined HAVE_STRING_H || defined _LIBC\n+# ifndef _GNU_SOURCE\n+#  define _GNU_SOURCE\t1\n+# endif\n+# include <string.h>\n+#else\n+# include <strings.h>\n+#endif\n+#if !HAVE_STRCHR && !defined _LIBC\n+# ifndef strchr\n+#  define strchr index\n+# endif\n+#endif\n+\n+#if defined HAVE_UNISTD_H || defined _LIBC\n+# include <unistd.h>\n+#endif\n+\n+#include \"gettext.h\"\n+#include \"gettextP.h\"\n+#ifdef _LIBC\n+# include <libintl.h>\n+#else\n+# include \"libgettext.h\"\n+#endif\n+#include \"hash-string.h\"\n+\n+/* @@ end of prolog @@ */\n+\n+#ifdef _LIBC\n+/* Rename the non ANSI C functions.  This is required by the standard\n+   because some ANSI C functions will require linking with this object\n+   file and the name space must not be polluted.  */\n+# define getcwd __getcwd\n+# define stpcpy __stpcpy\n+#else\n+# if !defined HAVE_GETCWD\n+char *getwd ();\n+#  define getcwd(buf, max) getwd (buf)\n+# else\n+char *getcwd ();\n+# endif\n+# ifndef HAVE_STPCPY\n+static char *stpcpy PARAMS ((char *dest, const char *src));\n+# endif\n+#endif\n+\n+/* Amount to increase buffer size by in each try.  */\n+#define PATH_INCR 32\n+\n+/* The following is from pathmax.h.  */\n+/* Non-POSIX BSD systems might have gcc's limits.h, which doesn't define\n+   PATH_MAX but might cause redefinition warnings when sys/param.h is\n+   later included (as on MORE/BSD 4.3).  */\n+#if defined(_POSIX_VERSION) || (defined(HAVE_LIMITS_H) && !defined(__GNUC__))\n+# include <limits.h>\n+#endif\n+\n+#ifndef _POSIX_PATH_MAX\n+# define _POSIX_PATH_MAX 255\n+#endif\n+\n+#if !defined(PATH_MAX) && defined(_PC_PATH_MAX)\n+# define PATH_MAX (pathconf (\"/\", _PC_PATH_MAX) < 1 ? 1024 : pathconf (\"/\", _PC_PATH_MAX))\n+#endif\n+\n+/* Don't include sys/param.h if it already has been.  */\n+#if defined(HAVE_SYS_PARAM_H) && !defined(PATH_MAX) && !defined(MAXPATHLEN)\n+# include <sys/param.h>\n+#endif\n+\n+#if !defined(PATH_MAX) && defined(MAXPATHLEN)\n+# define PATH_MAX MAXPATHLEN\n+#endif\n+\n+#ifndef PATH_MAX\n+# define PATH_MAX _POSIX_PATH_MAX\n+#endif\n+\n+/* XPG3 defines the result of `setlocale (category, NULL)' as:\n+   ``Directs `setlocale()' to query `category' and return the current\n+     setting of `local'.''\n+   However it does not specify the exact format.  And even worse: POSIX\n+   defines this not at all.  So we can use this feature only on selected\n+   system (e.g. those using GNU C Library).  */\n+#ifdef _LIBC\n+# define HAVE_LOCALE_NULL\n+#endif\n+\n+/* Name of the default domain used for gettext(3) prior any call to\n+   textdomain(3).  The default value for this is \"messages\".  */\n+const char _nl_default_default_domain[] = \"messages\";\n+\n+/* Value used as the default domain for gettext(3).  */\n+const char *_nl_current_default_domain = _nl_default_default_domain;\n+\n+/* Contains the default location of the message catalogs.  */\n+const char _nl_default_dirname[] = GNULOCALEDIR;\n+\n+/* List with bindings of specific domains created by bindtextdomain()\n+   calls.  */\n+struct binding *_nl_domain_bindings;\n+\n+/* Prototypes for local functions.  */\n+static char *find_msg PARAMS ((struct loaded_l10nfile *domain_file,\n+\t\t\t       const char *msgid));\n+static const char *category_to_name PARAMS ((int category));\n+static const char *guess_category_value PARAMS ((int category,\n+\t\t\t\t\t\t const char *categoryname));\n+\n+\n+/* For those loosing systems which don't have `alloca' we have to add\n+   some additional code emulating it.  */\n+#ifdef HAVE_ALLOCA\n+/* Nothing has to be done.  */\n+# define ADD_BLOCK(list, address) /* nothing */\n+# define FREE_BLOCKS(list) /* nothing */\n+#else\n+struct block_list\n+{\n+  void *address;\n+  struct block_list *next;\n+};\n+# define ADD_BLOCK(list, addr)\t\t\t\t\t\t      \\\n+  do {\t\t\t\t\t\t\t\t\t      \\\n+    struct block_list *newp = (struct block_list *) malloc (sizeof (*newp));  \\\n+    /* If we cannot get a free block we cannot add the new element to\t      \\\n+       the list.  */\t\t\t\t\t\t\t      \\\n+    if (newp != NULL) {\t\t\t\t\t\t\t      \\\n+      newp->address = (addr);\t\t\t\t\t\t      \\\n+      newp->next = (list);\t\t\t\t\t\t      \\\n+      (list) = newp;\t\t\t\t\t\t\t      \\\n+    }\t\t\t\t\t\t\t\t\t      \\\n+  } while (0)\n+# define FREE_BLOCKS(list)\t\t\t\t\t\t      \\\n+  do {\t\t\t\t\t\t\t\t\t      \\\n+    while (list != NULL) {\t\t\t\t\t\t      \\\n+      struct block_list *old = list;\t\t\t\t\t      \\\n+      list = list->next;\t\t\t\t\t\t      \\\n+      free (old);\t\t\t\t\t\t\t      \\\n+    }\t\t\t\t\t\t\t\t\t      \\\n+  } while (0)\n+# undef alloca\n+# define alloca(size) (malloc (size))\n+#endif\t/* have alloca */\n+\n+\n+/* Names for the libintl functions are a problem.  They must not clash\n+   with existing names and they should follow ANSI C.  But this source\n+   code is also used in GNU C Library where the names have a __\n+   prefix.  So we have to make a difference here.  */\n+#ifdef _LIBC\n+# define DCGETTEXT __dcgettext\n+#else\n+# define DCGETTEXT dcgettext__\n+#endif\n+\n+/* Look up MSGID in the DOMAINNAME message catalog for the current CATEGORY\n+   locale.  */\n+char *\n+DCGETTEXT (domainname, msgid, category)\n+     const char *domainname;\n+     const char *msgid;\n+     int category;\n+{\n+#ifndef HAVE_ALLOCA\n+  struct block_list *block_list = NULL;\n+#endif\n+  struct loaded_l10nfile *domain;\n+  struct binding *binding;\n+  const char *categoryname;\n+  const char *categoryvalue;\n+  char *dirname, *xdomainname;\n+  char *single_locale;\n+  char *retval;\n+  int saved_errno = errno;\n+\n+  /* If no real MSGID is given return NULL.  */\n+  if (msgid == NULL)\n+    return NULL;\n+\n+  /* If DOMAINNAME is NULL, we are interested in the default domain.  If\n+     CATEGORY is not LC_MESSAGES this might not make much sense but the\n+     defintion left this undefined.  */\n+  if (domainname == NULL)\n+    domainname = _nl_current_default_domain;\n+\n+  /* First find matching binding.  */\n+  for (binding = _nl_domain_bindings; binding != NULL; binding = binding->next)\n+    {\n+      int compare = strcmp (domainname, binding->domainname);\n+      if (compare == 0)\n+\t/* We found it!  */\n+\tbreak;\n+      if (compare < 0)\n+\t{\n+\t  /* It is not in the list.  */\n+\t  binding = NULL;\n+\t  break;\n+\t}\n+    }\n+\n+  if (binding == NULL)\n+    dirname = (char *) _nl_default_dirname;\n+  else if (binding->dirname[0] == '/')\n+    dirname = binding->dirname;\n+  else\n+    {\n+      /* We have a relative path.  Make it absolute now.  */\n+      size_t dirname_len = strlen (binding->dirname) + 1;\n+      size_t path_max;\n+      char *ret;\n+\n+      path_max = (unsigned) PATH_MAX;\n+      path_max += 2;\t\t/* The getcwd docs say to do this.  */\n+\n+      dirname = (char *) alloca (path_max + dirname_len);\n+      ADD_BLOCK (block_list, dirname);\n+\n+      errno = 0;\n+      while ((ret = getcwd (dirname, path_max)) == NULL && errno == ERANGE)\n+\t{\n+\t  path_max += PATH_INCR;\n+\t  dirname = (char *) alloca (path_max + dirname_len);\n+\t  ADD_BLOCK (block_list, dirname);\n+\t  errno = 0;\n+\t}\n+\n+      if (ret == NULL)\n+\t{\n+\t  /* We cannot get the current working directory.  Don't signal an\n+\t     error but simply return the default string.  */\n+\t  FREE_BLOCKS (block_list);\n+\t  errno = saved_errno;\n+\t  return (char *) msgid;\n+\t}\n+\n+      /* We don't want libintl.a to depend on any other library.  So\n+\t we avoid the non-standard function stpcpy.  In GNU C Library\n+\t this function is available, though.  Also allow the symbol\n+\t HAVE_STPCPY to be defined.  */\n+      stpcpy (stpcpy (strchr (dirname, '\\0'), \"/\"), binding->dirname);\n+    }\n+\n+  /* Now determine the symbolic name of CATEGORY and its value.  */\n+  categoryname = category_to_name (category);\n+  categoryvalue = guess_category_value (category, categoryname);\n+\n+  xdomainname = (char *) alloca (strlen (categoryname)\n+\t\t\t\t + strlen (domainname) + 5);\n+  ADD_BLOCK (block_list, xdomainname);\n+  /* We don't want libintl.a to depend on any other library.  So we\n+     avoid the non-standard function stpcpy.  In GNU C Library this\n+     function is available, though.  Also allow the symbol HAVE_STPCPY\n+     to be defined.  */\n+  stpcpy (stpcpy (stpcpy (stpcpy (xdomainname, categoryname), \"/\"),\n+\t\t  domainname),\n+\t  \".mo\");\n+\n+  /* Creating working area.  */\n+  single_locale = (char *) alloca (strlen (categoryvalue) + 1);\n+  ADD_BLOCK (block_list, single_locale);\n+\n+\n+  /* Search for the given string.  This is a loop because we perhaps\n+     got an ordered list of languages to consider for th translation.  */\n+  while (1)\n+    {\n+      /* Make CATEGORYVALUE point to the next element of the list.  */\n+      while (categoryvalue[0] != '\\0' && categoryvalue[0] == ':')\n+\t++categoryvalue;\n+      if (categoryvalue[0] == '\\0')\n+\t{\n+\t  /* The whole contents of CATEGORYVALUE has been searched but\n+\t     no valid entry has been found.  We solve this situation\n+\t     by implicitely appending a \"C\" entry, i.e. no translation\n+\t     will take place.  */\n+\t  single_locale[0] = 'C';\n+\t  single_locale[1] = '\\0';\n+\t}\n+      else\n+\t{\n+\t  char *cp = single_locale;\n+\t  while (categoryvalue[0] != '\\0' && categoryvalue[0] != ':')\n+\t    *cp++ = *categoryvalue++;\n+\t  *cp = '\\0';\n+\t}\n+\n+      /* If the current locale value is C (or POSIX) we don't load a\n+\t domain.  Return the MSGID.  */\n+      if (strcmp (single_locale, \"C\") == 0\n+\t  || strcmp (single_locale, \"POSIX\") == 0)\n+\t{\n+\t  FREE_BLOCKS (block_list);\n+\t  errno = saved_errno;\n+\t  return (char *) msgid;\n+\t}\n+\n+\n+      /* Find structure describing the message catalog matching the\n+\t DOMAINNAME and CATEGORY.  */\n+      domain = _nl_find_domain (dirname, single_locale, xdomainname);\n+\n+      if (domain != NULL)\n+\t{\n+\t  retval = find_msg (domain, msgid);\n+\n+\t  if (retval == NULL)\n+\t    {\n+\t      int cnt;\n+\n+\t      for (cnt = 0; domain->successor[cnt] != NULL; ++cnt)\n+\t\t{\n+\t\t  retval = find_msg (domain->successor[cnt], msgid);\n+\n+\t\t  if (retval != NULL)\n+\t\t    break;\n+\t\t}\n+\t    }\n+\n+\t  if (retval != NULL)\n+\t    {\n+\t      FREE_BLOCKS (block_list);\n+\t      errno = saved_errno;\n+\t      return retval;\n+\t    }\n+\t}\n+    }\n+  /* NOTREACHED */\n+}\n+\n+#ifdef _LIBC\n+/* Alias for function name in GNU C Library.  */\n+weak_alias (__dcgettext, dcgettext);\n+#endif\n+\n+\n+static char *\n+find_msg (domain_file, msgid)\n+     struct loaded_l10nfile *domain_file;\n+     const char *msgid;\n+{\n+  size_t top, act, bottom;\n+  struct loaded_domain *domain;\n+\n+  if (domain_file->decided == 0)\n+    _nl_load_domain (domain_file);\n+\n+  if (domain_file->data == NULL)\n+    return NULL;\n+\n+  domain = (struct loaded_domain *) domain_file->data;\n+\n+  /* Locate the MSGID and its translation.  */\n+  if (domain->hash_size > 2 && domain->hash_tab != NULL)\n+    {\n+      /* Use the hashing table.  */\n+      nls_uint32 len = strlen (msgid);\n+      nls_uint32 hash_val = hash_string (msgid);\n+      nls_uint32 idx = hash_val % domain->hash_size;\n+      nls_uint32 incr = 1 + (hash_val % (domain->hash_size - 2));\n+      nls_uint32 nstr = W (domain->must_swap, domain->hash_tab[idx]);\n+\n+      if (nstr == 0)\n+\t/* Hash table entry is empty.  */\n+\treturn NULL;\n+\n+      if (W (domain->must_swap, domain->orig_tab[nstr - 1].length) == len\n+\t  && strcmp (msgid,\n+\t\t     domain->data + W (domain->must_swap,\n+\t\t\t\t       domain->orig_tab[nstr - 1].offset)) == 0)\n+\treturn (char *) domain->data + W (domain->must_swap,\n+\t\t\t\t\t  domain->trans_tab[nstr - 1].offset);\n+\n+      while (1)\n+\t{\n+\t  if (idx >= domain->hash_size - incr)\n+\t    idx -= domain->hash_size - incr;\n+\t  else\n+\t    idx += incr;\n+\n+\t  nstr = W (domain->must_swap, domain->hash_tab[idx]);\n+\t  if (nstr == 0)\n+\t    /* Hash table entry is empty.  */\n+\t    return NULL;\n+\n+\t  if (W (domain->must_swap, domain->orig_tab[nstr - 1].length) == len\n+\t      && strcmp (msgid,\n+\t\t\t domain->data + W (domain->must_swap,\n+\t\t\t\t\t   domain->orig_tab[nstr - 1].offset))\n+\t         == 0)\n+\t    return (char *) domain->data\n+\t      + W (domain->must_swap, domain->trans_tab[nstr - 1].offset);\n+\t}\n+      /* NOTREACHED */\n+    }\n+\n+  /* Now we try the default method:  binary search in the sorted\n+     array of messages.  */\n+  bottom = 0;\n+  top = domain->nstrings;\n+  while (bottom < top)\n+    {\n+      int cmp_val;\n+\n+      act = (bottom + top) / 2;\n+      cmp_val = strcmp (msgid, domain->data\n+\t\t\t       + W (domain->must_swap,\n+\t\t\t\t    domain->orig_tab[act].offset));\n+      if (cmp_val < 0)\n+\ttop = act;\n+      else if (cmp_val > 0)\n+\tbottom = act + 1;\n+      else\n+\tbreak;\n+    }\n+\n+  /* If an translation is found return this.  */\n+  return bottom >= top ? NULL : (char *) domain->data\n+                                + W (domain->must_swap,\n+\t\t\t\t     domain->trans_tab[act].offset);\n+}\n+\n+\n+/* Return string representation of locale CATEGORY.  */\n+static const char *\n+category_to_name (category)\n+     int category;\n+{\n+  const char *retval;\n+\n+  switch (category)\n+  {\n+#ifdef LC_COLLATE\n+  case LC_COLLATE:\n+    retval = \"LC_COLLATE\";\n+    break;\n+#endif\n+#ifdef LC_CTYPE\n+  case LC_CTYPE:\n+    retval = \"LC_CTYPE\";\n+    break;\n+#endif\n+#ifdef LC_MONETARY\n+  case LC_MONETARY:\n+    retval = \"LC_MONETARY\";\n+    break;\n+#endif\n+#ifdef LC_NUMERIC\n+  case LC_NUMERIC:\n+    retval = \"LC_NUMERIC\";\n+    break;\n+#endif\n+#ifdef LC_TIME\n+  case LC_TIME:\n+    retval = \"LC_TIME\";\n+    break;\n+#endif\n+#ifdef LC_MESSAGES\n+  case LC_MESSAGES:\n+    retval = \"LC_MESSAGES\";\n+    break;\n+#endif\n+#ifdef LC_RESPONSE\n+  case LC_RESPONSE:\n+    retval = \"LC_RESPONSE\";\n+    break;\n+#endif\n+#ifdef LC_ALL\n+  case LC_ALL:\n+    /* This might not make sense but is perhaps better than any other\n+       value.  */\n+    retval = \"LC_ALL\";\n+    break;\n+#endif\n+  default:\n+    /* If you have a better idea for a default value let me know.  */\n+    retval = \"LC_XXX\";\n+  }\n+\n+  return retval;\n+}\n+\n+/* Guess value of current locale from value of the environment variables.  */\n+static const char *guess_category_value (category, categoryname)\n+     int category;\n+     const char *categoryname;\n+{\n+  const char *retval;\n+\n+  /* The highest priority value is the `LANGUAGE' environment\n+     variable.  This is a GNU extension.  */\n+  retval = getenv (\"LANGUAGE\");\n+  if (retval != NULL && retval[0] != '\\0')\n+    return retval;\n+\n+  /* `LANGUAGE' is not set.  So we have to proceed with the POSIX\n+     methods of looking to `LC_ALL', `LC_xxx', and `LANG'.  On some\n+     systems this can be done by the `setlocale' function itself.  */\n+#if defined HAVE_SETLOCALE && defined HAVE_LC_MESSAGES && defined HAVE_LOCALE_NULL\n+  return setlocale (category, NULL);\n+#else\n+  /* Setting of LC_ALL overwrites all other.  */\n+  retval = getenv (\"LC_ALL\");\n+  if (retval != NULL && retval[0] != '\\0')\n+    return retval;\n+\n+  /* Next comes the name of the desired category.  */\n+  retval = getenv (categoryname);\n+  if (retval != NULL && retval[0] != '\\0')\n+    return retval;\n+\n+  /* Last possibility is the LANG environment variable.  */\n+  retval = getenv (\"LANG\");\n+  if (retval != NULL && retval[0] != '\\0')\n+    return retval;\n+\n+  /* We use C as the default domain.  POSIX says this is implementation\n+     defined.  */\n+  return \"C\";\n+#endif\n+}\n+\n+/* @@ begin of epilog @@ */\n+\n+/* We don't want libintl.a to depend on any other library.  So we\n+   avoid the non-standard function stpcpy.  In GNU C Library this\n+   function is available, though.  Also allow the symbol HAVE_STPCPY\n+   to be defined.  */\n+#if !_LIBC && !HAVE_STPCPY\n+static char *\n+stpcpy (dest, src)\n+     char *dest;\n+     const char *src;\n+{\n+  while ((*dest++ = *src++) != '\\0')\n+    /* Do nothing. */ ;\n+  return dest - 1;\n+}\n+#endif"}, {"sha": "2fde6770f79196212f4c590c952d7012c7e17b0a", "filename": "texinfo/intl/dgettext.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fdgettext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fdgettext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Fdgettext.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,59 @@\n+/* dgettext.c -- implementation of the dgettext(3) function\n+   Copyright (C) 1995 Software Foundation, Inc.\n+\n+This program is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#if defined HAVE_LOCALE_H || defined _LIBC\n+# include <locale.h>\n+#endif\n+\n+#ifdef _LIBC\n+# include <libintl.h>\n+#else\n+# include \"libgettext.h\"\n+#endif\n+\n+/* @@ end of prolog @@ */\n+\n+/* Names for the libintl functions are a problem.  They must not clash\n+   with existing names and they should follow ANSI C.  But this source\n+   code is also used in GNU C Library where the names have a __\n+   prefix.  So we have to make a difference here.  */\n+#ifdef _LIBC\n+# define DGETTEXT __dgettext\n+# define DCGETTEXT __dcgettext\n+#else\n+# define DGETTEXT dgettext__\n+# define DCGETTEXT dcgettext__\n+#endif\n+\n+/* Look up MSGID in the DOMAINNAME message catalog of the current\n+   LC_MESSAGES locale.  */\n+char *\n+DGETTEXT (domainname, msgid)\n+     const char *domainname;\n+     const char *msgid;\n+{\n+  return DCGETTEXT (domainname, msgid, LC_MESSAGES);\n+}\n+\n+#ifdef _LIBC\n+/* Alias for function name in GNU C Library.  */\n+weak_alias (__dgettext, dgettext);\n+#endif"}, {"sha": "64b0a036c0c0d17638d0e89d3abb73aa125e0d13", "filename": "texinfo/intl/explodename.c", "status": "added", "additions": 182, "deletions": 0, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fexplodename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fexplodename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Fexplodename.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,182 @@\n+/* Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+This file is part of the GNU C Library.\n+Contributed by Ulrich Drepper <drepper@gnu.ai.mit.edu>, 1995.\n+\n+The GNU C Library is free software; you can redistribute it and/or\n+modify it under the terms of the GNU Library General Public License as\n+published by the Free Software Foundation; either version 2 of the\n+License, or (at your option) any later version.\n+\n+The GNU C Library is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+Library General Public License for more details.\n+\n+You should have received a copy of the GNU Library General Public\n+License along with the GNU C Library; see the file COPYING.LIB.  If\n+not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#include <stdlib.h>\n+#include <string.h>\n+\n+#include \"loadinfo.h\"\n+\n+/* On some strange systems still no definition of NULL is found.  Sigh!  */\n+#ifndef NULL\n+# if defined __STDC__ && __STDC__\n+#  define NULL ((void *) 0)\n+# else\n+#  define NULL 0\n+# endif\n+#endif\n+\n+/* @@ end of prolog @@ */\n+\n+int\n+_nl_explode_name (name, language, modifier, territory, codeset,\n+\t\t  normalized_codeset, special, sponsor, revision)\n+     char *name;\n+     const char **language;\n+     const char **modifier;\n+     const char **territory;\n+     const char **codeset;\n+     const char **normalized_codeset;\n+     const char **special;\n+     const char **sponsor;\n+     const char **revision;\n+{\n+  enum { undecided, xpg, cen } syntax;\n+  char *cp;\n+  int mask;\n+\n+  *modifier = NULL;\n+  *territory = NULL;\n+  *codeset = NULL;\n+  *normalized_codeset = NULL;\n+  *special = NULL;\n+  *sponsor = NULL;\n+  *revision = NULL;\n+\n+  /* Now we determine the single parts of the locale name.  First\n+     look for the language.  Termination symbols are `_' and `@' if\n+     we use XPG4 style, and `_', `+', and `,' if we use CEN syntax.  */\n+  mask = 0;\n+  syntax = undecided;\n+  *language = cp = name;\n+  while (cp[0] != '\\0' && cp[0] != '_' && cp[0] != '@'\n+\t && cp[0] != '+' && cp[0] != ',')\n+    ++cp;\n+\n+  if (*language == cp)\n+    /* This does not make sense: language has to be specified.  Use\n+       this entry as it is without exploding.  Perhaps it is an alias.  */\n+    cp = strchr (*language, '\\0');\n+  else if (cp[0] == '_')\n+    {\n+      /* Next is the territory.  */\n+      cp[0] = '\\0';\n+      *territory = ++cp;\n+\n+      while (cp[0] != '\\0' && cp[0] != '.' && cp[0] != '@'\n+\t     && cp[0] != '+' && cp[0] != ',' && cp[0] != '_')\n+\t++cp;\n+\n+      mask |= TERRITORY;\n+\n+      if (cp[0] == '.')\n+\t{\n+\t  /* Next is the codeset.  */\n+\t  syntax = xpg;\n+\t  cp[0] = '\\0';\n+\t  *codeset = ++cp;\n+\n+\t  while (cp[0] != '\\0' && cp[0] != '@')\n+\t    ++cp;\n+\n+\t  mask |= XPG_CODESET;\n+\n+\t  if (*codeset != cp && (*codeset)[0] != '\\0')\n+\t    {\n+\t      *normalized_codeset = _nl_normalize_codeset (*codeset,\n+\t\t\t\t\t\t\t   cp - *codeset);\n+\t      if (strcmp (*codeset, *normalized_codeset) == 0)\n+\t\tfree ((char *) *normalized_codeset);\n+\t      else\n+\t\tmask |= XPG_NORM_CODESET;\n+\t    }\n+\t}\n+    }\n+\n+  if (cp[0] == '@' || (syntax != xpg && cp[0] == '+'))\n+    {\n+      /* Next is the modifier.  */\n+      syntax = cp[0] == '@' ? xpg : cen;\n+      cp[0] = '\\0';\n+      *modifier = ++cp;\n+\n+      while (syntax == cen && cp[0] != '\\0' && cp[0] != '+'\n+\t     && cp[0] != ',' && cp[0] != '_')\n+\t++cp;\n+\n+      mask |= XPG_MODIFIER | CEN_AUDIENCE;\n+    }\n+\n+  if (syntax != xpg && (cp[0] == '+' || cp[0] == ',' || cp[0] == '_'))\n+    {\n+      syntax = cen;\n+\n+      if (cp[0] == '+')\n+\t{\n+ \t  /* Next is special application (CEN syntax).  */\n+\t  cp[0] = '\\0';\n+\t  *special = ++cp;\n+\n+\t  while (cp[0] != '\\0' && cp[0] != ',' && cp[0] != '_')\n+\t    ++cp;\n+\n+\t  mask |= CEN_SPECIAL;\n+\t}\n+\n+      if (cp[0] == ',')\n+\t{\n+ \t  /* Next is sponsor (CEN syntax).  */\n+\t  cp[0] = '\\0';\n+\t  *sponsor = ++cp;\n+\n+\t  while (cp[0] != '\\0' && cp[0] != '_')\n+\t    ++cp;\n+\n+\t  mask |= CEN_SPONSOR;\n+\t}\n+\n+      if (cp[0] == '_')\n+\t{\n+ \t  /* Next is revision (CEN syntax).  */\n+\t  cp[0] = '\\0';\n+\t  *revision = ++cp;\n+\n+\t  mask |= CEN_REVISION;\n+\t}\n+    }\n+\n+  /* For CEN sytnax values it might be important to have the\n+     separator character in the file name, not for XPG syntax.  */\n+  if (syntax == xpg)\n+    {\n+      if (*territory != NULL && (*territory)[0] == '\\0')\n+\tmask &= ~TERRITORY;\n+\n+      if (*codeset != NULL && (*codeset)[0] == '\\0')\n+\tmask &= ~XPG_CODESET;\n+\n+      if (*modifier != NULL && (*modifier)[0] == '\\0')\n+\tmask &= ~XPG_MODIFIER;\n+    }\n+\n+  return mask;\n+}"}, {"sha": "3b7861e84720ee21176ad3b5f112ab03ec68078d", "filename": "texinfo/intl/finddomain.c", "status": "added", "additions": 217, "deletions": 0, "changes": 217, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Ffinddomain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Ffinddomain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Ffinddomain.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,217 @@\n+/* finddomain.c -- handle list of needed message catalogs\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Written by Ulrich Drepper <drepper@gnu.ai.mit.edu>, 1995.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software Foundation,\n+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#include <ctype.h>\n+#include <errno.h>\n+#include <stdio.h>\n+#include <sys/types.h>\n+\n+#if defined STDC_HEADERS || defined _LIBC\n+# include <stdlib.h>\n+#else\n+# ifdef HAVE_MALLOC_H\n+#  include <malloc.h>\n+# else\n+void free ();\n+# endif\n+#endif\n+\n+#if defined HAVE_STRING_H || defined _LIBC\n+# include <string.h>\n+#else\n+# include <strings.h>\n+# ifndef strchr\n+#  define strchr index\n+# endif\n+# ifndef memcpy\n+#  define memcpy(Dst, Src, Num) bcopy ((Src), (Dst), (Num))\n+# endif\n+#endif\n+\n+#if defined HAVE_UNISTD_H || defined _LIBC\n+# include <unistd.h>\n+#endif\n+\n+#include \"gettext.h\"\n+#include \"gettextP.h\"\n+#ifdef _LIBC\n+# include <libintl.h>\n+#else\n+# include \"libgettext.h\"\n+#endif\n+\n+/* @@ end of prolog @@ */\n+\n+#ifdef _LIBC\n+/* Rename the non ANSI C functions.  This is required by the standard\n+   because some ANSI C functions will require linking with this object\n+   file and the name space must not be polluted.  */\n+# define stpcpy(dest, src) __stpcpy(dest, src)\n+#else\n+# ifndef HAVE_STPCPY\n+static char *stpcpy PARAMS ((char *dest, const char *src));\n+# endif\n+#endif\n+\n+/* List of already loaded domains.  */\n+static struct loaded_l10nfile *_nl_loaded_domains;\n+\n+\n+/* Return a data structure describing the message catalog described by\n+   the DOMAINNAME and CATEGORY parameters with respect to the currently\n+   established bindings.  */\n+struct loaded_l10nfile *\n+_nl_find_domain (dirname, locale, domainname)\n+     const char *dirname;\n+     char *locale;\n+     const char *domainname;\n+{\n+  struct loaded_l10nfile *retval;\n+  const char *language;\n+  const char *modifier;\n+  const char *territory;\n+  const char *codeset;\n+  const char *normalized_codeset;\n+  const char *special;\n+  const char *sponsor;\n+  const char *revision;\n+  const char *alias_value;\n+  int mask;\n+\n+  /* LOCALE can consist of up to four recognized parts for the XPG syntax:\n+\n+\t\tlanguage[_territory[.codeset]][@modifier]\n+\n+     and six parts for the CEN syntax:\n+\n+\tlanguage[_territory][+audience][+special][,sponsor][_revision]\n+\n+     Beside the first all of them are allowed to be missing.  If the\n+     full specified locale is not found, the less specific one are\n+     looked for.  The various part will be stripped of according to\n+     the following order:\n+\t\t(1) revision\n+\t\t(2) sponsor\n+\t\t(3) special\n+\t\t(4) codeset\n+\t\t(5) normalized codeset\n+\t\t(6) territory\n+\t\t(7) audience/modifier\n+   */\n+\n+  /* If we have already tested for this locale entry there has to\n+     be one data set in the list of loaded domains.  */\n+  retval = _nl_make_l10nflist (&_nl_loaded_domains, dirname,\n+\t\t\t       strlen (dirname) + 1, 0, locale, NULL, NULL,\n+\t\t\t       NULL, NULL, NULL, NULL, NULL, domainname, 0);\n+  if (retval != NULL)\n+    {\n+      /* We know something about this locale.  */\n+      int cnt;\n+\n+      if (retval->decided == 0)\n+\t_nl_load_domain (retval);\n+\n+      if (retval->data != NULL)\n+\treturn retval;\n+\n+      for (cnt = 0; retval->successor[cnt] != NULL; ++cnt)\n+\t{\n+\t  if (retval->successor[cnt]->decided == 0)\n+\t    _nl_load_domain (retval->successor[cnt]);\n+\n+\t  if (retval->successor[cnt]->data != NULL)\n+\t    break;\n+\t}\n+      return cnt >= 0 ? retval : NULL;\n+      /* NOTREACHED */\n+    }\n+\n+  /* See whether the locale value is an alias.  If yes its value\n+     *overwrites* the alias name.  No test for the original value is\n+     done.  */\n+  alias_value = _nl_expand_alias (locale);\n+  if (alias_value != NULL)\n+    {\n+      size_t len = strlen (alias_value) + 1;\n+      locale = (char *) malloc (len);\n+      if (locale == NULL)\n+\treturn NULL;\n+\n+      memcpy (locale, alias_value, len);\n+    }\n+\n+  /* Now we determine the single parts of the locale name.  First\n+     look for the language.  Termination symbols are `_' and `@' if\n+     we use XPG4 style, and `_', `+', and `,' if we use CEN syntax.  */\n+  mask = _nl_explode_name (locale, &language, &modifier, &territory,\n+\t\t\t   &codeset, &normalized_codeset, &special,\n+\t\t\t   &sponsor, &revision);\n+\n+  /* Create all possible locale entries which might be interested in\n+     generalzation.  */\n+  retval = _nl_make_l10nflist (&_nl_loaded_domains, dirname,\n+\t\t\t       strlen (dirname) + 1, mask, language, territory,\n+\t\t\t       codeset, normalized_codeset, modifier, special,\n+\t\t\t       sponsor, revision, domainname, 1);\n+  if (retval == NULL)\n+    /* This means we are out of core.  */\n+    return NULL;\n+\n+  if (retval->decided == 0)\n+    _nl_load_domain (retval);\n+  if (retval->data == NULL)\n+    {\n+      int cnt;\n+      for (cnt = 0; retval->successor[cnt] != NULL; ++cnt)\n+\t{\n+\t  if (retval->successor[cnt]->decided == 0)\n+\t    _nl_load_domain (retval->successor[cnt]);\n+\t  if (retval->successor[cnt]->data != NULL)\n+\t    break;\n+\t}\n+    }\n+\n+  /* The room for an alias was dynamically allocated.  Free it now.  */\n+  if (alias_value != NULL)\n+    free (locale);\n+\n+  return retval;\n+}\n+\n+/* @@ begin of epilog @@ */\n+\n+/* We don't want libintl.a to depend on any other library.  So we\n+   avoid the non-standard function stpcpy.  In GNU C Library this\n+   function is available, though.  Also allow the symbol HAVE_STPCPY\n+   to be defined.  */\n+#if !_LIBC && !HAVE_STPCPY\n+static char *\n+stpcpy (dest, src)\n+     char *dest;\n+     const char *src;\n+{\n+  while ((*dest++ = *src++) != '\\0')\n+    /* Do nothing. */ ;\n+  return dest - 1;\n+}\n+#endif"}, {"sha": "7bed6369b44713697062bfe6bdb2899e9c1c80cb", "filename": "texinfo/intl/gettext.c", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fgettext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fgettext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Fgettext.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,70 @@\n+/* gettext.c -- implementation of gettext(3) function\n+   Copyright (C) 1995 Software Foundation, Inc.\n+\n+This program is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#ifdef _LIBC\n+# define __need_NULL\n+# include <stddef.h>\n+#else\n+# ifdef STDC_HEADERS\n+#  include <stdlib.h>\t\t/* Just for NULL.  */\n+# else\n+#  ifdef HAVE_STRING_H\n+#   include <string.h>\n+#  else\n+#   define NULL ((void *) 0)\n+#  endif\n+# endif\n+#endif\n+\n+#ifdef _LIBC\n+# include <libintl.h>\n+#else\n+# include \"libgettext.h\"\n+#endif\n+\n+/* @@ end of prolog @@ */\n+\n+/* Names for the libintl functions are a problem.  They must not clash\n+   with existing names and they should follow ANSI C.  But this source\n+   code is also used in GNU C Library where the names have a __\n+   prefix.  So we have to make a difference here.  */\n+#ifdef _LIBC\n+# define GETTEXT __gettext\n+# define DGETTEXT __dgettext\n+#else\n+# define GETTEXT gettext__\n+# define DGETTEXT dgettext__\n+#endif\n+\n+/* Look up MSGID in the current default message catalog for the current\n+   LC_MESSAGES locale.  If not found, returns MSGID itself (the default\n+   text).  */\n+char *\n+GETTEXT (msgid)\n+     const char *msgid;\n+{\n+  return DGETTEXT (NULL, msgid);\n+}\n+\n+#ifdef _LIBC\n+/* Alias for function name in GNU C Library.  */\n+weak_alias (__gettext, gettext);\n+#endif"}, {"sha": "5190f09447f241f067d1158cd0678f7a519d0618", "filename": "texinfo/intl/gettext.h", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fgettext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fgettext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Fgettext.h?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,105 @@\n+/* gettext.h - internal header for GNU gettext internationalization functions\n+   Copyright (C) 1995 Software Foundation, Inc.\n+\n+This program is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU Library General Public\n+License along with the GNU C Library; see the file COPYING.LIB.  If\n+not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#ifndef _GETTEXT_H\n+#define _GETTEXT_H 1\n+\n+#include <stdio.h>\n+\n+#if HAVE_LIMITS_H || _LIBC\n+# include <limits.h>\n+#endif\n+\n+/* @@ end of prolog @@ */\n+\n+/* The magic number of the GNU message catalog format.  */\n+#define _MAGIC 0x950412de\n+#define _MAGIC_SWAPPED 0xde120495\n+\n+/* Revision number of the currently used .mo (binary) file format.  */\n+#define MO_REVISION_NUMBER 0\n+\n+/* The following contortions are an attempt to use the C preprocessor\n+   to determine an unsigned integral type that is 32 bits wide.  An\n+   alternative approach is to use autoconf's AC_CHECK_SIZEOF macro, but\n+   doing that would require that the configure script compile and *run*\n+   the resulting executable.  Locally running cross-compiled executables\n+   is usually not possible.  */\n+\n+#if __STDC__\n+# define UINT_MAX_32_BITS 4294967295U\n+#else\n+# define UINT_MAX_32_BITS 0xFFFFFFFF\n+#endif\n+\n+/* If UINT_MAX isn't defined, assume it's a 32-bit type.\n+   This should be valid for all systems GNU cares about because\n+   that doesn't include 16-bit systems, and only modern systems\n+   (that certainly have <limits.h>) have 64+-bit integral types.  */\n+\n+#ifndef UINT_MAX\n+# define UINT_MAX UINT_MAX_32_BITS\n+#endif\n+\n+#if UINT_MAX == UINT_MAX_32_BITS\n+typedef unsigned nls_uint32;\n+#else\n+# if USHRT_MAX == UINT_MAX_32_BITS\n+typedef unsigned short nls_uint32;\n+# else\n+#  if ULONG_MAX == UINT_MAX_32_BITS\n+typedef unsigned long nls_uint32;\n+#  else\n+  /* The following line is intended to throw an error.  Using #error is\n+     not portable enough.  */\n+  \"Cannot determine unsigned 32-bit data type.\"\n+#  endif\n+# endif\n+#endif\n+\n+\n+/* Header for binary .mo file format.  */\n+struct mo_file_header\n+{\n+  /* The magic number.  */\n+  nls_uint32 magic;\n+  /* The revision number of the file format.  */\n+  nls_uint32 revision;\n+  /* The number of strings pairs.  */\n+  nls_uint32 nstrings;\n+  /* Offset of table with start offsets of original strings.  */\n+  nls_uint32 orig_tab_offset;\n+  /* Offset of table with start offsets of translation strings.  */\n+  nls_uint32 trans_tab_offset;\n+  /* Size of hashing table.  */\n+  nls_uint32 hash_tab_size;\n+  /* Offset of first hashing entry.  */\n+  nls_uint32 hash_tab_offset;\n+};\n+\n+struct string_desc\n+{\n+  /* Length of addressed string.  */\n+  nls_uint32 length;\n+  /* Offset of string in file.  */\n+  nls_uint32 offset;\n+};\n+\n+/* @@ begin of epilog @@ */\n+\n+#endif\t/* gettext.h  */"}, {"sha": "bb8d55235adb0b8a6886d54c9d8249a30c364f60", "filename": "texinfo/intl/gettextP.h", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2FgettextP.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2FgettextP.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2FgettextP.h?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,73 @@\n+/* Header describing internals of gettext library\n+   Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software Foundation,\n+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifndef _GETTEXTP_H\n+#define _GETTEXTP_H\n+\n+#include \"loadinfo.h\"\n+\n+/* @@ end of prolog @@ */\n+\n+#ifndef PARAMS\n+# if __STDC__\n+#  define PARAMS(args) args\n+# else\n+#  define PARAMS(args) ()\n+# endif\n+#endif\n+\n+#ifndef W\n+# define W(flag, data) ((flag) ? SWAP (data) : (data))\n+#endif\n+\n+\n+static nls_uint32 SWAP PARAMS ((nls_uint32 i));\n+\n+static inline nls_uint32\n+SWAP (i)\n+     nls_uint32 i;\n+{\n+  return (i << 24) | ((i & 0xff00) << 8) | ((i >> 8) & 0xff00) | (i >> 24);\n+}\n+\n+\n+struct loaded_domain\n+{\n+  const char *data;\n+  int must_swap;\n+  nls_uint32 nstrings;\n+  struct string_desc *orig_tab;\n+  struct string_desc *trans_tab;\n+  nls_uint32 hash_size;\n+  nls_uint32 *hash_tab;\n+};\n+\n+struct binding\n+{\n+  struct binding *next;\n+  char *domainname;\n+  char *dirname;\n+};\n+\n+struct loaded_l10nfile *_nl_find_domain PARAMS ((const char *__dirname,\n+\t\t\t\t\t\t char *__locale,\n+\t\t\t\t\t\t const char *__domainname));\n+void _nl_load_domain PARAMS ((struct loaded_l10nfile *__domain));\n+\n+/* @@ begin of epilog @@ */\n+\n+#endif /* gettextP.h  */"}, {"sha": "ef1f448d8654d194605a7af8320cd152d5b58508", "filename": "texinfo/intl/hash-string.h", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fhash-string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fhash-string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Fhash-string.h?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,62 @@\n+/* hash-string - Implements a string hashing function.\n+   Copyright (C) 1995 Free Software Foundation, Inc.\n+\n+This program is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_VALUES_H\n+# include <values.h>\n+#endif\n+\n+/* @@ end of prolog @@ */\n+\n+#ifndef PARAMS\n+# if __STDC__\n+#  define PARAMS(Args) Args\n+# else\n+#  define PARAMS(Args) ()\n+# endif\n+#endif\n+\n+/* We assume to have `unsigned long int' value with at least 32 bits.  */\n+#define HASHWORDBITS 32\n+\n+\n+/* Defines the so called `hashpjw' function by P.J. Weinberger\n+   [see Aho/Sethi/Ullman, COMPILERS: Principles, Techniques and Tools,\n+   1986, 1987 Bell Telephone Laboratories, Inc.]  */\n+static unsigned long hash_string PARAMS ((const char *__str_param));\n+\n+static inline unsigned long\n+hash_string (str_param)\n+     const char *str_param;\n+{\n+  unsigned long int hval, g;\n+  const char *str = str_param;\n+\n+  /* Compute the hash value for the given string.  */\n+  hval = 0;\n+  while (*str != '\\0')\n+    {\n+      hval <<= 4;\n+      hval += (unsigned long) *str++;\n+      g = hval & ((unsigned long) 0xf << (HASHWORDBITS - 4));\n+      if (g != 0)\n+\t{\n+\t  hval ^= g >> (HASHWORDBITS - 8);\n+\t  hval ^= g;\n+\t}\n+    }\n+  return hval;\n+}"}, {"sha": "503efa0fa9c5179f26a8b6cbd57ec36e1398b662", "filename": "texinfo/intl/intl-compat.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fintl-compat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fintl-compat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Fintl-compat.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,76 @@\n+/* intl-compat.c - Stub functions to call gettext functions from GNU gettext\n+   Library.\n+   Copyright (C) 1995 Software Foundation, Inc.\n+\n+This program is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#include \"libgettext.h\"\n+\n+/* @@ end of prolog @@ */\n+\n+\n+#undef gettext\n+#undef dgettext\n+#undef dcgettext\n+#undef textdomain\n+#undef bindtextdomain\n+\n+\n+char *\n+bindtextdomain (domainname, dirname)\n+     const char *domainname;\n+     const char *dirname;\n+{\n+  return bindtextdomain__ (domainname, dirname);\n+}\n+\n+\n+char *\n+dcgettext (domainname, msgid, category)\n+     const char *domainname;\n+     const char *msgid;\n+     int category;\n+{\n+  return dcgettext__ (domainname, msgid, category);\n+}\n+\n+\n+char *\n+dgettext (domainname, msgid)\n+     const char *domainname;\n+     const char *msgid;\n+{\n+  return dgettext__ (domainname, msgid);\n+}\n+\n+\n+char *\n+gettext (msgid)\n+     const char *msgid;\n+{\n+  return gettext__ (msgid);\n+}\n+\n+\n+char *\n+textdomain (domainname)\n+     const char *domainname;\n+{\n+  return textdomain__ (domainname);\n+}"}, {"sha": "3611b12904f2d1ce96df2d6e167f197cd19393ad", "filename": "texinfo/intl/l10nflist.c", "status": "added", "additions": 402, "deletions": 0, "changes": 402, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fl10nflist.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fl10nflist.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Fl10nflist.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,402 @@\n+/* finddomain.c -- handle list of needed message catalogs\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Written by Ulrich Drepper <drepper@gnu.ai.mit.edu>, 1995.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software Foundation,\n+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#if defined HAVE_STRING_H || defined _LIBC\n+# ifndef _GNU_SOURCE\n+#  define _GNU_SOURCE\t1\n+# endif\n+# include <string.h>\n+#else\n+# include <strings.h>\n+# ifndef strchr\n+#  define strchr index\n+# endif\n+# ifndef memcpy\n+#  define memcpy(Dst, Src, Num) bcopy ((Src), (Dst), (Num))\n+# endif\n+#endif\n+\n+#if defined _LIBC || defined HAVE_ARGZ_H\n+# include <argz.h>\n+#endif\n+#include <ctype.h>\n+\n+#if defined STDC_HEADERS || defined _LIBC\n+# include <stdlib.h>\n+#endif\n+\n+#include \"loadinfo.h\"\n+\n+/* On some strange systems still no definition of NULL is found.  Sigh!  */\n+#ifndef NULL\n+# if defined __STDC__ && __STDC__\n+#  define NULL ((void *) 0)\n+# else\n+#  define NULL 0\n+# endif\n+#endif\n+\n+/* @@ end of prolog @@ */\n+\n+#ifdef _LIBC\n+/* Rename the non ANSI C functions.  This is required by the standard\n+   because some ANSI C functions will require linking with this object\n+   file and the name space must not be polluted.  */\n+# define stpcpy(dest, src) __stpcpy(dest, src)\n+#else\n+# ifndef HAVE_STPCPY\n+static char *stpcpy PARAMS ((char *dest, const char *src));\n+# endif\n+#endif\n+\n+/* Define function which are usually not available.  */\n+\n+#if !defined _LIBC && !defined HAVE___ARGZ_COUNT\n+/* Returns the number of strings in ARGZ.  */\n+static size_t argz_count__ PARAMS ((const char *argz, size_t len));\n+\n+static size_t\n+argz_count__ (argz, len)\n+     const char *argz;\n+     size_t len;\n+{\n+  size_t count = 0;\n+  while (len > 0)\n+    {\n+      size_t part_len = strlen (argz);\n+      argz += part_len + 1;\n+      len -= part_len + 1;\n+      count++;\n+    }\n+  return count;\n+}\n+# undef __argz_count\n+# define __argz_count(argz, len) argz_count__ (argz, len)\n+#endif\t/* !_LIBC && !HAVE___ARGZ_COUNT */\n+\n+#if !defined _LIBC && !defined HAVE___ARGZ_STRINGIFY\n+/* Make '\\0' separated arg vector ARGZ printable by converting all the '\\0's\n+   except the last into the character SEP.  */\n+static void argz_stringify__ PARAMS ((char *argz, size_t len, int sep));\n+\n+static void\n+argz_stringify__ (argz, len, sep)\n+     char *argz;\n+     size_t len;\n+     int sep;\n+{\n+  while (len > 0)\n+    {\n+      size_t part_len = strlen (argz);\n+      argz += part_len;\n+      len -= part_len + 1;\n+      if (len > 0)\n+\t*argz++ = sep;\n+    }\n+}\n+# undef __argz_stringify\n+# define __argz_stringify(argz, len, sep) argz_stringify__ (argz, len, sep)\n+#endif\t/* !_LIBC && !HAVE___ARGZ_STRINGIFY */\n+\n+#if !defined _LIBC && !defined HAVE___ARGZ_NEXT\n+static char *argz_next__ PARAMS ((char *argz, size_t argz_len,\n+\t\t\t\t  const char *entry));\n+\n+static char *\n+argz_next__ (argz, argz_len, entry)\n+     char *argz;\n+     size_t argz_len;\n+     const char *entry;\n+{\n+  if (entry)\n+    {\n+      if (entry < argz + argz_len)\n+        entry = strchr (entry, '\\0') + 1;\n+\n+      return entry >= argz + argz_len ? NULL : (char *) entry;\n+    }\n+  else\n+    if (argz_len > 0)\n+      return argz;\n+    else\n+      return 0;\n+}\n+# undef __argz_next\n+# define __argz_next(argz, len, entry) argz_next__ (argz, len, entry)\n+#endif\t/* !_LIBC && !HAVE___ARGZ_NEXT */\n+\n+\n+/* Return number of bits set in X.  */\n+static int pop PARAMS ((int x));\n+\n+static inline int\n+pop (x)\n+     int x;\n+{\n+  /* We assume that no more than 16 bits are used.  */\n+  x = ((x & ~0x5555) >> 1) + (x & 0x5555);\n+  x = ((x & ~0x3333) >> 2) + (x & 0x3333);\n+  x = ((x >> 4) + x) & 0x0f0f;\n+  x = ((x >> 8) + x) & 0xff;\n+\n+  return x;\n+}\n+\n+\f\n+struct loaded_l10nfile *\n+_nl_make_l10nflist (l10nfile_list, dirlist, dirlist_len, mask, language,\n+\t\t    territory, codeset, normalized_codeset, modifier, special,\n+\t\t    sponsor, revision, filename, do_allocate)\n+     struct loaded_l10nfile **l10nfile_list;\n+     const char *dirlist;\n+     size_t dirlist_len;\n+     int mask;\n+     const char *language;\n+     const char *territory;\n+     const char *codeset;\n+     const char *normalized_codeset;\n+     const char *modifier;\n+     const char *special;\n+     const char *sponsor;\n+     const char *revision;\n+     const char *filename;\n+     int do_allocate;\n+{\n+  char *abs_filename;\n+  struct loaded_l10nfile *last = NULL;\n+  struct loaded_l10nfile *retval;\n+  char *cp;\n+  size_t entries;\n+  int cnt;\n+\n+  /* Allocate room for the full file name.  */\n+  abs_filename = (char *) malloc (dirlist_len\n+\t\t\t\t  + strlen (language)\n+\t\t\t\t  + ((mask & TERRITORY) != 0\n+\t\t\t\t     ? strlen (territory) + 1 : 0)\n+\t\t\t\t  + ((mask & XPG_CODESET) != 0\n+\t\t\t\t     ? strlen (codeset) + 1 : 0)\n+\t\t\t\t  + ((mask & XPG_NORM_CODESET) != 0\n+\t\t\t\t     ? strlen (normalized_codeset) + 1 : 0)\n+\t\t\t\t  + (((mask & XPG_MODIFIER) != 0\n+\t\t\t\t      || (mask & CEN_AUDIENCE) != 0) ?\n+\t\t\t\t     strlen (modifier) + 1 : 0)\n+\t\t\t\t  + ((mask & CEN_SPECIAL) != 0\n+\t\t\t\t     ? strlen (special) + 1 : 0)\n+\t\t\t\t  + ((mask & CEN_SPONSOR) != 0\n+\t\t\t\t     ? strlen (sponsor) + 1 : 0)\n+\t\t\t\t  + ((mask & CEN_REVISION) != 0\n+\t\t\t\t     ? strlen (revision) + 1 : 0)\n+\t\t\t\t  + 1 + strlen (filename) + 1);\n+\n+  if (abs_filename == NULL)\n+    return NULL;\n+\n+  retval = NULL;\n+  last = NULL;\n+\n+  /* Construct file name.  */\n+  memcpy (abs_filename, dirlist, dirlist_len);\n+  __argz_stringify (abs_filename, dirlist_len, ':');\n+  cp = abs_filename + (dirlist_len - 1);\n+  *cp++ = '/';\n+  cp = stpcpy (cp, language);\n+\n+  if ((mask & TERRITORY) != 0)\n+    {\n+      *cp++ = '_';\n+      cp = stpcpy (cp, territory);\n+    }\n+  if ((mask & XPG_CODESET) != 0)\n+    {\n+      *cp++ = '.';\n+      cp = stpcpy (cp, codeset);\n+    }\n+  if ((mask & XPG_NORM_CODESET) != 0)\n+    {\n+      *cp++ = '.';\n+      cp = stpcpy (cp, normalized_codeset);\n+    }\n+  if ((mask & (XPG_MODIFIER | CEN_AUDIENCE)) != 0)\n+    {\n+      /* This component can be part of both syntaces but has different\n+\t leading characters.  For CEN we use `+', else `@'.  */\n+      *cp++ = (mask & CEN_AUDIENCE) != 0 ? '+' : '@';\n+      cp = stpcpy (cp, modifier);\n+    }\n+  if ((mask & CEN_SPECIAL) != 0)\n+    {\n+      *cp++ = '+';\n+      cp = stpcpy (cp, special);\n+    }\n+  if ((mask & CEN_SPONSOR) != 0)\n+    {\n+      *cp++ = ',';\n+      cp = stpcpy (cp, sponsor);\n+    }\n+  if ((mask & CEN_REVISION) != 0)\n+    {\n+      *cp++ = '_';\n+      cp = stpcpy (cp, revision);\n+    }\n+\n+  *cp++ = '/';\n+  stpcpy (cp, filename);\n+\n+  /* Look in list of already loaded domains whether it is already\n+     available.  */\n+  last = NULL;\n+  for (retval = *l10nfile_list; retval != NULL; retval = retval->next)\n+    if (retval->filename != NULL)\n+      {\n+\tint compare = strcmp (retval->filename, abs_filename);\n+\tif (compare == 0)\n+\t  /* We found it!  */\n+\t  break;\n+\tif (compare < 0)\n+\t  {\n+\t    /* It's not in the list.  */\n+\t    retval = NULL;\n+\t    break;\n+\t  }\n+\n+\tlast = retval;\n+      }\n+\n+  if (retval != NULL || do_allocate == 0)\n+    {\n+      free (abs_filename);\n+      return retval;\n+    }\n+\n+  retval = (struct loaded_l10nfile *)\n+    malloc (sizeof (*retval) + (__argz_count (dirlist, dirlist_len)\n+\t\t\t\t* (1 << pop (mask))\n+\t\t\t\t* sizeof (struct loaded_l10nfile *)));\n+  if (retval == NULL)\n+    return NULL;\n+\n+  retval->filename = abs_filename;\n+  retval->decided = (__argz_count (dirlist, dirlist_len) != 1\n+\t\t     || ((mask & XPG_CODESET) != 0\n+\t\t\t && (mask & XPG_NORM_CODESET) != 0));\n+  retval->data = NULL;\n+\n+  if (last == NULL)\n+    {\n+      retval->next = *l10nfile_list;\n+      *l10nfile_list = retval;\n+    }\n+  else\n+    {\n+      retval->next = last->next;\n+      last->next = retval;\n+    }\n+\n+  entries = 0;\n+  /* If the DIRLIST is a real list the RETVAL entry correcponds not to\n+     a real file.  So we have to use the DIRLIST separation machanism\n+     of the inner loop.  */\n+  cnt = __argz_count (dirlist, dirlist_len) == 1 ? mask - 1 : mask;\n+  for (; cnt >= 0; --cnt)\n+    if ((cnt & ~mask) == 0\n+\t&& ((cnt & CEN_SPECIFIC) == 0 || (cnt & XPG_SPECIFIC) == 0)\n+\t&& ((cnt & XPG_CODESET) == 0 || (cnt & XPG_NORM_CODESET) == 0))\n+      {\n+\t/* Iterate over all elements of the DIRLIST.  */\n+\tchar *dir = NULL;\n+\n+\twhile ((dir = __argz_next ((char *) dirlist, dirlist_len, dir))\n+\t       != NULL)\n+\t  retval->successor[entries++]\n+\t    = _nl_make_l10nflist (l10nfile_list, dir, strlen (dir) + 1, cnt,\n+\t\t\t\t  language, territory, codeset,\n+\t\t\t\t  normalized_codeset, modifier, special,\n+\t\t\t\t  sponsor, revision, filename, 1);\n+      }\n+  retval->successor[entries] = NULL;\n+\n+  return retval;\n+}\n+\f\n+/* Normalize codeset name.  There is no standard for the codeset\n+   names.  Normalization allows the user to use any of the common\n+   names.  */\n+const char *\n+_nl_normalize_codeset (codeset, name_len)\n+     const char *codeset;\n+     size_t name_len;\n+{\n+  int len = 0;\n+  int only_digit = 1;\n+  char *retval;\n+  char *wp;\n+  size_t cnt;\n+\n+  for (cnt = 0; cnt < name_len; ++cnt)\n+    if (isalnum (codeset[cnt]))\n+      {\n+\t++len;\n+\n+\tif (isalpha (codeset[cnt]))\n+\t  only_digit = 0;\n+      }\n+\n+  retval = (char *) malloc ((only_digit ? 3 : 0) + len + 1);\n+\n+  if (retval != NULL)\n+    {\n+      if (only_digit)\n+\twp = stpcpy (retval, \"iso\");\n+      else\n+\twp = retval;\n+\n+      for (cnt = 0; cnt < name_len; ++cnt)\n+\tif (isalpha (codeset[cnt]))\n+\t  *wp++ = tolower (codeset[cnt]);\n+\telse if (isdigit (codeset[cnt]))\n+\t  *wp++ = codeset[cnt];\n+\n+      *wp = '\\0';\n+    }\n+\n+  return (const char *) retval;\n+}\n+\n+\n+/* @@ begin of epilog @@ */\n+\n+/* We don't want libintl.a to depend on any other library.  So we\n+   avoid the non-standard function stpcpy.  In GNU C Library this\n+   function is available, though.  Also allow the symbol HAVE_STPCPY\n+   to be defined.  */\n+#if !_LIBC && !HAVE_STPCPY\n+static char *\n+stpcpy (dest, src)\n+     char *dest;\n+     const char *src;\n+{\n+  while ((*dest++ = *src++) != '\\0')\n+    /* Do nothing. */ ;\n+  return dest - 1;\n+}\n+#endif"}, {"sha": "c9212aac5393d6fc1ee07ba58da7ba95f1013664", "filename": "texinfo/intl/libgettext.h", "status": "added", "additions": 182, "deletions": 0, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Flibgettext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Flibgettext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Flibgettext.h?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,182 @@\n+/* libgettext.h -- Message catalogs for internationalization.\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+\n+This program is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+/* Because on some systems (e.g. Solaris) we sometimes have to include\n+   the systems libintl.h as well as this file we have more complex\n+   include protection above.  But the systems header might perhaps also\n+   define _LIBINTL_H and therefore we have to protect the definition here.  */\n+\n+#if !defined (_LIBINTL_H) || !defined (_LIBGETTEXT_H)\n+#if !defined (_LIBINTL_H)\n+# define _LIBINTL_H\t1\n+#endif\n+#define _LIBGETTEXT_H\t1\n+\n+/* We define an additional symbol to signal that we use the GNU\n+   implementation of gettext.  */\n+#define __USE_GNU_GETTEXT 1\n+\n+#include <sys/types.h>\n+\n+#if HAVE_LOCALE_H\n+# include <locale.h>\n+#endif\n+\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/* @@ end of prolog @@ */\n+\n+#ifndef PARAMS\n+# if __STDC__\n+#  define PARAMS(args) args\n+# else\n+#  define PARAMS(args) ()\n+# endif\n+#endif\n+\n+#ifndef NULL\n+# if !defined __cplusplus || defined __GNUC__\n+#  define NULL ((void *) 0)\n+# else\n+#  define NULL (0)\n+# endif\n+#endif\n+\n+#if !HAVE_LC_MESSAGES\n+/* This value determines the behaviour of the gettext() and dgettext()\n+   function.  But some system does not have this defined.  Define it\n+   to a default value.  */\n+# define LC_MESSAGES (-1)\n+#endif\n+\n+\n+/* Declarations for gettext-using-catgets interface.  Derived from\n+   Jim Meyering's libintl.h.  */\n+struct _msg_ent\n+{\n+  const char *_msg;\n+  int _msg_number;\n+};\n+\n+\n+#if HAVE_CATGETS\n+/* These two variables are defined in the automatically by po-to-tbl.sed\n+   generated file `cat-id-tbl.c'.  */\n+extern const struct _msg_ent _msg_tbl[];\n+extern int _msg_tbl_length;\n+#endif\n+\n+\n+/* For automatical extraction of messages sometimes no real\n+   translation is needed.  Instead the string itself is the result.  */\n+#define gettext_noop(Str) (Str)\n+\n+/* Look up MSGID in the current default message catalog for the current\n+   LC_MESSAGES locale.  If not found, returns MSGID itself (the default\n+   text).  */\n+extern char *gettext PARAMS ((const char *__msgid));\n+extern char *gettext__ PARAMS ((const char *__msgid));\n+\n+/* Look up MSGID in the DOMAINNAME message catalog for the current\n+   LC_MESSAGES locale.  */\n+extern char *dgettext PARAMS ((const char *__domainname, const char *__msgid));\n+extern char *dgettext__ PARAMS ((const char *__domainname,\n+\t\t\t\t const char *__msgid));\n+\n+/* Look up MSGID in the DOMAINNAME message catalog for the current CATEGORY\n+   locale.  */\n+extern char *dcgettext PARAMS ((const char *__domainname, const char *__msgid,\n+\t\t\t\tint __category));\n+extern char *dcgettext__ PARAMS ((const char *__domainname,\n+\t\t\t\t  const char *__msgid, int __category));\n+\n+\n+/* Set the current default message catalog to DOMAINNAME.\n+   If DOMAINNAME is null, return the current default.\n+   If DOMAINNAME is \"\", reset to the default of \"messages\".  */\n+extern char *textdomain PARAMS ((const char *__domainname));\n+extern char *textdomain__ PARAMS ((const char *__domainname));\n+\n+/* Specify that the DOMAINNAME message catalog will be found\n+   in DIRNAME rather than in the system locale data base.  */\n+extern char *bindtextdomain PARAMS ((const char *__domainname,\n+\t\t\t\t  const char *__dirname));\n+extern char *bindtextdomain__ PARAMS ((const char *__domainname,\n+\t\t\t\t    const char *__dirname));\n+\n+#if ENABLE_NLS\n+\n+/* Solaris 2.3 has the gettext function but dcgettext is missing.\n+   So we omit this optimization for Solaris 2.3.  BTW, Solaris 2.4\n+   has dcgettext.  */\n+# if !HAVE_CATGETS && (!HAVE_GETTEXT || HAVE_DCGETTEXT)\n+\n+#  define gettext(Msgid)\t\t\t\t\t\t      \\\n+     dgettext (NULL, Msgid)\n+\n+#  define dgettext(Domainname, Msgid)\t\t\t\t\t      \\\n+     dcgettext (Domainname, Msgid, LC_MESSAGES)\n+\n+#  if defined __GNUC__ && __GNUC__ == 2 && __GNUC_MINOR__ >= 7\n+/* This global variable is defined in loadmsgcat.c.  We need a sign,\n+   whether a new catalog was loaded, which can be associated with all\n+   translations.  */\n+extern int _nl_msg_cat_cntr;\n+\n+#   define dcgettext(Domainname, Msgid, Category)\t\t\t      \\\n+  (__extension__\t\t\t\t\t\t\t      \\\n+   ({\t\t\t\t\t\t\t\t\t      \\\n+     char *__result;\t\t\t\t\t\t\t      \\\n+     if (__builtin_constant_p (Msgid))\t\t\t\t\t      \\\n+       {\t\t\t\t\t\t\t\t      \\\n+\t static char *__translation__;\t\t\t\t\t      \\\n+\t static int __catalog_counter__;\t\t\t\t      \\\n+\t if (! __translation__ || __catalog_counter__ != _nl_msg_cat_cntr)    \\\n+\t   {\t\t\t\t\t\t\t\t      \\\n+\t     __translation__ =\t\t\t\t\t\t      \\\n+\t       dcgettext__ ((Domainname), (Msgid), (Category));\t\t      \\\n+\t     __catalog_counter__ = _nl_msg_cat_cntr;\t\t\t      \\\n+\t   }\t\t\t\t\t\t\t\t      \\\n+\t __result = __translation__;\t\t\t\t\t      \\\n+       }\t\t\t\t\t\t\t\t      \\\n+     else\t\t\t\t\t\t\t\t      \\\n+       __result = dcgettext__ ((Domainname), (Msgid), (Category));\t      \\\n+     __result;\t\t\t\t\t\t\t\t      \\\n+    }))\n+#  endif\n+# endif\n+\n+#else\n+\n+# define gettext(Msgid) (Msgid)\n+# define dgettext(Domainname, Msgid) (Msgid)\n+# define dcgettext(Domainname, Msgid, Category) (Msgid)\n+# define textdomain(Domainname) while (0) /* nothing */\n+# define bindtextdomain(Domainname, Dirname) while (0) /* nothing */\n+\n+#endif\n+\n+/* @@ begin of epilog @@ */\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif"}, {"sha": "5918e720a9adca1c7983a1becf4f6a9d23cea20d", "filename": "texinfo/intl/linux-msg.sed", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Flinux-msg.sed", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Flinux-msg.sed", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Flinux-msg.sed?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,100 @@\n+# po2msg.sed - Convert Uniforum style .po file to Linux style .msg file\n+# Copyright (C) 1995 Free Software Foundation, Inc.\n+# Ulrich Drepper <drepper@gnu.ai.mit.edu>, 1995.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+#\n+#\n+# The first directive in the .msg should be the definition of the\n+# message set number.  We use always set number 1.\n+#\n+1 {\n+  i\\\n+$set 1 # Automatically created by po2msg.sed\n+  h\n+  s/.*/0/\n+  x\n+}\n+#\n+# Mitch's old catalog format does not allow comments.\n+#\n+# We copy the original message as a comment into the .msg file.\n+#\n+/^msgid/ {\n+  s/msgid[ \t]*\"//\n+#\n+# This does not work now with the new format.\n+# /\"$/! {\n+#   s/\\\\$//\n+#   s/$/ ... (more lines following)\"/\n+# }\n+  x\n+# The following nice solution is by\n+# Bruno <Haible@ma2s2.mathematik.uni-karlsruhe.de>\n+  td\n+# Increment a decimal number in pattern space.\n+# First hide trailing `9' digits.\n+  :d\n+  s/9\\(_*\\)$/_\\1/\n+  td\n+# Assure at least one digit is available.\n+  s/^\\(_*\\)$/0\\1/\n+# Increment the last digit.\n+  s/8\\(_*\\)$/9\\1/\n+  s/7\\(_*\\)$/8\\1/\n+  s/6\\(_*\\)$/7\\1/\n+  s/5\\(_*\\)$/6\\1/\n+  s/4\\(_*\\)$/5\\1/\n+  s/3\\(_*\\)$/4\\1/\n+  s/2\\(_*\\)$/3\\1/\n+  s/1\\(_*\\)$/2\\1/\n+  s/0\\(_*\\)$/1\\1/\n+# Convert the hidden `9' digits to `0's.\n+  s/_/0/g\n+  x\n+  G\n+  s/\\(.*\\)\"\\n\\([0-9]*\\)/$ #\\2 Original Message:(\\1)/p\n+}\n+#\n+# The .msg file contains, other then the .po file, only the translations\n+# but each given a unique ID.  Starting from 1 and incrementing by 1 for\n+# each message we assign them to the messages.\n+# It is important that the .po file used to generate the cat-id-tbl.c file\n+# (with po-to-tbl) is the same as the one used here.  (At least the order\n+# of declarations must not be changed.)\n+#\n+/^msgstr/ {\n+  s/msgstr[ \t]*\"\\(.*\\)\"/# \\1/\n+# Clear substitution flag.\n+  tb\n+# Append the next line.\n+  :b\n+  N\n+# Look whether second part is continuation line.\n+  s/\\(.*\\n\\)\"\\(.*\\)\"/\\1\\2/\n+# Yes, then branch.\n+  ta\n+  P\n+  D\n+# Note that D includes a jump to the start!!\n+# We found a continuation line.  But before printing insert '\\'.\n+  :a\n+  s/\\(.*\\)\\(\\n.*\\)/\\1\\\\\\2/\n+  P\n+# We cannot use D here.\n+  s/.*\\n\\(.*\\)/\\1/\n+  tb\n+}\n+d"}, {"sha": "c67c2eb2e8e353cdbc9bbffbff86bbad3126fd2d", "filename": "texinfo/intl/loadinfo.h", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Floadinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Floadinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Floadinfo.h?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,58 @@\n+#ifndef PARAMS\n+# if __STDC__\n+#  define PARAMS(args) args\n+# else\n+#  define PARAMS(args) ()\n+# endif\n+#endif\n+\n+/* Encoding of locale name parts.  */\n+#define CEN_REVISION\t\t1\n+#define CEN_SPONSOR\t\t2\n+#define CEN_SPECIAL\t\t4\n+#define XPG_NORM_CODESET\t8\n+#define XPG_CODESET\t\t16\n+#define TERRITORY\t\t32\n+#define CEN_AUDIENCE\t\t64\n+#define XPG_MODIFIER\t\t128\n+\n+#define CEN_SPECIFIC\t(CEN_REVISION|CEN_SPONSOR|CEN_SPECIAL|CEN_AUDIENCE)\n+#define XPG_SPECIFIC\t(XPG_CODESET|XPG_NORM_CODESET|XPG_MODIFIER)\n+\n+\n+struct loaded_l10nfile\n+{\n+  const char *filename;\n+  int decided;\n+\n+  const void *data;\n+\n+  struct loaded_l10nfile *next;\n+  struct loaded_l10nfile *successor[1];\n+};\n+\n+\n+extern const char *_nl_normalize_codeset PARAMS ((const char *codeset,\n+\t\t\t\t\t\t  size_t name_len));\n+\n+extern struct loaded_l10nfile *\n+_nl_make_l10nflist PARAMS ((struct loaded_l10nfile **l10nfile_list,\n+\t\t\t    const char *dirlist, size_t dirlist_len, int mask,\n+\t\t\t    const char *language, const char *territory,\n+\t\t\t    const char *codeset,\n+\t\t\t    const char *normalized_codeset,\n+\t\t\t    const char *modifier, const char *special,\n+\t\t\t    const char *sponsor, const char *revision,\n+\t\t\t    const char *filename, int do_allocate));\n+\n+\n+extern const char *_nl_expand_alias PARAMS ((const char *name));\n+\n+extern int _nl_explode_name PARAMS ((char *name, const char **language,\n+\t\t\t\t     const char **modifier,\n+\t\t\t\t     const char **territory,\n+\t\t\t\t     const char **codeset,\n+\t\t\t\t     const char **normalized_codeset,\n+\t\t\t\t     const char **special,\n+\t\t\t\t     const char **sponsor,\n+\t\t\t\t     const char **revision));"}, {"sha": "4b98ec80671a34997f0f818220c50d5ab5c2cdab", "filename": "texinfo/intl/loadmsgcat.c", "status": "added", "additions": 199, "deletions": 0, "changes": 199, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Floadmsgcat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Floadmsgcat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Floadmsgcat.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,199 @@\n+/* loadmsgcat.c -- load needed message catalogs\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+\n+This program is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#include <fcntl.h>\n+#include <sys/types.h>\n+#include <sys/stat.h>\n+\n+#if defined STDC_HEADERS || defined _LIBC\n+# include <stdlib.h>\n+#endif\n+\n+#if defined HAVE_UNISTD_H || defined _LIBC\n+# include <unistd.h>\n+#endif\n+\n+#if (defined HAVE_MMAP && defined HAVE_MUNMAP) || defined _LIBC\n+# include <sys/mman.h>\n+#endif\n+\n+#include \"gettext.h\"\n+#include \"gettextP.h\"\n+\n+/* @@ end of prolog @@ */\n+\n+#ifdef _LIBC\n+/* Rename the non ANSI C functions.  This is required by the standard\n+   because some ANSI C functions will require linking with this object\n+   file and the name space must not be polluted.  */\n+# define fstat  __fstat\n+# define open   __open\n+# define close  __close\n+# define read   __read\n+# define mmap   __mmap\n+# define munmap __munmap\n+#endif\n+\n+/* We need a sign, whether a new catalog was loaded, which can be associated\n+   with all translations.  This is important if the translations are\n+   cached by one of GCC's features.  */\n+int _nl_msg_cat_cntr;\n+\n+\n+/* Load the message catalogs specified by FILENAME.  If it is no valid\n+   message catalog do nothing.  */\n+void\n+_nl_load_domain (domain_file)\n+     struct loaded_l10nfile *domain_file;\n+{\n+  int fd;\n+  struct stat st;\n+  struct mo_file_header *data = (struct mo_file_header *) -1;\n+#if (defined HAVE_MMAP && defined HAVE_MUNMAP && !defined DISALLOW_MMAP) \\\n+    || defined _LIBC\n+  int use_mmap = 0;\n+#endif\n+  struct loaded_domain *domain;\n+\n+  domain_file->decided = 1;\n+  domain_file->data = NULL;\n+\n+  /* If the record does not represent a valid locale the FILENAME\n+     might be NULL.  This can happen when according to the given\n+     specification the locale file name is different for XPG and CEN\n+     syntax.  */\n+  if (domain_file->filename == NULL)\n+    return;\n+\n+  /* Try to open the addressed file.  */\n+  fd = open (domain_file->filename, O_RDONLY);\n+  if (fd == -1)\n+    return;\n+\n+  /* We must know about the size of the file.  */\n+  if (fstat (fd, &st) != 0\n+      && st.st_size < (off_t) sizeof (struct mo_file_header))\n+    {\n+      /* Something went wrong.  */\n+      close (fd);\n+      return;\n+    }\n+\n+#if (defined HAVE_MMAP && defined HAVE_MUNMAP && !defined DISALLOW_MMAP) \\\n+    || defined _LIBC\n+  /* Now we are ready to load the file.  If mmap() is available we try\n+     this first.  If not available or it failed we try to load it.  */\n+  data = (struct mo_file_header *) mmap (NULL, st.st_size, PROT_READ,\n+\t\t\t\t\t MAP_PRIVATE, fd, 0);\n+\n+  if (data != (struct mo_file_header *) -1)\n+    {\n+      /* mmap() call was successful.  */\n+      close (fd);\n+      use_mmap = 1;\n+    }\n+#endif\n+\n+  /* If the data is not yet available (i.e. mmap'ed) we try to load\n+     it manually.  */\n+  if (data == (struct mo_file_header *) -1)\n+    {\n+      off_t to_read;\n+      char *read_ptr;\n+\n+      data = (struct mo_file_header *) malloc (st.st_size);\n+      if (data == NULL)\n+\treturn;\n+\n+      to_read = st.st_size;\n+      read_ptr = (char *) data;\n+      do\n+\t{\n+\t  long int nb = (long int) read (fd, read_ptr, to_read);\n+\t  if (nb == -1)\n+\t    {\n+\t      close (fd);\n+\t      return;\n+\t    }\n+\n+\t  read_ptr += nb;\n+\t  to_read -= nb;\n+\t}\n+      while (to_read > 0);\n+\n+      close (fd);\n+    }\n+\n+  /* Using the magic number we can test whether it really is a message\n+     catalog file.  */\n+  if (data->magic != _MAGIC && data->magic != _MAGIC_SWAPPED)\n+    {\n+      /* The magic number is wrong: not a message catalog file.  */\n+#if (defined HAVE_MMAP && defined HAVE_MUNMAP && !defined DISALLOW_MMAP) \\\n+    || defined _LIBC\n+      if (use_mmap)\n+\tmunmap ((caddr_t) data, st.st_size);\n+      else\n+#endif\n+\tfree (data);\n+      return;\n+    }\n+\n+  domain_file->data\n+    = (struct loaded_domain *) malloc (sizeof (struct loaded_domain));\n+  if (domain_file->data == NULL)\n+    return;\n+\n+  domain = (struct loaded_domain *) domain_file->data;\n+  domain->data = (char *) data;\n+  domain->must_swap = data->magic != _MAGIC;\n+\n+  /* Fill in the information about the available tables.  */\n+  switch (W (domain->must_swap, data->revision))\n+    {\n+    case 0:\n+      domain->nstrings = W (domain->must_swap, data->nstrings);\n+      domain->orig_tab = (struct string_desc *)\n+\t((char *) data + W (domain->must_swap, data->orig_tab_offset));\n+      domain->trans_tab = (struct string_desc *)\n+\t((char *) data + W (domain->must_swap, data->trans_tab_offset));\n+      domain->hash_size = W (domain->must_swap, data->hash_tab_size);\n+      domain->hash_tab = (nls_uint32 *)\n+\t((char *) data + W (domain->must_swap, data->hash_tab_offset));\n+      break;\n+    default:\n+      /* This is an illegal revision.  */\n+#if (defined HAVE_MMAP && defined HAVE_MUNMAP && !defined DISALLOW_MMAP) \\\n+    || defined _LIBC\n+      if (use_mmap)\n+\tmunmap ((caddr_t) data, st.st_size);\n+      else\n+#endif\n+\tfree (data);\n+      free (domain);\n+      domain_file->data = NULL;\n+      return;\n+    }\n+\n+  /* Show that one domain is changed.  This might make some cached\n+     translations invalid.  */\n+  ++_nl_msg_cat_cntr;\n+}"}, {"sha": "a869acf6a6c881f67af09ee7f2329a07b1405b0f", "filename": "texinfo/intl/localealias.c", "status": "added", "additions": 376, "deletions": 0, "changes": 376, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Flocalealias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Flocalealias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Flocalealias.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,376 @@\n+/* localealias.c -- handle aliases for locale names\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Written by Ulrich Drepper <drepper@gnu.ai.mit.edu>, 1995.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software Foundation,\n+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#include <ctype.h>\n+#include <stdio.h>\n+#include <sys/types.h>\n+\n+#ifdef __GNUC__\n+# define alloca __builtin_alloca\n+# define HAVE_ALLOCA 1\n+#else\n+# if defined HAVE_ALLOCA_H || defined _LIBC\n+#  include <alloca.h>\n+# else\n+#  ifdef _AIX\n+ #pragma alloca\n+#  else\n+#   ifndef alloca\n+char *alloca ();\n+#   endif\n+#  endif\n+# endif\n+#endif\n+\n+#if defined STDC_HEADERS || defined _LIBC\n+# include <stdlib.h>\n+#else\n+char *getenv ();\n+# ifdef HAVE_MALLOC_H\n+#  include <malloc.h>\n+# else\n+void free ();\n+# endif\n+#endif\n+\n+#if defined HAVE_STRING_H || defined _LIBC\n+# ifndef _GNU_SOURCE\n+#  define _GNU_SOURCE\t1\n+# endif\n+# include <string.h>\n+#else\n+# include <strings.h>\n+# ifndef strchr\n+#  define strchr index\n+# endif\n+# ifndef memcpy\n+#  define memcpy(Dst, Src, Num) bcopy ((Src), (Dst), (Num))\n+# endif\n+#endif\n+\n+#include \"gettext.h\"\n+#include \"gettextP.h\"\n+\n+/* @@ end of prolog @@ */\n+\n+#ifdef _LIBC\n+/* Rename the non ANSI C functions.  This is required by the standard\n+   because some ANSI C functions will require linking with this object\n+   file and the name space must not be polluted.  */\n+# define strcasecmp __strcasecmp\n+#endif\n+\n+\n+/* For those loosing systems which don't have `alloca' we have to add\n+   some additional code emulating it.  */\n+#ifdef HAVE_ALLOCA\n+/* Nothing has to be done.  */\n+# define ADD_BLOCK(list, address) /* nothing */\n+# define FREE_BLOCKS(list) /* nothing */\n+#else\n+struct block_list\n+{\n+  void *address;\n+  struct block_list *next;\n+};\n+# define ADD_BLOCK(list, addr)\t\t\t\t\t\t      \\\n+  do {\t\t\t\t\t\t\t\t\t      \\\n+    struct block_list *newp = (struct block_list *) malloc (sizeof (*newp));  \\\n+    /* If we cannot get a free block we cannot add the new element to\t      \\\n+       the list.  */\t\t\t\t\t\t\t      \\\n+    if (newp != NULL) {\t\t\t\t\t\t\t      \\\n+      newp->address = (addr);\t\t\t\t\t\t      \\\n+      newp->next = (list);\t\t\t\t\t\t      \\\n+      (list) = newp;\t\t\t\t\t\t\t      \\\n+    }\t\t\t\t\t\t\t\t\t      \\\n+  } while (0)\n+# define FREE_BLOCKS(list)\t\t\t\t\t\t      \\\n+  do {\t\t\t\t\t\t\t\t\t      \\\n+    while (list != NULL) {\t\t\t\t\t\t      \\\n+      struct block_list *old = list;\t\t\t\t\t      \\\n+      list = list->next;\t\t\t\t\t\t      \\\n+      free (old);\t\t\t\t\t\t\t      \\\n+    }\t\t\t\t\t\t\t\t\t      \\\n+  } while (0)\n+# undef alloca\n+# define alloca(size) (malloc (size))\n+#endif\t/* have alloca */\n+\n+\n+struct alias_map\n+{\n+  const char *alias;\n+  const char *value;\n+};\n+\n+\n+static struct alias_map *map;\n+static size_t nmap = 0;\n+static size_t maxmap = 0;\n+\n+\n+/* Prototypes for local functions.  */\n+static size_t read_alias_file PARAMS ((const char *fname, int fname_len));\n+static void extend_alias_table PARAMS ((void));\n+static int alias_compare PARAMS ((const struct alias_map *map1,\n+\t\t\t\t  const struct alias_map *map2));\n+\n+\n+const char *\n+_nl_expand_alias (name)\n+    const char *name;\n+{\n+  static const char *locale_alias_path = LOCALE_ALIAS_PATH;\n+  struct alias_map *retval;\n+  size_t added;\n+\n+  do\n+    {\n+      struct alias_map item;\n+\n+      item.alias = name;\n+\n+      if (nmap > 0)\n+\tretval = (struct alias_map *) bsearch (&item, map, nmap,\n+\t\t\t\t\t       sizeof (struct alias_map),\n+\t\t\t\t\t       (int (*) PARAMS ((const void *,\n+\t\t\t\t\t\t\t\t const void *))\n+\t\t\t\t\t\t) alias_compare);\n+      else\n+\tretval = NULL;\n+\n+      /* We really found an alias.  Return the value.  */\n+      if (retval != NULL)\n+\treturn retval->value;\n+\n+      /* Perhaps we can find another alias file.  */\n+      added = 0;\n+      while (added == 0 && locale_alias_path[0] != '\\0')\n+\t{\n+\t  const char *start;\n+\n+\t  while (locale_alias_path[0] == ':')\n+\t    ++locale_alias_path;\n+\t  start = locale_alias_path;\n+\n+\t  while (locale_alias_path[0] != '\\0' && locale_alias_path[0] != ':')\n+\t    ++locale_alias_path;\n+\n+\t  if (start < locale_alias_path)\n+\t    added = read_alias_file (start, locale_alias_path - start);\n+\t}\n+    }\n+  while (added != 0);\n+\n+  return NULL;\n+}\n+\n+\n+static size_t\n+read_alias_file (fname, fname_len)\n+     const char *fname;\n+     int fname_len;\n+{\n+#ifndef HAVE_ALLOCA\n+  struct block_list *block_list = NULL;\n+#endif\n+  FILE *fp;\n+  char *full_fname;\n+  size_t added;\n+  static const char aliasfile[] = \"/locale.alias\";\n+\n+  full_fname = (char *) alloca (fname_len + sizeof aliasfile);\n+  ADD_BLOCK (block_list, full_fname);\n+  memcpy (full_fname, fname, fname_len);\n+  memcpy (&full_fname[fname_len], aliasfile, sizeof aliasfile);\n+\n+  fp = fopen (full_fname, \"r\");\n+  if (fp == NULL)\n+    {\n+      FREE_BLOCKS (block_list);\n+      return 0;\n+    }\n+\n+  added = 0;\n+  while (!feof (fp))\n+    {\n+      /* It is a reasonable approach to use a fix buffer here because\n+\t a) we are only interested in the first two fields\n+\t b) these fields must be usable as file names and so must not\n+\t    be that long\n+       */\n+      char buf[BUFSIZ];\n+      char *alias;\n+      char *value;\n+      char *cp;\n+\n+      if (fgets (buf, BUFSIZ, fp) == NULL)\n+\t/* EOF reached.  */\n+\tbreak;\n+\n+      cp = buf;\n+      /* Ignore leading white space.  */\n+      while (isspace (cp[0]))\n+\t++cp;\n+\n+      /* A leading '#' signals a comment line.  */\n+      if (cp[0] != '\\0' && cp[0] != '#')\n+\t{\n+\t  alias = cp++;\n+\t  while (cp[0] != '\\0' && !isspace (cp[0]))\n+\t    ++cp;\n+\t  /* Terminate alias name.  */\n+\t  if (cp[0] != '\\0')\n+\t    *cp++ = '\\0';\n+\n+\t  /* Now look for the beginning of the value.  */\n+\t  while (isspace (cp[0]))\n+\t    ++cp;\n+\n+\t  if (cp[0] != '\\0')\n+\t    {\n+\t      char *tp;\n+\t      size_t len;\n+\n+\t      value = cp++;\n+\t      while (cp[0] != '\\0' && !isspace (cp[0]))\n+\t\t++cp;\n+\t      /* Terminate value.  */\n+\t      if (cp[0] == '\\n')\n+\t\t{\n+\t\t  /* This has to be done to make the following test\n+\t\t     for the end of line possible.  We are looking for\n+\t\t     the terminating '\\n' which do not overwrite here.  */\n+\t\t  *cp++ = '\\0';\n+\t\t  *cp = '\\n';\n+\t\t}\n+\t      else if (cp[0] != '\\0')\n+\t\t*cp++ = '\\0';\n+\n+\t      if (nmap >= maxmap)\n+\t\textend_alias_table ();\n+\n+\t      /* We cannot depend on strdup available in the libc.  Sigh!  */\n+\t      len = strlen (alias) + 1;\n+\t      tp = (char *) malloc (len);\n+\t      if (tp == NULL)\n+\t\t{\n+\t\t  FREE_BLOCKS (block_list);\n+\t\t  return added;\n+\t\t}\n+\t      memcpy (tp, alias, len);\n+\t      map[nmap].alias = tp;\n+\n+\t      len = strlen (value) + 1;\n+\t      tp = (char *) malloc (len);\n+\t      if (tp == NULL)\n+\t\t{\n+\t\t  FREE_BLOCKS (block_list);\n+\t\t  return added;\n+\t\t}\n+\t      memcpy (tp, value, len);\n+\t      map[nmap].value = tp;\n+\n+\t      ++nmap;\n+\t      ++added;\n+\t    }\n+\t}\n+\n+      /* Possibily not the whole line fitted into the buffer.  Ignore\n+\t the rest of the line.  */\n+      while (strchr (cp, '\\n') == NULL)\n+\t{\n+\t  cp = buf;\n+\t  if (fgets (buf, BUFSIZ, fp) == NULL)\n+\t    /* Make sure the inner loop will be left.  The outer loop\n+\t       will exit at the `feof' test.  */\n+\t    *cp = '\\n';\n+\t}\n+    }\n+\n+  /* Should we test for ferror()?  I think we have to silently ignore\n+     errors.  --drepper  */\n+  fclose (fp);\n+\n+  if (added > 0)\n+    qsort (map, nmap, sizeof (struct alias_map),\n+\t   (int (*) PARAMS ((const void *, const void *))) alias_compare);\n+\n+  FREE_BLOCKS (block_list);\n+  return added;\n+}\n+\n+\n+static void\n+extend_alias_table ()\n+{\n+  size_t new_size;\n+  struct alias_map *new_map;\n+\n+  new_size = maxmap == 0 ? 100 : 2 * maxmap;\n+  new_map = (struct alias_map *) malloc (new_size\n+\t\t\t\t\t * sizeof (struct alias_map));\n+  if (new_map == NULL)\n+    /* Simply don't extend: we don't have any more core.  */\n+    return;\n+\n+  memcpy (new_map, map, nmap * sizeof (struct alias_map));\n+\n+  if (maxmap != 0)\n+    free (map);\n+\n+  map = new_map;\n+  maxmap = new_size;\n+}\n+\n+\n+static int\n+alias_compare (map1, map2)\n+     const struct alias_map *map1;\n+     const struct alias_map *map2;\n+{\n+#if defined _LIBC || defined HAVE_STRCASECMP\n+  return strcasecmp (map1->alias, map2->alias);\n+#else\n+  const unsigned char *p1 = (const unsigned char *) map1->alias;\n+  const unsigned char *p2 = (const unsigned char *) map2->alias;\n+  unsigned char c1, c2;\n+\n+  if (p1 == p2)\n+    return 0;\n+\n+  do\n+    {\n+      /* I know this seems to be odd but the tolower() function in\n+\t some systems libc cannot handle nonalpha characters.  */\n+      c1 = isupper (*p1) ? tolower (*p1) : *p1;\n+      c2 = isupper (*p2) ? tolower (*p2) : *p2;\n+      if (c1 == '\\0')\n+\tbreak;\n+      ++p1;\n+      ++p2;\n+    }\n+  while (c1 == c2);\n+\n+  return c1 - c2;\n+#endif\n+}"}, {"sha": "b3bcca4d73023d53fc94fd01a6ac2aae7f01faf4", "filename": "texinfo/intl/po2tbl.sed.in", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fpo2tbl.sed.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fpo2tbl.sed.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Fpo2tbl.sed.in?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,102 @@\n+# po2tbl.sed - Convert Uniforum style .po file to lookup table for catgets\n+# Copyright (C) 1995 Free Software Foundation, Inc.\n+# Ulrich Drepper <drepper@gnu.ai.mit.edu>, 1995.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+#\n+1 {\n+  i\\\n+/* Automatically generated by po2tbl.sed from @PACKAGE NAME@.pot.  */\\\n+\\\n+#if HAVE_CONFIG_H\\\n+# include <config.h>\\\n+#endif\\\n+\\\n+#include \"libgettext.h\"\\\n+\\\n+const struct _msg_ent _msg_tbl[] = {\n+  h\n+  s/.*/0/\n+  x\n+}\n+#\n+# Write msgid entries in C array form.\n+#\n+/^msgid/ {\n+  s/msgid[ \t]*\\(\".*\"\\)/  {\\1/\n+  tb\n+# Append the next line\n+  :b\n+  N\n+# Look whether second part is continuation line.\n+  s/\\(.*\\)\"\\(\\n\\)\"\\(.*\"\\)/\\1\\2\\3/\n+# Yes, then branch.\n+  ta\n+# Because we assume that the input file correctly formed the line\n+# just read cannot be again be a msgid line.  So it's safe to ignore\n+# it.\n+  s/\\(.*\\)\\n.*/\\1/\n+  bc\n+# We found a continuation line.  But before printing insert '\\'.\n+  :a\n+  s/\\(.*\\)\\(\\n.*\\)/\\1\\\\\\2/\n+  P\n+# We cannot use D here.\n+  s/.*\\n\\(.*\\)/\\1/\n+# Some buggy seds do not clear the `successful substitution since last ``t'''\n+# flag on `N', so we do a `t' here to clear it.\n+  tb\n+# Not reached\n+  :c\n+  x\n+# The following nice solution is by\n+# Bruno <Haible@ma2s2.mathematik.uni-karlsruhe.de>\n+  td\n+# Increment a decimal number in pattern space.\n+# First hide trailing `9' digits.\n+  :d\n+  s/9\\(_*\\)$/_\\1/\n+  td\n+# Assure at least one digit is available.\n+  s/^\\(_*\\)$/0\\1/\n+# Increment the last digit.\n+  s/8\\(_*\\)$/9\\1/\n+  s/7\\(_*\\)$/8\\1/\n+  s/6\\(_*\\)$/7\\1/\n+  s/5\\(_*\\)$/6\\1/\n+  s/4\\(_*\\)$/5\\1/\n+  s/3\\(_*\\)$/4\\1/\n+  s/2\\(_*\\)$/3\\1/\n+  s/1\\(_*\\)$/2\\1/\n+  s/0\\(_*\\)$/1\\1/\n+# Convert the hidden `9' digits to `0's.\n+  s/_/0/g\n+  x\n+  G\n+  s/\\(.*\\)\\n\\([0-9]*\\)/\\1, \\2},/\n+  s/\\(.*\\)\"$/\\1/\n+  p\n+}\n+#\n+# Last line.\n+#\n+$ {\n+  i\\\n+};\\\n+\n+  g\n+  s/0*\\(.*\\)/int _msg_tbl_length = \\1;/p\n+}\n+d"}, {"sha": "09530b8f75ba20106934ab40f503719be9ee0dfd", "filename": "texinfo/intl/textdomain.c", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Ftextdomain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Ftextdomain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Ftextdomain.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,101 @@\n+/* textdomain.c -- implementation of the textdomain(3) function\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Written by Ulrich Drepper <drepper@gnu.ai.mit.edu>, 1995.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software Foundation,\n+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#if defined STDC_HEADERS || defined _LIBC\n+# include <stdlib.h>\n+#endif\n+\n+#if defined STDC_HEADERS || defined HAVE_STRING_H || defined _LIBC\n+# include <string.h>\n+#else\n+# include <strings.h>\n+# ifndef memcpy\n+#  define memcpy(Dst, Src, Num) bcopy ((Src), (Dst), (Num))\n+# endif\n+#endif\n+\n+#ifdef _LIBC\n+# include <libintl.h>\n+#else\n+# include \"libgettext.h\"\n+#endif\n+\n+/* @@ end of prolog @@ */\n+\n+/* Name of the default text domain.  */\n+extern const char _nl_default_default_domain[];\n+\n+/* Default text domain in which entries for gettext(3) are to be found.  */\n+extern const char *_nl_current_default_domain;\n+\n+\n+/* Names for the libintl functions are a problem.  They must not clash\n+   with existing names and they should follow ANSI C.  But this source\n+   code is also used in GNU C Library where the names have a __\n+   prefix.  So we have to make a difference here.  */\n+#ifdef _LIBC\n+# define TEXTDOMAIN __textdomain\n+#else\n+# define TEXTDOMAIN textdomain__\n+#endif\n+\n+/* Set the current default message catalog to DOMAINNAME.\n+   If DOMAINNAME is null, return the current default.\n+   If DOMAINNAME is \"\", reset to the default of \"messages\".  */\n+char *\n+TEXTDOMAIN (domainname)\n+     const char *domainname;\n+{\n+  char *old;\n+\n+  /* A NULL pointer requests the current setting.  */\n+  if (domainname == NULL)\n+    return (char *) _nl_current_default_domain;\n+\n+  old = (char *) _nl_current_default_domain;\n+\n+  /* If domain name is the null string set to default domain \"messages\".  */\n+  if (domainname[0] == '\\0'\n+      || strcmp (domainname, _nl_default_default_domain) == 0)\n+    _nl_current_default_domain = _nl_default_default_domain;\n+  else\n+    {\n+      /* If the following malloc fails `_nl_current_default_domain'\n+\t will be NULL.  This value will be returned and so signals we\n+\t are out of core.  */\n+      size_t len = strlen (domainname) + 1;\n+      char *cp = (char *) malloc (len);\n+      if (cp != NULL)\n+\tmemcpy (cp, domainname, len);\n+      _nl_current_default_domain = cp;\n+    }\n+\n+  if (old != _nl_default_default_domain)\n+    free (old);\n+\n+  return (char *) _nl_current_default_domain;\n+}\n+\n+#ifdef _LIBC\n+/* Alias for function name in GNU C Library.  */\n+weak_alias (__textdomain, textdomain);\n+#endif"}, {"sha": "b19c0bbd0ec11b47bd1758af997c2dc3bfcca995", "filename": "texinfo/intl/xopen-msg.sed", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fxopen-msg.sed", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fintl%2Fxopen-msg.sed", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fintl%2Fxopen-msg.sed?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,104 @@\n+# po2msg.sed - Convert Uniforum style .po file to X/Open style .msg file\n+# Copyright (C) 1995 Free Software Foundation, Inc.\n+# Ulrich Drepper <drepper@gnu.ai.mit.edu>, 1995.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+#\n+#\n+# The first directive in the .msg should be the definition of the\n+# message set number.  We use always set number 1.\n+#\n+1 {\n+  i\\\n+$set 1 # Automatically created by po2msg.sed\n+  h\n+  s/.*/0/\n+  x\n+}\n+#\n+# We copy all comments into the .msg file.  Perhaps they can help.\n+#\n+/^#/ s/^#[ \t]*/$ /p\n+#\n+# We copy the original message as a comment into the .msg file.\n+#\n+/^msgid/ {\n+# Does not work now\n+#  /\"$/! {\n+#    s/\\\\$//\n+#    s/$/ ... (more lines following)\"/\n+#  }\n+  s/^msgid[ \t]*\"\\(.*\\)\"$/$ Original Message: \\1/\n+  p\n+}\n+#\n+# The .msg file contains, other then the .po file, only the translations\n+# but each given a unique ID.  Starting from 1 and incrementing by 1 for\n+# each message we assign them to the messages.\n+# It is important that the .po file used to generate the cat-id-tbl.c file\n+# (with po-to-tbl) is the same as the one used here.  (At least the order\n+# of declarations must not be changed.)\n+#\n+/^msgstr/ {\n+  s/msgstr[ \t]*\"\\(.*\\)\"/\\1/\n+  x\n+# The following nice solution is by\n+# Bruno <Haible@ma2s2.mathematik.uni-karlsruhe.de>\n+  td\n+# Increment a decimal number in pattern space.\n+# First hide trailing `9' digits.\n+  :d\n+  s/9\\(_*\\)$/_\\1/\n+  td\n+# Assure at least one digit is available.\n+  s/^\\(_*\\)$/0\\1/\n+# Increment the last digit.\n+  s/8\\(_*\\)$/9\\1/\n+  s/7\\(_*\\)$/8\\1/\n+  s/6\\(_*\\)$/7\\1/\n+  s/5\\(_*\\)$/6\\1/\n+  s/4\\(_*\\)$/5\\1/\n+  s/3\\(_*\\)$/4\\1/\n+  s/2\\(_*\\)$/3\\1/\n+  s/1\\(_*\\)$/2\\1/\n+  s/0\\(_*\\)$/1\\1/\n+# Convert the hidden `9' digits to `0's.\n+  s/_/0/g\n+  x\n+# Bring the line in the format `<number> <message>'\n+  G\n+  s/^[^\\n]*$/& /\n+  s/\\(.*\\)\\n\\([0-9]*\\)/\\2 \\1/\n+# Clear flag from last substitution.\n+  tb\n+# Append the next line.\n+  :b\n+  N\n+# Look whether second part is a continuation line.\n+  s/\\(.*\\n\\)\"\\(.*\\)\"/\\1\\2/\n+# Yes, then branch.\n+  ta\n+  P\n+  D\n+# Note that `D' includes a jump to the start!!\n+# We found a continuation line.  But before printing insert '\\'.\n+  :a\n+  s/\\(.*\\)\\(\\n.*\\)/\\1\\\\\\2/\n+  P\n+# We cannot use the sed command `D' here\n+  s/.*\\n\\(.*\\)/\\1/\n+  tb\n+}\n+d"}, {"sha": "723912c5734f8966113ef66ecf092430a7da82fe", "filename": "texinfo/lib/Makefile.am", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2FMakefile.am?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,15 @@\n+## Makefile.am for texinfo/lib.\n+## $Id: Makefile.am,v 1.1 1998/03/23 04:43:06 law Exp $\n+## Run automake in .. to produce Makefile.in from this.\n+\n+noinst_LIBRARIES = libtxi.a\n+INCLUDES = -I../intl\n+\n+# Don't need to list alloca.c, etc., Automake includes them.\n+libtxi_a_SOURCES = getopt.c getopt.h getopt1.c system.h xmalloc.c xstrdup.c\n+libtxi_a_LIBADD = @LIBOBJS@ @ALLOCA@\n+libtxi_a_DEPENDENCIES = $(libtxi_a_LIBADD)\n+\n+## xx configure for bzero?, clib, other common stuff\n+\n+EXTRA_DIST = README"}, {"sha": "fe16e628500e21ddc9e2441d31377e4d28dbddbd", "filename": "texinfo/lib/Makefile.in", "status": "added", "additions": 253, "deletions": 0, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2FMakefile.in?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,253 @@\n+# Makefile.in generated automatically by automake 1.2 from Makefile.am\n+\n+# Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy, distribute and modify it.\n+\n+\n+SHELL = /bin/sh\n+\n+srcdir = @srcdir@\n+top_srcdir = @top_srcdir@\n+VPATH = @srcdir@\n+prefix = @prefix@\n+exec_prefix = @exec_prefix@\n+\n+bindir = @bindir@\n+sbindir = @sbindir@\n+libexecdir = @libexecdir@\n+datadir = @datadir@\n+sysconfdir = @sysconfdir@\n+sharedstatedir = @sharedstatedir@\n+localstatedir = @localstatedir@\n+libdir = @libdir@\n+infodir = @infodir@\n+mandir = @mandir@\n+includedir = @includedir@\n+oldincludedir = /usr/include\n+\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+\n+top_builddir = ..\n+\n+ACLOCAL = @ACLOCAL@\n+AUTOCONF = @AUTOCONF@\n+AUTOMAKE = @AUTOMAKE@\n+AUTOHEADER = @AUTOHEADER@\n+\n+INSTALL = @INSTALL@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+transform = @program_transform_name@\n+\n+NORMAL_INSTALL = true\n+PRE_INSTALL = true\n+POST_INSTALL = true\n+NORMAL_UNINSTALL = true\n+PRE_UNINSTALL = true\n+POST_UNINSTALL = true\n+CATALOGS = @CATALOGS@\n+CATOBJEXT = @CATOBJEXT@\n+CC = @CC@\n+DATADIRNAME = @DATADIRNAME@\n+EXEEXT = @EXEEXT@\n+GENCAT = @GENCAT@\n+GMOFILES = @GMOFILES@\n+GMSGFMT = @GMSGFMT@\n+GT_NO = @GT_NO@\n+GT_YES = @GT_YES@\n+INSTOBJEXT = @INSTOBJEXT@\n+INTLDEPS = @INTLDEPS@\n+INTLLIBS = @INTLLIBS@\n+INTLOBJS = @INTLOBJS@\n+MAINT = @MAINT@\n+MAKEINFO = @MAKEINFO@\n+MKINSTALLDIRS = @MKINSTALLDIRS@\n+MSGFMT = @MSGFMT@\n+PACKAGE = @PACKAGE@\n+POFILES = @POFILES@\n+POSUB = @POSUB@\n+RANLIB = @RANLIB@\n+TERMLIBS = @TERMLIBS@\n+TEXCONFIG = @TEXCONFIG@\n+TEXMF = @TEXMF@\n+USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@\n+USE_NLS = @USE_NLS@\n+VERSION = @VERSION@\n+l = @l@\n+\n+noinst_LIBRARIES = libtxi.a\n+INCLUDES = -I../intl\n+\n+# Don't need to list alloca.c, etc., Automake includes them.\n+libtxi_a_SOURCES = getopt.c getopt.h getopt1.c system.h xmalloc.c xstrdup.c\n+libtxi_a_LIBADD = @LIBOBJS@ @ALLOCA@\n+libtxi_a_DEPENDENCIES = $(libtxi_a_LIBADD)\n+\n+EXTRA_DIST = README\n+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs\n+CONFIG_HEADER = ../config.h\n+CONFIG_CLEAN_FILES = \n+LIBRARIES =  $(noinst_LIBRARIES)\n+\n+\n+DEFS = @DEFS@ -I. -I$(srcdir) -I..\n+CPPFLAGS = @CPPFLAGS@\n+LDFLAGS = @LDFLAGS@\n+LIBS = @LIBS@\n+libtxi_a_OBJECTS =  getopt.o getopt1.o xmalloc.o xstrdup.o\n+AR = ar\n+CFLAGS = @CFLAGS@\n+COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)\n+LINK = $(CC) $(CFLAGS) $(LDFLAGS) -o $@\n+DIST_COMMON =  README Makefile.am Makefile.in alloca.c memcpy.c \\\n+memmove.c strdup.c strerror.c\n+\n+\n+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n+\n+TAR = tar\n+GZIP = --best\n+SOURCES = $(libtxi_a_SOURCES)\n+OBJECTS = $(libtxi_a_OBJECTS)\n+\n+default: all\n+\n+.SUFFIXES:\n+.SUFFIXES: .c .o\n+$(srcdir)/Makefile.in: @MAINT@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) \n+\tcd $(top_srcdir) && $(AUTOMAKE) --cygnus lib/Makefile\n+\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\tcd $(top_builddir) \\\n+\t  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status\n+\n+\n+mostlyclean-noinstLIBRARIES:\n+\n+clean-noinstLIBRARIES:\n+\ttest -z \"$(noinst_LIBRARIES)\" || rm -f $(noinst_LIBRARIES)\n+\n+distclean-noinstLIBRARIES:\n+\n+maintainer-clean-noinstLIBRARIES:\n+\n+.c.o:\n+\t$(COMPILE) -c $<\n+\n+mostlyclean-compile:\n+\trm -f *.o core\n+\n+clean-compile:\n+\n+distclean-compile:\n+\trm -f *.tab.c\n+\n+maintainer-clean-compile:\n+\n+libtxi.a: $(libtxi_a_OBJECTS) $(libtxi_a_DEPENDENCIES)\n+\trm -f libtxi.a\n+\t$(AR) cru libtxi.a $(libtxi_a_OBJECTS) $(libtxi_a_LIBADD)\n+\t$(RANLIB) libtxi.a\n+\n+tags: TAGS\n+\n+ID: $(HEADERS) $(SOURCES)\n+\there=`pwd` && cd $(srcdir) && mkid -f$$here/ID $(SOURCES) $(HEADERS)\n+\n+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES)\n+\ttags=; \\\n+\there=`pwd`; \\\n+\ttest -z \"$(ETAGS_ARGS)$(SOURCES)$(HEADERS)$$tags\" \\\n+\t  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $(SOURCES) $(HEADERS) -o $$here/TAGS)\n+\n+mostlyclean-tags:\n+\n+clean-tags:\n+\n+distclean-tags:\n+\trm -f TAGS ID\n+\n+maintainer-clean-tags:\n+\n+distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)\n+\n+subdir = lib\n+\n+distdir: $(DISTFILES)\n+\t@for file in $(DISTFILES); do \\\n+\t  if test -f $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  test -f $(distdir)/$$file \\\n+\t  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n+\t  || cp -p $$d/$$file $(distdir)/$$file; \\\n+\tdone\n+info:\n+dvi:\n+check: all\n+\t$(MAKE)\n+installcheck:\n+install-info:\n+install-exec: \n+\t@$(NORMAL_INSTALL)\n+\n+install-data: \n+\t@$(NORMAL_INSTALL)\n+\n+install: install-exec install-data all\n+\t@:\n+\n+uninstall: \n+\n+all: Makefile $(LIBRARIES)\n+\n+install-strip:\n+\t$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' INSTALL_SCRIPT='$(INSTALL_PROGRAM)' install\n+installdirs:\n+\n+\n+mostlyclean-generic:\n+\ttest -z \"$(MOSTLYCLEANFILES)\" || rm -f $(MOSTLYCLEANFILES)\n+\n+clean-generic:\n+\ttest -z \"$(CLEANFILES)\" || rm -f $(CLEANFILES)\n+\n+distclean-generic:\n+\trm -f Makefile $(DISTCLEANFILES)\n+\trm -f config.cache config.log stamp-h stamp-h[0-9]*\n+\ttest -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\n+maintainer-clean-generic:\n+\ttest -z \"$(MAINTAINERCLEANFILES)\" || rm -f $(MAINTAINERCLEANFILES)\n+\ttest -z \"$(BUILT_SOURCES)\" || rm -f $(BUILT_SOURCES)\n+mostlyclean:  mostlyclean-noinstLIBRARIES mostlyclean-compile \\\n+\t\tmostlyclean-tags mostlyclean-generic\n+\n+clean:  clean-noinstLIBRARIES clean-compile clean-tags clean-generic \\\n+\t\tmostlyclean\n+\n+distclean:  distclean-noinstLIBRARIES distclean-compile distclean-tags \\\n+\t\tdistclean-generic clean\n+\trm -f config.status\n+\n+maintainer-clean:  maintainer-clean-noinstLIBRARIES \\\n+\t\tmaintainer-clean-compile maintainer-clean-tags \\\n+\t\tmaintainer-clean-generic distclean\n+\t@echo \"This command is intended for maintainers to use;\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+\n+.PHONY: default mostlyclean-noinstLIBRARIES distclean-noinstLIBRARIES \\\n+clean-noinstLIBRARIES maintainer-clean-noinstLIBRARIES \\\n+mostlyclean-compile distclean-compile clean-compile \\\n+maintainer-clean-compile tags mostlyclean-tags distclean-tags \\\n+clean-tags maintainer-clean-tags distdir info dvi installcheck \\\n+install-info install-exec install-data install uninstall all \\\n+installdirs mostlyclean-generic distclean-generic clean-generic \\\n+maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n+\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "04ae4817aa9fb09dba227dab13937cc6f0529f0c", "filename": "texinfo/lib/README", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2FREADME?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,3 @@\n+Common routines to the Texinfo package.\n+Many are common to other GNU packages as well.\n+(On the FSF machines, check /gd/gnu/lib for the latest.)"}, {"sha": "8f98b73dbb90788101e7e83c2909ab60de28d719", "filename": "texinfo/lib/alloca.c", "status": "added", "additions": 504, "deletions": 0, "changes": 504, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Falloca.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Falloca.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2Falloca.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,504 @@\n+/* alloca.c -- allocate automatically reclaimed memory\n+   (Mostly) portable public-domain implementation -- D A Gwyn\n+\n+   This implementation of the PWB library alloca function,\n+   which is used to allocate space off the run-time stack so\n+   that it is automatically reclaimed upon procedure exit,\n+   was inspired by discussions with J. Q. Johnson of Cornell.\n+   J.Otto Tennant <jot@cray.com> contributed the Cray support.\n+\n+   There are some preprocessor constants that can\n+   be defined when compiling for your specific system, for\n+   improved efficiency; however, the defaults should be okay.\n+\n+   The general concept of this implementation is to keep\n+   track of all alloca-allocated blocks, and reclaim any\n+   that are found to be deeper in the stack than the current\n+   invocation.  This heuristic does not reclaim storage as\n+   soon as it becomes invalid, but it will do so eventually.\n+\n+   As a special case, alloca(0) reclaims storage without\n+   allocating any.  It is a good idea to use alloca(0) in\n+   your main control loop, etc. to force garbage collection.  */\n+\n+#ifdef HAVE_CONFIG_H\n+#include <config.h>\n+#endif\n+\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#endif\n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+\n+#ifdef emacs\n+#include \"blockinput.h\"\n+#endif\n+\n+/* If compiling with GCC 2, this file's not needed.  */\n+#if !defined (__GNUC__) || __GNUC__ < 2\n+\n+/* If someone has defined alloca as a macro,\n+   there must be some other way alloca is supposed to work.  */\n+#ifndef alloca\n+\n+#ifdef emacs\n+#ifdef static\n+/* actually, only want this if static is defined as \"\"\n+   -- this is for usg, in which emacs must undefine static\n+   in order to make unexec workable\n+   */\n+#ifndef STACK_DIRECTION\n+you\n+lose\n+-- must know STACK_DIRECTION at compile-time\n+#endif /* STACK_DIRECTION undefined */\n+#endif /* static */\n+#endif /* emacs */\n+\n+/* If your stack is a linked list of frames, you have to\n+   provide an \"address metric\" ADDRESS_FUNCTION macro.  */\n+\n+#if defined (CRAY) && defined (CRAY_STACKSEG_END)\n+long i00afunc ();\n+#define ADDRESS_FUNCTION(arg) (char *) i00afunc (&(arg))\n+#else\n+#define ADDRESS_FUNCTION(arg) &(arg)\n+#endif\n+\n+#if __STDC__\n+typedef void *pointer;\n+#else\n+typedef char *pointer;\n+#endif\n+\n+#ifndef NULL\n+#define\tNULL\t0\n+#endif\n+\n+/* Different portions of Emacs need to call different versions of\n+   malloc.  The Emacs executable needs alloca to call xmalloc, because\n+   ordinary malloc isn't protected from input signals.  On the other\n+   hand, the utilities in lib-src need alloca to call malloc; some of\n+   them are very simple, and don't have an xmalloc routine.\n+\n+   Non-Emacs programs expect this to call use xmalloc.\n+\n+   Callers below should use malloc.  */\n+\n+#ifndef emacs\n+#define malloc xmalloc\n+#endif\n+extern pointer malloc ();\n+\n+/* Define STACK_DIRECTION if you know the direction of stack\n+   growth for your system; otherwise it will be automatically\n+   deduced at run-time.\n+\n+   STACK_DIRECTION > 0 => grows toward higher addresses\n+   STACK_DIRECTION < 0 => grows toward lower addresses\n+   STACK_DIRECTION = 0 => direction of growth unknown  */\n+\n+#ifndef STACK_DIRECTION\n+#define\tSTACK_DIRECTION\t0\t/* Direction unknown.  */\n+#endif\n+\n+#if STACK_DIRECTION != 0\n+\n+#define\tSTACK_DIR\tSTACK_DIRECTION\t/* Known at compile-time.  */\n+\n+#else /* STACK_DIRECTION == 0; need run-time code.  */\n+\n+static int stack_dir;\t\t/* 1 or -1 once known.  */\n+#define\tSTACK_DIR\tstack_dir\n+\n+static void\n+find_stack_direction ()\n+{\n+  static char *addr = NULL;\t/* Address of first `dummy', once known.  */\n+  auto char dummy;\t\t/* To get stack address.  */\n+\n+  if (addr == NULL)\n+    {\t\t\t\t/* Initial entry.  */\n+      addr = ADDRESS_FUNCTION (dummy);\n+\n+      find_stack_direction ();\t/* Recurse once.  */\n+    }\n+  else\n+    {\n+      /* Second entry.  */\n+      if (ADDRESS_FUNCTION (dummy) > addr)\n+\tstack_dir = 1;\t\t/* Stack grew upward.  */\n+      else\n+\tstack_dir = -1;\t\t/* Stack grew downward.  */\n+    }\n+}\n+\n+#endif /* STACK_DIRECTION == 0 */\n+\n+/* An \"alloca header\" is used to:\n+   (a) chain together all alloca'ed blocks;\n+   (b) keep track of stack depth.\n+\n+   It is very important that sizeof(header) agree with malloc\n+   alignment chunk size.  The following default should work okay.  */\n+\n+#ifndef\tALIGN_SIZE\n+#define\tALIGN_SIZE\tsizeof(double)\n+#endif\n+\n+typedef union hdr\n+{\n+  char align[ALIGN_SIZE];\t/* To force sizeof(header).  */\n+  struct\n+    {\n+      union hdr *next;\t\t/* For chaining headers.  */\n+      char *deep;\t\t/* For stack depth measure.  */\n+    } h;\n+} header;\n+\n+static header *last_alloca_header = NULL;\t/* -> last alloca header.  */\n+\n+/* Return a pointer to at least SIZE bytes of storage,\n+   which will be automatically reclaimed upon exit from\n+   the procedure that called alloca.  Originally, this space\n+   was supposed to be taken from the current stack frame of the\n+   caller, but that method cannot be made to work for some\n+   implementations of C, for example under Gould's UTX/32.  */\n+\n+pointer\n+alloca (size)\n+     unsigned size;\n+{\n+  auto char probe;\t\t/* Probes stack depth: */\n+  register char *depth = ADDRESS_FUNCTION (probe);\n+\n+#if STACK_DIRECTION == 0\n+  if (STACK_DIR == 0)\t\t/* Unknown growth direction.  */\n+    find_stack_direction ();\n+#endif\n+\n+  /* Reclaim garbage, defined as all alloca'd storage that\n+     was allocated from deeper in the stack than currently.  */\n+\n+  {\n+    register header *hp;\t/* Traverses linked list.  */\n+\n+#ifdef emacs\n+    BLOCK_INPUT;\n+#endif\n+\n+    for (hp = last_alloca_header; hp != NULL;)\n+      if ((STACK_DIR > 0 && hp->h.deep > depth)\n+\t  || (STACK_DIR < 0 && hp->h.deep < depth))\n+\t{\n+\t  register header *np = hp->h.next;\n+\n+\t  free ((pointer) hp);\t/* Collect garbage.  */\n+\n+\t  hp = np;\t\t/* -> next header.  */\n+\t}\n+      else\n+\tbreak;\t\t\t/* Rest are not deeper.  */\n+\n+    last_alloca_header = hp;\t/* -> last valid storage.  */\n+\n+#ifdef emacs\n+    UNBLOCK_INPUT;\n+#endif\n+  }\n+\n+  if (size == 0)\n+    return NULL;\t\t/* No allocation required.  */\n+\n+  /* Allocate combined header + user data storage.  */\n+\n+  {\n+    register pointer new = malloc (sizeof (header) + size);\n+    /* Address of header.  */\n+\n+    if (new == 0)\n+      abort();\n+\n+    ((header *) new)->h.next = last_alloca_header;\n+    ((header *) new)->h.deep = depth;\n+\n+    last_alloca_header = (header *) new;\n+\n+    /* User storage begins just after header.  */\n+\n+    return (pointer) ((char *) new + sizeof (header));\n+  }\n+}\n+\n+#if defined (CRAY) && defined (CRAY_STACKSEG_END)\n+\n+#ifdef DEBUG_I00AFUNC\n+#include <stdio.h>\n+#endif\n+\n+#ifndef CRAY_STACK\n+#define CRAY_STACK\n+#ifndef CRAY2\n+/* Stack structures for CRAY-1, CRAY X-MP, and CRAY Y-MP */\n+struct stack_control_header\n+  {\n+    long shgrow:32;\t\t/* Number of times stack has grown.  */\n+    long shaseg:32;\t\t/* Size of increments to stack.  */\n+    long shhwm:32;\t\t/* High water mark of stack.  */\n+    long shsize:32;\t\t/* Current size of stack (all segments).  */\n+  };\n+\n+/* The stack segment linkage control information occurs at\n+   the high-address end of a stack segment.  (The stack\n+   grows from low addresses to high addresses.)  The initial\n+   part of the stack segment linkage control information is\n+   0200 (octal) words.  This provides for register storage\n+   for the routine which overflows the stack.  */\n+\n+struct stack_segment_linkage\n+  {\n+    long ss[0200];\t\t/* 0200 overflow words.  */\n+    long sssize:32;\t\t/* Number of words in this segment.  */\n+    long ssbase:32;\t\t/* Offset to stack base.  */\n+    long:32;\n+    long sspseg:32;\t\t/* Offset to linkage control of previous\n+\t\t\t\t   segment of stack.  */\n+    long:32;\n+    long sstcpt:32;\t\t/* Pointer to task common address block.  */\n+    long sscsnm;\t\t/* Private control structure number for\n+\t\t\t\t   microtasking.  */\n+    long ssusr1;\t\t/* Reserved for user.  */\n+    long ssusr2;\t\t/* Reserved for user.  */\n+    long sstpid;\t\t/* Process ID for pid based multi-tasking.  */\n+    long ssgvup;\t\t/* Pointer to multitasking thread giveup.  */\n+    long sscray[7];\t\t/* Reserved for Cray Research.  */\n+    long ssa0;\n+    long ssa1;\n+    long ssa2;\n+    long ssa3;\n+    long ssa4;\n+    long ssa5;\n+    long ssa6;\n+    long ssa7;\n+    long sss0;\n+    long sss1;\n+    long sss2;\n+    long sss3;\n+    long sss4;\n+    long sss5;\n+    long sss6;\n+    long sss7;\n+  };\n+\n+#else /* CRAY2 */\n+/* The following structure defines the vector of words\n+   returned by the STKSTAT library routine.  */\n+struct stk_stat\n+  {\n+    long now;\t\t\t/* Current total stack size.  */\n+    long maxc;\t\t\t/* Amount of contiguous space which would\n+\t\t\t\t   be required to satisfy the maximum\n+\t\t\t\t   stack demand to date.  */\n+    long high_water;\t\t/* Stack high-water mark.  */\n+    long overflows;\t\t/* Number of stack overflow ($STKOFEN) calls.  */\n+    long hits;\t\t\t/* Number of internal buffer hits.  */\n+    long extends;\t\t/* Number of block extensions.  */\n+    long stko_mallocs;\t\t/* Block allocations by $STKOFEN.  */\n+    long underflows;\t\t/* Number of stack underflow calls ($STKRETN).  */\n+    long stko_free;\t\t/* Number of deallocations by $STKRETN.  */\n+    long stkm_free;\t\t/* Number of deallocations by $STKMRET.  */\n+    long segments;\t\t/* Current number of stack segments.  */\n+    long maxs;\t\t\t/* Maximum number of stack segments so far.  */\n+    long pad_size;\t\t/* Stack pad size.  */\n+    long current_address;\t/* Current stack segment address.  */\n+    long current_size;\t\t/* Current stack segment size.  This\n+\t\t\t\t   number is actually corrupted by STKSTAT to\n+\t\t\t\t   include the fifteen word trailer area.  */\n+    long initial_address;\t/* Address of initial segment.  */\n+    long initial_size;\t\t/* Size of initial segment.  */\n+  };\n+\n+/* The following structure describes the data structure which trails\n+   any stack segment.  I think that the description in 'asdef' is\n+   out of date.  I only describe the parts that I am sure about.  */\n+\n+struct stk_trailer\n+  {\n+    long this_address;\t\t/* Address of this block.  */\n+    long this_size;\t\t/* Size of this block (does not include\n+\t\t\t\t   this trailer).  */\n+    long unknown2;\n+    long unknown3;\n+    long link;\t\t\t/* Address of trailer block of previous\n+\t\t\t\t   segment.  */\n+    long unknown5;\n+    long unknown6;\n+    long unknown7;\n+    long unknown8;\n+    long unknown9;\n+    long unknown10;\n+    long unknown11;\n+    long unknown12;\n+    long unknown13;\n+    long unknown14;\n+  };\n+\n+#endif /* CRAY2 */\n+#endif /* not CRAY_STACK */\n+\n+#ifdef CRAY2\n+/* Determine a \"stack measure\" for an arbitrary ADDRESS.\n+   I doubt that \"lint\" will like this much.  */\n+\n+static long\n+i00afunc (long *address)\n+{\n+  struct stk_stat status;\n+  struct stk_trailer *trailer;\n+  long *block, size;\n+  long result = 0;\n+\n+  /* We want to iterate through all of the segments.  The first\n+     step is to get the stack status structure.  We could do this\n+     more quickly and more directly, perhaps, by referencing the\n+     $LM00 common block, but I know that this works.  */\n+\n+  STKSTAT (&status);\n+\n+  /* Set up the iteration.  */\n+\n+  trailer = (struct stk_trailer *) (status.current_address\n+\t\t\t\t    + status.current_size\n+\t\t\t\t    - 15);\n+\n+  /* There must be at least one stack segment.  Therefore it is\n+     a fatal error if \"trailer\" is null.  */\n+\n+  if (trailer == 0)\n+    abort ();\n+\n+  /* Discard segments that do not contain our argument address.  */\n+\n+  while (trailer != 0)\n+    {\n+      block = (long *) trailer->this_address;\n+      size = trailer->this_size;\n+      if (block == 0 || size == 0)\n+\tabort ();\n+      trailer = (struct stk_trailer *) trailer->link;\n+      if ((block <= address) && (address < (block + size)))\n+\tbreak;\n+    }\n+\n+  /* Set the result to the offset in this segment and add the sizes\n+     of all predecessor segments.  */\n+\n+  result = address - block;\n+\n+  if (trailer == 0)\n+    {\n+      return result;\n+    }\n+\n+  do\n+    {\n+      if (trailer->this_size <= 0)\n+\tabort ();\n+      result += trailer->this_size;\n+      trailer = (struct stk_trailer *) trailer->link;\n+    }\n+  while (trailer != 0);\n+\n+  /* We are done.  Note that if you present a bogus address (one\n+     not in any segment), you will get a different number back, formed\n+     from subtracting the address of the first block.  This is probably\n+     not what you want.  */\n+\n+  return (result);\n+}\n+\n+#else /* not CRAY2 */\n+/* Stack address function for a CRAY-1, CRAY X-MP, or CRAY Y-MP.\n+   Determine the number of the cell within the stack,\n+   given the address of the cell.  The purpose of this\n+   routine is to linearize, in some sense, stack addresses\n+   for alloca.  */\n+\n+static long\n+i00afunc (long address)\n+{\n+  long stkl = 0;\n+\n+  long size, pseg, this_segment, stack;\n+  long result = 0;\n+\n+  struct stack_segment_linkage *ssptr;\n+\n+  /* Register B67 contains the address of the end of the\n+     current stack segment.  If you (as a subprogram) store\n+     your registers on the stack and find that you are past\n+     the contents of B67, you have overflowed the segment.\n+\n+     B67 also points to the stack segment linkage control\n+     area, which is what we are really interested in.  */\n+\n+  stkl = CRAY_STACKSEG_END ();\n+  ssptr = (struct stack_segment_linkage *) stkl;\n+\n+  /* If one subtracts 'size' from the end of the segment,\n+     one has the address of the first word of the segment.\n+\n+     If this is not the first segment, 'pseg' will be\n+     nonzero.  */\n+\n+  pseg = ssptr->sspseg;\n+  size = ssptr->sssize;\n+\n+  this_segment = stkl - size;\n+\n+  /* It is possible that calling this routine itself caused\n+     a stack overflow.  Discard stack segments which do not\n+     contain the target address.  */\n+\n+  while (!(this_segment <= address && address <= stkl))\n+    {\n+#ifdef DEBUG_I00AFUNC\n+      fprintf (stderr, \"%011o %011o %011o\\n\", this_segment, address, stkl);\n+#endif\n+      if (pseg == 0)\n+\tbreak;\n+      stkl = stkl - pseg;\n+      ssptr = (struct stack_segment_linkage *) stkl;\n+      size = ssptr->sssize;\n+      pseg = ssptr->sspseg;\n+      this_segment = stkl - size;\n+    }\n+\n+  result = address - this_segment;\n+\n+  /* If you subtract pseg from the current end of the stack,\n+     you get the address of the previous stack segment's end.\n+     This seems a little convoluted to me, but I'll bet you save\n+     a cycle somewhere.  */\n+\n+  while (pseg != 0)\n+    {\n+#ifdef DEBUG_I00AFUNC\n+      fprintf (stderr, \"%011o %011o\\n\", pseg, size);\n+#endif\n+      stkl = stkl - pseg;\n+      ssptr = (struct stack_segment_linkage *) stkl;\n+      size = ssptr->sssize;\n+      pseg = ssptr->sspseg;\n+      result += size;\n+    }\n+  return (result);\n+}\n+\n+#endif /* not CRAY2 */\n+#endif /* CRAY */\n+\n+#endif /* no alloca */\n+#endif /* not GCC version 2 */"}, {"sha": "300f86de3ebd98045ee611d537a84387df4c10fd", "filename": "texinfo/lib/getopt.c", "status": "added", "additions": 1053, "deletions": 0, "changes": 1053, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fgetopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fgetopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2Fgetopt.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,1053 @@\n+/* Getopt for GNU.\n+   NOTE: getopt is now part of the C library, so if you don't know what\n+   \"Keep this file name-space clean\" means, talk to roland@gnu.ai.mit.edu\n+   before changing it!\n+\n+   Copyright (C) 1987, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97\n+   \tFree Software Foundation, Inc.\n+\n+NOTE: The canonical source of this file is maintained with the GNU C Library.\n+Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n+\n+This program is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 2, or (at your option) any\n+later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+USA.  */\n+\f\n+/* This tells Alpha OSF/1 not to define a getopt prototype in <stdio.h>.\n+   Ditto for AIX 3.2 and <stdlib.h>.  */\n+#ifndef _NO_PROTO\n+#define _NO_PROTO\n+#endif\n+\n+#ifdef HAVE_CONFIG_H\n+#include <config.h>\n+#endif\n+\n+#if !defined (__STDC__) || !__STDC__\n+/* This is a separate conditional since some stdc systems\n+   reject `defined (const)'.  */\n+#ifndef const\n+#define const\n+#endif\n+#endif\n+\n+#include <stdio.h>\n+\n+/* Comment out all this code if we are using the GNU C Library, and are not\n+   actually compiling the library itself.  This code is part of the GNU C\n+   Library, but also included in many other GNU distributions.  Compiling\n+   and linking in this code is a waste when using the GNU C library\n+   (especially if it is a shared library).  Rather than having every GNU\n+   program understand `configure --with-gnu-libc' and omit the object files,\n+   it is simpler to just do this in the source for each such file.  */\n+\n+#define GETOPT_INTERFACE_VERSION 2\n+#if !defined (_LIBC) && defined (__GLIBC__) && __GLIBC__ >= 2\n+#include <gnu-versions.h>\n+#if _GNU_GETOPT_INTERFACE_VERSION == GETOPT_INTERFACE_VERSION\n+#define ELIDE_CODE\n+#endif\n+#endif\n+\n+#ifndef ELIDE_CODE\n+\n+\n+/* This needs to come after some library #include\n+   to get __GNU_LIBRARY__ defined.  */\n+#ifdef\t__GNU_LIBRARY__\n+/* Don't include stdlib.h for non-GNU C libraries because some of them\n+   contain conflicting prototypes for getopt.  */\n+#include <stdlib.h>\n+#include <unistd.h>\n+#endif\t/* GNU C library.  */\n+\n+#ifdef VMS\n+#include <unixlib.h>\n+#if HAVE_STRING_H - 0\n+#include <string.h>\n+#endif\n+#endif\n+\n+#if defined (WIN32) && !defined (__CYGWIN32__)\n+/* It's not Unix, really.  See?  Capital letters.  */\n+#include <windows.h>\n+#define getpid() GetCurrentProcessId()\n+#endif\n+\n+#ifndef _\n+/* This is for other GNU distributions with internationalized messages.\n+   When compiling libc, the _ macro is predefined.  */\n+#ifdef HAVE_LIBINTL_H\n+# include <libintl.h>\n+# define _(msgid)\tgettext (msgid)\n+#else\n+# define _(msgid)\t(msgid)\n+#endif\n+#endif\n+\n+/* This version of `getopt' appears to the caller like standard Unix `getopt'\n+   but it behaves differently for the user, since it allows the user\n+   to intersperse the options with the other arguments.\n+\n+   As `getopt' works, it permutes the elements of ARGV so that,\n+   when it is done, all the options precede everything else.  Thus\n+   all application programs are extended to handle flexible argument order.\n+\n+   Setting the environment variable POSIXLY_CORRECT disables permutation.\n+   Then the behavior is completely standard.\n+\n+   GNU application programs can use a third alternative mode in which\n+   they can distinguish the relative order of options and other arguments.  */\n+\n+#include \"getopt.h\"\n+\n+/* For communication from `getopt' to the caller.\n+   When `getopt' finds an option that takes an argument,\n+   the argument value is returned here.\n+   Also, when `ordering' is RETURN_IN_ORDER,\n+   each non-option ARGV-element is returned here.  */\n+\n+char *optarg = NULL;\n+\n+/* Index in ARGV of the next element to be scanned.\n+   This is used for communication to and from the caller\n+   and for communication between successive calls to `getopt'.\n+\n+   On entry to `getopt', zero means this is the first call; initialize.\n+\n+   When `getopt' returns -1, this is the index of the first of the\n+   non-option elements that the caller should itself scan.\n+\n+   Otherwise, `optind' communicates from one call to the next\n+   how much of ARGV has been scanned so far.  */\n+\n+/* 1003.2 says this must be 1 before any call.  */\n+int optind = 1;\n+\n+/* Formerly, initialization of getopt depended on optind==0, which\n+   causes problems with re-calling getopt as programs generally don't\n+   know that. */\n+\n+int __getopt_initialized = 0;\n+\n+/* The next char to be scanned in the option-element\n+   in which the last option character we returned was found.\n+   This allows us to pick up the scan where we left off.\n+\n+   If this is zero, or a null string, it means resume the scan\n+   by advancing to the next ARGV-element.  */\n+\n+static char *nextchar;\n+\n+/* Callers store zero here to inhibit the error message\n+   for unrecognized options.  */\n+\n+int opterr = 1;\n+\n+/* Set to an option character which was unrecognized.\n+   This must be initialized on some systems to avoid linking in the\n+   system's own getopt implementation.  */\n+\n+int optopt = '?';\n+\n+/* Describe how to deal with options that follow non-option ARGV-elements.\n+\n+   If the caller did not specify anything,\n+   the default is REQUIRE_ORDER if the environment variable\n+   POSIXLY_CORRECT is defined, PERMUTE otherwise.\n+\n+   REQUIRE_ORDER means don't recognize them as options;\n+   stop option processing when the first non-option is seen.\n+   This is what Unix does.\n+   This mode of operation is selected by either setting the environment\n+   variable POSIXLY_CORRECT, or using `+' as the first character\n+   of the list of option characters.\n+\n+   PERMUTE is the default.  We permute the contents of ARGV as we scan,\n+   so that eventually all the non-options are at the end.  This allows options\n+   to be given in any order, even with programs that were not written to\n+   expect this.\n+\n+   RETURN_IN_ORDER is an option available to programs that were written\n+   to expect options and other ARGV-elements in any order and that care about\n+   the ordering of the two.  We describe each non-option ARGV-element\n+   as if it were the argument of an option with character code 1.\n+   Using `-' as the first character of the list of option characters\n+   selects this mode of operation.\n+\n+   The special argument `--' forces an end of option-scanning regardless\n+   of the value of `ordering'.  In the case of RETURN_IN_ORDER, only\n+   `--' can cause `getopt' to return -1 with `optind' != ARGC.  */\n+\n+static enum\n+{\n+  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER\n+} ordering;\n+\n+/* Value of POSIXLY_CORRECT environment variable.  */\n+static char *posixly_correct;\n+\f\n+#ifdef\t__GNU_LIBRARY__\n+/* We want to avoid inclusion of string.h with non-GNU libraries\n+   because there are many ways it can cause trouble.\n+   On some systems, it contains special magic macros that don't work\n+   in GCC.  */\n+#include <string.h>\n+#define\tmy_index\tstrchr\n+#else\n+\n+/* Avoid depending on library functions or files\n+   whose names are inconsistent.  */\n+\n+char *getenv ();\n+\n+static char *\n+my_index (str, chr)\n+     const char *str;\n+     int chr;\n+{\n+  while (*str)\n+    {\n+      if (*str == chr)\n+\treturn (char *) str;\n+      str++;\n+    }\n+  return 0;\n+}\n+\n+/* If using GCC, we can safely declare strlen this way.\n+   If not using GCC, it is ok not to declare it.  */\n+#ifdef __GNUC__\n+/* Note that Motorola Delta 68k R3V7 comes with GCC but not stddef.h.\n+   That was relevant to code that was here before.  */\n+#if !defined (__STDC__) || !__STDC__\n+/* gcc with -traditional declares the built-in strlen to return int,\n+   and has done so at least since version 2.4.5. -- rms.  */\n+extern int strlen (const char *);\n+#endif /* not __STDC__ */\n+#endif /* __GNUC__ */\n+\n+#endif /* not __GNU_LIBRARY__ */\n+\f\n+/* Handle permutation of arguments.  */\n+\n+/* Describe the part of ARGV that contains non-options that have\n+   been skipped.  `first_nonopt' is the index in ARGV of the first of them;\n+   `last_nonopt' is the index after the last of them.  */\n+\n+static int first_nonopt;\n+static int last_nonopt;\n+\n+#ifdef _LIBC\n+/* Bash 2.0 gives us an environment variable containing flags\n+   indicating ARGV elements that should not be considered arguments.  */\n+\n+/* Defined in getopt_init.c  */\n+extern char *__getopt_nonoption_flags;\n+\n+static int nonoption_flags_max_len;\n+static int nonoption_flags_len;\n+\n+static int original_argc;\n+static char *const *original_argv;\n+\n+extern pid_t __libc_pid;\n+\n+/* Make sure the environment variable bash 2.0 puts in the environment\n+   is valid for the getopt call we must make sure that the ARGV passed\n+   to getopt is that one passed to the process.  */\n+static void\n+__attribute__ ((unused))\n+store_args_and_env (int argc, char *const *argv)\n+{\n+  /* XXX This is no good solution.  We should rather copy the args so\n+     that we can compare them later.  But we must not use malloc(3).  */\n+  original_argc = argc;\n+  original_argv = argv;\n+}\n+text_set_element (__libc_subinit, store_args_and_env);\n+\n+# define SWAP_FLAGS(ch1, ch2) \\\n+  if (nonoption_flags_len > 0)\t\t\t\t\t\t      \\\n+    {\t\t\t\t\t\t\t\t\t      \\\n+      char __tmp = __getopt_nonoption_flags[ch1];\t\t\t      \\\n+      __getopt_nonoption_flags[ch1] = __getopt_nonoption_flags[ch2];\t      \\\n+      __getopt_nonoption_flags[ch2] = __tmp;\t\t\t\t      \\\n+    }\n+#else\t/* !_LIBC */\n+# define SWAP_FLAGS(ch1, ch2)\n+#endif\t/* _LIBC */\n+\n+/* Exchange two adjacent subsequences of ARGV.\n+   One subsequence is elements [first_nonopt,last_nonopt)\n+   which contains all the non-options that have been skipped so far.\n+   The other is elements [last_nonopt,optind), which contains all\n+   the options processed since those non-options were skipped.\n+\n+   `first_nonopt' and `last_nonopt' are relocated so that they describe\n+   the new indices of the non-options in ARGV after they are moved.  */\n+\n+#if defined (__STDC__) && __STDC__\n+static void exchange (char **);\n+#endif\n+\n+static void\n+exchange (argv)\n+     char **argv;\n+{\n+  int bottom = first_nonopt;\n+  int middle = last_nonopt;\n+  int top = optind;\n+  char *tem;\n+\n+  /* Exchange the shorter segment with the far end of the longer segment.\n+     That puts the shorter segment into the right place.\n+     It leaves the longer segment in the right place overall,\n+     but it consists of two parts that need to be swapped next.  */\n+\n+#ifdef _LIBC\n+  /* First make sure the handling of the `__getopt_nonoption_flags'\n+     string can work normally.  Our top argument must be in the range\n+     of the string.  */\n+  if (nonoption_flags_len > 0 && top >= nonoption_flags_max_len)\n+    {\n+      /* We must extend the array.  The user plays games with us and\n+\t presents new arguments.  */\n+      char *new_str = malloc (top + 1);\n+      if (new_str == NULL)\n+\tnonoption_flags_len = nonoption_flags_max_len = 0;\n+      else\n+\t{\n+\t  memcpy (new_str, __getopt_nonoption_flags, nonoption_flags_max_len);\n+\t  memset (&new_str[nonoption_flags_max_len], '\\0',\n+\t\t  top + 1 - nonoption_flags_max_len);\n+\t  nonoption_flags_max_len = top + 1;\n+\t  __getopt_nonoption_flags = new_str;\n+\t}\n+    }\n+#endif\n+\n+  while (top > middle && middle > bottom)\n+    {\n+      if (top - middle > middle - bottom)\n+\t{\n+\t  /* Bottom segment is the short one.  */\n+\t  int len = middle - bottom;\n+\t  register int i;\n+\n+\t  /* Swap it with the top part of the top segment.  */\n+\t  for (i = 0; i < len; i++)\n+\t    {\n+\t      tem = argv[bottom + i];\n+\t      argv[bottom + i] = argv[top - (middle - bottom) + i];\n+\t      argv[top - (middle - bottom) + i] = tem;\n+\t      SWAP_FLAGS (bottom + i, top - (middle - bottom) + i);\n+\t    }\n+\t  /* Exclude the moved bottom segment from further swapping.  */\n+\t  top -= len;\n+\t}\n+      else\n+\t{\n+\t  /* Top segment is the short one.  */\n+\t  int len = top - middle;\n+\t  register int i;\n+\n+\t  /* Swap it with the bottom part of the bottom segment.  */\n+\t  for (i = 0; i < len; i++)\n+\t    {\n+\t      tem = argv[bottom + i];\n+\t      argv[bottom + i] = argv[middle + i];\n+\t      argv[middle + i] = tem;\n+\t      SWAP_FLAGS (bottom + i, middle + i);\n+\t    }\n+\t  /* Exclude the moved top segment from further swapping.  */\n+\t  bottom += len;\n+\t}\n+    }\n+\n+  /* Update records for the slots the non-options now occupy.  */\n+\n+  first_nonopt += (optind - last_nonopt);\n+  last_nonopt = optind;\n+}\n+\n+/* Initialize the internal data when the first call is made.  */\n+\n+#if defined (__STDC__) && __STDC__\n+static const char *_getopt_initialize (int, char *const *, const char *);\n+#endif\n+static const char *\n+_getopt_initialize (argc, argv, optstring)\n+     int argc;\n+     char *const *argv;\n+     const char *optstring;\n+{\n+  /* Start processing options with ARGV-element 1 (since ARGV-element 0\n+     is the program name); the sequence of previously skipped\n+     non-option ARGV-elements is empty.  */\n+\n+  first_nonopt = last_nonopt = optind;\n+\n+  nextchar = NULL;\n+\n+  posixly_correct = getenv (\"POSIXLY_CORRECT\");\n+\n+  /* Determine how to handle the ordering of options and nonoptions.  */\n+\n+  if (optstring[0] == '-')\n+    {\n+      ordering = RETURN_IN_ORDER;\n+      ++optstring;\n+    }\n+  else if (optstring[0] == '+')\n+    {\n+      ordering = REQUIRE_ORDER;\n+      ++optstring;\n+    }\n+  else if (posixly_correct != NULL)\n+    ordering = REQUIRE_ORDER;\n+  else\n+    ordering = PERMUTE;\n+\n+#ifdef _LIBC\n+  if (posixly_correct == NULL\n+      && argc == original_argc && argv == original_argv)\n+    {\n+      if (nonoption_flags_max_len == 0)\n+\t{\n+\t  if (__getopt_nonoption_flags == NULL\n+\t      || __getopt_nonoption_flags[0] == '\\0')\n+\t    nonoption_flags_max_len = -1;\n+\t  else\n+\t    {\n+\t      const char *orig_str = __getopt_nonoption_flags;\n+\t      int len = nonoption_flags_max_len = strlen (orig_str);\n+\t      if (nonoption_flags_max_len < argc)\n+\t\tnonoption_flags_max_len = argc;\n+\t      __getopt_nonoption_flags =\n+\t\t(char *) malloc (nonoption_flags_max_len);\n+\t      if (__getopt_nonoption_flags == NULL)\n+\t\tnonoption_flags_max_len = -1;\n+\t      else\n+\t\t{\n+\t\t  memcpy (__getopt_nonoption_flags, orig_str, len);\n+\t\t  memset (&__getopt_nonoption_flags[len], '\\0',\n+\t\t\t  nonoption_flags_max_len - len);\n+\t\t}\n+\t    }\n+\t}\n+      nonoption_flags_len = nonoption_flags_max_len;\n+    }\n+  else\n+    nonoption_flags_len = 0;\n+#endif\n+\n+  return optstring;\n+}\n+\f\n+/* Scan elements of ARGV (whose length is ARGC) for option characters\n+   given in OPTSTRING.\n+\n+   If an element of ARGV starts with '-', and is not exactly \"-\" or \"--\",\n+   then it is an option element.  The characters of this element\n+   (aside from the initial '-') are option characters.  If `getopt'\n+   is called repeatedly, it returns successively each of the option characters\n+   from each of the option elements.\n+\n+   If `getopt' finds another option character, it returns that character,\n+   updating `optind' and `nextchar' so that the next call to `getopt' can\n+   resume the scan with the following option character or ARGV-element.\n+\n+   If there are no more option characters, `getopt' returns -1.\n+   Then `optind' is the index in ARGV of the first ARGV-element\n+   that is not an option.  (The ARGV-elements have been permuted\n+   so that those that are not options now come last.)\n+\n+   OPTSTRING is a string containing the legitimate option characters.\n+   If an option character is seen that is not listed in OPTSTRING,\n+   return '?' after printing an error message.  If you set `opterr' to\n+   zero, the error message is suppressed but we still return '?'.\n+\n+   If a char in OPTSTRING is followed by a colon, that means it wants an arg,\n+   so the following text in the same ARGV-element, or the text of the following\n+   ARGV-element, is returned in `optarg'.  Two colons mean an option that\n+   wants an optional arg; if there is text in the current ARGV-element,\n+   it is returned in `optarg', otherwise `optarg' is set to zero.\n+\n+   If OPTSTRING starts with `-' or `+', it requests different methods of\n+   handling the non-option ARGV-elements.\n+   See the comments about RETURN_IN_ORDER and REQUIRE_ORDER, above.\n+\n+   Long-named options begin with `--' instead of `-'.\n+   Their names may be abbreviated as long as the abbreviation is unique\n+   or is an exact match for some defined option.  If they have an\n+   argument, it follows the option name in the same ARGV-element, separated\n+   from the option name by a `=', or else the in next ARGV-element.\n+   When `getopt' finds a long-named option, it returns 0 if that option's\n+   `flag' field is nonzero, the value of the option's `val' field\n+   if the `flag' field is zero.\n+\n+   The elements of ARGV aren't really const, because we permute them.\n+   But we pretend they're const in the prototype to be compatible\n+   with other systems.\n+\n+   LONGOPTS is a vector of `struct option' terminated by an\n+   element containing a name which is zero.\n+\n+   LONGIND returns the index in LONGOPT of the long-named option found.\n+   It is only valid when a long-named option has been found by the most\n+   recent call.\n+\n+   If LONG_ONLY is nonzero, '-' as well as '--' can introduce\n+   long-named options.  */\n+\n+int\n+_getopt_internal (argc, argv, optstring, longopts, longind, long_only)\n+     int argc;\n+     char *const *argv;\n+     const char *optstring;\n+     const struct option *longopts;\n+     int *longind;\n+     int long_only;\n+{\n+  optarg = NULL;\n+\n+  if (optind == 0 || !__getopt_initialized)\n+    {\n+      if (optind == 0)\n+\toptind = 1;\t/* Don't scan ARGV[0], the program name.  */\n+      optstring = _getopt_initialize (argc, argv, optstring);\n+      __getopt_initialized = 1;\n+    }\n+\n+  /* Test whether ARGV[optind] points to a non-option argument.\n+     Either it does not have option syntax, or there is an environment flag\n+     from the shell indicating it is not an option.  The later information\n+     is only used when the used in the GNU libc.  */\n+#ifdef _LIBC\n+#define NONOPTION_P (argv[optind][0] != '-' || argv[optind][1] == '\\0'\t      \\\n+\t\t     || (optind < nonoption_flags_len\t\t\t      \\\n+\t\t\t && __getopt_nonoption_flags[optind] == '1'))\n+#else\n+#define NONOPTION_P (argv[optind][0] != '-' || argv[optind][1] == '\\0')\n+#endif\n+\n+  if (nextchar == NULL || *nextchar == '\\0')\n+    {\n+      /* Advance to the next ARGV-element.  */\n+\n+      /* Give FIRST_NONOPT & LAST_NONOPT rational values if OPTIND has been\n+\t moved back by the user (who may also have changed the arguments).  */\n+      if (last_nonopt > optind)\n+\tlast_nonopt = optind;\n+      if (first_nonopt > optind)\n+\tfirst_nonopt = optind;\n+\n+      if (ordering == PERMUTE)\n+\t{\n+\t  /* If we have just processed some options following some non-options,\n+\t     exchange them so that the options come first.  */\n+\n+\t  if (first_nonopt != last_nonopt && last_nonopt != optind)\n+\t    exchange ((char **) argv);\n+\t  else if (last_nonopt != optind)\n+\t    first_nonopt = optind;\n+\n+\t  /* Skip any additional non-options\n+\t     and extend the range of non-options previously skipped.  */\n+\n+\t  while (optind < argc && NONOPTION_P)\n+\t    optind++;\n+\t  last_nonopt = optind;\n+\t}\n+\n+      /* The special ARGV-element `--' means premature end of options.\n+\t Skip it like a null option,\n+\t then exchange with previous non-options as if it were an option,\n+\t then skip everything else like a non-option.  */\n+\n+      if (optind != argc && !strcmp (argv[optind], \"--\"))\n+\t{\n+\t  optind++;\n+\n+\t  if (first_nonopt != last_nonopt && last_nonopt != optind)\n+\t    exchange ((char **) argv);\n+\t  else if (first_nonopt == last_nonopt)\n+\t    first_nonopt = optind;\n+\t  last_nonopt = argc;\n+\n+\t  optind = argc;\n+\t}\n+\n+      /* If we have done all the ARGV-elements, stop the scan\n+\t and back over any non-options that we skipped and permuted.  */\n+\n+      if (optind == argc)\n+\t{\n+\t  /* Set the next-arg-index to point at the non-options\n+\t     that we previously skipped, so the caller will digest them.  */\n+\t  if (first_nonopt != last_nonopt)\n+\t    optind = first_nonopt;\n+\t  return -1;\n+\t}\n+\n+      /* If we have come to a non-option and did not permute it,\n+\t either stop the scan or describe it to the caller and pass it by.  */\n+\n+      if (NONOPTION_P)\n+\t{\n+\t  if (ordering == REQUIRE_ORDER)\n+\t    return -1;\n+\t  optarg = argv[optind++];\n+\t  return 1;\n+\t}\n+\n+      /* We have found another option-ARGV-element.\n+\t Skip the initial punctuation.  */\n+\n+      nextchar = (argv[optind] + 1\n+\t\t  + (longopts != NULL && argv[optind][1] == '-'));\n+    }\n+\n+  /* Decode the current option-ARGV-element.  */\n+\n+  /* Check whether the ARGV-element is a long option.\n+\n+     If long_only and the ARGV-element has the form \"-f\", where f is\n+     a valid short option, don't consider it an abbreviated form of\n+     a long option that starts with f.  Otherwise there would be no\n+     way to give the -f short option.\n+\n+     On the other hand, if there's a long option \"fubar\" and\n+     the ARGV-element is \"-fu\", do consider that an abbreviation of\n+     the long option, just like \"--fu\", and not \"-f\" with arg \"u\".\n+\n+     This distinction seems to be the most useful approach.  */\n+\n+  if (longopts != NULL\n+      && (argv[optind][1] == '-'\n+\t  || (long_only && (argv[optind][2] || !my_index (optstring, argv[optind][1])))))\n+    {\n+      char *nameend;\n+      const struct option *p;\n+      const struct option *pfound = NULL;\n+      int exact = 0;\n+      int ambig = 0;\n+      int indfound = -1;\n+      int option_index;\n+\n+      for (nameend = nextchar; *nameend && *nameend != '='; nameend++)\n+\t/* Do nothing.  */ ;\n+\n+      /* Test all long options for either exact match\n+\t or abbreviated matches.  */\n+      for (p = longopts, option_index = 0; p->name; p++, option_index++)\n+\tif (!strncmp (p->name, nextchar, nameend - nextchar))\n+\t  {\n+\t    if ((unsigned int) (nameend - nextchar)\n+\t\t== (unsigned int) strlen (p->name))\n+\t      {\n+\t\t/* Exact match found.  */\n+\t\tpfound = p;\n+\t\tindfound = option_index;\n+\t\texact = 1;\n+\t\tbreak;\n+\t      }\n+\t    else if (pfound == NULL)\n+\t      {\n+\t\t/* First nonexact match found.  */\n+\t\tpfound = p;\n+\t\tindfound = option_index;\n+\t      }\n+\t    else\n+\t      /* Second or later nonexact match found.  */\n+\t      ambig = 1;\n+\t  }\n+\n+      if (ambig && !exact)\n+\t{\n+\t  if (opterr)\n+\t    fprintf (stderr, _(\"%s: option `%s' is ambiguous\\n\"),\n+\t\t     argv[0], argv[optind]);\n+\t  nextchar += strlen (nextchar);\n+\t  optind++;\n+\t  optopt = 0;\n+\t  return '?';\n+\t}\n+\n+      if (pfound != NULL)\n+\t{\n+\t  option_index = indfound;\n+\t  optind++;\n+\t  if (*nameend)\n+\t    {\n+\t      /* Don't test has_arg with >, because some C compilers don't\n+\t\t allow it to be used on enums.  */\n+\t      if (pfound->has_arg)\n+\t\toptarg = nameend + 1;\n+\t      else\n+\t\t{\n+\t\t  if (opterr)\n+\t\t   if (argv[optind - 1][1] == '-')\n+\t\t    /* --option */\n+\t\t    fprintf (stderr,\n+\t\t     _(\"%s: option `--%s' doesn't allow an argument\\n\"),\n+\t\t     argv[0], pfound->name);\n+\t\t   else\n+\t\t    /* +option or -option */\n+\t\t    fprintf (stderr,\n+\t\t     _(\"%s: option `%c%s' doesn't allow an argument\\n\"),\n+\t\t     argv[0], argv[optind - 1][0], pfound->name);\n+\n+\t\t  nextchar += strlen (nextchar);\n+\n+\t\t  optopt = pfound->val;\n+\t\t  return '?';\n+\t\t}\n+\t    }\n+\t  else if (pfound->has_arg == 1)\n+\t    {\n+\t      if (optind < argc)\n+\t\toptarg = argv[optind++];\n+\t      else\n+\t\t{\n+\t\t  if (opterr)\n+\t\t    fprintf (stderr,\n+\t\t\t   _(\"%s: option `%s' requires an argument\\n\"),\n+\t\t\t   argv[0], argv[optind - 1]);\n+\t\t  nextchar += strlen (nextchar);\n+\t\t  optopt = pfound->val;\n+\t\t  return optstring[0] == ':' ? ':' : '?';\n+\t\t}\n+\t    }\n+\t  nextchar += strlen (nextchar);\n+\t  if (longind != NULL)\n+\t    *longind = option_index;\n+\t  if (pfound->flag)\n+\t    {\n+\t      *(pfound->flag) = pfound->val;\n+\t      return 0;\n+\t    }\n+\t  return pfound->val;\n+\t}\n+\n+      /* Can't find it as a long option.  If this is not getopt_long_only,\n+\t or the option starts with '--' or is not a valid short\n+\t option, then it's an error.\n+\t Otherwise interpret it as a short option.  */\n+      if (!long_only || argv[optind][1] == '-'\n+\t  || my_index (optstring, *nextchar) == NULL)\n+\t{\n+\t  if (opterr)\n+\t    {\n+\t      if (argv[optind][1] == '-')\n+\t\t/* --option */\n+\t\tfprintf (stderr, _(\"%s: unrecognized option `--%s'\\n\"),\n+\t\t\t argv[0], nextchar);\n+\t      else\n+\t\t/* +option or -option */\n+\t\tfprintf (stderr, _(\"%s: unrecognized option `%c%s'\\n\"),\n+\t\t\t argv[0], argv[optind][0], nextchar);\n+\t    }\n+\t  nextchar = (char *) \"\";\n+\t  optind++;\n+\t  optopt = 0;\n+\t  return '?';\n+\t}\n+    }\n+\n+  /* Look at and handle the next short option-character.  */\n+\n+  {\n+    char c = *nextchar++;\n+    char *temp = my_index (optstring, c);\n+\n+    /* Increment `optind' when we start to process its last character.  */\n+    if (*nextchar == '\\0')\n+      ++optind;\n+\n+    if (temp == NULL || c == ':')\n+      {\n+\tif (opterr)\n+\t  {\n+\t    if (posixly_correct)\n+\t      /* 1003.2 specifies the format of this message.  */\n+\t      fprintf (stderr, _(\"%s: illegal option -- %c\\n\"),\n+\t\t       argv[0], c);\n+\t    else\n+\t      fprintf (stderr, _(\"%s: invalid option -- %c\\n\"),\n+\t\t       argv[0], c);\n+\t  }\n+\toptopt = c;\n+\treturn '?';\n+      }\n+    /* Convenience. Treat POSIX -W foo same as long option --foo */\n+    if (temp[0] == 'W' && temp[1] == ';')\n+      {\n+\tchar *nameend;\n+\tconst struct option *p;\n+\tconst struct option *pfound = NULL;\n+\tint exact = 0;\n+\tint ambig = 0;\n+\tint indfound = 0;\n+\tint option_index;\n+\n+\t/* This is an option that requires an argument.  */\n+\tif (*nextchar != '\\0')\n+\t  {\n+\t    optarg = nextchar;\n+\t    /* If we end this ARGV-element by taking the rest as an arg,\n+\t       we must advance to the next element now.  */\n+\t    optind++;\n+\t  }\n+\telse if (optind == argc)\n+\t  {\n+\t    if (opterr)\n+\t      {\n+\t\t/* 1003.2 specifies the format of this message.  */\n+\t\tfprintf (stderr, _(\"%s: option requires an argument -- %c\\n\"),\n+\t\t\t argv[0], c);\n+\t      }\n+\t    optopt = c;\n+\t    if (optstring[0] == ':')\n+\t      c = ':';\n+\t    else\n+\t      c = '?';\n+\t    return c;\n+\t  }\n+\telse\n+\t  /* We already incremented `optind' once;\n+\t     increment it again when taking next ARGV-elt as argument.  */\n+\t  optarg = argv[optind++];\n+\n+\t/* optarg is now the argument, see if it's in the\n+\t   table of longopts.  */\n+\n+\tfor (nextchar = nameend = optarg; *nameend && *nameend != '='; nameend++)\n+\t  /* Do nothing.  */ ;\n+\n+\t/* Test all long options for either exact match\n+\t   or abbreviated matches.  */\n+\tfor (p = longopts, option_index = 0; p->name; p++, option_index++)\n+\t  if (!strncmp (p->name, nextchar, nameend - nextchar))\n+\t    {\n+\t      if ((unsigned int) (nameend - nextchar) == strlen (p->name))\n+\t\t{\n+\t\t  /* Exact match found.  */\n+\t\t  pfound = p;\n+\t\t  indfound = option_index;\n+\t\t  exact = 1;\n+\t\t  break;\n+\t\t}\n+\t      else if (pfound == NULL)\n+\t\t{\n+\t\t  /* First nonexact match found.  */\n+\t\t  pfound = p;\n+\t\t  indfound = option_index;\n+\t\t}\n+\t      else\n+\t\t/* Second or later nonexact match found.  */\n+\t\tambig = 1;\n+\t    }\n+\tif (ambig && !exact)\n+\t  {\n+\t    if (opterr)\n+\t      fprintf (stderr, _(\"%s: option `-W %s' is ambiguous\\n\"),\n+\t\t       argv[0], argv[optind]);\n+\t    nextchar += strlen (nextchar);\n+\t    optind++;\n+\t    return '?';\n+\t  }\n+\tif (pfound != NULL)\n+\t  {\n+\t    option_index = indfound;\n+\t    if (*nameend)\n+\t      {\n+\t\t/* Don't test has_arg with >, because some C compilers don't\n+\t\t   allow it to be used on enums.  */\n+\t\tif (pfound->has_arg)\n+\t\t  optarg = nameend + 1;\n+\t\telse\n+\t\t  {\n+\t\t    if (opterr)\n+\t\t      fprintf (stderr, _(\"\\\n+%s: option `-W %s' doesn't allow an argument\\n\"),\n+\t\t\t       argv[0], pfound->name);\n+\n+\t\t    nextchar += strlen (nextchar);\n+\t\t    return '?';\n+\t\t  }\n+\t      }\n+\t    else if (pfound->has_arg == 1)\n+\t      {\n+\t\tif (optind < argc)\n+\t\t  optarg = argv[optind++];\n+\t\telse\n+\t\t  {\n+\t\t    if (opterr)\n+\t\t      fprintf (stderr,\n+\t\t\t       _(\"%s: option `%s' requires an argument\\n\"),\n+\t\t\t       argv[0], argv[optind - 1]);\n+\t\t    nextchar += strlen (nextchar);\n+\t\t    return optstring[0] == ':' ? ':' : '?';\n+\t\t  }\n+\t      }\n+\t    nextchar += strlen (nextchar);\n+\t    if (longind != NULL)\n+\t      *longind = option_index;\n+\t    if (pfound->flag)\n+\t      {\n+\t\t*(pfound->flag) = pfound->val;\n+\t\treturn 0;\n+\t      }\n+\t    return pfound->val;\n+\t  }\n+\t  nextchar = NULL;\n+\t  return 'W';\t/* Let the application handle it.   */\n+      }\n+    if (temp[1] == ':')\n+      {\n+\tif (temp[2] == ':')\n+\t  {\n+\t    /* This is an option that accepts an argument optionally.  */\n+\t    if (*nextchar != '\\0')\n+\t      {\n+\t\toptarg = nextchar;\n+\t\toptind++;\n+\t      }\n+\t    else\n+\t      optarg = NULL;\n+\t    nextchar = NULL;\n+\t  }\n+\telse\n+\t  {\n+\t    /* This is an option that requires an argument.  */\n+\t    if (*nextchar != '\\0')\n+\t      {\n+\t\toptarg = nextchar;\n+\t\t/* If we end this ARGV-element by taking the rest as an arg,\n+\t\t   we must advance to the next element now.  */\n+\t\toptind++;\n+\t      }\n+\t    else if (optind == argc)\n+\t      {\n+\t\tif (opterr)\n+\t\t  {\n+\t\t    /* 1003.2 specifies the format of this message.  */\n+\t\t    fprintf (stderr,\n+\t\t\t   _(\"%s: option requires an argument -- %c\\n\"),\n+\t\t\t   argv[0], c);\n+\t\t  }\n+\t\toptopt = c;\n+\t\tif (optstring[0] == ':')\n+\t\t  c = ':';\n+\t\telse\n+\t\t  c = '?';\n+\t      }\n+\t    else\n+\t      /* We already incremented `optind' once;\n+\t\t increment it again when taking next ARGV-elt as argument.  */\n+\t      optarg = argv[optind++];\n+\t    nextchar = NULL;\n+\t  }\n+      }\n+    return c;\n+  }\n+}\n+\n+int\n+getopt (argc, argv, optstring)\n+     int argc;\n+     char *const *argv;\n+     const char *optstring;\n+{\n+  return _getopt_internal (argc, argv, optstring,\n+\t\t\t   (const struct option *) 0,\n+\t\t\t   (int *) 0,\n+\t\t\t   0);\n+}\n+\n+#endif\t/* Not ELIDE_CODE.  */\n+\f\n+#ifdef TEST\n+\n+/* Compile with -DTEST to make an executable for use in testing\n+   the above definition of `getopt'.  */\n+\n+int\n+main (argc, argv)\n+     int argc;\n+     char **argv;\n+{\n+  int c;\n+  int digit_optind = 0;\n+\n+  while (1)\n+    {\n+      int this_option_optind = optind ? optind : 1;\n+\n+      c = getopt (argc, argv, \"abc:d:0123456789\");\n+      if (c == -1)\n+\tbreak;\n+\n+      switch (c)\n+\t{\n+\tcase '0':\n+\tcase '1':\n+\tcase '2':\n+\tcase '3':\n+\tcase '4':\n+\tcase '5':\n+\tcase '6':\n+\tcase '7':\n+\tcase '8':\n+\tcase '9':\n+\t  if (digit_optind != 0 && digit_optind != this_option_optind)\n+\t    printf (\"digits occur in two different argv-elements.\\n\");\n+\t  digit_optind = this_option_optind;\n+\t  printf (\"option %c\\n\", c);\n+\t  break;\n+\n+\tcase 'a':\n+\t  printf (\"option a\\n\");\n+\t  break;\n+\n+\tcase 'b':\n+\t  printf (\"option b\\n\");\n+\t  break;\n+\n+\tcase 'c':\n+\t  printf (\"option c with value `%s'\\n\", optarg);\n+\t  break;\n+\n+\tcase '?':\n+\t  break;\n+\n+\tdefault:\n+\t  printf (\"?? getopt returned character code 0%o ??\\n\", c);\n+\t}\n+    }\n+\n+  if (optind < argc)\n+    {\n+      printf (\"non-option ARGV-elements: \");\n+      while (optind < argc)\n+\tprintf (\"%s \", argv[optind++]);\n+      printf (\"\\n\");\n+    }\n+\n+  exit (0);\n+}\n+\n+#endif /* TEST */"}, {"sha": "69256fd3864782dd4f5074ba87a3269217085e8c", "filename": "texinfo/lib/getopt.h", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fgetopt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fgetopt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2Fgetopt.h?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,133 @@\n+/* Declarations for getopt.\n+   Copyright (C) 1989,90,91,92,93,94,96,97 Free Software Foundation, Inc.\n+\n+NOTE: The canonical source of this file is maintained with the GNU C Library.\n+Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n+\n+This program is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 2, or (at your option) any\n+later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+USA.  */\n+\n+#ifndef _GETOPT_H\n+#define _GETOPT_H 1\n+\n+#ifdef\t__cplusplus\n+extern \"C\" {\n+#endif\n+\n+/* For communication from `getopt' to the caller.\n+   When `getopt' finds an option that takes an argument,\n+   the argument value is returned here.\n+   Also, when `ordering' is RETURN_IN_ORDER,\n+   each non-option ARGV-element is returned here.  */\n+\n+extern char *optarg;\n+\n+/* Index in ARGV of the next element to be scanned.\n+   This is used for communication to and from the caller\n+   and for communication between successive calls to `getopt'.\n+\n+   On entry to `getopt', zero means this is the first call; initialize.\n+\n+   When `getopt' returns -1, this is the index of the first of the\n+   non-option elements that the caller should itself scan.\n+\n+   Otherwise, `optind' communicates from one call to the next\n+   how much of ARGV has been scanned so far.  */\n+\n+extern int optind;\n+\n+/* Callers store zero here to inhibit the error message `getopt' prints\n+   for unrecognized options.  */\n+\n+extern int opterr;\n+\n+/* Set to an option character which was unrecognized.  */\n+\n+extern int optopt;\n+\n+/* Describe the long-named options requested by the application.\n+   The LONG_OPTIONS argument to getopt_long or getopt_long_only is a vector\n+   of `struct option' terminated by an element containing a name which is\n+   zero.\n+\n+   The field `has_arg' is:\n+   no_argument\t\t(or 0) if the option does not take an argument,\n+   required_argument\t(or 1) if the option requires an argument,\n+   optional_argument \t(or 2) if the option takes an optional argument.\n+\n+   If the field `flag' is not NULL, it points to a variable that is set\n+   to the value given in the field `val' when the option is found, but\n+   left unchanged if the option is not found.\n+\n+   To have a long-named option do something other than set an `int' to\n+   a compiled-in constant, such as set a value from `optarg', set the\n+   option's `flag' field to zero and its `val' field to a nonzero\n+   value (the equivalent single-letter option character, if there is\n+   one).  For long options that have a zero `flag' field, `getopt'\n+   returns the contents of the `val' field.  */\n+\n+struct option\n+{\n+#if defined (__STDC__) && __STDC__\n+  const char *name;\n+#else\n+  char *name;\n+#endif\n+  /* has_arg can't be an enum because some compilers complain about\n+     type mismatches in all the code that assumes it is an int.  */\n+  int has_arg;\n+  int *flag;\n+  int val;\n+};\n+\n+/* Names for the values of the `has_arg' field of `struct option'.  */\n+\n+#define\tno_argument\t\t0\n+#define required_argument\t1\n+#define optional_argument\t2\n+\n+#if defined (__STDC__) && __STDC__\n+#ifdef __GNU_LIBRARY__\n+/* Many other libraries have conflicting prototypes for getopt, with\n+   differences in the consts, in stdlib.h.  To avoid compilation\n+   errors, only prototype getopt for the GNU C library.  */\n+extern int getopt (int argc, char *const *argv, const char *shortopts);\n+#else /* not __GNU_LIBRARY__ */\n+extern int getopt ();\n+#endif /* __GNU_LIBRARY__ */\n+extern int getopt_long (int argc, char *const *argv, const char *shortopts,\n+\t\t        const struct option *longopts, int *longind);\n+extern int getopt_long_only (int argc, char *const *argv,\n+\t\t\t     const char *shortopts,\n+\t\t             const struct option *longopts, int *longind);\n+\n+/* Internal only.  Users should not call this directly.  */\n+extern int _getopt_internal (int argc, char *const *argv,\n+\t\t\t     const char *shortopts,\n+\t\t             const struct option *longopts, int *longind,\n+\t\t\t     int long_only);\n+#else /* not __STDC__ */\n+extern int getopt ();\n+extern int getopt_long ();\n+extern int getopt_long_only ();\n+\n+extern int _getopt_internal ();\n+#endif /* __STDC__ */\n+\n+#ifdef\t__cplusplus\n+}\n+#endif\n+\n+#endif /* _GETOPT_H */"}, {"sha": "6507ba1b1f63c2520c285960b5f83e968659f177", "filename": "texinfo/lib/getopt1.c", "status": "added", "additions": 189, "deletions": 0, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fgetopt1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fgetopt1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2Fgetopt1.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,189 @@\n+/* getopt_long and getopt_long_only entry points for GNU getopt.\n+   Copyright (C) 1987,88,89,90,91,92,93,94,96,97 Free Software Foundation, Inc.\n+\n+NOTE: The canonical source of this file is maintained with the GNU C Library.\n+Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n+\n+This program is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 2, or (at your option) any\n+later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+USA.  */\n+\f\n+#ifdef HAVE_CONFIG_H\n+#include <config.h>\n+#endif\n+\n+#include \"getopt.h\"\n+\n+#if !defined (__STDC__) || !__STDC__\n+/* This is a separate conditional since some stdc systems\n+   reject `defined (const)'.  */\n+#ifndef const\n+#define const\n+#endif\n+#endif\n+\n+#include <stdio.h>\n+\n+/* Comment out all this code if we are using the GNU C Library, and are not\n+   actually compiling the library itself.  This code is part of the GNU C\n+   Library, but also included in many other GNU distributions.  Compiling\n+   and linking in this code is a waste when using the GNU C library\n+   (especially if it is a shared library).  Rather than having every GNU\n+   program understand `configure --with-gnu-libc' and omit the object files,\n+   it is simpler to just do this in the source for each such file.  */\n+\n+#define GETOPT_INTERFACE_VERSION 2\n+#if !defined (_LIBC) && defined (__GLIBC__) && __GLIBC__ >= 2\n+#include <gnu-versions.h>\n+#if _GNU_GETOPT_INTERFACE_VERSION == GETOPT_INTERFACE_VERSION\n+#define ELIDE_CODE\n+#endif\n+#endif\n+\n+#ifndef ELIDE_CODE\n+\n+\n+/* This needs to come after some library #include\n+   to get __GNU_LIBRARY__ defined.  */\n+#ifdef __GNU_LIBRARY__\n+#include <stdlib.h>\n+#endif\n+\n+#ifndef\tNULL\n+#define NULL 0\n+#endif\n+\n+int\n+getopt_long (argc, argv, options, long_options, opt_index)\n+     int argc;\n+     char *const *argv;\n+     const char *options;\n+     const struct option *long_options;\n+     int *opt_index;\n+{\n+  return _getopt_internal (argc, argv, options, long_options, opt_index, 0);\n+}\n+\n+/* Like getopt_long, but '-' as well as '--' can indicate a long option.\n+   If an option that starts with '-' (not '--') doesn't match a long option,\n+   but does match a short option, it is parsed as a short option\n+   instead.  */\n+\n+int\n+getopt_long_only (argc, argv, options, long_options, opt_index)\n+     int argc;\n+     char *const *argv;\n+     const char *options;\n+     const struct option *long_options;\n+     int *opt_index;\n+{\n+  return _getopt_internal (argc, argv, options, long_options, opt_index, 1);\n+}\n+\n+\n+#endif\t/* Not ELIDE_CODE.  */\n+\f\n+#ifdef TEST\n+\n+#include <stdio.h>\n+\n+int\n+main (argc, argv)\n+     int argc;\n+     char **argv;\n+{\n+  int c;\n+  int digit_optind = 0;\n+\n+  while (1)\n+    {\n+      int this_option_optind = optind ? optind : 1;\n+      int option_index = 0;\n+      static struct option long_options[] =\n+      {\n+\t{\"add\", 1, 0, 0},\n+\t{\"append\", 0, 0, 0},\n+\t{\"delete\", 1, 0, 0},\n+\t{\"verbose\", 0, 0, 0},\n+\t{\"create\", 0, 0, 0},\n+\t{\"file\", 1, 0, 0},\n+\t{0, 0, 0, 0}\n+      };\n+\n+      c = getopt_long (argc, argv, \"abc:d:0123456789\",\n+\t\t       long_options, &option_index);\n+      if (c == -1)\n+\tbreak;\n+\n+      switch (c)\n+\t{\n+\tcase 0:\n+\t  printf (\"option %s\", long_options[option_index].name);\n+\t  if (optarg)\n+\t    printf (\" with arg %s\", optarg);\n+\t  printf (\"\\n\");\n+\t  break;\n+\n+\tcase '0':\n+\tcase '1':\n+\tcase '2':\n+\tcase '3':\n+\tcase '4':\n+\tcase '5':\n+\tcase '6':\n+\tcase '7':\n+\tcase '8':\n+\tcase '9':\n+\t  if (digit_optind != 0 && digit_optind != this_option_optind)\n+\t    printf (\"digits occur in two different argv-elements.\\n\");\n+\t  digit_optind = this_option_optind;\n+\t  printf (\"option %c\\n\", c);\n+\t  break;\n+\n+\tcase 'a':\n+\t  printf (\"option a\\n\");\n+\t  break;\n+\n+\tcase 'b':\n+\t  printf (\"option b\\n\");\n+\t  break;\n+\n+\tcase 'c':\n+\t  printf (\"option c with value `%s'\\n\", optarg);\n+\t  break;\n+\n+\tcase 'd':\n+\t  printf (\"option d with value `%s'\\n\", optarg);\n+\t  break;\n+\n+\tcase '?':\n+\t  break;\n+\n+\tdefault:\n+\t  printf (\"?? getopt returned character code 0%o ??\\n\", c);\n+\t}\n+    }\n+\n+  if (optind < argc)\n+    {\n+      printf (\"non-option ARGV-elements: \");\n+      while (optind < argc)\n+\tprintf (\"%s \", argv[optind++]);\n+      printf (\"\\n\");\n+    }\n+\n+  exit (0);\n+}\n+\n+#endif /* TEST */"}, {"sha": "521625464cdd107c5fc8ac90ef5a7019132abd0e", "filename": "texinfo/lib/memcpy.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fmemcpy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fmemcpy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2Fmemcpy.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,20 @@\n+/* Copy LEN bytes starting at SRCADDR to DESTADDR.  Result undefined\n+   if the source overlaps with the destination.\n+   Return DESTADDR. */\n+\n+#ifdef HAVE_CONFIG_H\n+#include <config.h>\n+#endif\n+\n+char *\n+memcpy (destaddr, srcaddr, len)\n+     char *destaddr;\n+     const char *srcaddr;\n+     int len;\n+{\n+  char *dest = destaddr;\n+\n+  while (len-- > 0)\n+    *destaddr++ = *srcaddr++;\n+  return dest;\n+}"}, {"sha": "d7bdd7cd99503b51ebe37eb7d45d778a8954e8d3", "filename": "texinfo/lib/memmove.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fmemmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fmemmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2Fmemmove.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,24 @@\n+/* memmove.c -- copy memory.\n+   Copy LENGTH bytes from SOURCE to DEST.  Does not null-terminate.\n+   In the public domain.\n+   By David MacKenzie <djm@gnu.ai.mit.edu>.  */\n+\n+#ifdef HAVE_CONFIG_H\n+#include <config.h>\n+#endif\n+\n+void\n+memmove (dest, source, length)\n+     char *dest;\n+     const char *source;\n+     unsigned length;\n+{\n+  if (source < dest)\n+    /* Moving from low mem to hi mem; start at end.  */\n+    for (source += length, dest += length; length; --length)\n+      *--dest = *--source;\n+  else if (source != dest)\n+    /* Moving from hi mem to low mem; start at beginning.  */\n+    for (; length; --length)\n+      *dest++ = *source++;\n+}"}, {"sha": "1d60f13948a62628bc46a4d58becd16f694212c0", "filename": "texinfo/lib/strdup.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fstrdup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fstrdup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2Fstrdup.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,43 @@\n+/* strdup.c -- return a newly allocated copy of a string\n+   Copyright (C) 1990 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+#include <config.h>\n+#endif\n+\n+#ifdef STDC_HEADERS\n+#include <string.h>\n+#include <stdlib.h>\n+#else\n+char *malloc ();\n+char *strcpy ();\n+#endif\n+\n+/* Return a newly allocated copy of STR,\n+   or 0 if out of memory. */\n+\n+char *\n+strdup (str)\n+     const char *str;\n+{\n+  char *newstr;\n+\n+  newstr = (char *) malloc (strlen (str) + 1);\n+  if (newstr)\n+    strcpy (newstr, str);\n+  return newstr;\n+}"}, {"sha": "661469173d94f6107e358e8a46faf23890124e3a", "filename": "texinfo/lib/strerror.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fstrerror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fstrerror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2Fstrerror.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,43 @@\n+/*\n+ * strerror.c --- ANSI C compatible system error routine\n+ */\n+\n+/* \n+ * Copyright (C) 1986, 1988, 1989, 1991 the Free Software Foundation, Inc.\n+ * From gawk.\n+ * \n+ * This program is free software; you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation; either version 2, or (at your option)\n+ * any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program; if not, write to the Free Software\n+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+ *\n+ */\n+\n+#if 0\n+#include <stdio.h>\n+#endif\n+\n+extern int sys_nerr;\n+extern char *sys_errlist[];\n+\n+char *\n+strerror(n)\n+int n;\n+{\n+\tstatic char mesg[30];\n+\n+\tif (n < 0 || n >= sys_nerr) {\n+\t\tsprintf(mesg, \"Unknown error (%d)\", n);\n+\t\treturn mesg;\n+\t} else\n+\t\treturn sys_errlist[n];\n+}"}, {"sha": "c36ac10d9d616aa29ee2f3bec9a3c968ee42a549", "filename": "texinfo/lib/system.h", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2Fsystem.h?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,102 @@\n+/* system.h: System-dependent declarations.  Include this first.\n+   $Id: system.h,v 1.1 1998/03/23 04:43:06 law Exp $\n+\n+   Copyright (C) 1997 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software Foundation,\n+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifndef TEXINFO_SYSTEM_H\n+#define TEXINFO_SYSTEM_H\n+\n+#define _GNU_SOURCE\n+\n+#include <config.h>\n+\n+/* <unistd.h> should be included before any preprocessor test\n+   of _POSIX_VERSION.  */\n+#ifdef HAVE_UNISTD_H\n+#include <unistd.h>\n+#endif /* HAVE_UNISTD_H */\n+\n+#include <stdio.h>\n+#include <sys/types.h>\n+#include <ctype.h>\n+\n+#ifdef HAVE_LOCALE_H\n+#include <locale.h>\n+#endif\n+#include <libintl.h>\n+\n+/* Don't use bcopy!  Use memmove if source and destination may overlap,\n+   memcpy otherwise.  */\n+#ifdef HAVE_STRING_H\n+# if !STDC_HEADERS && HAVE_MEMORY_H\n+#  include <memory.h>\n+# endif\n+# include <string.h>\n+#else\n+# include <strings.h>\n+char *memchr ();\n+#endif\n+\n+#ifdef STDC_HEADERS\n+#define getopt system_getopt\n+#include <stdlib.h>\n+#undef getopt\n+#else\n+extern char *getenv ();\n+#endif\n+\n+#ifndef HAVE_STRERROR\n+extern char *strerror ();\n+#endif\n+\n+#include <errno.h>\n+#ifndef errno\n+extern int errno;\n+#endif\n+#ifdef VMS\n+#include <perror.h>\n+#endif\n+\n+#include <sys/stat.h>\n+\n+#ifdef HAVE_SYS_FILE_H\n+#include <sys/file.h>\n+#endif /* HAVE_SYS_FILE_H */\n+\n+#ifndef O_RDONLY\n+/* Since <fcntl.h> is POSIX, prefer that to <sys/fcntl.h>.\n+   This also avoids some useless warnings on (at least) Linux.  */\n+#ifdef HAVE_FCNTL_H\n+#include <fcntl.h>\n+#else /* not HAVE_FCNTL_H */\n+#ifdef HAVE_SYS_FCNTL_H\n+#include <sys/fcntl.h>\n+#endif /* not HAVE_SYS_FCNTL_H */\n+#endif /* not HAVE_FCNTL_H */\n+#endif /* not O_RDONLY */\n+\n+#ifdef HAVE_PWD_H\n+#include <pwd.h>\n+#endif\n+/* Some systems don't declare this function in pwd.h. */\n+struct passwd *getpwnam ();\n+\n+/* Our library routines not included in any system library.  */\n+extern void *xmalloc (), *xrealloc ();\n+extern char *xstrdup ();\n+\n+#endif /* TEXINFO_SYSTEM_H */"}, {"sha": "156989ed7118bfc13e42a7a68cf666f49b687781", "filename": "texinfo/lib/xmalloc.c", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fxmalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fxmalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2Fxmalloc.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,80 @@\n+/* xmalloc.c -- safe versions of malloc and realloc */\n+\n+/* This file is part of GNU Info, a program for reading online documentation\n+   stored in Info format.\n+\n+   This file has appeared in prior works by the Free Software Foundation;\n+   thus it carries copyright dates from 1988 through 1993.\n+\n+   Copyright (C) 1988, 1989, 1990, 1991, 1992, 1993 Free Software\n+   Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+\n+   Written by Brian Fox (bfox@ai.mit.edu). */\n+\n+#if !defined (ALREADY_HAVE_XMALLOC)\n+#include <stdio.h>\n+#include <sys/types.h>\n+\n+extern void *malloc (), *realloc ();\n+static void memory_error_and_abort ();\n+\n+/* **************************************************************** */\n+/*\t\t\t\t\t\t\t\t    */\n+/*\t\t   Memory Allocation and Deallocation.\t\t    */\n+/*\t\t\t\t\t\t\t\t    */\n+/* **************************************************************** */\n+\n+/* Return a pointer to free()able block of memory large enough\n+   to hold BYTES number of bytes.  If the memory cannot be allocated,\n+   print an error message and abort. */\n+void *\n+xmalloc (bytes)\n+     int bytes;\n+{\n+  void *temp = malloc (bytes);\n+\n+  if (!temp)\n+    memory_error_and_abort (\"xmalloc\");\n+  return (temp);\n+}\n+\n+void *\n+xrealloc (pointer, bytes)\n+     void *pointer;\n+     int bytes;\n+{\n+  void *temp;\n+\n+  if (!pointer)\n+    temp = malloc (bytes);\n+  else\n+    temp = realloc (pointer, bytes);\n+\n+  if (!temp)\n+    memory_error_and_abort (\"xrealloc\");\n+\n+  return (temp);\n+}\n+\n+static void\n+memory_error_and_abort (fname)\n+     char *fname;\n+{\n+  fprintf (stderr, \"%s: Out of virtual memory!\\n\", fname);\n+  abort ();\n+}\n+#endif /* !ALREADY_HAVE_XMALLOC */"}, {"sha": "d5bcaf38091bfdbc7079b7ac50030cfb00200e6c", "filename": "texinfo/lib/xstrdup.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fxstrdup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Flib%2Fxstrdup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Flib%2Fxstrdup.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,42 @@\n+/* xstrdup.c -- copy a string with out of memory checking\n+   Copyright (C) 1990, 1996 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software Foundation,\n+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#if HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#if defined(STDC_HEADERS) || defined(HAVE_STRING_H)\n+# include <string.h>\n+#else\n+# include <strings.h>\n+#endif\n+\n+#if defined (__STDC__) && __STDC__\n+char *xmalloc (size_t);\n+char *xstrdup (char *string);\n+#else\n+char *xmalloc ();\n+#endif\n+\n+/* Return a newly allocated copy of STRING.  */\n+\n+char *\n+xstrdup (string)\n+     char *string;\n+{\n+  return strcpy (xmalloc (strlen (string) + 1), string);\n+}"}, {"sha": "6f0231b72e1e58d448416db6ec68bcdb68bdc8ea", "filename": "texinfo/makeinfo/Makefile.am", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fmakeinfo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fmakeinfo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fmakeinfo%2FMakefile.am?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,13 @@\n+## Makefile.am for texinfo/makeinfo.\n+## $Id: Makefile.am,v 1.1 1998/03/23 04:43:06 law Exp $\n+## Run automake in .. to produce Makefile.in from this.\n+\n+bin_PROGRAMS = makeinfo\n+\n+localedir = $(datadir)/locale\n+INCLUDES = -I$(top_srcdir)/lib -I../intl -DLOCALEDIR=\\\"$(localedir)\\\"\n+LDADD = ../lib/libtxi.a @INTLLIBS@\n+\n+makeinfo_SOURCES = makeinfo.c makeinfo.h multi.c\n+\n+EXTRA_DIST = README"}, {"sha": "8b404caaf6d81f5b3b7524b379f8fa8aad64433a", "filename": "texinfo/makeinfo/README", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fmakeinfo%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fmakeinfo%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fmakeinfo%2FREADME?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,6 @@\n+A standalone program to convert Texinfo source into Info files\n+readable with standalone info or M-x info in Emacs.\n+makeinfo can also output plain ASCII.\n+\n+The Emacs function M-x texinfo-format-buffer does the same job, but\n+makeinfo is faster and gives better error messages."}, {"sha": "a6abd069801c46405ffa88e6b85edc5bbb07e32d", "filename": "texinfo/missing", "status": "added", "additions": 134, "deletions": 0, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fmissing", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fmissing", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fmissing?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,134 @@\n+#! /bin/sh\n+# Common stub for a few missing GNU programs while installing.\n+# Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n+# Franc,ois Pinard <pinard@iro.umontreal.ca>, 1996.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n+if test $# -eq 0; then\n+  echo 1>&2 \"Try \\`$0 --help' for more information\"\n+  exit 1\n+fi\n+\n+case \"$1\" in\n+\n+  -h|--h|--he|--hel|--help)\n+    echo \"\\\n+$0 [OPTION]... PROGRAM [ARGUMENT]...\n+\n+Handle \\`PROGRAM [ARGUMENT]...' for when PROGRAM is missing, or return an\n+error status if there is no known handling for PROGRAM.\n+\n+Options:\n+  -h, --help      display this help and exit\n+  -v, --version   output version information and exit\n+\n+Supported PROGRAM values:\n+  aclocal      touch file \\`aclocal.m4'\n+  autoconf     touch file \\`configure'\n+  autoheader   touch file \\`config.h.in'\n+  automake     touch all \\`Makefile.in' files\n+  bison        touch file \\`y.tab.c'\n+  makeinfo     touch the output file\n+  yacc         touch file \\`y.tab.c'\"\n+    ;;\n+\n+  -v|--v|--ve|--ver|--vers|--versi|--versio|--version)\n+    echo \"missing - GNU libit 0.0\"\n+    ;;\n+\n+  -*)\n+    echo 1>&2 \"$0: Unknown \\`$1' option\"\n+    echo 1>&2 \"Try \\`$0 --help' for more information\"\n+    exit 1\n+    ;;\n+\n+  aclocal)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is missing on your system.  You should only need it if\n+         you modified \\`acinclude.m4' or \\`configure.in'.  You might want\n+         to install the \\`Automake' and \\`Perl' packages.  Grab them from\n+         any GNU archive site.\"\n+    touch aclocal.m4\n+    ;;\n+\n+  autoconf)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is missing on your system.  You should only need it if\n+         you modified \\`configure.in'.  You might want to install the\n+         \\`Autoconf' and \\`GNU m4' packages.  Grab them from any GNU\n+         archive site.\"\n+    touch configure\n+    ;;\n+\n+  autoheader)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is missing on your system.  You should only need it if\n+         you modified \\`acconfig.h' or \\`configure.in'.  You might want\n+         to install the \\`Autoconf' and \\`GNU m4' packages.  Grab them\n+         from any GNU archive site.\"\n+    touch config.h.in\n+    ;;\n+\n+  automake)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is missing on your system.  You should only need it if\n+         you modified \\`Makefile.am', \\`acinclude.m4' or \\`configure.in'.\n+         You might want to install the \\`Automake' and \\`Perl' packages.\n+         Grab them from any GNU archive site.\"\n+    find . -type f -name Makefile.am -print \\\n+      | sed 's/^\\(.*\\).am$/touch \\1.in/' \\\n+      | sh\n+    ;;\n+\n+  bison|yacc)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is missing on your system.  You should only need it if\n+         you modified a \\`.y' file.  You may need the \\`Bison' package\n+         in order for those modifications to take effect.  You can get\n+         \\`Bison' from any GNU archive site.\"\n+    touch y.tab.c\n+    ;;\n+\n+  makeinfo)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is missing on your system.  You should only need it if\n+         you modified a \\`.texi' or \\`.texinfo' file, or any other file\n+         indirectly affecting the aspect of the manual.  The spurious\n+         call might also be the consequence of using a buggy \\`make' (AIX,\n+         DU, IRIX).  You might want to install the \\`Texinfo' package or\n+         the \\`GNU make' package.  Grab either from any GNU archive site.\"\n+    file=`echo \"$*\" | sed -n 's/.*-o \\([^ ]*\\).*/\\1/p'`\n+    if test -z \"$file\"; then\n+      file=`echo \"$*\" | sed 's/.* \\([^ ]*\\) *$/\\1/'`\n+      file=`sed -n '/^@setfilename/ { s/.* \\([^ ]*\\) *$/\\1/; p; q; }' $file`\n+    fi\n+    touch $file\n+    ;;\n+\n+  *)\n+    echo 1>&2 \"\\\n+WARNING: \\`$1' is needed, and you do not seem to have it handy on your\n+         system.  You might have modified some files without having the\n+         proper tools for further handling them.  Check the \\`README' file,\n+         it often tells you about the needed prerequirements for installing\n+         this package.  You may also peek at any GNU archive site, in case\n+         some other package would contain this missing \\`$1' program.\"\n+    exit 1\n+    ;;\n+esac\n+\n+exit 0"}, {"sha": "450a619c6adf1c90a6e89caa2639516a5ac89bf5", "filename": "texinfo/mkinstalldirs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fmkinstalldirs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fmkinstalldirs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fmkinstalldirs?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,40 @@\n+#! /bin/sh\n+# mkinstalldirs --- make directory hierarchy\n+# Author: Noah Friedman <friedman@prep.ai.mit.edu>\n+# Created: 1993-05-16\n+# Public domain\n+\n+# $Id: mkinstalldirs,v 1.1 1998/03/23 04:42:10 law Exp $\n+\n+errstatus=0\n+\n+for file\n+do\n+   set fnord `echo \":$file\" | sed -ne 's/^:\\//#/;s/^://;s/\\// /g;s/^#/\\//;p'`\n+   shift\n+\n+   pathcomp=\n+   for d\n+   do\n+     pathcomp=\"$pathcomp$d\"\n+     case \"$pathcomp\" in\n+       -* ) pathcomp=./$pathcomp ;;\n+     esac\n+\n+     if test ! -d \"$pathcomp\"; then\n+        echo \"mkdir $pathcomp\" 1>&2\n+\n+        mkdir \"$pathcomp\" || lasterr=$?\n+\n+        if test ! -d \"$pathcomp\"; then\n+  \t  errstatus=$lasterr\n+        fi\n+     fi\n+\n+     pathcomp=\"$pathcomp/\"\n+   done\n+done\n+\n+exit $errstatus\n+\n+# mkinstalldirs ends here"}, {"sha": "55848cb5866161170d608254371deb86835faf0f", "filename": "texinfo/po/ChangeLog", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fpo%2FChangeLog?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,5 @@\n+Thu Sep  4 15:01:33 1997  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* Makefile.in.in (install-info): Add dummy target.\n+\n+"}, {"sha": "69159ea91356cde2ec10df83f0da3228ce740d58", "filename": "texinfo/po/Makefile.in.in", "status": "added", "additions": 270, "deletions": 0, "changes": 270, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2FMakefile.in.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2FMakefile.in.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fpo%2FMakefile.in.in?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,270 @@\n+# Makefile for program source directory in GNU NLS utilities package.\n+# Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+\n+PACKAGE = @PACKAGE@\n+VERSION = @VERSION@\n+\n+SHELL = /bin/sh\n+@SET_MAKE@\n+\n+srcdir = @srcdir@\n+top_srcdir = @top_srcdir@\n+VPATH = @srcdir@\n+\n+prefix = @prefix@\n+exec_prefix = @exec_prefix@\n+datadir = $(prefix)/@DATADIRNAME@\n+localedir = $(datadir)/locale\n+gnulocaledir = $(prefix)/share/locale\n+gettextsrcdir = $(prefix)/share/gettext/po\n+subdir = po\n+\n+INSTALL = @INSTALL@\n+INSTALL_DATA = @INSTALL_DATA@\n+MKINSTALLDIRS = @MKINSTALLDIRS@\n+\n+CC = @CC@\n+GENCAT = @GENCAT@\n+GMSGFMT = PATH=../src:$$PATH @GMSGFMT@\n+MSGFMT = @MSGFMT@\n+XGETTEXT = PATH=../src:$$PATH @XGETTEXT@\n+MSGMERGE = PATH=../src:$$PATH msgmerge\n+\n+DEFS = @DEFS@\n+CFLAGS = @CFLAGS@\n+CPPFLAGS = @CPPFLAGS@\n+\n+INCLUDES = -I.. -I$(top_srcdir)/intl\n+\n+COMPILE = $(CC) -c $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(XCFLAGS)\n+\n+SOURCES = cat-id-tbl.c\n+POFILES = @POFILES@\n+GMOFILES = @GMOFILES@\n+DISTFILES = ChangeLog Makefile.in.in POTFILES.in $(PACKAGE).pot \\\n+stamp-cat-id $(POFILES) $(GMOFILES) $(SOURCES)\n+\n+POTFILES = \\\n+\n+CATALOGS = @CATALOGS@\n+CATOBJEXT = @CATOBJEXT@\n+INSTOBJEXT = @INSTOBJEXT@\n+\n+.SUFFIXES:\n+.SUFFIXES: .c .o .po .pox .gmo .mo .msg .cat\n+\n+.c.o:\n+\t$(COMPILE) $<\n+\n+.po.pox:\n+\tif [ x\"@MAINT@\" = x ]; then \\\n+\t  $(MAKE) $(PACKAGE).pot; \\\n+\t  $(MSGMERGE) $< $(srcdir)/$(PACKAGE).pot -o $*.pox; \\\n+\telse \\\n+\t  touch $@; \\\n+\tfi\n+\n+.po.mo:\n+\tif [ x\"@MAINT@\" = x ]; then \\\n+\t  $(MSGFMT) -o $@ $<; \\\n+\telse \\\n+\t  touch $@; \\\n+\tfi\n+\n+.po.gmo:\n+\tif [ x\"@MAINT@\" = x ]; then \\\n+\t  file=$(srcdir)/`echo $* | sed 's,.*/,,'`.gmo \\\n+\t    && rm -f $$file && $(GMSGFMT) -o $$file $<; \\\n+\telse \\\n+\t  touch $@; \\\n+\tfi\n+\n+.po.cat:\n+\tif [ x\"@MAINT@\" = x ]; then \\\n+\t  sed -f ../intl/po2msg.sed < $< > $*.msg \\\n+\t    && rm -f $@ && $(GENCAT) $@ $*.msg; \\\n+\telse \\\n+\t  touch $@; \\\n+\tfi\n+\n+\n+all: all-@USE_NLS@\n+\n+all-yes: cat-id-tbl.c $(CATALOGS)\n+all-no:\n+\n+$(PACKAGE).pot: @MAINT@ $(POTFILES)\n+\t$(XGETTEXT) --default-domain=$(PACKAGE) --directory=$(top_srcdir) \\\n+\t  --add-comments --keyword=_ --keyword=N_ \\\n+\t  --files-from=$(srcdir)/POTFILES.in\n+\tif [ ! -s $(PACKAGE).po ] \\\n+\t  || cmp -s $(PACKAGE).po $(srcdir)/$(PACKAGE).pot; then \\\n+\t  rm -f $(PACKAGE).po; \\\n+\telse \\\n+\t  rm -f $(srcdir)/$(PACKAGE).pot \\\n+\t    && mv $(PACKAGE).po $(srcdir)/$(PACKAGE).pot; \\\n+\tfi\n+\n+cat-id-tbl.c: stamp-cat-id\n+stamp-cat-id: @MAINT@ $(PACKAGE).pot\n+\trm -f cat-id-tbl.tmp\n+\tsed -f ../intl/po2tbl.sed $(srcdir)/$(PACKAGE).pot \\\n+\t\t| sed -e \"s/@PACKAGE NAME@/$(PACKAGE)/\" > cat-id-tbl.tmp\n+\tif cmp -s cat-id-tbl.tmp $(srcdir)/cat-id-tbl.c; then \\\n+\t  rm cat-id-tbl.tmp; \\\n+\telse \\\n+\t  echo cat-id-tbl.c changed; \\\n+\t  rm -f $(srcdir)/cat-id-tbl.c; \\\n+\t  mv cat-id-tbl.tmp $(srcdir)/cat-id-tbl.c; \\\n+\tfi\n+\tcd $(srcdir) && rm -f stamp-cat-id && echo timestamp > stamp-cat-id\n+\n+\n+install: install-exec install-data\n+install-exec:\n+install-data: install-data-@USE_NLS@\n+install-data-no: all\n+install-data-yes: all\n+\tif test -r $(MKINSTALLDIRS); then \\\n+\t  $(MKINSTALLDIRS) $(datadir); \\\n+\telse \\\n+\t  $(top_srcdir)/mkinstalldirs $(datadir); \\\n+\tfi\n+\t@catalogs='$(CATALOGS)'; \\\n+\tfor cat in $$catalogs; do \\\n+\t  case \"$$cat\" in \\\n+\t    *.gmo) destdir=$(gnulocaledir);; \\\n+\t    *)     destdir=$(localedir);; \\\n+\t  esac; \\\n+\t  lang=`echo $$cat | sed 's/$(CATOBJEXT)$$//'`; \\\n+\t  dir=$$destdir/$$lang/LC_MESSAGES; \\\n+\t  if test -r $(MKINSTALLDIRS); then \\\n+\t    $(MKINSTALLDIRS) $$dir; \\\n+\t  else \\\n+\t    $(top_srcdir)/mkinstalldirs $$dir; \\\n+\t  fi; \\\n+\t  if test -r $$cat; then \\\n+\t    $(INSTALL_DATA) $$cat $$dir/$(PACKAGE)$(INSTOBJEXT); \\\n+\t    echo \"installing $$cat as $$dir/$(PACKAGE)$(INSTOBJEXT)\"; \\\n+\t  else \\\n+\t    $(INSTALL_DATA) $(srcdir)/$$cat $$dir/$(PACKAGE)$(INSTOBJEXT); \\\n+\t    echo \"installing $(srcdir)/$$cat as\" \\\n+\t\t \"$$dir/$(PACKAGE)$(INSTOBJEXT)\"; \\\n+\t  fi; \\\n+\t  if test -r $$cat.m; then \\\n+\t    $(INSTALL_DATA) $$cat.m $$dir/$(PACKAGE)$(INSTOBJEXT).m; \\\n+\t    echo \"installing $$cat.m as $$dir/$(PACKAGE)$(INSTOBJEXT).m\"; \\\n+\t  else \\\n+\t    if test -r $(srcdir)/$$cat.m ; then \\\n+\t      $(INSTALL_DATA) $(srcdir)/$$cat.m \\\n+\t\t$$dir/$(PACKAGE)$(INSTOBJEXT).m; \\\n+\t      echo \"installing $(srcdir)/$$cat as\" \\\n+\t\t   \"$$dir/$(PACKAGE)$(INSTOBJEXT).m\"; \\\n+\t    else \\\n+\t      true; \\\n+\t    fi; \\\n+\t  fi; \\\n+\tdone\n+\tif test \"$(PACKAGE)\" = \"gettext\"; then \\\n+\t  if test -r $(MKINSTALLDIRS); then \\\n+\t    $(MKINSTALLDIRS) $(gettextsrcdir); \\\n+\t  else \\\n+\t    $(top_srcdir)/mkinstalldirs $(gettextsrcdir); \\\n+\t  fi; \\\n+\t  cd $(srcdir) && \\\n+\t    $(INSTALL_DATA) Makefile.in.in $(gettextsrcdir)/Makefile.in.in; \\\n+\telse \\\n+\t  : ; \\\n+\tfi\n+\n+# Define this as empty until I found a useful application.\n+installcheck:\n+\n+uninstall:\n+\tcatalogs='$(CATALOGS)'; \\\n+\tfor cat in $$catalogs; do \\\n+\t  lang=`echo $$cat | sed 's/$(CATOBJEXT)$$//'`; \\\n+\t  rm -f $(localedir)/$$lang/LC_MESSAGES/$(PACKAGE)$(INSTOBJEXT); \\\n+\t  rm -f $(localedir)/$$lang/LC_MESSAGES/$(PACKAGE)$(INSTOBJEXT).m; \\\n+\t  rm -f $(gnulocaledir)/$$lang/LC_MESSAGES/$(PACKAGE)$(INSTOBJEXT); \\\n+\t  rm -f $(gnulocaledir)/$$lang/LC_MESSAGES/$(PACKAGE)$(INSTOBJEXT).m; \\\n+\tdone\n+\trm -f $(gettextsrcdir)/po-Makefile.in.in\n+\n+check: all\n+\n+cat-id-tbl.o: ../intl/libgettext.h\n+\n+dvi info install-info tags TAGS ID:\n+\n+mostlyclean:\n+\trm -f core core.* *.pox $(PACKAGE).po *.old.po cat-id-tbl.tmp\n+\trm -fr *.o\n+\n+clean: mostlyclean\n+\n+distclean: clean\n+\trm -f Makefile Makefile.in POTFILES *.mo *.msg *.cat *.cat.m\n+\n+maintainer-clean: distclean\n+\t@echo \"This command is intended for maintainers to use;\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+\n+distdir = ../$(PACKAGE)-$(VERSION)/$(subdir)\n+dist distdir: update-po $(DISTFILES)\n+\tdists=\"$(DISTFILES)\"; \\\n+\tfor file in $$dists; do \\\n+\t  ln $(srcdir)/$$file $(distdir) 2> /dev/null \\\n+\t    || cp -p $(srcdir)/$$file $(distdir); \\\n+\tdone\n+\n+update-po: Makefile\n+\t$(MAKE) $(PACKAGE).pot\n+\tPATH=`pwd`/../src:$$PATH; \\\n+\tcd $(srcdir); \\\n+\tcatalogs='$(CATALOGS)'; \\\n+\tfor cat in $$catalogs; do \\\n+\t  lang=`echo $$cat | sed 's/$(CATOBJEXT)$$//'`; \\\n+\t  mv $$lang.po $$lang.old.po; \\\n+\t  echo \"$$lang:\"; \\\n+\t  if $(MSGMERGE) $$lang.old.po $(PACKAGE).pot -o $$lang.po; then \\\n+\t    rm -f $$lang.old.po; \\\n+\t  else \\\n+\t    echo \"msgmerge for $$cat failed!\"; \\\n+\t    rm -f $$lang.po; \\\n+\t    mv $$lang.old.po $$lang.po; \\\n+\t  fi; \\\n+\tdone\n+\n+POTFILES: POTFILES.in\n+\t( if test 'x$(srcdir)' != 'x.'; then \\\n+\t    posrcprefix='$(top_srcdir)/'; \\\n+\t  else \\\n+\t    posrcprefix=\"../\"; \\\n+\t  fi; \\\n+\t  sed -e '/^#/d' -e '/^[ \t]*$$/d' \\\n+\t      -e \"s@.*@\t$$posrcprefix& \\\\\\\\@\" \\\n+\t      -e '$$s/\\(.*\\) \\\\/\\1/' < $(srcdir)/POTFILES.in > POTFILES )\n+\n+Makefile: Makefile.in.in ../config.status POTFILES\n+\tcd .. \\\n+\t  && CONFIG_FILES=$(subdir)/$@.in CONFIG_HEADERS= \\\n+\t       $(SHELL) ./config.status\n+\n+# Tell versions [3.59,3.63) of GNU make not to export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "3efaaac8d020a153f68d8eaf13c0fdb1e78a7e46", "filename": "texinfo/po/POTFILES.in", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2FPOTFILES.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2FPOTFILES.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fpo%2FPOTFILES.in?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,20 @@\n+# List of source files containing translatable strings.\n+# The last line must not be a comment.\n+\n+info/doc.c\n+info/echo-area.c\n+info/footnotes.c\n+info/indices.c\n+info/info.c\n+info/infodoc.c\n+info/m-x.c\n+info/makedoc.c\n+info/nodemenu.c\n+info/nodes.h\n+info/session.c\n+info/variables.c\n+info/window.c\n+makeinfo/makeinfo.c\n+makeinfo/multi.c\n+util/install-info.c\n+util/texindex.c"}, {"sha": "8e7d2b04ee09facf9ea850cbae7aadd3e97713cc", "filename": "texinfo/po/cat-id-tbl.c", "status": "added", "additions": 501, "deletions": 0, "changes": 501, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Fcat-id-tbl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Fcat-id-tbl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fpo%2Fcat-id-tbl.c?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d", "patch": "@@ -0,0 +1,501 @@\n+/* Automatically generated by po2tbl.sed from texinfo.pot.  */\n+\n+#if HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#include \"libgettext.h\"\n+\n+const struct _msg_ent _msg_tbl[] = {\n+  {\"\", 1},\n+  {\"Move down to the next line\", 2},\n+  {\"Move up to the previous line\", 3},\n+  {\"Move to the end of the line\", 4},\n+  {\"Move to the start of the line\", 5},\n+  {\"Move forward a character\", 6},\n+  {\"Move backward a character\", 7},\n+  {\"Move forward a word\", 8},\n+  {\"Move backward a word\", 9},\n+  {\"Move forwards or down through node structure\", 10},\n+  {\"Move backwards or up through node structure\", 11},\n+  {\"Scroll forward in this window\", 12},\n+  {\"Scroll backward in this window\", 13},\n+  {\"Move to the start of this node\", 14},\n+  {\"Move to the end of this node\", 15},\n+  {\"Select the next window\", 16},\n+  {\"Select the previous window\", 17},\n+  {\"Split the current window\", 18},\n+  {\"Delete the current window\", 19},\n+  {\"Delete all other windows\", 20},\n+  {\"Scroll the other window\", 21},\n+  {\"Grow (or shrink) this window\", 22},\n+  {\"Divide the available screen space among the visible windows\", 23},\n+  {\"Toggle the state of line wrapping in the current window\", 24},\n+  {\"Select the `Next' node\", 25},\n+  {\"Select the `Prev' node\", 26},\n+  {\"Select the `Up' node\", 27},\n+  {\"Select the last node in this file\", 28},\n+  {\"Select the first node in this file\", 29},\n+  {\"Select the most recently selected node\", 30},\n+  {\"Select the last item in this node's menu\", 31},\n+  {\"Select this menu item\", 32},\n+  {\"Read a menu item and select its node\", 33},\n+  {\"Read a footnote or cross reference and select its node\", 34},\n+  {\"Move to the start of this node's menu\", 35},\n+  {\"Visit as many menu items at once as possible\", 36},\n+  {\"Read a node name and select it\", 37},\n+  {\"Read a manpage reference and select it\", 38},\n+  {\"Select the node `Top' in this file\", 39},\n+  {\"Select the node `(dir)'\", 40},\n+  {\"Kill this node\", 41},\n+  {\"Read the name of a file and select it\", 42},\n+  {\"Pipe the contents of this node through INFO_PRINT_COMMAND\", 43},\n+  {\"Read a string and search for it\", 44},\n+  {\"Search interactively for a string as you type it\", 45},\n+  {\"Move to the previous cross reference\", 46},\n+  {\"Move to the next cross reference\", 47},\n+  {\"Select reference or menu item appearing on this line\", 48},\n+  {\"Cancel current operation\", 49},\n+  {\"Move to the cursor to a specific line of the window\", 50},\n+  {\"Redraw the display\", 51},\n+  {\"Quit using Info\", 52},\n+  {\"Add this digit to the current numeric argument\", 53},\n+  {\"universal-argument\", 54},\n+  {\"Start (or multiply by 4) the current numeric argument\", 55},\n+  {\"Internally used by \\\\[universal-argument]\", 56},\n+  {\"Move to the start of this line\", 57},\n+  {\"Move to the end of this line\", 58},\n+  {\"Delete the character under the cursor\", 59},\n+  {\"Delete the character behind the cursor\", 60},\n+  {\"Cancel or quit operation\", 61},\n+  {\"Accept (or force completion of) this line\", 62},\n+  {\"Insert next character verbatim\", 63},\n+  {\"Insert this character\", 64},\n+  {\"Insert a TAB character\", 65},\n+  {\"Transpose characters at point\", 66},\n+  {\"Yank back the contents of the last kill\", 67},\n+  {\"Yank back a previous kill\", 68},\n+  {\"Kill to the end of the line\", 69},\n+  {\"Kill to the beginning of the line\", 70},\n+  {\"Kill the word following the cursor\", 71},\n+  {\"Kill the word preceding the cursor\", 72},\n+  {\"List possible completions\", 73},\n+  {\"Insert completion\", 74},\n+  {\"Scroll the completions window\", 75},\n+  {\"Display help message\", 76},\n+  {\"Visit Info node `(info)Help'\", 77},\n+  {\"Print documentation for KEY\", 78},\n+  {\"Show what to type to execute a given command\", 79},\n+  {\"Read the name of an Info command and describe it\", 80},\n+  {\"Read a command name in the echo area and execute it\", 81},\n+  {\"Set the height of the displayed window\", 82},\n+  {\"Look up a string in the index for this file\", 83},\n+  {\"\\\n+Go to the next matching index item from the last `\\\\[index-search]' command\", 84},\n+  {\"Grovel all known info file's indices for a string and build a menu\", 85},\n+  {\"Make a window containing a menu of all of the currently visited nodes\", 86},\n+  {\"Select a node which has been previously visited in a visible window\", 87},\n+  {\"Show the footnotes associated with this node in another window\", 88},\n+  {\"Explain the use of a variable\", 89},\n+  {\"Set the value of an Info variable\", 90},\n+  {\"Kill ring is empty\", 91},\n+  {\"Not complete\", 92},\n+  {\"No completions\", 93},\n+  {\"Sole completion\", 94},\n+  {\"There %s %d \", 95},\n+  {\"is\", 96},\n+  {\"are\", 97},\n+  {\"completion%s:\\n\", 98},\n+  {\"Building completions...\", 99},\n+  {\"Footnotes could not be displayed\", 100},\n+  {\"Finding index entries...\", 101},\n+  {\"No indices found.\", 102},\n+  {\"Index entry: \", 103},\n+  {\"No previous index search string.\", 104},\n+  {\"No index entries.\", 105},\n+  {\"No %sindex entries containing \\\"%s\\\".\", 106},\n+  {\"more \", 107},\n+  {\"CAN'T SEE THIS\", 108},\n+  {\"Found \\\"%s\\\" in %s. (`\\\\[next-index-match]' tries to find next.)\", 109},\n+  {\"Scanning indices of \\\"%s\\\"...\", 110},\n+  {\"Index apropos: \", 111},\n+  {\"\\\n+\\n\\\n+* Menu: Nodes whoses indices contain \\\"%s\\\":\\n\", 112},\n+  {\"no entries found\\n\", 113},\n+  {\"There is no menu in this node.\", 114},\n+  {\"There is no menu item \\\"%s\\\" in this node.\", 115},\n+  {\"Unable to find the node referenced by \\\"%s\\\".\", 116},\n+  {\"\\\n+Usage: info [-d dir-path] [-f info-file] [-o output-file] [-n node-name]...\", 117},\n+  {\"\\\n+            [--directory dir-path] [--file info-file] [--node node-name]...\", 118},\n+  {\"            [--help] [--output output-file] [--subnodes] [--version]\", 119},\n+  {\"            [--dribble dribble-file] [--restore from-file]\", 120},\n+  {\"            [menu-selection ...]\", 121},\n+  {\"\\\n+Here is a quick description of Info's options.  For a more complete\\n\\\n+description of how to use Info, type `info info options'.\\n\\\n+\\n\\\n+   --directory DIR              Add DIR to INFOPATH.\\n\\\n+   --dribble FILENAME           Remember user keystrokes in FILENAME.\\n\\\n+   --file FILENAME              Specify Info file to visit.\\n\\\n+   --node NODENAME              Specify nodes in first visited Info file.\\n\\\n+   --output FILENAME            Output selected nodes to FILENAME.\\n\\\n+   --restore FILENAME           Read initial keystrokes from FILENAME.\\n\\\n+   --subnodes                   Recursively output menu items.\\n\\\n+   --help                       Get this help message.\\n\\\n+   --version                    Display Info's version information.\\n\\\n+\\n\\\n+Remaining arguments to Info are treated as the names of menu\\n\\\n+items in the initial node visited.  You can easily move to the\\n\\\n+node of your choice by specifying the menu names which describe\\n\\\n+the path to that node.  For example, `info emacs buffers'.\\n\\\n+\\n\\\n+Email bug reports to bug-texinfo@prep.ai.mit.edu.\", 122},\n+  {\"Basic Commands in Info Windows\", 123},\n+  {\"\\\n+The following commands can only be invoked via M-x:\\n\\\n+\\n\", 124},\n+  {\"--- Use `\\\\[history-node]' or `\\\\[kill-node]' to exit ---\\n\", 125},\n+  {\"Describe key: %s\", 126},\n+  {\"ESC %s is undefined.\", 127},\n+  {\"%s is undefined.\", 128},\n+  {\"%s is defined to %s.\", 129},\n+  {\"Where is command: \", 130},\n+  {\"`%s' is not on any keys\", 131},\n+  {\"%s can only be invoked via %s.\", 132},\n+  {\"%s can be invoked via %s.\", 133},\n+  {\"There is no function named `%s'\", 134},\n+  {\"Describe command: \", 135},\n+  {\"Cannot execute an `echo-area' command here.\", 136},\n+  {\"Set screen height to (%d): \", 137},\n+  {\"\\\n+   Source files groveled to make this file include:\\n\\\n+\\n\", 138},\n+  {\"Couldn't manipulate the file %s.\\n\", 139},\n+  {\"\\\n+\\n\\\n+* Menu:\\n\\\n+  (File)Node                        Lines   Size   Containing File\\n\\\n+  ----------                        -----   ----   ---------------\", 140},\n+  {\"\\\n+Here is the menu of nodes you have recently visited.\\n\\\n+Select one from this menu, or use `\\\\[history-node]' in another window.\\n\", 141},\n+  {\"Select visited node: \", 142},\n+  {\"The reference disappeared! (%s).\", 143},\n+  {\"\\\n+Welcome to Info version %s. \\\"\\\\[get-help-window]\\\" for help, \\\n+\\\"\\\\[menu-item]\\\" for menu item.\", 144},\n+  {\" times\", 145},\n+  {\"%d times\", 146},\n+  {\"No \\\"Next\\\" pointer for this node.\", 147},\n+  {\"Following \\\"Next\\\" node...\", 148},\n+  {\"Next\", 149},\n+  {\"Selecting first menu item...\", 150},\n+  {\"Selecting \\\"Next\\\" node...\", 151},\n+  {\"Up\", 152},\n+  {\"No more nodes.\", 153},\n+  {\"No \\\"Prev\\\" for this node.\", 154},\n+  {\"Moving \\\"Prev\\\" in this window.\", 155},\n+  {\"Prev\", 156},\n+  {\"No \\\"Prev\\\" or \\\"Up\\\" for this node.\", 157},\n+  {\"Moving \\\"Up\\\" in this window.\", 158},\n+  {\"Moving to \\\"Prev\\\"'s last menu item.\", 159},\n+  {\"Cannot delete a permanent window\", 160},\n+  {\"This window has no additional nodes\", 161},\n+  {\"There aren't %d items in this menu.\", 162},\n+  {\"Menu item (%s): \", 163},\n+  {\"Menu item: \", 164},\n+  {\"Follow xref (%s): \", 165},\n+  {\"Follow xref: \", 166},\n+  {\"Goto Node: \", 167},\n+  {\"Get Manpage: \", 168},\n+  {\"Top\", 169},\n+  {\"Kill node (%s): \", 170},\n+  {\"Cannot kill node `%s'\", 171},\n+  {\"Cannot kill the last node\", 172},\n+  {\"Find file: \", 173},\n+  {\"Cannot find \\\"%s\\\".\", 174},\n+  {\"Could not create output file \\\"%s\\\".\", 175},\n+  {\"Done.\", 176},\n+  {\"Writing node \\\"(%s)%s\\\"...\", 177},\n+  {\"Writing node \\\"%s\\\"...\", 178},\n+  {\"Cannot open pipe to \\\"%s\\\".\", 179},\n+  {\"Printing node \\\"(%s)%s\\\"...\", 180},\n+  {\"Printing node \\\"%s\\\"...\", 181},\n+  {\"Searching subfile \\\"%s\\\"...\", 182},\n+  {\"%s for string [%s]: \", 183},\n+  {\"Search backward\", 184},\n+  {\"Search\", 185},\n+  {\"Search failed.\", 186},\n+  {\"I-search backward: \", 187},\n+  {\"I-search: \", 188},\n+  {\"Failing \", 189},\n+  {\"No cross references in this node.\", 190},\n+  {\"Quit\", 191},\n+  {\"Unknown command (%s).\", 192},\n+  {\"\\\"\\\" is invalid\", 193},\n+  {\"\\\"%s\\\" is invalid\", 194},\n+  {\"When \\\"On\\\", footnotes appear and disappear automatically\", 195},\n+  {\"When \\\"On\\\", creating or deleting a window resizes other windows\", 196},\n+  {\"When \\\"On\\\", flash the screen instead of ringing the bell\", 197},\n+  {\"When \\\"On\\\", errors cause the bell to ring\", 198},\n+  {\"When \\\"On\\\", Info garbage collects files which had to be uncompressed\", 199},\n+  {\"When \\\"On\\\", the portion of the matched search string is highlighted\", 200},\n+  {\"Controls what happens when scrolling is requested at the end of a node\", 201},\n+  {\"The number lines to scroll when the cursor moves out of the window\", 202},\n+  {\"When \\\"On\\\", Info accepts and displays ISO Latin characters\", 203},\n+  {\"Describe variable: \", 204},\n+  {\"Set variable: \", 205},\n+  {\"Set %s to value (%d): \", 206},\n+  {\"Set %s to value (%s): \", 207},\n+  {\"--*** Tags out of Date ***\", 208},\n+  {\"-----Info: (), lines ----, \", 209},\n+  {\"-%s---Info: %s, %d lines --%s--\", 210},\n+  {\"-%s%s-Info: (%s)%s, %d lines --%s--\", 211},\n+  {\" Subfile: %s\", 212},\n+  {\"%s:%d: warning: \", 213},\n+  {\"Too many errors!  Gave up.\\n\", 214},\n+  {\"%s: %s arg must be numeric, not `%s'.\\n\", 215},\n+  {\"Couldn't open macro expansion output `%s'\", 216},\n+  {\"Cannot specify more than one macro expansion output\", 217},\n+  {\"%s: --paragraph-indent arg must be numeric/`none'/`asis', not `%s'.\\n\", 218},\n+  {\"%s: --footnote-style arg must be `separate' or `end', not `%s'.\\n\", 219},\n+  {\"\\\n+Copyright (C) 1996 Free Software Foundation, Inc.\\n\\\n+There is NO warranty.  You may redistribute this software\\n\\\n+under the terms of the GNU General Public License.\\n\\\n+For more information about these matters, see the files named COPYING.\", 220},\n+  {\"%s: missing file argument.\\n\", 221},\n+  {\"makeinfo (GNU %s %s) %d.%d\\n\", 222},\n+  {\"Try `%s --help' for more information.\\n\", 223},\n+  {\"\\\n+Usage: %s [OPTION]... TEXINFO-FILE...\\n\\\n+\\n\\\n+Translate Texinfo source documentation to a format suitable for reading\\n\\\n+with GNU Info.\\n\\\n+\\n\\\n+Options:\\n\\\n+-D VAR                 define a variable, as with @set.\\n\\\n+-E MACRO-OFILE         process macros only, output texinfo source.\\n\\\n+-I DIR                 append DIR to the @include directory search path.\\n\\\n+-P DIR                 prepend DIR to the @include directory search path.\\n\\\n+-U VAR                 undefine a variable, as with @clear.\\n\\\n+--error-limit NUM      quit after NUM errors (default %d).\\n\\\n+--fill-column NUM      break lines at NUM characters (default %d).\\n\\\n+--footnote-style STYLE output footnotes according to STYLE:\\n\\\n+                         `separate' to place footnotes in their own node,\\n\\\n+                         `end' to place the footnotes at the end of\\n\\\n+                         the node in which they are defined (the default).\\n\\\n+--force                preserve output even if errors.\\n\\\n+--help                 display this help and exit.\\n\\\n+--no-validate          suppress node cross-reference validation.\\n\\\n+--no-warn              suppress warnings (but not errors).\\n\\\n+--no-split             suppress splitting of large files.\\n\\\n+--no-headers           suppress node separators and Node: Foo headers.\\n\\\n+--output FILE, -o FILE output to FILE, and ignore any @setfilename.\\n\\\n+--paragraph-indent VAL indent paragraphs with VAL spaces (default %d).\\n\\\n+                         if VAL is `none', do not indent; if VAL is `asis',\\n\\\n+                         preserve any existing indentation.\\n\\\n+--reference-limit NUM  complain about at most NUM references (default %d).\\n\\\n+--verbose              report about what is being done.\\n\\\n+--version              display version information and exit.\\n\\\n+\\n\\\n+Email bug reports to bug-texinfo@prep.ai.mit.edu.\\n\", 224},\n+  {\"%s: getwd: %s, %s\\n\", 225},\n+  {\"Expected `%s'\", 226},\n+  {\"No `%s' found in `%s'\", 227},\n+  {\"%s: Skipping macro expansion to stdout as Info output is going there.\\n\", 228},\n+  {\"Making %s file `%s' from `%s'.\\n\", 229},\n+  {\"This is Info file %s, produced by Makeinfo version %d.%d\", 230},\n+  {\" from the input file %s.\\n\", 231},\n+  {\"\\\n+%s: Removing macro output file `%s' due to errors; use --force to preserve.\\n\", 232},\n+  {\"%s: Removing output file `%s' due to errors; use --force to preserve.\\n\", 233},\n+  {\"Misplaced %c\", 234},\n+  {\"Unknown command `%s'\", 235},\n+  {\"NO_NAME!\", 236},\n+  {\"%c%s expected `{...}'\", 237},\n+  {\"Unmatched }\", 238},\n+  {\"%c%s missing close brace\", 239},\n+  {\"Broken-Type in insertion_type_pname\", 240},\n+  {\"Enumeration stack overflow\", 241},\n+  {\"lettering overflow, restarting at %c\", 242},\n+  {\"* Menu:\\n\", 243},\n+  {\"%s requires an argument: the formatter for %citem\", 244},\n+  {\"`%cend' expected `%s', but saw `%s'\", 245},\n+  {\"No matching `%cend %s'\", 246},\n+  {\"How did @%s end up in cm_special_char?\\n\", 247},\n+  {\"%c%s expects `i' or `j' as argument, not `%c'\", 248},\n+  {\"%c%s expects a single character `i' or `j' as argument\", 249},\n+  {\"January\", 250},\n+  {\"February\", 251},\n+  {\"March\", 252},\n+  {\"April\", 253},\n+  {\"May\", 254},\n+  {\"June\", 255},\n+  {\"July\", 256},\n+  {\"August\", 257},\n+  {\"September\", 258},\n+  {\"October\", 259},\n+  {\"November\", 260},\n+  {\"December\", 261},\n+  {\"%d %s %d\", 262},\n+  {\"%c%s expects a single character as an argument\", 263},\n+  {\"%c%s is obsolete\", 264},\n+  {\"There already is a node having %ctop as a section\", 265},\n+  {\"Here is the %ctop node\", 266},\n+  {\"%ctop used before %cnode, defaulting to %s\", 267},\n+  {\"%c%s is obsolete; use %c%s instead\", 268},\n+  {\"Node `%s' multiply defined (line %d is first definition at)\", 269},\n+  {\"Formatting node %s...\\n\", 270},\n+  {\"Node `%s' requires a sectioning command (e.g. %c%s)\", 271},\n+  {\"Node `%s''s Next field not pointed back to\", 272},\n+  {\"This node (`%s') is the one with the bad `Prev'\", 273},\n+  {\"Node `%s's Prev field not pointed back to\", 274},\n+  {\"This node (`%s') has the bad Next\", 275},\n+  {\"Node `%s' missing Up field\", 276},\n+  {\"`%s' has an Up field of `%s', but `%s' has no menu item for `%s'\", 277},\n+  {\"node `%s' has been referenced %d times\", 278},\n+  {\"unreferenced node `%s'\", 279},\n+  {\"%s reference to nonexistent node `%s'\", 280},\n+  {\"%cmenu seen before first node\", 281},\n+  {\"creating `Top' node\", 282},\n+  {\"`.' or `,' must follow cross reference, not %c\", 283},\n+  {\"@image file `%s' unreadable: %s\", 284},\n+  {\"@image missing filename argument\", 285},\n+  {\"%s requires letter or digit\", 286},\n+  {\"Unmatched `%c%s'\", 287},\n+  {\"`%c%s' needs something after it\", 288},\n+  {\"Bad argument to `%s', `%s', using `%s'\", 289},\n+  {\"{No Value For \\\"%s\\\"}\", 290},\n+  {\"%c%s requires a name\", 291},\n+  {\"Reached eof before matching @end %s\", 292},\n+  {\"The `%c%s' command is meaningless within a `@%s' block\", 293},\n+  {\"%citemx is not meaningful inside of a `%s' block\", 294},\n+  {\"%c%s found outside of an insertion block\", 295},\n+  {\"Missing `}' in %cdef arg\", 296},\n+  {\"Function\", 297},\n+  {\"Macro\", 298},\n+  {\"Special Form\", 299},\n+  {\"Variable\", 300},\n+  {\"User Option\", 301},\n+  {\"Instance Variable\", 302},\n+  {\"Method\", 303},\n+  {\"Must be in a `%s' insertion in order to use `%s'x\", 304},\n+  {\"%csp requires a positive numeric argument\", 305},\n+  {\"asis\", 306},\n+  {\"none\", 307},\n+  {\"Bad argument to %c%s\", 308},\n+  {\"Unknown index `%s'\", 309},\n+  {\"Index `%s' already exists\", 310},\n+  {\"Unknown index `%s' and/or `%s' in @synindex\", 311},\n+  {\"Unknown index `%s' in @printindex\", 312},\n+  {\"\\\n+* Menu:\\n\\\n+\\n\", 313},\n+  {\"`%c%s' needs an argument `{...}', not just `%s'\", 314},\n+  {\"No closing brace for footnote `%s'\", 315},\n+  {\"Footnote defined without parent node\", 316},\n+  {\"-Footnotes\", 317},\n+  {\"\\\n+---------- Footnotes ----------\\n\\\n+\\n\", 318},\n+  {\"macro `%s' previously defined\", 319},\n+  {\"here is the previous definition of `%s'\", 320},\n+  {\"Macro `%s' called with too many args\", 321},\n+  {\"%cend macro not found\", 322},\n+  {\"%cquote-arg only useful when the macro takes a single argument\", 323},\n+  {\"ignoring stray text `%s' after @multitable\", 324},\n+  {\"Too many columns in multitable item (max %d)\", 325},\n+  {\"multitable item not in active multitable\", 326},\n+  {\"Cannot select column #%d in multitable\", 327},\n+  {\"ignoring @tab outside of multitable\", 328},\n+  {\"** Multicolumn output from last row:\\n\", 329},\n+  {\"* column #%d: output = %s\\n\", 330},\n+  {\"virtual memory exhausted\", 331},\n+  {\"%s: warning: \", 332},\n+  {\" for %s\", 333},\n+  {\"\\tTry `%s --help' for a complete list of options.\\n\", 334},\n+  {\"\\\n+%s [OPTION]... [INFO-FILE [DIR-FILE]]\\n\\\n+  Install INFO-FILE in the Info directory file DIR-FILE.\\n\\\n+\\n\\\n+Options:\\n\\\n+--delete          Delete existing entries in INFO-FILE;\\n\\\n+                    don't insert any new entries.\\n\\\n+--dir-file=NAME   Specify file name of Info directory file.\\n\\\n+                    This is equivalent to using the DIR-FILE argument.\\n\\\n+--entry=TEXT      Insert TEXT as an Info directory entry.\\n\\\n+                    TEXT should have the form of an Info menu item line\\n\\\n+                    plus zero or more extra lines starting with whitespace.\\n\\\n+                    If you specify more than one entry, they are all added.\\n\\\n+                    If you don't specify any entries, they are determined\\n\\\n+                    from information in the Info file itself.\\n\\\n+--help            Display this help and exit.\\n\\\n+--info-file=FILE  Specify Info file to install in the directory.\\n\\\n+                    This is equivalent to using the INFO-FILE argument.\\n\\\n+--info-dir=DIR    Same as --dir-file=DIR/dir.\\n\\\n+--item=TEXT       Same as --entry TEXT.\\n\\\n+                    An Info directory entry is actually a menu item.\\n\\\n+--quiet           Suppress warnings.\\n\\\n+--remove          Same as --delete.\\n\\\n+--section=SEC     Put this file's entries in section SEC of the directory.\\n\\\n+                    If you specify more than one section, all the entries\\n\\\n+                    are added in each of the sections.\\n\\\n+                    If you don't specify any sections, they are determined\\n\\\n+                    from information in the Info file itself.\\n\\\n+--version         Display version information and exit.\\n\\\n+\\n\\\n+Email bug reports to bug-texinfo@prep.ai.mit.edu.\\n\", 335},\n+  {\"\\\n+This is the file .../info/dir, which contains the\\n\\\n+topmost node of the Info hierarchy, called (dir)Top.\\n\\\n+The first time you invoke Info you start off looking at this node.\\n\\\n+\u001f\\n\\\n+File: dir       Node: Top       This is the top of the INFO tree\\n\\\n+\\n\\\n+  This (the Directory node) gives a menu of major topics.\\n\\\n+  Typing \\\"q\\\" exits, \\\"?\\\" lists all Info commands, \\\"d\\\" returns here,\\n\\\n+  \\\"h\\\" gives a primer for first-timers,\\n\\\n+  \\\"mEmacs<Return>\\\" visits the Emacs manual, etc.\\n\\\n+\\n\\\n+  In Emacs, you can click mouse button 2 on a menu item or cross reference\\n\\\n+  to select it.\\n\\\n+\\n\\\n+* Menu:\\n\", 336},\n+  {\"%s: could not read (%s) and could not create (%s)\\n\", 337},\n+  {\"%s: Specify the Info directory only once.\\n\", 338},\n+  {\"%s: Specify the Info file only once.\\n\", 339},\n+  {\"install-info (GNU %s) %s\\n\", 340},\n+  {\"excess command line argument `%s'\", 341},\n+  {\"No input file specified; try --help for more information.\", 342},\n+  {\"No dir file specified; try --help for more information.\", 343},\n+  {\"START-INFO-DIR-ENTRY without matching END-INFO-DIR-ENTRY\", 344},\n+  {\"END-INFO-DIR-ENTRY without matching START-INFO-DIR-ENTRY\", 345},\n+  {\"no info dir entry in `%s'\", 346},\n+  {\"menu item `%s' already exists, for file `%s'\", 347},\n+  {\"no entries found for `%s'; nothing deleted\", 348},\n+  {\"keep temporary files around after processing\", 349},\n+  {\"do not keep temporary files around after processing (default)\", 350},\n+  {\"send output to FILE\", 351},\n+  {\"display version information and exit\", 352},\n+  {\"display this help and exit\", 353},\n+  {\"Usage: %s [OPTION]... FILE...\\n\", 354},\n+  {\"Generate a sorted index for each TeX output FILE.\\n\", 355},\n+  {\"Usually FILE... is `foo.??' for a document `foo.texi'.\\n\", 356},\n+  {\"\\\n+\\n\\\n+Options:\\n\", 357},\n+  {\"\\\n+\\n\\\n+Email bug reports to bug-texinfo@prep.ai.mit.edu.\", 358},\n+  {\"texindex (GNU %s %s) 2.1\\n\", 359},\n+  {\"%s: not a texinfo index file\", 360},\n+  {\"failure reopening %s\", 361},\n+  {\"entry %s follows an entry with a secondary name\", 362},\n+  {\"%s; for file `%s'.\\n\", 363},\n+  {\"Virtual memory exhausted in %s ()!  Needed %d bytes.\", 364},\n+};\n+"}, {"sha": "b99834b5e5c804b5aed0bee9d78565524a4d9a9d", "filename": "texinfo/po/de.gmo", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Fde.gmo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Fde.gmo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fpo%2Fde.gmo?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d"}, {"sha": "444ea5703c79a8e7838cb1cf95aacc2883c06487", "filename": "texinfo/po/de.po", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Fde.po", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Fde.po", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fpo%2Fde.po?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d"}, {"sha": "1b6caa1658f3d3acf9df62f6dda617e35c1345d0", "filename": "texinfo/po/fr.gmo", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Ffr.gmo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Ffr.gmo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fpo%2Ffr.gmo?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d"}, {"sha": "adb60a772f237e59154f79d68b6362be35b327ea", "filename": "texinfo/po/fr.po", "status": "added", "additions": 2445, "deletions": 0, "changes": 2445, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Ffr.po", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Ffr.po", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fpo%2Ffr.po?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d"}, {"sha": "9788f70238c91894045d22366fa941580826c3c1", "filename": "texinfo/po/stamp-cat-id", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Fstamp-cat-id", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Fstamp-cat-id", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fpo%2Fstamp-cat-id?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d"}, {"sha": "503c3bf949de8617afb96b4f6f0d5e0eeaaf3811", "filename": "texinfo/po/texinfo.pot", "status": "added", "additions": 1832, "deletions": 0, "changes": 1832, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Ftexinfo.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fpo%2Ftexinfo.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fpo%2Ftexinfo.pot?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d"}, {"sha": "9788f70238c91894045d22366fa941580826c3c1", "filename": "texinfo/stamp-h.in", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fstamp-h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Fstamp-h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Fstamp-h.in?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d"}, {"sha": "d1f973e2d8bd6e2534246cb803009217b3f69175", "filename": "texinfo/util/Makefile.am", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Futil%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Futil%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Futil%2FMakefile.am?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d"}, {"sha": "b1ce44ca9affc06f268b87666873b77835ed5fd1", "filename": "texinfo/util/README", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Futil%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Futil%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Futil%2FREADME?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d"}, {"sha": "d946bceb511aab6378a9a66658954878af969979", "filename": "texinfo/util/update-info", "status": "added", "additions": 875, "deletions": 0, "changes": 875, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Futil%2Fupdate-info", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d/texinfo%2Futil%2Fupdate-info", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/texinfo%2Futil%2Fupdate-info?ref=1eb3e8442f8c549c9b2ed21ca75eb7fb12b10b0d"}]}