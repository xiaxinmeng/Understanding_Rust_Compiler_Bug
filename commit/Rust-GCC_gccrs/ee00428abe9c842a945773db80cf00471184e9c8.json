{"sha": "ee00428abe9c842a945773db80cf00471184e9c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUwMDQyOGFiZTljODQyYTk0NTc3M2RiODBjZjAwNDcxMTg0ZTljOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-17T08:51:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-17T08:51:43Z"}, "message": "[multiple changes]\n\n2009-04-17  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.h, argv.c (__gnat_init_args): New routine used to initialize\n\tcommand line arguments.\n\n\t* bindgen.adb: Call __gnat_init_args instead of simple assignments of\n\targc, argv and envp parameters.\n\n\t* init.c: Fix minor typo and style fix.\n\n2009-04-17  Nicolas Setton  <setton@adacore.com>\n\n\t* link.c: Add darwin section\n\nFrom-SVN: r146224", "tree": {"sha": "d2d00eb089777564d8460482a6172c033e79d9df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2d00eb089777564d8460482a6172c033e79d9df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee00428abe9c842a945773db80cf00471184e9c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee00428abe9c842a945773db80cf00471184e9c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee00428abe9c842a945773db80cf00471184e9c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee00428abe9c842a945773db80cf00471184e9c8/comments", "author": null, "committer": null, "parents": [{"sha": "d23a572fca4b29667c9758192d769ff5e34efe33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23a572fca4b29667c9758192d769ff5e34efe33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d23a572fca4b29667c9758192d769ff5e34efe33"}], "stats": {"total": 116, "additions": 104, "deletions": 12}, "files": [{"sha": "b6f23cda79f2f0e6783c4effebc40aaec92bd27c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee00428abe9c842a945773db80cf00471184e9c8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee00428abe9c842a945773db80cf00471184e9c8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ee00428abe9c842a945773db80cf00471184e9c8", "patch": "@@ -1,3 +1,17 @@\n+2009-04-17  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.h, argv.c (__gnat_init_args): New routine used to initialize\n+\tcommand line arguments.\n+\n+\t* bindgen.adb: Call __gnat_init_args instead of simple assignments of\n+\targc, argv and envp parameters.\n+\n+\t* init.c: Fix minor typo and style fix.\n+\n+2009-04-17  Nicolas Setton  <setton@adacore.com>\n+\n+\t* link.c: Add darwin section\n+\n 2009-04-16  Robert Dewar  <dewar@adacore.com>\n \n \t* g-pehage.adb: Minor reformatting"}, {"sha": "1501e9968c716c1ccd57925c235a786c63c38333", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee00428abe9c842a945773db80cf00471184e9c8/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee00428abe9c842a945773db80cf00471184e9c8/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=ee00428abe9c842a945773db80cf00471184e9c8", "patch": "@@ -142,6 +142,7 @@ extern FILE  *__gnat_constant_stdin\t  \t   (void);\n extern FILE  *__gnat_constant_stdout\t  \t   (void);\n extern char  *__gnat_full_name\t\t  \t   (char *, char *);\n \n+extern void   __gnat_init_args                     (int, char **, char **);\n extern int    __gnat_arg_count\t\t\t   (void);\n extern int    __gnat_len_arg\t\t\t   (int);\n extern void   __gnat_fill_arg\t\t\t   (char *, int);"}, {"sha": "6420967df5615bc8101f7288c3631ecc4976a110", "filename": "gcc/ada/argv.c", "status": "modified", "additions": 48, "deletions": 4, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee00428abe9c842a945773db80cf00471184e9c8/gcc%2Fada%2Fargv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee00428abe9c842a945773db80cf00471184e9c8/gcc%2Fada%2Fargv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fargv.c?ref=ee00428abe9c842a945773db80cf00471184e9c8", "patch": "@@ -46,29 +46,73 @@\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n #include <sys/stat.h>\n+/* We don't have libiberty, so use malloc.  */\n+#define xmalloc(S) malloc (S)\n #else\n #include \"config.h\"\n #include \"system.h\"\n #endif\n \n-#include \"adaint.h\"\n-\n /* argc and argv of the main program are saved under gnat_argc and gnat_argv,\n    envp of the main program is saved under gnat_envp.  */\n \n int gnat_argc = 0;\n-const char **gnat_argv = (const char **) 0;\n+char **gnat_argv = (char **) 0;\n const char **gnat_envp = (const char **) 0;\n \n #if defined (_WIN32) && !defined (RTX)\n /* Note that on Windows environment the environ point to a buffer that could\n    be reallocated if needed. It means that gnat_envp needs to be updated\n-   before using gnat_envp to point to the right environment space */\n+   before using gnat_envp to point to the right environment space. */\n+#include \"mingw32.h\"\n+#include <windows.h>\n #include <stdlib.h>\n /* for the environ variable definition */\n #define gnat_envp (environ)\n #endif\n \n+#include \"adaint.h\"\n+\n+void\n+__gnat_init_args (int argc, char **argv ATTRIBUTE_UNUSED, char **envp)\n+{\n+#if defined (_WIN32) && ! defined (__vxworks) && ! defined (CROSS_COMPILE)\n+  char arg_utf8[MAX_PATH];\n+  LPWSTR *wargv;\n+  int wargc;\n+  int k;\n+\n+  wargv = CommandLineToArgvW (GetCommandLineW(), &wargc);\n+\n+  if (wargv == NULL)\n+    {\n+      /* CommandLineToArgvW was not successful, use standard argc/argv. */\n+      gnat_argv = argv;\n+      gnat_argc = argc;\n+    }\n+  else\n+    {\n+      /* Set gnat_argv with arguments encoded in UTF-8. */\n+      gnat_argv = (char **) xmalloc ((wargc + 1) * sizeof (char *));\n+\n+      for (k=0; k<wargc; k++)\n+\t{\n+\t  WS2SU (arg_utf8, wargv[k], MAX_PATH);\n+\t  gnat_argv[k] = (char *) xmalloc (strlen (arg_utf8) + 1);\n+\t  strcpy (gnat_argv[k], arg_utf8);\n+\t}\n+\n+      LocalFree (wargv);\n+      gnat_argc = wargc;\n+    }\n+#else\n+  gnat_argv = argv;\n+  gnat_argc = argc;\n+#endif\n+\n+  gnat_envp = envp;\n+}\n+\n int\n __gnat_arg_count (void)\n {"}, {"sha": "ef90c6c10a1e3a04f4569432246b4c8104df4fe7", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 31, "deletions": 6, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee00428abe9c842a945773db80cf00471184e9c8/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee00428abe9c842a945773db80cf00471184e9c8/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=ee00428abe9c842a945773db80cf00471184e9c8", "patch": "@@ -1456,6 +1456,17 @@ package body Bindgen is\n \n          WBI (\"   is\");\n \n+         --  ??? the following code needs commenting\n+\n+         if not Configurable_Run_Time_Mode then\n+            WBI (\"      procedure Init_Args\");\n+            WBI (\"        (argc : Integer;\");\n+            WBI (\"         argv : System.Address;\");\n+            WBI (\"         envp : System.Address);\");\n+            WBI (\"      pragma Import (C, Init_Args, \"\"__gnat_init_args\"\");\");\n+            WBI (\"\");\n+         end if;\n+\n       else\n          if Exit_Status_Supported_On_Target then\n             Set_String (\" return Integer is\");\n@@ -1569,9 +1580,16 @@ package body Bindgen is\n       --  Acquire command line arguments if present on target\n \n       if Command_Line_Args_On_Target then\n-         WBI (\"      gnat_argc := argc;\");\n-         WBI (\"      gnat_argv := argv;\");\n-         WBI (\"      gnat_envp := envp;\");\n+         if Configurable_Run_Time_Mode then\n+            WBI (\"      gnat_argc := argc;\");\n+            WBI (\"      gnat_argv := argv;\");\n+            WBI (\"      gnat_envp := envp;\");\n+\n+         --  ??? this else needs a comment\n+         else\n+            WBI (\"      Init_Args (argc, argv, envp);\");\n+         end if;\n+\n          WBI (\"\");\n \n       --  If configurable run time and no command line args, then nothing\n@@ -1732,9 +1750,16 @@ package body Bindgen is\n       --  arguments are present on target\n \n       if Command_Line_Args_On_Target then\n-         WBI (\"   gnat_argc = argc;\");\n-         WBI (\"   gnat_argv = argv;\");\n-         WBI (\"   gnat_envp = envp;\");\n+         if Configurable_Run_Time_Mode then\n+            WBI (\"   gnat_argc = argc;\");\n+            WBI (\"   gnat_argv = argv;\");\n+            WBI (\"   gnat_envp = envp;\");\n+\n+         --  ??? this call must be commented\n+         else\n+            WBI (\"   __gnat_init_args (argc, argv, envp);\");\n+         end if;\n+\n          WBI (\" \");\n \n       --  If configurable run-time, then nothing to do, since in this case"}, {"sha": "7ac5a26ee4575268b65e1acb85c3fa4a9cc4267e", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee00428abe9c842a945773db80cf00471184e9c8/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee00428abe9c842a945773db80cf00471184e9c8/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=ee00428abe9c842a945773db80cf00471184e9c8", "patch": "@@ -53,7 +53,7 @@\n #include \"tsystem.h\"\n #include <sys/stat.h>\n \n-/* We don't have libiberty, so us malloc.  */\n+/* We don't have libiberty, so use malloc.  */\n #define xmalloc(S) malloc (S)\n #else\n #include \"config.h\"\n@@ -1964,7 +1964,6 @@ __gnat_init_float (void)\n    checking is not used.  */\n void (*__gnat_set_stack_limit_hook)(void) = (void (*)(void))0;\n \n-\n /******************/\n /* NetBSD Section */\n /******************/"}, {"sha": "e1d86fc6f1060802f4df027c85785cbb87daa517", "filename": "gcc/ada/link.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee00428abe9c842a945773db80cf00471184e9c8/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee00428abe9c842a945773db80cf00471184e9c8/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=ee00428abe9c842a945773db80cf00471184e9c8", "patch": "@@ -152,6 +152,15 @@ unsigned char __gnat_objlist_file_supported = 1;\n unsigned char __gnat_using_gnu_linker = 1;\n const char *__gnat_object_library_extension = \".a\";\n \n+#elif defined (__APPLE__)\n+const char *__gnat_object_file_option = \"\";\n+const char *__gnat_run_path_option = \"-Wl,-rpath,\";\n+char __gnat_shared_libgnat_default = STATIC;\n+int __gnat_link_max = 262144;\n+unsigned char __gnat_objlist_file_supported = 1;\n+unsigned char __gnat_using_gnu_linker = 1;\n+const char *__gnat_object_library_extension = \".a\";\n+\n #elif defined (linux) || defined(__GLIBC__)\n const char *__gnat_object_file_option = \"\";\n const char *__gnat_run_path_option = \"-Wl,-rpath,\";"}]}