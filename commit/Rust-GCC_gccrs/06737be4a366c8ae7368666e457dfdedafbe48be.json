{"sha": "06737be4a366c8ae7368666e457dfdedafbe48be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY3MzdiZTRhMzY2YzhhZTczNjg2NjZlNDU3ZGZkZWRhZmJlNDhiZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-08-14T15:49:57Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-08-14T15:49:57Z"}, "message": "Fix varargs/stdarg on PowerPC Windows NT\n\nFrom-SVN: r12637", "tree": {"sha": "ab97906eed27fd1969c5a54489a2ceed357883a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab97906eed27fd1969c5a54489a2ceed357883a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06737be4a366c8ae7368666e457dfdedafbe48be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06737be4a366c8ae7368666e457dfdedafbe48be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06737be4a366c8ae7368666e457dfdedafbe48be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06737be4a366c8ae7368666e457dfdedafbe48be/comments", "author": null, "committer": null, "parents": [{"sha": "c7c27cd3e267542ca6afbe5090d5a410bccfd0b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7c27cd3e267542ca6afbe5090d5a410bccfd0b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7c27cd3e267542ca6afbe5090d5a410bccfd0b2"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "588bf66d163b613530e49242c905271634ee3b4a", "filename": "gcc/ginclude/stdarg.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06737be4a366c8ae7368666e457dfdedafbe48be/gcc%2Fginclude%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06737be4a366c8ae7368666e457dfdedafbe48be/gcc%2Fginclude%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstdarg.h?ref=06737be4a366c8ae7368666e457dfdedafbe48be", "patch": "@@ -38,7 +38,7 @@\n #if defined (__H8300__) || defined (__H8300H__) || defined (__H8300S__)\n #include <va-h8300.h>\n #else\n-#if defined (__PPC__) && defined (_CALL_SYSV)\n+#if defined (__PPC__) && (defined (_CALL_SYSV) || defined (__WIN32__))\n #include <va-ppc.h>\n #else\n #ifdef __sh__"}, {"sha": "e502c2c912cb7724d21f68fa2f6d44468b83b5cd", "filename": "gcc/ginclude/va-ppc.h", "status": "modified", "additions": 56, "deletions": 1, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06737be4a366c8ae7368666e457dfdedafbe48be/gcc%2Fginclude%2Fva-ppc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06737be4a366c8ae7368666e457dfdedafbe48be/gcc%2Fginclude%2Fva-ppc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-ppc.h?ref=06737be4a366c8ae7368666e457dfdedafbe48be", "patch": "@@ -1,5 +1,7 @@\n-/* GNU C varargs support for the PowerPC with V.4 calling sequence */\n+/* GNU C varargs support for the PowerPC with either the V.4 or Windows NT calling sequences */\n \n+#ifndef __WIN32__\n+/* System V.4 support */\n /* Define __gnuc_va_list.  */\n \n #ifndef __GNUC_VA_LIST\n@@ -167,3 +169,56 @@ __extension__ (*({\t\t\t\t\t\t\t\\\n #define va_end(AP)\t((void)0)\n \n #endif /* defined (_STDARG_H) || defined (_VARARGS_H) */\n+\n+\f\n+#else\n+/* Windows NT */\n+/* Define __gnuc_va_list.  */\n+\n+#ifndef __GNUC_VA_LIST\n+#define __GNUC_VA_LIST\n+typedef char *__gnuc_va_list;\n+#endif /* not __GNUC_VA_LIST */\n+\n+/* If this is for internal libc use, don't define anything but\n+   __gnuc_va_list.  */\n+#if defined (_STDARG_H) || defined (_VARARGS_H)\n+\n+#define __va_start_common(AP, LASTARG, FAKE)\t\t\t\t\\\n+  ((__builtin_saveregs ()), ((AP) = ((char *) &LASTARG) + __va_rounded_size (AP)), 0)\n+\n+#ifdef _STDARG_H /* stdarg.h support */\n+\n+/* Calling __builtin_next_arg gives the proper error message if LASTARG is\n+   not indeed the last argument.  */\n+#define va_start(AP,LASTARG)\t\t\t\t\t\t\\\n+  (__builtin_saveregs (),\t\t\t\t\t\t\\\n+   (AP) = __builtin_next_arg (LASTARG),\t\t\t\t\t\\\n+   0)\n+\n+#else /* varargs.h support */\n+\n+#define va_start(AP)\t\t\t\t\t\t\t\\\n+  (__builtin_saveregs (),\t\t\t\t\t\t\\\n+   (AP) = __builtin_next_arg (__va_1st_arg) - sizeof (int),\t\t\\\n+   0)\n+\n+#define va_alist __va_1st_arg\n+#define va_dcl register int __va_1st_arg; ...\n+\n+#endif /* _STDARG_H */\n+\n+#define __va_rounded_size(TYPE) ((sizeof (TYPE) + 3) & ~3)\n+#define __va_align(AP, TYPE)\t\t\t\t\t\t\\\n+     ((((unsigned long)(AP)) + ((sizeof (TYPE) >= 8) ? 7 : 3))\t\t\\\n+      & ~((sizeof (TYPE) >= 8) ? 7 : 3))\n+\n+#define va_arg(AP,TYPE)\t\t\t\t\t\t\t\\\n+( *(TYPE *)((AP = (char *) (__va_align(AP, TYPE)\t\t\t\\\n+\t\t\t    + __va_rounded_size(TYPE)))\t\t\t\\\n+\t    - __va_rounded_size(TYPE)))\n+\n+#define va_end(AP)\t((void)0)\n+\n+#endif /* defined (_STDARG_H) || defined (_VARARGS_H) */\n+#endif /* Windows NT */"}, {"sha": "06ba8e89ec32ad0cfc96dc0269d0dead3c110ad7", "filename": "gcc/ginclude/varargs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06737be4a366c8ae7368666e457dfdedafbe48be/gcc%2Fginclude%2Fvarargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06737be4a366c8ae7368666e457dfdedafbe48be/gcc%2Fginclude%2Fvarargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fvarargs.h?ref=06737be4a366c8ae7368666e457dfdedafbe48be", "patch": "@@ -36,7 +36,7 @@\n #if defined (__H8300__) || defined (__H8300H__) || defined (__H8300S__)\n #include <va-h8300.h>\n #else\n-#if defined (__PPC__) && defined (_CALL_SYSV)\n+#if defined (__PPC__) && (defined (_CALL_SYSV) || defined (__WIN32__))\n #include <va-ppc.h>\n #else\n #ifdef __sh__"}]}