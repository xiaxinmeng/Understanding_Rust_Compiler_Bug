{"sha": "d072812eb51d021d887430459b60a5b627eae7f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA3MjgxMmViNTFkMDIxZDg4NzQzMDQ1OWI2MGE1YjYyN2VhZTdmMw==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2012-10-10T10:24:50Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2012-10-10T10:24:50Z"}, "message": "Update g++.dg/cpp0x/gen-attrs-{8,36,37}.C as c++11 attributes to types are ignored\n\nThe current implementation of C++11 attributes forbids them from being\napplied to a type unless the type is being declared.  I forgot to\nadjust g++.dg/cpp0x/gen-attrs-{8,36,37}.C that was being run only on\nia32.\n\nFixed thus, tested on i386-unknown-linux-gnu and\nx86_64-unknown-linux-gnu against trunk.\n\ngcc/testsuite/\n\n\t* g++.dg/cpp0x/gen-attrs-8.C: Update the test to reflect the fact\n\tthat c++11 attributes to types are ignored for now.\n\t* g++.dg/cpp0x/gen-attrs-36.C: Likewise.\n\t* g++.dg/cpp0x/gen-attrs-37.C: Likewise\n\nFrom-SVN: r192300", "tree": {"sha": "0a54832ae19de1be2f0e1b368cfaa2c6e22445a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a54832ae19de1be2f0e1b368cfaa2c6e22445a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d072812eb51d021d887430459b60a5b627eae7f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d072812eb51d021d887430459b60a5b627eae7f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d072812eb51d021d887430459b60a5b627eae7f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d072812eb51d021d887430459b60a5b627eae7f3/comments", "author": null, "committer": null, "parents": [{"sha": "d32350e7a5eb5d31aaa1643dbc9db569fbc59b49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d32350e7a5eb5d31aaa1643dbc9db569fbc59b49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d32350e7a5eb5d31aaa1643dbc9db569fbc59b49"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "debe420ae8a563e43d1fe80341d01ad7cac0bfd6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d072812eb51d021d887430459b60a5b627eae7f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d072812eb51d021d887430459b60a5b627eae7f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d072812eb51d021d887430459b60a5b627eae7f3", "patch": "@@ -1,3 +1,10 @@\n+2012-10-10  Dodji Seketeli  <dodji@redhat.com>\n+\n+\t* g++.dg/cpp0x/gen-attrs-8.C: Update the test to reflect the fact\n+\tthat c++11 attributes to types are ignored for now.\n+\t* g++.dg/cpp0x/gen-attrs-36.C: Likewise.\n+\t* g++.dg/cpp0x/gen-attrs-37.C: Likewise\n+\n 2012-10-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/53741"}, {"sha": "0a28354f5dd42a5e54c1f1485a0d8df364111c41", "filename": "gcc/testsuite/g++.dg/cpp0x/gen-attrs-36.C", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d072812eb51d021d887430459b60a5b627eae7f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d072812eb51d021d887430459b60a5b627eae7f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-36.C?ref=d072812eb51d021d887430459b60a5b627eae7f3", "patch": "@@ -2,20 +2,22 @@\n // { dg-options \"-std=c++11 -pedantic\" }\n // { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n+// c++11 attributes that apply to types are ignored for now\n+\n class T;\n class L { };\n class P : public L\n {\n-  typedef void (T::* [[gnu::__stdcall__]] F2) (L*); // { dg-warning \"only applies to function types\" }\n-  typedef void (T::*F) (L*) [[gnu::__stdcall__]];\n+  typedef void (T::* [[gnu::__stdcall__]] F2) (L*); // { dg-warning \"ignored\" }\n+  typedef void (T::*F) (L*) [[gnu::__stdcall__]]; // { dg-warning \"ignored\" }\n   void f(bool aAdd);\n };\n \n class T\n {\n public:\n-  virtual void  A(L *listener) [[gnu::__stdcall__]] = 0;\n-  virtual void R(L *listener)  [[gnu::__stdcall__]] = 0;\n+  virtual void  A(L *listener) [[gnu::__stdcall__]] = 0; // { dg-warning \"ignored\" }\n+  virtual void R(L *listener)  [[gnu::__stdcall__]] = 0; // { dg-warning \"ignored\" }\n };\n void P::f(bool aAdd)\n {"}, {"sha": "9b769428071526b2768e470722172c2086e83093", "filename": "gcc/testsuite/g++.dg/cpp0x/gen-attrs-37.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d072812eb51d021d887430459b60a5b627eae7f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d072812eb51d021d887430459b60a5b627eae7f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-37.C?ref=d072812eb51d021d887430459b60a5b627eae7f3", "patch": "@@ -2,12 +2,14 @@\n // { dg-options \"-std=c++11 -pedantic\" }\n // { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n+// c++11 attributes that apply to types are ignored for now\n+\n struct S {\n   int x;\n   S(const S &s) {}\n };\n \n-S getS() [[gnu::__stdcall__]];\n+S getS() [[gnu::__stdcall__]];  // { dg-warning \"ignored\" }\n \n void test()\n {"}, {"sha": "aa1491aed532ec421d1d6cecb79046107b78ccab", "filename": "gcc/testsuite/g++.dg/cpp0x/gen-attrs-8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d072812eb51d021d887430459b60a5b627eae7f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d072812eb51d021d887430459b60a5b627eae7f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-8.C?ref=d072812eb51d021d887430459b60a5b627eae7f3", "patch": "@@ -2,5 +2,5 @@\n // { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n extern int * ([[gnu::stdcall]] *fooPtr)( void); // { dg-error \"expected\" }\n-int * [[gnu::stdcall]] myFn01( void) { return 0; }// { dg-warning \"attribute only applies to function types\" }\n+int * [[gnu::stdcall]] myFn01( void) { return 0; }// { dg-warning \"ignored\" }\n "}]}