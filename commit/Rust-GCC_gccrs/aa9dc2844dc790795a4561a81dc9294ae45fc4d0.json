{"sha": "aa9dc2844dc790795a4561a81dc9294ae45fc4d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE5ZGMyODQ0ZGM3OTA3OTVhNDU2MWE4MWRjOTI5NGFlNDVmYzRkMA==", "commit": {"author": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2009-09-15T14:04:01Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2009-09-15T14:04:01Z"}, "message": "ipa-inline.c (estimate_function_body_sizes): Dump info about individual statements only at TDF_DETAILS dump level.\n\n2009-09-14  Martin Jambor  <mjambor@suse.cz>\n\n\t* ipa-inline.c (estimate_function_body_sizes): Dump info about\n\tindividual statements only at TDF_DETAILS dump level.  Format\n\tsource for 80 characters per line.\n\nFrom-SVN: r151722", "tree": {"sha": "fa909bffa484cd04c14eb00e87dc8e21c2215bb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa909bffa484cd04c14eb00e87dc8e21c2215bb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa9dc2844dc790795a4561a81dc9294ae45fc4d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9dc2844dc790795a4561a81dc9294ae45fc4d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa9dc2844dc790795a4561a81dc9294ae45fc4d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9dc2844dc790795a4561a81dc9294ae45fc4d0/comments", "author": null, "committer": null, "parents": [{"sha": "56550f237384eb4a43225075c2fc40a26a2dc7de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56550f237384eb4a43225075c2fc40a26a2dc7de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56550f237384eb4a43225075c2fc40a26a2dc7de"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "c8fb1e75ffda919711da34eea151ba4f59b7f908", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9dc2844dc790795a4561a81dc9294ae45fc4d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9dc2844dc790795a4561a81dc9294ae45fc4d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa9dc2844dc790795a4561a81dc9294ae45fc4d0", "patch": "@@ -1,4 +1,10 @@\n-009-09-15  Christian Bruel  <christian.bruel@st.com>\n+2009-09-15  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa-inline.c (estimate_function_body_sizes): Dump info about\n+\tindividual statements only at TDF_DETAILS dump level.  Format\n+\tsource for 80 characters per line.\n+\n+2009-09-15  Christian Bruel  <christian.bruel@st.com>\n \n         * regrename.c (do_replace): Update REG_DEAD notes. \n \t"}, {"sha": "662e13f25129324a0e105f3aaa79e045dddb5662", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9dc2844dc790795a4561a81dc9294ae45fc4d0/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9dc2844dc790795a4561a81dc9294ae45fc4d0/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=aa9dc2844dc790795a4561a81dc9294ae45fc4d0", "patch": "@@ -1737,9 +1737,8 @@ estimate_function_body_sizes (struct cgraph_node *node)\n   tree funtype = TREE_TYPE (node->decl);\n \n   if (dump_file)\n-    {\n-      fprintf (dump_file, \"Analyzing function body size: %s\\n\", cgraph_node_name (node));\n-    }\n+    fprintf (dump_file, \"Analyzing function body size: %s\\n\",\n+\t     cgraph_node_name (node));\n \n   gcc_assert (my_function && my_function->cfg);\n   FOR_EACH_BB_FN (bb, my_function)\n@@ -1751,7 +1750,7 @@ estimate_function_body_sizes (struct cgraph_node *node)\n \t  int this_size = estimate_num_insns (stmt, &eni_size_weights);\n \t  int this_time = estimate_num_insns (stmt, &eni_time_weights);\n \n-\t  if (dump_file)\n+\t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    {\n \t      fprintf (dump_file, \"  freq:%6i size:%3i time:%3i \",\n \t\t       freq, this_size, this_time);\n@@ -1764,7 +1763,7 @@ estimate_function_body_sizes (struct cgraph_node *node)\n \t    {\n \t      size_inlining_benefit += this_size;\n \t      time_inlining_benefit += this_time;\n-\t      if (dump_file)\n+\t      if (dump_file && (dump_flags & TDF_DETAILS))\n \t\tfprintf (dump_file, \"    Likely eliminated\\n\");\n \t    }\n \t  gcc_assert (time >= 0);\n@@ -1775,11 +1774,9 @@ estimate_function_body_sizes (struct cgraph_node *node)\n   time_inlining_benefit = ((time_inlining_benefit + CGRAPH_FREQ_BASE / 2)\n   \t\t\t   / CGRAPH_FREQ_BASE);\n   if (dump_file)\n-    {\n-      fprintf (dump_file, \"Overall function body time: %i-%i size: %i-%i\\n\",\n-               (int)time, (int)time_inlining_benefit,\n-      \t       size, size_inlining_benefit);\n-    }\n+    fprintf (dump_file, \"Overall function body time: %i-%i size: %i-%i\\n\",\n+\t     (int)time, (int)time_inlining_benefit,\n+\t     size, size_inlining_benefit);\n   time_inlining_benefit += eni_time_weights.call_cost;\n   size_inlining_benefit += eni_size_weights.call_cost;\n   if (!VOID_TYPE_P (TREE_TYPE (funtype)))\n@@ -1802,11 +1799,9 @@ estimate_function_body_sizes (struct cgraph_node *node)\n   inline_summary (node)->self_time = time;\n   inline_summary (node)->self_size = size;\n   if (dump_file)\n-    {\n-      fprintf (dump_file, \"With function call overhead time: %i-%i size: %i-%i\\n\",\n-               (int)time, (int)time_inlining_benefit,\n-      \t       size, size_inlining_benefit);\n-    }\n+    fprintf (dump_file, \"With function call overhead time: %i-%i size: %i-%i\\n\",\n+\t     (int)time, (int)time_inlining_benefit,\n+\t     size, size_inlining_benefit);\n   inline_summary (node)->time_inlining_benefit = time_inlining_benefit;\n   inline_summary (node)->size_inlining_benefit = size_inlining_benefit;\n }"}]}