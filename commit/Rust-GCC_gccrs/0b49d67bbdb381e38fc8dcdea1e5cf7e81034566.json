{"sha": "0b49d67bbdb381e38fc8dcdea1e5cf7e81034566", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI0OWQ2N2JiZGIzODFlMzhmYzhkY2RlYTFlNWNmN2U4MTAzNDU2Ng==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-09-01T10:51:43Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-09-01T10:51:43Z"}, "message": "Tidy tree-ssa-dom.c: Use dom_valueize more.\n\n\t* tree-ssa-dom.c (record_equivalences_from_phis,\n\trecord_equivalences_from_stmt, optimize_stmt): Use dom_valueize.\n\t(lookup_avail_expr): Likewise, and remove comment and unused temp.\n\nFrom-SVN: r227366", "tree": {"sha": "52304573bfde137d2005f61f30e5aa2e8d5ba02f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52304573bfde137d2005f61f30e5aa2e8d5ba02f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b49d67bbdb381e38fc8dcdea1e5cf7e81034566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b49d67bbdb381e38fc8dcdea1e5cf7e81034566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b49d67bbdb381e38fc8dcdea1e5cf7e81034566", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b49d67bbdb381e38fc8dcdea1e5cf7e81034566/comments", "author": null, "committer": null, "parents": [{"sha": "660adea45e1faa109e0b799824ca8340371f60d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/660adea45e1faa109e0b799824ca8340371f60d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/660adea45e1faa109e0b799824ca8340371f60d1"}], "stats": {"total": 37, "additions": 10, "deletions": 27}, "files": [{"sha": "c2181aefa623b762cb7202f0adefed7d89b3def3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b49d67bbdb381e38fc8dcdea1e5cf7e81034566/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b49d67bbdb381e38fc8dcdea1e5cf7e81034566/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b49d67bbdb381e38fc8dcdea1e5cf7e81034566", "patch": "@@ -1,3 +1,9 @@\n+2015-08-31  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* tree-ssa-dom.c (record_equivalences_from_phis,\n+\trecord_equivalences_from_stmt, optimize_stmt): Use dom_valueize.\n+\t(lookup_avail_expr): Likewise, and remove comment and unused temp.\n+\n 2015-09-01  Nick Clifton  <nickc@redhat.com>\n \n \t* config/msp430/msp430.opt (mcpu): Fix typo."}, {"sha": "a26ae558b0e0a19e06d0a525b7d21700481c29a4", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 4, "deletions": 27, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b49d67bbdb381e38fc8dcdea1e5cf7e81034566/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b49d67bbdb381e38fc8dcdea1e5cf7e81034566/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=0b49d67bbdb381e38fc8dcdea1e5cf7e81034566", "patch": "@@ -1577,12 +1577,7 @@ record_equivalences_from_phis (basic_block bb)\n \t  if (lhs == t)\n \t    continue;\n \n-\t  /* Valueize t.  */\n-\t  if (TREE_CODE (t) == SSA_NAME)\n-\t    {\n-\t      tree tmp = SSA_NAME_VALUE (t);\n-\t      t = tmp ? tmp : t;\n-\t    }\n+\t  t = dom_valueize (t);\n \n \t  /* If we have not processed an alternative yet, then set\n \t     RHS to this alternative.  */\n@@ -2160,12 +2155,7 @@ record_equivalences_from_stmt (gimple stmt, int may_optimize_p)\n \t  && (TREE_CODE (rhs) == SSA_NAME\n \t      || is_gimple_min_invariant (rhs)))\n \t{\n-\t  /* Valueize rhs.  */\n-\t  if (TREE_CODE (rhs) == SSA_NAME)\n-\t    {\n-\t      tree tmp = SSA_NAME_VALUE (rhs);\n-\t      rhs = tmp ? tmp : rhs;\n-\t    }\n+\t  rhs = dom_valueize (rhs);\n \n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    {\n@@ -2442,12 +2432,7 @@ optimize_stmt (basic_block bb, gimple_stmt_iterator si)\n \t  tree rhs = gimple_assign_rhs1 (stmt);\n \t  tree cached_lhs;\n \t  gassign *new_stmt;\n-\t  if (TREE_CODE (rhs) == SSA_NAME)\n-\t    {\n-\t      tree tem = SSA_NAME_VALUE (rhs);\n-\t      if (tem)\n-\t\trhs = tem;\n-\t    }\n+\t  rhs = dom_valueize (rhs);\n \t  /* Build a new statement with the RHS and LHS exchanged.  */\n \t  if (TREE_CODE (rhs) == SSA_NAME)\n \t    {\n@@ -2569,7 +2554,6 @@ lookup_avail_expr (gimple stmt, bool insert)\n {\n   expr_hash_elt **slot;\n   tree lhs;\n-  tree temp;\n   struct expr_hash_elt element;\n \n   /* Get LHS of phi, assignment, or call; else NULL_TREE.  */\n@@ -2664,14 +2648,7 @@ lookup_avail_expr (gimple stmt, bool insert)\n      definition of another variable.  */\n   lhs = (*slot)->lhs;\n \n-  /* See if the LHS appears in the CONST_AND_COPIES table.  If it does, then\n-     use the value from the const_and_copies table.  */\n-  if (TREE_CODE (lhs) == SSA_NAME)\n-    {\n-      temp = SSA_NAME_VALUE (lhs);\n-      if (temp)\n-\tlhs = temp;\n-    }\n+  lhs = dom_valueize (lhs);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {"}]}