{"sha": "84816907e4bda26eb7a21a5d3d52eb876fcd91dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ4MTY5MDdlNGJkYTI2ZWI3YTIxYTVkM2Q1MmViODc2ZmNkOTFkZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2006-11-13T08:16:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-11-13T08:16:11Z"}, "message": "re PR middle-end/28915 (ICE: tree check: expected class 'constant', have 'declaration' (var_decl) in build_vector, at tree.c:973)\n\n        PR middle-end/28915\n        * gimplify.c (gimplify_init_constructor): Don't reduce TREE_CONSTANT\n        vector ctors.\n        * tree-cfg.c (verify_expr): Don't look into TREE_CONSTANT\n        vector ctors.\n        * expmed.c (make_tree): Handle CONST, SYMBOL_REF.\n        * tree.c (build_vector): Handle non-_CST elements.\n\nCo-Authored-By: Andrew Pinski <pinskia@physics.uc.edu>\n\nFrom-SVN: r118747", "tree": {"sha": "37477647bbdc97991564bdf0325c20fe633a4896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37477647bbdc97991564bdf0325c20fe633a4896"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84816907e4bda26eb7a21a5d3d52eb876fcd91dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84816907e4bda26eb7a21a5d3d52eb876fcd91dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84816907e4bda26eb7a21a5d3d52eb876fcd91dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "329b3cc384733e2f4df34f31b32600787398c798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/329b3cc384733e2f4df34f31b32600787398c798", "html_url": "https://github.com/Rust-GCC/gccrs/commit/329b3cc384733e2f4df34f31b32600787398c798"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "1cab5ef1cba73c36b5919ce42f40bde7de3763ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84816907e4bda26eb7a21a5d3d52eb876fcd91dd", "patch": "@@ -1,3 +1,14 @@\n+2006-11-12  Jason Merrill  <jason@redhat.com>\n+\t    Andrew Pinski <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/28915\n+\t* gimplify.c (gimplify_init_constructor): Don't reduce TREE_CONSTANT\n+\tvector ctors.\n+\t* tree-cfg.c (verify_expr): Don't look into TREE_CONSTANT\n+\tvector ctors.\n+\t* expmed.c (make_tree): Handle CONST, SYMBOL_REF.\n+\t* tree.c (build_vector): Handle non-_CST elements.\n+\n 2006-11-12  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* genemit.c (gen_insn): Call gen_exp with a non-null used"}, {"sha": "6a0d3532ca7dc765a273ed3afe45e27ff80ed7e9", "filename": "gcc/expmed.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=84816907e4bda26eb7a21a5d3d52eb876fcd91dd", "patch": "@@ -5044,6 +5044,15 @@ make_tree (tree type, rtx x)\n \t\t\t\t\t  GET_CODE (x) == ZERO_EXTEND);\n       return fold_convert (type, make_tree (t, XEXP (x, 0)));\n \n+    case CONST:\n+      return make_tree (type, XEXP (x, 0));\n+\n+    case SYMBOL_REF:\n+      t = SYMBOL_REF_DECL (x);\n+      if (t)\n+\treturn fold_convert (type, build_fold_addr_expr (t));\n+      /* else fall through.  */\n+\n     default:\n       t = build_decl (VAR_DECL, NULL_TREE, type);\n "}, {"sha": "13c5f48d11248710074bdba8db9bacff51d63f9e", "filename": "gcc/gimplify.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=84816907e4bda26eb7a21a5d3d52eb876fcd91dd", "patch": "@@ -3161,6 +3161,11 @@ gimplify_init_constructor (tree *expr_p, tree *pre_p,\n \t\tTREE_OPERAND (*expr_p, 1) = build_vector_from_ctor (type, elts);\n \t\tbreak;\n \t      }\n+\n+\t    /* Don't reduce a TREE_CONSTANT vector ctor even if we can't\n+\t       make a VECTOR_CST.  It won't do anything for us, and it'll\n+\t       prevent us from representing it as a single constant.  */\n+\t    break;\n \t  }\n \n \t/* Vector types use CONSTRUCTOR all the way through gimple"}, {"sha": "28994bd72d9ec26f9ad2921e79b6c64fd8f6cdb8", "filename": "gcc/testsuite/gcc.target/i386/vectorize1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvectorize1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvectorize1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvectorize1.c?ref=84816907e4bda26eb7a21a5d3d52eb876fcd91dd", "patch": "@@ -0,0 +1,18 @@\n+/* PR middle-end/28915 */\n+/* { dg-options \"-msse -O2 -ftree-vectorize -fdump-tree-vect\" } */\n+\n+extern char lanip[3][40];\n+typedef struct\n+{\n+  char *t[4];\n+}tx_typ;\n+\n+int set_names (void)\n+{\n+  static tx_typ tt1;\n+  int ln;\n+  for (ln = 0; ln < 4; ln++)\n+      tt1.t[ln] = lanip[1];\n+}\n+\n+/* { dg-final { scan-tree-dump \"vect_cst\" \"vect\" } } */"}, {"sha": "fc30f2285d506ff61aba6f0f5719cee8ffbf99e4", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=84816907e4bda26eb7a21a5d3d52eb876fcd91dd", "patch": "@@ -3420,6 +3420,11 @@ verify_expr (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n       CHECK_OP (1, \"invalid operand to binary operator\");\n       break;\n \n+    case CONSTRUCTOR:\n+      if (TREE_CONSTANT (t) && TREE_CODE (TREE_TYPE (t)) == VECTOR_TYPE)\n+\t*walk_subtrees = 0;\n+      break;\n+\n     default:\n       break;\n     }"}, {"sha": "6e3d13b8792b5d96a5c4828cf19defa7c6e02eb9", "filename": "gcc/tree.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84816907e4bda26eb7a21a5d3d52eb876fcd91dd/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=84816907e4bda26eb7a21a5d3d52eb876fcd91dd", "patch": "@@ -973,6 +973,10 @@ build_vector (tree type, tree vals)\n     {\n       tree value = TREE_VALUE (link);\n \n+      /* Don't crash if we get an address constant.  */\n+      if (!CONSTANT_CLASS_P (value))\n+\tcontinue;\n+\n       over1 |= TREE_OVERFLOW (value);\n       over2 |= TREE_CONSTANT_OVERFLOW (value);\n     }"}]}