{"sha": "4416420e14b7505355c2318a6bd09ae073551d36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQxNjQyMGUxNGI3NTA1MzU1YzIzMThhNmJkMDlhZTA3MzU1MWQzNg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-08-16T19:47:01Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-08-16T19:47:01Z"}, "message": "rs6000: Delete old add+cmp patterns\n\nThere are some patterns that recognise the parallel of an add and a\ncompare, and split it back to the same two insns.  This apparently\nhelped RIOS machines before RTL scheduling existed?  Either way, it\nisn't helpful anymore, and even hurts a tiny bit.  So, delete it.\n\n\n\t* config/rs6000/rs6000.md (two unnamed define_insn and define_split):\n\tDelete.\n\nFrom-SVN: r263604", "tree": {"sha": "0ddf72df6882d27de4fc77f08f4988b831b1ab85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ddf72df6882d27de4fc77f08f4988b831b1ab85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4416420e14b7505355c2318a6bd09ae073551d36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4416420e14b7505355c2318a6bd09ae073551d36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4416420e14b7505355c2318a6bd09ae073551d36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4416420e14b7505355c2318a6bd09ae073551d36/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b24a46beddca2278e1879b1ed5086bfd957eebb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24a46beddca2278e1879b1ed5086bfd957eebb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b24a46beddca2278e1879b1ed5086bfd957eebb7"}], "stats": {"total": 50, "additions": 5, "deletions": 45}, "files": [{"sha": "38ef1fd4c8c83604b9afbc1b561cf192ab60c79d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4416420e14b7505355c2318a6bd09ae073551d36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4416420e14b7505355c2318a6bd09ae073551d36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4416420e14b7505355c2318a6bd09ae073551d36", "patch": "@@ -1,3 +1,8 @@\n+2018-08-16  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (two unnamed define_insn and define_split):\n+\tDelete.\n+\n 2018-08-16  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/altivec.md: Don't set length attribute to the default"}, {"sha": "c691952385169035f6297c213f4f942c48a62746", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4416420e14b7505355c2318a6bd09ae073551d36/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4416420e14b7505355c2318a6bd09ae073551d36/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4416420e14b7505355c2318a6bd09ae073551d36", "patch": "@@ -11581,51 +11581,6 @@\n   operands[10] = GEN_INT (sextc);\n })\n \n-;; The following two insns don't exist as single insns, but if we provide\n-;; them, we can swap an add and compare, which will enable us to overlap more\n-;; of the required delay between a compare and branch.  We generate code for\n-;; them by splitting.\n-\n-(define_insn \"\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=y\")\n-\t(compare:CC (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n-\t\t    (match_operand:SI 2 \"short_cint_operand\" \"i\")))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(plus:SI (match_dup 1) (match_operand:SI 4 \"short_cint_operand\" \"i\")))]\n-  \"\"\n-  \"#\"\n-  [(set_attr \"length\" \"8\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:CCUNS 3 \"cc_reg_operand\" \"=y\")\n-\t(compare:CCUNS (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n-\t\t       (match_operand:SI 2 \"u_short_cint_operand\" \"i\")))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(plus:SI (match_dup 1) (match_operand:SI 4 \"short_cint_operand\" \"i\")))]\n-  \"\"\n-  \"#\"\n-  [(set_attr \"length\" \"8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 3 \"cc_reg_operand\")\n-\t(compare:CC (match_operand:SI 1 \"gpc_reg_operand\")\n-\t\t    (match_operand:SI 2 \"short_cint_operand\")))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\")\n-\t(plus:SI (match_dup 1) (match_operand:SI 4 \"short_cint_operand\")))]\n-  \"\"\n-  [(set (match_dup 3) (compare:CC (match_dup 1) (match_dup 2)))\n-   (set (match_dup 0) (plus:SI (match_dup 1) (match_dup 4)))])\n-\n-(define_split\n-  [(set (match_operand:CCUNS 3 \"cc_reg_operand\")\n-\t(compare:CCUNS (match_operand:SI 1 \"gpc_reg_operand\")\n-\t\t       (match_operand:SI 2 \"u_short_cint_operand\")))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\")\n-\t(plus:SI (match_dup 1) (match_operand:SI 4 \"short_cint_operand\")))]\n-  \"\"\n-  [(set (match_dup 3) (compare:CCUNS (match_dup 1) (match_dup 2)))\n-   (set (match_dup 0) (plus:SI (match_dup 1) (match_dup 4)))])\n-\n ;; Only need to compare second words if first words equal\n (define_insn \"*cmp<mode>_internal1\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")"}]}