{"sha": "843633f841be49bf6d15a2f6208ce384870f37b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQzNjMzZjg0MWJlNDliZjZkMTVhMmY2MjA4Y2UzODQ4NzBmMzdiOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-02-21T14:56:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-02-21T14:56:53Z"}, "message": "re PR c++/60224 (ICE using invalid initializer for array)\n\n\tPR c++/60224\n\t* decl.c (cp_complete_array_type, maybe_deduce_size_from_array_init):\n\tDon't get confused by a CONSTRUCTOR that already has a type.\n\nFrom-SVN: r208002", "tree": {"sha": "ed6c2cbc9b08dfc6ace3e8a097c37fab33f79ba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed6c2cbc9b08dfc6ace3e8a097c37fab33f79ba1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/843633f841be49bf6d15a2f6208ce384870f37b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/843633f841be49bf6d15a2f6208ce384870f37b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/843633f841be49bf6d15a2f6208ce384870f37b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/843633f841be49bf6d15a2f6208ce384870f37b8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd3ef6f762a6dc3d7871f33b297be5b684b68ad0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3ef6f762a6dc3d7871f33b297be5b684b68ad0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3ef6f762a6dc3d7871f33b297be5b684b68ad0"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "62aacd62e81ba061fa8ffcb781d8a8dd3baf05e5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/843633f841be49bf6d15a2f6208ce384870f37b8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/843633f841be49bf6d15a2f6208ce384870f37b8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=843633f841be49bf6d15a2f6208ce384870f37b8", "patch": "@@ -1,5 +1,9 @@\n 2014-02-21  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/60224\n+\t* decl.c (cp_complete_array_type, maybe_deduce_size_from_array_init):\n+\tDon't get confused by a CONSTRUCTOR that already has a type.\n+\n \tPR c++/60277\n \t* call.c (build_array_conv): Don't crash on VLA.\n "}, {"sha": "04c4cf515c3312d622341a796e7f484f432da49c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/843633f841be49bf6d15a2f6208ce384870f37b8/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/843633f841be49bf6d15a2f6208ce384870f37b8/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=843633f841be49bf6d15a2f6208ce384870f37b8", "patch": "@@ -4880,7 +4880,7 @@ maybe_deduce_size_from_array_init (tree decl, tree init)\n \t those are not supported in GNU C++, and as the middle-end\n \t will crash if presented with a non-numeric designated\n \t initializer.  */\n-      if (initializer && TREE_CODE (initializer) == CONSTRUCTOR)\n+      if (initializer && BRACE_ENCLOSED_INITIALIZER_P (initializer))\n \t{\n \t  vec<constructor_elt, va_gc> *v = CONSTRUCTOR_ELTS (initializer);\n \t  constructor_elt *ce;\n@@ -7099,6 +7099,11 @@ cp_complete_array_type (tree *ptype, tree initial_value, bool do_default)\n   int failure;\n   tree type, elt_type;\n \n+  /* Don't get confused by a CONSTRUCTOR for some other type.  */\n+  if (initial_value && TREE_CODE (initial_value) == CONSTRUCTOR\n+      && !BRACE_ENCLOSED_INITIALIZER_P (initial_value))\n+    return 1;\n+\n   if (initial_value)\n     {\n       unsigned HOST_WIDE_INT i;"}, {"sha": "77e4f909146ac40c90761c2295fbdfd464beff6e", "filename": "gcc/testsuite/g++.dg/init/array36.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/843633f841be49bf6d15a2f6208ce384870f37b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/843633f841be49bf6d15a2f6208ce384870f37b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray36.C?ref=843633f841be49bf6d15a2f6208ce384870f37b8", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/60224\n+\n+struct A {};\n+\n+void foo()\n+{\n+  bool b[] = (int (A::*)())0;\t// { dg-error \"\" }\n+}"}]}