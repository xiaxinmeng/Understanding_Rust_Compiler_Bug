{"sha": "cb88a3eae3a107f701b0426ccdaad15aace794e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I4OGEzZWFlM2ExMDdmNzAxYjA0MjZjY2RhYWQxNWFhY2U3OTRlMg==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2007-11-07T09:51:46Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2007-11-07T09:51:46Z"}, "message": "decl.c (make_aligning_type): Set the mode of the RECORD_TYPE we craft and expand comment.\n\n2007-11-07  Olivier Hainque  <hainque@adacore.com>\n\n        * decl.c (make_aligning_type): Set the mode of the RECORD_TYPE we\n        craft and expand comment.\n\n        testsuite/\n        * gnat.dg/max_align.adb: New test.\n\nFrom-SVN: r129958", "tree": {"sha": "2d77e4943895345d425dd82dd3ecbe35e331c32a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d77e4943895345d425dd82dd3ecbe35e331c32a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb88a3eae3a107f701b0426ccdaad15aace794e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb88a3eae3a107f701b0426ccdaad15aace794e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb88a3eae3a107f701b0426ccdaad15aace794e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb88a3eae3a107f701b0426ccdaad15aace794e2/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4daf64719c18eb0a0cd22d0a3a6a27d8e4787b17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4daf64719c18eb0a0cd22d0a3a6a27d8e4787b17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4daf64719c18eb0a0cd22d0a3a6a27d8e4787b17"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "b3194787df5ab2ec26ab572a216fd58b93c8b88d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb88a3eae3a107f701b0426ccdaad15aace794e2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb88a3eae3a107f701b0426ccdaad15aace794e2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cb88a3eae3a107f701b0426ccdaad15aace794e2", "patch": "@@ -1,3 +1,8 @@\n+2007-11-07  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* decl.c (make_aligning_type): Set the mode of the RECORD_TYPE we\n+\tcraft and expand comment.\n+\n 2007-11-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* lang-specs.h: Move translation of -fRTS= after -gnatez switch."}, {"sha": "fdb39f2763018213963e096ce49ca2176830b037", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb88a3eae3a107f701b0426ccdaad15aace794e2/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb88a3eae3a107f701b0426ccdaad15aace794e2/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=cb88a3eae3a107f701b0426ccdaad15aace794e2", "patch": "@@ -5144,10 +5144,13 @@ make_aligning_type (tree type, unsigned int align, tree size,\n \t\t\t     size_binop (PLUS_EXPR, room_st, voffset_st)),\n                     bitsize_unit_node);\n \n-  /* Craft the GCC record representation.  The sizes are set manually to\n-     account for the maximum possible value of voffset, which avoids complex\n-     self-references in the size expression and corresponds to what should be\n-     \"alloc\"ated for this type anyway.\n+  /* Craft the GCC record representation.  We exceptionally do everything\n+     manually here because 1) our generic circuitry is not quite ready to\n+     handle the complex position/size expressions we are setting up, 2) we\n+     have a strong simplifying factor at hand: we know the maximum possible\n+     value of voffset, and 3) we have to set/reset at least the sizes in\n+     accordance with this maximum value anyway, as we need them to convey\n+     what should be \"alloc\"ated for this type.\n \n      Use -1 as the 'addressable' indication for the field to prevent the\n      creation of a bitfield.  We don't need one, it would have damaging\n@@ -5171,6 +5174,8 @@ make_aligning_type (tree type, unsigned int align, tree size,\n     = size_binop (PLUS_EXPR, size,\n \t\t  size_int (room + align / BITS_PER_UNIT));\n \n+  TYPE_MODE (record_type) = BLKmode;\n+\n   copy_alias_set (record_type, type);\n   return record_type;\n }"}, {"sha": "62d9b2579e9c11e2da1e5c13bbec94fe1d22ad57", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb88a3eae3a107f701b0426ccdaad15aace794e2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb88a3eae3a107f701b0426ccdaad15aace794e2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb88a3eae3a107f701b0426ccdaad15aace794e2", "patch": "@@ -1,3 +1,7 @@\n+2007-11-07  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gnat.dg/max_align.adb: New test.\n+\n 2007-11-06  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/30961"}, {"sha": "702bbaca4492e8d59560d5fcf38d95dfc07ee6c7", "filename": "gcc/testsuite/gnat.dg/max_align.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb88a3eae3a107f701b0426ccdaad15aace794e2/gcc%2Ftestsuite%2Fgnat.dg%2Fmax_align.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb88a3eae3a107f701b0426ccdaad15aace794e2/gcc%2Ftestsuite%2Fgnat.dg%2Fmax_align.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fmax_align.adb?ref=cb88a3eae3a107f701b0426ccdaad15aace794e2", "patch": "@@ -0,0 +1,15 @@\n+--  { dg-do compile }\n+\n+procedure Max_Align is\n+   type Block is record\n+      X : Integer;\n+   end record;\n+   for Block'Alignment use Standard'Maximum_Alignment;\n+\n+   type Block_Access is access Block;\n+   Ptr : Block_Access := new Block;\n+begin\n+   null;\n+end;\n+\n+"}]}