{"sha": "e7b69085f8d11a547e9462ab042fda8f3fc57d6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdiNjkwODVmOGQxMWE1NDdlOTQ2MmFiMDQyZmRhOGYzZmM1N2Q2Yw==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kirill.yukhin@intel.com", "date": "2015-12-04T14:22:06Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2015-12-04T14:22:06Z"}, "message": "Add notinbranch/inbranch flags to attribute __simd__.\n\ngcc/\n\t* c-family/c-common.c (c_common_attribute_table[]): Update max arguments\n\tcount for \"simd\" attribute.\n\t(handle_simd_attribute): Parse \"notinbranch\" and \"inbranch\" arguments.\n\t* doc/extend.texi (\"simd\"): Describe new flags.\ngcc/testsuite/\n\t* c-c++-common/attr-simd-4.c: New test.\n\t* c-c++-common/attr-simd-5.c: New test.\n\nFrom-SVN: r231270", "tree": {"sha": "7b54e87197f8bb6f0b6d062e5f62d02d6433c6c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b54e87197f8bb6f0b6d062e5f62d02d6433c6c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7b69085f8d11a547e9462ab042fda8f3fc57d6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7b69085f8d11a547e9462ab042fda8f3fc57d6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7b69085f8d11a547e9462ab042fda8f3fc57d6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7b69085f8d11a547e9462ab042fda8f3fc57d6c/comments", "author": null, "committer": null, "parents": [{"sha": "c48516f9a20633303541cd28ab8125bc5724470f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c48516f9a20633303541cd28ab8125bc5724470f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c48516f9a20633303541cd28ab8125bc5724470f"}], "stats": {"total": 58, "additions": 53, "deletions": 5}, "files": [{"sha": "1db1edd05071c094ed17ce7d50bb04204de83480", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7b69085f8d11a547e9462ab042fda8f3fc57d6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7b69085f8d11a547e9462ab042fda8f3fc57d6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7b69085f8d11a547e9462ab042fda8f3fc57d6c", "patch": "@@ -1,3 +1,10 @@\n+2015-12-04  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\t* c-family/c-common.c (c_common_attribute_table[]): Update max arguments\n+\tcount for \"simd\" attribute.\n+\t(handle_simd_attribute): Parse \"notinbranch\" and \"inbranch\" arguments.\n+\t* doc/extend.texi (\"simd\"): Describe new flags.\n+\n 2015-12-04  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \t* config/i386/sse.md (<avx512>_store<mode>_mask): Fix"}, {"sha": "381a925331ce2470efbb3f1cd14c26eae244962f", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 37, "deletions": 5, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7b69085f8d11a547e9462ab042fda8f3fc57d6c/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7b69085f8d11a547e9462ab042fda8f3fc57d6c/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=e7b69085f8d11a547e9462ab042fda8f3fc57d6c", "patch": "@@ -817,7 +817,7 @@ const struct attribute_spec c_common_attribute_table[] =\n \t\t\t      handle_omp_declare_simd_attribute, false },\n   { \"cilk simd function\",     0, -1, true,  false, false,\n \t\t\t      handle_omp_declare_simd_attribute, false },\n-  { \"simd\",\t\t      0, 0, true,  false, false,\n+  { \"simd\",\t\t      0, 1, true,  false, false,\n \t\t\t      handle_simd_attribute, false },\n   { \"omp declare target\",     0, 0, true, false, false,\n \t\t\t      handle_omp_declare_target_attribute, false },\n@@ -8473,7 +8473,7 @@ handle_omp_declare_simd_attribute (tree *, tree, tree, int, bool *)\n /* Handle a \"simd\" attribute.  */\n \n static tree\n-handle_simd_attribute (tree *node, tree name, tree, int, bool *no_add_attrs)\n+handle_simd_attribute (tree *node, tree name, tree args, int, bool *no_add_attrs)\n {\n   if (TREE_CODE (*node) == FUNCTION_DECL)\n     {\n@@ -8486,9 +8486,41 @@ handle_simd_attribute (tree *node, tree name, tree, int, bool *no_add_attrs)\n \t  *no_add_attrs = true;\n \t}\n       else\n-\tDECL_ATTRIBUTES (*node)\n-\t  = tree_cons (get_identifier (\"omp declare simd\"),\n-\t\t       NULL_TREE, DECL_ATTRIBUTES (*node));\n+\t{\n+\t  tree t = get_identifier (\"omp declare simd\");\n+\t  tree attr = NULL_TREE;\n+\t  if (args)\n+\t    {\n+\t      tree id = TREE_VALUE (args);\n+\n+\t      if (TREE_CODE (id) != STRING_CST)\n+\t\t{\n+\t\t  error (\"attribute %qE argument not a string\", name);\n+\t\t  *no_add_attrs = true;\n+\t\t  return NULL_TREE;\n+\t\t}\n+\n+\t      if (strcmp (TREE_STRING_POINTER (id), \"notinbranch\") == 0)\n+\t\tattr = build_omp_clause (DECL_SOURCE_LOCATION (*node),\n+\t\t\t\t\t OMP_CLAUSE_NOTINBRANCH);\n+\t      else\n+\t\tif (strcmp (TREE_STRING_POINTER (id), \"inbranch\") == 0)\n+\t\t  attr = build_omp_clause (DECL_SOURCE_LOCATION (*node),\n+\t\t\t\t\t   OMP_CLAUSE_INBRANCH);\n+\t\telse\n+\t\t{\n+\t\t  error (\"only %<inbranch%> and %<notinbranch%> flags are \"\n+\t\t\t \"allowed for %<__simd__%> attribute\");\n+\t\t  *no_add_attrs = true;\n+\t\t  return NULL_TREE;\n+\t\t}\n+\t    }\n+\n+\t  DECL_ATTRIBUTES (*node) = tree_cons (t,\n+\t\t\t\t\t       build_tree_list (NULL_TREE,\n+\t\t\t\t\t\t\t\tattr),\n+\t\t\t\t\t       DECL_ATTRIBUTES (*node));\n+\t}\n     }\n   else\n     {"}, {"sha": "d0f631f1dd779e11561759347662f88297d4eb1c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7b69085f8d11a547e9462ab042fda8f3fc57d6c/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7b69085f8d11a547e9462ab042fda8f3fc57d6c/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=e7b69085f8d11a547e9462ab042fda8f3fc57d6c", "patch": "@@ -3142,6 +3142,7 @@ At the function call it will create resolver @code{ifunc}, that will\n dynamically call a clone suitable for current architecture.\n \n @item simd\n+@itemx simd(\"@var{mask}\")\n @cindex @code{simd} function attribute.\n This attribute enables creation of one or more function versions that\n can process multiple arguments using SIMD instructions from a\n@@ -3156,6 +3157,9 @@ attribute on the same function.\n If the attribute is specified and @code{#pragma omp declare simd}\n present on a declaration and @code{-fopenmp} or @code{-fopenmp-simd}\n switch is specified, then the attribute is ignored.\n+The optional argument @var{mask} may have \"notinbranch\" or \"inbranch\"\n+value and instructs the compiler to generate non-masked or masked\n+clones correspondingly. By default, all clones are generated.\n \n @item target (@var{options})\n @cindex @code{target} function attribute"}, {"sha": "19cd658b4f6a3b0226e116c58964b11f2c1f6794", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7b69085f8d11a547e9462ab042fda8f3fc57d6c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7b69085f8d11a547e9462ab042fda8f3fc57d6c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7b69085f8d11a547e9462ab042fda8f3fc57d6c", "patch": "@@ -1,3 +1,8 @@\n+2015-12-04  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\t* c-c++-common/attr-simd-4.c: New test.\n+\t* c-c++-common/attr-simd-5.c: New test.\n+\n 2015-12-04  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcc.dg/graphite/id-28.c: Requires pthreads."}]}