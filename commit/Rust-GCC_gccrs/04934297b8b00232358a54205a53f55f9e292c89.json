{"sha": "04934297b8b00232358a54205a53f55f9e292c89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ5MzQyOTdiOGIwMDIzMjM1OGE1NDIwNWE1M2Y1NWY5ZTI5MmM4OQ==", "commit": {"author": {"name": "Renlin Li", "email": "renlin.li@arm.com", "date": "2015-04-22T14:01:02Z"}, "committer": {"name": "Renlin Li", "email": "renlin@gcc.gnu.org", "date": "2015-04-22T14:01:02Z"}, "message": "[PATCH][libstc++v3]Add new dg-require-thread-fence directive.\n\nlibstdc++-v3/\n\n2015-04-22  Renlin Li  <renlin.li@arm.com>\n\n\t* testsuite/lib/dg-options.exp (dg-require-thread-fence): New.\n\t* testsuite/lib/libstdc++.exp (check_v3_target_thread_fence): New.\n\t* testsuite/29_atomics/atomic_flag/clear/1.cc: Use it.\n\t* testsuite/29_atomics/atomic_flag/test_and_set/explicit.cc: Likewise.\n\t* testsuite/29_atomics/atomic_flag/test_and_set/implicit.cc: Likewise.\n\nFrom-SVN: r222324", "tree": {"sha": "8ab7ba5bea7262f2526cc4da0c8aecbe0b93a212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ab7ba5bea7262f2526cc4da0c8aecbe0b93a212"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04934297b8b00232358a54205a53f55f9e292c89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04934297b8b00232358a54205a53f55f9e292c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04934297b8b00232358a54205a53f55f9e292c89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04934297b8b00232358a54205a53f55f9e292c89/comments", "author": null, "committer": null, "parents": [{"sha": "860503d8cc91ca9a5d8bf3db0b88281f31257603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/860503d8cc91ca9a5d8bf3db0b88281f31257603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/860503d8cc91ca9a5d8bf3db0b88281f31257603"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "12f87c35b11737ca7bd703fc10c44d6a8635f06a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04934297b8b00232358a54205a53f55f9e292c89/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04934297b8b00232358a54205a53f55f9e292c89/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=04934297b8b00232358a54205a53f55f9e292c89", "patch": "@@ -1,3 +1,11 @@\n+2015-04-22  Renlin Li  <renlin.li@arm.com>\n+\n+\t* testsuite/lib/dg-options.exp (dg-require-thread-fence): New.\n+\t* testsuite/lib/libstdc++.exp (check_v3_target_thread_fence): New.\n+\t* testsuite/29_atomics/atomic_flag/clear/1.cc: Use it.\n+\t* testsuite/29_atomics/atomic_flag/test_and_set/explicit.cc: Likewise.\n+\t* testsuite/29_atomics/atomic_flag/test_and_set/implicit.cc: Likewise.\n+\n 2015-04-21  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/manual/configure.xml: Update descriptions of options"}, {"sha": "a6e229945e324b9f6517138f2bf492491e49e78e", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_flag/clear/1.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04934297b8b00232358a54205a53f55f9e292c89/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fclear%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04934297b8b00232358a54205a53f55f9e292c89/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fclear%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fclear%2F1.cc?ref=04934297b8b00232358a54205a53f55f9e292c89", "patch": "@@ -1,4 +1,5 @@\n // { dg-options \"-std=gnu++11\" }\n+// { dg-require-thread-fence \"\" }\n \n // Copyright (C) 2009-2015 Free Software Foundation, Inc.\n //"}, {"sha": "0655be41d2ddbca5c186a4ade3e51abe08dea7fc", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_flag/test_and_set/explicit.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04934297b8b00232358a54205a53f55f9e292c89/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Ftest_and_set%2Fexplicit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04934297b8b00232358a54205a53f55f9e292c89/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Ftest_and_set%2Fexplicit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Ftest_and_set%2Fexplicit.cc?ref=04934297b8b00232358a54205a53f55f9e292c89", "patch": "@@ -1,4 +1,5 @@\n // { dg-options \"-std=gnu++11\" }\n+// { dg-require-thread-fence \"\" }\n \n // Copyright (C) 2008-2015 Free Software Foundation, Inc.\n //"}, {"sha": "a867da2edfc425bf5d349b21e7fb64e04d83f4b4", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_flag/test_and_set/implicit.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04934297b8b00232358a54205a53f55f9e292c89/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Ftest_and_set%2Fimplicit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04934297b8b00232358a54205a53f55f9e292c89/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Ftest_and_set%2Fimplicit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Ftest_and_set%2Fimplicit.cc?ref=04934297b8b00232358a54205a53f55f9e292c89", "patch": "@@ -1,4 +1,5 @@\n // { dg-options \"-std=gnu++11\" }\n+// { dg-require-thread-fence \"\" }\n \n // Copyright (C) 2008-2015 Free Software Foundation, Inc.\n //"}, {"sha": "56ca89617aba06430067bf146838517ee241b331", "filename": "libstdc++-v3/testsuite/lib/dg-options.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04934297b8b00232358a54205a53f55f9e292c89/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04934297b8b00232358a54205a53f55f9e292c89/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp?ref=04934297b8b00232358a54205a53f55f9e292c89", "patch": "@@ -115,6 +115,15 @@ proc dg-require-cmath { args } {\n     return\n }\n \n+proc dg-require-thread-fence { args } {\n+    if { ![ check_v3_target_thread_fence ] } {\n+\tupvar dg-do-what dg-do-what\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+\treturn\n+    }\n+    return\n+}\n+\n proc dg-require-atomic-builtins { args } {\n     if { ![ check_v3_target_atomic_builtins ] } {\n \tupvar dg-do-what dg-do-what"}, {"sha": "6a6374a8e6baa951d71a9919fb20d15b1a1f9d64", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04934297b8b00232358a54205a53f55f9e292c89/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04934297b8b00232358a54205a53f55f9e292c89/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=04934297b8b00232358a54205a53f55f9e292c89", "patch": "@@ -1221,6 +1221,62 @@ proc check_v3_target_cmath { } {\n     return $et_c99_math\n }\n \n+proc check_v3_target_thread_fence { } {\n+    global cxxflags\n+    global DEFAULT_CXXFLAGS\n+    global et_thread_fence\n+\n+    global tool\n+\n+    if { ![info exists et_thread_fence_target_name] } {\n+\tset et_thread_fence_target_name \"\"\n+    }\n+\n+    # If the target has changed since we set the cached value, clear it.\n+    set current_target [current_target_name]\n+    if { $current_target != $et_thread_fence_target_name } {\n+\tverbose \"check_v3_target_thread_fence: `$et_thread_fence_target_name'\" 2\n+\tset et_thread_fence_target_name $current_target\n+\tif [info exists et_thread_fence] {\n+\t    verbose \"check_v3_target_thread_fence: removing cached result\" 2\n+\t    unset et_thread_fence\n+\t}\n+    }\n+\n+    if [info exists et_thread_fence] {\n+\tverbose \"check_v3_target_thread_fence: using cached result\" 2\n+    } else {\n+\tset et_thread_fence 0\n+\n+\t# Set up and preprocess a C++11 test program that depends\n+\t# on the thread fence to be available.\n+\tset src thread_fence[pid].cc\n+\n+\tset f [open $src \"w\"]\n+\tputs $f \"int main() {\"\n+\tputs $f \"__atomic_thread_fence (__ATOMIC_SEQ_CST);\"\n+\tputs $f \"return 0;\"\n+\tputs $f \"}\"\n+\tclose $f\n+\n+\tset cxxflags_saved $cxxflags\n+\tset cxxflags \"$cxxflags $DEFAULT_CXXFLAGS -Werror -std=gnu++11\"\n+\n+\tset lines [v3_target_compile $src /dev/null executable \"\"]\n+\tset cxxflags $cxxflags_saved\n+\tfile delete $src\n+\n+\tif [string match \"\" $lines] {\n+\t    # No error message, linking succeeded.\n+\t    set et_thread_fence 1\n+\t} else {\n+\t    verbose \"check_v3_target_thread_fence: compilation failed\" 2\n+\t}\n+    }\n+    verbose \"check_v3_target_thread_fence: $et_thread_fence\" 2\n+    return $et_thread_fence\n+}\n+\n proc check_v3_target_atomic_builtins { } {\n     global cxxflags\n     global DEFAULT_CXXFLAGS"}]}