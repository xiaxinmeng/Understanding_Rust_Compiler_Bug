{"sha": "4443341a9e4b33ead4365160127d0a51a2452c72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ0MzM0MWE5ZTRiMzNlYWQ0MzY1MTYwMTI3ZDBhNTFhMjQ1MmM3Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-06-27T05:42:11Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-06-27T05:42:11Z"}, "message": "bounds-2.c: Adjust dg-output.\n\n\t* c-c++-common/ubsan/bounds-2.c: Adjust dg-output.\n\t(fn1): Remove store to out-of-bounds location.  Add memory barrier.\n\t(fn2): Likewise.\n\t(fn5): Likewise.\n\t(fn6): Likewise.\n\t(fn7): Likewise.\n\t(fn8): Likewise.\n\t(fn9): Likewise.\n\t(fn11): Likewise.\n\t* c-c++-common/ubsan/bounds-5.c (fn1): Remove store to out-of-bounds\n\tlocation.  Add memory barrier.\n\t(fn2): Likewise.\n\t(fn3): Likewise.\n\t(fn4): Likewise.\n\t(fn5): Likewise.\n\t* c-c++-common/ubsan/bounds-7.c: New test.\n\nFrom-SVN: r212061", "tree": {"sha": "45b575ecd51f87a142aa29d7583886fad17bc1af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45b575ecd51f87a142aa29d7583886fad17bc1af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4443341a9e4b33ead4365160127d0a51a2452c72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4443341a9e4b33ead4365160127d0a51a2452c72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4443341a9e4b33ead4365160127d0a51a2452c72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4443341a9e4b33ead4365160127d0a51a2452c72/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a55ae37b3dc1d695d8f708924ecf2a8d49fbb28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a55ae37b3dc1d695d8f708924ecf2a8d49fbb28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a55ae37b3dc1d695d8f708924ecf2a8d49fbb28"}], "stats": {"total": 175, "additions": 135, "deletions": 40}, "files": [{"sha": "17f05c7a48ba2d4f8cdc8df9f8d2bc215d36e066", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4443341a9e4b33ead4365160127d0a51a2452c72/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4443341a9e4b33ead4365160127d0a51a2452c72/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4443341a9e4b33ead4365160127d0a51a2452c72", "patch": "@@ -1,3 +1,22 @@\n+2014-06-27  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/ubsan/bounds-2.c: Adjust dg-output.\n+\t(fn1): Remove store to out-of-bounds location.  Add memory barrier.\n+\t(fn2): Likewise.\n+\t(fn5): Likewise.\n+\t(fn6): Likewise.\n+\t(fn7): Likewise.\n+\t(fn8): Likewise.\n+\t(fn9): Likewise.\n+\t(fn11): Likewise.\n+\t* c-c++-common/ubsan/bounds-5.c (fn1): Remove store to out-of-bounds\n+\tlocation.  Add memory barrier.\n+\t(fn2): Likewise.\n+\t(fn3): Likewise.\n+\t(fn4): Likewise.\n+\t(fn5): Likewise.\n+\t* c-c++-common/ubsan/bounds-7.c: New test.\n+\n 2014-06-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/61499"}, {"sha": "7ef71aaebd6b98a3c04abf2b64fd5c3338fe4cca", "filename": "gcc/testsuite/c-c++-common/ubsan/bounds-2.c", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4443341a9e4b33ead4365160127d0a51a2452c72/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4443341a9e4b33ead4365160127d0a51a2452c72/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-2.c?ref=4443341a9e4b33ead4365160127d0a51a2452c72", "patch": "@@ -22,17 +22,19 @@ static void __attribute__ ((noinline, noclone))\n fn1 (void)\n {\n   volatile int a[5];\n-  a[5] = 1;\n+  asm (\"\" : : \"r\" (&a) : \"memory\");\n   a[2] = a[5];\n }\n \n static void __attribute__ ((noinline, noclone))\n fn2 (void)\n {\n   volatile int a[5];\n+  volatile int j;\n   int i = 5;\n   int *p = &i;\n-  a[*p] = 1;\n+  asm (\"\" : : \"r\" (&a) : \"memory\");\n+  j = a[*p];\n }\n \n static void __attribute__ ((noinline, noclone))\n@@ -54,7 +56,7 @@ fn5 (void)\n {\n   int i = 5;\n   volatile int a[i];\n-  a[i] = 1;\n+  asm (\"\" : : \"r\" (&a) : \"memory\");\n   a[2] = a[i];\n }\n \n@@ -63,37 +65,40 @@ fn6 (void)\n {\n   int i = 5;\n   volatile int a[i];\n+  volatile int j;\n   fn_p (a[i]);\n-  a[foo_5 ()] = 1;\n+  asm (\"\" : : \"r\" (&a) : \"memory\");\n+  j = a[foo_5 ()];\n }\n \n static void __attribute__ ((noinline, noclone))\n fn7 (void)\n {\n-  int n = 5, i;\n+  int n = 5;\n+  volatile int i;\n   volatile int c[n][n][n];\n-  c[5][2][2] = 2;\n-  c[2][5][2] = 2;\n-  c[2][2][5] = 2;\n+  asm (\"\" : : \"r\" (&c[5]) : \"memory\");\n   i = c[5][2][2];\n+  asm (\"\" : : \"r\" (&c[2]) : \"memory\");\n   i = c[2][5][2];\n+  asm (\"\" : : \"r\" (&c[2]) : \"memory\");\n   i = c[2][2][5];\n }\n \n static void __attribute__ ((noinline, noclone))\n fn8 (void)\n {\n-  int i = 5;\n+  volatile int i;\n   volatile struct S s;\n-  s.a[10] = 1;\n+  asm (\"\" : : \"r\" (&s.a) : \"memory\");\n   i = s.a[10];\n }\n \n static void __attribute__ ((noinline, noclone))\n fn9 (void)\n {\n   long int *volatile d[10][5];\n-  d[10][0] = 0;\n+  asm (\"\" : : \"r\" (&d[10]) : \"memory\");\n   d[8][3] = d[10][0];\n }\n \n@@ -115,7 +120,7 @@ static void __attribute__ ((noinline, noclone))\n fn11 (void)\n {\n   char ***volatile f[5];\n-  f[5] = 0;\n+  asm (\"\" : : \"r\" (&f) : \"memory\");\n   f[2] = f[5];\n }\n \n@@ -148,21 +153,13 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[5\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[5\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[5\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[5\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]\\\\\\[\\\\\\*\\\\\\]\\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]\\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]\\\\\\[\\\\\\*\\\\\\]\\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]\\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 10 out of bounds for type 'int \\\\\\[10\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*index 10 out of bounds for type 'int \\\\\\[10\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 10 out of bounds for type 'long int \\\\\\*\\\\\\[10\\\\\\]\\\\\\[5\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*index 10 out of bounds for type 'long int \\\\\\*\\\\\\[10\\\\\\]\\\\\\[5\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'char \\\\\\*\\\\\\*\\\\\\*\\\\\\[5\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'char \\\\\\*\\\\\\*\\\\\\*\\\\\\[5\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[5\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "9698529e08ab926fd2bf785e1c9bdb6eacebd275", "filename": "gcc/testsuite/c-c++-common/ubsan/bounds-5.c", "status": "modified", "additions": 45, "deletions": 20, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4443341a9e4b33ead4365160127d0a51a2452c72/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4443341a9e4b33ead4365160127d0a51a2452c72/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-5.c?ref=4443341a9e4b33ead4365160127d0a51a2452c72", "patch": "@@ -9,11 +9,16 @@ void\n fn1 (void)\n {\n   volatile struct S { char a[1]; char b; } s;\n-  s.a[0] = 1; // OK\n-  s.a[1] = 2; // error\n+  volatile int i;\n+  asm (\"\" : : \"r\" (&s.a) : \"memory\");\n+  i = s.a[0]; // OK\n+  asm (\"\" : : \"r\" (&s.a) : \"memory\");\n+  i = s.a[1]; // error\n   volatile struct S *p = &s;\n-  p->a[0] = 1; // OK\n-  p->a[1] = 1; // error\n+  asm (\"\" : : \"r\" (&p->a) : \"memory\");\n+  i = p->a[0]; // OK\n+  asm (\"\" : : \"r\" (&p->a) : \"memory\");\n+  i = p->a[1]; // error\n }\n \n __attribute__ ((noinline, noclone))\n@@ -22,23 +27,33 @@ fn2 (void)\n {\n   struct S { int c; char d[4]; };\n   volatile struct T { int e; struct S f; int g; } t;\n-  t.f.d[3] = 1; // OK\n-  t.f.d[4] = 1; // error\n+  volatile int i;\n+  asm (\"\" : : \"r\" (&t.f.d) : \"memory\");\n+  i = t.f.d[3]; // OK\n+  asm (\"\" : : \"r\" (&t.f.d) : \"memory\");\n+  i = t.f.d[4]; // error\n   volatile struct T *p = &t;\n-  p->f.d[3] = 1; // OK\n-  p->f.d[4] = 1; // error\n+  asm (\"\" : : \"r\" (&p->f.d) : \"memory\");\n+  i = p->f.d[3]; // OK\n+  asm (\"\" : : \"r\" (&p->f.d) : \"memory\");\n+  i = p->f.d[4]; // error\n }\n \n __attribute__ ((noinline, noclone))\n void\n fn3 (void)\n {\n   volatile struct S { char b; char a[1]; } s;\n-  s.a[0] = 1; // OK\n-  s.a[1] = 1; // error\n+  volatile int i;\n+  asm (\"\" : : \"r\" (&s.a) : \"memory\");\n+  i = s.a[0]; // OK\n+  asm (\"\" : : \"r\" (&s.a) : \"memory\");\n+  i = s.a[1]; // error\n   volatile struct S *p = &s;\n-  p->a[0] = 1; // OK\n-  p->a[1] = 1; // error in strict mode\n+  asm (\"\" : : \"r\" (&p->a) : \"memory\");\n+  i = p->a[0]; // OK\n+  asm (\"\" : : \"r\" (&p->a) : \"memory\");\n+  i = p->a[1]; // error in strict mode\n }\n \n __attribute__ ((noinline, noclone))\n@@ -47,11 +62,16 @@ fn4 (void)\n {\n   volatile struct S { char b; char a[1]; } s;\n   volatile struct T { struct S s; int i; } t;\n-  t.s.a[0] = 1; // OK\n-  t.s.a[1] = 1; // error\n+  volatile int i;\n+  asm (\"\" : : \"r\" (&t.s.a) : \"memory\");\n+  i = t.s.a[0]; // OK\n+  asm (\"\" : : \"r\" (&t.s.a) : \"memory\");\n+  i = t.s.a[1]; // error\n   volatile struct T *pt = &t;\n-  pt->s.a[0] = 1; // OK\n-  pt->s.a[1] = 1; // error\n+  asm (\"\" : : \"r\" (&pt->s.a) : \"memory\");\n+  i = pt->s.a[0]; // OK\n+  asm (\"\" : : \"r\" (&pt->s.a) : \"memory\");\n+  i = pt->s.a[1]; // error\n }\n \n __attribute__ ((noinline, noclone))\n@@ -60,11 +80,16 @@ fn5 (void)\n {\n   volatile struct S { char b; char a[1]; } s;\n   volatile struct U { int a; struct S s; } u;\n-  u.s.a[0] = 1; // OK\n-  u.s.a[1] = 1; // error\n+  volatile int i;\n+  asm (\"\" : : \"r\" (&u.s.a) : \"memory\");\n+  i = u.s.a[0]; // OK\n+  asm (\"\" : : \"r\" (&u.s.a) : \"memory\");\n+  i = u.s.a[1]; // error\n   volatile struct U *pu = &u;\n-  pu->s.a[0] = 1; // OK\n-  pu->s.a[1] = 1; // error in strict mode\n+  asm (\"\" : : \"r\" (&pu->s.a) : \"memory\");\n+  i = pu->s.a[0]; // OK\n+  asm (\"\" : : \"r\" (&pu->s.a) : \"memory\");\n+  i = pu->s.a[1]; // error in strict mode\n }\n \n int"}, {"sha": "2d7cc3b5ed2622bbc9956b02a32ce6b9ee596b2d", "filename": "gcc/testsuite/c-c++-common/ubsan/bounds-7.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4443341a9e4b33ead4365160127d0a51a2452c72/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4443341a9e4b33ead4365160127d0a51a2452c72/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-7.c?ref=4443341a9e4b33ead4365160127d0a51a2452c72", "patch": "@@ -0,0 +1,54 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=bounds\" } */\n+\n+/* Test negative bounds.  */\n+\n+struct S { int a[10]; };\n+\n+__attribute__ ((noinline, noclone))\n+void\n+fn1 (void)\n+{\n+  volatile int i;\n+  int m = -1;\n+  volatile int a[7];\n+  asm (\"\" : : \"r\" (&a) : \"memory\");\n+  i = a[-1];\n+  asm (\"\" : : \"r\" (&a) : \"memory\");\n+  i = a[m];\n+}\n+\n+__attribute__ ((noinline, noclone))\n+void\n+fn2 (void)\n+{\n+  volatile int i;\n+  int m = 7;\n+  volatile int a[m];\n+  asm (\"\" : : \"r\" (&a) : \"memory\");\n+  i = a[-1];\n+}\n+\n+__attribute__ ((noinline, noclone))\n+void\n+fn3 (void)\n+{\n+  volatile int i;\n+  volatile struct S s;\n+  asm (\"\" : : \"r\" (&s.a) : \"memory\");\n+  i = s.a[-1];\n+}\n+\n+int\n+main (void)\n+{\n+  fn1 ();\n+  fn2 ();\n+  fn3 ();\n+  return 0;\n+}\n+\n+/* { dg-output \"index -1 out of bounds for type 'int \\\\\\[7\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*index -1 out of bounds for type 'int \\\\\\[7\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*index -1 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*index -1 out of bounds for type 'int \\\\\\[10\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}]}