{"sha": "bb7c147fc8197a85a29f7d2d6e0f78331800edec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI3YzE0N2ZjODE5N2E4NWEyOWY3ZDJkNmUwZjc4MzMxODAwZWRlYw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-03-06T10:01:16Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-03-06T10:01:16Z"}, "message": "Use --coverage instead of -fprofile-arcs -ftest-coverage in documentation (PR gcov-profile/89577).\n\n2019-03-06  Martin Liska  <mliska@suse.cz>\n\n\tPR gcov-profile/89577\n\t* doc/gcov.texi: Prefer to use --coverage.\n\t* doc/sourcebuild.texi: Likewise.\n\nFrom-SVN: r269415", "tree": {"sha": "5dd863784c9c359b0050fbc406dedca5680299bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dd863784c9c359b0050fbc406dedca5680299bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb7c147fc8197a85a29f7d2d6e0f78331800edec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb7c147fc8197a85a29f7d2d6e0f78331800edec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb7c147fc8197a85a29f7d2d6e0f78331800edec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb7c147fc8197a85a29f7d2d6e0f78331800edec/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08bc73f09c02a49e125c5e851456ac5b13ac3560", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08bc73f09c02a49e125c5e851456ac5b13ac3560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08bc73f09c02a49e125c5e851456ac5b13ac3560"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "2603a777ee135969c77d2d09dd25088f64541826", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb7c147fc8197a85a29f7d2d6e0f78331800edec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb7c147fc8197a85a29f7d2d6e0f78331800edec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb7c147fc8197a85a29f7d2d6e0f78331800edec", "patch": "@@ -1,3 +1,9 @@\n+2019-03-06  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/89577\n+\t* doc/gcov.texi: Prefer to use --coverage.\n+\t* doc/sourcebuild.texi: Likewise.\n+\n 2019-03-02  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/86485 - -Wmaybe-unused with empty class ?:"}, {"sha": "eaac2f6940969f6bcc845d911814c284c73dc12f", "filename": "gcc/doc/gcov.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb7c147fc8197a85a29f7d2d6e0f78331800edec/gcc%2Fdoc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb7c147fc8197a85a29f7d2d6e0f78331800edec/gcc%2Fdoc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.texi?ref=bb7c147fc8197a85a29f7d2d6e0f78331800edec", "patch": "@@ -486,8 +486,8 @@ are @emph{exactly} 0% and 100% respectively.  Other values which would\n conventionally be rounded to 0% or 100% are instead printed as the\n nearest non-boundary value.\n \n-When using @command{gcov}, you must first compile your program with two\n-special GCC options: @samp{-fprofile-arcs -ftest-coverage}.\n+When using @command{gcov}, you must first compile your program\n+with a special GCC option @samp{--coverage}.\n This tells the compiler to generate additional information needed by\n gcov (basically a flow graph of the program) and also includes\n additional code in the object files for generating the extra profiling\n@@ -504,7 +504,7 @@ for each line.  For example, if your program is called @file{tmp.cpp}, this\n is what you see when you use the basic @command{gcov} facility:\n \n @smallexample\n-$ g++ -fprofile-arcs -ftest-coverage tmp.cpp\n+$ g++ --coverage tmp.cpp\n $ a.out\n $ gcov tmp.cpp -m\n File 'tmp.cpp'\n@@ -802,8 +802,8 @@ new execution counts and finally writes the data to the file.\n @section Using @command{gcov} with GCC Optimization\n \n If you plan to use @command{gcov} to help optimize your code, you must\n-first compile your program with two special GCC options:\n-@samp{-fprofile-arcs -ftest-coverage}.  Aside from that, you can use any\n+first compile your program with a special GCC option\n+@samp{--coverage}.  Aside from that, you can use any\n other GCC options; but if you want to prove that every single line\n in your program was executed, you should not compile with optimization\n at the same time.  On some machines the optimizer can eliminate some"}, {"sha": "cf12d7483712e85877c381be1722b0c137a79de4", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb7c147fc8197a85a29f7d2d6e0f78331800edec/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb7c147fc8197a85a29f7d2d6e0f78331800edec/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=bb7c147fc8197a85a29f7d2d6e0f78331800edec", "patch": "@@ -2967,7 +2967,7 @@ in @file{lib/gcc-dg.exp} to compile and run the test program.  A typical\n @command{gcov} test contains the following DejaGnu commands within comments:\n \n @smallexample\n-@{ dg-options \"-fprofile-arcs -ftest-coverage\" @}\n+@{ dg-options \"--coverage\" @}\n @{ dg-do run @{ target native @} @}\n @{ dg-final @{ run-gcov sourcefile @} @}\n @end smallexample"}]}