{"sha": "c4f826d933368a60087f9bcc72c798cf005a6636", "node_id": "C_kwDOANBUbNoAKGM0ZjgyNmQ5MzMzNjhhNjAwODdmOWJjYzcyYzc5OGNmMDA1YTY2MzY", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-08-04T13:07:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-01T06:13:35Z"}, "message": "[Ada] Document that gnatmem requires fixed-position executables\n\ngcc/ada/\n\n\t* doc/gnat_ugn/gnat_and_program_execution.rst (gnatmem): Document\n\tthat it works only with fixed-position executables.", "tree": {"sha": "6e2bb4d07bfc258a69f8777f90ef59d4b58cbeba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e2bb4d07bfc258a69f8777f90ef59d4b58cbeba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4f826d933368a60087f9bcc72c798cf005a6636", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4f826d933368a60087f9bcc72c798cf005a6636", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4f826d933368a60087f9bcc72c798cf005a6636", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4f826d933368a60087f9bcc72c798cf005a6636/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e0782a9fab99f32f08b9dc3d8167360425ecb95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0782a9fab99f32f08b9dc3d8167360425ecb95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e0782a9fab99f32f08b9dc3d8167360425ecb95"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "24ef9d6ca41ea697ecb90209ef7c088a7e00ab06", "filename": "gcc/ada/doc/gnat_ugn/gnat_and_program_execution.rst", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f826d933368a60087f9bcc72c798cf005a6636/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f826d933368a60087f9bcc72c798cf005a6636/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst?ref=c4f826d933368a60087f9bcc72c798cf005a6636", "patch": "@@ -3680,8 +3680,9 @@ execution of this erroneous program:\n   The ``gnatmem`` utility monitors dynamic allocation and\n   deallocation activity in a program, and displays information about\n   incorrect deallocations and possible sources of memory leaks.\n-  It is designed to work in association with a static runtime library\n-  only and in this context provides three types of information:\n+  It is designed to work for fixed-position executables in association\n+  with a static runtime library only and in this context provides three\n+  types of information:\n \n   * General information concerning memory management, such as the total\n     number of allocations and deallocations, the amount of allocated\n@@ -3711,15 +3712,16 @@ execution of this erroneous program:\n \n        $ gnatmem [ switches ] [ DEPTH ] user_program\n \n-  The program must have been linked with the instrumented version of the\n+  The user program must be linked with the instrumented version of the\n   allocation and deallocation routines. This is done by linking with the\n   :file:`libgmem.a` library. For correct symbolic backtrace information,\n-  the user program should be compiled with debugging options\n-  (see :ref:`Switches_for_gcc`). For example to build :file:`my_program`:\n+  the user program should also both be compiled with debugging options\n+  (see :ref:`Switches_for_gcc`) and be linked at a fixed position. For\n+  example to build :file:`my_program` with ``gnatmake``:\n \n     ::\n \n-       $ gnatmake -g my_program -largs -lgmem\n+       $ gnatmake -g my_program -largs -lgmem -no-pie\n \n   As library :file:`libgmem.a` contains an alternate body for package\n   ``System.Memory``, :file:`s-memory.adb` should not be compiled and linked"}]}