{"sha": "a1f427e9a5750602aca0419f947d1612729b5793", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFmNDI3ZTlhNTc1MDYwMmFjYTA0MTlmOTQ3ZDE2MTI3MjliNTc5Mw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2017-06-09T18:44:28Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-06-09T18:44:28Z"}, "message": "opts.c (finish_options): If -fsplit-stack, disable implicit -forder-blocks-and-partition.\n\ngcc/:\n\t* opts.c (finish_options): If -fsplit-stack, disable implicit\n\t-forder-blocks-and-partition.\n\t* doc/invoke.texi (Optimize Options): Document that when using\n\t-fsplit-stack -forder-blocks-and-partition is not implicitly\n\tenabled.\ngcc/go/:\n\t* go-lang.c (go_langhook_post_options): If -fsplit-stack is turned\n\ton, disable implicit -forder-blocks-and-partition.\ngcc/testsuite/:\n\t* gcc.dg/tree-prof/split-1.c: New test.\n\nFrom-SVN: r249071", "tree": {"sha": "cc12d6764d5fc554e61f0f5dafc58ce91099a908", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc12d6764d5fc554e61f0f5dafc58ce91099a908"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1f427e9a5750602aca0419f947d1612729b5793", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1f427e9a5750602aca0419f947d1612729b5793", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1f427e9a5750602aca0419f947d1612729b5793", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1f427e9a5750602aca0419f947d1612729b5793/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0"}], "stats": {"total": 81, "additions": 80, "deletions": 1}, "files": [{"sha": "9cbae2a09efd9c237ac4495403fd70341b48c101", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1f427e9a5750602aca0419f947d1612729b5793", "patch": "@@ -1,3 +1,11 @@\n+2017-06-9  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* opts.c (finish_options): If -fsplit-stack, disable implicit\n+\t-forder-blocks-and-partition.\n+\t* doc/invoke.texi (Optimize Options): Document that when using\n+\t-fsplit-stack -forder-blocks-and-partition is not implicitly\n+\tenabled.\n+\n 2017-06-09  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* builtin-attrs.def (ATTR_NORETURN_NOTHROW_LEAF_COLD_LIST,"}, {"sha": "5d416490d49f976be9cd60ad77cee713d5c2412f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a1f427e9a5750602aca0419f947d1612729b5793", "patch": "@@ -8656,7 +8656,9 @@ paging and cache locality performance.\n This optimization is automatically turned off in the presence of\n exception handling, for linkonce sections, for functions with a user-defined\n section attribute and on any architecture that does not support named\n-sections.\n+sections.  When @option{-fsplit-stack} is used this option is not\n+enabled by default (to avoid linker errors), but may be enabled\n+explicitly (if using a working linker).\n \n Enabled for x86 at levels @option{-O2}, @option{-O3}.\n "}, {"sha": "ac0dbe3f99d6a29ff4c350fdf361cb86990718ef", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=a1f427e9a5750602aca0419f947d1612729b5793", "patch": "@@ -1,3 +1,8 @@\n+2017-06-09  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* go-lang.c (go_langhook_post_options): If -fsplit-stack is turned\n+\ton, disable implicit -forder-blocks-and-partition.\n+\n 2017-05-12  Than McIntosh  <thanm@google.com>\n \n \t* go-gcc.cc (Gcc_backend::call_expression): Add caller parameter."}, {"sha": "09e4fea09a5d4e3766cee575adc74496175b3a2e", "filename": "gcc/go/go-lang.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2Fgo%2Fgo-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2Fgo%2Fgo-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-lang.c?ref=a1f427e9a5750602aca0419f947d1612729b5793", "patch": "@@ -304,6 +304,15 @@ go_langhook_post_options (const char **pfilename ATTRIBUTE_UNUSED)\n       && targetm_common.supports_split_stack (false, &global_options))\n     global_options.x_flag_split_stack = 1;\n \n+  /* If stack splitting is turned on, and the user did not explicitly\n+     request function partitioning, turn off partitioning, as it\n+     confuses the linker when trying to handle partitioned split-stack\n+     code that calls a non-split-stack function.  */\n+  if (global_options.x_flag_split_stack\n+      && global_options.x_flag_reorder_blocks_and_partition\n+      && !global_options_set.x_flag_reorder_blocks_and_partition)\n+    global_options.x_flag_reorder_blocks_and_partition = 0;\n+\n   /* Returning false means that the backend should be used.  */\n   return false;\n }"}, {"sha": "5ec99807f227118fe698f0c41c18dcdcf9c7acec", "filename": "gcc/opts.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=a1f427e9a5750602aca0419f947d1612729b5793", "patch": "@@ -863,6 +863,16 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n       opts->x_flag_reorder_blocks = 1;\n     }\n \n+  /* If stack splitting is turned on, and the user did not explicitly\n+     request function partitioning, turn off partitioning, as it\n+     confuses the linker when trying to handle partitioned split-stack\n+     code that calls a non-split-stack functions.  But if partitioning\n+     was turned on explicitly just hope for the best.  */\n+  if (opts->x_flag_split_stack\n+      && opts->x_flag_reorder_blocks_and_partition\n+      && !opts_set->x_flag_reorder_blocks_and_partition)\n+    opts->x_flag_reorder_blocks_and_partition = 0;\n+\n   if (opts->x_flag_reorder_blocks_and_partition\n       && !opts_set->x_flag_reorder_functions)\n     opts->x_flag_reorder_functions = 1;"}, {"sha": "05a5827dca7a4535a2dfc59e24308aaecb260565", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a1f427e9a5750602aca0419f947d1612729b5793", "patch": "@@ -1,3 +1,7 @@\n+2017-06-09  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* gcc.dg/tree-prof/split-1.c: New test.\n+\n 2017-06-09  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gcc.dg/predict-14.c: Avoid cold function detection."}, {"sha": "a42fccf37b514e8002264f13ba967fc4cd5e7a15", "filename": "gcc/testsuite/gcc.dg/tree-prof/split-1.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fsplit-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1f427e9a5750602aca0419f947d1612729b5793/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fsplit-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fsplit-1.c?ref=a1f427e9a5750602aca0419f947d1612729b5793", "patch": "@@ -0,0 +1,41 @@\n+/* Test case that we don't get a link-time error when using\n+   -fsplit-stack with -freorder-blocks-and-partition.  */\n+/* { dg-require-effective-target freorder } */\n+/* { dg-options \"-O2 -fsplit-stack\" } */\n+\n+extern unsigned int sleep (unsigned int);\n+\n+#define SIZE 10000\n+\n+const char *sarr[SIZE];\n+const char *buf_hot;\n+const char *buf_cold;\n+\n+__attribute__((noinline))\n+void \n+foo (int path)\n+{\n+  int i;\n+  if (path)\n+    {\n+      for (i = 0; i < SIZE; i++)\n+\tsarr[i] = buf_hot;\n+    }\n+  else\n+    {\n+      for (i = 0; i < SIZE; i++)\n+\tsarr[i] = buf_cold;\n+      sleep (0);\n+    }\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  int i;\n+  buf_hot =  \"hello\";\n+  buf_cold = \"world\";\n+  for (i = 0; i < 1000000; i++)\n+    foo (argc);\n+  return 0;\n+}"}]}