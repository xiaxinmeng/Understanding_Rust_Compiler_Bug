{"sha": "e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMwMGVjMmQxYzIzMGVhNjBiM2Y2ZWIzNjk0NWVhODdhMGE3YmM3Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-01-18T20:24:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-18T20:24:34Z"}, "message": "re PR tree-optimization/56029 (ICE: verify_gimple failed, location references block not in block tree)\n\n\tPR tree-optimization/56029\n\t* tree-phinodes.c (reserve_phi_args_for_new_edge): Set\n\tgimple_phi_arg_location for the new arg to UNKNOWN_LOCATION.\n\n\t* g++.dg/torture/pr56029.C: New test.\n\nFrom-SVN: r195304", "tree": {"sha": "da7e3ef52eb40dfacc29f4829de7733eff7905d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da7e3ef52eb40dfacc29f4829de7733eff7905d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3d7af04118e10c592dfdd9502a8368df3d34853", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3d7af04118e10c592dfdd9502a8368df3d34853", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3d7af04118e10c592dfdd9502a8368df3d34853"}], "stats": {"total": 138, "additions": 138, "deletions": 0}, "files": [{"sha": "2d7a0421dde66325a9e9b419068b748a2c8b4152", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73", "patch": "@@ -1,3 +1,9 @@\n+2013-01-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56029\n+\t* tree-phinodes.c (reserve_phi_args_for_new_edge): Set\n+\tgimple_phi_arg_location for the new arg to UNKNOWN_LOCATION.\n+\n 2013-01-18  Sharad Singhai  <singhai@google.com>\n \n \tPR tree-optimization/55995"}, {"sha": "0640b26bcd047384189a3598821f3a40152e9848", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73", "patch": "@@ -1,3 +1,8 @@\n+2013-01-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56029\n+\t* g++.dg/torture/pr56029.C: New test.\n+\n 2013-01-18  Sharad Singhai  <singhai@google.com>\n \n \tPR tree-optimization/55995"}, {"sha": "ca4a82a00604d1e714f16c42c2db0194b77e19a0", "filename": "gcc/testsuite/g++.dg/torture/pr56029.C", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr56029.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr56029.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr56029.C?ref=e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73", "patch": "@@ -0,0 +1,126 @@\n+// PR tree-optimization/56029\n+// { dg-do compile }\n+\n+template <class T>\n+struct DefaultDeleter\n+{\n+  void operator () (T * ptr) { delete ptr; }\n+};\n+template <class T, class D>\n+struct scoped_ptr_impl\n+{\n+  scoped_ptr_impl (T * p):data_ (p) {}\n+  template <typename U, typename V>\n+  scoped_ptr_impl (scoped_ptr_impl <U, V> *other):data_ (other->release (), get_deleter ()) {}\n+  ~scoped_ptr_impl () { static_cast <D> (data_) (data_.ptr); }\n+  void reset (T * p) { data_.ptr = p; }\n+  D get_deleter () {}\n+  T *release () { data_.ptr = __null; }\n+  struct Data\n+  : D\n+  {\n+    Data (T *) : ptr () {}\n+    Data (T *, D) : D (), ptr () {}\n+    T *ptr;\n+  };\n+  Data data_;\n+};\n+template <class T, class D = DefaultDeleter <T> >\n+struct scoped_ptr\n+{\n+  struct RValue\n+  {\n+    RValue (scoped_ptr * object):object (object) {}\n+    scoped_ptr *object;\n+  };\n+  scoped_ptr Pass () { return scoped_ptr ((this)); }\n+  typedef T element_type;\n+  typedef D deleter_type;\n+  scoped_ptr () : impl_ (__null) {}\n+  scoped_ptr (RValue rvalue) : impl_ (&rvalue.object->impl_) {}\n+  void reset (element_type * p) { impl_.reset (p); }\n+  scoped_ptr_impl <element_type, deleter_type> impl_;\n+};\n+template <typename>\n+struct Callback;\n+struct ClientSocketFactory;\n+struct DatagramClientSocket;\n+struct DnsSocketPool\n+{\n+  scoped_ptr <DatagramClientSocket> CreateConnectedSocket ();\n+  ClientSocketFactory *socket_factory_;\n+};\n+int RandInt (int, int);\n+struct BindStateBase {};\n+struct CallbackBase\n+{\n+  CallbackBase (BindStateBase *);\n+  ~CallbackBase ();\n+};\n+template <typename, typename, typename>\n+struct BindState;\n+template <typename R, typename A1, typename A2>\n+struct Callback <R (A1, A2)> : CallbackBase\n+{\n+  template <typename Runnable, typename BindRunType, typename BoundArgsType>\n+  Callback (BindState <Runnable, BindRunType, BoundArgsType> *bind_state) : CallbackBase (bind_state) {}\n+};\n+typedef Callback <int (int, int)>\n+RandIntCallback;\n+struct ClientSocketFactory\n+{\n+  virtual DatagramClientSocket *CreateDatagramClientSocket (RandIntCallback) = 0;\n+};\n+template <typename>\n+struct RunnableAdapter;\n+template <typename R, typename A1, typename A2>\n+struct RunnableAdapter <R (*) (A1, A2)>\n+{\n+  typedef R (RunType) (A1, A2);\n+};\n+template <typename T>\n+struct FunctorTraits\n+{\n+  typedef RunnableAdapter <T> RunnableType;\n+  typedef typename RunnableType::RunType RunType;\n+};\n+template <typename T>\n+typename FunctorTraits <T>::RunnableType MakeRunnable (T)\n+{\n+}\n+template <int, typename, typename>\n+struct Invoker;\n+template <typename StorageType, typename R, typename X1, typename X2>\n+struct Invoker <0, StorageType, R (X1, X2)>\n+{\n+  typedef R (UnboundRunType) (X1, X2);\n+};\n+template <typename Runnable, typename RunType>\n+struct BindState <Runnable, RunType, void ()> : BindStateBase\n+{\n+  typedef Runnable RunnableType;\n+  typedef Invoker <0, BindState, RunType> InvokerType;\n+  typedef typename InvokerType::UnboundRunType UnboundRunType;\n+  BindState (Runnable):runnable_ () {}\n+  RunnableType runnable_;\n+};\n+template <typename Functor>\n+Callback <typename BindState <typename FunctorTraits <Functor>::RunnableType, typename FunctorTraits <Functor>::RunType, void ()>::UnboundRunType>\n+Bind (Functor functor)\n+{\n+  typedef typename FunctorTraits <Functor>::RunnableType RunnableType;\n+  typedef typename FunctorTraits <Functor>::RunType RunType;\n+  typedef BindState <RunnableType, RunType, void ()> BindState;\n+  Callback <typename BindState::UnboundRunType> (new BindState (MakeRunnable (functor)));\n+}\n+struct DatagramClientSocket\n+{\n+  virtual ~ DatagramClientSocket ();\n+};\n+scoped_ptr <DatagramClientSocket>\n+DnsSocketPool::CreateConnectedSocket ()\n+{\n+  scoped_ptr <DatagramClientSocket> socket;\n+  socket.reset (socket_factory_->CreateDatagramClientSocket (Bind (RandInt)));\n+  socket.Pass ();\n+}"}, {"sha": "03a20faa9c08c28a88a0916901805517fa094414", "filename": "gcc/tree-phinodes.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73/gcc%2Ftree-phinodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73/gcc%2Ftree-phinodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-phinodes.c?ref=e300ec2d1c230ea60b3f6eb36945ea87a0a7bc73", "patch": "@@ -312,6 +312,7 @@ reserve_phi_args_for_new_edge (basic_block bb)\n \t redirects edges, and then fixes up PHI arguments later in\n \t batch.  */\n       SET_PHI_ARG_DEF (stmt, len - 1, NULL_TREE);\n+      gimple_phi_arg_set_location (stmt, len - 1, UNKNOWN_LOCATION);\n \n       stmt->gimple_phi.nargs++;\n     }"}]}