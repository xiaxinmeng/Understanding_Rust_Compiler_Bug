{"sha": "7f93abd805763ef3827fce9194b0adcd2419a45c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y5M2FiZDgwNTc2M2VmMzgyN2ZjZTkxOTRiMGFkY2QyNDE5YTQ1Yw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-06-15T14:19:47Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-15T14:19:47Z"}, "message": "LWG 2993 reference_wrapper<T> conversion from T&&\n\n\t* doc/xml/manual/intro.xml: Document LWG 2993 change.\n\t* include/bits/refwrap.h (reference_wrapper(_Tp&)): Remove.\n\t(reference_wrapper(_Tp&&)): Remove.\n\t(reference_wrapper<_Up>(_Up&&)): Define new constructor as constrained\n\ttemplate.\n\t(reference_wrapper): Add deduction guide.\n\t* testsuite/20_util/reference_wrapper/deduction.cc: New.\n\t* testsuite/20_util/reference_wrapper/lwg2993.cc: New.\n\nFrom-SVN: r261632", "tree": {"sha": "fb00df793c897b007fc7ff9c3344d546a10c0f2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb00df793c897b007fc7ff9c3344d546a10c0f2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f93abd805763ef3827fce9194b0adcd2419a45c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f93abd805763ef3827fce9194b0adcd2419a45c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f93abd805763ef3827fce9194b0adcd2419a45c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f93abd805763ef3827fce9194b0adcd2419a45c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1ac60d5759dc63e4f03311d6c85cda8c9d12133", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ac60d5759dc63e4f03311d6c85cda8c9d12133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ac60d5759dc63e4f03311d6c85cda8c9d12133"}], "stats": {"total": 143, "additions": 138, "deletions": 5}, "files": [{"sha": "31c8f36952029acb55625a521e84af8b3f780df5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f93abd805763ef3827fce9194b0adcd2419a45c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f93abd805763ef3827fce9194b0adcd2419a45c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7f93abd805763ef3827fce9194b0adcd2419a45c", "patch": "@@ -1,5 +1,15 @@\n 2018-06-15  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tLWG 2993 reference_wrapper<T> conversion from T&&\n+\t* doc/xml/manual/intro.xml: Document LWG 2993 change.\n+\t* include/bits/refwrap.h (reference_wrapper(_Tp&)): Remove.\n+\t(reference_wrapper(_Tp&&)): Remove.\n+\t(reference_wrapper<_Up>(_Up&&)): Define new constructor as constrained\n+\ttemplate.\n+\t(reference_wrapper): Add deduction guide.\n+\t* testsuite/20_util/reference_wrapper/deduction.cc: New.\n+\t* testsuite/20_util/reference_wrapper/lwg2993.cc: New.\n+\n \tLWG 3039 Unnecessary decay in thread and packaged_task\n \t* include/std/future (__constrain_pkgdtask): Replace with ...\n \t(packaged_task::__not_same): New alias template, using"}, {"sha": "90d43903def2858af53c802b18055b43d537a242", "filename": "libstdc++-v3/doc/xml/manual/intro.xml", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f93abd805763ef3827fce9194b0adcd2419a45c/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f93abd805763ef3827fce9194b0adcd2419a45c/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml?ref=7f93abd805763ef3827fce9194b0adcd2419a45c", "patch": "@@ -1160,6 +1160,14 @@ requirements of the license of GCC.\n     <listitem><para>Add noexcept.\n     </para></listitem></varlistentry>\n \n+    <varlistentry xml:id=\"manual.bugs.dr2993\"><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"&DR;#2993\">2993</link>:\n+       <emphasis><code>reference_wrapper&lt;T&gt;</code> conversion from <code>T&amp;&amp;</code>\n+       </emphasis>\n+    </term>\n+    <listitem><para>Replaced the constructors with a constrained template,\n+      to prevent participation in overload resolution when not valid.\n+    </para></listitem></varlistentry>\n+\n     <varlistentry xml:id=\"manual.bugs.dr3074\"><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"&DR;#3074\">3074</link>:\n        <emphasis>Non-member functions for <code>valarray</code> should only deduce from the <code>valarray</code>\n        </emphasis>"}, {"sha": "2fdf231898fea872493bbeb87f694cb2053471c2", "filename": "libstdc++-v3/include/bits/refwrap.h", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f93abd805763ef3827fce9194b0adcd2419a45c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frefwrap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f93abd805763ef3827fce9194b0adcd2419a45c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frefwrap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frefwrap.h?ref=7f93abd805763ef3827fce9194b0adcd2419a45c", "patch": "@@ -291,14 +291,25 @@ _GLIBCXX_MEM_FN_TRAITS(&& noexcept, false_type, true_type)\n     {\n       _Tp* _M_data;\n \n+      static _Tp* _S_fun(_Tp& __r) noexcept { return std::__addressof(__r); }\n+      static void _S_fun(_Tp&&) = delete;\n+\n+      template<typename _Up, typename _Up2 = __remove_cvref_t<_Up>>\n+\tusing __not_same\n+\t  = typename enable_if<!is_same<reference_wrapper, _Up2>::value>::type;\n+\n     public:\n       typedef _Tp type;\n \n-      reference_wrapper(_Tp& __indata) noexcept\n-      : _M_data(std::__addressof(__indata))\n-      { }\n-\n-      reference_wrapper(_Tp&&) = delete;\n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 2993. reference_wrapper<T> conversion from T&&\n+      // 3041. Unnecessary decay in reference_wrapper\n+      template<typename _Up, typename = __not_same<_Up>, typename\n+\t\t= decltype(reference_wrapper::_S_fun(std::declval<_Up>()))>\n+\treference_wrapper(_Up&& __uref)\n+\tnoexcept(noexcept(reference_wrapper::_S_fun(std::declval<_Up>())))\n+\t: _M_data(reference_wrapper::_S_fun(std::forward<_Up>(__uref)))\n+\t{ }\n \n       reference_wrapper(const reference_wrapper&) = default;\n \n@@ -320,6 +331,10 @@ _GLIBCXX_MEM_FN_TRAITS(&& noexcept, false_type, true_type)\n \t}\n     };\n \n+#if __cpp_deduction_guides\n+  template<typename _Tp>\n+    reference_wrapper(_Tp&) -> reference_wrapper<_Tp>;\n+#endif\n \n   /// Denotes a reference should be taken to a variable.\n   template<typename _Tp>"}, {"sha": "cc5b260cb160f7be931e17cdc8ed3faf11a009d4", "filename": "libstdc++-v3/testsuite/20_util/reference_wrapper/deduction.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f93abd805763ef3827fce9194b0adcd2419a45c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Fdeduction.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f93abd805763ef3827fce9194b0adcd2419a45c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Fdeduction.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Fdeduction.cc?ref=7f93abd805763ef3827fce9194b0adcd2419a45c", "patch": "@@ -0,0 +1,45 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <functional>\n+\n+void\n+test01()\n+{\n+  int i = 0;\n+  std::reference_wrapper rw0(i);\n+  [[maybe_unused]] std::reference_wrapper<int>* p0 = &rw0;\n+  [[maybe_unused]] int& r0 = rw0;\n+\n+  std::reference_wrapper rw1(rw0);\n+  [[maybe_unused]] std::reference_wrapper<int>* p1 = &rw1;\n+  [[maybe_unused]] int& r1 = rw1;\n+}\n+\n+void\n+test02()\n+{\n+  const int i = 0;\n+  std::reference_wrapper rw0(i);\n+  [[maybe_unused]] std::reference_wrapper<const int>* p0 = &rw0;\n+\n+  std::reference_wrapper rw1(rw0);\n+  [[maybe_unused]] std::reference_wrapper<const int>* p1 = &rw1;\n+}"}, {"sha": "0a339486ef872da0d2399e12486cb4e0e34c4092", "filename": "libstdc++-v3/testsuite/20_util/reference_wrapper/lwg2993.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f93abd805763ef3827fce9194b0adcd2419a45c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Flwg2993.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f93abd805763ef3827fce9194b0adcd2419a45c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Flwg2993.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Flwg2993.cc?ref=7f93abd805763ef3827fce9194b0adcd2419a45c", "patch": "@@ -0,0 +1,55 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++11 } }\n+\n+#include <functional>\n+\n+// LWG 2993. reference_wrapper<T> conversion from T&&\n+\n+static_assert(std::is_convertible<std::reference_wrapper<int>,\n+\t\t\t\t  std::reference_wrapper<const int>>::value,\n+\t      \"LWG 2993 enables qualification conversions\");\n+\n+// The comments below are taken from the issue discussion and describe the\n+// behaviour before the resolution of LWG 2993. There should be no errors now.\n+\n+struct convertible_from_int { convertible_from_int(int) { } };\n+\n+void\n+test01()\n+{\n+\n+  void meow(std::reference_wrapper<int>); //#1\n+  void meow(convertible_from_int); //#2\n+  // error, ambiguous; would unambiguously call #2 if #1 instead took int&\n+  meow(0);\n+}\n+\n+void\n+test02()\n+{\n+  std::reference_wrapper<int> purr();\n+\n+  // error, ambiguous: ICS exists from int prvalue to\n+  // reference_wrapper<int> and from reference_wrapper<int> to int\n+  auto x = true ? purr() : 0;\n+\n+  // error: no member 'type' because the conditional\n+  // expression is ill-formed\n+  using t = std::common_type_t<std::reference_wrapper<int>, int>;\n+}"}]}