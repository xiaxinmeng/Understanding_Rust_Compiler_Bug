{"sha": "83e1a7f080f91f7cc1bb7916cd15779f685c7697", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNlMWE3ZjA4MGY5MWY3Y2MxYmI3OTE2Y2QxNTc3OWY2ODVjNzY5Nw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2012-05-21T18:02:17Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2012-05-21T18:02:17Z"}, "message": "gimple.h (gimple_set_in_transaction): Remove.\n\n        * gimple.h (gimple_set_in_transaction): Remove.\n        (gimple_in_transaction): Look in BB instead.\n        (gimple_statement_base): Remove in_transaction field.\n        * basic-block.h (enum bb_flags): Add BB_IN_TRANSACTION.\n        * trans-mem.c (compute_transaction_bits): Place transaction bit\n        information into basic blocks.\n\nFrom-SVN: r187729", "tree": {"sha": "7d77d20baeae4084708dde20bb2b440ed8aa0bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d77d20baeae4084708dde20bb2b440ed8aa0bf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83e1a7f080f91f7cc1bb7916cd15779f685c7697", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83e1a7f080f91f7cc1bb7916cd15779f685c7697", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83e1a7f080f91f7cc1bb7916cd15779f685c7697", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83e1a7f080f91f7cc1bb7916cd15779f685c7697/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ac65d04f460ef0d2275d680d251f22a77216a5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac65d04f460ef0d2275d680d251f22a77216a5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac65d04f460ef0d2275d680d251f22a77216a5b"}], "stats": {"total": 41, "additions": 20, "deletions": 21}, "files": [{"sha": "251d5ef8dcc9b9bee817eb9690add63983676ac4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83e1a7f080f91f7cc1bb7916cd15779f685c7697/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83e1a7f080f91f7cc1bb7916cd15779f685c7697/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83e1a7f080f91f7cc1bb7916cd15779f685c7697", "patch": "@@ -1,3 +1,12 @@\n+2012-05-21  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimple.h (gimple_set_in_transaction): Remove.\n+\t(gimple_in_transaction): Look in BB instead.\n+\t(gimple_statement_base): Remove in_transaction field.\n+\t* basic-block.h (enum bb_flags): Add BB_IN_TRANSACTION.\n+\t* trans-mem.c (compute_transaction_bits): Place transaction bit\n+\tinformation into basic blocks.\n+\n 2012-05-21  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* expr.c (get_def_for_expr_class): Define only if"}, {"sha": "3aa3a78a7d8863cf85b2ec1ae61fca42eb84a043", "filename": "gcc/basic-block.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83e1a7f080f91f7cc1bb7916cd15779f685c7697/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83e1a7f080f91f7cc1bb7916cd15779f685c7697/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=83e1a7f080f91f7cc1bb7916cd15779f685c7697", "patch": "@@ -263,7 +263,12 @@ enum bb_flags\n   BB_MODIFIED = 1 << 12,\n \n   /* A general visited flag for passes to use.  */\n-  BB_VISITED = 1 << 13\n+  BB_VISITED = 1 << 13,\n+\n+  /* Set on blocks that are in a transaction.  This is calculated on\n+     demand, and is available after calling\n+     compute_transaction_bits().  */\n+  BB_IN_TRANSACTION = 1 << 14\n };\n \n /* Dummy flag for convenience in the hot/cold partitioning code.  */"}, {"sha": "523619204bcd95e3732703f62f80909cf08b1e82", "filename": "gcc/gimple.h", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83e1a7f080f91f7cc1bb7916cd15779f685c7697/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83e1a7f080f91f7cc1bb7916cd15779f685c7697/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=83e1a7f080f91f7cc1bb7916cd15779f685c7697", "patch": "@@ -179,11 +179,6 @@ struct GTY(()) gimple_statement_base {\n   /* Nonzero if this statement contains volatile operands.  */\n   unsigned has_volatile_ops \t: 1;\n \n-  /* Nonzero if this statement appears inside a transaction.  This bit\n-     is calculated on de-mand and has relevant information only after\n-     it has been calculated with compute_transaction_bits.  */\n-  unsigned in_transaction\t: 1;\n-\n   /* The SUBCODE field can be used for tuple-specific flags for tuples\n      that do not require subcodes.  Note that SUBCODE should be at\n      least as wide as tree codes, as several tuples store tree codes\n@@ -1598,15 +1593,7 @@ gimple_set_has_volatile_ops (gimple stmt, bool volatilep)\n static inline bool\n gimple_in_transaction (gimple stmt)\n {\n-  return stmt->gsbase.in_transaction;\n-}\n-\n-/* Set the IN_TRANSACTION flag to TRANSACTIONP.  */\n-\n-static inline void\n-gimple_set_in_transaction (gimple stmt, bool transactionp)\n-{\n-  stmt->gsbase.in_transaction = (unsigned) transactionp;\n+  return gimple_bb (stmt)->flags & BB_IN_TRANSACTION;\n }\n \n /* Return true if statement STMT may access memory.  */"}, {"sha": "8887b9afee6688b20cb6f7469d2d77602a7fe8ca", "filename": "gcc/trans-mem.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83e1a7f080f91f7cc1bb7916cd15779f685c7697/gcc%2Ftrans-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83e1a7f080f91f7cc1bb7916cd15779f685c7697/gcc%2Ftrans-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.c?ref=83e1a7f080f91f7cc1bb7916cd15779f685c7697", "patch": "@@ -2451,13 +2451,15 @@ compute_transaction_bits (void)\n   struct tm_region *region;\n   VEC (basic_block, heap) *queue;\n   unsigned int i;\n-  gimple_stmt_iterator gsi;\n   basic_block bb;\n \n   /* ?? Perhaps we need to abstract gate_tm_init further, because we\n      certainly don't need it to calculate CDI_DOMINATOR info.  */\n   gate_tm_init ();\n \n+  FOR_EACH_BB (bb)\n+    bb->flags &= ~BB_IN_TRANSACTION;\n+\n   for (region = all_tm_regions; region; region = region->next)\n     {\n       queue = get_tm_region_blocks (region->entry_block,\n@@ -2466,11 +2468,7 @@ compute_transaction_bits (void)\n \t\t\t\t    NULL,\n \t\t\t\t    /*stop_at_irr_p=*/true);\n       for (i = 0; VEC_iterate (basic_block, queue, i, bb); ++i)\n-\tfor (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-\t  {\n-\t    gimple stmt = gsi_stmt (gsi);\n-\t    gimple_set_in_transaction (stmt, true);\n-\t  }\n+\tbb->flags |= BB_IN_TRANSACTION;\n       VEC_free (basic_block, heap, queue);\n     }\n "}]}