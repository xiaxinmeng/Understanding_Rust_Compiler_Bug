{"sha": "4bc19a3b1a9fe74e515b7c54082bbad27decc227", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJjMTlhM2IxYTlmZTc0ZTUxNWI3YzU0MDgyYmJhZDI3ZGVjYzIyNw==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2017-10-26T09:59:14Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-10-26T09:59:14Z"}, "message": "2017-10-26  Tamar Christina  <tamar.christina@arm.com>\n\n\t* gcc.dg/vect/vect-reduc-dot-s8a.c\n\t(dg-additional-options, dg-require-effective-target): Add +dotprod.\n\t* gcc.dg/vect/vect-reduc-dot-u8a.c\n\t(dg-additional-options, dg-require-effective-target): Add +dotprod.\n\nFrom-SVN: r254101", "tree": {"sha": "fccd162b487cb35de75147c318253bf927386a8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fccd162b487cb35de75147c318253bf927386a8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bc19a3b1a9fe74e515b7c54082bbad27decc227", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bc19a3b1a9fe74e515b7c54082bbad27decc227", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bc19a3b1a9fe74e515b7c54082bbad27decc227", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bc19a3b1a9fe74e515b7c54082bbad27decc227/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b5de01437baf9417c4e7d0831037ed09a0557d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b5de01437baf9417c4e7d0831037ed09a0557d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b5de01437baf9417c4e7d0831037ed09a0557d5"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "d71ab160012cb99020cc37679f234c49d5a14f4a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc19a3b1a9fe74e515b7c54082bbad27decc227/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc19a3b1a9fe74e515b7c54082bbad27decc227/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4bc19a3b1a9fe74e515b7c54082bbad27decc227", "patch": "@@ -1,3 +1,10 @@\n+2017-10-26  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.dg/vect/vect-reduc-dot-s8a.c\n+\t(dg-additional-options, dg-require-effective-target): Add +dotprod.\n+\t* gcc.dg/vect/vect-reduc-dot-u8a.c\n+\t(dg-additional-options, dg-require-effective-target): Add +dotprod.\n+\n 2017-10-26  Tamar Christina  <tamar.christina@arm.com>\n \n \t* lib/target-supports.exp"}, {"sha": "ac674749b6fe09f3c0adc991c825fb9eacc9eee5", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-dot-s8a.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc19a3b1a9fe74e515b7c54082bbad27decc227/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc19a3b1a9fe74e515b7c54082bbad27decc227/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8a.c?ref=4bc19a3b1a9fe74e515b7c54082bbad27decc227", "patch": "@@ -1,4 +1,7 @@\n /* { dg-require-effective-target vect_int } */\n+/* { dg-require-effective-target arm_v8_2a_dotprod_neon_hw { target { aarch64*-*-* || arm*-*-* } } } */\n+/* { dg-additional-options \"-march=armv8.2-a+dotprod\" { target { aarch64*-*-* } } } */\n+/* { dg-add-options arm_v8_2a_dotprod_neon }  */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "d020f643bb88e739601f96d606c47406332a9db5", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-dot-u8a.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc19a3b1a9fe74e515b7c54082bbad27decc227/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-u8a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc19a3b1a9fe74e515b7c54082bbad27decc227/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-u8a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-u8a.c?ref=4bc19a3b1a9fe74e515b7c54082bbad27decc227", "patch": "@@ -1,4 +1,7 @@\n /* { dg-require-effective-target vect_int } */\n+/* { dg-require-effective-target arm_v8_2a_dotprod_neon_hw { target { aarch64*-*-* || arm*-*-* } } } */\n+/* { dg-additional-options \"-march=armv8.2-a+dotprod\" { target { aarch64*-*-* } } } */\n+/* { dg-add-options arm_v8_2a_dotprod_neon }  */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "054f4703394b4184284dac371415bef8e9bac45d", "filename": "gcc/testsuite/gcc.target/arm/simd/vdot-exec.c", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc19a3b1a9fe74e515b7c54082bbad27decc227/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvdot-exec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc19a3b1a9fe74e515b7c54082bbad27decc227/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvdot-exec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvdot-exec.c?ref=4bc19a3b1a9fe74e515b7c54082bbad27decc227", "patch": "@@ -0,0 +1,55 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O3\" } */\n+/* { dg-require-effective-target arm_v8_2a_dotprod_neon_hw } */\n+/* { dg-add-options arm_v8_2a_dotprod_neon }  */\n+\n+#include <arm_neon.h>\n+\n+extern void abort();\n+\n+#if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n+# define ORDER(x, y) y\n+#else\n+# define ORDER(x, y) x - y\n+#endif\n+\n+#define P(n1,n2) n1,n1,n1,n1,n2,n2,n2,n2\n+#define ARR(nm, p, ty, ...) ty nm##_##p = { __VA_ARGS__ }\n+#define TEST(t1, t2, t3, f, r1, r2, n1, n2) \\\n+\tARR(f, x, t1, r1);\t\t    \\\n+\tARR(f, y, t2, r2);\t\t    \\\n+\tt3 f##_##r = {0};\t\t    \\\n+\tf##_##r = f (f##_##r, f##_##x, f##_##y);  \\\n+\tif (f##_##r[0] != n1 || f##_##r[1] != n2)   \\\n+\t  abort ();\n+\n+#define TEST_LANE(t1, t2, t3, f, r1, r2, n1, n2, n3, n4) \\\n+\tARR(f, x, t1, r1);\t\t    \\\n+\tARR(f, y, t2, r2);\t\t    \\\n+\tt3 f##_##rx = {0};\t\t    \\\n+\tf##_##rx = f (f##_##rx, f##_##x, f##_##y, ORDER (1, 0));  \\\n+\tif (f##_##rx[0] != n1 || f##_##rx[1] != n2)   \\\n+\t  abort ();\t\t\t\t    \\\n+\tt3 f##_##rx1 = {0};\t\t\t    \\\n+\tf##_##rx1 =  f (f##_##rx1, f##_##x, f##_##y, ORDER (1, 1));  \\\n+\tif (f##_##rx1[0] != n3 || f##_##rx1[1] != n4)   \\\n+\t  abort (); \\\n+\n+int\n+main()\n+{\n+  TEST (uint8x8_t, uint8x8_t, uint32x2_t, vdot_u32, P(1,2), P(2,3), 8, 24);\n+  TEST (int8x8_t, int8x8_t, int32x2_t, vdot_s32, P(1,2), P(-2,-3), -8, -24);\n+\n+  TEST (uint8x16_t, uint8x16_t, uint32x4_t, vdotq_u32, P(1,2), P(2,3), 8, 24);\n+  TEST (int8x16_t, int8x16_t, int32x4_t, vdotq_s32, P(1,2), P(-2,-3), -8, -24);\n+\n+  TEST_LANE (uint8x8_t, uint8x8_t, uint32x2_t, vdot_lane_u32, P(1,2), P(2,3), 8, 16, 12, 24);\n+\n+  TEST_LANE (int8x8_t, int8x8_t, int32x2_t, vdot_lane_s32, P(1,2), P(-2,-3), -8, -16, -12, -24);\n+\n+  TEST_LANE (uint8x16_t, uint8x8_t, uint32x4_t, vdotq_lane_u32, P(1,2), P(2,3), 8, 16, 12, 24);\n+  TEST_LANE (int8x16_t, int8x8_t, int32x4_t, vdotq_lane_s32, P(1,2), P(-2,-3), -8, -16, -12, -24);\n+\n+  return 0;\n+}"}]}