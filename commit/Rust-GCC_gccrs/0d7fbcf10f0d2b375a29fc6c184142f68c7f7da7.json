{"sha": "0d7fbcf10f0d2b375a29fc6c184142f68c7f7da7", "node_id": "C_kwDOANBUbNoAKDBkN2ZiY2YxMGYwZDJiMzc1YTI5ZmM2YzE4NDE0MmY2OGM3ZjdkYTc", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2022-06-15T01:14:31Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-06T13:29:48Z"}, "message": "[Ada] Spurious non-callable warning on prefixed call in class condition\n\nThis patch corrects an error in the compiler whereby a function call in\nprefix notation within a class condition causes a spurious error\nclaiming the name in the call is a non-callable entity when there exists\na type extension in the same unit extended with a component featuring\nthe same name as the function in question.\n\ngcc/ada/\n\n\t* sem_ch4.adb (Analyze_Selected_Component): Add condition to\n\tavoid interpreting derived type components as candidates for\n\tselected components in preanalysis of inherited class\n\tconditions.", "tree": {"sha": "2166979cf968fbd14e0a8b75241f27ef10e54a69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2166979cf968fbd14e0a8b75241f27ef10e54a69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d7fbcf10f0d2b375a29fc6c184142f68c7f7da7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7fbcf10f0d2b375a29fc6c184142f68c7f7da7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d7fbcf10f0d2b375a29fc6c184142f68c7f7da7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7fbcf10f0d2b375a29fc6c184142f68c7f7da7/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be3bdaa1a53beaa5bb881c079ceaae132fb422a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be3bdaa1a53beaa5bb881c079ceaae132fb422a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be3bdaa1a53beaa5bb881c079ceaae132fb422a6"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "54974832c3949e5fd0c154b1f0a83831ab75cb20", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7fbcf10f0d2b375a29fc6c184142f68c7f7da7/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7fbcf10f0d2b375a29fc6c184142f68c7f7da7/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=0d7fbcf10f0d2b375a29fc6c184142f68c7f7da7", "patch": "@@ -5158,11 +5158,26 @@ package body Sem_Ch4 is\n \n       elsif Is_Record_Type (Prefix_Type) then\n \n-         --  Find component with given name. In an instance, if the node is\n-         --  known as a prefixed call, do not examine components whose\n-         --  visibility may be accidental.\n+         --  Find a component with the given name. If the node is a prefixed\n+         --  call, do not examine components whose visibility may be\n+         --  accidental.\n \n-         while Present (Comp) and then not Is_Prefixed_Call (N) loop\n+         while Present (Comp)\n+           and then not Is_Prefixed_Call (N)\n+\n+           --  When the selector has been resolved to a function then we may be\n+           --  looking at a prefixed call which has been preanalyzed already as\n+           --  part of a class condition. In such cases it is possible for a\n+           --  derived type to declare a component which has the same name as\n+           --  a primitive used in a parent's class condition.\n+\n+           --  Avoid seeing components as possible interpretations of the\n+           --  selected component when this is true.\n+\n+           and then not (Inside_Class_Condition_Preanalysis\n+                          and then Present (Entity (Sel))\n+                          and then Ekind (Entity (Sel)) = E_Function)\n+         loop\n             if Chars (Comp) = Chars (Sel)\n               and then Is_Visible_Component (Comp, N)\n             then"}]}