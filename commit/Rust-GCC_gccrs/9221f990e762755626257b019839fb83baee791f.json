{"sha": "9221f990e762755626257b019839fb83baee791f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIyMWY5OTBlNzYyNzU1NjI2MjU3YjAxOTgzOWZiODNiYWVlNzkxZg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-12-11T21:23:08Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-12-11T21:23:08Z"}, "message": "ifcvt: Call fixup_partitions (PR83361)\n\nAfter converting a conditional branch to an unconditional trap to a\nconditional trap, if the original trap is still reachable from another\npath, it may be that it is in a hot basic block  and only reachable from\ncold blocks.  Fix that up.\n\n\n\tPR rtl-optimization/83361\n\t* ifcvt.c (if_convert): Call fixup_partitions.\n\ngcc/testsuite/\n\tPR rtl-optimization/83361\n\t* gcc.dg/pr83361.c: New testcase.\n\nFrom-SVN: r255550", "tree": {"sha": "a59c34858bd817724bd7482e02dd84a1b2f584b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a59c34858bd817724bd7482e02dd84a1b2f584b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9221f990e762755626257b019839fb83baee791f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9221f990e762755626257b019839fb83baee791f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9221f990e762755626257b019839fb83baee791f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9221f990e762755626257b019839fb83baee791f/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5648717a8826a1bb60afd31b56c48b60d3813d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5648717a8826a1bb60afd31b56c48b60d3813d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5648717a8826a1bb60afd31b56c48b60d3813d4"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "8c9fe1bfcc23fac87c67f178c619d2d181ea6cc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9221f990e762755626257b019839fb83baee791f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9221f990e762755626257b019839fb83baee791f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9221f990e762755626257b019839fb83baee791f", "patch": "@@ -1,3 +1,8 @@\n+2017-12-11  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/83361\n+\t* ifcvt.c (if_convert): Call fixup_partitions.\n+\n 2017-12-11  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_gimple_fold_builtin): Add support for"}, {"sha": "eb3da68d1e834e19d5283ae9f6303f34c639b0fb", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9221f990e762755626257b019839fb83baee791f/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9221f990e762755626257b019839fb83baee791f/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=9221f990e762755626257b019839fb83baee791f", "patch": "@@ -5446,6 +5446,10 @@ if_convert (bool after_combine)\n   if (optimize == 1)\n     df_remove_problem (df_live);\n \n+  /* Some non-cold blocks may now be only reachable from cold blocks.\n+     Fix that up.  */\n+  fixup_partitions ();\n+\n   checking_verify_flow_info ();\n }\n \f"}, {"sha": "3c2f0d2bd83cbc9ad804a2369515b508b5caaeb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9221f990e762755626257b019839fb83baee791f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9221f990e762755626257b019839fb83baee791f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9221f990e762755626257b019839fb83baee791f", "patch": "@@ -1,3 +1,8 @@\n+2017-12-11  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/83361\n+\t* gcc.dg/pr83361.c: New testcase.\n+\n 2017-12-11  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* gcc.target/powerpc/fold-vec-splat-misc-invalid.c: New."}, {"sha": "2a6f80750e9b58f6b5142c0ab2516f587583b6cc", "filename": "gcc/testsuite/gcc.dg/pr83361.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9221f990e762755626257b019839fb83baee791f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83361.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9221f990e762755626257b019839fb83baee791f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83361.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83361.c?ref=9221f990e762755626257b019839fb83baee791f", "patch": "@@ -0,0 +1,40 @@\n+/* PR rtl-optimization/83361 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -freorder-blocks-and-partition\" } */\n+\n+#include <limits.h>\n+\n+int yz;\n+\n+void\n+tq (int z3)\n+{\n+  unsigned long long int n8 = (unsigned long long int)INT_MAX + 1;\n+  int *ey = &yz;\n+\n+  if (yz == 0)\n+    {\n+      int bc;\n+\n+      yz = 1;\n+      while (yz != 0)\n+        {\n+          *ey *= bc;\n+          n8 = !!(1 / ((unsigned long long int)yz == n8));\n+          ey = &z3;\n+        }\n+\n+      while (z3 != 0)\n+        {\n+        }\n+    }\n+\n+  z3 = (n8 != 0) && (*ey != 0);\n+  z3 = yz / z3;\n+  if (z3 < 0)\n+    {\n+      if (yz != 0)\n+        yz = 0;\n+      yz /= 0;\n+    }\n+}"}]}