{"sha": "0cb7f060b25987814c87f163e1327ff9d811225c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNiN2YwNjBiMjU5ODc4MTRjODdmMTYzZTEzMjdmZjlkODExMjI1Yw==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-04-08T23:09:32Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-04-08T23:09:32Z"}, "message": "acinclude.m4 (GLIBCXX_ENABLE_SYMVERS): Define _GLIBCXX_ASM_SYMVER.\n\n2005-04-08  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* acinclude.m4 (GLIBCXX_ENABLE_SYMVERS): Define _GLIBCXX_ASM_SYMVER.\n\t* acconfig.h: Delete file.\n\t* Makefile.in, acinclude.m4, configure: Regenerate.\n\nFrom-SVN: r97868", "tree": {"sha": "4eb7f129572ab9e87edac0c1a5253334039f12b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4eb7f129572ab9e87edac0c1a5253334039f12b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cb7f060b25987814c87f163e1327ff9d811225c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb7f060b25987814c87f163e1327ff9d811225c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cb7f060b25987814c87f163e1327ff9d811225c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb7f060b25987814c87f163e1327ff9d811225c/comments", "author": null, "committer": null, "parents": [{"sha": "ad6aaeb698a79ea8ad25ac585a1bc688d91d6ced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad6aaeb698a79ea8ad25ac585a1bc688d91d6ced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad6aaeb698a79ea8ad25ac585a1bc688d91d6ced"}], "stats": {"total": 67, "additions": 38, "deletions": 29}, "files": [{"sha": "fc8b84a89b0ea7fe1070b5a4246bee81557a4216", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb7f060b25987814c87f163e1327ff9d811225c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb7f060b25987814c87f163e1327ff9d811225c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0cb7f060b25987814c87f163e1327ff9d811225c", "patch": "@@ -1,3 +1,9 @@\n+2005-04-08  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_SYMVERS): Define _GLIBCXX_ASM_SYMVER.\n+\t* acconfig.h: Delete file.\n+\t* Makefile.in, acinclude.m4, configure: Regenerate.\n+\n 2005-04-08  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* linkage.m4 (GLIBCXX_MAYBE_UNDERSCORED_FUNCS): New macro."}, {"sha": "1a46a5417f75e5e4b1bdcde7f4173ea88c8561d3", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb7f060b25987814c87f163e1327ff9d811225c/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb7f060b25987814c87f163e1327ff9d811225c/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=0cb7f060b25987814c87f163e1327ff9d811225c", "patch": "@@ -42,7 +42,7 @@ DIST_COMMON = README $(am__configure_deps) $(srcdir)/../config.guess \\\n \t$(srcdir)/../mkinstalldirs $(srcdir)/Makefile.am \\\n \t$(srcdir)/Makefile.in $(srcdir)/config.h.in \\\n \t$(top_srcdir)/configure $(top_srcdir)/fragment.am \\\n-\t$(top_srcdir)/scripts/testsuite_flags.in ChangeLog acconfig.h\n+\t$(top_srcdir)/scripts/testsuite_flags.in ChangeLog\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/no-executables.m4 \\\n@@ -369,7 +369,7 @@ config.h: stamp-h1\n stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status\n \t@rm -f stamp-h1\n \tcd $(top_builddir) && $(SHELL) ./config.status config.h\n-$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) $(top_srcdir)/acconfig.h\n+$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) \n \tcd $(top_srcdir) && $(AUTOHEADER)\n \trm -f stamp-h1\n \ttouch $@"}, {"sha": "9bee01fe904aa8556550451304962c30432c3580", "filename": "libstdc++-v3/acconfig.h", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6aaeb698a79ea8ad25ac585a1bc688d91d6ced/libstdc%2B%2B-v3%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6aaeb698a79ea8ad25ac585a1bc688d91d6ced/libstdc%2B%2B-v3%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facconfig.h?ref=ad6aaeb698a79ea8ad25ac585a1bc688d91d6ced", "patch": "@@ -1,14 +0,0 @@\n-// Symbols and macros for libstdc++ -*- C++ -*-\n-\n-// @BOTTOM@\n-//\n-// Define symbol versioning in assember directives. If symbol\n-// versioning is beigng used, and the assembler supports this kind of\n-// thing, then use it.\n-// NB: _GLIBCXX_AT_AT is a hack to work around quoting issues in m4.\n-#if _GLIBCXX_SYMVER\n-  #define _GLIBCXX_ASM_SYMVER(cur, old, version) \\\n-   asm (\".symver \" #cur \",\" #old _GLIBCXX_AT_AT #version);\n-#else\n-  #define _GLIBCXX_ASM_SYMVER(cur, old, version)\n-#endif"}, {"sha": "601e456a4eacf244f7b8286b4f0d45cf0fce5b20", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb7f060b25987814c87f163e1327ff9d811225c/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb7f060b25987814c87f163e1327ff9d811225c/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=0cb7f060b25987814c87f163e1327ff9d811225c", "patch": "@@ -1764,6 +1764,20 @@ case $enable_symvers in\n     ;;\n esac\n \n+AH_VERBATIM([_GLIBCXX_SYMVERextra],\n+[/* Define symbol versioning in assember directives. If symbol\n+   versioning is being used, and the assembler supports this kind of\n+   thing, then use it.\n+   \n+   NB: _GLIBCXX_AT_AT is a hack to work around quoting issues in m4. */\n+\n+#if _GLIBCXX_SYMVER\n+  #define _GLIBCXX_ASM_SYMVER(cur, old, version) \\\n+   asm (\".symver \" #cur \",\" #old _GLIBCXX_AT_AT #version);\n+#else\n+  #define _GLIBCXX_ASM_SYMVER(cur, old, version)\n+#endif])\n+\n AC_SUBST(SYMVER_MAP)\n AC_SUBST(port_specific_symbol_files)\n GLIBCXX_CONDITIONAL(GLIBCXX_BUILD_VERSIONED_SHLIB, test $enable_symvers != no)"}, {"sha": "f8e5305feb514f9bbadb847ac5646af4e367da79", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb7f060b25987814c87f163e1327ff9d811225c/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb7f060b25987814c87f163e1327ff9d811225c/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=0cb7f060b25987814c87f163e1327ff9d811225c", "patch": "@@ -1,6 +1,4 @@\n /* config.h.in.  Generated from configure.ac by autoheader.  */\n-// Symbols and macros for libstdc++ -*- C++ -*-\n-\n \n /* Define to 1 if you have the `acosf' function. */\n #undef HAVE_ACOSF\n@@ -666,6 +664,19 @@\n /* Define to use symbol versioning in the shared library. */\n #undef _GLIBCXX_SYMVER\n \n+/* Define symbol versioning in assember directives. If symbol\n+   versioning is being used, and the assembler supports this kind of\n+   thing, then use it.\n+   \n+   NB: _GLIBCXX_AT_AT is a hack to work around quoting issues in m4. */\n+\n+#if _GLIBCXX_SYMVER\n+  #define _GLIBCXX_ASM_SYMVER(cur, old, version) \\\n+   asm (\".symver \" #cur \",\" #old _GLIBCXX_AT_AT #version);\n+#else\n+  #define _GLIBCXX_ASM_SYMVER(cur, old, version)\n+#endif\n+\n /* Define if C99 functions or macros from <wchar.h>, <math.h>, <complex.h>,\n    <stdio.h>, and <stdlib.h> can be used or exposed. */\n #undef _GLIBCXX_USE_C99\n@@ -1023,14 +1034,3 @@\n # define HAVE_TANL 1\n # define tanl _tanl\n #endif\n-//\n-// Define symbol versioning in assember directives. If symbol\n-// versioning is beigng used, and the assembler supports this kind of\n-// thing, then use it.\n-// NB: _GLIBCXX_AT_AT is a hack to work around quoting issues in m4.\n-#if _GLIBCXX_SYMVER\n-  #define _GLIBCXX_ASM_SYMVER(cur, old, version) \\\n-   asm (\".symver \" #cur \",\" #old _GLIBCXX_AT_AT #version);\n-#else\n-  #define _GLIBCXX_ASM_SYMVER(cur, old, version)\n-#endif"}, {"sha": "97a1a8522a0bca87fddf84b301b1e702355d319b", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb7f060b25987814c87f163e1327ff9d811225c/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb7f060b25987814c87f163e1327ff9d811225c/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=0cb7f060b25987814c87f163e1327ff9d811225c", "patch": "@@ -87296,6 +87296,9 @@ esac\n \n \n \n+\n+\n+\n { echo \"$as_me:$LINENO: versioning on shared library symbols is $enable_symvers\" >&5\n echo \"$as_me: versioning on shared library symbols is $enable_symvers\" >&6;}\n "}]}