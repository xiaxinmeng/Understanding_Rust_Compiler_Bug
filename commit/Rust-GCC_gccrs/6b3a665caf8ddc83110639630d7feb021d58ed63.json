{"sha": "6b3a665caf8ddc83110639630d7feb021d58ed63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIzYTY2NWNhZjhkZGM4MzExMDYzOTYzMGQ3ZmViMDIxZDU4ZWQ2Mw==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dseketel@redhat.com", "date": "2008-07-18T20:40:42Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2008-07-18T20:40:42Z"}, "message": "re PR c++/36407 (ICE with conversion and -fpermissive)\n\n2008-07-18  Dodji Seketeli  <dseketel@redhat.com>\n\n\tPR c++/36407\n\t* call.c (convert_like_real): Don't take the error code path\n\t  when a rvalue or base conversion has the bad_p field set.\n\nFrom-SVN: r137966", "tree": {"sha": "209be48652f4bb8abd049d6f3e195676e874af76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/209be48652f4bb8abd049d6f3e195676e874af76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b3a665caf8ddc83110639630d7feb021d58ed63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3a665caf8ddc83110639630d7feb021d58ed63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b3a665caf8ddc83110639630d7feb021d58ed63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3a665caf8ddc83110639630d7feb021d58ed63/comments", "author": null, "committer": null, "parents": [{"sha": "c466b2cd136139e0e9fef6019fa6f136e23c7a4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c466b2cd136139e0e9fef6019fa6f136e23c7a4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c466b2cd136139e0e9fef6019fa6f136e23c7a4c"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "2112b8fd8e68768f4c4e279c166702e702a706f3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3a665caf8ddc83110639630d7feb021d58ed63/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3a665caf8ddc83110639630d7feb021d58ed63/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6b3a665caf8ddc83110639630d7feb021d58ed63", "patch": "@@ -1,3 +1,9 @@\n+2008-07-18  Dodji Seketeli  <dseketel@redhat.com>\n+\n+\tPR c++/36407\n+\t* call.c (convert_like_real): Don't take the error code path\n+\t  when a rvalue or base conversion has the bad_p field set.\n+\n 2008-07-18  Kris Van Hees  <kris.van.hees@oracle.com>\n \n \t* rtti.c (emit_support_tinfos): Add char16_type_node and"}, {"sha": "3c54001e3bdbbd0e5d157a3822fd9ba357df736a", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3a665caf8ddc83110639630d7feb021d58ed63/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3a665caf8ddc83110639630d7feb021d58ed63/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=6b3a665caf8ddc83110639630d7feb021d58ed63", "patch": "@@ -4510,7 +4510,9 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n   if (convs->bad_p\n       && convs->kind != ck_user\n       && convs->kind != ck_ambig\n-      && convs->kind != ck_ref_bind)\n+      && convs->kind != ck_ref_bind\n+      && convs->kind != ck_rvalue\n+      && convs->kind != ck_base)\n     {\n       conversion *t = convs;\n       for (; t; t = convs->u.next)"}, {"sha": "38e498c57594cea15c247cf49f55499c96d7f0fb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3a665caf8ddc83110639630d7feb021d58ed63/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3a665caf8ddc83110639630d7feb021d58ed63/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b3a665caf8ddc83110639630d7feb021d58ed63", "patch": "@@ -1,3 +1,8 @@\n+2008-07-18  Dodji Seketeli  <dseketel@redhat.com>\n+\n+\tPR c++/36407\n+\t* g++.dg/conversion/op5.C: New testcase.\n+\n 2008-07-18  Kris Van Hees  <kris.van.hees@oracle.com>\n \n \tTests for char16_t and char32_t support."}, {"sha": "69ef996d5c254e437b31a3fce35261ab99c59b22", "filename": "gcc/testsuite/g++.dg/conversion/op5.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3a665caf8ddc83110639630d7feb021d58ed63/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3a665caf8ddc83110639630d7feb021d58ed63/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop5.C?ref=6b3a665caf8ddc83110639630d7feb021d58ed63", "patch": "@@ -0,0 +1,20 @@\n+// Contributed by Dodji Seketeli <dseketel@redhat.com>\n+// Origin: PR c++/36407 \n+// { dg-do compile }\n+\n+struct A\n+{\n+  A (const A&);\n+};\n+\n+struct B\n+{\n+  operator A&();\n+};\n+\n+void\n+foo (const B& b)\n+{\n+  const A a = b; // { dg-error \"conversion from 'const B' to non-scalar type 'const A' requested\" }\n+}\n+"}]}