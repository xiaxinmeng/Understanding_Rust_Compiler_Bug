{"sha": "b53beeb2916a20b2e96f71510dc1232592a4271f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUzYmVlYjI5MTZhMjBiMmU5NmY3MTUxMGRjMTIzMjU5MmE0MjcxZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-06-07T14:06:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-06-07T14:06:47Z"}, "message": "toplev.c (flag_exceptions): Default to 0.\n\n        * toplev.c (flag_exceptions): Default to 0.\n        (compile_file): Remove flag_exceptions == 2 hack.\n        (main): Call lang_init_options.\n        * tree.h: Declare it.\n        * c-lang.c: Implement it.\n        * objc/objc-act.c: Likewise.\n\nFrom-SVN: r20274", "tree": {"sha": "e1af6b194df0278f71aa8c64fb8d02ade641e69d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1af6b194df0278f71aa8c64fb8d02ade641e69d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b53beeb2916a20b2e96f71510dc1232592a4271f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b53beeb2916a20b2e96f71510dc1232592a4271f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b53beeb2916a20b2e96f71510dc1232592a4271f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b53beeb2916a20b2e96f71510dc1232592a4271f/comments", "author": null, "committer": null, "parents": [{"sha": "874503bcad9c38fb673b43bcdc09e6d4658fe62a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874503bcad9c38fb673b43bcdc09e6d4658fe62a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874503bcad9c38fb673b43bcdc09e6d4658fe62a"}], "stats": {"total": 55, "additions": 31, "deletions": 24}, "files": [{"sha": "b495207954357189b108a1308dd8d2b0ac0c460c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53beeb2916a20b2e96f71510dc1232592a4271f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53beeb2916a20b2e96f71510dc1232592a4271f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b53beeb2916a20b2e96f71510dc1232592a4271f", "patch": "@@ -1,3 +1,12 @@\n+Sun Jun  7 14:02:58 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* toplev.c (flag_exceptions): Default to 0.\n+\t(compile_file): Remove flag_exceptions == 2 hack.\n+\t(main): Call lang_init_options.\n+\t* tree.h: Declare it.\n+\t* c-lang.c: Implement it.\n+\t* objc/objc-act.c: Likewise.\n+\t\n Sun Jun  7 12:27:30 1998  David Edelsohn  <edelsohn@mhpcc.edu>\n \n \t* rs6000.md (restore_stack_block): Generate MEM and specify mode.\n@@ -1945,7 +1954,7 @@ Sun May  3 23:57:25 1998  Robert Lipe   <robertl@dgii.com>\n \t(xm_defines): Add USG so dbxout will build.\n \t* configure: Regenerate.\n \n-Sun May  3 13:51:34 PDT 1998  Richard Henerson  <rth@cygnus.com>\n+Sun May  3 13:51:34 PDT 1998  Richard Henderson  <rth@cygnus.com>\n \n \tSupport for official Sparc V9 ABI:\n \t* sparc.c (sparc_override_options): Force stack bias off for !arch64."}, {"sha": "a72b9e0c550144179bf6ea647edb01083ca5aaa5", "filename": "gcc/LANGUAGES", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53beeb2916a20b2e96f71510dc1232592a4271f/gcc%2FLANGUAGES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53beeb2916a20b2e96f71510dc1232592a4271f/gcc%2FLANGUAGES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FLANGUAGES?ref=b53beeb2916a20b2e96f71510dc1232592a4271f", "patch": "@@ -6,6 +6,10 @@ time as we can formally start documenting the interface this file will\n serve as a repository for information on these interface and any incompatable\n changes we've made.\n \n+Jun  7, 1998:\n+  Front-ends must now define lang_init_options.  It is safe for this\n+  function to do nothing.  See c-lang.c.\n+\n Apr 21, 1998:\n   Front ends which link with c-common or other files from the C/C++\n   front-ends may need to handle TI types.  Look for references to"}, {"sha": "ebba1919680c6fe31b160569c9a735876dcad9bb", "filename": "gcc/c-lang.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53beeb2916a20b2e96f71510dc1232592a4271f/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53beeb2916a20b2e96f71510dc1232592a4271f/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=b53beeb2916a20b2e96f71510dc1232592a4271f", "patch": "@@ -37,6 +37,11 @@ lang_decode_option (p)\n   return c_decode_option (p);\n }\n \n+void\n+lang_init_options ()\n+{\n+}\n+\n void\n lang_init ()\n {"}, {"sha": "b7bbd620b25c391df60812897a8c86baa6a69a01", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53beeb2916a20b2e96f71510dc1232592a4271f/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53beeb2916a20b2e96f71510dc1232592a4271f/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=b53beeb2916a20b2e96f71510dc1232592a4271f", "patch": "@@ -580,6 +580,11 @@ generate_struct_by_value_array ()\n   exit (0);\n }\n \n+void\n+lang_init_options ()\n+{\n+}\n+\n void\n lang_init ()\n {"}, {"sha": "60cbc6ac24bc3f12811f2e7d27a4a40da60ff92e", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53beeb2916a20b2e96f71510dc1232592a4271f/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53beeb2916a20b2e96f71510dc1232592a4271f/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=b53beeb2916a20b2e96f71510dc1232592a4271f", "patch": "@@ -598,7 +598,7 @@ int flag_pic;\n /* Nonzero means generate extra code for exception handling and enable\n    exception handling.  */\n \n-int flag_exceptions = 2;\n+int flag_exceptions;\n \n /* Nonzero means don't place uninitialized global data in common storage\n    by default.  */\n@@ -2416,32 +2416,10 @@ compile_file (name)\n   input_file_stack->next = 0;\n   input_file_stack->name = input_filename;\n \n-  /* Gross. Gross.  lang_init is (I think) the first callback into\n-     the language front end, and is thus the first opportunity to\n-     have the selected language override the default value for any\n-     -f option.\n-\n-     So the default value for flag_exceptions is 2 (uninitialized).\n-     If we encounter -fno-exceptions or -fexceptions, then flag_exceptions\n-     will be set to zero or one respectively.\n-\n-     flag_exceptions can also be set by lang_init to something other\n-     than the default \"uninitialized\" value of 2.\n-\n-     After lang_init, if the value is still 2, then we default to\n-     -fno-exceptions (value will be reset to zero).\n-\n-     When our EH mechanism is low enough overhead that we can enable\n-     it by default for languages other than C++, then all this braindamage\n-     will go away.  */\n-  \n   /* Perform language-specific initialization.\n      This may set main_input_filename.  */\n   lang_init ();\n \n-  if (flag_exceptions == 2)\n-    flag_exceptions = 0;\n-     \n   /* If the input doesn't start with a #line, use the input name\n      as the official input file name.  */\n   if (main_input_filename == 0)\n@@ -3775,6 +3753,9 @@ main (argc, argv, envp)\n   flag_short_enums = DEFAULT_SHORT_ENUMS;\n #endif\n \n+  /* Perform language-specific options intialization.  */\n+  lang_init_options ();\n+\n   /* Scan to see what optimization level has been specified.  That will\n      determine the default value of many flags.  */\n   for (i = 1; i < argc; i++)"}, {"sha": "820e071f4d0cda083b8a8491ce1bd3bd6bebac7c", "filename": "gcc/tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53beeb2916a20b2e96f71510dc1232592a4271f/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53beeb2916a20b2e96f71510dc1232592a4271f/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b53beeb2916a20b2e96f71510dc1232592a4271f", "patch": "@@ -1942,6 +1942,9 @@ extern void dwarf2out_end_epilogue\tPROTO((void));\n \f\n /* The language front-end must define these functions.  */\n \n+/* Function of no arguments for initializing options.  */\n+extern void lang_init_options\t\t\tPROTO((void));\n+\n /* Function of no arguments for initializing lexical scanning.  */\n extern void init_lex\t\t\t\tPROTO((void));\n /* Function of no arguments for initializing the symbol table.  */"}]}