{"sha": "589ac63c0e4385caf707ed9a496cf541bc9bd6ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg5YWM2M2MwZTQzODVjYWY3MDdlZDlhNDk2Y2Y1NDFiYzliZDZhYg==", "commit": {"author": {"name": "Andreas Simbuerger", "email": "simbuerg@fim.uni-passau.de", "date": "2010-08-11T20:26:29Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-08-11T20:26:29Z"}, "message": "Resolve CLooG's value_* macros to their respective mpz_* counterparts.\n\n2010-07-04  Andreas Simbuerger  <simbuerg@fim.uni-passau.de>\n\n\t* graphite-clast-to-gimple.c\n\t(precision_for_value): Resolve value_* calls to matching mpz_* calls.\n\t(precision_for_interval): Same.\n\t(gcc_type_for_interval): Same.\n\t(compute_type_for_level): Same.\n\t* graphite-interchange.c\n\t(lst_interchange_profitable_p): Same.\n\t* graphite-poly.c\n\t(psct_scattering_dim_for_loop_depth): Same.\n\t* graphite-ppl.c\n\t(ppl_max_for_le_pointset): Same.\n\t(ppl_min_for_le_pointset): Same.\n\nFrom-SVN: r163133", "tree": {"sha": "aa0d249fafd9afd47565cd6a7233df81b5380f28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa0d249fafd9afd47565cd6a7233df81b5380f28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/589ac63c0e4385caf707ed9a496cf541bc9bd6ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/589ac63c0e4385caf707ed9a496cf541bc9bd6ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/589ac63c0e4385caf707ed9a496cf541bc9bd6ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/comments", "author": {"login": "simbuerg", "id": 598281, "node_id": "MDQ6VXNlcjU5ODI4MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/598281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simbuerg", "html_url": "https://github.com/simbuerg", "followers_url": "https://api.github.com/users/simbuerg/followers", "following_url": "https://api.github.com/users/simbuerg/following{/other_user}", "gists_url": "https://api.github.com/users/simbuerg/gists{/gist_id}", "starred_url": "https://api.github.com/users/simbuerg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simbuerg/subscriptions", "organizations_url": "https://api.github.com/users/simbuerg/orgs", "repos_url": "https://api.github.com/users/simbuerg/repos", "events_url": "https://api.github.com/users/simbuerg/events{/privacy}", "received_events_url": "https://api.github.com/users/simbuerg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e40cb77a82cd82674c6b611fb3180f45cbd0bd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e40cb77a82cd82674c6b611fb3180f45cbd0bd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e40cb77a82cd82674c6b611fb3180f45cbd0bd5"}], "stats": {"total": 84, "additions": 57, "deletions": 27}, "files": [{"sha": "80cd9995eca60e1e34d152cd944b146cf1975cab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=589ac63c0e4385caf707ed9a496cf541bc9bd6ab", "patch": "@@ -1,3 +1,18 @@\n+2010-08-02  Andreas Simbuerger  <simbuerg@fim.uni-passau.de>\n+\n+\t* graphite-clast-to-gimple.c\n+\t(precision_for_value): Resolve value_* calls to matching mpz_* calls.\n+\t(precision_for_interval): Same.\n+\t(gcc_type_for_interval): Same.\n+\t(compute_type_for_level): Same.\n+\t* graphite-interchange.c\n+\t(lst_interchange_profitable_p): Same.\n+\t* graphite-poly.c\n+\t(psct_scattering_dim_for_loop_depth): Same.\n+\t* graphite-ppl.c\n+\t(ppl_max_for_le_pointset): Same.\n+\t(ppl_min_for_le_pointset): Same.\n+\n 2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-sese-to-poly.c (rewrite_degenerate_phi): New."}, {"sha": "a589860718a1faca9c83f1e3b7c23c578531b1d9", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=589ac63c0e4385caf707ed9a496cf541bc9bd6ab", "patch": "@@ -1,3 +1,18 @@\n+2010-07-04  Andreas Simbuerger  <simbuerg@fim.uni-passau.de>\n+\n+\t* graphite-clast-to-gimple.c\n+\t(precision_for_value): Resolve value_* calls to matching mpz_* calls.\n+\t(precision_for_interval): Same.\n+\t(gcc_type_for_interval): Same.\n+\t(compute_type_for_level): Same.\n+\t* graphite-interchange.c\n+\t(lst_interchange_profitable_p): Same.\n+\t* graphite-poly.c\n+\t(psct_scattering_dim_for_loop_depth): Same.\n+\t* graphite-ppl.c\n+\t(ppl_max_for_le_pointset): Same.\n+\t(ppl_min_for_le_pointset): Same.\n+\n 2010-06-25  Vladimir Kargov  <kargov@gmail.com>\n \n \t* refined-regions.c (bb_index_compare): New."}, {"sha": "aca2c31d9114a4a7c1e968ac74abc657d96304fc", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=589ac63c0e4385caf707ed9a496cf541bc9bd6ab", "patch": "@@ -426,26 +426,26 @@ precision_for_value (mpz_t val)\n   mpz_t x, y, two;\n   int precision;\n \n-  value_init (x);\n-  value_init (y);\n-  value_init (two);\n-  value_set_si (x, 2);\n-  value_assign (y, val);\n-  value_set_si (two, 2);\n+  mpz_init (x);\n+  mpz_init (y);\n+  mpz_init (two);\n+  mpz_set_si (x, 2);\n+  mpz_set (y, val);\n+  mpz_set_si (two, 2);\n   precision = 1;\n \n-  if (value_neg_p (y))\n-    value_oppose (y, y);\n+  if (mpz_sgn (y) < 0)\n+    mpz_neg (y, y);\n \n-  while (value_gt (y, x))\n+  while (mpz_cmp (y, x) > 0)\n     {\n-      value_multiply (x, x, two);\n+      mpz_mul (x, x, two);\n       precision++;\n     }\n \n-  value_clear (x);\n-  value_clear (y);\n-  value_clear (two);\n+  mpz_clear (x);\n+  mpz_clear (y);\n+  mpz_clear (two);\n \n   return precision;\n }\n@@ -459,12 +459,12 @@ precision_for_interval (mpz_t low, mpz_t up)\n   mpz_t diff;\n   int precision;\n \n-  gcc_assert (value_le (low, up));\n+  gcc_assert (mpz_cmp (low, up) <= 0);\n \n-  value_init (diff);\n-  value_subtract (diff, up, low);\n+  mpz_init (diff);\n+  mpz_sub (diff, up, low);\n   precision = precision_for_value (diff);\n-  value_clear (diff);\n+  mpz_clear (diff);\n \n   return precision;\n }\n@@ -479,9 +479,9 @@ gcc_type_for_interval (mpz_t low, mpz_t up)\n   tree type;\n   enum machine_mode mode;\n \n-  gcc_assert (value_le (low, up));\n+  gcc_assert (mpz_cmp (low, up) <= 0);\n \n-  if (value_neg_p (low))\n+  if (mpz_sgn (low) < 0)\n     unsigned_p = false;\n \n   prec_up = precision_for_value (up);\n@@ -731,14 +731,14 @@ compute_type_for_level (poly_bb_p pbb, int level)\n   mpz_t low, up;\n   tree type;\n \n-  value_init (low);\n-  value_init (up);\n+  mpz_init (low);\n+  mpz_init (up);\n \n   compute_bounds_for_level (pbb, level, low, up);\n   type = gcc_type_for_interval (low, up);\n \n-  value_clear (low);\n-  value_clear (up);\n+  mpz_clear (low);\n+  mpz_clear (up);\n   return type;\n }\n "}, {"sha": "de3bf251ced2eba439177ab5f5e04feee9724a6a", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=589ac63c0e4385caf707ed9a496cf541bc9bd6ab", "patch": "@@ -478,7 +478,7 @@ lst_interchange_profitable_p (lst_p loop1, lst_p loop2)\n   memory_strides_in_loop (loop1, lst_depth (loop1), d1);\n   memory_strides_in_loop (loop2, lst_depth (loop2), d2);\n \n-  res = value_lt (d1, d2);\n+  res = mpz_cmp (d1, d2) < 0;\n \n   mpz_clear (d1);\n   mpz_clear (d2);"}, {"sha": "5c4a6f9f9678b708b3e8a3a0508c82046d0e6e1d", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=589ac63c0e4385caf707ed9a496cf541bc9bd6ab", "patch": "@@ -1032,7 +1032,7 @@ psct_scattering_dim_for_loop_depth (poly_bb_p pbb, graphite_dim_t loop_depth)\n \t  ppl_Linear_Expression_coefficient (expr, scatter, coef);\n \t  ppl_Coefficient_to_mpz_t (coef, val);\n \n-\t  if (value_notzero_p (val))\n+\t  if (mpz_sgn (val) != 0)\n \t    {\n \t      mpz_clear (val);\n \t      ppl_delete_Linear_Expression (expr);"}, {"sha": "9f5bab0bd1debe2efc1a1c964a58e6d17c069d01", "filename": "gcc/graphite-ppl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/gcc%2Fgraphite-ppl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/589ac63c0e4385caf707ed9a496cf541bc9bd6ab/gcc%2Fgraphite-ppl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-ppl.c?ref=589ac63c0e4385caf707ed9a496cf541bc9bd6ab", "patch": "@@ -664,7 +664,7 @@ ppl_max_for_le_pointset (ppl_Pointset_Powerset_C_Polyhedron_t ps,\n     {\n       ppl_Coefficient_to_mpz_t (num, nv);\n       ppl_Coefficient_to_mpz_t (denom, dv);\n-      gcc_assert (value_notzero_p (dv));\n+      gcc_assert (mpz_sgn (dv) != 0);\n       mpz_tdiv_q (res, nv, dv);\n     }\n \n@@ -695,7 +695,7 @@ ppl_min_for_le_pointset (ppl_Pointset_Powerset_C_Polyhedron_t ps,\n     {\n       ppl_Coefficient_to_mpz_t (num, nv);\n       ppl_Coefficient_to_mpz_t (denom, dv);\n-      gcc_assert (value_notzero_p (dv));\n+      gcc_assert (mpz_sgn (dv) != 0);\n       mpz_tdiv_q (res, nv, dv);\n     }\n "}]}