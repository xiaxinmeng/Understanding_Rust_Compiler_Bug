{"sha": "9d74caf21be7025db8fef997e87ebf3b85acaf4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ3NGNhZjIxYmU3MDI1ZGI4ZmVmOTk3ZTg3ZWJmM2I4NWFjYWY0YQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-03-15T17:21:08Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-03-15T17:21:21Z"}, "message": "i386: Use ix86_output_ssemov for SFmode TYPE_SSEMOV\n\nThere is no need to set mode attribute to V16SFmode since ix86_output_ssemov\ncan properly encode xmm16-xmm31 registers with and without AVX512VL.\n\ngcc/\n\n\tPR target/89229\n\t* config/i386/i386.c (ix86_output_ssemov): Handle MODE_SI and\n\tMODE_SF.\n\t* config/i386/i386.md (*movsf_internal): Call ix86_output_ssemov\n\tfor TYPE_SSEMOV.  Remove TARGET_PREFER_AVX256, TARGET_AVX512VL\n\tand ext_sse_reg_operand check.\n\ngcc/testsuite/\n\n\tPR target/89229\n\t* gcc.target/i386/pr89229-6a.c: New test.\n\t* gcc.target/i386/pr89229-6b.c: Likewise.\n\t* gcc.target/i386/pr89229-6c.c: Likewise.", "tree": {"sha": "1fef25e9025be3a2f1951bbdcca02b59ebf53494", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fef25e9025be3a2f1951bbdcca02b59ebf53494"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d74caf21be7025db8fef997e87ebf3b85acaf4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d74caf21be7025db8fef997e87ebf3b85acaf4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d74caf21be7025db8fef997e87ebf3b85acaf4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d74caf21be7025db8fef997e87ebf3b85acaf4a/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ced66da313526c3481ceb57ea1becca7b712444b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ced66da313526c3481ceb57ea1becca7b712444b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ced66da313526c3481ceb57ea1becca7b712444b"}], "stats": {"total": 79, "additions": 55, "deletions": 24}, "files": [{"sha": "6718f712b8b2bfe3e28aadec5636dbad05b5a9bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d74caf21be7025db8fef997e87ebf3b85acaf4a", "patch": "@@ -1,3 +1,12 @@\n+2020-03-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89229\n+\t* config/i386/i386.c (ix86_output_ssemov): Handle MODE_SI and\n+\tMODE_SF.\n+\t* config/i386/i386.md (*movsf_internal): Call ix86_output_ssemov\n+\tfor TYPE_SSEMOV.  Remove TARGET_PREFER_AVX256, TARGET_AVX512VL\n+\tand ext_sse_reg_operand check.\n+\n 2020-03-15  Lewis Hyatt  <lhyatt@gmail.com>\n \n \t* common.opt: Avoid redundancy in the help text."}, {"sha": "d1910b42b1b1fff5d168536ecae38d51f5086c2a", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9d74caf21be7025db8fef997e87ebf3b85acaf4a", "patch": "@@ -5127,12 +5127,21 @@ ix86_output_ssemov (rtx_insn *insn, rtx *operands)\n       else\n \treturn \"%vmovq\\t{%1, %0|%0, %1}\";\n \n+    case MODE_SI:\n+      return \"%vmovd\\t{%1, %0|%0, %1}\";\n+\n     case MODE_DF:\n       if (TARGET_AVX && REG_P (operands[0]) && REG_P (operands[1]))\n \treturn \"vmovsd\\t{%d1, %0|%0, %d1}\";\n       else\n \treturn \"%vmovsd\\t{%1, %0|%0, %1}\";\n \n+    case MODE_SF:\n+      if (TARGET_AVX && REG_P (operands[0]) && REG_P (operands[1]))\n+\treturn \"vmovss\\t{%d1, %0|%0, %d1}\";\n+      else\n+\treturn \"%vmovss\\t{%1, %0|%0, %1}\";\n+\n     case MODE_V1DF:\n       gcc_assert (!TARGET_AVX);\n       return \"movlpd\\t{%1, %0|%0, %1}\";"}, {"sha": "af39f90c68e3d379fe51dc44fd0838a72aea8864", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 24, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=9d74caf21be7025db8fef997e87ebf3b85acaf4a", "patch": "@@ -3490,24 +3490,7 @@\n       return standard_sse_constant_opcode (insn, operands);\n \n     case TYPE_SSEMOV:\n-      switch (get_attr_mode (insn))\n-\t{\n-\tcase MODE_SF:\n-\t  if (TARGET_AVX && REG_P (operands[0]) && REG_P (operands[1]))\n-\t    return \"vmovss\\t{%d1, %0|%0, %d1}\";\n-\t  return \"%vmovss\\t{%1, %0|%0, %1}\";\n-\n-\tcase MODE_V16SF:\n-\t  return \"vmovaps\\t{%g1, %g0|%g0, %g1}\";\n-\tcase MODE_V4SF:\n-\t  return \"%vmovaps\\t{%1, %0|%0, %1}\";\n-\n-\tcase MODE_SI:\n-\t  return \"%vmovd\\t{%1, %0|%0, %1}\";\n-\n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n+      return ix86_output_ssemov (insn, operands);\n \n     case TYPE_MMXMOV:\n       switch (get_attr_mode (insn))\n@@ -3579,12 +3562,7 @@\n \t\t  better to maintain the whole registers in single format\n \t\t  to avoid problems on using packed logical operations.  */\n \t       (eq_attr \"alternative\" \"6\")\n-\t\t (cond [(and (ior (not (match_test \"TARGET_PREFER_AVX256\"))\n-\t\t\t\t  (not (match_test \"TARGET_AVX512VL\")))\n-\t\t\t     (ior (match_operand 0 \"ext_sse_reg_operand\")\n-\t\t\t\t  (match_operand 1 \"ext_sse_reg_operand\")))\n-\t\t\t  (const_string \"V16SF\")\n-\t\t\t(ior (match_test \"TARGET_SSE_PARTIAL_REG_DEPENDENCY\")\n+\t\t (cond [(ior (match_test \"TARGET_SSE_PARTIAL_REG_DEPENDENCY\")\n \t\t\t     (match_test \"TARGET_SSE_SPLIT_REGS\"))\n \t\t\t  (const_string \"V4SF\")\n \t\t       ]"}, {"sha": "f79f1c7c303bb38bd4974dd4906c18a8e2949d57", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d74caf21be7025db8fef997e87ebf3b85acaf4a", "patch": "@@ -1,3 +1,10 @@\n+2020-03-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89229\n+\t* gcc.target/i386/pr89229-6a.c: New test.\n+\t* gcc.target/i386/pr89229-6b.c: Likewise.\n+\t* gcc.target/i386/pr89229-6c.c: Likewise.\n+\n 2020-03-15  Lewis Hyatt  <lhyatt@gmail.com>\n \n \t* gcc.misc-tests/help.exp: Adapt to new output for"}, {"sha": "856115b2f5a354c9466fb54c44e432f0fa238bec", "filename": "gcc/testsuite/gcc.target/i386/pr89229-6a.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-6a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-6a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-6a.c?ref=9d74caf21be7025db8fef997e87ebf3b85acaf4a", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=skylake-avx512\" } */\n+\n+extern float d;\n+\n+void\n+foo1 (float x)\n+{\n+  register float xmm16 __asm (\"xmm16\") = x;\n+  asm volatile (\"\" : \"+v\" (xmm16));\n+  register float xmm17 __asm (\"xmm17\") = xmm16;\n+  asm volatile (\"\" : \"+v\" (xmm17));\n+  d = xmm17;\n+}\n+\n+/* { dg-final { scan-assembler-not \"%zmm\\[0-9\\]+\" } } */"}, {"sha": "a74f7169e6e8e354342790ad908d41a797c4654e", "filename": "gcc/testsuite/gcc.target/i386/pr89229-6b.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-6b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-6b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-6b.c?ref=9d74caf21be7025db8fef997e87ebf3b85acaf4a", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=skylake-avx512 -mno-avx512vl\" } */\n+\n+#include \"pr89229-6a.c\"\n+\n+/* { dg-final { scan-assembler-times \"vmovaps\\[^\\n\\r]*zmm1\\[67]\\[^\\n\\r]*zmm1\\[67]\" 1 } } */"}, {"sha": "7a4d254670c1b7ff6552bab4855e6cb0b19b5e70", "filename": "gcc/testsuite/gcc.target/i386/pr89229-6c.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-6c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d74caf21be7025db8fef997e87ebf3b85acaf4a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-6c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-6c.c?ref=9d74caf21be7025db8fef997e87ebf3b85acaf4a", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=skylake-avx512 -mprefer-vector-width=512\" } */\n+\n+#include \"pr89229-6a.c\"\n+\n+/* { dg-final { scan-assembler-not \"%zmm\\[0-9\\]+\" } } */"}]}