{"sha": "1ea9a0b74e60e6cdca6372403d7bd564a5410d82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVhOWEwYjc0ZTYwZTZjZGNhNjM3MjQwM2Q3YmQ1NjRhNTQxMGQ4Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-06-10T07:36:34Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-10T07:36:34Z"}, "message": "gcc-changelog: Improve git_commit.py diagnostics\n\nThis changes some error messages to be more self-consistent and to fix\nsome grammar.\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py (GitCommit.parse_changelog):\n\tImprove error strings.\n\t* gcc-changelog/test_email.py: Update expected errors.", "tree": {"sha": "f87ac425ae9ba542a13ca26d561c26028462e458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f87ac425ae9ba542a13ca26d561c26028462e458"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ea9a0b74e60e6cdca6372403d7bd564a5410d82", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7gjZoACgkQTcGC3A+n\nN4WDpggAhrRxIuc0wp9TmzlZC2R2fUlp8WD9RKAwuF7VTjcvA4qZlRCQVODZ65Pj\njfS1LPz3NIfTs8UOBe7BElYvh5WMupnlIktpNUiOl9V3JUv2EAZZMhU8Dk6BuCFz\nmk3FF4nJefUe/JpizSYJA0+Fzw7tBhlGXqB7fN5FsTTmQE1SXbs6QKR2HwGlcTOL\nQrr7Iy13Ni0FyRF+6xX3ug2HzkULmROOCY7PLjbfa88QIaaQF6EmsORZM8UXPuQt\nIUI3U9hP1dam4QBQoROnJ4v3OGSNGzoihCF3rxIAq6OA7RWHqVWRpP5D6wQ9DWNF\nSAR5JXZgnfiK1zs8sGckzq+96YIfwQ==\n=A++n\n-----END PGP SIGNATURE-----", "payload": "tree f87ac425ae9ba542a13ca26d561c26028462e458\nparent b952c2cfcd74c284970e1b9bf1fca58f5f69ab23\nauthor Jonathan Wakely <jwakely@redhat.com> 1591774594 +0200\ncommitter Martin Liska <mliska@suse.cz> 1591774594 +0200\n\ngcc-changelog: Improve git_commit.py diagnostics\n\nThis changes some error messages to be more self-consistent and to fix\nsome grammar.\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py (GitCommit.parse_changelog):\n\tImprove error strings.\n\t* gcc-changelog/test_email.py: Update expected errors.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea9a0b74e60e6cdca6372403d7bd564a5410d82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ea9a0b74e60e6cdca6372403d7bd564a5410d82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea9a0b74e60e6cdca6372403d7bd564a5410d82/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b952c2cfcd74c284970e1b9bf1fca58f5f69ab23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b952c2cfcd74c284970e1b9bf1fca58f5f69ab23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b952c2cfcd74c284970e1b9bf1fca58f5f69ab23"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "0b350ba7fdabfcc039e4ec85a7530034c44b47b3", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea9a0b74e60e6cdca6372403d7bd564a5410d82/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea9a0b74e60e6cdca6372403d7bd564a5410d82/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=1ea9a0b74e60e6cdca6372403d7bd564a5410d82", "patch": "@@ -377,8 +377,8 @@ def parse_changelog(self):\n                 elif additional_author_regex.match(line):\n                     m = additional_author_regex.match(line)\n                     if len(m.group('spaces')) != 4:\n-                        msg = 'additional author must prepend with tab ' \\\n-                              'and 4 spaces'\n+                        msg = 'additional author must be indented with '\\\n+                              'one tab and four spaces'\n                         self.errors.append(Error(msg, line))\n                     else:\n                         author_tuple = (m.group('name'), None)\n@@ -438,15 +438,14 @@ def parse_changelog(self):\n                     m = star_prefix_regex.match(line)\n                     if m:\n                         if len(m.group('spaces')) != 1:\n-                            err = Error('one space should follow asterisk',\n-                                        line)\n-                            self.errors.append(err)\n+                            msg = 'one space should follow asterisk'\n+                            self.errors.append(Error(msg, line))\n                         else:\n                             last_entry.lines.append(line)\n                     else:\n                         if last_entry.is_empty:\n                             msg = 'first line should start with a tab, ' \\\n-                                  'asterisk and space'\n+                                  'an asterisk and a space'\n                             self.errors.append(Error(msg, line))\n                         else:\n                             last_entry.lines.append(line)\n@@ -527,7 +526,7 @@ def check_mentioned_files(self):\n         used_patterns = set()\n         for entry in self.changelog_entries:\n             if not entry.files:\n-                msg = 'ChangeLog must contain at least one file entry'\n+                msg = 'no files mentioned for ChangeLog in directory'\n                 self.errors.append(Error(msg, entry.folder))\n             assert not entry.folder.endswith('/')\n             for file in entry.files:\n@@ -540,7 +539,8 @@ def check_mentioned_files(self):\n                 if not self.is_changelog_filename(x[0])]\n         changed_files = set(cand)\n         for file in sorted(mentioned_files - changed_files):\n-            self.errors.append(Error('file not changed in a patch', file))\n+            msg = 'unchanged file mentioned in a ChangeLog'\n+            self.errors.append(Error(msg, file))\n         for file in sorted(changed_files - mentioned_files):\n             if not self.in_ignored_location(file):\n                 if file in self.new_files:"}, {"sha": "df57bb5c94ac68218017a6c5afe7fe4f3fc8328f", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea9a0b74e60e6cdca6372403d7bd564a5410d82/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea9a0b74e60e6cdca6372403d7bd564a5410d82/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=1ea9a0b74e60e6cdca6372403d7bd564a5410d82", "patch": "@@ -105,7 +105,7 @@ def test_wrong_mentioned_filename(self):\n         email = self.from_patch_glob('0096')\n         assert email.errors\n         err = email.errors[0]\n-        assert err.message == 'file not changed in a patch'\n+        assert err.message == 'unchanged file mentioned in a ChangeLog'\n         assert err.line == 'gcc/testsuite/gcc.target/aarch64/' \\\n                            'advsimd-intrinsics/vdot-compile-3-1.c'\n \n@@ -161,8 +161,8 @@ def test_invalid_PR_component(self):\n \n     def test_additional_author_list(self):\n         email = self.from_patch_glob('0342')\n-        assert (email.errors[1].message == 'additional author must prepend '\n-                                           'with tab and 4 spaces')\n+        assert (email.errors[1].message == 'additional author must be indented '\n+                                           'with one tab and four spaces')\n \n     def test_trailing_whitespaces(self):\n         email = self.get_git_email('trailing-whitespaces.patch')\n@@ -260,8 +260,8 @@ def test_strict_mode_datestamp_only(self):\n \n     def test_wrong_changelog_entry(self):\n         email = self.from_patch_glob('0020-IPA-Avoid')\n-        assert (email.errors[0].message\n-                == 'first line should start with a tab, asterisk and space')\n+        msg = 'first line should start with a tab, an asterisk and a space'\n+        assert (email.errors[0].message == msg)\n \n     def test_cherry_pick_format(self):\n         email = self.from_patch_glob('0001-c-Alias.patch')"}]}