{"sha": "f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdhYjVmYTRmMzIzMDIwNDRiMWJkYjViMjgzN2U0ZDk0ZjBmYzMxNg==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-08-05T01:20:15Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-08-05T01:20:15Z"}, "message": "guide.html: run_doxygen uses bash.\n\n2003-08-04  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* docs/doxygen/guide.html:  run_doxygen uses bash.\n\t* docs/doxygen/mainpage.html:  We'll be shipping tag files.\n\t* docs/doxygen/run_doxygen:  Tweaks and improvements.\n\t* docs/doxygen/user.cfg.in:  Set GENERATE_TAGFILE.\n\t* docs/html/install.html:  Update autoconf/automake requirements.\n\t* docs/html/test.html:  Add section describing DejaGNU support.\n\t* docs/html/17_intro/confdeps.dot:  New file, generates...\n\t* docs/html/17_intro/confdeps.png:  ...this new file.\n\t* docs/html/Makefile:  Generated here.\n\t* docs/html/17_intro/configury.html:  New file.\n\nFrom-SVN: r70164", "tree": {"sha": "bb3b09995a66d2cc7e5023df42f80feb934c6346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb3b09995a66d2cc7e5023df42f80feb934c6346"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/comments", "author": null, "committer": null, "parents": [{"sha": "8e9bb3cb0173ea13c44c5c2fe6cacf3c2e38c9ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e9bb3cb0173ea13c44c5c2fe6cacf3c2e38c9ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e9bb3cb0173ea13c44c5c2fe6cacf3c2e38c9ee"}], "stats": {"total": 407, "additions": 391, "deletions": 16}, "files": [{"sha": "96e05c8f91991a3c9b714fb3196123d97b3648c7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "patch": "@@ -1,3 +1,16 @@\n+2003-08-04  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* docs/doxygen/guide.html:  run_doxygen uses bash.\n+\t* docs/doxygen/mainpage.html:  We'll be shipping tag files.\n+\t* docs/doxygen/run_doxygen:  Tweaks and improvements.\n+\t* docs/doxygen/user.cfg.in:  Set GENERATE_TAGFILE.\n+\t* docs/html/install.html:  Update autoconf/automake requirements.\n+\t* docs/html/test.html:  Add section describing DejaGNU support.\n+\t* docs/html/17_intro/confdeps.dot:  New file, generates...\n+\t* docs/html/17_intro/confdeps.png:  ...this new file.\n+\t* docs/html/Makefile:  Generated here.\n+\t* docs/html/17_intro/configury.html:  New file.\n+\n 2003-07-31  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* testsuite/lib/libstdc++-v3-dg.exp:  Rename..."}, {"sha": "814dc1debea0bf7429e7313b70e9de86fc09f684", "filename": "libstdc++-v3/docs/doxygen/guide.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fguide.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fguide.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fguide.html?ref=f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "patch": "@@ -28,7 +28,7 @@ <h1>libstdc++-v3 Source Documentation</h1>\n    <code>'make doxygen-maint'</code>, and <code>'make doxygen-man'</code>\n    in the libstdc++-v3 build directory generate the user-level HTML docs, the\n    maintainer-level HTML docs, and the man pages, respectively.  Prerequisite\n-   tools are\n+   tools are Bash 2.x, \n    <a href=\"http://www.doxygen.org/\">\n    <!-- snagged from the generated page -->\n    <img src=\"doxygen.png\" alt=\"Doxygen\" align=center border=0 width=110 height=53>"}, {"sha": "2ff090230c8ce6cdfc09293e6059dd07f9fde868", "filename": "libstdc++-v3/docs/doxygen/mainpage.html", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmainpage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmainpage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmainpage.html?ref=f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "patch": "@@ -58,6 +58,19 @@ <h2>Documentation Overview</h2>\n    </ul>\n </p>\n \n+<p>If you are using Doxygen for your own projects, you can use\n+   <a href=\"libstdc++.tag\">a tag file for the appropriate version</a> and\n+   an entry such as\n+   <blockquote>\n+   TAGFILES = \"libstdc++.tag = \n+   http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen\"\n+   </blockquote>\n+   Be sure to adjust the URL for the right version.  If you download a\n+   local copy of the source documentation for faster viewing, you can use\n+   the doxytag/installdox programs (part of Doxygen) to adjust the links\n+   for you.\n+</p>\n+\n <h2>Generating the documentation</h2>\n <p>These HTML pages are automatically generated, along with the man pages.\n    See <code>docs/doxygen/guide.html</code> in the source tree for how to"}, {"sha": "28868807b7eab265d4b518ac82d14cab999893b9", "filename": "libstdc++-v3/docs/doxygen/run_doxygen", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen?ref=f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/sh\n+#!/bin/bash\n \n # Runs doxygen and massages the output files.\n # Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n@@ -10,12 +10,11 @@\n \n # We can check now that the version of doxygen is >= this variable.\n DOXYVER=1.2.15\n-doxygen=\n \n find_doxygen() {\n-    v_required=`echo $DOXYVER |  \\\n+    local -r v_required=`echo $DOXYVER |  \\\n                 awk -F. '{if(NF<3)$3=0;print ($1*100+$2)*100+$3}'`\n-    testing_version=\n+    local testing_version doxygen maybedoxy v_found\n     # thank you goat book\n     set `IFS=:; X=\"$PATH:/usr/local/bin:/bin:/usr/bin\"; echo $X`\n     for dir\n@@ -36,6 +35,10 @@ find_doxygen() {\n         echo run_doxygen error:  Could not find Doxygen $DOXYVER in path. 1>&2\n         print_usage\n     fi\n+    # We need to use other tools from the same package/version.\n+    echo :: Using Doxygen tools from ${dir}.\n+    PATH=$dir:$PATH\n+    hash -r\n }\n \n print_usage() {\n@@ -142,15 +145,18 @@ test $do_man = yes && {\n       -e \"s=@do_man@=${do_man}=\" \\\n       ${srcdir}/docs/doxygen/user.cfg.in > ${outdir}/${mode}.cfg\n   echo :: NOTE that this may take some time...\n-  echo $doxygen ${outdir}/${mode}.cfg\n-  $doxygen ${outdir}/${mode}.cfg\n+  echo doxygen ${outdir}/${mode}.cfg\n+  doxygen ${outdir}/${mode}.cfg\n   echo :: Finished, exit code was $?\n )\n ret=$?\n test $ret -ne 0 && exit $ret\n \n test $do_html = yes && {\n   cd ${outdir}/html_${mode}\n+\n+  #doxytag -t libstdc++.tag . > /dev/null 2>&1\n+\n   sed -e \"s=@LEVEL@=${LEVELtext}=\" \\\n       -e \"s=@DATE@=${DATEtext}=\" \\\n       ${srcdir}/docs/doxygen/mainpage.html > index.html"}, {"sha": "87653ebe512f85bc16fe6a70214f39653346a571", "filename": "libstdc++-v3/docs/doxygen/user.cfg.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in?ref=f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "patch": "@@ -902,7 +902,7 @@ TAGFILES               =\n # When a file name is specified after GENERATE_TAGFILE, doxygen will create \n # a tag file that is based on the input files it reads.\n \n-GENERATE_TAGFILE       = \n+GENERATE_TAGFILE       = @outdir@/@html_output_dir@/libstdc++.tag\n \n # If the ALLEXTERNALS tag is set to YES all external classes will be listed \n # in the class index. If set to NO only the inherited external classes "}, {"sha": "a62d28ce9ddf00a2689bb05ab892e6e7798e8bb0", "filename": "libstdc++-v3/docs/html/17_intro/confdeps.dot", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconfdeps.dot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconfdeps.dot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconfdeps.dot?ref=f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "patch": "@@ -0,0 +1,14 @@\n+# Blatantly ripped out of the graphviz examples and modified.  -pme\n+digraph v3conf {\n+    size=\"6,6\";\n+    node [color=lightblue2, style=filled];\n+    \"aclocal.m4\" -> \"acinclude.m4\";\n+    \"configure\" -> \"aclocal.m4\";\n+    \"configure\" -> \"configure.ac\";\n+    \"configure\" -> \"crossconfig.m4\";\n+    \"configure\" -> \"linkage.m4\";\n+    \"[*/]Makefile.in\" -> \"Makefile.am\";\n+    \"[*/]Makefile.in\" -> \"configure.ac\";\n+    \"config.h.in\" -> \"acconfig.h\";\n+    \"config.h.in\" -> \"configure.ac\";\n+}"}, {"sha": "5075aa869b158b79a04a48023f24817743615807", "filename": "libstdc++-v3/docs/html/17_intro/confdeps.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconfdeps.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconfdeps.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconfdeps.png?ref=f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316"}, {"sha": "8b44ff381dc4eb3e3eb178fa39f7dec2c5eadfec", "filename": "libstdc++-v3/docs/html/17_intro/configury.html", "status": "added", "additions": 285, "deletions": 0, "changes": 285, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconfigury.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconfigury.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fconfigury.html?ref=f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "patch": "@@ -0,0 +1,285 @@\n+<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n+<!DOCTYPE html\n+          PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n+          \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n+<head>\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\" />\n+   <meta name=\"DESCRIPTION\" content=\"configury for libstdc++\" />\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\" />\n+   <title>libstdc++-v3 configury</title>\n+<link rel=\"StyleSheet\" href=\"../lib3styles.css\" />\n+</head>\n+<body>\n+\n+<h1><code>&gt; open configury door</code></h1>\n+<h1><code>&gt; look</code></h1>\n+\n+<p class=\"larger\"><code>You are in a maze of twisty passages, all\n+different.</code></p>\n+<p class=\"larger\"><code>It is dark.  You are likely to be eaten by a\n+Canadian cross build.</code></p>\n+\n+\n+<hr />\n+<h2>Notes on libstdc++-v3 configury</h2>\n+<blockquote>\n+No problem is insoluble in all conceivable circumstances.<br />\n+-- The Cosmic AC,\n+<a href=\"http://people.inf.elte.hu/simi/szovegek/Asimov1.html\">The\n+Last Question</a>, by Isaac Asimov\n+</blockquote>\n+<ul>\n+ <li><a href=\"#deps\">what comes from where</a></li>\n+ <li><a href=\"#breakout\">storing information in non-AC files, like\n+                         configure.host</a></li>\n+ <li><a href=\"#general\">general config notes</a></li>\n+ <li><a href=\"#aclayout\">acinclude.m4 layout</a></li>\n+ <li><a href=\"#enable\"><code>--enable</code> howto</a></li>\n+</ul>\n+\n+<hr />\n+<h3><a name=\"deps\">what comes from where</a></h3>\n+<p class=\"centered\"><img src=\"confdeps.png\"\n+  alt=\"Dependency graph in PNG graphics format.  (Get a better browser!)\"></p>\n+\n+<p>Regenerate using a command sequence like\n+   <code>\"aclocal-1.7 &amp;&amp; autoconf2.50 &amp;&amp; autoheader2.50\n+   &amp;&amp; automake-1.7\"</code> as needed.  And/or configure with\n+   --enable-maintainer-mode.\n+</p>\n+\n+\n+<hr />\n+<h3><a name=\"breakout\">storing information in non-AC files, like\n+                       configure.host</a></h3>\n+<p>Until that glorious day when we can use AC_TRY_LINK with a cross-compiler,\n+   we have to hardcode the results of what the tests would have shown if\n+   they could be run.  So we have an inflexible mess like crossconfig.m4.\n+</p>\n+\n+<p>Wouldn't it be nice if we could store that information in files like\n+   configure.host, which can be modified without needing to regenerate\n+   anything, and can even be tweaked without really knowing how the configury\n+   all works?  Perhaps break the pieces of crossconfig.m4 out and place them in\n+   their appropriate config/{cpu,os} directory.\n+</p>\n+\n+<p>Alas, writing macros like \"<code>AC_DEFINE(HAVE_A_NICE_DAY)</code>\" can\n+   only be done inside files which are passed through autoconf.  Files which\n+   are pure shell script can be source'd at configure time.  Files which\n+   contain autoconf macros must be processed with autoconf.  We could still\n+   try breaking the pieces out into \"config/*/cross.m4\" bits, for instance,\n+   but then we would need arguments to aclocal/autoconf to properly find\n+   them all when generating configure.  I would discourage that.\n+</p>\n+\n+\n+<hr />\n+<h3><a name=\"general\">general config notes</a></h3>\n+<p>Lots of stuff got thrown out because the new autotools kindly generate\n+   the same (or better) shell code for us.\n+</p>\n+\n+<p>Most comments should use {octothorpes, shibboleths, hash marks, pound\n+   signs, whatevers} rather than \"dnl\".  Nearly all comments in configure.ac\n+   should.  Comments inside macros written in ancilliary .m4 files should.\n+   About the only comments which should <em>not</em> use #, but use dnl\n+   instead, are comments <em>outside</em> our own macros in the ancilliary\n+   files.  The difference is that # comments show up in <code>configure</code>\n+   (which is most helpful for debugging), while dnl'd lines just vanish.\n+   Since the macros in ancilliary files generate code which appears in odd\n+   places, their \"outside\" comments tend to not be useful while reading\n+   <code>configure</code>.\n+</p>\n+\n+<p>Do not use any <code>$target*</code> variables, such as\n+   <code>$target_alias</code>.  The single exception is in configure.ac,\n+   for automake+dejagnu's sake.\n+</p>\n+\n+<p>\n+</p>\n+\n+<hr />\n+<h3><a name=\"aclayout\">acinclude.m4 layout</a></h3>\n+<p>The nice thing about acinclude.m4/aclocal.m4 is that macros aren't actually\n+   performed/called/expanded/whatever here, just loaded.  So we can arrange\n+   the contents however we like.  As of this writing, acinclude.m4 is arranged\n+   as follows:\n+</p>\n+<pre>\n+    GLIBCXX_CHECK_HOST\n+    GLIBCXX_TOPREL_CONFIGURE\n+    GLIBCXX_CONFIGURE\n+</pre>\n+<p>All the major variable \"discovery\" is done here.  CXX, multilibs, etc.\n+</p>\n+<pre>\n+    fragments included from elsewhere\n+</pre>\n+<p>Right now, \"fragments\" == \"the math/linkage bits\".\n+</p>\n+<pre>\n+    GLIBCXX_CHECK_COMPILER_FEATURES\n+    GLIBCXX_CHECK_LINKER_FEATURES\n+    GLIBCXX_CHECK_WCHAR_T_SUPPORT\n+</pre>\n+<p>Next come extra compiler/linker feature tests.  Wide character support\n+   was placed here because I couldn't think of another place for it.  It will\n+   probably get broken apart like the math tests, because we're still disabling\n+   wchars on systems which could actually support them.\n+</p>\n+<pre>\n+    GLIBCXX_CHECK_SETRLIMIT_ancilliary\n+    GLIBCXX_CHECK_SETRLIMIT\n+    GLIBCXX_CHECK_S_ISREG_OR_S_IFREG\n+    GLIBCXX_CHECK_POLL\n+    GLIBCXX_CHECK_WRITEV\n+\n+    GLIBCXX_CONFIGURE_TESTSUITE\n+</pre>\n+<p>Feature tests which only get used in one place.  Here, things used only in\n+   the testsuite, plus a couple bits used in the guts of I/O.\n+</p>\n+<pre>\n+    GLIBCXX_EXPORT_INCLUDES\n+    GLIBCXX_EXPORT_FLAGS\n+    GLIBCXX_EXPORT_INSTALL_INFO\n+</pre>\n+<p>Installation variables, multilibs, working with the rest of the compiler.\n+   Many of the critical variables used in the makefiles are set here.\n+</p>\n+<pre>\n+    GLIBGCC_ENABLE\n+    GLIBCXX_ENABLE_C99\n+    GLIBCXX_ENABLE_CHEADERS\n+    GLIBCXX_ENABLE_CLOCALE\n+    GLIBCXX_ENABLE_CONCEPT_CHECKS\n+    GLIBCXX_ENABLE_CSTDIO\n+    GLIBCXX_ENABLE_CXX_FLAGS\n+    GLIBCXX_ENABLE_C_MBCHAR\n+    GLIBCXX_ENABLE_DEBUG\n+    GLIBCXX_ENABLE_DEBUG_FLAGS\n+    GLIBCXX_ENABLE_LIBUNWIND_EXCEPTIONS\n+    GLIBCXX_ENABLE_LONG_LONG\n+    GLIBCXX_ENABLE_PCH\n+    GLIBCXX_ENABLE_SJLJ_EXCEPTIONS\n+    GLIBCXX_ENABLE_SYMVERS\n+    GLIBCXX_ENABLE_THREADS\n+</pre>\n+<p>All the features which can be controlled with enable/disable configure\n+   options.  Note how they're alphabetized now?  Keep them like that.  :-)\n+</p>\n+<pre>\n+    AC_LC_MESSAGES\n+    libtool bits\n+</pre>\n+<p>Things which we don't seem to use directly, but just has to be present\n+   otherwise stuff magically goes wonky.\n+</p>\n+\n+\n+<hr />\n+<h3><a name=\"enable\"><code>--enable</code> howto</a></h3>\n+<p>All the GLIBCXX_ENABLE_FOO macros use a common helper, GLIBCXX_ENABLE.\n+   (You don't have to use it, but it's easy.)  The helper does two things\n+   for us:\n+</p>\n+\n+<ol>\n+ <li>Builds the call to the AC_ARG_ENABLE macro, with --help text properly\n+     quoted and aligned.  (Death to changequote!)</li>\n+ <li>Checks the result against a list of allowed possibilities, and signals\n+     a fatal error if there's no match.  This means that the rest of the\n+     GLIBCXX_ENABLE_FOO macro doesn't need to test for strange arguments,\n+     nor do we need to protect against empty/whitespace strings with the\n+     <code>\"x$foo\" = \"xbar\"</code> idiom.</li>\n+</ol>\n+\n+<p>Doing these things correctly takes some extra autoconf/autom4te code,\n+   which made our macros nearly illegible.  So all the ugliness is factored\n+   out into this one helper macro.\n+</p>\n+\n+<p>Many of the macros take an argument, passed from when they are expanded\n+   in configure.ac.  The argument controls the default value of the\n+   enable/disable switch.  Previously, the arguments themselves had defaults.\n+   Now they don't, because that's extra complexity with zero gain for us.\n+</p>\n+\n+<p>There are three \"overloaded signatures\".  When reading the descriptions\n+   below, keep in mind that the brackets are autoconf's quotation characters,\n+   and that they will be stripped.  Examples of just about everything occur\n+   in acinclude.m4, if you want to look.\n+</p>\n+\n+<pre>\n+    GLIBCXX_ENABLE (FEATURE, DEFAULT, HELP-ARG, HELP-STRING)\n+    GLIBCXX_ENABLE (FEATURE, DEFAULT, HELP-ARG, HELP-STRING, permit a|b|c)\n+    GLIBCXX_ENABLE (FEATURE, DEFAULT, HELP-ARG, HELP-STRING, SHELL-CODE-HANDLER)\n+</pre>\n+\n+<ul>\n+ <li><p>FEATURE is the string that follows --enable.  The results of the test\n+     (such as it is) will be in the variable $enable_FEATURE, where FEATURE\n+     has been squashed.  Example:  <code>[extra-foo]</code>, controlled by the\n+     --enable-extra-foo option and stored in $enable_extra_foo.</p></li>\n+ <li><p>DEFAULT is the value to store in $enable_FEATURE if the user does not\n+     pass --enable/--disable.  It should be one of the permitted values\n+     passed later.  Examples:  <code>[yes]</code>, or <code>[bar]</code>, or\n+     <code>[$1]</code> (which passes the argument given to the\n+     GLIBCXX_ENABLE_FOO macro as the default).</p>\n+     <p>For cases where we need to probe for particular models\n+     of things, it is useful to have an undocumented \"auto\" value here (see\n+     GLIBCXX_ENABLE_CLOCALE for an example).</p></li>\n+ <li><p>HELP-ARG is any text to append to the option string itself in the\n+     --help output.  Examples: <code>[]</code> (i.e., an empty string,\n+     which appends nothing),\n+     <code>[=BAR]</code>, which produces\n+     <code>--enable-extra-foo=BAR</code>, and\n+     <code>[@&lt;:@=BAR@:&gt;@]</code>, which produces\n+     <code>--enable-extra-foo[=BAR]</code>.  See the difference?  See what\n+     it implies to the user?</p>\n+     <p>If you're wondering what that line noise in the last example was,\n+     that's how you embed autoconf special characters in output text.\n+     They're called\n+<a href=\"http://www.gnu.org/manual/autoconf/html_node/autoconf_95.html#SEC95\"><em>quadrigraphs</em></a>\n+     and you should use them whenever necessary.</p></li>\n+ <li><p>HELP-STRING is what you think it is.  Do not include the \"default\"\n+     text like we used to do; it will be done for you by GLIBCXX_ENABLE.\n+     By convention, these are not full English sentences.\n+     Example:  [turn on extra foo]</p></li>\n+</ul>\n+\n+<p>With no other arguments, only the standard autoconf patterns are\n+   allowed:  \"<code>--{enable,disable}-foo[={yes,no}]</code>\"  The\n+   $enable_FEATURE variable is guaranteed to equal either \"yes\" or \"no\"\n+   after the macro.  If the user tries to pass something else, an\n+   explanatory error message will be given, and configure will halt.\n+</p>\n+\n+<p>The second signature takes a fifth argument,\n+   \"<code>[permit <em>a</em>|<em>b</em>|<em>c</em>|<em>...</em>]</code>\"\n+   This allows <em>a</em> or <em>b</em> or ... after the equals sign in the\n+   option, and $enable_FEATURE is guaranteed to equal one of them after the\n+   macro.  Note that if you want to allow plain --enable/--disable with no\n+   \"=whatever\", you must include \"yes\" and \"no\" in the list of permitted\n+   values.  Also note that whatever you passed as DEFAULT must be in the list.\n+   If the user tries to pass something not on the list, a semi-explanatory\n+   error message will be given, and configure will halt.\n+   Example:  <code>[permit generic|gnu|ieee_1003.1-2001|yes|no|auto]</code>\n+</p>\n+\n+<p>The third signature takes a fifth argument.  It is arbitrary shell code\n+   to execute if the user actually passes the enable/disable option.  (If\n+   the user does not, the default is used.  Duh.)  No argument checking at\n+   all is done in this signature.  See GLIBCXX_ENABLE_CXX_FLAGS for an\n+   example of handling, and an error message.\n+</p>\n+\n+<hr />\n+</body>\n+</html>"}, {"sha": "a0b335aaa2d33039cf66600f9aca774d75fb305f", "filename": "libstdc++-v3/docs/html/Makefile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2FMakefile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2FMakefile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2FMakefile?ref=f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "patch": "@@ -5,6 +5,7 @@ INC=../../../gcc/doc/include\n \n all: documentation.html                  \\\n      faq/index.txt                       \\\n+     17_intro/confdeps.png               \\\n      17_intro/porting.html               \\\n      17_intro/porting-howto.html\n \n@@ -34,4 +35,7 @@ faq/index.txt: faq/index.html\n 17_intro/porting-howto.html: 17_intro/porting-howto.xml\n \txltproc -o $@ /usr/share/xml/docbook/xsl-stylesheets-1.48-2/html/docbook.xsl $<\n \n+17_intro/confdeps.png: 17_intro/confdeps.dot\n+\tdot -Tpng -o $@ $<\n+\n # vim:noet ts=4"}, {"sha": "6c983710b86d8d1b22b70eea6de8fc8312a64d7e", "filename": "libstdc++-v3/docs/html/install.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html?ref=f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "patch": "@@ -57,10 +57,10 @@ <h2><a name=\"prereqs\">Tools you will need beforehand</a></h2>\n \n    <p>In addition, if you plan to modify the makefiles or regenerate the\n       configure scripts you'll need recent versions of the GNU Autotools:\n-      autoconf (version 2.50 or later),\n-      automake (version 1.4 or later),    <!-- special version? -->\n-      and libtool (multilanguage, version 1.4 or later),  <!-- really? -->\n-      in order to rebuild the files.\n+      autoconf (version 2.57 or later) and\n+      automake (version 1.7.6 or later),\n+      in order to rebuild the files.  Libtool is built from special sources\n+      in the GCC source tree.\n       These tools are all required to be installed in the same location\n       (most linux distributions install these tools by default, so no\n       worries as long as the versions are correct)."}, {"sha": "8c570f3fa3bfb5a00087d090ad75c918d6cf234c", "filename": "libstdc++-v3/docs/html/test.html", "status": "modified", "additions": 44, "deletions": 4, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html?ref=f7ab5fa4f32302044b1bdb5b2837e4d94f0fc316", "patch": "@@ -35,6 +35,7 @@ <h2>Contents</h2>\n    <li><a href=\"#new\">How to write a new test case</a></li>\n    <li><a href=\"#check\">Options for running the tests</a></li>\n    <li><a href=\"#future\">Future</a></li>\n+   <li><a href=\"#internals\">DejaGNU internals</a></li>\n </ul>\n \n <hr />\n@@ -79,13 +80,13 @@ <h2><a name=\"org\">Testsuite organization and naming conventions</a></h2>\n    \n    <p>\n       Some directories don't have test files, but instead contain\n-      auxiliary information:\n+      auxiliary information (<a href=\"#internals\">more information</a>):\n    </p>\n \n    <pre>\n config\t\t  Files for the dejagnu test harness.\n lib\t\t  Files for the dejagnu test harness.\n-libstdc++-v3.dg\t  Files for the dejagnu test harness.\n+libstdc++*     \t  Files for the dejagnu test harness.\n data\t\t  Sample text files for testing input and output.\n    </pre>\n \n@@ -218,7 +219,7 @@ <h2><a name=\"util\">Utilities: abicheck and libv3test</a></h2>\n         Used to check correctness of symbol versioning, visibility of\n         exported symbols, and compatibility on symbols in the shared\n         library, for hosts that support this feature. More information\n-\tcan be found in the ABI documentation <a href=\"abi.txt\"> here</a>\n+        can be found in the ABI documentation <a href=\"abi.txt\"> here</a>\n        </p>\n      </li>\n      <li>\n@@ -260,7 +261,7 @@ <h2><a name=\"util\">Utilities: abicheck and libv3test</a></h2>\n          <li>time_counter</li>\n          <li>resource_counter</li>\n          <li>report_performance</li>\n-      </ul>\t\n+      </ul>\n        <p></p> \n      </li>\n      <li>\n@@ -585,6 +586,45 @@ <h2><a name=\"future\">Future</a></h2>\n </dd>\n </dl>\n \n+<hr />\n+<h2><a name=\"internals\">DejaGNU internals</a></h2>\n+\n+<p>This is information for those looking at making changes to the testsuite\n+structure, and/or needing to trace dejagnu's actions with --verbose.  This\n+will not be useful to people who are \"merely\" adding new tests to the existing\n+structure.\n+</p>\n+\n+<p>The first key point when working with dejagnu is the idea of a \"tool\".\n+Files, directories, and functions are all implicitly used when they are\n+named after the tool in use.  Here, the tool will always be \"libstdc++\".\n+</p>\n+\n+<p>The <code>lib</code> subdir contains support routines.  The\n+<code>lib/libstdc++.exp</code> file (\"support library\") is loaded\n+automagically, and must explicitly load the others.  For example, files can\n+be copied from the core compiler's support directory into <code>lib</code>.\n+</p>\n+\n+<p>Some routines in <code>lib/libstdc++.exp</code> are callbacks, some are\n+our own.  Callbacks must be prefixed with the name of the tool.  To easily\n+distinguish the others, by convention our own routines are named \"v3-*\".\n+</p>\n+\n+<p>The next key point when working with dejagnu is \"test files\".  Any\n+directory whose name starts with the tool name will be searched for test files.\n+(We have only one.)  In those directories, any <code>.exp</code> file is\n+considered a test file, and will be run in turn.  Our main test file is called\n+<code>normal.exp</code>; it runs all the tests in testsuite_files using the\n+callbacks loaded from the support library.\n+</p>\n+\n+<p>The <code>config</code> directory is searched for any particular \"target\n+board\" information unique to this library.  This is currently unused and sets\n+only default variables.\n+</p>\n+\n+\n <!-- ####################################################### -->\n \n <hr />"}]}