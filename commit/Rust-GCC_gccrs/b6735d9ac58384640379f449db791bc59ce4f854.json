{"sha": "b6735d9ac58384640379f449db791bc59ce4f854", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY3MzVkOWFjNTgzODQ2NDAzNzlmNDQ5ZGI3OTFiYzU5Y2U0Zjg1NA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2016-10-26T09:46:44Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2016-10-26T09:46:44Z"}, "message": "gen-pass-instances.awk is sensitive to the order in which passes are added...\n\n\tgen-pass-instances.awk is sensitive to the order in which\n\tpasses are added; passes that appear later have to be added first.\n\tPR target/71676\n\tPR target/71678\n\t* config/avr/avr-passes.def: Swap order of directives for\n\tgen-pass-instances.awk.\n\nFrom-SVN: r241547", "tree": {"sha": "9437b562ad2d3db5bc1ab57e03bb0a1aca369e1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9437b562ad2d3db5bc1ab57e03bb0a1aca369e1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6735d9ac58384640379f449db791bc59ce4f854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6735d9ac58384640379f449db791bc59ce4f854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6735d9ac58384640379f449db791bc59ce4f854", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6735d9ac58384640379f449db791bc59ce4f854/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e8b0bba61cd8b28f2babb3e4844176053f593d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e8b0bba61cd8b28f2babb3e4844176053f593d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e8b0bba61cd8b28f2babb3e4844176053f593d5"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "5a93e88a97b6b61cfdc8121e5d3209402f5145a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6735d9ac58384640379f449db791bc59ce4f854/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6735d9ac58384640379f449db791bc59ce4f854/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6735d9ac58384640379f449db791bc59ce4f854", "patch": "@@ -1,3 +1,13 @@\n+2016-10-26  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tgen-pass-instances.awk is sensitive to the order in which\n+\tpasses are added; passes that appear later have to be added first.\n+\n+\tPR target/71676\n+\tPR target/71678\n+\t* config/avr/avr-passes.def: Swap order of directives for\n+\tgen-pass-instances.awk.\n+\n 2016-10-25  Jeff Law  <law@redhat.com>\n \n \t* config/vax/vax.c (vad_address_cost_1): Add missing FALLTHRU comment."}, {"sha": "4ca67b1235d8ee4a537b02fd83c4385707de208c", "filename": "gcc/config/avr/avr-passes.def", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6735d9ac58384640379f449db791bc59ce4f854/gcc%2Fconfig%2Favr%2Favr-passes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6735d9ac58384640379f449db791bc59ce4f854/gcc%2Fconfig%2Favr%2Favr-passes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-passes.def?ref=b6735d9ac58384640379f449db791bc59ce4f854", "patch": "@@ -17,6 +17,19 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n+/* FIXME: We have to add the last pass first, otherwise\n+          gen-pass-instances.awk won't work as expected. */\n+          \n+/* This avr-specific pass (re)computes insn notes, in particular REG_DEAD\n+   notes which are used by `avr.c::reg_unused_after' and branch offset\n+   computations.  These notes must be correct, i.e. there must be no\n+   dangling REG_DEAD notes; otherwise wrong code might result, cf. PR64331.\n+\n+   DF needs (correct) CFG, hence right before free_cfg is the last\n+   opportunity to rectify notes.  */\n+\n+INSERT_PASS_BEFORE (pass_free_cfg, 1, avr_pass_recompute_notes);\n+\n /* casesi uses a SImode switch index which is quite costly as most code will\n    work on HImode or QImode.  The following pass runs right after .expand and\n    tries to fix such situations by operating on the original mode.  This\n@@ -27,13 +40,3 @@\n    insns withaout any insns in between.  */\n \n INSERT_PASS_AFTER (pass_expand, 1, avr_pass_casesi);\n-\n-/* This avr-specific pass (re)computes insn notes, in particular REG_DEAD\n-   notes which are used by `avr.c::reg_unused_after' and branch offset\n-   computations.  These notes must be correct, i.e. there must be no\n-   dangling REG_DEAD notes; otherwise wrong code might result, cf. PR64331.\n-\n-   DF needs (correct) CFG, hence right before free_cfg is the last\n-   opportunity to rectify notes.  */\n-\n-INSERT_PASS_BEFORE (pass_free_cfg, 1, avr_pass_recompute_notes);"}]}