{"sha": "4b377e01ce6b56e0ec0276596e47bfbaacf97aa6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIzNzdlMDFjZTZiNTZlMGVjMDI3NjU5NmU0N2JmYmFhY2Y5N2FhNg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-06-26T17:19:15Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-06-26T17:19:15Z"}, "message": "PR c++/81169 - -Wclass-memaccess illegitimate warning related to volatile\n\ngcc/cp/ChangeLog:\n\n\tPR c++/81169\n\t* call.c (maybe_warn_class_memaccess): Preserve explicit conversions\n\tto detect casting away cv-qualifiers.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/81169\n\t* g++.dg/Wclass-memaccess-2.C: New test.\n\nFrom-SVN: r249660", "tree": {"sha": "f40e76f1d3078a7edf198e4176f6e27220c875c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f40e76f1d3078a7edf198e4176f6e27220c875c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b377e01ce6b56e0ec0276596e47bfbaacf97aa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b377e01ce6b56e0ec0276596e47bfbaacf97aa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b377e01ce6b56e0ec0276596e47bfbaacf97aa6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b377e01ce6b56e0ec0276596e47bfbaacf97aa6/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b269e8998d5cc47d010d915aba548fa0ae2d8bf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b269e8998d5cc47d010d915aba548fa0ae2d8bf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b269e8998d5cc47d010d915aba548fa0ae2d8bf8"}], "stats": {"total": 79, "additions": 77, "deletions": 2}, "files": [{"sha": "8bc268c1dcd4af9300aba7e7f4342a6f6f1b735a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b377e01ce6b56e0ec0276596e47bfbaacf97aa6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b377e01ce6b56e0ec0276596e47bfbaacf97aa6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4b377e01ce6b56e0ec0276596e47bfbaacf97aa6", "patch": "@@ -1,3 +1,9 @@\n+2017-06-26  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/81169\n+\t* call.c (maybe_warn_class_memaccess): Preserve explicit conversions\n+\tto detect casting away cv-qualifiers.\n+\n 2017-06-26  Nathan Sidwell  <nathan@acm.org>\n \n \t* cp-tree.h (lang_decl_fn): Remove assignment_operator_p field."}, {"sha": "ff0a26b93350f3a6d0c3ec8cc30fec836adfeccd", "filename": "gcc/cp/call.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b377e01ce6b56e0ec0276596e47bfbaacf97aa6/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b377e01ce6b56e0ec0276596e47bfbaacf97aa6/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=4b377e01ce6b56e0ec0276596e47bfbaacf97aa6", "patch": "@@ -8340,7 +8340,10 @@ maybe_warn_class_memaccess (location_t loc, tree fndecl, tree *args)\n   if (!dest || !TREE_TYPE (dest) || !POINTER_TYPE_P (TREE_TYPE (dest)))\n     return;\n \n-  STRIP_NOPS (dest);\n+  /* Remove the outermost (usually implicit) conversion to the void*\n+     argument type.  */\n+  if (TREE_CODE (dest) == NOP_EXPR)\n+    dest = TREE_OPERAND (dest, 0);\n \n   tree srctype = NULL_TREE;\n \n@@ -8357,7 +8360,7 @@ maybe_warn_class_memaccess (location_t loc, tree fndecl, tree *args)\n   if (current_function_decl\n       && (DECL_CONSTRUCTOR_P (current_function_decl)\n \t  || DECL_DESTRUCTOR_P (current_function_decl))\n-      && is_this_parameter (dest))\n+      && is_this_parameter (tree_strip_nop_conversions (dest)))\n     {\n       tree ctx = DECL_CONTEXT (current_function_decl);\n       bool special = same_type_ignoring_top_level_qualifiers_p (ctx, desttype);"}, {"sha": "d7c906aad6f59eb409eca43113c7d90e10b8a0f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b377e01ce6b56e0ec0276596e47bfbaacf97aa6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b377e01ce6b56e0ec0276596e47bfbaacf97aa6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b377e01ce6b56e0ec0276596e47bfbaacf97aa6", "patch": "@@ -1,3 +1,8 @@\n+2017-06-26  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/81169\n+\t* g++.dg/Wclass-memaccess-2.C: New test.\n+\n 2017-06-26  Carl Love  <cel@us.ibm.com>\n \n \t* gcc.target/powerpc/builtins-3-vec_reve-runnable.c:"}, {"sha": "49581df1204dd0285fa424e69a61a13dd936f43b", "filename": "gcc/testsuite/g++.dg/Wclass-memaccess-2.C", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b377e01ce6b56e0ec0276596e47bfbaacf97aa6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FWclass-memaccess-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b377e01ce6b56e0ec0276596e47bfbaacf97aa6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FWclass-memaccess-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FWclass-memaccess-2.C?ref=4b377e01ce6b56e0ec0276596e47bfbaacf97aa6", "patch": "@@ -0,0 +1,61 @@\n+// PR c++/81169 - -Wclass-memaccess illegitimate warning related to volatile\n+// { dg-do compile }\n+// { dg-options \"-Wclass-memaccess\" }\n+\n+struct S { int x; };\n+\n+void cast_const (const S *p)\n+{\n+  __builtin_memset (const_cast<S*>(p), 0, sizeof *p);\n+}\n+\n+void cast_volatile (volatile S *p)\n+{\n+  __builtin_memset (const_cast<S*>(p), 0, sizeof *p);\n+}\n+\n+void cast_const_volatile (const volatile S *p)\n+{\n+  __builtin_memset (const_cast<S*>(p), 0, sizeof *p);\n+}\n+\n+void c_cast_const_volatile (const volatile S *p)\n+{\n+  __builtin_memset ((S*)p, 0, sizeof *p);\n+}\n+\n+// A C cast to void* suppresses the warning because it casts away\n+// the qualifiers from the otherwise trivial pointed-to type..\n+void c_void_cast_const_volatile (const volatile S *p)\n+{\n+  __builtin_memset ((void*)p, 0, sizeof *p);\n+}\n+\n+// Also verify that casting to char* suppresses the warning for\n+// non-trivial types.\n+\n+struct NonTrivial\n+{\n+  NonTrivial ();\n+  NonTrivial (const NonTrivial&);\n+  NonTrivial& operator= (const NonTrivial&);\n+  ~NonTrivial ();\n+};\n+\n+void cast_void (NonTrivial *p)\n+{\n+  __builtin_memset (reinterpret_cast<char*>(p), 0, sizeof *p);\n+}\n+\n+// A C cast to a character (or any trivial) type suppresses the warning.\n+void c_cast_uchar (NonTrivial *p)\n+{\n+  __builtin_memset ((unsigned char*)p, 0, sizeof *p);\n+}\n+\n+// A cast to void* does not suppress the warning.  That is (or can be)\n+// considered a feature.\n+void c_cast_void (NonTrivial *p)\n+{\n+  __builtin_memset ((void*)p, 0, sizeof *p);   // { dg-warning \"\\\\\\[-Wclass-memaccess]\" }\n+}"}]}