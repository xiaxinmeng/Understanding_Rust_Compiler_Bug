{"sha": "e00db5114228d50fece5c764a1f077e065cf8605", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAwZGI1MTE0MjI4ZDUwZmVjZTVjNzY0YTFmMDc3ZTA2NWNmODYwNQ==", "commit": {"author": {"name": "Patrick Marlier", "email": "patrick.marlier@gmail.com", "date": "2012-02-24T15:21:12Z"}, "committer": {"name": "Patrick Marlier", "email": "pmarlier@gcc.gnu.org", "date": "2012-02-24T15:21:12Z"}, "message": "re PR boehm-gc/52179 (boehm-gc incompatible with aslr on darwin11)\n\n2012-02-23  Patrick Marlier  <patrick.marlier@gmail.com>\n\t    Jack Howarth  <howarth@bromo.med.uc.edu>\n\nboehm-gc/\n\n\tPR boehm-gc/52179\n\t* include/gc_config.h.in: Undefine HAVE_PTHREAD_GET_STACKADDR_NP.\n\t* include/private/gcconfig.h (DARWIN): Define STACKBOTTOM with\n\tpthread_get_stackaddr_np when available.\n\t* configure.ac (THREADS): Check availability of pthread_get_stackaddr_np.\n\t* configure: Regenerate.\n\nlibjava/\n\n\tPR target/49461\n\t* configure.ac (SYSTEMSPEC): No longer pass -no_pie for darwin11.\n\t* configure: Regenerate.\n\n\nCo-Authored-By: Jack Howarth <howarth@bromo.med.uc.edu>\n\nFrom-SVN: r184555", "tree": {"sha": "5fa07983ce5f834e7151dcc8faecefda82f3881c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fa07983ce5f834e7151dcc8faecefda82f3881c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e00db5114228d50fece5c764a1f077e065cf8605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e00db5114228d50fece5c764a1f077e065cf8605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e00db5114228d50fece5c764a1f077e065cf8605", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e00db5114228d50fece5c764a1f077e065cf8605/comments", "author": {"login": "patrickmarlier", "id": 3294919, "node_id": "MDQ6VXNlcjMyOTQ5MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3294919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrickmarlier", "html_url": "https://github.com/patrickmarlier", "followers_url": "https://api.github.com/users/patrickmarlier/followers", "following_url": "https://api.github.com/users/patrickmarlier/following{/other_user}", "gists_url": "https://api.github.com/users/patrickmarlier/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrickmarlier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrickmarlier/subscriptions", "organizations_url": "https://api.github.com/users/patrickmarlier/orgs", "repos_url": "https://api.github.com/users/patrickmarlier/repos", "events_url": "https://api.github.com/users/patrickmarlier/events{/privacy}", "received_events_url": "https://api.github.com/users/patrickmarlier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9af73fca3e2e71b67880731f9be888e0445e9de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9af73fca3e2e71b67880731f9be888e0445e9de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9af73fca3e2e71b67880731f9be888e0445e9de"}], "stats": {"total": 58, "additions": 44, "deletions": 14}, "files": [{"sha": "173ad8033e461f3de03486fb74abad4bf629ab6f", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00db5114228d50fece5c764a1f077e065cf8605/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00db5114228d50fece5c764a1f077e065cf8605/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=e00db5114228d50fece5c764a1f077e065cf8605", "patch": "@@ -1,3 +1,13 @@\n+2012-02-23  Patrick Marlier  <patrick.marlier@gmail.com>\n+\t    Jack Howarth  <howarth@bromo.med.uc.edu>\n+\n+\tPR boehm-gc/52179\n+\t* include/gc_config.h.in: Undefine HAVE_PTHREAD_GET_STACKADDR_NP.\n+\t* include/private/gcconfig.h (DARWIN): Define STACKBOTTOM with\n+\tpthread_get_stackaddr_np when available.\n+\t* configure.ac (THREADS): Check availability of pthread_get_stackaddr_np.\n+\t* configure: Regenerate.\n+\n 2012-02-10  Kai Tietz  <ktietz@redhat.com>\n \n \tPR boehm-gc/48514"}, {"sha": "c76ea447af501e5acc119a34509c85753ab0ca47", "filename": "boehm-gc/configure", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00db5114228d50fece5c764a1f077e065cf8605/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00db5114228d50fece5c764a1f077e065cf8605/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=e00db5114228d50fece5c764a1f077e065cf8605", "patch": "@@ -15141,6 +15141,17 @@ _ACEOF\n fi\n done\n \n+for ac_func in pthread_get_stackaddr_np\n+do :\n+  ac_fn_c_check_func \"$LINENO\" \"pthread_get_stackaddr_np\" \"ac_cv_func_pthread_get_stackaddr_np\"\n+if test \"x$ac_cv_func_pthread_get_stackaddr_np\" = x\"\"yes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_PTHREAD_GET_STACKADDR_NP 1\n+_ACEOF\n+\n+fi\n+done\n+\n LIBS=\"$oldLIBS\"\n \n # Configuration of machine-dependent code"}, {"sha": "2eddc9fe7abd6b82b45c066e1a01045ba2cd3a38", "filename": "boehm-gc/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00db5114228d50fece5c764a1f077e065cf8605/boehm-gc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00db5114228d50fece5c764a1f077e065cf8605/boehm-gc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.ac?ref=e00db5114228d50fece5c764a1f077e065cf8605", "patch": "@@ -380,6 +380,7 @@ esac\n oldLIBS=\"$LIBS\"\n LIBS=\"$LIBS $THREADLIBS\"\n AC_CHECK_FUNCS([pthread_getattr_np])\n+AC_CHECK_FUNCS([pthread_get_stackaddr_np])\n LIBS=\"$oldLIBS\"\n \n # Configuration of machine-dependent code"}, {"sha": "6bdd807bcfaedababec86e3ba1a5d372967b5d93", "filename": "boehm-gc/include/gc_config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00db5114228d50fece5c764a1f077e065cf8605/boehm-gc%2Finclude%2Fgc_config.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00db5114228d50fece5c764a1f077e065cf8605/boehm-gc%2Finclude%2Fgc_config.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fgc_config.h.in?ref=e00db5114228d50fece5c764a1f077e065cf8605", "patch": "@@ -87,6 +87,9 @@\n /* Define to 1 if you have the `pthread_getattr_np' function. */\n #undef HAVE_PTHREAD_GETATTR_NP\n \n+/* Define to 1 if you have the `pthread_get_stackaddr_np_np' function. */\n+#undef HAVE_PTHREAD_GET_STACKADDR_NP\n+\n /* Define to 1 if you have the <stdint.h> header file. */\n #undef HAVE_STDINT_H\n "}, {"sha": "fb09cf73cc0df670b0402006be1ad0049b408732", "filename": "boehm-gc/include/private/gcconfig.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00db5114228d50fece5c764a1f077e065cf8605/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00db5114228d50fece5c764a1f077e065cf8605/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h?ref=e00db5114228d50fece5c764a1f077e065cf8605", "patch": "@@ -1331,7 +1331,11 @@\n \t These aren't used when dyld support is enabled (it is by default) */\n #     define DATASTART ((ptr_t) get_etext())\n #     define DATAEND\t((ptr_t) get_end())\n-#     define STACKBOTTOM ((ptr_t) 0xc0000000)\n+#     ifdef HAVE_PTHREAD_GET_STACKADDR_NP\n+#       define STACKBOTTOM (ptr_t)pthread_get_stackaddr_np(pthread_self())\n+#     else\n+#       define STACKBOTTOM ((ptr_t) 0xc0000000)\n+#     endif\n #     define USE_MMAP\n #     define USE_MMAP_ANON\n #     define USE_ASM_PUSH_REGS\n@@ -2014,7 +2018,11 @@\n \t These aren't used when dyld support is enabled (it is by default) */\n #     define DATASTART ((ptr_t) get_etext())\n #     define DATAEND\t((ptr_t) get_end())\n-#     define STACKBOTTOM ((ptr_t) 0x7fff5fc00000)\n+#     ifdef HAVE_PTHREAD_GET_STACKADDR_NP\n+#       define STACKBOTTOM (ptr_t)pthread_get_stackaddr_np(pthread_self())\n+#     else\n+#       define STACKBOTTOM ((ptr_t) 0x7fff5fc00000)\n+#     endif\n #     define USE_MMAP\n #     define USE_MMAP_ANON\n #     ifdef GC_DARWIN_THREADS"}, {"sha": "aa456129c7257e739664689f444cb632ae2d692e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00db5114228d50fece5c764a1f077e065cf8605/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00db5114228d50fece5c764a1f077e065cf8605/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e00db5114228d50fece5c764a1f077e065cf8605", "patch": "@@ -1,3 +1,10 @@\n+2012-02-23  Patrick Marlier  <patrick.marlier@gmail.com>\n+\t    Jack Howarth  <howarth@bromo.med.uc.edu>\n+\n+\tPR target/49461\n+\t* configure.ac (SYSTEMSPEC): No longer pass -no_pie for darwin11.\n+\t* configure: Regenerate.\n+\n 2012-02-02  Kai Tietz  <ktietz@redhat.com>\n \n \tPR libjava/48512"}, {"sha": "8ea1aec5ee0ee3e77bf981b16b3ecc6c24686545", "filename": "libjava/configure", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00db5114228d50fece5c764a1f077e065cf8605/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00db5114228d50fece5c764a1f077e065cf8605/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=e00db5114228d50fece5c764a1f077e065cf8605", "patch": "@@ -19788,14 +19788,9 @@ case \"${host}\" in\n         SYSTEMSPEC=\"-lunicows $SYSTEMSPEC\"\n       fi\n     ;;\n-    *-*-darwin9*)\n+    *-*-darwin[912]*)\n       SYSTEMSPEC=\"%{!Zdynamiclib:%{!Zbundle:-allow_stack_execute}}\"\n     ;;\n-    *-*-darwin[12]*)\n-      # Something is incompatible with pie, would be nice to fix it and\n-      # remove -no_pie.  PR49461\n-      SYSTEMSPEC=\"-no_pie %{!Zdynamiclib:%{!Zbundle:-allow_stack_execute}}\"\n-    ;;\n     *)\n       SYSTEMSPEC=\n     ;;"}, {"sha": "ce428cac2576e9522a141f83d55ffb010e71145d", "filename": "libjava/configure.ac", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00db5114228d50fece5c764a1f077e065cf8605/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00db5114228d50fece5c764a1f077e065cf8605/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=e00db5114228d50fece5c764a1f077e065cf8605", "patch": "@@ -898,14 +898,9 @@ case \"${host}\" in\n         SYSTEMSPEC=\"-lunicows $SYSTEMSPEC\"\n       fi\n     ;;\n-    *-*-darwin9*)\n+    *-*-darwin[[912]]*)\n       SYSTEMSPEC=\"%{!Zdynamiclib:%{!Zbundle:-allow_stack_execute}}\"\n     ;;\n-    *-*-darwin[[12]]*)\n-      # Something is incompatible with pie, would be nice to fix it and\n-      # remove -no_pie.  PR49461\n-      SYSTEMSPEC=\"-no_pie %{!Zdynamiclib:%{!Zbundle:-allow_stack_execute}}\"\n-    ;;\n     *)\n       SYSTEMSPEC=\n     ;;"}]}