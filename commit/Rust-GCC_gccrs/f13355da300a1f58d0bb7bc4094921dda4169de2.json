{"sha": "f13355da300a1f58d0bb7bc4094921dda4169de2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjEzMzU1ZGEzMDBhMWY1OGQwYmI3YmM0MDk0OTIxZGRhNDE2OWRlMg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-04-04T08:11:46Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-04-04T08:11:46Z"}, "message": "re PR middle-end/70307 (ICE: in gimplify_expr, at gimplify.c:10915 on valid code)\n\n\tPR c/70307\n\t* c-fold.c (c_fully_fold_internal): Handle VEC_COND_EXPR.\n\n\t* gcc.dg/torture/pr70307.c: New test.\n\nFrom-SVN: r234706", "tree": {"sha": "7935347ce5b6c092f866678ad2ba3afec0644e24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7935347ce5b6c092f866678ad2ba3afec0644e24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f13355da300a1f58d0bb7bc4094921dda4169de2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f13355da300a1f58d0bb7bc4094921dda4169de2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f13355da300a1f58d0bb7bc4094921dda4169de2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f13355da300a1f58d0bb7bc4094921dda4169de2/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dbc3f125582d235892b41db38f7aa3647ee3378b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbc3f125582d235892b41db38f7aa3647ee3378b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbc3f125582d235892b41db38f7aa3647ee3378b"}], "stats": {"total": 92, "additions": 92, "deletions": 0}, "files": [{"sha": "56e0b4d8863b6c172906db5213148f154a3b29db", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f13355da300a1f58d0bb7bc4094921dda4169de2/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f13355da300a1f58d0bb7bc4094921dda4169de2/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=f13355da300a1f58d0bb7bc4094921dda4169de2", "patch": "@@ -1,3 +1,8 @@\n+2016-04-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/70307\n+\t* c-fold.c (c_fully_fold_internal): Handle VEC_COND_EXPR.\n+\n 2016-03-31  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/70297"}, {"sha": "6c82f242bf142c050ebcff8210126c5a930d94b5", "filename": "gcc/c/c-fold.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f13355da300a1f58d0bb7bc4094921dda4169de2/gcc%2Fc%2Fc-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f13355da300a1f58d0bb7bc4094921dda4169de2/gcc%2Fc%2Fc-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-fold.c?ref=f13355da300a1f58d0bb7bc4094921dda4169de2", "patch": "@@ -528,6 +528,26 @@ c_fully_fold_internal (tree expr, bool in_init, bool *maybe_const_operands,\n \t*maybe_const_itself &= op2_const_self;\n       goto out;\n \n+    case VEC_COND_EXPR:\n+      orig_op0 = op0 = TREE_OPERAND (expr, 0);\n+      orig_op1 = op1 = TREE_OPERAND (expr, 1);\n+      orig_op2 = op2 = TREE_OPERAND (expr, 2);\n+      op0 = c_fully_fold_internal (op0, in_init, maybe_const_operands,\n+\t\t\t\t   maybe_const_itself, for_int_const);\n+      STRIP_TYPE_NOPS (op0);\n+      op1 = c_fully_fold_internal (op1, in_init, maybe_const_operands,\n+\t\t\t\t   maybe_const_itself, for_int_const);\n+      STRIP_TYPE_NOPS (op1);\n+      op2 = c_fully_fold_internal (op2, in_init, maybe_const_operands,\n+\t\t\t\t   maybe_const_itself, for_int_const);\n+      STRIP_TYPE_NOPS (op2);\n+\n+      if (op0 != orig_op0 || op1 != orig_op1 || op2 != orig_op2)\n+\tret = fold_build3_loc (loc, code, TREE_TYPE (expr), op0, op1, op2);\n+      else\n+\tret = fold (expr);\n+      goto out;\n+\n     case EXCESS_PRECISION_EXPR:\n       /* Each case where an operand with excess precision may be\n \t encountered must remove the EXCESS_PRECISION_EXPR around"}, {"sha": "a8bd7110827845abe8de06121e1ed67bf559b501", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f13355da300a1f58d0bb7bc4094921dda4169de2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f13355da300a1f58d0bb7bc4094921dda4169de2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f13355da300a1f58d0bb7bc4094921dda4169de2", "patch": "@@ -1,3 +1,8 @@\n+2016-04-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/70307\n+\t* gcc.dg/torture/pr70307.c: New test.\n+\n 2016-04-03  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/70416"}, {"sha": "d47c4b6dc7d6801684969919b616277bf20185b8", "filename": "gcc/testsuite/gcc.dg/torture/pr70307.c", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f13355da300a1f58d0bb7bc4094921dda4169de2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70307.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f13355da300a1f58d0bb7bc4094921dda4169de2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70307.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70307.c?ref=f13355da300a1f58d0bb7bc4094921dda4169de2", "patch": "@@ -0,0 +1,62 @@\n+/* PR c/70307 */\n+/* { dg-do compile } */\n+\n+typedef int v4si __attribute__ ((vector_size (16)));\n+\n+v4si foo (v4si);\n+\n+v4si\n+fn1 (int i)\n+{\n+  return i <= (v4si){(0, 0)};\n+}\n+\n+v4si\n+fn2 (int i)\n+{\n+  v4si r;\n+  r = i <= (v4si){(0, 0)};\n+  return r;\n+}\n+\n+v4si\n+fn3 (int i)\n+{\n+  return foo (i <= (v4si){(0, 0)});\n+}\n+\n+v4si\n+fn4 (int i)\n+{\n+  struct S { v4si v; };\n+  struct S s = { .v = i <= (v4si){(0, 0)} };\n+  return s.v;\n+}\n+\n+v4si\n+fn5 (int i)\n+{\n+  return (v4si){(1, i++)} == (v4si){(0, 0)};\n+}\n+\n+v4si\n+fn6 (int i)\n+{\n+  v4si r;\n+  r = (v4si){(1, i++)} == (v4si){(0, 0)};\n+  return r;\n+}\n+\n+v4si\n+fn7 (int i)\n+{\n+  return foo ((v4si){(1, i++)} == (v4si){(0, 0)});\n+}\n+\n+v4si\n+fn8 (int i)\n+{\n+  struct S { v4si v; };\n+  struct S s = { .v = (v4si){(1, i++)} == (v4si){(0, 0)} };\n+  return s.v;\n+}"}]}