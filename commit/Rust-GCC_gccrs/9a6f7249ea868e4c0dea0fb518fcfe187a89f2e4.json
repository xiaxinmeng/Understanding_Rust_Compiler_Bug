{"sha": "9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE2ZjcyNDllYTg2OGU0YzBkZWEwZmI1MThmY2ZlMTg3YTg5ZjJlNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-11-03T23:02:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-11-03T23:02:41Z"}, "message": "re PR c++/36959 (C++ front-end causing a static inline function to be emitted)\n\n\tPR c++/36959\n\t* decl2.c (cxx_callgraph_analyze_expr): Don't reference a function\n\tjust because a static variable in it is needed unless -frepo.\n\nFrom-SVN: r153878", "tree": {"sha": "d6abc525c90e2aebbf0386943c1919f9485ece55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6abc525c90e2aebbf0386943c1919f9485ece55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d809253a56a642cdeb31f3f12e420f092cee0d07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d809253a56a642cdeb31f3f12e420f092cee0d07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d809253a56a642cdeb31f3f12e420f092cee0d07"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "2ef626d05c8e7a03990b8714e252d3ba7461f518", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4", "patch": "@@ -1,5 +1,9 @@\n 2009-11-03  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/36959\n+\t* decl2.c (cxx_callgraph_analyze_expr): Don't reference a function\n+\tjust because a static variable in it is needed unless -frepo.\n+\n \tPR c++/41876\n \t* parser.c (cp_parser_type_specifier_seq): Rename is_condition to\n \tis_declaration."}, {"sha": "dbb9fb47a6434fc6b5f85f3527d910c0cf574339", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4", "patch": "@@ -3310,6 +3310,7 @@ cxx_callgraph_analyze_expr (tree *tp, int *walk_subtrees ATTRIBUTE_UNUSED)\n \t    mark_decl_referenced (vtbl);\n \t}\n       else if (DECL_CONTEXT (t)\n+\t       && flag_use_repository\n \t       && TREE_CODE (DECL_CONTEXT (t)) == FUNCTION_DECL)\n \t/* If we need a static variable in a function, then we\n \t   need the containing function.  */"}, {"sha": "f525db0b2662c04f215c935e17dbc5ba76c6b91b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4", "patch": "@@ -1,3 +1,8 @@\n+2009-11-03  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/36959\n+\t* g++.dg/opt/inline16.C: New.\n+\n 2009-11-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/stack_check.adb1: New test."}, {"sha": "6ee6d76d925dfbf3e8bf31df6a1649d54e477e60", "filename": "gcc/testsuite/g++.dg/opt/inline16.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline16.C?ref=9a6f7249ea868e4c0dea0fb518fcfe187a89f2e4", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/36959\n+// We shouldn't have to emit fromSlotB just because we need shuf_BZZZ.\n+// { dg-options -O }\n+// { dg-final { scan-assembler-not \"_ZL9fromSlotBv\" } }\n+\n+static inline int *fromSlotB(void)\n+{\n+  static int shuf_BZZZ = 1;\n+  return &shuf_BZZZ;\n+}\n+\n+int *p;\n+\n+int main(void)\n+{\n+  p = fromSlotB();\n+  return (*p != 1);\n+}\n+"}]}