{"sha": "cde9b87dfbe512818bd2aafa35a5004d36370a8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RlOWI4N2RmYmU1MTI4MThiZDJhYWZhMzVhNTAwNGQzNjM3MGE4ZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2000-05-05T16:13:46Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-05-05T16:13:46Z"}, "message": "predict.c: Remove May 4 change.\n\n        * predict.c: Remove May 4 change.\n        * bb-reorder.c (make_reorder_chain): Do not perform block movement\n        if we have predicted the branch at 50-50 probability.\n\nFrom-SVN: r33707", "tree": {"sha": "54226ad3bfaa27e1f18cff2aab9adcf8c3740c38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54226ad3bfaa27e1f18cff2aab9adcf8c3740c38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cde9b87dfbe512818bd2aafa35a5004d36370a8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cde9b87dfbe512818bd2aafa35a5004d36370a8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cde9b87dfbe512818bd2aafa35a5004d36370a8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cde9b87dfbe512818bd2aafa35a5004d36370a8e/comments", "author": null, "committer": null, "parents": [{"sha": "327f248083cb6869adb99e7ca2bbab62c71d090c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/327f248083cb6869adb99e7ca2bbab62c71d090c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/327f248083cb6869adb99e7ca2bbab62c71d090c"}], "stats": {"total": 21, "additions": 7, "deletions": 14}, "files": [{"sha": "700601770a18cb3014ebebec984edfcf5286cab5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde9b87dfbe512818bd2aafa35a5004d36370a8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde9b87dfbe512818bd2aafa35a5004d36370a8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cde9b87dfbe512818bd2aafa35a5004d36370a8e", "patch": "@@ -1,3 +1,9 @@\n+Fri May  5 10:11:41 2000  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* predict.c: Remove May 4 change.\n+\t* bb-reorder.c (make_reorder_chain): Do not perform block movement\n+\tif we have predicted the branch at 50-50 probability.\n+\n 2000-05-05  Richard Henderson  <rth@cygnus.com>\n \n \t* flow.c (init_propagate_block_info): Fix merge error"}, {"sha": "c0c808a7636a60090b3c205f598f4a1a48c94924", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde9b87dfbe512818bd2aafa35a5004d36370a8e/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde9b87dfbe512818bd2aafa35a5004d36370a8e/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=cde9b87dfbe512818bd2aafa35a5004d36370a8e", "patch": "@@ -478,7 +478,7 @@ make_reorder_chain (bb)\n       else\n \tprobability = 0;\n \n-      if (probability >= REG_BR_PROB_BASE / 2)\n+      if (probability > REG_BR_PROB_BASE / 2)\n \te = bb->succ->succ_next;\n     }\n "}, {"sha": "b957e5f6050fb59408acac70c35ba13d62340a1e", "filename": "gcc/predict.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde9b87dfbe512818bd2aafa35a5004d36370a8e/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde9b87dfbe512818bd2aafa35a5004d36370a8e/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=cde9b87dfbe512818bd2aafa35a5004d36370a8e", "patch": "@@ -202,19 +202,6 @@ estimate_probability (loops_info)\n \t  break;\n \t}\n \n-      /* If one of the blocks already directly follows the current\n-\t block, then predict it as the taken path.  This reduces\n-\t random block movement.  */\n-      for (e = BASIC_BLOCK (i)->succ; e; e = e->succ_next)\n-        if (e->dest->index == i + 1)\n-          {\n-            if (e->flags & EDGE_FALLTHRU)\n-              prob = 0;\n-            else\n-              prob = REG_BR_PROB_BASE;\n-            goto emitnote;\n-          }\n-\n       /* If we havn't chosen something by now, predict 50-50.  */\n       prob = REG_BR_PROB_BASE / 2;\n "}]}