{"sha": "51a5c0c2b26ff09ceba355b45dedde5bac1b0560", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFhNWMwYzJiMjZmZjA5Y2ViYTM1NWI0NWRlZGRlNWJhYzFiMDU2MA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-08-05T14:51:37Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-08-05T14:51:37Z"}, "message": "re PR lto/57602 (Runfails for several C/C++ benchmarks from spec2000 for i686 with -flto after r199422)\n\n\tPR lto/57602\n\t* cgraph.c (verify_cgraph_node): Accept local flags from other partitions.\n\t* ipa.c (symtab_remove_unreachable_nodes): Do not clear local flag.\n\t(function_and_variable_visibility): Likewise.\n\t* trans-mem.c (ipa_tm_create_version): TM versions are not local.\n\nFrom-SVN: r201492", "tree": {"sha": "55b33a90f0a48abd0d1d39a094f6327004fbb3b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55b33a90f0a48abd0d1d39a094f6327004fbb3b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51a5c0c2b26ff09ceba355b45dedde5bac1b0560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51a5c0c2b26ff09ceba355b45dedde5bac1b0560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51a5c0c2b26ff09ceba355b45dedde5bac1b0560", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51a5c0c2b26ff09ceba355b45dedde5bac1b0560/comments", "author": null, "committer": null, "parents": [{"sha": "65f0a1207d8127d07a33089379bfd962f600bd19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f0a1207d8127d07a33089379bfd962f600bd19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65f0a1207d8127d07a33089379bfd962f600bd19"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "a40d4a0afbf8140c4a4108b648a97cc2a05cfe43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a5c0c2b26ff09ceba355b45dedde5bac1b0560/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a5c0c2b26ff09ceba355b45dedde5bac1b0560/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51a5c0c2b26ff09ceba355b45dedde5bac1b0560", "patch": "@@ -1,3 +1,11 @@\n+2013-08-05  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR lto/57602\n+\t* cgraph.c (verify_cgraph_node): Accept local flags from other partitions.\n+\t* ipa.c (symtab_remove_unreachable_nodes): Do not clear local flag.\n+\t(function_and_variable_visibility): Likewise.\n+\t* trans-mem.c (ipa_tm_create_version): TM versions are not local.\n+\n 2013-08-05  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* graph.c (init_graph_slim_pretty_print): Remove."}, {"sha": "a90e1a73ff119fbe245d7917db09f8dca20af3d3", "filename": "gcc/cgraph.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a5c0c2b26ff09ceba355b45dedde5bac1b0560/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a5c0c2b26ff09ceba355b45dedde5bac1b0560/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=51a5c0c2b26ff09ceba355b45dedde5bac1b0560", "patch": "@@ -2363,7 +2363,7 @@ verify_cgraph_node (struct cgraph_node *node)\n       error (\"inline clone in same comdat group list\");\n       error_found = true;\n     }\n-  if (!node->symbol.definition && node->local.local)\n+  if (!node->symbol.definition && !node->symbol.in_other_partition && node->local.local)\n     {\n       error (\"local symbols must be defined\");\n       error_found = true;"}, {"sha": "aa6485c87a6eb71addfc8cae85b8da0e0e585c36", "filename": "gcc/ipa.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a5c0c2b26ff09ceba355b45dedde5bac1b0560/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a5c0c2b26ff09ceba355b45dedde5bac1b0560/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=51a5c0c2b26ff09ceba355b45dedde5bac1b0560", "patch": "@@ -376,7 +376,15 @@ symtab_remove_unreachable_nodes (bool before_inlining_p, FILE *file)\n \t    {\n \t      if (file)\n \t\tfprintf (file, \" %s\", cgraph_node_name (node));\n-\t      cgraph_reset_node (node);\n+\t      node->symbol.analyzed = false;\n+\t      node->symbol.definition = false;\n+\t      node->symbol.cpp_implicit_alias = false;\n+\t      node->symbol.alias = false;\n+\t      node->symbol.weakref = false;\n+\t      if (!node->symbol.in_other_partition)\n+\t\tnode->local.local = false;\n+\t      cgraph_node_remove_callees (node);\n+\t      ipa_remove_all_references (&node->symbol.ref_list);\n \t      changed = true;\n \t    }\n \t}\n@@ -888,7 +896,7 @@ function_and_variable_visibility (bool whole_program)\n     }\n   FOR_EACH_DEFINED_FUNCTION (node)\n     {\n-      node->local.local = cgraph_local_node_p (node);\n+      node->local.local |= cgraph_local_node_p (node);\n \n       /* If we know that function can not be overwritten by a different semantics\n \t and moreover its section can not be discarded, replace all direct calls"}, {"sha": "5b07e7185bf5c42dedbbafdb4fac8784d3dc5f3a", "filename": "gcc/trans-mem.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a5c0c2b26ff09ceba355b45dedde5bac1b0560/gcc%2Ftrans-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a5c0c2b26ff09ceba355b45dedde5bac1b0560/gcc%2Ftrans-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.c?ref=51a5c0c2b26ff09ceba355b45dedde5bac1b0560", "patch": "@@ -4774,6 +4774,7 @@ ipa_tm_create_version (struct cgraph_node *old_node)\n     DECL_COMDAT_GROUP (new_decl) = tm_mangle (DECL_COMDAT_GROUP (old_decl));\n \n   new_node = cgraph_copy_node_for_versioning (old_node, new_decl, vNULL, NULL);\n+  new_node->local.local = false;\n   new_node->symbol.externally_visible = old_node->symbol.externally_visible;\n   new_node->lowered = true;\n   new_node->tm_clone = 1;"}]}