{"sha": "84f414bc1f23881578336f4758a00538711f1bbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRmNDE0YmMxZjIzODgxNTc4MzM2ZjQ3NThhMDA1Mzg3MTFmMWJiYw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-07-23T16:44:34Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-07-23T16:44:34Z"}, "message": "Fix -fpic problems\n\nFrom-SVN: r12547", "tree": {"sha": "06d67b453b33304c2cdae5088e9d4916c58489de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06d67b453b33304c2cdae5088e9d4916c58489de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84f414bc1f23881578336f4758a00538711f1bbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f414bc1f23881578336f4758a00538711f1bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84f414bc1f23881578336f4758a00538711f1bbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f414bc1f23881578336f4758a00538711f1bbc/comments", "author": null, "committer": null, "parents": [{"sha": "b6d1177adfd87f612010bdadd0983a14991d265d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d1177adfd87f612010bdadd0983a14991d265d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d1177adfd87f612010bdadd0983a14991d265d"}], "stats": {"total": 100, "additions": 47, "deletions": 53}, "files": [{"sha": "d1920a0e364f5625395c9da6c05e0cc65ac34fbc", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f414bc1f23881578336f4758a00538711f1bbc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f414bc1f23881578336f4758a00538711f1bbc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=84f414bc1f23881578336f4758a00538711f1bbc", "patch": "@@ -2118,7 +2118,7 @@ rs6000_replace_regno (x, from, reg)\n       if (REGNO (x) == from)\n \t{\n \t  if (! *reg)\n-\t    *reg = gen_reg_rtx (Pmode);\n+\t    *reg = pic_offset_table_rtx = gen_reg_rtx (Pmode);\n \n \t  return *reg;\n \t}"}, {"sha": "7f9d6a90e21b3a1c4d79aed041a0acca1c60a975", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 2, "deletions": 38, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f414bc1f23881578336f4758a00538711f1bbc/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f414bc1f23881578336f4758a00538711f1bbc/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=84f414bc1f23881578336f4758a00538711f1bbc", "patch": "@@ -5037,52 +5037,16 @@\n   \"\n {\n   operands[2] = rs6000_got_register (operands[1]);\n-  if (flag_pic > 1)\n-    {\n-      emit_insn (gen_movsi_got_large (operands[0], operands[1], operands[2]));\n-      DONE;\n-    }\n }\")\n \n-(define_insn \"*movsi_got_internal1\"\n+(define_insn \"*movsi_got_internal\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(unspec [(match_operand:SI 1 \"got_operand\" \"\")\n \t\t (match_operand:SI 2 \"register_operand\" \"b\")] 8))]\n   \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic == 1\"\n   \"{l|lwz} %0,%a1@got(%2)\"\n   [(set_attr \"type\" \"load\")])\n \n-(define_expand \"movsi_got_large\"\n-  [(set (match_dup 3)\n-\t(unspec [(match_operand:SI 1 \"got_operand\" \"\")] 9))\n-   (set (match_dup 3)\n-\t(unspec [(match_dup 1)\n-\t\t (match_dup 3)] 10))\n-   (set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(mem:SI (plus:SI (match_dup 3)\n-\t\t\t (match_operand:SI 2 \"register_operand\" \"\"))))]\n-  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic > 1\"\n-  \"\n-{\n-  if (reload_completed || reload_in_progress)\n-    abort ();\n-\n-  operands[3] = gen_reg_rtx (SImode);\n-}\")\n-\n-(define_insn \"*movsi_got_internal2_high\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=b\")\n-\t(unspec [(match_operand:SI 1 \"got_operand\" \"\")] 9))]\n-  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic > 1\"\n-  \"{cau|addis} %0,0,%1@got@ha\")\n-\n-(define_insn \"*movsi_got_internal2_losum\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec [(match_operand:SI 1 \"got_operand\" \"\")\n-\t\t (match_operand:SI 2 \"register_operand\" \"b\")] 10))]\n-  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic > 1\"\n-  \"{cal %0,%a1@got@l(%2)|addi %0,%2,%a1@got@l}\")\n-\n ;; For SI, we special-case integers that can't be loaded in one insn.  We\n ;; do the load 16-bits at a time.  We could do this by loading from memory,\n ;; and this is even supposed to be faster, but it is simpler not to get\n@@ -5111,7 +5075,7 @@\n     }\n \n   if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n-      && flag_pic && got_operand (operands[1], SImode))\n+      && flag_pic == 1 && got_operand (operands[1], SImode))\n     {\n       emit_insn (gen_movsi_got (operands[0], operands[1]));\n       DONE;"}, {"sha": "2c4fb7082d0fdf08daaeceb9feb50c0570a2edf9", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 34, "deletions": 5, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f414bc1f23881578336f4758a00538711f1bbc/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f414bc1f23881578336f4758a00538711f1bbc/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=84f414bc1f23881578336f4758a00538711f1bbc", "patch": "@@ -185,25 +185,46 @@ do {\t\t\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n \terror (\"Bad value for -msdata=%s\", rs6000_sdata_name);\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n+  else if (TARGET_SDATA && TARGET_EABI)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rs6000_sdata = SDATA_EABI;\t\t\t\t\t\\\n+      rs6000_sdata_name = \"eabi\";\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n   else if (TARGET_SDATA)\t\t\t\t\t\t\\\n-    rs6000_sdata = (TARGET_EABI) ? SDATA_EABI : SDATA_SYSV;\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rs6000_sdata = SDATA_SYSV;\t\t\t\t\t\\\n+      rs6000_sdata_name = \"sysv\";\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n   else if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_sdata = SDATA_DATA;\t\t\t\t\t\\\n+      rs6000_sdata_name = \"data\";\t\t\t\t\t\\\n       target_flags |= MASK_SDATA;\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n-    rs6000_sdata = SDATA_NONE;\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rs6000_sdata = SDATA_NONE;\t\t\t\t\t\\\n+      rs6000_sdata_name = \"none\";\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   if (TARGET_RELOCATABLE &&\t\t\t\t\t\t\\\n       (rs6000_sdata == SDATA_EABI || rs6000_sdata == SDATA_SYSV))\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_sdata = SDATA_DATA;\t\t\t\t\t\\\n-      error (\"-mrelocatable and -msdata are incompatible.\");\t\t\\\n+      error (\"-mrelocatable and -msdata=%s are incompatible.\",\t\t\\\n+\t     rs6000_sdata_name);\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_SDATA && DEFAULT_ABI != ABI_V4\t\t\t\t\\\n-      && DEFAULT_ABI != ABI_SOLARIS)\t\t\t\t\t\\\n+  else if (flag_pic &&\t\t\t\t\t\t\t\\\n+\t   (rs6000_sdata == SDATA_EABI || rs6000_sdata == SDATA_SYSV))\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rs6000_sdata = SDATA_DATA;\t\t\t\t\t\\\n+      error (\"-f%s and -msdata=%s are incompatible.\",\t\t\t\\\n+\t     (flag_pic > 1) ? \"PIC\" : \"pic\",\t\t\t\t\\\n+\t     rs6000_sdata_name);\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_SDATA && DEFAULT_ABI != ABI_V4 && DEFAULT_ABI != ABI_SOLARIS) \\\n     {\t\t\t\t\t\t\t\t\t\\\n       target_flags &= ~MASK_SDATA;\t\t\t\t\t\\\n       error (\"-msdata and -mcall-%s are incompatible.\", rs6000_abi_name); \\\n@@ -234,6 +255,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n       target_flags |= MASK_LITTLE_ENDIAN;\t\t\t\t\\\n       error (\"-mcall-nt must be little endian\");\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  /* Treat -fPIC the same as -mrelocatable */\t\t\t\t\\\n+  if (flag_pic > 1)\t\t\t\t\t\t\t\\\n+    target_flags |= MASK_RELOCATABLE;\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  else if (TARGET_RELOCATABLE)\t\t\t\t\t\t\\\n+    flag_pic = 2;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n /* Default ABI to compile code for */"}, {"sha": "cea52c06d9a7e5d63dfc556f8ad5b0194ab21b5a", "filename": "gcc/config/rs6000/t-ppcgas", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f414bc1f23881578336f4758a00538711f1bbc/gcc%2Fconfig%2Frs6000%2Ft-ppcgas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f414bc1f23881578336f4758a00538711f1bbc/gcc%2Fconfig%2Frs6000%2Ft-ppcgas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppcgas?ref=84f414bc1f23881578336f4758a00538711f1bbc", "patch": "@@ -24,29 +24,30 @@ eabi-ctors.c: $(srcdir)/config/rs6000/eabi-ctors.c\n # Build libgcc.a with different options.\n \n MULTILIB_OPTIONS\t= msoft-float \\\n-\t\t\t  mrelocatable \\\n+\t\t\t  mrelocatable-lib \\\n \t\t\t  mlittle/mbig \\\n-\t\t\t  mcall-sysv-noeabi/mcall-sysv-eabi/mcall-aix/mcall-solaris\n+\t\t\t  mcall-sysv-noeabi/mcall-sysv-eabi/mcall-aix\n \n MULTILIB_DIRNAMES\t= nof \\\n \t\t\t  rel \\\n \t\t\t  le be \\\n-\t\t\t  cs ce ca sol\n+\t\t\t  cs ce ca\n \n MULTILIB_MATCHES\t= mlittle=mlittle-endian \\\n+\t\t\t  mlittle=mcall-solaris \\\n \t\t\t  mbig=mbig-endian \\\n \t\t\t  mbig=mcall-linux \\\n \t\t\t  msoft-float=mcpu?403 \\\n \t\t\t  msoft-float=mcpu?821 \\\n \t\t\t  msoft-float=mcpu?860 \\\n \t\t\t  mcall-sysv-noeabi=mcall-linux \\\n \t\t\t  mcall-sysv-eabi=meabi \\\n-\t\t\t  mcall-sysv-noeabi=mno-eabi\n-\n-MULTILIB_EXCEPTIONS\t= *mrelocatable*/*mcall-sysv-noeabi* \\\n-\t\t\t  *mrelocatable*/*mcall-solaris* \\\n-\t\t\t  *mbig*/*mcall-solaris* \\\n-\t\t\t  *mlittle*/*mcall-solaris*\n+\t\t\t  mcall-sysv-noeabi=mno-eabi \\\n+\t\t\t  mcall-sysv-noeabi=mcall-solaris \\\n+\t\t\t  mrelocatable-lib=mrelocatable \\\n+\t\t\t  mrelocatable-lib=fpic \\\n+\t\t\t  mrelocatable-lib=fPIC \\\n+\t\t\t  mrelocatable-lib=shared\n \n LIBGCC = stmp-multilib stmp-crt\n INSTALL_LIBGCC = install-multilib install-crt"}]}