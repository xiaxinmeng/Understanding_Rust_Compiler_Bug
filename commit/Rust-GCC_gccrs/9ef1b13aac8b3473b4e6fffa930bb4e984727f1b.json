{"sha": "9ef1b13aac8b3473b4e6fffa930bb4e984727f1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVmMWIxM2FhYzhiMzQ3M2I0ZTZmZmZhOTMwYmI0ZTk4NDcyN2YxYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-09-24T00:24:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-09-24T00:24:27Z"}, "message": "i386.h (MASK_ACCUMULATE_OUTGOING_ARGS_SET, [...]): Kill.\n\n        * config/i386/i386.h (MASK_ACCUMULATE_OUTGOING_ARGS_SET, MASK_MMX_SET,\n        MASK_SSE_SET, MASK_SSE2_SET, MASK_3DNOW_SET, MASK_3DNOW_A_SET): Kill.\n        (TARGET_SWITCHES): Don't reference them.\n        * config/i386/i386.c (override_options): Use target_flags_explicit\n        to examine bits set by the user.\n\nFrom-SVN: r57458", "tree": {"sha": "6a27e9d6eaab87e4accbadb2a0ba5d239393952f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a27e9d6eaab87e4accbadb2a0ba5d239393952f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ef1b13aac8b3473b4e6fffa930bb4e984727f1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef1b13aac8b3473b4e6fffa930bb4e984727f1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef1b13aac8b3473b4e6fffa930bb4e984727f1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef1b13aac8b3473b4e6fffa930bb4e984727f1b/comments", "author": null, "committer": null, "parents": [{"sha": "ca9d67482f9331203c9a14002c6e5de32ac4f78d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca9d67482f9331203c9a14002c6e5de32ac4f78d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca9d67482f9331203c9a14002c6e5de32ac4f78d"}], "stats": {"total": 67, "additions": 34, "deletions": 33}, "files": [{"sha": "48cd73e9f493ba413634604c880dd1f2b88dc371", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef1b13aac8b3473b4e6fffa930bb4e984727f1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef1b13aac8b3473b4e6fffa930bb4e984727f1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ef1b13aac8b3473b4e6fffa930bb4e984727f1b", "patch": "@@ -1,4 +1,13 @@\n+2002-09-23  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.h (MASK_ACCUMULATE_OUTGOING_ARGS_SET, MASK_MMX_SET,\n+\tMASK_SSE_SET, MASK_SSE2_SET, MASK_3DNOW_SET, MASK_3DNOW_A_SET): Kill.\n+\t(TARGET_SWITCHES): Don't reference them.\n+\t* config/i386/i386.c (override_options): Use target_flags_explicit\n+\tto examine bits set by the user.\n+\n 2002-09-23  Dale Johannesen  <dalej@apple.com>\n+\n \t* dbxout.c (dbxout_parms):  Set current_sym_code for params\n \tpassed on stack by invisible reference.\n "}, {"sha": "777721c61bc86659d97588e94faa4ffb7cbd5582", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef1b13aac8b3473b4e6fffa930bb4e984727f1b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef1b13aac8b3473b4e6fffa930bb4e984727f1b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9ef1b13aac8b3473b4e6fffa930bb4e984727f1b", "patch": "@@ -1001,19 +1001,19 @@ override_options ()\n \t/* Default cpu tuning to the architecture.  */\n \tix86_cpu = ix86_arch;\n \tif (processor_alias_table[i].flags & PTA_MMX\n-\t    && !(target_flags & MASK_MMX_SET))\n+\t    && !(target_flags_explicit & MASK_MMX))\n \t  target_flags |= MASK_MMX;\n \tif (processor_alias_table[i].flags & PTA_3DNOW\n-\t    && !(target_flags & MASK_3DNOW_SET))\n+\t    && !(target_flags_explicit & MASK_3DNOW))\n \t  target_flags |= MASK_3DNOW;\n \tif (processor_alias_table[i].flags & PTA_3DNOW_A\n-\t    && !(target_flags & MASK_3DNOW_A_SET))\n+\t    && !(target_flags_explicit & MASK_3DNOW_A))\n \t  target_flags |= MASK_3DNOW_A;\n \tif (processor_alias_table[i].flags & PTA_SSE\n-\t    && !(target_flags & MASK_SSE_SET))\n+\t    && !(target_flags_explicit & MASK_SSE))\n \t  target_flags |= MASK_SSE;\n \tif (processor_alias_table[i].flags & PTA_SSE2\n-\t    && !(target_flags & MASK_SSE2_SET))\n+\t    && !(target_flags_explicit & MASK_SSE2))\n \t  target_flags |= MASK_SSE2;\n \tif (processor_alias_table[i].flags & PTA_PREFETCH_SSE)\n \t  x86_prefetch_sse = true;\n@@ -1236,7 +1236,7 @@ override_options ()\n \ttarget_flags |= MASK_3DNOW_A;\n     }\n   if ((x86_accumulate_outgoing_args & CPUMASK)\n-      && !(target_flags & MASK_ACCUMULATE_OUTGOING_ARGS_SET)\n+      && !(target_flags_explicit & MASK_ACCUMULATE_OUTGOING_ARGS)\n       && !optimize_size)\n     target_flags |= MASK_ACCUMULATE_OUTGOING_ARGS;\n "}, {"sha": "c2d7c4324462c55b6490172bd5c879087eb2fef5", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 19, "deletions": 27, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef1b13aac8b3473b4e6fffa930bb4e984727f1b/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef1b13aac8b3473b4e6fffa930bb4e984727f1b/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=9ef1b13aac8b3473b4e6fffa930bb4e984727f1b", "patch": "@@ -105,19 +105,16 @@ extern int target_flags;\n #define MASK_INLINE_ALL_STROPS\t0x00000400\t/* Inline stringops in all cases */\n #define MASK_NO_PUSH_ARGS\t0x00000800\t/* Use push instructions */\n #define MASK_ACCUMULATE_OUTGOING_ARGS 0x00001000/* Accumulate outgoing args */\n-#define MASK_ACCUMULATE_OUTGOING_ARGS_SET 0x00002000\n-#define MASK_MMX\t\t0x00004000\t/* Support MMX regs/builtins */\n-#define MASK_MMX_SET\t\t0x00008000\n-#define MASK_SSE\t\t0x00010000\t/* Support SSE regs/builtins */\n-#define MASK_SSE_SET\t\t0x00020000\n-#define MASK_SSE2\t\t0x00040000\t/* Support SSE2 regs/builtins */\n-#define MASK_SSE2_SET\t\t0x00080000\n-#define MASK_3DNOW\t\t0x00100000\t/* Support 3Dnow builtins */\n-#define MASK_3DNOW_SET\t\t0x00200000\n-#define MASK_3DNOW_A\t\t0x00400000\t/* Support Athlon 3Dnow builtins */\n-#define MASK_3DNOW_A_SET\t0x00800000\n-#define MASK_128BIT_LONG_DOUBLE 0x01000000\t/* long double size is 128bit */\n-#define MASK_64BIT\t\t0x02000000\t/* Produce 64bit code */\n+#define MASK_MMX\t\t0x00002000\t/* Support MMX regs/builtins */\n+#define MASK_SSE\t\t0x00004000\t/* Support SSE regs/builtins */\n+#define MASK_SSE2\t\t0x00008000\t/* Support SSE2 regs/builtins */\n+#define MASK_3DNOW\t\t0x00010000\t/* Support 3Dnow builtins */\n+#define MASK_3DNOW_A\t\t0x00020000\t/* Support Athlon 3Dnow builtins */\n+#define MASK_128BIT_LONG_DOUBLE 0x00040000\t/* long double size is 128bit */\n+#define MASK_64BIT\t\t0x00080000\t/* Produce 64bit code */\n+\n+/* Unused:\t\t\t0x03f0000\t*/\n+\n /* ... overlap with subtarget options starts by 0x04000000.  */\n #define MASK_NO_RED_ZONE\t0x04000000\t/* Do not use red zone */\n \n@@ -334,30 +331,25 @@ extern int x86_prefetch_sse;\n     N_(\"Use push instructions to save outgoing arguments\") },\t\t      \\\n   { \"no-push-args\",\t\tMASK_NO_PUSH_ARGS,\t\t\t      \\\n     N_(\"Do not use push instructions to save outgoing arguments\") },\t      \\\n-  { \"accumulate-outgoing-args\",\t(MASK_ACCUMULATE_OUTGOING_ARGS\t\t      \\\n-\t\t\t\t | MASK_ACCUMULATE_OUTGOING_ARGS_SET),\t      \\\n+  { \"accumulate-outgoing-args\",\tMASK_ACCUMULATE_OUTGOING_ARGS,\t\t      \\\n     N_(\"Use push instructions to save outgoing arguments\") },\t\t      \\\n-  { \"no-accumulate-outgoing-args\",MASK_ACCUMULATE_OUTGOING_ARGS_SET,\t      \\\n+  { \"no-accumulate-outgoing-args\",-MASK_ACCUMULATE_OUTGOING_ARGS,\t      \\\n     N_(\"Do not use push instructions to save outgoing arguments\") },\t      \\\n-  { \"mmx\",\t\t\t MASK_MMX | MASK_MMX_SET,\t\t      \\\n+  { \"mmx\",\t\t\t MASK_MMX,\t\t\t\t      \\\n     N_(\"Support MMX built-in functions\") },\t\t\t\t      \\\n   { \"no-mmx\",\t\t\t -MASK_MMX,\t\t\t\t      \\\n     N_(\"Do not support MMX built-in functions\") },\t\t\t      \\\n-  { \"no-mmx\",\t\t\t MASK_MMX_SET, \"\" },\t\t\t      \\\n-  { \"3dnow\",                     MASK_3DNOW | MASK_3DNOW_SET,\t\t      \\\n+  { \"3dnow\",                     MASK_3DNOW,\t\t\t\t      \\\n     N_(\"Support 3DNow! built-in functions\") },\t\t\t\t      \\\n-  { \"no-3dnow\",                  -MASK_3DNOW, \"\" },\t\t\t      \\\n-  { \"no-3dnow\",                  MASK_3DNOW_SET,\t\t\t      \\\n+  { \"no-3dnow\",                  -MASK_3DNOW,\t\t\t\t      \\\n     N_(\"Do not support 3DNow! built-in functions\") },\t\t\t      \\\n-  { \"sse\",\t\t\t MASK_SSE | MASK_SSE_SET,\t\t      \\\n+  { \"sse\",\t\t\t MASK_SSE,\t\t\t\t      \\\n     N_(\"Support MMX and SSE built-in functions and code generation\") },\t      \\\n-  { \"no-sse\",\t\t\t -MASK_SSE, \"\" },\t \t\t      \\\n-  { \"no-sse\",\t\t\t MASK_SSE_SET,\t\t\t\t      \\\n+  { \"no-sse\",\t\t\t -MASK_SSE,\t\t\t\t      \\\n     N_(\"Do not support MMX and SSE built-in functions and code generation\") },\\\n-  { \"sse2\",\t\t\t MASK_SSE2 | MASK_SSE2_SET,\t\t      \\\n+  { \"sse2\",\t\t\t MASK_SSE2,\t\t\t\t      \\\n     N_(\"Support MMX, SSE and SSE2 built-in functions and code generation\") }, \\\n-  { \"no-sse2\",\t\t\t -MASK_SSE2, \"\" },\t\t\t      \\\n-  { \"no-sse2\",\t\t\t MASK_SSE2_SET,\t\t\t\t      \\\n+  { \"no-sse2\",\t\t\t -MASK_SSE2,\t\t\t\t      \\\n     N_(\"Do not support MMX, SSE and SSE2 built-in functions and code generation\") },    \\\n   { \"128bit-long-double\",\t MASK_128BIT_LONG_DOUBLE,\t\t      \\\n     N_(\"sizeof(long double) is 16\") },\t\t\t\t\t      \\"}]}