{"sha": "4551438c75836ee380e2bf840f2646fda23e3743", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU1MTQzOGM3NTgzNmVlMzgwZTJiZjg0MGYyNjQ2ZmRhMjNlMzc0Mw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2009-08-25T01:47:23Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2009-08-25T01:47:23Z"}, "message": "re PR libfortran/41157 (dtime not consistent in times reported)\n\n2009-08-24  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n    PR fortran/41157\n    * dtime.c (dtime_sub): Fix computing time increment.\n    * time_1.h: Add <sys/types.h> header.  Use RUSAGE_SELF macro instead\n    of a hardcoded 0.\n\nFrom-SVN: r151072", "tree": {"sha": "a9de4f2eefae9e965c3d593a680a684a0d19f20e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9de4f2eefae9e965c3d593a680a684a0d19f20e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4551438c75836ee380e2bf840f2646fda23e3743", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4551438c75836ee380e2bf840f2646fda23e3743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4551438c75836ee380e2bf840f2646fda23e3743", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4551438c75836ee380e2bf840f2646fda23e3743/comments", "author": null, "committer": null, "parents": [{"sha": "1ed659c18d4236ca31858537ec8b573c33a8c569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed659c18d4236ca31858537ec8b573c33a8c569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ed659c18d4236ca31858537ec8b573c33a8c569"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "b1494ca0c50b23d3acdbb4567cffd2c917997196", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4551438c75836ee380e2bf840f2646fda23e3743/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4551438c75836ee380e2bf840f2646fda23e3743/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=4551438c75836ee380e2bf840f2646fda23e3743", "patch": "@@ -1,3 +1,10 @@\n+2009-08-24  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/41157\n+\t* dtime.c (dtime_sub): Fix computing time increment.\n+\t* time_1.h: Add <sys/types.h> header.  Use RUSAGE_SELF macro instead\n+\tof a hardcoded 0.\n+\n 2009-08-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure.ac (AC_PREREQ): Bump to 2.64."}, {"sha": "d1eb9121ab81c383304621393c044345c06b6a24", "filename": "libgfortran/intrinsics/dtime.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4551438c75836ee380e2bf840f2646fda23e3743/libgfortran%2Fintrinsics%2Fdtime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4551438c75836ee380e2bf840f2646fda23e3743/libgfortran%2Fintrinsics%2Fdtime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fdtime.c?ref=4551438c75836ee380e2bf840f2646fda23e3743", "patch": "@@ -38,25 +38,30 @@ iexport_proto(dtime_sub);\n void\n dtime_sub (gfc_array_r4 *t, GFC_REAL_4 *result)\n {\n-  static GFC_REAL_4 tu = 0.0, ts = 0.0, tt = 0.0;\n   GFC_REAL_4 *tp;\n   long user_sec, user_usec, system_sec, system_usec;\n+  static long us = 0, uu = 0, ss = 0 , su = 0;\n+  GFC_REAL_4 tu, ts, tt;\n \n   if (((GFC_DESCRIPTOR_EXTENT(t,0))) < 2)\n     runtime_error (\"Insufficient number of elements in TARRAY.\");\n \n   __gthread_mutex_lock (&dtime_update_lock);\n   if (__time_1 (&user_sec, &user_usec, &system_sec, &system_usec) == 0)\n     {\n-      tu = (GFC_REAL_4)(user_sec + 1.e-6 * user_usec) - tu;\n-      ts = (GFC_REAL_4)(system_sec + 1.e-6 * system_usec) - ts;\n+      tu = (GFC_REAL_4) ((user_sec - us) + 1.e-6 * (user_usec - uu));\n+      ts = (GFC_REAL_4) ((system_sec - ss) + 1.e-6 * (system_usec - su));\n       tt = tu + ts;\n+      us = user_sec;\n+      uu = user_usec;\n+      ss = system_sec;\n+      su = system_usec;\n     }\n   else\n     {\n-      tu = (GFC_REAL_4)-1.0;\n-      ts = (GFC_REAL_4)-1.0;\n-      tt = (GFC_REAL_4)-1.0;\n+      tu = -1;\n+      ts = -1;\n+      tt = -1;\n     }\n \n   tp = t->data;"}, {"sha": "03e14edc414398a0a4d5a68a1948807ad328baea", "filename": "libgfortran/intrinsics/time_1.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4551438c75836ee380e2bf840f2646fda23e3743/libgfortran%2Fintrinsics%2Ftime_1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4551438c75836ee380e2bf840f2646fda23e3743/libgfortran%2Fintrinsics%2Ftime_1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ftime_1.h?ref=4551438c75836ee380e2bf840f2646fda23e3743", "patch": "@@ -51,6 +51,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #  endif\n #endif\n \n+#ifdef HAVE_SYS_TYPES_H\n+     #include <sys/types.h>\n+#endif\n+\n /* The most accurate way to get the CPU time is getrusage (). */\n #if defined (HAVE_GETRUSAGE) && defined (HAVE_SYS_RESOURCE_H)\n #  include <sys/resource.h>\n@@ -112,7 +116,7 @@ __time_1 (long *user_sec, long *user_usec, long *system_sec, long *system_usec)\n {\n #if defined (HAVE_GETRUSAGE) && defined (HAVE_SYS_RESOURCE_H)\n   struct rusage usage;\n-  getrusage (0, &usage);\n+  getrusage (RUSAGE_SELF, &usage);\n \n   *user_sec = usage.ru_utime.tv_sec;\n   *user_usec = usage.ru_utime.tv_usec;"}]}