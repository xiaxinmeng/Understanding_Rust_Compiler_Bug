{"sha": "6b1d24137789242dd580e98830689a28fc289e8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIxZDI0MTM3Nzg5MjQyZGQ1ODBlOTg4MzA2ODlhMjhmYzI4OWU4YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-19T13:10:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-19T13:10:09Z"}, "message": "[multiple changes]\n\n2017-01-19  Pierre-Marie de Rodat  <derodat@adacore.com>\n\n\t* exp_dbug.adb (Debug_Renaming_Declaration): Process underlying types.\n\tEmit GNAT encodings for object renamings involving record components\n\twhose normalized bit offset is not null.\n\t* uintp.h (UI_No_Uint): Declare.\n\n2017-01-19  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Loop_Statement): In GNATprove mode the\n\tstatements within an element iterator loop are only analyzed\n\tagter the loop is rewritten. Within a generic the analysis must\n\tbe performed in any case to complete name capture.\n\n2017-01-19  Bob Duff  <duff@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma): Check for ignored pragmas first,\n\tbefore checking for unrecognized pragmas.\n\tInitialize Pname on its declarations; that's always good style.\n\nFrom-SVN: r244630", "tree": {"sha": "0fc8f6d2af68d79cf97ab6767af3670bf4db0b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fc8f6d2af68d79cf97ab6767af3670bf4db0b4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b1d24137789242dd580e98830689a28fc289e8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b1d24137789242dd580e98830689a28fc289e8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b1d24137789242dd580e98830689a28fc289e8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b1d24137789242dd580e98830689a28fc289e8a/comments", "author": null, "committer": null, "parents": [{"sha": "104c99ef18d7f5550ef18ca443dc2e4b2ac1641a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/104c99ef18d7f5550ef18ca443dc2e4b2ac1641a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/104c99ef18d7f5550ef18ca443dc2e4b2ac1641a"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "8287640adb57eec48462cba1d401edcbb6c03800", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b1d24137789242dd580e98830689a28fc289e8a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b1d24137789242dd580e98830689a28fc289e8a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6b1d24137789242dd580e98830689a28fc289e8a", "patch": "@@ -1,3 +1,23 @@\n+2017-01-19  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* exp_dbug.adb (Debug_Renaming_Declaration): Process underlying types.\n+\tEmit GNAT encodings for object renamings involving record components\n+\twhose normalized bit offset is not null.\n+\t* uintp.h (UI_No_Uint): Declare.\n+\n+2017-01-19  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Loop_Statement): In GNATprove mode the\n+\tstatements within an element iterator loop are only analyzed\n+\tagter the loop is rewritten. Within a generic the analysis must\n+\tbe performed in any case to complete name capture.\n+\n+2017-01-19  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma): Check for ignored pragmas first,\n+\tbefore checking for unrecognized pragmas.\n+\tInitialize Pname on its declarations; that's always good style.\n+\n 2017-01-19  Claire Dross  <dross@adacore.com>\n \n \t* exp_ch7.adb (Build_Invariant_Procedure_Body): Semi-insert the"}, {"sha": "0a72320ecbbce65d824edd809a05f85d944a03ac", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b1d24137789242dd580e98830689a28fc289e8a/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b1d24137789242dd580e98830689a28fc289e8a/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=6b1d24137789242dd580e98830689a28fc289e8a", "patch": "@@ -3411,13 +3411,16 @@ package body Sem_Ch5 is\n       --  expanded).\n \n       --  In other cases in GNATprove mode then we want to analyze the loop\n-      --  body now, since no rewriting will occur.\n+      --  body now, since no rewriting will occur. Within a generic the\n+      --  GNATprove mode is irrelevant, we must analyze the generic for\n+      --  non-local name capture.\n \n       if Present (Iter)\n         and then Present (Iterator_Specification (Iter))\n       then\n          if GNATprove_Mode\n            and then Is_Iterator_Over_Array (Iterator_Specification (Iter))\n+           and then not Inside_A_Generic\n          then\n             null;\n "}, {"sha": "9d2490fb9372d34cf2aa012a4922b517a1d5c6ec", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b1d24137789242dd580e98830689a28fc289e8a/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b1d24137789242dd580e98830689a28fc289e8a/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=6b1d24137789242dd580e98830689a28fc289e8a", "patch": "@@ -3416,7 +3416,7 @@ package body Sem_Prag is\n       Loc     : constant Source_Ptr := Sloc (N);\n       Prag_Id : Pragma_Id;\n \n-      Pname : Name_Id;\n+      Pname : Name_Id := Pragma_Name (N);\n       --  Name of the source pragma, or name of the corresponding aspect for\n       --  pragmas which originate in a source aspect. In the latter case, the\n       --  name may be different from the pragma name.\n@@ -10354,9 +10354,13 @@ package body Sem_Prag is\n \n       Check_Restriction_No_Use_Of_Pragma (N);\n \n-      --  Deal with unrecognized pragma\n+      --  Ignore pragma if Ignore_Pragma applies\n \n-      Pname := Pragma_Name (N);\n+      if Get_Name_Table_Boolean3 (Pname) then\n+         return;\n+      end if;\n+\n+      --  Deal with unrecognized pragma\n \n       if not Is_Pragma_Name (Pname) then\n          if Warn_On_Unrecognized_Pragma then\n@@ -10376,12 +10380,6 @@ package body Sem_Prag is\n          return;\n       end if;\n \n-      --  Ignore pragma if Ignore_Pragma applies\n-\n-      if Get_Name_Table_Boolean3 (Pname) then\n-         return;\n-      end if;\n-\n       --  Here to start processing for recognized pragma\n \n       Prag_Id := Get_Pragma_Id (Pname);"}]}