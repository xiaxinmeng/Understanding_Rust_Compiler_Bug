{"sha": "c57801d4ac1e5c6e77ca97743d2376a0da13047f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU3ODAxZDRhYzFlNWM2ZTc3Y2E5Nzc0M2QyMzc2YTBkYTEzMDQ3Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-07-02T03:51:04Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-07-02T03:51:04Z"}, "message": "* cp-tree.h (DECL_CLASS_TEMPLATE_P): Use DECL_IMPLICIT_TYPEDEF_P.\n\nFrom-SVN: r149166", "tree": {"sha": "6b1eebdb9618782d547fd6d1ee8435b8205693d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b1eebdb9618782d547fd6d1ee8435b8205693d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c57801d4ac1e5c6e77ca97743d2376a0da13047f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c57801d4ac1e5c6e77ca97743d2376a0da13047f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c57801d4ac1e5c6e77ca97743d2376a0da13047f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c57801d4ac1e5c6e77ca97743d2376a0da13047f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62e3e13ab38d0d8fec813ebaeafb567afd9129c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62e3e13ab38d0d8fec813ebaeafb567afd9129c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62e3e13ab38d0d8fec813ebaeafb567afd9129c5"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "6325abbdf1eafe6ea0404a0d7f4db3a8c39bfb11", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c57801d4ac1e5c6e77ca97743d2376a0da13047f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c57801d4ac1e5c6e77ca97743d2376a0da13047f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c57801d4ac1e5c6e77ca97743d2376a0da13047f", "patch": "@@ -1,5 +1,7 @@\n 2009-07-01  Jason Merrill  <jason@redhat.com>\n \n+\t* cp-tree.h (DECL_CLASS_TEMPLATE_P): Use DECL_IMPLICIT_TYPEDEF_P.\n+\n \t* pt.c (register_specialization): Use duplicate_decls to merge\n \tthe argument with a previous specialization.\n \t(check_explicit_specialization): Call register_specialization to"}, {"sha": "5b3204d4051578cc3cf3f96eb8ed490e4298bee5", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c57801d4ac1e5c6e77ca97743d2376a0da13047f/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c57801d4ac1e5c6e77ca97743d2376a0da13047f/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=c57801d4ac1e5c6e77ca97743d2376a0da13047f", "patch": "@@ -3159,11 +3159,10 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n    && TREE_CODE (DECL_TEMPLATE_RESULT (NODE)) == FUNCTION_DECL)\n \n /* Nonzero for a DECL that represents a template class.  */\n-#define DECL_CLASS_TEMPLATE_P(NODE) \\\n-  (TREE_CODE (NODE) == TEMPLATE_DECL \\\n-   && !DECL_UNBOUND_CLASS_TEMPLATE_P (NODE) \\\n-   && TREE_CODE (DECL_TEMPLATE_RESULT (NODE)) == TYPE_DECL \\\n-   && !DECL_TEMPLATE_TEMPLATE_PARM_P (NODE))\n+#define DECL_CLASS_TEMPLATE_P(NODE)\t\t\t\t\\\n+  (TREE_CODE (NODE) == TEMPLATE_DECL\t\t\t\t\\\n+   && DECL_TEMPLATE_RESULT (NODE) != NULL_TREE\t\t\t\\\n+   && DECL_IMPLICIT_TYPEDEF_P (DECL_TEMPLATE_RESULT (NODE)))\n \n /* Nonzero if NODE which declares a type.  */\n #define DECL_DECLARES_TYPE_P(NODE) \\"}]}