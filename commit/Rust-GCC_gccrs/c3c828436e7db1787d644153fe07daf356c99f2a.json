{"sha": "c3c828436e7db1787d644153fe07daf356c99f2a", "node_id": "C_kwDOANBUbNoAKGMzYzgyODQzNmU3ZGIxNzg3ZDY0NDE1M2ZlMDdkYWYzNTZjOTlmMmE", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2022-11-28T16:35:24Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2023-01-25T13:36:23Z"}, "message": "arm: improve tests for vcmulq*\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/mve/intrinsics/vcmulq_f16.c: Use\n\tcheck-function-bodies instead of scan-assembler checks.  Use\n\textern \"C\" for C++ testing.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot180_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot180_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot180_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot180_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot180_x_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot180_x_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot270_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot270_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot270_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot270_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot270_x_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot270_x_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot90_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot90_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot90_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot90_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot90_x_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_rot90_x_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_x_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmulq_x_f32.c: Likewise.", "tree": {"sha": "8127d5b3868a475266ea5b246b4619fef70bf6ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8127d5b3868a475266ea5b246b4619fef70bf6ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3c828436e7db1787d644153fe07daf356c99f2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c828436e7db1787d644153fe07daf356c99f2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c828436e7db1787d644153fe07daf356c99f2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c828436e7db1787d644153fe07daf356c99f2a/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ea30b2a83c908323d73309b6f698331607eb2e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea30b2a83c908323d73309b6f698331607eb2e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea30b2a83c908323d73309b6f698331607eb2e0"}], "stats": {"total": 730, "additions": 656, "deletions": 74}, "files": [{"sha": "456370e1de1adadb2fc4de4b33d17f03f4b00caf", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_f16.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_f16.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,21 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvcmul.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #0(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t a, float16x8_t b)\n {\n   return vcmulq_f16 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvcmul.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #0(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t a, float16x8_t b)\n {\n   return vcmulq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f16\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "64db652a1a1b8aafa392bc23288dc2b0f771a57e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_f32.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_f32.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,21 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvcmul.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #0(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t a, float32x4_t b)\n {\n   return vcmulq_f32 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvcmul.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #0(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t a, float32x4_t b)\n {\n   return vcmulq (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f32\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b60f5d718f85b7baf4479bfc1cc68271381fb9f7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_m_f16.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_m_f16.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,23 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #0(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t inactive, float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_m_f16 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #0(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t inactive, float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "22157d4e58fa6f8c0cc3d0818fca60af1f59720c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_m_f32.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_m_f32.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,23 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #0(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t inactive, float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_m_f32 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #0(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t inactive, float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f01b0f3421f46211613e0e343236240cde0d8615", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot180_f16.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_f16.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,21 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvcmul.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #180(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t a, float16x8_t b)\n {\n   return vcmulq_rot180_f16 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvcmul.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #180(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t a, float16x8_t b)\n {\n   return vcmulq_rot180 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f16\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "537385c520954b546085ec6e81a59d8f84aefb6e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot180_f32.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_f32.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,21 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvcmul.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #180(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t a, float32x4_t b)\n {\n   return vcmulq_rot180_f32 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvcmul.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #180(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t a, float32x4_t b)\n {\n   return vcmulq_rot180 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f32\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "bc8692eb0430995906107fc99044cac90d401f71", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot180_m_f16.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_m_f16.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,23 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #180(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t inactive, float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_rot180_m_f16 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #180(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t inactive, float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_rot180_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d2a0b6d3f2ccb20bf3b4ff15b7edecb5386246ba", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot180_m_f32.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_m_f32.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,23 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #180(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t inactive, float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_rot180_m_f32 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #180(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t inactive, float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_rot180_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "37d7b79a75c5e8306c89881baf00539cff40feb4", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot180_x_f16.c", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_x_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_x_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_x_f16.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,22 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #180(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_rot180_x_f16 (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #180(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_rot180_x (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1e57fba4bd395644435d21f6d50d65e3b5bbef77", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot180_x_f32.c", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_x_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_x_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot180_x_f32.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,22 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #180(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_rot180_x_f32 (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #180(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_rot180_x (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "05c444af804343ebebf547ef0dca6c9353dc3a41", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot270_f16.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_f16.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,21 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvcmul.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #270(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t a, float16x8_t b)\n {\n   return vcmulq_rot270_f16 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvcmul.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #270(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t a, float16x8_t b)\n {\n   return vcmulq_rot270 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f16\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b599c9fc17191856107683a38b594d9b4737d072", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot270_f32.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_f32.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,21 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvcmul.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #270(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t a, float32x4_t b)\n {\n   return vcmulq_rot270_f32 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvcmul.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #270(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t a, float32x4_t b)\n {\n   return vcmulq_rot270 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f32\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fded8a05089acaa4aebcfb00499508c00cab6b1c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot270_m_f16.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_m_f16.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,23 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #270(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t inactive, float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_rot270_m_f16 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #270(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t inactive, float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_rot270_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "54d939eb378218c9656e09328fc741f15d5df2a7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot270_m_f32.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_m_f32.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,23 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #270(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t inactive, float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_rot270_m_f32 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #270(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t inactive, float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_rot270_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d1e58cb84bba4694ff68a02d77aaa292e5e8a25e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot270_x_f16.c", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_x_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_x_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_x_f16.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,22 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #270(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_rot270_x_f16 (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #270(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_rot270_x (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "07c781f5103efe8a4b06d5dd9b9d379e0a19d9ef", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot270_x_f32.c", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_x_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_x_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot270_x_f32.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,22 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #270(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_rot270_x_f32 (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #270(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_rot270_x (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "53b1930c045180067849d2d1126c88c84aad6432", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot90_f16.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_f16.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,21 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvcmul.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #90(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t a, float16x8_t b)\n {\n   return vcmulq_rot90_f16 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvcmul.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #90(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t a, float16x8_t b)\n {\n   return vcmulq_rot90 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f16\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "147f1807c29bd6620b615ce19725e4c6d13281a5", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot90_f32.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_f32.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,21 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvcmul.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #90(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t a, float32x4_t b)\n {\n   return vcmulq_rot90_f32 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvcmul.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #90(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t a, float32x4_t b)\n {\n   return vcmulq_rot90 (a, b);\n }\n \n-/* { dg-final { scan-assembler \"vcmul.f32\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8c4b0902b09006251d1b5358086bff6bd3fb082c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot90_m_f16.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_m_f16.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,23 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #90(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t inactive, float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_rot90_m_f16 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #90(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t inactive, float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_rot90_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b3131a5e984bc4a195334ae76ae69532d0af1815", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot90_m_f32.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_m_f32.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,23 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #90(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t inactive, float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_rot90_m_f32 (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #90(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t inactive, float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_rot90_m (inactive, a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "000610367b97b4c55c0a0e24f8bae0e2fb98699a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot90_x_f16.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_x_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_x_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_x_f16.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,23 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #90(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_rot90_x_f16 (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #90(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_rot90_x (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8e31ad563c6d276c92c3aec352b6684f622c20ec", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_rot90_x_f32.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_x_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_x_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_rot90_x_f32.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,23 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #90(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_rot90_x_f32 (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #90(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_rot90_x (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b53324738f21c798c9d5cd5efaaed8543e8ab696", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_x_f16.c", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_x_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_x_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_x_f16.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,22 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #0(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_x_f16 (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f16\tq[0-9]+, q[0-9]+, q[0-9]+, #0(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t a, float16x8_t b, mve_pred16_t p)\n {\n   return vcmulq_x (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a73482a09e1ebf5ca01ac56756b7a4083a0301c7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmulq_x_f32.c", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_x_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c828436e7db1787d644153fe07daf356c99f2a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_x_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmulq_x_f32.c?ref=c3c828436e7db1787d644153fe07daf356c99f2a", "patch": "@@ -1,22 +1,49 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #0(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_x_f32 (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vcmult.f32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvcmult.f32\tq[0-9]+, q[0-9]+, q[0-9]+, #0(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t a, float32x4_t b, mve_pred16_t p)\n {\n   return vcmulq_x (a, b, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}]}