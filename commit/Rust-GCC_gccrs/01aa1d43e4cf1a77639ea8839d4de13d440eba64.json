{"sha": "01aa1d43e4cf1a77639ea8839d4de13d440eba64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFhYTFkNDNlNGNmMWE3NzYzOWVhODgzOWQ0ZGUxM2Q0NDBlYmE2NA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-01-28T17:12:08Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-01-28T17:12:08Z"}, "message": "* cse.c (fold_rtx) <PC>: Don't optimize.\n\nFrom-SVN: r94378", "tree": {"sha": "27e8ee34aca7117bcae2cc62360fbfbc5725144c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27e8ee34aca7117bcae2cc62360fbfbc5725144c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01aa1d43e4cf1a77639ea8839d4de13d440eba64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01aa1d43e4cf1a77639ea8839d4de13d440eba64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01aa1d43e4cf1a77639ea8839d4de13d440eba64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01aa1d43e4cf1a77639ea8839d4de13d440eba64/comments", "author": null, "committer": null, "parents": [{"sha": "bd16270bd8c57de83fcc827a259478be9c1967d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd16270bd8c57de83fcc827a259478be9c1967d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd16270bd8c57de83fcc827a259478be9c1967d3"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "af2c4944e27fafc09dbb2bf0698c26a8b238c10b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01aa1d43e4cf1a77639ea8839d4de13d440eba64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01aa1d43e4cf1a77639ea8839d4de13d440eba64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01aa1d43e4cf1a77639ea8839d4de13d440eba64", "patch": "@@ -1,3 +1,7 @@\n+2005-01-28  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* cse.c (fold_rtx) <PC>: Don't optimize.\n+\n 2005-01-28  Jeff Law  <law@redhat.com>\n \n \t* fold-const.c (fold, case CEIL_MOD_EXPR): Optimize 0 % X."}, {"sha": "762c0c9d87e0ffb4c2601f40fe90f4c3cbbf9f9c", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01aa1d43e4cf1a77639ea8839d4de13d440eba64/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01aa1d43e4cf1a77639ea8839d4de13d440eba64/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=01aa1d43e4cf1a77639ea8839d4de13d440eba64", "patch": "@@ -3265,6 +3265,7 @@ fold_rtx (rtx x, rtx insn)\n     case SYMBOL_REF:\n     case LABEL_REF:\n     case REG:\n+    case PC:\n       /* No use simplifying an EXPR_LIST\n \t since they are used only for lists of args\n \t in a function call's REG_EQUAL note.  */\n@@ -3276,17 +3277,6 @@ fold_rtx (rtx x, rtx insn)\n       return prev_insn_cc0;\n #endif\n \n-    case PC:\n-      /* If the next insn is a CODE_LABEL followed by a jump table,\n-\t PC's value is a LABEL_REF pointing to that label.  That\n-\t lets us fold switch statements on the VAX.  */\n-      {\n-\trtx next;\n-\tif (insn && tablejump_p (insn, &next, NULL))\n-\t  return gen_rtx_LABEL_REF (Pmode, next);\n-      }\n-      break;\n-\n     case SUBREG:\n       /* See if we previously assigned a constant value to this SUBREG.  */\n       if ((new = lookup_as_function (x, CONST_INT)) != 0"}]}