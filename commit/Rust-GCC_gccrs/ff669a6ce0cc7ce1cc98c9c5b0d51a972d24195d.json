{"sha": "ff669a6ce0cc7ce1cc98c9c5b0d51a972d24195d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY2NjlhNmNlMGNjN2NlMWNjOThjOWM1YjBkNTFhOTcyZDI0MTk1ZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-09-29T23:05:46Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-09-29T23:05:46Z"}, "message": "rs6000.c (rs6000_encode_section_info): If ggc_p, use ggc_alloc_string.\n\n        * rs6000.c (rs6000_encode_section_info): If ggc_p, use\n        ggc_alloc_string.\n\nFrom-SVN: r29712", "tree": {"sha": "38076af40bf3c734cd939e7490eb627d9c6d5762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38076af40bf3c734cd939e7490eb627d9c6d5762"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff669a6ce0cc7ce1cc98c9c5b0d51a972d24195d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff669a6ce0cc7ce1cc98c9c5b0d51a972d24195d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff669a6ce0cc7ce1cc98c9c5b0d51a972d24195d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff669a6ce0cc7ce1cc98c9c5b0d51a972d24195d/comments", "author": null, "committer": null, "parents": [{"sha": "0a2c2fd1c2d76b8e5199359cc589c500b638f6b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2c2fd1c2d76b8e5199359cc589c500b638f6b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2c2fd1c2d76b8e5199359cc589c500b638f6b1"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "3edb5af8943387bb4ccb4c718bbdfbbc04cf4ef9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff669a6ce0cc7ce1cc98c9c5b0d51a972d24195d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff669a6ce0cc7ce1cc98c9c5b0d51a972d24195d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff669a6ce0cc7ce1cc98c9c5b0d51a972d24195d", "patch": "@@ -1,3 +1,8 @@\n+Wed Sep 29 16:05:18 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* rs6000.c (rs6000_encode_section_info): If ggc_p, use\n+\tggc_alloc_string.\n+\n Tue Sep 28 16:45:40 1999  David Edelsohn  <edelsohn@gnu.org>\n \n \t* xcoffout.c (xcoffout_declare_function): Add documentation."}, {"sha": "3c8b81b85ff64ad42acafa5b5bb77efbf3f1b814", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff669a6ce0cc7ce1cc98c9c5b0d51a972d24195d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff669a6ce0cc7ce1cc98c9c5b0d51a972d24195d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=ff669a6ce0cc7ce1cc98c9c5b0d51a972d24195d", "patch": "@@ -5993,11 +5993,19 @@ rs6000_encode_section_info (decl)\n \n       if (DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_NT)\n \t{\n-\t  const char *prefix = (DEFAULT_ABI == ABI_AIX) ? \".\" : \"..\";\n-\t  char *str = permalloc (strlen (prefix) + 1\n-\t\t\t\t + strlen (XSTR (sym_ref, 0)));\n-\t  strcpy (str, prefix);\n-\t  strcat (str, XSTR (sym_ref, 0));\n+\t  size_t len1 = (DEFAULT_ABI == ABI_AIX) ? 1 : 2;\n+\t  size_t len2 = strlen (XSTR (sym_ref, 0));\n+\t  char *str;\n+\n+\t  if (ggc_p)\n+\t    str = ggc_alloc_string (NULL, len1 + len2);\n+\t  else\n+\t    str = permalloc (len1 + len2 + 1);\n+\n+\t  str[0] = '.';\n+\t  str[1] = '.';\n+\t  memcpy (str + len1, XSTR (sym_ref, 0), len2 + 1);\n+\n \t  XSTR (sym_ref, 0) = str;\n \t}\n     }\n@@ -6037,9 +6045,16 @@ rs6000_encode_section_info (decl)\n \t\t      && strcmp (name, \".PPC.EMB.sbss0\") == 0))))\n \t{\n \t  rtx sym_ref = XEXP (DECL_RTL (decl), 0);\n-\t  char *str = permalloc (2 + strlen (XSTR (sym_ref, 0)));\n-\t  strcpy (str, \"@\");\n-\t  strcat (str, XSTR (sym_ref, 0));\n+\t  size_t len = strlen (XSTR (sym_ref, 0));\n+\t  char *str;\n+\n+\t  if (ggc_p)\n+\t    str = ggc_alloc_string (NULL, len + 1);\n+\t  else\n+\t    str = permalloc (len + 2);\n+\t  str[0] = '@';\n+\t  memcpy (str + 1, XSTR (sym_ref, 0), len + 1);\n+\n \t  XSTR (sym_ref, 0) = str;\n \t}\n     }"}]}