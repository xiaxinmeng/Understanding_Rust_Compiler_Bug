{"sha": "bb24717e5042b6e8a3847e780a8d215edb9c62f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIyNDcxN2U1MDQyYjZlOGEzODQ3ZTc4MGE4ZDIxNWVkYjljNjJmNg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2021-08-25T19:11:47Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2021-08-25T19:11:47Z"}, "message": "Make xxsplti*, xpermx, xxeval be vecperm type.\n\nI noticed that the built-functions for xxspltiw, xxspltidp, xxsplti32dx,\nxxpermx, and xxeval all used the 'vecsimple' type.  These instructions are\npermute instructions (3 cycle latency) and should use 'vecperm' instead.\n\nWhile I was at it, I changed the UNSPEC name for xxspltidp to be\nUNSPEC_XXSPLTIDP instead of UNSPEC_XXSPLTID.\n\n2021-08-25  Michael Meissner  <meissner@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/vsx.md (UNSPEC_XXSPLTIDP): Rename from\n\tUNSPEC_XXSPLTID.\n\t(xxspltiw_v4si): Use vecperm type attribute.\n\t(xxspltiw_v4si_inst): Use vecperm type attribute.\n\t(xxspltiw_v4sf_inst): Likewise.\n\t(xxspltidp_v2df): Use vecperm type attribute.  Use\n\tUNSPEC_XXSPLTIDP instead of UNSPEC_XXSPLTID.\n\t(xxspltidp_v2df_inst): Likewise.\n\t(xxsplti32dx_v4si): Use vecperm type attribute.\n\t(xxsplti32dx_v4si_inst): Likewise.\n\t(xxsplti32dx_v4sf_inst): Likewise.\n\t(xxblend_<mode>): Likewise.\n\t(xxpermx): Likewise.\n\t(xxpermx_inst): Likewise.\n\t(xxeval): Likewise.", "tree": {"sha": "95dd822838ffd16ac34a23b42211a28c4f4e030c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95dd822838ffd16ac34a23b42211a28c4f4e030c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb24717e5042b6e8a3847e780a8d215edb9c62f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb24717e5042b6e8a3847e780a8d215edb9c62f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb24717e5042b6e8a3847e780a8d215edb9c62f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb24717e5042b6e8a3847e780a8d215edb9c62f6/comments", "author": null, "committer": null, "parents": [{"sha": "3ac6b5cff1eca4e1748c671960ef7b4ca5e47fd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ac6b5cff1eca4e1748c671960ef7b4ca5e47fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ac6b5cff1eca4e1748c671960ef7b4ca5e47fd2"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "bf033e31c1cbcb00382831b8f8c4c133bf7e78a8", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb24717e5042b6e8a3847e780a8d215edb9c62f6/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb24717e5042b6e8a3847e780a8d215edb9c62f6/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=bb24717e5042b6e8a3847e780a8d215edb9c62f6", "patch": "@@ -374,7 +374,7 @@\n    UNSPEC_VDIVEU\n    UNSPEC_XXEVAL\n    UNSPEC_XXSPLTIW\n-   UNSPEC_XXSPLTID\n+   UNSPEC_XXSPLTIDP\n    UNSPEC_XXSPLTI32DX\n    UNSPEC_XXBLEND\n    UNSPEC_XXPERMX\n@@ -6414,7 +6414,7 @@\n \t\t     UNSPEC_XXSPLTIW))]\n  \"TARGET_POWER10\"\n  \"xxspltiw %x0,%1\"\n- [(set_attr \"type\" \"vecsimple\")\n+ [(set_attr \"type\" \"vecperm\")\n   (set_attr \"prefixed\" \"yes\")])\n \n (define_expand \"xxspltiw_v4sf\"\n@@ -6434,14 +6434,14 @@\n \t\t     UNSPEC_XXSPLTIW))]\n  \"TARGET_POWER10\"\n  \"xxspltiw %x0,%1\"\n- [(set_attr \"type\" \"vecsimple\")\n+ [(set_attr \"type\" \"vecperm\")\n   (set_attr \"prefixed\" \"yes\")])\n \n ;; XXSPLTIDP built-in function support\n (define_expand \"xxspltidp_v2df\"\n   [(set (match_operand:V2DF 0 \"register_operand\" )\n \t(unspec:V2DF [(match_operand:SF 1 \"const_double_operand\")]\n-\t\t     UNSPEC_XXSPLTID))]\n+\t\t     UNSPEC_XXSPLTIDP))]\n  \"TARGET_POWER10\"\n {\n   long value = rs6000_const_f32_to_i32 (operands[1]);\n@@ -6452,10 +6452,10 @@\n (define_insn \"xxspltidp_v2df_inst\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=wa\")\n \t(unspec:V2DF [(match_operand:SI 1 \"c32bit_cint_operand\" \"n\")]\n-\t\t     UNSPEC_XXSPLTID))]\n+\t\t     UNSPEC_XXSPLTIDP))]\n   \"TARGET_POWER10\"\n   \"xxspltidp %x0,%1\"\n-  [(set_attr \"type\" \"vecsimple\")\n+  [(set_attr \"type\" \"vecperm\")\n    (set_attr \"prefixed\" \"yes\")])\n \n ;; XXSPLTI32DX built-in function support\n@@ -6476,7 +6476,7 @@\n \t\t\t\t\t GEN_INT (index), operands[3]));\n    DONE;\n }\n- [(set_attr \"type\" \"vecsimple\")])\n+ [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"xxsplti32dx_v4si_inst\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=wa\")\n@@ -6486,7 +6486,7 @@\n \t\t     UNSPEC_XXSPLTI32DX))]\n   \"TARGET_POWER10\"\n   \"xxsplti32dx %x0,%2,%3\"\n-  [(set_attr \"type\" \"vecsimple\")\n+  [(set_attr \"type\" \"vecperm\")\n    (set_attr \"prefixed\" \"yes\")])\n \n (define_expand \"xxsplti32dx_v4sf\"\n@@ -6515,7 +6515,7 @@\n \t\t     UNSPEC_XXSPLTI32DX))]\n   \"TARGET_POWER10\"\n   \"xxsplti32dx %x0,%2,%3\"\n-  [(set_attr \"type\" \"vecsimple\")\n+  [(set_attr \"type\" \"vecperm\")\n    (set_attr \"prefixed\" \"yes\")])\n \n ;; XXBLEND built-in function support\n@@ -6527,7 +6527,7 @@\n \t\t    UNSPEC_XXBLEND))]\n   \"TARGET_POWER10\"\n   \"xxblendv<VM3_char> %x0,%x1,%x2,%x3\"\n-  [(set_attr \"type\" \"vecsimple\")\n+  [(set_attr \"type\" \"vecperm\")\n    (set_attr \"prefixed\" \"yes\")])\n \n ;; XXPERMX built-in function support\n@@ -6562,7 +6562,7 @@\n \n   DONE;\n }\n-  [(set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"xxpermx_inst\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"+v\")\n@@ -6573,7 +6573,7 @@\n \t\t     UNSPEC_XXPERMX))]\n   \"TARGET_POWER10\"\n   \"xxpermx %x0,%x1,%x2,%x3,%4\"\n-  [(set_attr \"type\" \"vecsimple\")\n+  [(set_attr \"type\" \"vecperm\")\n    (set_attr \"prefixed\" \"yes\")])\n \n ;; XXEVAL built-in function support\n@@ -6586,6 +6586,6 @@\n \t\t     UNSPEC_XXEVAL))]\n    \"TARGET_POWER10\"\n    \"xxeval %0,%1,%2,%3,%4\"\n-   [(set_attr \"type\" \"vecsimple\")\n+   [(set_attr \"type\" \"vecperm\")\n     (set_attr \"prefixed\" \"yes\")])\n "}]}