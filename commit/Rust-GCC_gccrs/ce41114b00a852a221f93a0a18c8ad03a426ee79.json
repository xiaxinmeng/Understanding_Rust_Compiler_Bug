{"sha": "ce41114b00a852a221f93a0a18c8ad03a426ee79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U0MTExNGIwMGE4NTJhMjIxZjkzYTBhMThjOGFkMDNhNDI2ZWU3OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-27T07:12:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-27T07:12:10Z"}, "message": "re PR c++/34213 (static member function in anonymous namespace can't be used as template argument)\n\n\tPR c++/34213\n\t* tree.c (decl_linkage): Static data members and static member\n\tfunctions in anonymous ns classes are lk_external.\n\n\t* g++.dg/ext/visibility/anon8.C: New test.\n\nFrom-SVN: r130463", "tree": {"sha": "7a48f012d201d5c3e2811119bc9e0d3829101f41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a48f012d201d5c3e2811119bc9e0d3829101f41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce41114b00a852a221f93a0a18c8ad03a426ee79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce41114b00a852a221f93a0a18c8ad03a426ee79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce41114b00a852a221f93a0a18c8ad03a426ee79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce41114b00a852a221f93a0a18c8ad03a426ee79/comments", "author": null, "committer": null, "parents": [{"sha": "381d3db6b824cbb126adc5aa50bfd9a52b2b4c32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/381d3db6b824cbb126adc5aa50bfd9a52b2b4c32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/381d3db6b824cbb126adc5aa50bfd9a52b2b4c32"}], "stats": {"total": 62, "additions": 57, "deletions": 5}, "files": [{"sha": "37e7a3c2bf80b608e4ea7915acacb481edf078a1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce41114b00a852a221f93a0a18c8ad03a426ee79/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce41114b00a852a221f93a0a18c8ad03a426ee79/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ce41114b00a852a221f93a0a18c8ad03a426ee79", "patch": "@@ -1,6 +1,12 @@\n+2007-11-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/34213\n+\t* tree.c (decl_linkage): Static data members and static member\n+\tfunctions in anonymous ns classes are lk_external.\n+\n 2007-11-26  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-\tPR 34081/C++\n+\tPR c++/34081\n \t* decl.c (start_preparsed_function): Pass \n \tprocessing_template_decl for the new allocate_struct_function\n \tparameter."}, {"sha": "6ae05686614c4d20f0ea826fab1f848674165a1f", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce41114b00a852a221f93a0a18c8ad03a426ee79/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce41114b00a852a221f93a0a18c8ad03a426ee79/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=ce41114b00a852a221f93a0a18c8ad03a426ee79", "patch": "@@ -2526,10 +2526,18 @@ decl_linkage (tree decl)\n   /* Members of the anonymous namespace also have TREE_PUBLIC unset, but\n      are considered to have external linkage for language purposes.  DECLs\n      really meant to have internal linkage have DECL_THIS_STATIC set.  */\n-  if (TREE_CODE (decl) == TYPE_DECL\n-      || ((TREE_CODE (decl) == VAR_DECL || TREE_CODE (decl) == FUNCTION_DECL)\n-\t  && !DECL_THIS_STATIC (decl)))\n+  if (TREE_CODE (decl) == TYPE_DECL)\n     return lk_external;\n+  if (TREE_CODE (decl) == VAR_DECL || TREE_CODE (decl) == FUNCTION_DECL)\n+    {\n+      if (!DECL_THIS_STATIC (decl))\n+\treturn lk_external;\n+\n+      /* Static data members and static member functions from classes\n+\t in anonymous namespace also don't have TREE_PUBLIC set.  */\n+      if (DECL_CLASS_CONTEXT (decl))\n+\treturn lk_external;\n+    }\n \n   /* Everything else has internal linkage.  */\n   return lk_internal;"}, {"sha": "10ce3a5a4c202eadbcb1a600b4a02fa5075a0790", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce41114b00a852a221f93a0a18c8ad03a426ee79/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce41114b00a852a221f93a0a18c8ad03a426ee79/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce41114b00a852a221f93a0a18c8ad03a426ee79", "patch": "@@ -1,3 +1,8 @@\n+2007-11-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/34213\n+\t* g++.dg/ext/visibility/anon8.C: New test.\n+\n 2007-11-13  Michael Meissner  <michael.meissner@amd.com>\n \n \tPR target/34077\n@@ -22,7 +27,7 @@\n \n 2007-11-26  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-\tPR 34081/C++\n+\tPR c++/34081\n \t* g++.dg/template/dependent-expr6.C: New testcase.\n \n 2007-11-26  Uros Bizjak  <ubizjak@gmail.com>"}, {"sha": "827cc221741400e196ca0d96d9229b7ba19172b2", "filename": "gcc/testsuite/g++.dg/ext/visibility/anon8.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce41114b00a852a221f93a0a18c8ad03a426ee79/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce41114b00a852a221f93a0a18c8ad03a426ee79/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon8.C?ref=ce41114b00a852a221f93a0a18c8ad03a426ee79", "patch": "@@ -0,0 +1,33 @@\n+// PR c++/34213\n+// { dg-do compile }\n+\n+template <void (*fn) ()>\n+void call ()\n+{\n+  fn ();\n+}\n+\n+namespace\n+{\n+  struct B1\n+  {\n+    static void fn1 () {}\n+    static void fn4 ();\n+  };\n+  void fn3 () {}\n+  void B1::fn4 () {}\n+  static void fn5 () {}\n+}\n+\n+int main ()\n+{\n+  struct B2\n+  {\n+    static void fn2 () {}\n+  };\n+  call<&B1::fn1> ();\n+  call<&B2::fn2> ();\t// { dg-error \"not external linkage|no matching\" }\n+  call<&fn3> ();\n+  call<&B1::fn4> ();\n+  call<&fn5> ();\t// { dg-error \"not external linkage|no matching\" }\n+}"}]}