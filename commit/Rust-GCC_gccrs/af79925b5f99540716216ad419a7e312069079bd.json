{"sha": "af79925b5f99540716216ad419a7e312069079bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY3OTkyNWI1Zjk5NTQwNzE2MjE2YWQ0MTlhN2UzMTIwNjkwNzliZA==", "commit": {"author": {"name": "Fabien Ch\u00eane", "email": "fabien@gcc.gnu.org", "date": "2012-04-11T20:40:51Z"}, "committer": {"name": "Fabien Ch\u00eane", "email": "fabien@gcc.gnu.org", "date": "2012-04-11T20:40:51Z"}, "message": "re PR c++/52465 (g++ rejects valid code with in-class using declaration)\n\ngcc/testsuite/ChangeLog\n\n2012-04-09  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n\n\tPR c++/52465\n\t* g++.dg/lookup/using52.C: New.\n\ngcc/cp/ChangeLog\n\n2012-04-09  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n\n\tPR c++/52465\n\t* parser.c (cp_parser_class_name): Call strip_using_decl and\n\treturn the target decl.\n\t* name-lookup.c (strip_using_decl): Returns NULL_TREE if the decl\n\tto be stripped is NULL_TREE.\n\t(qualify_lookup): Call strip_using_decl and perform some checks on\n\tthe target decl.\n\nFrom-SVN: r186355", "tree": {"sha": "43bf3c0280ad712e2711bc7271d35ca78f32ee7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43bf3c0280ad712e2711bc7271d35ca78f32ee7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af79925b5f99540716216ad419a7e312069079bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af79925b5f99540716216ad419a7e312069079bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af79925b5f99540716216ad419a7e312069079bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af79925b5f99540716216ad419a7e312069079bd/comments", "author": null, "committer": null, "parents": [{"sha": "6cc5558fe8380697c0274c905dc49637e1df0dcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc5558fe8380697c0274c905dc49637e1df0dcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cc5558fe8380697c0274c905dc49637e1df0dcd"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "c822ca240a3927ab70b57dcf6d0d772d38caaf58", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af79925b5f99540716216ad419a7e312069079bd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af79925b5f99540716216ad419a7e312069079bd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=af79925b5f99540716216ad419a7e312069079bd", "patch": "@@ -1,3 +1,13 @@\n+2012-04-11  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n+\n+\tPR c++/52465\n+\t* parser.c (cp_parser_class_name): Call strip_using_decl and\n+\treturn the target decl.\n+\t* name-lookup.c (strip_using_decl): Returns NULL_TREE if the decl\n+\tto be stripped is NULL_TREE.\n+\t(qualify_lookup): Call strip_using_decl and perform some checks on\n+\tthe target decl.\n+\n 2012-04-11  Jason Merrill  <jason@redhat.com>\n \n \tPR debug/45088"}, {"sha": "a81b0d1b5c6a3a99632060b1bc525a2210ec2af9", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af79925b5f99540716216ad419a7e312069079bd/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af79925b5f99540716216ad419a7e312069079bd/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=af79925b5f99540716216ad419a7e312069079bd", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for C++ name lookup routines.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Gabriel Dos Reis <gdr@integrable-solutions.net>\n \n@@ -400,6 +400,9 @@ pop_binding (tree id, tree decl)\n tree\n strip_using_decl (tree decl)\n {\n+  if (decl == NULL_TREE)\n+    return NULL_TREE;\n+\n   while (TREE_CODE (decl) == USING_DECL && !DECL_DEPENDENT_P (decl))\n     decl = USING_DECL_DECLS (decl);\n   return decl;\n@@ -4115,9 +4118,13 @@ qualify_lookup (tree val, int flags)\n     return false;\n   if ((flags & LOOKUP_PREFER_NAMESPACES) && TREE_CODE (val) == NAMESPACE_DECL)\n     return true;\n-  if ((flags & LOOKUP_PREFER_TYPES)\n-      && (TREE_CODE (val) == TYPE_DECL || TREE_CODE (val) == TEMPLATE_DECL))\n-    return true;\n+  if (flags & LOOKUP_PREFER_TYPES)\n+    {\n+      tree target_val = strip_using_decl (val);\n+      if (TREE_CODE (target_val) == TYPE_DECL\n+\t  || TREE_CODE (target_val) == TEMPLATE_DECL)\n+\treturn true;\n+    }\n   if (flags & (LOOKUP_PREFER_NAMESPACES | LOOKUP_PREFER_TYPES))\n     return false;\n   /* Look through lambda things that we shouldn't be able to see.  */"}, {"sha": "6809bc7d5b2335a473896b777c809d296c2695a7", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af79925b5f99540716216ad419a7e312069079bd/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af79925b5f99540716216ad419a7e312069079bd/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=af79925b5f99540716216ad419a7e312069079bd", "patch": "@@ -17845,6 +17845,8 @@ cp_parser_class_name (cp_parser *parser,\n \tdecl = TYPE_NAME (decl);\n     }\n \n+  decl = strip_using_decl (decl);\n+\n   /* Check to see that it is really the name of a class.  */\n   if (TREE_CODE (decl) == TEMPLATE_ID_EXPR\n       && TREE_CODE (TREE_OPERAND (decl, 0)) == IDENTIFIER_NODE"}, {"sha": "bb945cb43594817752ed26e32220f5f68a11185d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af79925b5f99540716216ad419a7e312069079bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af79925b5f99540716216ad419a7e312069079bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=af79925b5f99540716216ad419a7e312069079bd", "patch": "@@ -1,3 +1,8 @@\n+2012-04-11  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n+\n+\tPR c++/52465\n+\t* g++.dg/lookup/using52.C: New.\n+\n 2012-04-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* lib/prune.exp (TEST_ALWAYS_FLAGS): If undefined, set to empty."}, {"sha": "bf2620714e898d59f57ba7e4281d9e62500b112b", "filename": "gcc/testsuite/g++.dg/lookup/using52.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af79925b5f99540716216ad419a7e312069079bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing52.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af79925b5f99540716216ad419a7e312069079bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing52.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing52.C?ref=af79925b5f99540716216ad419a7e312069079bd", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do compile }\n+// PR c++/52645\n+\n+class A\n+{\n+protected:\n+  struct B {};\n+};\n+\n+class C : A\n+{\n+protected:\n+  using A::B;\n+\n+  struct D : public B {};\n+};"}]}