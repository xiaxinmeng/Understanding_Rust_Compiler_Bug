{"sha": "0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVkMDkzYzdjM2Y3NTViYzFjZDgwZTUxODZhYmViMmY1YzUwZWUwYw==", "commit": {"author": {"name": "Eugene Rozenfeld", "email": "erozen@microsoft.com", "date": "2021-08-03T00:22:34Z"}, "committer": {"name": "Eugene Rozenfeld", "email": "erozen@microsoft.com", "date": "2021-08-03T21:26:27Z"}, "message": "Fix indir-call-prof-2.c with AutoFDO\n\nindir-call-prof-2.c has -fno-early-inlining but AutoFDO can't work without\nearly inlining (it needs to match the inlining of the profiled binary).\nI changed profopt.exp to always pass -fearly-inlining for AutoFDO.\nWith that change the indirect call inlining in indir-call-prof-2.c happens in the early inliner\nso I changed the dg-final-use-autofdo.\n\nContributes to fixing PR gcov-profile/71672\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-prof/indir-call-prof-2.c: Fix dg-final-use-autofdo.\n\t* lib/profopt.exp: Pass -fearly-inlining when compiling with AutoFDO.", "tree": {"sha": "0690e09e10ca5029f5847d60a454c9e2d95af22a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0690e09e10ca5029f5847d60a454c9e2d95af22a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c/comments", "author": {"login": "erozenfeld", "id": 10624223, "node_id": "MDQ6VXNlcjEwNjI0MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/10624223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erozenfeld", "html_url": "https://github.com/erozenfeld", "followers_url": "https://api.github.com/users/erozenfeld/followers", "following_url": "https://api.github.com/users/erozenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/erozenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/erozenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erozenfeld/subscriptions", "organizations_url": "https://api.github.com/users/erozenfeld/orgs", "repos_url": "https://api.github.com/users/erozenfeld/repos", "events_url": "https://api.github.com/users/erozenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/erozenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erozenfeld", "id": 10624223, "node_id": "MDQ6VXNlcjEwNjI0MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/10624223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erozenfeld", "html_url": "https://github.com/erozenfeld", "followers_url": "https://api.github.com/users/erozenfeld/followers", "following_url": "https://api.github.com/users/erozenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/erozenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/erozenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erozenfeld/subscriptions", "organizations_url": "https://api.github.com/users/erozenfeld/orgs", "repos_url": "https://api.github.com/users/erozenfeld/repos", "events_url": "https://api.github.com/users/erozenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/erozenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9ad3d5339faaaed6e15a7b27d90fbc66eb72f37"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "594c3f34d57addd34d91c784e99c257a8cff9195", "filename": "gcc/testsuite/gcc.dg/tree-prof/indir-call-prof-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof-2.c?ref=0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fno-early-inlining -fdump-ipa-profile-optimized -fdump-ipa-afdo\" } */\n+/* { dg-options \"-O2 -fno-early-inlining -fdump-ipa-profile-optimized -fdump-tree-einline-optimized\" } */\n volatile int one;\n static int\n add1 (int val)\n@@ -31,5 +31,5 @@ main (void)\n }\n /* { dg-final-use-not-autofdo { scan-ipa-dump \"Indirect call -> direct call.* add1 .will resolve by ipa-profile\" \"profile\"} } */\n /* { dg-final-use-not-autofdo { scan-ipa-dump \"Indirect call -> direct call.* sub1 .will resolve by ipa-profile\" \"profile\"} } */\n-/* { dg-final-use-autofdo { scan-ipa-dump \"Indirect call -> direct call.* add1 .will resolve by ipa-profile\" \"afdo\"} } */\n-/* { dg-final-use-autofdo { scan-ipa-dump \"Indirect call -> direct call.* sub1 .will resolve by ipa-profile\" \"afdo\"} } */\n+/* { dg-final-use-autofdo { scan-tree-dump \"Inlining add1/1 into main/4.\" \"einline\"} } */\n+/* { dg-final-use-autofdo { scan-tree-dump \"Inlining sub1/2 into main/4.\" \"einline\"} } */"}, {"sha": "030d25e52e5c9b061e126507f73365d929bb7698", "filename": "gcc/testsuite/lib/profopt.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprofopt.exp?ref=0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c", "patch": "@@ -290,7 +290,7 @@ proc auto-profopt-execute { src } {\n     }\n     set profile_wrapper [profopt-perf-wrapper]\n     set profile_option \"-g -DFOR_AUTOFDO_TESTING\"\n-    set feedback_option \"-fauto-profile -DFOR_AUTOFDO_TESTING\"\n+    set feedback_option \"-fauto-profile -DFOR_AUTOFDO_TESTING -fearly-inlining\"\n     set run_autofdo 1\n     profopt-execute $src\n     unset profile_wrapper"}]}