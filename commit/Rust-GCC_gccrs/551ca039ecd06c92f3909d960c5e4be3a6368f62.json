{"sha": "551ca039ecd06c92f3909d960c5e4be3a6368f62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUxY2EwMzllY2QwNmM5MmYzOTA5ZDk2MGM1ZTRiZTNhNjM2OGY2Mg==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2005-03-28T08:09:38Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2005-03-28T08:09:38Z"}, "message": "boehm.cc (_Jv_MarkObj): Don't follow null pointer to static field...\n\n\n\t* boehm.cc (_Jv_MarkObj): Don't follow null pointer to static field,\n\twhich can happen if class is JV_STATE_LOADED but not JV_STATE_PREPARED.\n\nFrom-SVN: r97128", "tree": {"sha": "387b86af33906f206e0524a169e6edcbfc011212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/387b86af33906f206e0524a169e6edcbfc011212"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/551ca039ecd06c92f3909d960c5e4be3a6368f62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/551ca039ecd06c92f3909d960c5e4be3a6368f62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/551ca039ecd06c92f3909d960c5e4be3a6368f62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/551ca039ecd06c92f3909d960c5e4be3a6368f62/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8abb6b2217202164ea30559a793ddbe364bfdd7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8abb6b2217202164ea30559a793ddbe364bfdd7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8abb6b2217202164ea30559a793ddbe364bfdd7f"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "24faa64a22da31274723272f7999025045d63b13", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/551ca039ecd06c92f3909d960c5e4be3a6368f62/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/551ca039ecd06c92f3909d960c5e4be3a6368f62/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=551ca039ecd06c92f3909d960c5e4be3a6368f62", "patch": "@@ -1,3 +1,8 @@\n+2005-03-28  Per Bothner  <per@bothner.com>\n+\n+\t* boehm.cc (_Jv_MarkObj): Don't follow null pointer to static field,\n+\twhich can happen if class is JV_STATE_LOADED but not JV_STATE_PREPARED.\n+\n 2005-03-27  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* Makefile.am (classes.stamp): Add gnu/gcj/tools/gcj_dbtool/Main.java"}, {"sha": "af26c2b7b36efeda49177e2f7ab716487b1d6aed", "filename": "libjava/boehm.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/551ca039ecd06c92f3909d960c5e4be3a6368f62/libjava%2Fboehm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/551ca039ecd06c92f3909d960c5e4be3a6368f62/libjava%2Fboehm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fboehm.cc?ref=551ca039ecd06c92f3909d960c5e4be3a6368f62", "patch": "@@ -189,9 +189,11 @@ _Jv_MarkObj (void *addr, void *msp, void *msl, void *env)\n \t      // mark also the value pointed to.  We check for isResolved\n \t      // since marking can happen before memory is allocated for\n \t      // static members.\n-\t      if (JvFieldIsRef (field) && field->isResolved()) \n+\t      // Note that field->u.addr may be null if the class c is\n+\t      // JV_STATE_LOADED but not JV_STATE_PREPARED (initialized).\n+\t      if (JvFieldIsRef (field) && p && field->isResolved()) \n \t\t{\n-\t\t  jobject val = *(jobject*) field->u.addr;\n+\t\t  jobject val = *(jobject*) p;\n \t\t  p = (GC_PTR) val;\n \t\t  MAYBE_MARK (p, mark_stack_ptr, mark_stack_limit, c);\n \t\t}"}]}