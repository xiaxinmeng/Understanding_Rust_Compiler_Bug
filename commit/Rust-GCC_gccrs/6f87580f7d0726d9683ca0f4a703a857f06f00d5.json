{"sha": "6f87580f7d0726d9683ca0f4a703a857f06f00d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY4NzU4MGY3ZDA3MjZkOTY4M2NhMGY0YTcwM2E4NTdmMDZmMDBkNQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-03-20T16:01:08Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-03-20T16:01:08Z"}, "message": "[PR c++/84962] ICE with anon-struct member\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-03/msg00961.html\n\tPR c++/84962\n\t* name-lookup.c (pushdecl_class_level): Push anon-struct's\n\tmember_vec, if there is one.\n\n\tPR c++/84962\n\t* g++.dg/lookup/pr84962.C: New.\n\nFrom-SVN: r258686", "tree": {"sha": "43d5d82e71d5996f0efb9273f8c4a2ac482b8726", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43d5d82e71d5996f0efb9273f8c4a2ac482b8726"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f87580f7d0726d9683ca0f4a703a857f06f00d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f87580f7d0726d9683ca0f4a703a857f06f00d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f87580f7d0726d9683ca0f4a703a857f06f00d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f87580f7d0726d9683ca0f4a703a857f06f00d5/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5770bbac66da20acd60a488430dff494db6606b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5770bbac66da20acd60a488430dff494db6606b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5770bbac66da20acd60a488430dff494db6606b4"}], "stats": {"total": 53, "additions": 44, "deletions": 9}, "files": [{"sha": "5d7b9c09983c613f52fcbb6ef607b5b0455f64ea", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f87580f7d0726d9683ca0f4a703a857f06f00d5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f87580f7d0726d9683ca0f4a703a857f06f00d5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f87580f7d0726d9683ca0f4a703a857f06f00d5", "patch": "@@ -1,5 +1,9 @@\n 2018-03-20  Nathan Sidwell  <nathan@acm.org>\n \n+\tPR c++/84962\n+\t* name-lookup.c (pushdecl_class_level): Push anon-struct's\n+\tmember_vec, if there is one.\n+\n \tPR c++/84970\n \t* cp-tree.h (lookup_list_keep): Declare.\n \t* tree.c (lookup_list_keep): New, broken out of ..."}, {"sha": "411a79696a19ee8352f7d9e923c3c2679f6774a5", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f87580f7d0726d9683ca0f4a703a857f06f00d5/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f87580f7d0726d9683ca0f4a703a857f06f00d5/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=6f87580f7d0726d9683ca0f4a703a857f06f00d5", "patch": "@@ -4490,16 +4490,30 @@ pushdecl_class_level (tree x)\n       /* If X is an anonymous aggregate, all of its members are\n \t treated as if they were members of the class containing the\n \t aggregate, for naming purposes.  */\n-      tree f;\n-\n-      for (f = TYPE_FIELDS (TREE_TYPE (x)); f; f = DECL_CHAIN (f))\n-\t{\n-\t  location_t save_location = input_location;\n-\t  input_location = DECL_SOURCE_LOCATION (f);\n-\t  if (!pushdecl_class_level (f))\n-\t    is_valid = false;\n-\t  input_location = save_location;\n+      location_t save_location = input_location;\n+      tree anon = TREE_TYPE (x);\n+      if (vec<tree, va_gc> *member_vec = CLASSTYPE_MEMBER_VEC (anon))\n+\tfor (unsigned ix = member_vec->length (); ix--;)\n+\t  {\n+\t    tree binding = (*member_vec)[ix];\n+\t    if (STAT_HACK_P (binding))\n+\t      {\n+\t\tif (!pushdecl_class_level (STAT_TYPE (binding)))\n+\t\t  is_valid = false;\n+\t\tbinding = STAT_DECL (binding);\n+\t      }\n+\t    if (!pushdecl_class_level (binding))\n+\t      is_valid = false;\n \t}\n+      else\n+\tfor (tree f = TYPE_FIELDS (anon); f; f = DECL_CHAIN (f))\n+\t  if (TREE_CODE (f) == FIELD_DECL)\n+\t    {\n+\t      input_location = DECL_SOURCE_LOCATION (f);\n+\t      if (!pushdecl_class_level (f))\n+\t\tis_valid = false;\n+\t    }\n+      input_location = save_location;\n     }\n   timevar_cond_stop (TV_NAME_LOOKUP, subtime);\n   return is_valid;"}, {"sha": "21a16df4884c4725c9f781a23f20c8f1f5b866b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f87580f7d0726d9683ca0f4a703a857f06f00d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f87580f7d0726d9683ca0f4a703a857f06f00d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f87580f7d0726d9683ca0f4a703a857f06f00d5", "patch": "@@ -1,5 +1,8 @@\n 2018-03-20  Nathan Sidwell  <nathan@acm.org>\n \n+\tPR c++/84962\n+\t* g++.dg/lookup/pr84962.C: New.\n+\n \tPR c++/84970\n \t* g++.dg/lookup/pr84970.C: New.\n "}, {"sha": "ee801c247bcabffda300fd8e3ade94eafd7e8574", "filename": "gcc/testsuite/g++.dg/lookup/pr84962.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f87580f7d0726d9683ca0f4a703a857f06f00d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr84962.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f87580f7d0726d9683ca0f4a703a857f06f00d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr84962.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr84962.C?ref=6f87580f7d0726d9683ca0f4a703a857f06f00d5", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/84952 ICE with anon-struct having member fns\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options -Wno-pedantic }\n+\n+struct X {\n+  struct \n+  {\n+    template <typename> int a ();\n+    // { dg-error \"can only have\" \"\" { target *-*-* } .-1 }\n+  };\n+\n+  int  : a; // { dg-error \"non-integral\" }\n+};\n+"}]}