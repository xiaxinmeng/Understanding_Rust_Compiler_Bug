{"sha": "ad09440a09597c34e0b93498aad9d6ef0b8ca9ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQwOTQ0MGEwOTU5N2MzNGUwYjkzNDk4YWFkOWQ2ZWYwYjhjYTlhZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-21T19:21:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-21T21:42:10Z"}, "message": "PR c++/60855 - ICE with sizeof VLA capture.\n\nFor normal captures we usually look through them within unevaluated context,\nbut that doesn't work here; trying to take the sizeof of the array in the\nenclosing scope tries and fails to evaluate a SAVE_EXPR from the enclosing\nscope.\n\n\t* lambda.c (is_lambda_ignored_entity): Don't look past VLA capture.", "tree": {"sha": "f289edc6a5ba5ab65034e39dafef9bab5f504fb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f289edc6a5ba5ab65034e39dafef9bab5f504fb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad09440a09597c34e0b93498aad9d6ef0b8ca9ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad09440a09597c34e0b93498aad9d6ef0b8ca9ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad09440a09597c34e0b93498aad9d6ef0b8ca9ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad09440a09597c34e0b93498aad9d6ef0b8ca9ae/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "276265195a4e7362b34ac512f3bc0ad5a974dcff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/276265195a4e7362b34ac512f3bc0ad5a974dcff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/276265195a4e7362b34ac512f3bc0ad5a974dcff"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "04c5d2ee8f48eff0e16373133ea1995ced15b16c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad09440a09597c34e0b93498aad9d6ef0b8ca9ae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad09440a09597c34e0b93498aad9d6ef0b8ca9ae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ad09440a09597c34e0b93498aad9d6ef0b8ca9ae", "patch": "@@ -1,5 +1,8 @@\n 2020-01-21  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/60855 - ICE with sizeof VLA capture.\n+\t* lambda.c (is_lambda_ignored_entity): Don't look past VLA capture.\n+\n \tPR c++/90732 - ICE with VLA capture and generic lambda.\n \t* pt.c (tsubst_lambda_expr): Repeat add_capture for VLAs.\n "}, {"sha": "4f39f99756bb00da9782c372b0f35d005532940e", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad09440a09597c34e0b93498aad9d6ef0b8ca9ae/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad09440a09597c34e0b93498aad9d6ef0b8ca9ae/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=ad09440a09597c34e0b93498aad9d6ef0b8ca9ae", "patch": "@@ -1327,8 +1327,9 @@ lambda_static_thunk_p (tree fn)\n bool\n is_lambda_ignored_entity (tree val)\n {\n-  /* Look past normal capture proxies.  */\n-  if (is_normal_capture_proxy (val))\n+  /* Look past normal, non-VLA capture proxies.  */\n+  if (is_normal_capture_proxy (val)\n+      && !variably_modified_type_p (TREE_TYPE (val), NULL_TREE))\n     return true;\n \n   /* Always ignore lambda fields, their names are only for debugging.  */"}, {"sha": "3e9cf076d144cbb3df12173f5b550d05fbad6a1d", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-vla4.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad09440a09597c34e0b93498aad9d6ef0b8ca9ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-vla4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad09440a09597c34e0b93498aad9d6ef0b8ca9ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-vla4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-vla4.C?ref=ad09440a09597c34e0b93498aad9d6ef0b8ca9ae", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/60855\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-Wno-vla\" }\n+\n+int main() {\n+  unsigned count = 5;\n+  bool array[count];\n+  [&array] () {\n+    array[0] = sizeof(array) > 5;\n+  }();\n+  return 0;\n+}"}]}