{"sha": "ef9eec0b599d533b58e29fe0c0bf6435e5368378", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY5ZWVjMGI1OTlkNTMzYjU4ZTI5ZmUwYzBiZjY0MzVlNTM2ODM3OA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-10-19T20:43:30Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-10-19T20:43:30Z"}, "message": "x86-tune-costs.h (generic_cost, core_cost): Correct costs of x87 and SSE instructions.\n\n\n\t* x86-tune-costs.h (generic_cost, core_cost): Correct costs\n\tof x87 and SSE instructions.\n\nFrom-SVN: r253911", "tree": {"sha": "050865057e06fb19fc11b7ba4ebb8396ef48f50f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/050865057e06fb19fc11b7ba4ebb8396ef48f50f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef9eec0b599d533b58e29fe0c0bf6435e5368378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9eec0b599d533b58e29fe0c0bf6435e5368378", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9eec0b599d533b58e29fe0c0bf6435e5368378", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9eec0b599d533b58e29fe0c0bf6435e5368378/comments", "author": null, "committer": null, "parents": [{"sha": "ef30ab837c42b9555b3fc290454a5c02cb65487a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef30ab837c42b9555b3fc290454a5c02cb65487a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef30ab837c42b9555b3fc290454a5c02cb65487a"}], "stats": {"total": 48, "additions": 26, "deletions": 22}, "files": [{"sha": "d8c4d7589bb7017ea5e24d1fd3b22000d2ab7219", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9eec0b599d533b58e29fe0c0bf6435e5368378/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9eec0b599d533b58e29fe0c0bf6435e5368378/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef9eec0b599d533b58e29fe0c0bf6435e5368378", "patch": "@@ -1,3 +1,8 @@\n+2017-10-19  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* x86-tune-costs.h (generic_cost, core_cost): Correct costs\n+\tof x87 and SSE instructions.\n+\n 2017-10-19  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* asan.c (create_cond_insert_point): Do not update edge count."}, {"sha": "52ec3487da88f0d05503da1108986f2822843a3d", "filename": "gcc/config/i386/x86-tune-costs.h", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9eec0b599d533b58e29fe0c0bf6435e5368378/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9eec0b599d533b58e29fe0c0bf6435e5368378/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h?ref=ef9eec0b599d533b58e29fe0c0bf6435e5368378", "patch": "@@ -2196,8 +2196,7 @@ static stringop_algs generic_memset[2] = {\n static const\n struct processor_costs generic_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of an add instruction */\n-  /* On all chips taken into consideration lea is 2 cycles and more.  With\n-     this cost however our current implementation of synth_mult results in\n+  /* Setting cost to 2 makes our current implementation of synth_mult result in\n      use of unnecessary temporary registers causing regression on several\n      SPECfp benchmarks.  */\n   COSTS_N_INSNS (1) + 1,\t\t/* cost of a lea instruction */\n@@ -2246,23 +2245,23 @@ struct processor_costs generic_cost = {\n   /* Benchmarks shows large regressions on K8 sixtrack benchmark when this\n      value is increased to perhaps more appropriate value of 5.  */\n   3,\t\t\t\t\t/* Branch cost */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of FADD and FSUB insns.  */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of FMUL instruction.  */\n+  COSTS_N_INSNS (3),\t\t\t/* cost of FADD and FSUB insns.  */\n+  COSTS_N_INSNS (3),\t\t\t/* cost of FMUL instruction.  */\n   COSTS_N_INSNS (20),\t\t\t/* cost of FDIV instruction.  */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of FABS instruction.  */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of FCHS instruction.  */\n+  COSTS_N_INSNS (1),\t\t\t/* cost of FABS instruction.  */\n+  COSTS_N_INSNS (1),\t\t\t/* cost of FCHS instruction.  */\n   COSTS_N_INSNS (40),\t\t\t/* cost of FSQRT instruction.  */\n \n-  COSTS_N_INSNS (8),\t\t\t/* cost of cheap SSE instruction.  */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of ADDSS/SD SUBSS/SD insns.  */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of MULSS instruction.  */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of MULSD instruction.  */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of FMA SS instruction.  */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of FMA SD instruction.  */\n-  COSTS_N_INSNS (20),\t\t\t/* cost of DIVSS instruction.  */\n-  COSTS_N_INSNS (20),\t\t\t/* cost of DIVSD instruction.  */\n-  COSTS_N_INSNS (40),\t\t\t/* cost of SQRTSS instruction.  */\n-  COSTS_N_INSNS (40),\t\t\t/* cost of SQRTSD instruction.  */\n+  COSTS_N_INSNS (1),\t\t\t/* cost of cheap SSE instruction.  */\n+  COSTS_N_INSNS (3),\t\t\t/* cost of ADDSS/SD SUBSS/SD insns.  */\n+  COSTS_N_INSNS (4),\t\t\t/* cost of MULSS instruction.  */\n+  COSTS_N_INSNS (5),\t\t\t/* cost of MULSD instruction.  */\n+  COSTS_N_INSNS (5),\t\t\t/* cost of FMA SS instruction.  */\n+  COSTS_N_INSNS (5),\t\t\t/* cost of FMA SD instruction.  */\n+  COSTS_N_INSNS (18),\t\t\t/* cost of DIVSS instruction.  */\n+  COSTS_N_INSNS (32),\t\t\t/* cost of DIVSD instruction.  */\n+  COSTS_N_INSNS (30),\t\t\t/* cost of SQRTSS instruction.  */\n+  COSTS_N_INSNS (58),\t\t\t/* cost of SQRTSD instruction.  */\n   1, 2, 1, 1,\t\t\t\t/* reassoc int, fp, vec_int, vec_fp.  */\n   generic_memcpy,\n   generic_memset,\n@@ -2344,12 +2343,12 @@ struct processor_costs core_cost = {\n   6,\t\t\t\t\t/* number of parallel prefetches */\n   /* FIXME perhaps more appropriate value is 5.  */\n   3,\t\t\t\t\t/* Branch cost */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of FADD and FSUB insns.  */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of FMUL instruction.  */\n-  COSTS_N_INSNS (20),\t\t\t/* cost of FDIV instruction.  */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of FABS instruction.  */\n-  COSTS_N_INSNS (8),\t\t\t/* cost of FCHS instruction.  */\n-  COSTS_N_INSNS (40),\t\t\t/* cost of FSQRT instruction.  */\n+  COSTS_N_INSNS (3),\t\t\t/* cost of FADD and FSUB insns.  */\n+  COSTS_N_INSNS (5),\t\t\t/* cost of FMUL instruction.  */\n+  COSTS_N_INSNS (24),\t\t\t/* cost of FDIV instruction.  */\n+  COSTS_N_INSNS (1),\t\t\t/* cost of FABS instruction.  */\n+  COSTS_N_INSNS (1),\t\t\t/* cost of FCHS instruction.  */\n+  COSTS_N_INSNS (24),\t\t\t/* cost of FSQRT instruction.  */\n \n   COSTS_N_INSNS (1),\t\t\t/* cost of cheap SSE instruction.  */\n   COSTS_N_INSNS (3),\t\t\t/* cost of ADDSS/SD SUBSS/SD insns.  */"}]}