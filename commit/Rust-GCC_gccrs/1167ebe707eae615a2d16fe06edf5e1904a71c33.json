{"sha": "1167ebe707eae615a2d16fe06edf5e1904a71c33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE2N2ViZTcwN2VhZTYxNWEyZDE2ZmUwNmVkZjVlMTkwNGE3MWMzMw==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-11-06T20:43:40Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-11-06T20:43:40Z"}, "message": "Do not allow irreducible loops/regions in a scop\n\nIrreducible regions are not going to be optimized by ISL\nso discard them early. Passes bootstrap and regtest.\n\ngcc/ChangeLog:\n\n2015-11-06  Aditya Kumar  <aditya.k7@samsung.com>\n\n        * graphite-scop-detection.c (scop_detection::merge_sese): Entry and exit edges should not be a part of irreducible loop.\n        (scop_detection::can_represent_loop_1): Loops should not be irreducible.\n        (scop_detection::harmful_stmt_in_region): All the basic block should belong to reducible loops.\n\nCo-Authored-By: Sebastian Pop <s.pop@samsung.com>\n\nFrom-SVN: r229888", "tree": {"sha": "6cb38401e77fb6ba8686e86148a6707ec4590709", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cb38401e77fb6ba8686e86148a6707ec4590709"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1167ebe707eae615a2d16fe06edf5e1904a71c33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1167ebe707eae615a2d16fe06edf5e1904a71c33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1167ebe707eae615a2d16fe06edf5e1904a71c33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1167ebe707eae615a2d16fe06edf5e1904a71c33/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "246cc0600251b3c8e2e237a55270816cdd5a8ad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/246cc0600251b3c8e2e237a55270816cdd5a8ad2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/246cc0600251b3c8e2e237a55270816cdd5a8ad2"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "906dc9449f4c7ad738843e827e5533957ef375f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1167ebe707eae615a2d16fe06edf5e1904a71c33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1167ebe707eae615a2d16fe06edf5e1904a71c33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1167ebe707eae615a2d16fe06edf5e1904a71c33", "patch": "@@ -1,3 +1,13 @@\n+2015-11-06  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+        * graphite-scop-detection.c (scop_detection::merge_sese): Entry\n+\tand exit edges should not be a part of irreducible loop.\n+        (scop_detection::can_represent_loop_1): Loops should not be\n+\tirreducible.\n+        (scop_detection::harmful_stmt_in_region): All the basic block\n+\tshould belong to reducible loops.\n+\n 2015-11-06  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* config/aarch64/aarch64-simd-builtins.def: Update builtins"}, {"sha": "b1f2ebc20a23dd29accf0c3c83d179ff139ac1c9", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1167ebe707eae615a2d16fe06edf5e1904a71c33/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1167ebe707eae615a2d16fe06edf5e1904a71c33/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=1167ebe707eae615a2d16fe06edf5e1904a71c33", "patch": "@@ -794,7 +794,8 @@ scop_detection::merge_sese (sese_l first, sese_l second) const\n \t\t\t\t\t      get_entry_bb (second));\n \n   edge entry = get_nearest_dom_with_single_entry (dom);\n-  if (!entry)\n+\n+  if (!entry || (entry->flags & EDGE_IRREDUCIBLE_LOOP))\n     return invalid_sese;\n \n   basic_block pdom = nearest_common_dominator (CDI_POST_DOMINATORS,\n@@ -803,7 +804,8 @@ scop_detection::merge_sese (sese_l first, sese_l second) const\n   pdom = nearest_common_dominator (CDI_POST_DOMINATORS, dom, pdom);\n \n   edge exit = get_nearest_pdom_with_single_exit (pdom);\n-  if (!exit)\n+\n+  if (!exit || (exit->flags & EDGE_IRREDUCIBLE_LOOP))\n     return invalid_sese;\n \n   sese_l combined (entry, exit);\n@@ -923,6 +925,7 @@ scop_detection::can_represent_loop_1 (loop_p loop, sese_l scop)\n   struct tree_niter_desc niter_desc;\n \n   return single_exit (loop)\n+    && !(loop_preheader_edge (loop)->flags & EDGE_IRREDUCIBLE_LOOP)\n     && number_of_iterations_exit (loop, single_exit (loop), &niter_desc, false)\n     && niter_desc.control.no_overflow\n     && (niter = number_of_latch_executions (loop))\n@@ -1053,6 +1056,10 @@ scop_detection::harmful_stmt_in_region (sese_l scop) const\n       if (!dominated_by_p (CDI_POST_DOMINATORS, bb, exit_bb))\n \tcontinue;\n \n+      /* The basic block should not be part of an irreducible loop.  */\n+      if (bb->flags & BB_IRREDUCIBLE_LOOP)\n+        return true;\n+\n       if (harmful_stmt_in_bb (scop, bb))\n \treturn true;\n     }"}]}