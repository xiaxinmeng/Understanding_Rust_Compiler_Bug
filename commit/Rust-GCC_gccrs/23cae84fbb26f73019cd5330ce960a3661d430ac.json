{"sha": "23cae84fbb26f73019cd5330ce960a3661d430ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjYWU4NGZiYjI2ZjczMDE5Y2Q1MzMwY2U5NjBhMzY2MWQ0MzBhYw==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@act-europe.fr", "date": "2003-03-04T20:14:59Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2003-03-04T20:14:59Z"}, "message": "a-except.adb (Unwind_RaiseException): Import a GNAT specific wrapper...\n\n\tada/9911\n\t* a-except.adb (Unwind_RaiseException): Import a GNAT specific\n\twrapper, which name remains constant whatever underlying GCC\n\tscheme.\n\n\t* raise.c (__gnat_Unwind_RaiseException): New wrappers, providing\n\tthe stable interface needed for a-except.\n\nFrom-SVN: r63795", "tree": {"sha": "468e170ab74680bf828abe7663ade351abdcebfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/468e170ab74680bf828abe7663ade351abdcebfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23cae84fbb26f73019cd5330ce960a3661d430ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cae84fbb26f73019cd5330ce960a3661d430ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23cae84fbb26f73019cd5330ce960a3661d430ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cae84fbb26f73019cd5330ce960a3661d430ac/comments", "author": null, "committer": null, "parents": [{"sha": "db720d9a74f699c6eac1ae6802d5866c0f55ece1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db720d9a74f699c6eac1ae6802d5866c0f55ece1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db720d9a74f699c6eac1ae6802d5866c0f55ece1"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "2994fcfcacffebefd6ecf2027eb8078dad14e265", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cae84fbb26f73019cd5330ce960a3661d430ac/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cae84fbb26f73019cd5330ce960a3661d430ac/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=23cae84fbb26f73019cd5330ce960a3661d430ac", "patch": "@@ -1,3 +1,13 @@\n+2003-03-04  Olivier Hainque <hainque@act-europe.fr>\n+\n+\tada/9911\n+\t* a-except.adb (Unwind_RaiseException): Import a GNAT specific\n+\twrapper, which name remains constant whatever underlying GCC\n+\tscheme.\n+\n+\t* raise.c (__gnat_Unwind_RaiseException): New wrappers, providing\n+\tthe stable interface needed for a-except.\n+\n 2003-03-02  Andreas Jaeger  <aj@suse.de>\n \n \t* gnat_ug_unx.texi, gnat_ug_vms.texi, gnat_ug_vxw.texi,"}, {"sha": "979f11e41c916e9c339e17d0d06ab42ef0c09179", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cae84fbb26f73019cd5330ce960a3661d430ac/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cae84fbb26f73019cd5330ce960a3661d430ac/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=23cae84fbb26f73019cd5330ce960a3661d430ac", "patch": "@@ -199,7 +199,7 @@ package body Ada.Exceptions is\n    function Unwind_RaiseException\n      (E    : access GNAT_GCC_Exception)\n       return Unwind_Reason_Code;\n-   pragma Import (C, Unwind_RaiseException, \"_Unwind_RaiseException\");\n+   pragma Import (C, Unwind_RaiseException, \"__gnat_Unwind_RaiseException\");\n \n    -----------------------\n    -- Local Subprograms --"}, {"sha": "4db4d20a4d03ddfccec49bbd734506a88cd9719f", "filename": "gcc/ada/raise.c", "status": "modified", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cae84fbb26f73019cd5330ce960a3661d430ac/gcc%2Fada%2Fraise.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cae84fbb26f73019cd5330ce960a3661d430ac/gcc%2Fada%2Fraise.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise.c?ref=23cae84fbb26f73019cd5330ce960a3661d430ac", "patch": "@@ -597,21 +597,48 @@ __gnat_eh_personality (version, actions, exception_class, ue_header, context)\n }\n \n \n-#else   /* IN_RTS - For eh personality routine   */\n+/* If the underlying GCC scheme for exception handling is SJLJ, the standard\n+   propagation routine (_Unwind_RaiseException) is actually renamed using a\n+   #define directive (see unwing-sjlj.c). We need a consistently named\n+   interface to import from a-except, so stubs are defined here.  */\n+\n+#ifdef __USING_SJLJ_EXCEPTIONS__\n+\n+_Unwind_Reason_Code\n+__gnat_Unwind_RaiseException (e)\n+     struct _Unwind_Exception *e;\n+{\n+  return _Unwind_SjLj_RaiseException (e);\n+}\n+\n+#else\n+/* __USING_SJLJ_EXCEPTIONS__ not defined */\n+\n+void\n+__gnat_Unwind_RaiseException (e)\n+     struct _Unwind_Exception *e;\n+{\n+  return _Unwind_RaiseException (e);\n+}\n+ \n+#endif\n+\n+#else\n+/* IN_RTS not defined */\n \n /* The calls to the GCC runtime interface for exception raising are currently\n    issued from a-except.adb, which is used by both the runtime library and\n    the compiler. As the compiler binary is not linked against the GCC runtime\n    library, we need a stub for this interface in the compiler case.  */\n \n+/* Since we don't link the compiler with a host libgcc, we should not be\n+   using the GCC eh mechanism for the compiler and so expect this function\n+   never to be called.  */\n \n _Unwind_Reason_Code\n-_Unwind_RaiseException (e)\n+__gnat_Unwind_RaiseException (e)\n      struct _Unwind_Exception *e ATTRIBUTE_UNUSED;\n {\n-  /* Since we don't link the compiler with a host libgcc, we should not be\n-     using the GCC eh mechanism for the compiler and so expect this function\n-     never to be called.  */\n   abort ();\n }\n "}]}