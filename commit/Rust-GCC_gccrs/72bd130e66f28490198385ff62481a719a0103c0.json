{"sha": "72bd130e66f28490198385ff62481a719a0103c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJiZDEzMGU2NmYyODQ5MDE5ODM4NWZmNjI0ODFhNzE5YTAxMDNjMA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-02-21T13:06:07Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-02-21T13:06:07Z"}, "message": "re PR fortran/35259 (-fassociative-math not enabled by default;  No option to associate with PAREN_EXPRs)\n\n2010-02-21  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/35259\n        * doc/invoke.texi (-fassociative-math): Document that this\n        option is automatically enabled for Fortran.\n\n2010-02-21  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/35259\n        * gfortran.h (gfc_option_t): New flag -fprotect-parens.\n        * lang.opt: Ditto.\n        * option.c (gfc_init_options,gfc_handle_option): Ditto.\n        * trans-expr.c (gfc_conv_expr_op): Use the flag.\n        * invoke.texi: Document new -fno-protect-parens flag.\n\n2010-02-21  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/35259\n        * gfortran.dg/reassoc_5.f90: New test.\n\nFrom-SVN: r156937", "tree": {"sha": "d4fbccbf175b1cb47bc63157005e3fbde3964021", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4fbccbf175b1cb47bc63157005e3fbde3964021"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72bd130e66f28490198385ff62481a719a0103c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72bd130e66f28490198385ff62481a719a0103c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72bd130e66f28490198385ff62481a719a0103c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72bd130e66f28490198385ff62481a719a0103c0/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c76dc9b0e660bb78b5addda708a1b1eeb53ec1b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76dc9b0e660bb78b5addda708a1b1eeb53ec1b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c76dc9b0e660bb78b5addda708a1b1eeb53ec1b8"}], "stats": {"total": 71, "additions": 67, "deletions": 4}, "files": [{"sha": "4334c21380bf021ee3720d24b20f92c5fbe1569a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72bd130e66f28490198385ff62481a719a0103c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72bd130e66f28490198385ff62481a719a0103c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72bd130e66f28490198385ff62481a719a0103c0", "patch": "@@ -1,3 +1,9 @@\n+2010-02-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/35259\n+\t* doc/invoke.texi (-fassociative-math): Document that this\n+\toption is automatically enabled for Fortran.\n+\n 2010-02-20  David S. Miller  <davem@davemloft.net>\n \n \t* configure.ac: Test if linker and assembler properly support"}, {"sha": "f6610019802c8b7844c3694129725f6b1598e3fa", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=72bd130e66f28490198385ff62481a719a0103c0", "patch": "@@ -7541,7 +7541,9 @@ thus cannot be used on a code which relies on rounding behavior like\n and thus may not be used when ordered comparisons are required.\n This option requires that both @option{-fno-signed-zeros} and\n @option{-fno-trapping-math} be in effect.  Moreover, it doesn't make\n-much sense with @option{-frounding-math}.\n+much sense with @option{-frounding-math}. For Fortran the option\n+is automatically enabled when both @option{-fno-signed-zeros} and\n+@option{-fno-trapping-math} are in effect.\n \n The default is @option{-fno-associative-math}.\n "}, {"sha": "fec057ff4e310edb3439765190253cc08ddeecad", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=72bd130e66f28490198385ff62481a719a0103c0", "patch": "@@ -1,3 +1,12 @@\n+2010-02-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/35259\n+\t* gfortran.h (gfc_option_t): New flag -fprotect-parens.\n+\t* lang.opt: Ditto.\n+\t* option.c (gfc_init_options,gfc_handle_option): Ditto.\n+\t* trans-expr.c (gfc_conv_expr_op): Use the flag.\n+\t* invoke.texi: Document new -fno-protect-parens flag.\n+\n 2010-02-20  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/36932"}, {"sha": "eeaf0af8b7f8f0718bd71b2fd794b5a75921d4a1", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=72bd130e66f28490198385ff62481a719a0103c0", "patch": "@@ -2150,6 +2150,7 @@ typedef struct\n   char flag_init_character_value;\n   int flag_align_commons;\n   int flag_whole_file;\n+  int flag_protect_parens;\n \n   int fpe;\n   int rtcheck;"}, {"sha": "efcf5ef9b45c0449b2b1a08a82f6e5c25c21b988", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=72bd130e66f28490198385ff62481a719a0103c0", "patch": "@@ -171,7 +171,8 @@ and warnings}.\n -fpack-derived  -frepack-arrays  -fshort-enums  -fexternal-blas @gol\n -fblas-matmul-limit=@var{n} -frecursive -finit-local-zero @gol\n -finit-integer=@var{n} -finit-real=@var{<zero|inf|-inf|nan|snan>} @gol\n--finit-logical=@var{<true|false>} -finit-character=@var{n} -fno-align-commons}\n+-finit-logical=@var{<true|false>} -finit-character=@var{n} @gol\n+-fno-align-commons -fno-protect-parens}\n @end table\n \n @menu\n@@ -1410,6 +1411,16 @@ consistent data types everywhere, this padding can cause trouble, and\n same form of this option should be used for all files that share a COMMON block.\n To avoid potential alignment issues in COMMON blocks, it is recommended to order\n objects from largests to smallest.\n+\n+@item -fno-protect-parens\n+@opindex @code{fno-protect-parens}\n+@cindex re-association of parenthesed expressions\n+By default the parentheses in expression are honored for all optimization\n+levels such that the compiler does not do any re-association. Using\n+@option{-fno-protect-parens} allows the compiler to reorder REAL and\n+COMPLEX expressions to produce faster code. Note that for the re-association\n+optimization @option{-fno-signed-zeros} and @option{-fno-trapping-math}\n+need to be in effect.\n @end table\n \n @xref{Code Gen Options,,Options for Code Generation Conventions,"}, {"sha": "a52e643c9b36727b1d56b4bedc7daaacff394b64", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=72bd130e66f28490198385ff62481a719a0103c0", "patch": "@@ -324,6 +324,10 @@ fpreprocessed\n Fortran\n ; Documented in C\n \n+fprotect-parens\n+Fortran\n+Protect parentheses in expressions\n+\n frange-check\n Fortran\n Enable range checking during compilation"}, {"sha": "bcde573726172f1a1a44a636c11360fb0a126e22", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=72bd130e66f28490198385ff62481a719a0103c0", "patch": "@@ -125,6 +125,7 @@ gfc_init_options (unsigned int argc, const char **argv)\n   gfc_option.flag_init_character = GFC_INIT_CHARACTER_OFF;\n   gfc_option.flag_init_character_value = (char)0;\n   gfc_option.flag_align_commons = 1;\n+  gfc_option.flag_protect_parens = 1;\n   \n   gfc_option.fpe = 0;\n   gfc_option.rtcheck = 0;\n@@ -921,6 +922,10 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_option.flag_align_commons = value;\n       break;\n \n+    case OPT_fprotect_parens:\n+      gfc_option.flag_protect_parens = value;\n+      break;\n+\n     case OPT_fcheck_:\n       gfc_handle_runtime_check_option (arg);\n       break;"}, {"sha": "d71214884e2a1a42b178f1de95f3042006cacda7", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=72bd130e66f28490198385ff62481a719a0103c0", "patch": "@@ -1222,8 +1222,9 @@ gfc_conv_expr_op (gfc_se * se, gfc_expr * expr)\n   switch (expr->value.op.op)\n     {\n     case INTRINSIC_PARENTHESES:\n-      if (expr->ts.type == BT_REAL\n-\t  || expr->ts.type == BT_COMPLEX)\n+      if ((expr->ts.type == BT_REAL\n+\t   || expr->ts.type == BT_COMPLEX)\n+\t  && gfc_option.flag_protect_parens)\n \t{\n \t  gfc_conv_unary_op (PAREN_EXPR, se, expr);\n \t  gcc_assert (FLOAT_TYPE_P (TREE_TYPE (se->expr)));"}, {"sha": "682a7e8d6f520ffb675694e4423cb75724dbdde0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=72bd130e66f28490198385ff62481a719a0103c0", "patch": "@@ -1,3 +1,8 @@\n+2010-02-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/35259\n+\t* gfortran.dg/reassoc_5.f90: New test.\n+\n 2010-02-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/43067"}, {"sha": "8d3086ab4e08cb89581324b80499e4a5533a5312", "filename": "gcc/testsuite/gfortran.dg/reassoc_5.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ftestsuite%2Fgfortran.dg%2Freassoc_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72bd130e66f28490198385ff62481a719a0103c0/gcc%2Ftestsuite%2Fgfortran.dg%2Freassoc_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freassoc_5.f90?ref=72bd130e66f28490198385ff62481a719a0103c0", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile }\n+! { dg-options \"-O3 -ffast-math -fdump-tree-optimized -fno-protect-parens\" }\n+!\n+! PR fortran/35259\n+! Test for -fno-protect-parens\n+!\n+function test(b)\n+  real a\n+  a = (b + 5.) - 5.\n+  test = a\n+end\n+\n+! Test copied from reassoc_1.f90 which checked for -fprotect-parens (default),\n+! and thus for the occurance of \"5 - 5\".\n+!\n+! We need an explicit +5 and -5, and an intermediate ((bla)) expression\n+! (the reassoc barrier).  Make use of \".\" matching lineends.\n+! { dg-final { scan-tree-dump-times \"\\\\\\+ 5.*\\\\\\)\\\\\\).* - 5\" 0 \"optimized\" } }\n+! { dg-final { cleanup-tree-dump \"optimized\" } }"}]}