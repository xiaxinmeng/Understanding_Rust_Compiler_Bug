{"sha": "25cc21998e546c9a84df754d428c61f79bd89cd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVjYzIxOTk4ZTU0NmM5YTg0ZGY3NTRkNDI4YzYxZjc5YmQ4OWNkNg==", "commit": {"author": {"name": "Evandro Menezes", "email": "e.menezes@samsung.com", "date": "2016-02-23T21:31:00Z"}, "committer": {"name": "Evandro Menezes", "email": "evandro@gcc.gnu.org", "date": "2016-02-23T21:31:00Z"}, "message": "Tweak the pipeline model for Exynos M1\n\ngcc/\n\t* config/aarch64/aarch64.c (exynosm1_tunings): Enable fusion of AES{D,E}\n\tand AESMC pairs.\n\t* config/arm/exynos-m1.md: Change cost of STP, fix bypass for stores\n\tand add bypass for AES{D,E} and AESMC pairs.\n\nFrom-SVN: r233647", "tree": {"sha": "cc8beb0576b099b68cd5e9154893694b0148b9ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc8beb0576b099b68cd5e9154893694b0148b9ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25cc21998e546c9a84df754d428c61f79bd89cd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25cc21998e546c9a84df754d428c61f79bd89cd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25cc21998e546c9a84df754d428c61f79bd89cd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25cc21998e546c9a84df754d428c61f79bd89cd6/comments", "author": null, "committer": null, "parents": [{"sha": "220ab1cced23295cb3f090865117edeb52d39416", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220ab1cced23295cb3f090865117edeb52d39416", "html_url": "https://github.com/Rust-GCC/gccrs/commit/220ab1cced23295cb3f090865117edeb52d39416"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "07b50b5d3a1d9ed669c12de77945ab87793cdc93", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cc21998e546c9a84df754d428c61f79bd89cd6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cc21998e546c9a84df754d428c61f79bd89cd6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25cc21998e546c9a84df754d428c61f79bd89cd6", "patch": "@@ -1,3 +1,10 @@\n+2016-02-23  Evandro Menezes  <e.menezes@samsung.com>\n+\n+\t* config/arm/exynos-m1.md: Change cost of STP, fix bypass for stores\n+\tand add bypass for AES{D,E} and AESMC pairs.\n+\t* config/aarch64/aarch64.c (exynosm1_tunings): Enable fusion of AES{D,E}\n+\tand AESMC pairs.\n+\n 2016-02-23  Evandro Menezes  <e.menezes@samsung.com>\n \n         * config/aarch64/aarch64.c (exynosm1_tunings): Enable the Newton"}, {"sha": "6dc8330200e9b353edc17483581b6daf2b97faaa", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cc21998e546c9a84df754d428c61f79bd89cd6/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cc21998e546c9a84df754d428c61f79bd89cd6/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=25cc21998e546c9a84df754d428c61f79bd89cd6", "patch": "@@ -526,7 +526,7 @@ static const struct tune_params exynosm1_tunings =\n   &generic_branch_cost,\n   4,\t/* memmov_cost  */\n   3,\t/* issue_rate  */\n-  (AARCH64_FUSE_NOTHING), /* fusible_ops  */\n+  (AARCH64_FUSE_AES_AESMC), /* fusible_ops  */\n   4,\t/* function_align.  */\n   4,\t/* jump_align.  */\n   4,\t/* loop_align.  */"}, {"sha": "318b151d64697001d0082295e54486a2ffcaa6e5", "filename": "gcc/config/arm/exynos-m1.md", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cc21998e546c9a84df754d428c61f79bd89cd6/gcc%2Fconfig%2Farm%2Fexynos-m1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cc21998e546c9a84df754d428c61f79bd89cd6/gcc%2Fconfig%2Farm%2Fexynos-m1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fexynos-m1.md?ref=25cc21998e546c9a84df754d428c61f79bd89cd6", "patch": "@@ -248,10 +248,6 @@\n \t  (eq_attr \"type\" \"neon_load4_all_lanes, neon_load4_all_lanes_q\")\n \t    (const_string \"neon_load4_all\")\n \n-\t  (eq_attr \"type\" \"f_stores, f_stored,\\\n-\t\t\t   neon_stp, neon_stp_q\")\n-\t    (const_string \"neon_store\")\n-\n \t  (eq_attr \"type\" \"neon_store1_1reg, neon_store1_1reg_q\")\n \t    (const_string \"neon_store1_1\")\n \n@@ -730,8 +726,14 @@\n (define_insn_reservation\n   \"exynos_m1_neon_store\" 1\n   (and (eq_attr \"tune\" \"exynosm1\")\n-       (eq_attr \"exynos_m1_neon_type\" \"neon_store\"))\n-  \"(em1_fst, em1_st)\")\n+       (eq_attr \"type\" \"f_stores, f_stored, neon_stp\"))\n+  \"em1_sfst\")\n+\n+(define_insn_reservation\n+  \"exynos_m1_neon_store_q\" 3\n+  (and (eq_attr \"tune\" \"exynosm1\")\n+       (eq_attr \"type\" \"neon_stp_q\"))\n+  \"(em1_sfst * 2)\")\n \n (define_insn_reservation\n   \"exynos_m1_neon_store1_1\" 1\n@@ -761,7 +763,7 @@\n   \"exynos_m1_neon_store1_one\" 7\n   (and (eq_attr \"tune\" \"exynosm1\")\n        (eq_attr \"exynos_m1_neon_type\" \"neon_store1_one\"))\n-  \"(em1_fst, em1_st)\")\n+  \"em1_sfst\")\n \n (define_insn_reservation\n   \"exynos_m1_neon_store2\" 7\n@@ -892,7 +894,9 @@\n \n ;; Pre-decrement and post-increment addressing modes update the register quickly.\n ;; TODO: figure out how to tell the addressing mode register from the loaded one.\n-(define_bypass 1 \"exynos_m1_store*\" \"exynos_m1_store*\")\n+(define_bypass 1 \"exynos_m1_store*, exynos_m1_neon_store*\"\n+\t\t \"exynos_m1_store*, exynos_m1_neon_store*,\n+\t\t  exynos_m1_load*, exynos_m1_neon_load*\")\n \n ;; MLAs can feed other MLAs quickly.\n (define_bypass 1 \"exynos_m1_mla*\" \"exynos_m1_mla*\")\n@@ -908,7 +912,6 @@\n (define_bypass 5 \"exynos_m1_neon_fp_mla, exynos_m1_neon_fp_step\"\n \t\t \"exynos_m1_neon_fp_add, exynos_m1_neon_fp_mul,\\\n \t\t  exynos_m1_neon_fp_mla, exynos_m1_neon_fp_step\")\n-\n (define_bypass 3 \"exynos_m1_fp_add\"\n \t\t \"exynos_m1_fp_add, exynos_m1_fp_mul, exynos_m1_fp_mac\")\n (define_bypass 3 \"exynos_m1_neon_fp_add\"\n@@ -947,6 +950,11 @@\n \t\t \"exynos_m1_crypto_simple, exynos_m1_crypto_complex,\\\n \t\t  exynos_m1_crypto_poly*\")\n \n+;; AES{D,E}/AESMC pairs can feed each other instantly.\n+(define_bypass 0 \"exynos_m1_crypto_simple\"\n+\t\t \"exynos_m1_crypto_simple\"\n+\t\t \"aarch_crypto_can_dual_issue\")\n+\n ;; Predicted branches take no time, but mispredicted ones take forever anyway.\n (define_bypass 1 \"exynos_m1_*\"\n \t\t \"exynos_m1_call, exynos_m1_branch\")"}]}