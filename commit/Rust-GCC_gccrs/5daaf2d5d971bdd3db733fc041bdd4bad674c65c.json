{"sha": "5daaf2d5d971bdd3db733fc041bdd4bad674c65c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRhYWYyZDVkOTcxYmRkM2RiNzMzZmMwNDFiZGQ0YmFkNjc0YzY1Yw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2017-02-21T15:37:18Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2017-02-21T15:37:18Z"}, "message": "loop.texi (Loop manipulation): Remove nonexistent tree_ssa_loop_version from the documentation.\n\n\t* doc/loop.texi (Loop manipulation): Remove nonexistent\n\ttree_ssa_loop_version from the documentation.\n\t* cfgloopmanip.c (loop_version): Document CONDITION_BB argument.\n\nFrom-SVN: r245630", "tree": {"sha": "3731ccaafedf5adfe617a9a603c033dcbb009416", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3731ccaafedf5adfe617a9a603c033dcbb009416"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5daaf2d5d971bdd3db733fc041bdd4bad674c65c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5daaf2d5d971bdd3db733fc041bdd4bad674c65c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5daaf2d5d971bdd3db733fc041bdd4bad674c65c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5daaf2d5d971bdd3db733fc041bdd4bad674c65c/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f3ec56d606df6665d93599b2a018db631a13113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f3ec56d606df6665d93599b2a018db631a13113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f3ec56d606df6665d93599b2a018db631a13113"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "05bdf01c8bfb6995bd029548146fb6d5ea730411", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5daaf2d5d971bdd3db733fc041bdd4bad674c65c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5daaf2d5d971bdd3db733fc041bdd4bad674c65c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5daaf2d5d971bdd3db733fc041bdd4bad674c65c", "patch": "@@ -1,3 +1,9 @@\n+2017-02-21  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* doc/loop.texi (Loop manipulation): Remove nonexistent\n+\ttree_ssa_loop_version from the documentation.\n+\t* cfgloopmanip.c (loop_version): Document CONDITION_BB argument.\n+\n 2017-02-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/79494"}, {"sha": "3e34aadd6911f781e558088b188f04074cccaf95", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5daaf2d5d971bdd3db733fc041bdd4bad674c65c/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5daaf2d5d971bdd3db733fc041bdd4bad674c65c/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=5daaf2d5d971bdd3db733fc041bdd4bad674c65c", "patch": "@@ -1689,10 +1689,13 @@ lv_adjust_loop_entry_edge (basic_block first_head, basic_block second_head,\n    This transformation given a condition and a loop, creates\n    -if (condition) { loop_copy1 } else { loop_copy2 },\n    where loop_copy1 is the loop transformed in one way, and loop_copy2\n-   is the loop transformed in another way (or unchanged). 'condition'\n+   is the loop transformed in another way (or unchanged). COND_EXPR\n    may be a run time test for things that were not resolved by static\n    analysis (overlapping ranges (anti-aliasing), alignment, etc.).\n \n+   If non-NULL, CONDITION_BB is set to the basic block containing the\n+   condition.\n+\n    THEN_PROB is the probability of the then edge of the if.  THEN_SCALE\n    is the ratio by that the frequencies in the original loop should\n    be scaled.  ELSE_SCALE is the ratio by that the frequencies in the"}, {"sha": "8535769543d3fa32f68b15272cf9251e6f88dbba", "filename": "gcc/doc/loop.texi", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5daaf2d5d971bdd3db733fc041bdd4bad674c65c/gcc%2Fdoc%2Floop.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5daaf2d5d971bdd3db733fc041bdd4bad674c65c/gcc%2Fdoc%2Floop.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Floop.texi?ref=5daaf2d5d971bdd3db733fc041bdd4bad674c65c", "patch": "@@ -258,12 +258,11 @@ one of the edges entering loop header, thus performing either loop\n unrolling or loop peeling.  @code{can_duplicate_loop_p}\n (@code{can_unroll_loop_p} on GIMPLE) must be true for the duplicated\n loop.\n-@item @code{loop_version}, @code{tree_ssa_loop_version}: These function\n-create a copy of a loop, and a branch before them that selects one of\n-them depending on the prescribed condition.  This is useful for\n-optimizations that need to verify some assumptions in runtime (one of\n-the copies of the loop is usually left unchanged, while the other one is\n-transformed in some way).\n+@item @code{loop_version}: This function creates a copy of a loop, and\n+a branch before them that selects one of them depending on the\n+prescribed condition.  This is useful for optimizations that need to\n+verify some assumptions in runtime (one of the copies of the loop is\n+usually left unchanged, while the other one is transformed in some way).\n @item @code{tree_unroll_loop}: Unrolls the loop, including peeling the\n extra iterations to make the number of iterations divisible by unroll\n factor, updating the exit condition, and removing the exits that now"}]}