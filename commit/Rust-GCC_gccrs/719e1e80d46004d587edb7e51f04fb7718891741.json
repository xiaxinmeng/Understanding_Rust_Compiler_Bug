{"sha": "719e1e80d46004d587edb7e51f04fb7718891741", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE5ZTFlODBkNDYwMDRkNTg3ZWRiN2U1MWYwNGZiNzcxODg5MTc0MQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-03-27T19:37:24Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-03-27T19:37:24Z"}, "message": "Remove MaskExists property from config/*/*.opt files\n\n2012-03-27  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/arm/arm.opt (mapcs): Remove MaskExists.\n\t* config/cris/linux.opt (mno-gotplt): Likewise.\n\t* config/i386/i386.opt (mhard-float): Likewise.\n\t(msse4): Likewise.\n\t(mno-sse4): Likewise.\n\t* config/m68k/m68k.opt (mhard-float): Likewise.\n\t* config/mep/mep.op (mcop32): Likewise.\n\t* config/pa/pa-hpux.opt (msio): Likewise.\n\t* config/pa/pa64-hpux.opt (mgnu-ld): Likewise.\n\t* config/picochip/picochip.opt (mlittle): Likewise.\n\t* config/sh/sh.opt (mrenesas): Likewise.\n\t* config/sparc/long-double-switch.opt (mlong-double-128): Likewise.\n\t* config/sparc/sparc.opt (mhard-float): Likewise.\n\t* config/v850/v850.opt (mv850es): Likewise.\n\t* config/vax/vax.opt (mg-float): Likewise.\n\nFrom-SVN: r185893", "tree": {"sha": "aeb2719af38ce75630e7c7ca81000f5d3e837976", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeb2719af38ce75630e7c7ca81000f5d3e837976"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/719e1e80d46004d587edb7e51f04fb7718891741", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/719e1e80d46004d587edb7e51f04fb7718891741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/719e1e80d46004d587edb7e51f04fb7718891741", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/719e1e80d46004d587edb7e51f04fb7718891741/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "429576acea5fd549984cecf8e0a899c37fc6e8b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429576acea5fd549984cecf8e0a899c37fc6e8b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/429576acea5fd549984cecf8e0a899c37fc6e8b4"}], "stats": {"total": 50, "additions": 34, "deletions": 16}, "files": [{"sha": "2376541cb7e60e136ca225d0e2cefc401f860ee7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -1,3 +1,21 @@\n+2012-03-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/arm/arm.opt (mapcs): Remove MaskExists.\n+\t* config/cris/linux.opt (mno-gotplt): Likewise.\n+\t* config/i386/i386.opt (mhard-float): Likewise.\n+\t(msse4): Likewise.\n+\t(mno-sse4): Likewise.\n+\t* config/m68k/m68k.opt (mhard-float): Likewise.\n+\t* config/mep/mep.op (mcop32): Likewise.\n+\t* config/pa/pa-hpux.opt (msio): Likewise.\n+\t* config/pa/pa64-hpux.opt (mgnu-ld): Likewise.\n+\t* config/picochip/picochip.opt (mlittle): Likewise.\n+\t* config/sh/sh.opt (mrenesas): Likewise.\n+\t* config/sparc/long-double-switch.opt (mlong-double-128): Likewise.\n+\t* config/sparc/sparc.opt (mhard-float): Likewise.\n+\t* config/v850/v850.opt (mv850es): Likewise.\n+\t* config/vax/vax.opt (mg-float): Likewise.\n+\n 2012-03-27  Martin Jambor  <mjambor@suse.cz>\n \n \tPR middle-end/52693"}, {"sha": "e03a16337677cdec729d5692d1fd5bbe9ff7e086", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -59,7 +59,7 @@ Target Report Mask(ABORT_NORETURN)\n Generate a call to abort if a noreturn function returns\n \n mapcs\n-Target RejectNegative Mask(APCS_FRAME) MaskExists Undocumented\n+Target RejectNegative Mask(APCS_FRAME) Undocumented\n \n mapcs-float\n Target Report Mask(APCS_FLOAT)"}, {"sha": "e93bb53a6fdb7bf024b07132b32c1be5ed16e282", "filename": "gcc/config/cris/linux.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fcris%2Flinux.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fcris%2Flinux.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Flinux.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -23,7 +23,7 @@ mlinux\n Target Report RejectNegative Undocumented\n \n mno-gotplt\n-Target Report RejectNegative Mask(AVOID_GOTPLT) MaskExists\n+Target Report RejectNegative Mask(AVOID_GOTPLT)\n Together with -fpic and -fPIC, do not use GOTPLT references\n \n ; There's a small added setup cost with using GOTPLT references"}, {"sha": "965bef657b3832702da2b71107441d8788fc2fa8", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -218,7 +218,7 @@ EnumValue\n Enum(fpmath_unit) String(both) Value({(enum fpmath_unit) (FPMATH_SSE | FPMATH_387)})\n \n mhard-float\n-Target RejectNegative Mask(80387) MaskExists Save\n+Target RejectNegative Mask(80387) Save\n Use hardware fp\n \n mieee-fp\n@@ -469,11 +469,11 @@ Target Report Mask(ISA_SSE4_2) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1 and SSE4.2 built-in functions and code generation\n \n msse4\n-Target RejectNegative Report Mask(ISA_SSE4_2) MaskExists Var(ix86_isa_flags) Save\n+Target RejectNegative Report Mask(ISA_SSE4_2) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1 and SSE4.2 built-in functions and code generation\n \n mno-sse4\n-Target RejectNegative Report InverseMask(ISA_SSE4_1) MaskExists Var(ix86_isa_flags) Save\n+Target RejectNegative Report InverseMask(ISA_SSE4_1) Var(ix86_isa_flags) Save\n Do not support SSE4.1 and SSE4.2 built-in functions and code generation\n \n msse5"}, {"sha": "00bc2d541eff77519ca52c41dff849916d39417d", "filename": "gcc/config/m68k/m68k.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fm68k%2Fm68k.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fm68k%2Fm68k.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -136,7 +136,7 @@ Target RejectNegative\n Generate code for a Fido A\n \n mhard-float\n-Target RejectNegative Mask(HARD_FLOAT) MaskExists\n+Target RejectNegative Mask(HARD_FLOAT)\n Generate code which uses hardware floating point instructions\n \n mid-shared-library"}, {"sha": "0ea19e6efaa2627a69ded76d8ddaa5657122ab2c", "filename": "gcc/config/mep/mep.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fmep%2Fmep.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fmep%2Fmep.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -55,7 +55,7 @@ Target Mask(COP)\n Enable MeP Coprocessor\n \n mcop32\n-Target Mask(COP) MaskExists RejectNegative\n+Target Mask(COP) RejectNegative\n Enable MeP Coprocessor with 32-bit registers\n \n mcop64"}, {"sha": "b709b83bf40b68d611e8827150075d0196e5bad2", "filename": "gcc/config/pa/pa-hpux.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fpa%2Fpa-hpux.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fpa%2Fpa-hpux.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -23,7 +23,7 @@ Variable\n int flag_pa_unix = TARGET_HPUX_11_31 ? 2003 : TARGET_HPUX_11_11 ? 1998 : TARGET_HPUX_10_10 ? 1995 : 1993\n \n msio\n-Target RejectNegative Mask(SIO) MaskExists\n+Target RejectNegative Mask(SIO)\n Generate cpp defines for server IO\n \n munix=93"}, {"sha": "56ca35ea9c6ad0cd5aa1e88437b1a0f1da226033", "filename": "gcc/config/pa/pa64-hpux.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fpa%2Fpa64-hpux.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fpa%2Fpa64-hpux.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa64-hpux.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -19,7 +19,7 @@\n ; <http://www.gnu.org/licenses/>.\n \n mgnu-ld\n-Target RejectNegative Mask(GNU_LD) MaskExists\n+Target RejectNegative Mask(GNU_LD)\n Assume code will be linked by GNU ld\n \n mhp-ld"}, {"sha": "a4b25e52f50f3c4fdab6a71c471fee0a8c795415", "filename": "gcc/config/picochip/picochip.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fpicochip%2Fpicochip.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fpicochip%2Fpicochip.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -43,4 +43,4 @@ Target Mask(INEFFICIENT_WARNINGS)\n Generate warnings when inefficient code is known to be generated.\n \n minefficient\n-Target Mask(INEFFICIENT_WARNINGS) MaskExists Undocumented\n+Target Mask(INEFFICIENT_WARNINGS) Undocumented"}, {"sha": "474203d6adbb70f3934628dadb2322ac30631b89", "filename": "gcc/config/rs6000/sysv4.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Frs6000%2Fsysv4.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Frs6000%2Fsysv4.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -66,7 +66,7 @@ Target Report RejectNegative Mask(LITTLE_ENDIAN)\n Produce little endian code\n \n mlittle\n-Target Report RejectNegative Mask(LITTLE_ENDIAN) MaskExists\n+Target Report RejectNegative Mask(LITTLE_ENDIAN)\n Produce little endian code\n \n mbig-endian"}, {"sha": "3ab2c51be4a220a2202c6ca6865e5338e232e9b3", "filename": "gcc/config/sh/sh.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fsh%2Fsh.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fsh%2Fsh.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -316,7 +316,7 @@ Target Report RejectNegative Mask(RELAX)\n Shorten address references during linking\n \n mrenesas\n-Target Mask(HITACHI) MaskExists\n+Target Mask(HITACHI)\n Follow Renesas (formerly Hitachi) / SuperH calling conventions\n \n msoft-atomic"}, {"sha": "8ad32bd6fe19c0513856b034daafe58c803fed54", "filename": "gcc/config/sparc/long-double-switch.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fsparc%2Flong-double-switch.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fsparc%2Flong-double-switch.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flong-double-switch.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -19,7 +19,7 @@\n ; <http://www.gnu.org/licenses/>.\n \n mlong-double-128\n-Target Report RejectNegative Mask(LONG_DOUBLE_128) MaskExists\n+Target Report RejectNegative Mask(LONG_DOUBLE_128)\n Use 128-bit long double\n \n mlong-double-64"}, {"sha": "58ba6b79da1e86db3ee4fc74346f79ad18f049bb", "filename": "gcc/config/sparc/sparc.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fsparc%2Fsparc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fsparc%2Fsparc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -30,7 +30,7 @@ Target Report Mask(FPU)\n Use hardware FP\n \n mhard-float\n-Target RejectNegative Mask(FPU) MaskExists\n+Target RejectNegative Mask(FPU)\n Use hardware FP\n \n msoft-float"}, {"sha": "8fe244b03121f7fd2541d25281bda4fc57eab843", "filename": "gcc/config/v850/v850.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fv850%2Fv850.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fv850%2Fv850.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -102,7 +102,7 @@ Target RejectNegative Mask(V850E1)\n Compile for the v850e1 processor\n \n mv850es\n-Target RejectNegative Mask(V850E1) MaskExists\n+Target RejectNegative Mask(V850E1)\n Compile for the v850es variant of the v850e1\n \n mv850e2"}, {"sha": "83527adfbea28278ec0d663b0a19db8bb812685b", "filename": "gcc/config/vax/vax.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fvax%2Fvax.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e1e80d46004d587edb7e51f04fb7718891741/gcc%2Fconfig%2Fvax%2Fvax.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.opt?ref=719e1e80d46004d587edb7e51f04fb7718891741", "patch": "@@ -31,7 +31,7 @@ Target RejectNegative Mask(G_FLOAT)\n Generate GFLOAT double precision code\n \n mg-float\n-Target RejectNegative Mask(G_FLOAT) MaskExists\n+Target RejectNegative Mask(G_FLOAT)\n Generate GFLOAT double precision code\n \n mgnu"}]}