{"sha": "23c799b1580c919c709a8144c27b53e013cd65e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjNzk5YjE1ODBjOTE5YzcwOWE4MTQ0YzI3YjUzZTAxM2NkNjVlNw==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@adacore.com", "date": "2010-10-22T10:15:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-22T10:15:36Z"}, "message": "cstand.adb (Build_Float_Type): Set Float_Rep according to platform.\n\n2010-10-22  Geert Bosch  <bosch@adacore.com>\n\n\t* cstand.adb (Build_Float_Type): Set Float_Rep according to platform.\n\t* einfo.ads (Float_Rep): New attribute.\n\t(Float_Rep_Kind): Move from body. Add comments.\n\t* einfo.adb (Float_Rep_Kind): Move to spec\n\t(Float_Rep): Now a real field instead of local function.\n\t(Set_Float_Rep): New procedure to set floating point representation\n\t(Set_Vax_Float): Remove.\n\t(Write_Entity_Flags): Remove Vax_Float flag.\n\t(Write_Field10_Name): Add E_Floating_Point_Type case for Float_Rep.\n\t* exp_attr.adb (Attribute_Valid): Use case statement for representation\n\tspecific processing.\n\t* sem_ch3.adb (Build_Derived_Numeric_Type,\n\tFloating_Point_Type_Declaration): Set Float_Rep instead of Vax_Float\n\tattribute.\n\t* sem_util.ads, sem_util.adb (Is_AAMP_Float): Remove.\n\t* sem_vfpt.adb (Set_D_Float, Set_F_Float, Set_G_Float, Set_IEEE_Long,\n\tSet_IEEE_Short): Set Float_Rep instead of Vax_Float attribute.\n\nFrom-SVN: r165816", "tree": {"sha": "552343c1a233a7faa791e3cc6cd60dc65e2dfa77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/552343c1a233a7faa791e3cc6cd60dc65e2dfa77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23c799b1580c919c709a8144c27b53e013cd65e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c799b1580c919c709a8144c27b53e013cd65e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23c799b1580c919c709a8144c27b53e013cd65e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c799b1580c919c709a8144c27b53e013cd65e7/comments", "author": null, "committer": null, "parents": [{"sha": "b4ca2d2c08cde1619a2394a02773712ded61dbce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ca2d2c08cde1619a2394a02773712ded61dbce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4ca2d2c08cde1619a2394a02773712ded61dbce"}], "stats": {"total": 225, "additions": 114, "deletions": 111}, "files": [{"sha": "f9c259f81f027c1633d5432bfcb67ba163831fe0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=23c799b1580c919c709a8144c27b53e013cd65e7", "patch": "@@ -1,3 +1,23 @@\n+2010-10-22  Geert Bosch  <bosch@adacore.com>\n+\n+\t* cstand.adb (Build_Float_Type): Set Float_Rep according to platform.\n+\t* einfo.ads (Float_Rep): New attribute.\n+\t(Float_Rep_Kind): Move from body. Add comments.\n+\t* einfo.adb (Float_Rep_Kind): Move to spec\n+\t(Float_Rep): Now a real field instead of local function.\n+\t(Set_Float_Rep): New procedure to set floating point representation\n+\t(Set_Vax_Float): Remove.\n+\t(Write_Entity_Flags): Remove Vax_Float flag.\n+\t(Write_Field10_Name): Add E_Floating_Point_Type case for Float_Rep.\n+\t* exp_attr.adb (Attribute_Valid): Use case statement for representation\n+\tspecific processing.\n+\t* sem_ch3.adb (Build_Derived_Numeric_Type,\n+\tFloating_Point_Type_Declaration): Set Float_Rep instead of Vax_Float\n+\tattribute.\n+\t* sem_util.ads, sem_util.adb (Is_AAMP_Float): Remove.\n+\t* sem_vfpt.adb (Set_D_Float, Set_F_Float, Set_G_Float, Set_IEEE_Long,\n+\tSet_IEEE_Short): Set Float_Rep instead of Vax_Float attribute.\n+\n 2010-10-22  Robert Dewar  <dewar@adacore.com>\n \n \t* sprint.adb: Minor reformatting."}, {"sha": "2f057ffe8886853f24d06ead0d9bde8d28424a84", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=23c799b1580c919c709a8144c27b53e013cd65e7", "patch": "@@ -140,8 +140,17 @@ package body CStand is\n       Set_Type_Definition (Parent (E),\n         Make_Floating_Point_Definition (Stloc,\n           Digits_Expression => Make_Integer (UI_From_Int (Digs))));\n+\n       Set_Ekind                      (E, E_Floating_Point_Type);\n       Set_Etype                      (E, E);\n+\n+      if AAMP_On_Target then\n+         Set_Float_Rep (E, AAMP);\n+\n+      else\n+         Set_Float_Rep (E, IEEE_Binary);\n+      end if;\n+\n       Init_Size                      (E, Siz);\n       Set_Elem_Alignment             (E);\n       Init_Digits_Value              (E, Digs);\n@@ -1874,9 +1883,9 @@ package body CStand is\n \n    begin\n       --  Note: for the call from Cstand to initially create the types in\n-      --  Standard, Vax_Float will always be False. Circuitry in Sem_Vfpt\n-      --  will adjust these types appropriately in the Vax_Float case if a\n-      --  pragma Float_Representation (VAX_Float) is used.\n+      --  Standard, Float_Rep will never be VAX_Native. Circuitry in Sem_Vfpt\n+      --  will adjust these types appropriately VAX_Native if a pragma\n+      --  Float_Representation (VAX_Float) is used.\n \n       H := Make_Float_Literal (Stloc, Radix, Significand, Exponent);\n       L := Make_Float_Literal (Stloc, Radix, -Significand, Exponent);"}, {"sha": "8da546ff355b2579a1d732c29c7ca2a742626a25", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 14, "deletions": 27, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=23c799b1580c919c709a8144c27b53e013cd65e7", "patch": "@@ -37,7 +37,6 @@ with Nlists;   use Nlists;\n with Output;   use Output;\n with Sinfo;    use Sinfo;\n with Stand;    use Stand;\n-with Targparm; use Targparm;\n \n package body Einfo is\n \n@@ -88,6 +87,7 @@ package body Einfo is\n \n    --    Direct_Primitive_Operations     Elist10\n    --    Discriminal_Link                Node10\n+   --    Float_Rep                       Uint10 (but returns Float_Rep_Kind)\n    --    Handler_Records                 List10\n    --    Normalized_Position_Max         Uint10\n \n@@ -406,7 +406,7 @@ package body Einfo is\n    --    Is_Compilation_Unit             Flag149\n    --    Has_Pragma_Elaborate_Body       Flag150\n \n-   --    Vax_Float                       Flag151\n+   --    (unused)                        Flag151\n    --    Entry_Accepted                  Flag152\n    --    Is_Obsolescent                  Flag153\n    --    Has_Per_Object_Constraint       Flag154\n@@ -521,12 +521,6 @@ package body Einfo is\n    --    (unused)                        Flag253\n    --    (unused)                        Flag254\n \n-   -----------------\n-   -- Local types --\n-   -----------------\n-\n-   type Float_Rep_Kind is (IEEE_Binary, VAX_Native, AAMP);\n-\n    -----------------------\n    -- Local subprograms --\n    -----------------------\n@@ -535,23 +529,14 @@ package body Einfo is\n    --  Returns the attribute definition clause for Id whose name is Rep_Name.\n    --  Returns Empty if no matching attribute definition clause found for Id.\n \n-   function Float_Rep (Id : E) return Float_Rep_Kind;\n-   --  Returns the floating point representation used for the given type\n-\n    ---------------\n    -- Float_Rep --\n    ---------------\n \n-   function Float_Rep (Id : E) return Float_Rep_Kind is\n+   function Float_Rep (Id : E) return F is\n       pragma Assert (Is_Floating_Point_Type (Id));\n    begin\n-      if AAMP_On_Target then\n-         return AAMP;\n-      elsif Vax_Float (Id) then\n-         return VAX_Native;\n-      else\n-         return IEEE_Binary;\n-      end if;\n+      return F'Val (UI_To_Int (Uint10 (Base_Type (Id))));\n    end Float_Rep;\n \n    ----------------\n@@ -2873,7 +2858,7 @@ package body Einfo is\n \n    function Vax_Float (Id : E) return B is\n    begin\n-      return Flag151 (Base_Type (Id));\n+      return Is_Floating_Point_Type (Id) and then Float_Rep (Id) = VAX_Native;\n    end Vax_Float;\n \n    function Warnings_Off (Id : E) return B is\n@@ -3685,6 +3670,12 @@ package body Einfo is\n       Set_Node6 (Id, V);\n    end Set_First_Rep_Item;\n \n+   procedure Set_Float_Rep (Id : E; V : F) is\n+      pragma Assert (Ekind (Id) = E_Floating_Point_Type);\n+   begin\n+      Set_Uint10 (Id, UI_From_Int (F'Pos (V)));\n+   end Set_Float_Rep;\n+\n    procedure Set_Freeze_Node (Id : E; V : N) is\n    begin\n       Set_Node7 (Id, V);\n@@ -5375,12 +5366,6 @@ package body Einfo is\n       Set_Flag222 (Id, V);\n    end Set_Used_As_Generic_Actual;\n \n-   procedure Set_Vax_Float (Id : E; V : B := True) is\n-   begin\n-      pragma Assert (Id = Base_Type (Id));\n-      Set_Flag151 (Id, V);\n-   end Set_Vax_Float;\n-\n    procedure Set_Warnings_Off (Id : E; V : B := True) is\n    begin\n       Set_Flag96 (Id, V);\n@@ -7499,7 +7484,6 @@ package body Einfo is\n       W (\"Universal_Aliasing\",              Flag216 (Id));\n       W (\"Used_As_Generic_Actual\",          Flag222 (Id));\n       W (\"Uses_Sec_Stack\",                  Flag95  (Id));\n-      W (\"Vax_Float\",                       Flag151 (Id));\n       W (\"Warnings_Off\",                    Flag96  (Id));\n       W (\"Warnings_Off_Used\",               Flag236 (Id));\n       W (\"Warnings_Off_Used_Unmodified\",    Flag237 (Id));\n@@ -7735,6 +7719,9 @@ package body Einfo is\n               Concurrent_Kind                              =>\n             Write_Str (\"Direct_Primitive_Operations\");\n \n+         when Float_Kind                                 =>\n+            Write_Str (\"Float_Rep\");\n+\n          when E_In_Parameter                               |\n               E_Constant                                   =>\n             Write_Str (\"Discriminal_Link\");"}, {"sha": "c7a16bc7b3110344a51f5e87f06240e4085ea969", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=23c799b1580c919c709a8144c27b53e013cd65e7", "patch": "@@ -1264,6 +1264,11 @@ package Einfo is\n --       Note in particular that size clauses are present only for this\n --       purpose, and should only be accessed if Has_Size_Clause is set.\n \n+--    Float_Rep (Uint8)\n+--       Present in floating-point entities. Contains a value of type\n+--       Float_Rep_Kind. Together with the Digits_Value uniquely defines\n+--       the floating-point representation to be used.\n+\n --    Freeze_Node (Node7)\n --       Present in all entities. If there is an associated freeze node for\n --       the entity, this field references this freeze node. If no freeze\n@@ -3786,11 +3791,6 @@ package Einfo is\n --       entries). Set to True when secondary stack is used in this scope and\n --       must be released on exit unless Sec_Stack_Needed_For_Return is set.\n \n---    Vax_Float (Flag151) [base type only]\n---       Present in all type and subtype entities. Set only on the base type of\n---       float types with Vax format. The particular format is determined by\n---       the Digits_Value value which is 6,9,15 for F_Float, D_Float, G_Float.\n-\n --    Warnings_Off (Flag96)\n --       Present in all entities. Set if a pragma Warnings (Off, entity-name)\n --       is used to suppress warnings for a given entity. It is also used by\n@@ -5094,6 +5094,7 @@ package Einfo is\n    --  E_Floating_Point_Type\n    --  E_Floating_Point_Subtype\n    --    Digits_Value                        (Uint17)\n+   --    Float_Rep                           (Uint8)    (Float_Rep_Kind)\n    --    Machine_Emax_Value                  (synth)\n    --    Machine_Emin_Value                  (synth)\n    --    Machine_Mantissa_Value              (synth)\n@@ -5108,6 +5109,7 @@ package Einfo is\n    --    Scalar_Range                        (Node20)\n    --    Type_Low_Bound                      (synth)\n    --    Type_High_Bound                     (synth)\n+   --    Vax_Float                           (synth)\n    --    (plus type attributes)\n \n    --  E_Function\n@@ -5669,6 +5671,15 @@ package Einfo is\n       Calign_Component_Size_4, -- natural for size <= 4, 4 for size >= 4\n       Calign_Storage_Unit);    -- all components byte aligned\n \n+   ----------------------------------\n+   -- Floating Point Repesentation --\n+   ----------------------------------\n+\n+   type Float_Rep_Kind is (\n+      IEEE_Binary,  -- IEEE 754p conform binary format\n+      VAX_Native,   -- VAX D, F, G or H format\n+      AAMP);        -- AAMP format\n+\n    ---------------\n    -- Iterators --\n    ---------------\n@@ -5848,6 +5859,7 @@ package Einfo is\n    subtype B is Boolean;\n    subtype C is Component_Alignment_Kind;\n    subtype E is Entity_Id;\n+   subtype F is Float_Rep_Kind;\n    subtype M is Mechanism_Type;\n    subtype N is Node_Id;\n    subtype U is Uint;\n@@ -5953,6 +5965,7 @@ package Einfo is\n    function First_Optional_Parameter            (Id : E) return E;\n    function First_Private_Entity                (Id : E) return E;\n    function First_Rep_Item                      (Id : E) return N;\n+   function Float_Rep                           (Id : E) return F;\n    function Freeze_Node                         (Id : E) return N;\n    function From_With_Type                      (Id : E) return B;\n    function Full_View                           (Id : E) return E;\n@@ -6532,6 +6545,7 @@ package Einfo is\n    procedure Set_First_Optional_Parameter        (Id : E; V : E);\n    procedure Set_First_Private_Entity            (Id : E; V : E);\n    procedure Set_First_Rep_Item                  (Id : E; V : N);\n+   procedure Set_Float_Rep                       (Id : E; V : F);\n    procedure Set_Freeze_Node                     (Id : E; V : N);\n    procedure Set_From_With_Type                  (Id : E; V : B := True);\n    procedure Set_Full_View                       (Id : E; V : E);\n@@ -6825,7 +6839,6 @@ package Einfo is\n    procedure Set_Unset_Reference                 (Id : E; V : N);\n    procedure Set_Used_As_Generic_Actual          (Id : E; V : B := True);\n    procedure Set_Uses_Sec_Stack                  (Id : E; V : B := True);\n-   procedure Set_Vax_Float                       (Id : E; V : B := True);\n    procedure Set_Warnings_Off                    (Id : E; V : B := True);\n    procedure Set_Warnings_Off_Used               (Id : E; V : B := True);\n    procedure Set_Warnings_Off_Used_Unmodified    (Id : E; V : B := True);\n@@ -7558,7 +7571,6 @@ package Einfo is\n    pragma Inline (Unset_Reference);\n    pragma Inline (Used_As_Generic_Actual);\n    pragma Inline (Uses_Sec_Stack);\n-   pragma Inline (Vax_Float);\n    pragma Inline (Warnings_Off);\n    pragma Inline (Warnings_Off_Used);\n    pragma Inline (Warnings_Off_Used_Unmodified);\n@@ -7952,7 +7964,6 @@ package Einfo is\n    pragma Inline (Set_Unset_Reference);\n    pragma Inline (Set_Used_As_Generic_Actual);\n    pragma Inline (Set_Uses_Sec_Stack);\n-   pragma Inline (Set_Vax_Float);\n    pragma Inline (Set_Warnings_Off);\n    pragma Inline (Set_Warnings_Off_Used);\n    pragma Inline (Set_Warnings_Off_Used_Unmodified);"}, {"sha": "4da03df418a41bfeba8a4bd9b14d0a0db534aa9f", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 42, "deletions": 41, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=23c799b1580c919c709a8144c27b53e013cd65e7", "patch": "@@ -4771,53 +4771,54 @@ package body Exp_Attr is\n                Ftp : Entity_Id;\n \n             begin\n-               --  For vax fpt types, call appropriate routine in special vax\n-               --  floating point unit. We do not have to worry about loads in\n-               --  this case, since these types have no signalling NaN's.\n \n-               if Vax_Float (Btyp) then\n-                  Expand_Vax_Valid (N);\n+               case Float_Rep (Btyp) is\n+                  --  For vax fpt types, call appropriate routine in special\n+                  --  vax floating point unit. We do not have to worry about\n+                  --  loads in this case, since these types have no signalling\n+                  --  NaN's.\n \n-               --  The AAMP back end handles Valid for floating-point types\n+                  when VAX_Native => Expand_Vax_Valid (N);\n \n-               elsif Is_AAMP_Float (Btyp) then\n-                  Analyze_And_Resolve (Pref, Ptyp);\n-                  Set_Etype (N, Standard_Boolean);\n-                  Set_Analyzed (N);\n+                  --  The AAMP back end handles Valid for floating-point types\n \n-               --  Non VAX float case\n+                  when AAMP =>\n+                     Analyze_And_Resolve (Pref, Ptyp);\n+                     Set_Etype (N, Standard_Boolean);\n+                     Set_Analyzed (N);\n \n-               else\n-                  Find_Fat_Info (Ptyp, Ftp, Pkg);\n-\n-                  --  If the floating-point object might be unaligned, we need\n-                  --  to call the special routine Unaligned_Valid, which makes\n-                  --  the needed copy, being careful not to load the value into\n-                  --  any floating-point register. The argument in this case is\n-                  --  obj'Address (see Unaligned_Valid routine in Fat_Gen).\n-\n-                  if Is_Possibly_Unaligned_Object (Pref) then\n-                     Expand_Fpt_Attribute\n-                       (N, Pkg, Name_Unaligned_Valid,\n-                        New_List (\n-                          Make_Attribute_Reference (Loc,\n-                            Prefix => Relocate_Node (Pref),\n-                            Attribute_Name => Name_Address)));\n+                  when IEEE_Binary =>\n+                     Find_Fat_Info (Ptyp, Ftp, Pkg);\n \n-                  --  In the normal case where we are sure the object is\n-                  --  aligned, we generate a call to Valid, and the argument in\n-                  --  this case is obj'Unrestricted_Access (after converting\n-                  --  obj to the right floating-point type).\n+                     --  If the floating-point object might be unaligned, we\n+                     --  need to call the special routine Unaligned_Valid,\n+                     --  which makes the needed copy, being careful not to\n+                     --  load the value into any floating-point register.\n+                     --  The argument in this case is obj'Address (see\n+                     --  Unaligned_Valid routine in Fat_Gen).\n \n-                  else\n-                     Expand_Fpt_Attribute\n-                       (N, Pkg, Name_Valid,\n-                        New_List (\n-                          Make_Attribute_Reference (Loc,\n-                            Prefix => Unchecked_Convert_To (Ftp, Pref),\n-                            Attribute_Name => Name_Unrestricted_Access)));\n-                  end if;\n-               end if;\n+                     if Is_Possibly_Unaligned_Object (Pref) then\n+                        Expand_Fpt_Attribute\n+                          (N, Pkg, Name_Unaligned_Valid,\n+                           New_List (\n+                             Make_Attribute_Reference (Loc,\n+                               Prefix => Relocate_Node (Pref),\n+                               Attribute_Name => Name_Address)));\n+\n+                     --  In the normal case where we are sure the object is\n+                     --  aligned, we generate a call to Valid, and the argument\n+                     --  in this case is obj'Unrestricted_Access (after\n+                     --  converting obj to the right floating-point type).\n+\n+                     else\n+                        Expand_Fpt_Attribute\n+                          (N, Pkg, Name_Valid,\n+                           New_List (\n+                             Make_Attribute_Reference (Loc,\n+                               Prefix => Unchecked_Convert_To (Ftp, Pref),\n+                               Attribute_Name => Name_Unrestricted_Access)));\n+                     end if;\n+               end case;\n \n                --  One more task, we still need a range check. Required\n                --  only if we have a constraint, since the Valid routine\n@@ -5468,7 +5469,7 @@ package body Exp_Attr is\n                raise Program_Error;\n          end case;\n \n-      --  If neither the base type nor the root type is VAX_Float then VAX\n+      --  If neither the base type nor the root type is VAX_Native then VAX\n       --  float is out of the picture, and we can just use the root type.\n \n       else"}, {"sha": "8b1398c25a6ea138676d5a6bc534769f24b43489", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=23c799b1580c919c709a8144c27b53e013cd65e7", "patch": "@@ -5646,7 +5646,7 @@ package body Sem_Ch3 is\n          --  already have been set if there was a constraint present.\n \n          Set_Digits_Value (Implicit_Base, Digits_Value (Parent_Base));\n-         Set_Vax_Float    (Implicit_Base, Vax_Float    (Parent_Base));\n+         Set_Float_Rep    (Implicit_Base, Float_Rep    (Parent_Base));\n \n          if No_Constraint then\n             Set_Digits_Value (Derived_Type, Digits_Value (Parent_Type));\n@@ -14730,7 +14730,7 @@ package body Sem_Ch3 is\n       Set_RM_Size        (Implicit_Base, RM_Size        (Base_Typ));\n       Set_First_Rep_Item (Implicit_Base, First_Rep_Item (Base_Typ));\n       Set_Digits_Value   (Implicit_Base, Digits_Value   (Base_Typ));\n-      Set_Vax_Float      (Implicit_Base, Vax_Float      (Base_Typ));\n+      Set_Float_Rep      (Implicit_Base, Float_Rep      (Base_Typ));\n \n       Set_Ekind          (T, E_Floating_Point_Subtype);\n       Set_Etype          (T, Implicit_Base);"}, {"sha": "4e3d3d43b6887c825991d1050af66cf0b52d5cec", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=23c799b1580c919c709a8144c27b53e013cd65e7", "patch": "@@ -5703,18 +5703,6 @@ package body Sem_Util is\n       end loop;\n    end Inspect_Deferred_Constant_Completion;\n \n-   -------------------\n-   -- Is_AAMP_Float --\n-   -------------------\n-\n-   function Is_AAMP_Float (E : Entity_Id) return Boolean is\n-      pragma Assert (Is_Type (E));\n-   begin\n-      return AAMP_On_Target\n-         and then Is_Floating_Point_Type (E)\n-         and then E = Base_Type (E);\n-   end Is_AAMP_Float;\n-\n    -----------------------------\n    -- Is_Actual_Out_Parameter --\n    -----------------------------"}, {"sha": "72adedb3c9f273caa84334f008206c97f683f38d", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=23c799b1580c919c709a8144c27b53e013cd65e7", "patch": "@@ -653,14 +653,6 @@ package Sem_Util is\n    --  whether they have been completed by a full constant declaration or an\n    --  Import pragma. Emit the error message if that is not the case.\n \n-   function Is_AAMP_Float (E : Entity_Id) return Boolean;\n-   --  Defined for all type entities. Returns True only for the base type of\n-   --  float types with AAMP format. The particular format is determined by the\n-   --  Digits_Value value which is 6 for the 32-bit floating point type, or 9\n-   --  for the 48-bit type. This is not an attribute function (like VAX_Float)\n-   --  in order to not use up an extra flag and to prevent the dependency of\n-   --  Einfo on Targparm which would be required for a synthesized attribute.\n-\n    function Is_Actual_Out_Parameter (N : Node_Id) return Boolean;\n    --  Determines if N is an actual parameter of out mode in a subprogram call\n "}, {"sha": "0b466298b1f17cc04524ba829a28a88bd67c67e6", "filename": "gcc/ada/sem_vfpt.adb", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Fsem_vfpt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c799b1580c919c709a8144c27b53e013cd65e7/gcc%2Fada%2Fsem_vfpt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_vfpt.adb?ref=23c799b1580c919c709a8144c27b53e013cd65e7", "patch": "@@ -37,12 +37,11 @@ package body Sem_VFpt is\n \n    procedure Set_D_Float (E : Entity_Id) is\n       VAXDF_Digits : constant := 9;\n-\n    begin\n       Init_Size         (Base_Type (E), 64);\n       Init_Alignment    (Base_Type (E));\n       Init_Digits_Value (Base_Type (E), VAXDF_Digits);\n-      Set_Vax_Float     (Base_Type (E), True);\n+      Set_Float_Rep     (Base_Type (E), VAX_Native);\n       Set_Float_Bounds  (Base_Type (E));\n \n       Init_Size         (E, 64);\n@@ -57,12 +56,11 @@ package body Sem_VFpt is\n \n    procedure Set_F_Float (E : Entity_Id) is\n       VAXFF_Digits : constant := 6;\n-\n    begin\n       Init_Size         (Base_Type (E), 32);\n       Init_Alignment    (Base_Type (E));\n       Init_Digits_Value (Base_Type (E), VAXFF_Digits);\n-      Set_Vax_Float     (Base_Type (E), True);\n+      Set_Float_Rep     (Base_Type (E), VAX_Native);\n       Set_Float_Bounds  (Base_Type (E));\n \n       Init_Size         (E, 32);\n@@ -77,12 +75,11 @@ package body Sem_VFpt is\n \n    procedure Set_G_Float (E : Entity_Id) is\n       VAXGF_Digits : constant := 15;\n-\n    begin\n       Init_Size         (Base_Type (E), 64);\n       Init_Alignment    (Base_Type (E));\n       Init_Digits_Value (Base_Type (E), VAXGF_Digits);\n-      Set_Vax_Float     (Base_Type (E), True);\n+      Set_Float_Rep     (Base_Type (E), VAX_Native);\n       Set_Float_Bounds  (Base_Type (E));\n \n       Init_Size         (E, 64);\n@@ -97,12 +94,11 @@ package body Sem_VFpt is\n \n    procedure Set_IEEE_Long (E : Entity_Id) is\n       IEEEL_Digits : constant := 15;\n-\n    begin\n       Init_Size         (Base_Type (E), 64);\n       Init_Alignment    (Base_Type (E));\n       Init_Digits_Value (Base_Type (E), IEEEL_Digits);\n-      Set_Vax_Float     (Base_Type (E), False);\n+      Set_Float_Rep     (Base_Type (E), IEEE_Binary);\n       Set_Float_Bounds  (Base_Type (E));\n \n       Init_Size         (E, 64);\n@@ -117,12 +113,11 @@ package body Sem_VFpt is\n \n    procedure Set_IEEE_Short (E : Entity_Id) is\n       IEEES_Digits : constant := 6;\n-\n    begin\n       Init_Size         (Base_Type (E), 32);\n       Init_Alignment    (Base_Type (E));\n       Init_Digits_Value (Base_Type (E), IEEES_Digits);\n-      Set_Vax_Float     (Base_Type (E), False);\n+      Set_Float_Rep     (Base_Type (E), IEEE_Binary);\n       Set_Float_Bounds  (Base_Type (E));\n \n       Init_Size         (E, 32);"}]}