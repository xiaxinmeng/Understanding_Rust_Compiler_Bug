{"sha": "0cc3d14ec1545d5feb65396bc7915e1795fb2894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNjM2QxNGVjMTU0NWQ1ZmViNjUzOTZiYzc5MTVlMTc5NWZiMjg5NA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-22T00:00:42Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-22T00:00:42Z"}, "message": "Check for errors when building map construction.\n\nFrom-SVN: r168148", "tree": {"sha": "95fe75c5743fe19da36a4a19157c472b4dfd84d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95fe75c5743fe19da36a4a19157c472b4dfd84d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cc3d14ec1545d5feb65396bc7915e1795fb2894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cc3d14ec1545d5feb65396bc7915e1795fb2894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cc3d14ec1545d5feb65396bc7915e1795fb2894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cc3d14ec1545d5feb65396bc7915e1795fb2894/comments", "author": null, "committer": null, "parents": [{"sha": "522c4f1f1ee54615bac9da3973d7fa719161a0c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522c4f1f1ee54615bac9da3973d7fa719161a0c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/522c4f1f1ee54615bac9da3973d7fa719161a0c3"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "10aeddedc20fe698fe6655934ebf20b7ebc6d951", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc3d14ec1545d5feb65396bc7915e1795fb2894/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc3d14ec1545d5feb65396bc7915e1795fb2894/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=0cc3d14ec1545d5feb65396bc7915e1795fb2894", "patch": "@@ -11181,13 +11181,19 @@ Map_construction_expression::do_get_tree(Translate_context* context)\n \n   Type* key_type = mt->key_type();\n   tree id = get_identifier(\"__key\");\n-  tree key_field = build_decl(loc, FIELD_DECL, id, key_type->get_tree(gogo));\n+  tree key_type_tree = key_type->get_tree(gogo);\n+  if (key_type_tree == error_mark_node)\n+    return error_mark_node;\n+  tree key_field = build_decl(loc, FIELD_DECL, id, key_type_tree);\n   DECL_CONTEXT(key_field) = struct_type;\n   TYPE_FIELDS(struct_type) = key_field;\n \n   Type* val_type = mt->val_type();\n   id = get_identifier(\"__val\");\n-  tree val_field = build_decl(loc, FIELD_DECL, id, val_type->get_tree(gogo));\n+  tree val_type_tree = val_type->get_tree(gogo);\n+  if (val_type_tree == error_mark_node)\n+    return error_mark_node;\n+  tree val_field = build_decl(loc, FIELD_DECL, id, val_type_tree);\n   DECL_CONTEXT(val_field) = struct_type;\n   DECL_CHAIN(key_field) = val_field;\n \n@@ -11288,6 +11294,8 @@ Map_construction_expression::do_get_tree(Translate_context* context)\n   tree descriptor = gogo->map_descriptor(mt);\n \n   tree type_tree = this->type_->get_tree(gogo);\n+  if (type_tree == error_mark_node)\n+    return error_mark_node;\n \n   static tree construct_map_fndecl;\n   tree call = Gogo::call_builtin(&construct_map_fndecl,"}]}