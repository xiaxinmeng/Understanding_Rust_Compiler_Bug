{"sha": "dbb7247b9a209ac3afef3c5174ba552c1f941bec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJiNzI0N2I5YTIwOWFjM2FmZWYzYzUxNzRiYTU1MmMxZjk0MWJlYw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-06-27T20:59:12Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-06-27T20:59:12Z"}, "message": "re PR fortran/49466 (Memory leak with assignment of extended derived types)\n\n2011-06-27  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/49466\n\t* trans-array.c (structure_alloc_comps): Make sure sub-components\n\tand extended types are correctly deallocated.\n\n\n2011-06-27  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/49466\n\t* gfortran.dg/allocatable_scalar_9.f90: Modified.\n\t* gfortran.dg/extends_14.f03: Modified.\n\nFrom-SVN: r175563", "tree": {"sha": "b0d8e98279bfeac6c3b975fee2ba9fbbd2b62c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0d8e98279bfeac6c3b975fee2ba9fbbd2b62c6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbb7247b9a209ac3afef3c5174ba552c1f941bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb7247b9a209ac3afef3c5174ba552c1f941bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb7247b9a209ac3afef3c5174ba552c1f941bec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb7247b9a209ac3afef3c5174ba552c1f941bec/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d8d1543f583eb26342b90bae27fe099062d6be4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d8d1543f583eb26342b90bae27fe099062d6be4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d8d1543f583eb26342b90bae27fe099062d6be4"}], "stats": {"total": 62, "additions": 53, "deletions": 9}, "files": [{"sha": "ed9c705691c6942c7bb454bc89d8699e33948307", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb7247b9a209ac3afef3c5174ba552c1f941bec/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb7247b9a209ac3afef3c5174ba552c1f941bec/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=dbb7247b9a209ac3afef3c5174ba552c1f941bec", "patch": "@@ -1,3 +1,9 @@\n+2011-06-27  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/49466\n+\t* trans-array.c (structure_alloc_comps): Make sure sub-components\n+\tand extended types are correctly deallocated.\n+\n 2011-06-21  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* trans-openmp.c: Add sync_ or SYNC__ to builtin names."}, {"sha": "408b73a9a681a8eba1fd4f91c7a221adb61c0c11", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb7247b9a209ac3afef3c5174ba552c1f941bec/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb7247b9a209ac3afef3c5174ba552c1f941bec/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=dbb7247b9a209ac3afef3c5174ba552c1f941bec", "patch": "@@ -6682,18 +6682,22 @@ structure_alloc_comps (gfc_symbol * der_type, tree decl,\n       switch (purpose)\n \t{\n \tcase DEALLOCATE_ALLOC_COMP:\n+\t  if (cmp_has_alloc_comps && !c->attr.pointer)\n+\t    {\n+\t      /* Do not deallocate the components of ultimate pointer\n+\t\t components.  */\n+\t      comp = fold_build3_loc (input_location, COMPONENT_REF, ctype,\n+\t\t\t\t      decl, cdecl, NULL_TREE);\n+\t      rank = c->as ? c->as->rank : 0;\n+\t      tmp = structure_alloc_comps (c->ts.u.derived, comp, NULL_TREE,\n+\t\t\t\t\t   rank, purpose);\n+\t      gfc_add_expr_to_block (&fnblock, tmp);\n+\t    }\n+\n \t  if (c->attr.allocatable && c->attr.dimension)\n \t    {\n \t      comp = fold_build3_loc (input_location, COMPONENT_REF, ctype,\n \t\t\t\t      decl, cdecl, NULL_TREE);\n-\t      if (cmp_has_alloc_comps && !c->attr.pointer)\n-\t\t{\n-\t\t  /* Do not deallocate the components of ultimate pointer\n-\t\t     components.  */\n-\t\t  tmp = structure_alloc_comps (c->ts.u.derived, comp, NULL_TREE,\n-\t\t\t\t\t       c->as->rank, purpose);\n-\t\t  gfc_add_expr_to_block (&fnblock, tmp);\n-\t\t}\n \t      tmp = gfc_trans_dealloc_allocated (comp);\n \t      gfc_add_expr_to_block (&fnblock, tmp);\n \t    }"}, {"sha": "dd42621012089561dd9401cda5ba01201ba4ac2b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb7247b9a209ac3afef3c5174ba552c1f941bec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb7247b9a209ac3afef3c5174ba552c1f941bec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dbb7247b9a209ac3afef3c5174ba552c1f941bec", "patch": "@@ -1,3 +1,9 @@\n+2011-06-27  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/49466\n+\t* gfortran.dg/allocatable_scalar_9.f90: Modified.\n+\t* gfortran.dg/extends_14.f03: Modified.\n+\n 2011-06-27  Janis Johnson  <janisjo@codesourcery.com>\n \n \t* lib/target-supports-dg.exp (dg-require-effective-target): Return"}, {"sha": "fef9b0532756452795b49a09eb047854bfe4bde1", "filename": "gcc/testsuite/gfortran.dg/allocatable_scalar_9.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb7247b9a209ac3afef3c5174ba552c1f941bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocatable_scalar_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb7247b9a209ac3afef3c5174ba552c1f941bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocatable_scalar_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocatable_scalar_9.f90?ref=dbb7247b9a209ac3afef3c5174ba552c1f941bec", "patch": "@@ -49,7 +49,7 @@ end module m\n if(allocated(na4%b4)) call abort()\n end\n \n-! { dg-final { scan-tree-dump-times \"__builtin_free\" 32 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"__builtin_free\" 38 \"original\" } }\n ! { dg-final { cleanup-tree-dump \"original\" } }\n \n ! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "876e8c703cf099bd5af510ae5d0fd838cbc26702", "filename": "gcc/testsuite/gfortran.dg/extends_14.f03", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb7247b9a209ac3afef3c5174ba552c1f941bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_14.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb7247b9a209ac3afef3c5174ba552c1f941bec/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_14.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_14.f03?ref=dbb7247b9a209ac3afef3c5174ba552c1f941bec", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR 49466: [4.6/4.7 Regression] Memory leak with assignment of extended derived types\n+!\n+! Contributed by Rich Townsend <townsend@astro.wisc.edu>\n+\n+program evolve_aflow\n+\n+  implicit none\n+\n+  type :: state_t\n+     real, allocatable :: U(:)\n+  end type\n+\n+  type, extends(state_t) :: astate_t\n+  end type\n+\n+  type(astate_t) :: a,b\n+\n+  allocate(a%U(1000))\n+\n+  a = b\n+\n+end program \n+\n+! { dg-final { scan-tree-dump-times \"__builtin_free\" 3 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}