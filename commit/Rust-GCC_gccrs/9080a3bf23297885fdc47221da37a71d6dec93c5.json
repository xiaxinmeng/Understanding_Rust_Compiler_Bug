{"sha": "9080a3bf23297885fdc47221da37a71d6dec93c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA4MGEzYmYyMzI5Nzg4NWZkYzQ3MjIxZGEzN2E3MWQ2ZGVjOTNjNQ==", "commit": {"author": {"name": "Haochen Gui", "email": "guihaoc@gcc.gnu.org", "date": "2021-06-04T06:38:53Z"}, "committer": {"name": "Haochen Gui", "email": "guihaoc@gcc.gnu.org", "date": "2021-06-04T06:51:49Z"}, "message": "rs6000: Disable mode promotion for pseudos\n\nrs6000 has instructions that can do almost everything 32 bit\nat least as efficiently as corresponding 64 bit things. The\nmode promotion can be defered to when a wide mode is necessary.\nSo it helps a lot not promote mode for pseudos. SPECint test\nshows that the overall performance improvement (by geomean) is\nmore than 2% with this patch.\n\ntestsuite/gcc.target/powerpc/not-promote-mode.c illustrates how\nthe patch eliminates the redundant extensions and do further\noptimization by disabling mode promotion for pseduos.\n\ngcc/ChangeLog\n\n\t* config/rs6000/rs6000.h (PROMOTE_MODE): Remove.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/powerpc/not-promote-mode.c: New.", "tree": {"sha": "0cf6e9a10fb45cc7b7df4015608a397618199055", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cf6e9a10fb45cc7b7df4015608a397618199055"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9080a3bf23297885fdc47221da37a71d6dec93c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9080a3bf23297885fdc47221da37a71d6dec93c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9080a3bf23297885fdc47221da37a71d6dec93c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9080a3bf23297885fdc47221da37a71d6dec93c5/comments", "author": null, "committer": null, "parents": [{"sha": "a3f6bd7891495a0ed65f7da7a55d36c730328692", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3f6bd7891495a0ed65f7da7a55d36c730328692", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3f6bd7891495a0ed65f7da7a55d36c730328692"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "a5f7b1d78c2ce86031c2c0b5ede8f1194bac62a0", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9080a3bf23297885fdc47221da37a71d6dec93c5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9080a3bf23297885fdc47221da37a71d6dec93c5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=9080a3bf23297885fdc47221da37a71d6dec93c5", "patch": "@@ -667,17 +667,6 @@ extern unsigned char rs6000_recip_bits[];\n \f\n /* Target machine storage layout.  */\n \n-/* Define this macro if it is advisable to hold scalars in registers\n-   in a wider mode than that declared by the program.  In such cases,\n-   the value is constrained to be within the bounds of the declared\n-   type, but kept valid in the wider mode.  The signedness of the\n-   extension may differ from that of the type.  */\n-\n-#define PROMOTE_MODE(MODE,UNSIGNEDP,TYPE)\t\\\n-  if (GET_MODE_CLASS (MODE) == MODE_INT\t\t\\\n-      && GET_MODE_SIZE (MODE) < (TARGET_32BIT ? 4 : 8)) \\\n-    (MODE) = TARGET_32BIT ? SImode : DImode;\n-\n /* Define this if most significant bit is lowest numbered\n    in instructions that operate on numbered bit-fields.  */\n /* That is true on RS/6000.  */"}, {"sha": "29af1f8323edc8dfb6af70f05db64f9e04f859a7", "filename": "gcc/testsuite/gcc.target/powerpc/not-promote-mode.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9080a3bf23297885fdc47221da37a71d6dec93c5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fnot-promote-mode.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9080a3bf23297885fdc47221da37a71d6dec93c5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fnot-promote-mode.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fnot-promote-mode.c?ref=9080a3bf23297885fdc47221da37a71d6dec93c5", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void bar ();\n+\n+void foo ()\n+{\n+  int i;\n+  for (i = 0; i < 10000; i++)\n+    bar ();\n+}\n+\n+/* { dg-final { scan-assembler-not   {\\mrldicl\\M} } } */"}]}