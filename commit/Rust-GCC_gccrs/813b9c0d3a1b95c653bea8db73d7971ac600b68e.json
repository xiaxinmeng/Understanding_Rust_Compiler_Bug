{"sha": "813b9c0d3a1b95c653bea8db73d7971ac600b68e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEzYjljMGQzYTFiOTVjNjUzYmVhOGRiNzNkNzk3MWFjNjAwYjY4ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-01-09T08:22:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-01-09T08:22:58Z"}, "message": "re PR debug/79000 (ICE: in gen_member_die, at dwarf2out.c:23995)\n\n2017-01-09  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/79000\n\t* dwarf2out.c (is_cxx): New overload with context.\n\t(is_naming_typedef_decl): Use it.\n\n\t* g++.dg/lto/pr79000_0.C: New testcase.\n\t* g++.dg/lto/pr79000_1.c: Likewise.\n\nFrom-SVN: r244217", "tree": {"sha": "5f29b06b53655844bba46ec76d7289ef827b1975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f29b06b53655844bba46ec76d7289ef827b1975"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/813b9c0d3a1b95c653bea8db73d7971ac600b68e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813b9c0d3a1b95c653bea8db73d7971ac600b68e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/813b9c0d3a1b95c653bea8db73d7971ac600b68e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813b9c0d3a1b95c653bea8db73d7971ac600b68e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d86c3c0226d97ca68aa5ee65ce98778ad50e1b74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d86c3c0226d97ca68aa5ee65ce98778ad50e1b74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d86c3c0226d97ca68aa5ee65ce98778ad50e1b74"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "40ecb03d0dd386a227a07523055e18e10274e773", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813b9c0d3a1b95c653bea8db73d7971ac600b68e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813b9c0d3a1b95c653bea8db73d7971ac600b68e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=813b9c0d3a1b95c653bea8db73d7971ac600b68e", "patch": "@@ -1,3 +1,9 @@\n+2017-01-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/79000\n+\t* dwarf2out.c (is_cxx): New overload with context.\n+\t(is_naming_typedef_decl): Use it.\n+\n 2017-01-08  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* invoke.texi (Option Summary): Correct spacing in option lists"}, {"sha": "9da69dfa2c67f64bf41e64ac3296c92b5cb0f413", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813b9c0d3a1b95c653bea8db73d7971ac600b68e/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813b9c0d3a1b95c653bea8db73d7971ac600b68e/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=813b9c0d3a1b95c653bea8db73d7971ac600b68e", "patch": "@@ -3356,6 +3356,7 @@ static int get_AT_flag (dw_die_ref, enum dwarf_attribute);\n static unsigned get_AT_unsigned (dw_die_ref, enum dwarf_attribute);\n static inline dw_die_ref get_AT_ref (dw_die_ref, enum dwarf_attribute);\n static bool is_cxx (void);\n+static bool is_cxx (const_tree);\n static bool is_fortran (void);\n static bool is_ada (void);\n static bool remove_AT (dw_die_ref, enum dwarf_attribute);\n@@ -4990,6 +4991,27 @@ is_cxx (void)\n \t  || lang == DW_LANG_C_plus_plus_11 || lang == DW_LANG_C_plus_plus_14);\n }\n \n+/* Return TRUE if DECL was created by the C++ frontend.  */\n+\n+static bool\n+is_cxx (const_tree decl)\n+{\n+  if (in_lto_p)\n+    {\n+      const_tree context = decl;\n+      while (context && TREE_CODE (context) != TRANSLATION_UNIT_DECL)\n+\t{\n+\t  if (TREE_CODE (context) == BLOCK)\n+\t    context = BLOCK_SUPERCONTEXT (context);\n+\t  else\n+\t    context = get_containing_scope (context);\n+\t}\n+      if (context && TRANSLATION_UNIT_LANGUAGE (context))\n+\treturn strncmp (TRANSLATION_UNIT_LANGUAGE (context), \"GNU C++\", 7) == 0;\n+    }\n+  return is_cxx ();\n+}\n+\n /* Return TRUE if the language is Java.  */\n \n static inline bool\n@@ -24762,7 +24784,7 @@ is_naming_typedef_decl (const_tree decl)\n       /* It looks like Ada produces TYPE_DECLs that are very similar\n          to C++ naming typedefs but that have different\n          semantics. Let's be specific to c++ for now.  */\n-      || !is_cxx ())\n+      || !is_cxx (decl))\n     return FALSE;\n \n   return (DECL_ORIGINAL_TYPE (decl) == NULL_TREE"}, {"sha": "51f3bf339595b5acc1bfceaa9acafdc481bd5f8c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813b9c0d3a1b95c653bea8db73d7971ac600b68e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813b9c0d3a1b95c653bea8db73d7971ac600b68e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=813b9c0d3a1b95c653bea8db73d7971ac600b68e", "patch": "@@ -1,3 +1,9 @@\n+2017-01-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/79000\n+\t* g++.dg/lto/pr79000_0.C: New testcase.\n+\t* g++.dg/lto/pr79000_1.c: Likewise.\n+\n 2017-01-08  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/77708"}, {"sha": "1d5c40ee7a530bb6f5b417793864c6ea60648ec1", "filename": "gcc/testsuite/g++.dg/lto/pr79000_0.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813b9c0d3a1b95c653bea8db73d7971ac600b68e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr79000_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813b9c0d3a1b95c653bea8db73d7971ac600b68e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr79000_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr79000_0.C?ref=813b9c0d3a1b95c653bea8db73d7971ac600b68e", "patch": "@@ -0,0 +1,7 @@\n+// { dg-lto-do link }\n+// { dg-lto-options { \"-flto -g\" } }\n+// { dg-extra-ld-options \"-r -nostdlib\" }\n+\n+struct a {\n+  a();\n+} b;"}, {"sha": "53389b9b979df14a16df5be7978144053b128e8c", "filename": "gcc/testsuite/g++.dg/lto/pr79000_1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813b9c0d3a1b95c653bea8db73d7971ac600b68e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr79000_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813b9c0d3a1b95c653bea8db73d7971ac600b68e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr79000_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr79000_1.c?ref=813b9c0d3a1b95c653bea8db73d7971ac600b68e", "patch": "@@ -0,0 +1,5 @@\n+typedef struct a b;\n+typedef struct a { } b;\n+struct {\n+  b c;\n+} d;"}]}