{"sha": "bfc157d52c26ce692eaf52c4cdbbf4b148198c9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZjMTU3ZDUyYzI2Y2U2OTJlYWY1MmM0Y2RiYmY0YjE0ODE5OGM5ZQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-05-23T14:33:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-23T14:33:37Z"}, "message": "sem_attr.adb (Resolve_Attribute, [...]): If the prefix is a slice...\n\n2008-05-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_attr.adb (Resolve_Attribute, case 'address): If the prefix is a\n\tslice, convert it to an indexed component, which is equivalent, more\n\tefficient, and usable even if the slice itself is not addressable.\n\nFrom-SVN: r135811", "tree": {"sha": "9f49fc8449cbf1726d098404a04575ba9feb7ae9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f49fc8449cbf1726d098404a04575ba9feb7ae9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfc157d52c26ce692eaf52c4cdbbf4b148198c9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfc157d52c26ce692eaf52c4cdbbf4b148198c9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfc157d52c26ce692eaf52c4cdbbf4b148198c9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfc157d52c26ce692eaf52c4cdbbf4b148198c9e/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "651a2cb04b6c24cc07179449faa0b46e9f75dac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651a2cb04b6c24cc07179449faa0b46e9f75dac6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/651a2cb04b6c24cc07179449faa0b46e9f75dac6"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "0735740472f8f405c1f522eb5e87caaa6b540905", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc157d52c26ce692eaf52c4cdbbf4b148198c9e/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc157d52c26ce692eaf52c4cdbbf4b148198c9e/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=bfc157d52c26ce692eaf52c4cdbbf4b148198c9e", "patch": "@@ -8083,6 +8083,36 @@ package body Sem_Attr is\n             if Is_Entity_Name (P) then\n                Set_Address_Taken (Entity (P));\n             end if;\n+\n+            if Nkind (P) = N_Slice then\n+\n+               --  Arr (X .. Y)'address is identical to Arr (X)'address,\n+               --  even if the array is packed and the slice itself is not\n+               --  addressable. Transform the prefix into an indexed component.\n+\n+               declare\n+                  Loc : constant Source_Ptr := Sloc (P);\n+                  D   : constant Node_Id := Discrete_Range (P);\n+                  Lo  : Node_Id;\n+\n+               begin\n+                  if Is_Entity_Name (D) then\n+                     Lo :=\n+                       Make_Attribute_Reference (Loc,\n+                          Prefix => (New_Occurrence_Of (Entity (D), Loc)),\n+                          Attribute_Name => Name_First);\n+                  else\n+                     Lo := Low_Bound (D);\n+                  end if;\n+\n+                  Rewrite (P,\n+                     Make_Indexed_Component (Loc,\n+                        Prefix =>  Relocate_Node (Prefix (P)),\n+                        Expressions => New_List (Lo)));\n+\n+                  Analyze_And_Resolve (P);\n+               end;\n+            end if;\n          end Address_Attribute;\n \n          ---------------"}]}