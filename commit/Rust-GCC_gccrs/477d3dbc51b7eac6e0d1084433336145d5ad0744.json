{"sha": "477d3dbc51b7eac6e0d1084433336145d5ad0744", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc3ZDNkYmM1MWI3ZWFjNmUwZDEwODQ0MzMzMzYxNDVkNWFkMDc0NA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-02-20T12:21:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-02-20T12:21:51Z"}, "message": "string, [...]: Revert recent change.\n\n        * string, std/straits.h, std/bastring.h: Revert recent change.  Needs\n        some libiberty support before it can be re-enabled.\n\nFrom-SVN: r25336", "tree": {"sha": "5e8d124a1069319a1889f86df2ba629433624ceb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e8d124a1069319a1889f86df2ba629433624ceb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/477d3dbc51b7eac6e0d1084433336145d5ad0744", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/477d3dbc51b7eac6e0d1084433336145d5ad0744", "html_url": "https://github.com/Rust-GCC/gccrs/commit/477d3dbc51b7eac6e0d1084433336145d5ad0744", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/477d3dbc51b7eac6e0d1084433336145d5ad0744/comments", "author": null, "committer": null, "parents": [{"sha": "8a27a83e4a3517b462744cb6ad94def8ce697ff4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a27a83e4a3517b462744cb6ad94def8ce697ff4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a27a83e4a3517b462744cb6ad94def8ce697ff4"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "4243e916e1356a4ea1bbf7a6d259801b3040750a", "filename": "libstdc++/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477d3dbc51b7eac6e0d1084433336145d5ad0744/libstdc%2B%2B%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477d3dbc51b7eac6e0d1084433336145d5ad0744/libstdc%2B%2B%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FChangeLog?ref=477d3dbc51b7eac6e0d1084433336145d5ad0744", "patch": "@@ -1,3 +1,8 @@\n+Sat Feb 20 13:17:17 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* string, std/straits.h, std/bastring.h: Revert recent change.  Needs\n+\tsome libiberty support before it can be re-enabled.\n+\n Thu Feb 18 19:53:17 1999  Marc Espie <espie@cvs.openbsd.org>\n \n \t* configure.in: Handle OpenBSD with and without threads."}, {"sha": "f188628cc77b40855c091cb118ecd917940fb8c5", "filename": "libstdc++/std/bastring.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477d3dbc51b7eac6e0d1084433336145d5ad0744/libstdc%2B%2B%2Fstd%2Fbastring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477d3dbc51b7eac6e0d1084433336145d5ad0744/libstdc%2B%2B%2Fstd%2Fbastring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fbastring.h?ref=477d3dbc51b7eac6e0d1084433336145d5ad0744", "patch": "@@ -298,8 +298,7 @@ class basic_string\n \n public:\n   const charT* c_str () const\n-    { if (length () == 0) return traits::empty();\n-      terminate (); return data (); }\n+    { if (length () == 0) return \"\"; terminate (); return data (); }\n   void resize (size_type n, charT c);\n   void resize (size_type n)\n     { resize (n, eos ()); }"}, {"sha": "c80e7ab7a6816a47f37f06fd050c1b2d6ab6dcb7", "filename": "libstdc++/std/straits.h", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477d3dbc51b7eac6e0d1084433336145d5ad0744/libstdc%2B%2B%2Fstd%2Fstraits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477d3dbc51b7eac6e0d1084433336145d5ad0744/libstdc%2B%2B%2Fstd%2Fstraits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fstraits.h?ref=477d3dbc51b7eac6e0d1084433336145d5ad0744", "patch": "@@ -40,8 +40,6 @@ template <class charT>\n struct string_char_traits {\n   typedef charT char_type; // for users to acquire the basic character type\n \n-  static const char_type __nullstr[1];\n-\n   // constraints\n \n   static void assign (char_type& c1, const char_type& c2)\n@@ -53,10 +51,9 @@ struct string_char_traits {\n   static bool lt (const char_type& c1, const char_type& c2)\n     { return (c1 < c2); }\n   static char_type eos () { return char_type(); } // the null character\n-  static char_type* empty() { return __nullstr; }\n   static bool is_del(char_type a) { return 0; }\n   // characteristic function for delimiters of charT\n-\n+  \n   // speed-up functions\n \n   static int compare (const char_type* s1, const char_type* s2, size_t n)\n@@ -68,7 +65,7 @@ struct string_char_traits {\n \n       return 0;\n     }\n-\n+    \n   static size_t length (const char_type* s)\n     {\n       size_t l = 0;\n@@ -120,7 +117,6 @@ struct string_char_traits <char> {\n   static bool lt (const char_type& c1, const char_type& c2)\n     { return (c1 < c2); }\n   static char_type eos () { return 0; }\n-  static char_type* empty() { return \"\"; }\n   static bool is_del(char_type a) { return isspace(a); }\n \n   static int compare (const char_type* s1, const char_type* s2, size_t n)\n@@ -135,8 +131,8 @@ struct string_char_traits <char> {\n     { return (char_type*) memset (s1, c, n); }\n };\n \n+#if 0\n #include <cwctype>\n-#include <cwchar>\n struct string_char_traits <wchar_t> {\n   typedef wchar_t char_type;\n \n@@ -149,7 +145,6 @@ struct string_char_traits <wchar_t> {\n   static bool lt (const char_type& c1, const char_type& c2)\n     { return (c1 < c2); }\n   static char_type eos () { return 0; }\n-  static char_type* empty() { return L\"\"; }\n   static bool is_del(char_type a) { return iswspace(a); }\n \n   static int compare (const char_type* s1, const char_type* s2, size_t n)\n@@ -158,10 +153,9 @@ struct string_char_traits <wchar_t> {\n     { return wcslen (s); }\n   static char_type* copy (char_type* s1, const char_type* s2, size_t n)\n     { return wmemcpy (s1, s2, n); }\n-  static char_type* move (char_type* s1, const char_type* s2, size_t n)\n-    { return (char_type*) wmemmove (s1, s2, n); }\n   static char_type* set (char_type* s1, const char_type& c, size_t n)\n     { return wmemset (s1, c, n); }\n };\n+#endif\n } // extern \"C++\"\n #endif"}, {"sha": "fa6f1abaa70c1dcb7f22f14250d9ae5a8a554c02", "filename": "libstdc++/string", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477d3dbc51b7eac6e0d1084433336145d5ad0744/libstdc%2B%2B%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477d3dbc51b7eac6e0d1084433336145d5ad0744/libstdc%2B%2B%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstring?ref=477d3dbc51b7eac6e0d1084433336145d5ad0744", "patch": "@@ -7,7 +7,7 @@\n \n extern \"C++\" {\n typedef basic_string <char> string;\n-typedef basic_string <wchar_t> wstring;\n+// typedef basic_string <wchar_t> wstring;\n } // extern \"C++\"\n \n #endif"}]}