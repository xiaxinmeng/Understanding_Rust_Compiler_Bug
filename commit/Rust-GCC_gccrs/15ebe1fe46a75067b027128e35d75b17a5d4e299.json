{"sha": "15ebe1fe46a75067b027128e35d75b17a5d4e299", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVlYmUxZmU0NmE3NTA2N2IwMjcxMjhlMzVkNzViMTdhNWQ0ZTI5OQ==", "commit": {"author": {"name": "Max Ostapenko", "email": "m.ostapenko@partner.samsung.com", "date": "2015-10-21T07:47:54Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2015-10-21T07:47:54Z"}, "message": "re PR bootstrap/63888 (bootstrap failed when configured with -with-build-config=bootstrap-asan --disable-werror)\n\nlibsanitizer/\n\n\tPR bootstrap/63888\n\tReapply:\n\t2015-02-20  Jakub Jelinek  <jakub@redhat.com>\n\n\t* asan/asan_globals.cc (RegisterGlobal): Disable detect_odr_violation\n\tsupport until it is rewritten upstream.\n\n\t* c-c++-common/asan/pr63888.c: New test.\n\nFrom-SVN: r229114", "tree": {"sha": "e324e6eab65584b85d63817b2f6db0c32e1eba46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e324e6eab65584b85d63817b2f6db0c32e1eba46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15ebe1fe46a75067b027128e35d75b17a5d4e299", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ebe1fe46a75067b027128e35d75b17a5d4e299", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ebe1fe46a75067b027128e35d75b17a5d4e299", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ebe1fe46a75067b027128e35d75b17a5d4e299/comments", "author": null, "committer": null, "parents": [{"sha": "0d57d3e06be746b68022464c332ff0e5313fa87e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d57d3e06be746b68022464c332ff0e5313fa87e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d57d3e06be746b68022464c332ff0e5313fa87e"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "80ce1585857aacec7110c77415d511c263116d2a", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ebe1fe46a75067b027128e35d75b17a5d4e299/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ebe1fe46a75067b027128e35d75b17a5d4e299/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=15ebe1fe46a75067b027128e35d75b17a5d4e299", "patch": "@@ -1,3 +1,14 @@\n+2015-10-21  Maxim Ostapenko  <m.ostapenko@partner.samsung.com>\n+\n+\tPR bootstrap/63888\n+\tReapply:\n+\t2015-02-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* asan/asan_globals.cc (RegisterGlobal): Disable detect_odr_violation\n+\tsupport until it is rewritten upstream.\n+\n+\t* c-c++-common/asan/pr63888.c: New test.\n+\n 2015-10-21  Maxim Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \tPR sanitizer/63958"}, {"sha": "9c3588b8e081f5101dfb0c67ab231338f985437c", "filename": "libsanitizer/asan/asan_globals.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ebe1fe46a75067b027128e35d75b17a5d4e299/libsanitizer%2Fasan%2Fasan_globals.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ebe1fe46a75067b027128e35d75b17a5d4e299/libsanitizer%2Fasan%2Fasan_globals.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2Fasan_globals.cc?ref=15ebe1fe46a75067b027128e35d75b17a5d4e299", "patch": "@@ -144,7 +144,9 @@ static void RegisterGlobal(const Global *g) {\n   CHECK(AddrIsInMem(g->beg));\n   CHECK(AddrIsAlignedByGranularity(g->beg));\n   CHECK(AddrIsAlignedByGranularity(g->size_with_redzone));\n-  if (flags()->detect_odr_violation) {\n+  // This \"ODR violation\" detection is fundamentally incompatible with\n+  // how GCC registers globals.  Disable as useless until rewritten upstream.\n+  if (0 && flags()->detect_odr_violation) {\n     // Try detecting ODR (One Definition Rule) violation, i.e. the situation\n     // where two globals with the same name are defined in different modules.\n     if (__asan_region_is_poisoned(g->beg, g->size_with_redzone)) {"}]}