{"sha": "2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY4MTY1OTE2MGFkYmJkYjhhZTZmYmU4MGJiZGRmY2Y0YmZjYWMxMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-02-26T13:34:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-02-26T13:34:38Z"}, "message": "re PR tree-optimization/43188 (\"error: alignment of array elements is greater than element size\")\n\n2010-02-26  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43188\n\t* tree-vect-stmts.c (get_vectype_for_scalar_type): Do not build\n\tvector types of over-aligned element type.\n\n\t* gcc.c-torture/compile/pr43188.c: New testcase.\n\nFrom-SVN: r157088", "tree": {"sha": "34c433c5896a376908b666c2976d2a1df592a0e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34c433c5896a376908b666c2976d2a1df592a0e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ce321b3e30e47927e1b25bcc132a5c329fd7de3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce321b3e30e47927e1b25bcc132a5c329fd7de3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ce321b3e30e47927e1b25bcc132a5c329fd7de3"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "047ba5e19bfb5ea32e058c568a4f6cb523065eb3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13", "patch": "@@ -1,3 +1,9 @@\n+2010-02-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43188\n+\t* tree-vect-stmts.c (get_vectype_for_scalar_type): Do not build\n+\tvector types of over-aligned element type.\n+\n 2010-02-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/43175"}, {"sha": "09fc468e48a0239d9a9f89d4fda768c2786c03d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13", "patch": "@@ -1,3 +1,8 @@\n+2010-02-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43188\n+\t* gcc.c-torture/compile/pr43188.c: New testcase.\n+\n 2010-02-26  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/43175"}, {"sha": "bbc6f422fcd2885a1ae900627ebd1b159a0ced9d", "filename": "gcc/testsuite/gcc.c-torture/compile/pr43188.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43188.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43188.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43188.c?ref=2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13", "patch": "@@ -0,0 +1,6 @@\n+int *__attribute__((__aligned__(16))) *p;\n+\n+int main (void)\n+{\n+  return **p;\n+}"}, {"sha": "ce604b3dea6d07c58fff7abf63acf26f78024223", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=2f81659160adbbdb8ae6fbe80bbddfcf4bfcac13", "patch": "@@ -4405,13 +4405,18 @@ tree\n get_vectype_for_scalar_type (tree scalar_type)\n {\n   enum machine_mode inner_mode = TYPE_MODE (scalar_type);\n-  int nbytes = GET_MODE_SIZE (inner_mode);\n+  unsigned int nbytes = GET_MODE_SIZE (inner_mode);\n   int nunits;\n   tree vectype;\n \n   if (nbytes == 0 || nbytes >= UNITS_PER_SIMD_WORD (inner_mode))\n     return NULL_TREE;\n \n+  /* We can't build a vector type of elements with alignment bigger than\n+     their size.  */\n+  if (nbytes < TYPE_ALIGN_UNIT (scalar_type))\n+    return NULL_TREE;\n+\n   /* FORNOW: Only a single vector size per mode (UNITS_PER_SIMD_WORD)\n      is expected.  */\n   nunits = UNITS_PER_SIMD_WORD (inner_mode) / nbytes;"}]}