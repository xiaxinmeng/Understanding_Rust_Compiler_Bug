{"sha": "ad4c44d20ece1fbfb9aced1fbcdab8928d702c73", "node_id": "C_kwDOANBUbNoAKGFkNGM0NGQyMGVjZTFmYmZiOWFjZWQxZmJjZGFiODkyOGQ3MDJjNzM", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-06-28T16:49:27Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-06-28T17:05:42Z"}, "message": "d: Use create_tmp_var_raw and get_callee_fndecl\n\nA couple of small patterns that repeat are generating a temporary, and\ngetting a function out of a CALL_EXPR.  There are convenience functions\nfor these in the common parts of gcc, use them instead.\n\ngcc/d/ChangeLog:\n\n\t* d-codegen.cc: Include gimple-expr.h.\n\t(force_target_expr): Use create_tmp_var_raw.\n\t* decl.cc: Inlucde gimple-expr.h.\n\t(build_local_temp): Use create_tmp_var_raw.\n\t* intrinsics.cc (expand_intrinsic_rotate): Use get_callee_fndecl.\n\t(maybe_expand_intrinsic): Likewise.", "tree": {"sha": "d2fac615b845ecc11a7901496a66f6d0327fc970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2fac615b845ecc11a7901496a66f6d0327fc970"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad4c44d20ece1fbfb9aced1fbcdab8928d702c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4c44d20ece1fbfb9aced1fbcdab8928d702c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad4c44d20ece1fbfb9aced1fbcdab8928d702c73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4c44d20ece1fbfb9aced1fbcdab8928d702c73/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6201277441db4023b833e6d643de8077fe38ed6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6201277441db4023b833e6d643de8077fe38ed6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6201277441db4023b833e6d643de8077fe38ed6e"}], "stats": {"total": 26, "additions": 7, "deletions": 19}, "files": [{"sha": "2d90899b37f91187a4564f252caeddc0f0dbbac2", "filename": "gcc/d/d-codegen.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4c44d20ece1fbfb9aced1fbcdab8928d702c73/gcc%2Fd%2Fd-codegen.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4c44d20ece1fbfb9aced1fbcdab8928d702c73/gcc%2Fd%2Fd-codegen.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-codegen.cc?ref=ad4c44d20ece1fbfb9aced1fbcdab8928d702c73", "patch": "@@ -38,6 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stor-layout.h\"\n #include \"attribs.h\"\n #include \"function.h\"\n+#include \"gimple-expr.h\"\n \n #include \"d-tree.h\"\n \n@@ -623,11 +624,8 @@ build_target_expr (tree decl, tree exp)\n tree\n force_target_expr (tree exp)\n {\n-  tree decl = build_decl (input_location, VAR_DECL, NULL_TREE,\n-\t\t\t  TREE_TYPE (exp));\n+  tree decl = create_tmp_var_raw (TREE_TYPE (exp));\n   DECL_CONTEXT (decl) = current_function_decl;\n-  DECL_ARTIFICIAL (decl) = 1;\n-  DECL_IGNORED_P (decl) = 1;\n   layout_decl (decl, 0);\n \n   return build_target_expr (decl, exp);"}, {"sha": "3caa465dd1ed80e600cc5d5e737785f94f824064", "filename": "gcc/d/decl.cc", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4c44d20ece1fbfb9aced1fbcdab8928d702c73/gcc%2Fd%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4c44d20ece1fbfb9aced1fbcdab8928d702c73/gcc%2Fd%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdecl.cc?ref=ad4c44d20ece1fbfb9aced1fbcdab8928d702c73", "patch": "@@ -57,6 +57,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"alloc-pool.h\"\n #include \"symbol-summary.h\"\n #include \"symtab-thunks.h\"\n+#include \"gimple-expr.h\"\n \n #include \"d-tree.h\"\n #include \"d-target.h\"\n@@ -1465,11 +1466,7 @@ declare_local_var (VarDeclaration *var)\n tree\n build_local_temp (tree type)\n {\n-  tree decl = build_decl (input_location, VAR_DECL, NULL_TREE, type);\n-\n-  DECL_CONTEXT (decl) = current_function_decl;\n-  DECL_ARTIFICIAL (decl) = 1;\n-  DECL_IGNORED_P (decl) = 1;\n+  tree decl = create_tmp_var_raw (type);\n   d_pushdecl (decl);\n \n   return decl;"}, {"sha": "0dd5543fdd1a6a3152a1f27b751b6fbbe4beb18b", "filename": "gcc/d/intrinsics.cc", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4c44d20ece1fbfb9aced1fbcdab8928d702c73/gcc%2Fd%2Fintrinsics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4c44d20ece1fbfb9aced1fbcdab8928d702c73/gcc%2Fd%2Fintrinsics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fintrinsics.cc?ref=ad4c44d20ece1fbfb9aced1fbcdab8928d702c73", "patch": "@@ -421,12 +421,8 @@ expand_intrinsic_rotate (intrinsic_code intrinsic, tree callexp)\n     count = CALL_EXPR_ARG (callexp, 1);\n   else\n     {\n-      tree callee = CALL_EXPR_FN (callexp);\n-\n-      if (TREE_CODE (callee) == ADDR_EXPR)\n-\tcallee = TREE_OPERAND (callee, 0);\n-\n       /* Retrieve from the encoded template instantation.  */\n+      tree callee = get_callee_fndecl (callexp);\n       TemplateInstance *ti = DECL_LANG_FRONTEND (callee)->isInstantiated ();\n       gcc_assert (ti && ti->tiargs && ti->tiargs->length == 2);\n \n@@ -761,12 +757,9 @@ expand_volatile_store (tree callexp)\n tree\n maybe_expand_intrinsic (tree callexp)\n {\n-  tree callee = CALL_EXPR_FN (callexp);\n-\n-  if (TREE_CODE (callee) == ADDR_EXPR)\n-    callee = TREE_OPERAND (callee, 0);\n+  tree callee = get_callee_fndecl (callexp);\n \n-  if (TREE_CODE (callee) != FUNCTION_DECL)\n+  if (callee == NULL_TREE || TREE_CODE (callee) != FUNCTION_DECL)\n     return callexp;\n \n   /* Don't expand CTFE-only intrinsics outside of semantic processing.  */"}]}