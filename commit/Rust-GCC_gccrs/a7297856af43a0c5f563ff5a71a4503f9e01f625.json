{"sha": "a7297856af43a0c5f563ff5a71a4503f9e01f625", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcyOTc4NTZhZjQzYTBjNWY1NjNmZjVhNzFhNDUwM2Y5ZTAxZjYyNQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@airs.com", "date": "2005-11-07T18:52:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2005-11-07T18:52:24Z"}, "message": "re PR rtl-optimization/24683 (ICE in in extract_insn, at recog.c:2084)\n\n./:\tPR rtl-optimization/24683\n\t* config/i386/i386.c (legitimize_pic_address): If constant operand\n\tto PLUS is too large, put it in a register.\ntestsuite/:\n\tPR rtl-optimization/24683\n\t* gcc.dg/pr24683.c: New test.\n\nFrom-SVN: r106601", "tree": {"sha": "efcd355fd7b8282c5663bd962ea914ec9b2433bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efcd355fd7b8282c5663bd962ea914ec9b2433bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7297856af43a0c5f563ff5a71a4503f9e01f625", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7297856af43a0c5f563ff5a71a4503f9e01f625", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7297856af43a0c5f563ff5a71a4503f9e01f625", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7297856af43a0c5f563ff5a71a4503f9e01f625/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6afdc7412b108d0e859476472e1a7ea7454819b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6afdc7412b108d0e859476472e1a7ea7454819b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6afdc7412b108d0e859476472e1a7ea7454819b3"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "80e2f86e5341c2d0665eea18acf501a64ccd0369", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7297856af43a0c5f563ff5a71a4503f9e01f625/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7297856af43a0c5f563ff5a71a4503f9e01f625/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7297856af43a0c5f563ff5a71a4503f9e01f625", "patch": "@@ -1,3 +1,9 @@\n+2005-11-07  Ian Lance Taylor  <ian@airs.com>\n+\n+\tPR rtl-optimization/24683\n+\t* config/i386/i386.c (legitimize_pic_address): If constant operand\n+\tto PLUS is too large, put it in a register.\n+\n 2005-11-07  Jie Zhang  <jie.zhang@analog.com>\n \n \t* configure.ac: Enable checking assembler dwarf2 support for bfin"}, {"sha": "9a0301f671c98e25afd226b5ed61d2ef9b2f3e2d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7297856af43a0c5f563ff5a71a4503f9e01f625/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7297856af43a0c5f563ff5a71a4503f9e01f625/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a7297856af43a0c5f563ff5a71a4503f9e01f625", "patch": "@@ -6178,7 +6178,11 @@ legitimize_pic_address (rtx orig, rtx reg)\n \t\t{\n \t\t  if (INTVAL (op1) < -16*1024*1024\n \t\t      || INTVAL (op1) >= 16*1024*1024)\n-\t\t    new = gen_rtx_PLUS (Pmode, force_reg (Pmode, op0), op1);\n+\t\t    {\n+\t\t      if (!x86_64_immediate_operand (op1, Pmode))\n+\t\t\top1 = force_reg (Pmode, op1);\n+\t\t      new = gen_rtx_PLUS (Pmode, force_reg (Pmode, op0), op1);\n+\t\t    }\n \t\t}\n \t    }\n \t  else"}, {"sha": "9b09e7963d42c276237d946774e2d6668d290788", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7297856af43a0c5f563ff5a71a4503f9e01f625/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7297856af43a0c5f563ff5a71a4503f9e01f625/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7297856af43a0c5f563ff5a71a4503f9e01f625", "patch": "@@ -1,3 +1,8 @@\n+2005-11-07  Ian Lance Taylor  <ian@airs.com>\n+\n+\tPR rtl-optimization/24683\n+\t* gcc.dg/pr24683.c: New test.\n+\n 2005-11-07  Uros Bizjak  <uros@kss-loka.si>\n \n \t* gcc.dg/vect/pr24225.c: Add cleanup-coverage-files."}, {"sha": "79d3210067c6d154396c90e3f6886f83b281b751", "filename": "gcc/testsuite/gcc.dg/pr24683.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7297856af43a0c5f563ff5a71a4503f9e01f625/gcc%2Ftestsuite%2Fgcc.dg%2Fpr24683.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7297856af43a0c5f563ff5a71a4503f9e01f625/gcc%2Ftestsuite%2Fgcc.dg%2Fpr24683.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr24683.c?ref=a7297856af43a0c5f563ff5a71a4503f9e01f625", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile { target fpic } } */\n+/* { dg-options \"-O2 -fPIC\" } */\n+int *block;\n+void final(unsigned int j)\n+{\n+  unsigned int i;\n+  unsigned char *data = (unsigned char *)\"\\0\";\n+  for (i = 0; i < 8; i++)\n+    for (; j + 63 < 1; j += 64)\n+      block = (int *) &data[j];\n+}"}]}