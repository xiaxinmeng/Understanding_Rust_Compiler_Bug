{"sha": "1817fe58f258d6de8b7716927bad077d811fe39a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxN2ZlNThmMjU4ZDZkZThiNzcxNjkyN2JhZDA3N2Q4MTFmZTM5YQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2015-06-02T11:48:56Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2015-06-02T11:48:56Z"}, "message": "[PR libgomp/65742, PR middle-end/66332] XFAIL acc_on_device compile-time evaluation\n\nThe OpenACC 2.0a specification mandates differently, but we currently do get a\nlibrary call in the host code.\n\n\tPR libgomp/65742\n\tPR middle-end/66332\n\n\tgcc/testsuite/\n\t* c-c++-common/goacc/acc_on_device-2.c: XFAIL for C, too.\n\nFrom-SVN: r224028", "tree": {"sha": "5209e39206d04066fe2027cef522edd1b4743503", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5209e39206d04066fe2027cef522edd1b4743503"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1817fe58f258d6de8b7716927bad077d811fe39a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1817fe58f258d6de8b7716927bad077d811fe39a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1817fe58f258d6de8b7716927bad077d811fe39a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1817fe58f258d6de8b7716927bad077d811fe39a/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a3222f3c7551e3d3cc956df227537946d1817b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3222f3c7551e3d3cc956df227537946d1817b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a3222f3c7551e3d3cc956df227537946d1817b8"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "3f51b10ec95e70a61fc74b03e16153e1a6cdd903", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1817fe58f258d6de8b7716927bad077d811fe39a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1817fe58f258d6de8b7716927bad077d811fe39a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1817fe58f258d6de8b7716927bad077d811fe39a", "patch": "@@ -1,3 +1,9 @@\n+2015-06-02  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR libgomp/65742\n+\tPR middle-end/66332\n+\t* c-c++-common/goacc/acc_on_device-2.c: XFAIL for C, too.\n+\n 2015-06-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* g++.dg/abi/mangle-regparm.C (dg-do): Fix x86_32 target selector."}, {"sha": "6e3d292901ec263059c6c821aa7e970d16d772f7", "filename": "gcc/testsuite/c-c++-common/goacc/acc_on_device-2.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1817fe58f258d6de8b7716927bad077d811fe39a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Facc_on_device-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1817fe58f258d6de8b7716927bad077d811fe39a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Facc_on_device-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Facc_on_device-2.c?ref=1817fe58f258d6de8b7716927bad077d811fe39a", "patch": "@@ -20,9 +20,17 @@ f (void)\n }\n \n /* With -fopenacc, we're expecting the builtin to be expanded, so no calls.\n+\n    TODO: in C++, even under extern \"C\", the use of enum for acc_device_t\n    perturbs expansion as a builtin, which expects an int parameter.  It's fine\n    when changing acc_device_t to plain int, but that's not what we're doing in\n    <openacc.h>.\n-   { dg-final { scan-rtl-dump-times \"\\\\\\(call \\[^\\\\n\\]* acc_on_device\" 0 \"expand\" { xfail c++ } } } */\n+\n+   TODO: given that we can't expand acc_on_device in\n+   gcc/builtins.c:expand_builtin_acc_on_device for in the !ACCEL_COMPILER case\n+   (because at that point we don't know whether we're acc_device_host or\n+   acc_device_host_nonshm), we'll (erroneously) get a library call in the host\n+   code.\n+\n+   { dg-final { scan-rtl-dump-times \"\\\\\\(call \\[^\\\\n\\]* acc_on_device\" 0 \"expand\" { xfail { c || c++ } } } } */\n "}]}