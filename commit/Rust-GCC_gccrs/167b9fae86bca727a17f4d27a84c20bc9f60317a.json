{"sha": "167b9fae86bca727a17f4d27a84c20bc9f60317a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY3YjlmYWU4NmJjYTcyN2ExN2Y0ZDI3YTg0YzIwYmM5ZjYwMzE3YQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-19T19:38:12Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-19T19:38:12Z"}, "message": "make_insn_raw returns an rtx_insn\n\n2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n\n\t* rtl.h (make_insn_raw): Strengthen return type from rtx to\n\trtx_insn *.\n\n\t* emit-rtl.c (make_insn_raw): Strengthen return type and local\n\t\"insn\" from rtx to rtx_insn *.\n\t(make_debug_insn_raw): Strengthen return type from rtx to\n\trtx_insn *; strengthen local \"insn\" from rtx to rtx_debug_insn *.\n\t(make_jump_insn_raw):  Strengthen return type from rtx to\n\trtx_insn *; strengthen local \"insn\" from rtx to rtx_jump_insn *.\n\t(make_call_insn_raw):  Strengthen return type from rtx to\n\trtx_insn *; strengthen local \"insn\" from rtx to rtx_call_insn *.\n\t(emit_pattern_before_noloc): Strengthen return type of \"make_raw\"\n\tcallback from rtx to rtx_insn *; likewise for local \"insn\" and\n\t\"next\", adding a checked cast to rtx_insn in the relevant cases of\n\tthe switch statement.\n\t(emit_pattern_after_noloc): Strengthen return type of \"make_raw\"\n\tcallback from rtx to rtx_insn *.\n\t(emit_pattern_after_setloc): Likewise.\n\t(emit_pattern_after): Likewise.\n\t(emit_pattern_before_setloc): Likewise.\n\t(emit_pattern_before): Likewise.\n\nFrom-SVN: r214187", "tree": {"sha": "96103d7bb8696c7494e51b4c446d0b730f350853", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96103d7bb8696c7494e51b4c446d0b730f350853"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/167b9fae86bca727a17f4d27a84c20bc9f60317a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167b9fae86bca727a17f4d27a84c20bc9f60317a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/167b9fae86bca727a17f4d27a84c20bc9f60317a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167b9fae86bca727a17f4d27a84c20bc9f60317a/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "049cfc4a1d602b0d109a0997ba6713cd03249099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/049cfc4a1d602b0d109a0997ba6713cd03249099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/049cfc4a1d602b0d109a0997ba6713cd03249099"}], "stats": {"total": 68, "additions": 46, "deletions": 22}, "files": [{"sha": "3b92fbf46ca77e291b65293cf07f6674c84b738a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/167b9fae86bca727a17f4d27a84c20bc9f60317a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/167b9fae86bca727a17f4d27a84c20bc9f60317a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=167b9fae86bca727a17f4d27a84c20bc9f60317a", "patch": "@@ -1,3 +1,27 @@\n+2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* rtl.h (make_insn_raw): Strengthen return type from rtx to\n+\trtx_insn *.\n+\n+\t* emit-rtl.c (make_insn_raw): Strengthen return type and local\n+\t\"insn\" from rtx to rtx_insn *.\n+\t(make_debug_insn_raw): Strengthen return type from rtx to\n+\trtx_insn *; strengthen local \"insn\" from rtx to rtx_debug_insn *.\n+\t(make_jump_insn_raw):  Strengthen return type from rtx to\n+\trtx_insn *; strengthen local \"insn\" from rtx to rtx_jump_insn *.\n+\t(make_call_insn_raw):  Strengthen return type from rtx to\n+\trtx_insn *; strengthen local \"insn\" from rtx to rtx_call_insn *.\n+\t(emit_pattern_before_noloc): Strengthen return type of \"make_raw\"\n+\tcallback from rtx to rtx_insn *; likewise for local \"insn\" and\n+\t\"next\", adding a checked cast to rtx_insn in the relevant cases of\n+\tthe switch statement.\n+\t(emit_pattern_after_noloc): Strengthen return type of \"make_raw\"\n+\tcallback from rtx to rtx_insn *.\n+\t(emit_pattern_after_setloc): Likewise.\n+\t(emit_pattern_after): Likewise.\n+\t(emit_pattern_before_setloc): Likewise.\n+\t(emit_pattern_before): Likewise.\n+\n 2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n \n \t* emit-rtl.c (last_call_insn): Strengthen return type from rtx to"}, {"sha": "218ddc470ea5bba157016b33ebec0d7ef480273e", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/167b9fae86bca727a17f4d27a84c20bc9f60317a/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/167b9fae86bca727a17f4d27a84c20bc9f60317a/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=167b9fae86bca727a17f4d27a84c20bc9f60317a", "patch": "@@ -3760,12 +3760,12 @@ try_split (rtx pat, rtx trial, int last)\n /* Make and return an INSN rtx, initializing all its slots.\n    Store PATTERN in the pattern slots.  */\n \n-rtx\n+rtx_insn *\n make_insn_raw (rtx pattern)\n {\n-  rtx insn;\n+  rtx_insn *insn;\n \n-  insn = rtx_alloc (INSN);\n+  insn = as_a <rtx_insn *> (rtx_alloc (INSN));\n \n   INSN_UID (insn) = cur_insn_uid++;\n   PATTERN (insn) = pattern;\n@@ -3791,12 +3791,12 @@ make_insn_raw (rtx pattern)\n \n /* Like `make_insn_raw' but make a DEBUG_INSN instead of an insn.  */\n \n-static rtx\n+static rtx_insn *\n make_debug_insn_raw (rtx pattern)\n {\n-  rtx insn;\n+  rtx_debug_insn *insn;\n \n-  insn = rtx_alloc (DEBUG_INSN);\n+  insn = as_a <rtx_debug_insn *> (rtx_alloc (DEBUG_INSN));\n   INSN_UID (insn) = cur_debug_insn_uid++;\n   if (cur_debug_insn_uid > MIN_NONDEBUG_INSN_UID)\n     INSN_UID (insn) = cur_insn_uid++;\n@@ -3812,12 +3812,12 @@ make_debug_insn_raw (rtx pattern)\n \n /* Like `make_insn_raw' but make a JUMP_INSN instead of an insn.  */\n \n-static rtx\n+static rtx_insn *\n make_jump_insn_raw (rtx pattern)\n {\n-  rtx insn;\n+  rtx_jump_insn *insn;\n \n-  insn = rtx_alloc (JUMP_INSN);\n+  insn = as_a <rtx_jump_insn *> (rtx_alloc (JUMP_INSN));\n   INSN_UID (insn) = cur_insn_uid++;\n \n   PATTERN (insn) = pattern;\n@@ -3832,12 +3832,12 @@ make_jump_insn_raw (rtx pattern)\n \n /* Like `make_insn_raw' but make a CALL_INSN instead of an insn.  */\n \n-static rtx\n+static rtx_insn *\n make_call_insn_raw (rtx pattern)\n {\n-  rtx insn;\n+  rtx_call_insn *insn;\n \n-  insn = rtx_alloc (CALL_INSN);\n+  insn = as_a <rtx_call_insn *> (rtx_alloc (CALL_INSN));\n   INSN_UID (insn) = cur_insn_uid++;\n \n   PATTERN (insn) = pattern;\n@@ -4271,9 +4271,9 @@ reorder_insns (rtx from, rtx to, rtx after)\n \n static rtx\n emit_pattern_before_noloc (rtx x, rtx before, rtx last, basic_block bb,\n-                           rtx (*make_raw) (rtx))\n+                           rtx_insn *(*make_raw) (rtx))\n {\n-  rtx insn;\n+  rtx_insn *insn;\n \n   gcc_assert (before);\n \n@@ -4289,10 +4289,10 @@ emit_pattern_before_noloc (rtx x, rtx before, rtx last, basic_block bb,\n     case CODE_LABEL:\n     case BARRIER:\n     case NOTE:\n-      insn = x;\n+      insn = as_a <rtx_insn *> (x);\n       while (insn)\n \t{\n-\t  rtx next = NEXT_INSN (insn);\n+\t  rtx_insn *next = NEXT_INSN (insn);\n \t  add_insn_before (insn, before, bb);\n \t  last = insn;\n \t  insn = next;\n@@ -4425,7 +4425,7 @@ emit_insn_after_1 (rtx first, rtx after, basic_block bb)\n \n static rtx\n emit_pattern_after_noloc (rtx x, rtx after, basic_block bb,\n-\t\t\t  rtx (*make_raw)(rtx))\n+\t\t\t  rtx_insn *(*make_raw)(rtx))\n {\n   rtx last = after;\n \n@@ -4592,7 +4592,7 @@ emit_note_before (enum insn_note subtype, rtx before)\n \n static rtx\n emit_pattern_after_setloc (rtx pattern, rtx after, int loc,\n-\t\t\t   rtx (*make_raw) (rtx))\n+\t\t\t   rtx_insn *(*make_raw) (rtx))\n {\n   rtx last = emit_pattern_after_noloc (pattern, after, NULL, make_raw);\n \n@@ -4617,7 +4617,7 @@ emit_pattern_after_setloc (rtx pattern, rtx after, int loc,\n \n static rtx\n emit_pattern_after (rtx pattern, rtx after, bool skip_debug_insns,\n-\t\t    rtx (*make_raw) (rtx))\n+\t\t    rtx_insn *(*make_raw) (rtx))\n {\n   rtx prev = after;\n \n@@ -4695,7 +4695,7 @@ emit_debug_insn_after (rtx pattern, rtx after)\n \n static rtx\n emit_pattern_before_setloc (rtx pattern, rtx before, int loc, bool insnp,\n-\t\t\t    rtx (*make_raw) (rtx))\n+\t\t\t    rtx_insn *(*make_raw) (rtx))\n {\n   rtx first = PREV_INSN (before);\n   rtx last = emit_pattern_before_noloc (pattern, before,\n@@ -4727,7 +4727,7 @@ emit_pattern_before_setloc (rtx pattern, rtx before, int loc, bool insnp,\n \n static rtx\n emit_pattern_before (rtx pattern, rtx before, bool skip_debug_insns,\n-\t\t     bool insnp, rtx (*make_raw) (rtx))\n+\t\t     bool insnp, rtx_insn *(*make_raw) (rtx))\n {\n   rtx next = before;\n "}, {"sha": "8426b91451aeb1e96799c6289797c84720a254d4", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/167b9fae86bca727a17f4d27a84c20bc9f60317a/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/167b9fae86bca727a17f4d27a84c20bc9f60317a/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=167b9fae86bca727a17f4d27a84c20bc9f60317a", "patch": "@@ -2422,7 +2422,7 @@ extern rtx gen_clobber (rtx);\n extern rtx emit_clobber (rtx);\n extern rtx gen_use (rtx);\n extern rtx emit_use (rtx);\n-extern rtx make_insn_raw (rtx);\n+extern rtx_insn *make_insn_raw (rtx);\n extern void add_function_usage_to (rtx, rtx);\n extern rtx_call_insn *last_call_insn (void);\n extern rtx_insn *previous_insn (rtx);"}]}