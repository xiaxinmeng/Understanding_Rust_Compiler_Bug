{"sha": "f12c802afd17c763ca914cd142504fbf7607dc76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjEyYzgwMmFmZDE3Yzc2M2NhOTE0Y2QxNDI1MDRmYmY3NjA3ZGM3Ng==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2010-06-23T14:25:33Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-06-23T14:25:33Z"}, "message": "re PR other/44644 (type/data name clash makes --enable-build-with-cxx cc1 hard to debug)\n\n        PR other/44644\n        * df-core.c (struct df): Rename to df_d.\n        * df.h (struct df): Likewise.\n        * dse.h (struct df): Remove forward declaration.\n        * recog.h (struct insn_data): Rename to:\n        (struct_insn_data_d).  Adjusted all users.\n\nFrom-SVN: r161281", "tree": {"sha": "8e18fe7df0caef744f6094a5dee3becf74542b30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e18fe7df0caef744f6094a5dee3becf74542b30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f12c802afd17c763ca914cd142504fbf7607dc76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12c802afd17c763ca914cd142504fbf7607dc76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f12c802afd17c763ca914cd142504fbf7607dc76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12c802afd17c763ca914cd142504fbf7607dc76/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b2133cd43147d8172168d193015f222d8f2fe61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b2133cd43147d8172168d193015f222d8f2fe61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b2133cd43147d8172168d193015f222d8f2fe61"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "58e0f27e6c16acdaaba2670c61f443628f570f65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f12c802afd17c763ca914cd142504fbf7607dc76", "patch": "@@ -25,6 +25,13 @@\n \tPR target/44640\n \t* config/spu/spu.c (ea_load_store_inline): Use add_reg_note.\n \n+\tPR other/44644\n+\t* df-core.c (struct df): Rename to df_d.\n+\t* df.h (struct df): Likewise.\n+\t* dse.h (struct df): Remove forward declaration.\n+\t* recog.h (struct insn_data): Rename to:\n+\t(struct_insn_data_d).  Adjusted all users.\n+\n 2010-06-23  Arnaud Charlet  <charlet@adacore.com\n \n \tPR ada/22220"}, {"sha": "8a3f4486e66d9f1ebab44423286a609193c4131b", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=f12c802afd17c763ca914cd142504fbf7607dc76", "patch": "@@ -3554,7 +3554,7 @@ expand_movstr (tree dest, tree src, rtx target, int endp)\n   rtx dest_mem;\n   rtx src_mem;\n   rtx insn;\n-  const struct insn_data * data;\n+  const struct insn_data_d * data;\n \n   if (!HAVE_movstr)\n     return NULL_RTX;"}, {"sha": "8957fe2be32971517627edd8b17136dbf44cc3b3", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f12c802afd17c763ca914cd142504fbf7607dc76", "patch": "@@ -23683,7 +23683,7 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n     } args[4];\n   bool last_arg_count = false;\n   enum insn_code icode = d->icode;\n-  const struct insn_data *insn_p = &insn_data[icode];\n+  const struct insn_data_d *insn_p = &insn_data[icode];\n   enum machine_mode tmode = insn_p->operand[0].mode;\n   enum machine_mode rmode = VOIDmode;\n   bool swap = false;\n@@ -24077,7 +24077,7 @@ ix86_expand_special_args_builtin (const struct builtin_description *d,\n     } args[3];\n   enum insn_code icode = d->icode;\n   bool last_arg_constant = false;\n-  const struct insn_data *insn_p = &insn_data[icode];\n+  const struct insn_data_d *insn_p = &insn_data[icode];\n   enum machine_mode tmode = insn_p->operand[0].mode;\n   enum { load, store } klass;\n "}, {"sha": "9e23e45f8bb66f84677c05231c680158ba16ffa4", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=f12c802afd17c763ca914cd142504fbf7607dc76", "patch": "@@ -6329,7 +6329,7 @@ mep_expand_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n   unsigned int n_args;\n   tree fnname;\n   const struct cgen_insn *cgen_insn;\n-  const struct insn_data *idata;\n+  const struct insn_data_d *idata;\n   unsigned int first_arg = 0;\n   tree return_type = void_type_node;\n   unsigned int builtin_n_args;\n@@ -7209,7 +7209,7 @@ bool\n mep_emit_intrinsic (int intrinsic, const rtx *operands)\n {\n   const struct cgen_insn *cgen_insn;\n-  const struct insn_data *idata;\n+  const struct insn_data_d *idata;\n   rtx newop[10];\n   int i;\n "}, {"sha": "8eaef6d3557338d708d93741b4e273017cf09d87", "filename": "gcc/df-core.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fdf-core.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fdf-core.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-core.c?ref=f12c802afd17c763ca914cd142504fbf7607dc76", "patch": "@@ -415,7 +415,7 @@ bitmap_obstack df_bitmap_obstack;\n   Functions to create, destroy and manipulate an instance of df.\n ----------------------------------------------------------------------------*/\n \n-struct df *df;\n+struct df_d *df;\n \n /* Add PROBLEM (and any dependent problems) to the DF instance.  */\n \n@@ -704,7 +704,7 @@ static unsigned int\n rest_of_handle_df_initialize (void)\n {\n   gcc_assert (!df);\n-  df = XCNEW (struct df);\n+  df = XCNEW (struct df_d);\n   df->changeable_flags = 0;\n \n   bitmap_obstack_initialize (&df_bitmap_obstack);"}, {"sha": "01a4d1046e9962d93e4d7df4187c01d57cd4230d", "filename": "gcc/df.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fdf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fdf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.h?ref=f12c802afd17c763ca914cd142504fbf7607dc76", "patch": "@@ -34,7 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n \n struct dataflow;\n-struct df;\n+struct df_d;\n struct df_problem;\n struct df_link;\n struct df_insn_info;\n@@ -527,7 +527,7 @@ struct df_reg_info\n    used by owners of the problem.\n ----------------------------------------------------------------------------*/\n \n-struct df\n+struct df_d\n {\n \n   /* The set of problems to be solved is stored in two arrays.  In\n@@ -877,7 +877,7 @@ struct df_byte_lr_bb_info\n /* This is used for debugging and for the dumpers to find the latest\n    instance so that the df info can be added to the dumps.  This\n    should not be used by regular code.  */\n-extern struct df *df;\n+extern struct df_d *df;\n #define df_scan    (df->problems_by_index[DF_SCAN])\n #define df_rd      (df->problems_by_index[DF_RD])\n #define df_lr      (df->problems_by_index[DF_LR])"}, {"sha": "7c9c94bc57efd9826ec72ce9dec3fd770d7bfa59", "filename": "gcc/dse.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fdse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fdse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.h?ref=f12c802afd17c763ca914cd142504fbf7607dc76", "patch": "@@ -23,8 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_DSE_H\n #define GCC_DSE_H\n \n-struct df;\n-\n extern void dse_record_singleton_alias_set (alias_set_type, enum machine_mode);\n extern void dse_invalidate_singleton_alias_set (alias_set_type);\n "}, {"sha": "9aa61a8f2444250e5bfa55d759398d299c299a92", "filename": "gcc/expmed.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=f12c802afd17c763ca914cd142504fbf7607dc76", "patch": "@@ -301,7 +301,7 @@ negate_rtx (enum machine_mode mode, rtx x)\n enum machine_mode\n mode_for_extraction (enum extraction_pattern pattern, int opno)\n {\n-  const struct insn_data *data;\n+  const struct insn_data_d *data;\n \n   switch (pattern)\n     {"}, {"sha": "a5d6a128379fed2eb8c918b1cc60b183104b1169", "filename": "gcc/genoutput.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=f12c802afd17c763ca914cd142504fbf7607dc76", "patch": "@@ -22,7 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n /* This program reads the machine description for the compiler target machine\n    and produces a file containing these things:\n \n-   1. An array of `struct insn_data', which is indexed by insn code number,\n+   1. An array of `struct insn_data_d', which is indexed by insn code number,\n    which contains:\n \n      a. `name' is the name for that pattern.  Nameless patterns are\n@@ -293,7 +293,7 @@ output_insn_data (void)\n       }\n \n   printf (\"#if GCC_VERSION >= 2007\\n__extension__\\n#endif\\n\");\n-  printf (\"\\nconst struct insn_data insn_data[] = \\n{\\n\");\n+  printf (\"\\nconst struct insn_data_d insn_data[] = \\n{\\n\");\n \n   for (d = idata; d; d = d->next)\n     {"}, {"sha": "c2972abe07d7b132f268e21d1ca8452e73a087a6", "filename": "gcc/recog.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12c802afd17c763ca914cd142504fbf7607dc76/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=f12c802afd17c763ca914cd142504fbf7607dc76", "patch": "@@ -275,7 +275,7 @@ struct insn_operand_data\n #define INSN_OUTPUT_FORMAT_MULTI\t2\t/* const char * const * */\n #define INSN_OUTPUT_FORMAT_FUNCTION\t3\t/* const char * (*)(...) */\n \n-struct insn_data\n+struct insn_data_d\n {\n   const char *const name;\n #if HAVE_DESIGNATED_INITIALIZERS\n@@ -300,5 +300,5 @@ struct insn_data\n   const char output_format;\n };\n \n-extern const struct insn_data insn_data[];\n+extern const struct insn_data_d insn_data[];\n extern int peep2_current_count;"}]}