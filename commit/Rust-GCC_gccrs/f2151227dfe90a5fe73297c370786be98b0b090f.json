{"sha": "f2151227dfe90a5fe73297c370786be98b0b090f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIxNTEyMjdkZmU5MGE1ZmU3MzI5N2MzNzA3ODZiZTk4YjBiMDkwZg==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-07-06T16:58:23Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-07-06T17:00:10Z"}, "message": "PR fortran/95980 - ICE on using sync images with -fcheck=bounds\n\nIn SELECT TYPE, the argument may be an incorrectly specified unlimited\npolymorphic variable.  Avoid a NULL pointer dereference for clean error\nrecovery.\n\ngcc/fortran/\n\tPR fortran/95980\n\t* match.c (copy_ts_from_selector_to_associate, build_class_sym):\n\tDistinguish between unlimited polymorphic and ordinary variables\n\tto avoid NULL pointer dereference.\n\t* resolve.c (resolve_select_type):\n\tDistinguish between unlimited polymorphic and ordinary variables\n\tto avoid NULL pointer dereference.", "tree": {"sha": "78c1d2ae22e21a6a15cd25c0cda8e1a865230a46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78c1d2ae22e21a6a15cd25c0cda8e1a865230a46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2151227dfe90a5fe73297c370786be98b0b090f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2151227dfe90a5fe73297c370786be98b0b090f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2151227dfe90a5fe73297c370786be98b0b090f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2151227dfe90a5fe73297c370786be98b0b090f/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "824084e72e388f81015e7f67922c75f50741355a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/824084e72e388f81015e7f67922c75f50741355a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/824084e72e388f81015e7f67922c75f50741355a"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "7d3711c55f9857854e3c1254793c09106af5b967", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2151227dfe90a5fe73297c370786be98b0b090f/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2151227dfe90a5fe73297c370786be98b0b090f/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=f2151227dfe90a5fe73297c370786be98b0b090f", "patch": "@@ -6159,14 +6159,18 @@ copy_ts_from_selector_to_associate (gfc_expr *associate, gfc_expr *selector)\n   while (ref && ref->next)\n     ref = ref->next;\n \n-  if (selector->ts.type == BT_CLASS && CLASS_DATA (selector)->as\n+  if (selector->ts.type == BT_CLASS\n+      && CLASS_DATA (selector)\n+      && CLASS_DATA (selector)->as\n       && CLASS_DATA (selector)->as->type == AS_ASSUMED_RANK)\n     {\n       assoc_sym->attr.dimension = 1;\n       assoc_sym->as = gfc_copy_array_spec (CLASS_DATA (selector)->as);\n       goto build_class_sym;\n     }\n-  else if (selector->ts.type == BT_CLASS && CLASS_DATA (selector)->as\n+  else if (selector->ts.type == BT_CLASS\n+\t   && CLASS_DATA (selector)\n+\t   && CLASS_DATA (selector)->as\n \t   && ref && ref->type == REF_ARRAY)\n     {\n       /* Ensure that the array reference type is set.  We cannot use\n@@ -6223,7 +6227,8 @@ copy_ts_from_selector_to_associate (gfc_expr *associate, gfc_expr *selector)\n     {\n       /* The correct class container has to be available.  */\n       assoc_sym->ts.type = BT_CLASS;\n-      assoc_sym->ts.u.derived = CLASS_DATA (selector)->ts.u.derived;\n+      assoc_sym->ts.u.derived = CLASS_DATA (selector)\n+\t? CLASS_DATA (selector)->ts.u.derived : selector->ts.u.derived;\n       assoc_sym->attr.pointer = 1;\n       gfc_build_class_symbol (&assoc_sym->ts, &assoc_sym->attr, &assoc_sym->as);\n     }"}, {"sha": "223dcccce9114a2dde15f96361c755e239351781", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2151227dfe90a5fe73297c370786be98b0b090f/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2151227dfe90a5fe73297c370786be98b0b090f/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f2151227dfe90a5fe73297c370786be98b0b090f", "patch": "@@ -9241,7 +9241,8 @@ resolve_select_type (gfc_code *code, gfc_namespace *old_ns)\n \t{\n \t  if (code->expr1->symtree->n.sym->attr.untyped)\n \t    code->expr1->symtree->n.sym->ts = code->expr2->ts;\n-\t  selector_type = CLASS_DATA (code->expr2)->ts.u.derived;\n+\t  selector_type = CLASS_DATA (code->expr2)\n+\t    ? CLASS_DATA (code->expr2)->ts.u.derived : code->expr2->ts.u.derived;\n \t}\n \n       if (code->expr2->rank && CLASS_DATA (code->expr1)->as)"}, {"sha": "7c8260a96e059e90e0aa5db68eb0bddccf3eb2a6", "filename": "gcc/testsuite/gfortran.dg/pr95980.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2151227dfe90a5fe73297c370786be98b0b090f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95980.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2151227dfe90a5fe73297c370786be98b0b090f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95980.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95980.f90?ref=f2151227dfe90a5fe73297c370786be98b0b090f", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! PR fortran/95980 - ICE in get_unique_type_string, at fortran/class.c:485\n+\n+program p\n+  type t\n+  end type t\n+  class(t) :: x        ! { dg-error \"must be dummy, allocatable or pointer\" }\n+  select type (y => x)\n+  end select\n+end"}]}