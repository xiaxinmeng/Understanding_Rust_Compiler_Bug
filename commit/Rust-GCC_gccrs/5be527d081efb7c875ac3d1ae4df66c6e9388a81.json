{"sha": "5be527d081efb7c875ac3d1ae4df66c6e9388a81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJlNTI3ZDA4MWVmYjdjODc1YWMzZDFhZTRkZjY2YzZlOTM4OGE4MQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-04-03T08:31:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-04-03T08:31:27Z"}, "message": "genpreds.c (write_insn_constraint_len): Write function optimized for CONSTRAINT_LEN implementation.\n\n2007-04-03  Richard Guenther  <rguenther@suse.de>\n\n\t* genpreds.c (write_insn_constraint_len): Write function\n\toptimized for CONSTRAINT_LEN implementation.\n\t(write_tm_preds_h): Output insn_constraint_len inline and\n\tuse it for CONSTRAINT_LEN.\n\t(write_insn_preds_c): Don't output insn_constraint_len.\n\t* doc/md.texi (define_register_constraint): Document multi-letter\n\tconstraints shall have the same length if they start with the same\n\tletter.\n\nFrom-SVN: r123451", "tree": {"sha": "8c622382d02806dd7598026ac12725405a3008b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c622382d02806dd7598026ac12725405a3008b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5be527d081efb7c875ac3d1ae4df66c6e9388a81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5be527d081efb7c875ac3d1ae4df66c6e9388a81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5be527d081efb7c875ac3d1ae4df66c6e9388a81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5be527d081efb7c875ac3d1ae4df66c6e9388a81/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "577565f9349ec94277f1867077056df1f59427f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/577565f9349ec94277f1867077056df1f59427f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/577565f9349ec94277f1867077056df1f59427f4"}], "stats": {"total": 70, "additions": 50, "deletions": 20}, "files": [{"sha": "f7d8aa491338937ed4026c3a7e7755fba3016689", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5be527d081efb7c875ac3d1ae4df66c6e9388a81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5be527d081efb7c875ac3d1ae4df66c6e9388a81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5be527d081efb7c875ac3d1ae4df66c6e9388a81", "patch": "@@ -1,3 +1,14 @@\n+2007-04-03  Richard Guenther  <rguenther@suse.de>\n+\n+\t* genpreds.c (write_insn_constraint_len): Write function\n+\toptimized for CONSTRAINT_LEN implementation.\n+\t(write_tm_preds_h): Output insn_constraint_len inline and\n+\tuse it for CONSTRAINT_LEN.\n+\t(write_insn_preds_c): Don't output insn_constraint_len.\n+\t* doc/md.texi (define_register_constraint): Document multi-letter\n+\tconstraints shall have the same length if they start with the same\n+\tletter.\n+\n 2007-04-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config.gcc (i[34567]86-*-linux*): Add i386/t-crtpc to tm-file."}, {"sha": "01bcb59fe498cf8f6eff4f4e8fa8b4d6e157b751", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5be527d081efb7c875ac3d1ae4df66c6e9388a81/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5be527d081efb7c875ac3d1ae4df66c6e9388a81/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=5be527d081efb7c875ac3d1ae4df66c6e9388a81", "patch": "@@ -3063,7 +3063,9 @@ definitions.\n @deffn {MD Expression} define_register_constraint name regclass docstring\n All three arguments are string constants.\n @var{name} is the name of the constraint, as it will appear in\n-@code{match_operand} expressions.  @var{regclass} can be either the\n+@code{match_operand} expressions.  If @var{name} is a multi-letter\n+constraint its length shall be the same for all constraints starting\n+with the same letter.  @var{regclass} can be either the\n name of the corresponding register class (@pxref{Register Classes}),\n or a C expression which evaluates to the appropriate register class.\n If it is an expression, it must have no side effects, and it cannot"}, {"sha": "f730eb470721675372d154ec0aab1833cd6049e2", "filename": "gcc/genpreds.c", "status": "modified", "additions": 36, "deletions": 19, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5be527d081efb7c875ac3d1ae4df66c6e9388a81/gcc%2Fgenpreds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5be527d081efb7c875ac3d1ae4df66c6e9388a81/gcc%2Fgenpreds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpreds.c?ref=5be527d081efb7c875ac3d1ae4df66c6e9388a81", "patch": "@@ -1001,26 +1001,44 @@ write_lookup_constraint (void)\n \t\"}\\n\");\n }\n \n-/* Write out the function which computes constraint name lengths from\n-   their enumerators. */\n+/* Write out a function which looks at a string and determines what\n+   the constraint name length is.  */\n static void\n write_insn_constraint_len (void)\n {\n-  struct constraint_data *c;\n-\n-  if (constraint_max_namelen == 1)\n-    return;\n+  unsigned int i;\n \n-  puts (\"size_t\\n\"\n-\t\"insn_constraint_len (enum constraint_num c)\\n\"\n+  puts (\"static inline size_t\\n\"\n+\t\"insn_constraint_len (char fc, const char *str ATTRIBUTE_UNUSED)\\n\"\n \t\"{\\n\"\n-\t\"  switch (c)\\n\"\n+\t\"  switch (fc)\\n\"\n \t\"    {\");\n \n-  FOR_ALL_CONSTRAINTS (c)\n-    if (c->namelen > 1)\n-      printf (\"    case CONSTRAINT_%s: return %lu;\\n\", c->c_name,\n-\t      (unsigned long int) c->namelen);\n+  for (i = 0; i < ARRAY_SIZE(constraints_by_letter_table); i++)\n+    {\n+      struct constraint_data *c = constraints_by_letter_table[i];\n+\n+      if (!c\n+      \t  || c->namelen == 1)\n+\tcontinue;\n+\n+      /* Constraints with multiple characters should have the same\n+\t length.  */\n+      {\n+\tstruct constraint_data *c2 = c->next_this_letter;\n+\tsize_t len = c->namelen;\n+\twhile (c2)\n+\t  {\n+\t    if (c2->namelen != len)\n+\t      error (\"Multi-letter constraints with first letter '%c' \"\n+\t\t     \"should have same length\", i);\n+\t    c2 = c2->next_this_letter;\n+\t  }\n+      }\n+\n+      printf (\"    case '%c': return %lu;\\n\",\n+\t      i, (unsigned long int) c->namelen);\n+    }\n \n   puts (\"    default: break;\\n\"\n \t\"    }\\n\"\n@@ -1248,9 +1266,11 @@ write_tm_preds_h (void)\n \t    \"extern bool constraint_satisfied_p (rtx, enum constraint_num);\\n\");\n \n       if (constraint_max_namelen > 1)\n-\tputs (\"extern size_t insn_constraint_len (enum constraint_num);\\n\"\n-\t      \"#define CONSTRAINT_LEN(c_,s_) \"\n-\t      \"insn_constraint_len (lookup_constraint (s_))\\n\");\n+        {\n+\t  write_insn_constraint_len ();\n+\t  puts (\"#define CONSTRAINT_LEN(c_,s_) \"\n+\t\t\"insn_constraint_len (c_,s_)\\n\");\n+\t}\n       else\n \tputs (\"#define CONSTRAINT_LEN(c_,s_) 1\\n\");\n       if (have_register_constraints)\n@@ -1341,9 +1361,6 @@ write_insn_preds_c (void)\n \twrite_regclass_for_constraint ();\n       write_constraint_satisfied_p ();\n       \n-      if (constraint_max_namelen > 1)\n-\twrite_insn_constraint_len ();\n-\n       if (have_const_int_constraints)\n \twrite_insn_const_int_ok_for_constraint ();\n "}]}