{"sha": "bf6302f0e771555388849d8f525a63231cec79f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY2MzAyZjBlNzcxNTU1Mzg4ODQ5ZDhmNTI1YTYzMjMxY2VjNzlmNQ==", "commit": {"author": {"name": "Herman A.J. ten Brugge", "email": "Haj.Ten.Brugge@net.HCC.nl", "date": "2000-09-07T15:18:46Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-09-07T15:18:46Z"}, "message": "reorg.c (find_end_label): If the basic block reorder pass moves the return insn to some other place try...\n\n\n\t* reorg.c (find_end_label): If the basic block reorder pass moves the\n\treturn insn to some other place try to locate it again and put our\n\tend_of_function_label there.\n\t* reorg.c (relax_delay_slots): Check if find_end_label created a\n\tnew label that invalidates the current optimazation.\n\nFrom-SVN: r36237", "tree": {"sha": "198e4245663ba8d90a9318f13a34de8dbe8e53f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/198e4245663ba8d90a9318f13a34de8dbe8e53f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf6302f0e771555388849d8f525a63231cec79f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf6302f0e771555388849d8f525a63231cec79f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf6302f0e771555388849d8f525a63231cec79f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf6302f0e771555388849d8f525a63231cec79f5/comments", "author": null, "committer": null, "parents": [{"sha": "33b35a8dc4ce2a6edb323140e49b55cbc3b22f8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33b35a8dc4ce2a6edb323140e49b55cbc3b22f8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33b35a8dc4ce2a6edb323140e49b55cbc3b22f8c"}], "stats": {"total": 54, "additions": 42, "deletions": 12}, "files": [{"sha": "0cbe30760bdc487b94abff3eb6012fd8212af2db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6302f0e771555388849d8f525a63231cec79f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6302f0e771555388849d8f525a63231cec79f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf6302f0e771555388849d8f525a63231cec79f5", "patch": "@@ -1,3 +1,11 @@\n+2000-09-07 Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n+\n+\t* reorg.c (find_end_label): If the basic block reorder pass moves the\n+\treturn insn to some other place try to locate it again and put our\n+\tend_of_function_label there.\n+\t* reorg.c (relax_delay_slots): Check if find_end_label created a\n+\tnew label that invalidates the current optimazation.\n+\n 2000-09-07  Catherine Moore  <clm@redhat.com>\n \n         * unroll.c (unroll_loop): Check for unconditional jumps"}, {"sha": "00cafffe8647a8abf7fada2020290853afebb6e7", "filename": "gcc/reorg.c", "status": "modified", "additions": 34, "deletions": 12, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6302f0e771555388849d8f525a63231cec79f5/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6302f0e771555388849d8f525a63231cec79f5/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=bf6302f0e771555388849d8f525a63231cec79f5", "patch": "@@ -375,22 +375,42 @@ find_end_label ()\n     end_of_function_label = insn;\n   else\n     {\n-      /* Otherwise, make a new label and emit a RETURN and BARRIER,\n-\t if needed.  */\n       end_of_function_label = gen_label_rtx ();\n       LABEL_NUSES (end_of_function_label) = 0;\n-      emit_label (end_of_function_label);\n-#ifdef HAVE_return\n-      if (HAVE_return)\n+      /* If the basic block reorder pass moves the return insn to\n+\t some other place try to locate it again and put our\n+\t end_of_function_label there.  */\n+      while (insn && ! (GET_CODE (insn) == JUMP_INSN\n+\t\t        && (GET_CODE (PATTERN (insn)) == RETURN)))\n+\tinsn = PREV_INSN (insn);\n+      if (insn)\n \t{\n-\t  /* The return we make may have delay slots too.  */\n-\t  rtx insn = gen_return ();\n-\t  insn = emit_jump_insn (insn);\n-\t  emit_barrier ();\n-          if (num_delay_slots (insn) > 0)\n-\t    obstack_ptr_grow (&unfilled_slots_obstack, insn);\n+\t  insn = PREV_INSN (insn);\n+\n+      \t  /* Put the label before an USE insns that may proceed the\n+\t     RETURN insn.  */\n+      \t  while (GET_CODE (insn) == USE)\n+\t    insn = PREV_INSN (insn);\n+\n+      \t  emit_label_after (end_of_function_label, insn);\n \t}\n+      else\n+\t{\n+          /* Otherwise, make a new label and emit a RETURN and BARRIER,\n+\t     if needed.  */\n+          emit_label (end_of_function_label);\n+#ifdef HAVE_return\n+          if (HAVE_return)\n+\t    {\n+\t      /* The return we make may have delay slots too.  */\n+\t      rtx insn = gen_return ();\n+\t      insn = emit_jump_insn (insn);\n+\t      emit_barrier ();\n+              if (num_delay_slots (insn) > 0)\n+\t        obstack_ptr_grow (&unfilled_slots_obstack, insn);\n+\t    }\n #endif\n+\t}\n     }\n \n   /* Show one additional use for this label so it won't go away until\n@@ -3322,7 +3342,9 @@ relax_delay_slots (first)\n \t  if (label == 0)\n \t    label = find_end_label ();\n \n-\t  if (redirect_with_delay_slots_safe_p (delay_insn, label, insn))\n+\t  /* find_end_label can generate a new label. Check this first.  */\n+\t  if (no_labels_between_p (insn, next)\n+\t      && redirect_with_delay_slots_safe_p (delay_insn, label, insn))\n \t    {\n \t      /* Be careful how we do this to avoid deleting code or labels\n \t\t that are momentarily dead.  See similar optimization in"}]}