{"sha": "8e56d311d380cbdc37a910fa96c06c6eb91973d7", "node_id": "C_kwDOANBUbNoAKDhlNTZkMzExZDM4MGNiZGMzN2E5MTBmYTk2YzA2YzZlYjkxOTczZDc", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2022-11-18T22:43:36Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-12-01T13:53:53Z"}, "message": "ada: Use the address type of a Storage_Model_Type for 'Address\n\nWhen an Address attribute applies to an object that is a dereference of\nan access value whose type has aspect Designated_Storage_Model, the\nattribute will now be treated as having the address type associated\nwith the Storage_Model_Type of the access type's associated Storage_Model\nobject instead of being of type System.Address.\n\ngcc/ada/\n\n\t* sem_attr.adb (Analyze_Attribute, Attribute_Address): In the case\n\twhere the attribute's prefix is a dereference of a value of an\n\taccess type that has aspect Designated_Storage_Model (or a\n\trenaming of such a dereference), set the attribute's type to the\n\tcorresponding Storage_Model_Type's associated address type rather\n\tthan System.Address.", "tree": {"sha": "0e1e5fd8d2b389439cf3ab005a6a41014dc91a56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e1e5fd8d2b389439cf3ab005a6a41014dc91a56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e56d311d380cbdc37a910fa96c06c6eb91973d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e56d311d380cbdc37a910fa96c06c6eb91973d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e56d311d380cbdc37a910fa96c06c6eb91973d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e56d311d380cbdc37a910fa96c06c6eb91973d7/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eeba836bf3dc26ea858020bc19e2c1a1606b75dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeba836bf3dc26ea858020bc19e2c1a1606b75dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeba836bf3dc26ea858020bc19e2c1a1606b75dd"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "cca6f6f8c7d5fec5f2e3ab402d6d20f6bc0dc6db", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e56d311d380cbdc37a910fa96c06c6eb91973d7/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e56d311d380cbdc37a910fa96c06c6eb91973d7/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=8e56d311d380cbdc37a910fa96c06c6eb91973d7", "patch": "@@ -3430,7 +3430,34 @@ package body Sem_Attr is\n          Check_E0;\n          Address_Checks;\n          Check_Not_Incomplete_Type;\n-         Set_Etype (N, RTE (RE_Address));\n+\n+         --  If the prefix is a dereference of a value whose associated access\n+         --  type has been specified with aspect Designated_Storage_Model, then\n+         --  use the associated Storage_Model_Type's address type as the type\n+         --  of the attribute. Otherwise we use System.Address as usual. This\n+         --  isn't normally legit for a predefined attribute, but this is for\n+         --  our own extension to addressing and currently requires extensions\n+         --  to be enabled (such as with -gnatX0).\n+\n+         declare\n+            Prefix_Obj : constant Node_Id := Get_Referenced_Object (P);\n+            Addr_Type  : Entity_Id        := RTE (RE_Address);\n+         begin\n+            if Nkind (Prefix_Obj) = N_Explicit_Dereference then\n+               declare\n+                  P_Type : constant Entity_Id := Etype (Prefix (Prefix_Obj));\n+\n+                  use Storage_Model_Support;\n+               begin\n+                  if Has_Designated_Storage_Model_Aspect (P_Type) then\n+                     Addr_Type := Storage_Model_Address_Type\n+                                    (Storage_Model_Object (P_Type));\n+                  end if;\n+               end;\n+            end if;\n+\n+            Set_Etype (N, Addr_Type);\n+         end;\n \n       ------------------\n       -- Address_Size --"}]}