{"sha": "ab17642530304608b3f0be7a0aa912efcf983ef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIxNzY0MjUzMDMwNDYwOGIzZjBiZTdhMGFhOTEyZWZjZjk4M2VmMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-03T01:37:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-03T01:37:53Z"}, "message": "(expand_inline_function): Cast -1 to (HOST_WIDE_INT) first.\n\nFrom-SVN: r1749", "tree": {"sha": "032edd8ebf47e1eada6b0e5edd273e0d7e8b589f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/032edd8ebf47e1eada6b0e5edd273e0d7e8b589f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab17642530304608b3f0be7a0aa912efcf983ef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab17642530304608b3f0be7a0aa912efcf983ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab17642530304608b3f0be7a0aa912efcf983ef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab17642530304608b3f0be7a0aa912efcf983ef1/comments", "author": null, "committer": null, "parents": [{"sha": "6fa5c10660a128a81dbdc1c117ed6680a7eafb2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa5c10660a128a81dbdc1c117ed6680a7eafb2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fa5c10660a128a81dbdc1c117ed6680a7eafb2f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e284cf24172b2aa2088be7ba4c6f04ae04eef023", "filename": "gcc/integrate.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab17642530304608b3f0be7a0aa912efcf983ef1/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab17642530304608b3f0be7a0aa912efcf983ef1/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=ab17642530304608b3f0be7a0aa912efcf983ef1", "patch": "@@ -1129,7 +1129,7 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n \n   /* We expect PARMS to have the right length; don't crash if not.  */\n   if (list_length (parms) != nargs)\n-    return (rtx)-1;\n+    return (rtx) (HOST_WIDE_INT) -1;\n   /* Also check that the parms type match.  Since the appropriate\n      conversions or default promotions have already been applied,\n      the machine modes should match exactly.  */\n@@ -1142,12 +1142,12 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n       tree arg = TREE_VALUE (actual);\n       enum machine_mode mode = TYPE_MODE (DECL_ARG_TYPE (formal));\n       if (mode != TYPE_MODE (TREE_TYPE (arg)))\n-\treturn (rtx)-1;\n+\treturn (rtx) (HOST_WIDE_INT) -1;\n       /* If they are block mode, the types should match exactly.\n          They don't match exactly if TREE_TYPE (FORMAL) == ERROR_MARK_NODE,\n \t which could happen if the parameter has incomplete type.  */\n       if (mode == BLKmode && TREE_TYPE (arg) != TREE_TYPE (formal))\n-\treturn (rtx)-1;\n+\treturn (rtx) (HOST_WIDE_INT) -1;\n     }\n \n   /* Make a binding contour to keep inline cleanups called at"}]}