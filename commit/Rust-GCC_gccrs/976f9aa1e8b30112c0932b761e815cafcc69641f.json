{"sha": "976f9aa1e8b30112c0932b761e815cafcc69641f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc2ZjlhYTFlOGIzMDExMmMwOTMyYjc2MWU4MTVjYWZjYzY5NjQxZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-09-02T08:38:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-09-02T08:38:13Z"}, "message": "re PR go/91617 (Many go test case failures after r275026)\n\n\tPR go/91617\n\t* fold-const.c (range_check_type): For enumeral and boolean\n\ttype, pass 1 to type_for_size langhook instead of\n\tTYPE_UNSIGNED (etype).  Return unsigned_type_for result whenever\n\tetype isn't TYPE_UNSIGNED INTEGER_TYPE.\n\t(build_range_check): Don't call unsigned_type_for for pointer types.\n\t* match.pd (X / C1 op C2): Don't call unsigned_type_for on\n\trange_check_type result.\n\nFrom-SVN: r275299", "tree": {"sha": "748ca02a13b7c28c337de39dce894845337d34c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/748ca02a13b7c28c337de39dce894845337d34c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/976f9aa1e8b30112c0932b761e815cafcc69641f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/976f9aa1e8b30112c0932b761e815cafcc69641f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/976f9aa1e8b30112c0932b761e815cafcc69641f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/976f9aa1e8b30112c0932b761e815cafcc69641f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8756957f013a5fe8095890e0401fbf7dfd86c0c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8756957f013a5fe8095890e0401fbf7dfd86c0c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8756957f013a5fe8095890e0401fbf7dfd86c0c0"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "a6bcdf909394d8c7a781ed1b67874dc2a21dbba7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976f9aa1e8b30112c0932b761e815cafcc69641f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976f9aa1e8b30112c0932b761e815cafcc69641f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=976f9aa1e8b30112c0932b761e815cafcc69641f", "patch": "@@ -1,3 +1,14 @@\n+2019-09-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR go/91617\n+\t* fold-const.c (range_check_type): For enumeral and boolean\n+\ttype, pass 1 to type_for_size langhook instead of\n+\tTYPE_UNSIGNED (etype).  Return unsigned_type_for result whenever\n+\tetype isn't TYPE_UNSIGNED INTEGER_TYPE.\n+\t(build_range_check): Don't call unsigned_type_for for pointer types.\n+\t* match.pd (X / C1 op C2): Don't call unsigned_type_for on\n+\trange_check_type result.\n+\n 2019-09-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimple-ssa-strength-reduction.c (valid_mem_ref_cand_p): New function."}, {"sha": "a99dafec589ade7c49d4596619c4b8e92ff7a69b", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976f9aa1e8b30112c0932b761e815cafcc69641f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976f9aa1e8b30112c0932b761e815cafcc69641f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=976f9aa1e8b30112c0932b761e815cafcc69641f", "patch": "@@ -4938,10 +4938,9 @@ range_check_type (tree etype)\n   /* First make sure that arithmetics in this type is valid, then make sure\n      that it wraps around.  */\n   if (TREE_CODE (etype) == ENUMERAL_TYPE || TREE_CODE (etype) == BOOLEAN_TYPE)\n-    etype = lang_hooks.types.type_for_size (TYPE_PRECISION (etype),\n-\t\t\t\t\t    TYPE_UNSIGNED (etype));\n+    etype = lang_hooks.types.type_for_size (TYPE_PRECISION (etype), 1);\n \n-  if (TREE_CODE (etype) == INTEGER_TYPE && !TYPE_OVERFLOW_WRAPS (etype))\n+  if (TREE_CODE (etype) == INTEGER_TYPE && !TYPE_UNSIGNED (etype))\n     {\n       tree utype, minv, maxv;\n \n@@ -4959,6 +4958,8 @@ range_check_type (tree etype)\n       else\n \treturn NULL_TREE;\n     }\n+  else if (POINTER_TYPE_P (etype))\n+    etype = unsigned_type_for (etype);\n   return etype;\n }\n \n@@ -5049,9 +5050,6 @@ build_range_check (location_t loc, tree type, tree exp, int in_p,\n   if (etype == NULL_TREE)\n     return NULL_TREE;\n \n-  if (POINTER_TYPE_P (etype))\n-    etype = unsigned_type_for (etype);\n-\n   high = fold_convert_loc (loc, etype, high);\n   low = fold_convert_loc (loc, etype, low);\n   exp = fold_convert_loc (loc, etype, exp);"}, {"sha": "cd75dacd9cd4a3caf66d8c18e09e7edc2a02758d", "filename": "gcc/match.pd", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976f9aa1e8b30112c0932b761e815cafcc69641f/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976f9aa1e8b30112c0932b761e815cafcc69641f/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=976f9aa1e8b30112c0932b761e815cafcc69641f", "patch": "@@ -1569,8 +1569,6 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \ttree etype = range_check_type (TREE_TYPE (@0));\n \tif (etype)\n \t  {\n-\t    if (! TYPE_UNSIGNED (etype))\n-\t      etype = unsigned_type_for (etype);\n \t    hi = fold_convert (etype, hi);\n \t    lo = fold_convert (etype, lo);\n \t    hi = const_binop (MINUS_EXPR, etype, hi, lo);"}]}