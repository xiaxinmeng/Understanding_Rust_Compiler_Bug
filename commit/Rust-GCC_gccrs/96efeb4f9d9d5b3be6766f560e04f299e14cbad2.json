{"sha": "96efeb4f9d9d5b3be6766f560e04f299e14cbad2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZlZmViNGY5ZDlkNWIzYmU2NzY2ZjU2MGUwNGYyOTllMTRjYmFkMg==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2007-06-06T10:50:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:50:59Z"}, "message": "types.h, types.ads: Rename PE_Illegal_CW_Actual_E_4_18 to PE_Non_Transportable_Actual.\n\n2007-04-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* types.h, types.ads: Rename PE_Illegal_CW_Actual_E_4_18 to\n\tPE_Non_Transportable_Actual.\n\t(By_Descriptor_Last): New constant.\n\t(By_Copy_Return): Likewise.\n\nFrom-SVN: r125473", "tree": {"sha": "02d1f797c52da726b02d205f2d09fd2be6f88e40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02d1f797c52da726b02d205f2d09fd2be6f88e40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96efeb4f9d9d5b3be6766f560e04f299e14cbad2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96efeb4f9d9d5b3be6766f560e04f299e14cbad2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96efeb4f9d9d5b3be6766f560e04f299e14cbad2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96efeb4f9d9d5b3be6766f560e04f299e14cbad2/comments", "author": null, "committer": null, "parents": [{"sha": "e7ad2039ede4f6484ccfefe5d6573eafbcf55c55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7ad2039ede4f6484ccfefe5d6573eafbcf55c55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7ad2039ede4f6484ccfefe5d6573eafbcf55c55"}], "stats": {"total": 78, "additions": 21, "deletions": 57}, "files": [{"sha": "6fe60118be9074dd5353b16fcbe0bebc4641e270", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 15, "deletions": 55, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96efeb4f9d9d5b3be6766f560e04f299e14cbad2/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96efeb4f9d9d5b3be6766f560e04f299e14cbad2/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=96efeb4f9d9d5b3be6766f560e04f299e14cbad2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,17 +35,17 @@\n --  in more than one unit in the compiler. They are gathered here for easy\n --  reference, though in some cases the full description is found in the\n --  relevant module which implements the definition. The main reason that\n---  they are not in their \"natural\" specs is that this would cause a lot of\n---  inter-spec dependencies, and in particular some awkward circular\n+--  they are not in their \"natural\" specs is that this would cause a lot\n+--  of inter-spec dependencies, and in particular some awkward circular\n --  dependencies would have to be dealt with.\n \n---  WARNING: There is a C version of this package. Any changes to this\n---  source file must be properly reflected in the C header file types.h\n+--  WARNING: There is a C version of this package. Any changes to this source\n+--  file must be properly reflected in the C header file types.h declarations.\n \n---  Note: the declarations in this package reflect an expectation that the\n---  host machine has an efficient integer base type with a range at least\n---  32 bits 2s-complement. If there are any machines for which this is not\n---  a correct assumption, a significant number of changes will be required!\n+--  Note: the declarations in this package reflect an expectation that the host\n+--  machine has an efficient integer base type with a range at least 32 bits\n+--  2s-complement. If there are any machines for which this is not a correct\n+--  assumption, a significant number of changes will be required!\n \n with Unchecked_Deallocation;\n \n@@ -209,7 +209,10 @@ package Types is\n    --  Value used to indicate no source position set in a node. A test for\n    --  a Source_Ptr value being > No_Location is the approved way to test\n    --  for a standard value that does not include No_Location or any of the\n-   --  following special definitions.\n+   --  following special definitions. One important use of No_Location is to\n+   --  label generated nodes that we don't want the debugger to see in normal\n+   --  mode (very often we conditionalize so that we set No_Location in normal\n+   --  mode and the corresponding source line in -gnatD mode).\n \n    Standard_Location : constant Source_Ptr := -2;\n    --  Used for all nodes in the representation of package Standard other\n@@ -358,37 +361,6 @@ package Types is\n    subtype Ureal_Range     is Union_Id\n      range Ureal_Low_Bound    .. Ureal_High_Bound;\n \n-   -----------------------------\n-   -- Types for Namet Package --\n-   -----------------------------\n-\n-   --  Name_Id values are used to identify entries in the names table. Except\n-   --  for the special values No_Name, and Error_Name, they are subscript\n-   --  values for the Names table defined in package Namet.\n-\n-   --  Note that with only a few exceptions, which are clearly documented, the\n-   --  type Name_Id should be regarded as a private type. In particular it is\n-   --  never appropriate to perform arithmetic operations using this type.\n-\n-   type Name_Id is range Names_Low_Bound .. Names_High_Bound;\n-   for Name_Id'Size use 32;\n-   --  Type used to identify entries in the names table\n-\n-   No_Name : constant Name_Id := Names_Low_Bound;\n-   --  The special Name_Id value No_Name is used in the parser to indicate\n-   --  a situation where no name is present (e.g. on a loop or block).\n-\n-   Error_Name : constant Name_Id := Names_Low_Bound +  1;\n-   --  The special Name_Id value Error_Name is used in the parser to\n-   --  indicate that some kind of error was encountered in scanning out\n-   --  the relevant name, so it does not have a representable label.\n-\n-   subtype Error_Name_Or_No_Name is Name_Id range No_Name .. Error_Name;\n-   --  Used to test for either error name or no name\n-\n-   First_Name_Id : constant Name_Id := Names_Low_Bound + 2;\n-   --  Subscript of first entry in names table\n-\n    ----------------------------\n    -- Types for Atree Package --\n    ----------------------------\n@@ -591,18 +563,6 @@ package Types is\n    No_Source_File : constant Source_File_Index := 0;\n    --  Value used to indicate no source file present\n \n-   subtype File_Name_Type is Name_Id;\n-   --  File names are stored in the names table and this synonym is used to\n-   --  indicate that a Name_Id value is being used to hold a simple file\n-   --  name (which does not include any directory information).\n-\n-   No_File : constant File_Name_Type := File_Name_Type (No_Name);\n-   --  Constant used to indicate no file found\n-\n-   subtype Unit_Name_Type is Name_Id;\n-   --  Unit names are stored in the names table and this synonym is used to\n-   --  indicate that a Name_Id value is being used to hold a unit name.\n-\n    -----------------------------------\n    -- Representation of Time Stamps --\n    -----------------------------------\n@@ -818,7 +778,7 @@ package Types is\n       PE_Potentially_Blocking_Operation, -- 25\n       PE_Stubbed_Subprogram_Called,      -- 26\n       PE_Unchecked_Union_Restriction,    -- 27\n-      PE_Illegal_RACW_E_4_18,            -- 28\n+      PE_Non_Transportable_Actual,       -- 28\n \n       SE_Empty_Storage_Pool,             -- 29\n       SE_Explicit_Raise,                 -- 30\n@@ -831,7 +791,7 @@ package Types is\n \n    subtype RT_PE_Exceptions is RT_Exception_Code range\n      PE_Access_Before_Elaboration ..\n-     PE_Illegal_RACW_E_4_18;\n+     PE_Non_Transportable_Actual;\n \n    subtype RT_SE_Exceptions is RT_Exception_Code range\n      SE_Empty_Storage_Pool .."}, {"sha": "9630eba398fc8c1e7cdf7d3b1937bf3ed0567d9b", "filename": "gcc/ada/types.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96efeb4f9d9d5b3be6766f560e04f299e14cbad2/gcc%2Fada%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96efeb4f9d9d5b3be6766f560e04f299e14cbad2/gcc%2Fada%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.h?ref=96efeb4f9d9d5b3be6766f560e04f299e14cbad2", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2006, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2007, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -328,6 +328,10 @@ typedef Int Mechanism_Type;\n #define By_Descriptor_SB   (-8)\n #define By_Descriptor_A    (-9)\n #define By_Descriptor_NCA  (-10)\n+#define By_Descriptor_Last (-10)\n+\n+/* Internal to Gigi.  */\n+#define By_Copy_Return     (-128)\n \n /* Definitions of Reason codes for Raise_xxx_Error nodes */\n #define CE_Access_Check_Failed              0\n@@ -359,7 +363,7 @@ typedef Int Mechanism_Type;\n #define PE_Potentially_Blocking_Operation  25\n #define PE_Stubbed_Subprogram_Called       26\n #define PE_Unchecked_Union_Restriction     27\n-#define PE_Illegal_RACW_E_4_18             28\n+#define PE_Non_Transportable_Actual        28\n \n #define SE_Empty_Storage_Pool              29\n #define SE_Explicit_Raise                  30"}]}