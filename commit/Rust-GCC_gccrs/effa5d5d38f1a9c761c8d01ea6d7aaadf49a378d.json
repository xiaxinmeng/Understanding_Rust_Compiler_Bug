{"sha": "effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZmYTVkNWQzOGYxYTljNzYxYzhkMDFlYTZkN2FhYWRmNDlhMzc4ZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-04-29T18:37:27Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-04-29T18:37:27Z"}, "message": "mips.md, [...]: Fix comment typos.\n\n\t* config/mips/mips.md, config/mips/sb1.md,\n\tconfig/rs6000/rs6000.c: Fix comment typos.\n\nFrom-SVN: r81296", "tree": {"sha": "30957193528cce3b6e23010e2a7a12deaab6a233", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30957193528cce3b6e23010e2a7a12deaab6a233"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d/comments", "author": null, "committer": null, "parents": [{"sha": "2b8a92de97e0f6f528dff536742a2a6cf89355b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b8a92de97e0f6f528dff536742a2a6cf89355b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b8a92de97e0f6f528dff536742a2a6cf89355b5"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "f54823bcc11c59c36ea84e86effd967096adb028", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d", "patch": "@@ -1,3 +1,8 @@\n+2004-04-29  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/mips/mips.md, config/mips/sb1.md,\n+\tconfig/rs6000/rs6000.c: Fix comment typos.\n+\n 2004-04-29  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* builtins.c, cgraph.c, cgraphunit.c, final.c, fold-const.c:"}, {"sha": "38c5b0bab7436df744ace38c4183b6a17bc90072", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d", "patch": "@@ -5236,7 +5236,7 @@ dsrl\\t%3,%3,1\\n\\\n \n ;; The HI and LO registers are not truly independent.  If we move an mthi\n ;; instruction before an mflo instruction, it will make the result of the\n-;; mflo unpredicatable.  The same goes for mtlo and mfhi.\n+;; mflo unpredictable.  The same goes for mtlo and mfhi.\n ;;\n ;; We cope with this by making the mflo and mfhi patterns use both HI and LO.\n ;; Operand 1 is the register we want, operand 2 is the other one."}, {"sha": "91346107f09957dbd0e2a0334e106e5e1c158995", "filename": "gcc/config/mips/sb1.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d/gcc%2Fconfig%2Fmips%2Fsb1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d/gcc%2Fconfig%2Fmips%2Fsb1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsb1.md?ref=effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d", "patch": "@@ -204,7 +204,7 @@\n ;; ??? A simple alu insn issued on an LS unit has 0 cycle latency to an EX\n ;; insn, to a store (for data), and to an xfer insn.  It has 1 cycle latency to\n ;; another LS insn (excluding store data).  A simple alu insn issued on an EX\n-;; unit has a latency of 5 cycles when the results goes to a LS unit (exluding\n+;; unit has a latency of 5 cycles when the results goes to a LS unit (excluding\n ;; store data), otherwise a latency of 1 cycle.\n \n ;; ??? We can not handle latencies properly for simple alu instructions"}, {"sha": "c405abd88a59b740cd930f1daf6299db2884f4d7", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=effa5d5d38f1a9c761c8d01ea6d7aaadf49a378d", "patch": "@@ -1678,7 +1678,7 @@ easy_fp_constant (rtx op, enum machine_mode mode)\n     abort ();\n }\n \n-/* Returns the constant for the splat instrunction, if exists.  */\n+/* Returns the constant for the splat instruction, if exists.  */\n \n static int\n easy_vector_splat_const (int cst, enum machine_mode mode)"}]}