{"sha": "4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY2ZDhjYzgwMGZjOGE0OGZhNWI4YmJlNzI4ZGQxMDljM2IyM2ZiMg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2006-06-03T02:07:36Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2006-06-03T02:07:36Z"}, "message": "Index: gcc/ChangeLog\n2006-06-02  Geoffrey Keating  <geoffk@apple.com>\n\n\t* config/rs6000/host-darwin.c (sigaltstack): Protect prototype with\n\tHAVE_DECL_SIGALTSTACK.\n\t(MC_FLD): New.\n\t(segv_handler): Use MC_FLD.\n\t* configure.ac: Check for a sigaltstack declaration.\n\tCompute HAS_MCONTEXT_T_UNDERSCORES on Darwin.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\nIndex: boehm-gc/ChangeLog\n2006-06-02  Geoffrey Keating  <geoffk@apple.com>\n\n\t* configure.ac: Define HAS_PPC_THREAD_STATE_R0,\n\tHAS_PPC_THREAD_STATE___R0, HAS_PPC_THREAD_STATE64_R0,\n\tHAS_PPC_THREAD_STATE64___R0, HAS_I386_THREAD_STATE_EAX,\n\tHAS_I386_THREAD_STATE___EAX.\n\t* configure: Regenerate.\n\t* include/gc_config.h.in: Regenerate.\n\t* darwin_stop_world.c (PPC_RED_ZONE_SIZE): Use standard Darwin\n\tmacro names to determine value.\n\t(THREAD_STATE): New.\n\t(THREAD_FLD): New.\n\t(GC_push_all_stacks): Use THREAD_STATE and THREAD_FLD in both versions.\n\nFrom-SVN: r114339", "tree": {"sha": "7db99eb5a7164070b8702b056eadc9042dc95f03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7db99eb5a7164070b8702b056eadc9042dc95f03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "347b9c46e1653b9bdad22a394005b2c74abae764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/347b9c46e1653b9bdad22a394005b2c74abae764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/347b9c46e1653b9bdad22a394005b2c74abae764"}], "stats": {"total": 1163, "additions": 1063, "deletions": 100}, "files": [{"sha": "cdb7f7c1d90823ed8f99ce71333464b11de7592b", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "patch": "@@ -1,3 +1,17 @@\n+2006-06-02  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* configure.ac: Define HAS_PPC_THREAD_STATE_R0,\n+\tHAS_PPC_THREAD_STATE___R0, HAS_PPC_THREAD_STATE64_R0,\n+\tHAS_PPC_THREAD_STATE64___R0, HAS_I386_THREAD_STATE_EAX,\n+\tHAS_I386_THREAD_STATE___EAX.\n+\t* configure: Regenerate.\n+\t* include/gc_config.h.in: Regenerate.\n+\t* darwin_stop_world.c (PPC_RED_ZONE_SIZE): Use standard Darwin\n+\tmacro names to determine value.\n+\t(THREAD_STATE): New.\n+\t(THREAD_FLD): New.\n+\t(GC_push_all_stacks): Use THREAD_STATE and THREAD_FLD in both versions.\n+\n 2006-05-24  Carlos O'Donell  <carlos@codesourcery.com>\n \n \t* Makefile.am: Add install-html target. "}, {"sha": "2b9d6f5f6e6147771add85349cb7847ca82222c5", "filename": "boehm-gc/configure", "status": "modified", "additions": 676, "deletions": 0, "changes": 676, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "patch": "@@ -5597,6 +5597,682 @@ else\n fi\n \n \n+# Darwin needs a few extra special tests to deal with variation in the\n+# system headers.\n+case \"$host\" in\n+  powerpc*-*-darwin*)\n+    echo \"$as_me:$LINENO: checking for ppc_thread_state_t.r0\" >&5\n+echo $ECHO_N \"checking for ppc_thread_state_t.r0... $ECHO_C\" >&6\n+if test \"${ac_cv_member_ppc_thread_state_t_r0+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <mach/thread_status.h>\n+\n+int\n+main ()\n+{\n+static ppc_thread_state_t ac_aggr;\n+if (ac_aggr.r0)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_member_ppc_thread_state_t_r0=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <mach/thread_status.h>\n+\n+int\n+main ()\n+{\n+static ppc_thread_state_t ac_aggr;\n+if (sizeof ac_aggr.r0)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_member_ppc_thread_state_t_r0=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_member_ppc_thread_state_t_r0=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_member_ppc_thread_state_t_r0\" >&5\n+echo \"${ECHO_T}$ac_cv_member_ppc_thread_state_t_r0\" >&6\n+if test $ac_cv_member_ppc_thread_state_t_r0 = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAS_PPC_THREAD_STATE_R0\n+_ACEOF\n+\n+fi\n+\n+    echo \"$as_me:$LINENO: checking for ppc_thread_state_t.__r0\" >&5\n+echo $ECHO_N \"checking for ppc_thread_state_t.__r0... $ECHO_C\" >&6\n+if test \"${ac_cv_member_ppc_thread_state_t___r0+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <mach/thread_status.h>\n+\n+int\n+main ()\n+{\n+static ppc_thread_state_t ac_aggr;\n+if (ac_aggr.__r0)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_member_ppc_thread_state_t___r0=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <mach/thread_status.h>\n+\n+int\n+main ()\n+{\n+static ppc_thread_state_t ac_aggr;\n+if (sizeof ac_aggr.__r0)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_member_ppc_thread_state_t___r0=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_member_ppc_thread_state_t___r0=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_member_ppc_thread_state_t___r0\" >&5\n+echo \"${ECHO_T}$ac_cv_member_ppc_thread_state_t___r0\" >&6\n+if test $ac_cv_member_ppc_thread_state_t___r0 = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAS_PPC_THREAD_STATE___R0\n+_ACEOF\n+\n+fi\n+\n+    echo \"$as_me:$LINENO: checking for ppc_thread_state64_t.r0\" >&5\n+echo $ECHO_N \"checking for ppc_thread_state64_t.r0... $ECHO_C\" >&6\n+if test \"${ac_cv_member_ppc_thread_state64_t_r0+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <mach/thread_status.h>\n+\n+int\n+main ()\n+{\n+static ppc_thread_state64_t ac_aggr;\n+if (ac_aggr.r0)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_member_ppc_thread_state64_t_r0=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <mach/thread_status.h>\n+\n+int\n+main ()\n+{\n+static ppc_thread_state64_t ac_aggr;\n+if (sizeof ac_aggr.r0)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_member_ppc_thread_state64_t_r0=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_member_ppc_thread_state64_t_r0=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_member_ppc_thread_state64_t_r0\" >&5\n+echo \"${ECHO_T}$ac_cv_member_ppc_thread_state64_t_r0\" >&6\n+if test $ac_cv_member_ppc_thread_state64_t_r0 = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAS_PPC_THREAD_STATE64_R0\n+_ACEOF\n+\n+fi\n+\n+    echo \"$as_me:$LINENO: checking for ppc_thread_state64_t.__r0\" >&5\n+echo $ECHO_N \"checking for ppc_thread_state64_t.__r0... $ECHO_C\" >&6\n+if test \"${ac_cv_member_ppc_thread_state64_t___r0+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <mach/thread_status.h>\n+\n+int\n+main ()\n+{\n+static ppc_thread_state64_t ac_aggr;\n+if (ac_aggr.__r0)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_member_ppc_thread_state64_t___r0=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <mach/thread_status.h>\n+\n+int\n+main ()\n+{\n+static ppc_thread_state64_t ac_aggr;\n+if (sizeof ac_aggr.__r0)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_member_ppc_thread_state64_t___r0=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_member_ppc_thread_state64_t___r0=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_member_ppc_thread_state64_t___r0\" >&5\n+echo \"${ECHO_T}$ac_cv_member_ppc_thread_state64_t___r0\" >&6\n+if test $ac_cv_member_ppc_thread_state64_t___r0 = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAS_PPC_THREAD_STATE64___R0\n+_ACEOF\n+\n+fi\n+\n+    ;;\n+  i?86*-*-darwin*)\n+    echo \"$as_me:$LINENO: checking for i386_thread_state_t.eax\" >&5\n+echo $ECHO_N \"checking for i386_thread_state_t.eax... $ECHO_C\" >&6\n+if test \"${ac_cv_member_i386_thread_state_t_eax+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <mach/thread_status.h>\n+\n+int\n+main ()\n+{\n+static i386_thread_state_t ac_aggr;\n+if (ac_aggr.eax)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_member_i386_thread_state_t_eax=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <mach/thread_status.h>\n+\n+int\n+main ()\n+{\n+static i386_thread_state_t ac_aggr;\n+if (sizeof ac_aggr.eax)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_member_i386_thread_state_t_eax=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_member_i386_thread_state_t_eax=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_member_i386_thread_state_t_eax\" >&5\n+echo \"${ECHO_T}$ac_cv_member_i386_thread_state_t_eax\" >&6\n+if test $ac_cv_member_i386_thread_state_t_eax = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAS_I386_THREAD_STATE_EAX\n+_ACEOF\n+\n+fi\n+\n+    echo \"$as_me:$LINENO: checking for i386_thread_state_t.__eax\" >&5\n+echo $ECHO_N \"checking for i386_thread_state_t.__eax... $ECHO_C\" >&6\n+if test \"${ac_cv_member_i386_thread_state_t___eax+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <mach/thread_status.h>\n+\n+int\n+main ()\n+{\n+static i386_thread_state_t ac_aggr;\n+if (ac_aggr.__eax)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_member_i386_thread_state_t___eax=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <mach/thread_status.h>\n+\n+int\n+main ()\n+{\n+static i386_thread_state_t ac_aggr;\n+if (sizeof ac_aggr.__eax)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_member_i386_thread_state_t___eax=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_member_i386_thread_state_t___eax=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_member_i386_thread_state_t___eax\" >&5\n+echo \"${ECHO_T}$ac_cv_member_i386_thread_state_t___eax\" >&6\n+if test $ac_cv_member_i386_thread_state_t___eax = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAS_I386_THREAD_STATE___EAX\n+_ACEOF\n+\n+fi\n+\n+    ;;\n+  *) ;;\n+esac\n+\n # We never want libdl on darwin. It is a fake libdl that just ends up making\n # dyld calls anyway\n case \"$host\" in"}, {"sha": "b1d53cf6a887495075dfbbbb75157ef33050c8a8", "filename": "boehm-gc/configure.ac", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/boehm-gc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/boehm-gc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.ac?ref=4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "patch": "@@ -232,6 +232,39 @@ case \"$host\" in\n esac\n AM_CONDITIONAL(POWERPC_DARWIN,test x$powerpc_darwin = xtrue)\n \n+# Darwin needs a few extra special tests to deal with variation in the\n+# system headers.\n+case \"$host\" in\n+  powerpc*-*-darwin*)\n+    AC_CHECK_MEMBER(ppc_thread_state_t.r0,\n+      AC_DEFINE(HAS_PPC_THREAD_STATE_R0,,[ppc_thread_state_t has field r0]),,\n+      [#include <mach/thread_status.h>])\n+    AC_CHECK_MEMBER(ppc_thread_state_t.__r0,\n+      AC_DEFINE(HAS_PPC_THREAD_STATE___R0,,dnl\n+        [ppc_thread_state_t has field __r0]),,\n+      [#include <mach/thread_status.h>])\n+    AC_CHECK_MEMBER(ppc_thread_state64_t.r0,\n+      AC_DEFINE(HAS_PPC_THREAD_STATE64_R0,,dnl\n+        [ppc_thread_state64_t has field r0]),,\n+      [#include <mach/thread_status.h>])\n+    AC_CHECK_MEMBER(ppc_thread_state64_t.__r0,\n+      AC_DEFINE(HAS_PPC_THREAD_STATE64___R0,,dnl\n+        [ppc_thread_state64_t has field __r0]),,\n+      [#include <mach/thread_status.h>])\n+    ;;\n+  i?86*-*-darwin*)\n+    AC_CHECK_MEMBER(i386_thread_state_t.eax,\n+      AC_DEFINE(HAS_I386_THREAD_STATE_EAX,,dnl\n+        [i386_thread_state_t has field eax]),,\n+      [#include <mach/thread_status.h>])\n+    AC_CHECK_MEMBER(i386_thread_state_t.__eax,\n+      AC_DEFINE(HAS_I386_THREAD_STATE___EAX,,dnl\n+        [i386_thread_state_t has field __eax]),,\n+      [#include <mach/thread_status.h>])\n+    ;;\n+  *) ;;\n+esac\n+\n # We never want libdl on darwin. It is a fake libdl that just ends up making\n # dyld calls anyway\n case \"$host\" in"}, {"sha": "895fdb61a6472cece4dfd056580313bfc6300f5a", "filename": "boehm-gc/darwin_stop_world.c", "status": "modified", "additions": 124, "deletions": 97, "changes": 221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/boehm-gc%2Fdarwin_stop_world.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/boehm-gc%2Fdarwin_stop_world.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fdarwin_stop_world.c?ref=4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "patch": "@@ -14,12 +14,43 @@\n    Page 50: \"If a leaf procedure's red zone usage would exceed 224 bytes, then\n    it must set up a stack frame just like routines that call other routines.\"\n */\n-#ifdef POWERPC\n-# if CPP_WORDSZ == 32\n-#   define PPC_RED_ZONE_SIZE 224\n-# elif CPP_WORDSZ == 64\n-#   define PPC_RED_ZONE_SIZE 320\n+#if defined(__ppc__)\n+# define PPC_RED_ZONE_SIZE 224\n+#elif defined(__ppc64__)\n+# define PPC_RED_ZONE_SIZE 320\n+#endif\n+\n+/* Try to work out the right way to access thread state structure members.\n+   The structure has changed its definition in different Darwin versions.  */\n+#if defined(__ppc__)\n+# define THREAD_STATE ppc_thread_state_t\n+# if defined (HAS_PPC_THREAD_STATE_R0)\n+#  define THREAD_FLD(x) x\n+# elif defined (HAS_PPC_THREAD_STATE___R0)\n+#  define THREAD_FLD(x) __ ## x\n+# else\n+#  error can not work out how to access fields of ppc_thread_state_t\n+# endif\n+#elif defined(__ppc64__)\n+# define THREAD_STATE ppc_thread_state64_t\n+# if defined (HAS_PPC_THREAD_STATE64_R0)\n+#  define THREAD_FLD(x) x\n+# elif defined (HAS_PPC_THREAD_STATE64___R0)\n+#  define THREAD_FLD(x) __ ## x\n+# else\n+#  error can not work out how to access fields of ppc_thread_state64_t\n # endif\n+#elif defined(__i386__)\n+# define THREAD_STATE i386_thread_state_t\n+# if defined (HAS_I386_THREAD_STATE_EAX)\n+#  define THREAD_FLD(x) x\n+# elif defined (HAS_I386_THREAD_STATE___EAX)\n+#  define THREAD_FLD(x) __ ## x\n+# else\n+#  error can not work out how to access fields of i386_thread_state_t\n+# endif\n+#else\n+# error unknown architecture\n #endif\n \n typedef struct StackFrame {\n@@ -75,7 +106,7 @@ void GC_push_all_stacks() {\n   GC_thread p;\n   pthread_t me;\n   ptr_t lo, hi;\n-  ppc_thread_state_t state;\n+  THREAD_STATE state;\n   mach_msg_type_number_t thread_state_count = MACHINE_THREAD_STATE_COUNT;\n   \n   me = pthread_self();\n@@ -95,39 +126,39 @@ void GC_push_all_stacks() {\n \t\t\t     &thread_state_count);\n \tif(r != KERN_SUCCESS) ABORT(\"thread_get_state failed\");\n \t\n-\tlo = (void*)(state.r1 - PPC_RED_ZONE_SIZE);\n+\tlo = (void*)(state . THREAD_FLD (r1) - PPC_RED_ZONE_SIZE);\n         \n-\tGC_push_one(state.r0); \n-\tGC_push_one(state.r2); \n-\tGC_push_one(state.r3); \n-\tGC_push_one(state.r4); \n-\tGC_push_one(state.r5); \n-\tGC_push_one(state.r6); \n-\tGC_push_one(state.r7); \n-\tGC_push_one(state.r8); \n-\tGC_push_one(state.r9); \n-\tGC_push_one(state.r10); \n-\tGC_push_one(state.r11); \n-\tGC_push_one(state.r12); \n-\tGC_push_one(state.r13); \n-\tGC_push_one(state.r14); \n-\tGC_push_one(state.r15); \n-\tGC_push_one(state.r16); \n-\tGC_push_one(state.r17); \n-\tGC_push_one(state.r18); \n-\tGC_push_one(state.r19); \n-\tGC_push_one(state.r20); \n-\tGC_push_one(state.r21); \n-\tGC_push_one(state.r22); \n-\tGC_push_one(state.r23); \n-\tGC_push_one(state.r24); \n-\tGC_push_one(state.r25); \n-\tGC_push_one(state.r26); \n-\tGC_push_one(state.r27); \n-\tGC_push_one(state.r28); \n-\tGC_push_one(state.r29); \n-\tGC_push_one(state.r30); \n-\tGC_push_one(state.r31);\n+\tGC_push_one(state . THREAD_FLD (r0)); \n+\tGC_push_one(state . THREAD_FLD (r2)); \n+\tGC_push_one(state . THREAD_FLD (r3)); \n+\tGC_push_one(state . THREAD_FLD (r4)); \n+\tGC_push_one(state . THREAD_FLD (r5)); \n+\tGC_push_one(state . THREAD_FLD (r6)); \n+\tGC_push_one(state . THREAD_FLD (r7)); \n+\tGC_push_one(state . THREAD_FLD (r8)); \n+\tGC_push_one(state . THREAD_FLD (r9)); \n+\tGC_push_one(state . THREAD_FLD (r10)); \n+\tGC_push_one(state . THREAD_FLD (r11)); \n+\tGC_push_one(state . THREAD_FLD (r12)); \n+\tGC_push_one(state . THREAD_FLD (r13)); \n+\tGC_push_one(state . THREAD_FLD (r14)); \n+\tGC_push_one(state . THREAD_FLD (r15)); \n+\tGC_push_one(state . THREAD_FLD (r16)); \n+\tGC_push_one(state . THREAD_FLD (r17)); \n+\tGC_push_one(state . THREAD_FLD (r18)); \n+\tGC_push_one(state . THREAD_FLD (r19)); \n+\tGC_push_one(state . THREAD_FLD (r20)); \n+\tGC_push_one(state . THREAD_FLD (r21)); \n+\tGC_push_one(state . THREAD_FLD (r22)); \n+\tGC_push_one(state . THREAD_FLD (r23)); \n+\tGC_push_one(state . THREAD_FLD (r24)); \n+\tGC_push_one(state . THREAD_FLD (r25)); \n+\tGC_push_one(state . THREAD_FLD (r26)); \n+\tGC_push_one(state . THREAD_FLD (r27)); \n+\tGC_push_one(state . THREAD_FLD (r28)); \n+\tGC_push_one(state . THREAD_FLD (r29)); \n+\tGC_push_one(state . THREAD_FLD (r30)); \n+\tGC_push_one(state . THREAD_FLD (r31));\n       } /* p != me */\n       if(p->flags & MAIN_THREAD)\n \thi = GC_stackbottom;\n@@ -166,78 +197,74 @@ void GC_push_all_stacks() {\n \tlo = GC_approx_sp();\n \thi = (ptr_t)FindTopOfStack(0);\n       } else {\n-#     if defined(POWERPC)\n-#      if CPP_WORDSZ == 32\n-\tppc_thread_state_t info;\n-#      else\n-\tppc_thread_state64_t info;\n-#      endif\n+#     if defined(__ppc__) || defined(__ppc64__)\n+\tTHREAD_STATE info;\n \tmach_msg_type_number_t outCount = THREAD_STATE_MAX;\n \tr = thread_get_state(thread, MACHINE_THREAD_STATE,\n \t\t\t     (natural_t *)&info, &outCount);\n \tif(r != KERN_SUCCESS) ABORT(\"task_get_state failed\");\n \n-\tlo = (void*)(info.r1 - PPC_RED_ZONE_SIZE);\n-\thi = (ptr_t)FindTopOfStack(info.r1);\n-\n-\tGC_push_one(info.r0); \n-\tGC_push_one(info.r2); \n-\tGC_push_one(info.r3); \n-\tGC_push_one(info.r4); \n-\tGC_push_one(info.r5); \n-\tGC_push_one(info.r6); \n-\tGC_push_one(info.r7); \n-\tGC_push_one(info.r8); \n-\tGC_push_one(info.r9); \n-\tGC_push_one(info.r10); \n-\tGC_push_one(info.r11); \n-\tGC_push_one(info.r12); \n-\tGC_push_one(info.r13); \n-\tGC_push_one(info.r14); \n-\tGC_push_one(info.r15); \n-\tGC_push_one(info.r16); \n-\tGC_push_one(info.r17); \n-\tGC_push_one(info.r18); \n-\tGC_push_one(info.r19); \n-\tGC_push_one(info.r20); \n-\tGC_push_one(info.r21); \n-\tGC_push_one(info.r22); \n-\tGC_push_one(info.r23); \n-\tGC_push_one(info.r24); \n-\tGC_push_one(info.r25); \n-\tGC_push_one(info.r26); \n-\tGC_push_one(info.r27); \n-\tGC_push_one(info.r28); \n-\tGC_push_one(info.r29); \n-\tGC_push_one(info.r30); \n-\tGC_push_one(info.r31);\n+\tlo = (void*)(info . THREAD_FLD (r1) - PPC_RED_ZONE_SIZE);\n+\thi = (ptr_t)FindTopOfStack(info . THREAD_FLD (r1));\n+\n+\tGC_push_one(info . THREAD_FLD (r0)); \n+\tGC_push_one(info . THREAD_FLD (r2)); \n+\tGC_push_one(info . THREAD_FLD (r3)); \n+\tGC_push_one(info . THREAD_FLD (r4)); \n+\tGC_push_one(info . THREAD_FLD (r5)); \n+\tGC_push_one(info . THREAD_FLD (r6)); \n+\tGC_push_one(info . THREAD_FLD (r7)); \n+\tGC_push_one(info . THREAD_FLD (r8)); \n+\tGC_push_one(info . THREAD_FLD (r9)); \n+\tGC_push_one(info . THREAD_FLD (r10)); \n+\tGC_push_one(info . THREAD_FLD (r11)); \n+\tGC_push_one(info . THREAD_FLD (r12)); \n+\tGC_push_one(info . THREAD_FLD (r13)); \n+\tGC_push_one(info . THREAD_FLD (r14)); \n+\tGC_push_one(info . THREAD_FLD (r15)); \n+\tGC_push_one(info . THREAD_FLD (r16)); \n+\tGC_push_one(info . THREAD_FLD (r17)); \n+\tGC_push_one(info . THREAD_FLD (r18)); \n+\tGC_push_one(info . THREAD_FLD (r19)); \n+\tGC_push_one(info . THREAD_FLD (r20)); \n+\tGC_push_one(info . THREAD_FLD (r21)); \n+\tGC_push_one(info . THREAD_FLD (r22)); \n+\tGC_push_one(info . THREAD_FLD (r23)); \n+\tGC_push_one(info . THREAD_FLD (r24)); \n+\tGC_push_one(info . THREAD_FLD (r25)); \n+\tGC_push_one(info . THREAD_FLD (r26)); \n+\tGC_push_one(info . THREAD_FLD (r27)); \n+\tGC_push_one(info . THREAD_FLD (r28)); \n+\tGC_push_one(info . THREAD_FLD (r29)); \n+\tGC_push_one(info . THREAD_FLD (r30)); \n+\tGC_push_one(info . THREAD_FLD (r31));\n #      else\n \t/* FIXME: Remove after testing:\t*/\n \tWARN(\"This is completely untested and likely will not work\\n\", 0);\n-\ti386_thread_state_t info;\n+\tTHREAD_STATE info;\n \tmach_msg_type_number_t outCount = THREAD_STATE_MAX;\n \tr = thread_get_state(thread, MACHINE_THREAD_STATE,\n \t\t\t     (natural_t *)&info, &outCount);\n \tif(r != KERN_SUCCESS) ABORT(\"task_get_state failed\");\n \n-\tlo = (void*)info.esp;\n-\thi = (ptr_t)FindTopOfStack(info.esp);\n-\n-\tGC_push_one(info.eax); \n-\tGC_push_one(info.ebx); \n-\tGC_push_one(info.ecx); \n-\tGC_push_one(info.edx); \n-\tGC_push_one(info.edi); \n-\tGC_push_one(info.esi); \n-\t/* GC_push_one(info.ebp);  */\n-\t/* GC_push_one(info.esp);  */\n-\tGC_push_one(info.ss); \n-\tGC_push_one(info.eip); \n-\tGC_push_one(info.cs); \n-\tGC_push_one(info.ds); \n-\tGC_push_one(info.es); \n-\tGC_push_one(info.fs); \n-\tGC_push_one(info.gs); \n+\tlo = (void*)info . THREAD_FLD (esp);\n+\thi = (ptr_t)FindTopOfStack(info . THREAD_FLD (esp));\n+\n+\tGC_push_one(info . THREAD_FLD (eax)); \n+\tGC_push_one(info . THREAD_FLD (ebx)); \n+\tGC_push_one(info . THREAD_FLD (ecx)); \n+\tGC_push_one(info . THREAD_FLD (edx)); \n+\tGC_push_one(info . THREAD_FLD (edi)); \n+\tGC_push_one(info . THREAD_FLD (esi)); \n+\t/* GC_push_one(info . THREAD_FLD (ebp));  */\n+\t/* GC_push_one(info . THREAD_FLD (esp));  */\n+\tGC_push_one(info . THREAD_FLD (ss)); \n+\tGC_push_one(info . THREAD_FLD (eip)); \n+\tGC_push_one(info . THREAD_FLD (cs)); \n+\tGC_push_one(info . THREAD_FLD (ds)); \n+\tGC_push_one(info . THREAD_FLD (es)); \n+\tGC_push_one(info . THREAD_FLD (fs)); \n+\tGC_push_one(info . THREAD_FLD (gs)); \n #      endif /* !POWERPC */\n       }\n #     if DEBUG_THREADS"}, {"sha": "401de609ba6aee525951104041a572fc53df1444", "filename": "boehm-gc/include/gc_config.h.in", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/boehm-gc%2Finclude%2Fgc_config.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/boehm-gc%2Finclude%2Fgc_config.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fgc_config.h.in?ref=4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "patch": "@@ -57,6 +57,24 @@\n /* support for win32 threads */\n #undef GC_WIN32_THREADS\n \n+/* i386_thread_state_t has field eax */\n+#undef HAS_I386_THREAD_STATE_EAX\n+\n+/* i386_thread_state_t has field __eax */\n+#undef HAS_I386_THREAD_STATE___EAX\n+\n+/* ppc_thread_state64_t has field r0 */\n+#undef HAS_PPC_THREAD_STATE64_R0\n+\n+/* ppc_thread_state64_t has field __r0 */\n+#undef HAS_PPC_THREAD_STATE64___R0\n+\n+/* ppc_thread_state_t has field r0 */\n+#undef HAS_PPC_THREAD_STATE_R0\n+\n+/* ppc_thread_state_t has field __r0 */\n+#undef HAS_PPC_THREAD_STATE___R0\n+\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n@@ -154,5 +172,5 @@\n /* POSIX version of C Source */\n #undef _POSIX_C_SOURCE\n \n-/* Use reentrant code */\n+/* Required define if using POSIX threads */\n #undef _REENTRANT"}, {"sha": "34d6f17fe18535c1c1d282317bbdb5e4eb06b036", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "patch": "@@ -1,3 +1,14 @@\n+2006-06-02  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config/rs6000/host-darwin.c (sigaltstack): Protect prototype with\n+\tHAVE_DECL_SIGALTSTACK.\n+\t(MC_FLD): New.\n+\t(segv_handler): Use MC_FLD.\n+\t* configure.ac: Check for a sigaltstack declaration.\n+\tCompute HAS_MCONTEXT_T_UNDERSCORES on Darwin.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\n 2006-06-03  J\"orn Rennecke <joern.rennecke@st.com>\n \n \tPR other/27850"}, {"sha": "d5f854ef95999cf022290dd7eb0d9cd983e612ee", "filename": "gcc/config.in", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "patch": "@@ -148,6 +148,12 @@\n #endif\n \n \n+/* mcontext_t fields start with __ */\n+#ifndef USED_FOR_TARGET\n+#undef HAS_MCONTEXT_T_UNDERSCORES\n+#endif\n+\n+\n /* Define to 1 if you have the `alphasort' function. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_ALPHASORT\n@@ -568,6 +574,13 @@\n #endif\n \n \n+/* Define to 1 if we found a declaration for 'sigaltstack', otherwise define\n+   to 0. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_DECL_SIGALTSTACK\n+#endif\n+\n+\n /* Define to 1 if we found a declaration for 'snprintf', otherwise define to\n    0. */\n #ifndef USED_FOR_TARGET"}, {"sha": "b0fc7c6832689083be81c279feb714e91f53f40c", "filename": "gcc/config/rs6000/host-darwin.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c?ref=4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "patch": "@@ -33,9 +33,19 @@ static void segv_crash_handler (int);\n static void segv_handler (int, siginfo_t *, void *);\n static void darwin_rs6000_extra_signals (void);\n \n+#ifndef HAVE_DECL_SIGALTSTACK\n /* This doesn't have a prototype in signal.h in 10.2.x and earlier,\n    fixed in later releases.  */\n extern int sigaltstack(const struct sigaltstack *, struct sigaltstack *);\n+#endif\n+\n+/* The fields of the mcontext_t type have acquired underscores in later\n+   OS versions.  */\n+#ifdef HAS_MCONTEXT_T_UNDERSCORES\n+#define MC_FLD(x) __ ## x\n+#else\n+#define MC_FLD(x) x\n+#endif\n \n #undef HOST_HOOKS_EXTRA_SIGNALS\n #define HOST_HOOKS_EXTRA_SIGNALS darwin_rs6000_extra_signals\n@@ -68,7 +78,7 @@ segv_handler (int sig ATTRIBUTE_UNUSED,\n   sigaddset (&sigset, SIGSEGV);\n   sigprocmask (SIG_UNBLOCK, &sigset, NULL);\n \n-  faulting_insn = *(unsigned *)uc->uc_mcontext->ss.srr0;\n+  faulting_insn = *(unsigned *)uc->uc_mcontext->MC_FLD(ss).MC_FLD(srr0);\n \n   /* Note that this only has to work for GCC, so we don't have to deal\n      with all the possible cases (GCC has no AltiVec code, for\n@@ -117,7 +127,8 @@ segv_handler (int sig ATTRIBUTE_UNUSED,\n     }\n \n   fprintf (stderr, \"[address=%08lx pc=%08x]\\n\", \n-\t   uc->uc_mcontext->es.dar, uc->uc_mcontext->ss.srr0);\n+\t   uc->uc_mcontext->MC_FLD(es).MC_FLD(dar),\n+\t   uc->uc_mcontext->MC_FLD(ss).MC_FLD(srr0));\n   internal_error (\"Segmentation Fault\");\n   exit (FATAL_EXIT_CODE);\n }"}, {"sha": "60e753020f769db790a144b28e402fc075ac1258", "filename": "gcc/configure", "status": "modified", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "patch": "@@ -11756,6 +11756,88 @@ fi\n done\n \n \n+\n+for ac_func in sigaltstack\n+do\n+  ac_tr_decl=`echo \"HAVE_DECL_$ac_func\" | $as_tr_cpp`\n+echo \"$as_me:$LINENO: checking whether $ac_func is declared\" >&5\n+echo $ECHO_N \"checking whether $ac_func is declared... $ECHO_C\" >&6\n+if eval \"test \\\"\\${gcc_cv_have_decl_$ac_func+set}\\\" = set\"; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#undef $ac_tr_decl\n+#define $ac_tr_decl 1\n+\n+#include \"ansidecl.h\"\n+#include \"system.h\"\n+#include <signal.h>\n+\n+\n+int\n+main ()\n+{\n+#ifndef $ac_func\n+char *(*pfn) = (char *(*)) $ac_func ;\n+#endif\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  eval \"gcc_cv_have_decl_$ac_func=yes\"\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+eval \"gcc_cv_have_decl_$ac_func=no\"\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+\n+if eval \"test \\\"`echo '$gcc_cv_have_decl_'$ac_func`\\\" = yes\"; then\n+  echo \"$as_me:$LINENO: result: yes\" >&5\n+echo \"${ECHO_T}yes\" >&6 ; cat >>confdefs.h <<_ACEOF\n+#define $ac_tr_decl 1\n+_ACEOF\n+\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6 ; cat >>confdefs.h <<_ACEOF\n+#define $ac_tr_decl 0\n+_ACEOF\n+\n+fi\n+\n+done\n+\n+\n # More time-related stuff.\n echo \"$as_me:$LINENO: checking for struct tms\" >&5\n echo $ECHO_N \"checking for struct tms... $ECHO_C\" >&6\n@@ -12195,6 +12277,62 @@ if test \"$host_xm_file\" != \"$build_xm_file\"; then\n \tfi\n fi\n \n+case ${host} in\n+  powerpc-*-darwin*)\n+    echo \"$as_me:$LINENO: checking whether mcontext_t fields have underscores\" >&5\n+echo $ECHO_N \"checking whether mcontext_t fields have underscores... $ECHO_C\" >&6\n+if test \"${gcc_cv_mcontext_underscores+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+\n+#include <ucontext.h>\n+int main() { mcontext_t m; if (m->ss.srr0) return 0; return 0; }\n+\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  gcc_cv_mcontext_underscores=no\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+gcc_cv_mcontext_underscores=yes\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_mcontext_underscores\" >&5\n+echo \"${ECHO_T}$gcc_cv_mcontext_underscores\" >&6\n+      if test $gcc_cv_mcontext_underscores = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAS_MCONTEXT_T_UNDERSCORES\n+_ACEOF\n+\n+      fi\n+    ;;\n+esac\n+\n # ---------\n # Threading\n # ---------"}, {"sha": "d4d09f5dffd87c286c854bcaf9fee18b662b4590", "filename": "gcc/configure.ac", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=4f6d8cc800fc8a48fa5b8bbe728dd109c3b23fb2", "patch": "@@ -1154,6 +1154,12 @@ gcc_AC_CHECK_DECLS(times, , ,[\n #endif\n ])\n \n+gcc_AC_CHECK_DECLS(sigaltstack, , ,[\n+#include \"ansidecl.h\"\n+#include \"system.h\"\n+#include <signal.h>\n+])\n+\n # More time-related stuff.\n AC_CACHE_CHECK(for struct tms, ac_cv_struct_tms, [\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n@@ -1337,6 +1343,22 @@ if test \"$host_xm_file\" != \"$build_xm_file\"; then\n \tfi\n fi\n \n+case ${host} in\n+  powerpc-*-darwin*)\n+    AC_CACHE_CHECK([whether mcontext_t fields have underscores],\n+      gcc_cv_mcontext_underscores,\n+      AC_COMPILE_IFELSE([\n+#include <ucontext.h>\n+int main() { mcontext_t m; if (m->ss.srr0) return 0; return 0; }\n+],\n+\tgcc_cv_mcontext_underscores=no, gcc_cv_mcontext_underscores=yes))\n+      if test $gcc_cv_mcontext_underscores = yes; then\n+        AC_DEFINE(HAS_MCONTEXT_T_UNDERSCORES,,dnl\n+          [mcontext_t fields start with __])\n+      fi\n+    ;;\n+esac\n+\n # ---------\n # Threading\n # ---------"}]}