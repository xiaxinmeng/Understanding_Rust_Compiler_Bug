{"sha": "79ba5e3b9e7f922a99c698829c88f2b47700fd5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzliYTVlM2I5ZTdmOTIyYTk5YzY5ODgyOWM4OGYyYjQ3NzAwZmQ1ZQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2002-09-03T21:55:40Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-09-03T21:55:40Z"}, "message": "Debian BTS Bug #\n\n\tDebian BTS Bug #\n\t* cpphash.h (FIRST, LAST, CUR, RLIMIT): Fix definitions.\n\t* cpplib.c (destringize_and_run): Kludge around getting\n\ttokens from in-progress macros.\n\t(_cpp_do__Pragma): Simplify.\ntestsuite:\n\t* gcc.dg/cpp/_Pragma4.c: New test.\n\nFrom-SVN: r56773", "tree": {"sha": "84d9fd1cdaf53611a6a00b419c9f785e32787d39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84d9fd1cdaf53611a6a00b419c9f785e32787d39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79ba5e3b9e7f922a99c698829c88f2b47700fd5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79ba5e3b9e7f922a99c698829c88f2b47700fd5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79ba5e3b9e7f922a99c698829c88f2b47700fd5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79ba5e3b9e7f922a99c698829c88f2b47700fd5e/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f4701961145138742997ead9600196211450c9d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4701961145138742997ead9600196211450c9d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4701961145138742997ead9600196211450c9d9"}], "stats": {"total": 89, "additions": 67, "deletions": 22}, "files": [{"sha": "8f885546177222f5959e5d22e21f71007b52c215", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ba5e3b9e7f922a99c698829c88f2b47700fd5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ba5e3b9e7f922a99c698829c88f2b47700fd5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79ba5e3b9e7f922a99c698829c88f2b47700fd5e", "patch": "@@ -1,3 +1,11 @@\n+2002-09-03  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\tDebian BTS Bug #157416\n+\t* cpphash.h (FIRST, LAST, CUR, RLIMIT): Fix definitions.\n+\t* cpplib.c (destringize_and_run): Kludge around getting\n+\ttokens from in-progress macros.\n+\t(_cpp_do__Pragma): Simplify.\n+\n 2002-09-03  Steve Ellcey  <sje@cup.hp.com>\n \n \t* config/ia64/ia64.h (EXTRA_SPECS): Remove cpp_cpu."}, {"sha": "61027f2dfaa169c052e0b771b0b0b3cfe21b01fc", "filename": "gcc/cpphash.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ba5e3b9e7f922a99c698829c88f2b47700fd5e/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ba5e3b9e7f922a99c698829c88f2b47700fd5e/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=79ba5e3b9e7f922a99c698829c88f2b47700fd5e", "patch": "@@ -166,10 +166,10 @@ struct tokenrun\n };\n \n /* Accessor macros for struct cpp_context.  */\n-#define FIRST(c) (c->u.iso.first)\n-#define LAST(c) (c->u.iso.last)\n-#define CUR(c) (c->u.trad.cur)\n-#define RLIMIT(c) (c->u.trad.rlimit)\n+#define FIRST(c) ((c)->u.iso.first)\n+#define LAST(c) ((c)->u.iso.last)\n+#define CUR(c) ((c)->u.trad.cur)\n+#define RLIMIT(c) ((c)->u.trad.rlimit)\n \n typedef struct cpp_context cpp_context;\n struct cpp_context"}, {"sha": "ef167f23681119a1f1ee21b2adbc6f17aaecc165", "filename": "gcc/cpplib.c", "status": "modified", "additions": 39, "deletions": 18, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ba5e3b9e7f922a99c698829c88f2b47700fd5e/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ba5e3b9e7f922a99c698829c88f2b47700fd5e/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=79ba5e3b9e7f922a99c698829c88f2b47700fd5e", "patch": "@@ -1277,6 +1277,9 @@ destringize_and_run (pfile, in)\n {\n   const unsigned char *src, *limit;\n   char *dest, *result;\n+  cpp_context saved_context;\n+  cpp_context *saved_cur_context;\n+  unsigned int saved_line;\n \n   dest = result = alloca (in->len + 1);\n   for (src = in->text, limit = src + in->len; src < limit;)\n@@ -1288,7 +1291,40 @@ destringize_and_run (pfile, in)\n     }\n   *dest = '\\0';\n \n+  /* FIXME.  All this saving is a horrible kludge to handle the case\n+     when we're in a macro expansion.\n+\n+     A better strategy it to not convert _Pragma to #pragma if doing\n+     preprocessed output, but to just pass it through as-is, unless it\n+     is a CPP pragma in which case is should be processed normally.\n+     When compiling the preprocessed output the _Pragma should be\n+     handled.  This will be become necessary when we move to\n+     line-at-a-time lexing since we will be macro-expanding the line\n+     before outputting / compiling it.  */\n+  saved_line = pfile->line;\n+  saved_context = pfile->base_context;\n+  saved_cur_context = pfile->context;\n+  pfile->context = &pfile->base_context;\n   run_directive (pfile, T_PRAGMA, result, dest - result);\n+  pfile->context = saved_cur_context;\n+  pfile->base_context = saved_context;\n+  pfile->line = saved_line;\n+\n+  /* See above comment.  For the moment, we'd like\n+\n+     token1 _Pragma (\"foo\") token2\n+\n+     to be output as\n+\n+\t\ttoken1\n+\t\t# 7 \"file.c\"\n+\t\t#pragma foo\n+\t\t# 7 \"file.c\"\n+\t\t\t       token2\n+\n+      Getting the line markers is a little tricky.  */\n+  if (pfile->cb.line_change)\n+    (*pfile->cb.line_change) (pfile, pfile->cur_token, false);\n }\n \n /* Handle the _Pragma operator.  */\n@@ -1298,26 +1334,11 @@ _cpp_do__Pragma (pfile)\n {\n   const cpp_token *string = get__Pragma_string (pfile);\n \n-  if (!string)\n+  if (string)\n+    destringize_and_run (pfile, &string->val.str);\n+  else\n     cpp_error (pfile, DL_ERROR,\n \t       \"_Pragma takes a parenthesized string literal\");\n-  else\n-    {\n-      /* Ideally, we'd like\n-\t\t\ttoken1 _Pragma (\"foo\") token2\n-\t to be output as\n-\t\t\ttoken1\n-\t\t\t# 7 \"file.c\"\n-\t\t\t#pragma foo\n-\t\t\t# 7 \"file.c\"\n-\t\t\t\t\t       token2\n-\t Getting these correct line markers is a little tricky.  */\n-\n-      unsigned int orig_line = pfile->line;\n-      destringize_and_run (pfile, &string->val.str);\n-      pfile->line = orig_line;\n-      pfile->buffer->saved_flags = BOL;\n-    }\n }\n \n /* Just ignore #sccs on all systems.  */"}, {"sha": "b1f4655c3e509a376408a983ba887bb78ff3b0b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ba5e3b9e7f922a99c698829c88f2b47700fd5e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ba5e3b9e7f922a99c698829c88f2b47700fd5e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79ba5e3b9e7f922a99c698829c88f2b47700fd5e", "patch": "@@ -1,3 +1,7 @@\n+2002-09-03  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* gcc.dg/cpp/_Pragma4.c: New test.\n+\n Tue Sep  3 11:04:26 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \n \t* objc/execute/nil_method-1.m: New testcase."}, {"sha": "8d8cea5ab4c95ce5750cd7ae92f93dca07c770b4", "filename": "gcc/testsuite/gcc.dg/cpp/_Pragma4.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ba5e3b9e7f922a99c698829c88f2b47700fd5e/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F_Pragma4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ba5e3b9e7f922a99c698829c88f2b47700fd5e/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F_Pragma4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F_Pragma4.c?ref=79ba5e3b9e7f922a99c698829c88f2b47700fd5e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do preprocess } */\n+\n+/* Based on Debian GNATS PR 157416.  3 Sep 2002.  */\n+\n+#define b foo _Pragma (\"bar\") baz\n+a b c \n+\n+/*\n+   { dg-final { if ![file exists _Pragma4.i] { return }                   } }\n+   { dg-final { if { [grep _Pragma4.i \"#pragma bat \"] != \"\" } { return }  } }\n+   { dg-final { fail \"_Pragma4.c: #pragma appearing on its own line\"      } }\n+*/"}]}