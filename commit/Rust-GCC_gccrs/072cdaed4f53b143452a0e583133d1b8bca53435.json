{"sha": "072cdaed4f53b143452a0e583133d1b8bca53435", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcyY2RhZWQ0ZjUzYjE0MzQ1MmEwZTU4MzEzM2QxYjhiY2E1MzQzNQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-07-31T02:10:06Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-07-31T02:10:06Z"}, "message": "m68hc11.h, [...] (ASM_GLOBALIZE_LABEL): Delete.\n\n\t* m68hc11.h, m68k.h, m88k.h (ASM_GLOBALIZE_LABEL): Delete.\n\n\t* defaults.h (ASM_GLOBALIZE_LABEL): Provide a default.\n\t* doc/tm.texi (ASM_GLOBALIZE_LABEL): Update docs.\n\nFrom-SVN: r55891", "tree": {"sha": "24bfdb42025c5ea39eb6d708bbc232639443e786", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24bfdb42025c5ea39eb6d708bbc232639443e786"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/072cdaed4f53b143452a0e583133d1b8bca53435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072cdaed4f53b143452a0e583133d1b8bca53435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/072cdaed4f53b143452a0e583133d1b8bca53435", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072cdaed4f53b143452a0e583133d1b8bca53435/comments", "author": null, "committer": null, "parents": [{"sha": "6fd140757c318380907c82ef4c925519c7051332", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fd140757c318380907c82ef4c925519c7051332", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fd140757c318380907c82ef4c925519c7051332"}], "stats": {"total": 47, "additions": 23, "deletions": 24}, "files": [{"sha": "4cf77663de1e6d31b45d7126a145d2d98d556595", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072cdaed4f53b143452a0e583133d1b8bca53435/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072cdaed4f53b143452a0e583133d1b8bca53435/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=072cdaed4f53b143452a0e583133d1b8bca53435", "patch": "@@ -1,3 +1,10 @@\n+2002-07-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* m68hc11.h, m68k.h, m88k.h (ASM_GLOBALIZE_LABEL): Delete.\n+\t\n+\t* defaults.h (ASM_GLOBALIZE_LABEL): Provide a default.\n+\t* doc/tm.texi (ASM_GLOBALIZE_LABEL): Update docs.\n+\n 2002-07-30  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* doc/extend.texi (Hints implementation): Document that GCC"}, {"sha": "aec92b781ff61df23c31536738cb321dadefd223", "filename": "gcc/config/m68hc11/m68hc11.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072cdaed4f53b143452a0e583133d1b8bca53435/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072cdaed4f53b143452a0e583133d1b8bca53435/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h?ref=072cdaed4f53b143452a0e583133d1b8bca53435", "patch": "@@ -1555,14 +1555,6 @@ do {                                                                    \\\n \n /* Output #ident as a .ident.  */\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  do { fprintf (FILE, \"%s\", GLOBAL_ASM_OP);\t\t\\\n-       assemble_name (FILE, NAME);\t\t\t\\\n-       fputs (\"\\n\", FILE);} while (0)\n-\n /* output external reference */\n #define ASM_OUTPUT_EXTERNAL(FILE,DECL,NAME) \\\n   {fputs (\"\\t; extern\\t\", FILE); \\"}, {"sha": "feb27a2da4a20f520e3cf7da8d1c42e35783a81a", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072cdaed4f53b143452a0e583133d1b8bca53435/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072cdaed4f53b143452a0e583133d1b8bca53435/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=072cdaed4f53b143452a0e583133d1b8bca53435", "patch": "@@ -1735,14 +1735,7 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n /* Before the prologue, the top of the frame is at 4(%sp).  */\n #define INCOMING_FRAME_SP_OFFSET 4\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-\n #define GLOBAL_ASM_OP \"\\t.globl\\t\"\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n-  do { fprintf (FILE, \"%s\", GLOBAL_ASM_OP);\t\t\\\n-       assemble_name (FILE, NAME);\t\t\t\\\n-       fputs (\"\\n\", FILE);} while (0)\n \n /* This is how to output a reference to a user-level label named NAME.\n    `assemble_name' uses this.  */"}, {"sha": "f8f487c7d9e05217063509e60689cc5c7cbb3e6f", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072cdaed4f53b143452a0e583133d1b8bca53435/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072cdaed4f53b143452a0e583133d1b8bca53435/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=072cdaed4f53b143452a0e583133d1b8bca53435", "patch": "@@ -1870,15 +1870,6 @@ do {\t\t\t\t\t\t\t\t\t \\\n       ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\t\\\n   } while (0)\n \n-/* This is how to output a command to make the user-level label named NAME\n-   defined for reference from other files.  */\n-#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"%s\", GLOBAL_ASM_OP);\t\t\\\n-    assemble_name (FILE, NAME);\t\t\t\t\\\n-    putc ('\\n', FILE);\t\t\t\t\t\\\n-  } while (0)\n-\n /* The prefix to add to user-visible assembler symbols.\n    Override svr[34].h.  */\n #undef USER_LABEL_PREFIX"}, {"sha": "115cc01b403eeaf39e6b56d7c0fcfa8c896be30e", "filename": "gcc/defaults.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072cdaed4f53b143452a0e583133d1b8bca53435/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072cdaed4f53b143452a0e583133d1b8bca53435/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=072cdaed4f53b143452a0e583133d1b8bca53435", "patch": "@@ -154,6 +154,19 @@ do { fputs (integer_asm_op (POINTER_SIZE / UNITS_PER_WORD, TRUE), FILE); \\\n #define ASM_OUTPUT_LABELREF(FILE,NAME)  asm_fprintf ((FILE), \"%U%s\", (NAME))\n #endif\n \n+/* A C statement (sans semicolon) to output to the stdio stream FILE\n+   some commands that will make the label NAME global; that is,\n+   available for reference from other files.  */\n+\n+#if !defined(ASM_GLOBALIZE_LABEL) && defined(GLOBAL_ASM_OP)\n+#define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\t\\\n+  do {\t\t\t\t\t\t\\\n+      fputs (GLOBAL_ASM_OP, (FILE));\t\t\\\n+      assemble_name ((FILE), (NAME));\t\t\\\n+      fputc ('\\n', (FILE));\t\t\t\\\n+  } while (0)\n+#endif\n+\n /* Allow target to print debug info labels specially.  This is useful for\n    VLIW targets, since debug info labels should go into the middle of\n    instruction bundles instead of breaking them.  */"}, {"sha": "12f6ff7399de6b163c28ea37029bb3208237118f", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072cdaed4f53b143452a0e583133d1b8bca53435/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072cdaed4f53b143452a0e583133d1b8bca53435/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=072cdaed4f53b143452a0e583133d1b8bca53435", "patch": "@@ -6551,6 +6551,9 @@ that is, available for reference from other files.  Use the expression\n itself; before and after that, output the additional assembler syntax\n for making that name global, and a newline.\n \n+If you define @code{GLOBAL_ASM_OP}, a default definition is provided\n+which is correct for most systems.\n+\n @findex ASM_WEAKEN_LABEL\n @item ASM_WEAKEN_LABEL (@var{stream}, @var{name})\n A C statement (sans semicolon) to output to the stdio stream"}]}