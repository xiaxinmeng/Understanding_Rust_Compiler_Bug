{"sha": "8760be8546edd0941c1d62dd47e5130fae5df953", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc2MGJlODU0NmVkZDA5NDFjMWQ2MmRkNDdlNTEzMGZhZTVkZjk1Mw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-11-28T16:25:33Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-11-28T16:25:33Z"}, "message": "re PR target/64093 (ICE error: unrecognizable insn with -mcpu=cell)\n\n\tPR target/64093\n\t* config/rs6000/rs6000.md (and<mode>3): Don't generate\n\tand<mode>3_imm unless rs6000_gen_cell_microcode is true.\n\nFrom-SVN: r218164", "tree": {"sha": "5e61b6af3f5176dfed13219a158b937d72fe26df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e61b6af3f5176dfed13219a158b937d72fe26df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8760be8546edd0941c1d62dd47e5130fae5df953", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8760be8546edd0941c1d62dd47e5130fae5df953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8760be8546edd0941c1d62dd47e5130fae5df953", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8760be8546edd0941c1d62dd47e5130fae5df953/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a4da643ca8f52e973b89a76057b76fde7f0a708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4da643ca8f52e973b89a76057b76fde7f0a708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4da643ca8f52e973b89a76057b76fde7f0a708"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "b8f8dbe8bbed5034a03dde05893609b4ffd7237e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8760be8546edd0941c1d62dd47e5130fae5df953/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8760be8546edd0941c1d62dd47e5130fae5df953/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8760be8546edd0941c1d62dd47e5130fae5df953", "patch": "@@ -1,3 +1,9 @@\n+2014-11-28  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/64093\n+\t* config/rs6000/rs6000.md (and<mode>3): Don't generate\n+\tand<mode>3_imm unless rs6000_gen_cell_microcode is true.\n+\n 2014-11-28  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/64087"}, {"sha": "f3b5aae18e69ec8aba26fb23e755e77ed21c2481", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8760be8546edd0941c1d62dd47e5130fae5df953/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8760be8546edd0941c1d62dd47e5130fae5df953/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=8760be8546edd0941c1d62dd47e5130fae5df953", "patch": "@@ -2646,8 +2646,13 @@\n   if (logical_const_operand (operands[2], <MODE>mode)\n       && !any_mask_operand (operands[2], <MODE>mode))\n     {\n-      emit_insn (gen_and<mode>3_imm (operands[0], operands[1], operands[2]));\n-      DONE;\n+      if (rs6000_gen_cell_microcode)\n+\t{\n+\t  emit_insn (gen_and<mode>3_imm (operands[0], operands[1], operands[2]));\n+\t  DONE;\n+\t}\n+      else\n+\toperands[2] = force_reg (<MODE>mode, operands[2]);\n     }\n \n   if ((<MODE>mode == DImode && !and64_2_operand (operands[2], <MODE>mode))"}]}