{"sha": "c7ca610ed5e808e725711d3a9acd275f6f3eb727", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdjYTYxMGVkNWU4MDhlNzI1NzExZDNhOWFjZDI3NWY2ZjNlYjcyNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-04-20T21:44:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-04-20T21:44:06Z"}, "message": "(rs6000_output_load_toc_table): New function.\n\n(output_prolog): Call it instead of doing it directly.\n\nFrom-SVN: r13942", "tree": {"sha": "2628e362ca3dd7a2f4f64d35754be578b4dd068e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2628e362ca3dd7a2f4f64d35754be578b4dd068e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7ca610ed5e808e725711d3a9acd275f6f3eb727", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ca610ed5e808e725711d3a9acd275f6f3eb727", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7ca610ed5e808e725711d3a9acd275f6f3eb727", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ca610ed5e808e725711d3a9acd275f6f3eb727/comments", "author": null, "committer": null, "parents": [{"sha": "229558eea30b4013e36e08adfd3cd3450a098e9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/229558eea30b4013e36e08adfd3cd3450a098e9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/229558eea30b4013e36e08adfd3cd3450a098e9f"}], "stats": {"total": 138, "additions": 70, "deletions": 68}, "files": [{"sha": "c009eff72660ac6863b6990b42fff71ed9cbc260", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 70, "deletions": 68, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7ca610ed5e808e725711d3a9acd275f6f3eb727/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7ca610ed5e808e725711d3a9acd275f6f3eb727/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=c7ca610ed5e808e725711d3a9acd275f6f3eb727", "patch": "@@ -3324,8 +3324,76 @@ debug_stack_info (info)\n \n   fprintf (stderr, \"\\n\");\n }\n-\n \f\n+/* Write out an instruction to load the TOC_TABLE address into register 30.\n+   This is only needed when TARGET_TOC, TARGET_MINIMAL_TOC, and there is\n+   a constant pool.  */\n+\n+void\n+rs6000_output_load_toc_table (file)\n+     FILE *file;\n+{\n+  char buf[256];\n+\n+#ifdef USING_SVR4_H\n+  if (TARGET_RELOCATABLE)\n+    {\n+      ASM_GENERATE_INTERNAL_LABEL (buf, \"LCF\", rs6000_pic_labelno);\n+      fprintf (file, \"\\tbl \");\n+      assemble_name (file, buf);\n+      fprintf (file, \"\\n\");\n+\n+      ASM_OUTPUT_INTERNAL_LABEL (file, \"LCF\", rs6000_pic_labelno);\n+      fprintf (file, \"\\tmflr %s\\n\", reg_names[30]);\n+\n+      if (TARGET_POWERPC64)\n+\tfprintf (file, \"\\tld\");\n+      else if (TARGET_NEW_MNEMONICS)\n+\tfprintf (file, \"\\tlwz\");\n+      else\n+\tfprintf (file, \"\\tl\");\n+\n+      fprintf (file, \" %s,(\", reg_names[0]);\n+      ASM_GENERATE_INTERNAL_LABEL (buf, \"LCL\", rs6000_pic_labelno);\n+      assemble_name (file, buf);\n+      fprintf (file, \"-\");\n+      ASM_GENERATE_INTERNAL_LABEL (buf, \"LCF\", rs6000_pic_labelno);\n+      assemble_name (file, buf);\n+      fprintf (file, \")(%s)\\n\", reg_names[30]);\n+      asm_fprintf (file, \"\\t{cax|add} %s,%s,%s\\n\",\n+\t\t   reg_names[30], reg_names[0], reg_names[30]);\n+      rs6000_pic_labelno++;\n+    }\n+  else if (!TARGET_64BIT)\n+    {\n+      ASM_GENERATE_INTERNAL_LABEL (buf, \"LCTOC\", 1);\n+      asm_fprintf (file, \"\\t{cau|addis} %s,%s,\", reg_names[30], reg_names[0]);\n+      assemble_name (file, buf);\n+      asm_fprintf (file, \"@ha\\n\");\n+      if (TARGET_NEW_MNEMONICS)\n+\t{\n+\t  asm_fprintf (file, \"\\taddi %s,%s,\", reg_names[30], reg_names[30]);\n+\t  assemble_name (file, buf);\n+\t  asm_fprintf (file, \"@l\\n\");\n+\t}\n+      else\n+\t{\n+\t  asm_fprintf (file, \"\\tcal %s,\", reg_names[30]);\n+\t  assemble_name (file, buf);\n+\t  asm_fprintf (file, \"@l(%s)\\n\", reg_names[30]);\n+\t}\n+    }\n+  else\n+    abort ();\n+\n+#else\t/* !USING_SVR4_H */\n+  ASM_GENERATE_INTERNAL_LABEL (buf, \"LCTOC\", 0);\n+  asm_fprintf (file, \"\\t{l|lwz} %s,\", reg_names[30]);\n+  assemble_name (file, buf);\n+  asm_fprintf (file, \"(%s)\\n\", reg_names[2]);\n+#endif /* USING_SVR4_H */\n+}\n+\n /* Write function prologue.  */\n void\n output_prolog (file, size)\n@@ -3595,73 +3663,7 @@ output_prolog (file, size)\n   /* If TARGET_MINIMAL_TOC, and the constant pool is needed, then load the\n      TOC_TABLE address into register 30.  */\n   if (TARGET_TOC && TARGET_MINIMAL_TOC && get_pool_size () != 0)\n-    {\n-      char buf[256];\n-\n-#ifdef TARGET_RELOCATABLE\n-      if (TARGET_RELOCATABLE)\n-\t{\n-\t  ASM_GENERATE_INTERNAL_LABEL (buf, \"LCF\", rs6000_pic_labelno);\n-\t  fputs (\"\\tbl \", file);\n-\t  assemble_name (file, buf);\n-\t  putc ('\\n', file);\n-\n-\t  ASM_OUTPUT_INTERNAL_LABEL (file, \"LCF\", rs6000_pic_labelno);\n-\t  fprintf (file, \"\\tmflr %s\\n\", reg_names[30]);\n-\n-\t  asm_fprintf (file, (TARGET_32BIT) ? \"\\t{l|lwz}\" : \"\\tld\");\n-\t  fprintf (file, \" %s,(\", reg_names[0]);\n-\t  ASM_GENERATE_INTERNAL_LABEL (buf, \"LCL\", rs6000_pic_labelno);\n-\t  assemble_name (file, buf);\n-\t  putc ('-', file);\n-\t  ASM_GENERATE_INTERNAL_LABEL (buf, \"LCF\", rs6000_pic_labelno);\n-\t  assemble_name (file, buf);\n-\t  fprintf (file, \")(%s)\\n\", reg_names[30]);\n-\t  asm_fprintf (file, \"\\t{cax|add} %s,%s,%s\\n\",\n-\t\t       reg_names[30], reg_names[0], reg_names[30]);\n-\t  rs6000_pic_labelno++;\n-\t}\n-      else\n-#endif\n-\n-\tswitch (DEFAULT_ABI)\n-\t  {\n-\t  case ABI_V4:\n-\t  case ABI_SOLARIS:\n-\t  case ABI_AIX_NODESC:\n-\t    if (TARGET_32BIT)\n-\t      {\n-\t\tASM_GENERATE_INTERNAL_LABEL (buf, \"LCTOC\", 1);\n-\t\tasm_fprintf (file, \"\\t{cau|addis} %s,%s,\", reg_names[30], reg_names[0]);\n-\t\tassemble_name (file, buf);\n-\t\tasm_fprintf (file, \"@ha\\n\");\n-\t\tif (TARGET_NEW_MNEMONICS)\n-\t\t  {\n-\t\t    asm_fprintf (file, \"\\taddi %s,%s,\", reg_names[30], reg_names[30]);\n-\t\t    assemble_name (file, buf);\n-\t\t    asm_fprintf (file, \"@l\\n\");\n-\t\t  }\n-\t\telse\n-\t\t  {\n-\t\t    asm_fprintf (file, \"\\tcal %s,\", reg_names[30]);\n-\t\t    assemble_name (file, buf);\n-\t\t    asm_fprintf (file, \"@l(%s)\\n\", reg_names[30]);\n-\t\t  }\n-\t      }\n-\t    else\n-\t      abort ();\n-\n-\t  break;\n-\n-\tcase ABI_NT:\n-\tcase ABI_AIX:\n-\t  ASM_GENERATE_INTERNAL_LABEL (buf, \"LCTOC\", 0);\n-\t  asm_fprintf (file, \"\\t{l|lwz} %s,\", reg_names[30]);\n-\t  assemble_name (file, buf);\n-\t  asm_fprintf (file, \"(%s)\\n\", reg_names[2]);\n-\t  break;\n-\t}\n-    }\n+    rs6000_output_load_toc_table (file);\n \n   if (DEFAULT_ABI == ABI_NT)\n     {"}]}