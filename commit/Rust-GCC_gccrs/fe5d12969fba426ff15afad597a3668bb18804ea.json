{"sha": "fe5d12969fba426ff15afad597a3668bb18804ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU1ZDEyOTY5ZmJhNDI2ZmYxNWFmYWQ1OTdhMzY2OGJiMTg4MDRlYQ==", "commit": {"author": {"name": "Matthew Malcomson", "email": "matthew.malcomson@arm.com", "date": "2018-11-16T16:26:44Z"}, "committer": {"name": "Matthew Malcomson", "email": "matmal01@gcc.gnu.org", "date": "2018-11-16T16:26:44Z"}, "message": "When running the testsuite on boards that can't report an error status DejaGNU...\n\nWhen running the testsuite on boards that can't report an error status\nDejaGNU uses a special wrapper to print the exit code on stdout and\nparses stdout to find whether an execution failed or passed.\n\nIn testcases that use \"freopen (..., ..., stdout)\" this special line is\nprinted to the alternate location described in the freopen call and\nDejaGNU can't find the error code.\n\nThis results in DejaGNU using a default return status of 2 and the test\nfailing.\n\nThis patch skips the two testcases that use freopen on stdout when\ntesting a board that requires this wrapper.\n\n\nTesting done by running these two tests on arm-none-eabi cross build and\nobserving that they are unsupported.\n\ngcc/testsuite/ChangeLog:\n\n2018-11-16  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* gcc.c-torture/execute/printf-2.c: Skip on wrapped boards.\n\t* gcc.c-torture/execute/user-printf.c: Likewise.\n\nFrom-SVN: r266214", "tree": {"sha": "55a5f426a4979eab9bfc7e00f4eb4c934eb6e5e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55a5f426a4979eab9bfc7e00f4eb4c934eb6e5e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe5d12969fba426ff15afad597a3668bb18804ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe5d12969fba426ff15afad597a3668bb18804ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe5d12969fba426ff15afad597a3668bb18804ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe5d12969fba426ff15afad597a3668bb18804ea/comments", "author": {"login": "mmalcomson", "id": 57484298, "node_id": "MDQ6VXNlcjU3NDg0Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmalcomson", "html_url": "https://github.com/mmalcomson", "followers_url": "https://api.github.com/users/mmalcomson/followers", "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}", "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions", "organizations_url": "https://api.github.com/users/mmalcomson/orgs", "repos_url": "https://api.github.com/users/mmalcomson/repos", "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}", "received_events_url": "https://api.github.com/users/mmalcomson/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4359b6318f9cb0861b25cd174e8a1a07f1740c27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4359b6318f9cb0861b25cd174e8a1a07f1740c27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4359b6318f9cb0861b25cd174e8a1a07f1740c27"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "a00506d533dd063a68e749f619248651a77c68c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe5d12969fba426ff15afad597a3668bb18804ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe5d12969fba426ff15afad597a3668bb18804ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe5d12969fba426ff15afad597a3668bb18804ea", "patch": "@@ -1,3 +1,8 @@\n+2018-11-16  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* gcc.c-torture/execute/printf-2.c: Skip on wrapped boards.\n+\t* gcc.c-torture/execute/user-printf.c: Likewise.\n+\n 2018-11-16  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/87269"}, {"sha": "2e9f2a2bb755221ec49baccccad0737e51f579bf", "filename": "gcc/testsuite/gcc.c-torture/execute/printf-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe5d12969fba426ff15afad597a3668bb18804ea/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe5d12969fba426ff15afad597a3668bb18804ea/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-2.c?ref=fe5d12969fba426ff15afad597a3668bb18804ea", "patch": "@@ -1,6 +1,7 @@\n /* Verify that calls to printf don't get eliminated even if their\n    result on success can be computed at compile time (they can fail).\n    The calls can still be transformed into those of other functions.\n+   { dg-require-effective-target unwrapped }\n    { dg-skip-if \"requires io\" { freestanding } } */\n \n #include <stdio.h>"}, {"sha": "11c61fa3949e962595ca7142bbcecb774fb8231f", "filename": "gcc/testsuite/gcc.c-torture/execute/user-printf.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe5d12969fba426ff15afad597a3668bb18804ea/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fuser-printf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe5d12969fba426ff15afad597a3668bb18804ea/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fuser-printf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fuser-printf.c?ref=fe5d12969fba426ff15afad597a3668bb18804ea", "patch": "@@ -1,6 +1,7 @@\n /* Verify that calls to a function declared wiith attribute format (printf)\n    don't get eliminated even if their result on success can be computed at\n    compile time (they can fail).\n+   { dg-require-effective-target unwrapped }\n    { dg-skip-if \"requires io\" { freestanding } } */\n \n #include <stdarg.h>"}]}