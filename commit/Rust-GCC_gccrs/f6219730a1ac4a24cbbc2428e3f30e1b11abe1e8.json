{"sha": "f6219730a1ac4a24cbbc2428e3f30e1b11abe1e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYyMTk3MzBhMWFjNGEyNGNiYmMyNDI4ZTNmMzBlMWIxMWFiZTFlOA==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2020-12-03T15:06:26Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-17T10:49:21Z"}, "message": "[Ada] Crash on discriminant check with current instance\n\ngcc/ada/\n\n\t* checks.adb (Build_Discriminant_Checks): Add condition to\n\treplace references to the current instance of the type when we\n\tare within an Init_Proc.\n\t(Replace_Current_Instance): Examine a given node and replace the\n\tcurrent instance of the type with the corresponding _init\n\tformal.\n\t(Search_And_Replace_Current_Instance): Traverse proc which calls\n\tReplace_Current_Instance in order to replace all references\n\twithin a given expression.", "tree": {"sha": "935f358a32c8fd555795a481dde3fc512a686bbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/935f358a32c8fd555795a481dde3fc512a686bbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6219730a1ac4a24cbbc2428e3f30e1b11abe1e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6219730a1ac4a24cbbc2428e3f30e1b11abe1e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6219730a1ac4a24cbbc2428e3f30e1b11abe1e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6219730a1ac4a24cbbc2428e3f30e1b11abe1e8/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "383814537116f6a3c5c08aa9a9069fb9f438d52c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/383814537116f6a3c5c08aa9a9069fb9f438d52c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/383814537116f6a3c5c08aa9a9069fb9f438d52c"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "891c4c862442df09862b397b8edf659b4506eb0f", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6219730a1ac4a24cbbc2428e3f30e1b11abe1e8/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6219730a1ac4a24cbbc2428e3f30e1b11abe1e8/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=f6219730a1ac4a24cbbc2428e3f30e1b11abe1e8", "patch": "@@ -3922,6 +3922,13 @@ package body Checks is\n \n       function Aggregate_Discriminant_Val (Disc : Entity_Id) return Node_Id;\n \n+      function Replace_Current_Instance\n+        (N : Node_Id) return Traverse_Result;\n+      --  Replace a reference to the current instance of the type with the\n+      --  corresponding _init formal of the initialization procedure. Note:\n+      --  this function relies on us currently being within the initialization\n+      --  procedure.\n+\n       --------------------------------\n       -- Aggregate_Discriminant_Val --\n       --------------------------------\n@@ -3949,6 +3956,26 @@ package body Checks is\n          raise Program_Error;\n       end Aggregate_Discriminant_Val;\n \n+      ------------------------------\n+      -- Replace_Current_Instance --\n+      ------------------------------\n+\n+      function Replace_Current_Instance\n+        (N : Node_Id) return Traverse_Result is\n+      begin\n+         if Is_Entity_Name (N)\n+           and then Etype (N) = Entity (N)\n+         then\n+            Rewrite (N,\n+              New_Occurrence_Of (First_Formal (Current_Subprogram), Loc));\n+         end if;\n+\n+         return OK;\n+      end Replace_Current_Instance;\n+\n+      procedure Search_And_Replace_Current_Instance is new\n+        Traverse_Proc (Replace_Current_Instance);\n+\n    --  Start of processing for Build_Discriminant_Checks\n \n    begin\n@@ -3978,6 +4005,13 @@ package body Checks is\n             Dval := Duplicate_Subexpr_No_Checks (Dval);\n          end if;\n \n+         --  Replace references to the current instance of the type with the\n+         --  corresponding _init formal of the initialization procedure.\n+\n+         if Within_Init_Proc then\n+            Search_And_Replace_Current_Instance (Dval);\n+         end if;\n+\n          --  If we have an Unchecked_Union node, we can infer the discriminants\n          --  of the node.\n "}]}