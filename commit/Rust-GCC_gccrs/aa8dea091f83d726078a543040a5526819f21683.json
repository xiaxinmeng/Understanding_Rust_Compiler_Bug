{"sha": "aa8dea091f83d726078a543040a5526819f21683", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE4ZGVhMDkxZjgzZDcyNjA3OGE1NDMwNDBhNTUyNjgxOWYyMTY4Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-06-20T23:23:54Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-06-20T23:23:54Z"}, "message": "typeck.c (mark_addressable): Don't test TREE_ADDRESSABLE early.\n\n        * typeck.c (mark_addressable): Don't test TREE_ADDRESSABLE early.\n        Call put_var_into_stack.\n        * g++.dg/opt/asm1.C: New.\n\nFrom-SVN: r54862", "tree": {"sha": "a0d0772409194eae7f488dba0cb742b1d9c93654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0d0772409194eae7f488dba0cb742b1d9c93654"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa8dea091f83d726078a543040a5526819f21683", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa8dea091f83d726078a543040a5526819f21683", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa8dea091f83d726078a543040a5526819f21683", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa8dea091f83d726078a543040a5526819f21683/comments", "author": null, "committer": null, "parents": [{"sha": "2b3aadfc7b77e551147b5250180c57c1f892e421", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b3aadfc7b77e551147b5250180c57c1f892e421", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b3aadfc7b77e551147b5250180c57c1f892e421"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "8cc664e3b3ff914656cba3d5070c411f5f46c6a8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa8dea091f83d726078a543040a5526819f21683/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa8dea091f83d726078a543040a5526819f21683/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=aa8dea091f83d726078a543040a5526819f21683", "patch": "@@ -1,3 +1,9 @@\n+2002-06-20  Richard Henderson  <rth@redhat.com>\n+\n+\tPR c++/6747\n+        * typeck.c (mark_addressable): Don't test TREE_ADDRESSABLE early.\n+        Call put_var_into_stack.\n+\n 2002-06-20  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* spew.c (remove_last_token): Use ARRAY_SIZE in lieu of explicit"}, {"sha": "c1338d934e3e9df66a9fd154cda551d2f7ae71dd", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa8dea091f83d726078a543040a5526819f21683/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa8dea091f83d726078a543040a5526819f21683/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=aa8dea091f83d726078a543040a5526819f21683", "patch": "@@ -4805,9 +4805,6 @@ cxx_mark_addressable (exp)\n {\n   register tree x = exp;\n \n-  if (TREE_ADDRESSABLE (x) == 1)\n-    return true;\n-\n   while (1)\n     switch (TREE_CODE (x))\n       {\n@@ -4826,13 +4823,16 @@ cxx_mark_addressable (exp)\n \t    TREE_ADDRESSABLE (x) = 1; /* so compiler doesn't die later */\n \t    return true;\n \t  }\n+\t/* FALLTHRU */\n+\n       case VAR_DECL:\n \t/* Caller should not be trying to mark initialized\n \t   constant fields addressable.  */\n \tmy_friendly_assert (DECL_LANG_SPECIFIC (x) == 0\n \t\t\t    || DECL_IN_AGGR_P (x) == 0\n \t\t\t    || TREE_STATIC (x)\n \t\t\t    || DECL_EXTERNAL (x), 314);\n+\t/* FALLTHRU */\n \n       case CONST_DECL:\n       case RESULT_DECL:\n@@ -4841,6 +4841,7 @@ cxx_mark_addressable (exp)\n \t  warning (\"address requested for `%D', which is declared `register'\",\n \t\t      x);\n \tTREE_ADDRESSABLE (x) = 1;\n+\tput_var_into_stack (x);\n \treturn true;\n \n       case FUNCTION_DECL:"}, {"sha": "3f932a6d70c3bebada9da1d3fee019bcc2a2935a", "filename": "gcc/testsuite/g++.dg/opt/asm1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa8dea091f83d726078a543040a5526819f21683/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fasm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa8dea091f83d726078a543040a5526819f21683/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fasm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fasm1.C?ref=aa8dea091f83d726078a543040a5526819f21683", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/6747\n+// { dg-do compile }\n+// { dg-options \"-O\" }\n+\n+void foo()\n+{\n+  union { double d; char c[sizeof(double)]; } tmp;\n+  __asm__ (\"\" : \"=m\" (tmp.d));\t// { dg-bogus \"not directly addressable\" }\n+}"}]}