{"sha": "f795fb5b744ff0f23ab03edf9e63821097f17fb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc5NWZiNWI3NDRmZjBmMjNhYjAzZWRmOWU2MzgyMTA5N2YxN2ZiOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-21T23:23:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-21T23:23:48Z"}, "message": "Support NT Graphics programs; also bug fixes.\n\nFrom-SVN: r9001", "tree": {"sha": "869613f48791864e7f814672034ca7595a18ad76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/869613f48791864e7f814672034ca7595a18ad76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f795fb5b744ff0f23ab03edf9e63821097f17fb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f795fb5b744ff0f23ab03edf9e63821097f17fb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f795fb5b744ff0f23ab03edf9e63821097f17fb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f795fb5b744ff0f23ab03edf9e63821097f17fb9/comments", "author": null, "committer": null, "parents": [{"sha": "bb5d01e5acfaa6e088579db01b2f720a94e9f93a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb5d01e5acfaa6e088579db01b2f720a94e9f93a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb5d01e5acfaa6e088579db01b2f720a94e9f93a"}], "stats": {"total": 84, "additions": 72, "deletions": 12}, "files": [{"sha": "d551e91d39a6494b3d3e1a44a2dc07933b21f037", "filename": "gcc/config/i386/win-nt.h", "status": "modified", "additions": 72, "deletions": 12, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f795fb5b744ff0f23ab03edf9e63821097f17fb9/gcc%2Fconfig%2Fi386%2Fwin-nt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f795fb5b744ff0f23ab03edf9e63821097f17fb9/gcc%2Fconfig%2Fi386%2Fwin-nt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin-nt.h?ref=f795fb5b744ff0f23ab03edf9e63821097f17fb9", "patch": "@@ -1,7 +1,7 @@\n-/* Definitions of target machine for GNU compiler\n-   for an Intel i386 or later processor running Windows NT 3.x.\n-   Copyright (C) 1994 Free Software Foundation, Inc.\n-   Contributed by Douglas B. Rupp (drupp@cs.washington.edu)\n+/* Operating system specific defines to be used when targeting GCC for\n+   Windows NT 3.x on an i386.\n+   Copyright (C) 1994, 1995 Free Software Foundation, Inc.\n+   Contributed by Douglas B. Rupp (drupp@cs.washington.edu).\n \n This file is part of GNU CC.\n \n@@ -17,16 +17,74 @@ GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */\n \n #define YES_UNDERSCORES\n \n #include \"i386/gas.h\"\n-#include \"winnt/winnt.h\"\n \n+/* Value is the number of bytes of arguments automatically\n+   popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n+   FUNTYPE is the data type of the function (as a tree),\n+   or for a library call it is an identifier node for the subroutine name.\n+   SIZE is the number of bytes of arguments passed on the stack.\n+\n+   This only happens if the function declaration has the STDCALL attribute and\n+   the number of arguments is not variable */\n+\n+#undef RETURN_POPS_ARGS\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) \\\n+  ( \\\n+   TREE_CODE (FUNTYPE) == IDENTIFIER_NODE \\\n+   ? \\\n+     0 \\\n+   : \\\n+     ( \\\n+      ((FUNDECL && (TREE_CODE_CLASS (TREE_CODE (FUNDECL)) == 'd') ? \\\n+        chain_member_value (get_identifier (\"stdcall\"), \\\n+                            DECL_MACHINE_ATTRIBUTES (FUNDECL) \\\n+                           )                                      : 0 \\\n+       ) \\\n+      ) \\\n+      && \\\n+         ( \\\n+          TYPE_ARG_TYPES (FUNTYPE) == 0 \\\n+          || \\\n+            TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE))) \\\n+            == void_type_node \\\n+         ) \\\n+     ) \\\n+     ? \\\n+       (SIZE) \\\n+     : \\\n+       (aggregate_value_p (TREE_TYPE (FUNTYPE))) \\\n+       ? \\\n+         GET_MODE_SIZE (Pmode) \\\n+       : \\\n+         0 \\\n+  )\n+\n+#undef FUNCTION_PROLOGUE\n+#define FUNCTION_PROLOGUE(FILE,SIZE) \\\n+  winnt_function_prologue (FILE, SIZE)\n+\n+\n+#ifdef CPP_PREDEFINES\n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -Di386 -DWINNT -D_M_IX86 -D_X86_ -D__STDC__=0 \\\n-  -DALMOST_STDC -Asystem(unix) -Asystem(winnt) -Acpu(i386) -Amachine(i386)\"\n+#endif\n+#define CPP_PREDEFINES \"-Dunix -Di386 -DWIN32 -D_WIN32 \\\n+  -DWINNT -D_M_IX86=300 -D_X86_=1 -DALMOST_STDC -D_MSC_VER=800\\\n+  -Asystem(unix) -Asystem(winnt) -Acpu(i386) -Amachine(i386)\"\n+\n+#define SIZE_TYPE \"unsigned int\"\n+#define PTRDIFF_TYPE \"int\"\n+#define WCHAR_UNSIGNED 1\n+#define WCHAR_TYPE_SIZE 16\n+#define WCHAR_TYPE \"short unsigned int\"\n+#undef LONG_DOUBLE_TYPE_SIZE\n+#define LONG_DOUBLE_TYPE_SIZE 64\n+#define HAVE_ATEXIT 1\n \n #undef EXTRA_SECTIONS\n #define EXTRA_SECTIONS in_ctor, in_dtor\n@@ -36,7 +94,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n   CTOR_SECTION_FUNCTION\t\t\t\t\t\t\\\n   DTOR_SECTION_FUNCTION\n \n-#undef CTOR_SECTION_FUNCTION\n #define CTOR_SECTION_FUNCTION\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\\\n ctor_section ()\t\t\t\t\t\t\t\\\n@@ -48,7 +105,6 @@ ctor_section ()\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\n \n-#undef DTOR_SECTION_FUNCTION\n #define DTOR_SECTION_FUNCTION\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\\\n dtor_section ()\t\t\t\t\t\t\t\\\n@@ -60,7 +116,6 @@ dtor_section ()\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\n \n-#undef ASM_OUTPUT_CONSTRUCTOR\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\\\n   do {\t\t\t\t\t\t\\\n     ctor_section ();\t\t\t\t\\\n@@ -69,11 +124,16 @@ dtor_section ()\t\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\\\n   } while (0)\n \n-#undef ASM_OUTPUT_DESTRUCTOR\n #define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\\\n   do {\t\t\t\t\t\t\\\n     dtor_section ();                   \t\t\\\n     fprintf (FILE, \"%s\\t\", ASM_LONG);\t\t\\\n     assemble_name (FILE, NAME);              \t\\\n     fprintf (FILE, \"\\n\");\t\t\t\\\n   } while (0)\n+\n+#define HAVE_probe 1\n+#define gen_probe() gen_rtx(ASM_INPUT, VOIDmode, \"call __stkchk\\n\")\n+\n+#include \"winnt/winnt.h\"\n+"}]}