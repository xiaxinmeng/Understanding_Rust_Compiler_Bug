{"sha": "207180e159492bd884a37b071bc69a011072e403", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA3MTgwZTE1OTQ5MmJkODg0YTM3YjA3MWJjNjlhMDExMDcyZTQwMw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-11-23T17:52:05Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-11-23T17:52:05Z"}, "message": "re PR fortran/36313 ([F03] {MIN,MAX}{LOC,VAL} should accept character arguments)\n\n2017-11-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/36313\n\t* m4/maxloc2s.m4: Replace int for character length by\n\tgfc_charlen_type.\n\t* m4/minloc2s.m4: Likewise.\n\t* generated./maxloc2_16_s1.c: Regenerated.\n\t* generated./maxloc2_16_s4.c: Regenerated.\n\t* generated./maxloc2_4_s1.c: Regenerated.\n\t* generated./maxloc2_4_s4.c: Regenerated.\n\t* generated./maxloc2_8_s1.c: Regenerated.\n\t* generated./maxloc2_8_s4.c: Regenerated.\n\t* generated./minloc2_16_s1.c: Regenerated.\n\t* generated./minloc2_16_s4.c: Regenerated.\n\t* generated./minloc2_4_s1.c: Regenerated.\n\t* generated./minloc2_4_s4.c: Regenerated.\n\t* generated./minloc2_8_s1.c: Regenerated.\n\t* generated./minloc2_8_s4.c: Regenerated.\n\nFrom-SVN: r255109", "tree": {"sha": "471e3b631f690e75c8b679e22c87cf25b1edd220", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/471e3b631f690e75c8b679e22c87cf25b1edd220"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/207180e159492bd884a37b071bc69a011072e403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/207180e159492bd884a37b071bc69a011072e403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/207180e159492bd884a37b071bc69a011072e403", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/207180e159492bd884a37b071bc69a011072e403/comments", "author": null, "committer": null, "parents": [{"sha": "3d4b2e49158f7d803a49e23f3268aaaca283c471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d4b2e49158f7d803a49e23f3268aaaca283c471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d4b2e49158f7d803a49e23f3268aaaca283c471"}], "stats": {"total": 82, "additions": 54, "deletions": 28}, "files": [{"sha": "b69ad715dbbea589369093fdeeee80d1b883e7c4", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -1,3 +1,22 @@\n+2017-11-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/36313\n+\t* m4/maxloc2s.m4: Replace int for character length by\n+\tgfc_charlen_type.\n+\t* m4/minloc2s.m4: Likewise.\n+\t* generated./maxloc2_16_s1.c: Regenerated.\n+\t* generated./maxloc2_16_s4.c: Regenerated.\n+\t* generated./maxloc2_4_s1.c: Regenerated.\n+\t* generated./maxloc2_4_s4.c: Regenerated.\n+\t* generated./maxloc2_8_s1.c: Regenerated.\n+\t* generated./maxloc2_8_s4.c: Regenerated.\n+\t* generated./minloc2_16_s1.c: Regenerated.\n+\t* generated./minloc2_16_s4.c: Regenerated.\n+\t* generated./minloc2_4_s1.c: Regenerated.\n+\t* generated./minloc2_4_s4.c: Regenerated.\n+\t* generated./minloc2_8_s1.c: Regenerated.\n+\t* generated./minloc2_8_s4.c: Regenerated.\n+\n 2017-11-22  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* intrinsics/eoshift0.c (eoshift0): Make shift an index_type."}, {"sha": "6b7eeb82fb090fdb5118faf7cfa9586b8bedb6b4", "filename": "libgfortran/generated/maxloc2_16_s1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fmaxloc2_16_s1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fmaxloc2_16_s1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc2_16_s1.c?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -30,15 +30,16 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_1) && defined (HAVE_GFC_INTEGER_16)\n \n static inline int\n-compare_fcn (const GFC_INTEGER_1 *a, const GFC_INTEGER_1 *b, int n)\n+compare_fcn (const GFC_INTEGER_1 *a, const GFC_INTEGER_1 *b, gfc_charlen_type n)\n {\n   if (sizeof (GFC_INTEGER_1) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern GFC_INTEGER_16 maxloc2_16_s1 (gfc_array_s1 * const restrict, int);\n+extern GFC_INTEGER_16 maxloc2_16_s1 (gfc_array_s1 * const restrict,\n+       gfc_charlen_type);\n export_proto(maxloc2_16_s1);\n \n GFC_INTEGER_16"}, {"sha": "650abf9afeabeedb72816751152b542559ec776f", "filename": "libgfortran/generated/maxloc2_16_s4.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fmaxloc2_16_s4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fmaxloc2_16_s4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc2_16_s4.c?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -30,15 +30,16 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_16)\n \n static inline int\n-compare_fcn (const GFC_INTEGER_4 *a, const GFC_INTEGER_4 *b, int n)\n+compare_fcn (const GFC_INTEGER_4 *a, const GFC_INTEGER_4 *b, gfc_charlen_type n)\n {\n   if (sizeof (GFC_INTEGER_4) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern GFC_INTEGER_16 maxloc2_16_s4 (gfc_array_s4 * const restrict, int);\n+extern GFC_INTEGER_16 maxloc2_16_s4 (gfc_array_s4 * const restrict,\n+       gfc_charlen_type);\n export_proto(maxloc2_16_s4);\n \n GFC_INTEGER_16"}, {"sha": "bcd89c504e1e9da649c8d5d48c7695ee45873575", "filename": "libgfortran/generated/maxloc2_4_s1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fmaxloc2_4_s1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fmaxloc2_4_s1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc2_4_s1.c?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -30,15 +30,16 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_1) && defined (HAVE_GFC_INTEGER_4)\n \n static inline int\n-compare_fcn (const GFC_INTEGER_1 *a, const GFC_INTEGER_1 *b, int n)\n+compare_fcn (const GFC_INTEGER_1 *a, const GFC_INTEGER_1 *b, gfc_charlen_type n)\n {\n   if (sizeof (GFC_INTEGER_1) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern GFC_INTEGER_4 maxloc2_4_s1 (gfc_array_s1 * const restrict, int);\n+extern GFC_INTEGER_4 maxloc2_4_s1 (gfc_array_s1 * const restrict,\n+       gfc_charlen_type);\n export_proto(maxloc2_4_s1);\n \n GFC_INTEGER_4"}, {"sha": "e4765c89fdc976854c7403ec076642ebabe30f93", "filename": "libgfortran/generated/maxloc2_4_s4.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fmaxloc2_4_s4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fmaxloc2_4_s4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc2_4_s4.c?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -30,15 +30,16 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_4)\n \n static inline int\n-compare_fcn (const GFC_INTEGER_4 *a, const GFC_INTEGER_4 *b, int n)\n+compare_fcn (const GFC_INTEGER_4 *a, const GFC_INTEGER_4 *b, gfc_charlen_type n)\n {\n   if (sizeof (GFC_INTEGER_4) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern GFC_INTEGER_4 maxloc2_4_s4 (gfc_array_s4 * const restrict, int);\n+extern GFC_INTEGER_4 maxloc2_4_s4 (gfc_array_s4 * const restrict,\n+       gfc_charlen_type);\n export_proto(maxloc2_4_s4);\n \n GFC_INTEGER_4"}, {"sha": "7ee1f6a081f65b8ad32d23544289ade5a0f4d776", "filename": "libgfortran/generated/maxloc2_8_s1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fmaxloc2_8_s1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fmaxloc2_8_s1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc2_8_s1.c?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -30,15 +30,16 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_1) && defined (HAVE_GFC_INTEGER_8)\n \n static inline int\n-compare_fcn (const GFC_INTEGER_1 *a, const GFC_INTEGER_1 *b, int n)\n+compare_fcn (const GFC_INTEGER_1 *a, const GFC_INTEGER_1 *b, gfc_charlen_type n)\n {\n   if (sizeof (GFC_INTEGER_1) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern GFC_INTEGER_8 maxloc2_8_s1 (gfc_array_s1 * const restrict, int);\n+extern GFC_INTEGER_8 maxloc2_8_s1 (gfc_array_s1 * const restrict,\n+       gfc_charlen_type);\n export_proto(maxloc2_8_s1);\n \n GFC_INTEGER_8"}, {"sha": "61ad61c00adca72cf3522de1189071e627920d2b", "filename": "libgfortran/generated/maxloc2_8_s4.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fmaxloc2_8_s4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fmaxloc2_8_s4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc2_8_s4.c?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -30,15 +30,16 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_8)\n \n static inline int\n-compare_fcn (const GFC_INTEGER_4 *a, const GFC_INTEGER_4 *b, int n)\n+compare_fcn (const GFC_INTEGER_4 *a, const GFC_INTEGER_4 *b, gfc_charlen_type n)\n {\n   if (sizeof (GFC_INTEGER_4) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern GFC_INTEGER_8 maxloc2_8_s4 (gfc_array_s4 * const restrict, int);\n+extern GFC_INTEGER_8 maxloc2_8_s4 (gfc_array_s4 * const restrict,\n+       gfc_charlen_type);\n export_proto(maxloc2_8_s4);\n \n GFC_INTEGER_8"}, {"sha": "4c804e386d0aa674587ed4e9187fbae07dcd1f26", "filename": "libgfortran/generated/minloc2_16_s1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fminloc2_16_s1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fminloc2_16_s1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc2_16_s1.c?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -30,15 +30,15 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_1) && defined (HAVE_GFC_INTEGER_16)\n \n static inline int\n-compare_fcn (const GFC_INTEGER_1 *a, const GFC_INTEGER_1 *b, int n)\n+compare_fcn (const GFC_INTEGER_1 *a, const GFC_INTEGER_1 *b, gfc_charlen_type n)\n {\n   if (sizeof (GFC_INTEGER_1) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern GFC_INTEGER_16 minloc2_16_s1 (gfc_array_s1 * const restrict, int);\n+extern GFC_INTEGER_16 minloc2_16_s1 (gfc_array_s1 * const restrict, gfc_charlen_type);\n export_proto(minloc2_16_s1);\n \n GFC_INTEGER_16"}, {"sha": "103db0601c20916894ef60143a9cf4f9423eae1d", "filename": "libgfortran/generated/minloc2_16_s4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fminloc2_16_s4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fminloc2_16_s4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc2_16_s4.c?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -30,15 +30,15 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_16)\n \n static inline int\n-compare_fcn (const GFC_INTEGER_4 *a, const GFC_INTEGER_4 *b, int n)\n+compare_fcn (const GFC_INTEGER_4 *a, const GFC_INTEGER_4 *b, gfc_charlen_type n)\n {\n   if (sizeof (GFC_INTEGER_4) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern GFC_INTEGER_16 minloc2_16_s4 (gfc_array_s4 * const restrict, int);\n+extern GFC_INTEGER_16 minloc2_16_s4 (gfc_array_s4 * const restrict, gfc_charlen_type);\n export_proto(minloc2_16_s4);\n \n GFC_INTEGER_16"}, {"sha": "fc2c1dd079ba53b7615ea2c5fe74aef4a010e9c8", "filename": "libgfortran/generated/minloc2_4_s1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fminloc2_4_s1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fminloc2_4_s1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc2_4_s1.c?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -30,15 +30,15 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_1) && defined (HAVE_GFC_INTEGER_4)\n \n static inline int\n-compare_fcn (const GFC_INTEGER_1 *a, const GFC_INTEGER_1 *b, int n)\n+compare_fcn (const GFC_INTEGER_1 *a, const GFC_INTEGER_1 *b, gfc_charlen_type n)\n {\n   if (sizeof (GFC_INTEGER_1) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern GFC_INTEGER_4 minloc2_4_s1 (gfc_array_s1 * const restrict, int);\n+extern GFC_INTEGER_4 minloc2_4_s1 (gfc_array_s1 * const restrict, gfc_charlen_type);\n export_proto(minloc2_4_s1);\n \n GFC_INTEGER_4"}, {"sha": "b7b8876b1ca27561ef3c0f3822d94be90038bc09", "filename": "libgfortran/generated/minloc2_4_s4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fminloc2_4_s4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fminloc2_4_s4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc2_4_s4.c?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -30,15 +30,15 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_4)\n \n static inline int\n-compare_fcn (const GFC_INTEGER_4 *a, const GFC_INTEGER_4 *b, int n)\n+compare_fcn (const GFC_INTEGER_4 *a, const GFC_INTEGER_4 *b, gfc_charlen_type n)\n {\n   if (sizeof (GFC_INTEGER_4) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern GFC_INTEGER_4 minloc2_4_s4 (gfc_array_s4 * const restrict, int);\n+extern GFC_INTEGER_4 minloc2_4_s4 (gfc_array_s4 * const restrict, gfc_charlen_type);\n export_proto(minloc2_4_s4);\n \n GFC_INTEGER_4"}, {"sha": "dfcbde0eed649753d68d46dee3993dad00d2b0fc", "filename": "libgfortran/generated/minloc2_8_s1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fminloc2_8_s1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fminloc2_8_s1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc2_8_s1.c?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -30,15 +30,15 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_1) && defined (HAVE_GFC_INTEGER_8)\n \n static inline int\n-compare_fcn (const GFC_INTEGER_1 *a, const GFC_INTEGER_1 *b, int n)\n+compare_fcn (const GFC_INTEGER_1 *a, const GFC_INTEGER_1 *b, gfc_charlen_type n)\n {\n   if (sizeof (GFC_INTEGER_1) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern GFC_INTEGER_8 minloc2_8_s1 (gfc_array_s1 * const restrict, int);\n+extern GFC_INTEGER_8 minloc2_8_s1 (gfc_array_s1 * const restrict, gfc_charlen_type);\n export_proto(minloc2_8_s1);\n \n GFC_INTEGER_8"}, {"sha": "6a40731c5a8c40a9ac3aa8a32ba8678879160604", "filename": "libgfortran/generated/minloc2_8_s4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fminloc2_8_s4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fgenerated%2Fminloc2_8_s4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc2_8_s4.c?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -30,15 +30,15 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_8)\n \n static inline int\n-compare_fcn (const GFC_INTEGER_4 *a, const GFC_INTEGER_4 *b, int n)\n+compare_fcn (const GFC_INTEGER_4 *a, const GFC_INTEGER_4 *b, gfc_charlen_type n)\n {\n   if (sizeof (GFC_INTEGER_4) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern GFC_INTEGER_8 minloc2_8_s4 (gfc_array_s4 * const restrict, int);\n+extern GFC_INTEGER_8 minloc2_8_s4 (gfc_array_s4 * const restrict, gfc_charlen_type);\n export_proto(minloc2_8_s4);\n \n GFC_INTEGER_8"}, {"sha": "8cfca6aab67dc7629eca3a725f70a5ba9101c6c2", "filename": "libgfortran/m4/maxloc2s.m4", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fm4%2Fmaxloc2s.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fm4%2Fmaxloc2s.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmaxloc2s.m4?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -31,15 +31,16 @@ include(iparm.m4)dnl\n `#if defined (HAVE_'atype_name`) && defined (HAVE_'rtype_name`)\n \n static inline int\n-compare_fcn (const 'atype_name` *a, const 'atype_name` *b, int n)\n+compare_fcn (const 'atype_name` *a, const 'atype_name` *b, gfc_charlen_type n)\n {\n   if (sizeof ('atype_name`) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern 'rtype_name` 'name`'rtype_qual`_'atype_code` ('atype` * const restrict, int);\n+extern 'rtype_name` 'name`'rtype_qual`_'atype_code` ('atype` * const restrict,\n+       gfc_charlen_type);\n export_proto('name`'rtype_qual`_'atype_code`);\n \n 'rtype_name`"}, {"sha": "8e99ed3cb5c6fd4167e49f69f9dcb47730c9c5ac", "filename": "libgfortran/m4/minloc2s.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fm4%2Fminloc2s.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207180e159492bd884a37b071bc69a011072e403/libgfortran%2Fm4%2Fminloc2s.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fminloc2s.m4?ref=207180e159492bd884a37b071bc69a011072e403", "patch": "@@ -31,15 +31,15 @@ include(iparm.m4)dnl\n `#if defined (HAVE_'atype_name`) && defined (HAVE_'rtype_name`)\n \n static inline int\n-compare_fcn (const 'atype_name` *a, const 'atype_name` *b, int n)\n+compare_fcn (const 'atype_name` *a, const 'atype_name` *b, gfc_charlen_type n)\n {\n   if (sizeof ('atype_name`) == 1)\n     return memcmp (a, b, n);\n   else\n     return memcmp_char4 (a, b, n);\n }\n \n-extern 'rtype_name` 'name`'rtype_qual`_'atype_code` ('atype` * const restrict, int);\n+extern 'rtype_name` 'name`'rtype_qual`_'atype_code` ('atype` * const restrict, gfc_charlen_type);\n export_proto('name`'rtype_qual`_'atype_code`);\n \n 'rtype_name`"}]}