{"sha": "189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg5ZWQ4MmMwOWJiOGJmYzUyNDNiZDBmNjBmNmJkY2E0YjRkYWY5YQ==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2005-06-18T11:51:47Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-06-18T11:51:47Z"}, "message": "re PR tree-optimization/22035 (complex float comparison broken)\n\n\tPR tree-opt/22035\n\t* gfortran.dg/f2c_6.f90: New test.\n\nFrom-SVN: r101152", "tree": {"sha": "63d5c16966756af0eb4ec4b16b2857ab1ca9606e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63d5c16966756af0eb4ec4b16b2857ab1ca9606e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0563fe8b47eaba2bf82f03c13260d01aa6e026e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0563fe8b47eaba2bf82f03c13260d01aa6e026e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0563fe8b47eaba2bf82f03c13260d01aa6e026e8"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "98b3d23b967dc0cd06bb52e845eee55e7d368a00", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a", "patch": "@@ -1,3 +1,8 @@\n+2005-06-18  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR tree-opt/22035\n+\t* gfortran.dg/f2c_6.f90: New test.\n+\n 2005-06-17  Geoffrey Keating  <geoffk@apple.com>\n \n \tPR c++/17413"}, {"sha": "b276b3df3722b56353a7ee9bb6f9b614f8a37b4e", "filename": "gcc/testsuite/gfortran.dg/f2c_6.f90", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2c_6.f90?ref=189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a", "patch": "@@ -0,0 +1,84 @@\n+! { dg-do run }\n+! { dg-options \"-ff2c\" }\n+! Verifies that complex pointer results work with -ff2c\n+! try all permutations of result clause in function yes/no\n+!                     and result clause in interface yes/no\n+! this is not possible in Fortran 77, but this exercises a previously\n+! buggy codepath\n+function c() result (r)\n+  common // z\n+  complex, pointer :: r\n+  complex, target :: z\n+\n+  r=>z\n+end function c\n+\n+function d()\n+  common // z\n+  complex, pointer :: d\n+  complex, target :: z\n+\n+  d=>z\n+end function d\n+\n+function e()\n+  common // z\n+  complex, pointer :: e\n+  complex, target :: z\n+\n+  e=>z\n+end function e\n+\n+function f() result(r)\n+  common // z\n+  complex, pointer :: r\n+  complex, target :: z\n+\n+  r=>z\n+end function f\n+\n+interface\n+   function c\n+     complex, pointer :: c\n+   end function c\n+end interface\n+interface\n+   function d\n+     complex, pointer :: d\n+   end function d\n+end interface\n+interface\n+   function e result(r)\n+     complex, pointer :: r\n+   end function e\n+end interface\n+interface\n+   function f result(r)\n+     complex, pointer :: r\n+   end function f\n+end interface\n+\n+common // z\n+complex, target :: z\n+complex, pointer :: p\n+\n+z = (1.,0.)\n+p => c()\n+z = (2.,0.)\n+if (p /= z) call abort ()\n+\n+NULLIFY(p)\n+p => d()\n+z = (3.,0.)\n+if (p /= z) call abort ()\n+\n+NULLIFY(p)\n+p => e()\n+z = (4.,0.)\n+if (p /= z) call abort ()\n+\n+NULLIFY(p)\n+p => f()\n+z = (5.,0.)\n+if (p /= z) call abort ()\n+end"}]}