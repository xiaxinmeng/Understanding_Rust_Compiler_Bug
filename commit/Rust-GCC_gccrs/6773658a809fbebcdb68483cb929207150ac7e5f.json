{"sha": "6773658a809fbebcdb68483cb929207150ac7e5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc3MzY1OGE4MDlmYmViY2RiNjg0ODNjYjkyOTIwNzE1MGFjN2U1Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-10-31T10:04:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-10-31T10:04:47Z"}, "message": "re PR middle-end/92231 (ICE in gimple_fold_stmt_to_constant_1)\n\n\tPR middle-end/92231\n\t* tree.h (fndecl_built_in_p): Use fndecl_built_in_p instead of\n\tDECL_BUILT_IN in comment.  Remove redundant ()s around return\n\targument.\n\t* tree.c (free_lang_data_in_decl): Check if var is FUNCTION_DECL\n\tbefore calling fndecl_built_in_p.\n\t* gimple-fold.c (gimple_fold_stmt_to_constant_1): Check if\n\tTREE_OPERAND (fn, 0) is a FUNCTION_DECL before calling\n\tfndecl_built_in_p on it.\nlto/\n\t* lto-lang.c (handle_const_attribute): Don't call fndecl_built_in_p\n\ton *node that is not FUNCTION_DECL.\ntestsuite/\n\t* gcc.c-torture/compile/pr92231.c: New test.\n\nFrom-SVN: r277660", "tree": {"sha": "c9817b2d821102662da597e911e8cc2ab92d9092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9817b2d821102662da597e911e8cc2ab92d9092"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6773658a809fbebcdb68483cb929207150ac7e5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6773658a809fbebcdb68483cb929207150ac7e5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6773658a809fbebcdb68483cb929207150ac7e5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6773658a809fbebcdb68483cb929207150ac7e5f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1297712fb4af6c6bfd827e0f0a9695b14669f87d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1297712fb4af6c6bfd827e0f0a9695b14669f87d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1297712fb4af6c6bfd827e0f0a9695b14669f87d"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "8265f4ce365583bc83556340bdf49f5bfddeba97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6773658a809fbebcdb68483cb929207150ac7e5f", "patch": "@@ -1,3 +1,15 @@\n+2019-10-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/92231\n+\t* tree.h (fndecl_built_in_p): Use fndecl_built_in_p instead of\n+\tDECL_BUILT_IN in comment.  Remove redundant ()s around return\n+\targument.\n+\t* tree.c (free_lang_data_in_decl): Check if var is FUNCTION_DECL\n+\tbefore calling fndecl_built_in_p.\n+\t* gimple-fold.c (gimple_fold_stmt_to_constant_1): Check if\n+\tTREE_OPERAND (fn, 0) is a FUNCTION_DECL before calling\n+\tfndecl_built_in_p on it.\n+\n 2019-10-31  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* params.def (PARAM_VECT_EPILOGUES_NOMASK): Enable by default."}, {"sha": "dc3d2286aa1784e4ce73a2e5f97624865fe45a61", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=6773658a809fbebcdb68483cb929207150ac7e5f", "patch": "@@ -6439,6 +6439,7 @@ gimple_fold_stmt_to_constant_1 (gimple *stmt, tree (*valueize) (tree),\n \n \tfn = (*valueize) (gimple_call_fn (stmt));\n \tif (TREE_CODE (fn) == ADDR_EXPR\n+\t    && TREE_CODE (TREE_OPERAND (fn, 0)) == FUNCTION_DECL\n \t    && fndecl_built_in_p (TREE_OPERAND (fn, 0))\n \t    && gimple_builtin_call_types_compatible_p (stmt,\n \t\t\t\t\t\t       TREE_OPERAND (fn, 0)))"}, {"sha": "d5c1373863cf02e9f226251b0fc45e4e4cc58b60", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=6773658a809fbebcdb68483cb929207150ac7e5f", "patch": "@@ -1,3 +1,9 @@\n+2019-10-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/92231\n+\t* lto-lang.c (handle_const_attribute): Don't call fndecl_built_in_p\n+\ton *node that is not FUNCTION_DECL.\n+\n 2019-10-30  Martin Liska  <mliska@suse.cz>\n \n \tPR lto/91393"}, {"sha": "3e37c37fa460d0ef6d207737857d44069d42fd3c", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=6773658a809fbebcdb68483cb929207150ac7e5f", "patch": "@@ -305,7 +305,8 @@ handle_const_attribute (tree *node, tree ARG_UNUSED (name),\n \t\t\ttree ARG_UNUSED (args), int ARG_UNUSED (flags),\n \t\t\tbool * ARG_UNUSED (no_add_attrs))\n {\n-  if (!fndecl_built_in_p (*node))\n+  if (TREE_CODE (*node) != FUNCTION_DECL\n+      || !fndecl_built_in_p (*node))\n     inform (UNKNOWN_LOCATION, \"%s:%s: %E: %E\", __FILE__, __func__, *node, name);\n \n   tree type = TREE_TYPE (*node);"}, {"sha": "925768189f70ec95444398ae899d3598a1125277", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6773658a809fbebcdb68483cb929207150ac7e5f", "patch": "@@ -1,3 +1,8 @@\n+2019-10-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/92231\n+\t* gcc.c-torture/compile/pr92231.c: New test.\n+\n 2019-10-31  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* gcc.dg/vect/vect-epilogues.c: New test."}, {"sha": "1813add63c61d54d8c6e67be92ad6f837079d6c8", "filename": "gcc/testsuite/gcc.c-torture/compile/pr92231.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr92231.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr92231.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr92231.c?ref=6773658a809fbebcdb68483cb929207150ac7e5f", "patch": "@@ -0,0 +1,9 @@\n+/* PR middle-end/92231 */\n+\n+extern int bar (void);\n+\n+int\n+foo (void)\n+{\n+  return (&bar + 4096) ();\n+}"}, {"sha": "741f7a2ce659ab6a0386d36a6565bb021a522043", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6773658a809fbebcdb68483cb929207150ac7e5f", "patch": "@@ -5805,7 +5805,8 @@ free_lang_data_in_decl (tree decl, class free_lang_data_d *fld)\n       while (*nextp)\n \t{\n \t  tree var = *nextp;\n-\t  if (fndecl_built_in_p (var))\n+\t  if (TREE_CODE (var) == FUNCTION_DECL\n+\t      && fndecl_built_in_p (var))\n \t    *nextp = TREE_CHAIN (var);\n \t  else\n \t    nextp = &TREE_CHAIN (var);"}, {"sha": "81351548ecdf505b71bbe349489f69959abed08a", "filename": "gcc/tree.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6773658a809fbebcdb68483cb929207150ac7e5f/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=6773658a809fbebcdb68483cb929207150ac7e5f", "patch": "@@ -6119,12 +6119,12 @@ type_has_mode_precision_p (const_tree t)\n \n    Note that it is different from the DECL_IS_BUILTIN accessor.  For\n    instance, user declared prototypes of C library functions are not\n-   DECL_IS_BUILTIN but may be DECL_BUILT_IN.  */\n+   DECL_IS_BUILTIN but may be fndecl_built_in_p.  */\n \n inline bool\n fndecl_built_in_p (const_tree node)\n {\n-  return (DECL_BUILT_IN_CLASS (node) != NOT_BUILT_IN);\n+  return DECL_BUILT_IN_CLASS (node) != NOT_BUILT_IN;\n }\n \n /* Return true if a FUNCTION_DECL NODE is a GCC built-in function\n@@ -6133,7 +6133,7 @@ fndecl_built_in_p (const_tree node)\n inline bool\n fndecl_built_in_p (const_tree node, built_in_class klass)\n {\n-  return (fndecl_built_in_p (node) && DECL_BUILT_IN_CLASS (node) == klass);\n+  return fndecl_built_in_p (node) && DECL_BUILT_IN_CLASS (node) == klass;\n }\n \n /* Return true if a FUNCTION_DECL NODE is a GCC built-in function"}]}