{"sha": "5222e47075dd80a3ada4a34c2231aef6f7a3231f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIyMmU0NzA3NWRkODBhM2FkYTRhMzRjMjIzMWFlZjZmN2EzMjMxZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-07-09T19:38:19Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-07-09T19:38:19Z"}, "message": "emit-rtl.c (gen_highpart_mode): New.\n\n\n\t* emit-rtl.c (gen_highpart_mode): New.\n\t* rtl.h (gen_highpart_mode): Declare.\n\t* sparc.md (insn splitters): Use gen_highpart_mode, whenever the\n\toperand can be VOIDmode constant.\n\nFrom-SVN: r43869", "tree": {"sha": "007d8955d8f74b1e7c64f0f507a20f7bbffd6a3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/007d8955d8f74b1e7c64f0f507a20f7bbffd6a3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5222e47075dd80a3ada4a34c2231aef6f7a3231f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5222e47075dd80a3ada4a34c2231aef6f7a3231f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5222e47075dd80a3ada4a34c2231aef6f7a3231f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5222e47075dd80a3ada4a34c2231aef6f7a3231f/comments", "author": null, "committer": null, "parents": [{"sha": "c6c222a89a7a9f5d76b785b394a500f6c9565a9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c222a89a7a9f5d76b785b394a500f6c9565a9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6c222a89a7a9f5d76b785b394a500f6c9565a9e"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "3dbc4517763d1ba0ad22a786704c355d370dc455", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5222e47075dd80a3ada4a34c2231aef6f7a3231f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5222e47075dd80a3ada4a34c2231aef6f7a3231f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5222e47075dd80a3ada4a34c2231aef6f7a3231f", "patch": "@@ -1,3 +1,10 @@\n+Mon Jul  9 21:36:00 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* emit-rtl.c (gen_highpart_mode): New.\n+\t* rtl.h (gen_highpart_mode): Declare.\n+\t* sparc.md (insn splitters): Use gen_highpart_mode, whenever the\n+\toperand can be VOIDmode constant.\n+\n Mon Jul  9 17:23:10 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* flow.c (redirect_edge_and_branch_force): New."}, {"sha": "5a1cb92861ee65ff6069597d3b1655fb7aab195d", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5222e47075dd80a3ada4a34c2231aef6f7a3231f/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5222e47075dd80a3ada4a34c2231aef6f7a3231f/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=5222e47075dd80a3ada4a34c2231aef6f7a3231f", "patch": "@@ -5633,7 +5633,7 @@\n   operands[4] = gen_lowpart (SImode, operands[1]);\n   operands[5] = gen_lowpart (SImode, operands[2]);\n   operands[6] = gen_highpart (SImode, operands[0]);\n-  operands[7] = gen_highpart (SImode, operands[1]);\n+  operands[7] = gen_highpart_mode (SImode, DImode, operands[1]);\n #if HOST_BITS_PER_WIDE_INT == 32\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {\n@@ -5644,7 +5644,7 @@\n     }\n   else\n #endif\n-    operands[8] = gen_highpart (SImode, operands[2]);\n+    operands[8] = gen_highpart_mode (SImode, DImode, operands[2]);\n }\")\n \n (define_split\n@@ -5680,7 +5680,7 @@\n     }\n   else\n #endif\n-    operands[8] = gen_highpart (SImode, operands[2]);\n+    operands[8] = gen_highpart_mode (SImode, DImode, operands[2]);\n }\")\n \n ;; LTU here means \"carry set\"\n@@ -5714,7 +5714,7 @@\n                                (ltu:SI (reg:CC_NOOV 100) (const_int 0))))\n    (set (match_dup 4) (const_int 0))]\n   \"operands[3] = gen_lowpart (SImode, operands[0]);\n-   operands[4] = gen_highpart (SImode, operands[1]);\")\n+   operands[4] = gen_highpart_mode (SImode, DImode, operands[1]);\")\n \n (define_insn \"*addx_extend_sp64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -5929,15 +5929,16 @@\n {\n   rtx highp, lowp;\n \n-  highp = gen_highpart (SImode, operands[2]);\n+  highp = gen_highpart_mode (SImode, DImode, operands[2]);\n   lowp = gen_lowpart (SImode, operands[2]);\n   if ((lowp == const0_rtx)\n       && (operands[0] == operands[1]))\n     {\n       emit_insn (gen_rtx_SET (VOIDmode,\n                               gen_highpart (SImode, operands[0]),\n                               gen_rtx_MINUS (SImode,\n-                                             gen_highpart (SImode, operands[1]),\n+                                             gen_highpart_mode (SImode, DImode,\n+\t\t\t\t\t\t\t\toperands[1]),\n                                              highp)));\n     }\n   else\n@@ -5946,7 +5947,7 @@\n                                        gen_lowpart (SImode, operands[1]),\n                                        lowp));\n       emit_insn (gen_subx (gen_highpart (SImode, operands[0]),\n-                           gen_highpart (SImode, operands[1]),\n+                           gen_highpart_mode (SImode, DImode, operands[1]),\n                            highp));\n     }\n   DONE;\n@@ -6800,7 +6801,7 @@\n     }\n   else\n #endif\n-    operands[8] = gen_highpart (SImode, operands[3]);\n+    operands[8] = gen_highpart_mode (SImode, DImode, operands[3]);\n   operands[9] = gen_lowpart (SImode, operands[3]);\n }\")\n "}, {"sha": "42137bf776dae653052eb1daef76d592c6e6b90d", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5222e47075dd80a3ada4a34c2231aef6f7a3231f/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5222e47075dd80a3ada4a34c2231aef6f7a3231f/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=5222e47075dd80a3ada4a34c2231aef6f7a3231f", "patch": "@@ -1146,6 +1146,23 @@ gen_highpart (mode, x)\n     abort ();\n   return result;\n }\n+\n+/* Like gen_highpart_mode, but accept mode of EXP operand in case EXP can\n+   be VOIDmode constant.  */\n+rtx\n+gen_highpart_mode (outermode, innermode, exp)\n+    enum machine_mode outermode, innermode;\n+    rtx exp;\n+{\n+  if (GET_MODE (exp) != VOIDmode)\n+    {\n+      if (GET_MODE (exp) != innermode)\n+\tabort ();\n+      return gen_highpart (outermode, exp);\n+    }\n+  return simplify_gen_subreg (outermode, exp, innermode,\n+\t\t\t      subreg_highpart_offset (outermode, innermode));\n+}\n /* Return offset in bytes to get OUTERMODE low part\n    of the value in mode INNERMODE stored in memory in target format.  */\n "}, {"sha": "64d9f202e6803520e463f8bf62546ff4498af13e", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5222e47075dd80a3ada4a34c2231aef6f7a3231f/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5222e47075dd80a3ada4a34c2231aef6f7a3231f/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=5222e47075dd80a3ada4a34c2231aef6f7a3231f", "patch": "@@ -1190,6 +1190,8 @@ extern rtx gen_lowpart_if_possible\tPARAMS ((enum machine_mode, rtx));\n \n /* In emit-rtl.c */\n extern rtx gen_highpart\t\t\tPARAMS ((enum machine_mode, rtx));\n+extern rtx gen_highpart_mode\t\tPARAMS ((enum machine_mode,\n+\t\t\t\t\t\t enum machine_mode, rtx));\n extern rtx gen_realpart\t\t\tPARAMS ((enum machine_mode, rtx));\n extern rtx gen_imagpart\t\t\tPARAMS ((enum machine_mode, rtx));\n extern rtx operand_subword\t\tPARAMS ((rtx, unsigned int, int,"}]}