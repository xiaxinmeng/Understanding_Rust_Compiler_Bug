{"sha": "ff3add8dceb6734ea09b8bddfd1ecef920b44897", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYzYWRkOGRjZWI2NzM0ZWEwOWI4YmRkZmQxZWNlZjkyMGI0NDg5Nw==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2006-12-05T23:46:28Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2006-12-05T23:46:28Z"}, "message": "tree-ssa-structalias.c (set_used_smts): Re-fix pr29156.\n\n2006-12-05  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa-structalias.c (set_used_smts): Re-fix pr29156.\n\tOptimize to avoid marking more SMT's as used when they aren't.\n\nFrom-SVN: r119562", "tree": {"sha": "cc05dbd9f50426b87dadb3a77e4a6aba339b4913", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc05dbd9f50426b87dadb3a77e4a6aba339b4913"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff3add8dceb6734ea09b8bddfd1ecef920b44897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff3add8dceb6734ea09b8bddfd1ecef920b44897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff3add8dceb6734ea09b8bddfd1ecef920b44897", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff3add8dceb6734ea09b8bddfd1ecef920b44897/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "143c27b06512ff77ee978d8c6d4aa88103b70f1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143c27b06512ff77ee978d8c6d4aa88103b70f1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/143c27b06512ff77ee978d8c6d4aa88103b70f1e"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "cba81372cc768f32c98b8ad7878a0e35c307c4c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3add8dceb6734ea09b8bddfd1ecef920b44897/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3add8dceb6734ea09b8bddfd1ecef920b44897/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff3add8dceb6734ea09b8bddfd1ecef920b44897", "patch": "@@ -1,3 +1,8 @@\n+2006-12-05  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa-structalias.c (set_used_smts): Re-fix pr29156.\n+\tOptimize to avoid marking more SMT's as used when they aren't.\n+\n 2006-12-05  Eric Christopher  <echristo@apple.com>\n \n \t* config/i386/i386.c (x86_output_aligned_bss): Move out"}, {"sha": "6bd5d6fae1701f21c5dc9a6b0c5789ebf9425af0", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3add8dceb6734ea09b8bddfd1ecef920b44897/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3add8dceb6734ea09b8bddfd1ecef920b44897/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=ff3add8dceb6734ea09b8bddfd1ecef920b44897", "patch": "@@ -3894,15 +3894,21 @@ set_used_smts (void)\n       unsigned int j;\n       var_ann_t va;\n       struct ptr_info_def *pi = NULL;\n-\n-      if (TREE_CODE (vi->decl) == SSA_NAME)\n+      \n+      /* For parm decls, the pointer info may be under the default\n+\t def.  */\n+      if (TREE_CODE (vi->decl) == PARM_DECL\n+\t  && gimple_default_def (cfun, var))\n+\tpi = SSA_NAME_PTR_INFO (gimple_default_def (cfun, var));\n+      else if (TREE_CODE (var) == SSA_NAME)\n \tpi = SSA_NAME_PTR_INFO (var);\n \n       /* Skip the special variables and those without their own\n \t solution set.  */\n       if (vi->is_special_var || vi->node != vi->id || !SSA_VAR_P (var)\n \t  || (pi && !pi->is_dereferenced) \n-\t  || (DECL_P (var) && !may_be_aliased (var)))\n+\t  || (TREE_CODE (var) == VAR_DECL && !may_be_aliased (var))\n+\t  || !POINTER_TYPE_P (TREE_TYPE (var)))\n \tcontinue;\n \n       if (TREE_CODE (var) == SSA_NAME)\n@@ -3913,17 +3919,8 @@ set_used_smts (void)\n \tcontinue;\n \n       smt = va->symbol_mem_tag;\n-      if (smt)\n-\t{\n-\t  EXECUTE_IF_SET_IN_BITMAP (vi->solution, 0, j, bi)\n-\t    {\n-\t      if (get_varinfo (j)->is_artificial_var)\n-\t\t{\n-\t\t  bitmap_set_bit (used_smts, DECL_UID (smt));\n-\t\t  break;\n-\t\t}\n-\t    }\n-\t}\n+      if (smt && bitmap_bit_p (vi->solution, anything_id))\n+\tbitmap_set_bit (used_smts, DECL_UID (smt));\n     }\n }\n "}]}