{"sha": "b89896312467947542a6eebee886d182e6508760", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg5ODk2MzEyNDY3OTQ3NTQyYTZlZWJlZTg4NmQxODJlNjUwODc2MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-05-25T21:27:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-10T09:16:17Z"}, "message": "[Ada] Fix internal error on if-expression in call returning tagged type\n\ngcc/ada/\n\n\t* checks.adb (Determine_Range): Deal with Min and Max attributes.\n\t* exp_ch6.adb (Expand_Call_Helper): When generating code to pass\n\tthe accessibility level to the caller in the case of an actual\n\twhich is an if-expression, also remove the nodes created after\n\tthe declaration of the dummy temporary.\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Use Natural as\n\tthe type of the minimum accessibility level object.", "tree": {"sha": "3f57e0e83d18027645e8dc7ecc72b79f0ce1cb24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f57e0e83d18027645e8dc7ecc72b79f0ce1cb24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b89896312467947542a6eebee886d182e6508760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b89896312467947542a6eebee886d182e6508760", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b89896312467947542a6eebee886d182e6508760", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b89896312467947542a6eebee886d182e6508760/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb6eb3b79aac8efe003861859e52d8e1680b120f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb6eb3b79aac8efe003861859e52d8e1680b120f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb6eb3b79aac8efe003861859e52d8e1680b120f"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "2f6760067c4f3d8d0ef5a72aba9fb1d8692460c5", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89896312467947542a6eebee886d182e6508760/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89896312467947542a6eebee886d182e6508760/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=b89896312467947542a6eebee886d182e6508760", "patch": "@@ -5119,6 +5119,27 @@ package body Checks is\n          when N_Attribute_Reference =>\n             case Get_Attribute_Id (Attribute_Name (N)) is\n \n+               --  For Min/Max attributes, we can refine the range using the\n+               --  possible range of values of the attribute expressions.\n+\n+               when Attribute_Min\n+                  | Attribute_Max\n+               =>\n+                  Determine_Range\n+                    (First (Expressions (N)),\n+                     OK1, Lo_Left, Hi_Left, Assume_Valid);\n+\n+                  if OK1 then\n+                     Determine_Range\n+                       (Next (First (Expressions (N))),\n+                        OK1, Lo_Right, Hi_Right, Assume_Valid);\n+                  end if;\n+\n+                  if OK1 then\n+                     Lor := UI_Min (Lo_Left, Lo_Right);\n+                     Hir := UI_Max (Hi_Left, Hi_Right);\n+                  end if;\n+\n                --  For Pos/Val attributes, we can refine the range using the\n                --  possible range of values of the attribute expression.\n "}, {"sha": "776ff49daeae6e364858768a4505067250beb76c", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89896312467947542a6eebee886d182e6508760/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89896312467947542a6eebee886d182e6508760/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=b89896312467947542a6eebee886d182e6508760", "patch": "@@ -3927,6 +3927,8 @@ package body Exp_Ch6 is\n                      then\n                         declare\n                            Decl : Node_Id;\n+                           pragma Warnings (Off, Decl);\n+                           --  Suppress warning for the final removal loop\n                            Lvl  : Entity_Id;\n                            Res  : Entity_Id;\n                            Temp : Node_Id;\n@@ -4045,8 +4047,7 @@ package body Exp_Ch6 is\n                            --  expansion if we are dealing with a function\n                            --  call.\n \n-                           if Nkind (Call_Node) =\n-                                N_Procedure_Call_Statement\n+                           if Nkind (Call_Node) = N_Procedure_Call_Statement\n                            then\n                               --  Generate:\n                               --    Lvl : Natural;\n@@ -4109,7 +4110,13 @@ package body Exp_Ch6 is\n \n                               Set_Expression (Call_Node, Relocate_Node (Temp));\n                               Call_Node := Expression (Call_Node);\n-                              Remove (Next (Decl));\n+\n+                              --  Remove the declaration of the dummy and the\n+                              --  subsequent actions its analysis has created.\n+\n+                              while Present (Remove_Next (Decl)) loop\n+                                 null;\n+                              end loop;\n                            end if;\n \n                            --  Decorate the conditional expression with"}, {"sha": "fb14cbd68cf71b9c6dc50903a50d8f9b6ae3f94d", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89896312467947542a6eebee886d182e6508760/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89896312467947542a6eebee886d182e6508760/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b89896312467947542a6eebee886d182e6508760", "patch": "@@ -4684,7 +4684,7 @@ package body Sem_Ch6 is\n                   then\n                      --  Generate the minimum accessibility level object\n \n-                     --    A60b : integer := integer'min(2, paramL);\n+                     --    A60b : natural := natural'min(1, paramL);\n \n                      declare\n                         Loc      : constant Source_Ptr := Sloc (Body_Nod);\n@@ -4694,11 +4694,11 @@ package body Sem_Ch6 is\n                               Make_Temporary\n                                 (Loc, 'A', Extra_Accessibility (Form)),\n                             Object_Definition   => New_Occurrence_Of\n-                                                     (Standard_Integer, Loc),\n+                                                     (Standard_Natural, Loc),\n                             Expression          =>\n                               Make_Attribute_Reference (Loc,\n                                 Prefix         => New_Occurrence_Of\n-                                                    (Standard_Integer, Loc),\n+                                                    (Standard_Natural, Loc),\n                                 Attribute_Name => Name_Min,\n                                 Expressions    => New_List (\n                                   Make_Integer_Literal (Loc,"}]}