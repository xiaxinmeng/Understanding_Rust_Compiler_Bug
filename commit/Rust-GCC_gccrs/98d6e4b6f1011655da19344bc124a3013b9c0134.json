{"sha": "98d6e4b6f1011655da19344bc124a3013b9c0134", "node_id": "C_kwDOANBUbNoAKDk4ZDZlNGI2ZjEwMTE2NTVkYTE5MzQ0YmMxMjRhMzAxM2I5YzAxMzQ", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-12-03T20:13:48Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-12-04T19:27:34Z"}, "message": "Fortran: fix typo in documentation of intrinsic FLOOR [PR107870]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/107870\n\t* intrinsic.texi: Fix typo in documentation of intrinsic FLOOR.\n\tDescribe the optional KIND argument to intrinsics as a scalar\n\tconstant expression, in accordance with the current standard.", "tree": {"sha": "252cd02939bfa5156c2a8b11fb956f4abf257f77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/252cd02939bfa5156c2a8b11fb956f4abf257f77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98d6e4b6f1011655da19344bc124a3013b9c0134", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98d6e4b6f1011655da19344bc124a3013b9c0134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98d6e4b6f1011655da19344bc124a3013b9c0134", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98d6e4b6f1011655da19344bc124a3013b9c0134/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9123863828b2f86e7a6aafba38738e7204ed19ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9123863828b2f86e7a6aafba38738e7204ed19ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9123863828b2f86e7a6aafba38738e7204ed19ca"}], "stats": {"total": 60, "additions": 30, "deletions": 30}, "files": [{"sha": "7af1ca3eae6077738d9da5034954024a6532183f", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98d6e4b6f1011655da19344bc124a3013b9c0134/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98d6e4b6f1011655da19344bc124a3013b9c0134/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=98d6e4b6f1011655da19344bc124a3013b9c0134", "patch": "@@ -553,7 +553,7 @@ Elemental function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{I}    @tab The type shall be @code{INTEGER}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -920,7 +920,7 @@ Elemental function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{A}    @tab The type of the argument shall be @code{REAL}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -1202,7 +1202,7 @@ Elemental function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{A}    @tab The type of the argument shall be @code{REAL}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -3406,7 +3406,7 @@ Elemental function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{A} @tab The type shall be @code{REAL}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -3452,7 +3452,7 @@ Elemental function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{I} @tab The type shall be @code{INTEGER}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -3636,7 +3636,7 @@ Elemental function\n or @code{COMPLEX}.\n @item @var{Y} @tab (Optional; only allowed if @var{X} is not\n @code{COMPLEX}.)  May be @code{INTEGER} or @code{REAL}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -4527,7 +4527,7 @@ Transformational function\n @multitable @columnfractions .15 .70\n @item @var{MASK} @tab The type shall be @code{LOGICAL}.\n @item @var{DIM}  @tab (Optional) The type shall be @code{INTEGER}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -6186,7 +6186,7 @@ conformance with @var{ARRAY}.\n inclusive.  It may not be an optional dummy argument.\n @item @var{MASK} @tab (Optional) Shall be of type @code{LOGICAL},\n and conformable with @var{ARRAY}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @item @var{BACK} @tab (Optional) A scalar of type @code{LOGICAL}.\n @end multitable\n@@ -6215,7 +6215,7 @@ is of default kind.\n \n @table @asis\n @item @emph{Description}:\n-@code{FLOOR(A)} returns the greatest integer less than or equal to @var{X}.\n+@code{FLOOR(A)} returns the greatest integer less than or equal to @var{A}.\n \n @item @emph{Standard}:\n Fortran 95 and later\n@@ -6229,7 +6229,7 @@ Elemental function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{A} @tab The type shall be @code{REAL}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -7550,7 +7550,7 @@ Elemental function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{C}    @tab Shall be a scalar @code{CHARACTER}, with @code{INTENT(IN)}\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -8007,7 +8007,7 @@ Elemental function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{C}    @tab Shall be a scalar @code{CHARACTER}, with @code{INTENT(IN)}\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -8279,7 +8279,7 @@ Elemental function\n @code{INTENT(IN)}\n @item @var{BACK} @tab (Optional) Shall be a scalar @code{LOGICAL}, with\n @code{INTENT(IN)}\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -8324,7 +8324,7 @@ Elemental function\n @multitable @columnfractions .15 .70\n @item @var{A}    @tab Shall be of type @code{INTEGER},\n @code{REAL}, or @code{COMPLEX} or a boz-literal-constant.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -9109,7 +9109,7 @@ Inquiry function\n @multitable @columnfractions .15 .70\n @item @var{ARRAY} @tab Shall be an array, of any type.\n @item @var{DIM} @tab (Optional) Shall be a scalar @code{INTEGER}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -9152,7 +9152,7 @@ Inquiry function\n @multitable @columnfractions .15 .70\n @item @var{ARRAY} @tab Shall be an coarray, of any type.\n @item @var{DIM} @tab (Optional) Shall be a scalar @code{INTEGER}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -9239,7 +9239,7 @@ Inquiry function\n @multitable @columnfractions .15 .70\n @item @var{STRING} @tab Shall be a scalar or array of type\n @code{CHARACTER}, with @code{INTENT(IN)}\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -9285,7 +9285,7 @@ Elemental function\n @multitable @columnfractions .15 .70\n @item @var{STRING} @tab Shall be a scalar of type @code{CHARACTER},\n with @code{INTENT(IN)}\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -9823,7 +9823,7 @@ Elemental function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{L}    @tab The type shall be @code{LOGICAL}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -10312,7 +10312,7 @@ Transformational function\n inclusive.  It may not be an optional dummy argument.\n @item @var{MASK}  @tab Shall be of type @code{LOGICAL},\n and conformable with @var{ARRAY}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @item @var{BACK} @tab (Optional) A scalar of type @code{LOGICAL}.\n @end multitable\n@@ -10679,7 +10679,7 @@ Transformational function\n inclusive.  It may not be an optional dummy argument.\n @item @var{MASK}  @tab Shall be of type @code{LOGICAL},\n and conformable with @var{ARRAY}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @item @var{BACK} @tab (Optional) A scalar of type @code{LOGICAL}.\n @end multitable\n@@ -11111,7 +11111,7 @@ Elemental function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{A}    @tab The type of the argument shall be @code{REAL}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -12216,7 +12216,7 @@ Elemental function\n @multitable @columnfractions .15 .70\n @item @var{A}    @tab Shall be @code{INTEGER}, @code{REAL}, or\n @code{COMPLEX}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -12594,7 +12594,7 @@ Elemental function\n @item @var{STRING} @tab Shall be of type @code{CHARACTER}.\n @item @var{SET}    @tab Shall be of type @code{CHARACTER}.\n @item @var{BACK}   @tab (Optional) shall be of type @code{LOGICAL}.\n-@item @var{KIND}   @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND}   @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -12956,7 +12956,7 @@ Inquiry function\n @item @var{SOURCE} @tab Shall be an array or scalar of any type. \n If @var{SOURCE} is a pointer it must be associated and allocatable \n arrays must be allocated.\n-@item @var{KIND}   @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND}   @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -13417,7 +13417,7 @@ a pointer it must be associated and allocatable arrays must be allocated.\n @item @var{DIM}   @tab (Optional) shall be a scalar of type @code{INTEGER} \n and its value shall be in the range from 1 to n, where n equals the rank \n of @var{ARRAY}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -14680,8 +14680,8 @@ Inquiry function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{ARRAY} @tab Shall be an array, of any type.\n-@item @var{DIM} @tab (Optional) Shall be a scalar @code{INTEGER}.\n-@item @var{KIND}@tab (Optional) An @code{INTEGER} initialization\n+@item @var{DIM}   @tab (Optional) Shall be a scalar @code{INTEGER}.\n+@item @var{KIND}  @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -14725,7 +14725,7 @@ Inquiry function\n @multitable @columnfractions .15 .70\n @item @var{ARRAY} @tab Shall be an coarray, of any type.\n @item @var{DIM} @tab (Optional) Shall be a scalar @code{INTEGER}.\n-@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND} @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n \n@@ -14900,7 +14900,7 @@ Elemental function\n @item @var{STRING} @tab Shall be of type @code{CHARACTER}.\n @item @var{SET}    @tab Shall be of type @code{CHARACTER}.\n @item @var{BACK}   @tab (Optional) shall be of type @code{LOGICAL}.\n-@item @var{KIND}   @tab (Optional) An @code{INTEGER} initialization\n+@item @var{KIND}   @tab (Optional) A scalar @code{INTEGER} constant\n expression indicating the kind parameter of the result.\n @end multitable\n "}]}