{"sha": "98af6b86bc6cac705474c14bb3f9748f6866c859", "node_id": "C_kwDOANBUbNoAKDk4YWY2Yjg2YmM2Y2FjNzA1NDc0YzE0YmIzZjk3NDhmNjg2NmM4NTk", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-19T22:07:05Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-19T22:07:05Z"}, "message": "libstdc++: Implement LWG 3470 change to ranges::subrange\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/ranges_util.h\n\t(__detail::__uses_nonqualification_pointer_conversion): Define\n\tand use it ...\n\t(__detail::__convertible_to_nonslicing): ... here, as per LWG 3470.\n\t* testsuite/std/ranges/subrange/1.cc: New test.", "tree": {"sha": "93604230e89ece70d0e4170b50e454a05f66e20f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93604230e89ece70d0e4170b50e454a05f66e20f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98af6b86bc6cac705474c14bb3f9748f6866c859", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98af6b86bc6cac705474c14bb3f9748f6866c859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98af6b86bc6cac705474c14bb3f9748f6866c859", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98af6b86bc6cac705474c14bb3f9748f6866c859/comments", "author": null, "committer": null, "parents": [{"sha": "861440a77b62756d200ae356c4fdfd9653902e77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861440a77b62756d200ae356c4fdfd9653902e77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/861440a77b62756d200ae356c4fdfd9653902e77"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "a52b8fc8f5496320dceb827b599b98828016eb0e", "filename": "libstdc++-v3/include/bits/ranges_util.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98af6b86bc6cac705474c14bb3f9748f6866c859/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_util.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98af6b86bc6cac705474c14bb3f9748f6866c859/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_util.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_util.h?ref=98af6b86bc6cac705474c14bb3f9748f6866c859", "patch": "@@ -184,11 +184,16 @@ namespace ranges\n \n   namespace __detail\n   {\n-    template<class _From, class _To>\n+    template<typename _From, typename _To>\n+      concept __uses_nonqualification_pointer_conversion\n+\t= is_pointer_v<_From> && is_pointer_v<_To>\n+\t  && !convertible_to<remove_pointer_t<_From>(*)[],\n+\t\t\t     remove_pointer_t<_To>(*)[]>;\n+\n+    template<typename _From, typename _To>\n       concept __convertible_to_non_slicing = convertible_to<_From, _To>\n-\t&& !(is_pointer_v<decay_t<_From>> && is_pointer_v<decay_t<_To>>\n-\t    && __different_from<remove_pointer_t<decay_t<_From>>,\n-\t\t\t\tremove_pointer_t<decay_t<_To>>>);\n+\t&& !__uses_nonqualification_pointer_conversion<decay_t<_From>,\n+\t\t\t\t\t\t       decay_t<_To>>;\n \n     template<typename _Tp>\n       concept __pair_like"}, {"sha": "8a53261c78c18007167f07ea3bee368deb931871", "filename": "libstdc++-v3/testsuite/std/ranges/subrange/1.cc", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98af6b86bc6cac705474c14bb3f9748f6866c859/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fsubrange%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98af6b86bc6cac705474c14bb3f9748f6866c859/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fsubrange%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fsubrange%2F1.cc?ref=98af6b86bc6cac705474c14bb3f9748f6866c859", "patch": "@@ -0,0 +1,19 @@\n+// { dg-options \"-std=gnu++20\" }\n+// { dg-do run { target c++20 } }\n+\n+#include <ranges>\n+\n+void\n+test01()\n+{\n+  // LWG 3470\n+  int a[3] = {1,2,3};\n+  int* b[3] = {&a[2], &a[0], &a[1]};\n+  auto c = std::ranges::subrange<const int*const*>(b);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}