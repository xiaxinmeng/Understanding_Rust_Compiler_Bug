{"sha": "fa6092d2cdc654d4b2e018929c0dbe13fbd4ea69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE2MDkyZDJjZGM2NTRkNGIyZTAxODkyOWMwZGJlMTNmYmQ0ZWE2OQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2021-03-03T15:01:50Z"}, "committer": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2021-03-03T15:01:50Z"}, "message": "sparcv9: Disable -Wuninitialized warnings breaking bootstrap [PR92002]\n\nsparcv9 bootstrap has been broken for 1 1/2 years now by spurious\n-Wuninitialized warnings:\n\nIn function \u2018wide_int wi::max_value(unsigned int, signop)\u2019,\n    inlined from \u2018wide_int wi::max_value(unsigned int, signop)\u2019 at /vol/gcc/src/hg/master/local/gcc/wide-int.cc:330:1:\n/vol/gcc/src/hg/master/local/gcc/wide-int.cc:335:31: error: \u2018<anonymous>.generic_wide_int<wide_int_storage>::<anonymous>.wide_int_storage::val[1]\u2019 may be used uninitialized [-Werror=maybe-uninitialized]\n  335 |     return shwi (-1, precision);\n      |                               ^\n[...]\nIn function \u2018wide_int get_nonzero_bits(const_tree)\u2019,\n    inlined from \u2018wide_int get_nonzero_bits(const_tree)\u2019 at /vol/gcc/src/hg/master/local/gcc/tree-ssanames.c:531:1:\n/vol/gcc/src/hg/master/local/gcc/tree-ssanames.c:544:67: error: \u2018<anonymous>.generic_wide_int<wide_int_storage>::<anonymous>.wide_int_storage::val[1]\u2019 may be used uninitialized [-Werror=maybe-uninitialized]\n  544 |                          | (HOST_WIDE_INT) pi->misalign, precision);\n      |                                                                   ^\n[...]\n\nBefore we ship yet another release with this issue, I suggest to at\nleast include a workaround of demoting them to warnings.\n\nTested on sparcv9-sun-solaris2.11.\n\n\n2021-03-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\tgcc:\n\tPR bootstrap/92002\n\t* config/sparc/t-sparc (tree-ssanames.o-warn): Don't error for\n\t-Wuninitialized, -Wmaybe-uninitialized.\n\t(wide-int.o-warn): Likewise.", "tree": {"sha": "2cd7205c352943f7307b0c12ffbf027e35290e74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cd7205c352943f7307b0c12ffbf027e35290e74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa6092d2cdc654d4b2e018929c0dbe13fbd4ea69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa6092d2cdc654d4b2e018929c0dbe13fbd4ea69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa6092d2cdc654d4b2e018929c0dbe13fbd4ea69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa6092d2cdc654d4b2e018929c0dbe13fbd4ea69/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dabbfb0f4a9fbdc77e1ea4db7302586f00895e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dabbfb0f4a9fbdc77e1ea4db7302586f00895e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dabbfb0f4a9fbdc77e1ea4db7302586f00895e1"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "64906e98a98c4d30b0bdcf202e0ff8a27a58e90d", "filename": "gcc/config/sparc/t-sparc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa6092d2cdc654d4b2e018929c0dbe13fbd4ea69/gcc%2Fconfig%2Fsparc%2Ft-sparc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa6092d2cdc654d4b2e018929c0dbe13fbd4ea69/gcc%2Fconfig%2Fsparc%2Ft-sparc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sparc?ref=fa6092d2cdc654d4b2e018929c0dbe13fbd4ea69", "patch": "@@ -27,3 +27,7 @@ sparc-c.o: $(srcdir)/config/sparc/sparc-c.c\n sparc-d.o: $(srcdir)/config/sparc/sparc-d.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n+\n+# Hack around PR bootstrap/92002.\n+tree-ssanames.o-warn += -Wno-error=uninitialized -Wno-error=maybe-uninitialized\n+wide-int.o-warn += -Wno-error=uninitialized -Wno-error=maybe-uninitialized"}]}