{"sha": "6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY4NTVhMjZhYjJkMzBiYzdmM2IwY2ZlYzQ1NmUyYjI3ZTYzYjlhNw==", "commit": {"author": {"name": "Fritz Reese", "email": "Reese-Fritz@zai.com", "date": "2017-08-10T12:19:13Z"}, "committer": {"name": "Fritz Reese", "email": "foreese@gcc.gnu.org", "date": "2017-08-10T12:19:13Z"}, "message": "decl.c (attr_seen): New static variable.\n\n2017-08-10  Fritz Reese <Reese-Fritz@zai.com>\n\n    gcc/fortran/ChangeLog:\n\n\t* decl.c (attr_seen): New static variable.\n\t* decl.c (variable_decl): Match %FILL in STRUCTURE body.\n\t* gfortran.texi: Update documentation.\n\n    gcc/testsuite/ChangeLog:\n\n    gfortran.dg/\n\t* dec_structure_18.f90, dec_structure_19.f90, dec_structure_20.f90,\n\tdec_structure_21.f90: New.\n\nFrom-SVN: r251023", "tree": {"sha": "df39d4d0185d28f1f57d1ffac7bf3ade3be9c485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df39d4d0185d28f1f57d1ffac7bf3ade3be9c485"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/comments", "author": null, "committer": null, "parents": [{"sha": "f234f0787e0ab940d49d9e90911c089bcb35d7f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f234f0787e0ab940d49d9e90911c089bcb35d7f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f234f0787e0ab940d49d9e90911c089bcb35d7f1"}], "stats": {"total": 187, "additions": 185, "deletions": 2}, "files": [{"sha": "45b16d48b28722e8852eae4ec033ebc4d9bf0890", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7", "patch": "@@ -1,3 +1,9 @@\n+2017-08-10  Fritz Reese <Reese-Fritz@zai.com>\n+\n+\t* decl.c (attr_seen): New static variable.\n+\t* decl.c (variable_decl): Match %FILL in STRUCTURE body.\n+\t* gfortran.texi: Update documentation.\n+\n 2017-08-08  Martin Liska  <mliska@suse.cz>\n \n \t* trans-types.c: Include header files."}, {"sha": "b919f43cbd48492b9c7e456daf239b38bdcff91d", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 54, "deletions": 2, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7", "patch": "@@ -54,6 +54,7 @@ static gfc_typespec current_ts;\n static symbol_attribute current_attr;\n static gfc_array_spec *current_as;\n static int colon_seen;\n+static int attr_seen;\n \n /* The current binding label (if any).  */\n static const char* curr_binding_label;\n@@ -2140,6 +2141,7 @@ static match\n variable_decl (int elem)\n {\n   char name[GFC_MAX_SYMBOL_LEN + 1];\n+  static unsigned int fill_id = 0;\n   gfc_expr *initializer, *char_len;\n   gfc_array_spec *as;\n   gfc_array_spec *cp_as; /* Extra copy for Cray Pointees.  */\n@@ -2157,9 +2159,47 @@ variable_decl (int elem)\n   /* When we get here, we've just matched a list of attributes and\n      maybe a type and a double colon.  The next thing we expect to see\n      is the name of the symbol.  */\n-  m = gfc_match_name (name);\n+\n+  /* If we are parsing a structure with legacy support, we allow the symbol\n+     name to be '%FILL' which gives it an anonymous (inaccessible) name.  */\n+  m = MATCH_NO;\n+  gfc_gobble_whitespace ();\n+  if (gfc_peek_ascii_char () == '%')\n+    {\n+      gfc_next_ascii_char ();\n+      m = gfc_match (\"fill\");\n+    }\n+\n   if (m != MATCH_YES)\n-    goto cleanup;\n+    {\n+      m = gfc_match_name (name);\n+      if (m != MATCH_YES)\n+\tgoto cleanup;\n+    }\n+\n+  else\n+    {\n+      m = MATCH_ERROR;\n+      if (gfc_current_state () != COMP_STRUCTURE)\n+\t{\n+\t  if (flag_dec_structure)\n+\t    gfc_error (\"%qs not allowed outside STRUCTURE at %C\", \"%FILL\");\n+\t  else\n+\t    gfc_error (\"%qs at %C is a DEC extension, enable with \"\n+\t\t       \"%<-fdec-structure%>\", \"%FILL\");\n+\t  goto cleanup;\n+\t}\n+\n+      if (attr_seen)\n+\t{\n+\t  gfc_error (\"%qs entity cannot have attributes at %C\", \"%FILL\");\n+\t  goto cleanup;\n+\t}\n+\n+      /* %FILL components are given invalid fortran names.  */\n+      snprintf (name, GFC_MAX_SYMBOL_LEN + 1, \"%%FILL%u\", fill_id++);\n+      m = MATCH_YES;\n+    }\n \n   var_locus = gfc_current_locus;\n \n@@ -2260,6 +2300,14 @@ variable_decl (int elem)\n \t}\n     }\n \n+  /* %FILL components may not have initializers.  */\n+  if (strncmp (name, \"%FILL\", 5) == 0 && gfc_match_eos () != MATCH_YES)\n+    {\n+      gfc_error (\"%qs entity cannot have an initializer at %C\", \"%FILL\");\n+      m = MATCH_ERROR;\n+      goto cleanup;\n+    }\n+\n   /*  If this symbol has already shown up in a Cray Pointer declaration,\n       and this is not a component declaration,\n       then we want to set the type & bail out.  */\n@@ -3860,6 +3908,7 @@ match_attr_spec (void)\n \n   current_as = NULL;\n   colon_seen = 0;\n+  attr_seen = 0;\n \n   /* See if we get all of the keywords up to the final double colon.  */\n   for (d = GFC_DECL_BEGIN; d != GFC_DECL_END; d++)\n@@ -4228,6 +4277,8 @@ match_attr_spec (void)\n     {\n       if (seen[d] == 0)\n \tcontinue;\n+      else\n+        attr_seen = 1;\n \n       if ((d == DECL_STATIC || d == DECL_AUTOMATIC)\n \t  && !flag_dec_static)\n@@ -4436,6 +4487,7 @@ match_attr_spec (void)\n   gfc_current_locus = start;\n   gfc_free_array_spec (current_as);\n   current_as = NULL;\n+  attr_seen = 0;\n   return m;\n }\n "}, {"sha": "145ec7fb9ab231d6d7c320c5d7da4a49bc45b1ae", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7", "patch": "@@ -2220,6 +2220,20 @@ rules and exceptions:\n @item Structures act like derived types with the @code{SEQUENCE} attribute.\n Otherwise they may contain no specifiers.\n \n+@item Structures may contain a special field with the name @code{%FILL}.\n+This will create an anonymous component which cannot be accessed but occupies\n+space just as if a component of the same type was declared in its place, useful\n+for alignment purposes.  As an example, the following structure will consist\n+of at least sixteen bytes:\n+\n+@smallexample\n+structure /padded/\n+  character(4) start\n+  character(8) %FILL\n+  character(4) end\n+end structure\n+@end smallexample\n+\n @item Structures may share names with other symbols. For example, the following\n is invalid for derived types, but valid for structures:\n "}, {"sha": "adae3b9bee218ad71f19f2899f84158e16491b14", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7", "patch": "@@ -1,3 +1,10 @@\n+2017-08-10  Fritz Reese <Reese-Fritz@zai.com>\n+\n+\t* gfortran.dg/dec_structure_18.f90: New test.\n+\t* gfortran.dg/dec_structure_19.f90: New test.\n+\t* gfortran.dg/dec_structure_20.f90: New test.\n+\t* gfortran.dg/dec_structure_21.f90: New test.\n+\n 2017-08-10  Marek Polacek  <polacek@redhat.com>\n \n \tPR testsuite/81784"}, {"sha": "1e6b229216bf8edc04e520dcf456862a4cd65649", "filename": "gcc/testsuite/gfortran.dg/dec_structure_18.f90", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_18.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_18.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_18.f90?ref=6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7", "patch": "@@ -0,0 +1,38 @@\n+      ! { dg-do run }\n+      ! { dg-options \"-fdec-structure -ffixed-form\" }\n+      !\n+      ! Test the %FILL component extension.\n+      !\n+      implicit none\n+\n+      structure /s/\n+        character(2) i\n+        character(2) %fill\n+        character(2) j\n+      end structure\n+\n+      structure /s2/\n+        character buf(6)\n+      end structure\n+\n+      record /s/ x\n+      record /s2/ y\n+      equivalence (x, y)\n+\n+      x.i = '12'\n+      x.j = '34'\n+\n+      if (y.buf(1) .ne. '1') then\n+        call abort\n+      endif\n+      if (y.buf(2) .ne. '2') then\n+        call abort\n+      endif\n+      if (y.buf(5) .ne. '3') then\n+        call abort\n+      endif\n+      if (y.buf(6) .ne. '4') then\n+        call abort\n+      endif\n+\n+      end"}, {"sha": "9ea0b3efe13cd2d244e5607e410bb7d0d9705685", "filename": "gcc/testsuite/gfortran.dg/dec_structure_19.f90", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_19.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_19.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_19.f90?ref=6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7", "patch": "@@ -0,0 +1,38 @@\n+! { dg-do compile }\n+! { dg-options \"-fdec-structure -ffree-form\" }\n+!\n+! Test the %FILL component extension.\n+!\n+implicit none\n+\n+structure /s/\n+  character(2) i\n+  character(2) %fill\n+  character(2) j\n+end structure\n+\n+structure /s2/\n+  character buf(6)\n+end structure\n+\n+record /s/ x\n+record /s2/ y\n+equivalence (x, y)\n+\n+x.i = \"12\"\n+x.j = \"34\"\n+\n+if (y.buf(1) .ne. '1') then\n+  call abort\n+endif\n+if (y.buf(2) .ne. '2') then\n+  call abort\n+endif\n+if (y.buf(5) .ne. '3') then\n+  call abort\n+endif\n+if (y.buf(6) .ne. '4') then\n+  call abort\n+endif\n+\n+end"}, {"sha": "9e952040076e5f100229fc59561732ff42dde705", "filename": "gcc/testsuite/gfortran.dg/dec_structure_20.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_20.f90?ref=6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7", "patch": "@@ -0,0 +1,18 @@\n+      ! { dg-do compile }\n+      ! { dg-options \"-fdec-structure\" }\n+      !\n+      ! Test error handling for %FILL\n+      !\n+      implicit none\n+\n+      structure /s/\n+        integer(2) i /3/\n+        integer(2) %fill /4/ ! { dg-error \"cannot have an initializer\" }\n+        integer(2), pointer :: %fill ! { dg-error \"cannot have attributes\" }\n+      end structure\n+\n+      type t\n+        integer %fill ! { dg-error \"not allowed outside STRUCTURE\" }\n+      endtype\n+\n+      end"}, {"sha": "64e8ca39e4602a0d42d821d0d90fc08291adb5ee", "filename": "gcc/testsuite/gfortran.dg/dec_structure_21.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_21.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_21.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_21.f90?ref=6f855a26ab2d30bc7f3b0cfec456e2b27e63b9a7", "patch": "@@ -0,0 +1,10 @@\n+      ! { dg-do compile }\n+      ! { dg-options \"-ffixed-form\" }\n+      !\n+      ! Test errors for %FILL without -fdec-structure.\n+      !\n+      implicit none\n+\n+      character(2) %fill ! { dg-error \"is a DEC extension\" }\n+\n+      end"}]}