{"sha": "c10a3b13fec850effc68c8b4f8861158f7fa7fed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzEwYTNiMTNmZWM4NTBlZmZjNjhjOGI0Zjg4NjExNThmN2ZhN2ZlZA==", "commit": {"author": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2021-05-04T21:26:58Z"}, "committer": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2021-05-05T06:06:16Z"}, "message": "libcc1: delete copy constructor and assignment operators\n\nChange libcc1 to use \"= delete\" for the copy constructor and\nassignment operator, rather than the old approach of private methods\nthat are nowhere defined.\n\nlibcc1\n\n\t* rpc.hh (argument_wrapper): Use delete for copy constructor.\n\t* connection.hh (class connection): Use delete for copy\n\tconstructor.\n\t* callbacks.hh (class callbacks): Use delete for copy constructor.", "tree": {"sha": "28e91c7827d116acb2a00a6eae6a5bcf1a0c143c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28e91c7827d116acb2a00a6eae6a5bcf1a0c143c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c10a3b13fec850effc68c8b4f8861158f7fa7fed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c10a3b13fec850effc68c8b4f8861158f7fa7fed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c10a3b13fec850effc68c8b4f8861158f7fa7fed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c10a3b13fec850effc68c8b4f8861158f7fa7fed/comments", "author": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41f4381648feb1e5eaa27d108b21e2b95ad3739d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41f4381648feb1e5eaa27d108b21e2b95ad3739d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41f4381648feb1e5eaa27d108b21e2b95ad3739d"}], "stats": {"total": 56, "additions": 24, "deletions": 32}, "files": [{"sha": "dc470c62c48d3ab42188e432ca8701f25fef3b2f", "filename": "libcc1/callbacks.hh", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c10a3b13fec850effc68c8b4f8861158f7fa7fed/libcc1%2Fcallbacks.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c10a3b13fec850effc68c8b4f8861158f7fa7fed/libcc1%2Fcallbacks.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fcallbacks.hh?ref=c10a3b13fec850effc68c8b4f8861158f7fa7fed", "patch": "@@ -42,6 +42,9 @@ namespace cc1_plugin\n     callbacks ();\n     ~callbacks ();\n \n+    callbacks (const callbacks &) = delete;\n+    callbacks &operator= (const callbacks &) = delete;\n+\n     // Add a callback named NAME.  FUNC is the function to call when\n     // this method is invoked.\n     void add_callback (const char *name, callback_ftype *func);\n@@ -52,10 +55,6 @@ namespace cc1_plugin\n \n   private:\n \n-    // Declared but not defined to avoid use.\n-    callbacks (const callbacks &);\n-    callbacks &operator= (const callbacks &);\n-\n     // The mapping.\n     htab_t m_registry;\n   };"}, {"sha": "15ad1716a29ed8f3c0dc1449844b30046bac0516", "filename": "libcc1/connection.hh", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c10a3b13fec850effc68c8b4f8861158f7fa7fed/libcc1%2Fconnection.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c10a3b13fec850effc68c8b4f8861158f7fa7fed/libcc1%2Fconnection.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fconnection.hh?ref=c10a3b13fec850effc68c8b4f8861158f7fa7fed", "patch": "@@ -48,6 +48,9 @@ namespace cc1_plugin\n \n     virtual ~connection () = default;\n \n+    connection (const connection &) = delete;\n+    connection &operator= (const connection &) = delete;\n+\n     // Send a single character.  This is used to introduce various\n     // higher-level protocol elements.\n     status send (char c);\n@@ -95,10 +98,6 @@ namespace cc1_plugin\n \n   private:\n \n-    // Declared but not defined, to prevent use.\n-    connection (const connection &);\n-    connection &operator= (const connection &);\n-\n     // Helper function for the wait_* methods.\n     status do_wait (bool);\n "}, {"sha": "429aeb3c127849f04a1a5bbeee70a38b75c660e2", "filename": "libcc1/rpc.hh", "status": "modified", "additions": 18, "deletions": 24, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c10a3b13fec850effc68c8b4f8861158f7fa7fed/libcc1%2Frpc.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c10a3b13fec850effc68c8b4f8861158f7fa7fed/libcc1%2Frpc.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Frpc.hh?ref=c10a3b13fec850effc68c8b4f8861158f7fa7fed", "patch": "@@ -39,6 +39,9 @@ namespace cc1_plugin\n     argument_wrapper () { }\n     ~argument_wrapper () { }\n \n+    argument_wrapper (const argument_wrapper &) = delete;\n+    argument_wrapper &operator= (const argument_wrapper &) = delete;\n+\n     operator T () const { return m_object; }\n \n     status unmarshall (connection *conn)\n@@ -49,10 +52,6 @@ namespace cc1_plugin\n   private:\n \n     T m_object;\n-\n-    // No copying or assignment allowed.\n-    argument_wrapper (const argument_wrapper &);\n-    argument_wrapper &operator= (const argument_wrapper &);\n   };\n \n   // Specialization for any kind of pointer.  This is declared but not\n@@ -72,6 +71,9 @@ namespace cc1_plugin\n       delete[] m_object;\n     }\n \n+    argument_wrapper (const argument_wrapper &) = delete;\n+    argument_wrapper &operator= (const argument_wrapper &) = delete;\n+\n     operator const char * () const\n     {\n       return m_object;\n@@ -85,10 +87,6 @@ namespace cc1_plugin\n   private:\n \n     char *m_object;\n-\n-    // No copying or assignment allowed.\n-    argument_wrapper (const argument_wrapper &);\n-    argument_wrapper &operator= (const argument_wrapper &);\n   };\n \n   // Specialization for gcc_type_array.\n@@ -106,6 +104,9 @@ namespace cc1_plugin\n       delete m_object;\n     }\n \n+    argument_wrapper (const argument_wrapper &) = delete;\n+    argument_wrapper &operator= (const argument_wrapper &) = delete;\n+\n     operator const gcc_type_array * () const\n     {\n       return m_object;\n@@ -119,10 +120,6 @@ namespace cc1_plugin\n   private:\n \n     gcc_type_array *m_object;\n-\n-    // No copying or assignment allowed.\n-    argument_wrapper (const argument_wrapper &);\n-    argument_wrapper &operator= (const argument_wrapper &);\n   };\n \n #ifdef GCC_CP_INTERFACE_H\n@@ -144,6 +141,9 @@ namespace cc1_plugin\n       delete m_object;\n     }\n \n+    argument_wrapper (const argument_wrapper &) = delete;\n+    argument_wrapper &operator= (const argument_wrapper &) = delete;\n+\n     operator const gcc_vbase_array * () const\n     {\n       return m_object;\n@@ -157,10 +157,6 @@ namespace cc1_plugin\n   private:\n \n     gcc_vbase_array *m_object;\n-\n-    // No copying or assignment allowed.\n-    argument_wrapper (const argument_wrapper &);\n-    argument_wrapper &operator= (const argument_wrapper &);\n   };\n \n   // Specialization for gcc_cp_template_args.\n@@ -181,6 +177,9 @@ namespace cc1_plugin\n       delete m_object;\n     }\n \n+    argument_wrapper (const argument_wrapper &) = delete;\n+    argument_wrapper &operator= (const argument_wrapper &) = delete;\n+\n     operator const gcc_cp_template_args * () const\n     {\n       return m_object;\n@@ -194,10 +193,6 @@ namespace cc1_plugin\n   private:\n \n     gcc_cp_template_args *m_object;\n-\n-    // No copying or assignment allowed.\n-    argument_wrapper (const argument_wrapper &);\n-    argument_wrapper &operator= (const argument_wrapper &);\n   };\n \n   // Specialization for gcc_cp_function_args.\n@@ -217,6 +212,9 @@ namespace cc1_plugin\n       delete m_object;\n     }\n \n+    argument_wrapper (const argument_wrapper &) = delete;\n+    argument_wrapper &operator= (const argument_wrapper &) = delete;\n+\n     operator const gcc_cp_function_args * () const\n     {\n       return m_object;\n@@ -230,10 +228,6 @@ namespace cc1_plugin\n   private:\n \n     gcc_cp_function_args *m_object;\n-\n-    // No copying or assignment allowed.\n-    argument_wrapper (const argument_wrapper &);\n-    argument_wrapper &operator= (const argument_wrapper &);\n   };\n #endif /* GCC_CP_INTERFACE_H */\n "}]}