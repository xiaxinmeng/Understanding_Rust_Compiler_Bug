{"sha": "e2e9b7b8b20ca68c31859df3edcd37165e189410", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJlOWI3YjhiMjBjYTY4YzMxODU5ZGYzZWRjZDM3MTY1ZTE4OTQxMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-11-23T11:50:46Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-11-23T11:50:46Z"}, "message": "Fix formatting nit.\n\nFrom-SVN: r91085", "tree": {"sha": "f1e51bdb12975de3c7a7bbedb6b71d00c3cdb663", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1e51bdb12975de3c7a7bbedb6b71d00c3cdb663"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2e9b7b8b20ca68c31859df3edcd37165e189410", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2e9b7b8b20ca68c31859df3edcd37165e189410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2e9b7b8b20ca68c31859df3edcd37165e189410", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2e9b7b8b20ca68c31859df3edcd37165e189410/comments", "author": null, "committer": null, "parents": [{"sha": "491982a0a745032f75d63c8447c08812bbe32106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/491982a0a745032f75d63c8447c08812bbe32106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/491982a0a745032f75d63c8447c08812bbe32106"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f10317dd291df4982d0cd8b2be6ce979dd15e58a", "filename": "gcc/gthr-posix95.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2e9b7b8b20ca68c31859df3edcd37165e189410/gcc%2Fgthr-posix95.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2e9b7b8b20ca68c31859df3edcd37165e189410/gcc%2Fgthr-posix95.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-posix95.h?ref=e2e9b7b8b20ca68c31859df3edcd37165e189410", "patch": "@@ -579,7 +579,7 @@ __gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *mutex)\n   if (__gthread_active_p ())\n     {\n       if (--mutex->depth == 0)\n-        {\n+\t{\n \t   mutex->owner = (pthread_t) 0;\n \t   pthread_mutex_unlock (&mutex->actual);\n \t}"}]}