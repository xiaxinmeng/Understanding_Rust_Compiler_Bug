{"sha": "7ab91c5fd65676442fa888f6ab6820c92098ff40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FiOTFjNWZkNjU2NzY0NDJmYTg4OGY2YWI2ODIwYzkyMDk4ZmY0MA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-10-07T21:00:36Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-10-07T21:00:36Z"}, "message": "i386-protos.h (ix86_schedule): New.\n\n2008-10-07  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386-protos.h (ix86_schedule): New.\n\n\t* config/i386/i386.c (ix86_schedule): New.\n\t(override_options): Add schedule to processor_alias_table.  Set\n\tix86_schedule from the schedule field in processor_alias_table.\n\t(ix86_function_specific_save): Save ix86_schedule.\n\t(ix86_function_specific_restore): Restore ix86_schedule.\n\n\t* config/i386/i386.md (cpu): Map to ix86_schedule instead of\n\tix86_tune.  Add none and remove i386, i486, pentium4, nocona\n\tand generic32.\n\n\t* config/i386/i386.opt: Add schedule.\n\n\t* config/i386/ppro.md: Remove generic32.\n\nFrom-SVN: r140954", "tree": {"sha": "27c28b5b5122927eae5bb2db03c2c52ad667e3c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27c28b5b5122927eae5bb2db03c2c52ad667e3c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ab91c5fd65676442fa888f6ab6820c92098ff40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab91c5fd65676442fa888f6ab6820c92098ff40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ab91c5fd65676442fa888f6ab6820c92098ff40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab91c5fd65676442fa888f6ab6820c92098ff40/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16d5ffec52cbe1c4e6d10ca67656fec7eb6badcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16d5ffec52cbe1c4e6d10ca67656fec7eb6badcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16d5ffec52cbe1c4e6d10ca67656fec7eb6badcd"}], "stats": {"total": 376, "additions": 203, "deletions": 173}, "files": [{"sha": "8f2989703e7f79685d01193037966faad478055d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab91c5fd65676442fa888f6ab6820c92098ff40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab91c5fd65676442fa888f6ab6820c92098ff40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ab91c5fd65676442fa888f6ab6820c92098ff40", "patch": "@@ -1,3 +1,21 @@\n+2008-10-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386-protos.h (ix86_schedule): New.\n+\n+\t* config/i386/i386.c (ix86_schedule): New.\n+\t(override_options): Add schedule to processor_alias_table.  Set\n+\tix86_schedule from the schedule field in processor_alias_table.\n+\t(ix86_function_specific_save): Save ix86_schedule.\n+\t(ix86_function_specific_restore): Restore ix86_schedule.\n+\n+\t* config/i386/i386.md (cpu): Map to ix86_schedule instead of\n+\tix86_tune.  Add none and remove i386, i486, pentium4, nocona\n+\tand generic32.\n+\n+\t* config/i386/i386.opt: Add schedule.\n+\n+\t* config/i386/ppro.md: Remove generic32.\n+\n 2008-10-07  Simon Martin  <simartin@users.sourceforge.net>\n \n \tPR c/35437"}, {"sha": "1abd11dead7c9417d96c9819a080efbda0c8a6b4", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab91c5fd65676442fa888f6ab6820c92098ff40/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab91c5fd65676442fa888f6ab6820c92098ff40/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=7ab91c5fd65676442fa888f6ab6820c92098ff40", "patch": "@@ -272,3 +272,7 @@ extern enum rtx_code ix86_fp_compare_code_to_integer (enum rtx_code);\n extern rtx construct_plt_address (rtx);\n #endif\n extern int asm_preferred_eh_data_format (int, int);\n+\n+#ifdef HAVE_ATTR_cpu\n+extern enum attr_cpu ix86_schedule;\n+#endif"}, {"sha": "be371173fa2cc7d34755439115e71a464705c07b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 88, "deletions": 83, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab91c5fd65676442fa888f6ab6820c92098ff40/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab91c5fd65676442fa888f6ab6820c92098ff40/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7ab91c5fd65676442fa888f6ab6820c92098ff40", "patch": "@@ -1690,6 +1690,9 @@ enum tls_dialect ix86_tls_dialect = TLS_DIALECT_GNU;\n enum fpmath_unit ix86_fpmath;\n \n /* Which cpu are we scheduling for.  */\n+enum attr_cpu ix86_schedule;\n+\n+/* Which cpu are we optimizing for.  */\n enum processor_type ix86_tune;\n \n /* Which instruction set architecture to use.  */\n@@ -2487,93 +2490,89 @@ override_options (bool main_args_p)\n     {\n       const char *const name;\t\t/* processor name or nickname.  */\n       const enum processor_type processor;\n+      const enum attr_cpu schedule;\n       const unsigned /*enum pta_flags*/ flags;\n     }\n   const processor_alias_table[] =\n     {\n-      {\"i386\", PROCESSOR_I386, 0},\n-      {\"i486\", PROCESSOR_I486, 0},\n-      {\"i586\", PROCESSOR_PENTIUM, 0},\n-      {\"pentium\", PROCESSOR_PENTIUM, 0},\n-      {\"pentium-mmx\", PROCESSOR_PENTIUM, PTA_MMX},\n-      {\"winchip-c6\", PROCESSOR_I486, PTA_MMX},\n-      {\"winchip2\", PROCESSOR_I486, PTA_MMX | PTA_3DNOW},\n-      {\"c3\", PROCESSOR_I486, PTA_MMX | PTA_3DNOW},\n-      {\"c3-2\", PROCESSOR_PENTIUMPRO, PTA_MMX | PTA_SSE},\n-      {\"i686\", PROCESSOR_PENTIUMPRO, 0},\n-      {\"pentiumpro\", PROCESSOR_PENTIUMPRO, 0},\n-      {\"pentium2\", PROCESSOR_PENTIUMPRO, PTA_MMX},\n-      {\"pentium3\", PROCESSOR_PENTIUMPRO, PTA_MMX | PTA_SSE},\n-      {\"pentium3m\", PROCESSOR_PENTIUMPRO, PTA_MMX | PTA_SSE},\n-      {\"pentium-m\", PROCESSOR_PENTIUMPRO, PTA_MMX | PTA_SSE | PTA_SSE2},\n-      {\"pentium4\", PROCESSOR_PENTIUM4, PTA_MMX |PTA_SSE | PTA_SSE2},\n-      {\"pentium4m\", PROCESSOR_PENTIUM4, PTA_MMX | PTA_SSE | PTA_SSE2},\n-      {\"prescott\", PROCESSOR_NOCONA, PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3},\n-      {\"nocona\", PROCESSOR_NOCONA, (PTA_64BIT\n-\t\t\t\t    | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n-\t\t\t\t    | PTA_CX16 | PTA_NO_SAHF)},\n-      {\"core2\", PROCESSOR_CORE2, (PTA_64BIT\n-\t\t\t\t  | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n-\t\t\t\t  | PTA_SSSE3\n-\t\t\t\t  | PTA_CX16)},\n-      {\"geode\", PROCESSOR_GEODE, (PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t  |PTA_PREFETCH_SSE)},\n-      {\"k6\", PROCESSOR_K6, PTA_MMX},\n-      {\"k6-2\", PROCESSOR_K6, PTA_MMX | PTA_3DNOW},\n-      {\"k6-3\", PROCESSOR_K6, PTA_MMX | PTA_3DNOW},\n-      {\"athlon\", PROCESSOR_ATHLON, (PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t    | PTA_PREFETCH_SSE)},\n-      {\"athlon-tbird\", PROCESSOR_ATHLON, (PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t\t  | PTA_PREFETCH_SSE)},\n-      {\"athlon-4\", PROCESSOR_ATHLON, (PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t      | PTA_SSE)},\n-      {\"athlon-xp\", PROCESSOR_ATHLON, (PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t       | PTA_SSE)},\n-      {\"athlon-mp\", PROCESSOR_ATHLON, (PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t       | PTA_SSE)},\n-      {\"x86-64\", PROCESSOR_K8, (PTA_64BIT\n-\t\t\t\t| PTA_MMX | PTA_SSE | PTA_SSE2\n-\t\t\t\t| PTA_NO_SAHF)},\n-      {\"k8\", PROCESSOR_K8, (PTA_64BIT\n-\t\t\t    | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t    | PTA_SSE | PTA_SSE2\n-\t\t\t    | PTA_NO_SAHF)},\n-      {\"k8-sse3\", PROCESSOR_K8, (PTA_64BIT\n-\t\t\t\t | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t | PTA_SSE | PTA_SSE2 | PTA_SSE3\n-\t\t\t\t | PTA_NO_SAHF)},\n-      {\"opteron\", PROCESSOR_K8, (PTA_64BIT\n-\t\t\t\t | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t | PTA_SSE | PTA_SSE2\n-\t\t\t\t | PTA_NO_SAHF)},\n-      {\"opteron-sse3\", PROCESSOR_K8, (PTA_64BIT\n-\t\t\t\t      | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t      | PTA_SSE | PTA_SSE2 | PTA_SSE3\n-\t\t\t\t      | PTA_NO_SAHF)},\n-      {\"athlon64\", PROCESSOR_K8, (PTA_64BIT\n-\t\t\t\t  | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t  | PTA_SSE | PTA_SSE2\n-\t\t\t\t  | PTA_NO_SAHF)},\n-      {\"athlon64-sse3\", PROCESSOR_K8, (PTA_64BIT\n-\t\t\t\t       | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t       | PTA_SSE | PTA_SSE2 | PTA_SSE3\n-\t\t\t\t       | PTA_NO_SAHF)},\n-      {\"athlon-fx\", PROCESSOR_K8, (PTA_64BIT\n-\t\t\t\t   | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t   | PTA_SSE | PTA_SSE2\n-\t\t\t\t   | PTA_NO_SAHF)},\n-      {\"amdfam10\", PROCESSOR_AMDFAM10, (PTA_64BIT\n-\t\t\t\t\t| PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t\t| PTA_SSE | PTA_SSE2 | PTA_SSE3\n-\t\t\t\t\t| PTA_SSE4A\n-\t\t\t\t\t| PTA_CX16 | PTA_ABM)},\n-      {\"barcelona\", PROCESSOR_AMDFAM10, (PTA_64BIT\n-\t\t\t\t\t | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A\n-\t\t\t\t\t | PTA_SSE | PTA_SSE2 | PTA_SSE3\n-\t\t\t\t\t | PTA_SSE4A\n-\t\t\t\t\t | PTA_CX16 | PTA_ABM)},\n-      {\"generic32\", PROCESSOR_GENERIC32, 0 /* flags are only used for -march switch.  */ },\n-      {\"generic64\", PROCESSOR_GENERIC64, PTA_64BIT /* flags are only used for -march switch.  */ },\n+      {\"i386\", PROCESSOR_I386, CPU_NONE, 0},\n+      {\"i486\", PROCESSOR_I486, CPU_NONE, 0},\n+      {\"i586\", PROCESSOR_PENTIUM, CPU_PENTIUM, 0},\n+      {\"pentium\", PROCESSOR_PENTIUM, CPU_PENTIUM, 0},\n+      {\"pentium-mmx\", PROCESSOR_PENTIUM, CPU_PENTIUM, PTA_MMX},\n+      {\"winchip-c6\", PROCESSOR_I486, CPU_NONE, PTA_MMX},\n+      {\"winchip2\", PROCESSOR_I486, CPU_NONE, PTA_MMX | PTA_3DNOW},\n+      {\"c3\", PROCESSOR_I486, CPU_NONE, PTA_MMX | PTA_3DNOW},\n+      {\"c3-2\", PROCESSOR_PENTIUMPRO, CPU_PENTIUMPRO, PTA_MMX | PTA_SSE},\n+      {\"i686\", PROCESSOR_PENTIUMPRO, CPU_PENTIUMPRO, 0},\n+      {\"pentiumpro\", PROCESSOR_PENTIUMPRO, CPU_PENTIUMPRO, 0},\n+      {\"pentium2\", PROCESSOR_PENTIUMPRO, CPU_PENTIUMPRO, PTA_MMX},\n+      {\"pentium3\", PROCESSOR_PENTIUMPRO, CPU_PENTIUMPRO,\n+\tPTA_MMX | PTA_SSE},\n+      {\"pentium3m\", PROCESSOR_PENTIUMPRO, CPU_PENTIUMPRO,\n+\tPTA_MMX | PTA_SSE},\n+      {\"pentium-m\", PROCESSOR_PENTIUMPRO, CPU_PENTIUMPRO,\n+\tPTA_MMX | PTA_SSE | PTA_SSE2},\n+      {\"pentium4\", PROCESSOR_PENTIUM4, CPU_NONE,\n+\tPTA_MMX |PTA_SSE | PTA_SSE2},\n+      {\"pentium4m\", PROCESSOR_PENTIUM4, CPU_NONE,\n+\tPTA_MMX | PTA_SSE | PTA_SSE2},\n+      {\"prescott\", PROCESSOR_NOCONA, CPU_NONE,\n+\tPTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3},\n+      {\"nocona\", PROCESSOR_NOCONA, CPU_NONE,\n+\tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n+\t| PTA_CX16 | PTA_NO_SAHF},\n+      {\"core2\", PROCESSOR_CORE2, CPU_CORE2,\n+\tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n+\t| PTA_SSSE3 | PTA_CX16},\n+      {\"geode\", PROCESSOR_GEODE, CPU_GEODE,\n+\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A |PTA_PREFETCH_SSE},\n+      {\"k6\", PROCESSOR_K6, CPU_K6, PTA_MMX},\n+      {\"k6-2\", PROCESSOR_K6, CPU_K6, PTA_MMX | PTA_3DNOW},\n+      {\"k6-3\", PROCESSOR_K6, CPU_K6, PTA_MMX | PTA_3DNOW},\n+      {\"athlon\", PROCESSOR_ATHLON, CPU_ATHLON,\n+\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_PREFETCH_SSE},\n+      {\"athlon-tbird\", PROCESSOR_ATHLON, CPU_ATHLON,\n+\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_PREFETCH_SSE},\n+      {\"athlon-4\", PROCESSOR_ATHLON, CPU_ATHLON,\n+\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE},\n+      {\"athlon-xp\", PROCESSOR_ATHLON, CPU_ATHLON,\n+\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE},\n+      {\"athlon-mp\", PROCESSOR_ATHLON, CPU_ATHLON,\n+\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE},\n+      {\"x86-64\", PROCESSOR_K8, CPU_K8,\n+\tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_NO_SAHF},\n+      {\"k8\", PROCESSOR_K8, CPU_K8,\n+\tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n+\t| PTA_SSE2 | PTA_NO_SAHF},\n+      {\"k8-sse3\", PROCESSOR_K8, CPU_K8,\n+\tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n+\t| PTA_SSE2 | PTA_SSE3 | PTA_NO_SAHF},\n+      {\"opteron\", PROCESSOR_K8, CPU_K8,\n+\tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n+\t| PTA_SSE2 | PTA_NO_SAHF},\n+      {\"opteron-sse3\", PROCESSOR_K8, CPU_K8,\n+        PTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n+\t| PTA_SSE2 | PTA_SSE3 | PTA_NO_SAHF},\n+      {\"athlon64\", PROCESSOR_K8, CPU_K8,\n+\tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n+\t| PTA_SSE2 | PTA_NO_SAHF},\n+      {\"athlon64-sse3\", PROCESSOR_K8, CPU_K8,\n+\tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n+\t| PTA_SSE2 | PTA_SSE3 | PTA_NO_SAHF},\n+      {\"athlon-fx\", PROCESSOR_K8, CPU_K8,\n+\tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n+\t| PTA_SSE2 | PTA_NO_SAHF},\n+      {\"amdfam10\", PROCESSOR_AMDFAM10, CPU_AMDFAM10,\n+\tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n+\t| PTA_SSE2 | PTA_SSE3 | PTA_SSE4A | PTA_CX16 | PTA_ABM},\n+      {\"barcelona\", PROCESSOR_AMDFAM10, PROCESSOR_AMDFAM10,\n+\tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n+\t| PTA_SSE2 | PTA_SSE3 | PTA_SSE4A | PTA_CX16 | PTA_ABM},\n+      {\"generic32\", PROCESSOR_GENERIC32, CPU_PENTIUMPRO,\n+\t0 /* flags are only used for -march switch.  */ },\n+      {\"generic64\", PROCESSOR_GENERIC64, CPU_GENERIC64,\n+\tPTA_64BIT /* flags are only used for -march switch.  */ },\n     };\n \n   int const pta_size = ARRAY_SIZE (processor_alias_table);\n@@ -2763,6 +2762,7 @@ override_options (bool main_args_p)\n   for (i = 0; i < pta_size; i++)\n     if (! strcmp (ix86_arch_string, processor_alias_table[i].name))\n       {\n+\tix86_schedule = processor_alias_table[i].schedule;\n \tix86_arch = processor_alias_table[i].processor;\n \t/* Default cpu tuning to the architecture.  */\n \tix86_tune = ix86_arch;\n@@ -2845,6 +2845,7 @@ override_options (bool main_args_p)\n   for (i = 0; i < pta_size; i++)\n     if (! strcmp (ix86_tune_string, processor_alias_table[i].name))\n       {\n+\tix86_schedule = processor_alias_table[i].schedule;\n \tix86_tune = processor_alias_table[i].processor;\n \tif (TARGET_64BIT && !(processor_alias_table[i].flags & PTA_64BIT))\n \t  {\n@@ -2855,6 +2856,7 @@ override_options (bool main_args_p)\n \t\t  if (! strcmp (ix86_tune_string,\n \t\t\t\tprocessor_alias_table[i].name))\n \t\t    break;\n+\t\tix86_schedule = processor_alias_table[i].schedule;\n \t\tix86_tune = processor_alias_table[i].processor;\n \t      }\n \t    else\n@@ -3273,11 +3275,13 @@ static void\n ix86_function_specific_save (struct cl_target_option *ptr)\n {\n   gcc_assert (IN_RANGE (ix86_arch, 0, 255));\n+  gcc_assert (IN_RANGE (ix86_schedule, 0, 255));\n   gcc_assert (IN_RANGE (ix86_tune, 0, 255));\n   gcc_assert (IN_RANGE (ix86_fpmath, 0, 255));\n   gcc_assert (IN_RANGE (ix86_branch_cost, 0, 255));\n \n   ptr->arch = ix86_arch;\n+  ptr->schedule = ix86_schedule;\n   ptr->tune = ix86_tune;\n   ptr->fpmath = ix86_fpmath;\n   ptr->branch_cost = ix86_branch_cost;\n@@ -3298,6 +3302,7 @@ ix86_function_specific_restore (struct cl_target_option *ptr)\n   int i;\n \n   ix86_arch = ptr->arch;\n+  ix86_schedule = ptr->schedule;\n   ix86_tune = ptr->tune;\n   ix86_fpmath = ptr->fpmath;\n   ix86_branch_cost = ptr->branch_cost;"}, {"sha": "7c0440c9d0450eed020ee78f84faaa326485081b", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab91c5fd65676442fa888f6ab6820c92098ff40/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab91c5fd65676442fa888f6ab6820c92098ff40/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=7ab91c5fd65676442fa888f6ab6820c92098ff40", "patch": "@@ -296,11 +296,10 @@\n ;; \"reload_completed && TARGET_64BIT\".\n \n \f\n-;; Processor type.  This attribute must exactly match the processor_type\n-;; enumeration in i386.h.\n-(define_attr \"cpu\" \"i386,i486,pentium,pentiumpro,geode,k6,athlon,pentium4,k8,\n-                    nocona,core2,generic32,generic64,amdfam10\"\n-  (const (symbol_ref \"ix86_tune\")))\n+;; Processor type.\n+(define_attr \"cpu\" \"none,pentium,pentiumpro,geode,k6,athlon,k8,core2,\n+\t\t    generic64,amdfam10\"\n+  (const (symbol_ref \"ix86_schedule\")))\n \n ;; A basic instruction type.  Refinements due to arguments to be\n ;; provided in other attributes."}, {"sha": "2881ea255adb230e0ff8bb7108133cf86bfa3395", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab91c5fd65676442fa888f6ab6820c92098ff40/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab91c5fd65676442fa888f6ab6820c92098ff40/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=7ab91c5fd65676442fa888f6ab6820c92098ff40", "patch": "@@ -31,6 +31,10 @@ unsigned char tune\n TargetSave\n unsigned char fpmath\n \n+;; CPU schedule model\n+TargetSave\n+unsigned char schedule\n+\n ;; branch cost\n TargetSave\n unsigned char branch_cost"}, {"sha": "81c0746ea1e353179106d28f93cb03dad6228e06", "filename": "gcc/config/i386/ppro.md", "status": "modified", "additions": 85, "deletions": 85, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab91c5fd65676442fa888f6ab6820c92098ff40/gcc%2Fconfig%2Fi386%2Fppro.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab91c5fd65676442fa888f6ab6820c92098ff40/gcc%2Fconfig%2Fi386%2Fppro.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fppro.md?ref=7ab91c5fd65676442fa888f6ab6820c92098ff40", "patch": "@@ -135,46 +135,46 @@\n ;; on decoder 0, and say that it takes a little while before the result\n ;; is available.\n (define_insn_reservation \"ppro_complex_insn\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (eq_attr \"type\" \"other,multi,call,callv,str\"))\n \t\t\t \"decoder0\")\n \n ;; imov with memory operands does not use the integer units.\n (define_insn_reservation \"ppro_imov\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"imov\")))\n \t\t\t \"decodern,(p0|p1)\")\n \n (define_insn_reservation \"ppro_imov_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (eq_attr \"type\" \"imov\")))\n \t\t\t \"decodern,p2\")\n \n (define_insn_reservation \"ppro_imov_store\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"store\")\n \t\t\t\t   (eq_attr \"type\" \"imov\")))\n \t\t\t \"decoder0,p4+p3\")\n \n ;; imovx always decodes to one uop, and also doesn't use the integer\n ;; units if it has memory operands.\n (define_insn_reservation \"ppro_imovx\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"imovx\")))\n \t\t\t \"decodern,(p0|p1)\")\n \n (define_insn_reservation \"ppro_imovx_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (eq_attr \"type\" \"imovx\")))\n \t\t\t \"decodern,p2\")\n \n ;; lea executes on port 0 with latency one and throughput 1.\n (define_insn_reservation \"ppro_lea\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"lea\")))\n \t\t\t \"decodern,p0\")\n@@ -183,13 +183,13 @@\n ;; The load and store units need to be reserved when memory operands\n ;; are involved.\n (define_insn_reservation \"ppro_shift_rotate\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"ishift,ishift1,rotate,rotate1\")))\n \t\t\t \"decodern,p0\")\n \n (define_insn_reservation \"ppro_shift_rotate_mem\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"!none\")\n \t\t\t\t   (eq_attr \"type\" \"ishift,ishift1,rotate,rotate1\")))\n \t\t\t \"decoder0,p2+p0,p4+p3\")\n@@ -213,32 +213,32 @@\n ;; results because we can assume these instructions can decode on all\n ;; decoders.\n (define_insn_reservation \"ppro_branch\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"ibr\")))\n \t\t\t \"decodern,p1\")\n \n ;; ??? Indirect branches probably have worse latency than this.\n (define_insn_reservation \"ppro_indirect_branch\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"!none\")\n \t\t\t\t   (eq_attr \"type\" \"ibr\")))\n \t\t\t \"decoder0,p2+p1\")\n \n (define_insn_reservation \"ppro_leave\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (eq_attr \"type\" \"leave\"))\n \t\t\t \"decoder0,p2+(p0|p1),(p0|p1)\")\n \n ;; imul has throughput one, but latency 4, and can only execute on port 0.\n (define_insn_reservation \"ppro_imul\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"imul\")))\n \t\t\t \"decodern,p0\")\n \n (define_insn_reservation \"ppro_imul_mem\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"!none\")\n \t\t\t\t   (eq_attr \"type\" \"imul\")))\n \t\t\t \"decoder0,p2+p0\")\n@@ -247,42 +247,42 @@\n ;; QI, HI, and SI have issue latency 12, 21, and 37, respectively.\n ;; These issue latencies are modelled via the ppro_div automaton.\n (define_insn_reservation \"ppro_idiv_QI\" 19\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"QI\")\n \t\t\t\t\t(eq_attr \"type\" \"idiv\"))))\n \t\t\t \"decoder0,(p0+idiv)*2,(p0|p1)+idiv,idiv*9\")\n \n (define_insn_reservation \"ppro_idiv_QI_load\" 19\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"QI\")\n \t\t\t\t\t(eq_attr \"type\" \"idiv\"))))\n \t\t\t \"decoder0,p2+p0+idiv,p0+idiv,(p0|p1)+idiv,idiv*9\")\n \n (define_insn_reservation \"ppro_idiv_HI\" 23\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"HI\")\n \t\t\t\t\t(eq_attr \"type\" \"idiv\"))))\n \t\t\t \"decoder0,(p0+idiv)*3,(p0|p1)+idiv,idiv*17\")\n \n (define_insn_reservation \"ppro_idiv_HI_load\" 23\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"HI\")\n \t\t\t\t\t(eq_attr \"type\" \"idiv\"))))\n \t\t\t \"decoder0,p2+p0+idiv,p0+idiv,(p0|p1)+idiv,idiv*18\")\n \n (define_insn_reservation \"ppro_idiv_SI\" 39\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SI\")\n \t\t\t\t\t(eq_attr \"type\" \"idiv\"))))\n \t\t\t \"decoder0,(p0+idiv)*3,(p0|p1)+idiv,idiv*33\")\n \n (define_insn_reservation \"ppro_idiv_SI_load\" 39\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SI\")\n \t\t\t\t\t(eq_attr \"type\" \"idiv\"))))\n@@ -293,85 +293,85 @@\n ;;     has throughput \"1/cycle (align with FADD)\".  What do they\n ;;     mean and how can we model that?\n (define_insn_reservation \"ppro_fop\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none,unknown\")\n \t\t\t\t   (eq_attr \"type\" \"fop\")))\n \t\t\t \"decodern,p0\")\n \n (define_insn_reservation \"ppro_fop_load\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (eq_attr \"type\" \"fop\")))\n \t\t\t \"decoder0,p2+p0,p0\")\n \n (define_insn_reservation \"ppro_fop_store\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"store\")\n \t\t\t\t   (eq_attr \"type\" \"fop\")))\n \t\t\t \"decoder0,p0,p0,p0+p4+p3\")\n \n (define_insn_reservation \"ppro_fop_both\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"both\")\n \t\t\t\t   (eq_attr \"type\" \"fop\")))\n \t\t\t \"decoder0,p2+p0,p0+p4+p3\")\n \n (define_insn_reservation \"ppro_fsgn\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (eq_attr \"type\" \"fsgn\"))\n \t\t\t \"decodern,p0\")\n \n (define_insn_reservation \"ppro_fistp\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (eq_attr \"type\" \"fistp\"))\n \t\t\t \"decoder0,p0*2,p4+p3\")\n \n (define_insn_reservation \"ppro_fcmov\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (eq_attr \"type\" \"fcmov\"))\n \t\t\t \"decoder0,p0*2\")\n \n (define_insn_reservation \"ppro_fcmp\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"fcmp\")))\n \t\t\t \"decodern,p0\")\n \n (define_insn_reservation \"ppro_fcmp_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (eq_attr \"type\" \"fcmp\")))\n \t\t\t \"decoder0,p2+p0\")\n \n (define_insn_reservation \"ppro_fmov\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"fmov\")))\n \t\t\t \"decodern,p0\")\n \n (define_insn_reservation \"ppro_fmov_load\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"!XF\")\n \t\t\t\t\t(eq_attr \"type\" \"fmov\"))))\n \t\t\t \"decodern,p2\")\n \n (define_insn_reservation \"ppro_fmov_XF_load\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"XF\")\n \t\t\t\t\t(eq_attr \"type\" \"fmov\"))))\n \t\t\t \"decoder0,(p2+p0)*2\")\n \n (define_insn_reservation \"ppro_fmov_store\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"store\")\n \t\t\t\t   (and (eq_attr \"mode\" \"!XF\")\n \t\t\t\t\t(eq_attr \"type\" \"fmov\"))))\n \t\t\t \"decodern,p0\")\n \n (define_insn_reservation \"ppro_fmov_XF_store\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"store\")\n \t\t\t\t   (and (eq_attr \"mode\" \"XF\")\n \t\t\t\t\t(eq_attr \"type\" \"fmov\"))))\n@@ -380,13 +380,13 @@\n ;; fmul executes on port 0 with latency 5.  It has issue latency 2,\n ;; but we don't model this.\n (define_insn_reservation \"ppro_fmul\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"fmul\")))\n \t\t\t \"decoder0,p0*2\")\n \n (define_insn_reservation \"ppro_fmul_load\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (eq_attr \"type\" \"fmul\")))\n \t\t\t \"decoder0,p2+p0,p0\")\n@@ -397,42 +397,42 @@\n ;; that.  Throughput is equal to latency - 1, which we model using the\n ;; ppro_div automaton.\n (define_insn_reservation \"ppro_fdiv_SF\" 18\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"fdiv,fpspc\"))))\n \t\t\t \"decodern,p0+fdiv,fdiv*16\")\n \n (define_insn_reservation \"ppro_fdiv_SF_load\" 19\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"fdiv,fpspc\"))))\n \t\t\t \"decoder0,p2+p0+fdiv,fdiv*16\")\n \n (define_insn_reservation \"ppro_fdiv_DF\" 32\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"DF\")\n \t\t\t\t\t(eq_attr \"type\" \"fdiv,fpspc\"))))\n \t\t\t \"decodern,p0+fdiv,fdiv*30\")\n \n (define_insn_reservation \"ppro_fdiv_DF_load\" 33\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"DF\")\n \t\t\t\t\t(eq_attr \"type\" \"fdiv,fpspc\"))))\n \t\t\t \"decoder0,p2+p0+fdiv,fdiv*30\")\n \n (define_insn_reservation \"ppro_fdiv_XF\" 38\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"XF\")\n \t\t\t\t\t(eq_attr \"type\" \"fdiv,fpspc\"))))\n \t\t\t \"decodern,p0+fdiv,fdiv*36\")\n \n (define_insn_reservation \"ppro_fdiv_XF_load\" 39\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"XF\")\n \t\t\t\t\t(eq_attr \"type\" \"fdiv,fpspc\"))))\n@@ -450,39 +450,39 @@\n ;; so they behave as \"simple\" instructions that need no special modelling.\n ;; We only have to model mmxshft and mmxmul.\n (define_insn_reservation \"ppro_mmx_shft\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"mmxshft\")))\n \t\t\t \"decodern,p1\")\n \n (define_insn_reservation \"ppro_mmx_shft_load\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"mmxshft\")))\n \t\t\t \"decoder0,p2+p1\")\n \n (define_insn_reservation \"ppro_mmx_mul\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"mmxmul\")))\n \t\t\t \"decodern,p0\")\n \n (define_insn_reservation \"ppro_mmx_mul_load\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (eq_attr \"type\" \"mmxmul\")))\n \t\t\t \"decoder0,p2+p0\")\n \n (define_insn_reservation \"ppro_sse_mmxcvt\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"mode\" \"DI\")\n \t\t\t\t   (eq_attr \"type\" \"mmxcvt\")))\n \t\t\t \"decodern,p1\")\n \n ;; FIXME: These are Pentium III only, but we cannot tell here if\n ;; we're generating code for PentiumPro/Pentium II or Pentium III\n ;; (define_insn_reservation \"ppro_sse_mmxshft\" 2\n-;;\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+;;\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n ;;\t\t\t      (and (eq_attr \"mode\" \"DI\")\n ;;\t\t\t\t   (eq_attr \"type\" \"mmxshft\")))\n ;;\t\t\t \"decodern,p0\")\n@@ -493,229 +493,229 @@\n \n ;; The sfence instruction.\n (define_insn_reservation \"ppro_sse_sfence\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"unknown\")\n \t\t\t\t   (eq_attr \"type\" \"sse\")))\n \t\t\t \"decoder0,p4+p3\")\n \n ;; FIXME: This reservation is all wrong when we're scheduling sqrtss.\n (define_insn_reservation \"ppro_sse_SF\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t   (eq_attr \"type\" \"sse\")))\n \t\t\t \"decodern,p0\")\n \n (define_insn_reservation \"ppro_sse_add_SF\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"sseadd\"))))\n \t\t\t \"decodern,p1\")\n \n (define_insn_reservation \"ppro_sse_add_SF_load\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"sseadd\"))))\n \t\t\t \"decoder0,p2+p1\")\n \n (define_insn_reservation \"ppro_sse_cmp_SF\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssecmp\"))))\n \t\t\t \"decoder0,p1\")\n \n (define_insn_reservation \"ppro_sse_cmp_SF_load\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssecmp\"))))\n \t\t\t \"decoder0,p2+p1\")\n \n (define_insn_reservation \"ppro_sse_comi_SF\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssecomi\"))))\n \t\t\t \"decodern,p0\")\n \n (define_insn_reservation \"ppro_sse_comi_SF_load\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssecomi\"))))\n \t\t\t \"decoder0,p2+p0\")\n \n (define_insn_reservation \"ppro_sse_mul_SF\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssemul\"))))\n \t\t\t\"decodern,p0\")\n \n (define_insn_reservation \"ppro_sse_mul_SF_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssemul\"))))\n \t\t\t\"decoder0,p2+p0\")\n \n ;; FIXME: ssediv doesn't close p0 for 17 cycles, surely???\n (define_insn_reservation \"ppro_sse_div_SF\" 18\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssediv\"))))\n \t\t\t \"decoder0,p0*17\")\n \n (define_insn_reservation \"ppro_sse_div_SF_load\" 18\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssediv\"))))\n \t\t\t \"decoder0,(p2+p0),p0*16\")\n \n (define_insn_reservation \"ppro_sse_icvt_SF\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t   (eq_attr \"type\" \"sseicvt\")))\n \t\t\t \"decoder0,(p2+p1)*2\")\n \n (define_insn_reservation \"ppro_sse_icvt_SI\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"mode\" \"SI\")\n \t\t\t\t   (eq_attr \"type\" \"sseicvt\")))\n \t\t\t \"decoder0,(p2+p1)\")\n \n (define_insn_reservation \"ppro_sse_mov_SF\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssemov\"))))\n \t\t\t \"decoder0,(p0|p1)\")\n \n (define_insn_reservation \"ppro_sse_mov_SF_load\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssemov\"))))\n \t\t\t \"decoder0,p2+(p0|p1)\")\n \n (define_insn_reservation \"ppro_sse_mov_SF_store\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"store\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssemov\"))))\n \t\t\t \"decoder0,p4+p3\")\n \n (define_insn_reservation \"ppro_sse_V4SF\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t   (eq_attr \"type\" \"sse\")))\n \t\t\t \"decoder0,p1*2\")\n \n (define_insn_reservation \"ppro_sse_add_V4SF\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"sseadd\"))))\n \t\t\t \"decoder0,p1*2\")\n \n (define_insn_reservation \"ppro_sse_add_V4SF_load\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"sseadd\"))))\n \t\t\t \"decoder0,(p2+p1)*2\")\n \n (define_insn_reservation \"ppro_sse_cmp_V4SF\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssecmp\"))))\n \t\t\t \"decoder0,p1*2\")\n \n (define_insn_reservation \"ppro_sse_cmp_V4SF_load\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssecmp\"))))\n \t\t\t \"decoder0,(p2+p1)*2\")\n \n (define_insn_reservation \"ppro_sse_cvt_V4SF\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none,unknown\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssecvt\"))))\n \t\t\t \"decoder0,p1*2\")\n \n (define_insn_reservation \"ppro_sse_cvt_V4SF_other\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"!none,unknown\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssecmp\"))))\n \t\t\t \"decoder0,p1,p4+p3\")\n \n (define_insn_reservation \"ppro_sse_mul_V4SF\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssemul\"))))\n \t\t\t\"decoder0,p0*2\")\n \n (define_insn_reservation \"ppro_sse_mul_V4SF_load\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssemul\"))))\n \t\t\t\"decoder0,(p2+p0)*2\")\n \n ;; FIXME: p0 really closed this long???\n (define_insn_reservation \"ppro_sse_div_V4SF\" 48\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssediv\"))))\n \t\t\t \"decoder0,p0*34\")\n \n (define_insn_reservation \"ppro_sse_div_V4SF_load\" 48\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssediv\"))))\n \t\t\t \"decoder0,(p2+p0)*2,p0*32\")\n \n (define_insn_reservation \"ppro_sse_log_V4SF\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"sselog,sselog1\"))))\n \t\t\t \"decodern,p1\")\n \n (define_insn_reservation \"ppro_sse_log_V4SF_load\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"sselog,sselog1\"))))\n \t\t\t \"decoder0,(p2+p1)\")\n \n (define_insn_reservation \"ppro_sse_mov_V4SF\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssemov\"))))\n \t\t\t \"decoder0,(p0|p1)*2\")\n \n (define_insn_reservation \"ppro_sse_mov_V4SF_load\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssemov\"))))\n \t\t\t \"decoder0,p2*2\")\n \n (define_insn_reservation \"ppro_sse_mov_V4SF_store\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"store\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF\")\n \t\t\t\t\t(eq_attr \"type\" \"ssemov\"))))\n@@ -729,29 +729,29 @@\n ;; reg-reg instructions produce 1 uop so they can be decoded on any of\n ;; the three decoders.\n (define_insn_reservation \"ppro_insn\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none,unknown\")\n \t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,icmov,push,pop,fxch,sseiadd,sseishft,sseimul,mmx,mmxadd,mmxcmp\")))\n \t\t\t \"decodern,(p0|p1)\")\n \n ;; read-modify and register-memory instructions have 2 or three uops,\n ;; so they have to be decoded on decoder0.\n (define_insn_reservation \"ppro_insn_load\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n \t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,icmov,push,pop,fxch,sseiadd,sseishft,sseimul,mmx,mmxadd,mmxcmp\")))\n \t\t\t \"decoder0,p2+(p0|p1)\")\n \n (define_insn_reservation \"ppro_insn_store\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"store\")\n \t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,icmov,push,pop,fxch,sseiadd,sseishft,sseimul,mmx,mmxadd,mmxcmp\")))\n \t\t\t \"decoder0,(p0|p1),p4+p3\")\n \n ;; read-modify-store instructions produce 4 uops so they have to be\n ;; decoded on decoder0 as well.\n (define_insn_reservation \"ppro_insn_both\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"pentiumpro,generic32\")\n+\t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"both\")\n \t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,icmov,push,pop,fxch,sseiadd,sseishft,sseimul,mmx,mmxadd,mmxcmp\")))\n \t\t\t \"decoder0,p2+(p0|p1),p4+p3\")"}]}