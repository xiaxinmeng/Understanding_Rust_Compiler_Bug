{"sha": "5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc3M2E1MGY0MTBkNTg1ZmQyNDhjZThkMTJlNWE4ZWYzM2MxMGVkMQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2008-10-16T11:57:26Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2008-10-16T11:57:26Z"}, "message": "re PR c++/35483 (GCC on AIX doesn't support dollar in symbols name.)\n\ngcc/\n        PR target/35483\n        * Makefile.in (coverage.o): Depend on $(TM_P_H).\n        * coverage.c: Include tm_p.h.\n        * config/rs6000/x-aix (jc1): Override LDFLAGS.\n        * config/rs6000/xcoff.h (ASM_GENERATE_INTERNAL_LABEL): Strip\n        dollar signs from PREFIX.\n        * config/rs6000/rs6000.c (output_toc): Use RS6000_OUTPUT_BASENAME\n        instead of manual strip_name_encoding.\n\njava/\n        PR target/35483\n        * Make-lang.in (class.o): Depend on $(TM_P_H).\n        (expr.o): Same.\n        * class.c: Include tm_p.h.\n        * expr.c: Include tm_p.h.\n\nFrom-SVN: r141170", "tree": {"sha": "6681f468870449e9307fcf2ec9d0d70973345fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6681f468870449e9307fcf2ec9d0d70973345fd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/comments", "author": null, "committer": null, "parents": [{"sha": "2a7ee2f9893f7eeb1c330c4e042e3c7d56c6edaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7ee2f9893f7eeb1c330c4e042e3c7d56c6edaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a7ee2f9893f7eeb1c330c4e042e3c7d56c6edaf"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "13d987a712c6c42ef1d23e5c363974bec7b17b56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "patch": "@@ -1,3 +1,14 @@\n+2008-10-16  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR target/35483\n+\t* Makefile.in (coverage.o): Depend on $(TM_P_H).\n+\t* coverage.c: Include tm_p.h.\n+\t* config/rs6000/x-aix (jc1): Override LDFLAGS.\n+\t* config/rs6000/xcoff.h (ASM_GENERATE_INTERNAL_LABEL): Strip\n+\tdollar signs from PREFIX.\n+\t* config/rs6000/rs6000.c (output_toc): Use RS6000_OUTPUT_BASENAME\n+\tinstead of manual strip_name_encoding.\n+\n 2008-10-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/37418"}, {"sha": "e799d2666d2e245358f15c0c21a062b6b99584ad", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "patch": "@@ -2651,7 +2651,7 @@ ipa-struct-reorg.o: ipa-struct-reorg.c ipa-struct-reorg.h $(CONFIG_H) $(SYSTEM_H\n coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) \\\n    $(FUNCTION_H) $(TOPLEV_H) $(GGC_H) langhooks.h $(COVERAGE_H) gt-coverage.h \\\n-   $(HASHTAB_H) tree-iterator.h $(CGRAPH_H) tree-pass.h gcov-io.c\n+   $(HASHTAB_H) tree-iterator.h $(CGRAPH_H) tree-pass.h gcov-io.c $(TM_P_H)\n cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) $(REAL_H) insn-config.h $(RECOG_H) \\\n    $(EMIT_RTL_H) $(TOPLEV_H) output.h $(FUNCTION_H) cselib.h $(GGC_H) $(TM_P_H) \\"}, {"sha": "6df7aa797320e5839eda495a58e2ddfdaf64d2f1", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "patch": "@@ -18097,7 +18097,6 @@ output_toc (FILE *file, rtx x, int labelno, enum machine_mode mode)\n {\n   char buf[256];\n   const char *name = buf;\n-  const char *real_name;\n   rtx base = x;\n   HOST_WIDE_INT offset = 0;\n \n@@ -18371,12 +18370,12 @@ output_toc (FILE *file, rtx x, int labelno, enum machine_mode mode)\n       gcc_unreachable ();\n     }\n \n-  real_name = (*targetm.strip_name_encoding) (name);\n   if (TARGET_MINIMAL_TOC)\n     fputs (TARGET_32BIT ? \"\\t.long \" : DOUBLE_INT_ASM_OP, file);\n   else\n     {\n-      fprintf (file, \"\\t.tc %s\", real_name);\n+      fputs (\"\\t.tc \", file);\n+      RS6000_OUTPUT_BASENAME (file, name);\n \n       if (offset < 0)\n \tfprintf (file, \".N\" HOST_WIDE_INT_PRINT_UNSIGNED, - offset);"}, {"sha": "11ccb932d4bf14254c05ee1cf1469a150d763c46", "filename": "gcc/config/rs6000/x-aix", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fconfig%2Frs6000%2Fx-aix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fconfig%2Frs6000%2Fx-aix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-aix?ref=5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "patch": "@@ -1,3 +1,6 @@\n # genautomata requires more than 256MB of data\n build/genautomata : override LDFLAGS += -Wl,-bmaxdata:0x20000000\n \n+# jc1 requires more than 256MB of data\n+jc1 : override LDFLAGS += -Wl,-bmaxdata:0x20000000\n+"}, {"sha": "c8193908a97ace75e11b1361867ff884f882acdb", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "patch": "@@ -257,7 +257,7 @@\n    This is suitable for output with `assemble_name'.  */\n \n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n-  sprintf (LABEL, \"*%s..%u\", (PREFIX), (unsigned) (NUM))\n+  sprintf (LABEL, \"*%s..%u\", rs6000_xcoff_strip_dollar (PREFIX), (unsigned) (NUM))\n \n /* This is how to output an assembler line to define N characters starting\n    at P to FILE.  */"}, {"sha": "b2ac87651d30f28fc0899aa58d5737da97a32620", "filename": "gcc/coverage.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "patch": "@@ -38,6 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"function.h\"\n #include \"toplev.h\"\n+#include \"tm_p.h\"\n #include \"ggc.h\"\n #include \"coverage.h\"\n #include \"langhooks.h\""}, {"sha": "40454a0f5dd7fc7ab5cc0c06ca3e912bc6b2407a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "patch": "@@ -1,3 +1,11 @@\n+2008-10-16  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR target/35483\n+\t* Make-lang.in (class.o): Depend on $(TM_P_H).\n+\t(expr.o): Same.\n+\t* class.c: Include tm_p.h.\n+\t* expr.c: Include tm_p.h.\n+\n 2008-10-14  Andrew Haley  <aph@redhat.com>\n \n \t* constants.c (build_constant_data_ref): Make sure we only build"}, {"sha": "2db3065f6298d0534673c6a5593009dd13d1e45a", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "patch": "@@ -256,7 +256,7 @@ java/builtins.o: java/builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   gt-java-builtins.h\n java/class.o: java/class.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(JAVA_TREE_H) $(RTL_H) java/jcf.h java/parse.h toplev.h output.h $(GGC_H) \\\n-  $(TARGET_H) $(FUNCTION_H) gt-java-class.h $(CGRAPH_H)\n+  $(TARGET_H) $(FUNCTION_H) gt-java-class.h $(CGRAPH_H) $(TM_P_H)\n java/constants.o: java/constants.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n   toplev.h $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) gt-java-constants.h\n java/decl.o: java/decl.c $(CONFIG_H) $(JAVA_TREE_H) $(RTL_H) java/jcf.h \\\n@@ -270,7 +270,7 @@ java/expr.o: java/expr.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h $(REAL_H) \\\n   $(RTL_H) $(EXPR_H) java/javaop.h java/java-opcodes.h except.h \\\n   java/java-except.h java/java-except.h java/parse.h toplev.h \\\n   $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) gt-java-expr.h $(TARGET_H) \\\n-  tree-iterator.h\n+  tree-iterator.h $(TM_P_H)\n java/jcf-depend.o: java/jcf-depend.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) java/jcf.h\n java/jcf-parse.o: java/jcf-parse.c $(CONFIG_H) $(JAVA_TREE_H) $(FLAGS_H) \\"}, {"sha": "edd16f0ad618b7569b6d3b764022b6c3e55e67e6", "filename": "gcc/java/class.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "patch": "@@ -38,6 +38,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"output.h\"\n #include \"parse.h\"\n #include \"function.h\"\n+#include \"tm_p.h\"\n #include \"ggc.h\"\n #include \"stdio.h\"\n #include \"target.h\""}, {"sha": "858bc937d93acc0e9622e2738d1d10b577607a8c", "filename": "gcc/java/expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773a50f410d585fd248ce8d12e5a8ef33c10ed1/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=5773a50f410d585fd248ce8d12e5a8ef33c10ed1", "patch": "@@ -41,6 +41,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"parse.h\"\n #include \"toplev.h\"\n #include \"except.h\"\n+#include \"tm_p.h\"\n #include \"ggc.h\"\n #include \"tree-iterator.h\"\n #include \"gimple.h\""}]}