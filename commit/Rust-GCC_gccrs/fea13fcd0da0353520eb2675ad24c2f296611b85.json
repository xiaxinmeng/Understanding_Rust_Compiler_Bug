{"sha": "fea13fcd0da0353520eb2675ad24c2f296611b85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVhMTNmY2QwZGEwMzUzNTIwZWIyNjc1YWQyNGMyZjI5NjYxMWI4NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-09-07T07:54:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-09-07T07:54:38Z"}, "message": "lto: Stream edge goto_locus [PR94235]\n\nThe following patch adds streaming of edge goto_locus (both LOCATION_LOCUS\nand LOCATION_BLOCK from it), the PR shows a testcase (inappropriate for\ngcc testsuite) where the lack of streaming of goto_locus results in worse\ndebug info.\nEarlier version of the patch (without the output_function changes) failed\nmiserably, because on the order mismatch - input_function would\nfirst input_cfg, then input_eh_regions and then input_bb (all of which now\nhave locations), while output_function used output_eh_regions, then output_bb\nand then output_cfg.  *_cfg went to a separate stream...\nNow, is there a reason why the order is different?\n\nIf the intent is that the cfg could be read separately from the rest of\nfunction or vice versa, alternatively we'd need to clear_line_info ();\nbefore output_eh_regions and before/after output_cfg to make them\nindependent.\n\n2020-09-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/94235\n\t* lto-streamer-out.c (output_cfg): Also stream goto_locus for edges.\n\tUse bp_pack_var_len_unsigned instead of streamer_write_uhwi to stream\n\te->dest->index and e->flags.\n\t(output_function): Call output_cfg before output_ssa_name, rather than\n\tafter streaming all bbs.\n\t* lto-streamer-in.c (input_cfg): Stream in goto_locus for edges.\n\tUse bp_unpack_var_len_unsigned instead of streamer_read_uhwi to stream\n\tin dest_index and edge_flags.", "tree": {"sha": "76631e7620318a1419c6cf51ae00db6664a23dc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76631e7620318a1419c6cf51ae00db6664a23dc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fea13fcd0da0353520eb2675ad24c2f296611b85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea13fcd0da0353520eb2675ad24c2f296611b85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fea13fcd0da0353520eb2675ad24c2f296611b85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea13fcd0da0353520eb2675ad24c2f296611b85/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "095d42feed09f880f835ed74d0aa7b1ad7abd03c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/095d42feed09f880f835ed74d0aa7b1ad7abd03c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/095d42feed09f880f835ed74d0aa7b1ad7abd03c"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "32289d8d71cc0ce99484ffc485302be66a26d1d7", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea13fcd0da0353520eb2675ad24c2f296611b85/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea13fcd0da0353520eb2675ad24c2f296611b85/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=fea13fcd0da0353520eb2675ad24c2f296611b85", "patch": "@@ -780,23 +780,19 @@ input_cfg (class lto_input_block *ib, class data_in *data_in,\n       /* Connect up the CFG.  */\n       for (i = 0; i < edge_count; i++)\n \t{\n-\t  unsigned int dest_index;\n-\t  unsigned int edge_flags;\n-\t  basic_block dest;\n-\t  profile_probability probability;\n-\t  edge e;\n-\n-\t  dest_index = streamer_read_uhwi (ib);\n-\t  probability = profile_probability::stream_in (ib);\n-\t  edge_flags = streamer_read_uhwi (ib);\n-\n-\t  dest = BASIC_BLOCK_FOR_FN (fn, dest_index);\n+\t  bitpack_d bp = streamer_read_bitpack (ib);\n+\t  unsigned int dest_index = bp_unpack_var_len_unsigned (&bp);\n+\t  unsigned int edge_flags = bp_unpack_var_len_unsigned (&bp);\n+\t  basic_block dest = BASIC_BLOCK_FOR_FN (fn, dest_index);\n \n \t  if (dest == NULL)\n \t    dest = make_new_block (fn, dest_index);\n \n-\t  e = make_edge (bb, dest, edge_flags);\n-\t  e->probability = probability;\n+\t  edge e = make_edge (bb, dest, edge_flags);\n+\t  data_in->location_cache.input_location_and_block (&e->goto_locus,\n+\t\t\t\t\t\t\t    &bp, ib, data_in);\n+\t  e->probability = profile_probability::stream_in (ib);\n+\n \t}\n \n       index = streamer_read_hwi (ib);"}, {"sha": "884ce988e5f309d4d6b0db4faa6168d2e221b1ff", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea13fcd0da0353520eb2675ad24c2f296611b85/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea13fcd0da0353520eb2675ad24c2f296611b85/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=fea13fcd0da0353520eb2675ad24c2f296611b85", "patch": "@@ -2100,9 +2100,11 @@ output_cfg (struct output_block *ob, struct function *fn)\n       streamer_write_uhwi (ob, EDGE_COUNT (bb->succs));\n       FOR_EACH_EDGE (e, ei, bb->succs)\n \t{\n-\t  streamer_write_uhwi (ob, e->dest->index);\n+\t  bitpack_d bp = bitpack_create (ob->main_stream);\n+\t  bp_pack_var_len_unsigned (&bp, e->dest->index);\n+\t  bp_pack_var_len_unsigned (&bp, e->flags);\n+\t  stream_output_location_and_block (ob, &bp, e->goto_locus);\n \t  e->probability.stream_out (ob);\n-\t  streamer_write_uhwi (ob, e->flags);\n \t}\n     }\n \n@@ -2418,6 +2420,8 @@ output_function (struct cgraph_node *node)\n       streamer_write_uhwi (ob, 1);\n       output_struct_function_base (ob, fn);\n \n+      output_cfg (ob, fn);\n+\n       /* Output all the SSA names used in the function.  */\n       output_ssa_names (ob, fn);\n \n@@ -2430,8 +2434,6 @@ output_function (struct cgraph_node *node)\n \n       /* The terminator for this function.  */\n       streamer_write_record_start (ob, LTO_null);\n-\n-      output_cfg (ob, fn);\n    }\n   else\n     streamer_write_uhwi (ob, 0);"}]}