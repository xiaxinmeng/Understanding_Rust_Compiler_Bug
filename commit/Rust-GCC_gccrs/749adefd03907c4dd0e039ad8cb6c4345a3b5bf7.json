{"sha": "749adefd03907c4dd0e039ad8cb6c4345a3b5bf7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ5YWRlZmQwMzkwN2M0ZGQwZTAzOWFkOGNiNmM0MzQ1YTNiNWJmNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-05-08T00:51:27Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-08T00:51:27Z"}, "message": "call.c (build_user_type_conversion_1): Handle second_conv properly for templates.\n\n\t* call.c (build_user_type_conversion_1): Handle second_conv\n\tproperly for templates.\n\nFrom-SVN: r19626", "tree": {"sha": "0015f6f7bffdad2f89fcd1afe8203b41c9644f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0015f6f7bffdad2f89fcd1afe8203b41c9644f67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/749adefd03907c4dd0e039ad8cb6c4345a3b5bf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/749adefd03907c4dd0e039ad8cb6c4345a3b5bf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/749adefd03907c4dd0e039ad8cb6c4345a3b5bf7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/749adefd03907c4dd0e039ad8cb6c4345a3b5bf7/comments", "author": null, "committer": null, "parents": [{"sha": "bbeb7b6556c304085c8e2b4b1a600e0805e76936", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbeb7b6556c304085c8e2b4b1a600e0805e76936", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbeb7b6556c304085c8e2b4b1a600e0805e76936"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "8c4b6ba8b3b5e6b5b31c79aff5eb235949067e5a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/749adefd03907c4dd0e039ad8cb6c4345a3b5bf7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/749adefd03907c4dd0e039ad8cb6c4345a3b5bf7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=749adefd03907c4dd0e039ad8cb6c4345a3b5bf7", "patch": "@@ -1,3 +1,8 @@\n+Fri May  8 00:43:50 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* call.c (build_user_type_conversion_1): Handle second_conv \n+\tproperly for templates.\n+\n Thu May  7 17:09:25 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n \n \t* method.c (build_decl_overload_real): Set TREE_USED flag to"}, {"sha": "c79fafc3a6c9f898ed339f8b70d2645c074c29df", "filename": "gcc/cp/call.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/749adefd03907c4dd0e039ad8cb6c4345a3b5bf7/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/749adefd03907c4dd0e039ad8cb6c4345a3b5bf7/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=749adefd03907c4dd0e039ad8cb6c4345a3b5bf7", "patch": "@@ -2087,19 +2087,16 @@ build_user_type_conversion_1 (totype, expr, flags)\n \tics = implicit_conversion\n \t  (totype, TREE_TYPE (TREE_TYPE (fn)), 0, convflags);\n       else\n-\t/* Here, the template conversion operator result must\n-\t   precisely match the TOTYPE.  (FIXME: Actually, we're\n-\t   supposed to do some simple conversions here; see\n-\t   [temp.deduct.conv].).  If the result of the conversion\n-\t   operator is not actually TOTYPE, then\n-\t   add_template_candidate will fail below.  */\n-\tics = implicit_conversion (totype, totype, 0, convflags);\n+\t/* We can't compute this yet.  */\n+\tics = error_mark_node;\n \n       if (TREE_CODE (totype) == REFERENCE_TYPE && ics && ICS_BAD_FLAG (ics))\n \t/* ignore the near match.  */;\n       else if (ics)\n \tfor (; fn; fn = DECL_CHAIN (fn))\n \t  {\n+\t    struct z_candidate *old_candidates = candidates;\n+\n \t    if (TREE_CODE (fn) == TEMPLATE_DECL)\n \t      {\n \t\ttemplates = scratch_tree_cons (NULL_TREE, fn, templates);\n@@ -2111,11 +2108,19 @@ build_user_type_conversion_1 (totype, expr, flags)\n \t      candidates = add_function_candidate (candidates, fn,\n \t\t\t\t\t\t   args, flags); \n \n-\t    if (candidates) \n+\t    if (candidates != old_candidates)\n \t      {\n+\t\tif (TREE_CODE (fn) == TEMPLATE_DECL)\n+\t\t  ics = implicit_conversion\n+\t\t    (totype, TREE_TYPE (TREE_TYPE (candidates->fn)),\n+\t\t     0, convflags);\n+\n \t\tcandidates->second_conv = ics;\n \t\tcandidates->basetype_path = TREE_PURPOSE (convs);\n-\t\tif (candidates->viable == 1 && ICS_BAD_FLAG (ics))\n+\n+\t\tif (ics == NULL_TREE)\n+\t\t  candidates->viable = 0;\n+\t\telse if (candidates->viable == 1 && ICS_BAD_FLAG (ics))\n \t\t  candidates->viable = -1;\n \t      }\n \t  }"}]}