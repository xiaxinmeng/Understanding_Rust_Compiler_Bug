{"sha": "2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFiNWMzZDU0NTdmMGQ0ODBjNjQyM2VlN2FjNTJjZTFmOTg1OTJjOQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-09-15T17:54:53Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-09-15T17:54:53Z"}, "message": "c++: default ctor that's also a list ctor [PR102050]\n\nIn grok_special_member_properties we need to set TYPE_HAS_COPY_CTOR,\nTYPE_HAS_DEFAULT_CONSTRUCTOR and TYPE_HAS_LIST_CTOR independently\nfrom each other because a constructor can be both a default and list\nconstructor (as in the first testcase), or both a default and copy\nconstructor (as in the second testcase).\n\n\tPR c++/102050\n\ngcc/cp/ChangeLog:\n\n\t* decl.c (grok_special_member_properties): Set\n\tTYPE_HAS_COPY_CTOR, TYPE_HAS_DEFAULT_CONSTRUCTOR\n\tand TYPE_HAS_LIST_CTOR independently from each other.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp0x/initlist125.C: New test.\n\t* g++.dg/cpp0x/initlist126.C: New test.", "tree": {"sha": "d2875d738cd3ed3fa5dc448e369ebecb23a23103", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2875d738cd3ed3fa5dc448e369ebecb23a23103"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9/comments", "author": null, "committer": null, "parents": [{"sha": "2709337c1181510e3d4f74e86bf75aa83f7b18aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2709337c1181510e3d4f74e86bf75aa83f7b18aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2709337c1181510e3d4f74e86bf75aa83f7b18aa"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "c0f1496636fdd884b7aa12c3b52aa749e27f4af2", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9", "patch": "@@ -14847,9 +14847,11 @@ grok_special_member_properties (tree decl)\n \t  if (ctor > 1)\n \t    TYPE_HAS_CONST_COPY_CTOR (class_type) = 1;\n \t}\n-      else if (sufficient_parms_p (FUNCTION_FIRST_USER_PARMTYPE (decl)))\n+\n+      if (sufficient_parms_p (FUNCTION_FIRST_USER_PARMTYPE (decl)))\n \tTYPE_HAS_DEFAULT_CONSTRUCTOR (class_type) = 1;\n-      else if (is_list_ctor (decl))\n+\n+      if (is_list_ctor (decl))\n \tTYPE_HAS_LIST_CTOR (class_type) = 1;\n \n       if (DECL_DECLARED_CONSTEXPR_P (decl)"}, {"sha": "49dee1c0ccd25718f57f97d85dc24ea625c1eae9", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist125.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist125.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist125.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist125.C?ref=2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/102050\n+// { dg-do compile { target c++11 } }\n+\n+#include <initializer_list>\n+\n+struct A {\n+  A(std::initializer_list<int> = {});\n+};\n+\n+A x{0};\n+A y{1, 2, 3};\n+A z;"}, {"sha": "0a8fb998be68d16e596a7502eb8fc03f5f5e0b68", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist126.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist126.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist126.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist126.C?ref=2ab5c3d5457f0d480c6423ee7ac52ce1f98592c9", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/102050\n+// { dg-do compile { target c++11 } }\n+\n+#include <initializer_list>\n+\n+extern struct A a;\n+\n+struct A {\n+  A(const A& = a);\n+  A(std::initializer_list<int>) = delete;\n+};\n+\n+void f(A);\n+\n+int main() {\n+  f({}); // { dg-bogus \"deleted\" }\n+}"}]}