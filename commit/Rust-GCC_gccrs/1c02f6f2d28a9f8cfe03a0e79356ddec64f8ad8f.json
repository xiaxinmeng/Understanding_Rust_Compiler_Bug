{"sha": "1c02f6f2d28a9f8cfe03a0e79356ddec64f8ad8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMwMmY2ZjJkMjhhOWY4Y2ZlMDNhMGU3OTM1NmRkZWM2NGY4YWQ4Zg==", "commit": {"author": {"name": "Wolfgang Bangerth", "email": "bangerth@dealii.org", "date": "2004-02-03T23:45:52Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-02-03T23:45:52Z"}, "message": "Commit for  Wolfgang Bangerth:\n\n\t* doc/invoke.texi (x86 options): Fix spelling/wording\n\nFrom-SVN: r77200", "tree": {"sha": "d2480820876d903d34ff994ec5aad805b6c1e9eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2480820876d903d34ff994ec5aad805b6c1e9eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c02f6f2d28a9f8cfe03a0e79356ddec64f8ad8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c02f6f2d28a9f8cfe03a0e79356ddec64f8ad8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c02f6f2d28a9f8cfe03a0e79356ddec64f8ad8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c02f6f2d28a9f8cfe03a0e79356ddec64f8ad8f/comments", "author": null, "committer": null, "parents": [{"sha": "e262dfbcf3ef4dba94c744bcbc8eb6c970d24cdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e262dfbcf3ef4dba94c744bcbc8eb6c970d24cdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e262dfbcf3ef4dba94c744bcbc8eb6c970d24cdc"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "28688c942cdb2ba8ac90e7fd58b189a028998759", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c02f6f2d28a9f8cfe03a0e79356ddec64f8ad8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c02f6f2d28a9f8cfe03a0e79356ddec64f8ad8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c02f6f2d28a9f8cfe03a0e79356ddec64f8ad8f", "patch": "@@ -1,3 +1,7 @@\n+2004-02-03  Wolfgang Bangerth  <bangerth@dealii.org> \n+\n+\t* doc/invoke.texi (x86 options): Fix spelling/wording.\n+\n 2004-02-03  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/iris5.h (ASM_OUTPUT_ASCII): Use mips_output_ascii to"}, {"sha": "5423904899772a643a1700ac6b8177e5c461f6b8", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c02f6f2d28a9f8cfe03a0e79356ddec64f8ad8f/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c02f6f2d28a9f8cfe03a0e79356ddec64f8ad8f/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1c02f6f2d28a9f8cfe03a0e79356ddec64f8ad8f", "patch": "@@ -8175,7 +8175,7 @@ These synonyms are deprecated.\n \n @item -mfpmath=@var{unit}\n @opindex march\n-generate floating point arithmetics for selected unit @var{unit}.  the choices\n+Generate floating point arithmetics for selected unit @var{unit}.  The choices\n for @var{unit} are:\n \n @table @samp\n@@ -8201,11 +8201,11 @@ For i387 you need to use @option{-march=@var{cpu-type}}, @option{-msse} or\n @option{-msse2} switches to enable SSE extensions and make this option\n effective.  For x86-64 compiler, these extensions are enabled by default.\n \n-The resulting code should be considerably faster in majority of cases and avoid\n+The resulting code should be considerably faster in the majority of cases and avoid\n the numerical instability problems of 387 code, but may break some existing\n code that expects temporaries to be 80bit.\n \n-This is the default choice for x86-64 compiler.\n+This is the default choice for the x86-64 compiler.\n \n @item pni\n Use all SSE extensions enabled by @option{-msse2} as well as the new\n@@ -8218,7 +8218,7 @@ enables 2 builtin functions, @code{__builtin_ia32_monitor} and\n Attempt to utilize both instruction sets at once.  This effectively double the\n amount of available registers and on chips with separate execution units for\n 387 and SSE the execution resources too.  Use this option with care, as it is\n-still experimental, because gcc register allocator does not model separate\n+still experimental, because the gcc register allocator does not model separate\n functional units well resulting in instable performance.\n @end table\n \n@@ -8309,10 +8309,10 @@ Notice that neither of these options enable any extra precision over the x87\n standard of 80 bits for a @code{long double}.\n \n @strong{Warning:} if you override the default value for your target ABI, the\n-structures and arrays containing @code{long double} will change their size as\n-well as function calling convention for function taking @code{long double}\n-will be modified.  Hence they will not be binary compatible with arrays or\n-structures in code compiled without that switch.\n+structures and arrays containing @code{long double} variables will change\n+their size as well as function calling convention for function taking\n+@code{long double} will be modified.  Hence they will not be binary\n+compatible with arrays or structures in code compiled without that switch.\n \n \n @item -msvr3-shlib"}]}