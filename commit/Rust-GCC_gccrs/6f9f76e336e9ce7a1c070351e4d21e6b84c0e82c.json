{"sha": "6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY5Zjc2ZTMzNmU5Y2U3YTFjMDcwMzUxZTRkMjFlNmI4NGMwZTgyYw==", "commit": {"author": {"name": "Simon Martin", "email": "simartin@users.sourceforge.net", "date": "2007-01-11T19:46:03Z"}, "committer": {"name": "Simon Martin", "email": "simartin@gcc.gnu.org", "date": "2007-01-11T19:46:03Z"}, "message": "re PR c++/29573 (ICE after parse error in template argument)\n\n2007-01-11  Simon Martin  <simartin@users.sourceforge.net>\n\n\tPR c++/29573\n\t* tree.c (cp_tree_equal): Properly handle MODOP_EXPR trees.\n\nFrom-SVN: r120683", "tree": {"sha": "0f3c51fe1f2b8c17b0a809798e495fd93772cedd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f3c51fe1f2b8c17b0a809798e495fd93772cedd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c/comments", "author": {"login": "simartin", "id": 935202, "node_id": "MDQ6VXNlcjkzNTIwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/935202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simartin", "html_url": "https://github.com/simartin", "followers_url": "https://api.github.com/users/simartin/followers", "following_url": "https://api.github.com/users/simartin/following{/other_user}", "gists_url": "https://api.github.com/users/simartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/simartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simartin/subscriptions", "organizations_url": "https://api.github.com/users/simartin/orgs", "repos_url": "https://api.github.com/users/simartin/repos", "events_url": "https://api.github.com/users/simartin/events{/privacy}", "received_events_url": "https://api.github.com/users/simartin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad4fe825e2765e2630c6d3c2505900c159e2e446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4fe825e2765e2630c6d3c2505900c159e2e446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad4fe825e2765e2630c6d3c2505900c159e2e446"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "12a3cc6268061f4250ce2639c19b77ac353b5db5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c", "patch": "@@ -1,3 +1,8 @@\n+2007-01-11  Simon Martin  <simartin@users.sourceforge.net>\n+\n+\tPR c++/29573\n+\t* tree.c (cp_tree_equal): Properly handle MODOP_EXPR trees.\n+\n 2007-01-10  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/28999"}, {"sha": "742e09014e3a256d6b53ac2422d3e74ce27129a0", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c", "patch": "@@ -1709,6 +1709,21 @@ cp_tree_equal (tree t1, tree t2)\n \t  return cp_tree_equal (o1, o2);\n       }\n \n+    case MODOP_EXPR:\n+      {\n+\ttree t1_op1, t2_op1;\n+\n+\tif (!cp_tree_equal (TREE_OPERAND (t1, 0), TREE_OPERAND (t2, 0)))\n+\t  return false;\n+\n+\tt1_op1 = TREE_OPERAND (t1, 1);\n+\tt2_op1 = TREE_OPERAND (t2, 1);\n+\tif (TREE_CODE (t1_op1) != TREE_CODE (t2_op1))\n+\t  return false;\n+\n+\treturn cp_tree_equal (TREE_OPERAND (t1, 2), TREE_OPERAND (t2, 2));\n+      }\n+\n     case PTRMEM_CST:\n       /* Two pointer-to-members are the same if they point to the same\n \t field or function in the same class.  */"}, {"sha": "7b9b3757380cc364ae860880dc2c066f20a2f8b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c", "patch": "@@ -1,3 +1,8 @@\n+2007-01-11  Simon Martin  <simartin@users.sourceforge.net>\n+\n+\tPR c++/29573\n+\t* g++.dg/template/sizeof-template-argument.C: New test.\n+\n 2007-01-11  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/tree-ssa/tailrecursion-4.c: Update dump file."}, {"sha": "f7472c3c1a1c15c39936a5168d6991e195c600f7", "filename": "gcc/testsuite/g++.dg/template/sizeof-template-argument.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof-template-argument.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof-template-argument.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof-template-argument.C?ref=6f9f76e336e9ce7a1c070351e4d21e6b84c0e82c", "patch": "@@ -0,0 +1,15 @@\n+/* This used to ICE (PR c++/29573) */\n+/* { dg-do \"compile\" } */\n+\n+template<int> struct A {};\n+\n+template<typename> struct B : A <sizeof(=)> {}; /* { dg-error \"parse error in template argument list\" } */\n+\n+template<typename> struct C : A <sizeof(=)> {}; /* { dg-error \"parse error in template argument list\" } */\n+\n+int a;\n+\n+template<typename> struct D : A <sizeof(a=1)> {}; /* This used to ICE as well. */\n+\n+template<typename> struct E : A <sizeof(a=1)> {}; /* This used to ICE as well. */\n+"}]}