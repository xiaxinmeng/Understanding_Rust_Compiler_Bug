{"sha": "3e65b68dd67e45ae54aa47f41a1f8a8d8296cf26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U2NWI2OGRkNjdlNDVhZTU0YWE0N2Y0MWExZjhhOGQ4Mjk2Y2YyNg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-09-28T13:05:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-24T10:16:00Z"}, "message": "[Ada] Fix resolution of subtype_indication in delta aggregates\n\ngcc/ada/\n\n\t* sem_aggr.adb (Resolve_Delta_Array_Aggregate): If the choice is\n\ta subtype_indication then call\n\tResolve_Discrete_Subtype_Indication; both for choices\n\timmediately inside array delta aggregates and inside\n\titerated_component_association within array delta aggregates.", "tree": {"sha": "4721647eafe7c38e27a08ed7594568ba1a8d9c5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4721647eafe7c38e27a08ed7594568ba1a8d9c5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e65b68dd67e45ae54aa47f41a1f8a8d8296cf26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e65b68dd67e45ae54aa47f41a1f8a8d8296cf26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e65b68dd67e45ae54aa47f41a1f8a8d8296cf26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e65b68dd67e45ae54aa47f41a1f8a8d8296cf26/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ac0642304f83feda52d9285083a4e637e33e3d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ac0642304f83feda52d9285083a4e637e33e3d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ac0642304f83feda52d9285083a4e637e33e3d6"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "1ba58701f03420f97836dcc15e8f429e46ad71a3", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e65b68dd67e45ae54aa47f41a1f8a8d8296cf26/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e65b68dd67e45ae54aa47f41a1f8a8d8296cf26/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=3e65b68dd67e45ae54aa47f41a1f8a8d8296cf26", "patch": "@@ -3072,6 +3072,10 @@ package body Sem_Aggr is\n                   Error_Msg_N\n                     (\"others not allowed in delta aggregate\", Choice);\n \n+               elsif Nkind (Choice) = N_Subtype_Indication then\n+                  Resolve_Discrete_Subtype_Indication\n+                    (Choice, Base_Type (Index_Type));\n+\n                else\n                   Analyze_And_Resolve (Choice, Index_Type);\n                end if;\n@@ -3109,28 +3113,31 @@ package body Sem_Aggr is\n          else\n             Choice := First (Choice_List (Assoc));\n             while Present (Choice) loop\n+               Analyze (Choice);\n+\n                if Nkind (Choice) = N_Others_Choice then\n                   Error_Msg_N\n                     (\"others not allowed in delta aggregate\", Choice);\n \n-               else\n-                  Analyze (Choice);\n+               elsif Is_Entity_Name (Choice)\n+                 and then Is_Type (Entity (Choice))\n+               then\n+                  --  Choice covers a range of values\n \n-                  if Is_Entity_Name (Choice)\n-                    and then Is_Type (Entity (Choice))\n+                  if Base_Type (Entity (Choice)) /=\n+                     Base_Type (Index_Type)\n                   then\n-                     --  Choice covers a range of values\n-\n-                     if Base_Type (Entity (Choice)) /=\n-                        Base_Type (Index_Type)\n-                     then\n-                        Error_Msg_NE\n-                          (\"choice does not match index type of &\",\n-                           Choice, Typ);\n-                     end if;\n-                  else\n-                     Resolve (Choice, Index_Type);\n+                     Error_Msg_NE\n+                       (\"choice does not match index type of &\",\n+                        Choice, Typ);\n                   end if;\n+\n+               elsif Nkind (Choice) = N_Subtype_Indication then\n+                  Resolve_Discrete_Subtype_Indication\n+                    (Choice, Base_Type (Index_Type));\n+\n+               else\n+                  Resolve (Choice, Index_Type);\n                end if;\n \n                Next (Choice);"}]}