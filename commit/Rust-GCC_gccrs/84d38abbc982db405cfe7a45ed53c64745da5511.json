{"sha": "84d38abbc982db405cfe7a45ed53c64745da5511", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRkMzhhYmJjOTgyZGI0MDVjZmU3YTQ1ZWQ1M2M2NDc0NWRhNTUxMQ==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-06-14T16:05:54Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-06-14T16:05:54Z"}, "message": "Use __builtin_mul_overflow in xmallocarray\n\nAs GCC now provides builtins for doing integer overflow checking, lets\nuse it when checking for overflow in xmallocarray.\n\nRegtested on x86_64-pc-linux-gnu.\n\nlibgfortran/ChangeLog:\n\n2019-06-14  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\t* runtime/memory.c (SIZE_MAX):Remove macro definition.\n\t(xmallocarray): Use __builtin_mul_overflow.\n\nFrom-SVN: r272295", "tree": {"sha": "03bfc61b8b6fe932def2e36c89dae37cbdaeefc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03bfc61b8b6fe932def2e36c89dae37cbdaeefc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84d38abbc982db405cfe7a45ed53c64745da5511", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84d38abbc982db405cfe7a45ed53c64745da5511", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84d38abbc982db405cfe7a45ed53c64745da5511", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84d38abbc982db405cfe7a45ed53c64745da5511/comments", "author": null, "committer": null, "parents": [{"sha": "66574c5374ecbd358e68d63922927fc03f2f232a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66574c5374ecbd358e68d63922927fc03f2f232a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66574c5374ecbd358e68d63922927fc03f2f232a"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "013a03eff119b42d4a8723ac4e5a612ce1b96c4e", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84d38abbc982db405cfe7a45ed53c64745da5511/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84d38abbc982db405cfe7a45ed53c64745da5511/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=84d38abbc982db405cfe7a45ed53c64745da5511", "patch": "@@ -1,3 +1,8 @@\n+2019-06-14  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* runtime/memory.c (SIZE_MAX):Remove macro definition.\n+\t(xmallocarray): Use __builtin_mul_overflow.\n+\n 2019-05-22  Jeff Law  <law@redhat.com>\n \n \tPR fortran/89100"}, {"sha": "09a4ff8733fff458ee9893ba46c44edd6184fa3e", "filename": "libgfortran/runtime/memory.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84d38abbc982db405cfe7a45ed53c64745da5511/libgfortran%2Fruntime%2Fmemory.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84d38abbc982db405cfe7a45ed53c64745da5511/libgfortran%2Fruntime%2Fmemory.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fmemory.c?ref=84d38abbc982db405cfe7a45ed53c64745da5511", "patch": "@@ -26,10 +26,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n #include <errno.h>\n \n-#ifndef SIZE_MAX\n-#define SIZE_MAX ((size_t)-1)\n-#endif\n-\n \n void *\n xmalloc (size_t n)\n@@ -52,18 +48,17 @@ void *\n xmallocarray (size_t nmemb, size_t size)\n {\n   void *p;\n+  size_t prod;\n \n   if (!nmemb || !size)\n-    size = nmemb = 1;\n-#define HALF_SIZE_T (((size_t) 1) << (__CHAR_BIT__ * sizeof (size_t) / 2))\n-  else if (__builtin_expect ((nmemb | size) >= HALF_SIZE_T, 0)\n-\t   && nmemb > SIZE_MAX / size)\n+    prod = 1;\n+  else if (__builtin_mul_overflow (nmemb, size, &prod))\n     {\n       errno = ENOMEM;\n       os_error (\"Integer overflow in xmallocarray\");\n     }\n \n-  p = malloc (nmemb * size);\n+  p = malloc (prod);\n \n   if (!p)\n     os_error (\"Memory allocation failed in xmallocarray\");"}]}