{"sha": "521870087489ac8cdd3aa6c660b641c9285848d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIxODcwMDg3NDg5YWM4Y2RkM2FhNmM2NjBiNjQxYzkyODU4NDhkNQ==", "commit": {"author": {"name": "Dehao Chen", "email": "dehao@google.com", "date": "2012-09-25T13:19:33Z"}, "committer": {"name": "Dehao Chen", "email": "dehao@gcc.gnu.org", "date": "2012-09-25T13:19:33Z"}, "message": "re PR middle-end/54645 (Many testsuite failures)\n\ngcc:\n\t2012-09-25  Dehao Chen  <dehao@google.com>\n\n\tPR middle-end/54645\n\t* c-family/c-pch.c (c_common_read_pch): Rebuild the location_adhoc_data\n\tmap when read in the pch.\n\nlibcpp:\n\t2012-09-25  Dehao Chen  <dehao@google.com>\n\n\tPR middle-end/54645\n\t* include/line-map.h (location_adhoc_data): Move location_adhoc_data\n\tinto GC.\n\t(location_adhoc_data_map): Likewise.\n\t(line_maps): Likewise.\n\t(rebuild_location_adhoc_htab): New Function.\n\t* line-map.c (+rebuild_location_adhoc_htab): new Funcion.\n\t(get_combined_adhoc_loc): Move location_adhoc_data into GC.\n\t(location_adhoc_data_fini): Likewise.\n\t(linemap_init): Likewise.\n\t(location_adhoc_data_init): Remove Function.\n\nFrom-SVN: r191706", "tree": {"sha": "15300d39cad0dd42a53b5a881a84a683ae95f406", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15300d39cad0dd42a53b5a881a84a683ae95f406"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/521870087489ac8cdd3aa6c660b641c9285848d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/521870087489ac8cdd3aa6c660b641c9285848d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/521870087489ac8cdd3aa6c660b641c9285848d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/521870087489ac8cdd3aa6c660b641c9285848d5/comments", "author": {"login": "danielcdh", "id": 694263, "node_id": "MDQ6VXNlcjY5NDI2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielcdh", "html_url": "https://github.com/danielcdh", "followers_url": "https://api.github.com/users/danielcdh/followers", "following_url": "https://api.github.com/users/danielcdh/following{/other_user}", "gists_url": "https://api.github.com/users/danielcdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielcdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielcdh/subscriptions", "organizations_url": "https://api.github.com/users/danielcdh/orgs", "repos_url": "https://api.github.com/users/danielcdh/repos", "events_url": "https://api.github.com/users/danielcdh/events{/privacy}", "received_events_url": "https://api.github.com/users/danielcdh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1301f602711e6397326084efef1516a194c9e84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1301f602711e6397326084efef1516a194c9e84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1301f602711e6397326084efef1516a194c9e84"}], "stats": {"total": 86, "additions": 58, "deletions": 28}, "files": [{"sha": "61134bdb6b24b69c9a31a1dc47323c631d640502", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521870087489ac8cdd3aa6c660b641c9285848d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521870087489ac8cdd3aa6c660b641c9285848d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=521870087489ac8cdd3aa6c660b641c9285848d5", "patch": "@@ -1,3 +1,9 @@\n+2012-09-25  Dehao Chen  <dehao@google.com>\n+\n+\tPR middle-end/54645\n+\t* c-family/c-pch.c (c_common_read_pch): Rebuild the location_adhoc_data\n+\tmap when read in the pch.\n+\n 2012-09-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/54676"}, {"sha": "b239ed4f3434a9c9c1bb864cefd630ef55b444fd", "filename": "gcc/c-family/c-pch.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521870087489ac8cdd3aa6c660b641c9285848d5/gcc%2Fc-family%2Fc-pch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521870087489ac8cdd3aa6c660b641c9285848d5/gcc%2Fc-family%2Fc-pch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pch.c?ref=521870087489ac8cdd3aa6c660b641c9285848d5", "patch": "@@ -340,6 +340,7 @@ c_common_read_pch (cpp_reader *pfile, const char *name,\n \n   gt_pch_restore (f);\n   cpp_set_line_map (pfile, line_table);\n+  rebuild_location_adhoc_htab (line_table);\n \n   timevar_push (TV_PCH_CPP_RESTORE);\n   if (cpp_read_state (pfile, name, f, smd) != 0)"}, {"sha": "76602042582e8b0b218b6905611b1488f1177ca7", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521870087489ac8cdd3aa6c660b641c9285848d5/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521870087489ac8cdd3aa6c660b641c9285848d5/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=521870087489ac8cdd3aa6c660b641c9285848d5", "patch": "@@ -1,3 +1,17 @@\n+2012-09-25  Dehao Chen  <dehao@google.com>\n+\n+\tPR middle-end/54645\n+\t* include/line-map.h (location_adhoc_data): Move location_adhoc_data\n+\tinto GC.\n+\t(location_adhoc_data_map): Likewise.\n+\t(line_maps): Likewise.\n+\t(rebuild_location_adhoc_htab): New Function.\n+\t* line-map.c (+rebuild_location_adhoc_htab): new Funcion.\n+\t(get_combined_adhoc_loc): Move location_adhoc_data into GC.\n+\t(location_adhoc_data_fini): Likewise.\n+\t(linemap_init): Likewise.\n+\t(location_adhoc_data_init): Remove Function.\n+\n 2012-09-19  Dehao Chen  <dehao@google.com>\n \n \t* include/line-map.h (MAX_SOURCE_LOCATION): New value."}, {"sha": "5f4bcd780fa64c330ec8781014666f849092302b", "filename": "libcpp/include/line-map.h", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521870087489ac8cdd3aa6c660b641c9285848d5/libcpp%2Finclude%2Fline-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521870087489ac8cdd3aa6c660b641c9285848d5/libcpp%2Finclude%2Fline-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fline-map.h?ref=521870087489ac8cdd3aa6c660b641c9285848d5", "patch": "@@ -260,9 +260,9 @@ struct GTY(()) maps_info {\n };\n \n /* Data structure to associate an arbitrary data to a source location.  */\n-struct location_adhoc_data {\n+struct GTY(()) location_adhoc_data {\n   source_location locus;\n-  void *data;\n+  void * GTY((skip)) data;\n };\n \n struct htab;\n@@ -277,11 +277,11 @@ struct htab;\n    bits of the integer is used to index the location_adhoc_data array,\n    in which the locus and associated data is stored.  */\n \n-struct location_adhoc_data_map {\n-  struct htab *htab;\n+struct GTY(()) location_adhoc_data_map {\n+  struct htab * GTY((skip)) htab;\n   source_location curr_loc;\n-  struct location_adhoc_data *data;\n   unsigned int allocated;\n+  struct location_adhoc_data GTY((length (\"%h.allocated\"))) *data;\n };\n \n /* A set of chronological line_map structures.  */\n@@ -315,7 +315,7 @@ struct GTY(()) line_maps {\n      allocated, for a certain allocation size requested.  */\n   line_map_round_alloc_size_func round_alloc_size;\n \n-  struct location_adhoc_data_map GTY((skip)) location_adhoc_data_map;\n+  struct location_adhoc_data_map location_adhoc_data_map;\n };\n \n /* Returns the pointer to the memory region where information about\n@@ -446,6 +446,8 @@ extern source_location get_location_from_adhoc_loc (struct line_maps *,\n #define COMBINE_LOCATION_DATA(SET, LOC, BLOCK) \\\n   get_combined_adhoc_loc ((SET), (LOC), (BLOCK))\n \n+extern void rebuild_location_adhoc_htab (struct line_maps *);\n+\n /* Initialize a line map set.  */\n extern void linemap_init (struct line_maps *);\n "}, {"sha": "f0b2f8846a56f22f091294580e1cd1671da79527", "filename": "libcpp/line-map.c", "status": "modified", "additions": 29, "deletions": 22, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521870087489ac8cdd3aa6c660b641c9285848d5/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521870087489ac8cdd3aa6c660b641c9285848d5/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=521870087489ac8cdd3aa6c660b641c9285848d5", "patch": "@@ -82,6 +82,19 @@ location_adhoc_data_update (void **slot, void *data)\n   return 1;\n }\n \n+/* Rebuild the hash table from the location adhoc data.  */\n+\n+void\n+rebuild_location_adhoc_htab (struct line_maps *set)\n+{\n+  unsigned i;\n+  set->location_adhoc_data_map.htab =\n+      htab_create (100, location_adhoc_data_hash, location_adhoc_data_eq, NULL);\n+  for (i = 0; i < set->location_adhoc_data_map.curr_loc; i++)\n+    htab_find_slot (set->location_adhoc_data_map.htab,\n+\t\t    set->location_adhoc_data_map.data + i, INSERT);\n+}\n+\n /* Combine LOCUS and DATA to a combined adhoc loc.  */\n \n source_location\n@@ -109,14 +122,21 @@ get_combined_adhoc_loc (struct line_maps *set,\n \t{\n \t  char *orig_data = (char *) set->location_adhoc_data_map.data;\n \t  long long offset;\n-\t  set->location_adhoc_data_map.allocated *= 2;\n-\t  set->location_adhoc_data_map.data =\n-\t      XRESIZEVEC (struct location_adhoc_data,\n-\t\t\t  set->location_adhoc_data_map.data,\n-\t\t\t  set->location_adhoc_data_map.allocated);\n+\t  line_map_realloc reallocator\n+\t      = set->reallocator ? set->reallocator : xrealloc;\n+\n+\t  if (set->location_adhoc_data_map.allocated == 0)\n+\t    set->location_adhoc_data_map.allocated = 128;\n+\t  else\n+\t    set->location_adhoc_data_map.allocated *= 2;\n+\t  set->location_adhoc_data_map.data = (struct location_adhoc_data *)\n+\t      reallocator (set->location_adhoc_data_map.data,\n+\t\t\t   set->location_adhoc_data_map.allocated\n+\t\t\t   * sizeof (struct location_adhoc_data));\n \t  offset = (char *) (set->location_adhoc_data_map.data) - orig_data;\n-\t  htab_traverse (set->location_adhoc_data_map.htab,\n-\t\t\t location_adhoc_data_update, &offset);\n+\t  if (set->location_adhoc_data_map.allocated > 128)\n+\t    htab_traverse (set->location_adhoc_data_map.htab,\n+\t\t\t   location_adhoc_data_update, &offset);\n \t}\n       *slot = set->location_adhoc_data_map.data\n \t      + set->location_adhoc_data_map.curr_loc;\n@@ -144,24 +164,10 @@ get_location_from_adhoc_loc (struct line_maps *set, source_location loc)\n   return set->location_adhoc_data_map.data[loc & MAX_SOURCE_LOCATION].locus;\n }\n \n-/* Initialize the location_adhoc_data structure.  */\n-\n-static void\n-location_adhoc_data_init (struct line_maps *set)\n-{\n-  set->location_adhoc_data_map.htab =\n-      htab_create (100, location_adhoc_data_hash, location_adhoc_data_eq, NULL);\n-  set->location_adhoc_data_map.curr_loc = 0;\n-  set->location_adhoc_data_map.allocated = 100;\n-  set->location_adhoc_data_map.data = XNEWVEC (struct location_adhoc_data, 100);\n-}\n-\n /* Finalize the location_adhoc_data structure.  */\n void\n location_adhoc_data_fini (struct line_maps *set)\n {\n-  set->location_adhoc_data_map.allocated = 0;\n-  XDELETEVEC (set->location_adhoc_data_map.data);\n   htab_delete (set->location_adhoc_data_map.htab);\n }\n \n@@ -173,7 +179,8 @@ linemap_init (struct line_maps *set)\n   memset (set, 0, sizeof (struct line_maps));\n   set->highest_location = RESERVED_LOCATION_COUNT - 1;\n   set->highest_line = RESERVED_LOCATION_COUNT - 1;\n-  location_adhoc_data_init (set);\n+  set->location_adhoc_data_map.htab =\n+      htab_create (100, location_adhoc_data_hash, location_adhoc_data_eq, NULL);\n }\n \n /* Check for and warn about line_maps entered but not exited.  */"}]}