{"sha": "e84b8cdf075a011596caef531b23be8c3e09fb15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg0YjhjZGYwNzVhMDExNTk2Y2FlZjUzMWIyM2JlOGMzZTA5ZmIxNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-14T15:07:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-14T15:07:26Z"}, "message": "Removed, no longer compatible with latest Ada 2005 issues.\n\nFrom-SVN: r100938", "tree": {"sha": "67b4b6b318fbaa602047c22f70ece04ca9eaee2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67b4b6b318fbaa602047c22f70ece04ca9eaee2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e84b8cdf075a011596caef531b23be8c3e09fb15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e84b8cdf075a011596caef531b23be8c3e09fb15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e84b8cdf075a011596caef531b23be8c3e09fb15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e84b8cdf075a011596caef531b23be8c3e09fb15/comments", "author": null, "committer": null, "parents": [{"sha": "ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1"}], "stats": {"total": 270, "additions": 0, "deletions": 270}, "files": [{"sha": "04b094f1ff3692d2305c82177c9fe6bc3852a6a5", "filename": "gcc/testsuite/ada/acats/tests/c3/c352001.a", "status": "removed", "additions": 0, "deletions": 270, "changes": 270, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc3%2Fc352001.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc3%2Fc352001.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc3%2Fc352001.a?ref=ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1", "patch": "@@ -1,270 +0,0 @@\n---\n--- C352001.A\n---\n---                             Grant of Unlimited Rights\n---\n---     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n---     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n---     unlimited rights in the software and documentation contained herein.\n---     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n---     this public release, the Government intends to confer upon all \n---     recipients unlimited rights  equal to those held by the Government.  \n---     These rights include rights to use, duplicate, release or disclose the \n---     released technical data and computer software in whole or in part, in \n---     any manner and for any purpose whatsoever, and to have or permit others \n---     to do so.\n---\n---                                    DISCLAIMER\n---\n---     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n---     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n---     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n---     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n---     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n---     PARTICULAR PURPOSE OF SAID MATERIAL.\n---*\n---\n--- OBJECTIVE:\n---      Check that the predefined Character type comprises 256 positions.  \n---      Check that the names of the non-graphic characters are usable with \n---      the attributes (Wide_)Image and (Wide_)Value, and that these\n---      attributes produce the correct result.\n---                 \n--- TEST DESCRIPTION:\n---      Build two tables of nongraphic characters from positions of Row 00 \n---      (0000-001F and 007F-009F) of the ISO 10646 Basic Multilingual Plane.\n---      Fill the first table with compiler created strings. Fill the second \n---      table with strings defined by the language.  Compare the two tables.  \n---      Check 256 positions of the predefined character type.  Use attributes \n---      (Wide_)Image and (Wide_)Value to check the values of the non-graphic \n---      characters and the last 2 characters.\n---\n---\n--- CHANGE HISTORY:\n---      20 Jun 95   SAIC    Initial prerelease version.\n---      27 Jan 96   SAIC    Revised for 2.1.  Hid values, added \"del\" case.\n---\n---!\n-\n-with Ada.Characters.Handling;\n-with Report;\n-procedure C352001 is\n-\n-   Lower_Bound  : Integer  :=  0;\n-   Middle_Bound : Integer  := 31;\n-   Upper_Bound  : Integer  := 159;\n-   Half_Bound   : Integer  := 127;\n-   Max_Bound    : Integer  := 255;\n-\n-   type Dyn_String is access String;\n-   type Value_Result is array (Character) of Dyn_String;\n-\n-   Table_Of_Character : Value_Result;\n-   TC_Table           : Value_Result;\n-\n-   function CVII(K : Natural) return Character is\n-   begin\n-     return Character'Val( Report.Ident_Int(K) );\n-   end CVII;\n-\n-   function \"=\" (L, R : String) return Boolean is\n-      UCL : String (L'First .. L'Last);\n-      UCR : String (R'First .. R'last);\n-   begin\n-      UCL := Ada.Characters.Handling.To_Upper (L);\n-      UCR := Ada.Characters.Handling.To_Upper (R);\n-      if UCL'Last /= UCR'Last then \n-         return False;\n-      else\n-         for I in UCL'First .. UCR'Last loop\n-            if UCL (I) /= UCR (I) then \n-               return False;\n-            end if;\n-         end loop;\n-         return True;\n-       end if;\n-   end \"=\";\n-\n-begin\n-\n-   Report.Test (\"C352001\", \"Check that, the predefined Character type \"     &\n-                \"comprises 256 positions.  Check that the names of the \"    &\n-                \"non-graphic characters are usable with the attributes \"    &\n-                \"(Wide_)Image and (Wide_)Value, and that these attributes \" &\n-                \"produce the correct result\");\n-\n-   -- Fill table with strings (positions of Row 00 (0000-001F) of the ISO \n-   -- 10646 Basic Multilingual Plane created by the compiler.\n-\n-   for I in CVII(Lower_Bound) .. CVII(Middle_Bound) loop\n-      Table_Of_Character (I) := new String'(Character'Image(I));\n-   end loop;\n-\n-   -- Fill table with strings (positions of Row 00 (007F-009F) of the ISO \n-   -- 10646 Basic Multilingual Plane created by the compiler.\n-\n-   for I in CVII(Half_Bound) .. CVII(Upper_Bound) loop\n-      Table_Of_Character (I) := new String'(Character'Image(I));\n-   end loop;\n-\n-   -- Fill table with strings (positions of Row 00 (0000-001F) of the ISO \n-   -- 10646 Basic Multilingual Plane defined by the language.\n-\n-   TC_Table (CVII(0))   := new String'(\"nul\");\n-   TC_Table (CVII(1))   := new String'(\"soh\");\n-   TC_Table (CVII(2))   := new String'(\"stx\");\n-   TC_Table (CVII(3))   := new String'(\"etx\");\n-   TC_Table (CVII(4))   := new String'(\"eot\");\n-   TC_Table (CVII(5))   := new String'(\"enq\");\n-   TC_Table (CVII(6))   := new String'(\"ack\");\n-   TC_Table (CVII(7))   := new String'(\"bel\"); \n-   TC_Table (CVII(8))   := new String'(\"bs\");\n-   TC_Table (CVII(9))   := new String'(\"ht\");\n-   TC_Table (CVII(10))  := new String'(\"lf\");\n-   TC_Table (CVII(11))  := new String'(\"vt\");\n-   TC_Table (CVII(12))  := new String'(\"ff\");\n-   TC_Table (CVII(13))  := new String'(\"cr\");\n-   TC_Table (CVII(14))  := new String'(\"so\");\n-   TC_Table (CVII(15))  := new String'(\"si\");\n-   TC_Table (CVII(16))  := new String'(\"dle\");\n-   TC_Table (CVII(17))  := new String'(\"dc1\");\n-   TC_Table (CVII(18))  := new String'(\"dc2\");\n-   TC_Table (CVII(19))  := new String'(\"dc3\");\n-   TC_Table (CVII(20))  := new String'(\"dc4\");\n-   TC_Table (CVII(21))  := new String'(\"nak\");\n-   TC_Table (CVII(22))  := new String'(\"syn\");\n-   TC_Table (CVII(23))  := new String'(\"etb\");\n-   TC_Table (CVII(24))  := new String'(\"can\");\n-   TC_Table (CVII(25))  := new String'(\"em\");\n-   TC_Table (CVII(26))  := new String'(\"sub\");\n-   TC_Table (CVII(27))  := new String'(\"esc\");\n-   TC_Table (CVII(28))  := new String'(\"fs\");\n-   TC_Table (CVII(29))  := new String'(\"gs\");\n-   TC_Table (CVII(30))  := new String'(\"rs\");\n-   TC_Table (CVII(31))  := new String'(\"us\");\n-   TC_Table (CVII(127)) := new String'(\"del\");\n-\n-   -- Fill table with strings (positions of Row 00 (007F-009F) of the ISO \n-   -- 10646 Basic Multilingual Plane defined by the language.\n-\n-   TC_Table (CVII(128)) := new String'(\"reserved_128\");\n-   TC_Table (CVII(129)) := new String'(\"reserved_129\");\n-   TC_Table (CVII(130)) := new String'(\"bph\");\n-   TC_Table (CVII(131)) := new String'(\"nbh\");\n-   TC_Table (CVII(132)) := new String'(\"reserved_132\");\n-   TC_Table (CVII(133)) := new String'(\"nel\");\n-   TC_Table (CVII(134)) := new String'(\"ssa\");\n-   TC_Table (CVII(135)) := new String'(\"esa\");\n-   TC_Table (CVII(136)) := new String'(\"hts\");\n-   TC_Table (CVII(137)) := new String'(\"htj\");\n-   TC_Table (CVII(138)) := new String'(\"vts\");\n-   TC_Table (CVII(139)) := new String'(\"pld\");\n-   TC_Table (CVII(140)) := new String'(\"plu\");\n-   TC_Table (CVII(141)) := new String'(\"ri\");\n-   TC_Table (CVII(142)) := new String'(\"ss2\");\n-   TC_Table (CVII(143)) := new String'(\"ss3\");\n-   TC_Table (CVII(144)) := new String'(\"dcs\");\n-   TC_Table (CVII(145)) := new String'(\"pu1\");\n-   TC_Table (CVII(146)) := new String'(\"pu2\");\n-   TC_Table (CVII(147)) := new String'(\"sts\");\n-   TC_Table (CVII(148)) := new String'(\"cch\");\n-   TC_Table (CVII(149)) := new String'(\"mw\");\n-   TC_Table (CVII(150)) := new String'(\"spa\");\n-   TC_Table (CVII(151)) := new String'(\"epa\");\n-   TC_Table (CVII(152)) := new String'(\"sos\");\n-   TC_Table (CVII(153)) := new String'(\"reserved_153\");\n-   TC_Table (CVII(154)) := new String'(\"sci\");\n-   TC_Table (CVII(155)) := new String'(\"csi\");\n-   TC_Table (CVII(156)) := new String'(\"st\");\n-   TC_Table (CVII(157)) := new String'(\"osc\");\n-   TC_Table (CVII(158)) := new String'(\"pm\");\n-   TC_Table (CVII(159)) := new String'(\"apc\");\n-\n-\n-   -- Compare the first half of two tables.\n-   for I in CVII(Lower_Bound) .. CVII(Middle_Bound) loop\n-     if TC_Table(I).all /= Table_Of_Character(I).all then\n-       Report.Failed(\"Value of character#\" & Integer'Image(Character'Pos(I)) &\n-                     \" is not the same in the first half of the table\");\n-     end if;\n-   end loop;\n-\n-\n-   -- Compare the second half of two tables.\n-   for I in CVII(Half_Bound) .. CVII(Upper_Bound) loop\n-     if TC_Table(I).all /= Table_Of_Character(I).all then\n-       Report.Failed(\"Value of character#\" & Integer'Image(Character'Pos(I)) &\n-                     \" is not the same in the second half of the table\");\n-     end if;\n-   end loop;\n-\n-\n-   -- Check the first character.\n-   if Character'Image( Character'First ) /= \"NUL\" then\n-      Report.Failed(\"Value of character#\"                           &\n-                     Integer'Image(Character'Pos (Character'First)) &\n-                    \" is not NUL\");\n-   end if;\n-\n-\n-   -- Check that the names of the non-graphic characters are usable with\n-   -- Image and Value attributes.\n-   if Character'Value( Character'Image( CVII(153) )) /= \n-     CVII( 153 ) then\n-        Report.Failed (\"Value of character#\"                       &\n-                        Integer'Image( Character'Pos(CVII(153)) )  &\n-                       \" is not reserved_153\");\n-   end if;\n-\n-\n-   for I in CVII(Lower_Bound) .. CVII(Max_Bound) loop\n-     if Character'Value( \n-          Report.Ident_Str(\n-            Character'Image(CVII(Character'Pos(I)))))\n-        /= CVII( Character'Pos(I)) then\n-          Report.Failed (\"Value of character#\"                             &\n-                          Integer'Image( Character'Pos(I) )                &\n-                         \" is not the same as the predefined character type\");\n-     end if;\n-   end loop;\n-\n-\n-   -- Check Wide_Character attributes.\n-   for I in Wide_Character'Val(Lower_Bound) .. Wide_Character'Val(Max_Bound) \n-   loop\n-     if Wide_Character'Wide_Value(\n-          Report.Ident_Wide_Str(\n-            Wide_Character'Wide_Image(\n-              Wide_Character'Val(Wide_Character'Pos(I)))))\n-        /= Wide_Character'Val(Wide_Character'Pos(I)) \n-     then\n-        Report.Failed (\"Value of the predefined Wide_Character type \" &\n-                       \"is not correct\");\n-     end if;\n-   end loop;\n-\n-\n-   if Wide_Character'Value( Wide_Character'Image(Wide_Character'Val(132)) ) \n-     /= Wide_Character'Val( Report.Ident_Int(132) ) then\n-        Report.Failed (\"Wide_Character at 132 is not reserved_132\");\n-   end if;\n-\n-\n-   if Wide_Character'Image( Wide_Character'First ) /= \"NUL\" then\n-      Report.Failed (\"Wide_Character'First is not NUL\");\n-   end if;\n-\n-\n-   if Wide_Character'Image \n-     (Wide_Character'Pred (Wide_Character'Last) ) /= \"FFFE\" then\n-      Report.Failed (\"Wide_Character at 65534 is not FFFE\");\n-   end if;\n-  \n-    \n-   if Wide_Character'Image(Wide_Character'Last) /= \"FFFF\" then\n-      Report.Failed (\"Wide_Character'Last is not FFFF\");\n-   end if;\n-\n-   Report.Result;\n-\n-end C352001;"}]}