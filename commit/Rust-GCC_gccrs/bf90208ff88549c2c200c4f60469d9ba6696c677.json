{"sha": "bf90208ff88549c2c200c4f60469d9ba6696c677", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY5MDIwOGZmODg1NDljMmMyMDBjNGY2MDQ2OWQ5YmE2Njk2YzY3Nw==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2011-03-23T11:57:28Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2011-03-23T11:57:28Z"}, "message": "expr.c (expand_expr_real_1): Only use BLKmode for volatile accesses which are not naturally aligned.\n\n\t* expr.c (expand_expr_real_1): Only use BLKmode for volatile\n\taccesses which are not naturally aligned.\n\nFrom-SVN: r171347", "tree": {"sha": "03c32c91566610e208ad992f71e36a4c1f6fd28e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03c32c91566610e208ad992f71e36a4c1f6fd28e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf90208ff88549c2c200c4f60469d9ba6696c677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf90208ff88549c2c200c4f60469d9ba6696c677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf90208ff88549c2c200c4f60469d9ba6696c677", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf90208ff88549c2c200c4f60469d9ba6696c677/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3505a737fd92d93b1602ed6daa1ef702b0504462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3505a737fd92d93b1602ed6daa1ef702b0504462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3505a737fd92d93b1602ed6daa1ef702b0504462"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "bf0467272965d277b562d03a6f04264d2ad9b529", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf90208ff88549c2c200c4f60469d9ba6696c677/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf90208ff88549c2c200c4f60469d9ba6696c677/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf90208ff88549c2c200c4f60469d9ba6696c677", "patch": "@@ -1,3 +1,8 @@\n+2011-03-23  Julian Brown  <julian@codesourcery.com>\n+\n+\t* expr.c (expand_expr_real_1): Only use BLKmode for volatile\n+\taccesses which are not naturally aligned.\n+\n 2011-03-23  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR target/47553"}, {"sha": "4db1c776ba41c1ef32147ae17eaebc43b67bd9b5", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf90208ff88549c2c200c4f60469d9ba6696c677/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf90208ff88549c2c200c4f60469d9ba6696c677/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=bf90208ff88549c2c200c4f60469d9ba6696c677", "patch": "@@ -9147,8 +9147,11 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t\t&& modifier != EXPAND_CONST_ADDRESS\n \t\t&& modifier != EXPAND_INITIALIZER)\n \t    /* If the field is volatile, we always want an aligned\n-\t       access.  */\n-\t    || (volatilep && flag_strict_volatile_bitfields > 0)\n+\t       access.  Only do this if the access is not already naturally\n+\t       aligned, otherwise \"normal\" (non-bitfield) volatile fields\n+\t       become non-addressable.  */\n+\t    || (volatilep && flag_strict_volatile_bitfields > 0\n+\t\t&& (bitpos % GET_MODE_ALIGNMENT (mode) != 0))\n \t    /* If the field isn't aligned enough to fetch as a memref,\n \t       fetch it as a bit field.  */\n \t    || (mode1 != BLKmode"}]}