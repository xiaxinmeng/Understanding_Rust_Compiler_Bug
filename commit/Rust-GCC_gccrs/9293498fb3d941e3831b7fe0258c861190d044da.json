{"sha": "9293498fb3d941e3831b7fe0258c861190d044da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI5MzQ5OGZiM2Q5NDFlMzgzMWI3ZmUwMjU4Yzg2MTE5MGQwNDRkYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-18T01:23:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-18T01:23:00Z"}, "message": "(get_inner_reference): Fix error in previous change.\n\nFrom-SVN: r13200", "tree": {"sha": "f402505c1f57cedfefa60505dce4c92e55696c1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f402505c1f57cedfefa60505dce4c92e55696c1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9293498fb3d941e3831b7fe0258c861190d044da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9293498fb3d941e3831b7fe0258c861190d044da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9293498fb3d941e3831b7fe0258c861190d044da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9293498fb3d941e3831b7fe0258c861190d044da/comments", "author": null, "committer": null, "parents": [{"sha": "3e1a978b9e52756b4e183d95c13885607fb7f09a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e1a978b9e52756b4e183d95c13885607fb7f09a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e1a978b9e52756b4e183d95c13885607fb7f09a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3e0a88be0a11243a37e3dafcc2ad495fe4f1d8d7", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9293498fb3d941e3831b7fe0258c861190d044da/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9293498fb3d941e3831b7fe0258c861190d044da/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=9293498fb3d941e3831b7fe0258c861190d044da", "patch": "@@ -4338,7 +4338,7 @@ get_inner_reference (exp, pbitsize, pbitpos, poffset, pmode,\n \n   if (TREE_CODE_CLASS (TREE_CODE (exp)) == 'd')\n     alignment = MIN (alignment, DECL_ALIGN (exp));\n-  else\n+  else if (TREE_TYPE (exp) != 0)\n     alignment = MIN (alignment, TYPE_ALIGN (TREE_TYPE (exp)));\n \n   if (integer_zerop (offset))"}]}