{"sha": "fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRmYmVkMzgzZTQ4ZjlhNmZjZTZlZjFlMGUwZGVmZWEwMzYzYWMzZg==", "commit": {"author": {"name": "Li Jia He", "email": "helijia@linux.ibm.com", "date": "2019-06-26T08:23:06Z"}, "committer": {"name": "Li Jia He", "email": "helijia@gcc.gnu.org", "date": "2019-06-26T08:23:06Z"}, "message": "[RS6000] Change maddld match_operand from DI to GPR\n\nFrom PowerPC ISA3.0, the description of `maddld RT, RA.RB, RC` is as follows:\n64-bit RA and RB are multiplied and then the RC is signed extend to 128 bits,\nand add them together.\n\nWe only apply it to 64-bit mode (DI) when implementing maddld.  However, if we\ncan guarantee that the result of the maddld operation will be limited to 32-bit\nmode (SI), we can still apply it to 32-bit mode (SI).\n\ngcc/ChangeLog\n2019-06-26  Li Jia He  <helijia@linux.ibm.com>\n\n\t* config/rs6000/rs6000.h (TARGET_MADDLD): Remove the restriction of\n\tTARGET_POWERPC64.\n\t* config/rs6000/rs6000.md (maddld): Change maddld match_operand from DI\n\tto GPR.\n\ngcc/testsuite/ChangeLog\n2019-06-26  Li Jia He  <helijia@linux.ibm.com>\n\n\t* gcc.target/powerpc/maddld-1.c: New testcase.\n\nFrom-SVN: r272673", "tree": {"sha": "5ade5236ca921e53c9aa2e0b78b6a0f188de6f96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ade5236ca921e53c9aa2e0b78b6a0f188de6f96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f/comments", "author": {"login": "HLJ2009", "id": 18440836, "node_id": "MDQ6VXNlcjE4NDQwODM2", "avatar_url": "https://avatars.githubusercontent.com/u/18440836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HLJ2009", "html_url": "https://github.com/HLJ2009", "followers_url": "https://api.github.com/users/HLJ2009/followers", "following_url": "https://api.github.com/users/HLJ2009/following{/other_user}", "gists_url": "https://api.github.com/users/HLJ2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/HLJ2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HLJ2009/subscriptions", "organizations_url": "https://api.github.com/users/HLJ2009/orgs", "repos_url": "https://api.github.com/users/HLJ2009/repos", "events_url": "https://api.github.com/users/HLJ2009/events{/privacy}", "received_events_url": "https://api.github.com/users/HLJ2009/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de80936dbf2ae4a6304a8cbe70e05b483bcc7ee9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de80936dbf2ae4a6304a8cbe70e05b483bcc7ee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de80936dbf2ae4a6304a8cbe70e05b483bcc7ee9"}], "stats": {"total": 44, "additions": 38, "deletions": 6}, "files": [{"sha": "f8d3574326b317f6f4afcf2e4723a0920f36f894", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f", "patch": "@@ -1,3 +1,10 @@\n+2019-06-26  Li Jia He  <helijia@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000.h (TARGET_MADDLD): Remove the restriction of\n+\tTARGET_POWERPC64.\n+\t* config/rs6000/rs6000.md (maddld): Change maddld match_operand from DI\n+\tto GPR.\n+\n 2019-06-26  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* doc/invoke.texi (Warning Options): Fix some @opindex syntax."}, {"sha": "0a2c0bc341f02b2b312a7a543ed59c725b3a3b44", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f", "patch": "@@ -453,7 +453,7 @@ extern int rs6000_vector_align[];\n #define TARGET_FCTIWUZ\tTARGET_POPCNTD\n #define TARGET_CTZ\tTARGET_MODULO\n #define TARGET_EXTSWSLI\t(TARGET_MODULO && TARGET_POWERPC64)\n-#define TARGET_MADDLD\t(TARGET_MODULO && TARGET_POWERPC64)\n+#define TARGET_MADDLD\tTARGET_MODULO\n \n #define TARGET_XSCVDPSPN\t(TARGET_DIRECT_MOVE || TARGET_P8_VECTOR)\n #define TARGET_XSCVSPDPN\t(TARGET_DIRECT_MOVE || TARGET_P8_VECTOR)"}, {"sha": "9445d5ff3d45e3bf9993d95f0686239a2686220a", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f", "patch": "@@ -3062,11 +3062,11 @@\n   DONE;\n })\n \n-(define_insn \"*maddld4\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n-\t(plus:DI (mult:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n-\t\t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"r\"))\n-\t\t (match_operand:DI 3 \"gpc_reg_operand\" \"r\")))]\n+(define_insn \"*maddld<mode>4\"\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+\t(plus:GPR (mult:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")\n+\t\t\t    (match_operand:GPR 2 \"gpc_reg_operand\" \"r\"))\n+\t\t  (match_operand:GPR 3 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_MADDLD\"\n   \"maddld %0,%1,%2,%3\"\n   [(set_attr \"type\" \"mul\")])"}, {"sha": "5b54f28fbd839b863fe4e39d1c31d2cfba290b69", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f", "patch": "@@ -1,3 +1,7 @@\n+2019-06-26  Li Jia He  <helijia@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/maddld-1.c: New testcase.\n+\n 2019-06-06  Hongtao Liu  <hongtao.liu@intel.com>\n \t    Olga Makhotina  <olga.makhotina@intel.com>\n "}, {"sha": "4edecf1c86d8bdec6892ffd46f08fe4a7ab4604e", "filename": "gcc/testsuite/gcc.target/powerpc/maddld-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fmaddld-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fmaddld-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fmaddld-1.c?ref=fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mdejagnu-cpu=power9 -O2\" } */\n+\n+/* This file tests the maddld instruction can be used in SI mode\n+   on power9 machine.  */\n+\n+int\n+s_madd (int a, int b, int c)\n+{\n+  return (a * b) + c;\n+}\n+\n+unsigned int\n+u_madd (unsigned int a, unsigned int b, unsigned int c)\n+{\n+  return (a * b) + c;\n+}\n+\n+/* { dg-final { scan-assembler-times {\\mmaddld\\s} 2 } } */\n+/* { dg-final { scan-assembler-not   {\\mmul} } } */\n+/* { dg-final { scan-assembler-not   {\\madd} } } */"}]}