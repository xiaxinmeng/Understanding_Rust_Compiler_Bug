{"sha": "ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ExMWMzN2M1ZDVhNjM5ZWRmOWU0YTdhYzIxMWJkZDNkZjZkNjIwZg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-08-21T17:27:29Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-08-21T17:27:29Z"}, "message": "Makefile.in (INCLUDES): Remove -I$(srcdir)/config.\n\n\t* Makefile.in (INCLUDES): Remove -I$(srcdir)/config.\n\t* config.gcc (*-*-openbsd): Don't set tm_file.\n\t(alpha*-*-openbsd, arm*-*-coff*, arm*-wince-pe*,\n\tarm-*-pe*, avr-*-*, h8300-*-rtems*, h8300-*-elf*,\n\th8300-*-*, hppa*-*-osf*, hppa*-*-bsd*, hppa*-*-hpux*,\n\ti370-*-opened*, i370-*-mvs*, i370-*-linux*, i?86-*-openbsd*,\n\ti?86-*-lynxos, i?86-*-nto-qnx*, iq2000*-*-elf*, m68000-hp-hpux*,\n\tm68k-hp-hpux*, m68k-*-aout*, m68k-*-coff*, m68020-*-elf*,\n\tm68k-*-elf*, m68k*-*-netbsd*, m68k*-*-openbsd*, m68k-*-sysv4*,\n\tm68k-*-linux*, m68k-*-rtems*, mcore-*-pe*, mips*-*-netbsd*,\n\tmips*-*-openbsd*, rs6000-*-lynxos*, sh*-*-elf*, sh*-*-ka,\n\tsh-*-rtemself, sparc-*-openbsd*, strongarm-*-pe, vax-*-openbsd*,\n\txscale-*-coff): Use explicit and complete lists of target headers\n\tto include.  Move definitions to tm_defines where appropriate.\n\t(hppa*-*-openbsd*, powerpc-*-openbsd*): Comment out stanza for\n\tnot-yet-contributed configuration.\n\n\t* config/lynx.h, config/alpha/openbsd.h, config/arm/coff.h\n\t* config/avr/avr.h, config/frv/frv.h, config/h8300/elf.h\n\t* config/i370/linux.h, config/i370/mvs.h, config/i370/oe.h\n\t* config/i386/nto.h, config/iq2000/iq2000.h,\n\t* config/m68k/coff.h, config/m68k/hp310.h, config/m68k/hp320.h\n\t* config/m68k/linux.h, config/m68k/m68k-aout.h\n\t* config/m68k/m68k-none.h, config/m68k/m68kv4.h\n\t* config/m68k/netbsd.h, config/m68k/openbsd.h\n\t* config/m68k/sgs.h, config/mcore/mcore-pe.h,\n\t* config/mips/netbsd.h, config/mips/openbsd.h, config/pa/pa.h,\n\t* config/rs6000/lynx.h, config/sh/embed-elf.h, config/sparc/openbsd.h:\n\tRemove includes of other target config headers, and\n\tdefinitions of macros moved to tm_defines lists.  Add #undefs\n\twhere now necessary to prevent redefinition warnings.\n\n\t* config/h8300/coff.h: New file split out of...\n\t* config/h8300/elf.h: ...here.\n\t* config/m68k/hp320base.h: New file split out of...\n\t* config/m68k/hp320.h: ...here.\n\t* config/rs6000/lynxbase.h: New file split out of...\n\t* config/rs6000/lynx.h: ...here.\n\n\t* config/m68k/hp310g.h, config/m68k/hp320g.h, config/m68k/hpux7.h\n\t* config/m68k/m68k-coff.h, config/mips/openbsd-be.h: Delete file.\n\n\t* config/sol2.h: Remove #if 0-ed #include of sys/mman.h.\n\t* config/m68k/m68kelf.h: Remove commented out #include of m68k/sgs.h.\n\t* config/mcore/mcore.h: Don't include hwint.h nor machmode.h.\n\tRemove unnecessary #ifndef.\n\t* config/s390/s390.h: Prefix #include of s390/fixdfdi.h\n\t[under IN_LIBGCC2] with config/.\n\nFrom-SVN: r70651", "tree": {"sha": "04fae098a4bda65ba102a84f5e996698e769f492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04fae098a4bda65ba102a84f5e996698e769f492"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/comments", "author": null, "committer": null, "parents": [{"sha": "ac650a0a320c369bfc1788e9579dc102576ddc50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac650a0a320c369bfc1788e9579dc102576ddc50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac650a0a320c369bfc1788e9579dc102576ddc50"}], "stats": {"total": 778, "additions": 332, "deletions": 446}, "files": [{"sha": "db6b316c58607f478f52a6029890287f68896e00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 55, "deletions": 4, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,3 +1,54 @@\n+2003-08-21  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* Makefile.in (INCLUDES): Remove -I$(srcdir)/config.\n+\t* config.gcc (*-*-openbsd): Don't set tm_file.\n+\t(alpha*-*-openbsd, arm*-*-coff*, arm*-wince-pe*,\n+\tarm-*-pe*, avr-*-*, h8300-*-rtems*, h8300-*-elf*,\n+\th8300-*-*, hppa*-*-osf*, hppa*-*-bsd*, hppa*-*-hpux*,\n+\ti370-*-opened*, i370-*-mvs*, i370-*-linux*, i?86-*-openbsd*,\n+\ti?86-*-lynxos, i?86-*-nto-qnx*, iq2000*-*-elf*, m68000-hp-hpux*,\n+\tm68k-hp-hpux*, m68k-*-aout*, m68k-*-coff*, m68020-*-elf*,\n+\tm68k-*-elf*, m68k*-*-netbsd*, m68k*-*-openbsd*, m68k-*-sysv4*,\n+\tm68k-*-linux*, m68k-*-rtems*, mcore-*-pe*, mips*-*-netbsd*,\n+\tmips*-*-openbsd*, rs6000-*-lynxos*, sh*-*-elf*, sh*-*-ka,\n+\tsh-*-rtemself, sparc-*-openbsd*, strongarm-*-pe, vax-*-openbsd*,\n+\txscale-*-coff): Use explicit and complete lists of target headers\n+\tto include.  Move definitions to tm_defines where appropriate.\n+\t(hppa*-*-openbsd*, powerpc-*-openbsd*): Comment out stanza for\n+\tnot-yet-contributed configuration.\n+\n+\t* config/lynx.h, config/alpha/openbsd.h, config/arm/coff.h\n+\t* config/avr/avr.h, config/frv/frv.h, config/h8300/elf.h\n+\t* config/i370/linux.h, config/i370/mvs.h, config/i370/oe.h\n+\t* config/i386/nto.h, config/iq2000/iq2000.h,\n+\t* config/m68k/coff.h, config/m68k/hp310.h, config/m68k/hp320.h\n+\t* config/m68k/linux.h, config/m68k/m68k-aout.h\n+\t* config/m68k/m68k-none.h, config/m68k/m68kv4.h\n+\t* config/m68k/netbsd.h, config/m68k/openbsd.h\n+\t* config/m68k/sgs.h, config/mcore/mcore-pe.h,\n+\t* config/mips/netbsd.h, config/mips/openbsd.h, config/pa/pa.h,\n+\t* config/rs6000/lynx.h, config/sh/embed-elf.h, config/sparc/openbsd.h:\n+\tRemove includes of other target config headers, and\n+\tdefinitions of macros moved to tm_defines lists.  Add #undefs\n+\twhere now necessary to prevent redefinition warnings.\n+\n+\t* config/h8300/coff.h: New file split out of...\n+\t* config/h8300/elf.h: ...here.\n+\t* config/m68k/hp320base.h: New file split out of...\n+\t* config/m68k/hp320.h: ...here.\n+\t* config/rs6000/lynxbase.h: New file split out of...\n+\t* config/rs6000/lynx.h: ...here.\n+\n+\t* config/m68k/hp310g.h, config/m68k/hp320g.h, config/m68k/hpux7.h\n+\t* config/m68k/m68k-coff.h, config/mips/openbsd-be.h: Delete file.\n+\n+\t* config/sol2.h: Remove #if 0-ed #include of sys/mman.h.\n+\t* config/m68k/m68kelf.h: Remove commented out #include of m68k/sgs.h.\n+\t* config/mcore/mcore.h: Don't include hwint.h nor machmode.h.\n+\tRemove unnecessary #ifndef.\n+\t* config/s390/s390.h: Prefix #include of s390/fixdfdi.h\n+\t[under IN_LIBGCC2] with config/.\n+\n 2003-08-21  Per Bothner  <bothner@pbothner.com>\n \n \t* cppfiles.c (stack_file):  Correctly pass return_at_eof parameter\n@@ -27,13 +78,13 @@\n \t* configure.in: When testing with_libs and with_headers, treat\n \t'no' as unset.  Based on a patch by Dan Kegel <dank@kegel.com>.\n \t* configure: Regenerate.\n-\t\n+\n 2003-08-20  Peter Barada <peter@baradas.org>\n \n \t* longlong.h (umul_ppmm): Add ColdFire support.\n \n 2003-08-20  Peter Barada <peter@baradas.org>\n-            Bernardo Innocenti  <bernie@develer.com>\n+\t    Bernardo Innocenti  <bernie@develer.com>\n \n \t* config/m68k/m68k-none.h: Introduce new ColdFire archs.\n \t* config/m68k/m68k.h: Likewise.\n@@ -115,15 +166,15 @@\n 2003-08-20  Jason Merrill  <jason@redhat.com>\n \n \t* builtins.c (expand_builtin_mathfn): Use get_callee_fndecl.\n-\t(expand_builtin_mathfn2, expand_builtin, builtin_mathfn_code, \n+\t(expand_builtin_mathfn2, expand_builtin, builtin_mathfn_code,\n \tfold_trunc_transparent_mathfn, fold_builtin): Likewise.\n \t* dojump.c (do_jump): Likewise.\n \t* fold-const.c (operand_equal_p, fold): Likewise.\n \t(tree_expr_nonnegative_p): Likewise.\n \n \t* stor-layout.c (do_type_align): Only copy DECL_USER_ALIGN from\n \tTYPE_USER_ALIGN for FIELD_DECLs.\n-\t\n+\n \t* attribs.c (decl_attributes): Rebuild the function pointer type after\n \tchanging the target type.\n \t* tree.c (get_qualified_type): Also check that the attributes match."}, {"sha": "38fe77bc3323dd3bb688966f5a8a96705f7d054c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -726,9 +726,8 @@ BUILD_VARRAY = $(BUILD_PREFIX)varray.o\n # currently being compiled, in both source trees, to be examined as well.\n # libintl.h will be found in ../intl if we are using the included libintl.\n INCLUDES = -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n-\t   -I$(srcdir)/config -I$(srcdir)/../include @INCINTL@\n+\t   -I$(srcdir)/../include @INCINTL@\n \n-# Always use -I$(srcdir)/config when compiling.\n .c.o:\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n "}, {"sha": "4dd37aa1dca49c57cb51adcc0867c2995fba6cd8", "filename": "gcc/config.gcc", "status": "modified", "additions": 70, "deletions": 58, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -412,7 +412,6 @@ case $machine in\n \tesac\n \t;;\n *-*-openbsd*)\n-\ttm_file=${cpu_type}/openbsd.h\n \ttmake_file=\"t-libc-ok t-openbsd t-libgcc-pic\"\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n@@ -578,7 +577,8 @@ alpha*-*-netbsd*)\n \t;;\n \n alpha*-*-openbsd*)\n-\ttm_file=\"${cpu_type}/${cpu_type}.h ${tm_file}\"\n+\ttm_defines=\"OBSD_NO_DYNAMIC_LIBRARIES OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_FUNCTION_SIZE OBSD_HAS_DECLARE_OBJECT\"\n+\ttm_file=\"alpha/alpha.h openbsd.h alpha/openbsd.h\"\n \t# default x-alpha is only appropriate for dec-osf.\n \ttarget_cpu_default=\"MASK_GAS\"\n \ttmake_file=\"alpha/t-alpha alpha/t-ieee\"\n@@ -659,7 +659,7 @@ arc-*-elf*)\n \textra_parts=\"crtinit.o crtfini.o\"\n \t;;\n arm-*-coff* | armel-*-coff*)\n-\ttm_file=\"arm/semi.h arm/aout.h arm/arm.h arm/coff.h\"\n+\ttm_file=\"arm/semi.h arm/aout.h arm/arm.h arm/coff.h dbxcoff.h\"\n \ttmake_file=arm/t-arm-coff\n \t;;\n arm-semi-aof | armel-semi-aof)\n@@ -711,12 +711,12 @@ arm*-*-elf | ep9312-*-elf)\n \ttmake_file=arm/t-arm-elf\n \t;;\n arm*-wince-pe*)\n-\ttm_file=\"arm/semi.h arm/aout.h arm/arm.h arm/coff.h arm/pe.h arm/wince-pe.h\"\n+\ttm_file=\"arm/semi.h arm/aout.h arm/arm.h arm/coff.h dbxcoff.h arm/pe.h arm/wince-pe.h\"\n \ttmake_file=arm/t-wince-pe\n \textra_objs=\"pe.o\"\n \t;;\n arm-*-pe*)\n-\ttm_file=\"arm/semi.h arm/aout.h arm/arm.h arm/coff.h arm/pe.h\"\n+\ttm_file=\"arm/semi.h arm/aout.h arm/arm.h arm/coff.h dbxcoff.h arm/pe.h\"\n \ttmake_file=arm/t-pe\n \textra_objs=\"pe.o\"\n \t;;\n@@ -725,6 +725,7 @@ arm*-*-kaos*)\n \ttmake_file=arm/t-arm-elf\n \t;;\n avr-*-*)\n+\ttm_file=\"avr/avr.h dbxelf.h\"\n \t;;\n c4x-*-rtems* | tic4x-*-rtems*)\n \ttmake_file=\"c4x/t-c4x t-rtems\"\n@@ -770,16 +771,17 @@ frv-*-elf)\n \t;;\n h8300-*-rtems*)\n \ttmake_file=\"h8300/t-h8300 t-rtems\"\n-\ttm_file=\"h8300/h8300.h h8300/rtems.h rtems.h\"\n+\ttm_file=\"h8300/h8300.h dbxcoff.h h8300/coff.h h8300/rtems.h rtems.h\"\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n \t;;\n h8300-*-elf*)\n \ttmake_file=\"h8300/t-h8300 h8300/t-elf\"\n-\ttm_file=\"h8300/h8300.h h8300/elf.h\"\n+\ttm_file=\"h8300/h8300.h dbxelf.h elfos.h h8300/elf.h\"\n \t;;\n h8300-*-*)\n+\ttm_file=\"h8300/h8300.h dbxcoff.h h8300/coff.h\"\n \t;;\n hppa*64*-*-linux* | parisc*64*-*-linux*)\n \ttarget_cpu_default=\"(MASK_PA_11 | MASK_PA_20)\"\n@@ -795,10 +797,11 @@ hppa*-*-linux* | parisc*-*-linux*)\n \t\t pa/pa32-regs.h pa/pa32-linux.h\"\n \ttmake_file=\"t-slibgcc-elf-ver t-linux pa/t-linux\"\n \t;;\n-hppa*-*-openbsd*)\n-\ttarget_cpu_default=\"MASK_PA_11\"\n-\ttmake_file=pa/t-bsd\n-\t;;\n+# port not yet contributed.\n+#hppa*-*-openbsd*)\n+#\ttarget_cpu_default=\"MASK_PA_11\"\n+#\ttmake_file=pa/t-bsd\n+#\t;;\n hppa1.1-*-pro*)\n \ttarget_cpu_default=\"(MASK_JUMP_IN_DELAY | MASK_PORTABLE_RUNTIME | MASK_GAS | MASK_NO_SPACE_REGS | MASK_SOFT_FLOAT)\"\n \ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h elfos.h pa/elf.h pa/pa-pro-end.h libgloss.h\"\n@@ -807,7 +810,7 @@ hppa1.1-*-pro*)\n \t;;\n hppa1.1-*-osf*)\n \ttarget_cpu_default=\"MASK_PA_11\"\n-\ttm_file=\"${tm_file} pa/pa32-regs.h pa/som.h pa/pa-osf.h\"\n+\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h pa/pa-osf.h\"\n \ttmake_file=\"pa/t-bsd pa/t-pa\"\n \txmake_file=\"pa/x-ada\"\n \tuse_collect2=yes\n@@ -822,15 +825,15 @@ hppa1.1-*-rtems*)\n \tfi\n \t;;\n hppa1.1-*-bsd*)\n-\ttm_file=\"${tm_file} pa/pa32-regs.h pa/som.h\"\n+\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h\"\n \ttarget_cpu_default=\"MASK_PA_11\"\n \ttmake_file=\"pa/t-bsd pa/t-pa\"\n \txmake_file=\"pa/x-ada\"\n \tuse_collect2=yes\n \t;;\n hppa1.1-*-hpux10* | hppa2*-*-hpux10*)\n \ttarget_cpu_default=\"MASK_PA_11\"\n-\ttm_file=\"${tm_file} pa/pa32-regs.h pa/long_double.h pa/som.h pa/pa-hpux.h pa/pa-hpux10.h\"\n+\ttm_file=\"${tm_file} pa/pa32-regs.h pa/long_double.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux10.h\"\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n \txmake_file=\"pa/x-ada\"\n \tif test x$enable_threads = x; then\n@@ -845,7 +848,7 @@ hppa1.1-*-hpux10* | hppa2*-*-hpux10*)\n \tuse_collect2=yes\n \t;;\n hppa1.0-*-hpux10*)\n-\ttm_file=\"${tm_file} pa/pa32-regs.h pa/long_double.h pa/som.h pa/pa-hpux.h pa/pa-hpux10.h\"\n+\ttm_file=\"${tm_file} pa/pa32-regs.h pa/long_double.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux10.h\"\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n \txmake_file=\"pa/x-ada\"\n \tif test x$enable_threads = x; then\n@@ -890,7 +893,7 @@ hppa*64*-*-hpux11*)\n \t;;\n hppa1.1-*-hpux11* | hppa2*-*-hpux11*)\n \ttarget_cpu_default=\"MASK_PA_11\"\n-\ttm_file=\"${tm_file} pa/pa32-regs.h pa/long_double.h pa/som.h pa/pa-hpux.h pa/pa-hpux11.h\"\n+\ttm_file=\"${tm_file} pa/pa32-regs.h pa/long_double.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux11.h\"\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n \txmake_file=\"pa/x-ada\"\n #\tif test x$enable_threads = x; then\n@@ -904,7 +907,7 @@ hppa1.1-*-hpux11* | hppa2*-*-hpux11*)\n \tuse_collect2=yes\n \t;;\n hppa1.0-*-hpux11*)\n-\ttm_file=\"${tm_file} pa/pa32-regs.h pa/long_double.h pa/som.h pa/pa-hpux.h pa/pa-hpux11.h\"\n+\ttm_file=\"${tm_file} pa/pa32-regs.h pa/long_double.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux11.h\"\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n \txmake_file=\"pa/x-ada\"\n #\tif test x$enable_threads = x; then\n@@ -919,20 +922,20 @@ hppa1.0-*-hpux11*)\n \t;;\n i370-*-opened*)\t\t\t # IBM 360/370/390 Architecture\n \txm_defines='FATAL_EXIT_CODE=12'\n-\ttm_file=i370/oe.h\n+\ttm_file=\"i370/oe.h i370/i370.h\"\n \ttmake_file=\"i370/t-oe i370/t-i370\"\n \tc_target_objs=\"i370-c.o\"\n \tcxx_target_objs=\"i370-c.o\"\n \t;;\n i370-*-mvs*)\n \txm_defines='FATAL_EXIT_CODE=12'\n-\ttm_file=i370/mvs.h\n+\ttm_file=\"i370/mvs.h i370/i370.h\"\n \ttmake_file=\"i370/t-i370\"\n \tc_target_objs=\"i370-c.o\"\n \tcxx_target_objs=\"i370-c.o\"\n \t;;\n i370-*-linux*)\n-\ttm_file=\"dbxelf.h elfos.h svr4.h linux.h i370/linux.h ${tm_file}\"\n+\ttm_file=\"dbxelf.h elfos.h svr4.h linux.h i370/linux.h i370/i370.h\"\n \ttmake_file=\"t-slibgcc-elf-ver t-linux\"\n \t# broken_install=yes\n \telf=yes\n@@ -996,7 +999,7 @@ x86_64-*-netbsd*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h netbsd.h netbsd-elf.h i386/x86-64.h i386/netbsd64.h\"\n \t;;\n i[34567]86-*-openbsd*)\n-\ttm_file=\"${cpu_type}/${cpu_type}.h i386/unix.h i386/bsd.h i386/gas.h i386/gstabs.h openbsd-oldgas.h openbsd.h ${tm_file}\"\n+\ttm_file=\"i386/i386.h i386/unix.h i386/bsd.h i386/gas.h i386/gstabs.h openbsd-oldgas.h openbsd.h i386/openbsd.h\"\n \t# needed to unconfuse gdb\n \ttmake_file=\"t-libc-ok t-openbsd i386/t-openbsd\"\n \t# we need collect2 until our bug is fixed...\n@@ -1056,7 +1059,7 @@ i[34567]86-moss-msdos* | i[34567]86-*-moss*)\n i[34567]86-*-lynxos*)\n \tif test x$gas = xyes\n \tthen\n-\t\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/gstabs.h lynx.h i386/lynx.h\"\n+\t\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/gstabs.h svr3.h lynx.h i386/lynx.h\"\n \telse\n \t\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/gstabs.h lynx-ng.h i386/lynx-ng.h\"\n \tfi\n@@ -1067,7 +1070,7 @@ i[34567]86-*-mach*)\n \tuse_collect2=yes\n \t;;\n i[34567]86-*-nto-qnx*)\n-\ttm_file=\"${tm_file} i386/att.h dbxelf.h tm-dwarf2.h elfos.h svr4.h i386/nto.h\"\n+\ttm_file=\"${tm_file} i386/att.h dbxelf.h tm-dwarf2.h elfos.h svr4.h i386/unix.h i386/nto.h\"\n \ttmake_file=i386/t-nto\n \tgnu_ld=yes\n \tgas=yes\n@@ -1297,7 +1300,7 @@ ip2k-*-elf)\n \ttm_file=\"elfos.h ${tm_file}\"\n \t;;\n iq2000*-*-elf*)\n-        tm_file=\"iq2000/iq2000.h\"\n+        tm_file=\"svr4.h elfos.h iq2000/iq2000.h\"\n         tmake_file=iq2000/t-iq2000\n         out_file=iq2000/iq2000.c\n         md_file=iq2000/iq2000.md\n@@ -1322,46 +1325,47 @@ m68hc12-*-*|m6812-*-*)\n \ttmake_file=\"m68hc11/t-m68hc11-gas\"\n         ;;\n m68000-hp-hpux*)\t\t# HP 9000 series 300\n+\ttm_file=\"m68k/hp320base.h m68k/m68k.h m68k/hp320.h m68k/hp310.h\"\n+\ttm_defines=\"TARGET_DEFAULT=0\" # 68000, no 68881, no bitfield ops\n \tif test x$gas = xyes\n \tthen\n-\t\ttm_file=m68k/hp310g.h\n-\telse\n-\t\ttm_file=m68k/hp310.h\n+\t\ttm_defines=\"${tm_defines} DBX_DEBUGGING_INFO=1 USE_GAS\"\n \tfi\n \ttmake_file=m68k/t-hp320\n \tinstall_headers_dir=install-headers-cpio\n \tuse_collect2=yes\n \t;;\n m68k-hp-hpux7*)\t# HP 9000 series 300 running HPUX version 7.\n+\ttm_file=\"m68k/hp320base.h m68k/m68k.h m68k/hp320.h\"\n \tif test x$gas = xyes\n \tthen\n-\t\ttm_file=m68k/hp320g.h\n+\t\ttm_defines=\"DBX_DEBUGGING_INFO=1 USE_GAS\"\n \telse\n-\t\ttm_file=m68k/hpux7.h\n+\t\ttm_defines=\"NO_DOT_IN_LABEL NO_BUGS\"\n \tfi\n \tinstall_headers_dir=install-headers-cpio\n \tuse_collect2=yes\n \t;;\n m68k-hp-hpux*)\t# HP 9000 series 300\n+\ttm_file=\"m68k/hp320base.h m68k/m68k.h m68k/hp320.h\"\n \tif test x$gas = xyes\n \tthen\n-\t\ttm_file=m68k/hp320g.h\n-\telse\n-\t\ttm_file=m68k/hp320.h\n+\t\ttm_defines=\"DBX_DEBUGGING_INFO=1 USE_GAS\"\n \tfi\n \tinstall_headers_dir=install-headers-cpio\n \tuse_collect2=yes\n \t;;\n m68k-*-aout*)\n \ttmake_file=m68k/t-m68kbare\n-\ttm_file=\"m68k/m68k-aout.h libgloss.h\"\n+\ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kemb.h m68k/m68k-aout.h libgloss.h\"\n \t;;\n m68k-*-coff*)\n \ttmake_file=m68k/t-m68kbare\n-\ttm_file=\"m68k/m68k-coff.h dbx.h\"\n+\ttm_defines=\"MOTOROLA USE_GAS\"\n+\ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kemb.h dbxcoff.h m68k/coff.h dbx.h\"\n \t;;\n m68020-*-elf* | m68k-*-elf*)\n-\ttm_file=\"m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h\"\n+\ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h\"\n \ttmake_file=m68k/t-m68kelf\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n@@ -1377,31 +1381,35 @@ m68010-*-netbsdelf* | m68k*-*-netbsdelf*)\n \tesac\n \t;;\n m68k*-*-netbsd*)\n-\ttm_file=m68k/netbsd.h\n+\ttm_file=\"m68k/m68k.h netbsd.h netbsd-aout.h m68k/netbsd.h\"\n \ttmake_file=t-netbsd\n \textra_parts=\"\"\n \tuse_collect2=yes\n \t;;\n m68k*-*-openbsd*)\n \t# needed to unconfuse gdb\n+\ttm_defines=\"OBSD_OLD_GAS TARGET_DEFAULT=(MASK_68020|MASK_68881|MASK_BITFIELD)\"\n+\ttm_file=\"m68k/m68k.h openbsd.h m68k/openbsd.h\"\n \ttmake_file=\"t-libc-ok t-openbsd m68k/t-openbsd\"\n \t# we need collect2 until our bug is fixed...\n \tuse_collect2=yes\n \t;;\n m68k-*-sysv4*)\t\t\t# Motorola m68k's running system V.4\n-\ttm_file=m68k/m68kv4.h\n+\ttm_file=\"m68k/m68k.h m68k/sgs.h dbxelf.h elfos.h svr4.h m68k/m68kv4.h\"\n+\ttm_defines=\"MOTOROLA SGS SGS_CMP_ORDER SGS_SWITCH_TABLES\"\n \ttmake_file=t-svr4\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n m68k-*-linux*)\t\t# Motorola m68k's running GNU/Linux\n \t\t\t\t# with ELF format using glibc 2\n \t\t\t\t# aka the GNU/Linux C library 6.\n-\ttm_file=m68k/linux.h\n+\ttm_file=\"m68k/m68k.h dbxelf.h elfos.h svr4.h linux.h m68k/linux.h\"\n+\ttm_defines=\"MOTOROLA USE_GAS LINUX_DEFAULT_ELF\"\n \ttmake_file=\"t-slibgcc-elf-ver t-linux\"\n \t;;\n m68k-*-rtems*)\n \ttmake_file=\"m68k/t-m68kbare t-rtems m68k/t-crtstuff\"\n-\ttm_file=\"m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h m68k/rtemself.h rtems.h\"\n+\ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h m68k/rtemself.h rtems.h\"\n \textra_parts=\"crtbegin.o crtend.o\"\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n@@ -1412,7 +1420,7 @@ mcore-*-elf)\n \ttmake_file=mcore/t-mcore\n \t;;\n mcore-*-pe*)\n-\ttm_file=mcore/mcore-pe.h\n+\ttm_file=\"svr3.h dbxcoff.h ${tm_file} mcore/mcore-pe.h\"\n \ttmake_file=mcore/t-mcore-pe\n \t;;\n mips-sgi-irix6*o32)\t\t# SGI System V.4., IRIX 6, O32 ABI\n@@ -1490,7 +1498,7 @@ mips-sgi-irix5*)\t\t# SGI System V.4., IRIX 5\n \t;;\n mips*-*-netbsd*)\t\t\t# NetBSD/mips, either endian.\n \ttarget_cpu_default=\"MASK_GAS|MASK_ABICALLS\"\n-\ttm_file=\"elfos.h ${tm_file} mips/netbsd.h\"\n+\ttm_file=\"elfos.h ${tm_file} mips/elf.h netbsd.h netbsd-elf.h mips/netbsd.h\"\n \ttmake_file=\"${tmake_file}\"\n \t;;\n mips64*-*-linux*)\n@@ -1521,13 +1529,15 @@ mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n         esac\n \ttmake_file=\"t-slibgcc-elf-ver t-linux\"\n \t;;\n-mips*el-*-openbsd*)\t# mips little endian\n-\ttarget_cpu_default=\"MASK_GAS|MASK_ABICALLS\"\n-\ttm_file=\"${tm_file} mips/sdb.h\"\n-\t;;\n-mips*-*-openbsd*)\t\t# mips big endian\n+mips*-*-openbsd*)\n+\ttm_defines=\"OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_OBJECT OBSD_HAS_CORRECT_SPECS\"\n \ttarget_cpu_default=\"MASK_GAS|MASK_ABICALLS\"\n-\ttm_file=\"mips/openbsd-be.h ${tm_file} mips/sdb.h\"\n+\ttm_file=\"mips/mips.h openbsd.h mips/openbsd.h mips/sdb.h\"\n+\tcase $machine in\n+\tmips*el-*-openbsd*) \n+\t    tm_defines=\"${tm_defines} TARGET_ENDIAN_DEFAULT=0\";;\n+\t*)  tm_defines=\"${tm_defines} TARGET_ENDIAN_DEFAULT=MASK_BIG_ENDIAN\";;\n+        esac\n \t;;\n mipsisa32-*-elf* | mipsisa32el-*-elf*)\n \ttm_file=\"${tm_file} mips/elf.h\"\n@@ -1618,10 +1628,11 @@ pdp11-*-*)\n \t;;\n avr-*-*)\n \t;;\n-powerpc-*-openbsd*)\n-\ttmake_file=\"${tmake_file} rs6000/t-fprules \"\n-\textra_headers=\n-\t;;\n+# port not yet contributed\n+#powerpc-*-openbsd*)\n+#\ttmake_file=\"${tmake_file} rs6000/t-fprules \"\n+#\textra_headers=\n+#\t;;\n powerpc64-*-linux*)\n \ttm_file=\"rs6000/biarch64.h ${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h\"\n \tcase x$with_cpu in\n@@ -1788,7 +1799,7 @@ rs6000-ibm-aix[56789].* | powerpc-ibm-aix[56789].*)\n \textra_headers=\n \t;;\n rs6000-*-lynxos*)\n-\ttm_file=\"lynx.h rs6000/lynx.h\"\n+\ttm_file=\"svr3.h lynx.h rs6000/lynxbase.h rs6000/rs6000.h rs6000/lynx.h\"\n \ttmake_file=rs6000/t-fprules\n \tuse_collect2=yes\n \t;;\n@@ -1812,7 +1823,7 @@ sh-*-elf* | sh[2346l]*-*-elf* | sh*-*-kaos*)\n \t\ttmake_file=\"${tmake_file} sh/t-le\"\n \t\t;;\n \tesac\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sh/embed-elf.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sh/elf.h sh/embed-elf.h\"\n \tcase $machine in\n \tsh64*)\n \t\ttmake_file=\"${tmake_file} sh/t-sh64\"\n@@ -1835,7 +1846,7 @@ sh-*-elf* | sh[2346l]*-*-elf* | sh*-*-kaos*)\n \t;;\n sh-*-rtemself*)\n \ttmake_file=\"sh/t-sh sh/t-elf t-rtems\"\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sh/embed-elf.h sh/rtemself.h rtems.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sh/elf.h sh/embed-elf.h sh/rtemself.h rtems.h\"\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n@@ -1920,7 +1931,8 @@ sparc-*-netbsdelf*)\n \ttm_file=\"${tm_file} elfos.h svr4.h sparc/sysv4.h netbsd.h netbsd-elf.h sparc/netbsd-elf.h\"\n \t;;\n sparc-*-openbsd*)\n-\ttm_file=\"sparc/sparc.h ${tm_file}\"\n+\ttm_defines=OBSD_OLD_GAS\n+\ttm_file=\"sparc/sparc.h openbsd.h sparc/openbsd.h\"\n \t# needed to unconfuse gdb\n \ttmake_file=\"t-libc-ok t-openbsd sparc/t-openbsd\"\n \t# we need collect2 until our bug is fixed...\n@@ -2077,7 +2089,7 @@ strongarm-*-elf*)\n \textra_modes=arm/arm-modes.def\n \t;;\n strongarm-*-pe)\n-\ttm_file=\"arm/semi.h arm/aout.h arm/coff.h arm/strongarm-coff.h arm/arm.h arm/pe.h arm/strongarm-pe.h\"\n+\ttm_file=\"arm/semi.h arm/aout.h arm/coff.h dbxcoff.h arm/strongarm-coff.h arm/arm.h arm/pe.h arm/strongarm-pe.h\"\n \ttmake_file=arm/t-strongarm-pe\n \tout_file=arm/arm.c\n \tmd_file=arm/arm.md\n@@ -2135,7 +2147,7 @@ vax-*-netbsd*)\n \tuse_collect2=yes\n \t;;\n vax-*-openbsd*)\n-\ttm_file=\"vax/vax.h vax/openbsd1.h openbsd.h ${tm_file}\"\n+\ttm_file=\"vax/vax.h vax/openbsd1.h openbsd.h vax/openbsd.h\"\n \tuse_collect2=yes\n \t;;\n vax-*-ultrix*)\t\t\t# VAXen running ultrix\n@@ -2155,7 +2167,7 @@ xscale-*-elf)\n \textra_modes=arm/arm-modes.def\n \t;;\n xscale-*-coff)\n-\ttm_file=\"arm/semi.h arm/aout.h arm/coff.h arm/xscale-coff.h arm/arm.h\"\n+\ttm_file=\"arm/semi.h arm/aout.h arm/coff.h dbxcoff.h arm/xscale-coff.h arm/arm.h\"\n \ttmake_file=arm/t-xscale-coff\n \tout_file=arm/arm.c\n \tmd_file=arm/arm.md"}, {"sha": "fa9a5111173b558c618dfbd57739d239f573731c", "filename": "gcc/config/alpha/openbsd.h", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Falpha%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Falpha%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fopenbsd.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,5 @@\n /* Configuration file for an alpha OpenBSD target.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -21,16 +21,6 @@ Boston, MA 02111-1307, USA.  */\n /* We settle for little endian for now.  */\n #define TARGET_ENDIAN_DEFAULT 0\n \n-#define OBSD_NO_DYNAMIC_LIBRARIES\n-#define OBSD_HAS_DECLARE_FUNCTION_NAME\n-#define OBSD_HAS_DECLARE_FUNCTION_SIZE\n-#define OBSD_HAS_DECLARE_OBJECT\n-\n-/* alpha ecoff supports only weak aliases, see below.  */\n-#define ASM_WEAKEN_LABEL(FILE,NAME) ASM_OUTPUT_WEAK_ALIAS (FILE,NAME,0)\n-\n-#include <openbsd.h>\n-\n /* Controlling the compilation driver.  */\n \n /* alpha needs __start.  */\n@@ -90,6 +80,10 @@ Boston, MA 02111-1307, USA.  */\n \n /* Assembler format: label output.  */\n \n+/* alpha ecoff supports only weak aliases.  */\n+#undef ASM_WEAKEN_LABEL\n+#define ASM_WEAKEN_LABEL(FILE,NAME) ASM_OUTPUT_WEAK_ALIAS (FILE,NAME,0)\n+\n #define ASM_OUTPUT_WEAK_ALIAS(FILE,NAME,VALUE)\t\\\n  do {\t\t\t\t\t\t\\\n   fputs (\"\\t.weakext\\t\", FILE);\t\t\t\\"}, {"sha": "310c4fba8ec0b9f6a8af88063afb725df8bf124b", "filename": "gcc/config/arm/coff.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Farm%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Farm%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcoff.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    For ARM with COFF object format.\n-   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2002\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003\n    Free Software Foundation, Inc.\n    Contributed by Doug Evans (devans@cygnus.com).\n    \n@@ -43,7 +43,6 @@\n \n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n \n-#include \"dbxcoff.h\"\n \f\n #define TARGET_ASM_FILE_START_APP_OFF true\n "}, {"sha": "e2063c7abde28be5fdb2e6fe9a73701a42b58138", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -2499,6 +2499,3 @@ extern struct rtx_def *zero_reg_rtx;\n extern struct rtx_def *ldi_reg_rtx;\n \n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n-\n-/* Get the standard ELF stabs definitions.  */\n-#include \"dbxelf.h\""}, {"sha": "feadc791b9cdee62117caeb4027774871e789d83", "filename": "gcc/config/frv/frv.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Ffrv%2Ffrv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Ffrv%2Ffrv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,5 @@\n /* Target macros for the FRV port of GCC.\n-   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by Red Hat Inc.\n \n    This file is part of GCC.\n@@ -22,10 +22,6 @@\n #ifndef __FRV_H__\n #define __FRV_H__\n \n-/* Set up System V.4 (aka ELF) defaults.  */\n-#include \"svr4.h\"\n-\n-\f\n /* Frv general purpose macros.  */\n /* Align an address.  */\n #define ADDR_ALIGN(addr,align) (((addr) + (align) - 1) & ~((align) - 1))"}, {"sha": "7b56a494ac6d2f54d83a877040c81c58622ff249", "filename": "gcc/config/h8300/coff.h", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fh8300%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fh8300%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fcoff.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -0,0 +1,56 @@\n+/* Definitions of target machine for GNU compiler.\n+   Hitachi H8/300 version generating coff\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Contributed by Steve Chamberlain (sac@cygnus.com),\n+   Jim Wilson (wilson@cygnus.com), and Doug Evans (dje@cygnus.com).\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#ifndef GCC_H8300_COFF_H\n+#define GCC_H8300_COFF_H\n+\n+#define SDB_DEBUGGING_INFO 1\n+#define SDB_DELIM\t\"\\n\"\n+\n+/* Override definition in dbxcoff.h.  */\n+/* Generate a blank trailing N_SO to mark the end of the .o file, since\n+   we can't depend upon the linker to mark .o file boundaries with\n+   embedded stabs.  */\n+\n+#undef DBX_OUTPUT_MAIN_SOURCE_FILE_END\n+#define DBX_OUTPUT_MAIN_SOURCE_FILE_END(FILE, FILENAME)\t\t\t\\\n+  fprintf (FILE,\t\t\t\t\t\t\t\\\n+\t   \"\\t.text\\n.stabs \\\"\\\",%d,0,0,.Letext\\n.Letext:\\n\", N_SO)\n+\n+/* This is how to output an assembler line\n+   that says to advance the location counter by SIZE bytes.  */\n+\n+#define ASM_OUTPUT_IDENT(FILE, NAME)\t\t\t\\\n+  fprintf (FILE, \"%s\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME)\n+\n+#define IDENT_ASM_OP \"\\t.ident\\t\"\n+#define INIT_SECTION_ASM_OP \"\\t.section .init\"\n+#define READONLY_DATA_SECTION_ASM_OP \"\\t.section .rodata\"\n+\n+/* Switch into a generic section.  */\n+#define TARGET_ASM_NAMED_SECTION h8300_asm_named_section\n+\n+/* A bit-field declared as `int' forces `int' alignment for the struct.  */\n+#define PCC_BITFIELD_TYPE_MATTERS  0\n+\n+#endif /* h8300/coff.h */"}, {"sha": "bae8c265040e50211c92ea8e27df1a546bbec175", "filename": "gcc/config/h8300/elf.h", "status": "modified", "additions": 26, "deletions": 21, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fh8300%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fh8300%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Felf.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,25 +1,28 @@\n-/* Undefine some macros defined in h8300 that conflict with elfos.h .  */\n-#undef SDB_DEBUGGING_INFO\n-#undef DBX_DEBUGGING_INFO\n-#undef ASM_OUTPUT_IDENT\n-#undef IDENT_ASM_OP\n-#undef CTORS_SECTION_ASM_OP\n-#undef DTORS_SECTION_ASM_OP\n-#undef INIT_SECTION_ASM_OP\n-#undef READONLY_DATA_SECTION_ASM_OP\n-#undef TARGET_ASM_NAMED_SECTION\n-#undef TARGET_MEM_FUNCTIONS\n-#undef PREFERRED_DEBUGGING_TYPE\n-/* ??? h8300.h defines PCC_BITFIELD_TYPE_MATTERS to 0, but it\n-   doesn't define STRUCTURE_SIZE_BOUNDARY, nor does h8300.md\n-   have a full set of bit field instructions.  */\n-#undef PCC_BITFIELD_TYPE_MATTERS\n-\n-#define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n-\n-#include \"dbxelf.h\"\n-#include \"elfos.h\"\n+/* Definitions of target machine for GNU compiler.\n+   Hitachi H8/300 version generating elf\n+   Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Contributed by Steve Chamberlain (sac@cygnus.com),\n+   Jim Wilson (wilson@cygnus.com), and Doug Evans (dje@cygnus.com).\n \n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#ifndef GCC_H8300_ELF_H\n+#define GCC_H8300_ELF_H\n \n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \"crtend.o%s %{pg:gcrtn.o%s}%{!pg:crtn.o%s}\"\n@@ -38,3 +41,5 @@\n \n #undef LINK_SPEC\n #define LINK_SPEC \"%{mh:%{mn:-m h8300hnelf}} %{mh:%{!mn:-m h8300helf}} %{ms:%{mn:-m h8300snelf}} %{ms:%{!mn:-m h8300self}}\"\n+\n+#endif /* h8300/elf.h */"}, {"sha": "8e5e96e0e2a2b6dec3b201c38d80e359dbb7d348", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 2, "deletions": 34, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.\n-   Hitachi H8/300 version generating coff\n+   Hitachi H8/300 (generic)\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1996, 1997, 1998, 1999,\n    2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com),\n@@ -257,9 +257,6 @@ extern int target_flags;\n    structure layouts.  */\n #define EMPTY_FIELD_BOUNDARY 16\n \n-/* A bit-field declared as `int' forces `int' alignment for the struct.  */\n-#define PCC_BITFIELD_TYPE_MATTERS  0\n-\n /* No data type wants to be aligned rounder than this.\n    32 bit values are aligned as such on the H8/300H and H8S for speed.  */\n #define BIGGEST_ALIGNMENT \\\n@@ -1038,7 +1035,6 @@ struct cum_arg\n #define ASM_APP_OFF \"; #NO_APP\\n\"\n \n #define FILE_ASM_OP \"\\t.file\\n\"\n-#define IDENT_ASM_OP \"\\t.ident\\t\"\n \n /* The assembler op to get a word, 2 bytes for the H8/300, 4 for H8/300H.  */\n #define ASM_WORD_OP\t\t\t\t\t\t\t\\\n@@ -1047,8 +1043,6 @@ struct cum_arg\n #define TEXT_SECTION_ASM_OP \"\\t.section .text\"\n #define DATA_SECTION_ASM_OP \"\\t.section .data\"\n #define BSS_SECTION_ASM_OP \"\\t.section .bss\"\n-#define INIT_SECTION_ASM_OP \"\\t.section .init\"\n-#define READONLY_DATA_SECTION_ASM_OP \"\\t.section .rodata\"\n \n #undef DO_GLOBAL_CTORS_BODY\n #define DO_GLOBAL_CTORS_BODY\t\t\t\\\n@@ -1086,26 +1080,6 @@ struct cum_arg\n { {\"er0\", 0}, {\"er1\", 1}, {\"er2\", 2}, {\"er3\", 3}, {\"er4\", 4}, \\\n   {\"er5\", 5}, {\"er6\", 6}, {\"er7\", 7}, {\"r7\", 7} }\n \n-#define SDB_DEBUGGING_INFO 1\n-#define SDB_DELIM\t\"\\n\"\n-\n-/* Support -gstabs.  */\n-\n-#include \"dbxcoff.h\"\n-\n-/* Override definition in dbxcoff.h.  */\n-/* Generate a blank trailing N_SO to mark the end of the .o file, since\n-   we can't depend upon the linker to mark .o file boundaries with\n-   embedded stabs.  */\n-\n-#undef DBX_OUTPUT_MAIN_SOURCE_FILE_END\n-#define DBX_OUTPUT_MAIN_SOURCE_FILE_END(FILE, FILENAME)\t\t\t\\\n-  fprintf (FILE,\t\t\t\t\t\t\t\\\n-\t   \"\\t.text\\n.stabs \\\"\\\",%d,0,0,.Letext\\n.Letext:\\n\", N_SO)\n-\n-/* Switch into a generic section.  */\n-#define TARGET_ASM_NAMED_SECTION h8300_asm_named_section\n-\n #define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\n \n /* Globalizing directive for a label.  */\n@@ -1158,12 +1132,6 @@ struct cum_arg\n   if ((LOG) != 0)\t\t\t\t\\\n     fprintf (FILE, \"\\t.align %d\\n\", (LOG))\n \n-/* This is how to output an assembler line\n-   that says to advance the location counter by SIZE bytes.  */\n-\n-#define ASM_OUTPUT_IDENT(FILE, NAME)\t\t\t\\\n-  fprintf (FILE, \"%s\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME)\n-\n #define ASM_OUTPUT_SKIP(FILE, SIZE) \\\n   fprintf (FILE, \"\\t.space %d\\n\", (int)(SIZE))\n \n@@ -1221,7 +1189,7 @@ struct cum_arg\n    (and ANSI C) library functions `memcpy' and `memset' rather than\n    the BSD functions `bcopy' and `bzero'.  */\n \n-#define TARGET_MEM_FUNCTIONS 1\n+#define TARGET_MEM_FUNCTIONS\n \n #define MULHI3_LIBCALL\t\"__mulhi3\"\n #define DIVHI3_LIBCALL\t\"__divhi3\""}, {"sha": "abf1a021819129d3223e1742bbe27928b26f3feb", "filename": "gcc/config/i370/linux.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fi370%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fi370%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Flinux.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,6 @@\n /* Definitions of target machine for GNU compiler.  System/370 version.\n-   Copyright (C) 1989, 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1995, 1996, 1997, 2003\n+   Free Software Foundation, Inc.\n    Contributed by Jan Stein (jan@cd.chalmers.se).\n    Modified for Linux/390 by Linas Vepstas (linas@linas.org)\n \n@@ -28,10 +29,6 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_ELF_ABI\n #define LINUX_DEFAULT_ELF\n \n-/* Include system common definitions */\n-/* TODO: convert include to ${tm_file} list in config.gcc.  */\n-#include \"i370/i370.h\"\n-\n /* Target OS preprocessor built-ins.  */\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n     do {\t\t\t\t\t\\"}, {"sha": "0b8a374375fbf6993d8f50aae7a9090708b557df", "filename": "gcc/config/i370/mvs.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fi370%2Fmvs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fi370%2Fmvs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fmvs.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,6 @@\n /* Definitions of target machine for GNU compiler.  System/370 version.\n-   Copyright (C) 1989, 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1995, 1996, 1997, 2003\n+   Free Software Foundation, Inc.\n    Contributed by Jan Stein (jan@cd.chalmers.se).\n    Modified for OS/390 LanguageEnvironment C by Dave Pitts (dpitts@cozx.com)\n \n@@ -46,8 +47,3 @@ Boston, MA 02111-1307, USA.  */\n #else\n # define MAYBE_LE370_MACROS()\n #endif\n-\n-/* Include system common definitions */\n-\n-#include \"config/i370/i370.h\"\n-"}, {"sha": "9d36ea9bbf5223c27454de4362fe8036fa8f8dd6", "filename": "gcc/config/i370/oe.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fi370%2Foe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fi370%2Foe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Foe.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,6 @@\n /* Definitions of target machine for GNU compiler.  System/370 version.\n-   Copyright (C) 1989, 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1995, 1996, 1997, 2003\n+   Free Software Foundation, Inc.\n    Contributed by Jan Stein (jan@cd.chalmers.se).\n    Modified for OS/390 OpenEdition by Dave Pitts (dpitts@cozx.com)\n \n@@ -50,7 +51,3 @@ Boston, MA 02111-1307, USA.  */\n \tbuiltin_assert (\"system=unix\");\t\t\\\n     } while (0)\n \n-/* Include system common definitions */\n-\n-#include \"config/i370/i370.h\"\n-"}, {"sha": "db60ad6ab08be6a9324668b6cf5ea44e9b497dda", "filename": "gcc/config/i386/nto.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fi386%2Fnto.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fi386%2Fnto.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnto.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel 386 running QNX/Neutrino.\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -18,8 +18,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"i386/unix.h\"\n-\n #undef  DEFAULT_PCC_STRUCT_RETURN\n #define DEFAULT_PCC_STRUCT_RETURN 1\n "}, {"sha": "4361c28f0986a32092004ce1f42d775edc2961a5", "filename": "gcc/config/iq2000/iq2000.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fiq2000%2Fiq2000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fiq2000%2Fiq2000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -19,11 +19,6 @@\n    Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    02111-1307, USA.  */\n \n-/* Set up System V.4 (aka ELF) defaults.  */\n-#include \"svr4.h\"\n-#include \"elfos.h\"\n-\n-\f\n /* Driver configuration.  */\n \n #undef SWITCH_TAKES_ARG"}, {"sha": "a2366d106da3df539ac8b1634748d79798e2c75e", "filename": "gcc/config/lynx.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flynx.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,5 @@\n /* Target independent definitions for LynxOS using gas and gnu ld.\n-   Copyright (C) 1993, 1994, 1995, 1996, 1999, 2000, 2002\n+   Copyright (C) 1993, 1994, 1995, 1996, 1999, 2000, 2002, 2003\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -19,10 +19,7 @@ along with GCC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* LynxOS is a multi-platform Unix, similar to SVR3, but not identical.\n-   We can get quite a bit from generic svr3, but have to do some overrides.  */\n-\n-#include \"svr3.h\"\n+/* LynxOS is a multi-platform Unix, similar to SVR3, but not identical.  */\n \n /* Define various macros, depending on the combination of flags.  */\n "}, {"sha": "0f199cf08b2abeb109a7b9e1dc8a93170f03e586", "filename": "gcc/config/m68k/coff.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fcoff.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -26,10 +26,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define SDB_DEBUGGING_INFO 1\n \n-/* Output DBX (stabs) debugging information if using -gstabs.  */\n-\n-#include \"dbxcoff.h\"\n-\n /* COFF symbols don't start with an underscore.  */\n \n #undef USER_LABEL_PREFIX"}, {"sha": "1abbeaeddc9210d15113b67bf16e5920a4e9ce05", "filename": "gcc/config/m68k/hp310.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fhp310.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fhp310.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp310.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,10 +1,5 @@\n /* Definitions of target machine for GNU compiler.  HP-UX 68010 version.  */\n \n-/* See m68k.h.  0 means 68000 without 68881 and no bitfields.  */\n-#define\tTARGET_DEFAULT 0\n-\n-#include \"m68k/hp320.h\"\n-\n /* Don't try using XFmode.  */\n #undef LONG_DOUBLE_TYPE_SIZE\n #define LONG_DOUBLE_TYPE_SIZE 64"}, {"sha": "d5c543eb3b299b4ccfba12836478670c662309d0", "filename": "gcc/config/m68k/hp310g.h", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fconfig%2Fm68k%2Fhp310g.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fconfig%2Fm68k%2Fhp310g.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp310g.h?ref=ac650a0a320c369bfc1788e9579dc102576ddc50", "patch": "@@ -1,12 +0,0 @@\n-/* Definitions of target machine for GNU compiler.  HP-UX 68010 version.\n-   Use this file if GCC is supposed to work with the GNU assembler,\n-   GNU linker and GNU debugger using DBX debugging information.\n-   (In other words, much of HPUX has been cast aside.)  */\n-\n-/* This wants DBX format.  */\n-\n-#define DBX_DEBUGGING_INFO 1\n-\n-#define USE_GAS\n-\n-#include \"m68k/hp310.h\""}, {"sha": "3f09240ce3b466a96b95c626742de5639e714ebf", "filename": "gcc/config/m68k/hp320.h", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fhp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fhp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  HP-UX 68000/68020 version.\n-   Copyright (C) 1987, 1988, 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2002\n+   Copyright (C) 1987, 1988, 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2002, 2003\n    Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -19,34 +19,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* Define USE_GAS if GCC is supposed to work with the GNU assembler,\n-   GNU linker and GNU debugger using DBX debugging information.\n-   (In other words, much of HPUX has been cast aside.)\n-   Undefine USE_GAS if you want GCC to feed the HP assembler.  */\n-\n-/* #define USE_GAS */  /* Use hp320g.h if you want this.  */\n-\n-/* Control assembler-syntax conditionals in m68k.md.  */\n-\n-#ifndef USE_GAS\n-#define MOTOROLA\t\t/* Use Motorola syntax rather than \"MIT\" */\n-#define SGS\t\t\t/* Uses SGS assembler */\n-#define SGS_CMP_ORDER\t\t/* Takes cmp operands in reverse order */\n-#define HPUX_ASM\n-\n-#if !defined (CROSS_COMPILE) && !defined (NO_BUGS)\n-/* The assembler on HP 9k3xx machines running HPUX 8.0 doesn't translate\n-   floating point constants behind some operands.  The workaround is to\n-   use hex constants.  Reported by Thomas Nau (nau@medizin.uni-ulm.de).  */\n-#define AS_BUG_FLOATING_CONSTANT\n-/* The assembler on HP 9k3xx machines running HPUX 8.0 doesn't accept\n-   labels followed by a text, data, or other section directive.  Reported\n-   by Thomas Nau (nau@medizin.uni-ulm.de).  */\n-#define AS_BUG_TRAILING_LABEL\n-#endif\n-\n-#endif /* not USE_GAS */\n-\n /* gcc.c should find libgcc.a itself rather than expecting linker to.  */\n #define LINK_LIBGCC_SPECIAL\n /* The arguments of -L must be a separate argv element.  */\n@@ -57,8 +29,6 @@ Boston, MA 02111-1307, USA.  */\n /* Be compatible with system stddef.h.  */\n #define SIZE_TYPE \"unsigned int\"\n \n-#include \"m68k/m68k.h\"\n-\n #undef INT_OP_GROUP\n #define INT_OP_GROUP INT_OP_NO_DOT\n "}, {"sha": "ad84d45600d1dfa8ca862f87a456b1f521edf49f", "filename": "gcc/config/m68k/hp320base.h", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fhp320base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fhp320base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320base.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -0,0 +1,40 @@\n+/* Configuration file for an HP 320.\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* Control assembler-syntax conditionals in m68k.md.  */\n+\n+#ifndef USE_GAS\n+#define MOTOROLA\t\t/* Use Motorola syntax rather than \"MIT\" */\n+#define SGS\t\t\t/* Uses SGS assembler */\n+#define SGS_CMP_ORDER\t\t/* Takes cmp operands in reverse order */\n+#define HPUX_ASM\n+\n+#if !defined (CROSS_COMPILE) && !defined (NO_BUGS)\n+/* The assembler on HP 9k3xx machines running HPUX 8.0 doesn't translate\n+   floating point constants behind some operands.  The workaround is to\n+   use hex constants.  Reported by Thomas Nau (nau@medizin.uni-ulm.de).  */\n+#define AS_BUG_FLOATING_CONSTANT\n+/* The assembler on HP 9k3xx machines running HPUX 8.0 doesn't accept\n+   labels followed by a text, data, or other section directive.  Reported\n+   by Thomas Nau (nau@medizin.uni-ulm.de).  */\n+#define AS_BUG_TRAILING_LABEL\n+#endif\n+\n+#endif /* not USE_GAS */"}, {"sha": "b20cc3d03ccb70152b9c17e8e7b1f7e0a1e71adb", "filename": "gcc/config/m68k/hp320g.h", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fconfig%2Fm68k%2Fhp320g.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fconfig%2Fm68k%2Fhp320g.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320g.h?ref=ac650a0a320c369bfc1788e9579dc102576ddc50", "patch": "@@ -1,12 +0,0 @@\n-/* Definitions of target machine for GNU compiler.  HP-UX 68000/68020 version.\n-   Use this file if GCC is supposed to work with the GNU assembler,\n-   GNU linker and GNU debugger using DBX debugging information.\n-   (In other words, much of HPUX has been cast aside.)  */\n-\n-/* This wants DBX format.  */\n-\n-#define DBX_DEBUGGING_INFO 1\n-\n-#define USE_GAS\n-\n-#include \"m68k/hp320.h\""}, {"sha": "ae584bde0976da7d1ea2d99404fc2a91def1d8fd", "filename": "gcc/config/m68k/hpux7.h", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fconfig%2Fm68k%2Fhpux7.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fconfig%2Fm68k%2Fhpux7.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhpux7.h?ref=ac650a0a320c369bfc1788e9579dc102576ddc50", "patch": "@@ -1,7 +0,0 @@\n-/* tm.h for m68k running HPUX version 7.  */\n-\n-/* fletcher@cs.utexas.edu says this is needed.  */\n-#define NO_DOT_IN_LABEL\n-#define NO_BUGS\n-\n-#include \"m68k/hp320.h\""}, {"sha": "ed9ba6b70336284c1ca2d524cb8d47e3fac33a07", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -19,21 +19,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#define LINUX_DEFAULT_ELF\n-#define MOTOROLA\t\t/* Use Motorola syntax */\n-#define USE_GAS\t\t\t/* But GAS wants jbsr instead of jsr */\n-\n-/* TODO: convert includes to ${tm_file} list in config.gcc.  */\n-#include <m68k/m68k.h>\n-\n-/* Make sure CC1 is undefined.  */\n-#undef CC1_SPEC\n-\n-#include \"dbxelf.h\"\n-#include \"elfos.h\"\n-#include \"svr4.h\"\n-#include <linux.h>\t\t/* some common stuff */\n-\n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (68k GNU/Linux with ELF)\");\n "}, {"sha": "cf553fbf2204ac0917e7a3c7e718c32702fec432", "filename": "gcc/config/m68k/m68k-aout.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fm68k-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fm68k-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-aout.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  \"naked\" 68020,\n    a.out object files and debugging, version.\n-   Copyright (C) 1994, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1996, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -19,11 +19,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* This comment is here to see if it will keep Sun's cpp from dying.  */\n-\n-#include \"m68k/m68k-none.h\"\n-#include \"m68k/m68kemb.h\"\n-\n #define DBX_DEBUGGING_INFO 1\n #undef SDB_DEBUGGING_INFO\n "}, {"sha": "ad08a48579b2656b5ab45f7cc166828e815120f5", "filename": "gcc/config/m68k/m68k-coff.h", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fconfig%2Fm68k%2Fm68k-coff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fconfig%2Fm68k%2Fm68k-coff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-coff.h?ref=ac650a0a320c369bfc1788e9579dc102576ddc50", "patch": "@@ -1,31 +0,0 @@\n-/* Definitions of target machine for GNU compiler.  \"naked\" 68020,\n-   COFF object files and debugging, version.\n-   Copyright (C) 1994 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#define MOTOROLA\t/* Use Motorola syntax rather than MIT.  */\n-#ifndef  USE_GAS  /* forces jsbr instead of jsr.  */\n-#define  USE_GAS\n-#endif\n-\n-#include \"m68k/m68k-none.h\"\n-#include \"m68k/m68kemb.h\"\n-#include \"m68k/coff.h\"\n-\n-/* end of m68k-coff.h */"}, {"sha": "f4a658171b0ebd5186b2e86df6dff337ce1fab44", "filename": "gcc/config/m68k/m68k-none.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-none.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -18,8 +18,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"m68k/m68k.h\"\n-\n /* Default to m68k (m68020).  */\n #ifndef TARGET_CPU_DEFAULT\n #define TARGET_CPU_DEFAULT M68K_CPU_m68k"}, {"sha": "419f86a69618dc34d1815193d70818359a4d0e5f", "filename": "gcc/config/m68k/m68kelf.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kelf.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,7 +1,7 @@\n /* m68kelf support, derived from m68kv4.h */\n \n /* Target definitions for GNU compiler for mc680x0 running System V.4\n-   Copyright (C) 1991, 1993, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993, 2000, 2002, 2003 Free Software Foundation, Inc.\n \n    Written by Ron Guilmette (rfg@netcom.com) and Fred Fish (fnf@cygnus.com).\n \n@@ -22,8 +22,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* #notinclude \"m68k/sgs.h\"\t/ * The m68k/SVR4 assembler is SGS based */\n-\n /* These are necessary for -fpic/-fPIC to work correctly.  */\n #ifndef MOTOROLA\n #define MOTOROLA                /* Use MOTOROLA syntax.  */"}, {"sha": "161d60703afbefcf714ec581f7a427ab20df1aab", "filename": "gcc/config/m68k/m68kv4.h", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kv4.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for mc680x0 running System V.4\n-   Copyright (C) 1991, 1993, 1994, 1995, 1996, 1998, 1999, 2000\n+   Copyright (C) 1991, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2003\n    Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com) and\n    Fred Fish (fnf@cygnus.com).\n@@ -34,19 +34,6 @@ Boston, MA 02111-1307, USA.  */\n    }\t\t\t\t\t\t\\\n   while (0)\n \n-/* Use SGS_* macros to control compilation in m68k.md */\n-\n-#define SGS_SWITCH_TABLES\t/* Different switch table handling */\n-\n-/* TODO: convert includes to ${tm_file} list in config.gcc.  */\n-#include \"m68k/sgs.h\"\t\t/* The m68k/SVR4 assembler is SGS based */\n-\n-#include \"dbxelf.h\"\n-#include \"elfos.h\"\n-#include \"svr4.h\"\t\t/* Pick up the generic SVR4 macros */\n-\n-/* See m68k.h.  7 means 68020 with 68881.  */\n-\n #ifndef TARGET_DEFAULT\n #define\tTARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n #endif\n@@ -257,7 +244,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n   switch_table_difference_label_flag = 0;\t\t\t\t\\\n } while (0)\n \n-int switch_table_difference_label_flag;\n+extern int switch_table_difference_label_flag;\n \n #undef ASM_OUTPUT_COMMON\n #undef ASM_OUTPUT_LOCAL"}, {"sha": "2bd0f3a900bb67910f6dcdc936399f71bbc1d2f5", "filename": "gcc/config/m68k/netbsd.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -11,13 +11,6 @@\n     }\t\t\t\t\t\t\\\n   while (0)\n \n-#include <m68k/m68k.h>\n-\n-/* Get generic NetBSD definitions.  */\n-\n-#include <netbsd.h>\n-#include <netbsd-aout.h>\n-\n #define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n \n #define EXTRA_SPECS \\"}, {"sha": "8fc5198f01bc55b379edd47d07824d66ccd36deb", "filename": "gcc/config/m68k/openbsd.h", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fopenbsd.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,5 @@\n /* Configuration file for an m68k OpenBSD target.\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -29,16 +29,6 @@ Boston, MA 02111-1307, USA.  */\n    }\t\t\t\t\t\t\\\n   while (0)\n \n-/* m68k is an old configuration that does not yet use the TARGET_CPU_DEFAULT\n-   framework.  */\n-#define TARGET_DEFAULT (MASK_BITFIELD | MASK_68881 | MASK_68020)\n-\n-#include <m68k/m68k.h>\n-\n-/* Get generic OpenBSD definitions.  */\n-#define OBSD_OLD_GAS\n-#include <openbsd.h>\n-\n /* Define __HAVE_68881__ in preprocessor, unless -msoft-float is specified.\n    This will control the use of inline 68881 insns in certain macros.  */\n #undef CPP_SPEC"}, {"sha": "b41908c9e080275701efd8488bd8490eaeeaf574", "filename": "gcc/config/m68k/sgs.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fsgs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fm68k%2Fsgs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsgs.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -20,16 +20,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* Control assembler-syntax conditionals in m68k.md and conditionals in\n-   m68k.h.  Note that some systems may also require SGS_SWAP_W and/or\n-   SGS_SWITCH_TABLES to be defined as well.  */\n-\n-#define MOTOROLA\t\t/* Use Motorola syntax rather than \"MIT\" */\n-#define SGS\t\t\t/* Uses SGS assembler */\n-#define SGS_CMP_ORDER\t\t/* Takes cmp operands in reverse order */\n-\n-#include \"m68k/m68k.h\"\n-\n #undef INT_OP_GROUP\n #define INT_OP_GROUP INT_OP_STANDARD\n "}, {"sha": "48b65d5219e33de083bdfe86fbad1542f694595d", "filename": "gcc/config/mcore/mcore-pe.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fmcore%2Fmcore-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fmcore%2Fmcore-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore-pe.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for MCore using COFF/PE.\n-   Copyright (C) 1994, 1999, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1999, 2000, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com).\n \n This file is part of GNU CC.\n@@ -31,12 +31,9 @@ Boston, MA 02111-1307, USA.  */\n \n /* The MCore ABI says that bitfields are unsigned by default.  */\n /* The EPOC C++ environment does not support exceptions.  */\n+#undef CC1_SPEC\n #define CC1_SPEC \"-funsigned-bitfields %{!DIN_GCC:-fno-rtti} %{!DIN_GCC:-fno-exceptions}\"\n \n-#include \"svr3.h\"\n-#include \"mcore/mcore.h\"\n-#include \"dbxcoff.h\"\n-\n #undef  SDB_DEBUGGING_INFO\n #define DBX_DEBUGGING_INFO 1\n "}, {"sha": "7a33f7754ddac755fe10a22bbec6184a5c5bcbbd", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -28,12 +28,6 @@\n #define\tMCORE_STRUCT_ARGS\n /* RBE: end of \"move elsewhere\".  */\n \n-#include \"hwint.h\"\n-\n-#ifndef HAVE_MACHINE_MODES\n-#include \"machmode.h\"\n-#endif\n-\n /* Run-time Target Specification.  */\n #define TARGET_MCORE\n \n@@ -179,10 +173,8 @@ extern const char * mcore_stack_increment_string;\n      N_(\"Maximum amount for a single stack increment operation\"), 0}\t\\\n }\n \n-#ifndef CC1_SPEC\n /* The MCore ABI says that bitfields are unsigned by default.  */\n #define CC1_SPEC \"-funsigned-bitfields\"\n-#endif\n \n /* What options are we going to default to specific settings when\n    -O* happens; the user can subsequently override these settings."}, {"sha": "4bdc8aad6927ad2e797006e1c0f1ce323ba5b944", "filename": "gcc/config/mips/netbsd.h", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fnetbsd.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -128,21 +128,10 @@ Boston, MA 02111-1307, USA.  */\n   while (0)\n \n \n-/* Include the generic MIPS ELF configuration.  */\n-#include <mips/elf.h>\n-\n-/* Now clean up after it.  */\n+/* Clean up after the generic MIPS/ELF configuration.  */\n #undef MD_EXEC_PREFIX\n #undef MD_STARTFILE_PREFIX\n \n-/* Get generic NetBSD definitions.  */\n-#include <netbsd.h>\n-\n-\n-/* Get generic NetBSD ELF definitions.  */\n-#include <netbsd-elf.h>\n-\n-\n /* Extra specs we need.  */\n #undef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS\t\t\t\t\t\t\\"}, {"sha": "2f07c8fe110f9ca89c356a1d6a781919033f134b", "filename": "gcc/config/mips/openbsd-be.h", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fconfig%2Fmips%2Fopenbsd-be.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac650a0a320c369bfc1788e9579dc102576ddc50/gcc%2Fconfig%2Fmips%2Fopenbsd-be.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fopenbsd-be.h?ref=ac650a0a320c369bfc1788e9579dc102576ddc50", "patch": "@@ -1,21 +0,0 @@\n-/* Configuration fragment for a mips big-endian OpenBSD target\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#define TARGET_ENDIAN_DEFAULT MASK_BIG_ENDIAN"}, {"sha": "6ca833bb3722a3966fc43140812e288fb32b9036", "filename": "gcc/config/mips/openbsd.h", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fmips%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fmips%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fopenbsd.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for  a Mips ABI32 OpenBSD target.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -21,35 +21,24 @@ Boston, MA 02111-1307, USA.  */\n /* Definitions needed for OpenBSD, to avoid picking mips 'defaults'.  */\n \n /* GAS must know this.  */\n+#undef SUBTARGET_ASM_SPEC\n #define SUBTARGET_ASM_SPEC \"%{fPIC|fPIE:-KPIC}\"\n \n #define AS_NEEDS_DASH_FOR_PIPED_INPUT\n \n /* CPP specific OpenBSD specs.  */\n+#undef SUBTARGET_CPP_SPEC\n #define SUBTARGET_CPP_SPEC OBSD_CPP_SPEC\n \n /* Needed for ELF (inspired by netbsd-elf).  */\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+#undef LOCAL_LABEL_PREFIX\n #define LOCAL_LABEL_PREFIX\t\".\"\n \n /* The profiling lib spec here is not really correct but we leave\n    it as it is until we have some kind of profiling working.  */\n #define LIB_SPEC OBSD_LIB_SPEC\n \n-/* By default, OpenBSD mips is little endian.  This is important to set\n-   here as mips/mips.h defaults to big endian.  */\n-#ifndef TARGET_ENDIAN_DEFAULT\n-#define TARGET_ENDIAN_DEFAULT 0\n-#endif\n-\n-#include <mips/mips.h>\n-\n-/* Get generic OpenBSD definitions.  */\n-#define OBSD_HAS_DECLARE_FUNCTION_NAME\n-#define OBSD_HAS_DECLARE_OBJECT\n-#define OBSD_HAS_CORRECT_SPECS\n-#include <openbsd.h>\n-\n /* mips assembler uses .set for arcane purposes.  __attribute__((alias))\n    and friends won't work until we get recent binutils with .weakext\n \tsupport.  */"}, {"sha": "7eb4e3c7e52949b63abf139f302f73b4467942d5", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -325,9 +325,7 @@ extern int target_flags;\n \n #define OVERRIDE_OPTIONS override_options ()\n \n-/* stabs-in-som is nearly identical to stabs-in-elf.  To avoid useless\n-   code duplication we simply include this file and override as needed.  */\n-#include \"dbxelf.h\"\n+/* Override some settings from dbxelf.h.  */\n \n /* We do not have to be compatible with dbx, so we enable gdb extensions\n    by default.  */"}, {"sha": "b32b07890ae444b213819ccca6b3c2ef71dc8121", "filename": "gcc/config/rs6000/lynx.h", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Frs6000%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Frs6000%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flynx.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -19,31 +19,6 @@\n    Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n    MA 02111-1307, USA.  */\n \n-/* Definitions we want to override with those from rs6000.h:  */\n-#undef LIB_SPEC\n-#undef PTRDIFF_TYPE\n-#undef WCHAR_TYPE\n-#undef WCHAR_TYPE_SIZE\n-#undef EXTRA_SECTIONS\n-#undef READONLY_DATA_SECTION\n-#undef READONLY_DATA_SECTION_ASM_OP\n-#undef EXTRA_SECTION_FUNCTIONS\n-#undef TARGET_ASM_SELECT_RTX_SECTION\n-#undef TARGET_ASM_SELECT_SECTION\n-#undef USER_LABEL_PREFIX\n-#undef ASM_OUTPUT_LABELREF\n-#undef ASM_GENERATE_INTERNAL_LABEL\n-#undef ASM_OUTPUT_COMMON\n-#undef ASM_OUTPUT_LOCAL\n-\n-#undef SDB_DEBUGGING_INFO\n-#undef DBX_DEBUGGING_INFO\n-#undef PREFERRED_DEBUGGING_TYPE\n-\n-#undef FUNCTION_PROFILER\n-\n-#include <rs6000/rs6000.h>\n-\n /* Print subsidiary information on the compiler version in use.  */\n #define TARGET_VERSION fprintf (stderr, \" (LynxOS-RS/6000)\");\n "}, {"sha": "02a255254a51e0da84bab0fe4af0cea858670b12", "filename": "gcc/config/rs6000/lynxbase.h", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Frs6000%2Flynxbase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Frs6000%2Flynxbase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flynxbase.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -0,0 +1,45 @@\n+/* Definitions for Rs6000 running LynxOS.\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Contributed by David Henkel-Wallace, Cygnus Support (gumby@cygnus.com)\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 2, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING.  If not, write to the\n+   Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+   MA 02111-1307, USA.  */\n+\n+/* Definitions we want to override with those from rs6000.h:  */\n+#undef LIB_SPEC\n+#undef PTRDIFF_TYPE\n+#undef SIZE_TYPE\n+#undef WCHAR_TYPE\n+#undef WCHAR_TYPE_SIZE\n+#undef EXTRA_SECTIONS\n+#undef READONLY_DATA_SECTION\n+#undef READONLY_DATA_SECTION_ASM_OP\n+#undef EXTRA_SECTION_FUNCTIONS\n+#undef TARGET_ASM_SELECT_RTX_SECTION\n+#undef TARGET_ASM_SELECT_SECTION\n+#undef USER_LABEL_PREFIX\n+#undef ASM_OUTPUT_LABELREF\n+#undef ASM_GENERATE_INTERNAL_LABEL\n+#undef ASM_OUTPUT_COMMON\n+#undef ASM_OUTPUT_LOCAL\n+\n+#undef SDB_DEBUGGING_INFO\n+#undef DBX_DEBUGGING_INFO\n+#undef PREFERRED_DEBUGGING_TYPE\n+\n+#undef FUNCTION_PROFILER\n+#undef SUBTARGET_SWITCHES"}, {"sha": "12bdb5f210cfcda91d2fb678881b2c96fa2be033", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -26,7 +26,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n /* Override the __fixdfdi etc. routines when building libgcc2.\n    ??? This should be done in a cleaner way ...  */\n #if defined (IN_LIBGCC2) && !defined (__s390x__)\n-#include <s390/fixdfdi.h>\n+#include <config/s390/fixdfdi.h>\n #endif\n \n /* Which processor to generate code or schedule for. The cpu attribute"}, {"sha": "e96de90b860b1731ef2b94f8d525880b850a8e3a", "filename": "gcc/config/sh/embed-elf.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fsh%2Fembed-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fsh%2Fembed-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fembed-elf.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler for Renesas / SuperH SH \n    non-Linux embedded targets.\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n    Contributed by J\"orn Rennecke <joern.rennecke@superh.com>\n \n This file is part of GNU CC.\n@@ -20,8 +20,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"sh/elf.h\"\n-\n #undef USER_LABEL_PREFIX\n #define USER_LABEL_PREFIX \"_\"\n "}, {"sha": "a532d3e75d9075003aa4876e7f14ade220f416cc", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,6 +1,6 @@\n /* Operating system specific defines to be used when targeting GCC for any\n    Solaris 2 system.\n-   Copyright 2002 Free Software Foundation, Inc.\n+   Copyright 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -166,13 +166,9 @@ Boston, MA 02111-1307, USA.  */\n  *\n  */\n \n-/* This declares mprotect (used in TRANSFER_FROM_TRAMPOLINE) for\n-   libgcc2.c.  */\n-/* We don't want to include this because sys/mman.h is not present on\n-   some non-Solaris configurations that use sol2.h.  */\n-#if 0 /* def L_trampoline */\n-#include <sys/mman.h>\n-#endif\n+/* sys/mman.h is not present on some non-Solaris configurations\n+   that use sol2.h, so TRANSFER_FROM_TRAMPOLINE must use a magic\n+   number instead of the appropriate PROT_* flags.  */\n \n #define TRANSFER_FROM_TRAMPOLINE\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\"}, {"sha": "e36f51eb602ff12915b23edfdb8128833b0b54e6", "filename": "gcc/config/sparc/openbsd.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fsparc%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f/gcc%2Fconfig%2Fsparc%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fopenbsd.h?ref=ca11c37c5d5a639edf9e4a7ac211bdd3df6d620f", "patch": "@@ -1,5 +1,5 @@\n /* Configuration file for sparc OpenBSD target.\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -18,10 +18,6 @@ along with GCC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* Get generic OpenBSD definitions.  */\n-#define OBSD_OLD_GAS\n-#include <openbsd.h>\n-\n /* Target OS builtins.  */\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\"}]}