{"sha": "be3027e9c8366d92f68e6b3021c1cbe815648480", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUzMDI3ZTljODM2NmQ5MmY2OGU2YjMwMjFjMWNiZTgxNTY0ODQ4MA==", "commit": {"author": {"name": "Cl\u00e9ment Chigot", "email": "clement.chigot@atos.net", "date": "2020-09-16T11:58:17Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-09-21T22:42:00Z"}, "message": "go/internal/gccgoimporter: recognize aixbigafMagic archives\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/255201", "tree": {"sha": "7bc320fd13986a8d52ec594122898eda91b98fc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bc320fd13986a8d52ec594122898eda91b98fc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be3027e9c8366d92f68e6b3021c1cbe815648480", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be3027e9c8366d92f68e6b3021c1cbe815648480", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be3027e9c8366d92f68e6b3021c1cbe815648480", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be3027e9c8366d92f68e6b3021c1cbe815648480/comments", "author": null, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "defceb206be0f803b8d94e746180e51adad20b87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/defceb206be0f803b8d94e746180e51adad20b87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/defceb206be0f803b8d94e746180e51adad20b87"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d8db888e4b6852850fa722492cf677bf51db4846", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3027e9c8366d92f68e6b3021c1cbe815648480/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3027e9c8366d92f68e6b3021c1cbe815648480/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=be3027e9c8366d92f68e6b3021c1cbe815648480", "patch": "@@ -1,4 +1,4 @@\n-f2706d92d9560657333682a3de548f1f98e9f9b0\n+6f309797e4f7eed635950687e902a294126e6fc6\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "391477d5a737e315ed3c535b0a4b86a10ee7a1fd", "filename": "libgo/go/go/internal/gccgoimporter/importer.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3027e9c8366d92f68e6b3021c1cbe815648480/libgo%2Fgo%2Fgo%2Finternal%2Fgccgoimporter%2Fimporter.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3027e9c8366d92f68e6b3021c1cbe815648480/libgo%2Fgo%2Fgo%2Finternal%2Fgccgoimporter%2Fimporter.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Finternal%2Fgccgoimporter%2Fimporter.go?ref=be3027e9c8366d92f68e6b3021c1cbe815648480", "patch": "@@ -198,7 +198,7 @@ func GetImporter(searchpaths []string, initmap map[*types.Package]InitData) Impo\n \t\t\treturn\n \t\t}\n \n-\t\tif magics == archiveMagic {\n+\t\tif magics == archiveMagic || magics == aixbigafMagic {\n \t\t\treader, err = arExportData(reader)\n \t\t\tif err != nil {\n \t\t\t\treturn"}]}