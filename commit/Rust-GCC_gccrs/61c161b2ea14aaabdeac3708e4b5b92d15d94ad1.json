{"sha": "61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFjMTYxYjJlYTE0YWFhYmRlYWMzNzA4ZTRiNWI5MmQxNWQ5NGFkMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T13:26:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T13:26:49Z"}, "message": "[multiple changes]\n\n2011-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* i-cstrin.adb, sem_util.adb, exp_ch11.adb, sem_ch8.adb,\n\tlib-xref.adb: Minor reformatting\n\n2011-08-01  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch6.adb (Expand_N_Extended_Return_Statement): Replace test of\n\twhen to generate a call to Move_Final_List.\n\t(Has_Controlled_Parts): Remove this function.\n\nFrom-SVN: r177030", "tree": {"sha": "e9e7f3fc5f9d2161f5205aa86607ca752e9a1718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9e7f3fc5f9d2161f5205aa86607ca752e9a1718"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/comments", "author": null, "committer": null, "parents": [{"sha": "84df40f7680c388bdb85cd859021013dd5c34197", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84df40f7680c388bdb85cd859021013dd5c34197", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84df40f7680c388bdb85cd859021013dd5c34197"}], "stats": {"total": 73, "additions": 36, "deletions": 37}, "files": [{"sha": "df098fcd1fc85529ca0a3ce1ce348715822637bc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "patch": "@@ -1,3 +1,14 @@\n+2011-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* i-cstrin.adb, sem_util.adb, exp_ch11.adb, sem_ch8.adb,\n+\tlib-xref.adb: Minor reformatting\n+\n+2011-08-01  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_N_Extended_Return_Statement): Replace test of\n+\twhen to generate a call to Move_Final_List.\n+\t(Has_Controlled_Parts): Remove this function.\n+\n 2011-08-01  Geert Bosch  <bosch@adacore.com>\n \n \t* par-ch3.adb (P_Discrete_Choice_List): Improve error message for extra"}, {"sha": "d2eed096380cf7a19b62574eba47bb23687459cb", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "patch": "@@ -1532,6 +1532,7 @@ package body Exp_Ch11 is\n \n       if Present (Name (N)) and then Nkind (Name (N)) = N_Identifier then\n          Src := Comes_From_Source (N);\n+\n          if Entity (Name (N)) = Standard_Constraint_Error then\n             Rewrite (N,\n               Make_Raise_Constraint_Error (Loc, Reason => CE_Explicit_Raise));"}, {"sha": "3f861f26b9ff35d7d1872ea2560900123f0096ac", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 8, "deletions": 24, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "patch": "@@ -4250,7 +4250,6 @@ package body Exp_Ch6 is\n                                Parent (Return_Object_Entity);\n       Parent_Function      : constant Entity_Id :=\n                                Return_Applies_To (Return_Statement_Entity (N));\n-      Parent_Function_Typ  : constant Entity_Id := Etype (Parent_Function);\n       Is_Build_In_Place    : constant Boolean :=\n                                Is_Build_In_Place_Function (Parent_Function);\n \n@@ -4260,10 +4259,6 @@ package body Exp_Ch6 is\n       Result          : Node_Id;\n       Exp             : Node_Id;\n \n-      function Has_Controlled_Parts (Typ : Entity_Id) return Boolean;\n-      --  Determine whether type Typ is controlled or contains a controlled\n-      --  subcomponent.\n-\n       function Move_Activation_Chain return Node_Id;\n       --  Construct a call to System.Tasking.Stages.Move_Activation_Chain\n       --  with parameters:\n@@ -4278,17 +4273,6 @@ package body Exp_Ch6 is\n       --    From         finalization list of the return statement\n       --    To           finalization list passed in by the caller\n \n-      --------------------------\n-      -- Has_Controlled_Parts --\n-      --------------------------\n-\n-      function Has_Controlled_Parts (Typ : Entity_Id) return Boolean is\n-      begin\n-         return\n-           Is_Controlled (Typ)\n-             or else Has_Controlled_Component (Typ);\n-      end Has_Controlled_Parts;\n-\n       ---------------------------\n       -- Move_Activation_Chain --\n       ---------------------------\n@@ -4417,17 +4401,17 @@ package body Exp_Ch6 is\n          --  finalization list. A special case arises when processing a simple\n          --  return statement which has been rewritten as an extended return.\n          --  In that case check the type of the returned object or the original\n-         --  expression.\n+         --  expression. Note that Needs_Finalization accounts for the case\n+         --  of class-wide types, which which must be assumed to require\n+         --  finalization.\n \n          if Is_Build_In_Place\n+           and then Needs_BIP_Final_List (Parent_Function)\n            and then\n-               (Has_Controlled_Parts (Parent_Function_Typ)\n-                 or else (Is_Class_Wide_Type (Parent_Function_Typ)\n-                           and then\n-                        Has_Controlled_Parts (Root_Type (Parent_Function_Typ)))\n-                 or else Has_Controlled_Parts (Etype (Return_Object_Entity))\n-                 or else (Present (Exp)\n-                           and then Has_Controlled_Parts (Etype (Exp))))\n+             ((Present (Exp) and then Needs_Finalization (Etype (Exp)))\n+                or else\n+              (not Present (Exp)\n+                and then Needs_Finalization (Etype (Return_Object_Entity))))\n          then\n             Append_To (Statements, Move_Final_List);\n          end if;"}, {"sha": "e35ef36c9e03e2fbed29ce39256ab2ea17a3e1ba", "filename": "gcc/ada/i-cstrin.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2Fi-cstrin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2Fi-cstrin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.adb?ref=61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "patch": "@@ -139,23 +139,25 @@ package body Interfaces.C.Strings is\n    ----------------\n \n    function New_String (Str : String) return chars_ptr is\n-      --  It's important that this subprogram uses directly the heap to compute\n+\n+      --  It's important that this subprogram uses the heap directly to compute\n       --  the result, and doesn't copy the string on the stack, otherwise its\n       --  use is limited when used from tasks on large strings.\n \n-      Result       : constant chars_ptr := Memory_Alloc (Str'Length + 1);\n+      Result : constant chars_ptr := Memory_Alloc (Str'Length + 1);\n+\n       Result_Array : char_array  (1 .. Str'Length + 1);\n       for Result_Array'Address use To_Address (Result);\n       pragma Import (Ada, Result_Array);\n \n       Count : size_t;\n+\n    begin\n       To_C\n         (Item       => Str,\n          Target     => Result_Array,\n          Count      => Count,\n          Append_Nul => True);\n-\n       return Result;\n    end New_String;\n "}, {"sha": "4f440a84d221185480fb68443bec2976e6ab50ec", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "patch": "@@ -2204,7 +2204,7 @@ package body Lib.Xref is\n                   if XE.Loc /= No_Location\n                     and then\n                       (XE.Loc /= Crloc\n-                         or else (Prevt = 'm' and then  XE.Typ = 'r'))\n+                        or else (Prevt = 'm' and then  XE.Typ = 'r'))\n                   then\n                      Crloc := XE.Loc;\n                      Prevt := XE.Typ;"}, {"sha": "2025aa112a51b88106f8987afca121d5d105755d", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "patch": "@@ -4565,18 +4565,18 @@ package body Sem_Ch8 is\n \n             --  Normal case, not a label: generate reference\n \n-            --  ??? It is too early to generate a reference here even if\n-            --    the entity is unambiguous, because the tree is not\n-            --    sufficiently typed at this point for Generate_Reference to\n-            --    determine whether this reference modifies the denoted object\n-            --    (because implicit dereferences cannot be identified prior to\n-            --    full type resolution).\n-            --\n+            --    ??? It is too early to generate a reference here even if the\n+            --    entity is unambiguous, because the tree is not sufficiently\n+            --    typed at this point for Generate_Reference to determine\n+            --    whether this reference modifies the denoted object (because\n+            --    implicit dereferences cannot be identified prior to full type\n+            --    resolution).\n+\n             --    The Is_Actual_Parameter routine takes care of one of these\n             --    cases but there are others probably ???\n-            --\n+\n             --    If the entity is the LHS of an assignment, and is a variable\n-            --    (rather than a package prefix),  we can mark it as a\n+            --    (rather than a package prefix), we can mark it as a\n             --    modification right away, to avoid duplicate references.\n \n             else"}, {"sha": "5fcfd6f786b88e6a216dd63894963e11033a374d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "patch": "@@ -6662,6 +6662,7 @@ package body Sem_Util is\n \n    function Is_LHS (N : Node_Id) return Boolean is\n       P : constant Node_Id := Parent (N);\n+\n    begin\n       if Nkind (P) = N_Assignment_Statement then\n          return Name (P) = N;"}]}