{"sha": "8ceaac3c6ee1c1b36dc9e6d37ab01fa2b565105e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNlYWFjM2M2ZWUxYzFiMzZkYzllNmQzN2FiMDFmYTJiNTY1MTA1ZQ==", "commit": {"author": {"name": "Clinton Popetz", "email": "cpopetz@cygnus.com", "date": "2000-05-23T20:10:17Z"}, "committer": {"name": "Clinton Popetz", "email": "cpopetz@gcc.gnu.org", "date": "2000-05-23T20:10:17Z"}, "message": "sh.c (gen_far_branch, [...]): Update to reflect new prototypes for redirect_jump and invert_jump.\n\n\t* config/sh/sh.c (gen_far_branch, split_branches): Update\n\tto reflect new prototypes for redirect_jump and invert_jump.\n\t(sh_insn_length_adjustment): Get rid of const warnings.\n\nFrom-SVN: r34113", "tree": {"sha": "42e2a1c8b20e49d09d0b428764559abc0d02dacd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42e2a1c8b20e49d09d0b428764559abc0d02dacd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ceaac3c6ee1c1b36dc9e6d37ab01fa2b565105e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ceaac3c6ee1c1b36dc9e6d37ab01fa2b565105e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ceaac3c6ee1c1b36dc9e6d37ab01fa2b565105e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ceaac3c6ee1c1b36dc9e6d37ab01fa2b565105e/comments", "author": null, "committer": null, "parents": [{"sha": "923c2d868ff64e557515856912994794d8d05dd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/923c2d868ff64e557515856912994794d8d05dd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/923c2d868ff64e557515856912994794d8d05dd2"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "2a43609ddfea4068cb2de7aedbd68020a70f792f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ceaac3c6ee1c1b36dc9e6d37ab01fa2b565105e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ceaac3c6ee1c1b36dc9e6d37ab01fa2b565105e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ceaac3c6ee1c1b36dc9e6d37ab01fa2b565105e", "patch": "@@ -1,3 +1,9 @@\n+Tue May 23 15:08:31 2000  Clinton Popetz  <cpopetz@cygnus.com>\n+\n+\t* config/sh/sh.c (gen_far_branch, split_branches): Update\n+\tto reflect new prototypes for redirect_jump and invert_jump.\n+\t(sh_insn_length_adjustment): Get rid of const warnings.\n+\n 2000-05-23  Kazu Hirata  <kazu@hxi.com>\n \n \t* invoke.texi (Options for Debugging Your Program or GCC): Update"}, {"sha": "f2c4ef0269088cf0850400a9beda787bfaf362de", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ceaac3c6ee1c1b36dc9e6d37ab01fa2b565105e/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ceaac3c6ee1c1b36dc9e6d37ab01fa2b565105e/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=8ceaac3c6ee1c1b36dc9e6d37ab01fa2b565105e", "patch": "@@ -2654,7 +2654,7 @@ gen_far_branch (bp)\n     emit_barrier_after (jump);\n   emit_label_after (bp->near_label, insn);\n   JUMP_LABEL (jump) = bp->far_label;\n-  if (! invert_jump (insn, label))\n+  if (! invert_jump (insn, label, 1))\n     abort ();\n   /* Prevent reorg from undoing our splits.  */\n   gen_block_redirect (jump, bp->address += 2, 2);\n@@ -3387,7 +3387,7 @@ split_branches (first)\n \t\t    bp->insert_place = insn;\n \t\t    bp->address = addr;\n \t\t  }\n-\t\tif (! redirect_jump (insn, label))\n+\t\tif (! redirect_jump (insn, label, 1))\n \t\t  abort ();\n \t      }\n \t    else\n@@ -3450,7 +3450,7 @@ split_branches (first)\n \t\t\tJUMP_LABEL (insn) = far_label;\n \t\t\tLABEL_NUSES (far_label)++;\n \t\t      }\n-\t\t    redirect_jump (insn, NULL_RTX);\n+\t\t    redirect_jump (insn, NULL_RTX, 1);\n \t\t    far_label = 0;\n \t\t  }\n \t      }\n@@ -5156,7 +5156,8 @@ sh_insn_length_adjustment (insn)\n     {\n       int sum = 0;\n       rtx body = PATTERN (insn);\n-      char *template, c;\n+      const char *template;\n+      char c;\n       int maybe_label = 1;\n \n       if (GET_CODE (body) == ASM_INPUT)"}]}