{"sha": "7f0e23e931064d8e8758e01d95bfb89b8fa32e6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YwZTIzZTkzMTA2NGQ4ZTg3NThlMDFkOTViZmI4OWI4ZmEzMmU2ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-03-02T02:32:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-03-02T02:32:38Z"}, "message": "re PR c++/69995 ([C++14] Invalid result when evaluating constexpr function)\n\n\tPR c++/69995\n\n\t* constexpr.c (cxx_eval_call_expression): Unshare arg.\n\t(cxx_eval_constant_expression) [DECL_EXPR]: Unshare init.\n\t[TARGET_EXPR]: Unshare init.\n\nFrom-SVN: r233877", "tree": {"sha": "0cc8022bd94df7f07d7abb5a2bc52688bc6557ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cc8022bd94df7f07d7abb5a2bc52688bc6557ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f0e23e931064d8e8758e01d95bfb89b8fa32e6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f0e23e931064d8e8758e01d95bfb89b8fa32e6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f0e23e931064d8e8758e01d95bfb89b8fa32e6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f0e23e931064d8e8758e01d95bfb89b8fa32e6e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4be9717cf879d45534da0044401885e508c5d562", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be9717cf879d45534da0044401885e508c5d562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4be9717cf879d45534da0044401885e508c5d562"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "3a24cc9392b8665b4e1e360bbdbe88bd58d6eb16", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f0e23e931064d8e8758e01d95bfb89b8fa32e6e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f0e23e931064d8e8758e01d95bfb89b8fa32e6e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7f0e23e931064d8e8758e01d95bfb89b8fa32e6e", "patch": "@@ -1,3 +1,10 @@\n+2016-03-01  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/69995\n+\t* constexpr.c (cxx_eval_call_expression): Unshare arg.\n+\t(cxx_eval_constant_expression) [DECL_EXPR]: Unshare init.\n+\t[TARGET_EXPR]: Unshare init.\n+\n 2016-03-01  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/68948"}, {"sha": "a21997ab97a3305b865e0499690dfca849ef784a", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f0e23e931064d8e8758e01d95bfb89b8fa32e6e/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f0e23e931064d8e8758e01d95bfb89b8fa32e6e/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=7f0e23e931064d8e8758e01d95bfb89b8fa32e6e", "patch": "@@ -1365,6 +1365,8 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n \t      tree oparm = TREE_PURPOSE (bound);\n \t      tree arg = TREE_VALUE (bound);\n \t      gcc_assert (DECL_NAME (remapped) == DECL_NAME (oparm));\n+\t      /* Don't share a CONSTRUCTOR that might be changed.  */\n+\t      arg = unshare_expr (arg);\n \t      ctx->values->put (remapped, arg);\n \t      bound = TREE_CHAIN (bound);\n \t      remapped = DECL_CHAIN (remapped);\n@@ -3366,6 +3368,8 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t    init = cxx_eval_constant_expression (ctx, init,\n \t\t\t\t\t\t false,\n \t\t\t\t\t\t non_constant_p, overflow_p);\n+\t    /* Don't share a CONSTRUCTOR that might be changed.  */\n+\t    init = unshare_expr (init);\n \t    ctx->values->put (r, init);\n \t  }\n \telse if (ctx == &new_ctx)\n@@ -3410,6 +3414,7 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n       if (lval)\n \t{\n \t  tree slot = TARGET_EXPR_SLOT (t);\n+\t  r = unshare_expr (r);\n \t  ctx->values->put (slot, r);\n \t  return slot;\n \t}"}, {"sha": "6707975f0ab53f32c76e794abbf717fd75fd0304", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-copy2.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f0e23e931064d8e8758e01d95bfb89b8fa32e6e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-copy2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f0e23e931064d8e8758e01d95bfb89b8fa32e6e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-copy2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-copy2.C?ref=7f0e23e931064d8e8758e01d95bfb89b8fa32e6e", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/69995\n+// { dg-do compile { target c++14 } }\n+\n+struct A\n+{\n+  int i;\n+};\n+\n+constexpr int f(A a)\n+{\n+  ++a.i;\n+  return a.i;\n+}\n+\n+constexpr bool g()\n+{\n+  A a = { 42 };\n+  if (f(a) != 43) return false;\n+  if (a.i != 42) return false;\n+  return true;\n+}\n+\n+#define SA(X) static_assert((X),#X)\n+SA(g());"}, {"sha": "cce4b54df7f6360d032857abdca2735a335e411d", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-copy3.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f0e23e931064d8e8758e01d95bfb89b8fa32e6e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-copy3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f0e23e931064d8e8758e01d95bfb89b8fa32e6e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-copy3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-copy3.C?ref=7f0e23e931064d8e8758e01d95bfb89b8fa32e6e", "patch": "@@ -0,0 +1,26 @@\n+// PR c++/69995\n+// { dg-do compile { target c++14 } }\n+\n+struct A\n+{\n+  int i;\n+};\n+\n+constexpr int f(A a)\n+{\n+  ++a.i;\n+  return a.i;\n+}\n+\n+constexpr bool g()\n+{\n+  A a = { 42 };\n+  A b = a;\n+  ++b.i;\n+  if (b.i != 43) return false;\n+  if (a.i != 42) return false;\n+  return true;\n+}\n+\n+#define SA(X) static_assert((X),#X)\n+SA(g());"}]}