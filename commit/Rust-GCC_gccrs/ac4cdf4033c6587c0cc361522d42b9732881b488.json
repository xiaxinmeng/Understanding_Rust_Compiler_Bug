{"sha": "ac4cdf4033c6587c0cc361522d42b9732881b488", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM0Y2RmNDAzM2M2NTg3YzBjYzM2MTUyMmQ0MmI5NzMyODgxYjQ4OA==", "commit": {"author": {"name": "Jason Eckhardt", "email": "jle@redhat.com", "date": "2001-02-27T00:48:11Z"}, "committer": {"name": "Jason Eckhardt", "email": "jle@gcc.gnu.org", "date": "2001-02-27T00:48:11Z"}, "message": "combine.c (known_cond): Do not reverse the condition when SMAX/UMAX is being considered and the...\n\n        * combine.c (known_cond): Do not reverse the condition when\n        SMAX/UMAX is being considered and the condition is for equality\n        or inequality.\n\n        * testsuite/gcc.c-torture/execute/20010221-1.c: New test.\n\nFrom-SVN: r40077", "tree": {"sha": "5701f29dd30ba3424d394826ae84a75ec39ebb0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5701f29dd30ba3424d394826ae84a75ec39ebb0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac4cdf4033c6587c0cc361522d42b9732881b488", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4cdf4033c6587c0cc361522d42b9732881b488", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac4cdf4033c6587c0cc361522d42b9732881b488", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4cdf4033c6587c0cc361522d42b9732881b488/comments", "author": null, "committer": null, "parents": [{"sha": "6a163d7cae1634d98c4c458725eb161adc7f946d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a163d7cae1634d98c4c458725eb161adc7f946d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a163d7cae1634d98c4c458725eb161adc7f946d"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "f7a50fd78e7255036e7888acae3438e20e660090", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4cdf4033c6587c0cc361522d42b9732881b488/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4cdf4033c6587c0cc361522d42b9732881b488/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac4cdf4033c6587c0cc361522d42b9732881b488", "patch": "@@ -1,3 +1,11 @@\n+2001-02-26  Jason Eckhardt  <jle@redhat.com>\n+\n+\t* combine.c (known_cond): Do not reverse the condition when\n+\tSMAX/UMAX is being considered and the condition is for equality \n+\tor inequality.\n+\n+\t* testsuite/gcc.c-torture/execute/20010221-1.c: New test.\n+\n 2001-02-26  Philip Blundell  <philb@gnu.org>\n \n \t* config.gcc: Remove obsolete targets \"arm*-*-linuxoldld\" and"}, {"sha": "5dc26a8975d32176fd9ccb9c22d0b55306441bd7", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4cdf4033c6587c0cc361522d42b9732881b488/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4cdf4033c6587c0cc361522d42b9732881b488/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=ac4cdf4033c6587c0cc361522d42b9732881b488", "patch": "@@ -7512,7 +7512,12 @@ known_cond (x, cond, reg, val)\n \t    {\n \t      int unsignedp = (code == UMIN || code == UMAX);\n \n-\t      if (code == SMAX || code == UMAX)\n+\t      /* Do not reverse the condition when it is NE or EQ.\n+\t\t This is because we cannot conclude anything about\n+\t\t the value of 'SMAX (x, y)' when x is not equal to y,\n+\t\t but we can when x equals y.  */ \n+\t      if ((code == SMAX || code == UMAX)\n+\t\t  && ! (cond == EQ || cond == NE))\n \t\tcond = reverse_condition (cond);\n \n \t      switch (cond)"}, {"sha": "3caff81931a0a79d35f5c453590a94aec04fd3a4", "filename": "gcc/testsuite/gcc.c-torture/execute/20010221-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4cdf4033c6587c0cc361522d42b9732881b488/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010221-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4cdf4033c6587c0cc361522d42b9732881b488/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010221-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010221-1.c?ref=ac4cdf4033c6587c0cc361522d42b9732881b488", "patch": "@@ -0,0 +1,17 @@\n+\n+int n = 2;\n+\n+main ()\n+{\n+  int i, x = 45;\n+\n+  for (i = 0; i < n; i++)\n+    {\n+      if (i != 0)\n+\tx = ( i > 0 ) ? i : 0;\n+    }\n+\n+  if (x != 1)\n+    abort ();\n+  exit (0);\n+}"}]}