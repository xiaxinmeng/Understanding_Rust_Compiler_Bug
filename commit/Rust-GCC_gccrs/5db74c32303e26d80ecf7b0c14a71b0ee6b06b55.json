{"sha": "5db74c32303e26d80ecf7b0c14a71b0ee6b06b55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiNzRjMzIzMDNlMjZkODBlY2Y3YjBjMTRhNzFiMGVlNmIwNmI1NQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2006-12-15T09:01:29Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2006-12-15T09:01:29Z"}, "message": "invoke.texi (mstringop-strategy): Add missing \"byte_loop\" value.\n\n\t* invoke.texi (mstringop-strategy): Add missing \"byte_loop\" value.\n\nFrom-SVN: r119877", "tree": {"sha": "f00cad7af2f37000bed31fd57dee0747e2b94f70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f00cad7af2f37000bed31fd57dee0747e2b94f70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5db74c32303e26d80ecf7b0c14a71b0ee6b06b55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db74c32303e26d80ecf7b0c14a71b0ee6b06b55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5db74c32303e26d80ecf7b0c14a71b0ee6b06b55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db74c32303e26d80ecf7b0c14a71b0ee6b06b55/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47a1180805a52c888e31b87a7e172a065a2d6348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47a1180805a52c888e31b87a7e172a065a2d6348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47a1180805a52c888e31b87a7e172a065a2d6348"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "8dcc9e2dd2c476af7e3d460a6ae0c6f30fbe27f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db74c32303e26d80ecf7b0c14a71b0ee6b06b55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db74c32303e26d80ecf7b0c14a71b0ee6b06b55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5db74c32303e26d80ecf7b0c14a71b0ee6b06b55", "patch": "@@ -1,3 +1,7 @@\n+2006-12-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* invoke.texi (mstringop-strategy): Add missing \"byte_loop\" value.\n+\n 2006-12-14  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-flow.h (struct stmt_ann_d): Move bitfield references_memory"}, {"sha": "a4aae7ea1554ad73c963545dab427e7b1bb205cc", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db74c32303e26d80ecf7b0c14a71b0ee6b06b55/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db74c32303e26d80ecf7b0c14a71b0ee6b06b55/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5db74c32303e26d80ecf7b0c14a71b0ee6b06b55", "patch": "@@ -9721,8 +9721,8 @@ blocks inline code is used, while for large blocks library call is used.\n Overwrite internal decision heuristic about particular algorithm to inline\n string operation with.  The allowed values are @code{rep_byte},\n @code{rep_4byte}, @code{rep_8byte} for expanding using i386 @code{rep} prefix\n-of specified size, @code{loop}, @code{unrolled_loop} for expanding inline loop,\n-@code{libcall} for always expanding library call.\n+of specified size, @code{byte_loop}, @code{loop}, @code{unrolled_loop} for\n+expanding inline loop, @code{libcall} for always expanding library call.\n \n @item -momit-leaf-frame-pointer\n @opindex momit-leaf-frame-pointer"}]}