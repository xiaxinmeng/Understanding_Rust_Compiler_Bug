{"sha": "4904231323789b7d5a0f6fa70fe7f55ee6fba109", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkwNDIzMTMyMzc4OWI3ZDVhMGY2ZmE3MGZlN2Y1NWVlNmZiYTEwOQ==", "commit": {"author": {"name": "Mingjie Xing", "email": "mingjie.xing@gmail.com", "date": "2010-09-03T09:29:19Z"}, "committer": {"name": "Mingjie Xing", "email": "xmj@gcc.gnu.org", "date": "2010-09-03T09:29:19Z"}, "message": "Fix shift count truncate problem for loongson.\n\nFrom-SVN: r163799", "tree": {"sha": "9e1bc64b5068f033b640c01b28e05460daa9b49b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e1bc64b5068f033b640c01b28e05460daa9b49b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4904231323789b7d5a0f6fa70fe7f55ee6fba109", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4904231323789b7d5a0f6fa70fe7f55ee6fba109", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4904231323789b7d5a0f6fa70fe7f55ee6fba109", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4904231323789b7d5a0f6fa70fe7f55ee6fba109/comments", "author": {"login": "xingmingjie", "id": 7777963, "node_id": "MDQ6VXNlcjc3Nzc5NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/7777963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xingmingjie", "html_url": "https://github.com/xingmingjie", "followers_url": "https://api.github.com/users/xingmingjie/followers", "following_url": "https://api.github.com/users/xingmingjie/following{/other_user}", "gists_url": "https://api.github.com/users/xingmingjie/gists{/gist_id}", "starred_url": "https://api.github.com/users/xingmingjie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xingmingjie/subscriptions", "organizations_url": "https://api.github.com/users/xingmingjie/orgs", "repos_url": "https://api.github.com/users/xingmingjie/repos", "events_url": "https://api.github.com/users/xingmingjie/events{/privacy}", "received_events_url": "https://api.github.com/users/xingmingjie/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5ca969363516ec05db3357c22079d7fdcd70ccf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ca969363516ec05db3357c22079d7fdcd70ccf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5ca969363516ec05db3357c22079d7fdcd70ccf"}], "stats": {"total": 69, "additions": 66, "deletions": 3}, "files": [{"sha": "dc4f9a0bf612448bcac60593df8fb2635e04a8e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4904231323789b7d5a0f6fa70fe7f55ee6fba109/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4904231323789b7d5a0f6fa70fe7f55ee6fba109/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4904231323789b7d5a0f6fa70fe7f55ee6fba109", "patch": "@@ -1,3 +1,9 @@\n+2010-09-03  Mingjie Xing  <mingjie.xing@gmail.com>\n+\n+\t* config/mips/mips.h (SHIFT_COUNT_TRUNCATED): Change the definition.\n+\t* config/mips/mips.c (mips_shift_truncation_mask): New function.\n+\t(TARGET_SHIFT_TRUNCATION_MASK): Define.\n+\n 2010-09-02  Richard Henderson  <rth@redhat.com>\n \n \t* configure.ac (gcc_cv_as_cfi_advance_working): Use objdump"}, {"sha": "3fe7f8b59619183e55b381b0e4710fb4017ce560", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4904231323789b7d5a0f6fa70fe7f55ee6fba109/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4904231323789b7d5a0f6fa70fe7f55ee6fba109/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=4904231323789b7d5a0f6fa70fe7f55ee6fba109", "patch": "@@ -16338,6 +16338,20 @@ void mips_function_profiler (FILE *file)\n     fprintf (file, \"\\tmove\\t%s,%s\\n\", reg_names[STATIC_CHAIN_REGNUM],\n \t     reg_names[2]);\n }\n+\n+/* Implement TARGET_SHIFT_TRUNCATION_MASK.  We want to keep the default\n+   behaviour of TARGET_SHIFT_TRUNCATION_MASK for non-vector modes even\n+   when TARGET_LOONGSON_2EF is true.  */\n+\n+static unsigned HOST_WIDE_INT\n+mips_shift_truncation_mask (enum machine_mode mode)\n+{\n+  if (TARGET_LOONGSON_2EF && VECTOR_MODE_P (mode))\n+    return 0;\n+\n+  return GET_MODE_BITSIZE (mode) - 1;\n+}\n+\n \f\n /* Initialize the GCC target structure.  */\n #undef TARGET_ASM_ALIGNED_HI_OP\n@@ -16546,6 +16560,9 @@ void mips_function_profiler (FILE *file)\n #undef TARGET_ASM_OUTPUT_SOURCE_FILENAME\n #define TARGET_ASM_OUTPUT_SOURCE_FILENAME mips_output_filename\n \n+#undef TARGET_SHIFT_TRUNCATION_MASK\n+#define TARGET_SHIFT_TRUNCATION_MASK mips_shift_truncation_mask\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n #include \"gt-mips.h\""}, {"sha": "74bf3d25c4c2d3c63e7d7ded9dfdab625916e103", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4904231323789b7d5a0f6fa70fe7f55ee6fba109/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4904231323789b7d5a0f6fa70fe7f55ee6fba109/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=4904231323789b7d5a0f6fa70fe7f55ee6fba109", "patch": "@@ -2423,9 +2423,10 @@ typedef struct mips_args {\n    (often extended) would be needed for byte accesses.  */\n #define SLOW_BYTE_ACCESS (!TARGET_MIPS16)\n \n-/* Define this to be nonzero if shift instructions ignore all but the low-order\n-   few bits.  */\n-#define SHIFT_COUNT_TRUNCATED 1\n+/* Standard MIPS integer shifts truncate the shift amount to the\n+   width of the shifted operand.  However, Loongson vector shifts\n+   do not truncate the shift amount at all.  */\n+#define SHIFT_COUNT_TRUNCATED (!TARGET_LOONGSON_2EF)\n \n /* Value is 1 if truncating an integer of INPREC bits to OUTPREC bits\n    is done just by pretending it is already truncated.  */"}, {"sha": "0a15006ba07841611bf00092a7941c0f10c3c294", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4904231323789b7d5a0f6fa70fe7f55ee6fba109/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4904231323789b7d5a0f6fa70fe7f55ee6fba109/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4904231323789b7d5a0f6fa70fe7f55ee6fba109", "patch": "@@ -1,3 +1,7 @@\n+2010-09-03  Mingjie Xing <mingjie.xing@gmail.com>\n+\n+\t* gcc.target/mips/loongson-shift-count-truncated-1.c: New.\n+\n 2010-09-03  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/44602"}, {"sha": "be52cf7dedcaa675c89e690e484f507c08ecf1e5", "filename": "gcc/testsuite/gcc.target/mips/loongson-shift-count-truncated-1.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4904231323789b7d5a0f6fa70fe7f55ee6fba109/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-shift-count-truncated-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4904231323789b7d5a0f6fa70fe7f55ee6fba109/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-shift-count-truncated-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-shift-count-truncated-1.c?ref=4904231323789b7d5a0f6fa70fe7f55ee6fba109", "patch": "@@ -0,0 +1,35 @@\n+/* Test case for SHIFT_COUNT_TRUNCATED on Loongson.  */\n+\n+/* { dg-do run } */\n+/* loongson.h does not handle or check for MIPS16ness.  There doesn't\n+   seem any good reason for it to, given that the Loongson processors\n+   do not support MIPS16.  */\n+/* { dg-options \"isa=loongson -mhard-float -mno-mips16 -O1\" } */\n+\n+#include \"loongson.h\"\n+#include <assert.h>\n+\n+typedef union { int32x2_t v; int32_t a[2]; } int32x2_encap_t;\n+\n+void\n+main1 (int shift)\n+{\n+  int32x2_encap_t s;\n+  int32x2_encap_t r;\n+\n+  s.a[0] = 0xffffffff;\n+  s.a[1] = 0xffffffff;\n+  /* Loongson SIMD use low-order 7 bits to specify the shift amount.\n+     Thus V2SI << 0x40 == 0.  The below expression 'shift & 0x3f' will be\n+     mis-optimized as 'shift', if SHIFT_COUNT_TRUNCATED is nonzero.  */\n+  r.v = psllw_s (s.v, (shift & 0x3f));\n+  assert (r.a[0] == 0xffffffff);\n+  assert (r.a[1] == 0xffffffff);\n+}\n+\n+int\n+main (void)\n+{\n+  main1 (0x40);\n+  return 0;\n+}"}]}