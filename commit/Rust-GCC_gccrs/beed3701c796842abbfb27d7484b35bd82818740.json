{"sha": "beed3701c796842abbfb27d7484b35bd82818740", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVlZDM3MDFjNzk2ODQyYWJiZmIyN2Q3NDg0YjM1YmQ4MjgxODc0MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-05-29T20:50:32Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-05-29T20:50:32Z"}, "message": "re PR target/71245 (std::atomic<double> load/store bounces the data to the stack using fild/fistp)\n\n\tPR target/71245\n\t* config/i386/sync.md (define_peephole2 atomic_storedi_fpu):\n\tNew peepholes to remove unneeded fild/fistp pairs.\n\t(define_peephole2 atomic_loaddi_fpu): Ditto.\n\ntestsuite/ChangeLog:\n\n\tPR target/71245\n\t* gcc.target/i386/pr71245-1.c: New test.\n\t* gcc.target/i386/pr71245-2.c: Ditto.\n\nFrom-SVN: r236863", "tree": {"sha": "56f243f0598adbb1fca56be6d0960c8128f04028", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56f243f0598adbb1fca56be6d0960c8128f04028"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beed3701c796842abbfb27d7484b35bd82818740", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beed3701c796842abbfb27d7484b35bd82818740", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beed3701c796842abbfb27d7484b35bd82818740", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beed3701c796842abbfb27d7484b35bd82818740/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0b03e9423c1965ba30cd90ce248475423fd55a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b03e9423c1965ba30cd90ce248475423fd55a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0b03e9423c1965ba30cd90ce248475423fd55a9"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "cde2b8df151d47473f30572226047478e4ed2e68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beed3701c796842abbfb27d7484b35bd82818740/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beed3701c796842abbfb27d7484b35bd82818740/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=beed3701c796842abbfb27d7484b35bd82818740", "patch": "@@ -1,3 +1,10 @@\n+2016-05-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/71245\n+\t* config/i386/sync.md (define_peephole2 atomic_storedi_fpu):\n+\tNew peepholes to remove unneeded fild/fistp pairs.\n+\t(define_peephole2 atomic_loaddi_fpu): Ditto.\n+\n 2016-05-27  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* predict.c (maybe_hot_frequency_p): Avoid division."}, {"sha": "9acf5ca8a873669ee46aedc13bf82f5109bd82a3", "filename": "gcc/config/i386/sync.md", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beed3701c796842abbfb27d7484b35bd82818740/gcc%2Fconfig%2Fi386%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beed3701c796842abbfb27d7484b35bd82818740/gcc%2Fconfig%2Fi386%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsync.md?ref=beed3701c796842abbfb27d7484b35bd82818740", "patch": "@@ -210,6 +210,34 @@\n   DONE;\n })\n \n+(define_peephole2\n+  [(set (match_operand:DF 0 \"fp_register_operand\")\n+\t(unspec:DF [(match_operand:DI 1 \"memory_operand\")]\n+\t\t   UNSPEC_FILD_ATOMIC))\n+   (set (match_operand:DI 2 \"memory_operand\")\n+\t(unspec:DI [(match_dup 0)]\n+\t\t   UNSPEC_FIST_ATOMIC))\n+   (set (match_operand:DF 3 \"fp_register_operand\")\n+\t(match_operand:DF 4 \"memory_operand\"))]\n+  \"!TARGET_64BIT\n+   && peep2_reg_dead_p (2, operands[0])\n+   && rtx_equal_p (operands[4], adjust_address_nv (operands[2], DFmode, 0))\"\n+  [(set (match_dup 3) (match_dup 5))]\n+  \"operands[5] = gen_lowpart (DFmode, operands[1]);\")\n+\n+(define_peephole2\n+  [(set (match_operand:DI 0 \"sse_reg_operand\")\n+\t(match_operand:DI 1 \"memory_operand\"))\n+   (set (match_operand:DI 2 \"memory_operand\")\n+\t(match_dup 0))\n+   (set (match_operand:DF 3 \"fp_register_operand\")\n+\t(match_operand:DF 4 \"memory_operand\"))]\n+  \"!TARGET_64BIT\n+   && peep2_reg_dead_p (2, operands[0])\n+   && rtx_equal_p (operands[4], adjust_address_nv (operands[2], DFmode, 0))\"\n+  [(set (match_dup 3) (match_dup 5))]\n+  \"operands[5] = gen_lowpart (DFmode, operands[1]);\")\n+\n (define_expand \"atomic_store<mode>\"\n   [(set (match_operand:ATOMIC 0 \"memory_operand\")\n \t(unspec:ATOMIC [(match_operand:ATOMIC 1 \"nonimmediate_operand\")\n@@ -298,6 +326,34 @@\n   DONE;\n })\n \n+(define_peephole2\n+  [(set (match_operand:DF 0 \"memory_operand\")\n+\t(match_operand:DF 1 \"fp_register_operand\"))\n+   (set (match_operand:DF 2 \"fp_register_operand\")\n+\t(unspec:DF [(match_operand:DI 3 \"memory_operand\")]\n+\t\t   UNSPEC_FILD_ATOMIC))\n+   (set (match_operand:DI 4 \"memory_operand\")\n+\t(unspec:DI [(match_dup 2)]\n+\t\t   UNSPEC_FIST_ATOMIC))]\n+  \"!TARGET_64BIT\n+   && peep2_reg_dead_p (3, operands[2])\n+   && rtx_equal_p (operands[0], adjust_address_nv (operands[3], DFmode, 0))\"\n+  [(set (match_dup 5) (match_dup 1))]\n+  \"operands[5] = gen_lowpart (DFmode, operands[4]);\")\n+\n+(define_peephole2\n+  [(set (match_operand:DF 0 \"memory_operand\")\n+\t(match_operand:DF 1 \"fp_register_operand\"))\n+   (set (match_operand:DI 2 \"sse_reg_operand\")\n+\t(match_operand:DI 3 \"memory_operand\"))\n+   (set (match_operand:DI 4 \"memory_operand\")\n+\t(match_dup 2))]\n+  \"!TARGET_64BIT\n+   && peep2_reg_dead_p (3, operands[2])\n+   && rtx_equal_p (operands[0], adjust_address_nv (operands[3], DFmode, 0))\"\n+  [(set (match_dup 5) (match_dup 1))]\n+  \"operands[5] = gen_lowpart (DFmode, operands[4]);\")\n+\n ;; ??? You'd think that we'd be able to perform this via FLOAT + FIX_TRUNC\n ;; operations.  But the fix_trunc patterns want way more setup than we want\n ;; to provide.  Note that the scratch is DFmode instead of XFmode in order"}, {"sha": "2313b8656c4b1de3f63f6a5c8c283a8c67babb0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beed3701c796842abbfb27d7484b35bd82818740/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beed3701c796842abbfb27d7484b35bd82818740/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=beed3701c796842abbfb27d7484b35bd82818740", "patch": "@@ -1,3 +1,9 @@\n+2016-05-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/71245\n+\t* gcc.target/i386/pr71245-1.c: New test.\n+\t* gcc.target/i386/pr71245-2.c: Ditto.\n+\n 2016-05-29  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/71105"}, {"sha": "be0b7602a8cffa9bc015986f72246580a13b0106", "filename": "gcc/testsuite/gcc.target/i386/pr71245-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beed3701c796842abbfb27d7484b35bd82818740/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71245-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beed3701c796842abbfb27d7484b35bd82818740/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71245-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71245-1.c?ref=beed3701c796842abbfb27d7484b35bd82818740", "patch": "@@ -0,0 +1,22 @@\n+/* PR target/71245 */\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O2 -march=pentium -mno-sse -mfpmath=387\" } */\n+\n+typedef union\n+{\n+  unsigned long long ll;\n+  double d;\n+} u_t;\n+\n+u_t d = { .d = 5.0 };\n+\n+void foo_d (void)\n+{\n+  u_t tmp;\n+  \n+  tmp.ll = __atomic_load_n (&d.ll, __ATOMIC_SEQ_CST);\n+  tmp.d += 1.0;\n+  __atomic_store_n (&d.ll, tmp.ll, __ATOMIC_SEQ_CST);\n+}\n+\n+/* { dg-final { scan-assembler-not \"(fistp|fild)\" } } */"}, {"sha": "65c139849d539a0448124207a683c4493a9bee14", "filename": "gcc/testsuite/gcc.target/i386/pr71245-2.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beed3701c796842abbfb27d7484b35bd82818740/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71245-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beed3701c796842abbfb27d7484b35bd82818740/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71245-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71245-2.c?ref=beed3701c796842abbfb27d7484b35bd82818740", "patch": "@@ -0,0 +1,22 @@\n+/* PR target/71245 */\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O2 -march=pentium -msse -mno-sse2 -mfpmath=387\" } */\n+\n+typedef union\n+{\n+  unsigned long long ll;\n+  double d;\n+} u_t;\n+\n+u_t d = { .d = 5.0 };\n+\n+void foo_d (void)\n+{\n+  u_t tmp;\n+  \n+  tmp.ll = __atomic_load_n (&d.ll, __ATOMIC_SEQ_CST);\n+  tmp.d += 1.0;\n+  __atomic_store_n (&d.ll, tmp.ll, __ATOMIC_SEQ_CST);\n+}\n+\n+/* { dg-final { scan-assembler-not \"movlps\" } } */"}]}