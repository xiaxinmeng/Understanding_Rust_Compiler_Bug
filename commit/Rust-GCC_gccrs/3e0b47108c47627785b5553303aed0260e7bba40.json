{"sha": "3e0b47108c47627785b5553303aed0260e7bba40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UwYjQ3MTA4YzQ3NjI3Nzg1YjU1NTMzMDNhZWQwMjYwZTdiYmE0MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-05-25T11:55:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-05-25T11:55:58Z"}, "message": "typeck.c (casts_away_constness, [...]): Strip both parts of pointer to data member types.\n\n\t* typeck.c (casts_away_constness, casts_away_constness_r): Strip both\n\tparts of pointer to data member types.\n\nFrom-SVN: r27138", "tree": {"sha": "113fb873d60d1c61979f8233da43d659f2d92601", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/113fb873d60d1c61979f8233da43d659f2d92601"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e0b47108c47627785b5553303aed0260e7bba40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e0b47108c47627785b5553303aed0260e7bba40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e0b47108c47627785b5553303aed0260e7bba40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e0b47108c47627785b5553303aed0260e7bba40/comments", "author": null, "committer": null, "parents": [{"sha": "b7e48b2d294e34fdedbbf4584d661b3728d72402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e48b2d294e34fdedbbf4584d661b3728d72402", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7e48b2d294e34fdedbbf4584d661b3728d72402"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "36cb365fee5a39c0a9b155fc689ed936bbfab4e7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e0b47108c47627785b5553303aed0260e7bba40/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e0b47108c47627785b5553303aed0260e7bba40/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3e0b47108c47627785b5553303aed0260e7bba40", "patch": "@@ -1,3 +1,8 @@\n+1999-05-25  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* typeck.c (casts_away_constness, casts_away_constness_r): Strip both\n+\tparts of pointer to data member types.\n+\n 1999-05-24  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl2.c (mark_vtable_entries): Don't make a copy of a function,"}, {"sha": "ead755d8371a66a185012512005602745e74514a", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e0b47108c47627785b5553303aed0260e7bba40/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e0b47108c47627785b5553303aed0260e7bba40/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=3e0b47108c47627785b5553303aed0260e7bba40", "patch": "@@ -7771,9 +7771,9 @@ casts_away_constness_r (t1, t2)\n      pointer to member level is ignored when determining if a const\n      cv-qualifier has been cast away.  */\n   if (TYPE_PTRMEM_P (*t1))\n-    *t1 = build_pointer_type (TREE_TYPE (*t1));\n+    *t1 = build_pointer_type (TREE_TYPE (TREE_TYPE (*t1)));\n   if (TYPE_PTRMEM_P (*t2))\n-    *t2 = build_pointer_type (TREE_TYPE (*t2));\n+    *t2 = build_pointer_type (TREE_TYPE (TREE_TYPE (*t2)));\n \n   /* [expr.const.cast]\n \n@@ -7844,8 +7844,9 @@ casts_away_constness (t1, t2)\n        T2\" casts away constness if a cast from an rvalue of type\n        \"poitner to T1\" to the type \"pointer to T2\" casts away\n        constness.  */\n-    return casts_away_constness (build_pointer_type (TREE_TYPE (t1)),\n-\t\t\t\t build_pointer_type (TREE_TYPE (t2)));\n+    return casts_away_constness\n+      (build_pointer_type (TREE_TYPE (TREE_TYPE (t1))),\n+       build_pointer_type (TREE_TYPE (TREE_TYPE (t2))));\n \n   /* Casting away constness is only something that makes sense for\n      pointer or reference types.  */"}]}