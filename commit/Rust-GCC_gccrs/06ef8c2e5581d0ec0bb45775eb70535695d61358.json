{"sha": "06ef8c2e5581d0ec0bb45775eb70535695d61358", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZlZjhjMmU1NTgxZDBlYzBiYjQ1Nzc1ZWI3MDUzNTY5NWQ2MTM1OA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-09-30T16:29:06Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-09-30T16:29:06Z"}, "message": "Add missing ','.\n\n2011-09-30  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* doc/extend.texi: Add missing ','.\n\nFrom-SVN: r179397", "tree": {"sha": "44668565f8c24e1fafedbe5ccc118f7dbdfe3f12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44668565f8c24e1fafedbe5ccc118f7dbdfe3f12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06ef8c2e5581d0ec0bb45775eb70535695d61358", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ef8c2e5581d0ec0bb45775eb70535695d61358", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ef8c2e5581d0ec0bb45775eb70535695d61358", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ef8c2e5581d0ec0bb45775eb70535695d61358/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad7715f324194274f98b65b631f38750c94be717", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7715f324194274f98b65b631f38750c94be717", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad7715f324194274f98b65b631f38750c94be717"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "2b62b9687116dd2cbe47c7624fc3746d2b0f9192", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ef8c2e5581d0ec0bb45775eb70535695d61358/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ef8c2e5581d0ec0bb45775eb70535695d61358/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06ef8c2e5581d0ec0bb45775eb70535695d61358", "patch": "@@ -1,3 +1,7 @@\n+2011-09-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* doc/extend.texi: Add missing ','.\n+\n 2011-09-30  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* common/config/c6x/c6x-common.c (c6x_option_optimization_table):"}, {"sha": "5fe0371df8f621dda56c842280f7e50203da5f7f", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ef8c2e5581d0ec0bb45775eb70535695d61358/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ef8c2e5581d0ec0bb45775eb70535695d61358/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=06ef8c2e5581d0ec0bb45775eb70535695d61358", "patch": "@@ -6722,8 +6722,8 @@ return the new value.  That is,\n builtin as @code{*ptr = ~(*ptr & value)} instead of\n @code{*ptr = ~*ptr & value}.\n \n-@item bool __sync_bool_compare_and_swap (@var{type} *ptr, @var{type} oldval @var{type} newval, ...)\n-@itemx @var{type} __sync_val_compare_and_swap (@var{type} *ptr, @var{type} oldval @var{type} newval, ...)\n+@item bool __sync_bool_compare_and_swap (@var{type} *ptr, @var{type} oldval, @var{type} newval, ...)\n+@itemx @var{type} __sync_val_compare_and_swap (@var{type} *ptr, @var{type} oldval, @var{type} newval, ...)\n @findex __sync_bool_compare_and_swap\n @findex __sync_val_compare_and_swap\n These builtins perform an atomic compare and swap.  That is, if the current"}]}