{"sha": "1a1345f4e8f64340586a3ee612be2f634a0faae6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWExMzQ1ZjRlOGY2NDM0MDU4NmEzZWU2MTJiZTJmNjM0YTBmYWFlNg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-20T22:21:56Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-20T22:21:56Z"}, "message": "[ARM/AArch64][testsuite] Add vmla_lane and vmls_lane tests.\n\n2015-01-20  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vmlX_lane.inc: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmla_lane.c: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmls_lane.c: New file.\n\nFrom-SVN: r219918", "tree": {"sha": "ce9b3bd433ab7b596aa67dcfa8bc0bc00c4969ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce9b3bd433ab7b596aa67dcfa8bc0bc00c4969ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a1345f4e8f64340586a3ee612be2f634a0faae6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a1345f4e8f64340586a3ee612be2f634a0faae6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a1345f4e8f64340586a3ee612be2f634a0faae6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a1345f4e8f64340586a3ee612be2f634a0faae6/comments", "author": null, "committer": null, "parents": [{"sha": "84c8a10b6f1a7e37466ebc1548aa40832ed4d151", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c8a10b6f1a7e37466ebc1548aa40832ed4d151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84c8a10b6f1a7e37466ebc1548aa40832ed4d151"}], "stats": {"total": 154, "additions": 154, "deletions": 0}, "files": [{"sha": "3af8d8ece2492464fafb7cdd7b42b9d1c48401a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a1345f4e8f64340586a3ee612be2f634a0faae6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a1345f4e8f64340586a3ee612be2f634a0faae6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a1345f4e8f64340586a3ee612be2f634a0faae6", "patch": "@@ -1,3 +1,9 @@\n+2015-01-20  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmlX_lane.inc: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmla_lane.c: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmls_lane.c: New file.\n+\n 2015-01-20  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vmlX.inc: New file."}, {"sha": "cc310ac9e0dc197dd6c21e99aa6279b642fbb976", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmlX_lane.inc", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a1345f4e8f64340586a3ee612be2f634a0faae6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvmlX_lane.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a1345f4e8f64340586a3ee612be2f634a0faae6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvmlX_lane.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvmlX_lane.inc?ref=1a1345f4e8f64340586a3ee612be2f634a0faae6", "patch": "@@ -0,0 +1,100 @@\n+#define FNNAME1(NAME) exec_ ## NAME\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+void FNNAME (INSN_NAME) (void)\n+{\n+#define DECL_VMLX_LANE(VAR)\t\t\t\\\n+  DECL_VARIABLE(VAR, int, 16, 4);\t\t\\\n+  DECL_VARIABLE(VAR, int, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 16, 4);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, float, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, int, 16, 8);\t\t\\\n+  DECL_VARIABLE(VAR, int, 32, 4);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 16, 8);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 32, 4);\t\t\\\n+  DECL_VARIABLE(VAR, float, 32, 4)\n+\n+  /* vector_res = vmlx_lane(vector, vector2, vector3, lane),\n+     then store the result.  */\n+#define TEST_VMLX_LANE1(INSN, Q, T1, T2, W, N, N2, L)\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N) =\t\t\t\t\t\\\n+    INSN##Q##_lane_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\\\n+\t\t\t   VECT_VAR(vector2, T1, W, N),\t\t\t\\\n+\t\t\t   VECT_VAR(vector3, T1, W, N2),\t\t\\\n+\t\t\t   L);\t\t\t\t\t\t\\\n+  vst1##Q##_##T2##W(VECT_VAR(result, T1, W, N), \\\n+\t\t    VECT_VAR(vector_res, T1, W, N))\n+\n+#define TEST_VMLX_LANE(INSN, Q, T1, T2, W, N, N2, V)\t\\\n+  TEST_VMLX_LANE1(INSN, Q, T1, T2, W, N, N2, V)\n+\n+  DECL_VMLX_LANE(vector);\n+  DECL_VMLX_LANE(vector2);\n+  DECL_VMLX_LANE(vector_res);\n+\n+  DECL_VARIABLE(vector3, int, 16, 4);\n+  DECL_VARIABLE(vector3, int, 32, 2);\n+  DECL_VARIABLE(vector3, uint, 16, 4);\n+  DECL_VARIABLE(vector3, uint, 32, 2);\n+  DECL_VARIABLE(vector3, float, 32, 2);\n+\n+  clean_results ();\n+\n+  VLOAD(vector, buffer, , int, s, 16, 4);\n+  VLOAD(vector, buffer, , int, s, 32, 2);\n+  VLOAD(vector, buffer, , uint, u, 16, 4);\n+  VLOAD(vector, buffer, , uint, u, 32, 2);\n+  VLOAD(vector, buffer, q, int, s, 16, 8);\n+  VLOAD(vector, buffer, q, int, s, 32, 4);\n+  VLOAD(vector, buffer, q, uint, u, 16, 8);\n+  VLOAD(vector, buffer, q, uint, u, 32, 4);\n+  VLOAD(vector, buffer, , float, f, 32, 2);\n+  VLOAD(vector, buffer, q, float, f, 32, 4);\n+\n+  VDUP(vector2, , int, s, 16, 4, 0x55);\n+  VDUP(vector2, , int, s, 32, 2, 0x55);\n+  VDUP(vector2, , uint, u, 16, 4, 0x55);\n+  VDUP(vector2, , uint, u, 32, 2, 0x55);\n+  VDUP(vector2, , float, f, 32, 2, 55.3f);\n+  VDUP(vector2, q, int, s, 16, 8, 0x55);\n+  VDUP(vector2, q, int, s, 32, 4, 0x55);\n+  VDUP(vector2, q, uint, u, 16, 8, 0x55);\n+  VDUP(vector2, q, uint, u, 32, 4, 0x55);\n+  VDUP(vector2, q, float, f, 32, 4, 55.8f);\n+\n+  VDUP(vector3, , int, s, 16, 4, 0xBB);\n+  VDUP(vector3, , int, s, 32, 2, 0xBB);\n+  VDUP(vector3, , uint, u, 16, 4, 0xBB);\n+  VDUP(vector3, , uint, u, 32, 2, 0xBB);\n+  VDUP(vector3, , float, f, 32, 2, 11.34f);\n+\n+  /* Choose lane arbitrarily.  */\n+  TEST_VMLX_LANE(INSN_NAME, , int, s, 16, 4, 4, 2);\n+  TEST_VMLX_LANE(INSN_NAME, , int, s, 32, 2, 2, 1);\n+  TEST_VMLX_LANE(INSN_NAME, , uint, u, 16, 4, 4, 2);\n+  TEST_VMLX_LANE(INSN_NAME, , uint, u, 32, 2, 2, 1);\n+  TEST_VMLX_LANE(INSN_NAME, , float, f, 32, 2, 2, 1);\n+  TEST_VMLX_LANE(INSN_NAME, q, int, s, 16, 8, 4, 3);\n+  TEST_VMLX_LANE(INSN_NAME, q, int, s, 32, 4, 2, 1);\n+  TEST_VMLX_LANE(INSN_NAME, q, uint, u, 16, 8, 4, 2);\n+  TEST_VMLX_LANE(INSN_NAME, q, uint, u, 32, 4, 2, 1);\n+  TEST_VMLX_LANE(INSN_NAME, q, float, f, 32, 4, 2, 1);\n+\n+  CHECK(TEST_MSG, int, 16, 4, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 4, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected, \"\");\n+  CHECK_FP(TEST_MSG, float, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 16, 8, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 8, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, \"\");\n+  CHECK_FP(TEST_MSG, float, 32, 4, PRIx32, expected, \"\");\n+}\n+\n+int main (void)\n+{\n+  FNNAME (INSN_NAME) ();\n+  return 0;\n+}"}, {"sha": "f332152d1a5975534ce3890947f5f8fffd193f62", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmla_lane.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a1345f4e8f64340586a3ee612be2f634a0faae6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmla_lane.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a1345f4e8f64340586a3ee612be2f634a0faae6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmla_lane.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmla_lane.c?ref=1a1345f4e8f64340586a3ee612be2f634a0faae6", "patch": "@@ -0,0 +1,23 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+#define INSN_NAME vmla\n+#define TEST_MSG \"VMLA_LANE\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0x3e07, 0x3e08, 0x3e09, 0x3e0a };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0x3e07, 0x3e08 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x3e07, 0x3e08, 0x3e09, 0x3e0a };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x3e07, 0x3e08 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0x4418c687, 0x44190687 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0x3e07, 0x3e08, 0x3e09, 0x3e0a,\n+\t\t\t\t\t0x3e0b, 0x3e0c, 0x3e0d, 0x3e0e };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0x3e07, 0x3e08, 0x3e09, 0x3e0a };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0x3e07, 0x3e08, 0x3e09, 0x3e0a,\n+\t\t\t\t\t 0x3e0b, 0x3e0c, 0x3e0d, 0x3e0e };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0x3e07, 0x3e08, 0x3e09, 0x3e0a };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x441a3168, 0x441a7168,\n+\t\t\t\t\t   0x441ab168, 0x441af168 };\n+\n+#include \"vmlX_lane.inc\""}, {"sha": "6db5a737ddd0ee9eef59d6486a0f053c884c5d8c", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmls_lane.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a1345f4e8f64340586a3ee612be2f634a0faae6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmls_lane.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a1345f4e8f64340586a3ee612be2f634a0faae6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmls_lane.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmls_lane.c?ref=1a1345f4e8f64340586a3ee612be2f634a0faae6", "patch": "@@ -0,0 +1,25 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+#define INSN_NAME vmls\n+#define TEST_MSG \"VMLS_LANE\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0xc1d9, 0xc1da, 0xc1db, 0xc1dc };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xffffc1d9, 0xffffc1da };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0xc1d9, 0xc1da, 0xc1db, 0xc1dc };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0xffffc1d9, 0xffffc1da };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0xc420c687, 0xc4208687 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xc1d9, 0xc1da, 0xc1db, 0xc1dc,\n+\t\t\t\t\t0xc1dd, 0xc1de, 0xc1df, 0xc1e0 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffffc1d9, 0xffffc1da,\n+\t\t\t\t\t0xffffc1db, 0xffffc1dc };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xc1d9, 0xc1da, 0xc1db, 0xc1dc,\n+\t\t\t\t\t 0xc1dd, 0xc1de, 0xc1df, 0xc1e0 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xffffc1d9, 0xffffc1da,\n+\t\t\t\t\t 0xffffc1db, 0xffffc1dc };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0xc4223168, 0xc421f168,\n+\t\t\t\t\t   0xc421b168, 0xc4217168 };\n+\n+#include \"vmlX_lane.inc\""}]}