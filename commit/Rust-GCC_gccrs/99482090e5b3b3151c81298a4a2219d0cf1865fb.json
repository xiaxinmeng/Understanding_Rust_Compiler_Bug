{"sha": "99482090e5b3b3151c81298a4a2219d0cf1865fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk0ODIwOTBlNWIzYjMxNTFjODEyOThhNGEyMjE5ZDBjZjE4NjVmYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-01-20T20:13:10Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-01-20T20:13:10Z"}, "message": "output.h (output_constant): Delete.\n\n\t* output.h (output_constant): Delete.\n\t* varasm.c (output_constant): Make private.\n\nFrom-SVN: r206855", "tree": {"sha": "db2615a16f6b61ab095fdd49eee7b26e5fa6bdaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db2615a16f6b61ab095fdd49eee7b26e5fa6bdaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99482090e5b3b3151c81298a4a2219d0cf1865fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99482090e5b3b3151c81298a4a2219d0cf1865fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99482090e5b3b3151c81298a4a2219d0cf1865fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99482090e5b3b3151c81298a4a2219d0cf1865fb/comments", "author": null, "committer": null, "parents": [{"sha": "66bc6a9ecc5cc4aba9473abdc54930dfdcb1358e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66bc6a9ecc5cc4aba9473abdc54930dfdcb1358e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66bc6a9ecc5cc4aba9473abdc54930dfdcb1358e"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "01ef0cadcf19f6e33734d686dc18e7bc4c4ed066", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99482090e5b3b3151c81298a4a2219d0cf1865fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99482090e5b3b3151c81298a4a2219d0cf1865fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99482090e5b3b3151c81298a4a2219d0cf1865fb", "patch": "@@ -1,3 +1,8 @@\n+2014-01-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* output.h (output_constant): Delete.\n+\t* varasm.c (output_constant): Make private.\n+\n 2014-01-20  Alex Velenko  <Alex.Velenko@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (vec_perm<mode>): Add BE check."}, {"sha": "2b32601d861c45d81448f80291792c4742f15303", "filename": "gcc/output.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99482090e5b3b3151c81298a4a2219d0cf1865fb/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99482090e5b3b3151c81298a4a2219d0cf1865fb/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=99482090e5b3b3151c81298a4a2219d0cf1865fb", "patch": "@@ -290,18 +290,6 @@ extern void output_object_blocks (void);\n \n extern void output_quoted_string (FILE *, const char *);\n \n-/* Output assembler code for constant EXP to FILE, with no label.\n-   This includes the pseudo-op such as \".int\" or \".byte\", and a newline.\n-   Assumes output_addressed_constants has been done on EXP already.\n-\n-   Generate at least SIZE bytes of assembler data, padding at the end\n-   with zeros if necessary.  SIZE must always be specified.  The returned\n-   value is the actual number of bytes of assembler data generated, which\n-   may be bigger than SIZE if the object contains a variable length field.\n-\n-   ALIGN is the alignment in bits that may be assumed for the data.  */\n-extern unsigned HOST_WIDE_INT output_constant (tree, unsigned HOST_WIDE_INT, unsigned int);\n-\n /* When outputting delayed branch sequences, this rtx holds the\n    sequence being output.  It is null when no delayed branch\n    sequence is being output, so it can be used as a test in the"}, {"sha": "d46f0084458b60a6d8a69835334440d02dd58bcf", "filename": "gcc/varasm.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99482090e5b3b3151c81298a4a2219d0cf1865fb/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99482090e5b3b3151c81298a4a2219d0cf1865fb/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=99482090e5b3b3151c81298a4a2219d0cf1865fb", "patch": "@@ -117,8 +117,8 @@ static int compare_constant (const tree, const tree);\n static tree copy_constant (tree);\n static void output_constant_def_contents (rtx);\n static void output_addressed_constants (tree);\n-static unsigned HOST_WIDE_INT array_size_for_constructor (tree);\n-static unsigned min_align (unsigned, unsigned);\n+static unsigned HOST_WIDE_INT output_constant (tree, unsigned HOST_WIDE_INT,\n+\t\t\t\t\t       unsigned int);\n static void globalize_decl (tree);\n static bool decl_readonly_section_1 (enum section_category);\n #ifdef BSS_SECTION_ASM_OP\n@@ -4602,7 +4602,7 @@ static unsigned HOST_WIDE_INT\n \n    ALIGN is the alignment of the data in bits.  */\n \n-unsigned HOST_WIDE_INT\n+static unsigned HOST_WIDE_INT\n output_constant (tree exp, unsigned HOST_WIDE_INT size, unsigned int align)\n {\n   enum tree_code code;"}]}