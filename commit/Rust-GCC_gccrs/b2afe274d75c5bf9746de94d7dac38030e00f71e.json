{"sha": "b2afe274d75c5bf9746de94d7dac38030e00f71e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJhZmUyNzRkNzVjNWJmOTc0NmRlOTRkN2RhYzM4MDMwZTAwZjcxZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-24T17:16:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-24T17:16:08Z"}, "message": "[multiple changes]\n\n2014-02-24  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-os_lib.ads: Update comment.\n\n2014-02-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Expression_Function): Use sloc of\n\toriginal defining identifiers in parameter specifications for\n\tbody. They may differ from parameter specification itself if a\n\tlist of identifiers appears in the tree and is expanded by parser.\n\n2014-02-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch3.adb (P_Basic_Declarative_Items): If an improper body\n\tappears in a list of basic declarations, complete the tree with\n\tan empty statement list, to prevent cascaded errors and crashes\n\tif semantic analysis is attempted.\n\nFrom-SVN: r208090", "tree": {"sha": "15592e213f8216b3315f3437ce2fc40d6e90257a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15592e213f8216b3315f3437ce2fc40d6e90257a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2afe274d75c5bf9746de94d7dac38030e00f71e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2afe274d75c5bf9746de94d7dac38030e00f71e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2afe274d75c5bf9746de94d7dac38030e00f71e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2afe274d75c5bf9746de94d7dac38030e00f71e/comments", "author": null, "committer": null, "parents": [{"sha": "b5eccd0cbd46ba49b361d67597284a94a4fdd8b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5eccd0cbd46ba49b361d67597284a94a4fdd8b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5eccd0cbd46ba49b361d67597284a94a4fdd8b7"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "b3690ebc3bc3df5dad9226ef50fed7ba5d8f4529", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2afe274d75c5bf9746de94d7dac38030e00f71e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2afe274d75c5bf9746de94d7dac38030e00f71e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b2afe274d75c5bf9746de94d7dac38030e00f71e", "patch": "@@ -1,3 +1,10 @@\n+2014-02-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch3.adb (P_Basic_Declarative_Items): If an improper body\n+\tappears in a list of basic declarations, complete the tree with\n+\tan empty statement list, to prevent cascaded errors and crashes\n+\tif semantic analysis is attempted.\n+\n 2014-02-24  Thomas Quinot  <quinot@adacore.com>\n \n \t* g-sercom-mingw.adb (Open): Fix incorrect test for error return"}, {"sha": "4f8afb0286f460b09022288ce8f71bbff55158f8", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2afe274d75c5bf9746de94d7dac38030e00f71e/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2afe274d75c5bf9746de94d7dac38030e00f71e/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=b2afe274d75c5bf9746de94d7dac38030e00f71e", "patch": "@@ -4626,6 +4626,17 @@ package body Ch3 is\n          then\n             Error_Msg (\"proper body not allowed in package spec\", Sloc (Decl));\n \n+            --  Complete declaration of mangled subprogram body, for better\n+            --  recovery if analysis is attempted.\n+\n+            if Nkind_In\n+              (Decl, N_Subprogram_Body, N_Package_Body, N_Task_Body)\n+            then\n+               Set_Handled_Statement_Sequence (Decl,\n+                 Make_Handled_Sequence_Of_Statements (Sloc (Decl),\n+                   Statements => New_List));\n+            end if;\n+\n          --  Test for body stub scanned, not acceptable as basic decl item\n \n          elsif Kind in N_Body_Stub then"}, {"sha": "274810e0ddb5bd5decf73d580eb19193f65c5a1c", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2afe274d75c5bf9746de94d7dac38030e00f71e/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2afe274d75c5bf9746de94d7dac38030e00f71e/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=b2afe274d75c5bf9746de94d7dac38030e00f71e", "patch": "@@ -48,6 +48,9 @@\n --  be used by other predefined packages. User access to this package is via\n --  a renaming of this package in GNAT.OS_Lib (file g-os_lib.ads).\n \n+--  Note: a distinct body for this spec is included in the .NET runtime library\n+--  and must be kept in sync with changes made in this file.\n+\n pragma Compiler_Unit;\n \n with System;"}, {"sha": "f456131f2e4c4395737479c31798b81575300be4", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2afe274d75c5bf9746de94d7dac38030e00f71e/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2afe274d75c5bf9746de94d7dac38030e00f71e/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b2afe274d75c5bf9746de94d7dac38030e00f71e", "patch": "@@ -311,10 +311,14 @@ package body Sem_Ch6 is\n             Formal_Spec : Node_Id;\n          begin\n             Formal_Spec := First (Parameter_Specifications (New_Spec));\n+\n+            --  Create a new formal parameter at the same source position\n+\n             while Present (Formal_Spec) loop\n                Set_Defining_Identifier\n                  (Formal_Spec,\n-                  Make_Defining_Identifier (Sloc (Formal_Spec),\n+                  Make_Defining_Identifier\n+                    (Sloc (Defining_Identifier (Formal_Spec)),\n                     Chars => Chars (Defining_Identifier (Formal_Spec))));\n                Next (Formal_Spec);\n             end loop;"}]}