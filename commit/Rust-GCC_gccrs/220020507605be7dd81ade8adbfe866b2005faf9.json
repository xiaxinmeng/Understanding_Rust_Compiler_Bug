{"sha": "220020507605be7dd81ade8adbfe866b2005faf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIwMDIwNTA3NjA1YmU3ZGQ4MWFkZThhZGJmZTg2NmIyMDA1ZmFmOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2006-08-30T15:51:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-08-30T15:51:17Z"}, "message": "re PR c++/26670 (attribute((packed)) sometimes not ignored for non-PODs)\n\n        PR c++/26670\n        * class.c (check_field_decls): Don't unset TYPE_PACKED until all\n        the fields have been processed.\n\nFrom-SVN: r116591", "tree": {"sha": "0926b7c0d5b0b0d69cc44d712e7f204ca9ee991b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0926b7c0d5b0b0d69cc44d712e7f204ca9ee991b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/220020507605be7dd81ade8adbfe866b2005faf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220020507605be7dd81ade8adbfe866b2005faf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/220020507605be7dd81ade8adbfe866b2005faf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220020507605be7dd81ade8adbfe866b2005faf9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "884f22e3a20aed205be7c50624361b8f9c7babd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884f22e3a20aed205be7c50624361b8f9c7babd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/884f22e3a20aed205be7c50624361b8f9c7babd0"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "5311778db8bdd19433c643f431cca80bc308b30d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220020507605be7dd81ade8adbfe866b2005faf9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220020507605be7dd81ade8adbfe866b2005faf9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=220020507605be7dd81ade8adbfe866b2005faf9", "patch": "@@ -1,3 +1,9 @@\n+2006-08-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/26670\n+\t* class.c (check_field_decls): Don't unset TYPE_PACKED until all\n+\tthe fields have been processed.\n+\n 2006-08-29  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR C++/28349"}, {"sha": "7361b5a1ba9b9d383ec80829b6e5bcee0fb5dad9", "filename": "gcc/cp/class.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220020507605be7dd81ade8adbfe866b2005faf9/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220020507605be7dd81ade8adbfe866b2005faf9/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=220020507605be7dd81ade8adbfe866b2005faf9", "patch": "@@ -2795,6 +2795,7 @@ check_field_decls (tree t, tree *access_decls,\n   tree *next;\n   bool has_pointers;\n   int any_default_members;\n+  int cant_pack = 0;\n \n   /* Assume there are no access declarations.  */\n   *access_decls = NULL_TREE;\n@@ -2911,7 +2912,7 @@ check_field_decls (tree t, tree *access_decls,\n \t\t(0,\n \t\t \"ignoring packed attribute because of unpacked non-POD field %q+#D\",\n \t\t x);\n-\t      TYPE_PACKED (t) = 0;\n+\t      cant_pack = 1;\n \t    }\n \t  else if (TYPE_ALIGN (TREE_TYPE (x)) > BITS_PER_UNIT)\n \t    DECL_PACKED (x) = 1;\n@@ -3018,11 +3019,11 @@ check_field_decls (tree t, tree *access_decls,\n \tis needed to free dynamic memory.\n \n      This seems enough for practical purposes.  */\n-    if (warn_ecpp\n-\t&& has_pointers\n-\t&& TYPE_HAS_CONSTRUCTOR (t)\n-\t&& TYPE_HAS_NONTRIVIAL_DESTRUCTOR (t)\n-\t&& !(TYPE_HAS_INIT_REF (t) && TYPE_HAS_ASSIGN_REF (t)))\n+  if (warn_ecpp\n+      && has_pointers\n+      && TYPE_HAS_CONSTRUCTOR (t)\n+      && TYPE_HAS_NONTRIVIAL_DESTRUCTOR (t)\n+      && !(TYPE_HAS_INIT_REF (t) && TYPE_HAS_ASSIGN_REF (t)))\n     {\n       warning (OPT_Weffc__, \"%q#T has pointer data members\", t);\n \n@@ -3038,6 +3039,9 @@ check_field_decls (tree t, tree *access_decls,\n \t\t \"  but does not override %<operator=(const %T&)%>\", t);\n     }\n \n+  /* If any of the fields couldn't be packed, unset TYPE_PACKED.  */\n+  if (cant_pack)\n+    TYPE_PACKED (t) = 0;\n \n   /* Check anonymous struct/anonymous union fields.  */\n   finish_struct_anon (t);"}]}