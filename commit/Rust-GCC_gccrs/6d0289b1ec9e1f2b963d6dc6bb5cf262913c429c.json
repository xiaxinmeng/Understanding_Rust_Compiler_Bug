{"sha": "6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwMjg5YjFlYzllMWYyYjk2M2Q2ZGM2YmI1Y2YyNjI5MTNjNDI5Yw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2019-07-05T07:03:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-05T07:03:25Z"}, "message": "[Ada] Minor reformatting\n\n2019-07-05  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* bindo-units.adb, checks.adb, exp_attr.adb, exp_ch3.adb,\n\texp_ch4.adb, exp_pakd.adb, lib-writ.adb, libgnat/g-traceb.adb,\n\tlibgnat/g-traceb.ads, libgnat/s-stratt.ads, sem_aux.ads,\n\tsem_util.adb: Minor reformatting.\n\nFrom-SVN: r273123", "tree": {"sha": "5baf58053673f4fd7fdba1e5b4bde4a6fb1b8b28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5baf58053673f4fd7fdba1e5b4bde4a6fb1b8b28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c365eb26e87eab31f55b760fe4220b68fb952b72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c365eb26e87eab31f55b760fe4220b68fb952b72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c365eb26e87eab31f55b760fe4220b68fb952b72"}], "stats": {"total": 68, "additions": 41, "deletions": 27}, "files": [{"sha": "1899bffd697c2aca180da5fd65d15857e78cc85b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -1,3 +1,10 @@\n+2019-07-05  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* bindo-units.adb, checks.adb, exp_attr.adb, exp_ch3.adb,\n+\texp_ch4.adb, exp_pakd.adb, lib-writ.adb, libgnat/g-traceb.adb,\n+\tlibgnat/g-traceb.ads, libgnat/s-stratt.ads, sem_aux.ads,\n+\tsem_util.adb: Minor reformatting.\n+\n 2019-07-05  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch13.adb (Build_Predicate_Functions): If a subtype that"}, {"sha": "f234f40a3834e1cf437708487ded60efeb703995", "filename": "gcc/ada/bindo-units.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fbindo-units.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fbindo-units.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-units.adb?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -45,8 +45,6 @@ package body Bindo.Units is\n \n    --  The following set stores all units the need to be elaborated\n \n-   --  Kirchev\n-\n    Elaborable_Units : Unit_Sets.Membership_Set := Unit_Sets.Nil;\n \n    -----------------------"}, {"sha": "ec4e96ff6132d1a61463eb2ffba62c23bc56641e", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -2722,7 +2722,7 @@ package body Checks is\n             then\n                declare\n                   In_Body : Boolean := False;\n-                  P : Node_Id := Parent (N);\n+                  P       : Node_Id := Parent (N);\n \n                begin\n                   while Present (P) loop"}, {"sha": "ac99ec1346906d3806560bf4659a076ae9932d21", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -3997,8 +3997,9 @@ package body Exp_Attr is\n \n                declare\n                   Rtyp : constant Entity_Id := Root_Type (P_Type);\n+\n+                  Expr    : Node_Id; -- call to Descendant_Tag\n                   Get_Tag : Node_Id; -- expression to read the 'Tag\n-                  Expr : Node_Id; -- call to Descendant_Tag\n \n                begin\n                   --  Read the internal tag (RM 13.13.2(34)) and use it to"}, {"sha": "834aaa3a18f9f34c40893eda1e499b361a311379", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -9550,9 +9550,9 @@ package body Exp_Ch3 is\n                      if No (Eq_Call) then\n                         Next_Test := Make_Op_Ne (Loc, Lhs, Rhs);\n \n-                     --  If a component has a defined abstract equality,\n-                     --  its application raises Program_Error on that\n-                     --  component and therefore on the current variant.\n+                     --  If a component has a defined abstract equality, its\n+                     --  application raises Program_Error on that component\n+                     --  and therefore on the current variant.\n \n                      elsif Nkind (Eq_Call) = N_Raise_Program_Error then\n                         Set_Etype (Eq_Call, Standard_Boolean);"}, {"sha": "a611e03c47a37ee2f9625136a823c2a9a123cfe0", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -11471,8 +11471,8 @@ package body Exp_Ch4 is\n          then\n             if not Comes_From_Source (N)\n               and then Nkind_In (Parent (N), N_Function_Call,\n-                                             N_Procedure_Call_Statement,\n-                                             N_Parameter_Association)\n+                                             N_Parameter_Association,\n+                                             N_Procedure_Call_Statement)\n               and then Is_Interface (Designated_Type (Target_Type))\n               and then Is_Class_Wide_Type (Designated_Type (Target_Type))\n             then"}, {"sha": "f6a7eedeea04996229a65519893f86f93abb09c8", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -1150,8 +1150,9 @@ package body Exp_Pakd is\n       Expr := First (Expressions (Lhs));\n       while Present (Expr) loop\n          declare\n-            Loc       : constant Source_Ptr := Sloc (Expr);\n-            Expr_Typ  : constant Entity_Id := Etype (Expr);\n+            Expr_Typ : constant Entity_Id  := Etype (Expr);\n+            Loc      : constant Source_Ptr := Sloc  (Expr);\n+\n             Expr_Copy : Node_Id;\n \n          begin"}, {"sha": "31ef8e2febab903a2743a9ec94a349d83c0d4390", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -1081,7 +1081,7 @@ package body Lib.Writ is\n \n    begin\n       --  We never write an ALI file if the original operating mode was\n-      --  syntax-only (-gnats switch used in compiler invocation line)\n+      --  syntax-only (-gnats switch used in compiler invocation line).\n \n       if Original_Operating_Mode = Check_Syntax then\n          return;"}, {"sha": "9cf04de5ec903a21e1b606e7409e555bd7a34757", "filename": "gcc/ada/libgnat/g-traceb.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Flibgnat%2Fg-traceb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Flibgnat%2Fg-traceb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-traceb.adb?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -41,13 +41,15 @@ package body GNAT.Traceback is\n \n    procedure Call_Chain\n      (Traceback : out Tracebacks_Array;\n-      Len       : out Natural) is\n+      Len       : out Natural)\n+   is\n    begin\n       System.Traceback.Call_Chain (Traceback, Traceback'Length, Len);\n    end Call_Chain;\n \n    function Call_Chain\n-     (Max_Len : Positive; Skip_Frames : Natural := 1) return Tracebacks_Array\n+     (Max_Len     : Positive;\n+      Skip_Frames : Natural := 1) return Tracebacks_Array\n    is\n       Traceback : Tracebacks_Array (1 .. Max_Len);\n       Len       : Natural;"}, {"sha": "6a565c9a3a62b3bedfaf0af2faf18b085a7abc98", "filename": "gcc/ada/libgnat/g-traceb.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Flibgnat%2Fg-traceb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Flibgnat%2Fg-traceb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-traceb.ads?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -99,7 +99,8 @@ package GNAT.Traceback is\n    --  are undefined on return.\n \n    function Call_Chain\n-     (Max_Len : Positive; Skip_Frames : Natural := 1) return Tracebacks_Array;\n+     (Max_Len     : Positive;\n+      Skip_Frames : Natural := 1) return Tracebacks_Array;\n    --  Returns up to Max_Len tracebacks corresponding to the current call\n    --  chain. Result array order is the same as in above procedure Call_Chain\n    --  except that Skip_Frames says how many of the most recent calls should be"}, {"sha": "e050bc1d8b4ab48a76007ff4537493c61778b7a6", "filename": "gcc/ada/libgnat/s-stratt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Flibgnat%2Fs-stratt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Flibgnat%2Fs-stratt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-stratt.ads?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -154,7 +154,7 @@ package System.Stream_Attributes is\n \n    function Block_IO_OK return Boolean;\n    --  Package System.Stream_Attributes has several bodies - the default one\n-   --  distributed with GNAT, and s-stratt-xdr.adb, which is based on the XDR\n+   --  distributed with GNAT, and s-stratt__xdr.adb, which is based on the XDR\n    --  standard. Both bodies share the same spec. The role of this function is\n    --  to indicate whether the current version of System.Stream_Attributes\n    --  supports block IO. See System.Strings.Stream_Ops (s-ststop) for details."}, {"sha": "f3b7f2469ff8069f62db223e7bc2ff01c190ee40", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -87,7 +87,7 @@ package Sem_Aux is\n    -----------------\n \n    function Ancestor_Subtype (Typ : Entity_Id) return Entity_Id;\n-   --  The argument Id is a type or subtype entity. If the argument is a\n+   --  The argument Typ is a type or subtype entity. If the argument is a\n    --  subtype then it returns the subtype or type from which the subtype was\n    --  obtained, otherwise it returns Empty.\n "}, {"sha": "67bc4de39c43ca572bc789590953f080d0f2228c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=6d0289b1ec9e1f2b963d6dc6bb5cf262913c429c", "patch": "@@ -6576,13 +6576,15 @@ package body Sem_Util is\n                   --  the accessibility level is that of the declaration of the\n                   --  stand-alone object.\n \n-                  return Make_Level_Literal\n-                           (Object_Access_Level\n-                              (Defining_Identifier (Parent (N))));\n+                  return\n+                    Make_Level_Literal\n+                      (Object_Access_Level\n+                         (Defining_Identifier (Parent (N))));\n \n                when N_Assignment_Statement =>\n-                  return Make_Level_Literal\n-                           (Object_Access_Level (Name (Parent (N))));\n+                  return\n+                    Make_Level_Literal\n+                      (Object_Access_Level (Name (Parent (N))));\n \n                when others =>\n                   declare\n@@ -6591,8 +6593,9 @@ package body Sem_Util is\n                   begin\n                      Error_Msg_Strlen := S'Length;\n                      Error_Msg_String (1 .. Error_Msg_Strlen) := S;\n-                     Error_Msg_N (\"unsupported context for anonymous \" &\n-                                  \"allocator (~)\", Parent (N));\n+                     Error_Msg_N\n+                       (\"unsupported context for anonymous allocator (~)\",\n+                        Parent (N));\n                   end;\n             end case;\n \n@@ -6899,8 +6902,9 @@ package body Sem_Util is\n       elsif Dynamic_Scope = Empty then\n          return Empty;\n \n-      elsif Ekind_In (Dynamic_Scope, E_Package, E_Package_Body,\n-                      E_Generic_Package)\n+      elsif Ekind_In (Dynamic_Scope, E_Generic_Package,\n+                                     E_Package,\n+                                     E_Package_Body)\n       then\n          return Dynamic_Scope;\n \n@@ -6954,7 +6958,7 @@ package body Sem_Util is\n       elsif Ekind (Dyn_Scop) = E_Subprogram_Body then\n          return Corresponding_Spec (Parent (Parent (Dyn_Scop)));\n \n-      elsif Ekind_In (Dyn_Scop, E_Block, E_Return_Statement, E_Loop) then\n+      elsif Ekind_In (Dyn_Scop, E_Block, E_Loop, E_Return_Statement) then\n          return Enclosing_Subprogram (Dyn_Scop);\n \n       elsif Ekind (Dyn_Scop) = E_Entry then"}]}