{"sha": "865a3a421ada308194ab5960e4931fa09c3c68ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY1YTNhNDIxYWRhMzA4MTk0YWI1OTYwZTQ5MzFmYTA5YzNjNjhhZA==", "commit": {"author": {"name": "Douglas Gregor", "email": "doug.gregor@gmail.com", "date": "2008-08-06T19:08:12Z"}, "committer": {"name": "Doug Gregor", "email": "dgregor@gcc.gnu.org", "date": "2008-08-06T19:08:12Z"}, "message": "re PR c++/36460 (No space between >'s not always handled in C++0x)\n\n2008-08-06  Douglas Gregor  <doug.gregor@gmail.com>\n\n       PR c++/36460\n       * parser.c (cp_parser_template_argument): Don't assume that '>>'\n       following a type-id is an error when in C++0x mode.\n\n2008-08-06  Douglas Gregor  <doug.gregor@gmail.com>\n\n       PR c++/36460\n       * g++.dg/cpp0x/bracket3.C: Add another test case for the >>\n       warning under -Wc++0x-compat.\n       * g++.dg/cpp0x/bracket4.C: Add testcase for PR c++/36460.\n\nFrom-SVN: r138819", "tree": {"sha": "9c00222f32383f6e7a60ef225649e796d310d8aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c00222f32383f6e7a60ef225649e796d310d8aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/865a3a421ada308194ab5960e4931fa09c3c68ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/865a3a421ada308194ab5960e4931fa09c3c68ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/865a3a421ada308194ab5960e4931fa09c3c68ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/865a3a421ada308194ab5960e4931fa09c3c68ad/comments", "author": {"login": "DougGregor", "id": 989428, "node_id": "MDQ6VXNlcjk4OTQyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/989428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DougGregor", "html_url": "https://github.com/DougGregor", "followers_url": "https://api.github.com/users/DougGregor/followers", "following_url": "https://api.github.com/users/DougGregor/following{/other_user}", "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions", "organizations_url": "https://api.github.com/users/DougGregor/orgs", "repos_url": "https://api.github.com/users/DougGregor/repos", "events_url": "https://api.github.com/users/DougGregor/events{/privacy}", "received_events_url": "https://api.github.com/users/DougGregor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2696a995839501cf16495ff72f2a0bbc7cc0b72b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2696a995839501cf16495ff72f2a0bbc7cc0b72b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2696a995839501cf16495ff72f2a0bbc7cc0b72b"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "7bf5f014e2a305eaff93e6320a90c7aac607164d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/865a3a421ada308194ab5960e4931fa09c3c68ad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/865a3a421ada308194ab5960e4931fa09c3c68ad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=865a3a421ada308194ab5960e4931fa09c3c68ad", "patch": "@@ -1,3 +1,9 @@\n+2008-08-06  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+       PR c++/36460\n+       * parser.c (cp_parser_template_argument): Don't assume that '>>'\n+       following a type-id is an error when in C++0x mode.\n+\t\n 2008-08-06  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR 26785"}, {"sha": "7c1b04d5d04fc3cc38a79a677eb2ac624f29131d", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/865a3a421ada308194ab5960e4931fa09c3c68ad/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/865a3a421ada308194ab5960e4931fa09c3c68ad/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=865a3a421ada308194ab5960e4931fa09c3c68ad", "patch": "@@ -10386,9 +10386,10 @@ cp_parser_template_argument (cp_parser* parser)\n      Therefore, we try a type-id first.  */\n   cp_parser_parse_tentatively (parser);\n   argument = cp_parser_type_id (parser);\n-  /* If there was no error parsing the type-id but the next token is a '>>',\n-     we probably found a typo for '> >'. But there are type-id which are\n-     also valid expressions. For instance:\n+  /* If there was no error parsing the type-id but the next token is a\n+     '>>', our behavior depends on which dialect of C++ we're\n+     parsing. In C++98, we probably found a typo for '> >'. But there\n+     are type-id which are also valid expressions. For instance:\n \n      struct X { int operator >> (int); };\n      template <int V> struct Foo {};\n@@ -10397,8 +10398,12 @@ cp_parser_template_argument (cp_parser* parser)\n      Here 'X()' is a valid type-id of a function type, but the user just\n      wanted to write the expression \"X() >> 5\". Thus, we remember that we\n      found a valid type-id, but we still try to parse the argument as an\n-     expression to see what happens.  */\n+     expression to see what happens. \n+\n+     In C++0x, the '>>' will be considered two separate '>'\n+     tokens.  */\n   if (!cp_parser_error_occurred (parser)\n+      && cxx_dialect == cxx98\n       && cp_lexer_next_token_is (parser->lexer, CPP_RSHIFT))\n     {\n       maybe_type_id = true;"}, {"sha": "b1833996aec67822af1b624b73fd60884c1f8f53", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/865a3a421ada308194ab5960e4931fa09c3c68ad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/865a3a421ada308194ab5960e4931fa09c3c68ad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=865a3a421ada308194ab5960e4931fa09c3c68ad", "patch": "@@ -1,3 +1,10 @@\n+2008-08-06  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+       PR c++/36460\n+       * g++.dg/cpp0x/bracket3.C: Add another test case for the >>\n+       warning under -Wc++0x-compat.\n+       * g++.dg/cpp0x/bracket4.C: Add testcase for PR c++/36460.\n+\n 2008-08-06  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.dg/Wcxx-compat-2.c: Adjust test for more warnings."}, {"sha": "4ef7a0e9d3027cd69fcd46d15e5def1bbbc9b330", "filename": "gcc/testsuite/g++.dg/cpp0x/bracket3.C", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/865a3a421ada308194ab5960e4931fa09c3c68ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/865a3a421ada308194ab5960e4931fa09c3c68ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket3.C?ref=865a3a421ada308194ab5960e4931fa09c3c68ad", "patch": "@@ -3,3 +3,8 @@\n template<int N> struct X {};\n \n X<1 >> 2> x; // { dg-warning \"will be treated as|suggest parentheses\" }\n+\n+// From cp/parser.c\n+typedef int Y;\n+template <int V> struct Foo {};\n+Foo<Y () >> 5> r; // { dg-warning \"will be treated as|suggest parentheses\" }"}, {"sha": "c0743fb7ff5c3c915342cb3cc3579babe570b0ab", "filename": "gcc/testsuite/g++.dg/cpp0x/bracket4.C", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/865a3a421ada308194ab5960e4931fa09c3c68ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/865a3a421ada308194ab5960e4931fa09c3c68ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket4.C?ref=865a3a421ada308194ab5960e4931fa09c3c68ad", "patch": "@@ -1,6 +1,5 @@\n // { dg-do \"compile\" }\n // { dg-options \"-std=c++0x\" }\n-\n template<typename T>\n struct vector { \n };\n@@ -25,3 +24,12 @@ void f()\n {\n   vector<vector<int>>() + 2;\n }\n+\n+// PR c++/36460\n+template <class a>\n+class A {};\n+template <class b>\n+class B {};\n+\n+A<B<void()>> x;\n+"}]}