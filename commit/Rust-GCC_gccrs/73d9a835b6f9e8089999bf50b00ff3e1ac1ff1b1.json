{"sha": "73d9a835b6f9e8089999bf50b00ff3e1ac1ff1b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNkOWE4MzViNmY5ZTgwODk5OTliZjUwYjAwZmYzZTFhYzFmZjFiMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-18T14:21:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-18T14:21:32Z"}, "message": "Pass NULL_RTX for TARGET in calls to expand_{un,bin}op.\n\n(expand_float): Use expand_shift instead of expand_binop.\n\nFrom-SVN: r7512", "tree": {"sha": "39c8d19a2c1658e4ea7f85bdd65aa6d65cd02238", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39c8d19a2c1658e4ea7f85bdd65aa6d65cd02238"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73d9a835b6f9e8089999bf50b00ff3e1ac1ff1b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73d9a835b6f9e8089999bf50b00ff3e1ac1ff1b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73d9a835b6f9e8089999bf50b00ff3e1ac1ff1b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73d9a835b6f9e8089999bf50b00ff3e1ac1ff1b1/comments", "author": null, "committer": null, "parents": [{"sha": "d67342cd3d06e760964925fb24291d3aad740894", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d67342cd3d06e760964925fb24291d3aad740894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d67342cd3d06e760964925fb24291d3aad740894"}], "stats": {"total": 63, "additions": 33, "deletions": 30}, "files": [{"sha": "e597288e3886417d5501c92e53503e936dcbb67c", "filename": "gcc/optabs.c", "status": "modified", "additions": 33, "deletions": 30, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d9a835b6f9e8089999bf50b00ff3e1ac1ff1b1/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d9a835b6f9e8089999bf50b00ff3e1ac1ff1b1/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=73d9a835b6f9e8089999bf50b00ff3e1ac1ff1b1", "patch": "@@ -481,7 +481,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n     {\n       temp = expand_binop (GET_MODE_WIDER_MODE (mode),\n \t\t\t   unsignedp ? umul_widen_optab : smul_widen_optab,\n-\t\t\t   op0, op1, 0, unsignedp, OPTAB_DIRECT);\n+\t\t\t   op0, op1, NULL_RTX, unsignedp, OPTAB_DIRECT);\n \n       if (GET_MODE_CLASS (mode) == MODE_INT)\n \treturn gen_lowpart (mode, temp);\n@@ -758,7 +758,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \n \t  into_temp1 = expand_binop (word_mode, unsigned_shift,\n \t\t\t\t     outof_input, first_shift_count,\n-\t\t\t\t     0, unsignedp, methods);\n+\t\t\t\t     NULL_RTX, unsignedp, methods);\n \t  into_temp2 = expand_binop (word_mode, reverse_unsigned_shift,\n \t\t\t\t     into_input, second_shift_count,\n \t\t\t\t     into_target, unsignedp, methods);\n@@ -769,7 +769,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \n \t  outof_temp1 = expand_binop (word_mode, unsigned_shift,\n \t\t\t\t      into_input, first_shift_count,\n-\t\t\t\t      0, unsignedp, methods);\n+\t\t\t\t      NULL_RTX, unsignedp, methods);\n \t  outof_temp2 = expand_binop (word_mode, reverse_unsigned_shift,\n \t\t\t\t      outof_input, second_shift_count,\n \t\t\t\t      outof_target, unsignedp, methods);\n@@ -1180,9 +1180,11 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \n \t      res = expand_binop (submode, sub_optab,\n \t\t\t\t  expand_binop (submode, binoptab, real0,\n-\t\t\t\t\t\treal1, 0, unsignedp, methods),\n+\t\t\t\t\t\treal1, NULL_RTX, unsignedp,\n+\t\t\t\t\t\tmethods),\n \t\t\t\t  expand_binop (submode, binoptab, imag0,\n-\t\t\t\t\t\timag1, 0, unsignedp, methods),\n+\t\t\t\t\t\timag1, NULL_RTX, unsignedp,\n+\t\t\t\t\t\tmethods),\n \t\t\t\t  realr, unsignedp, methods);\n \n \t      if (res != realr)\n@@ -1191,10 +1193,10 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t      res = expand_binop (submode, add_optab,\n \t\t\t\t  expand_binop (submode, binoptab,\n \t\t\t\t\t\treal0, imag1,\n-\t\t\t\t\t\t0, unsignedp, methods),\n+\t\t\t\t\t\tNULL_RTX, unsignedp, methods),\n \t\t\t\t  expand_binop (submode, binoptab,\n \t\t\t\t\t\treal1, imag0,\n-\t\t\t\t\t\t0, unsignedp, methods),\n+\t\t\t\t\t\tNULL_RTX, unsignedp, methods),\n \t\t\t\t  imagr, unsignedp, methods);\n \t      if (res != imagr)\n \t\temit_move_insn (imagr, res);\n@@ -1269,45 +1271,46 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t      /* Divisor: c*c + d*d */\n \t      divisor = expand_binop (submode, add_optab,\n \t\t\t\t      expand_binop (submode, smul_optab,\n-\t\t\t\t\t\t    real1, real1,\n-\t\t\t\t\t\t    0, unsignedp, methods),\n+\t\t\t\t\t\t    real1, real1, NULL_RTX,\n+\t\t\t\t\t\t    unsignedp, methods),\n \t\t\t\t      expand_binop (submode, smul_optab,\n-\t\t\t\t\t\t    imag1, imag1,\n-\t\t\t\t\t\t    0, unsignedp, methods),\n-\t\t\t\t      0, unsignedp, methods);\n+\t\t\t\t\t\t    imag1, imag1, NULL_RTX,\n+\t\t\t\t\t\t    unsignedp, methods),\n+\t\t\t\t      NULL_RTX, unsignedp, methods);\n \n \t      if (! imag0)\t/* ((a)(c-id))/divisor */\n \t\t{\t/* (a+i0) / (c+id) = (ac/(cc+dd)) + i(-ad/(cc+dd)) */\n \t\t  /* Calculate the dividend */\n \t\t  real_t = expand_binop (submode, smul_optab, real0, real1,\n-\t\t\t\t\t 0, unsignedp, methods);\n+\t\t\t\t\t NULL_RTX, unsignedp, methods);\n \t\t  \n \t\t  imag_t\n \t\t    = expand_unop (submode, neg_optab,\n \t\t\t\t   expand_binop (submode, smul_optab, real0,\n-\t\t\t\t\t\t imag1, 0, unsignedp, methods),\n-\t\t\t\t   0, unsignedp);\n+\t\t\t\t\t\t imag1, NULL_RTX, unsignedp,\n+\t\t\t\t\t\t methods),\n+\t\t\t\t   NULL_RTX, unsignedp);\n \t\t}\n \t      else\t\t/* ((a+ib)(c-id))/divider */\n \t\t{\n \t\t  /* Calculate the dividend */\n \t\t  real_t = expand_binop (submode, add_optab,\n \t\t\t\t\t expand_binop (submode, smul_optab,\n-\t\t\t\t\t\t       real0, real1,\n-\t\t\t\t\t\t       0, unsignedp, methods),\n+\t\t\t\t\t\t       real0, real1, NULL_RTX,\n+\t\t\t\t\t\t       unsignedp, methods),\n \t\t\t\t\t expand_binop (submode, smul_optab,\n-\t\t\t\t\t\t       imag0, imag1,\n-\t\t\t\t\t\t       0, unsignedp, methods),\n-\t\t\t\t\t 0, unsignedp, methods);\n+\t\t\t\t\t\t       imag0, imag1, NULL_RTX,\n+\t\t\t\t\t\t       unsignedp, methods),\n+\t\t\t\t\t NULL_RTX, unsignedp, methods);\n \t\t  \n \t\t  imag_t = expand_binop (submode, sub_optab,\n \t\t\t\t\t expand_binop (submode, smul_optab,\n-\t\t\t\t\t\t       imag0, real1,\n-\t\t\t\t\t\t       0, unsignedp, methods),\n+\t\t\t\t\t\t       imag0, real1, NULL_RTX,\n+\t\t\t\t\t\t       unsignedp, methods),\n \t\t\t\t\t expand_binop (submode, smul_optab,\n-\t\t\t\t\t\t       real0, imag1,\n-\t\t\t\t\t\t       0, unsignedp, methods),\n-\t\t\t\t\t 0, unsignedp, methods);\n+\t\t\t\t\t\t       real0, imag1, NULL_RTX,\n+\t\t\t\t\t\t       unsignedp, methods),\n+\t\t\t\t\t NULL_RTX, unsignedp, methods);\n \n \t\t}\n \n@@ -2043,7 +2046,7 @@ expand_complex_abs (mode, op0, target, unsignedp)\n       imag = expand_mult (submode, imag, imag, NULL_RTX, 0);\n \n       /* Sum the parts.  */\n-      total = expand_binop (submode, add_optab, real, imag, 0,\n+      total = expand_binop (submode, add_optab, real, imag, NULL_RTX,\n \t\t\t    0, OPTAB_LIB_WIDEN);\n \n       /* Get sqrt in TARGET.  Set TARGET to where the result is.  */\n@@ -3107,15 +3110,15 @@ expand_float (to, from, unsignedp)\n \n \t      emit_label (neglabel);\n \t      temp = expand_binop (imode, and_optab, from, const1_rtx,\n-\t\t\t\t   0, 1, 0);\n-\t      temp1 = expand_binop (imode, lshr_optab, from, const1_rtx,\n-\t\t\t\t    0, 1, 0);\n+\t\t\t\t   NULL_RTX, 1, 0);\n+\t      temp1 = expand_shift (RSHIFT_EXPR, imode, from, integer_one_node,\n+\t\t\t\t    NULL_RTX, 1);\n \t      temp = expand_binop (imode, ior_optab, temp, temp1, temp, 1, 0);\n \t      expand_float (target, temp, 0);\n \n \t      /* Multiply by 2 to undo the shift above.  */\n \t      target = expand_binop (fmode, add_optab, target, target,\n-\t\t\t\t   target, 0, 0);\n+\t\t\t\t     target, 0, 0);\n \t      do_pending_stack_adjust ();\n \t      emit_label (label);\n \t      goto done;"}]}