{"sha": "6b98580b89fbcfa093f4217e2661d6310ce39577", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI5ODU4MGI4OWZiY2ZhMDkzZjQyMTdlMjY2MWQ2MzEwY2UzOTU3Nw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-12-02T02:48:51Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-12-02T02:48:51Z"}, "message": "basic_ios.h (basic_ios::setstate): Revert.\n\n\n2003-12-01  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/basic_ios.h (basic_ios::setstate): Revert.\n\t* include/bits/istream.tcc: Only call setstate if __err != goodbit.\n\t* include/bits/ostream.tcc: Same.\n\t* testsuite/27_io/basic_ios/exceptions/char/2.cc: New.\n\n\t* testsuite/testsuite_io.h (__gnu_test::fail_streambuf): Make\n\tinternal buffer non-static.\n\nFrom-SVN: r74151", "tree": {"sha": "9b335f851086008d0a8540b39ef385da68b2f5fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b335f851086008d0a8540b39ef385da68b2f5fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b98580b89fbcfa093f4217e2661d6310ce39577", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b98580b89fbcfa093f4217e2661d6310ce39577", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b98580b89fbcfa093f4217e2661d6310ce39577", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b98580b89fbcfa093f4217e2661d6310ce39577/comments", "author": null, "committer": null, "parents": [{"sha": "b3538cf2479881a7117daee4519205bda81af23f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3538cf2479881a7117daee4519205bda81af23f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3538cf2479881a7117daee4519205bda81af23f"}], "stats": {"total": 220, "additions": 168, "deletions": 52}, "files": [{"sha": "080f55a21b7347a549ad119826f4ea77e98d39c0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b98580b89fbcfa093f4217e2661d6310ce39577/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b98580b89fbcfa093f4217e2661d6310ce39577/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6b98580b89fbcfa093f4217e2661d6310ce39577", "patch": "@@ -1,3 +1,13 @@\n+2003-12-01  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/basic_ios.h (basic_ios::setstate): Revert.\n+\t* include/bits/istream.tcc: Only call setstate if __err != goodbit.\n+\t* include/bits/ostream.tcc: Same.\n+\t* testsuite/27_io/basic_ios/exceptions/char/2.cc: New.\n+\t\n+\t* testsuite/testsuite_io.h (__gnu_test::fail_streambuf): Make\n+\tinternal buffer non-static.\n+\n 2003-12-01  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* docs/html/17_intro/C++STYLE: Add exception bits."}, {"sha": "a9cb8d25dd9de37c4cb5f4a4b29fcc1955585da9", "filename": "libstdc++-v3/include/bits/basic_ios.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b98580b89fbcfa093f4217e2661d6310ce39577/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b98580b89fbcfa093f4217e2661d6310ce39577/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h?ref=6b98580b89fbcfa093f4217e2661d6310ce39577", "patch": "@@ -141,10 +141,7 @@ namespace std\n       */\n       void \n       setstate(iostate __state) \n-      {\n-\tif (__state != ios_base::goodbit)\n-\t  this->clear(this->rdstate() | __state); \n-      }\n+      { this->clear(this->rdstate() | __state); }\n \n       // Flip the internal state on for the proper state bits, then re\n       // throws the propagated exception if bit also set in"}, {"sha": "abe795031df233b3248f612540021bc194f7b4e0", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 65, "deletions": 33, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b98580b89fbcfa093f4217e2661d6310ce39577/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b98580b89fbcfa093f4217e2661d6310ce39577/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=6b98580b89fbcfa093f4217e2661d6310ce39577", "patch": "@@ -77,8 +77,8 @@ namespace std\n \t{\n \t  _M_ok = false;\n \t  __err |= ios_base::failbit;\n+\t  __in.setstate(__err);\n \t}\n-      __in.setstate(__err);\n     }\n \n   template<typename _CharT, typename _Traits>\n@@ -121,7 +121,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -151,7 +152,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -172,7 +174,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -202,7 +205,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -223,7 +227,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -244,7 +249,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -265,7 +271,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -287,7 +294,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -308,7 +316,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -330,7 +339,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -351,7 +361,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -372,7 +383,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -393,7 +405,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -417,7 +430,8 @@ namespace std\n \t}\n       else if (!__sbout)\n \t__err |= ios_base::failbit;\n-      this->setstate(__err);\n+      if (__err)\n+\tthis->setstate(__err);\n       return *this;\n     }\n \n@@ -447,7 +461,8 @@ namespace std\n \t}\n       if (!_M_gcount)\n \t__err |= ios_base::failbit;\n-      this->setstate(__err);\n+      if (__err)\n+\tthis->setstate(__err);\n       return __c;\n     }\n \n@@ -478,7 +493,8 @@ namespace std\n \t}\n       if (!_M_gcount)\n \t__err |= ios_base::failbit;\n-      this->setstate(__err);\n+      if (__err)\n+\tthis->setstate(__err);\n       return *this;\n     }\n \n@@ -516,7 +532,8 @@ namespace std\n       *__s = char_type();\n       if (!_M_gcount)\n \t__err |= ios_base::failbit;\n-      this->setstate(__err);\n+      if (__err)\n+\tthis->setstate(__err);\n       return *this;\n     }\n \n@@ -554,7 +571,8 @@ namespace std\n \t}\n       if (!_M_gcount)\n \t__err |= ios_base::failbit;\n-      this->setstate(__err);\n+      if (__err)\n+\tthis->setstate(__err);\n       return *this;\n     }\n \n@@ -602,7 +620,8 @@ namespace std\n       *__s = char_type();\n       if (!_M_gcount)\n \t__err |= ios_base::failbit;\n-      this->setstate(__err);\n+      if (__err)\n+\tthis->setstate(__err);\n       return *this;\n     }\n   \n@@ -635,7 +654,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -659,7 +679,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t} \n       return __c;\n     }\n@@ -682,7 +703,8 @@ namespace std\n \t    }\t    \n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -712,7 +734,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return _M_gcount;\n     }\n@@ -739,7 +762,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -766,7 +790,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -796,7 +821,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return __ret;\n     }\n@@ -841,7 +867,8 @@ namespace std\n \t}\n       catch(...)\n \t{ this->_M_setstate(ios_base::badbit); }\n-      this->setstate(__err);\n+      if (__err)\n+\tthis->setstate(__err);\n       return *this;\n     }\n \n@@ -868,7 +895,8 @@ namespace std\n \t}\n       catch(...)\n \t{ this->_M_setstate(ios_base::badbit); }\n-      this->setstate(__err);\n+      if (__err)\n+\tthis->setstate(__err);\n       return *this;\n     }\n \n@@ -892,7 +920,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { __in._M_setstate(ios_base::badbit); }\n-\t  __in.setstate(__err);\n+\t  if (__err)\n+\t    __in.setstate(__err);\n \t}\n       return __in;\n     }\n@@ -947,7 +976,8 @@ namespace std\n \t}\n       if (!__extracted)\n \t__err |= ios_base::failbit;\n-      __in.setstate(__err);\n+      if (__err)\n+\t__in.setstate(__err);\n       return __in;\n     }\n \n@@ -1028,7 +1058,8 @@ namespace std\n       // 211.  operator>>(istream&, string&) doesn't set failbit\n       if (!__extracted)\n \t__err |= ios_base::failbit;\n-      __in.setstate(__err);\n+      if (__err)\n+\t__in.setstate(__err);\n       return __in;\n     }\n \n@@ -1081,7 +1112,8 @@ namespace std\n \t}\n       if ((!__extracted && !__testdelim) || __extracted == __n)\n \t__err |= ios_base::failbit;\n-      __in.setstate(__err);\n+      if (__err)\n+\t__in.setstate(__err);\n       return __in;\n     }\n "}, {"sha": "c8f7fc73c359cd36940ce1c976ccdc941d577481", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b98580b89fbcfa093f4217e2661d6310ce39577/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b98580b89fbcfa093f4217e2661d6310ce39577/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=6b98580b89fbcfa093f4217e2661d6310ce39577", "patch": "@@ -111,7 +111,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -143,7 +144,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -165,7 +167,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -199,7 +202,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -221,7 +225,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -244,7 +249,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -266,7 +272,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -288,7 +295,8 @@ namespace std\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;\n     }\n@@ -312,7 +320,8 @@ namespace std\n \t}\n       else if (!__sbin)\n \t__err |= ios_base::badbit;\n-      this->setstate(__err);\n+      if (__err)\n+\tthis->setstate(__err);\n       return *this;\n     }\n \n@@ -339,7 +348,8 @@ namespace std\n \t    }\n \t  catch (...)\n \t    { this->_M_setstate(ios_base::badbit); }\n-\t  this->setstate(__err);\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n       return *this;  \n     }\n@@ -383,7 +393,8 @@ namespace std\n \t}\n       catch(...)\n \t{ this->_M_setstate(ios_base::badbit); }\n-      this->setstate(__err);\n+      if (__err)\n+\tthis->setstate(__err);\n       return *this;\n     }\n   \n@@ -424,7 +435,8 @@ namespace std\n \t}\n       catch(...)\n \t{ this->_M_setstate(ios_base::badbit); }\n-      this->setstate(__err);\n+      if (__err)\n+\tthis->setstate(__err);\n       return *this;\n     }\n \n@@ -450,7 +462,8 @@ namespace std\n \t}\n       catch(...)\n \t{ this->_M_setstate(ios_base::badbit); }\n-      this->setstate(__err);\n+      if (__err)\n+\tthis->setstate(__err);\n       return *this;\n     }\n "}, {"sha": "b9f938e7559fab29e32366c344d743b7fe092827", "filename": "libstdc++-v3/testsuite/27_io/basic_ios/exceptions/char/2.cc", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b98580b89fbcfa093f4217e2661d6310ce39577/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fexceptions%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b98580b89fbcfa093f4217e2661d6310ce39577/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fexceptions%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fexceptions%2Fchar%2F2.cc?ref=6b98580b89fbcfa093f4217e2661d6310ce39577", "patch": "@@ -0,0 +1,59 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// 27.4.4.2 basic_ios member functions\n+\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+int main()\n+{\n+  using namespace std;\n+  ostringstream stream;\n+  \n+  try \n+    {\n+      stream.setstate(ios_base::failbit);\n+      stream.exceptions(ios_base::failbit);\n+      assert(false);\n+    } \n+  catch (...) \n+    {\n+      // Don't clear.\n+    }\n+\n+  try\n+    {\n+      // Calls clear(rdstate()), which throws in this case.\n+      stream.setstate(ios_base::goodbit);\n+      assert(false);\n+    }\n+  catch (...) \n+    { }\n+\n+  return 0;\n+}"}, {"sha": "e5e342eed149c99279a6aa7979efff81b567578a", "filename": "libstdc++-v3/testsuite/testsuite_io.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b98580b89fbcfa093f4217e2661d6310ce39577/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_io.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b98580b89fbcfa093f4217e2661d6310ce39577/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_io.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_io.h?ref=6b98580b89fbcfa093f4217e2661d6310ce39577", "patch": "@@ -104,10 +104,15 @@ namespace __gnu_test\n \n   struct fail_streambuf : std::streambuf\n   {\n+  private:\n+    char p[2];\n+\n+  public:\n     fail_streambuf()\n     {\n-      static char p[] = \"s\";\n-      setg(p, p, p + 1);\n+      p[0] = 's';\n+      p[1] = char();\n+      setg(p, p, p + 1); \n     }\n \n     virtual int_type underflow() "}]}