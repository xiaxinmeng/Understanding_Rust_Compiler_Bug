{"sha": "ba26157992975c2cdad2020571cdabf77a5b7c41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEyNjE1Nzk5Mjk3NWMyY2RhZDIwMjA1NzFjZGFiZjc3YTViN2M0MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2018-02-05T10:48:49Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-02-05T10:48:49Z"}, "message": "[AArch64] Remove SVE XFAILs\n\nThese tests started passing after r257293, which had the side-effect\nof renumbering the SSA names and leaving the COND_EXPRs in their\nnatural order.\n\nThis does show a deeper underlying issue that code generation is too\nsensitive to internal things like SSA_NAME versions, but it no longer\naffects these particular tests (for now).\n\n2018-02-05  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/vcond_4.c: Remove XFAILs.\n\t* gcc.target/aarch64/sve/vcond_5.c: Likewise.\n\nFrom-SVN: r257386", "tree": {"sha": "744c4e3af6242fb44031e9fb8b8dc70cd5d24b13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/744c4e3af6242fb44031e9fb8b8dc70cd5d24b13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba26157992975c2cdad2020571cdabf77a5b7c41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba26157992975c2cdad2020571cdabf77a5b7c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba26157992975c2cdad2020571cdabf77a5b7c41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba26157992975c2cdad2020571cdabf77a5b7c41/comments", "author": null, "committer": null, "parents": [{"sha": "87e176dfd4d2e457353eccd04e99fcb8710fb9f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e176dfd4d2e457353eccd04e99fcb8710fb9f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87e176dfd4d2e457353eccd04e99fcb8710fb9f0"}], "stats": {"total": 57, "additions": 31, "deletions": 26}, "files": [{"sha": "3a879999e0ba13a49b94a0e0a1d47c2d848b15a0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba26157992975c2cdad2020571cdabf77a5b7c41/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba26157992975c2cdad2020571cdabf77a5b7c41/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba26157992975c2cdad2020571cdabf77a5b7c41", "patch": "@@ -1,3 +1,8 @@\n+2018-02-05  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* gcc.target/aarch64/sve/vcond_4.c: Remove XFAILs.\n+\t* gcc.target/aarch64/sve/vcond_5.c: Likewise.\n+\n 2018-02-05  Olga Makhotina  <olga.makhotina@intel.com>\n \n \t* gcc.target/i386/avx512dq-vrangesd-1.c (_mm_mask_range_sd,"}, {"sha": "230a6c9188026bdffc38d2ad9596f63a6e990272", "filename": "gcc/testsuite/gcc.target/aarch64/sve/vcond_4.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba26157992975c2cdad2020571cdabf77a5b7c41/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvcond_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba26157992975c2cdad2020571cdabf77a5b7c41/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvcond_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvcond_4.c?ref=ba26157992975c2cdad2020571cdabf77a5b7c41", "patch": "@@ -88,12 +88,12 @@ TEST_CMP (nule)\n TEST_CMP (nuge)\n TEST_CMP (nugt)\n \n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 5 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 10 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 5 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 10 } } */\n \n /* 5 for ne, 5 for ueq and 5 for nueq.  */\n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 30 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 30 } } */\n \n /* 5 for lt, 5 for ult and 5 for nult.  */\n /* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 } } */\n@@ -115,11 +115,11 @@ TEST_CMP (nugt)\n /* 3 loops * 5 invocations for all 12 unordered comparisons.  */\n /* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 180 } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 7 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 14 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 7 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 14 } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 } } */\n \n /* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 } } */\n /* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 } } */"}, {"sha": "37c6b62eb2347cb83e51e12256df07378ae07036", "filename": "gcc/testsuite/gcc.target/aarch64/sve/vcond_5.c", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba26157992975c2cdad2020571cdabf77a5b7c41/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvcond_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba26157992975c2cdad2020571cdabf77a5b7c41/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvcond_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvcond_5.c?ref=ba26157992975c2cdad2020571cdabf77a5b7c41", "patch": "@@ -6,51 +6,51 @@\n #include \"vcond_4.c\"\n \n /* 5 for eqand 5 for ueq.  */\n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 10 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 20 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 10 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 20 } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 5 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 10 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 5 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 10 } } */\n \n /* 5 for lt, 5 for ult, 5 for nueq and 5 for nult.  */\n-/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 20 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 40 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 20 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 40 } } */\n \n /* 5 for le, 5 for ule and 5 for nule.  */\n /* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 15 } } */\n /* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 30 } } */\n \n /* 5 for gt, 5 for ugt, 5 for nueq and 5 for nugt.  */\n-/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 20 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 40 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 20 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 40 } } */\n \n /* 5 for ge, 5 for uge and 5 for nuge.  */\n /* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 15 } } */\n /* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 30 } } */\n \n /* { dg-final { scan-assembler-not {\\tfcmuo\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} } } */\n /* 3 loops * 5 invocations for ordered, unordered amd ueq.  */\n-/* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 45 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 45 } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 14 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 28 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 14 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 28 } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 7 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 14 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 7 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 14 } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 28 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 56 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 28 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 56 } } */\n \n /* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 21 } } */\n /* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 42 } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 28 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 56 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 28 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 56 } } */\n \n /* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 21 } } */\n /* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 42 } } */\n \n /* { dg-final { scan-assembler-not {\\tfcmuo\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} } } */\n /* 3 loops * 5 invocations, with 2 invocations having ncopies == 2,\n    for ordered, unordered and ueq.  */\n-/* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 63 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 63 } } */"}]}