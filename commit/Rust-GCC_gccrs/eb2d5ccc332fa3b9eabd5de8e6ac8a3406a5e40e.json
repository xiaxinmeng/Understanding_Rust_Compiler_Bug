{"sha": "eb2d5ccc332fa3b9eabd5de8e6ac8a3406a5e40e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIyZDVjY2MzMzJmYTNiOWVhYmQ1ZGU4ZTZhYzhhMzQwNmE1ZTQwZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T13:42:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T13:42:56Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r247238", "tree": {"sha": "983371edb38a44afe3c6b77a6b93f8b39c0c54a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/983371edb38a44afe3c6b77a6b93f8b39c0c54a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb2d5ccc332fa3b9eabd5de8e6ac8a3406a5e40e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb2d5ccc332fa3b9eabd5de8e6ac8a3406a5e40e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb2d5ccc332fa3b9eabd5de8e6ac8a3406a5e40e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb2d5ccc332fa3b9eabd5de8e6ac8a3406a5e40e/comments", "author": null, "committer": null, "parents": [{"sha": "e44e8a5eba43b8ac4ee75bcc80c9b527c387079b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e44e8a5eba43b8ac4ee75bcc80c9b527c387079b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e44e8a5eba43b8ac4ee75bcc80c9b527c387079b"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "1217468272ede9760357eb809108ef0c2ba90c34", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2d5ccc332fa3b9eabd5de8e6ac8a3406a5e40e/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2d5ccc332fa3b9eabd5de8e6ac8a3406a5e40e/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=eb2d5ccc332fa3b9eabd5de8e6ac8a3406a5e40e", "patch": "@@ -5198,9 +5198,8 @@ package body Exp_Util is\n       U_Typ : constant Entity_Id := Unique_Entity (Typ);\n \n       Calls_OK : Boolean := False;\n-      --  This flag is set to True when expression Expr contains at\n-      --  least one call to a non-dispatching primitive function of\n-      --  Typ.\n+      --  This flag is set to True when expression Expr contains at least one\n+      --  call to a non-dispatching primitive function of Typ.\n \n       function Search_Primitive_Calls (N : Node_Id) return Traverse_Result;\n       --  Search for nondispatching calls to primitive functions of type Typ\n@@ -5209,9 +5208,7 @@ package body Exp_Util is\n       -- Search_Primitive_Calls --\n       ----------------------------\n \n-      function Search_Primitive_Calls\n-        (N : Node_Id) return Traverse_Result\n-      is\n+      function Search_Primitive_Calls (N : Node_Id) return Traverse_Result is\n          Disp_Typ : Entity_Id;\n          Subp     : Entity_Id;\n \n@@ -5224,24 +5221,24 @@ package body Exp_Util is\n          then\n             Subp := Entity (Name (N));\n \n-            --  Do not consider function calls with a controlling argument\n-            --  as those are always dispatching calls.\n+            --  Do not consider function calls with a controlling argument as\n+            --  those are always dispatching calls.\n \n             if Is_Dispatching_Operation (Subp)\n               and then No (Controlling_Argument (N))\n             then\n                Disp_Typ := Find_Dispatching_Type (Subp);\n \n-               --  To qualify as a suitable primitive, the dispatching\n-               --  type of the function must be the input type.\n+               --  To qualify as a suitable primitive, the dispatching type of\n+               --  the function must be the input type.\n \n                if Present (Disp_Typ)\n                  and then Unique_Entity (Disp_Typ) = U_Typ\n                then\n                   Calls_OK := True;\n \n-                  --  There is no need to continue the traversal as one\n-                  --  such call suffices.\n+                  --  There is no need to continue the traversal as one such\n+                  --  call suffices.\n \n                   return Abandon;\n                end if;\n@@ -5251,8 +5248,7 @@ package body Exp_Util is\n          return OK;\n       end Search_Primitive_Calls;\n \n-      procedure Search_Calls is\n-        new Traverse_Proc (Search_Primitive_Calls);\n+      procedure Search_Calls is new Traverse_Proc (Search_Primitive_Calls);\n \n    --  Start of processing for Expression_Contains_Primitives_Calls_Of_Type\n "}]}