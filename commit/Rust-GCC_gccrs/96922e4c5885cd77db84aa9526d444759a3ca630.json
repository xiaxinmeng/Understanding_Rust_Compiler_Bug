{"sha": "96922e4c5885cd77db84aa9526d444759a3ca630", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY5MjJlNGM1ODg1Y2Q3N2RiODRhYTk1MjZkNDQ0NzU5YTNjYTYzMA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-01-16T16:31:37Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-01-16T16:31:37Z"}, "message": "rs6000.h (PROMOTE_MODE): Correct test for when -m32 -mpowerpc64 is active.\n\n\t* config/rs6000/rs6000.h (PROMOTE_MODE): Correct test for when -m32\n\t-mpowerpc64 is active.\n\nFrom-SVN: r219750", "tree": {"sha": "384e0de8bb216df6709e01994649aa072f2bdfb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/384e0de8bb216df6709e01994649aa072f2bdfb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96922e4c5885cd77db84aa9526d444759a3ca630", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96922e4c5885cd77db84aa9526d444759a3ca630", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96922e4c5885cd77db84aa9526d444759a3ca630", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96922e4c5885cd77db84aa9526d444759a3ca630/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "72d7151a721ce182f4a13e7e5a6f5ced2f468c17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72d7151a721ce182f4a13e7e5a6f5ced2f468c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72d7151a721ce182f4a13e7e5a6f5ced2f468c17"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "76ccc9d580a4b58876681b4763f347042c6ff9b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96922e4c5885cd77db84aa9526d444759a3ca630/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96922e4c5885cd77db84aa9526d444759a3ca630/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96922e4c5885cd77db84aa9526d444759a3ca630", "patch": "@@ -1,3 +1,8 @@\n+2015-01-16  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.h (PROMOTE_MODE): Correct test for when -m32\n+\t-mpowerpc64 is active.\n+\n 2015-01-16  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR middle-end/64353"}, {"sha": "ef6bb2f7a53de69625aa6eae64ff059a067b3f22", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96922e4c5885cd77db84aa9526d444759a3ca630/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96922e4c5885cd77db84aa9526d444759a3ca630/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=96922e4c5885cd77db84aa9526d444759a3ca630", "patch": "@@ -733,7 +733,7 @@ extern unsigned char rs6000_recip_bits[];\n \n #define PROMOTE_MODE(MODE,UNSIGNEDP,TYPE)\t\\\n   if (GET_MODE_CLASS (MODE) == MODE_INT\t\t\\\n-      && GET_MODE_SIZE (MODE) < UNITS_PER_WORD) \\\n+      && GET_MODE_SIZE (MODE) < (TARGET_32BIT ? 4 : 8)) \\\n     (MODE) = TARGET_32BIT ? SImode : DImode;\n \n /* Define this if most significant bit is lowest numbered"}]}