{"sha": "88417d77fec57c9d15ac2864b37e84eee575a781", "node_id": "C_kwDOANBUbNoAKDg4NDE3ZDc3ZmVjNTdjOWQxNWFjMjg2NGIzN2U4NGVlZTU3NWE3ODE", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-06-27T18:50:03Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-06-28T11:00:45Z"}, "message": "Allow all types supported by ranger in loop-ch.\n\nThis converts the ranger use in loop-ch to allow any types allowed by\nthe ranger infrastructure.  Since the range of a GIMPLE_COND is always an\ninteger we can remove the check because the only temporary is already\nan int_range.\n\ngcc/ChangeLog:\n\n\t* tree-ssa-loop-ch.cc (entry_loop_condition_is_static): Remove\n\tirange::supports_p.", "tree": {"sha": "dca0260ceb932a3773749230259110e2d22b6dd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dca0260ceb932a3773749230259110e2d22b6dd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88417d77fec57c9d15ac2864b37e84eee575a781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88417d77fec57c9d15ac2864b37e84eee575a781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88417d77fec57c9d15ac2864b37e84eee575a781", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88417d77fec57c9d15ac2864b37e84eee575a781/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3ca1fc5f409e257e9fb9a8165bb4a7068ddebbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3ca1fc5f409e257e9fb9a8165bb4a7068ddebbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3ca1fc5f409e257e9fb9a8165bb4a7068ddebbe"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "3b91a89eaf56f51bf0dae02bd86d4cf8c14c172c", "filename": "gcc/tree-ssa-loop-ch.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88417d77fec57c9d15ac2864b37e84eee575a781/gcc%2Ftree-ssa-loop-ch.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88417d77fec57c9d15ac2864b37e84eee575a781/gcc%2Ftree-ssa-loop-ch.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ch.cc?ref=88417d77fec57c9d15ac2864b37e84eee575a781", "patch": "@@ -54,8 +54,7 @@ entry_loop_condition_is_static (class loop *l, path_range_query *query)\n   edge e = loop_preheader_edge (l);\n   gcond *last = safe_dyn_cast <gcond *> (last_stmt (e->dest));\n \n-  if (!last\n-      || !irange::supports_p (TREE_TYPE (gimple_cond_lhs (last))))\n+  if (!last)\n     return false;\n \n   edge true_e, false_e;"}]}