{"sha": "30556bf81f4385c2a9c449948865dbcf35664764", "node_id": "C_kwDOANBUbNoAKDMwNTU2YmY4MWY0Mzg1YzJhOWM0NDk5NDg4NjVkYmNmMzU2NjQ3NjQ", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2023-03-09T04:53:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2023-03-09T15:25:45Z"}, "message": "c++: hide __is_deducible for GCC 13\n\nI want to have more discussion about the interface before claiming the\n__is_deducible name, so for GCC 13 make it internal-only.\n\ngcc/ChangeLog:\n\n\t* doc/extend.texi: Comment out __is_deducible docs.\n\ngcc/cp/ChangeLog:\n\n\t* cp-trait.def (IS_DEDUCIBLE): Add space to name.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/ext/is_deducible1.C: Guard with\n\t__has_builtin (__is_deducible).", "tree": {"sha": "983e2d0a04bed217b1fa69111ca50ea16ef5fcec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/983e2d0a04bed217b1fa69111ca50ea16ef5fcec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30556bf81f4385c2a9c449948865dbcf35664764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30556bf81f4385c2a9c449948865dbcf35664764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30556bf81f4385c2a9c449948865dbcf35664764", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30556bf81f4385c2a9c449948865dbcf35664764/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "148cbb153dafd6b21d83c00787acd430aec68a3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/148cbb153dafd6b21d83c00787acd430aec68a3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/148cbb153dafd6b21d83c00787acd430aec68a3d"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "bac593c00945799acdcd358955d747f4111e6f3f", "filename": "gcc/cp/cp-trait.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30556bf81f4385c2a9c449948865dbcf35664764/gcc%2Fcp%2Fcp-trait.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30556bf81f4385c2a9c449948865dbcf35664764/gcc%2Fcp%2Fcp-trait.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-trait.def?ref=30556bf81f4385c2a9c449948865dbcf35664764", "patch": "@@ -84,7 +84,8 @@ DEFTRAIT_EXPR (IS_TRIVIALLY_COPYABLE, \"__is_trivially_copyable\", 1)\n DEFTRAIT_EXPR (IS_UNION, \"__is_union\", 1)\n DEFTRAIT_EXPR (REF_CONSTRUCTS_FROM_TEMPORARY, \"__reference_constructs_from_temporary\", 2)\n DEFTRAIT_EXPR (REF_CONVERTS_FROM_TEMPORARY, \"__reference_converts_from_temporary\", 2)\n-DEFTRAIT_EXPR (IS_DEDUCIBLE, \"__is_deducible\", 2)\n+/* FIXME Added space to avoid direct usage in GCC 13.  */\n+DEFTRAIT_EXPR (IS_DEDUCIBLE, \"__is_deducible \", 2)\n \n DEFTRAIT_TYPE (REMOVE_CV, \"__remove_cv\", 1)\n DEFTRAIT_TYPE (REMOVE_REFERENCE, \"__remove_reference\", 1)"}, {"sha": "9dcfc860108f6b59a2bb5a03ec73929ed71ae14c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30556bf81f4385c2a9c449948865dbcf35664764/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30556bf81f4385c2a9c449948865dbcf35664764/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=30556bf81f4385c2a9c449948865dbcf35664764", "patch": "@@ -25213,9 +25213,10 @@ type.  A diagnostic is produced if this requirement is not met.\n If @code{type} is a cv-qualified class type, and not a union type\n ([basic.compound]) the trait is @code{true}, else it is @code{false}.\n \n-@item __is_deducible (template, type)\n-If template arguments for @code{template} can be deduced from\n-@code{type} or obtained from default template arguments.\n+@c FIXME Commented out for GCC 13, discuss user interface for GCC 14.\n+@c @item __is_deducible (template, type)\n+@c If template arguments for @code{template} can be deduced from\n+@c @code{type} or obtained from default template arguments.\n \n @item __is_empty (type)\n If @code{__is_class (type)} is @code{false} then the trait is @code{false}."}, {"sha": "6873e4f4c2e69af66e6473aff5f610c8bfe08b6b", "filename": "gcc/testsuite/g++.dg/ext/is_deducible1.C", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30556bf81f4385c2a9c449948865dbcf35664764/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_deducible1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30556bf81f4385c2a9c449948865dbcf35664764/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_deducible1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_deducible1.C?ref=30556bf81f4385c2a9c449948865dbcf35664764", "patch": "@@ -1,5 +1,7 @@\n // { dg-do compile { target c++20 } }\n \n+#if __has_builtin (__is_deducible)\n+\n template <class T> struct A { };\n template <class T> struct B { };\n \n@@ -26,6 +28,8 @@ static_assert (__is_deducible (D, D<int>));\n template <class T, T N> using E = int[N];\n static_assert (__is_deducible (E, int[42]));\n \n+#endif // __has_builtin (__is_deducible)\n+\n // We don't try to support this.\n template <class T> void f(T);\n-bool b = __is_deducible (f, void (int)); // { dg-error \"class or alias\" }\n+bool b = __is_deducible (f, void (int)); // { dg-error \"\" }"}]}