{"sha": "69ec1e2065ac43eea44fdfa703cf027ce72a62da", "node_id": "C_kwDOANBUbNoAKDY5ZWMxZTIwNjVhYzQzZWVhNDRmZGZhNzAzY2YwMjdjZTcyYTYyZGE", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-12-13T18:01:15Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-12-13T18:01:15Z"}, "message": "AArch64: Fix ILP32 tbranch\n\nthe baremetal builds are currently broken because the shift ends up in the wrong\nrepresentation if the mode is SImode and the shift amount if 31.   To fix this\ncreate the rtx constant with an explicit mode so the backend passes know which\nrepresentation it needs to take.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64.md (tbranch_<code><mode>3): Use gen_int_mode.", "tree": {"sha": "50c8cc2ae7f6efc20b89dcc5a30dea3b7b37e58a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50c8cc2ae7f6efc20b89dcc5a30dea3b7b37e58a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69ec1e2065ac43eea44fdfa703cf027ce72a62da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69ec1e2065ac43eea44fdfa703cf027ce72a62da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69ec1e2065ac43eea44fdfa703cf027ce72a62da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69ec1e2065ac43eea44fdfa703cf027ce72a62da/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33be3ee36a7e2c0be383ec01b5fbc9aef39568fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33be3ee36a7e2c0be383ec01b5fbc9aef39568fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33be3ee36a7e2c0be383ec01b5fbc9aef39568fd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6c27fb89e663d6ed845b41daf32476c2a58a169c", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69ec1e2065ac43eea44fdfa703cf027ce72a62da/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69ec1e2065ac43eea44fdfa703cf027ce72a62da/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=69ec1e2065ac43eea44fdfa703cf027ce72a62da", "patch": "@@ -957,7 +957,7 @@\n {\n   rtx bitvalue = gen_reg_rtx (<ZEROM>mode);\n   rtx reg = gen_lowpart (<ZEROM>mode, operands[0]);\n-  rtx val = GEN_INT (1UL << UINTVAL (operands[1]));\n+  rtx val = gen_int_mode (HOST_WIDE_INT_1U << UINTVAL (operands[1]), <MODE>mode);\n   emit_insn (gen_and<zerom>3 (bitvalue, reg, val));\n   operands[1] = const0_rtx;\n   operands[0] = aarch64_gen_compare_reg (<CODE>, bitvalue,"}]}