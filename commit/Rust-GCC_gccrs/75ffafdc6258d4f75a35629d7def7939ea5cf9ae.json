{"sha": "75ffafdc6258d4f75a35629d7def7939ea5cf9ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVmZmFmZGM2MjU4ZDRmNzVhMzU2MjlkN2RlZjc5MzllYTVjZjlhZQ==", "commit": {"author": {"name": "Michael Hope", "email": "michael.hope@linaro.org", "date": "2012-03-11T23:58:54Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2012-03-11T23:58:54Z"}, "message": "For Michael Hope.\n\n2012-03-11  Michael Hope  <michael.hope@linaro.org>\n\n       * longlong.h [ARM] (add_ssaaaa, sub_ddmmss, umul_ppmm): Enable\n       for Thumb-2\n\nFrom-SVN: r185202", "tree": {"sha": "b37956689ed321d7f8443fce13b8f2159a7badd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b37956689ed321d7f8443fce13b8f2159a7badd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75ffafdc6258d4f75a35629d7def7939ea5cf9ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ffafdc6258d4f75a35629d7def7939ea5cf9ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ffafdc6258d4f75a35629d7def7939ea5cf9ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ffafdc6258d4f75a35629d7def7939ea5cf9ae/comments", "author": {"login": "nzmichaelh", "id": 141541, "node_id": "MDQ6VXNlcjE0MTU0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/141541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nzmichaelh", "html_url": "https://github.com/nzmichaelh", "followers_url": "https://api.github.com/users/nzmichaelh/followers", "following_url": "https://api.github.com/users/nzmichaelh/following{/other_user}", "gists_url": "https://api.github.com/users/nzmichaelh/gists{/gist_id}", "starred_url": "https://api.github.com/users/nzmichaelh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nzmichaelh/subscriptions", "organizations_url": "https://api.github.com/users/nzmichaelh/orgs", "repos_url": "https://api.github.com/users/nzmichaelh/repos", "events_url": "https://api.github.com/users/nzmichaelh/events{/privacy}", "received_events_url": "https://api.github.com/users/nzmichaelh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bddc10b6363e76276ceab3244d04435a8941cd49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bddc10b6363e76276ceab3244d04435a8941cd49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bddc10b6363e76276ceab3244d04435a8941cd49"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "fd60295f760573fb30f1593de00d0d5301df39ef", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ffafdc6258d4f75a35629d7def7939ea5cf9ae/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ffafdc6258d4f75a35629d7def7939ea5cf9ae/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=75ffafdc6258d4f75a35629d7def7939ea5cf9ae", "patch": "@@ -1,3 +1,8 @@\n+2012-03-11  Michael Hope  <michael.hope@linaro.org>\n+\n+       * longlong.h [ARM] (add_ssaaaa, sub_ddmmss, umul_ppmm): Enable\n+       for Thumb-2.\n+\n 2012-03-07  Walter Lee  <walt@tilera.com>\n \n \t* config/tilepro/atomic.c: Rename \"atomic_\" prefix to"}, {"sha": "202637714afa1d8a760786a5f5a6e1478686ebca", "filename": "libgcc/longlong.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ffafdc6258d4f75a35629d7def7939ea5cf9ae/libgcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ffafdc6258d4f75a35629d7def7939ea5cf9ae/libgcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flonglong.h?ref=75ffafdc6258d4f75a35629d7def7939ea5cf9ae", "patch": "@@ -203,7 +203,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n UDItype __umulsidi3 (USItype, USItype);\n #endif\n \n-#if defined (__arm__) && !defined (__thumb__) && W_TYPE_SIZE == 32\n+#if defined (__arm__) && (defined (__thumb2__) || !defined (__thumb__)) \\\n+ && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n   __asm__ (\"adds\t%1, %4, %5\\n\\tadc\t%0, %2, %3\"\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\"}]}