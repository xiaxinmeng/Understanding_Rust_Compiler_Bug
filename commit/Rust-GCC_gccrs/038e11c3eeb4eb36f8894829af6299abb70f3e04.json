{"sha": "038e11c3eeb4eb36f8894829af6299abb70f3e04", "node_id": "C_kwDOANBUbNoAKDAzOGUxMWMzZWViNGViMzZmODg5NDgyOWFmNjI5OWFiYjcwZjNlMDQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-12-07T14:19:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-07T14:19:12Z"}, "message": "Merge #1540\n\n1540: Implement `-frust-incomplete-and-experimental-compiler-do-not-use` flag r=dkm a=CohenArthur\n\nRemember to change your `./configure` line :)\r\n\r\nThis is obviously up for discussion and I would be happy to get some more input.\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\nCo-authored-by: Thomas Schwinge <thomas@codesourcery.com>", "tree": {"sha": "51d06c10aa3f7773575c3968467f8ee0535628f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51d06c10aa3f7773575c3968467f8ee0535628f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/038e11c3eeb4eb36f8894829af6299abb70f3e04", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjkKDgCRBK7hj4Ov3rIwAAZ1AIAKg9loCfdqTkATWdKGO8Zwc7\nPcA8MHIb5ep8XOSA0UAO7CPBMtNizljsm7kmPcQ5+fKqskhBpreHP41UbP7CwOP4\nbqK7fdpYMt4qpn3UF7B84jIKy1pdl4qbzrHzP+2P7AKBqI5UOgxdVoS+tKyQNHQ3\n/2HLWhef79bLnueU4o/kZyRBcmP1RA/o5HMAHgqEnDcIiWsIj7O4qrDkm7J0RmhT\nEoRfpQzoE2eGEaETw15AAK48jFgZqiMxE51AKyBRF4FYTv9bsAU2TN2i3mzq98HG\nYgIGk1b0F5zxx3hUWnee+7PJyiI8np1TvBw2t9SgZ3jGz0R9XUcHANiCYVnAe0E=\n=jq6W\n-----END PGP SIGNATURE-----\n", "payload": "tree 51d06c10aa3f7773575c3968467f8ee0535628f1\nparent 8c0f4e48ffe9095acd65a109a1e53540140dece5\nparent d9d9ca0b9e50b669d5445e028739bcdd0aa024bd\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1670422752 +0000\ncommitter GitHub <noreply@github.com> 1670422752 +0000\n\nMerge #1540\n\n1540: Implement `-frust-incomplete-and-experimental-compiler-do-not-use` flag r=dkm a=CohenArthur\n\nRemember to change your `./configure` line :)\r\n\r\nThis is obviously up for discussion and I would be happy to get some more input.\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\nCo-authored-by: Thomas Schwinge <thomas@codesourcery.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038e11c3eeb4eb36f8894829af6299abb70f3e04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/038e11c3eeb4eb36f8894829af6299abb70f3e04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038e11c3eeb4eb36f8894829af6299abb70f3e04/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c0f4e48ffe9095acd65a109a1e53540140dece5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c0f4e48ffe9095acd65a109a1e53540140dece5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c0f4e48ffe9095acd65a109a1e53540140dece5"}, {"sha": "d9d9ca0b9e50b669d5445e028739bcdd0aa024bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9d9ca0b9e50b669d5445e028739bcdd0aa024bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9d9ca0b9e50b669d5445e028739bcdd0aa024bd"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "21d7d4eef71656aa52e40f649692d260585eef01", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038e11c3eeb4eb36f8894829af6299abb70f3e04/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038e11c3eeb4eb36f8894829af6299abb70f3e04/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=038e11c3eeb4eb36f8894829af6299abb70f3e04", "patch": "@@ -269,7 +269,7 @@ rust.uninstall:\n # Enable selftests for the rust frontend\n selftest-rust: s-selftest-rust\n \n-RUST_SELFTEST_FLAGS = -xrust $(SELFTEST_FLAGS)\n+RUST_SELFTEST_FLAGS = -xrust -frust-incomplete-and-experimental-compiler-do-not-use $(SELFTEST_FLAGS)\n RUST_SELFTEST_DEPS = rust1$(exeext) $(SELFTEST_DEPS)\n \n # Run the rust selftests"}, {"sha": "ff4f5375daaa9811048c62dac6e6feb8fa5d629c", "filename": "gcc/rust/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038e11c3eeb4eb36f8894829af6299abb70f3e04/gcc%2Frust%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038e11c3eeb4eb36f8894829af6299abb70f3e04/gcc%2Frust%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flang.opt?ref=038e11c3eeb4eb36f8894829af6299abb70f3e04", "patch": "@@ -66,6 +66,10 @@ frust-dump-\n Rust Joined RejectNegative\n -frust-dump-<type>\tDump Rust frontend internal information.\n \n+frust-incomplete-and-experimental-compiler-do-not-use\n+Rust Var(flag_rust_experimental)\n+Enable experimental compilation of Rust files at your own risk\n+\n frust-max-recursion-depth=\n Rust RejectNegative Type(int) Var(rust_max_recursion_depth) Init(64)\n -frust-max-recursion-depth=integer"}, {"sha": "54660a85322d8f3ad69857c848a5e4f9115f1919", "filename": "gcc/rust/rust-session-manager.cc", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038e11c3eeb4eb36f8894829af6299abb70f3e04/gcc%2Frust%2Frust-session-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038e11c3eeb4eb36f8894829af6299abb70f3e04/gcc%2Frust%2Frust-session-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.cc?ref=038e11c3eeb4eb36f8894829af6299abb70f3e04", "patch": "@@ -427,6 +427,28 @@ Session::handle_crate_name (const AST::Crate &parsed_crate)\n void\n Session::compile_crate (const char *filename)\n {\n+  if (!flag_rust_experimental\n+      && !std::getenv (\"GCCRS_INCOMPLETE_AND_EXPERIMENTAL_COMPILER_DO_NOT_USE\"))\n+    rust_fatal_error (\n+      Location (), \"%s\",\n+      \"gccrs is not yet able to compile Rust code \"\n+      \"properly. Most of the errors produced will be gccrs' fault and not the \"\n+      \"crate you are trying to compile. Because of this, please reports issues \"\n+      \"to us directly instead of opening issues on said crate's \"\n+      \"repository.\\n\\nOur github repository: \"\n+      \"https://github.com/rust-gcc/gccrs\\nOur bugzilla tracker: \"\n+      \"https://gcc.gnu.org/bugzilla/\"\n+      \"buglist.cgi?bug_status=__open__&component=rust&product=gcc\\n\\n\"\n+      \"If you understand this, and understand that the binaries produced might \"\n+      \"not behave accordingly, you may attempt to use gccrs in an experimental \"\n+      \"manner by passing the following flag:\\n\\n\"\n+      \"`-frust-incomplete-and-experimental-compiler-do-not-use`\\n\\nor by \"\n+      \"defining the following environment variable (any value will \"\n+      \"do)\\n\\nGCCRS_INCOMPLETE_AND_EXPERIMENTAL_COMPILER_DO_NOT_USE\\n\\nFor\"\n+      \"cargo-gccrs, this means passing\\n\\n\"\n+      \"GCCRS_EXTRA_FLAGS=\\\"-frust-incomplete-and-experimental-compiler-do-not-\"\n+      \"use\\\"\\n\\nas an environment variable.\");\n+\n   RAIIFile file_wrap (filename);\n   if (!file_wrap.ok ())\n     {"}, {"sha": "287905bd544c9ec126ae08de63e1ebf4930e9868", "filename": "gcc/testsuite/lib/rust.exp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038e11c3eeb4eb36f8894829af6299abb70f3e04/gcc%2Ftestsuite%2Flib%2Frust.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038e11c3eeb4eb36f8894829af6299abb70f3e04/gcc%2Ftestsuite%2Flib%2Frust.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Frust.exp?ref=038e11c3eeb4eb36f8894829af6299abb70f3e04", "patch": "@@ -149,6 +149,8 @@ proc rust_init { args } {\n \tlappend ALWAYS_RUSTFLAGS \"additional_flags=$TOOL_OPTIONS\"\n     }\n \n+\tlappend ALWAYS_RUSTFLAGS \"additional_flags=-frust-incomplete-and-experimental-compiler-do-not-use\"\t\n+\t\n     verbose -log \"ALWAYS_RUSTFLAGS set to $ALWAYS_RUSTFLAGS\"\n \n     set gcc_warning_prefix \"warning:\""}]}