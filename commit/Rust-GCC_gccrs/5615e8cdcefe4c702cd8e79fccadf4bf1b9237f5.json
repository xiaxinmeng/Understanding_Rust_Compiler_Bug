{"sha": "5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYxNWU4Y2RjZWZlNGM3MDJjZDhlNzlmY2NhZGY0YmYxYjkyMzdmNQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-10-07T21:30:50Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-10-07T21:30:50Z"}, "message": "transfer.c (finalize_transfer): Free internal streams.\n\n\t* io/transfer.c (finalize_transfer): Free internal streams.\n\t* io/unix.c (mem_close): Free stream object.\n\nFrom-SVN: r88709", "tree": {"sha": "b7ea43ee8fbb0688523cec944bf0d9d33a0978bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7ea43ee8fbb0688523cec944bf0d9d33a0978bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5/comments", "author": null, "committer": null, "parents": [{"sha": "add2402ef09ed864788f5501ad8bfc54fd48913b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add2402ef09ed864788f5501ad8bfc54fd48913b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/add2402ef09ed864788f5501ad8bfc54fd48913b"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "aafa660ccf51f7c181024b4688b1b29a7ea316f6", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5", "patch": "@@ -1,3 +1,8 @@\n+2004-10-07  Paul Brook  <paul@codesourcery.com>\n+\n+\t* io/transfer.c (finalize_transfer): Free internal streams.\n+\t* io/unix.c (mem_close): Free stream object.\n+\n 2004-10-07  Paul Brook  <paul@codesourcery.com>\n \n \t* intrinsics/string_intrinsics.c (string_verify): Fix off by one"}, {"sha": "ceff76fc35c5aa10ad9b3dae4eda13a43d06e83a", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5", "patch": "@@ -1349,7 +1349,8 @@ next_record (int done)\n \n \n /* Finalize the current data transfer.  For a nonadvancing transfer,\n-   this means advancing to the next record.  */\n+   this means advancing to the next record.  For internal units close the\n+   steam associated with the unit.  */\n \n static void\n finalize_transfer (void)\n@@ -1392,6 +1393,9 @@ finalize_transfer (void)\n     }\n \n   sfree (current_unit->s);\n+\n+  if (is_internal_unit ())\n+    sclose (current_unit->s);\n }\n \n "}, {"sha": "c8b18fc96fc65958948833bfad2e8e8ff6662b71", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=5615e8cdcefe4c702cd8e79fccadf4bf1b9237f5", "patch": "@@ -811,6 +811,7 @@ mem_truncate (unix_stream * s)\n static try\n mem_close (unix_stream * s)\n {\n+  free_mem (s);\n \n   return SUCCESS;\n }"}]}