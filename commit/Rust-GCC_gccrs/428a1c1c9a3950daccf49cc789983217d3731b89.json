{"sha": "428a1c1c9a3950daccf49cc789983217d3731b89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI4YTFjMWM5YTM5NTBkYWNjZjQ5Y2M3ODk5ODMyMTdkMzczMWI4OQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-09-10T16:21:29Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-09-10T16:21:29Z"}, "message": "New test case (2.95.2 miscompilation)\n\nFrom-SVN: r45505", "tree": {"sha": "499b185eac194c04b01441ccf60ef614080695b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/499b185eac194c04b01441ccf60ef614080695b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/428a1c1c9a3950daccf49cc789983217d3731b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428a1c1c9a3950daccf49cc789983217d3731b89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/428a1c1c9a3950daccf49cc789983217d3731b89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428a1c1c9a3950daccf49cc789983217d3731b89/comments", "author": null, "committer": null, "parents": [{"sha": "402209ff48d3e1984111c536033aa638f4271531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/402209ff48d3e1984111c536033aa638f4271531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/402209ff48d3e1984111c536033aa638f4271531"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "185e29d2b2875e4d61c96f8c8246f0ca018a9fe4", "filename": "gcc/testsuite/gcc.c-torture/execute/20010910-1.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428a1c1c9a3950daccf49cc789983217d3731b89/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010910-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428a1c1c9a3950daccf49cc789983217d3731b89/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010910-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010910-1.c?ref=428a1c1c9a3950daccf49cc789983217d3731b89", "patch": "@@ -0,0 +1,59 @@\n+/* Test case contributed by Ingo Rohloff <rohloff@in.tum.de>.\n+   Code distilled from Linux kernel.  */\n+\n+/* Compile this program with a gcc-2.95.2 using\n+   \"gcc -O2\" and run it. The result will be that\n+   rx_ring[1].next == 0   (it should be == 14)\n+   and\n+   ep.skbuff[4] == 5      (it should be 0)\n+*/\n+\n+extern void abort(void);\n+\n+struct epic_rx_desc \n+{\n+  unsigned int next;\n+};\n+\n+struct epic_private \n+{\n+  struct epic_rx_desc *rx_ring;\n+  unsigned int rx_skbuff[5];\n+};\n+\n+static void epic_init_ring(struct epic_private *ep)\n+{\n+  int i;\n+\n+  for (i = 0; i < 5; i++) \n+  {\n+    ep->rx_ring[i].next = 10 + (i+1)*2;\n+    ep->rx_skbuff[i] = 0;\n+  }\n+  ep->rx_ring[i-1].next = 10;\n+}\n+\n+static int check_rx_ring[5] = { 12,14,16,18,10 };\n+\n+int main(void)\n+{\n+  struct epic_private ep;\n+  struct epic_rx_desc rx_ring[5];\n+  int i;\n+\n+  for (i=0;i<5;i++)\n+  {\n+    rx_ring[i].next=0;\n+    ep.rx_skbuff[i]=5;\n+  }\n+  \n+  ep.rx_ring=rx_ring;\n+  epic_init_ring(&ep);\n+  \n+  for (i=0;i<5;i++)\n+  {\n+    if ( rx_ring[i].next != check_rx_ring[i] ) abort();\n+    if ( ep.rx_skbuff[i] != 0 ) abort();\n+  }\n+  return 0;\n+}"}]}