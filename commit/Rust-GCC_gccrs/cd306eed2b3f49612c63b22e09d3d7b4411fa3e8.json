{"sha": "cd306eed2b3f49612c63b22e09d3d7b4411fa3e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QzMDZlZWQyYjNmNDk2MTJjNjNiMjJlMDlkM2Q3YjQ0MTFmYTNlOA==", "commit": {"author": {"name": "Alex Samuel", "email": "samuel@codesourcery.com", "date": "2000-06-05T06:37:17Z"}, "committer": {"name": "Alex Samuel", "email": "samuel@gcc.gnu.org", "date": "2000-06-05T06:37:17Z"}, "message": "Makefile.in (OBJS): Remove dyn_string.o\n\n\t* Makefile.in (OBJS): Remove dyn_string.o\n\t(dyn-string.o): Delete rule.\n\t* dyn-string.c: Delete file\n\t* dyn-string.h: Likewise.\n\nFrom-SVN: r34398", "tree": {"sha": "9297a07750f0840d0cb5a9b900a6207aabff7bc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9297a07750f0840d0cb5a9b900a6207aabff7bc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd306eed2b3f49612c63b22e09d3d7b4411fa3e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd306eed2b3f49612c63b22e09d3d7b4411fa3e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd306eed2b3f49612c63b22e09d3d7b4411fa3e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd306eed2b3f49612c63b22e09d3d7b4411fa3e8/comments", "author": null, "committer": null, "parents": [{"sha": "69afa80d10c8c90bb5129253eb1d18a32b44cbb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69afa80d10c8c90bb5129253eb1d18a32b44cbb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69afa80d10c8c90bb5129253eb1d18a32b44cbb5"}], "stats": {"total": 162, "additions": 18, "deletions": 144}, "files": [{"sha": "1604435eece39779e7ff18028b7845fb9ef76b95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd306eed2b3f49612c63b22e09d3d7b4411fa3e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd306eed2b3f49612c63b22e09d3d7b4411fa3e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd306eed2b3f49612c63b22e09d3d7b4411fa3e8", "patch": "@@ -1,3 +1,10 @@\n+2000-06-04  Alex Samuel  <samuel@codesourcery.com>\n+\n+\t* Makefile.in (OBJS): Remove dyn_string.o\n+\t(dyn-string.o): Delete rule.\n+\t* dyn-string.c: Delete file\n+\t* dyn-string.h: Likewise.\n+\t\n 2000-06-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (intl.*): Honor non-zero exit codes in the intl"}, {"sha": "b2183e5da02cb42511fcfa7d519639df15c1c654", "filename": "gcc/Makefile.in", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd306eed2b3f49612c63b22e09d3d7b4411fa3e8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd306eed2b3f49612c63b22e09d3d7b4411fa3e8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=cd306eed2b3f49612c63b22e09d3d7b4411fa3e8", "patch": "@@ -682,18 +682,18 @@ C_AND_OBJC_OBJS = c-lex.o c-pragma.o c-decl.o c-typeck.o c-convert.o \\\n C_OBJS = c-parse.o c-lang.o $(C_AND_OBJC_OBJS)\n \n # Language-independent object files.\n-OBJS = diagnostic.o \\\n- toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o \\\n- function.o stmt.o except.o expr.o calls.o expmed.o explow.o optabs.o real.o \\\n- builtins.o intl.o varasm.o rtl.o print-rtl.o rtlanal.o emit-rtl.o genrtl.o \\\n- dbxout.o sdbout.o dwarfout.o dwarf2out.o xcoffout.o bitmap.o alias.o gcse.o \\\n- integrate.o jump.o cse.o loop.o unroll.o flow.o combine.o varray.o \\\n+OBJS = diagnostic.o\t\t\t\t\t\t\t      \\\n+ toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o\t      \\\n+ function.o stmt.o except.o expr.o calls.o expmed.o explow.o optabs.o real.o  \\\n+ builtins.o intl.o varasm.o rtl.o print-rtl.o rtlanal.o emit-rtl.o genrtl.o   \\\n+ dbxout.o sdbout.o dwarfout.o dwarf2out.o xcoffout.o bitmap.o alias.o gcse.o  \\\n+ integrate.o jump.o cse.o loop.o unroll.o flow.o combine.o varray.o\t      \\\n  regclass.o regmove.o local-alloc.o global.o reload.o reload1.o caller-save.o \\\n- insn-peep.o reorg.o haifa-sched.o final.o recog.o reg-stack.o regrename.o \\\n- insn-opinit.o insn-recog.o insn-extract.o insn-output.o insn-emit.o lcm.o \\\n- profile.o insn-attrtab.o $(out_object_file) $(EXTRA_OBJS) convert.o \\\n- mbchar.o dyn-string.o splay-tree.o graph.o sbitmap.o resource.o hash.o \\\n- predict.o lists.o ggc-common.o $(GGC) simplify-rtx.o ssa.o bb-reorder.o \\\n+ insn-peep.o reorg.o haifa-sched.o final.o recog.o reg-stack.o regrename.o    \\\n+ insn-opinit.o insn-recog.o insn-extract.o insn-output.o insn-emit.o lcm.o    \\\n+ profile.o insn-attrtab.o $(out_object_file) $(EXTRA_OBJS) convert.o\t      \\\n+ mbchar.o splay-tree.o graph.o sbitmap.o resource.o hash.o predict.o\t      \\\n+ lists.o ggc-common.o $(GGC) simplify-rtx.o ssa.o bb-reorder.o\t\t      \\\n  sibcall.o conflict.o timevar.o ifcvt.o\n \n # GEN files are listed separately, so they can be built before doing parallel\n@@ -1384,7 +1384,6 @@ recog.o : recog.c $(CONFIG_H) system.h $(RTL_H) function.h $(BASIC_BLOCK_H) \\\n reg-stack.o : reg-stack.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) $(RECOG_H) \\\n    $(REGS_H) hard-reg-set.h flags.h insn-config.h insn-flags.h toplev.h \\\n    varray.h function.h\n-dyn-string.o: dyn-string.c dyn-string.h $(CONFIG_H) system.h\n predict.o: predict.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h \\\n    insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h \\\n    $(RECOG_H) insn-flags.h function.h except.h $(EXPR_H)"}, {"sha": "704629d253b1fc7ab52bdc38fa06730f0c05792b", "filename": "gcc/dyn-string.c", "status": "removed", "additions": 0, "deletions": 99, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69afa80d10c8c90bb5129253eb1d18a32b44cbb5/gcc%2Fdyn-string.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69afa80d10c8c90bb5129253eb1d18a32b44cbb5/gcc%2Fdyn-string.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdyn-string.c?ref=69afa80d10c8c90bb5129253eb1d18a32b44cbb5", "patch": "@@ -1,99 +0,0 @@\n-/* An abstract string datatype.\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n-   Contributed by Mark Mitchell (mark@markmitchell.com).\n-\n-This file is part of GNU CC.\n-   \n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"dyn-string.h\"\n-\n-/* Create a new dynamic string capable of holding at least SPACE characters,\n-   including the terminating NUL.  If SPACE is 0, it will be silently\n-   increased to 1.  */\n-\n-dyn_string_t \n-dyn_string_new (space)\n-     int space;\n-{\n-  dyn_string_t result = (dyn_string_t) xmalloc (sizeof (struct dyn_string));\n- \n-  /* We need at least one byte in which to store the terminating NUL.  */\n-  if (space == 0)\n-    space = 1;\n-\n-  result->allocated = space;\n-  result->s = (char *) xmalloc (space);\n-  result->length = 0;\n-  result->s[0] = '\\0';\n-\n-  return result;\n-}\n-\n-/* Free the memory used by DS.  */\n-\n-void \n-dyn_string_delete (ds)\n-     dyn_string_t ds;\n-{\n-  free (ds->s);\n-  free (ds);\n-}\n-\n-/* Append the NUL-terminated string S to DS, resizing DS if necessary.  */\n-\n-dyn_string_t \n-dyn_string_append (ds, s)\n-     dyn_string_t ds;\n-     const char *s;\n-{\n-  int len = strlen (s);\n-\n-  /* The new length is the old length plus the size of our string, plus\n-     one for the null at the end.  */\n-  dyn_string_resize (ds, ds->length + len + 1);\n-  strcpy (ds->s + ds->length, s);\n-  ds->length += len;\n-\n-  return ds;\n-}\n-\n-/* Increase the capacity of DS so it can hold at least SPACE characters,\n-   including the terminating NUL.  This function will not (at present)\n-   reduce the capacity of DS.  */\n-\n-dyn_string_t \n-dyn_string_resize (ds, space)\n-     dyn_string_t ds;\n-     int space;\n-{\n-  int new_allocated = ds->allocated;\n-\n-  while (space > new_allocated)\n-    new_allocated *= 2;\n-    \n-  if (new_allocated != ds->allocated)\n-    {\n-      /* We actually need more space.  */\n-      ds->allocated = new_allocated;\n-      ds->s = (char *) xrealloc (ds->s, ds->allocated);\n-    }\n-\n-  return ds;\n-}"}, {"sha": "561bff4351cd3fa7621a32244083c842fbbf25a4", "filename": "gcc/dyn-string.h", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69afa80d10c8c90bb5129253eb1d18a32b44cbb5/gcc%2Fdyn-string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69afa80d10c8c90bb5129253eb1d18a32b44cbb5/gcc%2Fdyn-string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdyn-string.h?ref=69afa80d10c8c90bb5129253eb1d18a32b44cbb5", "patch": "@@ -1,33 +0,0 @@\n-/* An abstract string datatype.\n-   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n-   Contributed by Mark Mitchell (mark@markmitchell.com).\n-\n-This file is part of GNU CC.\n-   \n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-\n-typedef struct dyn_string\n-{\n-  int allocated;\t/* The amount of space allocated for the string.  */\n-  int length;\t\t/* The actual length of the string.  */\n-  char *s;\t\t/* The string itself, NUL-terminated.  */\n-}* dyn_string_t;\n-\n-extern dyn_string_t dyn_string_new      PARAMS ((int));\n-extern void dyn_string_delete           PARAMS ((dyn_string_t));\n-extern dyn_string_t dyn_string_append   PARAMS ((dyn_string_t, const char*));\n-extern dyn_string_t dyn_string_resize   PARAMS ((dyn_string_t, int));"}]}