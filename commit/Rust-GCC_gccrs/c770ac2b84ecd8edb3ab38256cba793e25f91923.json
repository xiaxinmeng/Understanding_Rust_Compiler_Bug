{"sha": "c770ac2b84ecd8edb3ab38256cba793e25f91923", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc3MGFjMmI4NGVjZDhlZGIzYWIzODI1NmNiYTc5M2UyNWY5MTkyMw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-06-02T05:05:49Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-06-02T05:05:49Z"}, "message": "ggc-page.c (init_ggc): Give better diagnostics on failure to open /dev/zero.\n\n\t* ggc-page.c (init_ggc): Give better diagnostics on failure to\n\topen /dev/zero.\n\t* toplev.c (crash_signal): Reset handling for received signal\n\tto SIG_DFL.\n\nFrom-SVN: r67323", "tree": {"sha": "eeebe2343c25c743a039ec74ff8f59e415b538d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeebe2343c25c743a039ec74ff8f59e415b538d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c770ac2b84ecd8edb3ab38256cba793e25f91923", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c770ac2b84ecd8edb3ab38256cba793e25f91923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c770ac2b84ecd8edb3ab38256cba793e25f91923", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c770ac2b84ecd8edb3ab38256cba793e25f91923/comments", "author": null, "committer": null, "parents": [{"sha": "103fc15d39020d97a613299918b779c594ea07cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/103fc15d39020d97a613299918b779c594ea07cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/103fc15d39020d97a613299918b779c594ea07cc"}], "stats": {"total": 109, "additions": 59, "deletions": 50}, "files": [{"sha": "dceb27f3c5e1d870e8bab13d86f851c8b3f3a3a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 55, "deletions": 48, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c770ac2b84ecd8edb3ab38256cba793e25f91923/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c770ac2b84ecd8edb3ab38256cba793e25f91923/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c770ac2b84ecd8edb3ab38256cba793e25f91923", "patch": "@@ -1,3 +1,10 @@\n+2003-06-01  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* ggc-page.c (init_ggc): Give better diagnostics on failure to\n+\topen /dev/zero.\n+\t* toplev.c (crash_signal): Reset handling for received signal\n+\tto SIG_DFL.\n+\n 2003-06-02  Ben Elliston  <bje@wasabisystems.com>\n \n \t* config/arm/arm.c (arm_use_dfa_pipeline_interface): Declare.\n@@ -86,9 +93,9 @@\n \n 2003-06-01  Andreas Jaeger  <aj@suse.de>\n \n-        * toplev.c: Use ISO C90 prototypes.\n+\t* toplev.c: Use ISO C90 prototypes.\n \n-        * toplev.h: Use ISO C90 prototypes.\n+\t* toplev.h: Use ISO C90 prototypes.\n \n \t* genrecog.c: Use ISO C90 prototypes.\n \t(nodes_identical): Correct declaration to match prototype.\n@@ -160,53 +167,53 @@\n 2003-06-01  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR/9680\n-        * config/rs6000/rs6000.h (CANNOT_CHANGE_MODE_CLASS): Require\n-        TARGET_SPE for SPE_VECTOR_MODE.\n+\t* config/rs6000/rs6000.h (CANNOT_CHANGE_MODE_CLASS): Require\n+\tTARGET_SPE for SPE_VECTOR_MODE.\n \n 2003-05-31  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * toplev.c (botch): Remove.\n-        (do_abort): Remove.\n-        (set_Wunused): Comment.\n-        (set_Wextra): Comment.\n-        Remove ^L's.\n-        (rest_of_compilation): Factor out common code into functions.\n-        (rest_of_handle_inlining): New.\n-        (rest_of_handle_ssa): New.\n-        (rest_of_handle_cse): New.\n-        (rest_of_handle_gcse): New.\n-        (rest_of_handle_loop_optimize): New.\n-        (rest_of_handle_jump_bypass): New.\n-        (rest_of_handle_sibling_calls): New.\n-        (rest_of_handle_null_pointer): New.\n-        (rest_of_handle_addresof): New.\n-        (rest_of_handle_flow): New.\n-        (rest_of_handle_branch_prob): New.\n-        (rest_of_handle_if_conversion): New.\n-        (rest_of_handle_tracer): New.\n-        (rest_of_handle_loop2): New.\n-        (rest_of_handle_cse2): New.\n-        (rest_of_handle_life): New.\n-        (rest_of_handle_combine): New.\n-        (rest_of_handle_if_after_combine): New.\n-        (rest_of_handle_regmove): New.\n-        (rest_of_handle_sched): New.\n-        (rest_of_handle_old_regalloc): New.\n-        (rest_of_handle_new_regalloc): New.\n-        (rest_of_handle_regrename): New.\n-        (rest_of_handle_reorder_blocks): New.\n-        (rest_of_handle_sched2): New.\n-        (rest_of_handle_new_regalloc): New.\n-        (rest_of_handle_old_regalloc): New.\n-        (rest_of_handle_regrename): New.\n-        (rest_of_handle_reorder_blocks): New.\n-        (rest_of_handle_stack_regs): New.\n-        (rest_of_handle_machine_reorg): New.\n-        (rest_of_handle_delay_slots): New.\n-        (rest_of_handle_final): New.\n-\n-        * toplev.h (botch): Remove prototype.\n-        (do_abort): Same.\n+\t* toplev.c (botch): Remove.\n+\t(do_abort): Remove.\n+\t(set_Wunused): Comment.\n+\t(set_Wextra): Comment.\n+\tRemove ^L's.\n+\t(rest_of_compilation): Factor out common code into functions.\n+\t(rest_of_handle_inlining): New.\n+\t(rest_of_handle_ssa): New.\n+\t(rest_of_handle_cse): New.\n+\t(rest_of_handle_gcse): New.\n+\t(rest_of_handle_loop_optimize): New.\n+\t(rest_of_handle_jump_bypass): New.\n+\t(rest_of_handle_sibling_calls): New.\n+\t(rest_of_handle_null_pointer): New.\n+\t(rest_of_handle_addresof): New.\n+\t(rest_of_handle_flow): New.\n+\t(rest_of_handle_branch_prob): New.\n+\t(rest_of_handle_if_conversion): New.\n+\t(rest_of_handle_tracer): New.\n+\t(rest_of_handle_loop2): New.\n+\t(rest_of_handle_cse2): New.\n+\t(rest_of_handle_life): New.\n+\t(rest_of_handle_combine): New.\n+\t(rest_of_handle_if_after_combine): New.\n+\t(rest_of_handle_regmove): New.\n+\t(rest_of_handle_sched): New.\n+\t(rest_of_handle_old_regalloc): New.\n+\t(rest_of_handle_new_regalloc): New.\n+\t(rest_of_handle_regrename): New.\n+\t(rest_of_handle_reorder_blocks): New.\n+\t(rest_of_handle_sched2): New.\n+\t(rest_of_handle_new_regalloc): New.\n+\t(rest_of_handle_old_regalloc): New.\n+\t(rest_of_handle_regrename): New.\n+\t(rest_of_handle_reorder_blocks): New.\n+\t(rest_of_handle_stack_regs): New.\n+\t(rest_of_handle_machine_reorg): New.\n+\t(rest_of_handle_delay_slots): New.\n+\t(rest_of_handle_final): New.\n+\n+\t* toplev.h (botch): Remove prototype.\n+\t(do_abort): Same.\n \n 2003-05-31  Neil Booth  <neil@daikokuya.co.uk>\n \n@@ -453,8 +460,8 @@\n \t-lthread to -lpthread.\n \n 2003-05-28  Eric Botcazou  <ebotcazou@libertysurf.fr>\n-            Bruce Korb  <bkorb@gnu.org>\n-            Arno Klaassen  <arno@heho.snv.jussieu.fr>\n+\t    Bruce Korb  <bkorb@gnu.org>\n+\t    Arno Klaassen  <arno@heho.snv.jussieu.fr>\n \n \t* fixinc/inclhack.def: Add missing declaration of getpagesize()\n \tto unistd.h on Solaris 2.5.1."}, {"sha": "ec1a583574bdf86ed402358eb192658d13774126", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c770ac2b84ecd8edb3ab38256cba793e25f91923/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c770ac2b84ecd8edb3ab38256cba793e25f91923/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=c770ac2b84ecd8edb3ab38256cba793e25f91923", "patch": "@@ -1287,7 +1287,7 @@ init_ggc ()\n #ifdef HAVE_MMAP_DEV_ZERO\n   G.dev_zero_fd = open (\"/dev/zero\", O_RDONLY);\n   if (G.dev_zero_fd == -1)\n-    abort ();\n+    internal_error (\"open /dev/zero: %m\");\n #endif\n \n #if 0"}, {"sha": "6a6e076cd54c02dcfaa36bc2bff8759499190056", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c770ac2b84ecd8edb3ab38256cba793e25f91923/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c770ac2b84ecd8edb3ab38256cba793e25f91923/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=c770ac2b84ecd8edb3ab38256cba793e25f91923", "patch": "@@ -1758,11 +1758,13 @@ floor_log2_wide (unsigned HOST_WIDE_INT x)\n }\n \n /* Handler for fatal signals, such as SIGSEGV.  These are transformed\n-   into ICE messages, which is much more user friendly.  */\n+   into ICE messages, which is much more user friendly.  In case the\n+   error printer crashes, reset the signal to prevent infinite recursion.  */\n \n static void\n crash_signal (int signo)\n {\n+  signal (signo, SIG_DFL);\n   internal_error (\"%s\", strsignal (signo));\n }\n "}]}