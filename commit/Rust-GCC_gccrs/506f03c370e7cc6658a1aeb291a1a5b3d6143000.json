{"sha": "506f03c370e7cc6658a1aeb291a1a5b3d6143000", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA2ZjAzYzM3MGU3Y2M2NjU4YTFhZWIyOTFhMWE1YjNkNjE0MzAwMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-01-27T11:12:04Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-01-27T11:12:04Z"}, "message": "re PR target/64368 (Several libstdc++ test failures on non-linux platforms after r218964.)\n\n\tPR libstdc++/64368\n\t* include/std/shared_mutex (shared_timed_mutex::try_lock_for,\n\tshared_timed_mutex::try_lock_until): Only define when POSIX thread\n\ttimeouts option is supported.\n\t(shared_timed_mutex::try_shared_lock_for,\n\tshared_timed_mutex::try_shared_lock_until): Likewise.\n\nFrom-SVN: r220161", "tree": {"sha": "7d15096d2ba2e08e32e469edabcaeb051a72699e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d15096d2ba2e08e32e469edabcaeb051a72699e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/506f03c370e7cc6658a1aeb291a1a5b3d6143000", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506f03c370e7cc6658a1aeb291a1a5b3d6143000", "html_url": "https://github.com/Rust-GCC/gccrs/commit/506f03c370e7cc6658a1aeb291a1a5b3d6143000", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506f03c370e7cc6658a1aeb291a1a5b3d6143000/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f962fbf14c2fba5d5195cb4094f13e76f901f709", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f962fbf14c2fba5d5195cb4094f13e76f901f709", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f962fbf14c2fba5d5195cb4094f13e76f901f709"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "169f02e0312a47c7907a3a02b30367cae0ff8117", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506f03c370e7cc6658a1aeb291a1a5b3d6143000/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506f03c370e7cc6658a1aeb291a1a5b3d6143000/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=506f03c370e7cc6658a1aeb291a1a5b3d6143000", "patch": "@@ -1,3 +1,12 @@\n+2015-01-27  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/64368\n+\t* include/std/shared_mutex (shared_timed_mutex::try_lock_for,\n+\tshared_timed_mutex::try_lock_until): Only define when POSIX thread\n+\ttimeouts option is supported.\n+\t(shared_timed_mutex::try_shared_lock_for,\n+\tshared_timed_mutex::try_shared_lock_until): Likewise.\n+\n 2015-01-26  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/64368"}, {"sha": "47cfc6433d96f4268c53fc83a8e46b76f62bd9d2", "filename": "libstdc++-v3/include/std/shared_mutex", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506f03c370e7cc6658a1aeb291a1a5b3d6143000/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fshared_mutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506f03c370e7cc6658a1aeb291a1a5b3d6143000/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fshared_mutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fshared_mutex?ref=506f03c370e7cc6658a1aeb291a1a5b3d6143000", "patch": "@@ -108,6 +108,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return true;\n     }\n \n+#if _GTHREAD_USE_MUTEX_TIMEDLOCK\n     template<typename _Rep, typename _Period>\n       bool\n       try_lock_for(const chrono::duration<_Rep, _Period>& __rel_time)\n@@ -149,6 +150,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tconst auto __s_atime = __s_entry + __delta;\n \treturn try_lock_until(__s_atime);\n       }\n+#endif\n \n     void\n     unlock()\n@@ -186,6 +188,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return true;\n     }\n \n+#if _GTHREAD_USE_MUTEX_TIMEDLOCK\n     template<typename _Rep, typename _Period>\n       bool\n       try_lock_shared_for(const chrono::duration<_Rep, _Period>& __rel_time)\n@@ -230,6 +233,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tconst auto __s_atime = __s_entry + __delta;\n \treturn try_lock_shared_until(__s_atime);\n       }\n+#endif\n \n     void\n     unlock_shared()"}]}