{"sha": "8dc252595b9cd211faca8929ab2149751a8bdfdc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRjMjUyNTk1YjljZDIxMWZhY2E4OTI5YWIyMTQ5NzUxYThiZGZkYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-10-27T18:42:00Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-10-27T18:42:00Z"}, "message": "i386.c (find_constant_1): Delete.\n\ngcc/\n\t* config/i386/i386.c (find_constant_1): Delete.\n\t(find_constant): Use FOR_EACH_SUBRTX.\n\nFrom-SVN: r216760", "tree": {"sha": "513741f13d9101c6460926b61d8c629f3a346573", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/513741f13d9101c6460926b61d8c629f3a346573"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8dc252595b9cd211faca8929ab2149751a8bdfdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc252595b9cd211faca8929ab2149751a8bdfdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dc252595b9cd211faca8929ab2149751a8bdfdc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc252595b9cd211faca8929ab2149751a8bdfdc/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5"}], "stats": {"total": 76, "additions": 36, "deletions": 40}, "files": [{"sha": "aed92bb3deadb436fe2a87d9685cf483767c1022", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc252595b9cd211faca8929ab2149751a8bdfdc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc252595b9cd211faca8929ab2149751a8bdfdc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8dc252595b9cd211faca8929ab2149751a8bdfdc", "patch": "@@ -1,3 +1,8 @@\n+2014-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/i386/i386.c (find_constant_1): Delete.\n+\t(find_constant): Use FOR_EACH_SUBRTX.\n+\n 2014-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/i386/i386.c (extended_reg_mentioned_1): Delete."}, {"sha": "7855a4b153a61825b1241631fd6f1824169c73ab", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 31, "deletions": 40, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc252595b9cd211faca8929ab2149751a8bdfdc/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc252595b9cd211faca8929ab2149751a8bdfdc/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8dc252595b9cd211faca8929ab2149751a8bdfdc", "patch": "@@ -46533,53 +46533,44 @@ allocate_next_window (int window_num)\n   return dispatch_window_list1;\n }\n \n-/* Increment the number of immediate operands of an instruction.  */\n+/* Compute number of immediate operands of an instruction.  */\n \n-static int\n-find_constant_1 (rtx *in_rtx, imm_info *imm_values)\n+static void\n+find_constant (rtx in_rtx, imm_info *imm_values)\n {\n-  if (*in_rtx == 0)\n-    return 0;\n-\n-    switch ( GET_CODE (*in_rtx))\n-    {\n-    case CONST:\n-    case SYMBOL_REF:\n-    case CONST_INT:\n-      (imm_values->imm)++;\n-      if (x86_64_immediate_operand (*in_rtx, SImode))\n-\t(imm_values->imm32)++;\n-      else\n-\t(imm_values->imm64)++;\n-      break;\n-\n-    case CONST_DOUBLE:\n-      (imm_values->imm)++;\n-      (imm_values->imm64)++;\n-      break;\n-\n-    case CODE_LABEL:\n-      if (LABEL_KIND (*in_rtx) == LABEL_NORMAL)\n+  if (INSN_P (in_rtx))\n+    in_rtx = PATTERN (in_rtx);\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, in_rtx, ALL)\n+    if (const_rtx x = *iter)\n+      switch (GET_CODE (x))\n \t{\n+\tcase CONST:\n+\tcase SYMBOL_REF:\n+\tcase CONST_INT:\n \t  (imm_values->imm)++;\n-\t  (imm_values->imm32)++;\n-\t}\n-      break;\n-\n-    default:\n-      break;\n-    }\n+\t  if (x86_64_immediate_operand (CONST_CAST_RTX (x), SImode))\n+\t    (imm_values->imm32)++;\n+\t  else\n+\t    (imm_values->imm64)++;\n+\t  break;\n \n-  return 0;\n-}\n+\tcase CONST_DOUBLE:\n+\t  (imm_values->imm)++;\n+\t  (imm_values->imm64)++;\n+\t  break;\n \n-/* Compute number of immediate operands of an instruction.  */\n+\tcase CODE_LABEL:\n+\t  if (LABEL_KIND (x) == LABEL_NORMAL)\n+\t    {\n+\t      (imm_values->imm)++;\n+\t      (imm_values->imm32)++;\n+\t    }\n+\t  break;\n \n-static void\n-find_constant (rtx in_rtx, imm_info *imm_values)\n-{\n-  for_each_rtx (INSN_P (in_rtx) ? &PATTERN (in_rtx) : &in_rtx,\n-\t\t(rtx_function) find_constant_1, (void *) imm_values);\n+\tdefault:\n+\t  break;\n+\t}\n }\n \n /* Return total size of immediate operands of an instruction along with number"}]}