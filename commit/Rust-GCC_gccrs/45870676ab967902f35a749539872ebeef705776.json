{"sha": "45870676ab967902f35a749539872ebeef705776", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4NzA2NzZhYjk2NzkwMmYzNWE3NDk1Mzk4NzJlYmVlZjcwNTc3Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-09T20:20:59Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-09T20:20:59Z"}, "message": "(dollars_in_ident): Remove; replaced by is_idchar['$'].\n\n(main): Initialize is_idchar and is_idstart directly when given -$.\nIgnore DOLLARS_IN_IDENTIFIERS.\n(rescan): Diagnose $ in identifier if pedantic.\n(initialize_char_syntax): Assume $ is allowed in identifier; `main' will\nchange this if -$ is given.\n\nFrom-SVN: r12934", "tree": {"sha": "f6e27191d4454fc4e1a7df212f873395ef42335c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6e27191d4454fc4e1a7df212f873395ef42335c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45870676ab967902f35a749539872ebeef705776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45870676ab967902f35a749539872ebeef705776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45870676ab967902f35a749539872ebeef705776", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45870676ab967902f35a749539872ebeef705776/comments", "author": null, "committer": null, "parents": [{"sha": "b23635606b52921644114735b45b57eb93fec127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b23635606b52921644114735b45b57eb93fec127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b23635606b52921644114735b45b57eb93fec127"}], "stats": {"total": 31, "additions": 7, "deletions": 24}, "files": [{"sha": "4d1961191ee5dea42e941a6ae3e01daaeb8794e4", "filename": "gcc/cccp.c", "status": "modified", "additions": 7, "deletions": 24, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45870676ab967902f35a749539872ebeef705776/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45870676ab967902f35a749539872ebeef705776/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=45870676ab967902f35a749539872ebeef705776", "patch": "@@ -1032,18 +1032,6 @@ static int errors = 0;\t\t\t/* Error counter for exit code */\n /* Name of output file, for error messages.  */\n static char *out_fname;\n \n-/* Zero means dollar signs are punctuation.\n-   -$ stores 0; -traditional may store 1.  Default is 1 for VMS, 0 otherwise.\n-   This must be 0 for correct processing of this ANSI C program:\n-\t#define foo(a) #a\n-\t#define lose(b) foo (b)\n-\t#define test$\n-\tlose (test)\t*/\n-static int dollars_in_ident;\n-#ifndef DOLLARS_IN_IDENTIFIERS\n-#define DOLLARS_IN_IDENTIFIERS 1\n-#endif\n-\n \n /* Stack of conditionals currently in progress\n    (including both successful and failing conditionals).  */\n@@ -1354,10 +1342,8 @@ main (argc, argv)\n   in_fname = NULL;\n   out_fname = NULL;\n \n-  /* Initialize is_idchar to allow $.  */\n-  dollars_in_ident = 1;\n+  /* Initialize is_idchar.  */\n   initialize_char_syntax ();\n-  dollars_in_ident = DOLLARS_IN_IDENTIFIERS > 0;\n \n   no_line_directives = 0;\n   no_trigraphs = 1;\n@@ -1512,8 +1498,6 @@ main (argc, argv)\n \tif (!strcmp (argv[i], \"-traditional\")) {\n \t  traditional = 1;\n \t  cplusplus_comments = 0;\n-\t  if (dollars_in_ident > 0)\n-\t    dollars_in_ident = 1;\n \t} else if (!strcmp (argv[i], \"-trigraphs\")) {\n \t  no_trigraphs = 0;\n \t}\n@@ -1715,7 +1699,7 @@ main (argc, argv)\n \tbreak;\n \n       case '$':\t\t\t/* Don't include $ in identifiers.  */\n-\tdollars_in_ident = 0;\n+\tis_idchar['$'] = is_idstart['$'] = 0;\n \tbreak;\n \n       case 'I':\t\t\t/* Add directory to path for includes.  */\n@@ -1778,9 +1762,6 @@ main (argc, argv)\n   if (cp && ! no_standard_includes)\n     path_include (cp);\n \n-  /* Now that dollars_in_ident is known, initialize is_idchar.  */\n-  initialize_char_syntax ();\n-\n   /* Initialize output buffer */\n \n   outbuf.buf = (U_CHAR *) xmalloc (OUTBUF_SIZE);\n@@ -3053,8 +3034,10 @@ do { ip = &instack[indepth];\t\t\\\n       break;\n \n     case '$':\n-      if (!dollars_in_ident)\n+      if (! is_idchar['$'])\n \tgoto randomchar;\n+      if (pedantic)\n+\tpedwarn (\"`$' in identifier\");\n       goto letter;\n \n     case '0': case '1': case '2': case '3': case '4':\n@@ -9445,8 +9428,8 @@ initialize_char_syntax ()\n     is_idchar[i] = 1;\n   is_idchar['_'] = 1;\n   is_idstart['_'] = 1;\n-  is_idchar['$'] = dollars_in_ident;\n-  is_idstart['$'] = dollars_in_ident;\n+  is_idchar['$'] = 1;\n+  is_idstart['$'] = 1;\n \n   /* horizontal space table */\n   is_hor_space[' '] = 1;"}]}