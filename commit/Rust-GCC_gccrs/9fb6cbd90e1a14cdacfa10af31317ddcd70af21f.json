{"sha": "9fb6cbd90e1a14cdacfa10af31317ddcd70af21f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZiNmNiZDkwZTFhMTRjZGFjZmExMGFmMzEzMTdkZGNkNzBhZjIxZg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-13T15:28:55Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-13T15:28:55Z"}, "message": "re PR tree-optimization/20913 (copy-prop does not fold conditionals)\n\ngcc/\n\tPR tree-optimization/20913\n\t* tree-ssa-copy.c (copy_prop_visit_cond_stmt): Fold COND_EXPR.\n\ntestsuite/\n\tPR tree-optimization/20913\n\t* gcc.dg/tree-ssa/pr20913.c: New.\n\nFrom-SVN: r98090", "tree": {"sha": "1dbb90005a98cf50ebb4b58c851c2129c3c1e1f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dbb90005a98cf50ebb4b58c851c2129c3c1e1f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fb6cbd90e1a14cdacfa10af31317ddcd70af21f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fb6cbd90e1a14cdacfa10af31317ddcd70af21f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fb6cbd90e1a14cdacfa10af31317ddcd70af21f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fb6cbd90e1a14cdacfa10af31317ddcd70af21f/comments", "author": null, "committer": null, "parents": [{"sha": "e22a7bcf2604c5e0b29200530eaa090e787a249b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e22a7bcf2604c5e0b29200530eaa090e787a249b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e22a7bcf2604c5e0b29200530eaa090e787a249b"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "3d0636cc6f8fdfa8f8a28fb26167b8414b6bef00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fb6cbd90e1a14cdacfa10af31317ddcd70af21f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fb6cbd90e1a14cdacfa10af31317ddcd70af21f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9fb6cbd90e1a14cdacfa10af31317ddcd70af21f", "patch": "@@ -1,3 +1,8 @@\n+2005-04-13  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR tree-optimization/20913\n+\t* tree-ssa-copy.c (copy_prop_visit_cond_stmt): Fold COND_EXPR.\n+\n 2005-04-13  Julian Brown  <julian@codesourcery.com>\n \n \t* config/elfos.h (MAKE_DECL_ONE_ONLY): Redefined to stop DECL_WEAK from"}, {"sha": "6faba54bdb00948aa56d4c3b09263e208cf7c035", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fb6cbd90e1a14cdacfa10af31317ddcd70af21f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fb6cbd90e1a14cdacfa10af31317ddcd70af21f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9fb6cbd90e1a14cdacfa10af31317ddcd70af21f", "patch": "@@ -1,3 +1,8 @@\n+2005-04-13  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR tree-optimization/20913\n+\t* gcc.dg/tree-ssa/pr20913.c: New.\n+\n 2005-04-13  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/13744"}, {"sha": "da09183bee34a6624e48d1b03fcf7f2cba9a4ddb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr20913.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fb6cbd90e1a14cdacfa10af31317ddcd70af21f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20913.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fb6cbd90e1a14cdacfa10af31317ddcd70af21f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20913.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20913.c?ref=9fb6cbd90e1a14cdacfa10af31317ddcd70af21f", "patch": "@@ -0,0 +1,25 @@\n+/* PR tree-optimization/20913\n+   COPY-PROP did not fold COND_EXPR, blocking some copy propagation\n+   opportunities.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-copyprop1-details\" } */\n+\n+int\n+foo (int a, int b, int c, int d)\n+{\n+  int x, y;\n+\n+  b = a;\n+  if (a == b)\n+    x = c;\n+  else\n+    x = d;\n+\n+  if (x == c)\n+    return a;\n+  else\n+    return b;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"with if \\\\(1\\\\)\" 2 \"copyprop1\"} } */"}, {"sha": "b9544f8897968ca758514c79d0e3ce9c41ef7e29", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fb6cbd90e1a14cdacfa10af31317ddcd70af21f/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fb6cbd90e1a14cdacfa10af31317ddcd70af21f/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=9fb6cbd90e1a14cdacfa10af31317ddcd70af21f", "patch": "@@ -626,9 +626,16 @@ copy_prop_visit_cond_stmt (tree stmt, edge *taken_edge_p)\n \t  print_generic_stmt (dump_file, cond, 0);\n \t}\n \n-      *taken_edge_p = find_taken_edge (bb_for_stmt (stmt), cond);\n-      if (*taken_edge_p)\n-\tretval = SSA_PROP_INTERESTING;\n+      /* We can fold COND only and get a useful result only when we\n+\t have the same SSA_NAME on both sides of a comparison\n+\t operator.  */\n+      if (TREE_CODE (TREE_OPERAND (cond, 0)) == SSA_NAME\n+\t  && TREE_OPERAND (cond, 0) == TREE_OPERAND (cond, 1))\n+\t{\n+\t  *taken_edge_p = find_taken_edge (bb_for_stmt (stmt), fold (cond));\n+\t  if (*taken_edge_p)\n+\t    retval = SSA_PROP_INTERESTING;\n+\t}\n \n       /* Restore the original operands.  */\n       for (i = 0; i < NUM_USES (uses); i++)"}]}