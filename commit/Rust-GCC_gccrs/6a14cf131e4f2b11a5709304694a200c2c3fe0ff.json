{"sha": "6a14cf131e4f2b11a5709304694a200c2c3fe0ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmExNGNmMTMxZTRmMmIxMWE1NzA5MzA0Njk0YTIwMGMyYzNmZTBmZg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-12-20T21:10:51Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-12-20T21:10:51Z"}, "message": "re PR fortran/30190 ([4.1 only] Bounds check generates wrong code for associated(p1(i)%p2,p1(i)%p2))\n\n2006-12-20  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/30190\n\t* trans-array.c (gfc_conv_array_ref): Remove gfc_evaluate_now\n\tfrom the -fbounds-check branch.\n\n2006-12-20  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/30190\n\t* gfortran.dg/bounds_check_5.f90: New test.\n\nFrom-SVN: r120084", "tree": {"sha": "8cdd30fa7a95399c0d599e44683c5a8fb4b7b9ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cdd30fa7a95399c0d599e44683c5a8fb4b7b9ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a14cf131e4f2b11a5709304694a200c2c3fe0ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a14cf131e4f2b11a5709304694a200c2c3fe0ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a14cf131e4f2b11a5709304694a200c2c3fe0ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a14cf131e4f2b11a5709304694a200c2c3fe0ff/comments", "author": null, "committer": null, "parents": [{"sha": "2a4f771a6e735f6b1924349c39f05f4f420c2a41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a4f771a6e735f6b1924349c39f05f4f420c2a41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a4f771a6e735f6b1924349c39f05f4f420c2a41"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "c3b60fc5f025431fea3ea137e6cf27c36bc1427d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a14cf131e4f2b11a5709304694a200c2c3fe0ff/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a14cf131e4f2b11a5709304694a200c2c3fe0ff/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6a14cf131e4f2b11a5709304694a200c2c3fe0ff", "patch": "@@ -1,3 +1,9 @@\n+2006-12-20  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/30190\n+\t* trans-array.c (gfc_conv_array_ref): Remove gfc_evaluate_now\n+\tfrom the -fbounds-check branch.\n+\n 2006-12-20  Roger Sayle  <roger@eyesopen.com>\n \n \t* trans-expr.c (is_zero_initializer_p): Determine whether a given"}, {"sha": "6201c4c0561838c282c2af2e0424fba30e9b9d56", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a14cf131e4f2b11a5709304694a200c2c3fe0ff/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a14cf131e4f2b11a5709304694a200c2c3fe0ff/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=6a14cf131e4f2b11a5709304694a200c2c3fe0ff", "patch": "@@ -2094,8 +2094,6 @@ gfc_conv_array_ref (gfc_se * se, gfc_array_ref * ar, gfc_symbol * sym,\n \t  tree cond;\n \t  char *msg;\n \n-\t  indexse.expr = gfc_evaluate_now (indexse.expr, &se->pre);\n-\n \t  tmp = gfc_conv_array_lbound (se->expr, n);\n \t  cond = fold_build2 (LT_EXPR, boolean_type_node, \n \t\t\t      indexse.expr, tmp);"}, {"sha": "4d43f7902800f3222652579061deb8caaf448613", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a14cf131e4f2b11a5709304694a200c2c3fe0ff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a14cf131e4f2b11a5709304694a200c2c3fe0ff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a14cf131e4f2b11a5709304694a200c2c3fe0ff", "patch": "@@ -1,3 +1,8 @@\n+2006-12-20  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/30190\n+\t* gfortran.dg/bounds_check_5.f90: New test.\n+\n 2006-12-20  Andrew Pinski  <pinskia@gmail.com>\n \n \tPR middle-end/30143"}, {"sha": "3a2fc6306a5516b9882754ccc06904051c7c63ba", "filename": "gcc/testsuite/gfortran.dg/bounds_check_5.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a14cf131e4f2b11a5709304694a200c2c3fe0ff/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a14cf131e4f2b11a5709304694a200c2c3fe0ff/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_5.f90?ref=6a14cf131e4f2b11a5709304694a200c2c3fe0ff", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do run }\n+! This tests the fix for PR30190, in which the array reference\n+! in the associated statement would cause a segfault.\n+!\n+! Contributed by Tobias Burnus  <burnus@gcc.gnu.org>\n+!\n+  TYPE particle_type\n+     INTEGER, POINTER :: p(:)\n+  END TYPE particle_type\n+  TYPE(particle_type), POINTER  :: t(:)\n+  integer :: i\n+  logical :: f\n+  i = 1\n+  allocate(t(1))\n+  allocate(t(1)%p(0))\n+  f = associated(t(i)%p,t(i)%p)\n+end"}]}