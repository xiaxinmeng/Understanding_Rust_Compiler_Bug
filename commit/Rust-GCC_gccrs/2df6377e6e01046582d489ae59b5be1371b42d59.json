{"sha": "2df6377e6e01046582d489ae59b5be1371b42d59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRmNjM3N2U2ZTAxMDQ2NTgyZDQ4OWFlNTliNWJlMTM3MWI0MmQ1OQ==", "commit": {"author": {"name": "Douglas Gregor", "email": "doug.gregor@gmail.com", "date": "2007-07-12T14:33:38Z"}, "committer": {"name": "Doug Gregor", "email": "dgregor@gcc.gnu.org", "date": "2007-07-12T14:33:38Z"}, "message": "all_bound.cc: Disambiguate uses of TR1/C++0x facilities.\n\n2007-07-12  Douglas Gregor  <doug.gregor@gmail.com>\n\n\t* testsuite/tr1/3_function_objects/bind/all_bound.cc: Disambiguate uses of\n\tTR1/C++0x facilities.\n\t* testsuite/tr1/3_function_objects/bind/nested.cc: Ditto.\n\t* testsuite/tr1/3_function_objects/bind/placeholders.cc: Ditto.\n\t* testsuite/tr1/6_containers/unordered_multimap/requirements/explicit_instantiation.cc: \n\tDitto. \n\t* testsuite/tr1/6_containers/unordered_multimap/swap/1.cc: Ditto.\n\t* testsuite/tr1/6_containers/unordered_multimap/swap/2.cc: Ditto.\n\t* testsuite/tr1/6_containers/unordered_set/requirements/explicit_instantiation.cc: \n\tDitto.\n\t* testsuite/tr1/6_containers/unordered_set/swap/1.cc: Ditto.\n\t* testsuite/tr1/6_containers/unordered_set/swap/2.cc: Ditto.\n\t* testsuite/tr1/6_containers/utility/pair.cc: Ditto.\n\t* testsuite/tr1/6_containers/unordered_map/requirements/explicit_instantiation.cc: \n\tDitto. \n\t* testsuite/tr1/6_containers/unordered_map/24064.cc: Ditto.\n\t* testsuite/tr1/6_containers/unordered_map/swap/1.cc: Ditto.\n\t* testsuite/tr1/6_containers/unordered_map/swap/2.cc: Ditto.\n\t* testsuite/tr1/6_containers/tuple/cons/big_tuples.cc: Ditto.\n\t* testsuite/tr1/6_containers/tuple/cons/constructor.cc: Ditto.\n\t* testsuite/tr1/6_containers/tuple/cons/assignment.cc: Ditto.\n\t* testsuite/tr1/6_containers/tuple/tuple_element.cc: Ditto.\n\t* testsuite/tr1/6_containers/tuple/tuple_size.cc: Ditto.\n\t* testsuite/tr1/6_containers/tuple/comparison_operators/comparisons.cc:\n\tDitto. \n\t* testsuite/tr1/6_containers/tuple/element_access/get.cc: Ditto.\n\t* testsuite/tr1/6_containers/tuple/creation_functions/23978.cc: Ditto.\n\t* testsuite/tr1/6_containers/tuple/creation_functions/tie.cc: Ditto.\n\t* testsuite/tr1/6_containers/tuple/creation_functions/make_tuple.cc: Ditto.\n\t* testsuite/tr1/6_containers/unordered_multiset/requirements/explicit_instantiation.cc: \n\tDitto.\n\t* testsuite/tr1/6_containers/unordered_multiset/swap/1.cc: Ditto.\n\t* testsuite/tr1/6_containers/unordered_multiset/swap/2.cc: Ditto.\n\nFrom-SVN: r126590", "tree": {"sha": "01d8a0d8af2ddcbdb69396c48ad51272baf7a4e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01d8a0d8af2ddcbdb69396c48ad51272baf7a4e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2df6377e6e01046582d489ae59b5be1371b42d59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df6377e6e01046582d489ae59b5be1371b42d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2df6377e6e01046582d489ae59b5be1371b42d59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df6377e6e01046582d489ae59b5be1371b42d59/comments", "author": {"login": "DougGregor", "id": 989428, "node_id": "MDQ6VXNlcjk4OTQyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/989428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DougGregor", "html_url": "https://github.com/DougGregor", "followers_url": "https://api.github.com/users/DougGregor/followers", "following_url": "https://api.github.com/users/DougGregor/following{/other_user}", "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions", "organizations_url": "https://api.github.com/users/DougGregor/orgs", "repos_url": "https://api.github.com/users/DougGregor/repos", "events_url": "https://api.github.com/users/DougGregor/events{/privacy}", "received_events_url": "https://api.github.com/users/DougGregor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d566f2e60064bc9fc85898d7937b430eebf969b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d566f2e60064bc9fc85898d7937b430eebf969b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d566f2e60064bc9fc85898d7937b430eebf969b4"}], "stats": {"total": 161, "additions": 105, "deletions": 56}, "files": [{"sha": "8daf74a04a8b572479f88adb8923d3973c352b81", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -1,3 +1,39 @@\n+2007-07-12  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\t* testsuite/tr1/3_function_objects/bind/all_bound.cc: Disambiguate uses of\n+\tTR1/C++0x facilities.\n+\t* testsuite/tr1/3_function_objects/bind/nested.cc: Ditto.\n+\t* testsuite/tr1/3_function_objects/bind/placeholders.cc: Ditto.\n+\t* testsuite/tr1/6_containers/unordered_multimap/requirements/explicit_instantiation.cc: \n+\tDitto. \n+\t* testsuite/tr1/6_containers/unordered_multimap/swap/1.cc: Ditto.\n+\t* testsuite/tr1/6_containers/unordered_multimap/swap/2.cc: Ditto.\n+\t* testsuite/tr1/6_containers/unordered_set/requirements/explicit_instantiation.cc: \n+\tDitto.\n+\t* testsuite/tr1/6_containers/unordered_set/swap/1.cc: Ditto.\n+\t* testsuite/tr1/6_containers/unordered_set/swap/2.cc: Ditto.\n+\t* testsuite/tr1/6_containers/utility/pair.cc: Ditto.\n+\t* testsuite/tr1/6_containers/unordered_map/requirements/explicit_instantiation.cc: \n+\tDitto. \n+\t* testsuite/tr1/6_containers/unordered_map/24064.cc: Ditto.\n+\t* testsuite/tr1/6_containers/unordered_map/swap/1.cc: Ditto.\n+\t* testsuite/tr1/6_containers/unordered_map/swap/2.cc: Ditto.\n+\t* testsuite/tr1/6_containers/tuple/cons/big_tuples.cc: Ditto.\n+\t* testsuite/tr1/6_containers/tuple/cons/constructor.cc: Ditto.\n+\t* testsuite/tr1/6_containers/tuple/cons/assignment.cc: Ditto.\n+\t* testsuite/tr1/6_containers/tuple/tuple_element.cc: Ditto.\n+\t* testsuite/tr1/6_containers/tuple/tuple_size.cc: Ditto.\n+\t* testsuite/tr1/6_containers/tuple/comparison_operators/comparisons.cc:\n+\tDitto. \n+\t* testsuite/tr1/6_containers/tuple/element_access/get.cc: Ditto.\n+\t* testsuite/tr1/6_containers/tuple/creation_functions/23978.cc: Ditto.\n+\t* testsuite/tr1/6_containers/tuple/creation_functions/tie.cc: Ditto.\n+\t* testsuite/tr1/6_containers/tuple/creation_functions/make_tuple.cc: Ditto.\n+\t* testsuite/tr1/6_containers/unordered_multiset/requirements/explicit_instantiation.cc: \n+\tDitto.\n+\t* testsuite/tr1/6_containers/unordered_multiset/swap/1.cc: Ditto.\n+\t* testsuite/tr1/6_containers/unordered_multiset/swap/2.cc: Ditto.\n+\n 2007-07-10  Bob Wilson  <bob.wilson@acm.org>\n \t\n \t* configure.ac: Check if $atomicity_dir is cpu/generic/atomicity_mutex"}, {"sha": "20c6d7a2397cd2bc1495079d3cb31711c0c84b45", "filename": "libstdc++-v3/testsuite/tr1/3_function_objects/bind/all_bound.cc", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Fbind%2Fall_bound.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Fbind%2Fall_bound.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Fbind%2Fall_bound.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -30,12 +30,10 @@ bool test __attribute__((unused)) = true;\n // Operations on empty function<> objects\n void test01()\n {\n-  using std::tr1::bind;\n-\n-  VERIFY( bind(std::plus<int>(), 3, 5)() == 8 );\n-  VERIFY( bind(std::minus<int>(), 3, 5)() == -2 );\n-  VERIFY( bind<int>(std::plus<int>(), 3, 5)() == 8 );\n-  VERIFY( bind<int>(std::minus<int>(), 3, 5)() == -2 );\n+  VERIFY( std::tr1::bind(std::plus<int>(), 3, 5)() == 8 );\n+  VERIFY( std::tr1::bind(std::minus<int>(), 3, 5)() == -2 );\n+  VERIFY( std::tr1::bind<int>(std::plus<int>(), 3, 5)() == 8 );\n+  VERIFY( std::tr1::bind<int>(std::minus<int>(), 3, 5)() == -2 );\n }\n \n int main()"}, {"sha": "a5db8b34368242360e6ea33f24ca37d72a8cfa3d", "filename": "libstdc++-v3/testsuite/tr1/3_function_objects/bind/nested.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Fbind%2Fnested.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Fbind%2Fnested.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Fbind%2Fnested.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -30,13 +30,12 @@ bool test __attribute__((unused)) = true;\n // Operations on empty function<> objects\n void test01()\n {\n-  using std::tr1::bind;\n   using namespace std::tr1::placeholders;\n \n   int five = 5;\n   int seven = 7;\n-  VERIFY( bind(std::multiplies<int>(), _1, bind(std::minus<int>(), 6, _2))(five, seven) == -5 );\n-  VERIFY( bind(std::multiplies<int>(), _1, bind(std::minus<int>(), 6, _2))(seven, five) == 7 );\n+  VERIFY( std::tr1::bind(std::multiplies<int>(), _1, std::tr1::bind(std::minus<int>(), 6, _2))(five, seven) == -5 );\n+  VERIFY( std::tr1::bind(std::multiplies<int>(), _1, std::tr1::bind(std::minus<int>(), 6, _2))(seven, five) == 7 );\n }\n \n int main()"}, {"sha": "1d07a79829605110c86ffd733e4ab374c66b0e05", "filename": "libstdc++-v3/testsuite/tr1/3_function_objects/bind/placeholders.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Fbind%2Fplaceholders.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Fbind%2Fplaceholders.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Fbind%2Fplaceholders.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -30,13 +30,12 @@ bool test __attribute__((unused)) = true;\n // Operations on empty function<> objects\n void test01()\n {\n-  using std::tr1::bind;\n   using namespace std::tr1::placeholders;\n \n   int five = 5;\n   int seven = 7;\n-  VERIFY( bind(std::minus<int>(), _1, _2)(five, seven) == -2 );\n-  VERIFY( bind(std::minus<int>(), _2, _1)(five, seven) == 2 );\n+  VERIFY( std::tr1::bind(std::minus<int>(), _1, _2)(five, seven) == -2 );\n+  VERIFY( std::tr1::bind(std::minus<int>(), _2, _1)(five, seven) == 2 );\n }\n \n int main()"}, {"sha": "f22d975c86b43199a432afef78c33a07f3077add", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/comparison_operators/comparisons.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcomparison_operators%2Fcomparisons.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcomparison_operators%2Fcomparisons.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcomparison_operators%2Fcomparisons.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -23,8 +23,7 @@\n #include <tr1/tuple>\n #include <testsuite_hooks.h>\n \n-using namespace std;\n-using namespace tr1;\n+using namespace std::tr1;\n \n #define TEST1(x) VERIFY( x == x && !(x != x) && x <= x && !(x < x) )\n "}, {"sha": "6207b41f9dfe1ce34ddb67b7cbc7a93e1a40c29a", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/cons/assignment.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fassignment.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fassignment.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fassignment.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -23,8 +23,7 @@\n #include <tr1/tuple>\n #include <testsuite_hooks.h>\n \n-using namespace std;\n-using namespace tr1;\n+using namespace std::tr1;\n \n int\n main()"}, {"sha": "a23ad8dbc74e38e05519f79ed9db44fc4743061d", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/cons/big_tuples.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fbig_tuples.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fbig_tuples.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fbig_tuples.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -23,8 +23,8 @@\n #include <tr1/tuple>\n #include <testsuite_hooks.h>\n \n-using namespace std;\n-using namespace tr1;\n+using namespace std::tr1;\n+using std::pair;\n \n // A simple class without conversions to check some things\n struct foo"}, {"sha": "89e9a113ffa10952d673a060a33a308fd74b79f0", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/cons/constructor.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fconstructor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fconstructor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fconstructor.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -23,8 +23,8 @@\n #include <tr1/tuple>\n #include <testsuite_hooks.h>\n \n-using namespace std;\n-using namespace tr1;\n+using namespace std::tr1;\n+using std::pair;\n \n int\n main()"}, {"sha": "70a2cf8c6bd885385caf84c0c2ac360b32791fef", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/creation_functions/23978.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2F23978.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2F23978.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2F23978.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -24,8 +24,8 @@\n #include <tr1/utility>\n #include <testsuite_hooks.h>\n \n-using namespace std;\n-using namespace tr1;\n+using namespace std::tr1;\n+using std::pair;\n \n // libstdc++/23978\n void test01()"}, {"sha": "ca69be21f0e0ff262314b50874e5eff95148fe77", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/creation_functions/make_tuple.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2Fmake_tuple.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2Fmake_tuple.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2Fmake_tuple.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -24,8 +24,7 @@\n #include <tr1/functional>\n #include <testsuite_hooks.h>\n \n-using namespace std;\n-using namespace tr1;\n+using namespace std::tr1;\n \n int\n main()"}, {"sha": "ea63a5d5c6a49e47e9c2932a629b96a90096e0d9", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/creation_functions/tie.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2Ftie.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2Ftie.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2Ftie.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -23,8 +23,7 @@\n #include <tr1/tuple>\n #include <testsuite_hooks.h>\n \n-using namespace std;\n-using namespace tr1;\n+using namespace std::tr1;\n \n int\n main()"}, {"sha": "85ec6cb10dc13f6e05aa15cfbd59f4cf0aab5f84", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/element_access/get.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Felement_access%2Fget.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Felement_access%2Fget.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Felement_access%2Fget.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -23,8 +23,7 @@\n #include <tr1/tuple>\n #include <testsuite_hooks.h>\n \n-using namespace std;\n-using namespace tr1;\n+using namespace std::tr1;\n \n int\n main()"}, {"sha": "44a93171e8502a6a034d1a666573a1284dd6e44c", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/tuple_element.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Ftuple_element.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Ftuple_element.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Ftuple_element.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -23,8 +23,7 @@\n #include <tr1/tuple>\n #include <testsuite_hooks.h>\n \n-using namespace std;\n-using namespace tr1;\n+using namespace std::tr1;\n \n struct foo\n { };"}, {"sha": "967cb43d95cc7ffc7f24b90749d4829256f182c6", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/tuple_size.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Ftuple_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Ftuple_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Ftuple_size.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -23,8 +23,7 @@\n #include <tr1/tuple>\n #include <testsuite_hooks.h>\n \n-using namespace std;\n-using namespace tr1;\n+using namespace std::tr1;\n \n int\n main()"}, {"sha": "b9f9bd2849cd611fb55dec7f1c749e0ce5724afe", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_map/24064.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2F24064.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2F24064.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2F24064.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -26,8 +26,10 @@ void test01()\n {\n   bool test __attribute__((unused)) = true;\n \n-  using namespace std;\n-  using namespace tr1;\n+  using namespace std::tr1;\n+  using std::allocator;\n+  using std::pair;\n+  using std::equal_to;\n \n   __unordered_map<int, char, hash<int>, equal_to<int>,\n     allocator<pair<const int, char> >, true> m;"}, {"sha": "865ca37bd44834849d90da8f2f269db186ec07ed", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_map/requirements/explicit_instantiation.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2Frequirements%2Fexplicit_instantiation.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -25,8 +25,11 @@\n #include <string>\n #include <tr1/unordered_map>\n \n-using namespace std;\n using namespace std::tr1;\n+using std::string;\n+using std::allocator;\n+using std::pair;\n+using std::equal_to;\n \n template class unordered_map<string, float>;\n template class unordered_map<string, int,"}, {"sha": "3533aab61fa30df5ddcd36cfd5f5fac4ac6a55f1", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_map/swap/1.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2Fswap%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2Fswap%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2Fswap%2F1.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -30,8 +30,10 @@ void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n-  using namespace std;\n-  using namespace tr1;\n+  using namespace std::tr1;\n+  using std::pair;\n+  using std::equal_to;\n+  using std::map;\n \n   typedef pair<const char, int> my_pair;\n   typedef __gnu_test::uneq_allocator<my_pair> my_alloc;"}, {"sha": "acd742e6e6aa3b83ec2802bbc8205342017cef76", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_map/swap/2.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2Fswap%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2Fswap%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2Fswap%2F2.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -30,8 +30,10 @@ void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n-  using namespace std;\n-  using namespace tr1;\n+  using namespace std::tr1;\n+  using std::pair;\n+  using std::equal_to;\n+  using std::map;\n \n   typedef pair<const char, int> my_pair;\n   typedef __gnu_test::uneq_allocator<my_pair> my_alloc;"}, {"sha": "0bfec766c065a6287885c1f7d39dfe07d859e93c", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_multimap/requirements/explicit_instantiation.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multimap%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multimap%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multimap%2Frequirements%2Fexplicit_instantiation.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -25,8 +25,11 @@\n #include <string>\n #include <tr1/unordered_map>\n \n-using namespace std;\n using namespace std::tr1;\n+using std::string;\n+using std::equal_to;\n+using std::allocator;\n+using std::pair;\n \n template class unordered_multimap<string, float>;\n template class unordered_multimap<string, int,"}, {"sha": "2fd0cab7da86e6cb78742cd504999a90d9990914", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_multimap/swap/1.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multimap%2Fswap%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multimap%2Fswap%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multimap%2Fswap%2F1.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -30,8 +30,11 @@ void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n-  using namespace std;\n-  using namespace tr1;\n+  using namespace std::tr1;\n+  using std::pair;\n+  using std::equal_to;\n+  using std::map;\n+  using std::multimap;\n \n   typedef pair<const char, int> my_pair;\n   typedef __gnu_test::uneq_allocator<my_pair> my_alloc;"}, {"sha": "249cc560e95ad7b8656e6aa0812ccd171547a47f", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_multimap/swap/2.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multimap%2Fswap%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multimap%2Fswap%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multimap%2Fswap%2F2.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -30,8 +30,11 @@ void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n-  using namespace std;\n-  using namespace tr1;\n+  using namespace std::tr1;\n+  using std::pair;\n+  using std::equal_to;\n+  using std::map;\n+  using std::multimap;\n \n   typedef pair<const char, int> my_pair;\n   typedef __gnu_test::uneq_allocator<my_pair> my_alloc;"}, {"sha": "13d20fa7fbefbd373a8e4734f9dc905885e5b596", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_multiset/requirements/explicit_instantiation.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multiset%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multiset%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multiset%2Frequirements%2Fexplicit_instantiation.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -24,8 +24,9 @@\n \n #include <tr1/unordered_set>\n \n-using namespace std;\n using namespace std::tr1;\n+using std::equal_to;\n+using std::allocator;\n \n template class unordered_multiset<int>;\n template class unordered_multiset<float, hash<float>, equal_to<float>,"}, {"sha": "a19ddd6a521e99a145ac649fb81836357315510e", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_multiset/swap/1.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multiset%2Fswap%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multiset%2Fswap%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multiset%2Fswap%2F1.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -30,8 +30,9 @@ void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n-  using namespace std;\n-  using namespace tr1;\n+  using namespace std::tr1;\n+  using std::equal_to;\n+  using std::multiset;\n \n   typedef __gnu_test::uneq_allocator<char> my_alloc;\n   typedef unordered_multiset<char, hash<char>, equal_to<char>, my_alloc>"}, {"sha": "5da6e28d037967113238bd36c2a41d0564c88d9f", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_multiset/swap/2.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multiset%2Fswap%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multiset%2Fswap%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multiset%2Fswap%2F2.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -30,8 +30,9 @@ void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n-  using namespace std;\n-  using namespace tr1;\n+  using namespace std::tr1;\n+  using std::equal_to;\n+  using std::multiset;\n \n   typedef __gnu_test::uneq_allocator<char> my_alloc;\n   typedef unordered_multiset<char, hash<char>, equal_to<char>, my_alloc>"}, {"sha": "503e27a373ca7fef08b00b28216f1bf535efe458", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_set/requirements/explicit_instantiation.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_set%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_set%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_set%2Frequirements%2Fexplicit_instantiation.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -24,8 +24,9 @@\n \n #include <tr1/unordered_set>\n \n-using namespace std;\n using namespace std::tr1;\n+using std::equal_to;\n+using std::allocator;\n \n template class unordered_set<int>;\n template class unordered_set<float, hash<float>, equal_to<float>,"}, {"sha": "23d6f45c71cc0dd67a606d2f107578e3feda3c0e", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_set/swap/1.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_set%2Fswap%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_set%2Fswap%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_set%2Fswap%2F1.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -30,8 +30,9 @@ void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n-  using namespace std;\n-  using namespace tr1;\n+  using namespace std::tr1;\n+  using std::equal_to;\n+  using std::set;\n \n   typedef __gnu_test::uneq_allocator<char> my_alloc;\n   typedef unordered_set<char, hash<char>, equal_to<char>, my_alloc> my_uset;"}, {"sha": "dbcc31ceef82fc373f2e633cbc0fe7aa5d211ba9", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_set/swap/2.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_set%2Fswap%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_set%2Fswap%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_set%2Fswap%2F2.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -30,8 +30,9 @@ void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n-  using namespace std;\n-  using namespace tr1;\n+  using namespace std::tr1;\n+  using std::equal_to;\n+  using std::set;\n \n   typedef __gnu_test::uneq_allocator<char> my_alloc;\n   typedef unordered_set<char, hash<char>, equal_to<char>, my_alloc> my_uset;"}, {"sha": "fc4ce782df0ab755625951fb7ecc4bf4db54da5f", "filename": "libstdc++-v3/testsuite/tr1/6_containers/utility/pair.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Futility%2Fpair.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df6377e6e01046582d489ae59b5be1371b42d59/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Futility%2Fpair.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Futility%2Fpair.cc?ref=2df6377e6e01046582d489ae59b5be1371b42d59", "patch": "@@ -23,8 +23,8 @@\n #include <tr1/utility>\n #include <testsuite_hooks.h>\n \n-using namespace std;\n-using namespace tr1;\n+using namespace std::tr1;\n+using std::pair;\n \n struct blank_class\n { };"}]}