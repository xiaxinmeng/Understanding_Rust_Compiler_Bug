{"sha": "9797b9e8f080242377c8534a64c039b3998d8b39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc5N2I5ZThmMDgwMjQyMzc3Yzg1MzRhNjRjMDM5YjM5OThkOGIzOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-02T21:35:27Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-02T21:35:27Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1142", "tree": {"sha": "4afe2562f5b4659797d02fe46a4999b79867df67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4afe2562f5b4659797d02fe46a4999b79867df67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9797b9e8f080242377c8534a64c039b3998d8b39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9797b9e8f080242377c8534a64c039b3998d8b39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9797b9e8f080242377c8534a64c039b3998d8b39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9797b9e8f080242377c8534a64c039b3998d8b39/comments", "author": null, "committer": null, "parents": [{"sha": "6a5293dc3b4d474983e8f57429fc9035bc3bf381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a5293dc3b4d474983e8f57429fc9035bc3bf381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a5293dc3b4d474983e8f57429fc9035bc3bf381"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "6f5c5e97ca18965b7bcd7172e19c7201203748fa", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9797b9e8f080242377c8534a64c039b3998d8b39/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9797b9e8f080242377c8534a64c039b3998d8b39/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=9797b9e8f080242377c8534a64c039b3998d8b39", "patch": "@@ -3085,7 +3085,9 @@ subst (x, from, to, in_dest, unique_copy)\n       /* If we have (if_then_else FOO (pc) (label_ref BAR)) and FOO can be\n \t reversed, do so to avoid needing two sets of patterns for\n \t subtract-and-branch insns.  */\n-      if (XEXP (x, 1) == pc_rtx && reversible_comparison_p (XEXP (x, 0)))\n+      if (XEXP (x, 1) == pc_rtx\n+\t  && GET_RTX_CLASS (GET_CODE (XEXP (x, 0))) == '<'\n+\t  && reversible_comparison_p (XEXP (x, 0)))\n \t{\n \t  SUBST (XEXP (x, 0),\n \t\t gen_rtx_combine (reverse_condition (GET_CODE (XEXP (x, 0))),"}]}