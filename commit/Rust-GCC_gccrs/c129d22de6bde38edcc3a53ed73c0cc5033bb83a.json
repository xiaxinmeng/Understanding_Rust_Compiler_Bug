{"sha": "c129d22de6bde38edcc3a53ed73c0cc5033bb83a", "node_id": "C_kwDOANBUbNoAKGMxMjlkMjJkZTZiZGUzOGVkY2MzYTUzZWQ3M2MwY2M1MDMzYmI4M2E", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-04T01:09:30Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T02:58:04Z"}, "message": "RISC-V: Fix VSETVL PASS bug in exception handling\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv-vsetvl.cc (pass_vsetvl::compute_probabilities): Skip exit block.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/exception-1.C: New test.", "tree": {"sha": "ea09882105750fcf4e323a264fe9bddd3cd8947e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea09882105750fcf4e323a264fe9bddd3cd8947e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c129d22de6bde38edcc3a53ed73c0cc5033bb83a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c129d22de6bde38edcc3a53ed73c0cc5033bb83a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c129d22de6bde38edcc3a53ed73c0cc5033bb83a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c129d22de6bde38edcc3a53ed73c0cc5033bb83a/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee1178878383ddd64e760f17338fe8a8384c31c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee1178878383ddd64e760f17338fe8a8384c31c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee1178878383ddd64e760f17338fe8a8384c31c8"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "8e6063ae83bc682cf5478cec40af8e8957502d01", "filename": "gcc/config/riscv/riscv-vsetvl.cc", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c129d22de6bde38edcc3a53ed73c0cc5033bb83a/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c129d22de6bde38edcc3a53ed73c0cc5033bb83a/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.cc?ref=c129d22de6bde38edcc3a53ed73c0cc5033bb83a", "patch": "@@ -3492,8 +3492,15 @@ pass_vsetvl::compute_probabilities (void)\n       basic_block cfg_bb = bb->cfg_bb ();\n       auto &curr_prob\n \t= m_vector_manager->vector_block_infos[cfg_bb->index].probability;\n+\n+      /* GCC assume entry block (bb 0) are always so\n+\t executed so set its probability as \"always\".  */\n       if (ENTRY_BLOCK_PTR_FOR_FN (cfun) == cfg_bb)\n \tcurr_prob = profile_probability::always ();\n+      /* Exit block (bb 1) is the block we don't need to process.  */\n+      if (EXIT_BLOCK_PTR_FOR_FN (cfun) == cfg_bb)\n+\tcontinue;\n+\n       gcc_assert (curr_prob.initialized_p ());\n       FOR_EACH_EDGE (e, ei, cfg_bb->succs)\n \t{\n@@ -3507,9 +3514,6 @@ pass_vsetvl::compute_probabilities (void)\n \t    new_prob += curr_prob * e->probability;\n \t}\n     }\n-  auto &exit_block\n-    = m_vector_manager->vector_block_infos[EXIT_BLOCK_PTR_FOR_FN (cfun)->index];\n-  exit_block.probability = profile_probability::always ();\n }\n \n /* Lazy vsetvl insertion for optimize > 0. */"}, {"sha": "deabfd2b40b96022f3d414e68432a47c78661f8b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/exception-1.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c129d22de6bde38edcc3a53ed73c0cc5033bb83a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fexception-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c129d22de6bde38edcc3a53ed73c0cc5033bb83a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fexception-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fexception-1.C?ref=c129d22de6bde38edcc3a53ed73c0cc5033bb83a", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3\" } */\n+\n+#include \"riscv_vector.h\"\n+void __attribute__((noinline)) foo(int arr[4]) {\n+__builtin_printf(\"%d %d %d %d\\n\", arr[0], arr[1], arr[2], arr[3]);\n+}\n+\n+void __attribute__((noinline)) test() {\n+// Intialization with 2 memsets leads to spilling of zero-splat value\n+vint32m1_t a;\n+int arr1[4] = {};\n+foo(arr1);\n+int arr2[4] = {};\n+foo(arr2);\n+asm volatile (\"# %0\" : \"+vr\" (a));\n+throw int();\n+}\n+\n+int main() {\n+try {\n+   test();\n+} catch (...) {\n+   __builtin_printf(\"hello\\n\");\n+};\n+return 0;\n+}"}]}