{"sha": "f12ddb6249f83e89a323296cd561da85bcc57d8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjEyZGRiNjI0OWY4M2U4OWEzMjMyOTZjZDU2MWRhODViY2M1N2Q4Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-09-11T12:25:43Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-09-11T12:25:43Z"}, "message": "Rationalise PCH headers and 17_intro/headers tests.\n\n\tPR libstdc++/64857\n\t* doc/xml/manual/using.xml: Improve aggregate header documentation.\n\t* doc/html/manual/*: Regenerate.\n\t* include/precompiled/extc++.h: Include <bits/stdc++.h> for C++11\n\tand later and include more extension headers.\n\t* testsuite/17_intro/headers/c++1998/all_attributes.cc: Remove\n\tredundant header.\n\t* testsuite/17_intro/headers/c++200x/: Rename to c++2011.\n\t* testsuite/17_intro/headers/c++2014/all_attributes.cc: Remove\n\tredundant headers.\n\t* testsuite/17_intro/headers/c++2014/all_no_exceptions.cc: New.\n\t* testsuite/17_intro/headers/c++2014/all_no_rtti.cc: New.\n\t* testsuite/17_intro/headers/c++2014/all_pedantic_errors.cc: New.\n\t* testsuite/17_intro/headers/c++2014/operator_names.cc: New.\n\t* testsuite/17_intro/headers/c++2014/stdc++.cc: New.\n\t* testsuite/17_intro/headers/c++2014/stdc++_multiple_inclusion.cc:\n\tNew.\n\nFrom-SVN: r227684", "tree": {"sha": "6f8af6704b3bebed94fc0bcfe4f8c40fccc8c03c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f8af6704b3bebed94fc0bcfe4f8c40fccc8c03c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f12ddb6249f83e89a323296cd561da85bcc57d8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12ddb6249f83e89a323296cd561da85bcc57d8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f12ddb6249f83e89a323296cd561da85bcc57d8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12ddb6249f83e89a323296cd561da85bcc57d8b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5548c3916db31efbcef3247dc72ed43ad182095", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5548c3916db31efbcef3247dc72ed43ad182095", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5548c3916db31efbcef3247dc72ed43ad182095"}], "stats": {"total": 347, "additions": 330, "deletions": 17}, "files": [{"sha": "03d24023bd0138128d3997111a076ec1a909c2ea", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -1,5 +1,23 @@\n 2015-09-11  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/64857\n+\t* doc/xml/manual/using.xml: Improve aggregate header documentation.\n+\t* doc/html/manual/*: Regenerate.\n+\t* include/precompiled/extc++.h: Include <bits/stdc++.h> for C++11\n+\tand later and include more extension headers.\n+\t* testsuite/17_intro/headers/c++1998/all_attributes.cc: Remove\n+\tredundant header.\n+\t* testsuite/17_intro/headers/c++200x/: Rename to c++2011.\n+\t* testsuite/17_intro/headers/c++2014/all_attributes.cc: Remove\n+\tredundant headers.\n+\t* testsuite/17_intro/headers/c++2014/all_no_exceptions.cc: New.\n+\t* testsuite/17_intro/headers/c++2014/all_no_rtti.cc: New.\n+\t* testsuite/17_intro/headers/c++2014/all_pedantic_errors.cc: New.\n+\t* testsuite/17_intro/headers/c++2014/operator_names.cc: New.\n+\t* testsuite/17_intro/headers/c++2014/stdc++.cc: New.\n+\t* testsuite/17_intro/headers/c++2014/stdc++_multiple_inclusion.cc:\n+\tNew.\n+\n \tPR libstdc++/58265\n \t* doc/xml/manual/intro.xml: Document LWG 2063 and 2064 resolutions.\n \t* doc/html/manual/bugs.html: Regenerate."}, {"sha": "5888002028a02d2a33b7305bf2d33de9f74fe04a", "filename": "libstdc++-v3/doc/html/manual/using.html", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -11,7 +11,8 @@\n       The standard library conforms to the dialect of C++ specified by the\n       <code class=\"option\">-std</code> option passed to the compiler.\n       By default, <span class=\"command\"><strong>g++</strong></span> is equivalent to\n-      <span class=\"command\"><strong>g++ -std=gnu++98</strong></span>.\n+      <span class=\"command\"><strong>g++ -std=gnu++14</strong></span> since GCC 6, and\n+      <span class=\"command\"><strong>g++ -std=gnu++98</strong></span> for older releases.\n     </p><div class=\"table\"><a id=\"table.cmd_options\"></a><p class=\"title\"><strong>Table\u00a03.1.\u00a0C++ Command Options</strong></p><div class=\"table-contents\"><table summary=\"C++ Command Options\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /></colgroup><thead><tr><th align=\"left\">Option Flags</th><th align=\"left\">Description</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"literal\">-std=c++98</code> or <code class=\"literal\">-std=c++03</code>\n       </td><td align=\"left\">Use the 1998 ISO C++ standard plus amendments.</td></tr><tr><td align=\"left\"><code class=\"literal\">-std=gnu++98</code> or <code class=\"literal\">-std=gnu++03</code>\n       </td><td align=\"left\">As directly above, with GNU extensions.</td></tr><tr><td align=\"left\"><code class=\"literal\">-std=c++11</code></td><td align=\"left\">Use the 2011 ISO C++ standard.</td></tr><tr><td align=\"left\"><code class=\"literal\">-std=gnu++11</code></td><td align=\"left\">As directly above, with GNU extensions.</td></tr><tr><td align=\"left\"><code class=\"literal\">-std=c++14</code></td><td align=\"left\">Use the 2014 ISO C++ standard.</td></tr><tr><td align=\"left\"><code class=\"literal\">-std=gnu++14</code></td><td align=\"left\">As directly above, with GNU extensions.</td></tr><tr><td align=\"left\"><code class=\"literal\">-fexceptions</code></td><td align=\"left\">See <a class=\"link\" href=\"using_exceptions.html#intro.using.exception.no\" title=\"Doing without\">exception-free dialect</a></td></tr><tr><td align=\"left\"><code class=\"literal\">-frtti</code></td><td align=\"left\">As above, but RTTI-free dialect.</td></tr><tr><td align=\"left\"><code class=\"literal\">-pthread</code> or <code class=\"literal\">-pthreads</code></td><td align=\"left\">For ISO C++11"}, {"sha": "bb147944ad94c4fea821e1cae18087f3c3df65d7", "filename": "libstdc++-v3/doc/html/manual/using_headers.html", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_headers.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_headers.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_headers.html?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -74,12 +74,15 @@\n and <code class=\"code\">std::sinl</code>.\n </p></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.headers.pre\"></a>Precompiled Headers</h3></div></div></div><p>There are three base header files that are provided. They can be\n used to precompile the standard headers and extensions into binary\n-files that may the be used to speed compiles that use these headers.\n+files that may then be used to speed up compilations that use these headers.\n </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>stdc++.h</p><p>Includes all standard headers. Actual content varies depending on\n-language dialect.\n+<a class=\"link\" href=\"using.html#manual.intro.using.flags\" title=\"Command Options\">language dialect</a>.\n </p></li><li class=\"listitem\"><p>stdtr1c++.h</p><p>Includes all of &lt;stdc++.h&gt;, and adds all the TR1 headers.\n-</p></li><li class=\"listitem\"><p>extc++.h</p><p>Includes all of &lt;stdtr1c++.h&gt;, and adds all the Extension headers.\n-</p></li></ul></div><p>How to construct a .gch file from one of these base header files.</p><p>First, find the include directory for the compiler. One way to do\n+</p></li><li class=\"listitem\"><p>extc++.h</p><p>Includes all of &lt;stdc++.h&gt;, and adds all the Extension headers\n+(and in C++98 mode also adds all the TR1 headers by including all of\n+&lt;stdtr1c++.h&gt;).\n+</p></li></ul></div><p>To construct a .gch file from one of these base header files,\n+first find the include directory for the compiler. One way to do\n this is:</p><pre class=\"programlisting\">\n g++ -v hello.cc\n "}, {"sha": "2c8d179b4897000aeb855cf0f184eb1947ea4110", "filename": "libstdc++-v3/doc/xml/manual/using.xml", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -16,7 +16,8 @@\n       The standard library conforms to the dialect of C++ specified by the\n       <option>-std</option> option passed to the compiler.\n       By default, <command>g++</command> is equivalent to\n-      <command>g++ -std=gnu++98</command>.\n+      <command>g++ -std=gnu++14</command> since GCC 6, and\n+      <command>g++ -std=gnu++98</command> for older releases.\n     </para>\n \n  <table frame=\"all\" xml:id=\"table.cmd_options\">\n@@ -718,15 +719,15 @@ and <code>std::sinl</code>.\n \n <para>There are three base header files that are provided. They can be\n used to precompile the standard headers and extensions into binary\n-files that may the be used to speed compiles that use these headers.\n+files that may then be used to speed up compilations that use these headers.\n </para>\n \n \n <itemizedlist>\n <listitem>\n   <para>stdc++.h</para>\n <para>Includes all standard headers. Actual content varies depending on\n-language dialect.\n+<link linkend=\"manual.intro.using.flags\">language dialect</link>.\n </para>\n </listitem>\n \n@@ -737,13 +738,14 @@ language dialect.\n </listitem>\n \n <listitem><para>extc++.h</para>\n-<para>Includes all of &lt;stdtr1c++.h&gt;, and adds all the Extension headers.\n+<para>Includes all of &lt;stdc++.h&gt;, and adds all the Extension headers\n+(and in C++98 mode also adds all the TR1 headers by including all of\n+&lt;stdtr1c++.h&gt;).\n </para></listitem>\n </itemizedlist>\n \n-<para>How to construct a .gch file from one of these base header files.</para>\n-\n-<para>First, find the include directory for the compiler. One way to do\n+<para>To construct a .gch file from one of these base header files,\n+first find the include directory for the compiler. One way to do\n this is:</para>\n \n <programlisting>"}, {"sha": "8883e47fb0c5eb73ce97b6f4d6896132d3c5866b", "filename": "libstdc++-v3/include/precompiled/extc++.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fextc%2B%2B.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fextc%2B%2B.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fextc%2B%2B.h?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -28,15 +28,25 @@\n \n #if __cplusplus < 201103L\n #include <bits/stdtr1c++.h>\n+#else\n+#include <bits/stdc++.h>\n #endif\n \n #include <ext/algorithm>\n+#if __cplusplus >= 201103L\n+# include <ext/aligned_buffer.h>\n+#endif\n+#include <ext/alloc_traits.h>\n #include <ext/array_allocator.h>\n #include <ext/atomicity.h>\n #include <ext/bitmap_allocator.h>\n #include <ext/cast.h>\n+#if __cplusplus >= 201103L\n+# include <ext/cmath>\n+#endif\n #include <ext/concurrence.h>\n #include <ext/debug_allocator.h>\n+#include <ext/enc_filebuf.h>\n #include <ext/extptr_allocator.h>\n #include <ext/functional>\n #include <ext/iterator>\n@@ -45,9 +55,13 @@\n #include <ext/mt_allocator.h>\n #include <ext/new_allocator.h>\n #include <ext/numeric>\n+#include <ext/numeric_traits.h>\n #include <ext/pod_char_traits.h>\n #include <ext/pointer.h>\n #include <ext/pool_allocator.h>\n+#if __cplusplus >= 201103L\n+# include <ext/random>\n+#endif\n #include <ext/rb_tree>\n #include <ext/rope>\n #include <ext/slist>"}, {"sha": "20107d2cccf50db8c97e95b5140b9916a9d71cc3", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++1998/all_attributes.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B1998%2Fall_attributes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B1998%2Fall_attributes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B1998%2Fall_attributes.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -35,7 +35,6 @@\n #define unused 1\n #endif\n \n-#include <bits/stdc++.h> // TODO: this is missing from <bits/extc++.h>\n #include <bits/extc++.h>\n \n int"}, {"sha": "65afb572148b7057e68a8465d7de46ff5bff829f", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2011/42319.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2F42319.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2F42319.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2F42319.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "previous_filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/42319.cc"}, {"sha": "409b38da59fff533644cf23ce10eea1cf04f3c56", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2011/67309.cc", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2F67309.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2F67309.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2F67309.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -19,5 +19,4 @@\n // { dg-do compile }\n \n // libstdc++/67309\n-#include <bits/stdc++.h> // TODO: this is missing from <bits/extc++.h>\n #include <bits/extc++.h>", "previous_filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/67309.cc"}, {"sha": "8c3d00785766d5ad902964b9a494e2f3f122f20f", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2011/all_attributes.cc", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fall_attributes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fall_attributes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fall_attributes.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -34,7 +34,6 @@\n #define unused 1\n #endif\n \n-#include <bits/stdc++.h> // TODO: this is missing from <bits/extc++.h>\n #include <bits/extc++.h>\n \n int", "previous_filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/all_attributes.cc"}, {"sha": "13158d121bddb0fe963c0e43d21db6a8918b8e7c", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2011/all_no_exceptions.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fall_no_exceptions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fall_no_exceptions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fall_no_exceptions.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "previous_filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/all_no_exceptions.cc"}, {"sha": "7bbc25f04350377a4a9219c717b84be6f21fb9da", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2011/all_no_rtti.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fall_no_rtti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fall_no_rtti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fall_no_rtti.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "previous_filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/all_no_rtti.cc"}, {"sha": "ad5847eb7df7de03d63449bcdb404397c95fb56b", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2011/all_pedantic_errors.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fall_pedantic_errors.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fall_pedantic_errors.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fall_pedantic_errors.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "previous_filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/all_pedantic_errors.cc"}, {"sha": "028c2efbcf7a94098764baa789d174ae2d87d142", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2011/operator_names.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Foperator_names.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Foperator_names.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Foperator_names.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "previous_filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/operator_names.cc"}, {"sha": "d1c64b190a8a9dc4a6f8c834215dfb937a1cba0e", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2011/stdc++.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fstdc%2B%2B.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fstdc%2B%2B.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fstdc%2B%2B.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "previous_filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/stdc++.cc"}, {"sha": "e51bdee70f6e175ef4930cb219cc542c268cd979", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2011/stdc++_multiple_inclusion.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fstdc%2B%2B_multiple_inclusion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fstdc%2B%2B_multiple_inclusion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2011%2Fstdc%2B%2B_multiple_inclusion.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "previous_filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/stdc++_multiple_inclusion.cc"}, {"sha": "c395e1dab75b89c650792cfc341d81b3ce575815", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2014/all_attributes.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_attributes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_attributes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_attributes.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -34,8 +34,6 @@\n #define unused 1\n #endif\n \n-#include <bits/stdc++.h> // TODO: this is missing from <bits/extc++.h>\n-#include <shared_mutex>  // TODO: this is missing from <bits/stdc++.h>\n #include <bits/extc++.h>\n \n int"}, {"sha": "b5157c8af0b226a0f4adb483021ef20199d870e4", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2014/all_no_exceptions.cc", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_no_exceptions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_no_exceptions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_no_exceptions.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++14 -fno-exceptions\" }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <bits/extc++.h>"}, {"sha": "8b9fec7b3cf0f9f9353bcbd379b481e8c9297687", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2014/all_no_rtti.cc", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_no_rtti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_no_rtti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_no_rtti.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++14 -fno-rtti\" }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <bits/extc++.h>"}, {"sha": "742315d82df9024867c2e2827eb008f09cc01156", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2014/all_pedantic_errors.cc", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_pedantic_errors.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_pedantic_errors.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_pedantic_errors.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++14 -pedantic-errors\" }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <bits/extc++.h>"}, {"sha": "c347368954c566b65a80de85d26bb18504047605", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2014/operator_names.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Foperator_names.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Foperator_names.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Foperator_names.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++14 -fno-operator-names\" }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// libstdc++/47662\n+\n+// Avoid using PCH\n+#include <cerrno>\n+#include <bits/stdc++.h>\n+#include <bits/stdtr1c++.h>\n+#include <bits/extc++.h>\n+\n+int or, xor, and;\n+"}, {"sha": "0528b33a64d1ca245323823feb1fcaf3c48e795c", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2014/stdc++.cc", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fstdc%2B%2B.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fstdc%2B%2B.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fstdc%2B%2B.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -0,0 +1,70 @@\n+// FreeBSD wants warning clean system headers:\n+// { dg-options \"-Wall -Wsystem-headers\" { target *-*-freebsd* *-*-dragonfly* } }\n+// { dg-options \"-std=gnu++14\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 17.4.1.2 Headers\n+\n+#include <bits/stdc++.h>\n+\n+// \"C\" compatibility headers\n+#include <assert.h>\n+#ifdef _GLIBCXX_HAVE_COMPLEX_H\n+#include <complex.h>\n+#endif\n+#include <ctype.h>\n+#include <errno.h>\n+#ifdef _GLIBCXX_HAVE_FENV_H\n+#include <fenv.h>\n+#endif\n+#include <float.h>\n+#ifdef _GLIBCXX_HAVE_INTTYPES_H\n+#include <inttypes.h>\n+#endif\n+#include <iso646.h>\n+#include <limits.h>\n+#include <locale.h>\n+#include <math.h>\n+#include <setjmp.h>\n+#include <signal.h>\n+#include <stdarg.h>\n+#ifdef _GLIBCXX_HAVE_STDBOOL_H\n+#include <stdbool.h>\n+#endif\n+#include <stddef.h>\n+#ifdef _GLIBCXX_HAVE_STDINT_H\n+#include <stdint.h>\n+#endif\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+#ifdef _GLIBCXX_HAVE_TGMATH_H\n+#include <tgmath.h>\n+#endif\n+#include <time.h>\n+#if __has_include(<uchar.h>)\n+#include <uchar.h>\n+#endif\n+#ifdef _GLIBCXX_HAVE_WCHAR_H\n+#include <wchar.h>\n+#endif\n+#ifdef _GLIBCXX_HAVE_WCTYPE_H\n+#include <wctype.h>\n+#endif"}, {"sha": "67b51cee95c0407c1b45a0085de8462ef1902c9f", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2014/stdc++_multiple_inclusion.cc", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fstdc%2B%2B_multiple_inclusion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12ddb6249f83e89a323296cd561da85bcc57d8b/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fstdc%2B%2B_multiple_inclusion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fstdc%2B%2B_multiple_inclusion.cc?ref=f12ddb6249f83e89a323296cd561da85bcc57d8b", "patch": "@@ -0,0 +1,117 @@\n+// FreeBSD wants warning clean system headers:\n+// { dg-options \"-Wall -Wsystem-headers\" { target *-*-freebsd* *-*-dragonfly* } }\n+// { dg-options \"-std=gnu++14\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 17.4.1.2 Headers\n+\n+#include <bits/stdc++.h>\n+\n+// \"C\" compatibility headers\n+#include <assert.h>\n+#ifdef _GLIBCXX_HAVE_COMPLEX_H\n+#include <complex.h>\n+#endif\n+#include <ctype.h>\n+#include <errno.h>\n+#ifdef _GLIBCXX_HAVE_FENV_H\n+#include <fenv.h>\n+#endif\n+#include <float.h>\n+#ifdef _GLIBCXX_HAVE_INTTYPES_H\n+#include <inttypes.h>\n+#endif\n+#include <iso646.h>\n+#include <limits.h>\n+#include <locale.h>\n+#include <math.h>\n+#include <setjmp.h>\n+#include <signal.h>\n+#include <stdarg.h>\n+#ifdef _GLIBCXX_HAVE_STDBOOL_H\n+#include <stdbool.h>\n+#endif\n+#include <stddef.h>\n+#ifdef _GLIBCXX_HAVE_STDINT_H\n+#include <stdint.h>\n+#endif\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+#ifdef _GLIBCXX_HAVE_TGMATH_H\n+#include <tgmath.h>\n+#endif\n+#include <time.h>\n+#if __has_include(<uchar.h>)\n+#include <uchar.h>\n+#endif\n+#ifdef _GLIBCXX_HAVE_WCHAR_H\n+#include <wchar.h>\n+#endif\n+#ifdef _GLIBCXX_HAVE_WCTYPE_H\n+#include <wctype.h>\n+#endif\n+\n+#include <bits/stdc++.h>\n+\n+// \"C\" compatibility headers\n+#include <assert.h>\n+#ifdef _GLIBCXX_HAVE_COMPLEX_H\n+#include <complex.h>\n+#endif\n+#include <ctype.h>\n+#include <errno.h>\n+#ifdef _GLIBCXX_HAVE_FENV_H\n+#include <fenv.h>\n+#endif\n+#include <float.h>\n+#ifdef _GLIBCXX_HAVE_INTTYPES_H\n+#include <inttypes.h>\n+#endif\n+#include <iso646.h>\n+#include <limits.h>\n+#include <locale.h>\n+#include <math.h>\n+#include <setjmp.h>\n+#include <signal.h>\n+#include <stdarg.h>\n+#ifdef _GLIBCXX_HAVE_STDBOOL_H\n+#include <stdbool.h>\n+#endif\n+#include <stddef.h>\n+#ifdef _GLIBCXX_HAVE_STDINT_H\n+#include <stdint.h>\n+#endif\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+#ifdef _GLIBCXX_HAVE_TGMATH_H\n+#include <tgmath.h>\n+#endif\n+#include <time.h>\n+#if __has_include(<uchar.h>)\n+#include <uchar.h>\n+#endif\n+#ifdef _GLIBCXX_HAVE_WCHAR_H\n+#include <wchar.h>\n+#endif\n+#ifdef _GLIBCXX_HAVE_WCTYPE_H\n+#include <wctype.h>\n+#endif"}]}