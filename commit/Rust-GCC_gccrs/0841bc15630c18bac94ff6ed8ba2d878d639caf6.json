{"sha": "0841bc15630c18bac94ff6ed8ba2d878d639caf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg0MWJjMTU2MzBjMThiYWM5NGZmNmVkOGJhMmQ4NzhkNjM5Y2FmNg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2019-05-20T12:46:54Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2019-05-20T12:46:54Z"}, "message": "[C++ PATCH] namespace using directives\n\nhttps://gcc.gnu.org/ml/gcc-patches/2019-05/msg01245.html\n\t* cp-tree.h (struct lang_decl_ns): Remove usings field.\n\t(DECL_NAMESPACE_USING): Delete.\n\t* name-lookup.c (name_lookup::search_usings): Use namespace's\n\tbinding scope.\n\t(name_lookup::queue_namespae): Likewise.\n\t(finish_namespace_using_directive, push_namespace): Likewise.\n\t(has_using_namespace_std_directive): Just search the entire\n\tbinding stack.\n\nFrom-SVN: r271416", "tree": {"sha": "30fd45fa42c65b70401f1e8101ce5b2dd80078bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30fd45fa42c65b70401f1e8101ce5b2dd80078bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0841bc15630c18bac94ff6ed8ba2d878d639caf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0841bc15630c18bac94ff6ed8ba2d878d639caf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0841bc15630c18bac94ff6ed8ba2d878d639caf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0841bc15630c18bac94ff6ed8ba2d878d639caf6/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab904df5f9063cf3075ae20b97cf4df9e6612cc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab904df5f9063cf3075ae20b97cf4df9e6612cc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab904df5f9063cf3075ae20b97cf4df9e6612cc1"}], "stats": {"total": 39, "additions": 17, "deletions": 22}, "files": [{"sha": "b9d128434e325031102eb40923181fc069e6dc92", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0841bc15630c18bac94ff6ed8ba2d878d639caf6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0841bc15630c18bac94ff6ed8ba2d878d639caf6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0841bc15630c18bac94ff6ed8ba2d878d639caf6", "patch": "@@ -1,3 +1,14 @@\n+2019-05-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (struct lang_decl_ns): Remove usings field.\n+\t(DECL_NAMESPACE_USING): Delete.\n+\t* name-lookup.c (name_lookup::search_usings): Use namespace's\n+\tbinding scope.\n+\t(name_lookup::queue_namespae): Likewise.\n+\t(finish_namespace_using_directive, push_namespace): Likewise.\n+\t(has_using_namespace_std_directive): Just search the entire\n+\tbinding stack.\n+\n 2019-05-20  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR c++/90532 Ensure __is_constructible(T[]) is false"}, {"sha": "0e45ac6081b0978a9e835580eeee440eafb9a007", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0841bc15630c18bac94ff6ed8ba2d878d639caf6/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0841bc15630c18bac94ff6ed8ba2d878d639caf6/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=0841bc15630c18bac94ff6ed8ba2d878d639caf6", "patch": "@@ -2668,9 +2668,7 @@ struct GTY(()) lang_decl_ns {\n   struct lang_decl_base base;\n   cp_binding_level *level;\n \n-  /* using directives and inline children.  These need to be va_gc,\n-     because of PCH.  */\n-  vec<tree, va_gc> *usings;\n+  /* Inline children.  These need to be va_gc, because of PCH.  */\n   vec<tree, va_gc> *inlinees;\n \n   /* Hash table of bound decls. It'd be nice to have this inline, but\n@@ -3259,10 +3257,6 @@ struct GTY(()) lang_decl {\n #define DECL_NAMESPACE_INLINE_P(NODE) \\\n   TREE_LANG_FLAG_0 (NAMESPACE_DECL_CHECK (NODE))\n \n-/* In a NAMESPACE_DECL, a vector of using directives.  */\n-#define DECL_NAMESPACE_USING(NODE) \\\n-   (LANG_DECL_NS_CHECK (NODE)->usings)\n-\n /* In a NAMESPACE_DECL, a vector of inline namespaces.  */\n #define DECL_NAMESPACE_INLINEES(NODE) \\\n    (LANG_DECL_NS_CHECK (NODE)->inlinees)"}, {"sha": "58f3265352d297f492036cccee5289fb79ae46ff", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0841bc15630c18bac94ff6ed8ba2d878d639caf6/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0841bc15630c18bac94ff6ed8ba2d878d639caf6/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=0841bc15630c18bac94ff6ed8ba2d878d639caf6", "patch": "@@ -589,7 +589,7 @@ name_lookup::search_usings (tree scope)\n     return true;\n \n   bool found = false;\n-  if (vec<tree, va_gc> *usings = DECL_NAMESPACE_USING (scope))\n+  if (vec<tree, va_gc> *usings = NAMESPACE_LEVEL (scope)->using_directives)\n     for (unsigned ix = usings->length (); ix--;)\n       found |= search_qualified ((*usings)[ix], true);\n \n@@ -651,7 +651,7 @@ name_lookup::queue_namespace (using_queue *queue, int depth, tree scope)\n       queue = queue_namespace (queue, depth, (*inlinees)[ix]);\n \n   /* Queue its using targets.  */\n-  queue = queue_usings (queue, depth, DECL_NAMESPACE_USING (scope));\n+  queue = queue_usings (queue, depth, NAMESPACE_LEVEL (scope)->using_directives);\n \n   return queue;\n }\n@@ -5272,21 +5272,11 @@ has_using_namespace_std_directive_p ()\n {\n   /* Look at local using-directives.  */\n   for (cp_binding_level *level = current_binding_level;\n-       level->kind != sk_namespace;\n+       level;\n        level = level->level_chain)\n     if (using_directives_contain_std_p (level->using_directives))\n       return true;\n \n-  /* Look at this namespace and its ancestors.  */\n-  for (tree scope = current_namespace; scope; scope = CP_DECL_CONTEXT (scope))\n-    {\n-      if (using_directives_contain_std_p (DECL_NAMESPACE_USING (scope)))\n-\treturn true;\n-\n-      if (scope == global_namespace)\n-\tbreak;\n-    }\n-\n   return false;\n }\n \n@@ -7253,7 +7243,7 @@ finish_namespace_using_directive (tree target, tree attribs)\n   if (target == error_mark_node)\n     return;\n \n-  add_using_namespace (DECL_NAMESPACE_USING (current_namespace),\n+  add_using_namespace (current_binding_level->using_directives,\n \t\t       ORIGINAL_NAMESPACE (target));\n   emit_debug_info_using_namespace (current_namespace,\n \t\t\t\t   ORIGINAL_NAMESPACE (target), false);\n@@ -7404,7 +7394,7 @@ push_namespace (tree name, bool make_inline)\n \t      SET_DECL_ASSEMBLER_NAME (ns, anon_identifier);\n \n \t      if (!make_inline)\n-\t\tadd_using_namespace (DECL_NAMESPACE_USING (current_namespace),\n+\t\tadd_using_namespace (current_binding_level->using_directives,\n \t\t\t\t     ns);\n \t    }\n \t  else if (TREE_PUBLIC (current_namespace))"}]}