{"sha": "eab47093e25bf60d3524cca09297218ddb71d643", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFiNDcwOTNlMjViZjYwZDM1MjRjY2EwOTI5NzIxOGRkYjcxZDY0Mw==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-12-06T22:42:23Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-12-06T22:42:23Z"}, "message": "sparc: Fix warnings when using visintrin.h with VIS level lower than 3.\n\n\t* config/sparc/visintrin.h: Add appropriate __VIS__ cpp protection.\n\nFrom-SVN: r182067", "tree": {"sha": "d48fda3c0c2796d78123636649cb70ae3c388948", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d48fda3c0c2796d78123636649cb70ae3c388948"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eab47093e25bf60d3524cca09297218ddb71d643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab47093e25bf60d3524cca09297218ddb71d643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eab47093e25bf60d3524cca09297218ddb71d643", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab47093e25bf60d3524cca09297218ddb71d643/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "806fc6aa98cd8071c9b451347c9ce2cf071c0598", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/806fc6aa98cd8071c9b451347c9ce2cf071c0598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/806fc6aa98cd8071c9b451347c9ce2cf071c0598"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "2ccfa6159c867a8f1bbc5c3e83a4f5c85c4d30a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab47093e25bf60d3524cca09297218ddb71d643/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab47093e25bf60d3524cca09297218ddb71d643/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eab47093e25bf60d3524cca09297218ddb71d643", "patch": "@@ -1,3 +1,7 @@\n+2011-12-06  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/visintrin.h: Add appropriate __VIS__ cpp protection.\n+\n 2011-12-06  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.c (avr_file_start): Fix missing ,"}, {"sha": "eb4d739046ed4be52f3586901f79e5b745667377", "filename": "gcc/config/sparc/visintrin.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab47093e25bf60d3524cca09297218ddb71d643/gcc%2Fconfig%2Fsparc%2Fvisintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab47093e25bf60d3524cca09297218ddb71d643/gcc%2Fconfig%2Fsparc%2Fvisintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fvisintrin.h?ref=eab47093e25bf60d3524cca09297218ddb71d643", "patch": "@@ -24,6 +24,8 @@\n #ifndef _VISINTRIN_H_INCLUDED\n #define _VISINTRIN_H_INCLUDED\n \n+#ifdef __VIS__\n+\n typedef int __v2si __attribute__ ((__vector_size__ (8)));\n typedef int __v1si __attribute__ ((__vector_size__ (4)));\n typedef short __v4hi __attribute__ ((__vector_size__ (8)));\n@@ -32,6 +34,8 @@ typedef unsigned char __v8qi __attribute__ ((__vector_size__ (8)));\n typedef unsigned char __v4qi __attribute__ ((__vector_size__ (4)));\n typedef int __i64 __attribute__ ((__mode__ (DI)));\n \n+#if __VIS__ >= 0x200\n+\n extern __inline void\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n __vis_write_gsr (__i64 __A)\n@@ -46,6 +50,8 @@ __vis_read_gsr (void)\n   return __builtin_vis_read_gsr ();\n }\n \n+#endif /* __VIS__ >= 0x200 */\n+\n extern __inline void *\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n __vis_alignaddr (void *__A, long __B)\n@@ -354,6 +360,8 @@ __vis_array32 (long __A, long __B)\n   return __builtin_vis_array32 (__A, __B);\n }\n \n+#if __VIS__ >= 0x200\n+\n extern __inline long\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n __vis_bmask (long __A, long __B)\n@@ -431,6 +439,10 @@ __vis_edge32ln (void *__A, void *__B)\n   return __builtin_vis_edge32ln (__A, __B);\n }\n \n+#endif /* __VIS__ >= 0x200 */\n+\n+#if __VIS__ >= 0x300\n+\n extern __inline void\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n __vis_cmask8 (long __A)\n@@ -690,4 +702,8 @@ __vis_xmulxhi (__i64 __A, __i64 __B)\n   return __builtin_vis_xmulxhi (__A, __B);\n }\n \n+#endif /* __VIS__ >= 0x300 */\n+\n+#endif /* __VIS__ */\n+\n #endif  /* _VISINTRIN_H_INCLUDED */"}]}