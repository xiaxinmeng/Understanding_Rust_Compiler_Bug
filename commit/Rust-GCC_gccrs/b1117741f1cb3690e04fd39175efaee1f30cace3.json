{"sha": "b1117741f1cb3690e04fd39175efaee1f30cace3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjExMTc3NDFmMWNiMzY5MGUwNGZkMzkxNzVlZmFlZTFmMzBjYWNlMw==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2001-01-18T03:07:01Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-01-18T03:07:01Z"}, "message": "lang-options.h (-Wunsupported-jdk11): Removed.\n\n2001-01-17  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n        * lang-options.h (-Wunsupported-jdk11): Removed.\n        * lang.c (flag_not_overriding): Deleted.\n        (flag_static_local_jdk1_1): Likewise.\n        (lang_W_options): Removed \"unsupported-jdk11\" entry.\n        * parse.y (java_check_methods): Removed dead code.\n\n(http://gcc.gnu.org/ml/gcc-patches/2001-01/msg01479.html)\n\nFrom-SVN: r39107", "tree": {"sha": "de405ca21842c0427733a90ceb46c06fff45bdad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de405ca21842c0427733a90ceb46c06fff45bdad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1117741f1cb3690e04fd39175efaee1f30cace3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1117741f1cb3690e04fd39175efaee1f30cace3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1117741f1cb3690e04fd39175efaee1f30cace3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1117741f1cb3690e04fd39175efaee1f30cace3/comments", "author": null, "committer": null, "parents": [{"sha": "acf8f04b16f78920602d68e8c1eb1699d6a79d0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf8f04b16f78920602d68e8c1eb1699d6a79d0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acf8f04b16f78920602d68e8c1eb1699d6a79d0e"}], "stats": {"total": 34, "additions": 8, "deletions": 26}, "files": [{"sha": "7e8be3406a881b89115a4cbc9b0b31a31bd62822", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1117741f1cb3690e04fd39175efaee1f30cace3/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1117741f1cb3690e04fd39175efaee1f30cace3/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=b1117741f1cb3690e04fd39175efaee1f30cace3", "patch": "@@ -1,3 +1,11 @@\n+2001-01-17  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* lang-options.h (-Wunsupported-jdk11): Removed.\n+\t* lang.c (flag_not_overriding): Deleted.\n+\t(flag_static_local_jdk1_1): Likewise.\n+\t(lang_W_options): Removed \"unsupported-jdk11\" entry.\n+\t* parse.y (java_check_methods): Removed dead code.\n+\n 2001-01-17  Tom Tromey  <tromey@redhat.com>\n \n \tChanges suggested by Per Bothner:"}, {"sha": "ce6289cd4d7065e0792d3479ba67d842c0580bce", "filename": "gcc/java/lang-options.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1117741f1cb3690e04fd39175efaee1f30cace3/gcc%2Fjava%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1117741f1cb3690e04fd39175efaee1f30cace3/gcc%2Fjava%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang-options.h?ref=b1117741f1cb3690e04fd39175efaee1f30cace3", "patch": "@@ -46,6 +46,5 @@ DEFINE_LANG_NAME (\"Java\")\n   { \"-fno-use-divide-subroutine\", \"Use built-in instructions for division\" },\n   { \"-Wredundant-modifiers\", \n     \"Warn if modifiers are specified when not necessary\"},\n-  { \"-Wunsupported-jdk11\", \"Warn if `final' local variables are specified\"},\n   { \"-Wextraneous-semicolon\", \"Warn if deprecated empty statements are found\"},\n   { \"-Wout-of-date\", \"Warn if .class files are out of date\" },"}, {"sha": "312623b3f473d3f085b20aa9e71a0b737015dba7", "filename": "gcc/java/lang.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1117741f1cb3690e04fd39175efaee1f30cace3/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1117741f1cb3690e04fd39175efaee1f30cace3/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=b1117741f1cb3690e04fd39175efaee1f30cace3", "patch": "@@ -116,12 +116,6 @@ int flag_wall = 0;\n /* When non zero, check for redundant modifier uses.  */\n int flag_redundant = 0;\n \n-/* When non zero, warns about overridings that don't occur.  */\n-int flag_not_overriding = 0;\n-\n-/* When non zero, warns that final local are treated as non final.  */\n-int flag_static_local_jdk1_1 = 0;\n-\n /* When non zero, call a library routine to do integer divisions. */\n int flag_use_divide_subroutine = 1;\n \n@@ -171,7 +165,6 @@ lang_f_options[] =\n static struct string_option\n lang_W_options[] =\n {\n-  { \"unsupported-jdk11\", &flag_static_local_jdk1_1, 1 },\n   { \"redundant-modifiers\", &flag_redundant, 1 },\n   { \"extraneous-semicolon\", &flag_extraneous_semicolon, 1 },\n   { \"out-of-date\", &flag_newer, 1 }"}, {"sha": "c5165b7f9338040b41df8fb927d0e3825223260b", "filename": "gcc/java/parse.y", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1117741f1cb3690e04fd39175efaee1f30cace3/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1117741f1cb3690e04fd39175efaee1f30cace3/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=b1117741f1cb3690e04fd39175efaee1f30cace3", "patch": "@@ -6195,24 +6195,6 @@ java_check_regular_methods (class_decl)\n \t}\n \n       aflags = get_access_flags_from_decl (found);\n-      /* If the method has default, access in an other package, then\n-\t issue a warning that the current method doesn't override the\n-\t one that was found elsewhere. Do not issue this warning when\n-\t the match was found in java.lang.Object.  */\n-      if (DECL_CONTEXT (found) != object_type_node\n-\t  && ((aflags & ACC_VISIBILITY) == 0)\n-\t  && !class_in_current_package (DECL_CONTEXT (found))\n-\t  && !DECL_CLINIT_P (found)\n-\t  && flag_not_overriding)\n-        {\n-\t  parse_warning_context \n-\t    (method_wfl, \"Method `%s' in class `%s' does not override the corresponding method in class `%s', which is private to a different package\",\n-\t     lang_printable_name (found, 0),\n-\t     IDENTIFIER_POINTER (DECL_NAME (class_decl)),\n-\t     IDENTIFIER_POINTER (DECL_NAME \n-\t\t\t\t (TYPE_NAME (DECL_CONTEXT (found)))));\n-\t  continue;\n-\t}\n \n       /* Can't override final. Can't override static. */\n       if (METHOD_FINAL (found) || METHOD_STATIC (found))"}]}