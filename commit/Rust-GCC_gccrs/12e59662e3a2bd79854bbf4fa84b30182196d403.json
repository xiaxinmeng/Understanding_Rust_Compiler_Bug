{"sha": "12e59662e3a2bd79854bbf4fa84b30182196d403", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJlNTk2NjJlM2EyYmQ3OTg1NGJiZjRmYTg0YjMwMTgyMTk2ZDQwMw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-05-30T07:38:36Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-05-30T07:38:36Z"}, "message": "re PR libfortran/20179 (cannot mix C and Fortran I/O)\n\n\tPR libfortran/20179\n\t* io/unix.c (fd_close): Add test so that we don't close()\n\tstdout and stderr.\n\nFrom-SVN: r100353", "tree": {"sha": "1defe98805a925a82cfb7499d93475e932eb0644", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1defe98805a925a82cfb7499d93475e932eb0644"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12e59662e3a2bd79854bbf4fa84b30182196d403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e59662e3a2bd79854bbf4fa84b30182196d403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12e59662e3a2bd79854bbf4fa84b30182196d403", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e59662e3a2bd79854bbf4fa84b30182196d403/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66859ace3123cee9186238e5b32af3ae4304f22f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66859ace3123cee9186238e5b32af3ae4304f22f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66859ace3123cee9186238e5b32af3ae4304f22f"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "28f32b1a57bf6ef2f4c7a1dc2fca6e51b584a6bf", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e59662e3a2bd79854bbf4fa84b30182196d403/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e59662e3a2bd79854bbf4fa84b30182196d403/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=12e59662e3a2bd79854bbf4fa84b30182196d403", "patch": "@@ -1,3 +1,9 @@\n+2005-05-23  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/20179\n+\t* io/unix.c (fd_close): Add test so that we don't close()\n+\tstdout and stderr.\n+\n 2005-05-29  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/20006"}, {"sha": "f82ffa7304178766a5f4700af60fea8439982731", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e59662e3a2bd79854bbf4fa84b30182196d403/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e59662e3a2bd79854bbf4fa84b30182196d403/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=12e59662e3a2bd79854bbf4fa84b30182196d403", "patch": "@@ -542,8 +542,11 @@ fd_close (unix_stream * s)\n   if (s->buffer != NULL && s->buffer != s->small_buffer)\n     free_mem (s->buffer);\n \n-  if (close (s->fd) < 0)\n-    return FAILURE;\n+  if (s->fd != STDOUT_FILENO && s->fd != STDERR_FILENO)\n+    {\n+      if (close (s->fd) < 0)\n+        return FAILURE;\n+    }\n \n   free_mem (s);\n "}]}