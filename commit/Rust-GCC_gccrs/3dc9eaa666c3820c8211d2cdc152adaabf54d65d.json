{"sha": "3dc9eaa666c3820c8211d2cdc152adaabf54d65d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RjOWVhYTY2NmMzODIwYzgyMTFkMmNkYzE1MmFkYWFiZjU0ZDY1ZA==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2009-03-29T00:08:07Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2009-03-29T00:08:07Z"}, "message": "cgraphbuild.c (build_cgraph_edges, [...]): Don't call initialize_inline_failed.\n\n\t* cgraphbuild.c (build_cgraph_edges, rebuild_cgraph_edges): Don't\n\tcall initialize_inline_failed.\n\t(initialize_inline_failed): Move it from here ...\n\t* cgraph.c (initialize_inline_failed): ... to here.\n\t(cgraph_create_edge): Call initialize_inline_failed rather than\n\tsetting inline_failed directly.\n\ntestsuite/\n\t* gcc.dg/winline-10.c: New test.\n\nFrom-SVN: r145215", "tree": {"sha": "27ae0d6521d000b4e4f8f144d612fdc7b84ad348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27ae0d6521d000b4e4f8f144d612fdc7b84ad348"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3dc9eaa666c3820c8211d2cdc152adaabf54d65d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dc9eaa666c3820c8211d2cdc152adaabf54d65d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dc9eaa666c3820c8211d2cdc152adaabf54d65d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dc9eaa666c3820c8211d2cdc152adaabf54d65d/comments", "author": null, "committer": null, "parents": [{"sha": "7fb0ee07b4a414ff79ddff2b257de634ed6c26c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb0ee07b4a414ff79ddff2b257de634ed6c26c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fb0ee07b4a414ff79ddff2b257de634ed6c26c1"}], "stats": {"total": 89, "additions": 54, "deletions": 35}, "files": [{"sha": "9ee7de8e7098f4e2c9142b13f30993814d0d9d72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dc9eaa666c3820c8211d2cdc152adaabf54d65d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dc9eaa666c3820c8211d2cdc152adaabf54d65d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3dc9eaa666c3820c8211d2cdc152adaabf54d65d", "patch": "@@ -1,3 +1,12 @@\n+2009-03-28  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* cgraphbuild.c (build_cgraph_edges, rebuild_cgraph_edges): Don't\n+\tcall initialize_inline_failed.\n+\t(initialize_inline_failed): Move it from here ...\n+\t* cgraph.c (initialize_inline_failed): ... to here.\n+\t(cgraph_create_edge): Call initialize_inline_failed rather than\n+\tsetting inline_failed directly.\n+\n 2009-03-29  Ben Elliston  <bje@au.ibm.com>\n \n \tPR target/32542"}, {"sha": "d5dba426b1ab4f07294d4deaeb064bdd316371c8", "filename": "gcc/cgraph.c", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dc9eaa666c3820c8211d2cdc152adaabf54d65d/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dc9eaa666c3820c8211d2cdc152adaabf54d65d/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=3dc9eaa666c3820c8211d2cdc152adaabf54d65d", "patch": "@@ -652,6 +652,26 @@ cgraph_set_call_stmt (struct cgraph_edge *e, gimple new_stmt)\n     }\n }\n \n+/* Give initial reasons why inlining would fail on EDGE.  This gets either\n+   nullified or usually overwritten by more precise reasons later.  */\n+\n+static void\n+initialize_inline_failed (struct cgraph_edge *e)\n+{\n+  struct cgraph_node *callee = e->callee;\n+\n+  if (!callee->analyzed)\n+    e->inline_failed = CIF_BODY_NOT_AVAILABLE;\n+  else if (callee->local.redefined_extern_inline)\n+    e->inline_failed = CIF_REDEFINED_EXTERN_INLINE;\n+  else if (!callee->local.inlinable)\n+    e->inline_failed = CIF_FUNCTION_NOT_INLINABLE;\n+  else if (gimple_call_cannot_inline_p (e->call_stmt))\n+    e->inline_failed = CIF_MISMATCHED_ARGUMENTS;\n+  else\n+    e->inline_failed = CIF_FUNCTION_NOT_CONSIDERED;\n+}\n+\n /* Create edge from CALLER to CALLEE in the cgraph.  */\n \n struct cgraph_edge *\n@@ -679,15 +699,6 @@ cgraph_create_edge (struct cgraph_node *caller, struct cgraph_node *callee,\n       edge->uid = cgraph_edge_max_uid++;\n     }\n \n-  if (!callee->analyzed)\n-    edge->inline_failed = CIF_BODY_NOT_AVAILABLE;\n-  else if (callee->local.redefined_extern_inline)\n-    edge->inline_failed = CIF_REDEFINED_EXTERN_INLINE;\n-  else if (callee->local.inlinable)\n-    edge->inline_failed = CIF_FUNCTION_NOT_CONSIDERED;\n-  else\n-    edge->inline_failed = CIF_FUNCTION_NOT_INLINABLE;\n-\n   edge->aux = NULL;\n \n   edge->caller = caller;\n@@ -721,6 +732,9 @@ cgraph_create_edge (struct cgraph_node *caller, struct cgraph_node *callee,\n       gcc_assert (!*slot);\n       *slot = edge;\n     }\n+\n+  initialize_inline_failed (edge);\n+\n   return edge;\n }\n "}, {"sha": "3868712b3f7a819148e0106cef9206eba762269b", "filename": "gcc/cgraphbuild.c", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dc9eaa666c3820c8211d2cdc152adaabf54d65d/gcc%2Fcgraphbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dc9eaa666c3820c8211d2cdc152adaabf54d65d/gcc%2Fcgraphbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphbuild.c?ref=3dc9eaa666c3820c8211d2cdc152adaabf54d65d", "patch": "@@ -78,30 +78,6 @@ record_reference (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n   return NULL_TREE;\n }\n \n-/* Give initial reasons why inlining would fail on all calls from\n-   NODE.  Those get either nullified or usually overwritten by more precise\n-   reason later.  */\n-\n-static void\n-initialize_inline_failed (struct cgraph_node *node)\n-{\n-  struct cgraph_edge *e;\n-\n-  for (e = node->callers; e; e = e->next_caller)\n-    {\n-      gcc_assert (!e->callee->global.inlined_to);\n-      gcc_assert (e->inline_failed);\n-      if (node->local.redefined_extern_inline)\n-\te->inline_failed = CIF_REDEFINED_EXTERN_INLINE;\n-      else if (!node->local.inlinable)\n-\te->inline_failed = CIF_FUNCTION_NOT_INLINABLE;\n-      else if (gimple_call_cannot_inline_p (e->call_stmt))\n-\te->inline_failed = CIF_MISMATCHED_ARGUMENTS;\n-      else\n-\te->inline_failed = CIF_FUNCTION_NOT_CONSIDERED;\n-    }\n-}\n-\n /* Computes the frequency of the call statement so that it can be stored in\n    cgraph_edge.  BB is the basic block of the call statement.  */\n int\n@@ -193,7 +169,6 @@ build_cgraph_edges (void)\n     }\n \n   pointer_set_destroy (visited_nodes);\n-  initialize_inline_failed (node);\n   return 0;\n }\n \n@@ -253,8 +228,8 @@ rebuild_cgraph_edges (void)\n \t\t\t      bb->loop_depth);\n \n       }\n-  initialize_inline_failed (node);\n   gcc_assert (!node->global.inlined_to);\n+\n   return 0;\n }\n "}, {"sha": "b1d82e189c45ad60bbc93cc32f3b9e13b6cd6f1b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dc9eaa666c3820c8211d2cdc152adaabf54d65d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dc9eaa666c3820c8211d2cdc152adaabf54d65d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3dc9eaa666c3820c8211d2cdc152adaabf54d65d", "patch": "@@ -1,3 +1,7 @@\n+2009-03-28  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* gcc.dg/winline-10.c: New test.\n+\n 2009-03-28  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34656"}, {"sha": "2106253fcf278d5108c36f55f68b90d15d3062e5", "filename": "gcc/testsuite/gcc.dg/winline-10.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dc9eaa666c3820c8211d2cdc152adaabf54d65d/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dc9eaa666c3820c8211d2cdc152adaabf54d65d/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-10.c?ref=3dc9eaa666c3820c8211d2cdc152adaabf54d65d", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Winline\" } */\n+\n+struct s { int a; };\n+\n+inline void f (x)\t/* { dg-warning \"inlining .* mismatched arg\" \"\" } */\n+     int x;\n+{\n+  asm (\"\");\n+}\n+\n+void g (struct s x)\n+{\n+  f (x); \t\t/* { dg-warning \"called from here\" \"\" } */\n+}\n+\n+void f (int x);\t\t/* { dg-warning \"follows non-prototype definition\" } */"}]}