{"sha": "a0f12cf8ea65bd183955c3eee91cea9d2080d3e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBmMTJjZjhlYTY1YmQxODM5NTVjM2VlZTkxY2VhOWQyMDgwZDNlNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-11-12T10:13:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-11-12T10:13:48Z"}, "message": "re PR bootstrap/63821 (ICE in verify_gimple during libgcc build starting with r217349)\n\n2014-11-12  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/63821\n\t* match.pd: Add missing conversion to the -(T)-X pattern.\n\n\t* gfortran.dg/pr63821.f90: New testcase.\n\nFrom-SVN: r217411", "tree": {"sha": "f2f1850363e9f780014aeec2996af817ef02a273", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2f1850363e9f780014aeec2996af817ef02a273"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0f12cf8ea65bd183955c3eee91cea9d2080d3e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f12cf8ea65bd183955c3eee91cea9d2080d3e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0f12cf8ea65bd183955c3eee91cea9d2080d3e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f12cf8ea65bd183955c3eee91cea9d2080d3e5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e7d1000cd7501d3dcacda0ef9f6dfb0b4a0729f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7d1000cd7501d3dcacda0ef9f6dfb0b4a0729f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7d1000cd7501d3dcacda0ef9f6dfb0b4a0729f5"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "3184fc9e3e00a5bd0600f38ff08a0cab423d39b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f12cf8ea65bd183955c3eee91cea9d2080d3e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f12cf8ea65bd183955c3eee91cea9d2080d3e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0f12cf8ea65bd183955c3eee91cea9d2080d3e5", "patch": "@@ -1,3 +1,8 @@\n+2014-11-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/63821\n+\t* match.pd: Add missing conversion to the -(T)-X pattern.\n+\n 2014-11-12  Richard Biener  <rguenther@suse.de>\n \n \tPR bootstrap/63819"}, {"sha": "39abe25f276d5a69b05df84e871e12dc3024ca09", "filename": "gcc/match.pd", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f12cf8ea65bd183955c3eee91cea9d2080d3e5/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f12cf8ea65bd183955c3eee91cea9d2080d3e5/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=a0f12cf8ea65bd183955c3eee91cea9d2080d3e5", "patch": "@@ -299,7 +299,7 @@ along with GCC; see the file COPYING3.  If not see\n   (if (tree_nop_conversion_p (type, TREE_TYPE (@1))\n        && (TYPE_OVERFLOW_WRAPS (type)\n \t   || (flag_sanitize & SANITIZE_SI_OVERFLOW) == 0))\n-   @1))\n+   (convert @1)))\n \n  /* We can't reassociate floating-point or fixed-point plus or minus\n     because of saturation to +-Inf.  */"}, {"sha": "7b284c1053702558883f4b97399709379149ad32", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f12cf8ea65bd183955c3eee91cea9d2080d3e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f12cf8ea65bd183955c3eee91cea9d2080d3e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0f12cf8ea65bd183955c3eee91cea9d2080d3e5", "patch": "@@ -1,3 +1,8 @@\n+2014-11-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/63821\n+\t* gfortran.dg/pr63821.f90: New testcase.\n+\n 2014-11-12  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR tree-optimization/63761"}, {"sha": "b26f4d788a49cf9e2d125026275fb0154e45f0ed", "filename": "gcc/testsuite/gfortran.dg/pr63821.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f12cf8ea65bd183955c3eee91cea9d2080d3e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr63821.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f12cf8ea65bd183955c3eee91cea9d2080d3e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr63821.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr63821.f90?ref=a0f12cf8ea65bd183955c3eee91cea9d2080d3e5", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+! { dg-options \"-O3\" }\n+SUBROUTINE calculates_green_opt()\n+  INTEGER, PARAMETER :: dp=8\n+  REAL(KIND=dp), ALLOCATABLE, DIMENSION(:) :: green, green1\n+  ALLOCATE(green(-nrec:nrec),stat=i_all)\n+  DO ikern=1,nrec\n+     green(-ikern)=gleft+gright\n+     IF (ABS(green(ikern)) <= 1.e-20_dp) THEN\n+        nrec=ikern\n+        EXIT\n+     END IF\n+  END DO\n+  ALLOCATE(green1(-nrec:nrec),stat=i_all)\n+  CALL scf_recursion(nrec,green(-nrec),green1(-nrec))\n+END SUBROUTINE calculates_green_opt\n+"}]}