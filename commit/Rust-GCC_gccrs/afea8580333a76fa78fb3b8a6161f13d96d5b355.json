{"sha": "afea8580333a76fa78fb3b8a6161f13d96d5b355", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZlYTg1ODAzMzNhNzZmYTc4ZmIzYjhhNjE2MWYxM2Q5NmQ1YjM1NQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-08-13T11:18:31Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-08-13T11:18:31Z"}, "message": "unix.h (ASM_OUTPUT_MI_THUNK): Don't capitalize register %rip.\n\n\t* config/i386/unix.h (ASM_OUTPUT_MI_THUNK): Don't capitalize\n\tregister %rip.\n\nFrom-SVN: r44848", "tree": {"sha": "59b4058425a361aefd55997d8a564940032a2335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59b4058425a361aefd55997d8a564940032a2335"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afea8580333a76fa78fb3b8a6161f13d96d5b355", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afea8580333a76fa78fb3b8a6161f13d96d5b355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afea8580333a76fa78fb3b8a6161f13d96d5b355", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afea8580333a76fa78fb3b8a6161f13d96d5b355/comments", "author": null, "committer": null, "parents": [{"sha": "3605b283e8be90c330490d12d95af51a588f7e52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3605b283e8be90c330490d12d95af51a588f7e52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3605b283e8be90c330490d12d95af51a588f7e52"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "e2349b2455a625c267f53642d9478ff3a03c1647", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afea8580333a76fa78fb3b8a6161f13d96d5b355/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afea8580333a76fa78fb3b8a6161f13d96d5b355/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afea8580333a76fa78fb3b8a6161f13d96d5b355", "patch": "@@ -1,3 +1,8 @@\n+2001-08-13  Andreas Jaeger  <aj@suse.de>\n+\n+\t* config/i386/unix.h (ASM_OUTPUT_MI_THUNK): Don't capitalize\n+\tregister %rip.\n+\n 2001-08-13  Kazu Hirata  <kazu@hxi.com>\n \n \t* jump.c: Fix formatting.\n@@ -140,34 +145,34 @@\n \t(rs6000_elf_section_type_flags): Actually return a value.\n \n 2001-08-11  Ulrich Weigand  <uweigand@de.ibm.com>\n- \n-\t* s390.c, s390.h, s390.md, s390-protos.h, linux.h, t-linux: \n+\n+\t* s390.c, s390.h, s390.md, s390-protos.h, linux.h, t-linux:\n \tClean up code: add missing comments and prototypes, fix warnings,\n         remove obsolete code, fix spacing to conform to coding style.\n \n 2001-08-11  Ulrich Weigand  <uweigand@de.ibm.com>\n- \n- \t* config/s390/s390.c (targetm): Define TARGET_ASM_OPEN_PAREN\n+\n+\t* config/s390/s390.c (targetm): Define TARGET_ASM_OPEN_PAREN\n \tand TARGET_ASM_CLOSE_PAREN.\n \t(regclass_map): CC register belongs to class NO_REGS.\n-\t(legitimize_pic_address): Don't generate unnecessary moves \n+\t(legitimize_pic_address): Don't generate unnecessary moves\n \t(to avoid confusing loop optimization).\n- \t(check_and_change_labels): Replace jump_long by indirect_jump.\n-\t(s390_final_chunkify): Don't start a new literal pool on section \n+\t(check_and_change_labels): Replace jump_long by indirect_jump.\n+\t(s390_final_chunkify): Don't start a new literal pool on section\n \tswitch in 64-bit code.\n \t(s390_va_start, s390_va_arg): Fixed incorrect sizes for 64-bit.\n-\t\n+\n \t* config/s390/s390.h (TARGET_SWITCHES): Renamed debug_arg to debug.\n \t(MAX_BITS_PER_WORD, MAX_LONG_TYPE_SIZE): Set to 64 (for 64-bit).\n-\t(HARD_REGNO_MODE_OK, RETURN_IN_MEMORY): Support complex integer \n+\t(HARD_REGNO_MODE_OK, RETURN_IN_MEMORY): Support complex integer\n \tmodes correctly.\n \t(reg_class, REG_CLASS_NAMES, REG_CLASS_CONTENTS): Remove CC_REGS.\n \t(EH_RETURN_HANDLER_RTX): Fixed incorrect offset for 64-bit.\n \t(CONST_COSTS): Fixed incorrect costs.\n \n \t* config/s390/s390.md (fixuns_trunc[sd]f[sd]i2, udivsi3, umodsi3):\n \tUse emit_jump instead of emit_jump_insn (gen_jump).\n-\t(divsi3, modsi3): Clobber low word of divmoddisi3 before shifting \n+\t(divsi3, modsi3): Clobber low word of divmoddisi3 before shifting\n \t(to avoid confusing flow analysis).\n \t(tablejump, tablejump1, tablejump2): Removed.  Replaced by casesi.\n \t(casesi, casesi_jump): New.\n@@ -219,10 +224,10 @@\n \n \t* doc/install.texi (Specific, c4x): Fix cross-reference to the\n \tmain manual to work both for info and HTML versions.\n-\t\n+\n 2001-08-11  Neil Booth  <neil@daikokuya.demon.co.uk>\n \t    Matt Kraai <kraai@alumni.carnegiemellon.edu>\n-\t\n+\n \t* cpphash.c (_cpp_destroy_hashtable): Use ht_destroy.\n \t* cpphash.h (CPP_IN_SYSTEM_HEADER): Fix.\n \t(struct cpp_pool): New member first.\n@@ -286,8 +291,8 @@\n \tbehavior of pointer/integer conversion.\n \n 2001-08-10  Ulrich Weigand  <uweigand@de.ibm.com>\n- \n- \t* glimits.h (__LONG_MAX__): Add s390x as 64-bit architecture.\n+\n+\t* glimits.h (__LONG_MAX__): Add s390x as 64-bit architecture.\n \n 2001-08-10  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "a1fab03618fd7b1713c832a60ffc01302a388551", "filename": "gcc/config/i386/unix.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afea8580333a76fa78fb3b8a6161f13d96d5b355/gcc%2Fconfig%2Fi386%2Funix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afea8580333a76fa78fb3b8a6161f13d96d5b355/gcc%2Fconfig%2Fi386%2Funix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Funix.h?ref=afea8580333a76fa78fb3b8a6161f13d96d5b355", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Unix assembler syntax for the Intel 80386.\n-   Copyright (C) 1988, 1994, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1994, 1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -128,7 +128,7 @@ do {\t\t\t\t\t\t\t\t\t    \\\n     {\t\t\t\t\t\t\t\t\t    \\\n       fprintf (FILE, \"\\tjmp *\");\t\t\t\t\t    \\\n       assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));\t    \\\n-      fprintf (FILE, \"@GOTPCREL(%%RIP)\\n\");\t\t\t\t    \\\n+      fprintf (FILE, \"@GOTPCREL(%%rip)\\n\");\t\t\t\t    \\\n     }\t\t\t\t\t\t\t\t\t    \\\n   else\t\t\t\t\t\t\t\t\t    \\\n     {\t\t\t\t\t\t\t\t\t    \\"}]}