{"sha": "8609875306931541730c93b2b99d835f110673fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYwOTg3NTMwNjkzMTU0MTczMGM5M2IyYjk5ZDgzNWYxMTA2NzNmZA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-11-18T00:22:45Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-11-18T00:22:45Z"}, "message": "rs6000.h (TARGET_NO_LWSYNC): Define.\n\ngcc:\n\t* config/rs6000/rs6000.h (TARGET_NO_LWSYNC): Define.\n\t* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define\n\t__NO_LWSYNC__ if TARGET_NO_LWSYNC.\n\t* config/rs6000/sync.md (lwsync): Emit plain sync if\n\tTARGET_NO_LWSYNC.\n\nlibstdc++-v3:\n\t* config/cpu/powerpc/atomic_word.h (_GLIBCXX_WRITE_MEM_BARRIER):\n\tUse plain sync if __NO_LWSYNC__.\n\nFrom-SVN: r118961", "tree": {"sha": "732c162adaa79606a4d2a844a12e25444af0c6c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/732c162adaa79606a4d2a844a12e25444af0c6c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8609875306931541730c93b2b99d835f110673fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8609875306931541730c93b2b99d835f110673fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8609875306931541730c93b2b99d835f110673fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8609875306931541730c93b2b99d835f110673fd/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0828ca7e69a85c0bff581e757a2e0d276a25d88a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0828ca7e69a85c0bff581e757a2e0d276a25d88a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0828ca7e69a85c0bff581e757a2e0d276a25d88a"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "01ed1bfe1f49c27d49a29594096c9b2d41786ba3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8609875306931541730c93b2b99d835f110673fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8609875306931541730c93b2b99d835f110673fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8609875306931541730c93b2b99d835f110673fd", "patch": "@@ -1,3 +1,11 @@\n+2006-11-18  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/rs6000/rs6000.h (TARGET_NO_LWSYNC): Define.\n+\t* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define\n+\t__NO_LWSYNC__ if TARGET_NO_LWSYNC.\n+\t* config/rs6000/sync.md (lwsync): Emit plain sync if\n+\tTARGET_NO_LWSYNC.\n+\n 2006-11-17  DJ Delorie  <dj@redhat.com>\n \n \t* reload1.c (reloads_unique_chain): New."}, {"sha": "d4988bd3ffd43671ec2d8023da2b43d90a793ab6", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8609875306931541730c93b2b99d835f110673fd/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8609875306931541730c93b2b99d835f110673fd/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=8609875306931541730c93b2b99d835f110673fd", "patch": "@@ -127,6 +127,9 @@ rs6000_cpu_cpp_builtins (cpp_reader *pfile)\n   /* Used by lwarx/stwcx. errata work-around.  */\n   if (rs6000_cpu == PROCESSOR_PPC405)\n     builtin_define (\"__PPC405__\");\n+  /* Used by libstdc++.  */\n+  if (TARGET_NO_LWSYNC)\n+    builtin_define (\"__NO_LWSYNC__\");\n \n   /* May be overridden by target configuration.  */\n   RS6000_CPU_CPP_ENDIAN_BUILTINS();"}, {"sha": "0795e6ee63762aef688c8c84cb3f620a4abb3460", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8609875306931541730c93b2b99d835f110673fd/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8609875306931541730c93b2b99d835f110673fd/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=8609875306931541730c93b2b99d835f110673fd", "patch": "@@ -342,6 +342,9 @@ extern enum rs6000_nop_insertion rs6000_sched_insert_nops;\n #define TARGET_E500_SINGLE 0\n #define TARGET_E500_DOUBLE 0\n \n+/* E500 processors only support plain \"sync\", not lwsync.  */\n+#define TARGET_NO_LWSYNC TARGET_E500\n+\n /* Sometimes certain combinations of command options do not make sense\n    on a particular target machine.  You can define a macro\n    `OVERRIDE_OPTIONS' to take account of this.  This macro, if"}, {"sha": "b7166473efec6dfb372cddc33caa9d3be930da16", "filename": "gcc/config/rs6000/sync.md", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8609875306931541730c93b2b99d835f110673fd/gcc%2Fconfig%2Frs6000%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8609875306931541730c93b2b99d835f110673fd/gcc%2Fconfig%2Frs6000%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsync.md?ref=8609875306931541730c93b2b99d835f110673fd", "patch": "@@ -615,6 +615,11 @@\n   [(set (mem:BLK (match_scratch 0 \"X\"))\n \t(unspec_volatile:BLK [(mem:BLK (match_scratch 1 \"X\"))] UNSPEC_LWSYNC))]\n   \"\"\n-  \".long 0x7c2004ac\"\n+{\n+  if (TARGET_NO_LWSYNC)\n+    return \"sync\";\n+  else\n+    return \".long 0x7c2004ac\";\n+}\n   [(set_attr \"type\" \"sync\")])\n "}, {"sha": "a41049a7ff11492b07c024b3675933528fa17bb7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8609875306931541730c93b2b99d835f110673fd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8609875306931541730c93b2b99d835f110673fd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8609875306931541730c93b2b99d835f110673fd", "patch": "@@ -1,3 +1,8 @@\n+2006-11-18  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/cpu/powerpc/atomic_word.h (_GLIBCXX_WRITE_MEM_BARRIER):\n+\tUse plain sync if __NO_LWSYNC__.\n+\n 2006-11-14  Joseph Myers  <joseph@codesourcery.com>\n \n \t* testsuite/26_numerics/complex/13450.cc: Do not test long double"}, {"sha": "4f8c670d2a239003a880cfff324ae01ab6ebc1f4", "filename": "libstdc++-v3/config/cpu/powerpc/atomic_word.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8609875306931541730c93b2b99d835f110673fd/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fatomic_word.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8609875306931541730c93b2b99d835f110673fd/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fatomic_word.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fatomic_word.h?ref=8609875306931541730c93b2b99d835f110673fd", "patch": "@@ -33,6 +33,10 @@\n typedef int _Atomic_word;\n \n #define _GLIBCXX_READ_MEM_BARRIER __asm __volatile (\"isync\":::\"memory\")\n+#ifdef __NO_LWSYNC__\n+#define _GLIBCXX_WRITE_MEM_BARRIER __asm __volatile (\"sync\":::\"memory\")\n+#else\n #define _GLIBCXX_WRITE_MEM_BARRIER __asm __volatile (\"lwsync\":::\"memory\")\n+#endif\n \n #endif "}]}