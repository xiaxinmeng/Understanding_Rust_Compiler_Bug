{"sha": "e4dbaed54ef2f55b52d5926276b891b1535d7c89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRkYmFlZDU0ZWYyZjU1YjUyZDU5MjYyNzZiODkxYjE1MzVkN2M4OQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2002-03-27T22:53:08Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2002-03-27T22:53:08Z"}, "message": "i386.c (classify_argument): Also check for QUAL_UNION_TYPE.\n\n\t* config/i386/i386.c (classify_argument): Also check for\n\tQUAL_UNION_TYPE.\n\nFrom-SVN: r51484", "tree": {"sha": "ef8994ed675373611c222d78935b96de33cd89f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef8994ed675373611c222d78935b96de33cd89f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4dbaed54ef2f55b52d5926276b891b1535d7c89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4dbaed54ef2f55b52d5926276b891b1535d7c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4dbaed54ef2f55b52d5926276b891b1535d7c89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4dbaed54ef2f55b52d5926276b891b1535d7c89/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "18b467f1428cfb870df7f3ff4f97aa970dc9105c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18b467f1428cfb870df7f3ff4f97aa970dc9105c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18b467f1428cfb870df7f3ff4f97aa970dc9105c"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "6689e62c4dc9e460dae904d41198bdd4cac20b0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dbaed54ef2f55b52d5926276b891b1535d7c89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dbaed54ef2f55b52d5926276b891b1535d7c89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4dbaed54ef2f55b52d5926276b891b1535d7c89", "patch": "@@ -1,3 +1,8 @@\n+2002-03-27  Andreas Schwab  <schwab@suse.de>\n+\n+\t* config/i386/i386.c (classify_argument): Also check for\n+\tQUAL_UNION_TYPE.\n+\n 2002-03-27  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* doc/install.texi (alpha*-dec-osf*): Don't need --enable-libgcj"}, {"sha": "7794f3fd9cc052cdcb7233a2c71fd0d6ec1f7ff9", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dbaed54ef2f55b52d5926276b891b1535d7c89/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dbaed54ef2f55b52d5926276b891b1535d7c89/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e4dbaed54ef2f55b52d5926276b891b1535d7c89", "patch": "@@ -1726,7 +1726,8 @@ classify_argument (mode, type, classes, bit_offset)\n \t    classes[i] = subclasses[i % num];\n \t}\n       /* Unions are similar to RECORD_TYPE but offset is always 0.  */\n-      else if (TREE_CODE (type) == UNION_TYPE)\n+      else if (TREE_CODE (type) == UNION_TYPE\n+\t       || TREE_CODE (type) == QUAL_UNION_TYPE)\n \t{\n \t  for (field = TYPE_FIELDS (type); field; field = TREE_CHAIN (field))\n \t    {"}]}