{"sha": "a579871bbcf4d290a5bd44b655ecf5de2ff399bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU3OTg3MWJiY2Y0ZDI5MGE1YmQ0NGI2NTVlY2Y1ZGUyZmYzOTliYw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2016-05-10T09:00:53Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2016-05-10T09:00:53Z"}, "message": "S/390: Disable scalar vector instructions with -mno-vx.\n\nAlthough the scalar variants of the vector instructions aren't\nactually vector instructions they are still executed in the vector\nfacility and therefore need to be disabled when disabling the facility\nwith -mno-vx.\n\nFixed with the attached patch.  Committed to head, GCC 6, and GCC 5\nbranches.\n\ngcc/ChangeLog:\n\n2016-05-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/s390.md (\"*vec_cmp<insn_cmp>df_cconly\")\n\t(\"*fixuns_truncdfdi2_z13\")\n\t(\"*fixuns_trunc<FP:mode><GPR:mode>2_z196\")\n\t(\"*fix_truncdfdi2_bfp_z13\", \"*floatunsdidf2_z13\")\n\t(\"*extendsfdf2_z13\"): Replace TARGET_Z13 with TARGET_VX.\n\nFrom-SVN: r236067", "tree": {"sha": "9e4060cc9f5d3002477bf29257f4697884839017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e4060cc9f5d3002477bf29257f4697884839017"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a579871bbcf4d290a5bd44b655ecf5de2ff399bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a579871bbcf4d290a5bd44b655ecf5de2ff399bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a579871bbcf4d290a5bd44b655ecf5de2ff399bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a579871bbcf4d290a5bd44b655ecf5de2ff399bc/comments", "author": null, "committer": null, "parents": [{"sha": "64ea4e151b40fde37eb2b3190731f03c4a65dcf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ea4e151b40fde37eb2b3190731f03c4a65dcf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64ea4e151b40fde37eb2b3190731f03c4a65dcf3"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "209305005e2f152e3a6f7ea35ebda1bf1ccd0361", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a579871bbcf4d290a5bd44b655ecf5de2ff399bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a579871bbcf4d290a5bd44b655ecf5de2ff399bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a579871bbcf4d290a5bd44b655ecf5de2ff399bc", "patch": "@@ -1,3 +1,11 @@\n+2016-05-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.md (\"*vec_cmp<insn_cmp>df_cconly\")\n+\t(\"*fixuns_truncdfdi2_z13\")\n+\t(\"*fixuns_trunc<FP:mode><GPR:mode>2_z196\")\n+\t(\"*fix_truncdfdi2_bfp_z13\", \"*floatunsdidf2_z13\")\n+\t(\"*extendsfdf2_z13\"): Replace TARGET_Z13 with TARGET_VX.\n+\n 2016-05-10  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/70497"}, {"sha": "caf8ed558c3a8526bbf019fe1b3bda891df4edc1", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a579871bbcf4d290a5bd44b655ecf5de2ff399bc/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a579871bbcf4d290a5bd44b655ecf5de2ff399bc/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=a579871bbcf4d290a5bd44b655ecf5de2ff399bc", "patch": "@@ -1305,7 +1305,7 @@\n \t(compare:VFCMP (match_operand:DF 0 \"register_operand\" \"v\")\n \t\t       (match_operand:DF 1 \"register_operand\" \"v\")))\n    (clobber (match_scratch:V2DI 2 \"=v\"))]\n-  \"TARGET_Z13 && TARGET_HARD_FLOAT\"\n+  \"TARGET_VX && TARGET_HARD_FLOAT\"\n   \"wfc<asm_fcmp>dbs\\t%v2,%v0,%v1\"\n   [(set_attr \"op_type\" \"VRR\")])\n \n@@ -4703,7 +4703,7 @@\n \t(unsigned_fix:DI (match_operand:DF 1 \"register_operand\"  \"f,v\")))\n    (unspec:DI [(match_operand:DI           2 \"immediate_operand\" \"K,K\")] UNSPEC_ROUND)\n    (clobber (reg:CC CC_REGNUM))]\n-   \"TARGET_Z13 && TARGET_HARD_FLOAT\"\n+   \"TARGET_VX && TARGET_HARD_FLOAT\"\n    \"@\n     clgdbr\\t%0,%h2,%1,0\n     wclgdb\\t%v0,%v1,0,%h2\"\n@@ -4718,7 +4718,7 @@\n    (unspec:GPR [(match_operand:GPR          2 \"immediate_operand\" \"K\")] UNSPEC_ROUND)\n    (clobber (reg:CC CC_REGNUM))]\n    \"TARGET_Z196 && TARGET_HARD_FLOAT\n-    && (!TARGET_Z13 || <GPR:MODE>mode != DImode || <FP:MODE>mode != DFmode)\"\n+    && (!TARGET_VX || <GPR:MODE>mode != DImode || <FP:MODE>mode != DFmode)\"\n    \"cl<GPR:gf><FP:xde><FP:bt>r\\t%0,%h2,%1,0\"\n    [(set_attr \"op_type\" \"RRF\")\n     (set_attr \"type\"    \"ftoi\")])\n@@ -4738,7 +4738,7 @@\n         (fix:DI (match_operand:DF 1 \"register_operand\"  \"f,v\")))\n    (unspec:DI [(match_operand:DI  2 \"immediate_operand\" \"K,K\")] UNSPEC_ROUND)\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_Z13 && TARGET_HARD_FLOAT\"\n+  \"TARGET_VX && TARGET_HARD_FLOAT\"\n   \"@\n    cgdbr\\t%0,%h2,%1\n    wcgdb\\t%v0,%v1,0,%h2\"\n@@ -4846,7 +4846,7 @@\n (define_insn \"*floatunsdidf2_z13\"\n   [(set (match_operand:DF                    0 \"register_operand\" \"=f,v\")\n         (unsigned_float:DF (match_operand:DI 1 \"register_operand\"  \"d,v\")))]\n-  \"TARGET_Z13 && TARGET_HARD_FLOAT\"\n+  \"TARGET_VX && TARGET_HARD_FLOAT\"\n   \"@\n    cdlgbr\\t%0,0,%1,0\n    wcdlgb\\t%v0,%v1,0,0\"\n@@ -4950,7 +4950,7 @@\n (define_insn \"*extendsfdf2_z13\"\n   [(set (match_operand:DF                  0 \"register_operand\"     \"=f,f,v\")\n         (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\"  \"f,R,v\")))]\n-  \"TARGET_Z13 && TARGET_HARD_FLOAT\"\n+  \"TARGET_VX && TARGET_HARD_FLOAT\"\n   \"@\n    ldebr\\t%0,%1\n    ldeb\\t%0,%1"}]}