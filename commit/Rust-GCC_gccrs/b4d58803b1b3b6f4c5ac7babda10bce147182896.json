{"sha": "b4d58803b1b3b6f4c5ac7babda10bce147182896", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRkNTg4MDNiMWIzYjZmNGM1YWM3YmFiZGExMGJjZTE0NzE4Mjg5Ng==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2011-09-27T23:03:57Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-09-27T23:03:57Z"}, "message": "iq2000.md: Use match_test rather than eq/ne symbol_ref throughout file.\n\ngcc/\n\t* config/iq2000/iq2000.md: Use match_test rather than eq/ne symbol_ref\n\tthroughout file.\n\nFrom-SVN: r179296", "tree": {"sha": "571bcc7bd1583ee9ed9cd38573d32f1a27b114ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/571bcc7bd1583ee9ed9cd38573d32f1a27b114ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4d58803b1b3b6f4c5ac7babda10bce147182896", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d58803b1b3b6f4c5ac7babda10bce147182896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4d58803b1b3b6f4c5ac7babda10bce147182896", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d58803b1b3b6f4c5ac7babda10bce147182896/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88778f157626f3421f776c44cb290667d9fd30f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88778f157626f3421f776c44cb290667d9fd30f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88778f157626f3421f776c44cb290667d9fd30f5"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "2eb763107c242df0dbb8a80f94f2b4568055614d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d58803b1b3b6f4c5ac7babda10bce147182896/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d58803b1b3b6f4c5ac7babda10bce147182896/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4d58803b1b3b6f4c5ac7babda10bce147182896", "patch": "@@ -1,3 +1,8 @@\n+2011-09-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/iq2000/iq2000.md: Use match_test rather than eq/ne symbol_ref\n+\tthroughout file.\n+\n 2011-09-27  Sriraman Tallam  <tmsriram@google.com>\n \n \t* output.h (SECTION_EXCLUDE): New macro."}, {"sha": "51fbe22fbe2f5ef6f3c0c93ec6aa774797af24e6", "filename": "gcc/config/iq2000/iq2000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d58803b1b3b6f4c5ac7babda10bce147182896/gcc%2Fconfig%2Fiq2000%2Fiq2000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d58803b1b3b6f4c5ac7babda10bce147182896/gcc%2Fconfig%2Fiq2000%2Fiq2000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.md?ref=b4d58803b1b3b6f4c5ac7babda10bce147182896", "patch": "@@ -161,7 +161,7 @@\n \n (define_attr \"branch_likely\" \"no,yes\"\n   (const\n-   (if_then_else (ne (symbol_ref \"GENERATE_BRANCHLIKELY\") (const_int 0))\n+   (if_then_else (match_test \"GENERATE_BRANCHLIKELY\")\n \t\t (const_string \"yes\")\n \t\t (const_string \"no\"))))\n "}]}