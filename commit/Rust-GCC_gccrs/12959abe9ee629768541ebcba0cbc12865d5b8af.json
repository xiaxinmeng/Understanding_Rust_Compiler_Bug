{"sha": "12959abe9ee629768541ebcba0cbc12865d5b8af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI5NTlhYmU5ZWU2Mjk3Njg1NDFlYmNiYTBjYmMxMjg2NWQ1YjhhZg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2007-12-06T09:59:06Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2007-12-06T09:59:06Z"}, "message": "s390.c (s390_emit_stack_tie): New function.\n\n2007-12-06  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.c (s390_emit_stack_tie): New function.\n\t(s390_emit_prologue): Emit a stack tie when writing to the\n\tf8-f15 stack slots.\n\t* config/s390/s390.md (\"stack_tie\"): New insn definition.\n\nFrom-SVN: r130646", "tree": {"sha": "7155ceccabc37e24f862e71bd78b3d184028ef8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7155ceccabc37e24f862e71bd78b3d184028ef8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12959abe9ee629768541ebcba0cbc12865d5b8af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12959abe9ee629768541ebcba0cbc12865d5b8af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12959abe9ee629768541ebcba0cbc12865d5b8af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12959abe9ee629768541ebcba0cbc12865d5b8af/comments", "author": null, "committer": null, "parents": [{"sha": "28267cfcce273646cf39bca5401428cb53429481", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28267cfcce273646cf39bca5401428cb53429481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28267cfcce273646cf39bca5401428cb53429481"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "92d0b3b929940b0cbc004fab4d43bd89121e9aff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12959abe9ee629768541ebcba0cbc12865d5b8af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12959abe9ee629768541ebcba0cbc12865d5b8af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12959abe9ee629768541ebcba0cbc12865d5b8af", "patch": "@@ -1,3 +1,10 @@\n+2007-12-06  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_emit_stack_tie): New function.\n+\t(s390_emit_prologue): Emit a stack tie when writing to the\n+\tf8-f15 stack slots.\n+\t* config/s390/s390.md (\"stack_tie\"): New insn definition.\n+\n 2007-12-06  Ben Elliston  <bje@au.ibm.com>\n \n \t* SERVICE: Remove."}, {"sha": "c1c4668308185c03fd9919c4e6f58f38e775ddbb", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12959abe9ee629768541ebcba0cbc12865d5b8af/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12959abe9ee629768541ebcba0cbc12865d5b8af/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=12959abe9ee629768541ebcba0cbc12865d5b8af", "patch": "@@ -7162,6 +7162,18 @@ s390_load_got (void)\n   return insns;\n }\n \n+/* This ties together stack memory (MEM with an alias set of frame_alias_set)\n+   and the change to the stack pointer.  */\n+\n+static void\n+s390_emit_stack_tie (void)\n+{\n+  rtx mem = gen_frame_mem (BLKmode,\n+\t\t\t   gen_rtx_REG (Pmode, STACK_POINTER_REGNUM));\n+\n+  emit_insn (gen_stack_tie (mem));\n+}\n+\n /* Expand the prologue into a bunch of separate insns.  */\n \n void\n@@ -7390,6 +7402,11 @@ s390_emit_prologue (void)\n \n   if (cfun_save_high_fprs_p && next_fpr)\n     {\n+      /* If the stack might be accessed through a different register\n+\t we have to make sure that the stack pointer decrement is not\n+\t moved below the use of the stack slots.  */\n+      s390_emit_stack_tie ();\n+\n       insn = emit_insn (gen_add2_insn (temp_reg, \n \t\t\t\t       GEN_INT (cfun_frame_layout.f8_offset)));\n "}, {"sha": "670ae13b36b735800278fbf838e2b622ee70f72c", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12959abe9ee629768541ebcba0cbc12865d5b8af/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12959abe9ee629768541ebcba0cbc12865d5b8af/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=12959abe9ee629768541ebcba0cbc12865d5b8af", "patch": "@@ -61,6 +61,7 @@\n    (UNSPEC_CCU_TO_INT\t\t2)\n    (UNSPEC_CCZ_TO_INT\t\t3)\n    (UNSPEC_ICM\t\t\t10)\n+   (UNSPEC_TIE                  11)\n \n    ; GOT/PLT and lt-relative accesses\n    (UNSPEC_LTREL_OFFSET\t\t100)\n@@ -7971,3 +7972,13 @@\n   \"\"\n   \"clc\\t%O0(%G0,%R0),%S1\"\n   [(set_attr \"op_type\" \"SS\")])\n+\n+; This is used in s390_emit_prologue in order to prevent insns\n+; adjusting the stack pointer to be moved over insns writing stack\n+; slots using a copy of the stack pointer in a different register.\n+(define_insn \"stack_tie\"\n+  [(set (match_operand:BLK 0 \"memory_operand\" \"+m\")\n+        (unspec:BLK [(match_dup 0)] UNSPEC_TIE))]\n+  \"\"\n+  \"\"\n+  [(set_attr \"length\" \"0\")])"}]}