{"sha": "c2bf53a1ac67e9328302adce08c344e219662ccb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJiZjUzYTFhYzY3ZTkzMjgzMDJhZGNlMDhjMzQ0ZTIxOTY2MmNjYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-02-12T07:35:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-12T07:35:50Z"}, "message": "re PR c/60101 (Long compile times when mixed complex floating point datatypes are used in lengthy expressions)\n\n\tPR c/60101\n\t* c-common.c (merge_tlist): If copy is true, call new_tlist,\n\tif false, add ADD itself, rather than vice versa.\n\t(verify_tree): For COND_EXPR, don't call merge_tlist with non-zero\n\tcopy.  For SAVE_EXPR, only call merge_tlist once.\n\n\t* c-c++-common/pr60101.c: New test.\n\nFrom-SVN: r207711", "tree": {"sha": "814aabc92d62cb3e3ceccaf99172cbd6eefb1e47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/814aabc92d62cb3e3ceccaf99172cbd6eefb1e47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2bf53a1ac67e9328302adce08c344e219662ccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2bf53a1ac67e9328302adce08c344e219662ccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2bf53a1ac67e9328302adce08c344e219662ccb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2bf53a1ac67e9328302adce08c344e219662ccb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "87667d8b6e9d49788b6b335587400316c0d8c005", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87667d8b6e9d49788b6b335587400316c0d8c005", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87667d8b6e9d49788b6b335587400316c0d8c005"}], "stats": {"total": 136, "additions": 128, "deletions": 8}, "files": [{"sha": "78310d2349aed8763d7c8fa77464d07edb51047b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2bf53a1ac67e9328302adce08c344e219662ccb/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2bf53a1ac67e9328302adce08c344e219662ccb/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=c2bf53a1ac67e9328302adce08c344e219662ccb", "patch": "@@ -1,3 +1,11 @@\n+2014-02-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/60101\n+\t* c-common.c (merge_tlist): If copy is true, call new_tlist,\n+\tif false, add ADD itself, rather than vice versa.\n+\t(verify_tree): For COND_EXPR, don't call merge_tlist with non-zero\n+\tcopy.  For SAVE_EXPR, only call merge_tlist once.\n+\n 2014-02-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/60092"}, {"sha": "bfc57973f18798fb7897a1ec06d71a469af8e4bd", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2bf53a1ac67e9328302adce08c344e219662ccb/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2bf53a1ac67e9328302adce08c344e219662ccb/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=c2bf53a1ac67e9328302adce08c344e219662ccb", "patch": "@@ -2976,7 +2976,7 @@ merge_tlist (struct tlist **to, struct tlist *add, int copy)\n \t  }\n       if (!found)\n \t{\n-\t  *end = copy ? add : new_tlist (NULL, add->expr, add->writer);\n+\t  *end = copy ? new_tlist (NULL, add->expr, add->writer) : add;\n \t  end = &(*end)->next;\n \t  *end = 0;\n \t}\n@@ -3134,7 +3134,7 @@ verify_tree (tree x, struct tlist **pbefore_sp, struct tlist **pno_sp,\n       verify_tree (TREE_OPERAND (x, 0), &tmp_before, &tmp_list2, NULL_TREE);\n       warn_for_collisions (tmp_list2);\n       merge_tlist (pbefore_sp, tmp_before, 0);\n-      merge_tlist (pbefore_sp, tmp_list2, 1);\n+      merge_tlist (pbefore_sp, tmp_list2, 0);\n \n       tmp_list3 = tmp_nosp = 0;\n       verify_tree (TREE_OPERAND (x, 1), &tmp_list3, &tmp_nosp, NULL_TREE);\n@@ -3238,12 +3238,7 @@ verify_tree (tree x, struct tlist **pbefore_sp, struct tlist **pno_sp,\n \t    warn_for_collisions (tmp_nosp);\n \n \t    tmp_list3 = 0;\n-\t    while (tmp_nosp)\n-\t      {\n-\t\tstruct tlist *t = tmp_nosp;\n-\t\ttmp_nosp = t->next;\n-\t\tmerge_tlist (&tmp_list3, t, 0);\n-\t      }\n+\t    merge_tlist (&tmp_list3, tmp_nosp, 0);\n \t    t->cache_before_sp = tmp_before;\n \t    t->cache_after_sp = tmp_list3;\n \t  }"}, {"sha": "4ec552b5e50a0bf8517916e1e54f67e42ebda667", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2bf53a1ac67e9328302adce08c344e219662ccb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2bf53a1ac67e9328302adce08c344e219662ccb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c2bf53a1ac67e9328302adce08c344e219662ccb", "patch": "@@ -1,3 +1,8 @@\n+2014-02-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/60101\n+\t* c-c++-common/pr60101.c: New test.\n+\n 2014-02-11  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR lto/59468"}, {"sha": "b1634c49f024dfd1f88110b5d4ec1cfdd51fac8a", "filename": "gcc/testsuite/c-c++-common/pr60101.c", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2bf53a1ac67e9328302adce08c344e219662ccb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr60101.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2bf53a1ac67e9328302adce08c344e219662ccb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr60101.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr60101.c?ref=c2bf53a1ac67e9328302adce08c344e219662ccb", "patch": "@@ -0,0 +1,112 @@\n+/* PR c/60101 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wall\" } */\n+\n+extern int *a, b, *c, *d;\n+\n+void\n+foo (double _Complex *x, double _Complex *y, double _Complex *z, unsigned int l, int w)\n+{\n+  unsigned int e = (unsigned int) a[3];\n+  double _Complex (*v)[l][4][e][l][4] = (double _Complex (*)[l][4][e][l][4]) z;\n+  double _Complex (*f)[l][b][l] = (double _Complex (*)[l][b][l]) y;\n+  unsigned int g = c[0] * c[1] * c[2];\n+  unsigned int h = d[0] + c[0] * (d[1] + c[1] * d[2]);\n+  unsigned int i;\n+\n+  for (i = 0; i < e; i++)\n+    {\n+      int j = e * d[3] + i;\n+\n+      unsigned int n0, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11;\n+      float _Complex s = 0.;\n+      unsigned int t = 0;\n+\n+      for (n0 = 0; n0 < l; n0++)\n+\tfor (n1 = 0; n1 < l; n1++)\n+\t  for (n2 = 0; n2 < l; n2++)\n+\t    for (n3 = 0; n3 < l; n3++)\n+\t      for (n4 = 0; n4 < l; n4++)\n+\t\tfor (n5 = 0; n5 < l; n5++)\n+\t\t  for (n6 = 0; n6 < l; n6++)\n+\t\t    for (n7 = 0; n7 < l; n7++)\n+\t\t      for (n8 = 0; n8 < l; n8++)\n+\t\t\tfor (n9 = 0; n9 < l; n9++)\n+\t\t\t  for (n10 = 0; n10 < l; n10++)\n+\t\t\t    for (n11 = 0; n11 < l; n11++)\n+\t\t\t      {\n+\t\t\t\tif (t % g == h)\n+\t\t\t\t  s\n+\t\t\t\t    += f[n0][n4][j][n8] * f[n1][n5][j][n9] * ~(f[n2][n6][w][n10]) * ~(f[n3][n7][w][n11])\n+\t\t\t\t       * (+0.25 * v[0][n2][0][i][n9][1] * v[0][n3][0][i][n5][1] * v[0][n10][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n7][1][i][n8][0] * v[0][n11][1][i][n1][0] * v[0][n6][1][i][n0][0]\n+\t\t\t\t\t  + 0.25 * v[0][n2][0][i][n9][1] * v[0][n3][0][i][n5][1] * v[0][n10][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n6][1][i][n1][0] * v[0][n7][1][i][n0][0]\n+\t\t\t\t\t  - 0.5 * v[0][n2][0][i][n9][1] * v[0][n3][0][i][n5][1] * v[0][n10][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n7][1][i][n1][0] * v[0][n6][1][i][n0][0]\n+\t\t\t\t\t  + 0.25 * v[0][n2][0][i][n9][1] * v[0][n10][0][i][n5][1] * v[0][n3][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n7][1][i][n8][0] * v[0][n6][1][i][n1][0] * v[0][n11][1][i][n0][0]\n+\t\t\t\t\t  - 0.5 * v[0][n2][0][i][n9][1] * v[0][n10][0][i][n5][1] * v[0][n3][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n6][1][i][n1][0] * v[0][n7][1][i][n0][0]\n+\t\t\t\t\t  + 0.25 * v[0][n2][0][i][n9][1] * v[0][n10][0][i][n5][1] * v[0][n3][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n7][1][i][n1][0] * v[0][n6][1][i][n0][0]\n+\t\t\t\t\t  + 0.25 * v[0][n3][0][i][n9][1] * v[0][n2][0][i][n5][1] * v[0][n10][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n6][1][i][n8][0] * v[0][n11][1][i][n1][0] * v[0][n7][1][i][n0][0]\n+\t\t\t\t\t  - 0.5 * v[0][n3][0][i][n9][1] * v[0][n2][0][i][n5][1] * v[0][n10][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n6][1][i][n1][0] * v[0][n7][1][i][n0][0]\n+\t\t\t\t\t  + 0.25 * v[0][n3][0][i][n9][1] * v[0][n2][0][i][n5][1] * v[0][n10][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n7][1][i][n1][0] * v[0][n6][1][i][n0][0]\n+\t\t\t\t\t  + 0.25 * v[0][n3][0][i][n9][1] * v[0][n10][0][i][n5][1] * v[0][n2][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n6][1][i][n8][0] * v[0][n7][1][i][n1][0] * v[0][n11][1][i][n0][0]\n+\t\t\t\t\t  + 0.25 * v[0][n3][0][i][n9][1] * v[0][n10][0][i][n5][1] * v[0][n2][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n6][1][i][n1][0] * v[0][n7][1][i][n0][0]\n+\t\t\t\t\t  - 0.5 * v[0][n3][0][i][n9][1] * v[0][n10][0][i][n5][1] * v[0][n2][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n7][1][i][n1][0] * v[0][n6][1][i][n0][0]\n+\t\t\t\t\t  + 0.25 * v[0][n10][0][i][n9][1] * v[0][n2][0][i][n5][1] * v[0][n3][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n6][1][i][n8][0] * v[0][n7][1][i][n1][0] * v[0][n11][1][i][n0][0]\n+\t\t\t\t\t  - 0.5 * v[0][n10][0][i][n9][1] * v[0][n2][0][i][n5][1] * v[0][n3][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n6][1][i][n8][0] * v[0][n11][1][i][n1][0] * v[0][n7][1][i][n0][0]\n+\t\t\t\t\t  - 0.5 * v[0][n10][0][i][n9][1] * v[0][n2][0][i][n5][1] * v[0][n3][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n7][1][i][n8][0] * v[0][n6][1][i][n1][0] * v[0][n11][1][i][n0][0]\n+\t\t\t\t\t  + 0.25 * v[0][n10][0][i][n9][1] * v[0][n2][0][i][n5][1] * v[0][n3][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n7][1][i][n8][0] * v[0][n11][1][i][n1][0] * v[0][n6][1][i][n0][0]\n+\t\t\t\t\t  + 1. * v[0][n10][0][i][n9][1] * v[0][n2][0][i][n5][1] * v[0][n3][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n6][1][i][n1][0] * v[0][n7][1][i][n0][0]\n+\t\t\t\t\t  - 0.5 * v[0][n10][0][i][n9][1] * v[0][n2][0][i][n5][1] * v[0][n3][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n7][1][i][n1][0] * v[0][n6][1][i][n0][0]\n+\t\t\t\t\t  - 0.5 * v[0][n10][0][i][n9][1] * v[0][n3][0][i][n5][1] * v[0][n2][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n6][1][i][n8][0] * v[0][n7][1][i][n1][0] * v[0][n11][1][i][n0][0]\n+\t\t\t\t\t  + 0.25 * v[0][n10][0][i][n9][1] * v[0][n3][0][i][n5][1] * v[0][n2][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n6][1][i][n8][0] * v[0][n11][1][i][n1][0] * v[0][n7][1][i][n0][0]\n+\t\t\t\t\t  + 0.25 * v[0][n10][0][i][n9][1] * v[0][n3][0][i][n5][1] * v[0][n2][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n7][1][i][n8][0] * v[0][n6][1][i][n1][0] * v[0][n11][1][i][n0][0]\n+\t\t\t\t\t  - 0.5 * v[0][n10][0][i][n9][1] * v[0][n3][0][i][n5][1] * v[0][n2][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n7][1][i][n8][0] * v[0][n11][1][i][n1][0] * v[0][n6][1][i][n0][0]\n+\t\t\t\t\t  - 0.5 * v[0][n10][0][i][n9][1] * v[0][n3][0][i][n5][1] * v[0][n2][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n6][1][i][n1][0] * v[0][n7][1][i][n0][0]\n+\t\t\t\t\t  + 1. * v[0][n10][0][i][n9][1] * v[0][n3][0][i][n5][1] * v[0][n2][0][i][n4][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n7][1][i][n1][0] * v[0][n6][1][i][n0][0]\n+\t\t\t\t\t  + 0.5 * v[0][n6][1][i][n4][1] * v[0][n2][0][i][n9][1] * v[0][n3][0][i][n5][1]\n+\t\t\t\t\t  * v[0][n7][1][i][n1][0] * v[0][n11][1][i][n0][0] * v[0][n10][0][i][n8][0]\n+\t\t\t\t\t  - 0.25 * v[0][n6][1][i][n4][1] * v[0][n2][0][i][n9][1] * v[0][n3][0][i][n5][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n1][0] * v[0][n7][1][i][n0][0] * v[0][n10][0][i][n8][0]\n+\t\t\t\t\t  - 0.25 * v[0][n6][1][i][n4][1] * v[0][n2][0][i][n9][1] * v[0][n3][0][i][n5][1]\n+\t\t\t\t\t  * v[0][n7][1][i][n8][0] * v[0][n11][1][i][n0][0] * v[0][n10][0][i][n1][0]\n+\t\t\t\t\t  + 0.25 * v[0][n6][1][i][n4][1] * v[0][n2][0][i][n9][1] * v[0][n3][0][i][n5][1]\n+\t\t\t\t\t  * v[0][n7][1][i][n8][0] * v[0][n11][1][i][n1][0] * v[0][n10][0][i][n0][0]\n+\t\t\t\t\t  + 0.25 * v[0][n6][1][i][n4][1] * v[0][n2][0][i][n9][1] * v[0][n3][0][i][n5][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n7][1][i][n0][0] * v[0][n10][0][i][n1][0]\n+\t\t\t\t\t  - 0.5 * v[0][n6][1][i][n4][1] * v[0][n2][0][i][n9][1] * v[0][n3][0][i][n5][1]\n+\t\t\t\t\t  * v[0][n11][1][i][n8][0] * v[0][n7][1][i][n1][0] * v[0][n10][0][i][n0][0]\n+\t\t\t\t\t  - 0.25 * v[0][n6][1][i][n4][1] * v[0][n2][0][i][n9][1] * v[0][n10][0][i][n5][1]\n+\t\t\t\t\t  * v[0][n7][1][i][n1][0] * v[0][n11][1][i][n0][0] * v[0][n3][0][i][n8][0]\n+\t\t\t\t\t  - 0.25 * v[0][n6][1][i][n4][1] * v[0][n2][0][i][n9][1] * v[0][n10][0][i][n5][1]\n+\t\t\t\t\t  * v[0][n7][1][i][n8][0] * v[0][n11][1][i][n0][0] * v[0][n3][0][i][n1][0]);\n+\t\t\t\tt++;\n+\t\t\t      }\n+      int u = (j - w + b) % b;\n+      int q = (j >= w ? +1 : -1);\n+      int r = q;\n+      x[u] += r * s;\n+    }\n+}"}]}