{"sha": "7cfa044d991a2622ca82c92b042ca06824994acd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NmYTA0NGQ5OTFhMjYyMmNhODJjOTJiMDQyY2EwNjgyNDk5NGFjZA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-01-31T20:22:43Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-01-31T20:22:43Z"}, "message": "Prevent ICEs due to bogus substring locations (PR preprocessor/79210)\n\ngcc/ChangeLog:\n\tPR preprocessor/79210\n\t* input.c (get_substring_ranges_for_loc): Replace line_width\n\tassertion with error-handling.\n\ngcc/testsuite/ChangeLog:\n\tPR preprocessor/79210\n\t* gcc.dg/format/pr79210.c: New test case.\n\t* gcc.dg/plugin/diagnostic-test-string-literals-2.c (test_pr79210):\n\tNew function.\n\nFrom-SVN: r245070", "tree": {"sha": "08067378539cdf2cf09a589aa4ac65142975bfdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08067378539cdf2cf09a589aa4ac65142975bfdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cfa044d991a2622ca82c92b042ca06824994acd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cfa044d991a2622ca82c92b042ca06824994acd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cfa044d991a2622ca82c92b042ca06824994acd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cfa044d991a2622ca82c92b042ca06824994acd/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ae37bdfce3f433ff51af4d614d9271abb25671f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae37bdfce3f433ff51af4d614d9271abb25671f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ae37bdfce3f433ff51af4d614d9271abb25671f"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "a264140a3f9e0e706e66290d67acbf3f27046880", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfa044d991a2622ca82c92b042ca06824994acd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfa044d991a2622ca82c92b042ca06824994acd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7cfa044d991a2622ca82c92b042ca06824994acd", "patch": "@@ -1,3 +1,9 @@\n+2017-01-31  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR preprocessor/79210\n+\t* input.c (get_substring_ranges_for_loc): Replace line_width\n+\tassertion with error-handling.\n+\n 2017-01-31  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77318"}, {"sha": "38deb62db216f9f5c52248525ee18e1f0c32c2fa", "filename": "gcc/input.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfa044d991a2622ca82c92b042ca06824994acd/gcc%2Finput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfa044d991a2622ca82c92b042ca06824994acd/gcc%2Finput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.c?ref=7cfa044d991a2622ca82c92b042ca06824994acd", "patch": "@@ -1395,7 +1395,10 @@ get_substring_ranges_for_loc (cpp_reader *pfile,\n       const char *literal = line + start.column - 1;\n       int literal_length = finish.column - start.column + 1;\n \n-      gcc_assert (line_width >= (start.column - 1 + literal_length));\n+      /* Ensure that we don't crash if we got the wrong location.  */\n+      if (line_width < (start.column - 1 + literal_length))\n+\treturn \"line is not wide enough\";\n+\n       cpp_string from;\n       from.len = literal_length;\n       /* Make a copy of the literal, to avoid having to rely on"}, {"sha": "f7cf0f489a2e0cab16ebb3b7765ea292494066ea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfa044d991a2622ca82c92b042ca06824994acd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfa044d991a2622ca82c92b042ca06824994acd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7cfa044d991a2622ca82c92b042ca06824994acd", "patch": "@@ -1,3 +1,10 @@\n+2017-01-31  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR preprocessor/79210\n+\t* gcc.dg/format/pr79210.c: New test case.\n+\t* gcc.dg/plugin/diagnostic-test-string-literals-2.c (test_pr79210):\n+\tNew function.\n+\n 2017-01-31  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/79290"}, {"sha": "71f5dd6e0828fb1231454c9b2b55f9147aeaa55a", "filename": "gcc/testsuite/gcc.dg/format/pr79210.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfa044d991a2622ca82c92b042ca06824994acd/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fpr79210.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfa044d991a2622ca82c92b042ca06824994acd/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fpr79210.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fpr79210.c?ref=7cfa044d991a2622ca82c92b042ca06824994acd", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wformat -Wformat-signedness\" } */\n+\n+__attribute__((format(printf, 3, 4)))\n+void dev_printk(const char *level, void *dev, const char *fmt, ...);\n+\n+#define lpfc_vport_param_init(attr)\t\\\n+void lpfc_##attr##_init(void *vport, unsigned int val) \\\n+{ \\\n+\tdev_printk(\"3\", (void *)0, \\\n+\t\t   \"0423 lpfc_\"#attr\" attribute cannot be set to %d, \"\\\n+\t\t   \"allowed range is [0, 1]\\n\", val); \\\n+}\n+\n+#define LPFC_VPORT_ATTR_R(name, desc) \\\n+unsigned int lpfc_##name;\\\n+lpfc_vport_param_init(name)\\\n+\n+LPFC_VPORT_ATTR_R(peer_port_login,\n+\t\t  \"Allow peer ports on the same physical port to login to each \"\n+\t\t  \"other.\");\n+\n+/* { dg-warning \"6: format .%d. expects argument of type .int., but argument 4 has type .unsigned int. \" \"\" { target *-*-* } .-12 } */"}, {"sha": "e916b93bb5df528a00b04f634d6b2e97bc3c3205", "filename": "gcc/testsuite/gcc.dg/plugin/diagnostic-test-string-literals-2.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfa044d991a2622ca82c92b042ca06824994acd/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-string-literals-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfa044d991a2622ca82c92b042ca06824994acd/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-string-literals-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-string-literals-2.c?ref=7cfa044d991a2622ca82c92b042ca06824994acd", "patch": "@@ -51,3 +51,26 @@ test_stringified_token_3 (int x)\n #undef FOO\n }\n \n+/* Test of a stringified macro argument within a concatenation.  */\n+\n+void\n+test_pr79210 (void)\n+{\n+#define lpfc_vport_param_init(attr)    \\\n+       __emit_string_literal_range ( \\\n+                  \"0423 lpfc_\"#attr\" attribute cannot be set to %d, \"\\\n+                  \"allowed range is [0, 1]\\n\", 54, 53, 54) \\\n+\n+#define LPFC_VPORT_ATTR_R(name, decc)\t\t\\\n+  unsigned int lpfc_##name;\t\t\t\\\n+  lpfc_vport_param_init(name) \\\n+\n+  LPFC_VPORT_ATTR_R(peer_port_login,\n+  \"some multiline blurb with a short final line \"\n+  \"here\");\n+\n+  /* { dg-error \"19: unable to read substring location: line is not wide enough\" \"\" { target *-*-* } .-11 } */\n+\n+#undef LPFC_VPORT_ATTR_R\n+#undef lpfc_vport_param_init\n+}"}]}