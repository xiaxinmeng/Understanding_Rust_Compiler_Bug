{"sha": "3ce6c715378c93b5ec390b5e8f0732fa93ad9fc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NlNmM3MTUzNzhjOTNiNWVjMzkwYjVlOGYwNzMyZmE5M2FkOWZjOA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-05-27T18:33:57Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-05-27T18:33:57Z"}, "message": "stmt.c (dump_case_nodes): Don't convert values to HOST_WIDE_INT before printing.\n\n\t* stmt.c (dump_case_nodes): Don't convert values to HOST_WIDE_INT\n\tbefore printing.\n\nFrom-SVN: r210978", "tree": {"sha": "5780924641d85be7edf5ba40f7cc572ddb72f913", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5780924641d85be7edf5ba40f7cc572ddb72f913"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ce6c715378c93b5ec390b5e8f0732fa93ad9fc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ce6c715378c93b5ec390b5e8f0732fa93ad9fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ce6c715378c93b5ec390b5e8f0732fa93ad9fc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ce6c715378c93b5ec390b5e8f0732fa93ad9fc8/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "112372291ba760f2f51576e28f8c59a2a89fad61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/112372291ba760f2f51576e28f8c59a2a89fad61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/112372291ba760f2f51576e28f8c59a2a89fad61"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "5d322f080b2175b9c788e0eceaa8dab5b9cd839b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ce6c715378c93b5ec390b5e8f0732fa93ad9fc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ce6c715378c93b5ec390b5e8f0732fa93ad9fc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ce6c715378c93b5ec390b5e8f0732fa93ad9fc8", "patch": "@@ -1,3 +1,8 @@\n+2014-05-27  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* stmt.c (dump_case_nodes): Don't convert values to HOST_WIDE_INT\n+\tbefore printing.\n+\n 2014-05-27  Steve Ellcey  <sellcey@mips.com>\n \n \t* config/mips/mips.c: Add include of cgraph.h."}, {"sha": "722d34f54efc9236360cd88be606253ffb6155cf", "filename": "gcc/stmt.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ce6c715378c93b5ec390b5e8f0732fa93ad9fc8/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ce6c715378c93b5ec390b5e8f0732fa93ad9fc8/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=3ce6c715378c93b5ec390b5e8f0732fa93ad9fc8", "patch": "@@ -774,24 +774,20 @@ static void\n dump_case_nodes (FILE *f, struct case_node *root,\n \t\t int indent_step, int indent_level)\n {\n-  HOST_WIDE_INT low, high;\n-\n   if (root == 0)\n     return;\n   indent_level++;\n \n   dump_case_nodes (f, root->left, indent_step, indent_level);\n \n-  low = tree_to_shwi (root->low);\n-  high = tree_to_shwi (root->high);\n-\n   fputs (\";; \", f);\n-  if (high == low)\n-    fprintf (f, \"%*s\" HOST_WIDE_INT_PRINT_DEC,\n-\t     indent_step * indent_level, \"\", low);\n-  else\n-    fprintf (f, \"%*s\" HOST_WIDE_INT_PRINT_DEC \" ... \" HOST_WIDE_INT_PRINT_DEC,\n-\t     indent_step * indent_level, \"\", low, high);\n+  fprintf (f, \"%*s\", indent_step * indent_level, \"\");\n+  print_dec (root->low, f, TYPE_SIGN (TREE_TYPE (root->low)));\n+  if (!tree_int_cst_equal (root->low, root->high))\n+    {\n+      fprintf (f, \" ... \");\n+      print_dec (root->high, f, TYPE_SIGN (TREE_TYPE (root->high)));\n+    }\n   fputs (\"\\n\", f);\n \n   dump_case_nodes (f, root->right, indent_step, indent_level);"}]}