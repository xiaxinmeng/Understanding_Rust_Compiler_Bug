{"sha": "937f7f69bc169cfa47c929911ddb396f76b349ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM3ZjdmNjliYzE2OWNmYTQ3YzkyOTkxMWRkYjM5NmY3NmIzNDlhYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-10-08T00:50:24Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-10-08T00:50:24Z"}, "message": "* lto.c (lto_balanced_map): Fix accounting of program size.\n\nFrom-SVN: r165145", "tree": {"sha": "f781f5633eb83ef53a309e2e07f5fb611dab1ed8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f781f5633eb83ef53a309e2e07f5fb611dab1ed8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/937f7f69bc169cfa47c929911ddb396f76b349ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/937f7f69bc169cfa47c929911ddb396f76b349ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/937f7f69bc169cfa47c929911ddb396f76b349ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/937f7f69bc169cfa47c929911ddb396f76b349ac/comments", "author": null, "committer": null, "parents": [{"sha": "1b3fad81562943d8e5b35b7196907e6296e91a77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b3fad81562943d8e5b35b7196907e6296e91a77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b3fad81562943d8e5b35b7196907e6296e91a77"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "ea393ba6a38d840b87a3de94d82e8501eb813a91", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/937f7f69bc169cfa47c929911ddb396f76b349ac/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/937f7f69bc169cfa47c929911ddb396f76b349ac/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=937f7f69bc169cfa47c929911ddb396f76b349ac", "patch": "@@ -1,3 +1,7 @@\n+2010-10-06  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto.c (lto_balanced_map): Fix accounting of program size.\n+\n 2010-10-06  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (lto_balanced_map): Do not produce empty partitions."}, {"sha": "3baea802a1ee08cd5f7cd503b6acfb29051f2e46", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/937f7f69bc169cfa47c929911ddb396f76b349ac/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/937f7f69bc169cfa47c929911ddb396f76b349ac/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=937f7f69bc169cfa47c929911ddb396f76b349ac", "patch": "@@ -995,7 +995,7 @@ lto_balanced_map (void)\n   struct cgraph_node **order = XNEWVEC (struct cgraph_node *, cgraph_max_uid);\n   int i, postorder_len;\n   struct cgraph_node *node;\n-  int total_size = 0;\n+  int total_size = 0, best_total_size = 0;\n   int partition_size;\n   ltrans_partition partition;\n   unsigned int last_visited_cgraph_node = 0, last_visited_varpool_node = 0;\n@@ -1017,7 +1017,7 @@ lto_balanced_map (void)\n       if (partition_cgraph_node_p (node))\n \t{\n \t  order[n_nodes++] = node;\n-          total_size += node->local.inline_summary.self_size;\n+          total_size += node->global.size;\n \t}\n     }\n   free (postorder);\n@@ -1035,6 +1035,7 @@ lto_balanced_map (void)\n   for (i = 0; i < n_nodes; i++)\n     {\n       add_cgraph_node_to_partition (partition, order[i]);\n+      total_size -= order[i]->global.size;\n \n       /* Once we added a new node to the partition, we also want to add\n          all referenced variables unless they was already added into some\n@@ -1069,7 +1070,6 @@ lto_balanced_map (void)\n \t\t\t\tlast_visited_cgraph_node);\n \t      refs = &node->ref_list;\n \n-\t      total_size -= node->local.inline_summary.self_size;\n \t      last_visited_cgraph_node++;\n \n \t      gcc_assert (node->analyzed);\n@@ -1195,6 +1195,7 @@ lto_balanced_map (void)\n \t\t\t\t     partition->cgraph_set->nodes);\n \t  best_n_varpool_nodes = VEC_length (varpool_node_ptr,\n \t\t\t\t\t     partition->varpool_set->nodes);\n+\t  best_total_size = total_size;\n \t}\n       if (cgraph_dump_file)\n \tfprintf (cgraph_dump_file, \"Step %i: added %s, size %i, cost %i/%i best %i/%i, step %i\\n\", i,\n@@ -1218,6 +1219,7 @@ lto_balanced_map (void)\n \t  partition = new_partition (\"\");\n \t  last_visited_cgraph_node = 0;\n \t  last_visited_varpool_node = 0;\n+\t  total_size = best_total_size;\n \t  cost = 0;\n \n \t  if (cgraph_dump_file)"}]}