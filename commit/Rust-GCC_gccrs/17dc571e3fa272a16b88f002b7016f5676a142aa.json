{"sha": "17dc571e3fa272a16b88f002b7016f5676a142aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdkYzU3MWUzZmEyNzJhMTZiODhmMDAyYjcwMTZmNTY3NmExNDJhYQ==", "commit": {"author": {"name": "Balaji V. Iyer", "email": "balaji.v.iyer@intel.com", "date": "2013-05-31T12:55:02Z"}, "committer": {"name": "Balaji V. Iyer", "email": "bviyer@gcc.gnu.org", "date": "2013-05-31T12:55:02Z"}, "message": "re PR c/57452 (FAIL: c-c++-common/cilk-plus/AN/if_test.c)\n\n2013-05-31  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n\n\tPR c/57452\n\t* c-c++-common/cilk-plus/AN/if_test.c: Fixed out of bounds issue in\n\ttest-case.\n\nFrom-SVN: r199537", "tree": {"sha": "8c2ae8f23d50359eb6abefa438fe5abc364f8e66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c2ae8f23d50359eb6abefa438fe5abc364f8e66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17dc571e3fa272a16b88f002b7016f5676a142aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17dc571e3fa272a16b88f002b7016f5676a142aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17dc571e3fa272a16b88f002b7016f5676a142aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17dc571e3fa272a16b88f002b7016f5676a142aa/comments", "author": null, "committer": null, "parents": [{"sha": "6ed17438b36389578af34515da906ab18422884d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ed17438b36389578af34515da906ab18422884d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ed17438b36389578af34515da906ab18422884d"}], "stats": {"total": 160, "additions": 114, "deletions": 46}, "files": [{"sha": "b8137c30e7565db81d4579a2fb9b93c6855c945e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dc571e3fa272a16b88f002b7016f5676a142aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dc571e3fa272a16b88f002b7016f5676a142aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17dc571e3fa272a16b88f002b7016f5676a142aa", "patch": "@@ -1,3 +1,9 @@\n+2013-05-31  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+\tPR c/57452\n+\t* c-c++-common/cilk-plus/AN/if_test.c: Fixed out of bounds issue in\n+\ttest-case.\n+\n 2013-05-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.dg/shrink-wrap-alloca.c: Use __builtin_alloca."}, {"sha": "53ceeecb75d18b0f6ee0f012e373fbb1c1fd903b", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/if_test.c", "status": "modified", "additions": 108, "deletions": 46, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dc571e3fa272a16b88f002b7016f5676a142aa/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fif_test.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dc571e3fa272a16b88f002b7016f5676a142aa/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fif_test.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fif_test.c?ref=17dc571e3fa272a16b88f002b7016f5676a142aa", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do run } */\n /* { dg-options \"-fcilkplus\" } */\n \n+#if HAVE_IO\n+#include <stdio.h>\n+#endif\n #include <stdlib.h>\n int main2 (int argc, char **argv);\n int main(int argc, char **argv)\n@@ -23,8 +26,9 @@ int main(int argc, char **argv)\n int main2 (int argc, char **argv)\n {\n   int x = 3, y, z, array[10], array2[10], TwodArray[10][10], jj,kk,ll ;\n-  int array2_check[10];\n-  int FourDArray[10][10][10][10];\n+  int array2_check[10], array2d_check[10][10], array2d[10][10];\n+  int FourDArray[10][10][10][10], array4[10][10][10][10];\n+  int array4_check[10][10][10][10];\n   int ii = 0; \n \n   for (ii = 0; ii < 10; ii++)\n@@ -71,10 +75,6 @@ int main2 (int argc, char **argv)\n     if (array2_check[ii] != array2[ii])\n       return 3;\n   \n-\n-      \n-       \n-\n   x = atoi (argv[1])-10;\n   y = atoi (argv[1])/2;\n   z = (atoi (argv[1]))/5;\n@@ -110,14 +110,16 @@ int main2 (int argc, char **argv)\n     if (array2_check[ii] != array2[ii])\n       return 4;\n \n-  for (ii = 0; ii < 10; ii++)\n+  for (ii = 0; ii < 10; ii++) {\n     array2[ii] = 10;\n+    array2_check[ii] = 10;\n+  }\n \n   /* This if loop will change all the 10's to 5's */\n-  if (array[atoi(argv[1])-10:atoi(argv[1]): atoi(argv[1])/5])\n-    array2[:] = 5;\n+  if (array[atoi(argv[1])-10:atoi(argv[1])/2: atoi(argv[1])/5])\n+    array2[atoi(argv[1])-10: atoi (argv[1])/2: atoi(argv[1])/5] = 5;\n   else\n-    array2[:] = 10;\n+    array2[atoi(argv[1])-10: atoi (argv[1])/2: atoi(argv[1])/5] = 10;\n \n   for (ii = atoi(argv[1])-10; ii < atoi(argv[1]) + (atoi (argv[1])-10);\n        ii +=atoi(argv[1])/5)\n@@ -127,39 +129,53 @@ int main2 (int argc, char **argv)\n       array2_check[ii] = 10;\n \n   for (ii = 0; ii < 10; ii++)\n-    if (array2_check[ii] != array2[ii])\n+    if (array2_check[ii] != array2[ii]) {\n+#if HAVE_IO\n+      printf(\"array2[%2d] = %2d array2_check[%2d] = %2d\\n\", ii, array2[ii],\n+\t     ii, array2_check[ii]);\n+#endif\n       return 5;\n- \n+    }\n \n   for (ii = 0; ii < 10; ii++)\n     for (jj = 0; jj < 10; jj++)\n       TwodArray[ii][jj] = atoi(argv[1]);\n \n \n   for (ii = 0; ii < 10; ii++)\n-    {\n-      array2[ii] = 10;\n-      array2_check[ii] = 10;\n+    for (ii = 0; ii < 10; ii++) {\n+      array2d[ii][jj] = 10;\n+      array2d_check[ii][jj] = 10;\n     }\n \n   /* atoi(argv[1]) == 10, so it will convert all 10's to 5's */\n   if (TwodArray[:][:] != 10) \n-    array2[:] = 10; \n+    array2d[:][:] = 10; \n   else\n-    array2[:] = 5;\n+    array2d[:][:] = 5;\n \n   for (ii = 0; ii < 10; ii++) {\n     for (jj = 0; jj < 10; jj++) {\n       if (TwodArray[ii][jj] != 10)\n-\tarray2_check[ii] = 10;\n+\tarray2d_check[ii][jj] = 10;\n+      else\n+\tarray2d_check[ii][jj] = 5;\n     }\n   }\n \n   for (ii = 0; ii < 10; ii++)\n-    {\n-      array2[ii] = 10;\n-      array2_check[ii] = 10;\n-    }\n+    for (jj = 0; jj < 10; jj++)\n+      if (array2d[ii][jj] != array2d_check[ii][jj])\n+\treturn 6;\n+\n+  for (ii = 0; ii < 10; ii++)\n+    for (jj = 0; jj < 10; jj++)\n+      for (kk = 0; kk < 10; kk++)\n+\tfor (ll = 0; ll < 10; ll++)\n+\t  {\n+\t    array4[ii][jj][kk][ll] = 10;\n+\t    array4_check[ii][jj][kk][ll] = 10;\n+\t  }\n \n   for (ii = 0; ii < 10; ii++)\n     for (jj = 0; jj < 10; jj++)\n@@ -169,26 +185,38 @@ int main2 (int argc, char **argv)\n   \n   /* atoi(argv[1]) == 10, so it will convert all 10's to 5's */\n   if (FourDArray[:][:][:][:] != 10) \n-    array2[:] = 10; \n+    array4[:][:][:][:] = 10; \n   else\n-    array2[:] = 5;\n+    array4[:][:][:][:] = 5;\n \n   for (ii = 0; ii < 10; ii++) {\n     for (jj = 0; jj < 10; jj++) {\n       for (kk = 0; kk < 10; kk++) {\n \tfor (ll = 0; ll < 10; ll++) {\n \t  if (FourDArray[ii][jj][kk][ll] != 10)\n-\t    array2_check[ii] = 10;\n+\t    array4_check[ii][jj][kk][ll] = 10;\n+\t  else\n+\t    array4_check[ii][jj][kk][ll] = 5;\n \t}\n       }\n     }\n   }\n-  \n+\n   for (ii = 0; ii < 10; ii++)\n-    {\n-      array2[ii] = 10;\n-      array2_check[ii] = 10;\n-    }\n+    for (jj = 0; jj < 10; jj++)\n+      for (kk = 0; kk < 10; kk++)\n+\tfor (ll = 0; ll < 10; ll++)\n+\t  if (array4_check[ii][jj][kk][ll] != array4[ii][jj][kk][ll])\n+\t    return 7;\n+\n+  for (ii = 0; ii < 10; ii++)\n+    for (jj = 0; jj < 10; jj++)\n+      for (kk = 0; kk < 10; kk++)\n+\tfor (ll = 0; ll < 10; ll++)\n+\t  {\n+\t    array4[ii][jj][kk][ll] = 10;\n+\t    array4_check[ii][jj][kk][ll] = 10;\n+\t  }\n \n   for (ii = 0; ii < 10; ii++)\n     for (jj = 0; jj < 10; jj++)\n@@ -197,54 +225,88 @@ int main2 (int argc, char **argv)\n \t  FourDArray[ii][jj][kk][ll] = atoi(argv[1]);\n   \n   /* atoi(argv[1]) == 10, so it will convert all 10's to 5's */\n-  if (FourDArray[0:10:1][0:5:2][9:10:-1][x:y:z] != 10) \n-    array2[:] = 10; \n+  if (FourDArray[0:10:1][0:5:2][9:10:-1][0:5:2] != 10) \n+    array4[0:10:1][0:5:2][9:10:-1][0:5:2] = 10; \n   else\n-    array2[:] = 5;\n+    array4[0:10:1][0:5:2][9:10:-1][0:5:2] = 5;\n \n   for (ii = 0; ii < 10; ii++) {\n     for (jj = 0; jj < 10; jj += 2) {\n       for (kk = 9; kk >= 0; kk--) {\n-\tfor (ll = x; ll < 10; ll = ll += z) {\n+\tfor (ll = 0; ll < 10; ll += 2) {\n \t  if (FourDArray[ii][jj][kk][ll] != 10)\n-\t    array2_check[ii] = 10;\n+\t    array4_check[ii][jj][kk][ll] = 10;\n \t  else\n-\t    array2_check[ii] = 5;\n+\t    array4_check[ii][jj][kk][ll] = 5;\n \t}\n       }\n     }\n   }\n \n   for (ii = 0; ii < 10; ii++)\n-    {\n-      array2[ii] = 10;\n-      array2_check[ii] = 10;\n-    }\n-\n+    for (jj = 0; jj < 10; jj++)\n+      for (kk = 0; kk < 10; kk++)\n+\tfor (ll = 0; ll < 10; ll++)\n+\t  if (array4_check[ii][jj][kk][ll] != array4[ii][jj][kk][ll]) {\n+#if HAVE_IO\n+\t      printf(\"array4_check[%d][%d][%d][%d] = %d\\n\",ii, jj, kk, ll,\n+\t\t     array4_check[ii][jj][kk][ll]);\n+\t      printf(\"array4[%d][%d][%d][%d] = %d\\n\",ii, jj, kk, ll,\n+\t\t     array4[ii][jj][kk][ll]);\n+#endif\n+\t    return 8;\n+\t  }\n+  \n   for (ii = 0; ii < 10; ii++)\n     for (jj = 0; jj < 10; jj++)\n       for (kk = 0; kk < 10; kk++)\n \tfor (ll = 0; ll < 10; ll++) \n \t  FourDArray[ii][jj][kk][ll] = atoi(argv[1]);\n+\n+  for (ii = 0; ii < 10; ii++)\n+    for (jj = 0; jj < 10; jj++)\n+      for (kk = 0; kk < 10; kk++)\n+\tfor (ll = 0; ll < 10; ll++)\n+\t  {\n+\t    array4[ii][jj][kk][ll] = 10;\n+\t    array4_check[ii][jj][kk][ll] = 10;\n+\t  }\n+\n   \n   /* atoi(argv[1]) == 10, so it will convert all 10's to 5's */\n   if (FourDArray[0:10:1][0:5:2][9:10:-1][x:y:z] +\n       FourDArray[0:10:1][0:5:2][9:-10:1][x:y:z]  != 20) \n-    array2[:] = 10; \n+    array4[0:10:1][0:5:2][9:10:-1][x:y:z] = 10; \n   else\n-    array2[:] = 5;\n+    array4[0:10][0:5:2][9:10:-1][x:y:z] = 5;\n \n   for (ii = 0; ii < 10; ii++) {\n     for (jj = 0; jj < 10; jj += 2) {\n       for (kk = 9; kk >= 0; kk--) {\n-\tfor (ll = x; ll < 10; ll = ll += z) {\n+\tfor (ll = 0; ll < 10; ll += 2) {\n \t  if (FourDArray[ii][jj][kk][ll] != 10)\n-\t    array2_check[ii] = 10;\n+\t    array4_check[ii][jj][kk][ll] = 10;\n \t  else\n-\t    array2_check[ii] = 5;\n+\t    array4_check[ii][jj][kk][ll] = 5;\n \t}\n       }\n     }\n   }\n+\n+  for (ii = 0; ii < 10; ii++)\n+    for (jj = 0; jj < 10; jj++)\n+      for (kk = 0; kk < 10; kk++)\n+\tfor (ll = 0; ll < 10; ll++)\n+\t  if (array4_check[ii][jj][kk][ll] != array4[ii][jj][kk][ll]) {\n+#if HAVE_IO\n+\t      printf(\"array4_check[%d][%d][%d][%d] = %d\\n\",ii, jj, kk, ll,\n+\t\t     array4_check[ii][jj][kk][ll]);\n+\t      printf(\"array4[%d][%d][%d][%d] = %d\\n\",ii, jj, kk, ll,\n+\t\t     array4[ii][jj][kk][ll]);\n+#endif\n+\t    return 9; \n+\t  }\n+\n+  \n   return 0;\n }"}]}