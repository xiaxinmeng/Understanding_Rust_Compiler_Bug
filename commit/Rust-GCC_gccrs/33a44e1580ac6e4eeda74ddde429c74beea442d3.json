{"sha": "33a44e1580ac6e4eeda74ddde429c74beea442d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNhNDRlMTU4MGFjNmU0ZWVkYTc0ZGRkZTQyOWM3NGJlZWE0NDJkMw==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@linux.vnet.ibm.com", "date": "2016-09-24T18:14:21Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@gcc.gnu.org", "date": "2016-09-24T18:14:21Z"}, "message": "rs6000.c (expand_block_compare, [...]): Change TARGET_LITTLE_ENDIAN to !BYTES_BIG_ENDIAN.\n\n2016-09-24  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.c (expand_block_compare, do_load_for_compare):\n\tChange TARGET_LITTLE_ENDIAN to !BYTES_BIG_ENDIAN.\n\nFrom-SVN: r240466", "tree": {"sha": "0d5a07926dee5425c784e8bbeec3167824104220", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d5a07926dee5425c784e8bbeec3167824104220"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33a44e1580ac6e4eeda74ddde429c74beea442d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a44e1580ac6e4eeda74ddde429c74beea442d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a44e1580ac6e4eeda74ddde429c74beea442d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a44e1580ac6e4eeda74ddde429c74beea442d3/comments", "author": null, "committer": null, "parents": [{"sha": "eb657a49265a488e6ffc84da3fba78999f118901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb657a49265a488e6ffc84da3fba78999f118901", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb657a49265a488e6ffc84da3fba78999f118901"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "ab5e5adfdd3c5c3901daebdcacf879ade5a8ceb9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a44e1580ac6e4eeda74ddde429c74beea442d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a44e1580ac6e4eeda74ddde429c74beea442d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33a44e1580ac6e4eeda74ddde429c74beea442d3", "patch": "@@ -1,3 +1,8 @@\n+2016-09-24  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (expand_block_compare, do_load_for_compare):\n+\tChange TARGET_LITTLE_ENDIAN to !BYTES_BIG_ENDIAN.\n+\n 2016-09-42  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* configure.ac (gcc_cv_as_aix_dwloc): Fix typo in assembly fragment."}, {"sha": "5d189fc991a9712f19449538b5b2cce8840f8031", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a44e1580ac6e4eeda74ddde429c74beea442d3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a44e1580ac6e4eeda74ddde429c74beea442d3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=33a44e1580ac6e4eeda74ddde429c74beea442d3", "patch": "@@ -18482,7 +18482,7 @@ do_load_for_compare (rtx reg, rtx mem, machine_mode mode)\n \tcase HImode:\n \t  {\n \t    rtx src = mem;\n-\t    if (TARGET_LITTLE_ENDIAN)\n+\t    if (!BYTES_BIG_ENDIAN)\n \t      {\n \t\tsrc = gen_reg_rtx (HImode);\n \t\temit_insn (gen_bswaphi2 (src, mem));\n@@ -18493,7 +18493,7 @@ do_load_for_compare (rtx reg, rtx mem, machine_mode mode)\n \tcase SImode:\n \t  {\n \t    rtx src = mem;\n-\t    if (TARGET_LITTLE_ENDIAN)\n+\t    if (!BYTES_BIG_ENDIAN)\n \t      {\n \t\tsrc = gen_reg_rtx (SImode);\n \t\temit_insn (gen_bswapsi2 (src, mem));\n@@ -18502,7 +18502,7 @@ do_load_for_compare (rtx reg, rtx mem, machine_mode mode)\n \t  }\n \t  break;\n \tcase DImode:\n-\t  if (TARGET_LITTLE_ENDIAN)\n+\t  if (!BYTES_BIG_ENDIAN)\n \t    emit_insn (gen_bswapdi2 (reg, mem));\n \t  else\n \t    emit_insn (gen_movdi (reg, mem));\n@@ -18521,7 +18521,7 @@ do_load_for_compare (rtx reg, rtx mem, machine_mode mode)\n \tcase HImode:\n \t  {\n \t    rtx src = mem;\n-\t    if (TARGET_LITTLE_ENDIAN)\n+\t    if (!BYTES_BIG_ENDIAN)\n \t      {\n \t\tsrc = gen_reg_rtx (HImode);\n \t\temit_insn (gen_bswaphi2 (src, mem));\n@@ -18530,7 +18530,7 @@ do_load_for_compare (rtx reg, rtx mem, machine_mode mode)\n \t    break;\n \t  }\n \tcase SImode:\n-\t  if (TARGET_LITTLE_ENDIAN)\n+\t  if (!BYTES_BIG_ENDIAN)\n \t    emit_insn (gen_bswapsi2 (reg, mem));\n \t  else\n \t    emit_insn (gen_movsi (reg, mem));\n@@ -18667,7 +18667,7 @@ expand_block_compare (rtx operands[])\n \n   /* If we have an LE target without ldbrx and word_mode is DImode,\n      then we must avoid using word_mode.  */\n-  int word_mode_ok = !(TARGET_LITTLE_ENDIAN && !TARGET_LDBRX\n+  int word_mode_ok = !(!BYTES_BIG_ENDIAN && !TARGET_LDBRX\n \t\t       && word_mode == DImode);\n \n   /* Strategy phase.  How many ops will this take and should we expand it?  */"}]}