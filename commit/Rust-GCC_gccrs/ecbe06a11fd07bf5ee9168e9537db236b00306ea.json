{"sha": "ecbe06a11fd07bf5ee9168e9537db236b00306ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNiZTA2YTExZmQwN2JmNWVlOTE2OGU5NTM3ZGIyMzZiMDAzMDZlYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-23T07:20:15Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-23T07:20:15Z"}, "message": "(__builtin_new): Cast the result of malloc.\n\nFrom-SVN: r1935", "tree": {"sha": "84354210c3c7dfd78aabbfa2435ba4e08bb13c81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84354210c3c7dfd78aabbfa2435ba4e08bb13c81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecbe06a11fd07bf5ee9168e9537db236b00306ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecbe06a11fd07bf5ee9168e9537db236b00306ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecbe06a11fd07bf5ee9168e9537db236b00306ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecbe06a11fd07bf5ee9168e9537db236b00306ea/comments", "author": null, "committer": null, "parents": [{"sha": "72c8bb7f8044d9a9d0ac1427df1ebeed739f98bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72c8bb7f8044d9a9d0ac1427df1ebeed739f98bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72c8bb7f8044d9a9d0ac1427df1ebeed739f98bf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "432cf93bd90a137d0e8f8e34f5df4b399b0b2478", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbe06a11fd07bf5ee9168e9537db236b00306ea/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbe06a11fd07bf5ee9168e9537db236b00306ea/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=ecbe06a11fd07bf5ee9168e9537db236b00306ea", "patch": "@@ -1186,7 +1186,7 @@ __builtin_new (sz)\n {\n   void *p;\n \n-  p = malloc (sz);\n+  p = (void *) malloc (sz);\n   if (p == 0)\n     (*__new_handler) ();\n   return p;"}]}