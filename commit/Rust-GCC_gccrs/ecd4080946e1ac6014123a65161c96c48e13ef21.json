{"sha": "ecd4080946e1ac6014123a65161c96c48e13ef21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNkNDA4MDk0NmUxYWM2MDE0MTIzYTY1MTYxYzk2YzQ4ZTEzZWYyMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-23T14:48:36Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-23T14:48:36Z"}, "message": "(can_combine_p): When SMALL_REGISTER_CLASSES is defined, avoid\nsubstituting a return register into I3.\n\nFrom-SVN: r13006", "tree": {"sha": "8a1039617bee5ff9e3fa9a985c63e4d59e3a22a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a1039617bee5ff9e3fa9a985c63e4d59e3a22a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecd4080946e1ac6014123a65161c96c48e13ef21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd4080946e1ac6014123a65161c96c48e13ef21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecd4080946e1ac6014123a65161c96c48e13ef21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd4080946e1ac6014123a65161c96c48e13ef21/comments", "author": null, "committer": null, "parents": [{"sha": "02214a5c1475a8fd2ed983889eab632f31708704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02214a5c1475a8fd2ed983889eab632f31708704", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02214a5c1475a8fd2ed983889eab632f31708704"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "745427a11a1d2501442748d860e358879e08ec85", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd4080946e1ac6014123a65161c96c48e13ef21/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd4080946e1ac6014123a65161c96c48e13ef21/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=ecd4080946e1ac6014123a65161c96c48e13ef21", "patch": "@@ -960,11 +960,16 @@ can_combine_p (insn, i3, pred, succ, pdest, psrc)\n \t      /* Don't extend the life of a hard register unless it is\n \t\t user variable (if we have few registers) or it can't\n \t\t fit into the desired register (meaning something special\n-\t\t is going on).  */\n+\t\t is going on).\n+\t\t Also avoid substituting a return register into I3, because\n+\t\t reload can't handle a conflict with constraints of other\n+\t\t inputs.  */\n \t      || (REGNO (src) < FIRST_PSEUDO_REGISTER\n \t\t  && (! HARD_REGNO_MODE_OK (REGNO (src), GET_MODE (src))\n #ifdef SMALL_REGISTER_CLASSES\n \t\t      || (! all_adjacent && ! REG_USERVAR_P (src))\n+\t\t      || (FUNCTION_VALUE_REGNO_P (REGNO (src))\n+\t\t\t  && ! REG_USERVAR_P (src))\n #endif\n \t\t      ))))\n \treturn 0;"}]}