{"sha": "71cd5224b3f1f86a9b5f5701dd5e1e92e8535fd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFjZDUyMjRiM2YxZjg2YTliNWY1NzAxZGQ1ZTFlOTJlODUzNWZkMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-31T05:46:36Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-31T05:46:36Z"}, "message": "(addsi3, subsi3): Don't allow -32768 as the second operand;\n\nthe assembler complains if the instruction fills a delay slot.\n\nFrom-SVN: r2661", "tree": {"sha": "3f66806150bd1228e10f5d717e97bb430fcc4ae6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f66806150bd1228e10f5d717e97bb430fcc4ae6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71cd5224b3f1f86a9b5f5701dd5e1e92e8535fd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71cd5224b3f1f86a9b5f5701dd5e1e92e8535fd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71cd5224b3f1f86a9b5f5701dd5e1e92e8535fd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71cd5224b3f1f86a9b5f5701dd5e1e92e8535fd0/comments", "author": null, "committer": null, "parents": [{"sha": "baa599cab6b539734c80c721ea194e45772bf728", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baa599cab6b539734c80c721ea194e45772bf728", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baa599cab6b539734c80c721ea194e45772bf728"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "d5a9faa6f055359e4dad8e9439b486a432ba3e9b", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71cd5224b3f1f86a9b5f5701dd5e1e92e8535fd0/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71cd5224b3f1f86a9b5f5701dd5e1e92e8535fd0/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=71cd5224b3f1f86a9b5f5701dd5e1e92e8535fd0", "patch": "@@ -293,16 +293,27 @@\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"1\")])\n \n-(define_insn \"addsi3\"\n+(define_expand \"addsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-\t(plus:SI (match_operand:SI 1 \"arith_operand\" \"%d\")\n+\t(plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"dJ\")\n \t\t (match_operand:SI 2 \"arith_operand\" \"dI\")))]\n   \"\"\n+  \"\n+{\n+  if (GET_CODE (operands[2]) == CONST_INT && INTVAL (operands[2]) == -32768)\n+    operands[2] = force_reg (SImode, operands[2]);\n+}\")\n+\n+(define_insn \"addsi3_internal\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"dJ\")\n+\t\t (match_operand:SI 2 \"arith_operand\" \"dI\")))]\n+  \"GET_CODE (operands[2]) != CONST_INT || INTVAL (operands[2]) != -32768\"\n   \"*\n {\n   return (GET_CODE (operands[2]) == CONST_INT && INTVAL (operands[2]) < 0)\n-    ? \\\"subu\\\\t%0,%1,%n2\\\"\n-    : \\\"addu\\\\t%0,%1,%2\\\";\n+    ? \\\"subu\\\\t%0,%z1,%n2\\\"\n+    : \\\"addu\\\\t%0,%z1,%2\\\";\n }\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")\n@@ -485,11 +496,22 @@\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"1\")])\n \n-(define_insn \"subsi3\"\n+(define_expand \"subsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"dJ\")\n \t\t  (match_operand:SI 2 \"arith_operand\" \"dI\")))]\n   \"\"\n+  \"\n+{\n+  if (GET_CODE (operands[2]) == CONST_INT && INTVAL (operands[2]) == -32768)\n+    operands[2] = force_reg (SImode, operands[2]);\n+}\")\n+\n+(define_insn \"subsi3_internal\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"dJ\")\n+\t\t  (match_operand:SI 2 \"arith_operand\" \"dI\")))]\n+  \"GET_CODE (operands[2]) != CONST_INT || INTVAL (operands[2]) != -32768\"\n   \"*\n {\n   return (GET_CODE (operands[2]) == CONST_INT && INTVAL (operands[2]) < 0)"}]}