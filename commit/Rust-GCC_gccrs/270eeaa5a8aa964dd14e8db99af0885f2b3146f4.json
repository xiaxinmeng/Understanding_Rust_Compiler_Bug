{"sha": "270eeaa5a8aa964dd14e8db99af0885f2b3146f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcwZWVhYTVhOGFhOTY0ZGQxNGU4ZGI5OWFmMDg4NWYyYjMxNDZmNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-31T13:22:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-31T13:22:42Z"}, "message": "(STRICT_ALIGNMENT): Define to zero.\n\n(LEGITIMATE_PIC_OPERAND_P): Match definition from m68kv4.h.\n(LIBCALL_VALUE): Return XFmode value in fp0.\n\nFrom-SVN: r11133", "tree": {"sha": "271c6c3f0403620aff0bdb6678918e1128357135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/271c6c3f0403620aff0bdb6678918e1128357135"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/270eeaa5a8aa964dd14e8db99af0885f2b3146f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270eeaa5a8aa964dd14e8db99af0885f2b3146f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/270eeaa5a8aa964dd14e8db99af0885f2b3146f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270eeaa5a8aa964dd14e8db99af0885f2b3146f4/comments", "author": null, "committer": null, "parents": [{"sha": "45d44c982d3ebc4b55a029498ff9ec6156542ef0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45d44c982d3ebc4b55a029498ff9ec6156542ef0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45d44c982d3ebc4b55a029498ff9ec6156542ef0"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "641d9761f760da4c14f8973fef444ab3ff8d89dc", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270eeaa5a8aa964dd14e8db99af0885f2b3146f4/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270eeaa5a8aa964dd14e8db99af0885f2b3146f4/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=270eeaa5a8aa964dd14e8db99af0885f2b3146f4", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Motorola 68k running Linux with ELF format.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -31,6 +31,11 @@ Boston, MA 02111-1307, USA.  */\n /* 68020 with 68881 */\n #define TARGET_DEFAULT 7\n \n+/* for 68k machines this only needs to be TRUE for the 68000 */\n+\n+#undef STRICT_ALIGNMENT     \n+#define STRICT_ALIGNMENT 0\n+\n #undef SUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES\t{\"ieee-fp\", 0},\n \n@@ -259,15 +264,19 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #undef LIBCALL_VALUE\n #define LIBCALL_VALUE(MODE)\t\t\t\t\t\t\\\n-  (((MODE) == SFmode || (MODE) == DFmode) && TARGET_68881\t\t\\\n+  ((((MODE) == SFmode || (MODE) == DFmode || (MODE) == XFmode)\t\t\\\n+    && TARGET_68881)\t\t\t\t\t\t\t\\\n    ? gen_rtx (REG, (MODE), 16)\t\t\t\t\t\t\\\n    : gen_rtx (REG, (MODE), 0))\n \n /* In m68k svr4, a symbol_ref rtx can be a valid PIC operand if it is\n    an operand of a function call. */\n #undef LEGITIMATE_PIC_OPERAND_P\n #define LEGITIMATE_PIC_OPERAND_P(X) \\\n-  (! symbolic_operand (X, VOIDmode) \\\n+  ((! symbolic_operand (X, VOIDmode) \\\n+    && ! (GET_CODE (X) == CONST_DOUBLE && CONST_DOUBLE_MEM (X)\t\\\n+\t  && GET_CODE (CONST_DOUBLE_MEM (X)) == MEM\t\t\\\n+\t  && symbolic_operand (XEXP (CONST_DOUBLE_MEM (X), 0), VOIDmode))) \\\n    || (GET_CODE (X) == SYMBOL_REF && SYMBOL_REF_FLAG (X)))\n \n /* Turn off function cse if we are doing PIC. We always want function"}]}