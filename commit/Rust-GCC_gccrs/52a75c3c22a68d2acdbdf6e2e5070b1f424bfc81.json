{"sha": "52a75c3c22a68d2acdbdf6e2e5070b1f424bfc81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJhNzVjM2MyMmE2OGQyYWNkYmRmNmUyZTUwNzBiMWY0MjRiZmM4MQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-02-06T10:56:56Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-02-06T10:56:56Z"}, "message": "simplify-rtx.c (simplify_relational_operation): Canonicalize constant to op1 for testing.\n\n        * simplify-rtx.c (simplify_relational_operation): Canonicalize\n        constant to op1 for testing.\n\nFrom-SVN: r31825", "tree": {"sha": "db6ecb99832a88e5633e916992cbab50ca441beb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db6ecb99832a88e5633e916992cbab50ca441beb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52a75c3c22a68d2acdbdf6e2e5070b1f424bfc81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a75c3c22a68d2acdbdf6e2e5070b1f424bfc81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52a75c3c22a68d2acdbdf6e2e5070b1f424bfc81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a75c3c22a68d2acdbdf6e2e5070b1f424bfc81/comments", "author": null, "committer": null, "parents": [{"sha": "b027470f4234f042f2a736ee5e830f3b20acadca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b027470f4234f042f2a736ee5e830f3b20acadca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b027470f4234f042f2a736ee5e830f3b20acadca"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "3831f59b51863f47d48dcc9949d7f3ffb2947c9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a75c3c22a68d2acdbdf6e2e5070b1f424bfc81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a75c3c22a68d2acdbdf6e2e5070b1f424bfc81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52a75c3c22a68d2acdbdf6e2e5070b1f424bfc81", "patch": "@@ -1,3 +1,8 @@\n+2000-02-06  Richard Henderson  <rth@cygnus.com>\n+\n+\t* simplify-rtx.c (simplify_relational_operation): Canonicalize\n+\tconstant to op1 for testing.\n+\n 2000-02-06  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.md (*ldi_on_overflow): New pattern.\n@@ -171,20 +176,20 @@\n 2000-02-04  Jan Hubicka  <jh@suse.cz>\n \t    Richard Henderson  <rth@cygnus.com>\n \n-        * i386.c (SAVE_REGS_FIRST): Remove.\n-        (ix86_initial_elimination_offset): Handle only SAVE_REGS_FIRST mode.\n-        (ix86_compute_frame_size): Likewise.\n+\t* i386.c (SAVE_REGS_FIRST): Remove.\n+\t(ix86_initial_elimination_offset): Handle only SAVE_REGS_FIRST mode.\n+\t(ix86_compute_frame_size): Likewise.\n \t(ix86_expand_prologue): Likewise.  Use pro_epilogue_adjust_stack.\n-        (ix86_emit_restore_regs): Remove.\n+\t(ix86_emit_restore_regs): Remove.\n \t(ix86_emit_epilogue_esp_adjustment): Use pro_epilogue_adjust_stack\n \twhen a frame pointer is in use.\n-        (ix86_expand_epilogue): Handle only SAVE_REGS_FIRST mode.  Use mov\n+\t(ix86_expand_epilogue): Handle only SAVE_REGS_FIRST mode.  Use mov\n \tinstead of pop to restore a register when profitable; emit leave\n \twhen profitable.\n-        (ix86_attr_length_default): Handle pro_epilogue_adjust_stack\n-        as a TYPE_LEA insn.\n+\t(ix86_attr_length_default): Handle pro_epilogue_adjust_stack\n+\tas a TYPE_LEA insn.\n \t(ix86_adjust_cost): Handle pro_epilogue_adjust_stack as TYPE_ALU.\n-        * i386.md (prologue_allocate_stack): Remove.\n+\t* i386.md (prologue_allocate_stack): Remove.\n \t(epilogue_deallocate_stack): Remove.\n \t(pro_epilogue_adjust_stack): New.\n "}, {"sha": "c02248e79309f0dc57780eb40910ce9dbe4fe62a", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a75c3c22a68d2acdbdf6e2e5070b1f424bfc81/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a75c3c22a68d2acdbdf6e2e5070b1f424bfc81/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=52a75c3c22a68d2acdbdf6e2e5070b1f424bfc81", "patch": "@@ -1591,6 +1591,14 @@ simplify_relational_operation (code, mode, op0, op1)\n       )\n     return 0;\n \n+  /* Make sure the constant is second.  */\n+  if ((CONSTANT_P (op0) && ! CONSTANT_P (op1))\n+      || (GET_CODE (op0) == CONST_INT && GET_CODE (op1) != CONST_INT))\n+    {\n+      tem = op0, op0 = op1, op1 = tem;\n+      code = swap_condition (code);\n+    }\n+\n   /* For integer comparisons of A and B maybe we can simplify A - B and can\n      then simplify a comparison of that with zero.  If A and B are both either\n      a register or a CONST_INT, this can't help; testing for these cases will"}]}