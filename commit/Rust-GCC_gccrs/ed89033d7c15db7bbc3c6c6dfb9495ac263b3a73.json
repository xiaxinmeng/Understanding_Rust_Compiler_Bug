{"sha": "ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ4OTAzM2Q3YzE1ZGI3YmJjM2M2YzZkZmI5NDk1YWMyNjNiM2E3Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-02-16T19:22:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-02-16T19:22:57Z"}, "message": "re PR ipa/64963 (IPA Cloning/Splitting does not copy function section attributes resulting in kernel miscompilation)\n\n\tPR ipa/64963\n\t* cgraphclones.c (cgraph_node::create_virtual_clone): Copy\n\tsection if not linkonce.  Fix up formatting.\n\t(cgraph_node::create_version_clone_with_body): Copy section.\n\t* trans-mem.c (ipa_tm_create_version): Likewise.\n\n\t* gcc.dg/ipa/ipa-clone-1.c: New test.\n\nCo-Authored-By: James Greenhalgh <james.greenhalgh@arm.com>\n\nFrom-SVN: r220742", "tree": {"sha": "12b6d76fc0f117c75866f01aa2c9dc3604966d54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12b6d76fc0f117c75866f01aa2c9dc3604966d54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b909872f15f48482a23e41fe8093cb1f4425c74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b909872f15f48482a23e41fe8093cb1f4425c74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b909872f15f48482a23e41fe8093cb1f4425c74"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "9ef0d8c5f21ccc3e5b44da159df3dae9da58d3fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73", "patch": "@@ -1,3 +1,12 @@\n+2015-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\t    James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\tPR ipa/64963\n+\t* cgraphclones.c (cgraph_node::create_virtual_clone): Copy\n+\tsection if not linkonce.  Fix up formatting.\n+\t(cgraph_node::create_version_clone_with_body): Copy section.\n+\t* trans-mem.c (ipa_tm_create_version): Likewise.\n+\n 2015-02-16  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/65077"}, {"sha": "863081e20207f37df72e069ed0225660aee63ea1", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73", "patch": "@@ -577,7 +577,7 @@ cgraph_node::create_virtual_clone (vec<cgraph_edge *> redirect_callers,\n   char *name;\n \n   if (!in_lto_p)\n-    gcc_checking_assert  (tree_versionable_function_p (old_decl));\n+    gcc_checking_assert (tree_versionable_function_p (old_decl));\n \n   gcc_assert (local.can_change_signature || !args_to_skip);\n \n@@ -617,6 +617,8 @@ cgraph_node::create_virtual_clone (vec<cgraph_edge *> redirect_callers,\n      ABI support for this.  */\n   set_new_clone_decl_and_node_flags (new_node);\n   new_node->clone.tree_map = tree_map;\n+  if (!DECL_ONE_ONLY (old_decl))\n+    new_node->set_section (get_section ());\n \n   /* Clones of global symbols or symbols with unique names are unique.  */\n   if ((TREE_PUBLIC (old_decl)\n@@ -1009,6 +1011,7 @@ cgraph_node::create_version_clone_with_body\n   new_version_node->externally_visible = 0;\n   new_version_node->local.local = 1;\n   new_version_node->lowered = true;\n+  new_version_node->set_section (get_section ());\n   /* Clones of global symbols or symbols with unique names are unique.  */\n   if ((TREE_PUBLIC (old_decl)\n        && !DECL_EXTERNAL (old_decl)"}, {"sha": "d5769b70b2025feb05ba9e6e25024b7f744656a6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73", "patch": "@@ -1,3 +1,9 @@\n+2015-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\t    James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\tPR ipa/64963\n+\t* gcc.dg/ipa/ipa-clone-1.c: New test.\n+\n 2015-02-16  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/65077"}, {"sha": "5ee816657b1bc6a3cd16d3209ebd010dff4faeea", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-clone-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-clone-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-clone-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-clone-1.c?ref=ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73", "patch": "@@ -0,0 +1,20 @@\n+/* PR ipa/64693 */\n+/* { dg-do compile } */\n+/* { dg-require-named-sections \"\" } */\n+/* { dg-options \"-O3 -fipa-cp -fipa-cp-clone -fdump-ipa-cp\"  } */\n+\n+static int __attribute__ ((noinline, section (\"test_section\")))\n+foo (int arg)\n+{\n+  return 7 * arg;\n+}\n+\n+int\n+bar (int arg)\n+{\n+  return foo (5);\n+}\n+\n+/* { dg-final { scan-assembler \"test_section\" } } */\n+/* { dg-final { scan-ipa-dump \"Creating a specialized node of foo\" \"cp\" } } */\n+/* { dg-final { cleanup-ipa-dump \"cp\" } } */"}, {"sha": "146a9759db1ab326ca63eff4c2ed98d6a3929a85", "filename": "gcc/trans-mem.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73/gcc%2Ftrans-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73/gcc%2Ftrans-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.c?ref=ed89033d7c15db7bbc3c6c6dfb9495ac263b3a73", "patch": "@@ -4967,6 +4967,7 @@ ipa_tm_create_version (struct cgraph_node *old_node)\n   new_node->externally_visible = old_node->externally_visible;\n   new_node->lowered = true;\n   new_node->tm_clone = 1;\n+  new_node->set_section (old_node->get_section ());\n   get_cg_data (&old_node, true)->clone = new_node;\n \n   if (old_node->get_availability () >= AVAIL_INTERPOSABLE)"}]}