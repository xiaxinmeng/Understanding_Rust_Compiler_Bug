{"sha": "5c318df5275b3dd6843190b8e65580f8a63eb246", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMzMThkZjUyNzViM2RkNjg0MzE5MGI4ZTY1NTgwZjhhNjNlYjI0Ng==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-07-07T15:13:01Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-07-07T15:13:01Z"}, "message": "pragma-align.c: Run only if target !default_packed.\n\n\t\n\t* gcc.dg/pragma-align.c: Run only if target !default_packed.\n\t* gcc.dg/pr46212.c: Run only if target int32plus.\n\t* gcc.dg/torture/pr48146.c: Ditto.\n\t* gcc.dg/tree-ssa/vrp51.c: Ditto.\n\t* c-c++-common/pr44832.c: Ditto.\n\t* gcc.dg/pr49544.c: Run only if target ptr32plus.\n\t* gcc.dg/pr31490.c: Ditto.\n\t* gcc.dg/torture/builtin-math-7.c: Run only if target\n\tlarge_double.\n\t* gcc.dg/torture/pr45764.c: Skip for AVR.\n\t* gcc.dg/pr47893.c: Ditto.\n\nFrom-SVN: r175983", "tree": {"sha": "5e69a34caa1af7d4bebcc0749c3484819fa87109", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e69a34caa1af7d4bebcc0749c3484819fa87109"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c318df5275b3dd6843190b8e65580f8a63eb246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c318df5275b3dd6843190b8e65580f8a63eb246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c318df5275b3dd6843190b8e65580f8a63eb246", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c318df5275b3dd6843190b8e65580f8a63eb246/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7122998a4a736deabb561a78a008a8101f5e7c24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7122998a4a736deabb561a78a008a8101f5e7c24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7122998a4a736deabb561a78a008a8101f5e7c24"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "ea8d6f8cc4084fa858bf83fcc20764d1052622fb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c318df5275b3dd6843190b8e65580f8a63eb246", "patch": "@@ -1,3 +1,17 @@\n+2011-07-07  Georg-Johann Lay  <avr@gjlay.de>\n+\t\n+\t* gcc.dg/pragma-align.c: Run only if target !default_packed.\n+\t* gcc.dg/pr46212.c: Run only if target int32plus.\n+\t* gcc.dg/torture/pr48146.c: Ditto.\n+\t* gcc.dg/tree-ssa/vrp51.c: Ditto.\n+\t* c-c++-common/pr44832.c: Ditto.\n+\t* gcc.dg/pr49544.c: Run only if target ptr32plus.\n+\t* gcc.dg/pr31490.c: Ditto.\n+\t* gcc.dg/torture/builtin-math-7.c: Run only if target\n+\tlarge_double.\n+\t* gcc.dg/torture/pr45764.c: Skip for AVR.\n+\t* gcc.dg/pr47893.c: Ditto.\n+\n 2011-07-07  Janis Johnson  <janisjo@codesourcery.com>\n \n \t* lib/target-supports.exp (check_effective_target_arm_thumb1): New."}, {"sha": "b57e525ea9ca117427e4e803fbb61b7c38904e2e", "filename": "gcc/testsuite/c-c++-common/pr44832.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr44832.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr44832.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr44832.c?ref=5c318df5275b3dd6843190b8e65580f8a63eb246", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fcompare-debug\" } */\n /* { dg-options \"-O2 -fcompare-debug -fno-short-enums\" {target short_enums} } */\n+/* { dg-require-effective-target int32plus } */\n \n struct rtx_def;\n typedef struct rtx_def *rtx;"}, {"sha": "1c682db5fb8a6c8212db78db3b4d6e8fe7df355e", "filename": "gcc/testsuite/gcc.dg/pr31490.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Fpr31490.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Fpr31490.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr31490.c?ref=5c318df5275b3dd6843190b8e65580f8a63eb246", "patch": "@@ -1,6 +1,8 @@\n /* PR middle-end/31490 */\n /* { dg-do compile } */\n /* { dg-require-named-sections \"\" } */\n+/* { dg-require-effective-target ptr32plus } */\n+\n int cpu (void *attr) {}\n const unsigned long x __attribute__((section(\"foo\"))) =  (unsigned long)&cpu;\n const unsigned long g __attribute__((section(\"foo\"))) = 0;"}, {"sha": "67ffa7f1724b2182976bcbb83b810801dad7943d", "filename": "gcc/testsuite/gcc.dg/pr46212.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46212.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46212.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46212.c?ref=5c318df5275b3dd6843190b8e65580f8a63eb246", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -funroll-loops\" } */\n /* { dg-options \"-O3 -funroll-loops -march=i386\" { target { { i686-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-require-effective-target int32plus } */\n \n static inline unsigned\n foo (void *x)"}, {"sha": "86eb78d0f45aa7450de644f655a99803b8962d93", "filename": "gcc/testsuite/gcc.dg/pr47893.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47893.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47893.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47893.c?ref=5c318df5275b3dd6843190b8e65580f8a63eb246", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n /* { dg-options \"-O2 -mtune=atom -fno-omit-frame-pointer -fno-strict-aliasing\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-skip-if \"Too much RAM needed\" { \"avr-*-*\" } { \"*\" } { \"\" } } */\n \n extern void abort (void);\n "}, {"sha": "9e558da2765a9f70d568553ddcac7751133e9a77", "filename": "gcc/testsuite/gcc.dg/pr49544.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49544.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49544.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49544.c?ref=5c318df5275b3dd6843190b8e65580f8a63eb246", "patch": "@@ -1,6 +1,7 @@\n /* PR debug/49544 */\n /* { dg-do compile } */\n /* { dg-options \"-g -O2\" } */\n+/* { dg-require-effective-target ptr32plus } */\n \n int baz (int, int, void *);\n "}, {"sha": "4c0138b5f89d0a9ec3ecef30d3b5c33cf1fc1154", "filename": "gcc/testsuite/gcc.dg/pragma-align.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-align.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-align.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-align.c?ref=5c318df5275b3dd6843190b8e65580f8a63eb246", "patch": "@@ -1,6 +1,6 @@\n /* Prove that pragma alignment handling works somewhat. */\n \n-/* { dg-do run } */\n+/* { dg-do run { target { ! default_packed } } } */\n \n extern void abort (void);\n "}, {"sha": "8fe89158a9af0130bdcf793517d61d5823a02faf", "filename": "gcc/testsuite/gcc.dg/torture/builtin-math-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-7.c?ref=5c318df5275b3dd6843190b8e65580f8a63eb246", "patch": "@@ -6,6 +6,7 @@\n \n /* { dg-do run } */\n /* { dg-add-options ieee } */\n+/* { dg-require-effective-target large_double } */\n \n extern void link_error(int);\n "}, {"sha": "ac8c075dbb98420885487bec3d1cb71162883c03", "filename": "gcc/testsuite/gcc.dg/torture/pr45764.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr45764.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr45764.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr45764.c?ref=5c318df5275b3dd6843190b8e65580f8a63eb246", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run } */\n+/* { dg-skip-if \"Too much RAM needed\" { \"avr-*-*\" } { \"*\" } { \"\" } } */\n \n int result[64][16];\n "}, {"sha": "c0490352850e3abb5526d3ea11eefb0f80c5876c", "filename": "gcc/testsuite/gcc.dg/torture/pr48146.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr48146.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr48146.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr48146.c?ref=5c318df5275b3dd6843190b8e65580f8a63eb246", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target int32plus } */\n \n static unsigned char\n safe_sub_func_int_s_s (int si1, unsigned char si2)"}, {"sha": "51c51df6cc9349a18a621bb78a7c36692764508d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp51.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp51.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c318df5275b3dd6843190b8e65580f8a63eb246/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp51.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp51.c?ref=5c318df5275b3dd6843190b8e65580f8a63eb246", "patch": "@@ -1,6 +1,7 @@\n /* PR tree-optimization/28632 */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -ftree-vrp\" } */\n+/* { dg-require-effective-target int32plus } */\n \n void\n v4 (unsigned a, unsigned b)"}]}