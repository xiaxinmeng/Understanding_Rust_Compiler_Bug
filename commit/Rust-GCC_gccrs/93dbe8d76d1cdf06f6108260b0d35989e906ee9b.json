{"sha": "93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNkYmU4ZDc2ZDFjZGYwNmY2MTA4MjYwYjBkMzU5ODllOTA2ZWU5Yg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-01-21T04:08:54Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-01-21T04:08:54Z"}, "message": "[multiple changes]\n\n\n2002-01-20  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/locale_facets.h (ctype<char>::classic_table):\n\tRemove definition.\n\t(ctype<char>::_S_ctable): Remove.\n\t* config/os/gnu-linux/bits/ctype_noninline.h\n\t(ctype<char>::_S_table): Remove definition.\n\t(ctype<char>::classic_table): Define.\n\t(ctype<char>::ctype): Replace _S_ctable with classic_table().\n\t* config/os/aix/bits/ctype_noninline.h: Same.\n\t* config/os/bsd/freebsd/bits/ctype_noninline.h: Same.\n\t* config/os/bsd/netbsd/bits/ctype_noninline.h: Same.\n\t* config/os/djgpp/bits/ctype_noninline.h: Same.\n\t* config/os/generic/bits/ctype_noninline.h: Same.\n\t* config/os/gnu-linux/bits/ctype_noninline.h: Same.\n\t* config/os/hpux/bits/ctype_noninline.h: Same.\n\t* config/os/irix/irix5.2/bits/ctype_noninline.h: Same.\n\t* config/os/irix/irix6.5/bits/ctype_noninline.h: Same.\n\t* config/os/mingw32/bits/ctype_noninline.h: Same.\n\t* config/os/newlib/bits/ctype_noninline.h: Same.\n\t* config/os/solaris/solaris2.5/bits/ctype_noninline.h: Same.\n\t* config/os/solaris/solaris2.6/bits/ctype_noninline.h: Same.\n\t* config/os/solaris/solaris2.7/bits/ctype_noninline.h: Same.\n\n2002-01-20  Danny Smith  <dannysmith@users.sourceforge.net>\n\n\t* config/os/mingw32/bits/ctype_noninline.h: Declare _ctype instead\n\tof _pctype. Use to define _S_ctable.  Add definition for alternate\n\tctor.  Initialise _M_ctable to _S_ctable in ctors.\n\t(do_toupper, do_tolower): Use inline code appropriate for C-locale\n\trather than ::toupper, ::tolower.\n\nFrom-SVN: r49032", "tree": {"sha": "3f0b8007dc93d255d94ed79496e422650245bdce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f0b8007dc93d255d94ed79496e422650245bdce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/comments", "author": null, "committer": null, "parents": [{"sha": "ed168e450721ebad6f4df35ede3e00df03557eec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed168e450721ebad6f4df35ede3e00df03557eec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed168e450721ebad6f4df35ede3e00df03557eec"}], "stats": {"total": 179, "additions": 118, "deletions": 61}, "files": [{"sha": "16dc9b3e08816ca634e4b5c02ebd2d555a04233a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -1,3 +1,35 @@\n+2002-01-20  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/locale_facets.h (ctype<char>::classic_table):\n+\tRemove definition.\n+\t(ctype<char>::_S_ctable): Remove.\n+\t* config/os/gnu-linux/bits/ctype_noninline.h\n+\t(ctype<char>::_S_table): Remove definition.\n+\t(ctype<char>::classic_table): Define.\n+\t(ctype<char>::ctype): Replace _S_ctable with classic_table().\n+\t* config/os/aix/bits/ctype_noninline.h: Same.\n+\t* config/os/bsd/freebsd/bits/ctype_noninline.h: Same.\n+\t* config/os/bsd/netbsd/bits/ctype_noninline.h: Same.\n+\t* config/os/djgpp/bits/ctype_noninline.h: Same.\n+\t* config/os/generic/bits/ctype_noninline.h: Same.\n+\t* config/os/gnu-linux/bits/ctype_noninline.h: Same.\n+\t* config/os/hpux/bits/ctype_noninline.h: Same.\n+\t* config/os/irix/irix5.2/bits/ctype_noninline.h: Same.\n+\t* config/os/irix/irix6.5/bits/ctype_noninline.h: Same.\n+\t* config/os/mingw32/bits/ctype_noninline.h: Same.\n+\t* config/os/newlib/bits/ctype_noninline.h: Same.\n+\t* config/os/solaris/solaris2.5/bits/ctype_noninline.h: Same.\n+\t* config/os/solaris/solaris2.6/bits/ctype_noninline.h: Same.\n+\t* config/os/solaris/solaris2.7/bits/ctype_noninline.h: Same.\n+\n+2002-01-20  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* config/os/mingw32/bits/ctype_noninline.h: Declare _ctype instead\n+\tof _pctype. Use to define _S_ctable.  Add definition for alternate\n+\tctor.  Initialise _M_ctable to _S_ctable in ctors.\n+\t(do_toupper, do_tolower): Use inline code appropriate for C-locale\n+\trather than ::toupper, ::tolower.\n+\n 2002-01-18  Loren Rittle <ljrittle@acm.org>\n \n \t* testsuite/18_support/numeric_limits.cc (test_extrema<long double>):"}, {"sha": "0e081d79381f69837e27fe9e536a6500a99e1378", "filename": "libstdc++-v3/config/os/aix/bits/ctype_noninline.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -33,18 +33,19 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable;\n-  \n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return 0; }\n+\n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : _S_ctable) \n+  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : classic_table()) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : _S_ctable) \n+  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : classic_table()) \n   { }\n \n   char"}, {"sha": "9b452444daa02975f741c3be8da67820e9bbb4e6", "filename": "libstdc++-v3/config/os/bsd/freebsd/bits/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -33,18 +33,19 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n   \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable;\n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return 0; }\n \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : _S_ctable) \n+  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : classic_table()) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : _S_ctable) \n+  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : classic_table()) \n   { }\n \n   char"}, {"sha": "ee9475ee5fcf1ed75171178ccb482a6b5d17b7da", "filename": "libstdc++-v3/config/os/bsd/netbsd/bits/ctype_noninline.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -33,8 +33,9 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n   \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable;\n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return 0; }\n \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) "}, {"sha": "e84468c66aeacb5763dd4c72b5e5060aa4aa3b35", "filename": "libstdc++-v3/config/os/djgpp/bits/ctype_noninline.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -33,8 +33,9 @@\n   \n // Information as gleaned from DJGPP <ctype.h>\n \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable;\n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return 0; }\n \n   ctype<char>::ctype(__c_locale, const mask* __table = 0, bool __del = false, \n \t\t     size_t __refs = 0) "}, {"sha": "9fec00b43d2bcddad2ce17626bce5020548eac7a", "filename": "libstdc++-v3/config/os/generic/bits/ctype_noninline.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -34,20 +34,21 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable;\n-  \n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return 0; }\n+\n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(NULL), _M_tolower(NULL), \n-  _M_table(__table == 0 ? _S_ctable : __table) \n+  _M_table(__table == 0 ? classic_table() : __table) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(NULL), _M_tolower(NULL), \n-  _M_table(__table == 0 ? _S_ctable : __table) \n+  _M_table(__table == 0 ? classic_table() : __table) \n   { }\n \n   char"}, {"sha": "86a38fa8f584f4aa6e2d9b9d46c6e2773e6ff17e", "filename": "libstdc++-v3/config/os/gnu-linux/bits/ctype_noninline.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -40,9 +40,10 @@\n   using _C_legacy::__ctype_b;\n #endif\n \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable = __ctype_b;\n-\n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return __ctype_b; }  \n+  \n #if _GLIBCPP_C_LOCALE_GNU\n   ctype<char>::ctype(__c_locale __cloc, const mask* __table, bool __del, \n \t\t     size_t __refs) \n@@ -58,14 +59,14 @@\n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__ctype_toupper), _M_tolower(__ctype_tolower),\n-  _M_table(__table ? __table : _S_ctable)\n+  _M_table(__table ? __table : classic_table())\n   { _M_c_locale_ctype = NULL; }\n #endif\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) : \n   __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__ctype_toupper), _M_tolower(__ctype_tolower),\n-  _M_table(__table ? __table : _S_ctable)\n+  _M_table(__table ? __table : classic_table())\n   { _M_c_locale_ctype = NULL; }\n \n   char"}, {"sha": "7ec3b30ed9c4025e9729a4c736a0688549a9a9b9", "filename": "libstdc++-v3/config/os/hpux/bits/ctype_noninline.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -34,9 +34,10 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable;\n-  \n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return 0; }\n+\n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), "}, {"sha": "f9df21fb0d0109d1cda1bd66213bff9a72c740d6", "filename": "libstdc++-v3/config/os/irix/irix5.2/bits/ctype_noninline.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -34,8 +34,9 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable;\n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return 0; }\n \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs)"}, {"sha": "009e6110b73c4b4773a36d44cdd5ea530a80ceea", "filename": "libstdc++-v3/config/os/irix/irix6.5/bits/ctype_noninline.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -33,8 +33,9 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable;\n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return 0; }\n \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs)"}, {"sha": "11a78436664e57f58b8102e0e53887fc1f126d90", "filename": "libstdc++-v3/config/os/mingw32/bits/ctype_noninline.h", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,43 +33,57 @@\n   \n // Information as gleaned from /mingw32/include/ctype.h.\n \n-// This should be in mingw's ctype.h but isn't in older versions\n+  // This should be in mingw's ctype.h but isn't in older versions\n+  // Static classic C-locale table.  _ctype[0] is EOF\n+  extern \"C\"  unsigned short  __declspec(dllimport) _ctype[];\n \n-  extern \"C\"  unsigned short*  __declspec(dllimport) _pctype;  \n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return _ctype + 1; }  \n+\n+  ctype<char>::ctype(__c_locale, const mask* __table = 0, bool __del = false, \n+\t\t     size_t __refs = 0) \n+  : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n+  _M_toupper(NULL), _M_tolower(NULL),\n+  _M_table(__table ? __table : classic_table())  \n+  { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n-    : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n-      _M_toupper(NULL), _M_tolower(NULL),\n-      _M_ctable(NULL), _M_table(__table == 0 ? (_pctype) : __table) \n-    { }\n+  : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n+  _M_toupper(NULL), _M_tolower(NULL),\n+  _M_table(__table ? __table : classic_table()) \n+  { }\n \n   char\n   ctype<char>::do_toupper(char __c) const\n-  { return ::toupper((int) __c); }\n+  { return (this->is(ctype_base::lower, __c) ? (__c - 'a' + 'A') : __c); }\n \n   const char*\n   ctype<char>::do_toupper(char* __low, const char* __high) const\n   {\n     while (__low < __high)\n       {\n-\t*__low = ::toupper((int) *__low);\n+\t*__low = this->do_toupper(*__low);\n \t++__low;\n       }\n     return __high;\n   }\n \n   char\n   ctype<char>::do_tolower(char __c) const\n-  { return ::tolower((int) __c); }\n+  { return (this->is(ctype_base::upper, __c) ? (__c - 'A' + 'a') : __c); }\n \n   const char* \n   ctype<char>::do_tolower(char* __low, const char* __high) const\n   {\n     while (__low < __high)\n       {\n-\t*__low = ::tolower((int) *__low);\n+\t*__low = this->do_tolower(*__low);\n \t++__low;\n       }\n     return __high;\n   }\n \n+\n+\n+"}, {"sha": "546f5c5ac740db3bf4eb873eed7a24c7d9f97eec", "filename": "libstdc++-v3/config/os/newlib/bits/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -33,20 +33,21 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n   \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable;\n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return 0; }\n \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(NULL), _M_tolower(NULL), \n-  _M_table(__table ? __table : _S_ctable) \n+  _M_table(__table ? __table : classic_table()) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(NULL), _M_tolower(NULL), \n-  _M_table(__table ? __table : _S_ctable) \n+  _M_table(__table ? __table : classic_table()) \n   { }\n \n   char"}, {"sha": "9ab764a6c17becb810f8c49308bbc257dc757b70", "filename": "libstdc++-v3/config/os/solaris/solaris2.5/bits/ctype_noninline.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -33,20 +33,21 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable;\n-  \n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return 0; }\n+\n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(NULL), _M_tolower(NULL), \n-  _M_table(__table ? __table : _S_ctable) \n+  _M_table(__table ? __table : classic_table()) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(NULL), _M_tolower(NULL), \n-  _M_table(__table ? __table : _S_ctable) \n+  _M_table(__table ? __table : classic_table()) \n   { }\n \n   char"}, {"sha": "8e1c2d76f9724d7f41bff224741a4ea9ac01df8e", "filename": "libstdc++-v3/config/os/solaris/solaris2.6/bits/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -33,20 +33,21 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n   \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable;\n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return 0; }  \n \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__trans_upper), _M_tolower(__trans_lower), \n-  _M_table(__table ? __table : _S_ctable) \n+  _M_table(__table ? __table : classic_table()) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__trans_upper), _M_tolower(__trans_lower), \n-  _M_table(__table ? __table : _S_ctable) \n+  _M_table(__table ? __table : classic_table()) \n   { }\n \n   char"}, {"sha": "eafc1fc71e2411d2031c43024fad3cd31709b306", "filename": "libstdc++-v3/config/os/solaris/solaris2.7/bits/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_noninline.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -34,20 +34,21 @@\n   \n // Information as gleaned from /usr/include/ctype.h\n   \n-  // Data for classic_table().\n-  const ctype_base::mask* ctype<char>::_S_ctable = __ctype_mask;\n+  const ctype_base::mask* \n+  ctype<char>::classic_table() throw()\n+  { return __ctype_mask; }\n \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs)\n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__trans_upper), _M_tolower(__trans_lower),\n-  _M_table(__table ? __table : _S_ctable) \n+  _M_table(__table ? __table : classic_table()) \n   { }\n \n   ctype<char>::ctype(const mask* __table, bool __del, size_t __refs)\n   : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n   _M_toupper(__trans_upper), _M_tolower(__trans_lower),\n-  _M_table(__table == 0 ? __table : _S_ctable) \n+  _M_table(__table == 0 ? __table : classic_table()) \n   { }\n \n   char"}, {"sha": "9f435be5774f563d7c97ca267bb45db131813030", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dbe8d76d1cdf06f6108260b0d35989e906ee9b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=93dbe8d76d1cdf06f6108260b0d35989e906ee9b", "patch": "@@ -238,7 +238,6 @@ namespace std\n     public:\n       static locale::id        id;\n       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);\n-      static const mask*       _S_ctable;\n \n       explicit \n       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);\n@@ -265,8 +264,7 @@ namespace std\n       { return _M_table; }\n \n       static const mask* \n-      classic_table() throw()\n-      { return _S_ctable; }\n+      classic_table() throw();\n \n       virtual \n       ~ctype();"}]}