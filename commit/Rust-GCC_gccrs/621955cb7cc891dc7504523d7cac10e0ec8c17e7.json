{"sha": "621955cb7cc891dc7504523d7cac10e0ec8c17e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIxOTU1Y2I3Y2M4OTFkYzc1MDQ1MjNkN2NhYzEwZTBlYzhjMTdlNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-01-20T10:18:49Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-01-20T10:18:49Z"}, "message": "c-ada-spec.h (dump_ada_specs): Revert prototype change.\n\nc-family/\n\t* c-ada-spec.h (dump_ada_specs): Revert prototype change.\n\t* c-ada-spec.c (dump_ads): Likewise.\n\t(cpp_check): Likewise.\n\t(dump_ada_specs): Likewise.\ncp/\n\t* decl2.c (cpp_check): Revert prototype change.\n\nFrom-SVN: r206793", "tree": {"sha": "00264271884cf814270e5051a50c69dd560ad839", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00264271884cf814270e5051a50c69dd560ad839"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/621955cb7cc891dc7504523d7cac10e0ec8c17e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/621955cb7cc891dc7504523d7cac10e0ec8c17e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/621955cb7cc891dc7504523d7cac10e0ec8c17e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/621955cb7cc891dc7504523d7cac10e0ec8c17e7/comments", "author": null, "committer": null, "parents": [{"sha": "0fabe5f34ff7f53f92f055aff02170ef6a305cac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fabe5f34ff7f53f92f055aff02170ef6a305cac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fabe5f34ff7f53f92f055aff02170ef6a305cac"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "31985585b5964d5a67c0c0f9e383facc04f6d614", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621955cb7cc891dc7504523d7cac10e0ec8c17e7/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621955cb7cc891dc7504523d7cac10e0ec8c17e7/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=621955cb7cc891dc7504523d7cac10e0ec8c17e7", "patch": "@@ -1,4 +1,11 @@\n-2014-01-15  Laurent Alfonsi <laurent.alfonsi@st.com>\n+2014-01-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* c-ada-spec.h (dump_ada_specs): Revert prototype change.\n+\t* c-ada-spec.c (dump_ads): Likewise.\n+\t(cpp_check): Likewise.\n+\t(dump_ada_specs): Likewise.\n+\n+2014-01-15  Laurent Alfonsi  <laurent.alfonsi@st.com>\n \n \tPR c++/49718\n \t* c-common.c (handle_no_instrument_function_attribute): Allow"}, {"sha": "fc21b629aaae63eba15421fdb97a6c2b8b64ca42", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621955cb7cc891dc7504523d7cac10e0ec8c17e7/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621955cb7cc891dc7504523d7cac10e0ec8c17e7/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=621955cb7cc891dc7504523d7cac10e0ec8c17e7", "patch": "@@ -58,7 +58,7 @@ static void dump_ada_nodes (pretty_printer *, const char *);\n static void reset_ada_withs (void);\n static void dump_ada_withs (FILE *);\n static void dump_ads (const char *, void (*)(const char *),\n-\t\t      int (*)(const_tree, cpp_operation));\n+\t\t      int (*)(tree, cpp_operation));\n static char *to_ada_name (const char *, int *);\n static bool separate_class_package (tree);\n \n@@ -68,7 +68,7 @@ static bool separate_class_package (tree);\n #define INDENT_INCR 3\n \n /* Global hook used to perform C++ queries on nodes.  */\n-static int (*cpp_check) (const_tree, cpp_operation) = NULL;\n+static int (*cpp_check) (tree, cpp_operation) = NULL;\n \n \n /* Given a cpp MACRO, compute the max length BUFFER_LEN of the macro, as well\n@@ -975,7 +975,7 @@ is_tagged_type (const_tree type)\n    sufficiently simple.  */\n \n static bool\n-has_nontrivial_methods (const_tree type)\n+has_nontrivial_methods (tree type)\n {\n   tree tmp;\n \n@@ -3263,7 +3263,7 @@ print_ada_struct_decl (pretty_printer *buffer, tree node, tree type, int spc,\n static void\n dump_ads (const char *source_file,\n \t  void (*collect_all_refs)(const char *),\n-\t  int (*check)(const_tree, cpp_operation))\n+\t  int (*check)(tree, cpp_operation))\n {\n   char *ads_name;\n   char *pkg_name;\n@@ -3364,7 +3364,7 @@ collect_source_ref (const char *filename)\n \n void\n dump_ada_specs (void (*collect_all_refs)(const char *),\n-\t\tint (*check)(const_tree, cpp_operation))\n+\t\tint (*check)(tree, cpp_operation))\n {\n   int i;\n "}, {"sha": "7414c94059b3bccbdc8056da817782caed8db06b", "filename": "gcc/c-family/c-ada-spec.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621955cb7cc891dc7504523d7cac10e0ec8c17e7/gcc%2Fc-family%2Fc-ada-spec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621955cb7cc891dc7504523d7cac10e0ec8c17e7/gcc%2Fc-family%2Fc-ada-spec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.h?ref=621955cb7cc891dc7504523d7cac10e0ec8c17e7", "patch": "@@ -37,6 +37,6 @@ extern location_t decl_sloc (const_tree, bool);\n extern void collect_ada_nodes (tree, const char *);\n extern void collect_source_ref (const char *);\n extern void dump_ada_specs (void (*)(const char *),\n-\t\t\t    int (*)(const_tree, cpp_operation));\n+\t\t\t    int (*)(tree, cpp_operation));\n \n #endif /* ! C_ADA_SPEC_H */"}, {"sha": "0b9c1812421c7d44ec5637cd02a9239894804ae5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621955cb7cc891dc7504523d7cac10e0ec8c17e7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621955cb7cc891dc7504523d7cac10e0ec8c17e7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=621955cb7cc891dc7504523d7cac10e0ec8c17e7", "patch": "@@ -1,3 +1,7 @@\n+2014-01-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl2.c (cpp_check): Revert prototype change.\n+\n 2014-01-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/59270"}, {"sha": "58419ecbbcb2d07da0f8cfbdf924178a9067d8a7", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621955cb7cc891dc7504523d7cac10e0ec8c17e7/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621955cb7cc891dc7504523d7cac10e0ec8c17e7/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=621955cb7cc891dc7504523d7cac10e0ec8c17e7", "patch": "@@ -3817,7 +3817,7 @@ build_java_method_aliases (struct pointer_set_t *candidates)\n /* Return C++ property of T, based on given operation OP.  */\n \n static int\n-cpp_check (const_tree t, cpp_operation op)\n+cpp_check (tree t, cpp_operation op)\n {\n   switch (op)\n     {"}]}