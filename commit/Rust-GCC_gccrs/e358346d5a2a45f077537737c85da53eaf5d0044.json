{"sha": "e358346d5a2a45f077537737c85da53eaf5d0044", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM1ODM0NmQ1YTJhNDVmMDc3NTM3NzM3Yzg1ZGE1M2VhZjVkMDA0NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-15T08:58:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-15T08:58:45Z"}, "message": "[multiple changes]\n\n2009-04-15  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_warn.ads: Minor reformatting\n\n2009-04-15  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb: better error message for illegal interfaces\n\n\t* sem_ch6.adb (Possible_Freeze): Delay freezing a subprogram if a\n\tformal is an incomplete type from a limited_with clause.\n\nFrom-SVN: r146086", "tree": {"sha": "f9da83f4485c49d5f6f9716454f8876aa69edf0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9da83f4485c49d5f6f9716454f8876aa69edf0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e358346d5a2a45f077537737c85da53eaf5d0044", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e358346d5a2a45f077537737c85da53eaf5d0044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e358346d5a2a45f077537737c85da53eaf5d0044", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e358346d5a2a45f077537737c85da53eaf5d0044/comments", "author": null, "committer": null, "parents": [{"sha": "a9872a59bb5f1145022c641f83e17c796cbdca88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9872a59bb5f1145022c641f83e17c796cbdca88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9872a59bb5f1145022c641f83e17c796cbdca88"}], "stats": {"total": 74, "additions": 48, "deletions": 26}, "files": [{"sha": "de31fabf53a3ea2efe797ea4b34147bde50ca7ad", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e358346d5a2a45f077537737c85da53eaf5d0044/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e358346d5a2a45f077537737c85da53eaf5d0044/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e358346d5a2a45f077537737c85da53eaf5d0044", "patch": "@@ -1,3 +1,14 @@\n+2009-04-15  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_warn.ads: Minor reformatting\n+\n+2009-04-15  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb: better error message for illegal interfaces\n+\n+\t* sem_ch6.adb (Possible_Freeze): Delay freezing a subprogram if a\n+\tformal is an incomplete type from a limited_with clause.\n+\n 2009-04-15  Vincent Celier  <celier@adacore.com>\n \n \t* prj-nmsc.adb (Locate_Directory): New Boolean parameter"}, {"sha": "8f3c75ef70e0d4cc6ce70d47a612d193bb36974f", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e358346d5a2a45f077537737c85da53eaf5d0044/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e358346d5a2a45f077537737c85da53eaf5d0044/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=e358346d5a2a45f077537737c85da53eaf5d0044", "patch": "@@ -8734,6 +8734,7 @@ package body Sem_Ch3 is\n                 or else Protected_Present (Iface_Def)\n                 or else Synchronized_Present (Iface_Def))\n               and then Nkind (N) /= N_Private_Extension_Declaration\n+              and then not Error_Posted (N)\n             then\n                Error_Msg_NE\n                  (\"progenitor& must be limited interface\",\n@@ -12627,19 +12628,21 @@ package body Sem_Ch3 is\n                   null;\n \n                elsif Protected_Present (Iface_Def) then\n-                  Error_Msg_N\n-                    (\"(Ada 2005) limited interface cannot \"\n-                     & \"inherit from protected interface\", Indic);\n+                  Error_Msg_NE\n+                    (\"descendant of& must be declared\"\n+                       & \" as a protected interface\",\n+                         N, Parent_Type);\n \n                elsif Synchronized_Present (Iface_Def) then\n-                  Error_Msg_N\n-                    (\"(Ada 2005) limited interface cannot \"\n-                     & \"inherit from synchronized interface\", Indic);\n+                  Error_Msg_NE\n+                    (\"descendant of& must be declared\"\n+                       & \" as a synchronized interface\",\n+                         N, Parent_Type);\n \n                elsif Task_Present (Iface_Def) then\n-                  Error_Msg_N\n-                    (\"(Ada 2005) limited interface cannot \"\n-                     & \"inherit from task interface\", Indic);\n+                  Error_Msg_NE\n+                    (\"descendant of& must be declared as a task interface\",\n+                       N, Parent_Type);\n \n                else\n                   Error_Msg_N\n@@ -12658,20 +12661,21 @@ package body Sem_Ch3 is\n                   null;\n \n                elsif Protected_Present (Iface_Def) then\n-                  Error_Msg_N\n-                    (\"(Ada 2005) non-limited interface cannot \"\n-                     & \"inherit from protected interface\", Indic);\n+                  Error_Msg_NE\n+                    (\"descendant of& must be declared\"\n+                       & \" as a protected interface\",\n+                         N, Parent_Type);\n \n                elsif Synchronized_Present (Iface_Def) then\n-                  Error_Msg_N\n-                    (\"(Ada 2005) non-limited interface cannot \"\n-                     & \"inherit from synchronized interface\", Indic);\n+                  Error_Msg_NE\n+                    (\"descendant of& must be declared\"\n+                       & \" as a synchronized interface\",\n+                         N, Parent_Type);\n \n                elsif Task_Present (Iface_Def) then\n-                  Error_Msg_N\n-                    (\"(Ada 2005) non-limited interface cannot \"\n-                     & \"inherit from task interface\", Indic);\n-\n+                  Error_Msg_NE\n+                    (\"descendant of& must be declared as a task interface\",\n+                       N, Parent_Type);\n                else\n                   null;\n                end if;"}, {"sha": "15e42f16b88813a4dc630df9ffe652652c76f8f2", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e358346d5a2a45f077537737c85da53eaf5d0044/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e358346d5a2a45f077537737c85da53eaf5d0044/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=e358346d5a2a45f077537737c85da53eaf5d0044", "patch": "@@ -196,8 +196,8 @@ package body Sem_Ch6 is\n \n    procedure Set_Formal_Validity (Formal_Id : Entity_Id);\n    --  Formal_Id is an formal parameter entity. This procedure deals with\n-   --  setting the proper validity status for this entity, which depends\n-   --  on the kind of parameter and the validity checking mode.\n+   --  setting the proper validity status for this entity, which depends on\n+   --  the kind of parameter and the validity checking mode.\n \n    ------------------------------\n    -- Analyze_Return_Statement --\n@@ -3928,7 +3928,9 @@ package body Sem_Ch6 is\n       procedure Possible_Freeze (T : Entity_Id);\n       --  T is the type of either a formal parameter or of the return type.\n       --  If T is not yet frozen and needs a delayed freeze, then the\n-      --  subprogram itself must be delayed.\n+      --  subprogram itself must be delayed. If T is the limited view of\n+      --  of an incomplete type the subprogram must be frozen as well,\n+      --  because T may depend on local types that have not been frozen yet.\n \n       ---------------------\n       -- Possible_Freeze --\n@@ -3946,6 +3948,11 @@ package body Sem_Ch6 is\n            and then not Is_Frozen (Designated_Type (T))\n          then\n             Set_Has_Delayed_Freeze (Designator);\n+\n+         elsif Ekind (T) = E_Incomplete_Type\n+           and then From_With_Type (T)\n+         then\n+            Set_Has_Delayed_Freeze (Designator);\n          end if;\n       end Possible_Freeze;\n "}, {"sha": "3acb6873915f3ac0e31a01fb100509a5c3de8ccf", "filename": "gcc/ada/sem_warn.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e358346d5a2a45f077537737c85da53eaf5d0044/gcc%2Fada%2Fsem_warn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e358346d5a2a45f077537737c85da53eaf5d0044/gcc%2Fada%2Fsem_warn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.ads?ref=e358346d5a2a45f077537737c85da53eaf5d0044", "patch": "@@ -171,10 +171,10 @@ package Sem_Warn is\n    procedure Check_Low_Bound_Tested (Expr : Node_Id);\n    --  Expr is the node for a comparison operation. This procedure checks if\n    --  the comparison is a source comparison of P'First with some other value\n-   --  and if so, sets the Low_Bound_Tested flag in Expr to suppress warnings\n-   --  about improper low bound assumptions (we assume that if the code has a\n-   --  test that explicitly checks X'First, then it is not operating in blind\n-   --  assumption mode).\n+   --  and if so, sets the Low_Bound_Tested flag on entity P to suppress\n+   --  warnings about improper low bound assumptions (we assume that if the\n+   --  code has a test that explicitly checks P'First, then it is not operating\n+   --  in blind assumption mode).\n \n    procedure Warn_On_Known_Condition (C : Node_Id);\n    --  C is a node for a boolean expression resulting from a relational"}]}