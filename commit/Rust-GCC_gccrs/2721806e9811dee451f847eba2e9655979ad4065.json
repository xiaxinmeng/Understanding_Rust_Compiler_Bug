{"sha": "2721806e9811dee451f847eba2e9655979ad4065", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcyMTgwNmU5ODExZGVlNDUxZjg0N2ViYTJlOTY1NTk3OWFkNDA2NQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-11-27T04:05:23Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-11-27T04:05:23Z"}, "message": "prims.cc (_Jv_NewObjectArray): Use const_cast to initialize length field of array.\n\n\t* prims.cc (_Jv_NewObjectArray): Use const_cast to initialize\n\tlength field of array.\n\t(_Jv_NewPrimArray): Likewise.\n\t* gcj/array.h (__JArray): `length' field now const.  Added\n\tconstructor.\n\nFrom-SVN: r37771", "tree": {"sha": "cb35dd525aae041b32949744d19afafd5d184626", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb35dd525aae041b32949744d19afafd5d184626"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2721806e9811dee451f847eba2e9655979ad4065", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2721806e9811dee451f847eba2e9655979ad4065", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2721806e9811dee451f847eba2e9655979ad4065", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2721806e9811dee451f847eba2e9655979ad4065/comments", "author": null, "committer": null, "parents": [{"sha": "18205ca3b63fa0536ce6db35b4f1e264bdda5276", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18205ca3b63fa0536ce6db35b4f1e264bdda5276", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18205ca3b63fa0536ce6db35b4f1e264bdda5276"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "5c6456327357a246952f37d3b87ba320d42bcad3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2721806e9811dee451f847eba2e9655979ad4065/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2721806e9811dee451f847eba2e9655979ad4065/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2721806e9811dee451f847eba2e9655979ad4065", "patch": "@@ -1,3 +1,11 @@\n+2000-11-26  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* prims.cc (_Jv_NewObjectArray): Use const_cast to initialize\n+\tlength field of array.\n+\t(_Jv_NewPrimArray): Likewise.\n+\t* gcj/array.h (__JArray): `length' field now const.  Added\n+\tconstructor.\n+\n 2000-11-26  Anthony Green  <green@redhat.com>\n \n \t* javax/naming/spi/NamingManager.java,"}, {"sha": "8d280857ffe5a0a4b5cab0e0684a0204d6c7c733", "filename": "libjava/gcj/array.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2721806e9811dee451f847eba2e9655979ad4065/libjava%2Fgcj%2Farray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2721806e9811dee451f847eba2e9655979ad4065/libjava%2Fgcj%2Farray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2Farray.h?ref=2721806e9811dee451f847eba2e9655979ad4065", "patch": "@@ -17,8 +17,15 @@ extern \"Java\" {\n \n class __JArray : public java::lang::Object\n {\n+protected:\n+  // This is just a hack to work around a warning emitted by the C++\n+  // compiler.  We initialize `length' evilly, but it doesn't know\n+  // that.\n+  __JArray () : length (0)\n+  {\n+  }\n public:\n-  jsize length;\n+  const jsize length;\n   friend jsize JvGetArrayLength (__JArray*);\n };\n "}, {"sha": "c6b8d2030e1e8133d61b217e0ad0ca645e3ef122", "filename": "libjava/prims.cc", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2721806e9811dee451f847eba2e9655979ad4065/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2721806e9811dee451f847eba2e9655979ad4065/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=2721806e9811dee451f847eba2e9655979ad4065", "patch": "@@ -411,8 +411,10 @@ _Jv_NewObjectArray (jsize count, jclass elementClass, jobject init)\n   obj = (jobjectArray) _Jv_AllocArray (size, klass);\n   if (__builtin_expect (! obj, false))\n     JvThrow (no_memory);\n-  obj->length = count;\n-  jobject *ptr = elements (obj);\n+  // Cast away const.\n+  jsize *lp = const_cast<jsize *> (&obj->length);\n+  *lp = count;\n+  jobject *ptr = elements(obj);\n   // We know the allocator returns zeroed memory.  So don't bother\n   // zeroing it again.\n   if (init)\n@@ -446,7 +448,9 @@ _Jv_NewPrimArray (jclass eltype, jint count)\n   __JArray *arr = (__JArray*) _Jv_AllocObj (size + elsize * count, klass);\n   if (__builtin_expect (! arr, false))\n     JvThrow (no_memory);\n-  arr->length = count;\n+  // Cast away const.\n+  jsize *lp = const_cast<jsize *> (&arr->length);\n+  *lp = count;\n   // Note that we assume we are given zeroed memory by the allocator.\n \n   return arr;"}]}