{"sha": "5378192b096dff2f61a4ca9900aae7d877d21987", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM3ODE5MmIwOTZkZmYyZjYxYTRjYTk5MDBhYWU3ZDg3N2QyMTk4Nw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-06T21:30:51Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-06T21:30:51Z"}, "message": "(get_first_block_beg): New function.\n\nFrom-SVN: r2345", "tree": {"sha": "a5d673dc9f95bd64369c34114f08e18ef8c0f5de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5d673dc9f95bd64369c34114f08e18ef8c0f5de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5378192b096dff2f61a4ca9900aae7d877d21987", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5378192b096dff2f61a4ca9900aae7d877d21987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5378192b096dff2f61a4ca9900aae7d877d21987", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5378192b096dff2f61a4ca9900aae7d877d21987/comments", "author": null, "committer": null, "parents": [{"sha": "6204c24f34166b48c213cc1e5d1ba853f48142e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6204c24f34166b48c213cc1e5d1ba853f48142e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6204c24f34166b48c213cc1e5d1ba853f48142e0"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "f79ebd0f05e1bceacaf83c760f0ee9e7d161562f", "filename": "gcc/function.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5378192b096dff2f61a4ca9900aae7d877d21987/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5378192b096dff2f61a4ca9900aae7d877d21987/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=5378192b096dff2f61a4ca9900aae7d877d21987", "patch": "@@ -2518,6 +2518,24 @@ get_first_nonparm_insn ()\n   return get_insns ();\n }\n \n+/* Return the first NOTE_INSN_BLOCK_BEG note in the function.\n+   Crash if there is none.  */\n+\n+rtx\n+get_first_block_beg ()\n+{\n+  register rtx searcher;\n+  register rtx insn = get_first_nonparm_insn ();\n+\n+  for (searcher = insn; searcher; searcher = NEXT_INSN (searcher))\n+    if (GET_CODE (searcher) == NOTE\n+\t&& NOTE_LINE_NUMBER (searcher) == NOTE_INSN_BLOCK_BEG)\n+      return searcher;\n+\n+  abort ();\t/* Invalid call to this function.  (See comments above.)  */\n+  return NULL_RTX;\n+}\n+\n /* Return 1 if EXP returns an aggregate value, for which an address\n    must be passed to the function or returned by the function.  */\n "}]}