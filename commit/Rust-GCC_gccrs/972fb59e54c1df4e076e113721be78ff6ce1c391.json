{"sha": "972fb59e54c1df4e076e113721be78ff6ce1c391", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcyZmI1OWU1NGMxZGY0ZTA3NmUxMTM3MjFiZTc4ZmY2Y2UxYzM5MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T09:51:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T09:51:11Z"}, "message": "[multiple changes]\n\n2014-07-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (Has_Preelaborable_Initialization): Check that\n\ttype is tagged before checking whether a user-defined Initialize\n\tprocedure is present.\n\n2014-07-31  Gary Dismukes  <dismukes@adacore.com>\n\n\t* a-ngelfu.ads (Sqrt): Augment postcondition.\n\n2014-07-31  Pascal Obry  <obry@adacore.com>\n\n\t* prj-nmsc.adb (Check_Library_Attributes): An aggegate library\n\tdirectory and ALI directory must be different than all object\n\tand library directories of aggregated projects.\n\n2014-07-31  Vincent Celier  <celier@adacore.com>\n\n\t* prj-pars.adb, prj-conf.ads, prj-conf.adb (Locate_Runtime): Move spec\n\tto package body, as it is not called from outside. Remove argument\n\tProject_Tree, no longer used. When runtime cannot be found,\n\tcall Raise_Invalid_Config instead of failing the program.\n\nFrom-SVN: r213330", "tree": {"sha": "1d11510d5f74450666c6630879163f3d73af5326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d11510d5f74450666c6630879163f3d73af5326"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/972fb59e54c1df4e076e113721be78ff6ce1c391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/972fb59e54c1df4e076e113721be78ff6ce1c391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/972fb59e54c1df4e076e113721be78ff6ce1c391", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/972fb59e54c1df4e076e113721be78ff6ce1c391/comments", "author": null, "committer": null, "parents": [{"sha": "c1c8247201bd938d49716db8edc2767ff2a4d7d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c8247201bd938d49716db8edc2767ff2a4d7d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1c8247201bd938d49716db8edc2767ff2a4d7d5"}], "stats": {"total": 156, "additions": 136, "deletions": 20}, "files": [{"sha": "4f9ed7cae25515a1486d5b5ce45aa0060d8ed9d2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=972fb59e54c1df4e076e113721be78ff6ce1c391", "patch": "@@ -1,3 +1,26 @@\n+2014-07-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Has_Preelaborable_Initialization): Check that\n+\ttype is tagged before checking whether a user-defined Initialize\n+\tprocedure is present.\n+\n+2014-07-31  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* a-ngelfu.ads (Sqrt): Augment postcondition.\n+\n+2014-07-31  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-nmsc.adb (Check_Library_Attributes): An aggegate library\n+\tdirectory and ALI directory must be different than all object\n+\tand library directories of aggregated projects.\n+\n+2014-07-31  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-pars.adb, prj-conf.ads, prj-conf.adb (Locate_Runtime): Move spec\n+\tto package body, as it is not called from outside. Remove argument\n+\tProject_Tree, no longer used. When runtime cannot be found,\n+\tcall Raise_Invalid_Config instead of failing the program.\n+\n 2014-07-31  Robert Dewar  <dewar@adacore.com>\n \n \t* bindgen.adb (Gen_Output_File_Ada): Generate pragma Suppress"}, {"sha": "556992322b3d5320260c2920c4cdd2189f0e8106", "filename": "gcc/ada/a-ngelfu.ads", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2Fa-ngelfu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2Fa-ngelfu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngelfu.ads?ref=972fb59e54c1df4e076e113721be78ff6ce1c391", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2012-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2012-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -41,8 +41,22 @@ package Ada.Numerics.Generic_Elementary_Functions is\n \n    function Sqrt (X : Float_Type'Base) return Float_Type'Base with\n      Post => Sqrt'Result >= 0.0\n-               and then (if X = 0.0 then Sqrt'Result = 0.0)\n-               and then (if X = 1.0 then Sqrt'Result = 1.0);\n+\n+       and then (if X = 0.0 then Sqrt'Result = 0.0)\n+\n+       and then (if X = 1.0 then Sqrt'Result = 1.0)\n+\n+       --  If X is positive, the result of Sqrt is positive. This property is\n+       --  useful in particular for static analysis. The property that X is\n+       --  positive is not expressed as (X > 0), as the value X may be held in\n+       --  registers that have larger range and precision on some architecture\n+\n+       --  (for example, on x86 using x387 FPU, as opposed to SSE2). So, it\n+       --  might be possible for X to be 2.0**(-5000) or so, which could cause\n+       --  the number to compare as greater than 0, but Sqrt would still return\n+       --  a zero result.\n+\n+       and then (if X >= Float_Type'Succ (0.0) then Sqrt'Result > 0.0);\n \n    function Log (X : Float_Type'Base) return Float_Type'Base\n    with"}, {"sha": "b500e7b2f5015fee8ccebf467b247644d53b7c72", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=972fb59e54c1df4e076e113721be78ff6ce1c391", "patch": "@@ -64,6 +64,14 @@ package body Prj.Conf is\n    --  Stores the runtime names for the various languages. This is in general\n    --  set from a --RTS command line option.\n \n+   procedure Locate_Runtime\n+     (Language     : Name_Id;\n+      Env          : Prj.Tree.Environment);\n+   --  If RTS_Name is a base name (a name without path separator), then\n+   --  do nothing. Otherwise, convert it to an absolute path (possibly by\n+   --  searching it in the project path) and call Set_Runtime_For with the\n+   --  absolute path. Raise Invalid_Config if the path does not exist.\n+\n    -----------------------\n    -- Local_Subprograms --\n    -----------------------\n@@ -721,7 +729,7 @@ package body Prj.Conf is\n                               Set_Runtime_For\n                                 (Name_Ada,\n                                  Name_Buffer (7 .. Name_Len));\n-                              Locate_Runtime (Name_Ada, Project_Tree, Env);\n+                              Locate_Runtime (Name_Ada, Env);\n                            end if;\n \n                         elsif Name_Len > 7\n@@ -748,7 +756,7 @@ package body Prj.Conf is\n \n                                  if not Runtime_Name_Set_For (Lang) then\n                                     Set_Runtime_For (Lang, RTS);\n-                                    Locate_Runtime (Lang, Project_Tree, Env);\n+                                    Locate_Runtime (Lang, Env);\n                                  end if;\n                               end;\n                            end if;\n@@ -1518,7 +1526,6 @@ package body Prj.Conf is\n \n    procedure Locate_Runtime\n      (Language     : Name_Id;\n-      Project_Tree : Prj.Project_Tree_Ref;\n       Env          : Prj.Tree.Environment)\n    is\n       function Is_Base_Name (Path : String) return Boolean;\n@@ -1555,7 +1562,7 @@ package body Prj.Conf is\n            Find_Rts_In_Path (Env.Project_Path, RTS_Name);\n \n          if Full_Path = null then\n-            Fail_Program (Project_Tree, \"cannot find RTS \" & RTS_Name);\n+            Raise_Invalid_Config (\"cannot find RTS \" & RTS_Name);\n          end if;\n \n          Set_Runtime_For (Language, Normalize_Pathname (Full_Path.all));"}, {"sha": "029310f9dd14f311ab17184d39a946aeaee02400", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=972fb59e54c1df4e076e113721be78ff6ce1c391", "patch": "@@ -216,13 +216,4 @@ package Prj.Conf is\n    function Runtime_Name_Set_For (Language : Name_Id) return Boolean;\n    --  Returns True only if Set_Runtime_For has been called for the Language\n \n-   procedure Locate_Runtime\n-     (Language     : Name_Id;\n-      Project_Tree : Prj.Project_Tree_Ref;\n-      Env          : Prj.Tree.Environment);\n-   --  If RTS_Name is a base name (a name without path separator), then\n-   --  do nothing. Otherwise, convert it to an absolute path (possibly by\n-   --  searching it in the project path) and call Set_Runtime_For with the\n-   --  absolute path. Fail the program if the path does not exist.\n-\n end Prj.Conf;"}, {"sha": "96d3777f116a2b12fcaf2d96dfcce689c261ab27", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=972fb59e54c1df4e076e113721be78ff6ce1c391", "patch": "@@ -3028,6 +3028,76 @@ package body Prj.Nmsc is\n       procedure Check_Library (Proj : Project_Id; Extends : Boolean);\n       --  Check if an imported or extended project if also a library project\n \n+      procedure Check_Aggregate_Library_Dirs;\n+\n+      ----------------------------------\n+      -- Check_Aggregate_Library_Dirs --\n+      ----------------------------------\n+\n+      procedure Check_Aggregate_Library_Dirs is\n+         procedure Process_Aggregate (Proj : Project_Id);\n+\n+         procedure Process_Aggregate (Proj : Project_Id) is\n+\n+            Agg : Aggregated_Project_List := Proj.Aggregated_Projects;\n+\n+         begin\n+            while Agg /= null loop\n+               Error_Msg_Name_1 := Agg.Project.Name;\n+\n+               if Agg.Project.Qualifier /= Aggregate_Library and then\n+                 Project.Library_ALI_Dir.Name\n+                 = Agg.Project.Object_Directory.Name\n+               then\n+                  Error_Msg\n+                    (Data.Flags,\n+                     \"aggregate library 'A'L'I directory cannot be shared with\"\n+                     & \" object directory of aggregated project %%\",\n+                     The_Lib_Kind.Location, Project);\n+\n+               elsif Project.Library_ALI_Dir.Name\n+                 = Agg.Project.Library_Dir.Name\n+               then\n+                  Error_Msg\n+                    (Data.Flags,\n+                     \"aggregate library 'A'L'I directory cannot be shared with\"\n+                     & \" library directory of aggregated project %%\",\n+                     The_Lib_Kind.Location, Project);\n+\n+               elsif Agg.Project.Qualifier /= Aggregate_Library and then\n+                 Project.Library_Dir.Name\n+                 = Agg.Project.Object_Directory.Name\n+               then\n+                  Error_Msg\n+                    (Data.Flags,\n+                     \"aggregate library directory cannot be shared with\"\n+                     & \" object directory of aggregated project %%\",\n+                     The_Lib_Kind.Location, Project);\n+\n+               elsif Project.Library_Dir.Name\n+                 = Agg.Project.Library_Dir.Name\n+               then\n+                  Error_Msg\n+                    (Data.Flags,\n+                     \"aggregate library directory cannot be shared with\"\n+                     & \" library directory of aggregated project %%\",\n+                     The_Lib_Kind.Location, Project);\n+               end if;\n+\n+               if Agg.Project.Qualifier = Aggregate_Library then\n+                  Process_Aggregate (Agg.Project);\n+               end if;\n+\n+               Agg := Agg.Next;\n+            end loop;\n+         end Process_Aggregate;\n+\n+      begin\n+         if Project.Qualifier = Aggregate_Library then\n+            Process_Aggregate (Project);\n+         end if;\n+      end Check_Aggregate_Library_Dirs;\n+\n       -------------------\n       -- Check_Library --\n       -------------------\n@@ -3745,6 +3815,13 @@ package body Prj.Nmsc is\n          Continuation := Continuation_String'Access;\n       end if;\n \n+      --  Check that aggregated libraries do not share the aggregate\n+      --  Library_ALI_Dir.\n+\n+      if Project.Qualifier = Aggregate_Library then\n+         Check_Aggregate_Library_Dirs;\n+      end if;\n+\n       if Project.Library and not Data.In_Aggregate_Lib then\n \n          --  Record the library name"}, {"sha": "a37e13aec93bf856ff663b3701d7451500f6e2c4", "filename": "gcc/ada/prj-pars.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2Fprj-pars.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2Fprj-pars.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.adb?ref=972fb59e54c1df4e076e113721be78ff6ce1c391", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -103,8 +103,8 @@ package body Prj.Pars is\n             Success := The_Project /= No_Project;\n \n          exception\n-            when Invalid_Config =>\n-               Success := False;\n+            when E : Invalid_Config =>\n+               Osint.Fail (Exception_Message (E));\n          end;\n \n          Prj.Err.Finalize;"}, {"sha": "f6c150f0759ec38bdba0eced6904082a4e2ea24b", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972fb59e54c1df4e076e113721be78ff6ce1c391/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=972fb59e54c1df4e076e113721be78ff6ce1c391", "patch": "@@ -8189,10 +8189,13 @@ package body Sem_Util is\n          end if;\n \n          --  Check specifically for 10.2.1(11.4/2) exception: a controlled type\n-         --  with a user defined Initialize procedure does not have PI.\n+         --  with a user defined Initialize procedure does not have PI. If\n+         --  the type is untagged, the control primitives come from a component\n+         --  that has already been checked.\n \n          if Has_PE\n            and then Is_Controlled (E)\n+           and then Is_Tagged_Type (E)\n            and then Has_Overriding_Initialize (E)\n          then\n             Has_PE := False;\n@@ -16456,6 +16459,7 @@ package body Sem_Util is\n          Stmt := Original_Node (N);\n       end if;\n \n+      --    and then Ekind (Entity (Identifier (Stmt))) = E_Loop\n       return\n         Nkind (Stmt) = N_Loop_Statement\n           and then Present (Identifier (Stmt))"}]}