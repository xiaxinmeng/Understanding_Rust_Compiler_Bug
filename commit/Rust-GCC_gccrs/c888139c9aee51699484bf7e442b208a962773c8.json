{"sha": "c888139c9aee51699484bf7e442b208a962773c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg4ODEzOWM5YWVlNTE2OTk0ODRiZjdlNDQyYjIwOGE5NjI3NzNjOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-03-12T09:21:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-03-12T09:21:59Z"}, "message": "re PR tree-optimization/60502 (ICE reassociation and vector types.)\n\n\tPR tree-optimization/60502\n\t* tree-ssa-reassoc.c (eliminate_not_pairs): Use build_all_ones_cst\n\tinstead of build_low_bits_mask.\n\n\t* gcc.c-torture/compile/pr60502.c: New test.\n\nCo-Authored-By: Marc Glisse <marc.glisse@inria.fr>\n\nFrom-SVN: r208507", "tree": {"sha": "61cafcbb46414715fe191bd0dbf97127d27ff5b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61cafcbb46414715fe191bd0dbf97127d27ff5b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c888139c9aee51699484bf7e442b208a962773c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c888139c9aee51699484bf7e442b208a962773c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c888139c9aee51699484bf7e442b208a962773c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c888139c9aee51699484bf7e442b208a962773c8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b24ca895d7a5e5d18782a230f133cd8346f00c11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24ca895d7a5e5d18782a230f133cd8346f00c11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b24ca895d7a5e5d18782a230f133cd8346f00c11"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "446f51966f5d7b3fa49c996d225dfe3c9367f02b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c888139c9aee51699484bf7e442b208a962773c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c888139c9aee51699484bf7e442b208a962773c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c888139c9aee51699484bf7e442b208a962773c8", "patch": "@@ -1,3 +1,10 @@\n+2014-03-12  Jakub Jelinek  <jakub@redhat.com>\n+\t    Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/60502\n+\t* tree-ssa-reassoc.c (eliminate_not_pairs): Use build_all_ones_cst\n+\tinstead of build_low_bits_mask.\n+\n 2014-03-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/60482"}, {"sha": "24d0d9ad81cbd965d2293bef0873aec04a2cc044", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c888139c9aee51699484bf7e442b208a962773c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c888139c9aee51699484bf7e442b208a962773c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c888139c9aee51699484bf7e442b208a962773c8", "patch": "@@ -1,3 +1,9 @@\n+2014-03-12  Jakub Jelinek  <jakub@redhat.com>\n+\t    Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/60502\n+\t* gcc.c-torture/compile/pr60502.c: New test.\n+\n 2014-03-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/60482"}, {"sha": "8dd2de44dae246c93f5e2219a357e311b5e2d555", "filename": "gcc/testsuite/gcc.c-torture/compile/pr60502.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c888139c9aee51699484bf7e442b208a962773c8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr60502.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c888139c9aee51699484bf7e442b208a962773c8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr60502.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr60502.c?ref=c888139c9aee51699484bf7e442b208a962773c8", "patch": "@@ -0,0 +1,18 @@\n+/* PR tree-optimization/60502 */\n+\n+typedef signed char v16i8 __attribute__ ((vector_size (16)));\n+typedef unsigned char v16u8 __attribute__ ((vector_size (16)));\n+\n+void\n+foo (v16i8 *x)\n+{\n+  v16i8 m1 = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };\n+  *x |= *x ^ m1;\n+}\n+\n+void\n+bar (v16u8 *x)\n+{\n+  v16u8 m1 = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };\n+  *x |= *x ^ m1;\n+}"}, {"sha": "99282227039846ab14f84a1f75d33380d8b2bf6d", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c888139c9aee51699484bf7e442b208a962773c8/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c888139c9aee51699484bf7e442b208a962773c8/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=c888139c9aee51699484bf7e442b208a962773c8", "patch": "@@ -806,8 +806,7 @@ eliminate_not_pairs (enum tree_code opcode,\n \t  if (opcode == BIT_AND_EXPR)\n \t    oe->op = build_zero_cst (TREE_TYPE (oe->op));\n \t  else if (opcode == BIT_IOR_EXPR)\n-\t    oe->op = build_low_bits_mask (TREE_TYPE (oe->op),\n-\t\t\t\t\t  TYPE_PRECISION (TREE_TYPE (oe->op)));\n+\t    oe->op = build_all_ones_cst (TREE_TYPE (oe->op));\n \n \t  reassociate_stats.ops_eliminated += ops->length () - 1;\n \t  ops->truncate (0);"}]}