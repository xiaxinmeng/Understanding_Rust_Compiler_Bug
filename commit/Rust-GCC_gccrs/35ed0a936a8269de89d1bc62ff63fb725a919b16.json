{"sha": "35ed0a936a8269de89d1bc62ff63fb725a919b16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVlZDBhOTM2YTgyNjlkZTg5ZDFiYzYyZmY2M2ZiNzI1YTkxOWIxNg==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2004-10-09T19:19:24Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-10-09T19:19:24Z"}, "message": "regs.h (struct reg_info_def): Remove the last_node_uid and changes_mode fields.\n\n\t* regs.h (struct reg_info_def): Remove the last_node_uid and\n\tchanges_mode fields.\n\t(REGNO_LAST_NOTE_UID): Don't define.\n\t* regclass.c (reg_scan_mark_refs): Don't set REGNO_LAST_NOTE_UID.\n\t* regmove.c (copy_src_to_dest): Likewise.\n\nFrom-SVN: r88825", "tree": {"sha": "ddc13d6a64d58fe5f7bbb34005a45381c9e695c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddc13d6a64d58fe5f7bbb34005a45381c9e695c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35ed0a936a8269de89d1bc62ff63fb725a919b16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35ed0a936a8269de89d1bc62ff63fb725a919b16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35ed0a936a8269de89d1bc62ff63fb725a919b16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35ed0a936a8269de89d1bc62ff63fb725a919b16/comments", "author": null, "committer": null, "parents": [{"sha": "673dacbe7f8fd02b0445751a61dc3e51d76dd68c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/673dacbe7f8fd02b0445751a61dc3e51d76dd68c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/673dacbe7f8fd02b0445751a61dc3e51d76dd68c"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "e13867424122b14ef3b332fa66ea392e25d6aab3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ed0a936a8269de89d1bc62ff63fb725a919b16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ed0a936a8269de89d1bc62ff63fb725a919b16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35ed0a936a8269de89d1bc62ff63fb725a919b16", "patch": "@@ -1,3 +1,11 @@\n+2004-10-09  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* regs.h (struct reg_info_def): Remove the last_node_uid and\n+\tchanges_mode fields.\n+\t(REGNO_LAST_NOTE_UID): Don't define.\n+\t* regclass.c (reg_scan_mark_refs): Don't set REGNO_LAST_NOTE_UID.\n+\t* regmove.c (copy_src_to_dest): Likewise.\n+\n 2004-10-09  Roger Sayle  <roger@eyesopen.com>\n \n \tPR middle-end/17894"}, {"sha": "3e2af72ba897853bf1685a8bf8d3e66fa69d0c37", "filename": "gcc/regclass.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ed0a936a8269de89d1bc62ff63fb725a919b16/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ed0a936a8269de89d1bc62ff63fb725a919b16/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=35ed0a936a8269de89d1bc62ff63fb725a919b16", "patch": "@@ -2395,7 +2395,6 @@ reg_scan_mark_refs (rtx x, rtx insn, int note_flag, unsigned int min_regno)\n \n \tif (regno >= min_regno)\n \t  {\n-\t    REGNO_LAST_NOTE_UID (regno) = INSN_UID (insn);\n \t    if (!note_flag)\n \t      REGNO_LAST_UID (regno) = INSN_UID (insn);\n \t    if (REGNO_FIRST_UID (regno) == 0)"}, {"sha": "7f5455977f966df2edeb7a96dc469d0544eb7912", "filename": "gcc/regmove.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ed0a936a8269de89d1bc62ff63fb725a919b16/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ed0a936a8269de89d1bc62ff63fb725a919b16/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=35ed0a936a8269de89d1bc62ff63fb725a919b16", "patch": "@@ -834,9 +834,6 @@ copy_src_to_dest (rtx insn, rtx src, rtx dest, int old_max_uid)\n \n       if (REGNO_LAST_UID (src_regno) == insn_uid)\n \tREGNO_LAST_UID (src_regno) = move_uid;\n-\n-      if (REGNO_LAST_NOTE_UID (src_regno) == insn_uid)\n-\tREGNO_LAST_NOTE_UID (src_regno) = move_uid;\n     }\n }\n "}, {"sha": "85d50400d40cb823335c4000987b26dfce24289e", "filename": "gcc/regs.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ed0a936a8269de89d1bc62ff63fb725a919b16/gcc%2Fregs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ed0a936a8269de89d1bc62ff63fb725a919b16/gcc%2Fregs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregs.h?ref=35ed0a936a8269de89d1bc62ff63fb725a919b16", "patch": "@@ -50,7 +50,6 @@ typedef struct reg_info_def\n {\t\t\t\t/* fields set by reg_scan */\n   int first_uid;\t\t/* UID of first insn to use (REG n) */\n   int last_uid;\t\t\t/* UID of last insn to use (REG n) */\n-  int last_note_uid;\t\t/* UID of last note to use (REG n) */\n \n \t\t\t\t/* fields set by reg_scan & flow_analysis */\n   int sets;\t\t\t/* # of times (REG n) is set */\n@@ -62,8 +61,6 @@ typedef struct reg_info_def\n   int live_length;\t\t/* # of instructions (REG n) is live */\n   int calls_crossed;\t\t/* # of calls (REG n) is live across */\n   int basic_block;\t\t/* # of basic blocks (REG n) is used in */\n-  char changes_mode;\t\t/* whether (SUBREG (REG n)) exists and\n-\t\t\t\t   is illegal.  */\n } reg_info;\n \n extern varray_type reg_n_info;\n@@ -187,10 +184,6 @@ extern enum machine_mode reg_raw_mode[FIRST_PSEUDO_REGISTER];\n \n #define REGNO_LAST_UID(N) (VARRAY_REG (reg_n_info, N)->last_uid)\n \n-/* Similar, but includes insns that mention the reg in their notes.  */\n-\n-#define REGNO_LAST_NOTE_UID(N) (VARRAY_REG (reg_n_info, N)->last_note_uid)\n-\n /* List made of EXPR_LIST rtx's which gives pairs of pseudo registers\n    that have to go in the same hard reg.  */\n extern rtx regs_may_share;"}]}