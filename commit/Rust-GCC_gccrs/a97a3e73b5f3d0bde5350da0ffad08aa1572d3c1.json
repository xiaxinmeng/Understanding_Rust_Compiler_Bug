{"sha": "a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk3YTNlNzNiNWYzZDBiZGU1MzUwZGEwZmZhZDA4YWExNTcyZDNjMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-05-28T10:04:48Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-05-28T10:04:48Z"}, "message": "mips.md (extendsidi2): Tie the source and destination of the register alternative.\n\n\t* config/mips/mips.md (extendsidi2): Tie the source and destination\n\tof the register alternative.  Split it into nothing.\n\nFrom-SVN: r82359", "tree": {"sha": "f684bf8823cf90f97a781deb3eb06620d61ed8c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f684bf8823cf90f97a781deb3eb06620d61ed8c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1/comments", "author": null, "committer": null, "parents": [{"sha": "6c2511d34e54923dd7c2195dff882ffcffaa9631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c2511d34e54923dd7c2195dff882ffcffaa9631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c2511d34e54923dd7c2195dff882ffcffaa9631"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "31f9531ec62534bc0d4bdccbb02e363c7d17d408", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1", "patch": "@@ -1,3 +1,8 @@\n+2004-05-28  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.md (extendsidi2): Tie the source and destination\n+\tof the register alternative.  Split it into nothing.\n+\n 2004-05-28  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* rtl.h (skip_consecutive_labels): Declare."}, {"sha": "3235ff58e99836b961c135d779c0caedc4c66250", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1", "patch": "@@ -3405,16 +3405,29 @@ dsrl\\t%3,%3,1\\n\\\n ;; Extension insns.\n ;; Those for integer source operand are ordered widest source type first.\n \n-(define_insn \"extendsidi2\"\n+;; When TARGET_64BIT, all SImode integer registers should already be in\n+;; sign-extended form (see TRULY_NOOP_TRUNCATION and truncdisi2).  We can\n+;; therefore get rid of register->register instructions if we constrain\n+;; the source to be in the same register as the destination.\n+;;\n+;; The register alternative has type \"arith\" so that the pre-reload\n+;; scheduler will treat it as a move.  This reflects what happens if\n+;; the register alternative needs a reload.\n+(define_insn_and_split \"extendsidi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (sign_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"d,m\")))]\n+        (sign_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"0,m\")))]\n   \"TARGET_64BIT\"\n   \"@\n-   sll\\t%0,%1,0\n+   #\n    lw\\t%0,%1\"\n-  [(set_attr \"type\" \"shift,load\")\n-   (set_attr \"mode\" \"DI\")\n-   (set_attr \"extended_mips16\" \"yes,*\")])\n+  \"&& reload_completed && register_operand (operands[1], VOIDmode)\"\n+  [(const_int 0)]\n+{\n+  emit_note (NOTE_INSN_DELETED);\n+  DONE;\n+}\n+  [(set_attr \"type\" \"arith,load\")\n+   (set_attr \"mode\" \"DI\")])\n \n ;; These patterns originally accepted general_operands, however, slightly\n ;; better code is generated by only accepting register_operands, and then"}]}