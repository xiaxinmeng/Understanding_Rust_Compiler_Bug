{"sha": "d3e53108dde9a1c1826fbd227339bbc51a84909f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNlNTMxMDhkZGU5YTFjMTgyNmZiZDIyNzMzOWJiYzUxYTg0OTA5Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-04-21T04:21:51Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-04-21T04:21:51Z"}, "message": "check_allocate_max_size.cpp: Add explicit instantiations for systems without weak symbols.\n\n\t* testsuite/ext/bitmap_allocator/check_allocate_max_size.cpp: Add\n\texplicit instantiations for systems without weak symbols.\n\t* testsuite/ext/bitmap_allocator/check_deallocate_null.cc:\n\tLikewise.\n\nFrom-SVN: r98486", "tree": {"sha": "fe0eb4f936e5ca763e147a1068b27c8c72c5b030", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe0eb4f936e5ca763e147a1068b27c8c72c5b030"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3e53108dde9a1c1826fbd227339bbc51a84909f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3e53108dde9a1c1826fbd227339bbc51a84909f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3e53108dde9a1c1826fbd227339bbc51a84909f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3e53108dde9a1c1826fbd227339bbc51a84909f/comments", "author": null, "committer": null, "parents": [{"sha": "a94400fda31e4ac6cfa897141a4d14321fdb5fed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a94400fda31e4ac6cfa897141a4d14321fdb5fed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a94400fda31e4ac6cfa897141a4d14321fdb5fed"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "0853f4941826a98bfd410a9ba8e17f2220d3f59b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3e53108dde9a1c1826fbd227339bbc51a84909f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3e53108dde9a1c1826fbd227339bbc51a84909f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d3e53108dde9a1c1826fbd227339bbc51a84909f", "patch": "@@ -1,3 +1,10 @@\n+2005-04-20  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* testsuite/ext/bitmap_allocator/check_allocate_max_size.cpp: Add\n+\texplicit instantiations for systems without weak symbols.\n+\t* testsuite/ext/bitmap_allocator/check_deallocate_null.cc:\n+\tLikewise. \n+\n 2005-04-18  Jonathan Wakely  <redi@gcc.gnu.org>\n \n \t* include/bits/stl_algo.h (rotate_copy): Add missing std qualification."}, {"sha": "37843756bc1d5dd2306dbf6b210beb4fdb3da98d", "filename": "libstdc++-v3/testsuite/ext/bitmap_allocator/check_allocate_max_size.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3e53108dde9a1c1826fbd227339bbc51a84909f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fcheck_allocate_max_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3e53108dde9a1c1826fbd227339bbc51a84909f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fcheck_allocate_max_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fcheck_allocate_max_size.cc?ref=d3e53108dde9a1c1826fbd227339bbc51a84909f", "patch": "@@ -22,10 +22,16 @@\n #include <ext/bitmap_allocator.h>\n #include <testsuite_allocator.h>\n \n+typedef int value_type;\n+\n int main()\n { \n-  typedef int value_type;\n   typedef __gnu_cxx::bitmap_allocator<value_type> allocator_type;\n   __gnu_test::check_allocate_max_size<allocator_type>();\n   return 0;\n }\n+\n+#if !__GXX_WEAK\n+// Explicitly instantiatiate for systems without weak symbols.\n+template class __gnu_cxx::bitmap_allocator<value_type>;\n+#endif"}, {"sha": "9d7ae98dce08db4b103a453ae0bc700563b8884a", "filename": "libstdc++-v3/testsuite/ext/bitmap_allocator/check_deallocate_null.cc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3e53108dde9a1c1826fbd227339bbc51a84909f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fcheck_deallocate_null.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3e53108dde9a1c1826fbd227339bbc51a84909f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fcheck_deallocate_null.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fcheck_deallocate_null.cc?ref=d3e53108dde9a1c1826fbd227339bbc51a84909f", "patch": "@@ -22,10 +22,18 @@\n #include <ext/bitmap_allocator.h>\n #include <testsuite_allocator.h>\n \n+typedef int value_type;\n+\n int main()\n { \n-  typedef int value_type;\n   typedef __gnu_cxx::bitmap_allocator<value_type> allocator_type;\n   __gnu_test::check_deallocate_null<allocator_type>(); \n   return 0;\n }\n+\n+#if !__GXX_WEAK\n+// Explicitly instantiatiate for systems without weak symbols.\n+template class __gnu_cxx::bitmap_allocator<value_type>;\n+#endif\n+\n+"}]}