{"sha": "55eec6605c16043daf8604c66a5a8d5e3e37c720", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVlZWM2NjA1YzE2MDQzZGFmODYwNGM2NmE1YThkNWUzZTM3YzcyMA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-09-18T16:41:22Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-09-18T16:41:22Z"}, "message": "sh.c (nonpic_symbol_mentioned_p): Check LABEL_REFs.\n\n* config/sh/sh.c (nonpic_symbol_mentioned_p): Check LABEL_REFs.\n* config/sh/sh.md (sym_label2reg, symPLT_label2reg): Protect\nLABEL_REFs with a PIC-safe unspec.\n\nFrom-SVN: r36495", "tree": {"sha": "24e526e16ac8ebdabe381548e319d25e5f261567", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24e526e16ac8ebdabe381548e319d25e5f261567"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55eec6605c16043daf8604c66a5a8d5e3e37c720", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55eec6605c16043daf8604c66a5a8d5e3e37c720", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55eec6605c16043daf8604c66a5a8d5e3e37c720", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55eec6605c16043daf8604c66a5a8d5e3e37c720/comments", "author": null, "committer": null, "parents": [{"sha": "7bf2bde1c156681b3c776e2b502a296b7cf4facc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bf2bde1c156681b3c776e2b502a296b7cf4facc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bf2bde1c156681b3c776e2b502a296b7cf4facc"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "368cab3efe00fc1540689f8ce46dd63d7b352145", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55eec6605c16043daf8604c66a5a8d5e3e37c720/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55eec6605c16043daf8604c66a5a8d5e3e37c720/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55eec6605c16043daf8604c66a5a8d5e3e37c720", "patch": "@@ -1,3 +1,9 @@\n+2000-09-18  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/sh/sh.c (nonpic_symbol_mentioned_p): Check LABEL_REFs.\n+\t* config/sh/sh.md (sym_label2reg, symPLT_label2reg): Protect\n+\tLABEL_REFs with a PIC-safe unspec.\n+\n 2000-09-18  Will Cohen  <wcohen@redhat.com>\n \n \t* extend.texi (Zero Length): State that static initializers for"}, {"sha": "903f1c542f878d7cd1a07735733de694d219cf6c", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55eec6605c16043daf8604c66a5a8d5e3e37c720/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55eec6605c16043daf8604c66a5a8d5e3e37c720/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=55eec6605c16043daf8604c66a5a8d5e3e37c720", "patch": "@@ -5277,16 +5277,16 @@ sh_insn_length_adjustment (insn)\n   return 0;\n }\n \f\n-/* Return TRUE if X references a SYMBOL_REF whose symbol doesn't have\n-   @GOT or @GOTOFF.  */\n+/* Return TRUE if X references a SYMBOL_REF or LABEL_REF whose symbol\n+   isn't protected by a PIC unspec.  */\n int\n nonpic_symbol_mentioned_p (x)\n      rtx x;\n {\n   register const char *fmt;\n   register int i;\n \n-  if (GET_CODE (x) == SYMBOL_REF)\n+  if (GET_CODE (x) == SYMBOL_REF || GET_CODE (x) == LABEL_REF)\n     return 1;\n \n   if (GET_CODE (x) == UNSPEC"}, {"sha": "2930b7ce377ed4a9849d8302f287540636e0de1c", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55eec6605c16043daf8604c66a5a8d5e3e37c720/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55eec6605c16043daf8604c66a5a8d5e3e37c720/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=55eec6605c16043daf8604c66a5a8d5e3e37c720", "patch": "@@ -3482,8 +3482,9 @@ else\n   [(set (match_operand:SI 0 \"\" \"\")\n \t(const (minus:SI\n \t\t(unspec [(match_operand:SI 1 \"\" \"\")] 6)\n-\t\t(const (plus:SI (label_ref (match_operand:SI 2 \"\" \"\"))\n-\t\t\t\t(const_int 2))))))]\n+\t\t(const (plus:SI\n+\t\t\t(unspec [(label_ref (match_operand:SI 2 \"\" \"\"))] 6)\n+\t\t\t(const_int 2))))))]\n   \"\" \"\")\n \n (define_expand \"symGOT2reg\"\n@@ -3514,8 +3515,10 @@ else\n \t(const (minus:SI\n \t\t(plus:SI (pc)\n \t\t\t (unspec [(match_operand:SI 1 \"\" \"\")] 9))\n-\t\t(const (plus:SI (label_ref (match_operand:SI 2 \"\" \"\"))\n-\t\t\t\t(const_int 2))))))\n+\t\t(const\n+\t\t (plus:SI\n+\t\t  (unspec [(label_ref (match_operand:SI 2 \"\" \"\"))] 6)\n+\t\t  (const_int 2))))))\n    (use (match_dup 3))]\n   ;; Even though the PIC register is not really used by the call\n   ;; sequence in which this is expanded, the PLT code assumes the PIC"}]}