{"sha": "16ab8e74dad98cca30b431ae68b3926fe897aab4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZhYjhlNzRkYWQ5OGNjYTMwYjQzMWFlNjhiMzkyNmZlODk3YWFiNA==", "commit": {"author": {"name": "Bernhard Fischer", "email": "rep.nop@aon.at", "date": "2005-11-30T23:57:44Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-11-30T23:57:44Z"}, "message": "re PR fortran/21302 (Max line length in free form mode)\n\n2005-11-30  Bernhard Fischer <rep.nop@aon.at>\n\tPR fortran/21302\n\t* lang.opt: New options -ffree-line-length- and -ffree-line-length-none.\n\t* gfortran.h: Add free_line_length and add description of\n\tfree_line_length and fixed_line_length.\n\t* options.c (gfc_init_options, gfc_handle_option): Initialize\n\tand set free_line_length and fixed_line_length.\n\t* scanner.c (load_line): Set free_line_length to 132 and\n\tfixed_line_length to 72 or user requested values.\n\t* scanner.c: Typo in comment.\n\t* invoke.texi: Document -ffree-line-length- and\n\t-ffree-line-length-none\n\n\tgfortran.dg/line_length_1.f: New test:\n\tgfortran.dg/line_length_2.f90: Ditto.\n\nFrom-SVN: r107745", "tree": {"sha": "2c79d3d03822356a4f0ab0c7c7b6c42b8f03862a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c79d3d03822356a4f0ab0c7c7b6c42b8f03862a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16ab8e74dad98cca30b431ae68b3926fe897aab4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ab8e74dad98cca30b431ae68b3926fe897aab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16ab8e74dad98cca30b431ae68b3926fe897aab4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ab8e74dad98cca30b431ae68b3926fe897aab4/comments", "author": null, "committer": null, "parents": [{"sha": "4b860192e48ff466dc4975c9212e61e621fdb103", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b860192e48ff466dc4975c9212e61e621fdb103", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b860192e48ff466dc4975c9212e61e621fdb103"}], "stats": {"total": 131, "additions": 112, "deletions": 19}, "files": [{"sha": "f787fb76e57e028110ff5bf52eec290a4a7fafaf", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=16ab8e74dad98cca30b431ae68b3926fe897aab4", "patch": "@@ -1,3 +1,18 @@\n+2005-11-30  Bernhard Fischer <rep.nop@aon.at>\n+\n+\tPR fortran/21302\n+\t* lang.opt: New options -ffree-line-length- and -ffree-line-length-none.\n+\t* gfortran.h: Add free_line_length and add description of\n+\tfree_line_length and fixed_line_length.\n+\t* options.c (gfc_init_options, gfc_handle_option): Initialize\n+\tand set free_line_length and fixed_line_length.\n+\t* scanner.c (load_line): Set free_line_length to 132 and\n+\tfixed_line_length to 72 or user requested values.\n+\t* scanner.c: Typo in comment.\n+\t* invoke.texi: Document -ffree-line-length- and\n+\t-ffree-line-length-none\n+\n+\n 2005-11-30  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/15809"}, {"sha": "83de26754892a65ea044b4624c6d7b964c78e6c5", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=16ab8e74dad98cca30b431ae68b3926fe897aab4", "patch": "@@ -1460,7 +1460,20 @@ typedef struct\n {\n   char *module_dir;\n   gfc_source_form source_form;\n-  int fixed_line_length;\n+  /* When fixed_line_length or free_line_length are 0, the whole line is used.\n+\n+     Default is -1, the maximum line length mandated by the respective source\n+     form is used:\n+     for FORM_FREE GFC_MAX_LINE (132)\n+     else 72.\n+\n+     If fixed_line_length or free_line_length is not 0 nor -1 then the user has\n+     requested a specific line-length.\n+\n+     If the user requests a fixed_line_length <7 then gfc_init_options()\n+     emits a fatal error.  */\n+  int fixed_line_length; /* maximum line length in fixed-form.  */\n+  int free_line_length; /* maximum line length in free-form.  */\n   int max_identifier_length;\n   int verbose;\n "}, {"sha": "5816207d4a6b798930e1e88d017d447e5ab03121", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=16ab8e74dad98cca30b431ae68b3926fe897aab4", "patch": "@@ -119,6 +119,7 @@ by type.  Explanations are in the following sections.\n -fdollar-ok  -fimplicit-none  -fmax-identifier-length @gol\n -std=@var{std} -fd-lines-as-code -fd-lines-as-comments @gol\n -ffixed-line-length-@var{n}  -ffixed-line-length-none @gol\n+-ffree-line-length-@var{n}  -ffree-line-length-none @gol\n -fdefault-double-8  -fdefault-integer-8  -fdefault-real-8 @gol\n -fcray-pointer }\n \n@@ -251,6 +252,20 @@ to them to fill out the line.\n @option{-ffixed-line-length-0} means the same thing as\n @option{-ffixed-line-length-none}.\n \n+@cindex -ffree-line-length-@var{n} option\n+@cindex options, -ffree-line-length-@var{n}\n+@item -ffree-line-length-@var{n}\n+@cindex source file format\n+@cindex lines, length\n+@cindex length of source lines\n+@cindex free form\n+@cindex limits, lengths of source lines\n+Set column after which characters are ignored in typical free-form\n+lines in the source file. For free-form, the default value is 132.\n+@var{n} may be @samp{none}, meaning that the entire line is meaningful.\n+@option{-ffree-line-length-0} means the same thing as\n+@option{-ffree-line-length-none}.\n+\n @cindex -fmax-identifier-length=@var{n} option\n @cindex option -fmax-identifier-length=@var{n}\n @item -fmax-identifier-length=@var{n}"}, {"sha": "95388e5afe1baf10b09fe839618e840ae859f302", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=16ab8e74dad98cca30b431ae68b3926fe897aab4", "patch": "@@ -141,6 +141,14 @@ ffixed-line-length-\n Fortran RejectNegative Joined UInteger\n -ffixed-line-length-<n>\t\tUse n as character line width in fixed mode\n \n+ffree-line-length-none\n+Fortran RejectNegative\n+Allow arbitrary character line width in free mode\n+\n+ffree-line-length-\n+Fortran RejectNegative Joined UInteger\n+-ffree-line-length-<n>\t\tUse n as character line width in free mode\n+\n fmax-identifier-length=\n Fortran RejectNegative Joined UInteger\n -fmax-identifier-length=<n>\tMaximum identifier length"}, {"sha": "64fa8a2744146d73571521df5b0bce79f1465ec7", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=16ab8e74dad98cca30b431ae68b3926fe897aab4", "patch": "@@ -46,7 +46,8 @@ gfc_init_options (unsigned int argc ATTRIBUTE_UNUSED,\n   gfc_source_file = NULL;\n   gfc_option.module_dir = NULL;\n   gfc_option.source_form = FORM_UNKNOWN;\n-  gfc_option.fixed_line_length = 72;\n+  gfc_option.fixed_line_length = -1;\n+  gfc_option.free_line_length = -1;\n   gfc_option.max_identifier_length = GFC_MAX_SYMBOL_LEN;\n   gfc_option.verbose = 0;\n \n@@ -423,10 +424,28 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_option.source_form = FORM_FIXED;\n       break;\n \n+    case OPT_ffixed_line_length_none:\n+      gfc_option.fixed_line_length = 0;\n+      break;\n+\n+    case OPT_ffixed_line_length_:\n+      if (value != 0 && value < 7)\n+\tgfc_fatal_error (\"Fixed line length must be at least seven.\");\n+      gfc_option.fixed_line_length = value;\n+      break;\n+\n     case OPT_ffree_form:\n       gfc_option.source_form = FORM_FREE;\n       break;\n \n+    case OPT_ffree_line_length_none:\n+      gfc_option.free_line_length = 0;\n+      break;\n+\n+    case OPT_ffree_line_length_:\n+      gfc_option.free_line_length = value;\n+      break;\n+\n     case OPT_funderscoring:\n       gfc_option.flag_underscoring = value;\n       break;\n@@ -459,16 +478,6 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_option.flag_repack_arrays = value;\n       break;\n \n-    case OPT_ffixed_line_length_none:\n-      gfc_option.fixed_line_length = 0;\n-      break;\n-\n-    case OPT_ffixed_line_length_:\n-      if (value != 0 && value < 7)\n-\tgfc_fatal_error (\"Fixed line length must be at least seven.\");\n-      gfc_option.fixed_line_length = value;\n-      break;\n-\n     case OPT_fmax_identifier_length_:\n       if (value > GFC_MAX_SYMBOL_LEN)\n \tgfc_fatal_error (\"Maximum supported idenitifier length is %d\","}, {"sha": "4b76f9c73e9be09e7f6a7b693489d790913562b7", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=16ab8e74dad98cca30b431ae68b3926fe897aab4", "patch": "@@ -694,7 +694,7 @@ gfc_gobble_whitespace (void)\n    In fixed mode, we expand a tab that occurs within the statement\n    label region to expand to spaces that leave the next character in\n    the source region.\n-   load_line returns wether the line was truncated.  */\n+   load_line returns whether the line was truncated.  */\n \n static int\n load_line (FILE * input, char **pbuf, int *pbuflen)\n@@ -703,11 +703,25 @@ load_line (FILE * input, char **pbuf, int *pbuflen)\n   int trunc_flag = 0;\n   char *buffer;\n \n-  /* Determine the maximum allowed line length.  */\n+  /* Determine the maximum allowed line length.\n+     The default for free-form is GFC_MAX_LINE, for fixed-form or for\n+     unknown form it is 72. Refer to the documentation in gfc_option_t.  */\n   if (gfc_current_form == FORM_FREE)\n-    maxlen = GFC_MAX_LINE;\n+    {\n+      if (gfc_option.free_line_length == -1)\n+\tmaxlen = GFC_MAX_LINE;\n+      else\n+\tmaxlen = gfc_option.free_line_length;\n+    }\n+  else if (gfc_current_form == FORM_FIXED)\n+    {\n+      if (gfc_option.fixed_line_length == -1)\n+\tmaxlen = 72;\n+      else\n+\tmaxlen = gfc_option.fixed_line_length;\n+    }\n   else\n-    maxlen = gfc_option.fixed_line_length;\n+    maxlen = 72;\n \n   if (*pbuf == NULL)\n     {\n@@ -778,7 +792,7 @@ load_line (FILE * input, char **pbuf, int *pbuflen)\n \t    }\n \t}\n       else if (i >= maxlen)\n-\t{\t\t\t\n+\t{\n \t  /* Truncate the rest of the line.  */\n \t  for (;;)\n \t    {\n@@ -1055,7 +1069,7 @@ load_file (const char *filename, bool initial)\n   line = NULL;\n   line_len = 0;\n \n-  for (;;) \n+  for (;;)\n     {\n       int trunc = load_line (input, &line, &line_len);\n "}, {"sha": "2f0f297ca5cf77230cb5d3aadc6b6be155f1be30", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16ab8e74dad98cca30b431ae68b3926fe897aab4", "patch": "@@ -1,4 +1,8 @@\n-2005-11-30  Richard Guenther  <rguenther@suse.de>\n+2005-11-30  Bernhard Fischer  <rep.nop@aon.at>\n+\n+\tPR fortran/21302\n+\t* gfortran.dg/line_length_1.f: New test.\n+\t* gfortran.dg/line_length_2.f90: Ditto.\n \n \tPR tree-optimization/21655\n \t* g++.dg/tree-ssa/pr14814.C: Remove XFAIL."}, {"sha": "1ac80338d89bb379a8f513c7dbb28f391dced777", "filename": "gcc/testsuite/gfortran.dg/line_length_1.f", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_1.f?ref=16ab8e74dad98cca30b431ae68b3926fe897aab4", "patch": "@@ -0,0 +1,7 @@\n+! Testcase for -ffixed-line-length-none\n+! { dg-do compile }\n+! { dg-options \"-ffixed-line-length-none\" }\n+      program one\n+       if (abs(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa).gt.999.d0.or.abs(bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb).gt.999.d0.or.abs(cccccccccccccccccccc).gt.999.d0) THEN\n+       endif\n+      end program one"}, {"sha": "e1ab7220d03c058e9ee9035280556c16a9c8d2da", "filename": "gcc/testsuite/gfortran.dg/line_length_2.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ab8e74dad98cca30b431ae68b3926fe897aab4/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fline_length_2.f90?ref=16ab8e74dad98cca30b431ae68b3926fe897aab4", "patch": "@@ -0,0 +1,8 @@\n+! Testcase for -ffree-line-length-none\n+! See PR fortran/21302\n+! { dg-do compile }\n+! { dg-options \"-ffree-line-length-none\" }\n+program two\n+ if (abs(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa).gt.999.d0.or.abs(bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb).gt.999.d0.or.abs(cccccccccccccccccccc).gt.999.d0) THEN\n+ endif\n+end program two"}]}