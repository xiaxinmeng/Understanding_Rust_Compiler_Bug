{"sha": "11d90e2dd05bfabe45c26271b33b1d55ae4ef207", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFkOTBlMmRkMDViZmFiZTQ1YzI2MjcxYjMzYjFkNTVhZTRlZjIwNw==", "commit": {"author": {"name": "Carlos O'Donell", "email": "carlos@codesourcery.com", "date": "2006-11-30T19:25:08Z"}, "committer": {"name": "Carlos O'Donell", "email": "carlos@gcc.gnu.org", "date": "2006-11-30T19:25:08Z"}, "message": "tm.texi (MAX_OFILE_ALIGNMENT): Document default.\n\ngcc/\n\n2006-11-30  Carlos O'Donell  <carlos@codesourcery.com>\n\n\t* doc/tm.texi (MAX_OFILE_ALIGNMENT): Document default.\n\t* config/elfos.h [!MAX_OFILE_ALIGNMENT] (MAX_OFILE_ALIGNMENT): \n\tDefault is the largest alignment supported for 32-bit ELF and \n\trepresentable on a 32-bit host.\n\nFrom-SVN: r119374", "tree": {"sha": "3b09e5754552583423ebe731e5989c8fc7f86f95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b09e5754552583423ebe731e5989c8fc7f86f95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11d90e2dd05bfabe45c26271b33b1d55ae4ef207", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d90e2dd05bfabe45c26271b33b1d55ae4ef207", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11d90e2dd05bfabe45c26271b33b1d55ae4ef207", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d90e2dd05bfabe45c26271b33b1d55ae4ef207/comments", "author": null, "committer": null, "parents": [{"sha": "2a061db501f101bfd33a6897d30431666689ce08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a061db501f101bfd33a6897d30431666689ce08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a061db501f101bfd33a6897d30431666689ce08"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "bc615cfcc0d9635e19b73f441a3dc26b71811657", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d90e2dd05bfabe45c26271b33b1d55ae4ef207/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d90e2dd05bfabe45c26271b33b1d55ae4ef207/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11d90e2dd05bfabe45c26271b33b1d55ae4ef207", "patch": "@@ -1,3 +1,10 @@\n+2006-11-30  Carlos O'Donell  <carlos@codesourcery.com>\n+\n+\t* doc/tm.texi (MAX_OFILE_ALIGNMENT): Document default.\n+\t* config/elfos.h [!MAX_OFILE_ALIGNMENT] (MAX_OFILE_ALIGNMENT): \n+\tDefault is the largest alignment supported for 32-bit ELF and \n+\trepresentable on a 32-bit host.\n+\n 2006-11-30  Janis Johnson  <janis187@us.ibm.com>\n \n \t* config/dfp-bit.c (DFP_TO_INT): Use wider precision."}, {"sha": "9aa24975ca4a4005ef80807ce61c9e0abfb66b7e", "filename": "gcc/config/elfos.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d90e2dd05bfabe45c26271b33b1d55ae4ef207/gcc%2Fconfig%2Felfos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d90e2dd05bfabe45c26271b33b1d55ae4ef207/gcc%2Fconfig%2Felfos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felfos.h?ref=11d90e2dd05bfabe45c26271b33b1d55ae4ef207", "patch": "@@ -40,12 +40,15 @@ Boston, MA 02110-1301, USA.  */\n #undef  USER_LABEL_PREFIX\n #define USER_LABEL_PREFIX \"\"\n \n-/* Biggest alignment supported by the object file format of this\n-   machine.  Use this macro to limit the alignment which can be\n-   specified using the `__attribute__ ((aligned (N)))' construct.  If\n-   not defined, the default value is `BIGGEST_ALIGNMENT'.  */\n+/* The biggest alignment supported by ELF in bits. 32-bit ELF \n+   supports section alignment up to (0x80000000 * 8), while \n+   64-bit ELF supports (0x8000000000000000 * 8). If this macro \n+   is not defined, the default is the largest alignment supported \n+   by 32-bit ELF and representable on a 32-bit host. Use this\n+   macro to limit the alignment which can be specified using\n+   the `__attribute__ ((aligned (N)))' construct.  */\n #ifndef MAX_OFILE_ALIGNMENT\n-#define MAX_OFILE_ALIGNMENT (32768 * 8)\n+#define MAX_OFILE_ALIGNMENT (((unsigned int) 1 << 28) * 8)\n #endif\n \n /* Use periods rather than dollar signs in special g++ assembler names.  */"}, {"sha": "2a21a5890efb62e3970866c713f2bfd2066d52f1", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d90e2dd05bfabe45c26271b33b1d55ae4ef207/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d90e2dd05bfabe45c26271b33b1d55ae4ef207/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=11d90e2dd05bfabe45c26271b33b1d55ae4ef207", "patch": "@@ -1078,6 +1078,12 @@ Biggest alignment supported by the object file format of this machine.\n Use this macro to limit the alignment which can be specified using the\n @code{__attribute__ ((aligned (@var{n})))} construct.  If not defined,\n the default value is @code{BIGGEST_ALIGNMENT}.\n+\n+On systems that use ELF, the default (in @file{config/elfos.h}) is\n+the largest supported 32-bit ELF section alignment representable on\n+a 32-bit host e.g. @samp{(((unsigned HOST_WIDEST_INT) 1 << 28) * 8)}.\n+On 32-bit ELF the largest supported section alignment in bits is\n+@samp{(0x80000000 * 8)}, but this is not representable on 32-bit hosts.\n @end defmac\n \n @defmac DATA_ALIGNMENT (@var{type}, @var{basic-align})"}]}