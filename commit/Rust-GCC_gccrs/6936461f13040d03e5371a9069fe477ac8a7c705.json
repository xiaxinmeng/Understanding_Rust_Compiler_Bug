{"sha": "6936461f13040d03e5371a9069fe477ac8a7c705", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkzNjQ2MWYxMzA0MGQwM2U1MzcxYTkwNjlmZTQ3N2FjOGE3YzcwNQ==", "commit": {"author": {"name": "Ollie Wild", "email": "aaw@google.com", "date": "2007-05-22T20:36:49Z"}, "committer": {"name": "Ollie Wild", "email": "aaw@gcc.gnu.org", "date": "2007-05-22T20:36:49Z"}, "message": "decl.c (duplicate_decls): Verify namespace names are unique.\n\n\t* decl.c (duplicate_decls): Verify namespace names are unique.\n\n\t* g++.dg/lookup/name-clash5.C: New test.\n\t* g++.dg/lookup/name-clash6.C: New test.\n\nFrom-SVN: r124960", "tree": {"sha": "368888b60765a9526144f55f06ee0900145bfb40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/368888b60765a9526144f55f06ee0900145bfb40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6936461f13040d03e5371a9069fe477ac8a7c705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6936461f13040d03e5371a9069fe477ac8a7c705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6936461f13040d03e5371a9069fe477ac8a7c705", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6936461f13040d03e5371a9069fe477ac8a7c705/comments", "author": {"login": "olliewild", "id": 11523068, "node_id": "MDQ6VXNlcjExNTIzMDY4", "avatar_url": "https://avatars.githubusercontent.com/u/11523068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olliewild", "html_url": "https://github.com/olliewild", "followers_url": "https://api.github.com/users/olliewild/followers", "following_url": "https://api.github.com/users/olliewild/following{/other_user}", "gists_url": "https://api.github.com/users/olliewild/gists{/gist_id}", "starred_url": "https://api.github.com/users/olliewild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olliewild/subscriptions", "organizations_url": "https://api.github.com/users/olliewild/orgs", "repos_url": "https://api.github.com/users/olliewild/repos", "events_url": "https://api.github.com/users/olliewild/events{/privacy}", "received_events_url": "https://api.github.com/users/olliewild/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f457a0db87291d494da0e701dab4ead009592be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f457a0db87291d494da0e701dab4ead009592be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f457a0db87291d494da0e701dab4ead009592be"}], "stats": {"total": 85, "additions": 63, "deletions": 22}, "files": [{"sha": "7fc9a0707535bffe555bca0a86801981ef57b302", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6936461f13040d03e5371a9069fe477ac8a7c705/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6936461f13040d03e5371a9069fe477ac8a7c705/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6936461f13040d03e5371a9069fe477ac8a7c705", "patch": "@@ -1,3 +1,7 @@\n+2007-05-22  Ollie Wild  <aaw@google.com>\n+\n+\t* decl.c (duplicate_decls): Verify namespace names are unique.\n+\n 2007-05-21  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl.c (cxx_maybe_build_cleanup): Handle"}, {"sha": "02b38225a9e843743e0660b8958d14c06b027eff", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 28, "deletions": 22, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6936461f13040d03e5371a9069fe477ac8a7c705/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6936461f13040d03e5371a9069fe477ac8a7c705/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6936461f13040d03e5371a9069fe477ac8a7c705", "patch": "@@ -1297,30 +1297,36 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)\n     }\n   else if (TREE_CODE (olddecl) != TREE_CODE (newdecl))\n     {\n-      if ((TREE_CODE (olddecl) == TYPE_DECL && DECL_ARTIFICIAL (olddecl)\n-\t   && TREE_CODE (newdecl) != TYPE_DECL\n-\t   && ! (TREE_CODE (newdecl) == TEMPLATE_DECL\n-\t\t && TREE_CODE (DECL_TEMPLATE_RESULT (newdecl)) == TYPE_DECL))\n-\t  || (TREE_CODE (newdecl) == TYPE_DECL && DECL_ARTIFICIAL (newdecl)\n-\t      && TREE_CODE (olddecl) != TYPE_DECL\n-\t      && ! (TREE_CODE (olddecl) == TEMPLATE_DECL\n-\t\t    && (TREE_CODE (DECL_TEMPLATE_RESULT (olddecl))\n-\t\t\t== TYPE_DECL))))\n-\t{\n-\t  /* We do nothing special here, because C++ does such nasty\n-\t     things with TYPE_DECLs.  Instead, just let the TYPE_DECL\n-\t     get shadowed, and know that if we need to find a TYPE_DECL\n-\t     for a given name, we can look in the IDENTIFIER_TYPE_VALUE\n-\t     slot of the identifier.  */\n-\t  return NULL_TREE;\n+      /* C++ Standard, 3.3, clause 4:\n+\t \"[Note: a namespace name or a class template name must be unique\n+\t in its declarative region (7.3.2, clause 14). ]\"  */\n+      if (TREE_CODE (olddecl) != NAMESPACE_DECL\n+\t  && TREE_CODE (newdecl) != NAMESPACE_DECL\n+\t  && (TREE_CODE (olddecl) != TEMPLATE_DECL\n+\t      || TREE_CODE (DECL_TEMPLATE_RESULT (olddecl)) != TYPE_DECL)\n+\t  && (TREE_CODE (newdecl) != TEMPLATE_DECL\n+\t      || TREE_CODE (DECL_TEMPLATE_RESULT (newdecl)) != TYPE_DECL))\n+\t{\n+\t  if ((TREE_CODE (olddecl) == TYPE_DECL && DECL_ARTIFICIAL (olddecl)\n+\t       && TREE_CODE (newdecl) != TYPE_DECL)\n+\t      || (TREE_CODE (newdecl) == TYPE_DECL && DECL_ARTIFICIAL (newdecl)\n+\t\t  && TREE_CODE (olddecl) != TYPE_DECL))\n+\t    {\n+\t      /* We do nothing special here, because C++ does such nasty\n+\t\t things with TYPE_DECLs.  Instead, just let the TYPE_DECL\n+\t\t get shadowed, and know that if we need to find a TYPE_DECL\n+\t\t for a given name, we can look in the IDENTIFIER_TYPE_VALUE\n+\t\t slot of the identifier.  */\n+\t      return NULL_TREE;\n+\t    }\n+\t    \n+\t    if ((TREE_CODE (newdecl) == FUNCTION_DECL\n+\t\t && DECL_FUNCTION_TEMPLATE_P (olddecl))\n+\t\t|| (TREE_CODE (olddecl) == FUNCTION_DECL\n+\t\t    && DECL_FUNCTION_TEMPLATE_P (newdecl)))\n+\t      return NULL_TREE;\n \t}\n \n-      if ((TREE_CODE (newdecl) == FUNCTION_DECL\n-\t   && DECL_FUNCTION_TEMPLATE_P (olddecl))\n-\t  || (TREE_CODE (olddecl) == FUNCTION_DECL\n-\t      && DECL_FUNCTION_TEMPLATE_P (newdecl)))\n-\treturn NULL_TREE;\n-\n       error (\"%q#D redeclared as different kind of symbol\", newdecl);\n       if (TREE_CODE (olddecl) == TREE_LIST)\n \tolddecl = TREE_VALUE (olddecl);"}, {"sha": "77b6a7fa3260b64b4108ef5039ea37d229753bbe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6936461f13040d03e5371a9069fe477ac8a7c705/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6936461f13040d03e5371a9069fe477ac8a7c705/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6936461f13040d03e5371a9069fe477ac8a7c705", "patch": "@@ -1,3 +1,8 @@\n+2007-05-22  Ollie Wild  <aaw@google.com>\n+\n+\t* g++.dg/lookup/name-clash5.C: New test.\n+\t* g++.dg/lookup/name-clash6.C: New test.\n+\n 2007-05-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* g++.dg/other/i386-2.C: Update comments on header files tested."}, {"sha": "7f220d8877f7c88925c6922a0acdba74ff292f07", "filename": "gcc/testsuite/g++.dg/lookup/name-clash5.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6936461f13040d03e5371a9069fe477ac8a7c705/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fname-clash5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6936461f13040d03e5371a9069fe477ac8a7c705/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fname-clash5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fname-clash5.C?ref=6936461f13040d03e5371a9069fe477ac8a7c705", "patch": "@@ -0,0 +1,13 @@\n+// Copyright (C) 2007 Free Software Foundation\n+// Contributed by Ollie Wild <aaw@google.com>\n+// { dg-do compile }\n+\n+// C++ Standard, 3.3, clause 4:\n+// \"[Note: a namespace name or a class template name must be unique in its\n+// declarative region (7.3.2, clause 14). ]\"\n+\n+namespace N\n+{ // { dg-error \"previous declaration\" }\n+}\n+\n+class N; // { dg-error \"redeclared\" }"}, {"sha": "63a0b15bf5eea55d687dc370e0fa8afe7fe99fc3", "filename": "gcc/testsuite/g++.dg/lookup/name-clash6.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6936461f13040d03e5371a9069fe477ac8a7c705/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fname-clash6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6936461f13040d03e5371a9069fe477ac8a7c705/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fname-clash6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fname-clash6.C?ref=6936461f13040d03e5371a9069fe477ac8a7c705", "patch": "@@ -0,0 +1,13 @@\n+// Copyright (C) 2007 Free Software Foundation\n+// Contributed by Ollie Wild <aaw@google.com>\n+// { dg-do compile }\n+\n+// C++ Standard, 3.3, clause 4:\n+// \"[Note: a namespace name or a class template name must be unique in its\n+// declarative region (7.3.2, clause 14). ]\"\n+\n+class N; // { dg-error \"previous declaration\" }\n+\n+namespace N\n+{ // { dg-error \"redeclared\" }\n+}"}]}