{"sha": "f2f9cdad15a6eaadb93239092eb4441c535fa387", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJmOWNkYWQxNWE2ZWFhZGI5MzIzOTA5MmViNDQ0MWM1MzVmYTM4Nw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-07-16T14:11:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-16T14:11:09Z"}, "message": "[Ada] Crash on Indefinite_Hashed_Maps with -gnata -gnateV\n\nThis patch corrects the generation of helper functions which verify the\nvalidity of record type scalar discriminants and scalar components when\nswitches -gnata (assertions enabled) and -gnateV (validity checks on\nsubprogram parameters) are in effect.\n\n2018-07-16  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* exp_attr.adb (Build_Record_VS_Func): Handle corner cases dealing with\n\tclass-wide types and record extensions.\n\ngcc/testsuite/\n\n\t* gnat.dg/validity_check3.adb, gnat.dg/validity_check3.ads: New\n\ttestcase.\n\nFrom-SVN: r262715", "tree": {"sha": "1a85715c539174c1bc90ded7ca4aa5838aec14b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a85715c539174c1bc90ded7ca4aa5838aec14b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2f9cdad15a6eaadb93239092eb4441c535fa387", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f9cdad15a6eaadb93239092eb4441c535fa387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2f9cdad15a6eaadb93239092eb4441c535fa387", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f9cdad15a6eaadb93239092eb4441c535fa387/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "721500abf2b9d41bea8d2c91277c4ad5ab834db7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721500abf2b9d41bea8d2c91277c4ad5ab834db7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/721500abf2b9d41bea8d2c91277c4ad5ab834db7"}], "stats": {"total": 261, "additions": 257, "deletions": 4}, "files": [{"sha": "59597a3a39b7e182c0f5f9411f940e6fcb07d8fc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f9cdad15a6eaadb93239092eb4441c535fa387/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f9cdad15a6eaadb93239092eb4441c535fa387/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f2f9cdad15a6eaadb93239092eb4441c535fa387", "patch": "@@ -1,3 +1,8 @@\n+2018-07-16  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_attr.adb (Build_Record_VS_Func): Handle corner cases dealing with\n+\tclass-wide types and record extensions.\n+\n 2018-07-16  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_eval.adb (Eval_Integer_Literal): Add exception for avoiding"}, {"sha": "77e706a97c970cadf832784beca1d075cbc377e6", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 35, "deletions": 4, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f9cdad15a6eaadb93239092eb4441c535fa387/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f9cdad15a6eaadb93239092eb4441c535fa387/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=f2f9cdad15a6eaadb93239092eb4441c535fa387", "patch": "@@ -724,13 +724,44 @@ package body Exp_Attr is\n \n       Func_Id  : constant Entity_Id := Make_Temporary (Loc, 'V');\n       Obj_Id   : constant Entity_Id := Make_Temporary (Loc, 'R');\n-      Rec_Decl : constant Node_Id   := Declaration_Node (Rec_Typ);\n-      Rec_Def  : constant Node_Id   := Type_Definition (Rec_Decl);\n+      Comps    : Node_Id;\n       Stmts    : List_Id;\n+      Typ      : Entity_Id;\n+      Typ_Decl : Node_Id;\n+      Typ_Def  : Node_Id;\n+      Typ_Ext  : Node_Id;\n \n    --  Start of processing for Build_Record_VS_Func\n \n    begin\n+      Typ := Rec_Typ;\n+\n+      --  Use the root type when dealing with a class-wide type\n+\n+      if Is_Class_Wide_Type (Typ) then\n+         Typ := Root_Type (Typ);\n+      end if;\n+\n+      Typ_Decl := Declaration_Node (Typ);\n+      Typ_Def  := Type_Definition (Typ_Decl);\n+\n+      --  The components of a derived type are located in the extension part\n+\n+      if Nkind (Typ_Def) = N_Derived_Type_Definition then\n+         Typ_Ext := Record_Extension_Part (Typ_Def);\n+\n+         if Present (Typ_Ext) then\n+            Comps := Component_List (Typ_Ext);\n+         else\n+            Comps := Empty;\n+         end if;\n+\n+      --  Otherwise the components are available in the definition\n+\n+      else\n+         Comps := Component_List (Typ_Def);\n+      end if;\n+\n       --  The code generated by this routine is as follows:\n       --\n       --    function Func_Id (Obj_Id : Formal_Typ) return Boolean is\n@@ -774,15 +805,15 @@ package body Exp_Attr is\n       if not Is_Unchecked_Union (Rec_Typ) then\n          Validate_Fields\n            (Obj_Id => Obj_Id,\n-            Fields => Discriminant_Specifications (Rec_Decl),\n+            Fields => Discriminant_Specifications (Typ_Decl),\n             Stmts  => Stmts);\n       end if;\n \n       --  Validate the components and variant parts\n \n       Validate_Component_List\n         (Obj_Id    => Obj_Id,\n-         Comp_List => Component_List (Rec_Def),\n+         Comp_List => Comps,\n          Stmts     => Stmts);\n \n       --  Generate:"}, {"sha": "89e2c79c23a6538111b5ce220cc61fa78afebd14", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f9cdad15a6eaadb93239092eb4441c535fa387/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f9cdad15a6eaadb93239092eb4441c535fa387/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2f9cdad15a6eaadb93239092eb4441c535fa387", "patch": "@@ -1,3 +1,8 @@\n+2018-07-16  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* gnat.dg/validity_check3.adb, gnat.dg/validity_check3.ads: New\n+\ttestcase.\n+\n 2018-07-16  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/wide_wide_value1.adb: New testcase."}, {"sha": "925f9a6d8f2d31dfb1fa8cade866d55ef0853772", "filename": "gcc/testsuite/gnat.dg/validity_check3.adb", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f9cdad15a6eaadb93239092eb4441c535fa387/gcc%2Ftestsuite%2Fgnat.dg%2Fvalidity_check3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f9cdad15a6eaadb93239092eb4441c535fa387/gcc%2Ftestsuite%2Fgnat.dg%2Fvalidity_check3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvalidity_check3.adb?ref=f2f9cdad15a6eaadb93239092eb4441c535fa387", "patch": "@@ -0,0 +1,96 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnata -gnateV\" }\n+\n+package body Validity_Check3 is\n+   procedure Proc_Priv_CW_1 (Param : Tag_1'Class) is begin null; end;\n+   procedure Proc_Priv_CW_2 (Param : Tag_2'Class) is begin null; end;\n+   procedure Proc_Priv_CW_3 (Param : Tag_3'Class) is begin null; end;\n+   procedure Proc_Priv_CW_4 (Param : Tag_4'Class) is begin null; end;\n+   procedure Proc_Priv_CW_5 (Param : Tag_5'Class) is begin null; end;\n+   procedure Proc_Priv_CW_6 (Param : Tag_6'Class) is begin null; end;\n+\n+   procedure Proc_Priv_Rec_1 (Param : Rec_1) is begin null; end;\n+   procedure Proc_Priv_Rec_2 (Param : Rec_2) is begin null; end;\n+   procedure Proc_Priv_Rec_3 (Param : Rec_3) is begin null; end;\n+   procedure Proc_Priv_Rec_4 (Param : Rec_4) is begin null; end;\n+\n+   procedure Proc_Priv_Tag_1 (Param : Tag_1) is begin null; end;\n+   procedure Proc_Priv_Tag_2 (Param : Tag_2) is begin null; end;\n+   procedure Proc_Priv_Tag_3 (Param : Tag_3) is begin null; end;\n+   procedure Proc_Priv_Tag_4 (Param : Tag_4) is begin null; end;\n+   procedure Proc_Priv_Tag_5 (Param : Tag_5) is begin null; end;\n+   procedure Proc_Priv_Tag_6 (Param : Tag_6) is begin null; end;\n+\n+   procedure Proc_Vis_CW_1 (Param : Tag_1'Class) is begin null; end;\n+   procedure Proc_Vis_CW_2 (Param : Tag_2'Class) is begin null; end;\n+   procedure Proc_Vis_CW_3 (Param : Tag_3'Class) is begin null; end;\n+   procedure Proc_Vis_CW_4 (Param : Tag_4'Class) is begin null; end;\n+   procedure Proc_Vis_CW_5 (Param : Tag_5'Class) is begin null; end;\n+   procedure Proc_Vis_CW_6 (Param : Tag_6'Class) is begin null; end;\n+\n+   procedure Proc_Vis_Rec_1 (Param : Rec_1) is begin null; end;\n+   procedure Proc_Vis_Rec_2 (Param : Rec_2) is begin null; end;\n+   procedure Proc_Vis_Rec_3 (Param : Rec_3) is begin null; end;\n+   procedure Proc_Vis_Rec_4 (Param : Rec_4) is begin null; end;\n+\n+   procedure Proc_Vis_Tag_1 (Param : Tag_1) is begin null; end;\n+   procedure Proc_Vis_Tag_2 (Param : Tag_2) is begin null; end;\n+   procedure Proc_Vis_Tag_3 (Param : Tag_3) is begin null; end;\n+   procedure Proc_Vis_Tag_4 (Param : Tag_4) is begin null; end;\n+   procedure Proc_Vis_Tag_5 (Param : Tag_5) is begin null; end;\n+   procedure Proc_Vis_Tag_6 (Param : Tag_6) is begin null; end;\n+\n+   procedure Call_All is\n+      pragma Warnings (Off);\n+      Obj_Rec_1 : Rec_1;\n+      Obj_Rec_2 : Rec_2;\n+      Obj_Rec_3 : Rec_3 (3);\n+      Obj_Rec_4 : Rec_4 (4);\n+      Obj_Tag_1 : Tag_1;\n+      Obj_Tag_2 : Tag_2;\n+      Obj_Tag_3 : Tag_3 (3);\n+      Obj_Tag_4 : Tag_4 (4);\n+      Obj_Tag_5 : Tag_5;\n+      Obj_Tag_6 : Tag_6 (6);\n+      pragma Warnings (On);\n+\n+   begin\n+      Proc_Priv_CW_1 (Obj_Tag_1);\n+      Proc_Priv_CW_2 (Obj_Tag_2);\n+      Proc_Priv_CW_3 (Obj_Tag_3);\n+      Proc_Priv_CW_4 (Obj_Tag_4);\n+      Proc_Priv_CW_5 (Obj_Tag_5);\n+      Proc_Priv_CW_6 (Obj_Tag_6);\n+\n+      Proc_Priv_Rec_1 (Obj_Rec_1);\n+      Proc_Priv_Rec_2 (Obj_Rec_2);\n+      Proc_Priv_Rec_3 (Obj_Rec_3);\n+      Proc_Priv_Rec_4 (Obj_Rec_4);\n+\n+      Proc_Priv_Tag_1 (Obj_Tag_1);\n+      Proc_Priv_Tag_2 (Obj_Tag_2);\n+      Proc_Priv_Tag_3 (Obj_Tag_3);\n+      Proc_Priv_Tag_4 (Obj_Tag_4);\n+      Proc_Priv_Tag_5 (Obj_Tag_5);\n+      Proc_Priv_Tag_6 (Obj_Tag_6);\n+\n+      Proc_Vis_CW_1 (Obj_Tag_1);\n+      Proc_Vis_CW_2 (Obj_Tag_2);\n+      Proc_Vis_CW_3 (Obj_Tag_3);\n+      Proc_Vis_CW_4 (Obj_Tag_4);\n+      Proc_Vis_CW_5 (Obj_Tag_5);\n+      Proc_Vis_CW_6 (Obj_Tag_6);\n+\n+      Proc_Vis_Rec_1 (Obj_Rec_1);\n+      Proc_Vis_Rec_2 (Obj_Rec_2);\n+      Proc_Vis_Rec_3 (Obj_Rec_3);\n+      Proc_Vis_Rec_4 (Obj_Rec_4);\n+\n+      Proc_Vis_Tag_1 (Obj_Tag_1);\n+      Proc_Vis_Tag_2 (Obj_Tag_2);\n+      Proc_Vis_Tag_3 (Obj_Tag_3);\n+      Proc_Vis_Tag_4 (Obj_Tag_4);\n+      Proc_Vis_Tag_5 (Obj_Tag_5);\n+      Proc_Vis_Tag_6 (Obj_Tag_6);\n+   end Call_All;\n+end Validity_Check3;"}, {"sha": "537f0ec1a9c9a4de7cc1e79147e648245713d2b3", "filename": "gcc/testsuite/gnat.dg/validity_check3.ads", "status": "added", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f9cdad15a6eaadb93239092eb4441c535fa387/gcc%2Ftestsuite%2Fgnat.dg%2Fvalidity_check3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f9cdad15a6eaadb93239092eb4441c535fa387/gcc%2Ftestsuite%2Fgnat.dg%2Fvalidity_check3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvalidity_check3.ads?ref=f2f9cdad15a6eaadb93239092eb4441c535fa387", "patch": "@@ -0,0 +1,116 @@\n+package Validity_Check3 is\n+   procedure Call_All;\n+\n+   type Rec_1 is private;\n+   procedure Proc_Vis_Rec_1 (Param : Rec_1);\n+\n+   type Rec_2 (<>) is private;\n+   procedure Proc_Vis_Rec_2 (Param : Rec_2);\n+\n+   type Rec_3 (<>) is private;\n+   procedure Proc_Vis_Rec_3 (Param : Rec_3);\n+\n+   type Rec_4 (Discr : Integer) is private;\n+   procedure Proc_Vis_Rec_4 (Param : Rec_4);\n+\n+   type Tag_1 is tagged private;\n+   procedure Proc_Vis_Tag_1 (Param : Tag_1);\n+   procedure Proc_Vis_CW_1  (Param : Tag_1'Class);\n+\n+   type Tag_2 (<>) is tagged private;\n+   procedure Proc_Vis_Tag_2 (Param : Tag_2);\n+   procedure Proc_Vis_CW_2  (Param : Tag_2'Class);\n+\n+   type Tag_3 (<>) is tagged private;\n+   procedure Proc_Vis_Tag_3 (Param : Tag_3);\n+   procedure Proc_Vis_CW_3  (Param : Tag_3'Class);\n+\n+   type Tag_4 (Discr : Integer) is tagged private;\n+   procedure Proc_Vis_Tag_4 (Param : Tag_4);\n+   procedure Proc_Vis_CW_4  (Param : Tag_4'Class);\n+\n+   type Tag_5 is new Tag_1 with private;\n+   procedure Proc_Vis_Tag_5 (Param : Tag_5);\n+   procedure Proc_Vis_CW_5  (Param : Tag_5'Class);\n+\n+   type Tag_6 is new Tag_4 with private;\n+   procedure Proc_Vis_Tag_6 (Param : Tag_6);\n+   procedure Proc_Vis_CW_6  (Param : Tag_6'Class);\n+\n+private\n+   type Rec_1 is record\n+      Comp_1 : Integer;\n+      Comp_2 : Boolean;\n+   end record;\n+\n+   procedure Proc_Priv_Rec_1 (Param : Rec_1);\n+\n+   type Rec_2 is record\n+      Comp_1 : Integer;\n+      Comp_2 : Boolean;\n+   end record;\n+\n+   procedure Proc_Priv_Rec_2 (Param : Rec_2);\n+\n+   type Rec_3 (Discr : Integer) is record\n+      Comp_1 : Integer;\n+      Comp_2 : Boolean;\n+   end record;\n+\n+   procedure Proc_Priv_Rec_3 (Param : Rec_3);\n+\n+   type Rec_4 (Discr : Integer) is record\n+      Comp_1 : Integer;\n+      Comp_2 : Boolean;\n+   end record;\n+\n+   procedure Proc_Priv_Rec_4 (Param : Rec_4);\n+\n+   type Tag_1 is tagged record\n+      Comp_1 : Integer;\n+      Comp_2 : Boolean;\n+   end record;\n+\n+   procedure Proc_Priv_Tag_1 (Param : Tag_1);\n+   procedure Proc_Priv_CW_1  (Param : Tag_1'Class);\n+\n+   type Tag_2 is tagged record\n+      Comp_1 : Integer;\n+      Comp_2 : Boolean;\n+   end record;\n+\n+   procedure Proc_Priv_Tag_2 (Param : Tag_2);\n+   procedure Proc_Priv_CW_2  (Param : Tag_2'Class);\n+\n+   type Tag_3 (Discr : Integer) is tagged record\n+      Comp_1 : Integer;\n+      Comp_2 : Boolean;\n+   end record;\n+\n+   procedure Proc_Priv_Tag_3 (Param : Tag_3);\n+   procedure Proc_Priv_CW_3  (Param : Tag_3'Class);\n+\n+   type Tag_4 (Discr : Integer) is tagged record\n+      Comp_1 : Integer;\n+      Comp_2 : Boolean;\n+   end record;\n+\n+   procedure Proc_Priv_Tag_4 (Param : Tag_4);\n+   procedure Proc_Priv_CW_4  (Param : Tag_4'Class);\n+\n+   type Tag_5 is new Tag_1 with record\n+      Comp_3 : Integer;\n+      Comp_4 : Boolean;\n+   end record;\n+\n+   procedure Proc_Priv_Tag_5 (Param : Tag_5);\n+   procedure Proc_Priv_CW_5  (Param : Tag_5'Class);\n+\n+   type Tag_6 is new Tag_4 with record\n+      Comp_3 : Integer;\n+      Comp_4 : Boolean;\n+   end record;\n+\n+   procedure Proc_Priv_Tag_6 (Param : Tag_6);\n+   procedure Proc_Priv_CW_6  (Param : Tag_6'Class);\n+end Validity_Check3;"}]}