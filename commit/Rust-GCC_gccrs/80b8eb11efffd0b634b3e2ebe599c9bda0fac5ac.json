{"sha": "80b8eb11efffd0b634b3e2ebe599c9bda0fac5ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBiOGViMTFlZmZmZDBiNjM0YjNlMmViZTU5OWM5YmRhMGZhYzVhYw==", "commit": {"author": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2007-07-31T10:06:24Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2007-07-31T10:06:24Z"}, "message": "neon.md (vec_set<mode>_internal, [...]): New define_insns.\n\n\tgcc/\n\t* config/arm/neon.md (vec_set<mode>_internal, vec_setv2di_internal):\n\tNew define_insns. Use correct RTL.\n\t(vec_set<mode>): Write as expander.\n\nFrom-SVN: r127084", "tree": {"sha": "63dc808c358d3b8ad1b76c5c36f584e8674ce9f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63dc808c358d3b8ad1b76c5c36f584e8674ce9f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80b8eb11efffd0b634b3e2ebe599c9bda0fac5ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b8eb11efffd0b634b3e2ebe599c9bda0fac5ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80b8eb11efffd0b634b3e2ebe599c9bda0fac5ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b8eb11efffd0b634b3e2ebe599c9bda0fac5ac/comments", "author": null, "committer": null, "parents": [{"sha": "013e926646c2670c030d890125b0256da66fea26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/013e926646c2670c030d890125b0256da66fea26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/013e926646c2670c030d890125b0256da66fea26"}], "stats": {"total": 64, "additions": 42, "deletions": 22}, "files": [{"sha": "d7a2e7e597b311a978ffa576df77839aebff8fb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b8eb11efffd0b634b3e2ebe599c9bda0fac5ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b8eb11efffd0b634b3e2ebe599c9bda0fac5ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80b8eb11efffd0b634b3e2ebe599c9bda0fac5ac", "patch": "@@ -1,6 +1,12 @@\n+2007-07-31  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/arm/neon.md (vec_set<mode>_internal, vec_setv2di_internal):\n+\tNew define_insns. Use correct RTL.\n+\t(vec_set<mode>): Write as expander.\n+\n 2007-07-31  Razya Ladelsky  <razya@il.ibm.com>\n \n-        * matrix-reorg.c (analyze_matrix_allocation_site): Avoid referring \n+\t* matrix-reorg.c (analyze_matrix_allocation_site): Avoid referring \n \tto an unallocated space.\n \n 2007-07-30  Jan Sjodin  <jan.sjodin@amd.com>"}, {"sha": "394f26a6c5831e0c7a6b3704609a348d40139da8", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 35, "deletions": 21, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b8eb11efffd0b634b3e2ebe599c9bda0fac5ac/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b8eb11efffd0b634b3e2ebe599c9bda0fac5ac/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=80b8eb11efffd0b634b3e2ebe599c9bda0fac5ac", "patch": "@@ -727,33 +727,35 @@\n   neon_disambiguate_copy (operands, dest, src, 4);\n })\n \n-(define_insn \"vec_set<mode>\"\n-  [(set (match_operand:VD 0 \"s_register_operand\" \"+w\")\n+(define_insn \"vec_set<mode>_internal\"\n+  [(set (match_operand:VD 0 \"s_register_operand\" \"=w\")\n         (vec_merge:VD\n-          (match_operand:VD 3 \"s_register_operand\" \"0\")\n           (vec_duplicate:VD\n             (match_operand:<V_elem> 1 \"s_register_operand\" \"r\"))\n-          (ashift:SI (const_int 1)\n-                     (match_operand:SI 2 \"immediate_operand\" \"i\"))))]\n+          (match_operand:VD 3 \"s_register_operand\" \"0\")\n+          (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n   \"TARGET_NEON\"\n-  \"vmov%?.<V_uf_sclr>\\t%P0[%c2], %1\"\n+{\n+  operands[2] = GEN_INT (ffs ((int) INTVAL (operands[2]) - 1));\n+  \n+  return \"vmov%?.<V_uf_sclr>\\t%P0[%c2], %1\";\n+}\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"neon_type\" \"neon_mcr\")]\n-)\n+   (set_attr \"neon_type\" \"neon_mcr\")])\n \n-(define_insn \"vec_set<mode>\"\n-  [(set (match_operand:VQ 0 \"s_register_operand\" \"+w\")\n+(define_insn \"vec_set<mode>_internal\"\n+  [(set (match_operand:VQ 0 \"s_register_operand\" \"=w\")\n         (vec_merge:VQ\n-          (match_operand:VQ 3 \"s_register_operand\" \"0\")\n           (vec_duplicate:VQ\n             (match_operand:<V_elem> 1 \"s_register_operand\" \"r\"))\n-          (ashift:SI (const_int 1)\n-\t\t     (match_operand:SI 2 \"immediate_operand\" \"i\"))))]\n+          (match_operand:VQ 3 \"s_register_operand\" \"0\")\n+          (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n   \"TARGET_NEON\"\n {\n+  HOST_WIDE_INT elem = ffs (operands[2]) - 1;\n   int half_elts = GET_MODE_NUNITS (<MODE>mode) / 2;\n-  int elt = INTVAL (operands[2]) % half_elts;\n-  int hi = (INTVAL (operands[2]) / half_elts) * 2;\n+  int elt = elem % half_elts;\n+  int hi = (elem / half_elts) * 2;\n   int regno = REGNO (operands[0]);\n \n   operands[0] = gen_rtx_REG (<V_HALF>mode, regno + hi);\n@@ -765,17 +767,17 @@\n    (set_attr \"neon_type\" \"neon_mcr\")]\n )\n \n-(define_insn \"vec_setv2di\"\n-  [(set (match_operand:V2DI 0 \"s_register_operand\" \"+w\")\n+(define_insn \"vec_setv2di_internal\"\n+  [(set (match_operand:V2DI 0 \"s_register_operand\" \"=w\")\n         (vec_merge:V2DI\n-          (match_operand:V2DI 3 \"s_register_operand\" \"0\")\n           (vec_duplicate:V2DI\n             (match_operand:DI 1 \"s_register_operand\" \"r\"))\n-          (ashift:SI (const_int 1)\n-\t\t     (match_operand:SI 2 \"immediate_operand\" \"i\"))))]\n+          (match_operand:V2DI 3 \"s_register_operand\" \"0\")\n+          (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n   \"TARGET_NEON\"\n {\n-  int regno = REGNO (operands[0]) + INTVAL (operands[2]);\n+  HOST_WIDE_INT elem = ffs (operands[2]) - 1;\n+  int regno = REGNO (operands[0]) + 2 * elem;\n \n   operands[0] = gen_rtx_REG (DImode, regno);\n \n@@ -785,6 +787,18 @@\n    (set_attr \"neon_type\" \"neon_mcr_2_mcrr\")]\n )\n \n+(define_expand \"vec_set<mode>\"\n+  [(match_operand:VDQ 0 \"s_register_operand\" \"\")\n+   (match_operand:<V_elem> 1 \"s_register_operand\" \"\")\n+   (match_operand:SI 2 \"immediate_operand\" \"\")]\n+  \"TARGET_NEON\"\n+{\n+  HOST_WIDE_INT elem = (HOST_WIDE_INT) 1 << INTVAL (operands[2]);\n+  emit_insn (gen_vec_set<mode>_internal (operands[0], operands[1],\n+\t\t\t\t\t GEN_INT (elem), operands[0]));\n+  DONE;\n+})\n+\n (define_insn \"vec_extract<mode>\"\n   [(set (match_operand:<V_elem> 0 \"s_register_operand\" \"=r\")\n         (vec_select:<V_elem>"}]}