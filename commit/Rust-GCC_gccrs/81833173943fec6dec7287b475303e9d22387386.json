{"sha": "81833173943fec6dec7287b475303e9d22387386", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE4MzMxNzM5NDNmZWM2ZGVjNzI4N2I0NzUzMDNlOWQyMjM4NzM4Ng==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-10-15T16:47:52Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-10-15T16:47:52Z"}, "message": "re PR c++/50080 ([DR 468] error: 'template' (as a disambiguator) is only allowed within templates)\n\n/cp\n2012-10-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50080\n\t* parser.c (cp_parser_optional_template_keyword): Implement\n\tCore/468, allow outside template.\n\n/testsuite\n2012-10-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50080\n\t* g++.dg/parse/tmpl-outside2.C: New.\n\t* g++.dg/parse/tmpl-outside1.C: Adjust.\n\t* g++.dg/template/qualttp18.C: Likewise.\n\t* g++.old-deja/g++.pt/memtemp87.C: Likewise.\n\t* g++.old-deja/g++.pt/overload13.C: Likewise.\n\nFrom-SVN: r192465", "tree": {"sha": "16c3380243320131ca2a9104b161a01a40c0cd8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16c3380243320131ca2a9104b161a01a40c0cd8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81833173943fec6dec7287b475303e9d22387386", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81833173943fec6dec7287b475303e9d22387386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81833173943fec6dec7287b475303e9d22387386", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81833173943fec6dec7287b475303e9d22387386/comments", "author": null, "committer": null, "parents": [{"sha": "308a3fe2b9afc954a494c9d4e0092fb11adcd8ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308a3fe2b9afc954a494c9d4e0092fb11adcd8ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/308a3fe2b9afc954a494c9d4e0092fb11adcd8ef"}], "stats": {"total": 68, "additions": 41, "deletions": 27}, "files": [{"sha": "5239e7e33cff02524325a694fb9506e7fe719acd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81833173943fec6dec7287b475303e9d22387386/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81833173943fec6dec7287b475303e9d22387386/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=81833173943fec6dec7287b475303e9d22387386", "patch": "@@ -1,3 +1,9 @@\n+2012-10-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50080\n+\t* parser.c (cp_parser_optional_template_keyword): Implement\n+\tCore/468, allow outside template.\n+\n 2012-10-14  Jason Merrill  <jason@redhat.com>\n \t    Ville Voutilainen  <ville.voutilainen@gmail.com>\n "}, {"sha": "965bc6212771b06fcb798c568849a6f3bf0d95a0", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81833173943fec6dec7287b475303e9d22387386/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81833173943fec6dec7287b475303e9d22387386/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=81833173943fec6dec7287b475303e9d22387386", "patch": "@@ -23252,29 +23252,10 @@ cp_parser_optional_template_keyword (cp_parser *parser)\n {\n   if (cp_lexer_next_token_is_keyword (parser->lexer, RID_TEMPLATE))\n     {\n-      /* The `template' keyword can only be used within templates;\n-\t outside templates the parser can always figure out what is a\n-\t template and what is not.  */\n-      if (!processing_template_decl)\n-\t{\n-\t  cp_token *token = cp_lexer_peek_token (parser->lexer);\n-\t  error_at (token->location,\n-\t\t    \"%<template%> (as a disambiguator) is only allowed \"\n-\t\t    \"within templates\");\n-\t  /* If this part of the token stream is rescanned, the same\n-\t     error message would be generated.  So, we purge the token\n-\t     from the stream.  */\n-\t  cp_lexer_purge_token (parser->lexer);\n-\t  return false;\n-\t}\n-      else\n-\t{\n-\t  /* Consume the `template' keyword.  */\n-\t  cp_lexer_consume_token (parser->lexer);\n-\t  return true;\n-\t}\n+      /* Consume the `template' keyword.  */\n+      cp_lexer_consume_token (parser->lexer);\n+      return true;\n     }\n-\n   return false;\n }\n "}, {"sha": "38055629b881e3f0bfb328a392fceef1e6d12769", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81833173943fec6dec7287b475303e9d22387386/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81833173943fec6dec7287b475303e9d22387386/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=81833173943fec6dec7287b475303e9d22387386", "patch": "@@ -1,3 +1,12 @@\n+2012-10-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50080\n+\t* g++.dg/parse/tmpl-outside2.C: New.\n+\t* g++.dg/parse/tmpl-outside1.C: Adjust.\n+\t* g++.dg/template/qualttp18.C: Likewise.\n+\t* g++.old-deja/g++.pt/memtemp87.C: Likewise.\n+\t* g++.old-deja/g++.pt/overload13.C: Likewise.\n+\n 2012-10-15  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR tree-optimization/54915"}, {"sha": "0713f170aa08ae2a387c71af8755479ad48d908b", "filename": "gcc/testsuite/g++.dg/parse/tmpl-outside1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81833173943fec6dec7287b475303e9d22387386/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftmpl-outside1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81833173943fec6dec7287b475303e9d22387386/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftmpl-outside1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftmpl-outside1.C?ref=81833173943fec6dec7287b475303e9d22387386", "patch": "@@ -7,4 +7,4 @@ struct X\n    template <int i> struct Y {};\n };\n \n-typedef X::template Y<0> y; // { dg-error \"template|invalid\" }\n+typedef X::template Y<0> y;"}, {"sha": "d35656f609ecd8a3570e40e9361b77297a1fcf59", "filename": "gcc/testsuite/g++.dg/parse/tmpl-outside2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81833173943fec6dec7287b475303e9d22387386/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftmpl-outside2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81833173943fec6dec7287b475303e9d22387386/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftmpl-outside2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftmpl-outside2.C?ref=81833173943fec6dec7287b475303e9d22387386", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/50080\n+\n+template <typename T>\n+struct A\n+{\n+  template <typename U>\n+  struct B {};\n+};\n+\n+template <typename T>\n+void test()\n+{\n+  typename A<T>::template B<int> b;\n+}\n+\n+int main()\n+{\n+  typename A<double>::template B<int> b;\n+}"}, {"sha": "b4d28da5980530208363825910738d4667d24777", "filename": "gcc/testsuite/g++.dg/template/qualttp18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81833173943fec6dec7287b475303e9d22387386/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81833173943fec6dec7287b475303e9d22387386/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp18.C?ref=81833173943fec6dec7287b475303e9d22387386", "patch": "@@ -14,7 +14,7 @@ template <template <class> class TT> struct X\n \n struct C\n {\n-\tX<A::template B> x; // { dg-error \"\" }\n+\tX<A::template B> x;\n };\n \n int main()"}, {"sha": "2554518b4b4c63c50024007dd5c8f203eb8afc84", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp87.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81833173943fec6dec7287b475303e9d22387386/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp87.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81833173943fec6dec7287b475303e9d22387386/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp87.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp87.C?ref=81833173943fec6dec7287b475303e9d22387386", "patch": "@@ -12,5 +12,4 @@ public:\n template<template<class> class>\n class Y {\n };\n-Q::template X<int> x; // { dg-error \"\" } template syntax\n-\n+Q::template X<int> x;"}, {"sha": "78a5e6d6ab82198490a9c8a75deede21fae85ae9", "filename": "gcc/testsuite/g++.old-deja/g++.pt/overload13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81833173943fec6dec7287b475303e9d22387386/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81833173943fec6dec7287b475303e9d22387386/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload13.C?ref=81833173943fec6dec7287b475303e9d22387386", "patch": "@@ -7,5 +7,5 @@ struct A {\n int main ()\n {\n   A a;\n-  return a.template f (0); // { dg-error \"\" } \n+  return a.template f (0);\n }"}]}