{"sha": "2f1b0141be5581d0795c3369dcb9eaf27abe35f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYxYjAxNDFiZTU1ODFkMDc5NWMzMzY5ZGNiOWVhZjI3YWJlMzVmNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-11-06T20:13:18Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-11-06T20:13:18Z"}, "message": "* tree-cfgcleanup.c (fixup_noreturn_call): Do not perform DCE here.\n\nFrom-SVN: r217201", "tree": {"sha": "21eb2e0f91d8befcc3d6260dc2901993888eac15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21eb2e0f91d8befcc3d6260dc2901993888eac15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f1b0141be5581d0795c3369dcb9eaf27abe35f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f1b0141be5581d0795c3369dcb9eaf27abe35f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f1b0141be5581d0795c3369dcb9eaf27abe35f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f1b0141be5581d0795c3369dcb9eaf27abe35f7/comments", "author": null, "committer": null, "parents": [{"sha": "45d898e429e6537766aac1afea7dff39a7f136cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45d898e429e6537766aac1afea7dff39a7f136cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45d898e429e6537766aac1afea7dff39a7f136cd"}], "stats": {"total": 75, "additions": 41, "deletions": 34}, "files": [{"sha": "57976f5564778e4ab4dbe037bb1985f1e22b1bb5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1b0141be5581d0795c3369dcb9eaf27abe35f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1b0141be5581d0795c3369dcb9eaf27abe35f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f1b0141be5581d0795c3369dcb9eaf27abe35f7", "patch": "@@ -1,3 +1,7 @@\n+2014-11-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-cfgcleanup.c (fixup_noreturn_call): Do not perform DCE here.\n+\n 2014-11-06  DJ Delorie  <dj@redhat.com>\n \n \t* config/m32c/cond.md (movqicc_<code>_<mode>): Remove mode of"}, {"sha": "bc50a71ab2e19f18d6f6849d784534b7a7f1d4e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1b0141be5581d0795c3369dcb9eaf27abe35f7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1b0141be5581d0795c3369dcb9eaf27abe35f7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2f1b0141be5581d0795c3369dcb9eaf27abe35f7", "patch": "@@ -1,3 +1,7 @@\n+2014-11-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt43.adb: New test.\n+\n 2014-11-06  Marek Polacek  <polacek@redhat.com>\n \n \t* c-c++-common/ubsan/align-2.c: Add dg-output."}, {"sha": "35b407c0afdc47b41d80fe82b57c6563b05e7af7", "filename": "gcc/testsuite/gnat.dg/opt43.adb", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1b0141be5581d0795c3369dcb9eaf27abe35f7/gcc%2Ftestsuite%2Fgnat.dg%2Fopt43.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1b0141be5581d0795c3369dcb9eaf27abe35f7/gcc%2Ftestsuite%2Fgnat.dg%2Fopt43.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt43.adb?ref=2f1b0141be5581d0795c3369dcb9eaf27abe35f7", "patch": "@@ -0,0 +1,21 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -gnatws\" }\n+\n+procedure Opt43 is\n+\n+  function Func return Integer is\n+  begin\n+    if False then\n+       return 0;\n+    end if;\n+  end;\n+\n+begin\n+\n+  if Func = Func then\n+    raise Program_Error;\n+  end if;\n+\n+exception\n+  when Program_Error => null;\n+end;"}, {"sha": "fa383acb4f2bd576e142712a6b067709ed461904", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 12, "deletions": 34, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1b0141be5581d0795c3369dcb9eaf27abe35f7/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1b0141be5581d0795c3369dcb9eaf27abe35f7/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=2f1b0141be5581d0795c3369dcb9eaf27abe35f7", "patch": "@@ -568,7 +568,6 @@ bool\n fixup_noreturn_call (gimple stmt)\n {\n   basic_block bb = gimple_bb (stmt);\n-  bool changed = false;\n \n   if (gimple_call_builtin_p (stmt, BUILT_IN_RETURN))\n     return false;\n@@ -590,46 +589,25 @@ fixup_noreturn_call (gimple stmt)\n \tsplit_block (bb, stmt);\n     }\n \n-  changed |= remove_fallthru_edge (bb->succs);\n-\n-  /* If there is LHS, remove it.  */\n-  if (gimple_call_lhs (stmt))\n+  /* If there is an LHS, remove it.  */\n+  tree lhs = gimple_call_lhs (stmt);\n+  if (lhs)\n     {\n-      tree op = gimple_call_lhs (stmt);\n       gimple_call_set_lhs (stmt, NULL_TREE);\n \n-      /* We need to remove SSA name to avoid checking errors.\n-\t All uses are dominated by the noreturn and thus will\n-\t be removed afterwards.\n-\t We proactively remove affected non-PHI statements to avoid\n-\t fixup_cfg from trying to update them and crashing.  */\n-      if (TREE_CODE (op) == SSA_NAME)\n+      /* We need to fix up the SSA name to avoid checking errors.  */\n+      if (TREE_CODE (lhs) == SSA_NAME)\n \t{\n-\t  use_operand_p use_p;\n-          imm_use_iterator iter;\n-\t  gimple use_stmt;\n-\t  bitmap_iterator bi;\n-\t  unsigned int bb_index;\n-\n-\t  bitmap blocks = BITMAP_ALLOC (NULL);\n-\n-          FOR_EACH_IMM_USE_STMT (use_stmt, iter, op)\n-\t    {\n-\t      if (gimple_code (use_stmt) != GIMPLE_PHI)\n-\t        bitmap_set_bit (blocks, gimple_bb (use_stmt)->index);\n-\t      else\n-\t\tFOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n-\t\t  SET_USE (use_p, error_mark_node);\n-\t    }\n-\t  EXECUTE_IF_SET_IN_BITMAP (blocks, 0, bb_index, bi)\n-\t    delete_basic_block (BASIC_BLOCK_FOR_FN (cfun, bb_index));\n-\t  BITMAP_FREE (blocks);\n-\t  release_ssa_name (op);\n+\t  tree new_var = create_tmp_reg (TREE_TYPE (lhs), NULL);\n+\t  SET_SSA_NAME_VAR_OR_IDENTIFIER (lhs, new_var);\n+\t  SSA_NAME_DEF_STMT (lhs) = gimple_build_nop ();\n+\t  set_ssa_default_def (cfun, new_var, lhs);\n \t}\n+\n       update_stmt (stmt);\n-      changed = true;\n     }\n-  return changed;\n+\n+  return remove_fallthru_edge (bb->succs);\n }\n \n "}]}