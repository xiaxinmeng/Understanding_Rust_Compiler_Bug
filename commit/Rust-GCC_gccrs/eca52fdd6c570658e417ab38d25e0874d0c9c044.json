{"sha": "eca52fdd6c570658e417ab38d25e0874d0c9c044", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNhNTJmZGQ2YzU3MDY1OGU0MTdhYjM4ZDI1ZTA4NzRkMGM5YzA0NA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-07-31T14:25:15Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-07-31T14:25:15Z"}, "message": "[30/46] Use stmt_vec_infos rather than gimple stmts for worklists\n\n2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vect-loop.c (vect_analyze_scalar_cycles_1): Change the type\n\tof the worklist from a vector of gimple stmts to a vector of\n\tstmt_vec_infos.\n\t* tree-vect-stmts.c (vect_mark_relevant, process_use)\n\t(vect_mark_stmts_to_be_vectorized): Likewise\n\nFrom-SVN: r263145", "tree": {"sha": "72c5368b077155f63ecbf0caa5294cd2e38e88dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72c5368b077155f63ecbf0caa5294cd2e38e88dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eca52fdd6c570658e417ab38d25e0874d0c9c044", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca52fdd6c570658e417ab38d25e0874d0c9c044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eca52fdd6c570658e417ab38d25e0874d0c9c044", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca52fdd6c570658e417ab38d25e0874d0c9c044/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1824cfdcd12f2c928b2aa00278082c56e818497", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1824cfdcd12f2c928b2aa00278082c56e818497", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1824cfdcd12f2c928b2aa00278082c56e818497"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "55e3c2cc32e0e99534a38abd062c58e43dbe5520", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca52fdd6c570658e417ab38d25e0874d0c9c044/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca52fdd6c570658e417ab38d25e0874d0c9c044/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eca52fdd6c570658e417ab38d25e0874d0c9c044", "patch": "@@ -1,3 +1,11 @@\n+2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-loop.c (vect_analyze_scalar_cycles_1): Change the type\n+\tof the worklist from a vector of gimple stmts to a vector of\n+\tstmt_vec_infos.\n+\t* tree-vect-stmts.c (vect_mark_relevant, process_use)\n+\t(vect_mark_stmts_to_be_vectorized): Likewise\n+\n 2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vect-loop.c (vect_analyze_loop_operations): Look up the"}, {"sha": "2f45d0d3aae17fa812b2ad17c48dfb68c6bf0f9e", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca52fdd6c570658e417ab38d25e0874d0c9c044/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca52fdd6c570658e417ab38d25e0874d0c9c044/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=eca52fdd6c570658e417ab38d25e0874d0c9c044", "patch": "@@ -474,7 +474,7 @@ vect_analyze_scalar_cycles_1 (loop_vec_info loop_vinfo, struct loop *loop)\n {\n   basic_block bb = loop->header;\n   tree init, step;\n-  auto_vec<gimple *, 64> worklist;\n+  auto_vec<stmt_vec_info, 64> worklist;\n   gphi_iterator gsi;\n   bool double_reduc;\n \n@@ -543,9 +543,9 @@ vect_analyze_scalar_cycles_1 (loop_vec_info loop_vinfo, struct loop *loop)\n   /* Second - identify all reductions and nested cycles.  */\n   while (worklist.length () > 0)\n     {\n-      gimple *phi = worklist.pop ();\n+      stmt_vec_info stmt_vinfo = worklist.pop ();\n+      gphi *phi = as_a <gphi *> (stmt_vinfo->stmt);\n       tree def = PHI_RESULT (phi);\n-      stmt_vec_info stmt_vinfo = vinfo_for_stmt (phi);\n \n       if (dump_enabled_p ())\n         {"}, {"sha": "126ffb07637d5f3520b18e3c1c1723e9451ca2a3", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca52fdd6c570658e417ab38d25e0874d0c9c044/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca52fdd6c570658e417ab38d25e0874d0c9c044/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=eca52fdd6c570658e417ab38d25e0874d0c9c044", "patch": "@@ -194,7 +194,7 @@ vect_clobber_variable (gimple *stmt, gimple_stmt_iterator *gsi, tree var)\n    Mark STMT as \"relevant for vectorization\" and add it to WORKLIST.  */\n \n static void\n-vect_mark_relevant (vec<gimple *> *worklist, gimple *stmt,\n+vect_mark_relevant (vec<stmt_vec_info> *worklist, gimple *stmt,\n \t\t    enum vect_relevant relevant, bool live_p)\n {\n   stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n@@ -453,7 +453,7 @@ exist_non_indexing_operands_for_use_p (tree use, gimple *stmt)\n \n static bool\n process_use (gimple *stmt, tree use, loop_vec_info loop_vinfo,\n-\t     enum vect_relevant relevant, vec<gimple *> *worklist,\n+\t     enum vect_relevant relevant, vec<stmt_vec_info> *worklist,\n \t     bool force)\n {\n   stmt_vec_info stmt_vinfo = vinfo_for_stmt (stmt);\n@@ -618,16 +618,14 @@ vect_mark_stmts_to_be_vectorized (loop_vec_info loop_vinfo)\n   basic_block *bbs = LOOP_VINFO_BBS (loop_vinfo);\n   unsigned int nbbs = loop->num_nodes;\n   gimple_stmt_iterator si;\n-  gimple *stmt;\n   unsigned int i;\n-  stmt_vec_info stmt_vinfo;\n   basic_block bb;\n   bool live_p;\n   enum vect_relevant relevant;\n \n   DUMP_VECT_SCOPE (\"vect_mark_stmts_to_be_vectorized\");\n \n-  auto_vec<gimple *, 64> worklist;\n+  auto_vec<stmt_vec_info, 64> worklist;\n \n   /* 1. Init worklist.  */\n   for (i = 0; i < nbbs; i++)\n@@ -665,17 +663,17 @@ vect_mark_stmts_to_be_vectorized (loop_vec_info loop_vinfo)\n       use_operand_p use_p;\n       ssa_op_iter iter;\n \n-      stmt = worklist.pop ();\n+      stmt_vec_info stmt_vinfo = worklist.pop ();\n       if (dump_enabled_p ())\n \t{\n-          dump_printf_loc (MSG_NOTE, vect_location, \"worklist: examine stmt: \");\n-          dump_gimple_stmt (MSG_NOTE, TDF_SLIM, stmt, 0);\n+\t  dump_printf_loc (MSG_NOTE, vect_location,\n+\t\t\t   \"worklist: examine stmt: \");\n+\t  dump_gimple_stmt (MSG_NOTE, TDF_SLIM, stmt_vinfo->stmt, 0);\n \t}\n \n       /* Examine the USEs of STMT. For each USE, mark the stmt that defines it\n \t (DEF_STMT) as relevant/irrelevant according to the relevance property\n \t of STMT.  */\n-      stmt_vinfo = vinfo_for_stmt (stmt);\n       relevant = STMT_VINFO_RELEVANT (stmt_vinfo);\n \n       /* Generally, the relevance property of STMT (in STMT_VINFO_RELEVANT) is"}]}