{"sha": "30c317f5da1ff0144dd6dd8143d830a2223f17b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBjMzE3ZjVkYTFmZjAxNDRkZDZkZDgxNDNkODMwYTIyMjNmMTdiOA==", "commit": {"author": {"name": "Doug Evans", "email": "devans@canuck.cygnus.com", "date": "1997-11-04T21:57:40Z"}, "committer": {"name": "Doug Evans", "email": "devans@gcc.gnu.org", "date": "1997-11-04T21:57:40Z"}, "message": "lex.c (MULTIBYTE_CHARS): #undef if cross compiling.\n\n\t* lex.c (MULTIBYTE_CHARS): #undef if cross compiling.\n\t(real_yylex): Record wide strings using target endianness, not host.\n\nFrom-SVN: r16316", "tree": {"sha": "6e5824cdf2a2aee795d3481abd464a929eccdf16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e5824cdf2a2aee795d3481abd464a929eccdf16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30c317f5da1ff0144dd6dd8143d830a2223f17b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30c317f5da1ff0144dd6dd8143d830a2223f17b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30c317f5da1ff0144dd6dd8143d830a2223f17b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30c317f5da1ff0144dd6dd8143d830a2223f17b8/comments", "author": null, "committer": null, "parents": [{"sha": "645ebf3767cd0300bd13971385806f6cec547f05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/645ebf3767cd0300bd13971385806f6cec547f05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/645ebf3767cd0300bd13971385806f6cec547f05"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "ddedf65832a8bf1bfb0f7c5cf123b48a7f6e6a35", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30c317f5da1ff0144dd6dd8143d830a2223f17b8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30c317f5da1ff0144dd6dd8143d830a2223f17b8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=30c317f5da1ff0144dd6dd8143d830a2223f17b8", "patch": "@@ -1,3 +1,8 @@\n+Tue Nov  4 13:45:10 1997  Doug Evans  <devans@canuck.cygnus.com>\n+\n+\t* lex.c (MULTIBYTE_CHARS): #undef if cross compiling.\n+\t(real_yylex): Record wide strings using target endianness, not host.\n+\n 1997-11-03  Brendan Kehoe  <brendan@lisa.cygnus.com>\n \n \t* repo.c (rindex): Add decl unconditionally."}, {"sha": "d45fe673bc9a4c35bd99bb8b31be2dccb7138a4e", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30c317f5da1ff0144dd6dd8143d830a2223f17b8/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30c317f5da1ff0144dd6dd8143d830a2223f17b8/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=30c317f5da1ff0144dd6dd8143d830a2223f17b8", "patch": "@@ -39,6 +39,13 @@ Boston, MA 02111-1307, USA.  */\n #include \"obstack.h\"\n #include \"c-pragma.h\"\n \n+/* MULTIBYTE_CHARS support only works for native compilers.\n+   ??? Ideally what we want is to model widechar support after\n+   the current floating point support.  */\n+#ifdef CROSS_COMPILE\n+#undef MULTIBYTE_CHARS\n+#endif\n+\n #ifdef MULTIBYTE_CHARS\n #include <stdlib.h>\n #include <locale.h>\n@@ -4064,15 +4071,9 @@ real_yylex ()\n \t    bzero (widep + (len * WCHAR_BYTES), WCHAR_BYTES);\n #else\n \t    {\n-\t      union { long l; char c[sizeof (long)]; } u;\n-\t      int big_endian;\n \t      char *wp, *cp;\n \n-\t      /* Determine whether host is little or big endian.  */\n-\t      u.l = 1;\n-\t      big_endian = u.c[sizeof (long) - 1];\n-\t      wp = widep + (big_endian ? WCHAR_BYTES - 1 : 0);\n-\n+\t      wp = widep + (BYTES_BIG_ENDIAN ? WCHAR_BYTES - 1 : 0);\n \t      bzero (widep, (p - token_buffer) * WCHAR_BYTES);\n \t      for (cp = token_buffer + 1; cp < p; cp++)\n \t\t*wp = *cp, wp += WCHAR_BYTES;"}]}