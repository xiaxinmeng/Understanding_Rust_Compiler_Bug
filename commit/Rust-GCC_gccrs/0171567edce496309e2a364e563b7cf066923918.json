{"sha": "0171567edce496309e2a364e563b7cf066923918", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE3MTU2N2VkY2U0OTYzMDllMmEzNjRlNTYzYjdjZjA2NjkyMzkxOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-06-14T18:15:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-14T18:15:58Z"}, "message": "re PR c++/49389 ([C++0x] Wrong value category for pointer-to-member expression with rvalue object expression)\n\n\tPR c++/49389\n\t* typeck2.c (build_m_component_ref): Preserve rvalueness.\n\nFrom-SVN: r175043", "tree": {"sha": "300061c01b7df3453d9339e24a044912ddc6672a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/300061c01b7df3453d9339e24a044912ddc6672a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0171567edce496309e2a364e563b7cf066923918", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0171567edce496309e2a364e563b7cf066923918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0171567edce496309e2a364e563b7cf066923918", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0171567edce496309e2a364e563b7cf066923918/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2bbf86a46bdece05107c54d94c4c8d41a2d17023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bbf86a46bdece05107c54d94c4c8d41a2d17023", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bbf86a46bdece05107c54d94c4c8d41a2d17023"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "5970440731fc468be978dc8b240df83d4abd7a5c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0171567edce496309e2a364e563b7cf066923918/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0171567edce496309e2a364e563b7cf066923918/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0171567edce496309e2a364e563b7cf066923918", "patch": "@@ -1,5 +1,8 @@\n 2011-06-14  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49389\n+\t* typeck2.c (build_m_component_ref): Preserve rvalueness.\n+\n \tPR c++/49369\n \t* class.c (build_base_path): Fix cv-quals in unevaluated context.\n "}, {"sha": "d72f57ec937acbcc00ba9bec5545cad12e148b6b", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0171567edce496309e2a364e563b7cf066923918/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0171567edce496309e2a364e563b7cf066923918/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=0171567edce496309e2a364e563b7cf066923918", "patch": "@@ -1551,6 +1551,7 @@ build_m_component_ref (tree datum, tree component)\n \n   if (TYPE_PTRMEM_P (ptrmem_type))\n     {\n+      bool is_lval = real_lvalue_p (datum);\n       tree ptype;\n \n       /* Compute the type of the field, as described in [expr.ref].\n@@ -1573,7 +1574,11 @@ build_m_component_ref (tree datum, tree component)\n       datum = build2 (POINTER_PLUS_EXPR, ptype,\n \t\t      fold_convert (ptype, datum),\n \t\t      build_nop (sizetype, component));\n-      return cp_build_indirect_ref (datum, RO_NULL, tf_warning_or_error);\n+      datum = cp_build_indirect_ref (datum, RO_NULL, tf_warning_or_error);\n+      /* If the object expression was an rvalue, return an rvalue.  */\n+      if (!is_lval)\n+\tdatum = move (datum);\n+      return datum;\n     }\n   else\n     return build2 (OFFSET_REF, type, datum, component);"}, {"sha": "1ca37e3490d7f741ce05b2cb148907e276e56db0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0171567edce496309e2a364e563b7cf066923918/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0171567edce496309e2a364e563b7cf066923918/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0171567edce496309e2a364e563b7cf066923918", "patch": "@@ -1,5 +1,8 @@\n 2011-06-14  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49389\n+\t* g++.dg/cpp0x/rv-dotstar.C: New.\n+\n \tPR c++/49369\n \t* g++.dg/cpp0x/decltype30.C: New.\n "}, {"sha": "65aac8da2a1b9eb4da34c358d4b17ebcec2e416e", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-dotstar.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0171567edce496309e2a364e563b7cf066923918/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-dotstar.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0171567edce496309e2a364e563b7cf066923918/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-dotstar.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-dotstar.C?ref=0171567edce496309e2a364e563b7cf066923918", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/49389\n+// { dg-options -std=c++0x }\n+\n+template<class T> T&& val();\n+\n+struct A {};\n+\n+typedef decltype(val<A>().*val<int A::*>()) type;\n+\n+template<class> struct assert_type;\n+template<> struct assert_type<int&&> {};\n+\n+assert_type<type> test;"}]}