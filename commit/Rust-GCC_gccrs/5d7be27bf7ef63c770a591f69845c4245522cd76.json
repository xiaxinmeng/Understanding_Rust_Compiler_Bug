{"sha": "5d7be27bf7ef63c770a591f69845c4245522cd76", "node_id": "C_kwDOANBUbNoAKDVkN2JlMjdiZjdlZjYzYzc3MGE1OTFmNjk4NDVjNDI0NTUyMmNkNzY", "commit": {"author": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2022-09-28T15:27:11Z"}, "committer": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2022-09-28T15:27:11Z"}, "message": "var-tracking: Add entry values up to max register mode\n\nFor parameter of type integer which do not consume a whole register\n(modulo sign/zero extension) this patch adds entry values up to maximal\nregister mode.\n\ngcc/ChangeLog:\n\n\t* var-tracking.cc (vt_add_function_parameter): Add entry values\n\tup to maximal register mode.", "tree": {"sha": "90c1ebf56a37ab045819ed84f09b2f36682324ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90c1ebf56a37ab045819ed84f09b2f36682324ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d7be27bf7ef63c770a591f69845c4245522cd76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7be27bf7ef63c770a591f69845c4245522cd76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7be27bf7ef63c770a591f69845c4245522cd76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7be27bf7ef63c770a591f69845c4245522cd76/comments", "author": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0b00b63a39108311f2e6f9cbe9072579f57df7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b00b63a39108311f2e6f9cbe9072579f57df7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0b00b63a39108311f2e6f9cbe9072579f57df7c"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "9c40ec4fb8b154fcb68388d49c154ee09ef78608", "filename": "gcc/var-tracking.cc", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7be27bf7ef63c770a591f69845c4245522cd76/gcc%2Fvar-tracking.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7be27bf7ef63c770a591f69845c4245522cd76/gcc%2Fvar-tracking.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.cc?ref=5d7be27bf7ef63c770a591f69845c4245522cd76", "patch": "@@ -9906,6 +9906,23 @@ vt_add_function_parameter (tree parm)\n \t\t\t\t     VAR_INIT_STATUS_INITIALIZED, NULL, INSERT);\n \t\t}\n \t    }\n+\n+\t  if (GET_MODE_CLASS (mode) == MODE_INT)\n+\t    {\n+\t      machine_mode wider_mode_iter;\n+\t      FOR_EACH_WIDER_MODE (wider_mode_iter, mode)\n+\t\t{\n+\t\t  if (!HWI_COMPUTABLE_MODE_P (wider_mode_iter))\n+\t\t    break;\n+\t\t  rtx wider_reg\n+\t\t    = gen_rtx_REG (wider_mode_iter, REGNO (incoming));\n+\t\t  cselib_val *wider_val\n+\t\t    = cselib_lookup_from_insn (wider_reg, wider_mode_iter, 1,\n+\t\t\t\t\t       VOIDmode, get_insns ());\n+\t\t  preserve_value (wider_val);\n+\t\t  record_entry_value (wider_val, wider_reg);\n+\t\t}\n+\t    }\n \t}\n     }\n   else if (GET_CODE (incoming) == PARALLEL && !dv_onepart_p (dv))"}]}