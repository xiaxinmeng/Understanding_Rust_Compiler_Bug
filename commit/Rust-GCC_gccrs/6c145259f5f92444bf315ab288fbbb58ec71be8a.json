{"sha": "6c145259f5f92444bf315ab288fbbb58ec71be8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMxNDUyNTlmNWY5MjQ0NGJmMzE1YWIyODhmYmJiNThlYzcxYmU4YQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2009-09-07T15:23:15Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2009-09-07T15:23:15Z"}, "message": "re PR fortran/41197 (ICE with ALLOCATE and nonscalar STAT= variable)\n\n2009-09-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/41197\n\t* resolve_c (resolve_allocate_deallocate):  Complain\n\tif stat or errmsg varaible is an array.\n\n2009-09-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/41197\n\t* gfortran.dg/allocate_alloc_opt_1.f90:  Use scalar\n\tvariables for stat and errmsg.\n\t* gfortran.dg/deallocate_alloc_opt_1.f90:  Likewise.\n\t* gfortran.dg/allocate_stat_2.f90:  New test.\n\nFrom-SVN: r151480", "tree": {"sha": "f5b0bed711483226ac36fcb9abc5e3564791ae5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5b0bed711483226ac36fcb9abc5e3564791ae5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c145259f5f92444bf315ab288fbbb58ec71be8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c145259f5f92444bf315ab288fbbb58ec71be8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c145259f5f92444bf315ab288fbbb58ec71be8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c145259f5f92444bf315ab288fbbb58ec71be8a/comments", "author": null, "committer": null, "parents": [{"sha": "8ff7f8241579ba8823310c4f05e267f8a24951a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff7f8241579ba8823310c4f05e267f8a24951a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ff7f8241579ba8823310c4f05e267f8a24951a2"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "d2a301db2b969c8e15d3ee21a3dd3bbe564da64a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c145259f5f92444bf315ab288fbbb58ec71be8a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c145259f5f92444bf315ab288fbbb58ec71be8a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6c145259f5f92444bf315ab288fbbb58ec71be8a", "patch": "@@ -1,3 +1,9 @@\n+2009-09-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/41197\n+\t* resolve_c (resolve_allocate_deallocate):  Complain\n+\tif stat or errmsg varaible is an array.\n+\n 2009-09-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/41258"}, {"sha": "fd365eb136a79959bbff029e7d0fdaf820aabf36", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c145259f5f92444bf315ab288fbbb58ec71be8a/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c145259f5f92444bf315ab288fbbb58ec71be8a/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=6c145259f5f92444bf315ab288fbbb58ec71be8a", "patch": "@@ -5732,9 +5732,10 @@ resolve_allocate_deallocate (gfc_code *code, const char *fcn)\n \tgfc_error (\"Illegal stat-variable at %L for a PURE procedure\",\n \t\t   &stat->where);\n \n-      if (stat->ts.type != BT_INTEGER\n-\t  && !(stat->ref && (stat->ref->type == REF_ARRAY\n-\t       || stat->ref->type == REF_COMPONENT)))\n+      if ((stat->ts.type != BT_INTEGER\n+\t   && !(stat->ref && (stat->ref->type == REF_ARRAY\n+\t\t\t      || stat->ref->type == REF_COMPONENT)))\n+\t  || stat->rank > 0)\n \tgfc_error (\"Stat-variable at %L must be a scalar INTEGER \"\n \t\t   \"variable\", &stat->where);\n \n@@ -5759,10 +5760,11 @@ resolve_allocate_deallocate (gfc_code *code, const char *fcn)\n \tgfc_error (\"Illegal errmsg-variable at %L for a PURE procedure\",\n \t\t   &errmsg->where);\n \n-      if (errmsg->ts.type != BT_CHARACTER\n-\t  && !(errmsg->ref\n-\t       && (errmsg->ref->type == REF_ARRAY\n-\t  \t   || errmsg->ref->type == REF_COMPONENT)))\n+      if ((errmsg->ts.type != BT_CHARACTER\n+\t   && !(errmsg->ref\n+\t\t&& (errmsg->ref->type == REF_ARRAY\n+\t\t    || errmsg->ref->type == REF_COMPONENT)))\n+\t  || errmsg->rank > 0 )\n \tgfc_error (\"Errmsg-variable at %L must be a scalar CHARACTER \"\n \t\t   \"variable\", &errmsg->where);\n "}, {"sha": "41a90890145bfa6d41f80a084e5e1dff9477c224", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c145259f5f92444bf315ab288fbbb58ec71be8a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c145259f5f92444bf315ab288fbbb58ec71be8a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c145259f5f92444bf315ab288fbbb58ec71be8a", "patch": "@@ -1,3 +1,11 @@\n+2009-09-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/41197\n+\t* gfortran.dg/allocate_alloc_opt_1.f90:  Use scalar\n+\tvariables for stat and errmsg.\n+\t* gfortran.dg/deallocate_alloc_opt_1.f90:  Likewise.\n+\t* gfortran.dg/allocate_stat_2.f90:  New test.\n+\n 2009-09-07  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* gcc.c-torture/compile/20090907-1.c: New test."}, {"sha": "52e0262f4e651d8462f2bdf432add83af0c197bc", "filename": "gcc/testsuite/gfortran.dg/allocate_alloc_opt_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c145259f5f92444bf315ab288fbbb58ec71be8a/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_alloc_opt_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c145259f5f92444bf315ab288fbbb58ec71be8a/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_alloc_opt_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_alloc_opt_1.f90?ref=6c145259f5f92444bf315ab288fbbb58ec71be8a", "patch": "@@ -26,8 +26,8 @@ program a\n \n   allocate(err) ! { dg-error \"nonprocedure pointer or an allocatable\" }\n \n-  allocate(error(2),stat=j,errmsg=error) ! { dg-error \"shall not be ALLOCATEd within\" }\n-  allocate(i(2), stat = i)  ! { dg-error \"shall not be ALLOCATEd within\" }\n+  allocate(error(2),stat=j,errmsg=error(1)) ! { dg-error \"shall not be ALLOCATEd within\" }\n+  allocate(i(2), stat = i(1))  ! { dg-error \"shall not be ALLOCATEd within\" }\n \n   allocate(n) ! { dg-error \"must be ALLOCATABLE or a POINTER\" }\n "}, {"sha": "7cf6d659ea29bd83e3dcfe6eff18fbe186365566", "filename": "gcc/testsuite/gfortran.dg/allocate_stat_2.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c145259f5f92444bf315ab288fbbb58ec71be8a/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c145259f5f92444bf315ab288fbbb58ec71be8a/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat_2.f90?ref=6c145259f5f92444bf315ab288fbbb58ec71be8a", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! PR 41197\n+program main\n+  integer, dimension (4) :: ier = 0\n+  character(len=30), dimension(2) :: er\n+  integer, dimension (:), allocatable :: a\n+  allocate (a (16), stat = ier) ! { dg-error \"must be a scalar INTEGER\" }\n+  allocate (a (14), stat=ier(1),errmsg=er) ! { dg-error \"must be a scalar CHARACTER\" }\n+end\n+"}, {"sha": "5c00741f61c8bca510a5ac201cadd2c760ed74ec", "filename": "gcc/testsuite/gfortran.dg/deallocate_alloc_opt_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c145259f5f92444bf315ab288fbbb58ec71be8a/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeallocate_alloc_opt_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c145259f5f92444bf315ab288fbbb58ec71be8a/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeallocate_alloc_opt_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeallocate_alloc_opt_1.f90?ref=6c145259f5f92444bf315ab288fbbb58ec71be8a", "patch": "@@ -26,8 +26,8 @@ program a\n \n   deallocate(err) ! { dg-error \"nonprocedure pointer or an allocatable\" }\n \n-  deallocate(error,stat=j,errmsg=error) ! { dg-error \"shall not be DEALLOCATEd within\" }\n-  deallocate(i, stat = i)  ! { dg-error \"shall not be DEALLOCATEd within\" }\n+  deallocate(error,stat=j,errmsg=error(1)) ! { dg-error \"shall not be DEALLOCATEd within\" }\n+  deallocate(i, stat = i(1))  ! { dg-error \"shall not be DEALLOCATEd within\" }\n \n   deallocate(n) ! { dg-error \"must be ALLOCATABLE or a POINTER\" }\n "}]}