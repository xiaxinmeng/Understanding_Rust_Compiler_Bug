{"sha": "8acb8421b9b828ab4b6fd9e544a35ce1e39607ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFjYjg0MjFiOWI4MjhhYjRiNmZkOWU1NDRhMzVjZTFlMzk2MDdlZA==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2017-07-28T15:14:25Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-07-28T15:14:25Z"}, "message": "dbl_mov_immediate_1.c: New.\n\n2017-07-28  Tamar Christina  <tamar.christina@arm.com>\n\t    Bilyan Borisov  <bilyan.borisov@arm.com>\n\n\t* gcc.target/aarch64/dbl_mov_immediate_1.c: New.\n\t* gcc.target/aarch64/flt_mov_immediate_1.c: New.\n\t* gcc.target/aarch64/f16_mov_immediate_1.c: New.\n\t* gcc.target/aarch64/f16_mov_immediate_2.c: New.\n\t* gcc.target/aarch64/pr63304_1.c: Changed to double.\n\n\nCo-Authored-By: Bilyan Borisov <bilyan.borisov@arm.com>\n\nFrom-SVN: r250674", "tree": {"sha": "5439c879298d9712ce09be2342c839063aa2e00f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5439c879298d9712ce09be2342c839063aa2e00f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90e6443f3aa73aebe087e6023efae68bb39e2cba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90e6443f3aa73aebe087e6023efae68bb39e2cba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90e6443f3aa73aebe087e6023efae68bb39e2cba"}], "stats": {"total": 226, "additions": 217, "deletions": 9}, "files": [{"sha": "ab57bfe2721a3e69969311cdc9e14e2ec0d5eac5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8acb8421b9b828ab4b6fd9e544a35ce1e39607ed", "patch": "@@ -1,3 +1,12 @@\n+2017-07-28  Tamar Christina  <tamar.christina@arm.com>\n+\t    Bilyan Borisov  <bilyan.borisov@arm.com>\n+\n+\t* gcc.target/aarch64/dbl_mov_immediate_1.c: New.\n+\t* gcc.target/aarch64/flt_mov_immediate_1.c: New.\n+\t* gcc.target/aarch64/f16_mov_immediate_1.c: New.\n+\t* gcc.target/aarch64/f16_mov_immediate_2.c: New.\n+\t* gcc.target/aarch64/pr63304_1.c: Changed to double.\n+\n 2017-07-28  Bin Cheng  <bin.cheng@arm.com>\n \n \t* gcc.dg/tree-ssa/predcom-dse-1.c: New test."}, {"sha": "e8dd01db056100f91ae6b933453622e62c23f411", "filename": "gcc/testsuite/gcc.target/aarch64/dbl_mov_immediate_1.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fdbl_mov_immediate_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fdbl_mov_immediate_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fdbl_mov_immediate_1.c?ref=8acb8421b9b828ab4b6fd9e544a35ce1e39607ed", "patch": "@@ -0,0 +1,53 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-skip-if \"Tiny model won't generate adrp\" { *-*-* } { \"-mcmodel=tiny\" } { \"\" } } */\n+\n+double d0(void)\n+{\n+  double x = 0.0d;\n+  return x;\n+}\n+\n+double dn1(void)\n+{\n+  double x = -0.0d;\n+  return x;\n+}\n+\n+\n+double d1(void)\n+{\n+  double x = 1.5d;\n+  return x;\n+}\n+\n+double d2(void)\n+{\n+  double x = 123256.0d;\n+  return x;\n+}\n+\n+double d3(void)\n+{\n+  double x = 123256123456.0d;\n+  return x;\n+}\n+\n+double d4(void)\n+{\n+  double x = 123456123456123456.0d;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler-times \"movi\\td\\[0-9\\]+, #?0\"                 1 } } */\n+\n+/* { dg-final { scan-assembler-times \"adrp\\tx\\[0-9\\]+, \\.LC\\[0-9\\]\"         2 } } */\n+/* { dg-final { scan-assembler-times \"ldr\\td\\[0-9\\]+, \\\\\\[x\\[0-9\\], #:lo12:\\.LC\\[0-9\\]\\\\\\]\" 2 } } */\n+\n+/* { dg-final { scan-assembler-times \"fmov\\td\\[0-9\\]+, 1\\\\\\.5e\\\\\\+0\"        1 } } */\n+\n+/* { dg-final { scan-assembler-times \"mov\\tx\\[0-9\\]+, 25838523252736\"       1 } } */\n+/* { dg-final { scan-assembler-times \"movk\\tx\\[0-9\\]+, 0x40fe, lsl 48\"      1 } } */\n+/* { dg-final { scan-assembler-times \"mov\\tx\\[0-9\\]+, -9223372036854775808\" 1 } } */\n+/* { dg-final { scan-assembler-times \"fmov\\td\\[0-9\\]+, x\\[0-9\\]+\"           2 } } */\n+"}, {"sha": "1ed3831e139745227487eafa3ccfdc05c99deb34", "filename": "gcc/testsuite/gcc.target/aarch64/f16_mov_immediate_1.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ff16_mov_immediate_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ff16_mov_immediate_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ff16_mov_immediate_1.c?ref=8acb8421b9b828ab4b6fd9e544a35ce1e39607ed", "patch": "@@ -0,0 +1,49 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-require-effective-target arm_v8_2a_fp16_scalar_ok } */\n+/* { dg-add-options arm_v8_2a_fp16_scalar } */\n+\n+extern __fp16 foo ();\n+extern void bar (__fp16* x);\n+\n+void f1 ()\n+{\n+  volatile __fp16 a = 17.0;\n+}\n+\n+\n+void f2 (__fp16 *a)\n+{\n+  *a = 17.0;\n+}\n+\n+void f3 ()\n+{\n+  __fp16 b = foo ();\n+  b = 17.0;\n+  bar (&b);\n+}\n+\n+__fp16 f4 ()\n+{\n+  __fp16 a = 0;\n+  __fp16 b = 1;\n+  __fp16 c = 2;\n+  __fp16 d = 4;\n+\n+  __fp16 z = a + b;\n+  z = z + c;\n+  z = z - d;\n+  return z;\n+}\n+\n+__fp16 f5 ()\n+{\n+  __fp16 a = 16;\n+  bar (&a);\n+  return a;\n+}\n+\n+/* { dg-final { scan-assembler-times \"mov\\tw\\[0-9\\]+, #?19520\"           3 } } */\n+/* { dg-final { scan-assembler-times \"movi\\tv\\[0-9\\]+\\\\\\.2s, 0xbc, lsl 8\"  1 } } */\n+/* { dg-final { scan-assembler-times \"movi\\tv\\[0-9\\]+\\\\\\.2s, 0x4c, lsl 8\"  1 } } */"}, {"sha": "6f44821e9d08d4c3b87eb52b70491183a32ac2ff", "filename": "gcc/testsuite/gcc.target/aarch64/f16_mov_immediate_2.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ff16_mov_immediate_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ff16_mov_immediate_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ff16_mov_immediate_2.c?ref=8acb8421b9b828ab4b6fd9e544a35ce1e39607ed", "patch": "@@ -0,0 +1,45 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-require-effective-target arm_v8_2a_fp16_scalar_ok } */\n+/* { dg-add-options arm_v8_2a_fp16_scalar } */\n+\n+#include <arm_fp16.h>\n+\n+float16_t f0(void)\n+{\n+  float16_t x = 0.0f;\n+  return x;\n+}\n+\n+float16_t fn1(void)\n+{\n+  float16_t x = -0.0f;\n+  return x;\n+}\n+\n+float16_t f1(void)\n+{\n+  float16_t x = 256.0f;\n+  return x;\n+}\n+\n+float16_t f2(void)\n+{\n+  float16_t x = 123256.0f;\n+  return x;\n+}\n+\n+float16_t f3(void)\n+{\n+  float16_t x = 17.0;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler-times \"movi\\tv\\[0-9\\]+\\\\\\.4h, ?#0\"         1 } } */\n+/* { dg-final { scan-assembler-times \"movi\\tv\\[0-9\\]+\\\\\\.2s, 0x80, lsl 8\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movi\\tv\\[0-9\\]+\\\\\\.2s, 0x5c, lsl 8\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movi\\tv\\[0-9\\]+\\\\\\.2s, 0x7c, lsl 8\" 1 } } */\n+\n+/* { dg-final { scan-assembler-times \"mov\\tw\\[0-9\\]+, 19520\"              1 } } */\n+/* { dg-final { scan-assembler-times \"fmov\\th\\[0-9\\], w\\[0-9\\]+\"          1 } } */\n+"}, {"sha": "7b92a5ae40fbd042a6b564a557118d8f8eac7abd", "filename": "gcc/testsuite/gcc.target/aarch64/flt_mov_immediate_1.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fflt_mov_immediate_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fflt_mov_immediate_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fflt_mov_immediate_1.c?ref=8acb8421b9b828ab4b6fd9e544a35ce1e39607ed", "patch": "@@ -0,0 +1,52 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+float f0(void)\n+{\n+  float x = 0.0f;\n+  return x;\n+}\n+\n+float fn1(void)\n+{\n+  float x = -0.0f;\n+  return x;\n+}\n+\n+float f1(void)\n+{\n+  float x = 256.0f;\n+  return x;\n+}\n+\n+float f2(void)\n+{\n+  float x = 123256.0f;\n+  return x;\n+}\n+\n+float f3(void)\n+{\n+  float x = 2.0f;\n+  return x;\n+}\n+\n+float f4(void)\n+{\n+  float x = -20000.1;\n+  return x;\n+}\n+\n+\n+/* { dg-final { scan-assembler-times \"movi\\tv\\[0-9\\]+\\\\\\.2s, ?#0\"           1 } } */\n+/* { dg-final { scan-assembler-times \"movi\\tv\\[0-9\\]+\\\\\\.2s, 0x80, lsl 24\"  1 } } */\n+/* { dg-final { scan-assembler-times \"movi\\tv\\[0-9\\]+\\\\\\.2s, 0x80, lsl 24\"  1 } } */\n+\n+/* { dg-final { scan-assembler-times \"mov\\tw\\[0-9\\]+, 48128\"                1 } } */\n+/* { dg-final { scan-assembler-times \"movk\\tw\\[0-9\\]+, 0x47f0, lsl 16\"      1 } } */\n+\n+/* { dg-final { scan-assembler-times \"fmov\\ts\\[0-9\\]+, 2\\\\\\.0e\\\\\\+0\"  1 } } */\n+\n+/* { dg-final { scan-assembler-times \"mov\\tw\\[0-9\\]+, 16435\"                1 } } */\n+/* { dg-final { scan-assembler-times \"movk\\tw\\[0-9\\]+, 0xc69c, lsl 16\"      1 } } */\n+"}, {"sha": "114d8c1a6c307b688085b0e1648ebe55e04e8857", "filename": "gcc/testsuite/gcc.target/aarch64/pr63304_1.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr63304_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8acb8421b9b828ab4b6fd9e544a35ce1e39607ed/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr63304_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr63304_1.c?ref=8acb8421b9b828ab4b6fd9e544a35ce1e39607ed", "patch": "@@ -4,10 +4,10 @@\n #pragma GCC target (\"+nothing+simd, cmodel=small\")\n \n int\n-cal (float a)\n+cal (double a)\n {\n-  float b = 1.2;\n-  float c = 2.2;\n+  double b = 3.2;\n+  double c = 2.2;\n   if ((a + b) != c)\n     return 0;\n   else\n@@ -19,11 +19,11 @@ cal (float a)\n #pragma GCC target (\"cmodel=large\")\n \n int\n-cal2 (float a)\n+cal2 (double a)\n {\n \n-  float b = 1.2;\n-  float c = 2.2;\n+  double b = 3.2;\n+  double c = 2.2;\n   if ((a + b) != c)\n     return 0;\n   else\n@@ -33,11 +33,11 @@ cal2 (float a)\n #pragma GCC pop_options\n \n int\n-cal3 (float a)\n+cal3 (double a)\n {\n \n-  float b = 1.2;\n-  float c = 2.2;\n+  double b = 3.2;\n+  double c = 2.2;\n   if ((a + b) != c)\n     return 0;\n   else"}]}