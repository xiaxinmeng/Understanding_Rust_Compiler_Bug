{"sha": "19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTllZWM3YWM1ZjczZTdmYzllZWU5NzQzOGJkNWNiZGNkMDcwNzJjMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-08-09T21:24:00Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-08-09T21:24:00Z"}, "message": "compiler: fix buglet in lshift type determination\n    \n    It's possible to construct an lshift expression using unsafe.Sizeof\n    that is technically a compile-time constant but can't be evaluated\n    without going through backend methods. In this case, insure that\n    Type::make_non_abstract_type is called on the numeric operand of the\n    shift (as opposed to leaving as abstract), to avoid an assert later on\n    in the compiler flow.\n    \n    Fixes golang/go#21372.\n    \n    Reviewed-on: https://go-review.googlesource.com/54370\n\nFrom-SVN: r251006", "tree": {"sha": "4a33dc3570b0216cf7209e5e31a7f9bdb1f8a647", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a33dc3570b0216cf7209e5e31a7f9bdb1f8a647"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2/comments", "author": null, "committer": null, "parents": [{"sha": "cc6a467f450424a14bfc71d03e83b3981f4fc864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6a467f450424a14bfc71d03e83b3981f4fc864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc6a467f450424a14bfc71d03e83b3981f4fc864"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c5ecb102c7e98f02107c9aa065ea3b404d032b12", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2", "patch": "@@ -1,4 +1,4 @@\n-5fd112e5c2968e94761c41519c451d789e23a92b\n+480fdfa9dd416bd17115a94fa6021c4dd805fc39\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "6f9c1c96c3f510b2e87f6013cc6dc55862e059c1", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=19eec7ac5f73e7fc9eee97438bd5cbdcd07072c2", "patch": "@@ -5655,7 +5655,7 @@ Binary_expression::do_determine_type(const Type_context* context)\n \n   Type_context subcontext(*context);\n \n-  if (is_constant_expr)\n+  if (is_constant_expr && !is_shift_op)\n     {\n       subcontext.type = NULL;\n       subcontext.may_be_abstract = true;"}]}