{"sha": "9edaabf3d2cee4597f83227656ac50ed03bc669a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVkYWFiZjNkMmNlZTQ1OTdmODMyMjc2NTZhYzUwZWQwM2JjNjY5YQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-10-01T14:25:42Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-10-01T14:25:42Z"}, "message": "re PR tree-optimization/67769 (VRP pass does wrong optimization)\n\n\tPR tree-optimization/67769\n\t* tree-ssa-phiopt.c (conditional_replacement): Call\n\treset_flow_sensitive_info_in_bb.\n\t(minmax_replacement): Likewise.\n\t(abs_replacement): Likewise.\n\n\t* gcc.dg/torture/pr67769.c: New test.\n\nFrom-SVN: r228341", "tree": {"sha": "aeb94e35ac8ce6eebd1e518e38c367d5b700aeb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeb94e35ac8ce6eebd1e518e38c367d5b700aeb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9edaabf3d2cee4597f83227656ac50ed03bc669a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9edaabf3d2cee4597f83227656ac50ed03bc669a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9edaabf3d2cee4597f83227656ac50ed03bc669a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9edaabf3d2cee4597f83227656ac50ed03bc669a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "481261380243a1a01b85247285d0cc03a8090540", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/481261380243a1a01b85247285d0cc03a8090540", "html_url": "https://github.com/Rust-GCC/gccrs/commit/481261380243a1a01b85247285d0cc03a8090540"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "c9f987ea81519409be1d235dbae19f32e1667367", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9edaabf3d2cee4597f83227656ac50ed03bc669a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9edaabf3d2cee4597f83227656ac50ed03bc669a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9edaabf3d2cee4597f83227656ac50ed03bc669a", "patch": "@@ -1,3 +1,11 @@\n+2015-10-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/67769\n+\t* tree-ssa-phiopt.c (conditional_replacement): Call\n+\treset_flow_sensitive_info_in_bb.\n+\t(minmax_replacement): Likewise.\n+\t(abs_replacement): Likewise.\n+\n 2015-10-01  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* builtins.c: Don't include gomp-constants.h."}, {"sha": "1d4713d6799eafbc29fa493a527e6b2103846048", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9edaabf3d2cee4597f83227656ac50ed03bc669a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9edaabf3d2cee4597f83227656ac50ed03bc669a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9edaabf3d2cee4597f83227656ac50ed03bc669a", "patch": "@@ -1,3 +1,8 @@\n+2015-10-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/67769\n+\t* gcc.dg/torture/pr67769.c: New test.\n+\n 2015-10-01  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/lto/pr55113_0.c: Skip on all x86 targets."}, {"sha": "c1d17c3f3db89f0078f84a11012d6e2ed641fab9", "filename": "gcc/testsuite/gcc.dg/torture/pr67769.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9edaabf3d2cee4597f83227656ac50ed03bc669a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67769.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9edaabf3d2cee4597f83227656ac50ed03bc669a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67769.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67769.c?ref=9edaabf3d2cee4597f83227656ac50ed03bc669a", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do run } */\n+\n+static int\n+clamp (int x, int lo, int hi)\n+{\n+  return (x < lo) ? lo : ((x > hi) ? hi : x);\n+}\n+\n+__attribute__ ((noinline))\n+short\n+foo (int N)\n+{\n+  short value = clamp (N, 0, 16);\n+  return value;\n+}\n+\n+int\n+main ()\n+{\n+  if (foo (-5) != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "697836a3c146d511d68f388f8503cc1d19337160", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9edaabf3d2cee4597f83227656ac50ed03bc669a/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9edaabf3d2cee4597f83227656ac50ed03bc669a/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=9edaabf3d2cee4597f83227656ac50ed03bc669a", "patch": "@@ -646,6 +646,7 @@ conditional_replacement (basic_block cond_bb, basic_block middle_bb,\n     }\n \n   replace_phi_edge_with_variable (cond_bb, e1, phi, new_var);\n+  reset_flow_sensitive_info_in_bb (cond_bb);\n \n   /* Note that we optimized this PHI.  */\n   return true;\n@@ -1284,6 +1285,8 @@ minmax_replacement (basic_block cond_bb, basic_block middle_bb,\n   gsi_insert_before (&gsi, new_stmt, GSI_NEW_STMT);\n \n   replace_phi_edge_with_variable (cond_bb, e1, phi, result);\n+  reset_flow_sensitive_info_in_bb (cond_bb);\n+\n   return true;\n }\n \n@@ -1402,6 +1405,7 @@ abs_replacement (basic_block cond_bb, basic_block middle_bb,\n     }\n \n   replace_phi_edge_with_variable (cond_bb, e1, phi, result);\n+  reset_flow_sensitive_info_in_bb (cond_bb);\n \n   /* Note that we optimized this PHI.  */\n   return true;"}]}