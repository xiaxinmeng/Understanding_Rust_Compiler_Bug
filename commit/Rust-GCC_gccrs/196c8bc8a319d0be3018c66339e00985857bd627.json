{"sha": "196c8bc8a319d0be3018c66339e00985857bd627", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk2YzhiYzhhMzE5ZDBiZTMwMThjNjYzMzllMDA5ODU4NTdiZDYyNw==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2010-03-08T08:01:55Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2010-03-08T08:01:55Z"}, "message": "libgfortran.h (_POSIX): Define if __MINGW32__ is defined.\n\n2010-03-08  Kai TIetz  <kai.tietz@onevision.com>\n\n        PR/42950\n        * libgfortran.h (_POSIX): Define if __MINGW32__ is defined.\n        (gfc_printf): Define to gnu_printf for __MINGW32__ case,\n        otherwise to __printf__.\n        (gfc_strtof,gfc_strtod,gfc_strtold): Define for mingw case\n        to POSIX compatible converter functions.\n        (runtime_error): Use instead gfc_printf as formatter\n        attribute name.\n        (runtime_error_at): Likewise.\n        (runtime_warning_at): Likewise.\n        (st_printf): Likewise.\n        * intrinsics/date_and_time.c (localtime_r): Undefine\n        possible defined macro.\n        (gmtime_r): Likewise.\n        * io/read.c (convert_real): Use gfc_strtof, gfc_strtod,\n        and gfc_strtold.\n\nFrom-SVN: r157271", "tree": {"sha": "54205f64411c22ef87b871e28f9f42f5c3d81cd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54205f64411c22ef87b871e28f9f42f5c3d81cd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/196c8bc8a319d0be3018c66339e00985857bd627", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196c8bc8a319d0be3018c66339e00985857bd627", "html_url": "https://github.com/Rust-GCC/gccrs/commit/196c8bc8a319d0be3018c66339e00985857bd627", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196c8bc8a319d0be3018c66339e00985857bd627/comments", "author": null, "committer": null, "parents": [{"sha": "4bdd4fc006b7fe2f495a1e2ab72948aa1ad9a2a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bdd4fc006b7fe2f495a1e2ab72948aa1ad9a2a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bdd4fc006b7fe2f495a1e2ab72948aa1ad9a2a5"}], "stats": {"total": 69, "additions": 60, "deletions": 9}, "files": [{"sha": "bed26b90cfe4d2356e26fe8c7b52d2e89222c801", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196c8bc8a319d0be3018c66339e00985857bd627/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196c8bc8a319d0be3018c66339e00985857bd627/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=196c8bc8a319d0be3018c66339e00985857bd627", "patch": "@@ -1,3 +1,22 @@\n+2010-03-08  Kai TIetz  <kai.tietz@onevision.com>\n+\n+\tPR/42950\n+\t* libgfortran.h (_POSIX): Define if __MINGW32__ is defined.\n+\t(gfc_printf): Define to gnu_printf for __MINGW32__ case,\n+\totherwise to __printf__.\n+\t(gfc_strtof,gfc_strtod,gfc_strtold): Define for mingw case\n+\tto POSIX compatible converter functions.\n+\t(runtime_error): Use instead gfc_printf as formatter\n+\tattribute name.\n+\t(runtime_error_at): Likewise.\n+\t(runtime_warning_at): Likewise.\n+\t(st_printf): Likewise.\n+\t* intrinsics/date_and_time.c (localtime_r): Undefine\n+\tpossible defined macro.\n+\t(gmtime_r): Likewise.\n+\t* io/read.c (convert_real): Use gfc_strtof, gfc_strtod,\n+\tand gfc_strtold.\n+\n 2010-02-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/43155"}, {"sha": "a3f39a76d5b2682bbd43de2d21ba2240d8a92546", "filename": "libgfortran/intrinsics/date_and_time.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196c8bc8a319d0be3018c66339e00985857bd627/libgfortran%2Fintrinsics%2Fdate_and_time.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196c8bc8a319d0be3018c66339e00985857bd627/libgfortran%2Fintrinsics%2Fdate_and_time.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fdate_and_time.c?ref=196c8bc8a319d0be3018c66339e00985857bd627", "patch": "@@ -55,6 +55,11 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    thread-local storage so they are threadsafe.  */\n \n #ifndef HAVE_LOCALTIME_R\n+/* If _POSIX is defined localtime_r gets defined by mingw-w64 headers.  */\n+#ifdef localtime_r\n+#undef localtime_r\n+#endif\n+\n static struct tm *\n localtime_r (const time_t * timep, struct tm * result)\n {\n@@ -64,6 +69,11 @@ localtime_r (const time_t * timep, struct tm * result)\n #endif\n \n #ifndef HAVE_GMTIME_R\n+/* If _POSIX is defined gmtime_r gets defined by mingw-w64 headers.  */\n+#ifdef gmtime_r\n+#undef gmtime_r\n+#endif\n+\n static struct tm *\n gmtime_r (const time_t * timep, struct tm * result)\n {"}, {"sha": "43f4b76b5802fc0b7bd639e56886d26a6352c54a", "filename": "libgfortran/io/read.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196c8bc8a319d0be3018c66339e00985857bd627/libgfortran%2Fio%2Fread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196c8bc8a319d0be3018c66339e00985857bd627/libgfortran%2Fio%2Fread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fread.c?ref=196c8bc8a319d0be3018c66339e00985857bd627", "patch": "@@ -144,25 +144,25 @@ convert_real (st_parameter_dt *dtp, void *dest, const char *buffer, int length)\n     case 4:\n       *((GFC_REAL_4*) dest) =\n #if defined(HAVE_STRTOF)\n-\tstrtof (buffer, NULL);\n+\tgfc_strtof (buffer, NULL);\n #else\n-\t(GFC_REAL_4) strtod (buffer, NULL);\n+\t(GFC_REAL_4) gfc_strtod (buffer, NULL);\n #endif\n       break;\n \n     case 8:\n-      *((GFC_REAL_8*) dest) = strtod (buffer, NULL);\n+      *((GFC_REAL_8*) dest) = gfc_strtod (buffer, NULL);\n       break;\n \n #if defined(HAVE_GFC_REAL_10) && defined (HAVE_STRTOLD)\n     case 10:\n-      *((GFC_REAL_10*) dest) = strtold (buffer, NULL);\n+      *((GFC_REAL_10*) dest) = gfc_strtold (buffer, NULL);\n       break;\n #endif\n \n #if defined(HAVE_GFC_REAL_16) && defined (HAVE_STRTOLD)\n     case 16:\n-      *((GFC_REAL_16*) dest) = strtold (buffer, NULL);\n+      *((GFC_REAL_16*) dest) = gfc_strtold (buffer, NULL);\n       break;\n #endif\n "}, {"sha": "8d1fa4dfec12788124764c7c313b1e9e53ff593a", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196c8bc8a319d0be3018c66339e00985857bd627/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196c8bc8a319d0be3018c66339e00985857bd627/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=196c8bc8a319d0be3018c66339e00985857bd627", "patch": "@@ -28,6 +28,15 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #ifndef LIBGFOR_H\n #define LIBGFOR_H\n \n+/* Ensure that ANSI conform stdio is used. This needs to be set before\n+   any system header file is included.  */\n+#if defined __MINGW32__\n+#  define _POSIX 1\n+#  define gfc_printf gnu_printf\n+#else\n+#  define gfc_printf __printf__\n+#endif\n+\n /* config.h MUST be first because it can affect system headers.  */\n #include \"config.h\"\n \n@@ -37,6 +46,19 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <float.h>\n #include <stdarg.h>\n \n+#ifdef __MINGW32__\n+extern float __strtof (const char *, char **);\n+#define gfc_strtof __strtof\n+extern double __strtod (const char *, char **);\n+#define gfc_strtod __strtod\n+extern long double __strtold (const char *, char **);\n+#define gfc_strtold __strtold\n+#else\n+#define gfc_strtof strtof\n+#define gfc_strtod strtod\n+#define gfc_strtold strtold\n+#endif\n+\n #if HAVE_COMPLEX_H\n # include <complex.h>\n #else\n@@ -703,15 +725,15 @@ extern void show_locus (st_parameter_common *);\n internal_proto(show_locus);\n \n extern void runtime_error (const char *, ...)\n-     __attribute__ ((noreturn, format (printf, 1, 2)));\n+     __attribute__ ((noreturn, format (gfc_printf, 1, 2)));\n iexport_proto(runtime_error);\n \n extern void runtime_error_at (const char *, const char *, ...)\n-     __attribute__ ((noreturn, format (printf, 2, 3)));\n+     __attribute__ ((noreturn, format (gfc_printf, 2, 3)));\n iexport_proto(runtime_error_at);\n \n extern void runtime_warning_at (const char *, const char *, ...)\n-     __attribute__ ((format (printf, 2, 3)));\n+     __attribute__ ((format (gfc_printf, 2, 3)));\n iexport_proto(runtime_warning_at);\n \n extern void internal_error (st_parameter_common *, const char *)\n@@ -795,7 +817,7 @@ extern int unit_to_fd (int);\n internal_proto(unit_to_fd);\n \n extern int st_printf (const char *, ...)\n-  __attribute__ ((format (printf, 1, 2)));\n+  __attribute__ ((format (gfc_printf, 1, 2)));\n internal_proto(st_printf);\n \n extern int st_vprintf (const char *, va_list);"}]}