{"sha": "66a00b11a0eeff5f2737593ada5ac5acf334adeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZhMDBiMTFhMGVlZmY1ZjI3Mzc1OTNhZGE1YWM1YWNmMzM0YWRlYg==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2018-03-07T00:17:32Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2018-03-07T00:17:32Z"}, "message": "fptr.c (_dl_read_access_allowed): New.\n\n\t* config/pa/fptr.c (_dl_read_access_allowed): New.\n\t(__canonicalize_funcptr_for_compare): Use it.\n\nFrom-SVN: r258310", "tree": {"sha": "af52292cd811e7eb3d43b1bf5802824a723adb96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af52292cd811e7eb3d43b1bf5802824a723adb96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66a00b11a0eeff5f2737593ada5ac5acf334adeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66a00b11a0eeff5f2737593ada5ac5acf334adeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66a00b11a0eeff5f2737593ada5ac5acf334adeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66a00b11a0eeff5f2737593ada5ac5acf334adeb/comments", "author": null, "committer": null, "parents": [{"sha": "c0423c3e7119e40256db376c590bc88b5aec39de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0423c3e7119e40256db376c590bc88b5aec39de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0423c3e7119e40256db376c590bc88b5aec39de"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "c8c87c6211bc6ee63a212cd12630516401bbf447", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66a00b11a0eeff5f2737593ada5ac5acf334adeb/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66a00b11a0eeff5f2737593ada5ac5acf334adeb/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=66a00b11a0eeff5f2737593ada5ac5acf334adeb", "patch": "@@ -1,3 +1,8 @@\n+2018-03-06  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* config/pa/fptr.c (_dl_read_access_allowed): New.\n+\t(__canonicalize_funcptr_for_compare): Use it.\n+\t\n 2018-02-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/83917"}, {"sha": "944ed4495d9c3ec40abac93e59ddcb9e60a7936f", "filename": "libgcc/config/pa/fptr.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66a00b11a0eeff5f2737593ada5ac5acf334adeb/libgcc%2Fconfig%2Fpa%2Ffptr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66a00b11a0eeff5f2737593ada5ac5acf334adeb/libgcc%2Fconfig%2Fpa%2Ffptr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Ffptr.c?ref=66a00b11a0eeff5f2737593ada5ac5acf334adeb", "patch": "@@ -52,6 +52,16 @@ typedef int (*fptr_t) (void);\n typedef int (*fixup_t) (struct link_map *, unsigned int);\n extern unsigned int _GLOBAL_OFFSET_TABLE_;\n \n+static inline int\n+_dl_read_access_allowed (unsigned int *addr)\n+{\n+  int result;\n+\n+  asm (\"proberi (%1),3,%0\" : \"=r\" (result) : \"r\" (addr) : );\n+\n+  return result;\n+}\n+\n /* __canonicalize_funcptr_for_compare must be hidden so that it is not\n    placed in the dynamic symbol table.  Like millicode functions, it\n    must be linked into all binaries in order access the got table of \n@@ -82,6 +92,16 @@ __canonicalize_funcptr_for_compare (fptr_t fptr)\n      The second word in the plabel contains the relocation offset for the\n      function.  */\n   plabel = (unsigned int *) ((unsigned int) fptr & ~3);\n+  if (!_dl_read_access_allowed (plabel))\n+    return (unsigned int) fptr;\n+\n+  /* Load first word of candidate descriptor.  It should be a pointer\n+     with word alignment and point to memory that can be read.  */\n+  got = (unsigned int *) plabel[0];\n+  if (((unsigned int) got & 3) != 0\n+      || !_dl_read_access_allowed (got))\n+    return (unsigned int) fptr;\n+\n   got = (unsigned int *) (plabel[0] + GOT_FROM_PLT_STUB);\n \n   /* Return the address of the function if the plabel has been resolved.  */"}]}