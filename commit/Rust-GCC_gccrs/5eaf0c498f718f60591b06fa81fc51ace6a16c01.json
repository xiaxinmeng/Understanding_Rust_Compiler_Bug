{"sha": "5eaf0c498f718f60591b06fa81fc51ace6a16c01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVhZjBjNDk4ZjcxOGY2MDU5MWIwNmZhODFmYzUxYWNlNmExNmMwMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-01-10T10:49:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2020-01-10T10:49:57Z"}, "message": "re PR tree-optimization/93199 (Compile time hog in sink_clobbers)\n\n2020-01-10  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/93199\n\t* tree-eh.c (redirect_eh_edge_1): Avoid some work if possible.\n\t(cleanup_all_empty_eh): Walk landing pads in reverse order to\n\tavoid quadraticness.\n\nFrom-SVN: r280101", "tree": {"sha": "e8c7369bcad37986d524dbb8961de5ffcc7117a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8c7369bcad37986d524dbb8961de5ffcc7117a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5eaf0c498f718f60591b06fa81fc51ace6a16c01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eaf0c498f718f60591b06fa81fc51ace6a16c01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eaf0c498f718f60591b06fa81fc51ace6a16c01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eaf0c498f718f60591b06fa81fc51ace6a16c01/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a315435dbebed25a316906caf9fa80f4214a5dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a315435dbebed25a316906caf9fa80f4214a5dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a315435dbebed25a316906caf9fa80f4214a5dc"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "8b3b780da7b16409d27a8ef6302336cd4f14435e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eaf0c498f718f60591b06fa81fc51ace6a16c01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eaf0c498f718f60591b06fa81fc51ace6a16c01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5eaf0c498f718f60591b06fa81fc51ace6a16c01", "patch": "@@ -1,3 +1,10 @@\n+2020-01-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/93199\n+\t* tree-eh.c (redirect_eh_edge_1): Avoid some work if possible.\n+\t(cleanup_all_empty_eh): Walk landing pads in reverse order to\n+\tavoid quadraticness.\n+\n 2020-01-10  Martin Jambor  <mjambor@suse.cz>\n \n \t* params.opt (param_ipa_sra_max_replacements): Mark as Optimization."}, {"sha": "408ff483660f9c7b3413d9ef85bc65feed0e54a3", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eaf0c498f718f60591b06fa81fc51ace6a16c01/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eaf0c498f718f60591b06fa81fc51ace6a16c01/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=5eaf0c498f718f60591b06fa81fc51ace6a16c01", "patch": "@@ -2310,7 +2310,7 @@ redirect_eh_edge_1 (edge edge_in, basic_block new_bb, bool change_region)\n   old_lp = get_eh_landing_pad_from_number (old_lp_nr);\n \n   throw_stmt = last_stmt (edge_in->src);\n-  gcc_assert (lookup_stmt_eh_lp (throw_stmt) == old_lp_nr);\n+  gcc_checking_assert (lookup_stmt_eh_lp (throw_stmt) == old_lp_nr);\n \n   new_label = gimple_block_label (new_bb);\n \n@@ -4307,9 +4307,10 @@ cleanup_empty_eh_merge_phis (basic_block new_bb, basic_block old_bb,\n \t|  | EH\n \t<..>\n      which CFG verification would choke on.  See PR45172 and PR51089.  */\n-  FOR_EACH_EDGE (e, ei, old_bb->preds)\n-    if (find_edge (e->src, new_bb))\n-      return false;\n+  if (!single_pred_p (new_bb))\n+    FOR_EACH_EDGE (e, ei, old_bb->preds)\n+      if (find_edge (e->src, new_bb))\n+\treturn false;\n \n   FOR_EACH_EDGE (e, ei, old_bb->preds)\n     redirect_edge_var_map_clear (e);\n@@ -4698,9 +4699,15 @@ cleanup_all_empty_eh (void)\n   eh_landing_pad lp;\n   int i;\n \n-  for (i = 1; vec_safe_iterate (cfun->eh->lp_array, i, &lp); ++i)\n-    if (lp)\n-      changed |= cleanup_empty_eh (lp);\n+  /* Ideally we'd walk the region tree and process LPs inner to outer\n+     to avoid quadraticness in EH redirection.  Walking the LP array\n+     in reverse seems to be an approximation of that.  */\n+  for (i = vec_safe_length (cfun->eh->lp_array) - 1; i >= 1; --i)\n+    {\n+      lp = (*cfun->eh->lp_array)[i];\n+      if (lp)\n+\tchanged |= cleanup_empty_eh (lp);\n+    }\n \n   return changed;\n }"}]}