{"sha": "63e1159cce00ff64b4b60108f4e278050ca36f0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNlMTE1OWNjZTAwZmY2NGI0YjYwMTA4ZjRlMjc4MDUwY2EzNmYwZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-21T19:28:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-21T19:28:10Z"}, "message": "re PR rtl-optimization/80747 (gcc.dg/tree-ssa/tailrecursion-4.c fails with ICE when compiled with options \"-fprofile-use -freorder-blocks-and-partition\")\n\n\tPR rtl-optimization/80747\n\tPR rtl-optimization/83512\n\t* cfgrtl.c (force_nonfallthru_and_redirect): When splitting\n\tsucc edge from ENTRY, copy partition from e->dest to the newly\n\tcreated bb.\n\t* bb-reorder.c (reorder_basic_blocks_simple): If last_tail is\n\tENTRY, use BB_PARTITION of its successor block as current_partition.\n\tDon't copy partition when splitting succ edge from ENTRY.\n\n\t* gcc.dg/pr80747.c: New test.\n\t* gcc.dg/pr83512.c: New test.\n\nFrom-SVN: r255954", "tree": {"sha": "50e7acc64c90af764212da7bce7be2d500da1cee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50e7acc64c90af764212da7bce7be2d500da1cee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63e1159cce00ff64b4b60108f4e278050ca36f0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e1159cce00ff64b4b60108f4e278050ca36f0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63e1159cce00ff64b4b60108f4e278050ca36f0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e1159cce00ff64b4b60108f4e278050ca36f0f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b8e85a5e3be803e0b476a8bbcb8aee0e9c48837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b8e85a5e3be803e0b476a8bbcb8aee0e9c48837", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b8e85a5e3be803e0b476a8bbcb8aee0e9c48837"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "61ae2b6eaa276adf31a54995477a92f1f503d1ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1159cce00ff64b4b60108f4e278050ca36f0f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1159cce00ff64b4b60108f4e278050ca36f0f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63e1159cce00ff64b4b60108f4e278050ca36f0f", "patch": "@@ -1,5 +1,14 @@\n 2017-12-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/80747\n+\tPR rtl-optimization/83512\n+\t* cfgrtl.c (force_nonfallthru_and_redirect): When splitting\n+\tsucc edge from ENTRY, copy partition from e->dest to the newly\n+\tcreated bb.\n+\t* bb-reorder.c (reorder_basic_blocks_simple): If last_tail is\n+\tENTRY, use BB_PARTITION of its successor block as current_partition.\n+\tDon't copy partition when splitting succ edge from ENTRY.\n+\n \tPR tree-optimization/83523\n \t* tree-ssa-math-opts.c (is_widening_mult_p): Return false if\n \tfor INTEGER_TYPE TYPE_OVERFLOW_TRAPS."}, {"sha": "72927b8c26742922317603b0dc476aa2fa1db8b4", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1159cce00ff64b4b60108f4e278050ca36f0f/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1159cce00ff64b4b60108f4e278050ca36f0f/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=63e1159cce00ff64b4b60108f4e278050ca36f0f", "patch": "@@ -2405,7 +2405,10 @@ reorder_basic_blocks_simple (void)\n \n   basic_block last_tail = (basic_block) ENTRY_BLOCK_PTR_FOR_FN (cfun)->aux;\n \n-  int current_partition = BB_PARTITION (last_tail);\n+  int current_partition\n+    = BB_PARTITION (last_tail == ENTRY_BLOCK_PTR_FOR_FN (cfun)\n+\t\t    ? EDGE_SUCC (ENTRY_BLOCK_PTR_FOR_FN (cfun), 0)->dest\n+\t\t    : last_tail);\n   bool need_another_pass = true;\n \n   for (int pass = 0; pass < 2 && need_another_pass; pass++)\n@@ -2446,7 +2449,6 @@ reorder_basic_blocks_simple (void)\n     {\n       force_nonfallthru (e);\n       e->src->aux = ENTRY_BLOCK_PTR_FOR_FN (cfun)->aux;\n-      BB_COPY_PARTITION (e->src, e->dest);\n     }\n }\n "}, {"sha": "ac17d46a24da435fed6f8cd882350c953adbd2e1", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1159cce00ff64b4b60108f4e278050ca36f0f/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1159cce00ff64b4b60108f4e278050ca36f0f/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=63e1159cce00ff64b4b60108f4e278050ca36f0f", "patch": "@@ -1534,6 +1534,9 @@ force_nonfallthru_and_redirect (edge e, basic_block target, rtx jump_label)\n \t\t\t\t\t       ENTRY_BLOCK_PTR_FOR_FN (cfun));\n \t  bb->count = ENTRY_BLOCK_PTR_FOR_FN (cfun)->count;\n \n+\t  /* Make sure new block ends up in correct hot/cold section.  */\n+\t  BB_COPY_PARTITION (bb, e->dest);\n+\n \t  /* Change the existing edge's source to be the new block, and add\n \t     a new edge from the entry block to the new block.  */\n \t  e->src = bb;"}, {"sha": "35752574666d6846cdeec66ca4017ed91dc202e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1159cce00ff64b4b60108f4e278050ca36f0f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1159cce00ff64b4b60108f4e278050ca36f0f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=63e1159cce00ff64b4b60108f4e278050ca36f0f", "patch": "@@ -1,5 +1,10 @@\n 2017-12-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/80747\n+\tPR rtl-optimization/83512\n+\t* gcc.dg/pr80747.c: New test.\n+\t* gcc.dg/pr83512.c: New test.\n+\n \tPR tree-optimization/83523\n \t* g++.dg/tree-ssa/pr83523.C: New test.\n "}, {"sha": "ea9dd3c3033581a078f155d8e764bdfff47c414a", "filename": "gcc/testsuite/gcc.dg/pr80747.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1159cce00ff64b4b60108f4e278050ca36f0f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80747.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1159cce00ff64b4b60108f4e278050ca36f0f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80747.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80747.c?ref=63e1159cce00ff64b4b60108f4e278050ca36f0f", "patch": "@@ -0,0 +1,18 @@\n+/* PR rtl-optimization/80747 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fprofile-use -freorder-blocks-and-partition -O1 -foptimize-sibling-calls\" } */\n+\n+int\n+foo (int a)\n+{\n+  int r;\n+  if (a & 1)\n+    r = foo (a - 1);\n+  else if (a)\n+    r = foo (a - 2);\n+  else\n+    return 0;\n+  if (r)\n+    r = r;\n+  return r;\n+}"}, {"sha": "d86e57befc7e9a4ac39b664ec8e5c2a7f676c243", "filename": "gcc/testsuite/gcc.dg/pr83512.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1159cce00ff64b4b60108f4e278050ca36f0f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83512.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1159cce00ff64b4b60108f4e278050ca36f0f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83512.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83512.c?ref=63e1159cce00ff64b4b60108f4e278050ca36f0f", "patch": "@@ -0,0 +1,16 @@\n+/* PR rtl-optimization/83512 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -freorder-blocks-algorithm=simple\" } */\n+\n+int a;\n+\n+void\n+foo (int *x)\n+{\n+  for (;;)\n+    {\n+      for (*x = 0; *x < 1; *x++)\n+\t;\n+      ++a;\n+    }\n+}"}]}