{"sha": "338739645b8e5bf34636d8d4829d7650001ad08c", "node_id": "C_kwDOANBUbNoAKDMzODczOTY0NWI4ZTViZjM0NjM2ZDhkNDgyOWQ3NjUwMDAxYWQwOGM", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-02-10T09:28:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-02-13T07:26:36Z"}, "message": "tree-optimization/106722 - fix CD-DCE edge marking\n\nThe following fixes a latent issue when we mark control edges but\nend up with marking a block with no stmts necessary.  In this case\nwe fail to mark dependent control edges of that block.\n\n\tPR tree-optimization/106722\n\t* tree-ssa-dce.cc (mark_last_stmt_necessary): Return\n\twhether we marked a stmt.\n\t(mark_control_dependent_edges_necessary): When\n\tmark_last_stmt_necessary didn't mark any stmt make sure\n\tto mark its control dependent edges.\n\t(propagate_necessity): Likewise.\n\n\t* gcc.dg/torture/pr108737.c: New testcase.", "tree": {"sha": "8b842ee7e209b12dd3590e13712fdd0aae6d0a8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b842ee7e209b12dd3590e13712fdd0aae6d0a8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/338739645b8e5bf34636d8d4829d7650001ad08c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338739645b8e5bf34636d8d4829d7650001ad08c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/338739645b8e5bf34636d8d4829d7650001ad08c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338739645b8e5bf34636d8d4829d7650001ad08c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89367e794613bdeb21df3e6fc0215f0acd553ef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89367e794613bdeb21df3e6fc0215f0acd553ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89367e794613bdeb21df3e6fc0215f0acd553ef8"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "c8388bcabeba6370f4b0b51411d44cd8ec85ecc9", "filename": "gcc/testsuite/gcc.dg/torture/pr108737.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338739645b8e5bf34636d8d4829d7650001ad08c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108737.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338739645b8e5bf34636d8d4829d7650001ad08c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108737.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108737.c?ref=338739645b8e5bf34636d8d4829d7650001ad08c", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+\n+extern void exit (int);\n+extern void abort (void);\n+\n+void __attribute__((noipa)) foo () { exit (0); }\n+\n+void __attribute__((noipa)) blah (int x)\n+{\n+  while (1) {\n+      if(x) foo();\n+  }\n+}\n+\n+int main()\n+{\n+  blah (1);\n+  abort ();\n+}"}, {"sha": "ceeb0ad5ab3351a77caea5fd6940ea58347d6aab", "filename": "gcc/tree-ssa-dce.cc", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338739645b8e5bf34636d8d4829d7650001ad08c/gcc%2Ftree-ssa-dce.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338739645b8e5bf34636d8d4829d7650001ad08c/gcc%2Ftree-ssa-dce.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.cc?ref=338739645b8e5bf34636d8d4829d7650001ad08c", "patch": "@@ -327,17 +327,23 @@ mark_stmt_if_obviously_necessary (gimple *stmt, bool aggressive)\n \n /* Mark the last statement of BB as necessary.  */\n \n-static void\n+static bool\n mark_last_stmt_necessary (basic_block bb)\n {\n   gimple *stmt = last_stmt (bb);\n \n-  bitmap_set_bit (last_stmt_necessary, bb->index);\n+  if (!bitmap_set_bit (last_stmt_necessary, bb->index))\n+    return true;\n+\n   bitmap_set_bit (bb_contains_live_stmts, bb->index);\n \n   /* We actually mark the statement only if it is a control statement.  */\n   if (stmt && is_ctrl_stmt (stmt))\n-    mark_stmt_necessary (stmt, true);\n+    {\n+      mark_stmt_necessary (stmt, true);\n+      return true;\n+    }\n+  return false;\n }\n \n \n@@ -369,8 +375,8 @@ mark_control_dependent_edges_necessary (basic_block bb, bool ignore_self)\n \t  continue;\n \t}\n \n-      if (!bitmap_bit_p (last_stmt_necessary, cd_bb->index))\n-\tmark_last_stmt_necessary (cd_bb);\n+      if (!mark_last_stmt_necessary (cd_bb))\n+\tmark_control_dependent_edges_necessary (cd_bb, false);\n     }\n \n   if (!skipped)\n@@ -790,8 +796,8 @@ propagate_necessity (bool aggressive)\n \t\t  if (gimple_bb (stmt)\n \t\t      != get_immediate_dominator (CDI_POST_DOMINATORS, arg_bb))\n \t\t    {\n-\t\t      if (!bitmap_bit_p (last_stmt_necessary, arg_bb->index))\n-\t\t\tmark_last_stmt_necessary (arg_bb);\n+\t\t      if (!mark_last_stmt_necessary (arg_bb))\n+\t\t\tmark_control_dependent_edges_necessary (arg_bb, false);\n \t\t    }\n \t\t  else if (arg_bb != ENTRY_BLOCK_PTR_FOR_FN (cfun)\n \t\t           && !bitmap_bit_p (visited_control_parents,"}]}