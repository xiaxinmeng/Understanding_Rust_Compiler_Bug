{"sha": "825be69e343144b0608da6056d92dc5b71eb50c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI1YmU2OWUzNDMxNDRiMDYwOGRhNjA1NmQ5MmRjNWI3MWViNTBjMg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-06-20T12:03:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-06-20T12:03:16Z"}, "message": "tree-ssa-structalias.c (find_func_aliases): For memset use a constraint from NULL if we memset to zero.\n\n2009-06-20  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-structalias.c (find_func_aliases): For memset use\n\ta constraint from NULL if we memset to zero.\n\t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Add builtins\n\twe explicitly handle that do not read from memory.\n\t(call_may_clobber_ref_p_1): Properly handle builtins that may\n\tset errno.\n\nFrom-SVN: r148747", "tree": {"sha": "184a74dea43f320ee54cbce63562ba24f77061d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/184a74dea43f320ee54cbce63562ba24f77061d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/825be69e343144b0608da6056d92dc5b71eb50c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825be69e343144b0608da6056d92dc5b71eb50c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/825be69e343144b0608da6056d92dc5b71eb50c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825be69e343144b0608da6056d92dc5b71eb50c2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a45323c1634094c568274d44f4780550708589c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a45323c1634094c568274d44f4780550708589c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a45323c1634094c568274d44f4780550708589c"}], "stats": {"total": 65, "additions": 59, "deletions": 6}, "files": [{"sha": "d25a5d060335e6bc75ffbc7e81573806d61544d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825be69e343144b0608da6056d92dc5b71eb50c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825be69e343144b0608da6056d92dc5b71eb50c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=825be69e343144b0608da6056d92dc5b71eb50c2", "patch": "@@ -1,3 +1,12 @@\n+2009-06-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.c (find_func_aliases): For memset use\n+\ta constraint from NULL if we memset to zero.\n+\t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Add builtins\n+\twe explicitly handle that do not read from memory.\n+\t(call_may_clobber_ref_p_1): Properly handle builtins that may\n+\tset errno.\n+\n 2009-06-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/40495"}, {"sha": "98955246aea1cc523762e47616b3ba54e18b5d2c", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 39, "deletions": 4, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825be69e343144b0608da6056d92dc5b71eb50c2/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825be69e343144b0608da6056d92dc5b71eb50c2/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=825be69e343144b0608da6056d92dc5b71eb50c2", "patch": "@@ -899,6 +899,29 @@ ref_maybe_used_by_call_p_1 (gimple call, tree ref)\n \t    tree src = gimple_call_arg (call, 1);\n \t    return ptr_deref_may_alias_ref_p (src, ref);\n \t  }\n+\t/* The following builtins do not read from memory.  */\n+\tcase BUILT_IN_FREE:\n+\tcase BUILT_IN_MEMSET:\n+\tcase BUILT_IN_FREXP:\n+\tcase BUILT_IN_FREXPF:\n+\tcase BUILT_IN_FREXPL:\n+\tcase BUILT_IN_GAMMA_R:\n+\tcase BUILT_IN_GAMMAF_R:\n+\tcase BUILT_IN_GAMMAL_R:\n+\tcase BUILT_IN_LGAMMA_R:\n+\tcase BUILT_IN_LGAMMAF_R:\n+\tcase BUILT_IN_LGAMMAL_R:\n+\tcase BUILT_IN_MODF:\n+\tcase BUILT_IN_MODFF:\n+\tcase BUILT_IN_MODFL:\n+\tcase BUILT_IN_REMQUO:\n+\tcase BUILT_IN_REMQUOF:\n+\tcase BUILT_IN_REMQUOL:\n+\tcase BUILT_IN_SINCOS:\n+\tcase BUILT_IN_SINCOSF:\n+\tcase BUILT_IN_SINCOSL:\n+\t  return false;\n+\n \tdefault:\n \t  /* Fallthru to general call handling.  */;\n       }\n@@ -1060,15 +1083,23 @@ call_may_clobber_ref_p_1 (gimple call, ao_ref *ref)\n \t    tree ptr = gimple_call_arg (call, 0);\n \t    return ptr_deref_may_alias_ref_p_1 (ptr, ref);\n \t  }\n-\tcase BUILT_IN_FREXP:\n-\tcase BUILT_IN_FREXPF:\n-\tcase BUILT_IN_FREXPL:\n \tcase BUILT_IN_GAMMA_R:\n \tcase BUILT_IN_GAMMAF_R:\n \tcase BUILT_IN_GAMMAL_R:\n \tcase BUILT_IN_LGAMMA_R:\n \tcase BUILT_IN_LGAMMAF_R:\n \tcase BUILT_IN_LGAMMAL_R:\n+\t  {\n+\t    tree out = gimple_call_arg (call, 1);\n+\t    if (ptr_deref_may_alias_ref_p_1 (out, ref))\n+\t      return true;\n+\t    if (flag_errno_math)\n+\t      break;\n+\t    return false;\n+\t  }\n+\tcase BUILT_IN_FREXP:\n+\tcase BUILT_IN_FREXPF:\n+\tcase BUILT_IN_FREXPL:\n \tcase BUILT_IN_MODF:\n \tcase BUILT_IN_MODFF:\n \tcase BUILT_IN_MODFL:\n@@ -1081,7 +1112,11 @@ call_may_clobber_ref_p_1 (gimple call, ao_ref *ref)\n \tcase BUILT_IN_REMQUOL:\n \t  {\n \t    tree out = gimple_call_arg (call, 2);\n-\t    return ptr_deref_may_alias_ref_p_1 (out, ref);\n+\t    if (ptr_deref_may_alias_ref_p_1 (out, ref))\n+\t      return true;\n+\t    if (flag_errno_math)\n+\t      break;\n+\t    return false;\n \t  }\n \tcase BUILT_IN_SINCOS:\n \tcase BUILT_IN_SINCOSF:"}, {"sha": "ac2c7dc04a83414aca92cba4facf44c4b974c9a5", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825be69e343144b0608da6056d92dc5b71eb50c2/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825be69e343144b0608da6056d92dc5b71eb50c2/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=825be69e343144b0608da6056d92dc5b71eb50c2", "patch": "@@ -3674,8 +3674,17 @@ find_func_aliases (gimple origt)\n \t\t}\n \t      get_constraint_for_ptr_offset (dest, NULL_TREE, &lhsc);\n \t      do_deref (&lhsc);\n-\t      ac.type = SCALAR;\n-\t      ac.var = integer_id;\n+\t      if (flag_delete_null_pointer_checks\n+\t\t  && integer_zerop (gimple_call_arg (t, 1)))\n+\t\t{\n+\t\t  ac.type = ADDRESSOF;\n+\t\t  ac.var = nothing_id;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  ac.type = SCALAR;\n+\t\t  ac.var = integer_id;\n+\t\t}\n \t      ac.offset = 0;\n \t      for (i = 0; VEC_iterate (ce_s, lhsc, i, lhsp); ++i)\n \t\tprocess_constraint (new_constraint (*lhsp, ac));"}]}