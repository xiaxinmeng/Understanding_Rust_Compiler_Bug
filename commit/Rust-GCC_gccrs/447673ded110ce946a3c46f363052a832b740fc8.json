{"sha": "447673ded110ce946a3c46f363052a832b740fc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ3NjczZGVkMTEwY2U5NDZhM2M0NmYzNjMwNTJhODMyYjc0MGZjOA==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-07-28T02:15:25Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-07-28T02:15:25Z"}, "message": "fixinc.svr4: Remove dead code.\n\n\t* fixinc/fixinc.svr4: Remove dead code.  Remove now-unnecessary\n\tcleanup of junk after #else and #endif directives.  Collapse repeated\n\tclauses into for statment.\n\n\t* fixinc/fixincl.sh: GNU C -> GCC.  Add usage comment.\n\nFrom-SVN: r69870", "tree": {"sha": "a8d179f8e77d800c7b326e9720f463cf67c1c6a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8d179f8e77d800c7b326e9720f463cf67c1c6a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/447673ded110ce946a3c46f363052a832b740fc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/447673ded110ce946a3c46f363052a832b740fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/447673ded110ce946a3c46f363052a832b740fc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/447673ded110ce946a3c46f363052a832b740fc8/comments", "author": null, "committer": null, "parents": [{"sha": "a9f31c7e72669325667b3e639715d56e29e90792", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9f31c7e72669325667b3e639715d56e29e90792", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9f31c7e72669325667b3e639715d56e29e90792"}], "stats": {"total": 288, "additions": 15, "deletions": 273}, "files": [{"sha": "cc7e60ae904d9f1f27f426b1a0b6516044e89495", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447673ded110ce946a3c46f363052a832b740fc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447673ded110ce946a3c46f363052a832b740fc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=447673ded110ce946a3c46f363052a832b740fc8", "patch": "@@ -1,3 +1,11 @@\n+2003-07-27  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* fixinc/fixinc.svr4: Remove dead code.  Remove now-unnecessary \n+\tcleanup of junk after #else and #endif directives.  Collapse repeated\n+\tclauses into for statment.\n+\n+\t* fixinc/fixincl.sh: GNU C -> GCC.  Add usage comment.\n+\n 2003-07-27  Zack Weinberg  <zack@codesourcery.com>\n \n \t* c-decl.c (struct c_scope): Remove keep_if_subblocks field."}, {"sha": "759a08e58ab00cf8aa8957b5ba0661124f262d98", "filename": "gcc/fixinc/fixinc.svr4", "status": "modified", "additions": 4, "deletions": 272, "changes": 276, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447673ded110ce946a3c46f363052a832b740fc8/gcc%2Ffixinc%2Ffixinc.svr4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447673ded110ce946a3c46f363052a832b740fc8/gcc%2Ffixinc%2Ffixinc.svr4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.svr4?ref=447673ded110ce946a3c46f363052a832b740fc8", "patch": "@@ -167,28 +167,9 @@ while [ $# != 0 ]; do\n \tchmod +w $2/$file\n \tchmod a+r $2/$file\n \n-# The following have been removed from the sed command below\n-# because it is more useful to leave these things in.\n-# The only reason to remove them was for -pedantic,\n-# which isn't much of a reason. -- rms.\n-#\t  /^[ \t]*#[ \t]*ident/d\n-\n-# This code makes Solaris SCSI fail, because it changes the\n-# alignment within some critical structures.  See <sys/scsi/impl/commands.h>.\n-#\t  s/u_char\\([ \t][ \t]*[a-zA-Z0-9_][a-zA-Z0-9_]*[ \t]*:[ \t]*[0-9][0-9]*\\)/u_int\\1/\n-# Disable these also, since they probably aren't safe either.\n-#\t  s/u_short\\([ \t][ \t]*[a-zA-Z0-9_][a-zA-Z0-9_]*[ \t]*:[ \t]*[0-9][0-9]*\\)/u_int\\1/\n-#\t  s/ushort\\([ \t][ \t]*[a-zA-Z0-9_][a-zA-Z0-9_]*[ \t]*:[ \t]*[0-9][0-9]*\\)/u_int\\1/\n-#\t  s/evcm_t\\([ \t][ \t]*[a-zA-Z0-9_][a-zA-Z0-9_]*[ \t]*:[ \t]*[0-9][0-9]*\\)/u_int\\1/\n-#\t  s/Pbyte\\([ \t][ \t]*[a-zA-Z0-9_][a-zA-Z0-9_]*[ \t]*:[ \t]*SEQSIZ\\)/unsigned int\\1/\n-\n # The change of u_char, etc, to u_int\n # applies to bit fields.\n \tsed -e '\n-\t  s%^\\([ \t]*#[ \t]*else\\)[ \t]*/[^*].*%\\1%\n-\t  s%^\\([ \t]*#[ \t]*else\\)[ \t]*[^/ \t].*%\\1%\n-\t  s%^\\([ \t]*#[ \t]*endif\\)[ \t]*/[^*].*%\\1%\n-\t  s%^\\([ \t]*#[ \t]*endif\\)[ \t]*[^/ \t].*%\\1%\n   \t  s/#lint(on)/defined(lint)/g\n   \t  s/#lint(off)/!defined(lint)/g\n   \t  s/#machine(\\([^)]*\\))/defined(__\\1__)/g\n@@ -801,211 +782,17 @@ if [ \\! -z \"$file_to_fix\" ]; then\n fi\n \n # Conditionalize all of <fs/rfs/rf_cache.h> on _KERNEL being defined.\n-\n-file=fs/rfs/rf_cache.h\n-base=`basename $file`.$$\n-if [ -r ${LIB}/$file ]; then\n-  file_to_fix=${LIB}/$file\n-else\n-  if [ -r ${INPUT}/$file ]; then\n-    file_to_fix=${INPUT}/$file\n-  else\n-    file_to_fix=\"\"\n-  fi\n-fi\n-if [ \\! -z \"$file_to_fix\" ]; then\n-  echo Checking $file_to_fix\n-  if grep _KERNEL $file_to_fix > /dev/null; then\n-    true\n-  else\n-    echo '#ifdef _KERNEL' > /tmp/$base\n-    cat $file_to_fix >> /tmp/$base\n-    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n-    echo Fixed $file_to_fix\n-    rm -f ${LIB}/$file\n-    cp /tmp/$base ${LIB}/$file\n-    chmod a+r ${LIB}/$file\n-    rm -f /tmp/$base\n-  fi\n-fi\n-\n # Conditionalize all of <sys/erec.h> on _KERNEL being defined.\n-\n-file=sys/erec.h\n-base=`basename $file`.$$\n-if [ -r ${LIB}/$file ]; then\n-  file_to_fix=${LIB}/$file\n-else\n-  if [ -r ${INPUT}/$file ]; then\n-    file_to_fix=${INPUT}/$file\n-  else\n-    file_to_fix=\"\"\n-  fi\n-fi\n-if [ \\! -z \"$file_to_fix\" ]; then\n-  echo Checking $file_to_fix\n-  if grep _KERNEL $file_to_fix > /dev/null; then\n-    true\n-  else\n-    echo '#ifdef _KERNEL' > /tmp/$base\n-    cat $file_to_fix >> /tmp/$base\n-    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n-    echo Fixed $file_to_fix\n-    rm -f ${LIB}/$file\n-    cp /tmp/$base ${LIB}/$file\n-    chmod a+r ${LIB}/$file\n-    rm -f /tmp/$base\n-  fi\n-fi\n-\n # Conditionalize all of <sys/err.h> on _KERNEL being defined.\n-\n-file=sys/err.h\n-base=`basename $file`.$$\n-if [ -r ${LIB}/$file ]; then\n-  file_to_fix=${LIB}/$file\n-else\n-  if [ -r ${INPUT}/$file ]; then\n-    file_to_fix=${INPUT}/$file\n-  else\n-    file_to_fix=\"\"\n-  fi\n-fi\n-if [ \\! -z \"$file_to_fix\" ]; then\n-  echo Checking $file_to_fix\n-  if grep _KERNEL $file_to_fix > /dev/null; then\n-    true\n-  else\n-    echo '#ifdef _KERNEL' > /tmp/$base\n-    cat $file_to_fix >> /tmp/$base\n-    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n-    echo Fixed $file_to_fix\n-    rm -f ${LIB}/$file\n-    cp /tmp/$base ${LIB}/$file\n-    chmod a+r ${LIB}/$file\n-    rm -f /tmp/$base\n-  fi\n-fi\n-\n # Conditionalize all of <sys/char.h> on _KERNEL being defined.\n-\n-file=sys/char.h\n-base=`basename $file`.$$\n-if [ -r ${LIB}/$file ]; then\n-  file_to_fix=${LIB}/$file\n-else\n-  if [ -r ${INPUT}/$file ]; then\n-    file_to_fix=${INPUT}/$file\n-  else\n-    file_to_fix=\"\"\n-  fi\n-fi\n-if [ \\! -z \"$file_to_fix\" ]; then\n-  echo Checking $file_to_fix\n-  if grep _KERNEL $file_to_fix > /dev/null; then\n-    true\n-  else\n-    echo '#ifdef _KERNEL' > /tmp/$base\n-    cat $file_to_fix >> /tmp/$base\n-    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n-    echo Fixed $file_to_fix\n-    rm -f ${LIB}/$file\n-    cp /tmp/$base ${LIB}/$file\n-    chmod a+r ${LIB}/$file\n-    rm -f /tmp/$base\n-  fi\n-fi\n-\n # Conditionalize all of <sys/getpages.h> on _KERNEL being defined.\n-\n-file=sys/getpages.h\n-base=`basename $file`.$$\n-if [ -r ${LIB}/$file ]; then\n-  file_to_fix=${LIB}/$file\n-else\n-  if [ -r ${INPUT}/$file ]; then\n-    file_to_fix=${INPUT}/$file\n-  else\n-    file_to_fix=\"\"\n-  fi\n-fi\n-if [ \\! -z \"$file_to_fix\" ]; then\n-  echo Checking $file_to_fix\n-  if grep _KERNEL $file_to_fix > /dev/null; then\n-    true\n-  else\n-    echo '#ifdef _KERNEL' > /tmp/$base\n-    cat $file_to_fix >> /tmp/$base\n-    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n-    echo Fixed $file_to_fix\n-    rm -f ${LIB}/$file\n-    cp /tmp/$base ${LIB}/$file\n-    chmod a+r ${LIB}/$file\n-    rm -f /tmp/$base\n-  fi\n-fi\n-\n # Conditionalize all of <sys/map.h> on _KERNEL being defined.\n-\n-file=sys/map.h\n-base=`basename $file`.$$\n-if [ -r ${LIB}/$file ]; then\n-  file_to_fix=${LIB}/$file\n-else\n-  if [ -r ${INPUT}/$file ]; then\n-    file_to_fix=${INPUT}/$file\n-  else\n-    file_to_fix=\"\"\n-  fi\n-fi\n-if [ \\! -z \"$file_to_fix\" ]; then\n-  echo Checking $file_to_fix\n-  if grep _KERNEL $file_to_fix > /dev/null; then\n-    true\n-  else\n-    echo '#ifdef _KERNEL' > /tmp/$base\n-    cat $file_to_fix >> /tmp/$base\n-    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n-    echo Fixed $file_to_fix\n-    rm -f ${LIB}/$file\n-    cp /tmp/$base ${LIB}/$file\n-    chmod a+r ${LIB}/$file\n-    rm -f /tmp/$base\n-  fi\n-fi\n-\n # Conditionalize all of <sys/cmn_err.h> on _KERNEL being defined.\n-\n-file=sys/cmn_err.h\n-base=`basename $file`.$$\n-if [ -r ${LIB}/$file ]; then\n-  file_to_fix=${LIB}/$file\n-else\n-  if [ -r ${INPUT}/$file ]; then\n-    file_to_fix=${INPUT}/$file\n-  else\n-    file_to_fix=\"\"\n-  fi\n-fi\n-if [ \\! -z \"$file_to_fix\" ]; then\n-  echo Checking $file_to_fix\n-  if grep _KERNEL $file_to_fix > /dev/null; then\n-    true\n-  else\n-    echo '#ifdef _KERNEL' > /tmp/$base\n-    cat $file_to_fix >> /tmp/$base\n-    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n-    echo Fixed $file_to_fix\n-    rm -f ${LIB}/$file\n-    cp /tmp/$base ${LIB}/$file\n-    chmod a+r ${LIB}/$file\n-    rm -f /tmp/$base\n-  fi\n-fi\n-\n # Conditionalize all of <sys/kdebugger.h> on _KERNEL being defined.\n \n-file=sys/kdebugger.h\n+for file in fs/rfs/rf_cache.h sys/erec.h sys/err.h sys/char.h \\\n+            sys/getpages.h sys/map.h sys/cmn_err.h sys/kdebugger.h ; do\n+\n base=`basename $file`.$$\n if [ -r ${LIB}/$file ]; then\n   file_to_fix=${LIB}/$file\n@@ -1032,36 +819,7 @@ if [ \\! -z \"$file_to_fix\" ]; then\n   fi\n fi\n \n-# Conditionalize some of <netinet/in.h> on _KERNEL being defined.\n-# This has been taken out because it breaks on some versions of\n-# DYNIX/ptx, and it does not seem to do much good on any system.\n-# file=netinet/in.h\n-# base=`basename $file`.$$\n-# if [ -r ${LIB}/$file ]; then\n-#   file_to_fix=${LIB}/$file\n-# else\n-#   if [ -r ${INPUT}/$file ]; then\n-#     file_to_fix=${INPUT}/$file\n-#   else\n-#     file_to_fix=\"\"\n-#   fi\n-# fi\n-# if [ \\! -z \"$file_to_fix\" ]; then\n-#   echo Checking $file_to_fix\n-#   if grep _KERNEL $file_to_fix > /dev/null; then\n-#     true\n-#   else\n-#     sed -e '/#ifdef INKERNEL/i\\\n-# #ifdef _KERNEL\n-# ' \\\n-#     -e '/#endif[ \t]*\\/\\* INKERNEL \\*\\//a\\\n-# #endif /* _KERNEL */\n-# ' \\\n-#     $file_to_fix > ${LIB}/${file}.sed\n-#     rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n-#     echo Fixed $file_to_fix\n-#   fi\n-# fi\n+done\n \n # Conditionalize some of <sys/endian.h> on __GNUC__ and __GNUG__.\n \n@@ -1094,32 +852,6 @@ if [ \\! -z \"$file_to_fix\" ]; then\n   fi\n fi\n \n-# Commented out because tmcconne@sedona.intel.com says we don't clearly need it\n-# and the text in types.h is not erroneous.\n-## In sys/types.h, don't name the enum for booleans.\n-#\n-#file=sys/types.h\n-#base=`basename $file`.$$\n-#if [ -r ${LIB}/$file ]; then\n-#  file_to_fix=${LIB}/$file\n-#else\n-#  if [ -r ${INPUT}/$file ]; then\n-#    file_to_fix=${INPUT}/$file\n-#  else\n-#    file_to_fix=\"\"\n-#  fi\n-#fi\n-#if [ \\! -z \"$file_to_fix\" ]; then\n-#  echo Checking $file_to_fix\n-#  if grep \"enum boolean\" $file_to_fix > /dev/null; then\n-#    sed -e 's/enum boolean/enum/' ${LIB}/$file > ${LIB}/${file}.sed\n-#    rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n-#    echo Fixed $file_to_fix\n-#  else\n-#    true\n-#  fi\n-#fi\n-\n # Remove useless extern keyword from struct forward declarations in\n # <sys/stream.h> and <sys/strsubr.h>\n "}, {"sha": "80a7797181859a78d0dd23de21387ab254ec7bca", "filename": "gcc/fixinc/fixincl.sh", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447673ded110ce946a3c46f363052a832b740fc8/gcc%2Ffixinc%2Ffixincl.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447673ded110ce946a3c46f363052a832b740fc8/gcc%2Ffixinc%2Ffixincl.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.sh?ref=447673ded110ce946a3c46f363052a832b740fc8", "patch": "@@ -2,7 +2,7 @@\n #\n # Install modified versions of certain ANSI-incompatible system header\n # files which are fixed to work correctly with ANSI C and placed in a\n-# directory that GNU C will search.\n+# directory that GCC will search.\n #\n # See README-fixinc for more information.\n #\n@@ -27,6 +27,8 @@\n #            Boston,  MA  02111-1307, USA.\n #\n # # # # # # # # # # # # # # # # # # # # #\n+\n+# Usage: fixincl.sh output-dir input-dir\n #\n # Directory in which to store the results.\n # Fail if no arg to specify a directory for the output."}]}