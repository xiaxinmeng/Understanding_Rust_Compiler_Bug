{"sha": "980b12cc81979e52f491bf0dfe961d30c07fe864", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgwYjEyY2M4MTk3OWU1MmY0OTFiZjBkZmU5NjFkMzBjMDdmZTg2NA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-03-26T22:37:34Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-03-26T22:40:39Z"}, "message": "PR tree-optimization/59970 - Bogus -Wmaybe-uninitialized at low optimization levels\n\n\tPR tree-optimization/59970\n\t* gcc.dg/uninit-pr59970.c: New test.", "tree": {"sha": "b2e40d7f376d51c7aa56306529c27f40385183e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2e40d7f376d51c7aa56306529c27f40385183e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/980b12cc81979e52f491bf0dfe961d30c07fe864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980b12cc81979e52f491bf0dfe961d30c07fe864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/980b12cc81979e52f491bf0dfe961d30c07fe864", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980b12cc81979e52f491bf0dfe961d30c07fe864/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c453a817129c2c362726a9773390419f1df7dda3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c453a817129c2c362726a9773390419f1df7dda3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c453a817129c2c362726a9773390419f1df7dda3"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "145af657a76c2dfaa16453cc8a45c7c5f713eb74", "filename": "gcc/testsuite/gcc.dg/uninit-pr59970.c", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980b12cc81979e52f491bf0dfe961d30c07fe864/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr59970.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980b12cc81979e52f491bf0dfe961d30c07fe864/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr59970.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr59970.c?ref=980b12cc81979e52f491bf0dfe961d30c07fe864", "patch": "@@ -0,0 +1,79 @@\n+/* PR tree-optimization/59970 - Bogus -Wmaybe-uninitialized at low optimization\n+   levels\n+   { dg-do compile }\n+   { dg-options \"-Wall\" } */\n+\n+#pragma GCC push_options\n+#pragma GCC optimize (\"1\")\n+\n+__attribute__ ((noipa)) int\n+d_demangle_callback_O1 (const char *mangled)\n+{\n+  enum { DCT_TYPE, DCT_GLOBAL_DTORS } type;\n+  int dc;\n+\n+  /* Fails for -Og and -O1.  */\n+  if (mangled)\n+    type = DCT_GLOBAL_DTORS;\n+  else\n+    type = DCT_TYPE;\n+\n+  /* If both cases assign the same value, all is fine.  */\n+  switch (type)\n+    {\n+    case DCT_TYPE:\n+      dc = 0 /* 1 */;\n+      break;\n+    case DCT_GLOBAL_DTORS:\n+      dc = /* 0 */ 1;\n+      break;\n+\n+      /* If this is added, all is fine.  */\n+#ifdef ABORT\n+    default:\n+      __builtin_unreachable ();\n+#endif\n+    }\n+\n+  return dc;        // { dg-bogus \"uninitialized\" }\n+}\n+\n+#pragma GCC pop_options\n+\n+\n+#pragma GCC optimize (\"Og\")\n+\n+__attribute__ ((noipa)) int\n+d_demangle_callback_Og (const char *mangled)\n+{\n+  enum { DCT_TYPE, DCT_GLOBAL_DTORS } type;\n+  int dc;\n+\n+  /* Fails for -Og.  */\n+  /* Removing either the function call or the array dereference, it'll be like\n+     the TOGGLE1 case.  */\n+  extern int cmp (void);\n+  if (cmp () && mangled[0])\n+    type = DCT_GLOBAL_DTORS;\n+  else\n+    type = DCT_TYPE;\n+\n+  /* If both cases assign the same value, all is fine.  */\n+  switch (type)\n+    {\n+    case DCT_TYPE:\n+      dc = 0 /* 1 */;\n+      break;\n+    case DCT_GLOBAL_DTORS:\n+      dc = /* 0 */ 1;\n+      break;\n+\n+      /* If this is added, all is fine.  */\n+#ifdef ABORT\n+    default:\n+      __builtin_unreachable ();\n+#endif\n+    }\n+\n+  return dc;        // { dg-bogus \"uninitialized\" }\n+}"}]}