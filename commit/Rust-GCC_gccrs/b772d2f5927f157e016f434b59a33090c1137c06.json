{"sha": "b772d2f5927f157e016f434b59a33090c1137c06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc3MmQyZjU5MjdmMTU3ZTAxNmY0MzRiNTlhMzMwOTBjMTEzN2MwNg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-03-11T10:30:52Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-03-11T10:30:52Z"}, "message": "2003-03-11  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/nio/ByteBufferImpl.java\n\t(putInt): Use limit() instead of limit.\n\t* gnu/java/nio/CharBufferImpl.java\n\t(slice): Fixed implementation.\n\t(subSequence): Better bounds checking.\n\t* gnu/java/nio/MappedByteFileBuffer.java:\n\tImport all needed classes directly.\n\t* java/nio/ByteBuffer.java\n\t(hashCode): New dummy method.\n\t* java/nio/CharBuffer.java\n\t(array_offset): New member variable.\n\t(hasArray): Fixed documentation.\n\t(arrayOffset): Return array_offset.\n\nFrom-SVN: r64165", "tree": {"sha": "4ef30ee00b28507236135a22d7c2c45687ab7248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ef30ee00b28507236135a22d7c2c45687ab7248"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b772d2f5927f157e016f434b59a33090c1137c06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b772d2f5927f157e016f434b59a33090c1137c06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b772d2f5927f157e016f434b59a33090c1137c06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b772d2f5927f157e016f434b59a33090c1137c06/comments", "author": null, "committer": null, "parents": [{"sha": "37bd08f8df0003521d3da3b37a25235fd421bce6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37bd08f8df0003521d3da3b37a25235fd421bce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37bd08f8df0003521d3da3b37a25235fd421bce6"}], "stats": {"total": 54, "additions": 45, "deletions": 9}, "files": [{"sha": "91f7f8f7bd1a565326df96e8fbbcf31a90c1a38a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b772d2f5927f157e016f434b59a33090c1137c06/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b772d2f5927f157e016f434b59a33090c1137c06/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b772d2f5927f157e016f434b59a33090c1137c06", "patch": "@@ -1,3 +1,19 @@\n+2003-03-11  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/nio/ByteBufferImpl.java\n+\t(putInt): Use limit() instead of limit.\n+\t* gnu/java/nio/CharBufferImpl.java\n+\t(slice): Fixed implementation.\n+\t(subSequence): Better bounds checking.\n+\t* gnu/java/nio/MappedByteFileBuffer.java:\n+\tImport all needed classes directly.\n+\t* java/nio/ByteBuffer.java\n+\t(hashCode): New dummy method.\n+\t* java/nio/CharBuffer.java\n+\t(array_offset): New member variable.\n+\t(hasArray): Fixed documentation.\n+\t(arrayOffset): Return array_offset.\n+\n 2003-03-10  2003-02-27  Mohan Embar  <gnustuff@thisiscool.com>\n \n \t* include/jvm.h: removed declaration of _Jv_ThisExecutable()"}, {"sha": "342f3316a7045ae0586fd69a2f78643d8dde9429", "filename": "libjava/gnu/java/nio/ByteBufferImpl.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b772d2f5927f157e016f434b59a33090c1137c06/libjava%2Fgnu%2Fjava%2Fnio%2FByteBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b772d2f5927f157e016f434b59a33090c1137c06/libjava%2Fgnu%2Fjava%2Fnio%2FByteBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FByteBufferImpl.java?ref=b772d2f5927f157e016f434b59a33090c1137c06", "patch": "@@ -320,7 +320,7 @@ final public ByteBuffer putShort (short value)\n     if (readOnly)\n       throw new ReadOnlyBufferException ();\n     \n-    nio_put_Short (this, position (), limit(), value);\n+    nio_put_Short (this, position (), limit (), value);\n     inc_pos (2);\n     return this;\n   }\n@@ -352,7 +352,7 @@ final public ByteBuffer putInt (int value)\n     if (readOnly)\n       throw new ReadOnlyBufferException ();\n     \n-    nio_put_Int (this, position (), limit , value);\n+    nio_put_Int (this, position (), limit (), value);\n     inc_pos (4);\n     return this;\n   }"}, {"sha": "f35ae4b09ff0b468582e7665eddb3310586706b3", "filename": "libjava/gnu/java/nio/CharBufferImpl.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b772d2f5927f157e016f434b59a33090c1137c06/libjava%2Fgnu%2Fjava%2Fnio%2FCharBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b772d2f5927f157e016f434b59a33090c1137c06/libjava%2Fgnu%2Fjava%2Fnio%2FCharBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FCharBufferImpl.java?ref=b772d2f5927f157e016f434b59a33090c1137c06", "patch": "@@ -98,7 +98,8 @@ public boolean isReadOnly()\n   \n   public CharBuffer slice()\n   {\n-    return new CharBufferImpl (this);\n+    return new CharBufferImpl (backing_buffer, arrayOffset () + position (),\n+                               remaining ());\n   }\n   \n   public CharBuffer duplicate()\n@@ -125,9 +126,10 @@ public boolean isDirect()\n \n   final public CharSequence subSequence (int start, int end)\n   {\n-    if (start < 0 ||\n-        end > length () ||\n-        start > end)\n+    if (start < 0\n+        || start > length ()\n+        || end < start\n+        || end > length ())\n       throw new IndexOutOfBoundsException ();\n \n     // No support for direct buffers yet."}, {"sha": "acade62ac5fb79332405c493d08487f88e8c59f8", "filename": "libjava/gnu/java/nio/MappedByteFileBuffer.java", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b772d2f5927f157e016f434b59a33090c1137c06/libjava%2Fgnu%2Fjava%2Fnio%2FMappedByteFileBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b772d2f5927f157e016f434b59a33090c1137c06/libjava%2Fgnu%2Fjava%2Fnio%2FMappedByteFileBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FMappedByteFileBuffer.java?ref=b772d2f5927f157e016f434b59a33090c1137c06", "patch": "@@ -36,7 +36,15 @@\n exception statement from your version. */\n \n package gnu.java.nio;\n-import java.nio.*;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.nio.DoubleBuffer;\n+import java.nio.FloatBuffer;\n+import java.nio.IntBuffer;\n+import java.nio.LongBuffer;\n+import java.nio.ShortBuffer;\n+import java.nio.MappedByteBuffer;\n import java.io.IOException;\n \n final public class MappedByteFileBuffer"}, {"sha": "d55ae6dca96dec35b4d21b625d9f195fd36cd798", "filename": "libjava/java/nio/ByteBuffer.java", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b772d2f5927f157e016f434b59a33090c1137c06/libjava%2Fjava%2Fnio%2FByteBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b772d2f5927f157e016f434b59a33090c1137c06/libjava%2Fjava%2Fnio%2FByteBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FByteBuffer.java?ref=b772d2f5927f157e016f434b59a33090c1137c06", "patch": "@@ -246,6 +246,15 @@ public final int arrayOffset ()\n     return offset;\n   }\n   \n+  /**\n+   * Returns the current hash code of this buffer.\n+   */\n+  public int hashCode()\n+  {\n+    // FIXME: Check what SUN calcs here\n+    return super.hashCode();\n+  }\n+\n   /**\n    * Tells whether or not this buffer is equal to another object.\n    */"}, {"sha": "e5b31b4407548d6280a79fb42075e87bcba3768c", "filename": "libjava/java/nio/CharBuffer.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b772d2f5927f157e016f434b59a33090c1137c06/libjava%2Fjava%2Fnio%2FCharBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b772d2f5927f157e016f434b59a33090c1137c06/libjava%2Fjava%2Fnio%2FCharBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FCharBuffer.java?ref=b772d2f5927f157e016f434b59a33090c1137c06", "patch": "@@ -45,6 +45,7 @@\n public abstract class CharBuffer extends Buffer\n   implements Comparable, CharSequence\n {\n+  protected int array_offset = 0;\n   protected char [] backing_buffer;\n   \n   /**\n@@ -201,7 +202,7 @@ public final CharBuffer put (char[] src)\n   }\n \n   /**\n-   * Tells wether this is buffer is backed by an array or not.\n+   * Tells wether this is buffer is backed by an accessible array or not.\n    */\n   public final boolean hasArray ()\n   {\n@@ -242,7 +243,7 @@ public final int arrayOffset ()\n     if (isReadOnly ())\n       throw new ReadOnlyBufferException ();\n     \n-    return 0;\n+    return array_offset;\n   }\n   \n   /**"}]}