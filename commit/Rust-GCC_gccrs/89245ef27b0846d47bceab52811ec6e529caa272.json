{"sha": "89245ef27b0846d47bceab52811ec6e529caa272", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkyNDVlZjI3YjA4NDZkNDdiY2VhYjUyODExZWM2ZTUyOWNhYTI3Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-03-26T20:53:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-03-26T20:53:58Z"}, "message": "re PR debug/43540 (ICE: vector VEC(dw_cfi_ref,heap) grow domain error, in output_cfis at dwarf2out.c:3346 or OOM-killed)\n\n\tPR debug/43540\n\t* dwarf2out.c (reg_save): For DW_CFA_expression put regnum\n\tinto first operand and location into second.\n\t(dw_cfi_oprnd1_desc): Return dw_cfi_oprnd_reg_num instead of\n\tdw_cfi_oprnd_loc for DW_CFA_expression.\n\t(dw_cfi_oprnd2_desc): Return dw_cfi_oprnd_loc for DW_CFA_expression.\n\t(output_cfa_loc, output_cfa_loc_raw): For DW_CFA_expression\n\tassume first argument is regnum and second argument is location.\n\nFrom-SVN: r157762", "tree": {"sha": "6dd175a70af2ad8f1a914a721882ba021f783b6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dd175a70af2ad8f1a914a721882ba021f783b6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89245ef27b0846d47bceab52811ec6e529caa272", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89245ef27b0846d47bceab52811ec6e529caa272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89245ef27b0846d47bceab52811ec6e529caa272", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89245ef27b0846d47bceab52811ec6e529caa272/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c5e43cc45b27e39016aa1dead023dc5edbd34eb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e43cc45b27e39016aa1dead023dc5edbd34eb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e43cc45b27e39016aa1dead023dc5edbd34eb2"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "528a29912143ec96b4a5a37b5304cba400466bc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89245ef27b0846d47bceab52811ec6e529caa272/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89245ef27b0846d47bceab52811ec6e529caa272/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89245ef27b0846d47bceab52811ec6e529caa272", "patch": "@@ -1,3 +1,14 @@\n+2010-03-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/43540\n+\t* dwarf2out.c (reg_save): For DW_CFA_expression put regnum\n+\tinto first operand and location into second.\n+\t(dw_cfi_oprnd1_desc): Return dw_cfi_oprnd_reg_num instead of\n+\tdw_cfi_oprnd_loc for DW_CFA_expression.\n+\t(dw_cfi_oprnd2_desc): Return dw_cfi_oprnd_loc for DW_CFA_expression.\n+\t(output_cfa_loc, output_cfa_loc_raw): For DW_CFA_expression\n+\tassume first argument is regnum and second argument is location.\n+\n 2010-03-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/42113"}, {"sha": "bd75de9c85b1d71dfb55bc7f5409dd82aa874b1e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89245ef27b0846d47bceab52811ec6e529caa272/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89245ef27b0846d47bceab52811ec6e529caa272/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=89245ef27b0846d47bceab52811ec6e529caa272", "patch": "@@ -1115,8 +1115,8 @@ reg_save (const char *label, unsigned int reg, unsigned int sreg, HOST_WIDE_INT\n       && sreg == INVALID_REGNUM)\n     {\n       cfi->dw_cfi_opc = DW_CFA_expression;\n-      cfi->dw_cfi_oprnd2.dw_cfi_reg_num = reg;\n-      cfi->dw_cfi_oprnd1.dw_cfi_loc\n+      cfi->dw_cfi_oprnd1.dw_cfi_reg_num = reg;\n+      cfi->dw_cfi_oprnd2.dw_cfi_loc\n \t= build_cfa_aligned_loc (offset, fde->stack_realignment);\n     }\n   else if (sreg == INVALID_REGNUM)\n@@ -2911,6 +2911,7 @@ dw_cfi_oprnd1_desc (enum dwarf_call_frame_info cfi)\n     case DW_CFA_same_value:\n     case DW_CFA_def_cfa_register:\n     case DW_CFA_register:\n+    case DW_CFA_expression:\n       return dw_cfi_oprnd_reg_num;\n \n     case DW_CFA_def_cfa_offset:\n@@ -2919,7 +2920,6 @@ dw_cfi_oprnd1_desc (enum dwarf_call_frame_info cfi)\n       return dw_cfi_oprnd_offset;\n \n     case DW_CFA_def_cfa_expression:\n-    case DW_CFA_expression:\n       return dw_cfi_oprnd_loc;\n \n     default:\n@@ -2946,6 +2946,9 @@ dw_cfi_oprnd2_desc (enum dwarf_call_frame_info cfi)\n     case DW_CFA_register:\n       return dw_cfi_oprnd_reg_num;\n \n+    case DW_CFA_expression:\n+      return dw_cfi_oprnd_loc;\n+\n     default:\n       return dw_cfi_oprnd_unused;\n     }\n@@ -5193,10 +5196,14 @@ output_cfa_loc (dw_cfi_ref cfi)\n   unsigned long size;\n \n   if (cfi->dw_cfi_opc == DW_CFA_expression)\n-    dw2_asm_output_data (1, cfi->dw_cfi_oprnd2.dw_cfi_reg_num, NULL);\n+    {\n+      dw2_asm_output_data (1, cfi->dw_cfi_oprnd1.dw_cfi_reg_num, NULL);\n+      loc = cfi->dw_cfi_oprnd2.dw_cfi_loc;\n+    }\n+  else\n+    loc = cfi->dw_cfi_oprnd1.dw_cfi_loc;\n \n   /* Output the size of the block.  */\n-  loc = cfi->dw_cfi_oprnd1.dw_cfi_loc;\n   size = size_of_locs (loc);\n   dw2_asm_output_data_uleb128 (size, NULL);\n \n@@ -5213,10 +5220,14 @@ output_cfa_loc_raw (dw_cfi_ref cfi)\n   unsigned long size;\n \n   if (cfi->dw_cfi_opc == DW_CFA_expression)\n-    fprintf (asm_out_file, \"0x%x,\", cfi->dw_cfi_oprnd2.dw_cfi_reg_num);\n+    {\n+      fprintf (asm_out_file, \"0x%x,\", cfi->dw_cfi_oprnd1.dw_cfi_reg_num);\n+      loc = cfi->dw_cfi_oprnd2.dw_cfi_loc;\n+    }\n+  else\n+    loc = cfi->dw_cfi_oprnd1.dw_cfi_loc;\n \n   /* Output the size of the block.  */\n-  loc = cfi->dw_cfi_oprnd1.dw_cfi_loc;\n   size = size_of_locs (loc);\n   dw2_asm_output_data_uleb128_raw (size);\n   fputc (',', asm_out_file);"}]}