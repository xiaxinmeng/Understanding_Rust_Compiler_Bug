{"sha": "f7dbf8e56459916a66af9fc62608109f65babd51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdkYmY4ZTU2NDU5OTE2YTY2YWY5ZmM2MjYwODEwOWY2NWJhYmQ1MQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-03-18T20:17:10Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-03-18T20:17:10Z"}, "message": "Fix UBSAN in regrename.c (PR rtl-optimization/84635).\n\n2018-03-18  Martin Liska  <mliska@suse.cz>\n\n\tPR rtl-optimization/84635\n\t* regrename.c (build_def_use): Use matches_mode only when\n\tmatches >= 0.\n\nFrom-SVN: r258634", "tree": {"sha": "f97caf2a9bb93f1537a30e9654d2e819ecfd8805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f97caf2a9bb93f1537a30e9654d2e819ecfd8805"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7dbf8e56459916a66af9fc62608109f65babd51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7dbf8e56459916a66af9fc62608109f65babd51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7dbf8e56459916a66af9fc62608109f65babd51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7dbf8e56459916a66af9fc62608109f65babd51/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96c8b2534d19a0769152cd33e7fccc66a8785389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96c8b2534d19a0769152cd33e7fccc66a8785389", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96c8b2534d19a0769152cd33e7fccc66a8785389"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "9aab6e606d4f86435edc6d67436ecc67c3e4362e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7dbf8e56459916a66af9fc62608109f65babd51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7dbf8e56459916a66af9fc62608109f65babd51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7dbf8e56459916a66af9fc62608109f65babd51", "patch": "@@ -1,3 +1,9 @@\n+2018-03-18  Martin Liska  <mliska@suse.cz>\n+\n+\tPR rtl-optimization/84635\n+\t* regrename.c (build_def_use): Use matches_mode only when\n+\tmatches >= 0.\n+\n 2018-03-18  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR tree-optimization/84913"}, {"sha": "45754812f6c597e65cbfaf92059beaaf81ce84d2", "filename": "gcc/regrename.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7dbf8e56459916a66af9fc62608109f65babd51/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7dbf8e56459916a66af9fc62608109f65babd51/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=f7dbf8e56459916a66af9fc62608109f65babd51", "patch": "@@ -1703,14 +1703,18 @@ build_def_use (basic_block bb)\n \t\t     and we must instead make sure to make the operand visible\n \t\t     to the machinery that tracks hard registers.  */\n \t\t  machine_mode i_mode = recog_data.operand_mode[i];\n-\t\t  machine_mode matches_mode = recog_data.operand_mode[matches];\n-\t\t  if (matches >= 0\n-\t\t      && maybe_ne (GET_MODE_SIZE (i_mode),\n-\t\t\t\t   GET_MODE_SIZE (matches_mode))\n-\t\t      && !verify_reg_in_set (op, &live_in_chains))\n+\t\t  if (matches >= 0)\n \t\t    {\n-\t\t      untracked_operands |= 1 << i;\n-\t\t      untracked_operands |= 1 << matches;\n+\t\t      machine_mode matches_mode\n+\t\t\t= recog_data.operand_mode[matches];\n+\n+\t\t      if (maybe_ne (GET_MODE_SIZE (i_mode),\n+\t\t\t\t    GET_MODE_SIZE (matches_mode))\n+\t\t\t  && !verify_reg_in_set (op, &live_in_chains))\n+\t\t\t{\n+\t\t\t  untracked_operands |= 1 << i;\n+\t\t\t  untracked_operands |= 1 << matches;\n+\t\t\t}\n \t\t    }\n \t\t}\n #ifdef STACK_REGS"}]}