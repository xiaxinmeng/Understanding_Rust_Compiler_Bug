{"sha": "952604032ac5a2804d0f36de7e329902f0340a8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUyNjA0MDMyYWM1YTI4MDRkMGYzNmRlN2UzMjk5MDJmMDM0MGE4ZQ==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2020-06-24T19:57:36Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-15T09:39:13Z"}, "message": "[Ada] Cleanup definition of Might_Have_Tasks\n\ngcc/ada/\n\n\t* exp_ch6.ads (Might_Have_Tasks): Update documentation.\n\t* exp_ch6.adb (Might_Have_Tasks): Return also true when the type\n\thas tasks.\n\t(Make_Build_In_Place_Call_In_Allocator): Code cleanup.\n\t* exp_ch3.adb (Ensure_Activation_Chain_And_Master,\n\tExpand_N_Full_Type_Declaration, Expand_N_Object_Declaration):\n\tCode cleanup.", "tree": {"sha": "eff8ac54e3613b185ab0dd8e43bdcbe6d817de51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eff8ac54e3613b185ab0dd8e43bdcbe6d817de51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/952604032ac5a2804d0f36de7e329902f0340a8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/952604032ac5a2804d0f36de7e329902f0340a8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/952604032ac5a2804d0f36de7e329902f0340a8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/952604032ac5a2804d0f36de7e329902f0340a8e/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8861bdd59a95b32ad6000157418c808317421bfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8861bdd59a95b32ad6000157418c808317421bfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8861bdd59a95b32ad6000157418c808317421bfe"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "93f8fa0728de271e79e72fc15cb72a9e73a7b652", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/952604032ac5a2804d0f36de7e329902f0340a8e/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/952604032ac5a2804d0f36de7e329902f0340a8e/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=952604032ac5a2804d0f36de7e329902f0340a8e", "patch": "@@ -4758,7 +4758,7 @@ package body Exp_Ch3 is\n    begin\n       pragma Assert (Nkind (Obj_Decl) = N_Object_Declaration);\n \n-      if Has_Task (Typ) or else Might_Have_Tasks (Typ) then\n+      if Might_Have_Tasks (Typ) then\n          Build_Activation_Chain_Entity (Obj_Decl);\n \n          if Has_Task (Typ) then\n@@ -5898,10 +5898,8 @@ package body Exp_Ch3 is\n                Typ := Etype (Comp);\n \n                if Ekind (Typ) = E_Anonymous_Access_Type\n-                 and then\n-                   (Has_Task (Available_View (Designated_Type (Typ)))\n-                      or else\n-                    Might_Have_Tasks (Available_View (Designated_Type (Typ))))\n+                 and then Might_Have_Tasks\n+                            (Available_View (Designated_Type (Typ)))\n                  and then No (Master_Id (Typ))\n                then\n                   --  Ensure that the record or array type have a _master\n@@ -6785,7 +6783,7 @@ package body Exp_Ch3 is\n       --  of the stacks in this scenario, the stacks of the first array are\n       --  not counted.\n \n-      if (Has_Task (Typ) or else Might_Have_Tasks (Typ))\n+      if Might_Have_Tasks (Typ)\n         and then not Restriction_Active (No_Secondary_Stack)\n         and then (Restriction_Active (No_Implicit_Heap_Allocations)\n           or else Restriction_Active (No_Implicit_Task_Allocations))"}, {"sha": "1885e89e9633567a044c5d45f690ff3de482b013", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/952604032ac5a2804d0f36de7e329902f0340a8e/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/952604032ac5a2804d0f36de7e329902f0340a8e/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=952604032ac5a2804d0f36de7e329902f0340a8e", "patch": "@@ -8912,7 +8912,7 @@ package body Exp_Ch6 is\n          --  rather than some outer chain.\n \n       begin\n-         if Has_Task (Result_Subt) or else Might_Have_Tasks (Result_Subt) then\n+         if Might_Have_Tasks (Result_Subt) then\n             Actions := New_List;\n             Build_Task_Allocate_Block_With_Init_Stmts\n               (Actions, Allocator, Init_Stmts => New_List (Assign));\n@@ -9954,8 +9954,9 @@ package body Exp_Ch6 is\n    begin\n       return not Global_No_Tasking\n         and then not No_Run_Time_Mode\n-        and then Is_Class_Wide_Type (Typ)\n-        and then Is_Limited_Record (Typ);\n+        and then (Has_Task (Typ)\n+                    or else (Is_Class_Wide_Type (Typ)\n+                               and then Is_Limited_Record (Typ)));\n    end Might_Have_Tasks;\n \n    ----------------------------"}, {"sha": "272f893192398263fc3f91d3d17f203c3264eafa", "filename": "gcc/ada/exp_ch6.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/952604032ac5a2804d0f36de7e329902f0340a8e/gcc%2Fada%2Fexp_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/952604032ac5a2804d0f36de7e329902f0340a8e/gcc%2Fada%2Fexp_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.ads?ref=952604032ac5a2804d0f36de7e329902f0340a8e", "patch": "@@ -241,8 +241,8 @@ package Exp_Ch6 is\n    --  object. Function_Call must denote a call to a CPP_Constructor function.\n \n    function Might_Have_Tasks (Typ : Entity_Id) return Boolean;\n-   --  Return True if Typ is a limited class-wide type (or subtype), since it\n-   --  might have task components.\n+   --  Return True when type Typ has tasks or when it is a limited class-wide\n+   --  type (or subtype), since it might have task components.\n \n    function Needs_BIP_Alloc_Form (Func_Id : Entity_Id) return Boolean;\n    --  Ada 2005 (AI-318-02): Return True if the function needs an implicit"}]}