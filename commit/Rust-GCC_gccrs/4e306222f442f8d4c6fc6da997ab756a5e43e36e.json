{"sha": "4e306222f442f8d4c6fc6da997ab756a5e43e36e", "node_id": "C_kwDOANBUbNoAKDRlMzA2MjIyZjQ0MmY4ZDRjNmZjNmRhOTk3YWI3NTZhNWU0M2UzNmU", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-17T15:47:17Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-17T17:42:56Z"}, "message": "[PR tree-optimization/107732] [range-ops] Handle attempt to abs() negatives.\n\nThe threader is creating a scenario where we are trying to solve:\n\n\t[NEGATIVES] = abs(x)\n\nWhile solving this we have an intermediate value of UNDEFINED because\nwe have no positive numbers.  But then we try to union the negative\npair to the final result by querying the bounds.  Since neither\nUNDEFINED nor NAN have bounds, they need to be specially handled.\n\n\tPR tree-optimization/107732\n\ngcc/ChangeLog:\n\n\t* range-op-float.cc (foperator_abs::op1_range): Early exit when\n\tresult is undefined.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/pr107732.c: New test.", "tree": {"sha": "7f97f1642131f7f6b94aba3359a887afa5482dc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f97f1642131f7f6b94aba3359a887afa5482dc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e306222f442f8d4c6fc6da997ab756a5e43e36e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e306222f442f8d4c6fc6da997ab756a5e43e36e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e306222f442f8d4c6fc6da997ab756a5e43e36e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e306222f442f8d4c6fc6da997ab756a5e43e36e/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9ed1d24ee46f5ca759c35a1f51fa163d7529ea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ed1d24ee46f5ca759c35a1f51fa163d7529ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9ed1d24ee46f5ca759c35a1f51fa163d7529ea6"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "ee88511eba0b4b02425c936b38a3406d97426bae", "filename": "gcc/range-op-float.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e306222f442f8d4c6fc6da997ab756a5e43e36e/gcc%2Frange-op-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e306222f442f8d4c6fc6da997ab756a5e43e36e/gcc%2Frange-op-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op-float.cc?ref=4e306222f442f8d4c6fc6da997ab756a5e43e36e", "patch": "@@ -1407,7 +1407,7 @@ foperator_abs::op1_range (frange &r, tree type,\n       neg_nan.set_nan (type, true);\n       r.union_ (neg_nan);\n     }\n-  if (r.known_isnan ())\n+  if (r.known_isnan () || r.undefined_p ())\n     return true;\n   // Then add the negative of each pair:\n   // ABS(op1) = [5,20] would yield op1 => [-20,-5][5,20]."}, {"sha": "b216f38db0efa1c4305d7b871a77365fbbdbca69", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr107732.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e306222f442f8d4c6fc6da997ab756a5e43e36e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107732.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e306222f442f8d4c6fc6da997ab756a5e43e36e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107732.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107732.c?ref=4e306222f442f8d4c6fc6da997ab756a5e43e36e", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+double sqrt(double);\n+double a, b, c;\n+void d() {\n+  for (;;) {\n+    c = __builtin_fabs(a);\n+    sqrt(c);\n+    if (a)\n+      a = b;\n+  }\n+}"}]}