{"sha": "efe75b6f9f3ce9e403395b28485bf5ff36eb8444", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZlNzViNmY5ZjNjZTllNDAzMzk1YjI4NDg1YmY1ZmYzNmViODQ0NA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2006-12-09T15:36:55Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2006-12-09T15:36:55Z"}, "message": "cgraph.c: Update copyright.\n\n\n\t* cgraph.c: Update copyright.\n\t* cgraph.h: Likewise\n\t(cgraph_update_pending_function): Remove prototype.\n\t* cgraphunit.c: Update copyright; update overall comment.\n\t(cgraph_assemble_pending_functions): Make local.\n\nFrom-SVN: r119691", "tree": {"sha": "794d162f5a93eee10fce8f0475a9c85d435474e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/794d162f5a93eee10fce8f0475a9c85d435474e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efe75b6f9f3ce9e403395b28485bf5ff36eb8444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe75b6f9f3ce9e403395b28485bf5ff36eb8444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe75b6f9f3ce9e403395b28485bf5ff36eb8444", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe75b6f9f3ce9e403395b28485bf5ff36eb8444/comments", "author": null, "committer": null, "parents": [{"sha": "448d5cc931f428c55fc0d43481c635b03c61e68d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/448d5cc931f428c55fc0d43481c635b03c61e68d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/448d5cc931f428c55fc0d43481c635b03c61e68d"}], "stats": {"total": 45, "additions": 23, "deletions": 22}, "files": [{"sha": "16ba624f608a1654085b18baf6aa59f526bf2b6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe75b6f9f3ce9e403395b28485bf5ff36eb8444/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe75b6f9f3ce9e403395b28485bf5ff36eb8444/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efe75b6f9f3ce9e403395b28485bf5ff36eb8444", "patch": "@@ -1,3 +1,11 @@\n+2006-12-09  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.c: Update copyright.\n+\t* cgraph.h: Likewise\n+\t(cgraph_update_pending_function): Remove prototype.\n+\t* cgraphunit.c: Update copyright; update overall comment.\n+\t(cgraph_assemble_pending_functions): Make local.\n+\n 2006-12-09  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n \n \t* haifa-sched.c (schedule_block): Remove excessive sanity check."}, {"sha": "23429feb8e787b4996e802cd0503f766b12574b6", "filename": "gcc/cgraph.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe75b6f9f3ce9e403395b28485bf5ff36eb8444/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe75b6f9f3ce9e403395b28485bf5ff36eb8444/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=efe75b6f9f3ce9e403395b28485bf5ff36eb8444", "patch": "@@ -1,5 +1,5 @@\n /* Callgraph handling code.\n-   Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Jan Hubicka\n \n This file is part of GCC."}, {"sha": "89655633d9c97ae464f42e6fd910a53e40b6e592", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe75b6f9f3ce9e403395b28485bf5ff36eb8444/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe75b6f9f3ce9e403395b28485bf5ff36eb8444/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=efe75b6f9f3ce9e403395b28485bf5ff36eb8444", "patch": "@@ -1,5 +1,5 @@\n /* Callgraph handling code.\n-   Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Jan Hubicka\n \n This file is part of GCC.\n@@ -309,7 +309,6 @@ struct cgraph_node *cgraph_master_clone (struct cgraph_node *);\n void cgraph_add_new_function (tree);\n \n /* In cgraphunit.c  */\n-bool cgraph_assemble_pending_functions (void);\n bool cgraph_varpool_assemble_pending_decls (void);\n void cgraph_finalize_function (tree, bool);\n void cgraph_finalize_compilation_unit (void);"}, {"sha": "26399d368c95b61468d306223c0055549f2ef897", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe75b6f9f3ce9e403395b28485bf5ff36eb8444/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe75b6f9f3ce9e403395b28485bf5ff36eb8444/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=efe75b6f9f3ce9e403395b28485bf5ff36eb8444", "patch": "@@ -1,5 +1,5 @@\n /* Callgraph based interprocedural optimizations.\n-   Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Jan Hubicka\n \n This file is part of GCC.\n@@ -32,7 +32,8 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n       This function is called once front-end has parsed whole body of function\n       and it is certain that the function body nor the declaration will change.\n \n-      (There is one exception needed for implementing GCC extern inline function.)\n+      (There is one exception needed for implementing GCC extern inline\n+\tfunction.)\n \n     - cgraph_varpool_finalize_variable\n \n@@ -41,17 +42,15 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n \n     - cgraph_finalize_compilation_unit\n \n-      This function is called once compilation unit is finalized and it will\n-      no longer change.\n+      This function is called once (source level) compilation unit is finalized\n+      and it will no longer change.\n \n       In the unit-at-a-time the call-graph construction and local function\n       analysis takes place here.  Bodies of unreachable functions are released\n       to conserve memory usage.\n \n-      ???  The compilation unit in this point of view should be compilation\n-      unit as defined by the language - for instance C frontend allows multiple\n-      compilation units to be parsed at once and it should call function each\n-      time parsing is done so we save memory.\n+      The function can be called multiple times when multiple source level\n+      compilation units are combined (such as in C frontend)\n \n     - cgraph_optimize\n \n@@ -60,19 +59,14 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n       taken are marked as local.  Backend can then use this information to\n       modify calling conventions, do better inlining or similar optimizations.\n \n-    - cgraph_assemble_pending_functions\n-    - cgraph_varpool_assemble_pending_variables\n-\n-      In non-unit-at-a-time mode these functions can be used to force compilation\n-      of functions or variables that are known to be needed at given stage\n-      of compilation\n-\n     - cgraph_mark_needed_node\n     - cgraph_varpool_mark_needed_node\n \n-      When function or variable is referenced by some hidden way (for instance\n-      via assembly code and marked by attribute \"used\"), the call-graph data structure\n-      must be updated accordingly by this function.\n+      When function or variable is referenced by some hidden way the call-graph\n+      data structure must be updated accordingly by this function.\n+      There should be little need to call this function and all the references\n+      should be made explicit to cgraph code.  At present these functions are\n+      used by C++ frotend to explicitely mark the keyed methods.\n \n     - analyze_expr callback\n \n@@ -351,7 +345,7 @@ cgraph_varpool_remove_unreferenced_decls (void)\n /* When not doing unit-at-a-time, output all functions enqueued.\n    Return true when such a functions were found.  */\n \n-bool\n+static bool\n cgraph_assemble_pending_functions (void)\n {\n   bool output = false;"}]}