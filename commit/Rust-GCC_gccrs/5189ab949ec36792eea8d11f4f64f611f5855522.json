{"sha": "5189ab949ec36792eea8d11f4f64f611f5855522", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE4OWFiOTQ5ZWMzNjc5MmVlYThkMTFmNGY2NGY2MTFmNTg1NTUyMg==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2007-01-18T18:45:46Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-18T18:45:46Z"}, "message": "200x-xx-xx Julian Brown <julian@codesourcery.com> Richard Sandiford <richard@codesourcery.com>\n\ngcc/\n200x-xx-xx  Julian Brown  <julian@codesourcery.com>\n\t    Richard Sandiford  <richard@codesourcery.com>\n\n\t* config/m68k/m68k.h (LONG_DOUBLE_TYPE_SIZE): Make 64-bit on ColdFire.\n\t(LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Likewise.\n\t* config/m68k/netbsd-elf.h (LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Undefine\n\tbefore redefining.\n\t* config/m68k/uclinux-oldabi.h (LONG_DOUBLE_TYPE_SIZE): Redefine to\n\t80 unconditionally.\n\t(LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Likewise.\n\nCo-Authored-By: Richard Sandiford <richard@codesourcery.com>\n\nFrom-SVN: r120910", "tree": {"sha": "684199b84d588a0a2d652904a8976192593bd0f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/684199b84d588a0a2d652904a8976192593bd0f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5189ab949ec36792eea8d11f4f64f611f5855522", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5189ab949ec36792eea8d11f4f64f611f5855522", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5189ab949ec36792eea8d11f4f64f611f5855522", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5189ab949ec36792eea8d11f4f64f611f5855522/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4529dbf15fa88a1c2a5a51be43bd74c84bf8ca96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4529dbf15fa88a1c2a5a51be43bd74c84bf8ca96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4529dbf15fa88a1c2a5a51be43bd74c84bf8ca96"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "83c6035f436988130b1931a5cc6fe0a4a437a09c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5189ab949ec36792eea8d11f4f64f611f5855522/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5189ab949ec36792eea8d11f4f64f611f5855522/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5189ab949ec36792eea8d11f4f64f611f5855522", "patch": "@@ -1,3 +1,14 @@\n+2007-01-18  Julian Brown  <julian@codesourcery.com>\n+\t    Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/m68k/m68k.h (LONG_DOUBLE_TYPE_SIZE): Make 64-bit on ColdFire.\n+\t(LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Likewise.\n+\t* config/m68k/netbsd-elf.h (LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Undefine\n+\tbefore redefining.\n+\t* config/m68k/uclinux-oldabi.h (LONG_DOUBLE_TYPE_SIZE): Redefine to\n+\t80 unconditionally.\n+\t(LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Likewise.\n+\n 2007-01-18  Richard Sandiford  <richard@codesourcery.com>\n \n \t* doc/install.texi: Document m68k-uclinuxoldabi."}, {"sha": "772943af8d87ac88b1fbd0937ceae57b4ee427ee", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5189ab949ec36792eea8d11f4f64f611f5855522/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5189ab949ec36792eea8d11f4f64f611f5855522/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=5189ab949ec36792eea8d11f4f64f611f5855522", "patch": "@@ -259,7 +259,17 @@ Boston, MA 02110-1301, USA.  */\n \f\n /* target machine storage layout */\n \n-#define LONG_DOUBLE_TYPE_SIZE 80\n+/* \"long double\" is the same as \"double\" on ColdFire targets.  */\n+\n+#define LONG_DOUBLE_TYPE_SIZE (TARGET_COLDFIRE ? 64 : 80)\n+\n+/* We need to know the size of long double at compile-time in libgcc2.  */\n+\n+#ifdef __mcoldfire__\n+#define LIBGCC2_LONG_DOUBLE_TYPE_SIZE 64\n+#else\n+#define LIBGCC2_LONG_DOUBLE_TYPE_SIZE 80\n+#endif\n \n /* Set the value of FLT_EVAL_METHOD in float.h.  When using 68040 fp\n    instructions, we get proper intermediate rounding, otherwise we"}, {"sha": "e37bea0a6290e030146c204f2b18e4140062f991", "filename": "gcc/config/m68k/netbsd-elf.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5189ab949ec36792eea8d11f4f64f611f5855522/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5189ab949ec36792eea8d11f4f64f611f5855522/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h?ref=5189ab949ec36792eea8d11f4f64f611f5855522", "patch": "@@ -40,6 +40,7 @@ Boston, MA 02110-1301, USA.  */\n #undef LONG_DOUBLE_TYPE_SIZE\n #define LONG_DOUBLE_TYPE_SIZE (TARGET_68020 ? 80 : 64)\n \n+#undef LIBGCC2_LONG_DOUBLE_TYPE_SIZE\n #ifdef __mc68010__\n #define LIBGCC2_LONG_DOUBLE_TYPE_SIZE 64\n #else"}, {"sha": "6e4746054c9be07b7784a936eb78f934c8762b1c", "filename": "gcc/config/m68k/uclinux-oldabi.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5189ab949ec36792eea8d11f4f64f611f5855522/gcc%2Fconfig%2Fm68k%2Fuclinux-oldabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5189ab949ec36792eea8d11f4f64f611f5855522/gcc%2Fconfig%2Fm68k%2Fuclinux-oldabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fuclinux-oldabi.h?ref=5189ab949ec36792eea8d11f4f64f611f5855522", "patch": "@@ -22,6 +22,12 @@ the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n Boston, MA 02110-1301, USA.  */\n \n \n+/* The old uClinux ABI used 80-byte \"long double\"s for ColdFire too.  */\n+#undef LONG_DOUBLE_TYPE_SIZE\n+#define LONG_DOUBLE_TYPE_SIZE 80\n+#undef LIBGCC2_LONG_DOUBLE_TYPE_SIZE\n+#define LIBGCC2_LONG_DOUBLE_TYPE_SIZE 80\n+\n /* Undo the definition of STARTFILE_SPEC from m68kelf.h so we'll\n    pick the default from gcc.c (just link crt0.o from multilib dir).  */\n #undef\tSTARTFILE_SPEC"}]}