{"sha": "d2ce91694fa00ec364dd69661fe98caa57f1e7d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJjZTkxNjk0ZmEwMGVjMzY0ZGQ2OTY2MWZlOThjYWE1N2YxZTdkOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-29T21:12:37Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-29T21:12:37Z"}, "message": "(force_const_mem): Set MARK instead of clearing it.\n\n(output_constant_pool): Only mark constant pool if -O.\nCheck mark flag unconditionally.\n(mark_constant_pool): Start by clearing all mark flags.\n\nFrom-SVN: r13564", "tree": {"sha": "eff7bfa30f2909d023d0c4c46fc0c54f04f6be00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eff7bfa30f2909d023d0c4c46fc0c54f04f6be00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2ce91694fa00ec364dd69661fe98caa57f1e7d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ce91694fa00ec364dd69661fe98caa57f1e7d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2ce91694fa00ec364dd69661fe98caa57f1e7d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ce91694fa00ec364dd69661fe98caa57f1e7d8/comments", "author": null, "committer": null, "parents": [{"sha": "69b7087e803b85300dbc8c18277e02d85b2e8acd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69b7087e803b85300dbc8c18277e02d85b2e8acd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69b7087e803b85300dbc8c18277e02d85b2e8acd"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "45f8c684c9eadd2c6527a9dd6da3ef6bee7f4095", "filename": "gcc/varasm.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ce91694fa00ec364dd69661fe98caa57f1e7d8/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ce91694fa00ec364dd69661fe98caa57f1e7d8/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=d2ce91694fa00ec364dd69661fe98caa57f1e7d8", "patch": "@@ -3486,7 +3486,7 @@ force_const_mem (mode, x)\n       pool->labelno = const_labelno;\n       pool->align = align;\n       pool->offset = pool_offset;\n-      pool->mark = 0;\n+      pool->mark = 1;\n       pool->next = 0;\n \n       if (last_pool == 0)\n@@ -3603,7 +3603,7 @@ output_constant_pool (fnname, fndecl)\n   /* It is possible for gcc to call force_const_mem and then to later\n      discard the instructions which refer to the constant.  In such a\n      case we do not need to output the constant.  */\n-  if (flag_expensive_optimizations)\n+  if (optimize >= 0 && flag_expensive_optimizations)\n     mark_constant_pool ();\n \n #ifdef ASM_OUTPUT_POOL_PROLOGUE\n@@ -3614,7 +3614,7 @@ output_constant_pool (fnname, fndecl)\n     {\n       x = pool->constant;\n \n-      if (flag_expensive_optimizations && ! pool->mark)\n+      if (! pool->mark)\n \tcontinue;\n \n       /* See if X is a LABEL_REF (or a CONST referring to a LABEL_REF)\n@@ -3687,10 +3687,14 @@ static void\n mark_constant_pool ()\n {\n   register rtx insn;\n+  struct pool_constant *pool;\n \n   if (first_pool == 0)\n     return;\n \n+  for (pool = first_pool; pool; pool = pool->next)\n+    pool->mark = 0;\n+\n   for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n     if (GET_RTX_CLASS (GET_CODE (insn)) == 'i')\n       mark_constants (PATTERN (insn));"}]}