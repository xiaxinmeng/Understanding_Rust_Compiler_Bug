{"sha": "99769e7fb6ed153a53174b7f08415eee347655f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk3NjllN2ZiNmVkMTUzYTUzMTc0YjdmMDg0MTVlZWUzNDc2NTVmMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-08-08T17:12:05Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-08-08T17:12:05Z"}, "message": "[C] Fix bogus nested enum error message\n\nFor:\n\n    enum a { A };\n    enum a { B };\n\nwe emit a bogus error about nested definitions before the real error:\n\nfoo.c:2:6: error: nested redefinition of \u2018enum a\u2019\n    2 | enum a { B };\n      |      ^\nfoo.c:2:6: error: redeclaration of \u2018enum a\u2019\nfoo.c:1:6: note: originally defined here\n    1 | enum a { A };\n      |      ^\n\nThis is because we weren't clearing C_TYPE_BEING_DEFINED once the\ndefinition was over.\n\nI think it's OK to clear C_TYPE_BEING_DEFINED even for a definition\nthat actually is nested (and so whose outer definition is still open),\nsince we'll already have given an error by then.  It means that second\nand subsequent attempts to define a nested enum will usually get the\nredeclaration error instead of the nested error, but that seems just\nas accurate (nested_first and nested_second in the test).  The only\nexception is if the first nested enum was also invalid by being empty,\nbut then the enum as a whole has already produced two errors\n(nested_empty in the test).\n\n2019-08-08  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/c/\n\t* c-decl.c (finish_enum): Clear C_TYPE_BEING_DEFINED.\n\ngcc/testsuite/\n\t* gcc.dg/pr79983.c (enum E): Don't allow an error about nested\n\tdefinitions.\n\t* gcc.dg/enum-redef-1.c: New test.\n\nFrom-SVN: r274213", "tree": {"sha": "b3462dfa470a06fd5cbee06fef2de8bf53ace907", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3462dfa470a06fd5cbee06fef2de8bf53ace907"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99769e7fb6ed153a53174b7f08415eee347655f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99769e7fb6ed153a53174b7f08415eee347655f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99769e7fb6ed153a53174b7f08415eee347655f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99769e7fb6ed153a53174b7f08415eee347655f0/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "60bb944817d35ec0f01e5b78a5f248dabad8b7ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60bb944817d35ec0f01e5b78a5f248dabad8b7ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60bb944817d35ec0f01e5b78a5f248dabad8b7ca"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "533aebc40c3d677bfac2ae2dc06eef183677cc38", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99769e7fb6ed153a53174b7f08415eee347655f0/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99769e7fb6ed153a53174b7f08415eee347655f0/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=99769e7fb6ed153a53174b7f08415eee347655f0", "patch": "@@ -1,3 +1,7 @@\n+2019-08-08  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* c-decl.c (finish_enum): Clear C_TYPE_BEING_DEFINED.\n+\n 2019-08-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-typeck.c (c_finish_omp_clauses): For C_ORT_OMP"}, {"sha": "9859cc7b22f7822d942a649e6b0f67f78c446c58", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99769e7fb6ed153a53174b7f08415eee347655f0/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99769e7fb6ed153a53174b7f08415eee347655f0/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=99769e7fb6ed153a53174b7f08415eee347655f0", "patch": "@@ -8781,6 +8781,8 @@ finish_enum (tree enumtype, tree values, tree attributes)\n       && !in_sizeof && !in_typeof && !in_alignof)\n     struct_parse_info->struct_types.safe_push (enumtype);\n \n+  C_TYPE_BEING_DEFINED (enumtype) = 0;\n+\n   return enumtype;\n }\n "}, {"sha": "a9f6c54aa849d90c3e45dc6e9439f760bd24c265", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99769e7fb6ed153a53174b7f08415eee347655f0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99769e7fb6ed153a53174b7f08415eee347655f0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=99769e7fb6ed153a53174b7f08415eee347655f0", "patch": "@@ -1,3 +1,9 @@\n+2019-08-08  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.dg/pr79983.c (enum E): Don't allow an error about nested\n+\tdefinitions.\n+\t* gcc.dg/enum-redef-1.c: New test.\n+\n 2019-08-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/87519 - bogus warning with -Wsign-conversion."}, {"sha": "b3fa6cbf8f112052ce2d86943fc4450e1bf52d60", "filename": "gcc/testsuite/gcc.dg/enum-redef-1.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99769e7fb6ed153a53174b7f08415eee347655f0/gcc%2Ftestsuite%2Fgcc.dg%2Fenum-redef-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99769e7fb6ed153a53174b7f08415eee347655f0/gcc%2Ftestsuite%2Fgcc.dg%2Fenum-redef-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fenum-redef-1.c?ref=99769e7fb6ed153a53174b7f08415eee347655f0", "patch": "@@ -0,0 +1,29 @@\n+enum a { A };\n+enum a { B }; /* { dg-bogus \"nested redefinition\" } */\n+/* { dg-error \"redeclaration of 'enum a'\" \"\" { target *-*-* } .-1 } */\n+\n+enum empty {}; /* { dg-error \"empty enum is invalid\" } */\n+enum empty {}; /* { dg-bogus \"nested redefinition\" } */\n+/* { dg-error \"empty enum is invalid\" \"\" { target *-*-* } .-1 } */\n+\n+enum nested_first {\n+  C1 = sizeof(enum nested_first { C1a }), /* { dg-error \"nested redefinition of 'enum nested_first\" } */\n+  C2 = sizeof(enum nested_first { C2a }) /* { dg-error \"redeclaration of 'enum nested_first'\" \"\" } */\n+};\n+\n+enum nested_second {\n+  D1,\n+  D2 = sizeof(enum nested_second { D2a }), /* { dg-error \"nested redefinition of 'enum nested_second\" } */\n+  D3 = sizeof(enum nested_second { D3a }) /* { dg-error \"redeclaration of 'enum nested_second'\" \"\" } */\n+};\n+\n+enum nested_repeat { E };\n+enum nested_repeat { /* { dg-error \"redeclaration of 'enum nested_repeat'\" \"\" } */\n+  F = sizeof(enum nested_repeat { Fa }) /* { dg-error \"nested redefinition of 'enum nested_repeat\" } */\n+};\n+\n+enum nested_empty {\n+  G1 = sizeof(enum nested_empty {}), /* { dg-error \"nested redefinition of 'enum nested_empty\" } */\n+  /* { dg-error \"empty enum is invalid\" \"\" { target *-*-* } .-1 } */\n+  G2 = sizeof(enum nested_empty { G2a })\n+};"}, {"sha": "1e292d4210810d00c1c12786b2ca50f43b19bf70", "filename": "gcc/testsuite/gcc.dg/pr79983.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99769e7fb6ed153a53174b7f08415eee347655f0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr79983.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99769e7fb6ed153a53174b7f08415eee347655f0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr79983.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr79983.c?ref=99769e7fb6ed153a53174b7f08415eee347655f0", "patch": "@@ -8,7 +8,7 @@ struct S { int i, j; }; /* { dg-error \"redefinition of 'struct S'\" } */\n \n enum E;\n enum E { A, B, C }; /* { dg-message \"originally defined here\" } */\n-enum E { D, F }; /* { dg-error \"nested redefinition of 'enum E'|redeclaration of 'enum E'\" } */\n+enum E { D, F }; /* { dg-error \"redeclaration of 'enum E'\" } */\n \n union U;\n union U { int i; }; /* { dg-message \"originally defined here\" } */"}]}