{"sha": "09f725f4a6c0280681d375d0e204e4a6419dab53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlmNzI1ZjRhNmMwMjgwNjgxZDM3NWQwZTIwNGU0YTY0MTlkYWI1Mw==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2015-07-15T00:01:21Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2015-07-15T00:01:21Z"}, "message": "re PR c++/66850 (Adding a forward declaration of a template containing a template template parm causes ICE on valid code)\n\nFix PR c++/66850\n\ngcc/cp/ChangeLog:\n\n\tPR c++/66850\n\t* pt.c (redeclare_class_template): Set the DECL_CONTEXTs of each\n\ttemplate template parm in the redeclaration.\n\t(lookup_template_class_1): Peel off irrelevant template levels\n\tfrom current_template_parms before augmenting the argument\n\tlist.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/66850\n\t* g++.dg/template/pr66850.C: New test.\n\nFrom-SVN: r225801", "tree": {"sha": "e2551526421df58d3885fba451735651ba121582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2551526421df58d3885fba451735651ba121582"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09f725f4a6c0280681d375d0e204e4a6419dab53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09f725f4a6c0280681d375d0e204e4a6419dab53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09f725f4a6c0280681d375d0e204e4a6419dab53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09f725f4a6c0280681d375d0e204e4a6419dab53/comments", "author": null, "committer": null, "parents": [{"sha": "524d2e49f2814e87875c1a5e911688027e8a3d91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/524d2e49f2814e87875c1a5e911688027e8a3d91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/524d2e49f2814e87875c1a5e911688027e8a3d91"}], "stats": {"total": 83, "additions": 80, "deletions": 3}, "files": [{"sha": "00cbe47dfa42637e78a314116363128086cab26e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f725f4a6c0280681d375d0e204e4a6419dab53/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f725f4a6c0280681d375d0e204e4a6419dab53/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=09f725f4a6c0280681d375d0e204e4a6419dab53", "patch": "@@ -1,3 +1,12 @@\n+2015-07-14  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/66850\n+\t* pt.c (redeclare_class_template): Set the DECL_CONTEXTs of each\n+\ttemplate template parm in the redeclaration.\n+\t(lookup_template_class_1): Peel off irrelevant template levels\n+\tfrom current_template_parms before augmenting the argument\n+\tlist.\n+\n 2015-07-14  Andrea Azzarone  <azzaronea@gmail.com>\n \n \tPR c++/65071"}, {"sha": "95ec376430a41a6320ac97d0d78f4634a3b6e4a4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f725f4a6c0280681d375d0e204e4a6419dab53/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f725f4a6c0280681d375d0e204e4a6419dab53/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=09f725f4a6c0280681d375d0e204e4a6419dab53", "patch": "@@ -5302,6 +5302,14 @@ redeclare_class_template (tree type, tree parms)\n \t/* Update the new parameters, too; they'll be used as the\n \t   parameters for any members.  */\n \tTREE_PURPOSE (TREE_VEC_ELT (parms, i)) = tmpl_default;\n+\n+      /* Give each template template parm in this redeclaration a\n+\t DECL_CONTEXT of the template for which they are a parameter.  */\n+      if (TREE_CODE (parm) == TEMPLATE_DECL)\n+\t{\n+\t  gcc_assert (DECL_CONTEXT (parm) == NULL_TREE);\n+\t  DECL_CONTEXT (parm) = tmpl;\n+\t}\n     }\n \n     return true;\n@@ -7754,9 +7762,20 @@ lookup_template_class_1 (tree d1, tree arglist, tree in_decl, tree context,\n       if (outer)\n \touter = TI_ARGS (get_template_info (DECL_TEMPLATE_RESULT (outer)));\n       else if (current_template_parms)\n-\t/* This is an argument of the current template, so we haven't set\n-\t   DECL_CONTEXT yet.  */\n-\touter = current_template_args ();\n+\t{\n+\t  /* This is an argument of the current template, so we haven't set\n+\t     DECL_CONTEXT yet.  */\n+\t  tree relevant_template_parms;\n+\n+\t  /* Parameter levels that are greater than the level of the given\n+\t     template template parm are irrelevant.  */\n+\t  relevant_template_parms = current_template_parms;\n+\t  while (TMPL_PARMS_DEPTH (relevant_template_parms)\n+\t\t != TEMPLATE_TYPE_LEVEL (TREE_TYPE (templ)))\n+\t    relevant_template_parms = TREE_CHAIN (relevant_template_parms);\n+\n+\t  outer = template_parms_to_args (relevant_template_parms);\n+\t}\n \n       if (outer)\n \targlist = add_to_template_args (outer, arglist);"}, {"sha": "b5a27072e8e5c0b398cd82c8219aceba2d59ba82", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f725f4a6c0280681d375d0e204e4a6419dab53/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f725f4a6c0280681d375d0e204e4a6419dab53/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09f725f4a6c0280681d375d0e204e4a6419dab53", "patch": "@@ -1,3 +1,8 @@\n+2015-07-14  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/66850\n+\t* g++.dg/template/pr66850.C: New test.\n+\n 2015-07-14  Sandra Loosemore  <sandra@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n \t    Chung-Lin Tang  <cltang@codesourcery.com>"}, {"sha": "31c129086a0c183e8ba50208416b142dc91f4a65", "filename": "gcc/testsuite/g++.dg/template/pr66850.C", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f725f4a6c0280681d375d0e204e4a6419dab53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr66850.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f725f4a6c0280681d375d0e204e4a6419dab53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr66850.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr66850.C?ref=09f725f4a6c0280681d375d0e204e4a6419dab53", "patch": "@@ -0,0 +1,44 @@\n+// PR c++/66850\n+// Each namespace contains an otherwise standalone test case, none of which\n+// should cause an ICE.\n+\n+namespace X {\n+  template <template <typename U, U> class> struct Sort;\n+\n+  template <template <typename U, U> class Comparator>\n+  struct Sort\n+  {\n+    template <int I>\n+    struct less_than\n+    {\n+      Comparator<int, I> a;\n+    };\n+  };\n+}\n+\n+namespace Y {\n+  template <typename C, C> struct integral_constant {};\n+\n+  template <typename T, template <typename U, U> class> struct Sort;\n+\n+  template <template <typename U, U> class Comparator>\n+  struct Sort<int, Comparator>\n+  {\n+      template <int I> struct less_than:\n+          integral_constant<bool, Comparator<int, I>::value> {};\n+  };\n+}\n+\n+namespace Z {\n+  template <typename T, template <typename U, U> class> struct Sort;\n+\n+  template <template <typename U, U> class Comparator>\n+  struct Sort<int, Comparator>\n+  {\n+    template <int I>\n+    struct less_than\n+    {\n+      Comparator<int, I> a;\n+    };\n+  };\n+}"}]}