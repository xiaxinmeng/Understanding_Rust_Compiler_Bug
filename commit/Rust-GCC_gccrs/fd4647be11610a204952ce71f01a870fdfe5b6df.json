{"sha": "fd4647be11610a204952ce71f01a870fdfe5b6df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ0NjQ3YmUxMTYxMGEyMDQ5NTJjZTcxZjAxYTg3MGZkZmU1YjZkZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-17T08:45:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-17T08:45:39Z"}, "message": "[multiple changes]\n\n2014-10-17  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch3.adb (Propagate_Default_Init_Cond_Attributes): A derived type\n\tinherits the attributes related to pragma Default_Initial_Condition\n\tfrom its parent type.\n\n2014-10-17  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-strsea.adb (Index - versions with a From parameter):\n\tAccording to AI05-056, the Index functions with a From parameter\n\treturn 0 if the source is an empty string.\n\n2014-10-17  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Analyze_Refined_Depends_In_Decl_Part): Disable\n\tthe consistency checks in ASIS mode.\n\n2014-10-17  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-expmod.ads: Minor typo fix.\n\nFrom-SVN: r216372", "tree": {"sha": "2c3b5634af0ef31610270b79b847ac11dab83425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c3b5634af0ef31610270b79b847ac11dab83425"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd4647be11610a204952ce71f01a870fdfe5b6df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd4647be11610a204952ce71f01a870fdfe5b6df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd4647be11610a204952ce71f01a870fdfe5b6df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd4647be11610a204952ce71f01a870fdfe5b6df/comments", "author": null, "committer": null, "parents": [{"sha": "a92230c56ce41b83e1ec67bdaadec26b0eb41de9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92230c56ce41b83e1ec67bdaadec26b0eb41de9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a92230c56ce41b83e1ec67bdaadec26b0eb41de9"}], "stats": {"total": 70, "additions": 60, "deletions": 10}, "files": [{"sha": "549f7fbff133f7f0d12f20864e9d4be4d20b4e19", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4647be11610a204952ce71f01a870fdfe5b6df/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4647be11610a204952ce71f01a870fdfe5b6df/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fd4647be11610a204952ce71f01a870fdfe5b6df", "patch": "@@ -1,3 +1,24 @@\n+2014-10-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch3.adb (Propagate_Default_Init_Cond_Attributes): A derived type\n+\tinherits the attributes related to pragma Default_Initial_Condition\n+\tfrom its parent type.\n+\n+2014-10-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-strsea.adb (Index - versions with a From parameter):\n+\tAccording to AI05-056, the Index functions with a From parameter\n+\treturn 0 if the source is an empty string.\n+\n+2014-10-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Refined_Depends_In_Decl_Part): Disable\n+\tthe consistency checks in ASIS mode.\n+\n+2014-10-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-expmod.ads: Minor typo fix.\n+\n 2014-10-17  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_util.adb: Minor reformatting."}, {"sha": "d45c7955a474e3fbbd7c752705e95a40f6f4f44a", "filename": "gcc/ada/a-strsea.adb", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4647be11610a204952ce71f01a870fdfe5b6df/gcc%2Fada%2Fa-strsea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4647be11610a204952ce71f01a870fdfe5b6df/gcc%2Fada%2Fa-strsea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsea.adb?ref=fd4647be11610a204952ce71f01a870fdfe5b6df", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -481,7 +481,13 @@ package body Ada.Strings.Search is\n       Mapping : Maps.Character_Mapping := Maps.Identity) return Natural\n    is\n    begin\n-      if Going = Forward then\n+\n+      --  AI05-056 : if source is empty result is always 0.\n+\n+      if Source'Length = 0 then\n+         return 0;\n+\n+      elsif Going = Forward then\n          if From < Source'First then\n             raise Index_Error;\n          end if;\n@@ -507,7 +513,13 @@ package body Ada.Strings.Search is\n       Mapping : Maps.Character_Mapping_Function) return Natural\n    is\n    begin\n-      if Going = Forward then\n+\n+      --  AI05-056 : if source is empty result is always 0.\n+\n+      if Source'Length = 0 then\n+         return 0;\n+\n+      elsif Going = Forward then\n          if From < Source'First then\n             raise Index_Error;\n          end if;\n@@ -533,7 +545,13 @@ package body Ada.Strings.Search is\n       Going   : Direction := Forward) return Natural\n    is\n    begin\n-      if Going = Forward then\n+\n+      --  AI05-056 : if source is empty result is always 0.\n+\n+      if Source'Length = 0 then\n+         return 0;\n+\n+      elsif Going = Forward then\n          if From < Source'First then\n             raise Index_Error;\n          end if;"}, {"sha": "df43c43f455b370fad91c0c8259d9fcbdfb8c61f", "filename": "gcc/ada/s-expmod.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4647be11610a204952ce71f01a870fdfe5b6df/gcc%2Fada%2Fs-expmod.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4647be11610a204952ce71f01a870fdfe5b6df/gcc%2Fada%2Fs-expmod.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-expmod.ads?ref=fd4647be11610a204952ce71f01a870fdfe5b6df", "patch": "@@ -33,7 +33,7 @@\n --  modulus values. Arithmetic is done in Long_Long_Unsigned, with explicit\n --  accounting for the modulus value which is passed as the second argument.\n --  Note that 1 is a binary modulus (2**0), so the compiler should not (and\n---  will not) call this function with Modulus equal to 1).\n+--  will not) call this function with Modulus equal to 1.\n \n with System.Unsigned_Types;\n "}, {"sha": "6f68580815793fd7095ae30a385a0e8ab28b8762", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4647be11610a204952ce71f01a870fdfe5b6df/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4647be11610a204952ce71f01a870fdfe5b6df/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=fd4647be11610a204952ce71f01a870fdfe5b6df", "patch": "@@ -20388,10 +20388,19 @@ package body Sem_Ch3 is\n    --  Start of processing for Propagate_Default_Init_Cond_Attributes\n \n    begin\n-      --  A full view inherits the attributes from its private view\n-\n       if Has_Default_Init_Cond (From_Typ) then\n-         Set_Has_Default_Init_Cond (To_Typ);\n+\n+         --  A derived type inherits the attributes from its parent type\n+\n+         if Parent_To_Derivation then\n+            Set_Has_Inherited_Default_Init_Cond (To_Typ);\n+\n+         --  A full view shares the attributes with its private view\n+\n+         else\n+            Set_Has_Default_Init_Cond (To_Typ);\n+         end if;\n+\n          Inherit_Procedure := True;\n \n          --  Due to the order of expansion, a derived private type is processed"}, {"sha": "cf447900f9147dad663c5afe7f42f5f6f4e83e7b", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4647be11610a204952ce71f01a870fdfe5b6df/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4647be11610a204952ce71f01a870fdfe5b6df/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=fd4647be11610a204952ce71f01a870fdfe5b6df", "patch": "@@ -21917,9 +21917,11 @@ package body Sem_Prag is\n       Analyze_Depends_In_Decl_Part (N);\n \n       --  Do not match dependencies against refinements if Refined_Depends is\n-      --  illegal to avoid emitting misleading error.\n+      --  illegal to avoid emitting misleading error. Matching is disabled in\n+      --  ASIS because clauses are not normalized as this is a tree altering\n+      --  activity similar to expansion.\n \n-      if Serious_Errors_Detected = Errors then\n+      if Serious_Errors_Detected = Errors and then not ASIS_Mode then\n \n          --  Multiple dependency clauses appear as component associations of an\n          --  aggregate. Note that the clauses are copied because the algorithm"}]}