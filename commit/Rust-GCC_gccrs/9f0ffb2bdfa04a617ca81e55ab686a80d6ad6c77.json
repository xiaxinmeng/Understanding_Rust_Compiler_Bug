{"sha": "9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYwZmZiMmJkZmEwNGE2MTdjYTgxZTU1YWI2ODZhODBkNmFkNmM3Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-02-22T10:52:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-02-22T10:52:49Z"}, "message": "re PR tree-optimization/89440 (ICE in vect_create_epilog_for_reduction, at tree-vect-loop.c:5502)\n\n2019-02-22  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/89440\n\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Remove\n\tnot necessary assert.\n\n\t* gcc.dg/vect/pr89440.c: New testcase.\n\nFrom-SVN: r269111", "tree": {"sha": "ecda77ddb54b48c673b8b661ed1240fc11eb4f00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecda77ddb54b48c673b8b661ed1240fc11eb4f00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aceb106743f81c9df9499c470134c5a3f1370361", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aceb106743f81c9df9499c470134c5a3f1370361", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aceb106743f81c9df9499c470134c5a3f1370361"}], "stats": {"total": 50, "additions": 43, "deletions": 7}, "files": [{"sha": "b2b413c7536112a7a23205e459612ce7e1663d58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77", "patch": "@@ -1,3 +1,9 @@\n+2019-02-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89440\n+\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Remove\n+\tnot necessary assert.\n+\n 2019-02-22  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR fortran/72741"}, {"sha": "1dd1d4b065e9baf5537cb57d50dd951c381bc421", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77", "patch": "@@ -1,3 +1,8 @@\n+2019-02-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89440\n+\t* gcc.dg/vect/pr89440.c: New testcase.\n+\n 2019-02-22  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* lib/target-supports.exp (check_effective_target_offload_nvptx):"}, {"sha": "668f48ef2a1a1dc264070b46d1861634c6b72804", "filename": "gcc/testsuite/gcc.dg/vect/pr89440.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr89440.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr89440.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr89440.c?ref=9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ffast-math\" } */\n+\n+#include \"tree-vect.h\"\n+\n+float __attribute__((noinline,noclone))\n+f (float x)\n+{\n+  int i;\n+  float j;\n+  float a = 0;\n+  for (i = 0; i < 4; ++i)\n+    {\n+      for (j = 0; j < 4; ++j)\n+\t{\n+\t  a += 1;\n+\t  x += a;\n+\t}\n+    }\n+  return x;\n+}\n+\n+int\n+main()\n+{\n+  check_vect ();\n+  if (f (1.0f) != 137.0f)\n+    abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump \"OUTER LOOP VECTORIZED\" \"vect\" { target vect_float } } } */"}, {"sha": "e088b6f79e8f6645ae8a524e9f844549ccfabd01", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77", "patch": "@@ -5494,13 +5494,6 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs,\n \t\t= loop_vinfo->lookup_stmt (exit_phi);\n               gphi *vect_phi;\n \n-              /* FORNOW. Currently not supporting the case that an inner-loop\n-                 reduction is not used in the outer-loop (but only outside the\n-                 outer-loop), unless it is double reduction.  */\n-              gcc_assert ((STMT_VINFO_RELEVANT_P (exit_phi_vinfo)\n-                           && !STMT_VINFO_LIVE_P (exit_phi_vinfo))\n-                          || double_reduc);\n-\n \t      if (double_reduc)\n \t\tSTMT_VINFO_VEC_STMT (exit_phi_vinfo) = inner_phi;\n \t      else"}]}