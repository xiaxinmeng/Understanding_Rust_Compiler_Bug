{"sha": "be9dd80f9334800300a80268dbb92cf3fafcfcf8", "node_id": "C_kwDOANBUbNoAKGJlOWRkODBmOTMzNDgwMDMwMGE4MDI2OGRiYjkyY2YzZmFmY2ZjZjg", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-08-31T19:55:45Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-08-31T19:55:45Z"}, "message": "Support --disable-fixincludes.\n\nAlways install limits.h and syslimits.h header files\nto include folder.\n\nWhen --disable-fixincludes is used, then no system header files\nare fixed by the tools in fixincludes. Moreover, the fixincludes\ntools are not built any longer.\n\ngcc/ChangeLog:\n\n\t* Makefile.in: Always install limits.h and syslimits.h to\n\tinclude folder.\n\t* configure.ac: Assign STMP_FIXINC blank if\n\t--disable-fixincludes is used.\n\t* configure: Regenerate.", "tree": {"sha": "463fdfe52c5988c4c1c720684b30bbe467591ff6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/463fdfe52c5988c4c1c720684b30bbe467591ff6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be9dd80f9334800300a80268dbb92cf3fafcfcf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be9dd80f9334800300a80268dbb92cf3fafcfcf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be9dd80f9334800300a80268dbb92cf3fafcfcf8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be9dd80f9334800300a80268dbb92cf3fafcfcf8/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db"}], "stats": {"total": 46, "additions": 27, "deletions": 19}, "files": [{"sha": "034f4677fe2414958bf9bb195101beda464ebe39", "filename": "gcc/Makefile.in", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9dd80f9334800300a80268dbb92cf3fafcfcf8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9dd80f9334800300a80268dbb92cf3fafcfcf8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=be9dd80f9334800300a80268dbb92cf3fafcfcf8", "patch": "@@ -3166,24 +3166,27 @@ stmp-int-hdrs: $(STMP_FIXINC) $(T_GLIMITS_H) $(T_STDINT_GCC_H) $(USER_H) fixinc_\n \tset -e; for ml in `cat fixinc_list`; do \\\n \t  sysroot_headers_suffix=`echo $${ml} | sed -e 's/;.*$$//'`; \\\n \t  multi_dir=`echo $${ml} | sed -e 's/^[^;]*;//'`; \\\n-\t  fix_dir=include-fixed$${multi_dir}; \\\n+\t  include_dir=include$${multi_dir}; \\\n \t  if $(LIMITS_H_TEST) ; then \\\n \t    cat $(srcdir)/limitx.h $(T_GLIMITS_H) $(srcdir)/limity.h > tmp-xlimits.h; \\\n \t  else \\\n \t    cat $(T_GLIMITS_H) > tmp-xlimits.h; \\\n \t  fi; \\\n-\t  $(mkinstalldirs) $${fix_dir}; \\\n-\t  chmod a+rx $${fix_dir} || true; \\\n+\t  $(mkinstalldirs) $${include_dir}; \\\n+\t  chmod a+rx $${include_dir} || true; \\\n \t  $(SHELL) $(srcdir)/../move-if-change \\\n \t    tmp-xlimits.h  tmp-limits.h; \\\n-\t  rm -f $${fix_dir}/limits.h; \\\n-\t  cp -p tmp-limits.h $${fix_dir}/limits.h; \\\n-\t  chmod a+r $${fix_dir}/limits.h; \\\n+\t  rm -f $${include_dir}/limits.h; \\\n+\t  cp -p tmp-limits.h $${include_dir}/limits.h; \\\n+\t  chmod a+r $${include_dir}/limits.h; \\\n+\t  cp $(srcdir)/gsyslimits.h $${include_dir}/syslimits.h; \\\n \tdone\n # Install the README\n-\trm -f include-fixed/README\n-\tcp $(srcdir)/../fixincludes/README-fixinc include-fixed/README\n-\tchmod a+r include-fixed/README\n+\tif [ x$(STMP_FIXINC) != x ]; then \\\n+\t  rm -f include-fixed/README; \\\n+\t  cp $(srcdir)/../fixincludes/README-fixinc include-fixed/README; \\\n+\t  chmod a+r include-fixed/README; \\\n+\tfi;\n \t$(STAMP) $@\n \n .PHONY: install-gcc-tooldir\n@@ -3268,13 +3271,6 @@ stmp-fixinc: gsyslimits.h macro_list fixinc_list \\\n \t      cd $(build_objdir)/fixincludes && \\\n \t      $(SHELL) ./fixinc.sh \"$${gcc_dir}/$${fix_dir}\" \\\n \t        $(BUILD_SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS) ); \\\n-\t    rm -f $${fix_dir}/syslimits.h; \\\n-\t    if [ -f $${fix_dir}/limits.h ]; then \\\n-\t      mv $${fix_dir}/limits.h $${fix_dir}/syslimits.h; \\\n-\t    else \\\n-\t      cp $(srcdir)/gsyslimits.h $${fix_dir}/syslimits.h; \\\n-\t    fi; \\\n-\t    chmod a+r $${fix_dir}/syslimits.h; \\\n \t  done; \\\n \tfi\n \t$(STAMP) stmp-fixinc\n@@ -3992,7 +3988,7 @@ install-mkheaders: stmp-int-hdrs install-itoolsdirs \\\n \tset -e; for ml in `cat fixinc_list`; do \\\n \t  multi_dir=`echo $${ml} | sed -e 's/^[^;]*;//'`; \\\n \t  $(mkinstalldirs) $(DESTDIR)$(itoolsdatadir)/include$${multi_dir}; \\\n-\t  $(INSTALL_DATA) include-fixed$${multi_dir}/limits.h $(DESTDIR)$(itoolsdatadir)/include$${multi_dir}/limits.h; \\\n+\t  $(INSTALL_DATA) include$${multi_dir}/limits.h $(DESTDIR)$(itoolsdatadir)/include$${multi_dir}/limits.h; \\\n \tdone\n \t$(INSTALL_SCRIPT) $(srcdir)/../mkinstalldirs \\\n \t\t$(DESTDIR)$(itoolsdir)/mkinstalldirs ; \\"}, {"sha": "5c0367c0e04b643b7bef0e053f101fcf450947f9", "filename": "gcc/configure", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9dd80f9334800300a80268dbb92cf3fafcfcf8/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9dd80f9334800300a80268dbb92cf3fafcfcf8/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=be9dd80f9334800300a80268dbb92cf3fafcfcf8", "patch": "@@ -13577,6 +13577,12 @@ then\n     BUILD_LDFLAGS='$(LDFLAGS_FOR_BUILD)'\n fi\n \n+\n+if test x$enable_fixincludes = xno;\n+then\n+    STMP_FIXINC=''\n+fi\n+\n # Expand extra_headers to include complete path.\n # This substitutes for lots of t-* files.\n extra_headers_list=\n@@ -19703,7 +19709,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19706 \"configure\"\n+#line 19712 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19809,7 +19815,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19812 \"configure\"\n+#line 19818 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "31ec7d9d38bc981c7c1bd443fcbf0f7c0fa5b926", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9dd80f9334800300a80268dbb92cf3fafcfcf8/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9dd80f9334800300a80268dbb92cf3fafcfcf8/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=be9dd80f9334800300a80268dbb92cf3fafcfcf8", "patch": "@@ -2510,6 +2510,12 @@ then\n     BUILD_LDFLAGS='$(LDFLAGS_FOR_BUILD)'\n fi\n \n+\n+if test x$enable_fixincludes = xno;\n+then\n+    STMP_FIXINC=''\n+fi\n+\n # Expand extra_headers to include complete path.\n # This substitutes for lots of t-* files.\n extra_headers_list="}]}