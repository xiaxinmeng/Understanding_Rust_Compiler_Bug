{"sha": "6077db911457c2a58f7d3903db48807ab0a2c14b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA3N2RiOTExNDU3YzJhNThmN2QzOTAzZGI0ODgwN2FiMGEyYzE0Yg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-08-26T14:37:10Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-08-26T14:37:10Z"}, "message": "Proxy.java (ProxyData): `pack' now a String.\n\n\t* java/lang/reflect/Proxy.java (ProxyData): `pack' now a String.\n\t(ProxyData.getPackage): New method.\n\t(ProxyData.getProxyData): Use package name, not Package.\n\t(ClassFactory.ClassFactory): Updated.\n\nFrom-SVN: r70809", "tree": {"sha": "d46b3638a64cf4c451fd215b67a67252e8b60d25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d46b3638a64cf4c451fd215b67a67252e8b60d25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6077db911457c2a58f7d3903db48807ab0a2c14b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6077db911457c2a58f7d3903db48807ab0a2c14b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6077db911457c2a58f7d3903db48807ab0a2c14b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6077db911457c2a58f7d3903db48807ab0a2c14b/comments", "author": null, "committer": null, "parents": [{"sha": "e32329336b0430340ddfec171b2258ff1e65ffb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e32329336b0430340ddfec171b2258ff1e65ffb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e32329336b0430340ddfec171b2258ff1e65ffb1"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "c1f401d9290054a09a8255ed0fcb1a62c76bc7db", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6077db911457c2a58f7d3903db48807ab0a2c14b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6077db911457c2a58f7d3903db48807ab0a2c14b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6077db911457c2a58f7d3903db48807ab0a2c14b", "patch": "@@ -1,3 +1,10 @@\n+2003-08-26  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/reflect/Proxy.java (ProxyData): `pack' now a String.\n+\t(ProxyData.getPackage): New method.\n+\t(ProxyData.getProxyData): Use package name, not Package.\n+\t(ClassFactory.ClassFactory): Updated.\n+\n 2003-08-25  Scott Gilbertson  <scottg@mantatest.com>\n \t* Makefile.am: added gnu/awt/xlib/XOffScreenImage.java.\n \t* Makefile.in: re-generated."}, {"sha": "1b38a4838425a15c777390a1d5429a04a03f9ade", "filename": "libjava/java/lang/reflect/Proxy.java", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6077db911457c2a58f7d3903db48807ab0a2c14b/libjava%2Fjava%2Flang%2Freflect%2FProxy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6077db911457c2a58f7d3903db48807ab0a2c14b/libjava%2Fjava%2Flang%2Freflect%2FProxy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FProxy.java?ref=6077db911457c2a58f7d3903db48807ab0a2c14b", "patch": "@@ -1,5 +1,5 @@\n /* Proxy.java -- build a proxy class that implements reflected interfaces\n-   Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -733,7 +733,7 @@ public boolean equals(Object other)\n      * The package this class is in.  Possibly null, meaning the unnamed\n      * package.\n      */\n-    Package pack;\n+    String pack;\n \n     /**\n      * The interfaces this class implements.  Non-null, but possibly empty.\n@@ -776,6 +776,21 @@ public boolean equals(Object other)\n     {\n     }\n \n+    /**\n+     * Return the name of a package given the name of a class.\n+     * Returns null if no package.  We use this in preference to\n+     * using Class.getPackage() to avoid problems with ClassLoaders\n+     * that don't set the package.\n+     */\n+    static String getPackage(Class k)\n+    {\n+      String name = k.getName();\n+      int idx = name.lastIndexOf('.');\n+      if (idx >= 0)\n+\treturn name.substring(0, idx);\n+      return null;\n+    }\n+\n     /**\n      * Verifies that the arguments are legal, and sets up remaining data\n      * This should only be called when a class must be generated, as\n@@ -818,16 +833,16 @@ static ProxyData getProxyData(ProxyType pt)\n           if (! Modifier.isPublic(inter.getModifiers()))\n             if (in_package)\n               {\n-                Package p = inter.getPackage();\n-                if (data.pack != inter.getPackage())\n+\t\tString p = getPackage(inter);\n+                if (! data.pack.equals(p))\n                   throw new IllegalArgumentException(\"non-public interfaces \"\n                                                      + \"from different \"\n                                                      + \"packages\");\n               }\n             else\n               {\n                 in_package = true;\n-                data.pack = inter.getPackage();\n+                data.pack = getPackage(inter);\n               }\n           for (int j = i-1; j >= 0; j--)\n             if (data.interfaces[j] == inter)\n@@ -954,7 +969,7 @@ static ProxyData getProxyData(ProxyType pt)\n       // access_flags\n       putU2(Modifier.SUPER | Modifier.FINAL | Modifier.PUBLIC);\n       // this_class\n-      qualName = ((data.pack == null ? \"\" : data.pack.getName() + '.')\n+      qualName = ((data.pack == null ? \"\" : data.pack + '.')\n                   + \"$Proxy\" + data.id);\n       putU2(classInfo(TypeSignature.getEncodingOfClass(qualName, false)));\n       // super_class"}]}