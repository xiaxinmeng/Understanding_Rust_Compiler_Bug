{"sha": "6fc2d0f36223308d21f2347c9b48bc61fed2405c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZjMmQwZjM2MjIzMzA4ZDIxZjIzNDdjOWI0OGJjNjFmZWQyNDA1Yw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-01-23T16:28:14Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-01-23T16:28:14Z"}, "message": "PR jit/64721: toplev: don't install signal-handlers when running within libgccjit\n\ngcc/ChangeLog:\n\tPR jit/64721\n\t* main.c (main): Construct toplev instances with init_signals=true.\n\t* toplev.c (general_init): Add param \"init_signals\", and use it to\n\tconditionalize the calls to signal and host_hooks.extra_signals.\n\t(toplev::toplev): Add param \"init_signals\".\n\t(toplev::main): When invoking general_init, pass m_init_signals\n\tto control whether signal-handlers are installed.\n\t* toplev.h (toplev::toplev): Add param \"init_signals\".\n\t(toplev::m_init_signals): New field.\n\ngcc/jit/ChangeLog:\n\tPR jit/64721\n\t* jit-playback.c (gcc::jit::playback::context::compile): Construct\n\ttoplev instances with init_signals=false.\n\nFrom-SVN: r220045", "tree": {"sha": "21c3c537b4d132c613ac2e0d01dacf9b6b81424a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21c3c537b4d132c613ac2e0d01dacf9b6b81424a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fc2d0f36223308d21f2347c9b48bc61fed2405c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fc2d0f36223308d21f2347c9b48bc61fed2405c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fc2d0f36223308d21f2347c9b48bc61fed2405c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fc2d0f36223308d21f2347c9b48bc61fed2405c/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca72dad54a775cbcf4be545feb1f5575e064387a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca72dad54a775cbcf4be545feb1f5575e064387a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca72dad54a775cbcf4be545feb1f5575e064387a"}], "stats": {"total": 60, "additions": 43, "deletions": 17}, "files": [{"sha": "4931136ed64b256b9fceecfed78a390a56b5c131", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc2d0f36223308d21f2347c9b48bc61fed2405c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc2d0f36223308d21f2347c9b48bc61fed2405c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fc2d0f36223308d21f2347c9b48bc61fed2405c", "patch": "@@ -1,3 +1,15 @@\n+2015-01-23  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR jit/64721\n+\t* main.c (main): Construct toplev instances with init_signals=true.\n+\t* toplev.c (general_init): Add param \"init_signals\", and use it to\n+\tconditionalize the calls to signal and host_hooks.extra_signals.\n+\t(toplev::toplev): Add param \"init_signals\".\n+\t(toplev::main): When invoking general_init, pass m_init_signals\n+\tto control whether signal-handlers are installed.\n+\t* toplev.h (toplev::toplev): Add param \"init_signals\".\n+\t(toplev::m_init_signals): New field.\n+\n 2015-01-23  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR jit/64722"}, {"sha": "137245f116fef72ed4e91032f5b31b84e2e0ea26", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc2d0f36223308d21f2347c9b48bc61fed2405c/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc2d0f36223308d21f2347c9b48bc61fed2405c/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=6fc2d0f36223308d21f2347c9b48bc61fed2405c", "patch": "@@ -1,3 +1,9 @@\n+2015-01-23  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR jit/64721\n+\t* jit-playback.c (gcc::jit::playback::context::compile): Construct\n+\ttoplev instances with init_signals=false.\n+\n 2015-01-19  David Malcolm  <dmalcolm@redhat.com>\n \n \t* docs/cp/topics/results.rst: Rename to..."}, {"sha": "d2549a0d38a4118335e5fcf62bcd623fb66bab26", "filename": "gcc/jit/jit-playback.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc2d0f36223308d21f2347c9b48bc61fed2405c/gcc%2Fjit%2Fjit-playback.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc2d0f36223308d21f2347c9b48bc61fed2405c/gcc%2Fjit%2Fjit-playback.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-playback.c?ref=6fc2d0f36223308d21f2347c9b48bc61fed2405c", "patch": "@@ -1723,7 +1723,8 @@ compile ()\n   acquire_mutex ();\n \n   /* This runs the compiler.  */\n-  toplev toplev (false);\n+  toplev toplev (false, /* use_TV_TOTAL */\n+\t\t false); /* init_signals */\n   enter_scope (\"toplev::main\");\n   if (get_logger ())\n     for (unsigned i = 0; i < fake_args.length (); i++)"}, {"sha": "79baf0d46314f4e75e53879cd400704868521639", "filename": "gcc/main.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc2d0f36223308d21f2347c9b48bc61fed2405c/gcc%2Fmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc2d0f36223308d21f2347c9b48bc61fed2405c/gcc%2Fmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmain.c?ref=6fc2d0f36223308d21f2347c9b48bc61fed2405c", "patch": "@@ -33,7 +33,8 @@ int main (int argc, char **argv);\n int\n main (int argc, char **argv)\n {\n-  toplev toplev (true);\n+  toplev toplev (true, /* use_TV_TOTAL */\n+\t\t true /* init_signals */);\n \n   return toplev.main (argc, argv);\n }"}, {"sha": "50846280053191028d3d39787133cfa8d9eca75b", "filename": "gcc/toplev.c", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc2d0f36223308d21f2347c9b48bc61fed2405c/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc2d0f36223308d21f2347c9b48bc61fed2405c/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=6fc2d0f36223308d21f2347c9b48bc61fed2405c", "patch": "@@ -137,7 +137,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #include <new>\n \n-static void general_init (const char *);\n+static void general_init (const char *, bool);\n static void do_compile ();\n static void process_options (void);\n static void backend_init (void);\n@@ -1151,7 +1151,7 @@ open_auxiliary_file (const char *ext)\n    options are parsed.  Signal handlers, internationalization etc.\n    ARGV0 is main's argv[0].  */\n static void\n-general_init (const char *argv0)\n+general_init (const char *argv0, bool init_signals)\n {\n   const char *p;\n \n@@ -1190,28 +1190,31 @@ general_init (const char *argv0)\n   global_dc->option_state = &global_options;\n   global_dc->option_name = option_name;\n \n-  /* Trap fatal signals, e.g. SIGSEGV, and convert them to ICE messages.  */\n+  if (init_signals)\n+    {\n+      /* Trap fatal signals, e.g. SIGSEGV, and convert them to ICE messages.  */\n #ifdef SIGSEGV\n-  signal (SIGSEGV, crash_signal);\n+      signal (SIGSEGV, crash_signal);\n #endif\n #ifdef SIGILL\n-  signal (SIGILL, crash_signal);\n+      signal (SIGILL, crash_signal);\n #endif\n #ifdef SIGBUS\n-  signal (SIGBUS, crash_signal);\n+      signal (SIGBUS, crash_signal);\n #endif\n #ifdef SIGABRT\n-  signal (SIGABRT, crash_signal);\n+      signal (SIGABRT, crash_signal);\n #endif\n #if defined SIGIOT && (!defined SIGABRT || SIGABRT != SIGIOT)\n-  signal (SIGIOT, crash_signal);\n+      signal (SIGIOT, crash_signal);\n #endif\n #ifdef SIGFPE\n-  signal (SIGFPE, crash_signal);\n+      signal (SIGFPE, crash_signal);\n #endif\n \n-  /* Other host-specific signal setup.  */\n-  (*host_hooks.extra_signals)();\n+      /* Other host-specific signal setup.  */\n+      (*host_hooks.extra_signals)();\n+  }\n \n   /* Initialize the garbage-collector, string pools and tree type hash\n      table.  */\n@@ -2059,8 +2062,9 @@ do_compile ()\n     }\n }\n \n-toplev::toplev (bool use_TV_TOTAL)\n-  : m_use_TV_TOTAL (use_TV_TOTAL)\n+toplev::toplev (bool use_TV_TOTAL, bool init_signals)\n+  : m_use_TV_TOTAL (use_TV_TOTAL),\n+    m_init_signals (init_signals)\n {\n   if (!m_use_TV_TOTAL)\n     start_timevars ();\n@@ -2097,7 +2101,7 @@ toplev::main (int argc, char **argv)\n   expandargv (&argc, &argv);\n \n   /* Initialization of GCC's environment, and diagnostics.  */\n-  general_init (argv[0]);\n+  general_init (argv[0], m_init_signals);\n \n   /* One-off initialization of options that does not need to be\n      repeated when options are added for particular functions.  */"}, {"sha": "6b423be3c51b9fb7d862c95b4c0331450af60574", "filename": "gcc/toplev.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc2d0f36223308d21f2347c9b48bc61fed2405c/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc2d0f36223308d21f2347c9b48bc61fed2405c/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=6fc2d0f36223308d21f2347c9b48bc61fed2405c", "patch": "@@ -28,7 +28,8 @@ extern unsigned int save_decoded_options_count;\n class toplev\n {\n public:\n-  toplev (bool use_TV_TOTAL);\n+  toplev (bool use_TV_TOTAL,\n+\t  bool init_signals);\n   ~toplev ();\n \n   int main (int argc, char **argv);\n@@ -40,6 +41,7 @@ class toplev\n   void start_timevars ();\n \n   bool m_use_TV_TOTAL;\n+  bool m_init_signals;\n };\n \n extern void rest_of_decl_compilation (tree, int, int);"}]}