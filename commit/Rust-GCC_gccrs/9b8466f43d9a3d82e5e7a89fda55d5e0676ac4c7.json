{"sha": "9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI4NDY2ZjQzZDlhM2Q4MmU1ZTdhODlmZGE1NWQ1ZTA2NzZhYzRjNw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-05-17T07:19:56Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-05-17T07:19:56Z"}, "message": "config.gcc (sparc-*-sysv4*): Add sparc/sysv4-only.h.\n\n\t* config.gcc (sparc-*-sysv4*): Add sparc/sysv4-only.h.\n\t* sparc/aout.h, sparc/elf.h, sparc/freebsd.h, sparc/linux.h,\n\tsparc/linux64.h, sparc/lite.h, sparc/litecoff.h, sparc/liteelf.h,\n\tsparc/netbsd-elf.h, sparc/openbsd.h, sparc/openbsd64.h,\n\tsparc/pbd.h, sparc/rtemself.h, sparc/sol2-64.h, sparc/sol2-bi.h,\n\tsparc/sol2.h, sparc/sp64-elf.h, sparc/sp86-elf.h, sparc/sparc.h,\n\tsparc/sysv4.h,\n\t* sparc/sysv4-only.h: New.\n\nFrom-SVN: r66902", "tree": {"sha": "f99fc63c8af0a9699f048d06ce3c1989fad067a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f99fc63c8af0a9699f048d06ce3c1989fad067a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c07bd7a3c5ad78260ad8c53e0f2e003f3df0787", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c07bd7a3c5ad78260ad8c53e0f2e003f3df0787", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c07bd7a3c5ad78260ad8c53e0f2e003f3df0787"}], "stats": {"total": 252, "additions": 176, "deletions": 76}, "files": [{"sha": "d79566674c39c9380663ad38ff147e942e4c5166", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -1,3 +1,14 @@\n+2003-05-17  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* config.gcc (sparc-*-sysv4*): Add sparc/sysv4-only.h.\n+\t* sparc/aout.h, sparc/elf.h, sparc/freebsd.h, sparc/linux.h,\n+\tsparc/linux64.h, sparc/lite.h, sparc/litecoff.h, sparc/liteelf.h,\n+\tsparc/netbsd-elf.h, sparc/openbsd.h, sparc/openbsd64.h,\n+\tsparc/pbd.h, sparc/rtemself.h, sparc/sol2-64.h, sparc/sol2-bi.h,\n+\tsparc/sol2.h, sparc/sp64-elf.h, sparc/sp86-elf.h, sparc/sparc.h,\n+\tsparc/sysv4.h,\n+\t* sparc/sysv4-only.h: New.\n+\n 2003-05-17  Alan Modra  <amodra@bigpond.net.au>\n \n \t* function.c (assign_parms): Check for zero size args."}, {"sha": "b8ceb03e20baadd9b977e7ecfb4ff54becfb9b9e", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -1948,7 +1948,7 @@ sparc-*-solaris2*)\n \tfi\n \t;;\n sparc-*-sysv4*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/sysv4-only.h\"\n \ttmake_file=t-svr4\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;"}, {"sha": "b4727b624cda64b0472099f6e3ab15736ffb2e93", "filename": "gcc/config/sparc/aout.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Faout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Faout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Faout.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -23,14 +23,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define TARGET_VERSION fprintf (stderr, \" (sparc)\");\n \n-/* Names to predefine in the preprocessor for this target machine.\n-   ??? It would be nice to not include any subtarget specific values here,\n-   however there's no way to portably provide subtarget values to\n-   CPP_PREFINES.  Also, -D values in CPP_SUBTARGET_SPEC don't get turned into\n-   foo, __foo and __foo__.  */\n-\n-#define CPP_PREDEFINES \"-Dsparc -Acpu=sparc -Amachine=sparc\"\n-\n /* These compiler options take an argument.  We ignore -target for now.  */\n \n #define WORD_SWITCH_TAKES_ARG(STR)\t\t\t\t\\"}, {"sha": "04e7b632f3fad49868b8e54f14071227ef0936cc", "filename": "gcc/config/sparc/elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Felf.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -19,9 +19,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dsparc -D__elf__\"\n-\n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC \"crt0.o%s crti.o%s crtbegin.o%s\"\n "}, {"sha": "1e39a27184d78476566e7dca01c61db63c09d1c5", "filename": "gcc/config/sparc/freebsd.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ffreebsd.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -24,10 +24,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef  CPP_CPU64_DEFAULT_SPEC\n #define CPP_CPU64_DEFAULT_SPEC \"-D__sparc64__ -D__sparc_v9__ -D__arch64__\"\n \n-/* Because we include sparc/sysv4.h.  */\n-#undef  CPP_PREDEFINES\n-/* Do not define it here, we now use TARGET_OS_CPP_BUILTINS.  */\n-\n #define LINK_SPEC \"%(link_arch)\t\t\t\t\t\t\\\n   %{!mno-relax:%{!r:-relax}}\t\t\t\t\t\t\\\n   %{p:%nconsider using `-pg' instead of `-p' with gprof(1)}\t\t\t\t\\"}, {"sha": "4d33a3324546063c5d8d8f6d7840856bfc8f19f0", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -19,6 +19,18 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_define_std (\"linux\");\t\t\\\n+\tbuiltin_define (\"__gnu_linux__\");\t\\\n+\tbuiltin_define (\"__ELF__\");\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=posix\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n #define LINUX_DEFAULT_ELF\n \n /* Don't assume anything about the header files.  */\n@@ -98,9 +110,6 @@ Boston, MA 02111-1307, USA.  */\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__ELF__ -Dunix -D__sparc__ -D__gnu_linux__ -Dlinux -Asystem=unix -Asystem=posix\"\n-\n #undef CPP_SUBTARGET_SPEC\n #ifdef USE_GNULIBC_1\n #define CPP_SUBTARGET_SPEC \\"}, {"sha": "3f7f6cade824f57bcd54a2fb9cf294a0dfbf106b", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -19,6 +19,19 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_define_std (\"linux\");\t\t\\\n+\tbuiltin_define (\"_LONGLONG\");\t\t\\\n+\tbuiltin_define (\"__gnu_linux__\");\t\\\n+\tbuiltin_define (\"__ELF__\");\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=posix\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n #define LINUX_DEFAULT_ELF\n \n /* Don't assume anything about the header files.  */\n@@ -43,8 +56,7 @@ Boston, MA 02111-1307, USA.  */\n #ifdef SPARC_BI_ARCH\n \n #undef CPP_ARCH32_SPEC\n-#define CPP_ARCH32_SPEC \"%{mlong-double-128:-D__LONG_DOUBLE_128__} \\\n--D__GCC_NEW_VARARGS__ -Acpu=sparc -Amachine=sparc\"\n+#define CPP_ARCH32_SPEC \"%{mlong-double-128:-D__LONG_DOUBLE_128__}\"\n \n #endif\n \n@@ -111,9 +123,6 @@ Boston, MA 02111-1307, USA.  */\n #define LIBGCC2_LONG_DOUBLE_TYPE_SIZE 64\n #endif\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__ELF__ -Dunix -D_LONGLONG -D__sparc__ -D__gnu_linux__ -Dlinux -Asystem=unix -Asystem=posix\"\n-\n #undef CPP_SUBTARGET_SPEC\n #define CPP_SUBTARGET_SPEC \"\\\n %{fPIC:-D__PIC__ -D__pic__} \\"}, {"sha": "b314f43deb8f056e1490b5ce2be1768d620621f7", "filename": "gcc/config/sparc/lite.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Flite.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Flite.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flite.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -19,9 +19,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dsparc -Dsparclite -Acpu=sparc -Amachine=sparc\"\n-\n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (sparclite)\");\n "}, {"sha": "65f065d64ab32c5151104342fc7bbd2f31b45ed8", "filename": "gcc/config/sparc/litecoff.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Flitecoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Flitecoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flitecoff.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -21,8 +21,13 @@ Boston, MA 02111-1307, USA.  */\n \n #define BSS_SECTION_ASM_OP\t\"\\t.section\\t\\\".bss\\\"\"\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dsparc -Dsparclite -Acpu=sparc -Amachine=sparc\"\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"sparc\");\t\t\\\n+\tbuiltin_define_std (\"sparclite\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* Default to stabs in COFF.  */\n "}, {"sha": "04ad6e11c7c277311a14680acdbee5bf88fb8491", "filename": "gcc/config/sparc/liteelf.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fliteelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fliteelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fliteelf.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -19,8 +19,12 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__sparc__ -D__sparclite__ -Acpu=sparc -Amachine=sparc\"\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__sparclite__\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* Default to dwarf2 in ELF.  */\n "}, {"sha": "0f0d6fc0414f431f8723ec15e343c1c344cae2f4", "filename": "gcc/config/sparc/netbsd-elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -39,9 +39,6 @@ Boston, MA 02111-1307, USA.  */\n #undef MD_EXEC_PREFIX\n #undef MD_STARTFILE_PREFIX\n \n-/* Make sure this is undefined.  */\n-#undef CPP_PREDEFINES\n-\n /* CPP defines used by all NetBSD targets.  */\n #undef CPP_SUBTARGET_SPEC\n #define CPP_SUBTARGET_SPEC \"%(netbsd_cpp_spec)\""}, {"sha": "814ccdf8d02b6e355e8d0867c5748e1757f3db3d", "filename": "gcc/config/sparc/openbsd.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fopenbsd.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -22,8 +22,16 @@ Boston, MA 02111-1307, USA.  */\n #define OBSD_OLD_GAS\n #include <openbsd.h>\n \n-/* Run-time target specifications.  */\n-#define CPP_PREDEFINES \"-D__unix__ -D__sparc__ -D__OpenBSD__ -Asystem=unix -Asystem=OpenBSD -Acpu=sparc -Amachine=sparc\"\n+/* Target OS builtins.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__unix__\");\t\t\\\n+\tbuiltin_define (\"__OpenBSD__\");\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=OpenBSD\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* Layout of source language data types */\n "}, {"sha": "78c2fad80a886e4f6eef2652c9f648dfd1efa8b2", "filename": "gcc/config/sparc/openbsd64.h", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fopenbsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fopenbsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fopenbsd64.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -30,9 +30,22 @@ Boston, MA 02111-1307, USA.  */\n #undef SPARC_DEFAULT_CMODEL\n #define SPARC_DEFAULT_CMODEL CM_MEDMID\n \n-/* Run-time target specifications.  */\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__unix__ -D__sparc__ -D__sparc64__ -D__sparcv9__ -D__sparc_v9__ -D__arch64__ -D__ELF__ -D__OpenBSD__ -Asystem(unix) -Asystem(OpenBSD) -Acpu(sparc) -Amachine(sparc)\"\n+/* Target OS builtins.  */\n+#undef TARGET_OS_CPP_BUILTINS\t /* Defined in sp64-elf.h.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__unix__\");\t\t\\\n+\tbuiltin_define (\"__OpenBSD__\");\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=OpenBSD\");\t\\\n+\tbuiltin_define (\"__sparc64__\");\t\t\\\n+\tbuiltin_define (\"__sparcv9__\");\t\t\\\n+\tbuiltin_define (\"__sparc_v9__\");\t\\\n+\tbuiltin_define (\"__arch64__\");\t\t\\\n+\tbuiltin_define (\"__ELF__\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n #undef CPP_SUBTARGET_SPEC\n #define CPP_SUBTARGET_SPEC \"\""}, {"sha": "45675b138b55f476f7bf36d489bdd05d0cf9325e", "filename": "gcc/config/sparc/pbd.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fpbd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fpbd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fpbd.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -19,11 +19,15 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-\n-/* Names to predefine in the preprocessor for this target machine.  */\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dsparc -DUnicomPBD -Dunix -D__GCC_NEW_VARARGS__ -Asystem=unix -Acpu=sparc -Amachine=sparc\"\n+/* Target OS builtins.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_define_std (\"UnicomPBD\");\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* We want DBX format for use with gdb under COFF.  */\n "}, {"sha": "3bd957115723281a80fd60e3fd80b46162da66de", "filename": "gcc/config/sparc/rtemself.h", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Frtemself.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -19,8 +19,13 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* Specify predefined symbols in preprocessor.  */\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dsparc -D__GCC_NEW_VARARGS__ -D__rtems__ \\\n-  -D__USE_INIT_FINI__ -Asystem=rtems\"\n+/* Target OS builtins.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"sparc\");\t\t\\\n+\tbuiltin_define (\"__rtems__\");\t\t\\\n+\tbuiltin_define (\"__USE_INIT_FINI__\");\t\\\n+\tbuiltin_assert (\"system=rtems\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)"}, {"sha": "18e17428a024295ababee4e1ef51b22d7d8d0d01", "filename": "gcc/config/sparc/sol2-64.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsol2-64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsol2-64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2-64.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -5,3 +5,11 @@\n #define TARGET_DEFAULT \\\n   (MASK_V9 + MASK_PTR64 + MASK_64BIT /* + MASK_HARD_QUAD */ + \\\n    MASK_STACK_BIAS + MASK_FPU + MASK_LONG_DOUBLE_128)\n+\n+/* Target OS builtins.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"sparc\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)"}, {"sha": "8c0d4725eb38c4ca43793176c97504c99af59528", "filename": "gcc/config/sparc/sol2-bi.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsol2-bi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsol2-bi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2-bi.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -98,11 +98,9 @@\n #define WINT_TYPE_SIZE 32\n \n #undef CPP_ARCH32_SPEC\n-#define CPP_ARCH32_SPEC \"\\\n--D__GCC_NEW_VARARGS__ -Acpu=sparc -Amachine=sparc\"\n+#define CPP_ARCH32_SPEC \"\"\n #undef CPP_ARCH64_SPEC\n-#define CPP_ARCH64_SPEC \"\\\n--D__arch64__ -Acpu=sparc64 -Amachine=sparcv9 -D__sparcv9\"\n+#define CPP_ARCH64_SPEC \"-D__arch64__ -D__sparcv9\"\n \n #undef CPP_ARCH_SPEC\n #define CPP_ARCH_SPEC \"\\"}, {"sha": "b02635602a5406a5f9ccb2ba2e248302395adae4", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -23,9 +23,6 @@ Boston, MA 02111-1307, USA.  */\n \n /* Supposedly the same as vanilla sparc svr4, except for the stuff below: */\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dsparc\"\n-\n /* This is here rather than in sparc.h because it's not known what\n    other assemblers will accept.  */\n "}, {"sha": "652e7339535d475c4c080d18bafa7863e5d89783", "filename": "gcc/config/sparc/sp64-elf.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -38,8 +38,14 @@ Boston, MA 02111-1307, USA.  */\n #undef SPARC_DEFAULT_CMODEL\n #define SPARC_DEFAULT_CMODEL CM_EMBMEDANY\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dsparc -D__ELF__ -Acpu=sparc -Amachine=sparc\"\n+/* Target OS builtins.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"sparc\");\t\t\\\n+\tbuiltin_define (\"__ELF__\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* __svr4__ is used by the C library (FIXME) */\n #undef CPP_SUBTARGET_SPEC"}, {"sha": "86aa4db2a316306b09869d4f43594341ee168dd6", "filename": "gcc/config/sparc/sp86x-elf.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsp86x-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsp86x-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp86x-elf.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -19,8 +19,13 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__sparc__ -D__sparclite86x__ -Acpu=sparc -Amachine=sparc\"\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__sparclite86x__\");\t\\\n+\tbuiltin_define (\"__ELF__\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* Default to dwarf2 in ELF.  */\n "}, {"sha": "05311488e9d8010ab5552668a60cca09b334c351", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -25,6 +25,24 @@ Boston, MA 02111-1307, USA.  */\n /* Note that some other tm.h files include this one and then override\n    whatever definitions are necessary.  */\n \n+/* Target CPU builtins.  */\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__sparc__\");\t\t\\\n+\tif (TARGET_64BIT)\t\t\t\\\n+\t  { \t\t\t\t\t\\\n+\t    builtin_assert (\"cpu=sparc\");\t\\\n+\t    builtin_assert (\"machine=sparc\");\t\\\n+\t  }\t\t\t\t\t\\\n+\telse\t\t\t\t\t\\\n+\t  { \t\t\t\t\t\\\n+\t    builtin_assert (\"cpu=sparc64\");\t\\\n+\t    builtin_assert (\"machine=sparc64\");\t\\\n+\t  }\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n /* Specify this in a cover file to provide bi-architecture (32/64) support.  */\n /* #define SPARC_BI_ARCH */\n \n@@ -239,15 +257,8 @@ extern enum cmodel sparc_cmodel;\n %{mcpu=ultrasparc3:-D__sparc_v9__} \\\n %{!mcpu*:%{!mcypress:%{!msparclite:%{!mf930:%{!mf934:%{!mv8:%{!msupersparc:%(cpp_cpu_default)}}}}}}} \\\n \"\n-\n-/* ??? The GCC_NEW_VARARGS macro is now obsolete, because gcc always uses\n-   the right varags.h file when bootstrapping.  */\n-/* ??? It's not clear what value we want to use for -Acpu/machine for\n-   sparc64 in 32 bit environments, so for now we only use `sparc64' in\n-   64 bit environments.  */\n-\n-#define CPP_ARCH32_SPEC \"-D__GCC_NEW_VARARGS__ -Acpu=sparc -Amachine=sparc\"\n-#define CPP_ARCH64_SPEC \"-D__arch64__ -Acpu=sparc64 -Amachine=sparc64\"\n+#define CPP_ARCH32_SPEC \"\"\n+#define CPP_ARCH64_SPEC \"-D__arch64__\"\n \n #define CPP_ARCH_DEFAULT_SPEC \\\n (DEFAULT_ARCH32_P ? CPP_ARCH32_SPEC : CPP_ARCH64_SPEC)"}, {"sha": "a283a22ad39000a831746c6d57c877f5facced46", "filename": "gcc/config/sparc/sysv4-only.h", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsysv4-only.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsysv4-only.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4-only.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -0,0 +1,35 @@\n+/* Target macros for GNU compiler for SPARC running System V.4\n+   Copyright (C) 2003\n+   Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* Provide a set of pre-definitions and pre-assertions appropriate for\n+   the SPARC running svr4.  __svr4__ is our extension.  */\n+\n+/* Target OS builtins.  */\t\t\t\\\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"sparc\");\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_define (\"__svr4__\");\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=svr4\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)"}, {"sha": "1d153c03e663e0a80357b147d688d0e852c042a9", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=9b8466f43d9a3d82e5e7a89fda55d5e0676ac4c7", "patch": "@@ -48,13 +48,6 @@ Boston, MA 02111-1307, USA.  */\n #undef SKIP_ASM_OP\n #undef SET_ASM_OP\t/* Has no equivalent.  See ASM_OUTPUT_DEF below.  */\n \n-/* Provide a set of pre-definitions and pre-assertions appropriate for\n-   the SPARC running svr4.  __svr4__ is our extension.  */\n-\n-#undef  CPP_PREDEFINES\n-#define CPP_PREDEFINES \\\n-\"-Dsparc -Dunix -D__svr4__ -Asystem=unix -Asystem=svr4\"\n-\n /* The native assembler can't compute differences between symbols in different\n    sections when generating pic code, so we must put jump tables in the\n    text section.  */"}]}