{"sha": "1b667c8276cf37815a08149a801473d3c084bc0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI2NjdjODI3NmNmMzc4MTVhMDgxNDlhODAxNDczZDNjMDg0YmMwZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-04-30T15:40:14Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-04-30T15:40:14Z"}, "message": "i386.c (ix86_builtin_type): Add FLOAT128_FTYPE_FLOAT128_FLOAT128...\n\n2008-04-30  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.c (ix86_builtin_type): Add\n\tFLOAT128_FTYPE_FLOAT128_FLOAT128, V16QI_FTYPE_V16QI_V16QI,\n\tV16QI_FTYPE_V8HI_V8HI, V8QI_FTYPE_V8QI_V8QI,\n\tV8QI_FTYPE_V4HI_V4HI, V8HI_FTYPE_V8HI_V8HI,\n\tV8HI_FTYPE_V16QI_V16QI, V8HI_FTYPE_V4SI_V4SI,\n\tV4SI_FTYPE_V4SI_V4SI, V4SI_FTYPE_V8HI_V8HI,\n\tV4SI_FTYPE_V4SF_V4SF, V4SI_FTYPE_V2DF_V2DF,\n\tV4HI_FTYPE_V4HI_V4HI, V4HI_FTYPE_V8QI_V8QI,\n\tV4HI_FTYPE_V2SI_V2SI, V4SF_FTYPE_V4SF_V4SF,\n\tV4SF_FTYPE_V4SF_V4SF_SWAP, V4SF_FTYPE_V4SF_V2SI,\n\tV4SF_FTYPE_V4SF_V2DF, V4SF_FTYPE_V4SF_DI,\n\tV4SF_FTYPE_V4SF_SI, V2DI_FTYPE_V2DI_V2DI,\n\tV2DI_FTYPE_V16QI_V16QI, V2DI_FTYPE_V4SI_V4SI,\n\tV2DI_FTYPE_V2DF_V2DF, V2SI_FTYPE_V2SI_V2SI,\n\tV2SI_FTYPE_V4HI_V4HI, V2SI_FTYPE_V2SF_V2SF,\n\tV2DF_FTYPE_V2DF_V2DF, V2DF_FTYPE_V2DF_V2DF_SWAP,\n\tV2DF_FTYPE_V2DF_V4SF, V2DF_FTYPE_V2DF_DI,\n\tV2DF_FTYPE_V2DF_SI, V2SF_FTYPE_V2SF_V2SF,\n\tV1DI_FTYPE_V1DI_V1DI, V1DI_FTYPE_V8QI_V8QI and\n\tV1DI_FTYPE_V2SI_V2SI.\n\t(bdesc_2arg): Moved to ...\n\t(bdesc_args): Here.\n\t(ix86_init_mmx_sse_builtins): Updated.\n\t(ix86_expand_args_builtin): Updated.  Take a pointer\n\tto const struct builtin_description.  Handle comparison\n\tbuiltin functions.\n\t(ix86_expand_sse_compare): Take a new argument for swapping\n\toperands.\n\t(ix86_expand_builtin): Updated.\n\n\t* config/i386/sse.md (ssse3_pmaddubswv8hi3): Renamed to ...\n\t(ssse3_pmaddubsw128): This.\n\t(ssse3_pmaddubswv4hi3): Renamed to ...\n\t(ssse3_pmaddubsw): This.\n\n\t* doc/extend.texi (__builtin_ia32_packsswb128): Correct\n\tprototype.\n\t(__builtin_ia32_packssdw128): Likewise.\n\t)__builtin_ia32_packuswb128): Likewise.\n\t(__builtin_ia32_pmaddubsw): Likewise.\n\t(__builtin_ia32_pmaddubsw128): Likewise.\n\nFrom-SVN: r134827", "tree": {"sha": "20747266ef4a0c6fb0459f1cd98625c2421b792a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20747266ef4a0c6fb0459f1cd98625c2421b792a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b667c8276cf37815a08149a801473d3c084bc0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b667c8276cf37815a08149a801473d3c084bc0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b667c8276cf37815a08149a801473d3c084bc0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b667c8276cf37815a08149a801473d3c084bc0e/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7b339dd2a56fdc490df97f54cc031862bc35470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b339dd2a56fdc490df97f54cc031862bc35470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7b339dd2a56fdc490df97f54cc031862bc35470"}], "stats": {"total": 1363, "additions": 727, "deletions": 636}, "files": [{"sha": "c01db472824411a8db9499c781b6053ceed49429", "filename": "gcc/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b667c8276cf37815a08149a801473d3c084bc0e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b667c8276cf37815a08149a801473d3c084bc0e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b667c8276cf37815a08149a801473d3c084bc0e", "patch": "@@ -1,3 +1,47 @@\n+2008-04-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.c (ix86_builtin_type): Add\n+\tFLOAT128_FTYPE_FLOAT128_FLOAT128, V16QI_FTYPE_V16QI_V16QI,\n+\tV16QI_FTYPE_V8HI_V8HI, V8QI_FTYPE_V8QI_V8QI,\n+\tV8QI_FTYPE_V4HI_V4HI, V8HI_FTYPE_V8HI_V8HI,\n+\tV8HI_FTYPE_V16QI_V16QI, V8HI_FTYPE_V4SI_V4SI,\n+\tV4SI_FTYPE_V4SI_V4SI, V4SI_FTYPE_V8HI_V8HI,\n+\tV4SI_FTYPE_V4SF_V4SF, V4SI_FTYPE_V2DF_V2DF,\n+\tV4HI_FTYPE_V4HI_V4HI, V4HI_FTYPE_V8QI_V8QI,\n+\tV4HI_FTYPE_V2SI_V2SI, V4SF_FTYPE_V4SF_V4SF,\n+\tV4SF_FTYPE_V4SF_V4SF_SWAP, V4SF_FTYPE_V4SF_V2SI,\n+\tV4SF_FTYPE_V4SF_V2DF, V4SF_FTYPE_V4SF_DI,\n+\tV4SF_FTYPE_V4SF_SI, V2DI_FTYPE_V2DI_V2DI,\n+\tV2DI_FTYPE_V16QI_V16QI, V2DI_FTYPE_V4SI_V4SI,\n+\tV2DI_FTYPE_V2DF_V2DF, V2SI_FTYPE_V2SI_V2SI,\n+\tV2SI_FTYPE_V4HI_V4HI, V2SI_FTYPE_V2SF_V2SF,\n+\tV2DF_FTYPE_V2DF_V2DF, V2DF_FTYPE_V2DF_V2DF_SWAP,\n+\tV2DF_FTYPE_V2DF_V4SF, V2DF_FTYPE_V2DF_DI,\n+\tV2DF_FTYPE_V2DF_SI, V2SF_FTYPE_V2SF_V2SF,\n+\tV1DI_FTYPE_V1DI_V1DI, V1DI_FTYPE_V8QI_V8QI and\n+\tV1DI_FTYPE_V2SI_V2SI.\n+\t(bdesc_2arg): Moved to ...\n+\t(bdesc_args): Here.\n+\t(ix86_init_mmx_sse_builtins): Updated.\n+\t(ix86_expand_args_builtin): Updated.  Take a pointer\n+\tto const struct builtin_description.  Handle comparison\n+\tbuiltin functions.\n+\t(ix86_expand_sse_compare): Take a new argument for swapping\n+\toperands.\n+\t(ix86_expand_builtin): Updated.\n+\n+\t* config/i386/sse.md (ssse3_pmaddubswv8hi3): Renamed to ...\n+\t(ssse3_pmaddubsw128): This.\n+\t(ssse3_pmaddubswv4hi3): Renamed to ...\n+\t(ssse3_pmaddubsw): This.\n+\n+\t* doc/extend.texi (__builtin_ia32_packsswb128): Correct\n+\tprototype.\n+\t(__builtin_ia32_packssdw128): Likewise.\n+\t)__builtin_ia32_packuswb128): Likewise.\n+\t(__builtin_ia32_pmaddubsw): Likewise.\n+\t(__builtin_ia32_pmaddubsw128): Likewise.\n+\n 2008-04-30  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/14847"}, {"sha": "cc388af371f0964f7e368aa882239f3bebfc07a0", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 676, "deletions": 629, "changes": 1305, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b667c8276cf37815a08149a801473d3c084bc0e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b667c8276cf37815a08149a801473d3c084bc0e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1b667c8276cf37815a08149a801473d3c084bc0e", "patch": "@@ -17998,6 +17998,7 @@ enum ix86_builtin_type\n {\n   FTYPE_UNKNOWN,\n   FLOAT128_FTYPE_FLOAT128,\n+  FLOAT128_FTYPE_FLOAT128_FLOAT128,\n   INT64_FTYPE_V4SF,\n   INT64_FTYPE_V2DF,\n   INT_FTYPE_V16QI,\n@@ -18031,6 +18032,42 @@ enum ix86_builtin_type\n   V2SI_FTYPE_V2DF,\n   V2SF_FTYPE_V2SF,\n   V2SF_FTYPE_V2SI,\n+  V16QI_FTYPE_V16QI_V16QI,\n+  V16QI_FTYPE_V8HI_V8HI,\n+  V8QI_FTYPE_V8QI_V8QI,\n+  V8QI_FTYPE_V4HI_V4HI,\n+  V8HI_FTYPE_V8HI_V8HI,\n+  V8HI_FTYPE_V16QI_V16QI,\n+  V8HI_FTYPE_V4SI_V4SI,\n+  V4SI_FTYPE_V4SI_V4SI,\n+  V4SI_FTYPE_V8HI_V8HI,\n+  V4SI_FTYPE_V4SF_V4SF,\n+  V4SI_FTYPE_V2DF_V2DF,\n+  V4HI_FTYPE_V4HI_V4HI,\n+  V4HI_FTYPE_V8QI_V8QI,\n+  V4HI_FTYPE_V2SI_V2SI,\n+  V4SF_FTYPE_V4SF_V4SF,\n+  V4SF_FTYPE_V4SF_V4SF_SWAP,\n+  V4SF_FTYPE_V4SF_V2SI,\n+  V4SF_FTYPE_V4SF_V2DF,\n+  V4SF_FTYPE_V4SF_DI,\n+  V4SF_FTYPE_V4SF_SI,\n+  V2DI_FTYPE_V2DI_V2DI,\n+  V2DI_FTYPE_V16QI_V16QI,\n+  V2DI_FTYPE_V4SI_V4SI,\n+  V2DI_FTYPE_V2DF_V2DF,\n+  V2SI_FTYPE_V2SI_V2SI,\n+  V2SI_FTYPE_V4HI_V4HI,\n+  V2SI_FTYPE_V2SF_V2SF,\n+  V2DF_FTYPE_V2DF_V2DF,\n+  V2DF_FTYPE_V2DF_V2DF_SWAP,\n+  V2DF_FTYPE_V2DF_V4SF,\n+  V2DF_FTYPE_V2DF_DI,\n+  V2DF_FTYPE_V2DF_SI,\n+  V2SF_FTYPE_V2SF_V2SF,\n+  V1DI_FTYPE_V1DI_V1DI,\n+  V1DI_FTYPE_V8QI_V8QI,\n+  V1DI_FTYPE_V2SI_V2SI,\n   V4SF_FTYPE_V4SF_INT,\n   V2DI_FTYPE_V2DI_INT,\n   V2DF_FTYPE_V2DF_INT,\n@@ -18048,17 +18085,80 @@ enum ix86_builtin_type\n /* Builtins with variable number of arguments.  */\n static const struct builtin_description bdesc_args[] =\n {\n+  /* MMX */\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_addv8qi3, \"__builtin_ia32_paddb\", IX86_BUILTIN_PADDB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_addv4hi3, \"__builtin_ia32_paddw\", IX86_BUILTIN_PADDW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_addv2si3, \"__builtin_ia32_paddd\", IX86_BUILTIN_PADDD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_subv8qi3, \"__builtin_ia32_psubb\", IX86_BUILTIN_PSUBB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_subv4hi3, \"__builtin_ia32_psubw\", IX86_BUILTIN_PSUBW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_subv2si3, \"__builtin_ia32_psubd\", IX86_BUILTIN_PSUBD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n+\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_ssaddv8qi3, \"__builtin_ia32_paddsb\", IX86_BUILTIN_PADDSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_ssaddv4hi3, \"__builtin_ia32_paddsw\", IX86_BUILTIN_PADDSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_sssubv8qi3, \"__builtin_ia32_psubsb\", IX86_BUILTIN_PSUBSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_sssubv4hi3, \"__builtin_ia32_psubsw\", IX86_BUILTIN_PSUBSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_usaddv8qi3, \"__builtin_ia32_paddusb\", IX86_BUILTIN_PADDUSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_usaddv4hi3, \"__builtin_ia32_paddusw\", IX86_BUILTIN_PADDUSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_ussubv8qi3, \"__builtin_ia32_psubusb\", IX86_BUILTIN_PSUBUSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_ussubv4hi3, \"__builtin_ia32_psubusw\", IX86_BUILTIN_PSUBUSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_mulv4hi3, \"__builtin_ia32_pmullw\", IX86_BUILTIN_PMULLW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_smulv4hi3_highpart, \"__builtin_ia32_pmulhw\", IX86_BUILTIN_PMULHW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_andv2si3, \"__builtin_ia32_pand\", IX86_BUILTIN_PAND, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_nandv2si3, \"__builtin_ia32_pandn\", IX86_BUILTIN_PANDN, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_iorv2si3, \"__builtin_ia32_por\", IX86_BUILTIN_POR, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_xorv2si3, \"__builtin_ia32_pxor\", IX86_BUILTIN_PXOR, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n+\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_eqv8qi3, \"__builtin_ia32_pcmpeqb\", IX86_BUILTIN_PCMPEQB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_eqv4hi3, \"__builtin_ia32_pcmpeqw\", IX86_BUILTIN_PCMPEQW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_eqv2si3, \"__builtin_ia32_pcmpeqd\", IX86_BUILTIN_PCMPEQD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_gtv8qi3, \"__builtin_ia32_pcmpgtb\", IX86_BUILTIN_PCMPGTB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_gtv4hi3, \"__builtin_ia32_pcmpgtw\", IX86_BUILTIN_PCMPGTW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_gtv2si3, \"__builtin_ia32_pcmpgtd\", IX86_BUILTIN_PCMPGTD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n+\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_punpckhbw, \"__builtin_ia32_punpckhbw\", IX86_BUILTIN_PUNPCKHBW, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_punpckhwd, \"__builtin_ia32_punpckhwd\", IX86_BUILTIN_PUNPCKHWD, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_punpckhdq, \"__builtin_ia32_punpckhdq\", IX86_BUILTIN_PUNPCKHDQ, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_punpcklbw, \"__builtin_ia32_punpcklbw\", IX86_BUILTIN_PUNPCKLBW, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_punpcklwd, \"__builtin_ia32_punpcklwd\", IX86_BUILTIN_PUNPCKLWD, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI},\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_punpckldq, \"__builtin_ia32_punpckldq\", IX86_BUILTIN_PUNPCKLDQ, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI},\n+\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_packsswb, \"__builtin_ia32_packsswb\", IX86_BUILTIN_PACKSSWB, UNKNOWN, (int) V8QI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_packssdw, \"__builtin_ia32_packssdw\", IX86_BUILTIN_PACKSSDW, UNKNOWN, (int) V4HI_FTYPE_V2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_packuswb, \"__builtin_ia32_packuswb\", IX86_BUILTIN_PACKUSWB, UNKNOWN, (int) V8QI_FTYPE_V4HI_V4HI },\n+\n+  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_pmaddwd, \"__builtin_ia32_pmaddwd\", IX86_BUILTIN_PMADDWD, UNKNOWN, (int) V2SI_FTYPE_V4HI_V4HI },\n+\n   /* 3DNow! */\n   { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_pf2id, \"__builtin_ia32_pf2id\", IX86_BUILTIN_PF2ID, UNKNOWN, (int) V2SI_FTYPE_V2SF },\n   { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_floatv2si2, \"__builtin_ia32_pi2fd\", IX86_BUILTIN_PI2FD, UNKNOWN, (int) V2SF_FTYPE_V2SI },\n   { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_rcpv2sf2, \"__builtin_ia32_pfrcp\", IX86_BUILTIN_PFRCP, UNKNOWN, (int) V2SF_FTYPE_V2SF },\n   { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_rsqrtv2sf2, \"__builtin_ia32_pfrsqrt\", IX86_BUILTIN_PFRSQRT, UNKNOWN, (int) V2SF_FTYPE_V2SF },\n \n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_uavgv8qi3, \"__builtin_ia32_pavgusb\", IX86_BUILTIN_PAVGUSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_haddv2sf3, \"__builtin_ia32_pfacc\", IX86_BUILTIN_PFACC, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_addv2sf3, \"__builtin_ia32_pfadd\", IX86_BUILTIN_PFADD, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_eqv2sf3, \"__builtin_ia32_pfcmpeq\", IX86_BUILTIN_PFCMPEQ, UNKNOWN, (int) V2SI_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_gev2sf3, \"__builtin_ia32_pfcmpge\", IX86_BUILTIN_PFCMPGE, UNKNOWN, (int) V2SI_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_gtv2sf3, \"__builtin_ia32_pfcmpgt\", IX86_BUILTIN_PFCMPGT, UNKNOWN, (int) V2SI_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_smaxv2sf3, \"__builtin_ia32_pfmax\", IX86_BUILTIN_PFMAX, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_sminv2sf3, \"__builtin_ia32_pfmin\", IX86_BUILTIN_PFMIN, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_mulv2sf3, \"__builtin_ia32_pfmul\", IX86_BUILTIN_PFMUL, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_rcpit1v2sf3, \"__builtin_ia32_pfrcpit1\", IX86_BUILTIN_PFRCPIT1, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_rcpit2v2sf3, \"__builtin_ia32_pfrcpit2\", IX86_BUILTIN_PFRCPIT2, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_rsqit1v2sf3, \"__builtin_ia32_pfrsqit1\", IX86_BUILTIN_PFRSQIT1, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_subv2sf3, \"__builtin_ia32_pfsub\", IX86_BUILTIN_PFSUB, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_subrv2sf3, \"__builtin_ia32_pfsubr\", IX86_BUILTIN_PFSUBR, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW, CODE_FOR_mmx_pmulhrwv4hi3, \"__builtin_ia32_pmulhrw\", IX86_BUILTIN_PMULHRW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+\n   /* 3DNow!A */\n   { OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_pf2iw, \"__builtin_ia32_pf2iw\", IX86_BUILTIN_PF2IW, UNKNOWN, (int) V2SI_FTYPE_V2SF },\n   { OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_pi2fw, \"__builtin_ia32_pi2fw\", IX86_BUILTIN_PI2FW, UNKNOWN, (int) V2SF_FTYPE_V2SI },\n   { OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_pswapdv2si2, \"__builtin_ia32_pswapdsi\", IX86_BUILTIN_PSWAPDSI, UNKNOWN, (int) V2SI_FTYPE_V2SI },\n   { OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_pswapdv2sf2, \"__builtin_ia32_pswapdsf\", IX86_BUILTIN_PSWAPDSF, UNKNOWN, (int) V2SF_FTYPE_V2SF },\n+  { OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_hsubv2sf3, \"__builtin_ia32_pfnacc\", IX86_BUILTIN_PFNACC, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF },\n+  { OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_addsubv2sf3, \"__builtin_ia32_pfpnacc\", IX86_BUILTIN_PFPNACC, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF },\n \n   /* SSE */\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movmskps, \"__builtin_ia32_movmskps\", IX86_BUILTIN_MOVMSKPS, UNKNOWN, (int) INT_FTYPE_V4SF },\n@@ -18076,7 +18176,69 @@ static const struct builtin_description bdesc_args[] =\n \n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_shufps, \"__builtin_ia32_shufps\", IX86_BUILTIN_SHUFPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_INT },\n \n-  /* SSE and 3DNow!A  */\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_addv4sf3, \"__builtin_ia32_addps\", IX86_BUILTIN_ADDPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_subv4sf3, \"__builtin_ia32_subps\", IX86_BUILTIN_SUBPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_mulv4sf3, \"__builtin_ia32_mulps\", IX86_BUILTIN_MULPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_divv4sf3, \"__builtin_ia32_divps\", IX86_BUILTIN_DIVPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmaddv4sf3,  \"__builtin_ia32_addss\", IX86_BUILTIN_ADDSS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmsubv4sf3,  \"__builtin_ia32_subss\", IX86_BUILTIN_SUBSS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmulv4sf3,  \"__builtin_ia32_mulss\", IX86_BUILTIN_MULSS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmdivv4sf3,  \"__builtin_ia32_divss\", IX86_BUILTIN_DIVSS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpeqps\", IX86_BUILTIN_CMPEQPS, EQ, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpltps\", IX86_BUILTIN_CMPLTPS, LT, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpleps\", IX86_BUILTIN_CMPLEPS, LE, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpgtps\", IX86_BUILTIN_CMPGTPS, LT, (int) V4SF_FTYPE_V4SF_V4SF_SWAP },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpgeps\", IX86_BUILTIN_CMPGEPS, LE, (int) V4SF_FTYPE_V4SF_V4SF_SWAP },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpunordps\", IX86_BUILTIN_CMPUNORDPS, UNORDERED, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpneqps\", IX86_BUILTIN_CMPNEQPS, NE, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpnltps\", IX86_BUILTIN_CMPNLTPS, UNGE, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpnleps\", IX86_BUILTIN_CMPNLEPS, UNGT, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpngtps\", IX86_BUILTIN_CMPNGTPS, UNGE, (int) V4SF_FTYPE_V4SF_V4SF_SWAP },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpngeps\", IX86_BUILTIN_CMPNGEPS, UNGT, (int) V4SF_FTYPE_V4SF_V4SF_SWAP},\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpordps\", IX86_BUILTIN_CMPORDPS, ORDERED, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpeqss\", IX86_BUILTIN_CMPEQSS, EQ, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpltss\", IX86_BUILTIN_CMPLTSS, LT, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpless\", IX86_BUILTIN_CMPLESS, LE, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpunordss\", IX86_BUILTIN_CMPUNORDSS, UNORDERED, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpneqss\", IX86_BUILTIN_CMPNEQSS, NE, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpnltss\", IX86_BUILTIN_CMPNLTSS, UNGE, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpnless\", IX86_BUILTIN_CMPNLESS, UNGT, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpngtss\", IX86_BUILTIN_CMPNGTSS, UNGE, (int) V4SF_FTYPE_V4SF_V4SF_SWAP },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpngess\", IX86_BUILTIN_CMPNGESS, UNGT, (int) V4SF_FTYPE_V4SF_V4SF_SWAP },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpordss\", IX86_BUILTIN_CMPORDSS, ORDERED, (int) V4SF_FTYPE_V4SF_V4SF },\n+\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sminv4sf3, \"__builtin_ia32_minps\", IX86_BUILTIN_MINPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_smaxv4sf3, \"__builtin_ia32_maxps\", IX86_BUILTIN_MAXPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmsminv4sf3, \"__builtin_ia32_minss\", IX86_BUILTIN_MINSS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmsmaxv4sf3, \"__builtin_ia32_maxss\", IX86_BUILTIN_MAXSS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_andv4sf3, \"__builtin_ia32_andps\", IX86_BUILTIN_ANDPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_nandv4sf3,  \"__builtin_ia32_andnps\", IX86_BUILTIN_ANDNPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_iorv4sf3, \"__builtin_ia32_orps\", IX86_BUILTIN_ORPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_xorv4sf3,  \"__builtin_ia32_xorps\", IX86_BUILTIN_XORPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movss,  \"__builtin_ia32_movss\", IX86_BUILTIN_MOVSS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movhlps,  \"__builtin_ia32_movhlps\", IX86_BUILTIN_MOVHLPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movlhps,  \"__builtin_ia32_movlhps\", IX86_BUILTIN_MOVLHPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_unpckhps, \"__builtin_ia32_unpckhps\", IX86_BUILTIN_UNPCKHPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_unpcklps, \"__builtin_ia32_unpcklps\", IX86_BUILTIN_UNPCKLPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_cvtpi2ps, \"__builtin_ia32_cvtpi2ps\", IX86_BUILTIN_CVTPI2PS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V2SI },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_cvtsi2ss, \"__builtin_ia32_cvtsi2ss\", IX86_BUILTIN_CVTSI2SS, UNKNOWN, (int) V4SF_FTYPE_V4SF_SI },\n+  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_64BIT, CODE_FOR_sse_cvtsi2ssq, \"__builtin_ia32_cvtsi642ss\", IX86_BUILTIN_CVTSI642SS, UNKNOWN, V4SF_FTYPE_V4SF_DI },\n+\n+  /* SSE 3DNow!A */\n+  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_uavgv8qi3, \"__builtin_ia32_pavgb\", IX86_BUILTIN_PAVGB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_uavgv4hi3, \"__builtin_ia32_pavgw\", IX86_BUILTIN_PAVGW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_umulv4hi3_highpart, \"__builtin_ia32_pmulhuw\", IX86_BUILTIN_PMULHUW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+\n+  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_umaxv8qi3, \"__builtin_ia32_pmaxub\", IX86_BUILTIN_PMAXUB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_smaxv4hi3, \"__builtin_ia32_pmaxsw\", IX86_BUILTIN_PMAXSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_uminv8qi3, \"__builtin_ia32_pminub\", IX86_BUILTIN_PMINUB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_sminv4hi3, \"__builtin_ia32_pminsw\", IX86_BUILTIN_PMINSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+\n+  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_psadbw, \"__builtin_ia32_psadbw\", IX86_BUILTIN_PSADBW, UNKNOWN, (int) V1DI_FTYPE_V8QI_V8QI },\n   { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_pmovmskb, \"__builtin_ia32_pmovmskb\", IX86_BUILTIN_PMOVMSKB, UNKNOWN, (int) INT_FTYPE_V8QI },\n \n   /* SSE2 */\n@@ -18105,10 +18267,135 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtps2pd, \"__builtin_ia32_cvtps2pd\", IX86_BUILTIN_CVTPS2PD, UNKNOWN, (int) V2DF_FTYPE_V4SF },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvttps2dq, \"__builtin_ia32_cvttps2dq\", IX86_BUILTIN_CVTTPS2DQ, UNKNOWN, (int) V4SI_FTYPE_V4SF },\n \n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_addv2df3, \"__builtin_ia32_addpd\", IX86_BUILTIN_ADDPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_subv2df3, \"__builtin_ia32_subpd\", IX86_BUILTIN_SUBPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_mulv2df3, \"__builtin_ia32_mulpd\", IX86_BUILTIN_MULPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_divv2df3, \"__builtin_ia32_divpd\", IX86_BUILTIN_DIVPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmaddv2df3,  \"__builtin_ia32_addsd\", IX86_BUILTIN_ADDSD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmsubv2df3,  \"__builtin_ia32_subsd\", IX86_BUILTIN_SUBSD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmulv2df3,  \"__builtin_ia32_mulsd\", IX86_BUILTIN_MULSD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmdivv2df3,  \"__builtin_ia32_divsd\", IX86_BUILTIN_DIVSD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpeqpd\", IX86_BUILTIN_CMPEQPD, EQ, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpltpd\", IX86_BUILTIN_CMPLTPD, LT, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmplepd\", IX86_BUILTIN_CMPLEPD, LE, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpgtpd\", IX86_BUILTIN_CMPGTPD, LT, (int) V2DF_FTYPE_V2DF_V2DF_SWAP },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpgepd\", IX86_BUILTIN_CMPGEPD, LE, (int) V2DF_FTYPE_V2DF_V2DF_SWAP},\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpunordpd\", IX86_BUILTIN_CMPUNORDPD, UNORDERED, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpneqpd\", IX86_BUILTIN_CMPNEQPD, NE, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpnltpd\", IX86_BUILTIN_CMPNLTPD, UNGE, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpnlepd\", IX86_BUILTIN_CMPNLEPD, UNGT, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpngtpd\", IX86_BUILTIN_CMPNGTPD, UNGE, (int) V2DF_FTYPE_V2DF_V2DF_SWAP },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpngepd\", IX86_BUILTIN_CMPNGEPD, UNGT, (int) V2DF_FTYPE_V2DF_V2DF_SWAP },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpordpd\", IX86_BUILTIN_CMPORDPD, ORDERED, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpeqsd\", IX86_BUILTIN_CMPEQSD, EQ, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpltsd\", IX86_BUILTIN_CMPLTSD, LT, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmplesd\", IX86_BUILTIN_CMPLESD, LE, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpunordsd\", IX86_BUILTIN_CMPUNORDSD, UNORDERED, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpneqsd\", IX86_BUILTIN_CMPNEQSD, NE, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpnltsd\", IX86_BUILTIN_CMPNLTSD, UNGE, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpnlesd\", IX86_BUILTIN_CMPNLESD, UNGT, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpordsd\", IX86_BUILTIN_CMPORDSD, ORDERED, (int) V2DF_FTYPE_V2DF_V2DF },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sminv2df3, \"__builtin_ia32_minpd\", IX86_BUILTIN_MINPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_smaxv2df3, \"__builtin_ia32_maxpd\", IX86_BUILTIN_MAXPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmsminv2df3, \"__builtin_ia32_minsd\", IX86_BUILTIN_MINSD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmsmaxv2df3, \"__builtin_ia32_maxsd\", IX86_BUILTIN_MAXSD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_andv2df3, \"__builtin_ia32_andpd\", IX86_BUILTIN_ANDPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_nandv2df3,  \"__builtin_ia32_andnpd\", IX86_BUILTIN_ANDNPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_iorv2df3, \"__builtin_ia32_orpd\", IX86_BUILTIN_ORPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_xorv2df3,  \"__builtin_ia32_xorpd\", IX86_BUILTIN_XORPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_movsd,  \"__builtin_ia32_movsd\", IX86_BUILTIN_MOVSD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_unpckhpd, \"__builtin_ia32_unpckhpd\", IX86_BUILTIN_UNPCKHPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_unpcklpd, \"__builtin_ia32_unpcklpd\", IX86_BUILTIN_UNPCKLPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_vec_pack_sfix_v2df, \"__builtin_ia32_vec_pack_sfix\", IX86_BUILTIN_VEC_PACK_SFIX, UNKNOWN, (int) V4SI_FTYPE_V2DF_V2DF },\n+\n+  /* SSE2 */\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_addv16qi3, \"__builtin_ia32_paddb128\", IX86_BUILTIN_PADDB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_addv8hi3, \"__builtin_ia32_paddw128\", IX86_BUILTIN_PADDW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_addv4si3, \"__builtin_ia32_paddd128\", IX86_BUILTIN_PADDD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_addv2di3, \"__builtin_ia32_paddq128\", IX86_BUILTIN_PADDQ128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_subv16qi3, \"__builtin_ia32_psubb128\", IX86_BUILTIN_PSUBB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_subv8hi3, \"__builtin_ia32_psubw128\", IX86_BUILTIN_PSUBW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_subv4si3, \"__builtin_ia32_psubd128\", IX86_BUILTIN_PSUBD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_subv2di3, \"__builtin_ia32_psubq128\", IX86_BUILTIN_PSUBQ128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_ssaddv16qi3, \"__builtin_ia32_paddsb128\", IX86_BUILTIN_PADDSB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_ssaddv8hi3, \"__builtin_ia32_paddsw128\", IX86_BUILTIN_PADDSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_sssubv16qi3, \"__builtin_ia32_psubsb128\", IX86_BUILTIN_PSUBSB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_sssubv8hi3, \"__builtin_ia32_psubsw128\", IX86_BUILTIN_PSUBSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_usaddv16qi3, \"__builtin_ia32_paddusb128\", IX86_BUILTIN_PADDUSB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_usaddv8hi3, \"__builtin_ia32_paddusw128\", IX86_BUILTIN_PADDUSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_ussubv16qi3, \"__builtin_ia32_psubusb128\", IX86_BUILTIN_PSUBUSB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_ussubv8hi3, \"__builtin_ia32_psubusw128\", IX86_BUILTIN_PSUBUSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_mulv8hi3, \"__builtin_ia32_pmullw128\", IX86_BUILTIN_PMULLW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_smulv8hi3_highpart, \"__builtin_ia32_pmulhw128\", IX86_BUILTIN_PMULHW128, UNKNOWN,(int) V8HI_FTYPE_V8HI_V8HI },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_andv2di3, \"__builtin_ia32_pand128\", IX86_BUILTIN_PAND128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_nandv2di3, \"__builtin_ia32_pandn128\", IX86_BUILTIN_PANDN128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_iorv2di3, \"__builtin_ia32_por128\", IX86_BUILTIN_POR128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_xorv2di3, \"__builtin_ia32_pxor128\", IX86_BUILTIN_PXOR128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_uavgv16qi3, \"__builtin_ia32_pavgb128\", IX86_BUILTIN_PAVGB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_uavgv8hi3, \"__builtin_ia32_pavgw128\", IX86_BUILTIN_PAVGW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_eqv16qi3, \"__builtin_ia32_pcmpeqb128\", IX86_BUILTIN_PCMPEQB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_eqv8hi3, \"__builtin_ia32_pcmpeqw128\", IX86_BUILTIN_PCMPEQW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_eqv4si3, \"__builtin_ia32_pcmpeqd128\", IX86_BUILTIN_PCMPEQD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI  },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_gtv16qi3, \"__builtin_ia32_pcmpgtb128\", IX86_BUILTIN_PCMPGTB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_gtv8hi3, \"__builtin_ia32_pcmpgtw128\", IX86_BUILTIN_PCMPGTW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_gtv4si3, \"__builtin_ia32_pcmpgtd128\", IX86_BUILTIN_PCMPGTD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI  },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_umaxv16qi3, \"__builtin_ia32_pmaxub128\", IX86_BUILTIN_PMAXUB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_smaxv8hi3, \"__builtin_ia32_pmaxsw128\", IX86_BUILTIN_PMAXSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_uminv16qi3, \"__builtin_ia32_pminub128\", IX86_BUILTIN_PMINUB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sminv8hi3, \"__builtin_ia32_pminsw128\", IX86_BUILTIN_PMINSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpckhbw, \"__builtin_ia32_punpckhbw128\", IX86_BUILTIN_PUNPCKHBW128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpckhwd, \"__builtin_ia32_punpckhwd128\", IX86_BUILTIN_PUNPCKHWD128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI  },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpckhdq, \"__builtin_ia32_punpckhdq128\", IX86_BUILTIN_PUNPCKHDQ128, UNKNOWN,  (int) V4SI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpckhqdq, \"__builtin_ia32_punpckhqdq128\", IX86_BUILTIN_PUNPCKHQDQ128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpcklbw, \"__builtin_ia32_punpcklbw128\", IX86_BUILTIN_PUNPCKLBW128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpcklwd, \"__builtin_ia32_punpcklwd128\", IX86_BUILTIN_PUNPCKLWD128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpckldq, \"__builtin_ia32_punpckldq128\", IX86_BUILTIN_PUNPCKLDQ128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpcklqdq, \"__builtin_ia32_punpcklqdq128\", IX86_BUILTIN_PUNPCKLQDQ128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_packsswb, \"__builtin_ia32_packsswb128\", IX86_BUILTIN_PACKSSWB128, UNKNOWN, (int) V16QI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_packssdw, \"__builtin_ia32_packssdw128\", IX86_BUILTIN_PACKSSDW128, UNKNOWN, (int) V8HI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_packuswb, \"__builtin_ia32_packuswb128\", IX86_BUILTIN_PACKUSWB128, UNKNOWN, (int) V16QI_FTYPE_V8HI_V8HI },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_umulv8hi3_highpart, \"__builtin_ia32_pmulhuw128\", IX86_BUILTIN_PMULHUW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_psadbw, \"__builtin_ia32_psadbw128\", IX86_BUILTIN_PSADBW128, UNKNOWN, (int) V2DI_FTYPE_V16QI_V16QI },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_umulv1siv1di3, \"__builtin_ia32_pmuludq\", IX86_BUILTIN_PMULUDQ, UNKNOWN, (int) V1DI_FTYPE_V2SI_V2SI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_umulv2siv2di3, \"__builtin_ia32_pmuludq128\", IX86_BUILTIN_PMULUDQ128, UNKNOWN, (int) V2DI_FTYPE_V4SI_V4SI },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_pmaddwd, \"__builtin_ia32_pmaddwd128\", IX86_BUILTIN_PMADDWD128, UNKNOWN, (int) V4SI_FTYPE_V8HI_V8HI },\n+\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtsi2sd, \"__builtin_ia32_cvtsi2sd\", IX86_BUILTIN_CVTSI2SD, UNKNOWN, (int) V2DF_FTYPE_V2DF_SI },\n+  { OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_64BIT, CODE_FOR_sse2_cvtsi2sdq, \"__builtin_ia32_cvtsi642sd\", IX86_BUILTIN_CVTSI642SD, UNKNOWN, (int) V2DF_FTYPE_V2DF_DI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtsd2ss, \"__builtin_ia32_cvtsd2ss\", IX86_BUILTIN_CVTSD2SS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtss2sd, \"__builtin_ia32_cvtss2sd\", IX86_BUILTIN_CVTSS2SD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V4SF },\n+\n+  /* SSE2 MMX */\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_mmx_addv1di3, \"__builtin_ia32_paddq\", IX86_BUILTIN_PADDQ, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_mmx_subv1di3, \"__builtin_ia32_psubq\", IX86_BUILTIN_PSUBQ, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI },\n+\n   /* SSE3 */\n   { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_movshdup, \"__builtin_ia32_movshdup\", IX86_BUILTIN_MOVSHDUP, UNKNOWN, (int) V4SF_FTYPE_V4SF},\n   { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_movsldup, \"__builtin_ia32_movsldup\", IX86_BUILTIN_MOVSLDUP, UNKNOWN, (int) V4SF_FTYPE_V4SF },\n \n+  { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_addsubv4sf3, \"__builtin_ia32_addsubps\", IX86_BUILTIN_ADDSUBPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_addsubv2df3, \"__builtin_ia32_addsubpd\", IX86_BUILTIN_ADDSUBPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_haddv4sf3, \"__builtin_ia32_haddps\", IX86_BUILTIN_HADDPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_haddv2df3, \"__builtin_ia32_haddpd\", IX86_BUILTIN_HADDPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_hsubv4sf3, \"__builtin_ia32_hsubps\", IX86_BUILTIN_HSUBPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_hsubv2df3, \"__builtin_ia32_hsubpd\", IX86_BUILTIN_HSUBPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+\n   /* SSSE3 */\n   { OPTION_MASK_ISA_SSSE3, CODE_FOR_absv16qi2, \"__builtin_ia32_pabsb128\", IX86_BUILTIN_PABSB128, UNKNOWN, (int) V16QI_FTYPE_V16QI },\n   { OPTION_MASK_ISA_SSSE3, CODE_FOR_absv8qi2, \"__builtin_ia32_pabsb\", IX86_BUILTIN_PABSB, UNKNOWN, (int) V8QI_FTYPE_V8QI },\n@@ -18117,6 +18404,31 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_SSSE3, CODE_FOR_absv4si2, \"__builtin_ia32_pabsd128\", IX86_BUILTIN_PABSD128, UNKNOWN, (int) V4SI_FTYPE_V4SI },\n   { OPTION_MASK_ISA_SSSE3, CODE_FOR_absv2si2, \"__builtin_ia32_pabsd\", IX86_BUILTIN_PABSD, UNKNOWN, (int) V2SI_FTYPE_V2SI },\n \n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phaddwv8hi3, \"__builtin_ia32_phaddw128\", IX86_BUILTIN_PHADDW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phaddwv4hi3, \"__builtin_ia32_phaddw\", IX86_BUILTIN_PHADDW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phadddv4si3, \"__builtin_ia32_phaddd128\", IX86_BUILTIN_PHADDD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phadddv2si3, \"__builtin_ia32_phaddd\", IX86_BUILTIN_PHADDD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phaddswv8hi3, \"__builtin_ia32_phaddsw128\", IX86_BUILTIN_PHADDSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phaddswv4hi3, \"__builtin_ia32_phaddsw\", IX86_BUILTIN_PHADDSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubwv8hi3, \"__builtin_ia32_phsubw128\", IX86_BUILTIN_PHSUBW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubwv4hi3, \"__builtin_ia32_phsubw\", IX86_BUILTIN_PHSUBW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubdv4si3, \"__builtin_ia32_phsubd128\", IX86_BUILTIN_PHSUBD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubdv2si3, \"__builtin_ia32_phsubd\", IX86_BUILTIN_PHSUBD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubswv8hi3, \"__builtin_ia32_phsubsw128\", IX86_BUILTIN_PHSUBSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubswv4hi3, \"__builtin_ia32_phsubsw\", IX86_BUILTIN_PHSUBSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pmaddubsw128, \"__builtin_ia32_pmaddubsw128\", IX86_BUILTIN_PMADDUBSW128, UNKNOWN, (int) V8HI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pmaddubsw, \"__builtin_ia32_pmaddubsw\", IX86_BUILTIN_PMADDUBSW, UNKNOWN, (int) V4HI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pmulhrswv8hi3, \"__builtin_ia32_pmulhrsw128\", IX86_BUILTIN_PMULHRSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pmulhrswv4hi3, \"__builtin_ia32_pmulhrsw\", IX86_BUILTIN_PMULHRSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pshufbv16qi3, \"__builtin_ia32_pshufb128\", IX86_BUILTIN_PSHUFB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pshufbv8qi3, \"__builtin_ia32_pshufb\", IX86_BUILTIN_PSHUFB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv16qi3, \"__builtin_ia32_psignb128\", IX86_BUILTIN_PSIGNB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv8qi3, \"__builtin_ia32_psignb\", IX86_BUILTIN_PSIGNB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv8hi3, \"__builtin_ia32_psignw128\", IX86_BUILTIN_PSIGNW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv4hi3, \"__builtin_ia32_psignw\", IX86_BUILTIN_PSIGNW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv4si3, \"__builtin_ia32_psignd128\", IX86_BUILTIN_PSIGND128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv2si3, \"__builtin_ia32_psignd\", IX86_BUILTIN_PSIGND, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI },\n+\n   /* SSE4.1 */\n   { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_blendpd, \"__builtin_ia32_blendpd\", IX86_BUILTIN_BLENDPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_INT },\n   { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_blendps, \"__builtin_ia32_blendps\", IX86_BUILTIN_BLENDPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_INT },\n@@ -18143,307 +18455,43 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_zero_extendv2siv2di2, \"__builtin_ia32_pmovzxdq128\", IX86_BUILTIN_PMOVZXDQ128, UNKNOWN, (int) V2DI_FTYPE_V4SI },\n   { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_phminposuw, \"__builtin_ia32_phminposuw128\", IX86_BUILTIN_PHMINPOSUW128, UNKNOWN, (int) V8HI_FTYPE_V8HI },\n \n+  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_packusdw, \"__builtin_ia32_packusdw128\", IX86_BUILTIN_PACKUSDW128, UNKNOWN, (int) V8HI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_eqv2di3, \"__builtin_ia32_pcmpeqq\", IX86_BUILTIN_PCMPEQQ, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_smaxv16qi3, \"__builtin_ia32_pmaxsb128\", IX86_BUILTIN_PMAXSB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_smaxv4si3, \"__builtin_ia32_pmaxsd128\", IX86_BUILTIN_PMAXSD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_umaxv4si3, \"__builtin_ia32_pmaxud128\", IX86_BUILTIN_PMAXUD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_umaxv8hi3, \"__builtin_ia32_pmaxuw128\", IX86_BUILTIN_PMAXUW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sminv16qi3, \"__builtin_ia32_pminsb128\", IX86_BUILTIN_PMINSB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI },\n+  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sminv4si3, \"__builtin_ia32_pminsd128\", IX86_BUILTIN_PMINSD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_uminv4si3, \"__builtin_ia32_pminud128\", IX86_BUILTIN_PMINUD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_uminv8hi3, \"__builtin_ia32_pminuw128\", IX86_BUILTIN_PMINUW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI },\n+  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_mulv2siv2di3, \"__builtin_ia32_pmuldq128\", IX86_BUILTIN_PMULDQ128, UNKNOWN, (int) V2DI_FTYPE_V4SI_V4SI },\n+  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_mulv4si3, \"__builtin_ia32_pmulld128\", IX86_BUILTIN_PMULLD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },\n+\n   /* SSE4.1 and SSE5 */\n   { OPTION_MASK_ISA_ROUND, CODE_FOR_sse4_1_roundpd, \"__builtin_ia32_roundpd\", IX86_BUILTIN_ROUNDPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_INT },\n   { OPTION_MASK_ISA_ROUND, CODE_FOR_sse4_1_roundps, \"__builtin_ia32_roundps\", IX86_BUILTIN_ROUNDPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_INT },\n   { OPTION_MASK_ISA_ROUND, CODE_FOR_sse4_1_roundsd, \"__builtin_ia32_roundsd\", IX86_BUILTIN_ROUNDSD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_INT },\n   { OPTION_MASK_ISA_ROUND, CODE_FOR_sse4_1_roundss, \"__builtin_ia32_roundss\", IX86_BUILTIN_ROUNDSS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_INT },\n \n+  /* SSE4.2 */\n+  { OPTION_MASK_ISA_SSE4_2, CODE_FOR_sse4_2_gtv2di3, \"__builtin_ia32_pcmpgtq\", IX86_BUILTIN_PCMPGTQ, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+\n   /* AES */\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_aeskeygenassist, 0, IX86_BUILTIN_AESKEYGENASSIST128, UNKNOWN, (int) V2DI_FTYPE_V2DI_INT },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_aesimc, 0, IX86_BUILTIN_AESIMC128, UNKNOWN, (int) V2DI_FTYPE_V2DI },\n \n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_aesenc, 0, IX86_BUILTIN_AESENC128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_aesenclast, 0, IX86_BUILTIN_AESENCLAST128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_aesdec, 0, IX86_BUILTIN_AESDEC128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_aesdeclast, 0, IX86_BUILTIN_AESDECLAST128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI },\n+\n   /* PCLMUL */\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_pclmulqdq, 0, IX86_BUILTIN_PCLMULQDQ128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT },\n \n    /* 64bit */\n   { OPTION_MASK_ISA_64BIT, CODE_FOR_abstf2, 0, IX86_BUILTIN_FABSQ, UNKNOWN, (int) FLOAT128_FTYPE_FLOAT128 },\n-};\n-\n-static const struct builtin_description bdesc_2arg[] =\n-{\n-  /* SSE */\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_addv4sf3, \"__builtin_ia32_addps\", IX86_BUILTIN_ADDPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_subv4sf3, \"__builtin_ia32_subps\", IX86_BUILTIN_SUBPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_mulv4sf3, \"__builtin_ia32_mulps\", IX86_BUILTIN_MULPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_divv4sf3, \"__builtin_ia32_divps\", IX86_BUILTIN_DIVPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmaddv4sf3,  \"__builtin_ia32_addss\", IX86_BUILTIN_ADDSS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmsubv4sf3,  \"__builtin_ia32_subss\", IX86_BUILTIN_SUBSS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmulv4sf3,  \"__builtin_ia32_mulss\", IX86_BUILTIN_MULSS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmdivv4sf3,  \"__builtin_ia32_divss\", IX86_BUILTIN_DIVSS, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpeqps\", IX86_BUILTIN_CMPEQPS, EQ, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpltps\", IX86_BUILTIN_CMPLTPS, LT, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpleps\", IX86_BUILTIN_CMPLEPS, LE, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpgtps\", IX86_BUILTIN_CMPGTPS, LT, BUILTIN_DESC_SWAP_OPERANDS },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpgeps\", IX86_BUILTIN_CMPGEPS, LE, BUILTIN_DESC_SWAP_OPERANDS },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpunordps\", IX86_BUILTIN_CMPUNORDPS, UNORDERED, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpneqps\", IX86_BUILTIN_CMPNEQPS, NE, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpnltps\", IX86_BUILTIN_CMPNLTPS, UNGE, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpnleps\", IX86_BUILTIN_CMPNLEPS, UNGT, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpngtps\", IX86_BUILTIN_CMPNGTPS, UNGE, BUILTIN_DESC_SWAP_OPERANDS },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpngeps\", IX86_BUILTIN_CMPNGEPS, UNGT, BUILTIN_DESC_SWAP_OPERANDS },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_maskcmpv4sf3, \"__builtin_ia32_cmpordps\", IX86_BUILTIN_CMPORDPS, ORDERED, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpeqss\", IX86_BUILTIN_CMPEQSS, EQ, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpltss\", IX86_BUILTIN_CMPLTSS, LT, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpless\", IX86_BUILTIN_CMPLESS, LE, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpunordss\", IX86_BUILTIN_CMPUNORDSS, UNORDERED, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpneqss\", IX86_BUILTIN_CMPNEQSS, NE, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpnltss\", IX86_BUILTIN_CMPNLTSS, UNGE, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpnless\", IX86_BUILTIN_CMPNLESS, UNGT, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpngtss\", IX86_BUILTIN_CMPNGTSS, UNGE, BUILTIN_DESC_SWAP_OPERANDS },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpngess\", IX86_BUILTIN_CMPNGESS, UNGT, BUILTIN_DESC_SWAP_OPERANDS },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmaskcmpv4sf3, \"__builtin_ia32_cmpordss\", IX86_BUILTIN_CMPORDSS, ORDERED, 0 },\n-\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sminv4sf3, \"__builtin_ia32_minps\", IX86_BUILTIN_MINPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_smaxv4sf3, \"__builtin_ia32_maxps\", IX86_BUILTIN_MAXPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmsminv4sf3, \"__builtin_ia32_minss\", IX86_BUILTIN_MINSS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmsmaxv4sf3, \"__builtin_ia32_maxss\", IX86_BUILTIN_MAXSS, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_andv4sf3, \"__builtin_ia32_andps\", IX86_BUILTIN_ANDPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_nandv4sf3,  \"__builtin_ia32_andnps\", IX86_BUILTIN_ANDNPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_iorv4sf3, \"__builtin_ia32_orps\", IX86_BUILTIN_ORPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_xorv4sf3,  \"__builtin_ia32_xorps\", IX86_BUILTIN_XORPS, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movss,  \"__builtin_ia32_movss\", IX86_BUILTIN_MOVSS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movhlps,  \"__builtin_ia32_movhlps\", IX86_BUILTIN_MOVHLPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movlhps,  \"__builtin_ia32_movlhps\", IX86_BUILTIN_MOVLHPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_unpckhps, \"__builtin_ia32_unpckhps\", IX86_BUILTIN_UNPCKHPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_unpcklps, \"__builtin_ia32_unpcklps\", IX86_BUILTIN_UNPCKLPS, UNKNOWN, 0 },\n-\n-  /* MMX */\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_addv8qi3, \"__builtin_ia32_paddb\", IX86_BUILTIN_PADDB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_addv4hi3, \"__builtin_ia32_paddw\", IX86_BUILTIN_PADDW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_addv2si3, \"__builtin_ia32_paddd\", IX86_BUILTIN_PADDD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_mmx_addv1di3, \"__builtin_ia32_paddq\", IX86_BUILTIN_PADDQ, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_subv8qi3, \"__builtin_ia32_psubb\", IX86_BUILTIN_PSUBB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_subv4hi3, \"__builtin_ia32_psubw\", IX86_BUILTIN_PSUBW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_subv2si3, \"__builtin_ia32_psubd\", IX86_BUILTIN_PSUBD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_mmx_subv1di3, \"__builtin_ia32_psubq\", IX86_BUILTIN_PSUBQ, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_ssaddv8qi3, \"__builtin_ia32_paddsb\", IX86_BUILTIN_PADDSB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_ssaddv4hi3, \"__builtin_ia32_paddsw\", IX86_BUILTIN_PADDSW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_sssubv8qi3, \"__builtin_ia32_psubsb\", IX86_BUILTIN_PSUBSB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_sssubv4hi3, \"__builtin_ia32_psubsw\", IX86_BUILTIN_PSUBSW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_usaddv8qi3, \"__builtin_ia32_paddusb\", IX86_BUILTIN_PADDUSB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_usaddv4hi3, \"__builtin_ia32_paddusw\", IX86_BUILTIN_PADDUSW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_ussubv8qi3, \"__builtin_ia32_psubusb\", IX86_BUILTIN_PSUBUSB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_ussubv4hi3, \"__builtin_ia32_psubusw\", IX86_BUILTIN_PSUBUSW, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_mulv4hi3, \"__builtin_ia32_pmullw\", IX86_BUILTIN_PMULLW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_smulv4hi3_highpart, \"__builtin_ia32_pmulhw\", IX86_BUILTIN_PMULHW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_umulv4hi3_highpart, \"__builtin_ia32_pmulhuw\", IX86_BUILTIN_PMULHUW, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_andv2si3, \"__builtin_ia32_pand\", IX86_BUILTIN_PAND, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_nandv2si3, \"__builtin_ia32_pandn\", IX86_BUILTIN_PANDN, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_iorv2si3, \"__builtin_ia32_por\", IX86_BUILTIN_POR, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_xorv2si3, \"__builtin_ia32_pxor\", IX86_BUILTIN_PXOR, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_uavgv8qi3, \"__builtin_ia32_pavgb\", IX86_BUILTIN_PAVGB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_uavgv4hi3, \"__builtin_ia32_pavgw\", IX86_BUILTIN_PAVGW, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_eqv8qi3, \"__builtin_ia32_pcmpeqb\", IX86_BUILTIN_PCMPEQB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_eqv4hi3, \"__builtin_ia32_pcmpeqw\", IX86_BUILTIN_PCMPEQW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_eqv2si3, \"__builtin_ia32_pcmpeqd\", IX86_BUILTIN_PCMPEQD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_gtv8qi3, \"__builtin_ia32_pcmpgtb\", IX86_BUILTIN_PCMPGTB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_gtv4hi3, \"__builtin_ia32_pcmpgtw\", IX86_BUILTIN_PCMPGTW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_gtv2si3, \"__builtin_ia32_pcmpgtd\", IX86_BUILTIN_PCMPGTD, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_umaxv8qi3, \"__builtin_ia32_pmaxub\", IX86_BUILTIN_PMAXUB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_smaxv4hi3, \"__builtin_ia32_pmaxsw\", IX86_BUILTIN_PMAXSW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_uminv8qi3, \"__builtin_ia32_pminub\", IX86_BUILTIN_PMINUB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_sminv4hi3, \"__builtin_ia32_pminsw\", IX86_BUILTIN_PMINSW, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_punpckhbw, \"__builtin_ia32_punpckhbw\", IX86_BUILTIN_PUNPCKHBW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_punpckhwd, \"__builtin_ia32_punpckhwd\", IX86_BUILTIN_PUNPCKHWD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_punpckhdq, \"__builtin_ia32_punpckhdq\", IX86_BUILTIN_PUNPCKHDQ, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_punpcklbw, \"__builtin_ia32_punpcklbw\", IX86_BUILTIN_PUNPCKLBW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_punpcklwd, \"__builtin_ia32_punpcklwd\", IX86_BUILTIN_PUNPCKLWD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_punpckldq, \"__builtin_ia32_punpckldq\", IX86_BUILTIN_PUNPCKLDQ, UNKNOWN, 0 },\n-\n-  /* Special.  */\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_packsswb, 0, IX86_BUILTIN_PACKSSWB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_packssdw, 0, IX86_BUILTIN_PACKSSDW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_packuswb, 0, IX86_BUILTIN_PACKUSWB, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_cvtpi2ps, 0, IX86_BUILTIN_CVTPI2PS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_cvtsi2ss, 0, IX86_BUILTIN_CVTSI2SS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_64BIT, CODE_FOR_sse_cvtsi2ssq, 0, IX86_BUILTIN_CVTSI642SS, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_psadbw, 0, IX86_BUILTIN_PSADBW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_mmx_pmaddwd, 0, IX86_BUILTIN_PMADDWD, UNKNOWN, 0 },\n-\n-  /* SSE2 */\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_addv2df3, \"__builtin_ia32_addpd\", IX86_BUILTIN_ADDPD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_subv2df3, \"__builtin_ia32_subpd\", IX86_BUILTIN_SUBPD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_mulv2df3, \"__builtin_ia32_mulpd\", IX86_BUILTIN_MULPD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_divv2df3, \"__builtin_ia32_divpd\", IX86_BUILTIN_DIVPD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmaddv2df3,  \"__builtin_ia32_addsd\", IX86_BUILTIN_ADDSD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmsubv2df3,  \"__builtin_ia32_subsd\", IX86_BUILTIN_SUBSD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmulv2df3,  \"__builtin_ia32_mulsd\", IX86_BUILTIN_MULSD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmdivv2df3,  \"__builtin_ia32_divsd\", IX86_BUILTIN_DIVSD, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpeqpd\", IX86_BUILTIN_CMPEQPD, EQ, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpltpd\", IX86_BUILTIN_CMPLTPD, LT, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmplepd\", IX86_BUILTIN_CMPLEPD, LE, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpgtpd\", IX86_BUILTIN_CMPGTPD, LT, BUILTIN_DESC_SWAP_OPERANDS },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpgepd\", IX86_BUILTIN_CMPGEPD, LE, BUILTIN_DESC_SWAP_OPERANDS },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpunordpd\", IX86_BUILTIN_CMPUNORDPD, UNORDERED, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpneqpd\", IX86_BUILTIN_CMPNEQPD, NE, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpnltpd\", IX86_BUILTIN_CMPNLTPD, UNGE, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpnlepd\", IX86_BUILTIN_CMPNLEPD, UNGT, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpngtpd\", IX86_BUILTIN_CMPNGTPD, UNGE, BUILTIN_DESC_SWAP_OPERANDS },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpngepd\", IX86_BUILTIN_CMPNGEPD, UNGT, BUILTIN_DESC_SWAP_OPERANDS },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_maskcmpv2df3, \"__builtin_ia32_cmpordpd\", IX86_BUILTIN_CMPORDPD, ORDERED, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpeqsd\", IX86_BUILTIN_CMPEQSD, EQ, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpltsd\", IX86_BUILTIN_CMPLTSD, LT, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmplesd\", IX86_BUILTIN_CMPLESD, LE, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpunordsd\", IX86_BUILTIN_CMPUNORDSD, UNORDERED, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpneqsd\", IX86_BUILTIN_CMPNEQSD, NE, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpnltsd\", IX86_BUILTIN_CMPNLTSD, UNGE, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpnlesd\", IX86_BUILTIN_CMPNLESD, UNGT, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmmaskcmpv2df3, \"__builtin_ia32_cmpordsd\", IX86_BUILTIN_CMPORDSD, ORDERED, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sminv2df3, \"__builtin_ia32_minpd\", IX86_BUILTIN_MINPD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_smaxv2df3, \"__builtin_ia32_maxpd\", IX86_BUILTIN_MAXPD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmsminv2df3, \"__builtin_ia32_minsd\", IX86_BUILTIN_MINSD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_vmsmaxv2df3, \"__builtin_ia32_maxsd\", IX86_BUILTIN_MAXSD, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_andv2df3, \"__builtin_ia32_andpd\", IX86_BUILTIN_ANDPD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_nandv2df3,  \"__builtin_ia32_andnpd\", IX86_BUILTIN_ANDNPD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_iorv2df3, \"__builtin_ia32_orpd\", IX86_BUILTIN_ORPD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_xorv2df3,  \"__builtin_ia32_xorpd\", IX86_BUILTIN_XORPD, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_movsd,  \"__builtin_ia32_movsd\", IX86_BUILTIN_MOVSD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_unpckhpd, \"__builtin_ia32_unpckhpd\", IX86_BUILTIN_UNPCKHPD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_unpcklpd, \"__builtin_ia32_unpcklpd\", IX86_BUILTIN_UNPCKLPD, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_vec_pack_sfix_v2df, \"__builtin_ia32_vec_pack_sfix\", IX86_BUILTIN_VEC_PACK_SFIX, UNKNOWN, 0 },\n-\n-  /* SSE2 MMX */\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_addv16qi3, \"__builtin_ia32_paddb128\", IX86_BUILTIN_PADDB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_addv8hi3, \"__builtin_ia32_paddw128\", IX86_BUILTIN_PADDW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_addv4si3, \"__builtin_ia32_paddd128\", IX86_BUILTIN_PADDD128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_addv2di3, \"__builtin_ia32_paddq128\", IX86_BUILTIN_PADDQ128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_subv16qi3, \"__builtin_ia32_psubb128\", IX86_BUILTIN_PSUBB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_subv8hi3, \"__builtin_ia32_psubw128\", IX86_BUILTIN_PSUBW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_subv4si3, \"__builtin_ia32_psubd128\", IX86_BUILTIN_PSUBD128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_subv2di3, \"__builtin_ia32_psubq128\", IX86_BUILTIN_PSUBQ128, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_sse2_ssaddv16qi3, \"__builtin_ia32_paddsb128\", IX86_BUILTIN_PADDSB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_sse2_ssaddv8hi3, \"__builtin_ia32_paddsw128\", IX86_BUILTIN_PADDSW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_sse2_sssubv16qi3, \"__builtin_ia32_psubsb128\", IX86_BUILTIN_PSUBSB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_sse2_sssubv8hi3, \"__builtin_ia32_psubsw128\", IX86_BUILTIN_PSUBSW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_sse2_usaddv16qi3, \"__builtin_ia32_paddusb128\", IX86_BUILTIN_PADDUSB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_sse2_usaddv8hi3, \"__builtin_ia32_paddusw128\", IX86_BUILTIN_PADDUSW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_sse2_ussubv16qi3, \"__builtin_ia32_psubusb128\", IX86_BUILTIN_PSUBUSB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_sse2_ussubv8hi3, \"__builtin_ia32_psubusw128\", IX86_BUILTIN_PSUBUSW128, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_mulv8hi3, \"__builtin_ia32_pmullw128\", IX86_BUILTIN_PMULLW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_smulv8hi3_highpart, \"__builtin_ia32_pmulhw128\", IX86_BUILTIN_PMULHW128, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_andv2di3, \"__builtin_ia32_pand128\", IX86_BUILTIN_PAND128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_nandv2di3, \"__builtin_ia32_pandn128\", IX86_BUILTIN_PANDN128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_iorv2di3, \"__builtin_ia32_por128\", IX86_BUILTIN_POR128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_xorv2di3, \"__builtin_ia32_pxor128\", IX86_BUILTIN_PXOR128, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_uavgv16qi3, \"__builtin_ia32_pavgb128\", IX86_BUILTIN_PAVGB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_uavgv8hi3, \"__builtin_ia32_pavgw128\", IX86_BUILTIN_PAVGW128, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_eqv16qi3, \"__builtin_ia32_pcmpeqb128\", IX86_BUILTIN_PCMPEQB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_eqv8hi3, \"__builtin_ia32_pcmpeqw128\", IX86_BUILTIN_PCMPEQW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_eqv4si3, \"__builtin_ia32_pcmpeqd128\", IX86_BUILTIN_PCMPEQD128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_gtv16qi3, \"__builtin_ia32_pcmpgtb128\", IX86_BUILTIN_PCMPGTB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_gtv8hi3, \"__builtin_ia32_pcmpgtw128\", IX86_BUILTIN_PCMPGTW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_gtv4si3, \"__builtin_ia32_pcmpgtd128\", IX86_BUILTIN_PCMPGTD128, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_umaxv16qi3, \"__builtin_ia32_pmaxub128\", IX86_BUILTIN_PMAXUB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_smaxv8hi3, \"__builtin_ia32_pmaxsw128\", IX86_BUILTIN_PMAXSW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_uminv16qi3, \"__builtin_ia32_pminub128\", IX86_BUILTIN_PMINUB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sminv8hi3, \"__builtin_ia32_pminsw128\", IX86_BUILTIN_PMINSW128, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpckhbw, \"__builtin_ia32_punpckhbw128\", IX86_BUILTIN_PUNPCKHBW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpckhwd, \"__builtin_ia32_punpckhwd128\", IX86_BUILTIN_PUNPCKHWD128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpckhdq, \"__builtin_ia32_punpckhdq128\", IX86_BUILTIN_PUNPCKHDQ128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpckhqdq, \"__builtin_ia32_punpckhqdq128\", IX86_BUILTIN_PUNPCKHQDQ128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpcklbw, \"__builtin_ia32_punpcklbw128\", IX86_BUILTIN_PUNPCKLBW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpcklwd, \"__builtin_ia32_punpcklwd128\", IX86_BUILTIN_PUNPCKLWD128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpckldq, \"__builtin_ia32_punpckldq128\", IX86_BUILTIN_PUNPCKLDQ128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_punpcklqdq, \"__builtin_ia32_punpcklqdq128\", IX86_BUILTIN_PUNPCKLQDQ128, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_packsswb, \"__builtin_ia32_packsswb128\", IX86_BUILTIN_PACKSSWB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_packssdw, \"__builtin_ia32_packssdw128\", IX86_BUILTIN_PACKSSDW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_packuswb, \"__builtin_ia32_packuswb128\", IX86_BUILTIN_PACKUSWB128, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_umulv8hi3_highpart, \"__builtin_ia32_pmulhuw128\", IX86_BUILTIN_PMULHUW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_psadbw, 0, IX86_BUILTIN_PSADBW128, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_umulv1siv1di3, 0, IX86_BUILTIN_PMULUDQ, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_umulv2siv2di3, 0, IX86_BUILTIN_PMULUDQ128, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_pmaddwd, 0, IX86_BUILTIN_PMADDWD128, UNKNOWN, 0 },\n-\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtsi2sd, 0, IX86_BUILTIN_CVTSI2SD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_64BIT, CODE_FOR_sse2_cvtsi2sdq, 0, IX86_BUILTIN_CVTSI642SD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtsd2ss, 0, IX86_BUILTIN_CVTSD2SS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtss2sd, 0, IX86_BUILTIN_CVTSS2SD, UNKNOWN, 0 },\n-\n-  /* SSE3 MMX */\n-  { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_addsubv4sf3, \"__builtin_ia32_addsubps\", IX86_BUILTIN_ADDSUBPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_addsubv2df3, \"__builtin_ia32_addsubpd\", IX86_BUILTIN_ADDSUBPD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_haddv4sf3, \"__builtin_ia32_haddps\", IX86_BUILTIN_HADDPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_haddv2df3, \"__builtin_ia32_haddpd\", IX86_BUILTIN_HADDPD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_hsubv4sf3, \"__builtin_ia32_hsubps\", IX86_BUILTIN_HSUBPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_hsubv2df3, \"__builtin_ia32_hsubpd\", IX86_BUILTIN_HSUBPD, UNKNOWN, 0 },\n-\n-  /* SSSE3 */\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phaddwv8hi3, \"__builtin_ia32_phaddw128\", IX86_BUILTIN_PHADDW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phaddwv4hi3, \"__builtin_ia32_phaddw\", IX86_BUILTIN_PHADDW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phadddv4si3, \"__builtin_ia32_phaddd128\", IX86_BUILTIN_PHADDD128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phadddv2si3, \"__builtin_ia32_phaddd\", IX86_BUILTIN_PHADDD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phaddswv8hi3, \"__builtin_ia32_phaddsw128\", IX86_BUILTIN_PHADDSW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phaddswv4hi3, \"__builtin_ia32_phaddsw\", IX86_BUILTIN_PHADDSW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubwv8hi3, \"__builtin_ia32_phsubw128\", IX86_BUILTIN_PHSUBW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubwv4hi3, \"__builtin_ia32_phsubw\", IX86_BUILTIN_PHSUBW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubdv4si3, \"__builtin_ia32_phsubd128\", IX86_BUILTIN_PHSUBD128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubdv2si3, \"__builtin_ia32_phsubd\", IX86_BUILTIN_PHSUBD, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubswv8hi3, \"__builtin_ia32_phsubsw128\", IX86_BUILTIN_PHSUBSW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_phsubswv4hi3, \"__builtin_ia32_phsubsw\", IX86_BUILTIN_PHSUBSW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pmaddubswv8hi3, \"__builtin_ia32_pmaddubsw128\", IX86_BUILTIN_PMADDUBSW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pmaddubswv4hi3, \"__builtin_ia32_pmaddubsw\", IX86_BUILTIN_PMADDUBSW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pmulhrswv8hi3, \"__builtin_ia32_pmulhrsw128\", IX86_BUILTIN_PMULHRSW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pmulhrswv4hi3, \"__builtin_ia32_pmulhrsw\", IX86_BUILTIN_PMULHRSW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pshufbv16qi3, \"__builtin_ia32_pshufb128\", IX86_BUILTIN_PSHUFB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_pshufbv8qi3, \"__builtin_ia32_pshufb\", IX86_BUILTIN_PSHUFB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv16qi3, \"__builtin_ia32_psignb128\", IX86_BUILTIN_PSIGNB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv8qi3, \"__builtin_ia32_psignb\", IX86_BUILTIN_PSIGNB, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv8hi3, \"__builtin_ia32_psignw128\", IX86_BUILTIN_PSIGNW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv4hi3, \"__builtin_ia32_psignw\", IX86_BUILTIN_PSIGNW, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv4si3, \"__builtin_ia32_psignd128\", IX86_BUILTIN_PSIGND128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSSE3, CODE_FOR_ssse3_psignv2si3, \"__builtin_ia32_psignd\", IX86_BUILTIN_PSIGND, UNKNOWN, 0 },\n-\n-  /* SSE4.1 */\n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_packusdw, \"__builtin_ia32_packusdw128\", IX86_BUILTIN_PACKUSDW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_eqv2di3, \"__builtin_ia32_pcmpeqq\", IX86_BUILTIN_PCMPEQQ, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_smaxv16qi3, \"__builtin_ia32_pmaxsb128\", IX86_BUILTIN_PMAXSB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_smaxv4si3, \"__builtin_ia32_pmaxsd128\", IX86_BUILTIN_PMAXSD128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_umaxv4si3, \"__builtin_ia32_pmaxud128\", IX86_BUILTIN_PMAXUD128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_umaxv8hi3, \"__builtin_ia32_pmaxuw128\", IX86_BUILTIN_PMAXUW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sminv16qi3, \"__builtin_ia32_pminsb128\", IX86_BUILTIN_PMINSB128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sminv4si3, \"__builtin_ia32_pminsd128\", IX86_BUILTIN_PMINSD128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_uminv4si3, \"__builtin_ia32_pminud128\", IX86_BUILTIN_PMINUD128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_uminv8hi3, \"__builtin_ia32_pminuw128\", IX86_BUILTIN_PMINUW128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_mulv2siv2di3, 0, IX86_BUILTIN_PMULDQ128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_mulv4si3, \"__builtin_ia32_pmulld128\", IX86_BUILTIN_PMULLD128, UNKNOWN, 0 },\n-\n-  /* SSE4.2 */\n-  { OPTION_MASK_ISA_SSE4_2, CODE_FOR_sse4_2_gtv2di3, \"__builtin_ia32_pcmpgtq\", IX86_BUILTIN_PCMPGTQ, UNKNOWN, 0 },\n-\n-  /* AES */\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_aesenc, 0, IX86_BUILTIN_AESENC128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_aesenclast, 0, IX86_BUILTIN_AESENCLAST128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_aesdec, 0, IX86_BUILTIN_AESDEC128, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_aesdeclast, 0, IX86_BUILTIN_AESDECLAST128, UNKNOWN, 0 },\n+  { OPTION_MASK_ISA_64BIT, CODE_FOR_copysigntf3, 0, IX86_BUILTIN_COPYSIGNQ, UNKNOWN, (int) FLOAT128_FTYPE_FLOAT128_FLOAT128 },\n };\n \n /* SSE5 */\n@@ -19200,6 +19248,23 @@ ix86_init_mmx_sse_builtins (void)\n   tree v2di_ftype_v2di\n     = build_function_type_list (V2DI_type_node, V2DI_type_node, NULL_TREE);\n \n+  tree v16qi_ftype_v8hi_v8hi\n+    = build_function_type_list (V16QI_type_node,\n+\t\t\t\tV8HI_type_node, V8HI_type_node,\n+\t\t\t\tNULL_TREE);\n+  tree v8hi_ftype_v4si_v4si\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV4SI_type_node, V4SI_type_node,\n+\t\t\t\tNULL_TREE);\n+  tree v8hi_ftype_v16qi_v16qi \n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV16QI_type_node, V16QI_type_node,\n+\t\t\t\tNULL_TREE);\n+  tree v4hi_ftype_v8qi_v8qi \n+    = build_function_type_list (V4HI_type_node,\n+\t\t\t\tV8QI_type_node, V8QI_type_node,\n+\t\t\t\tNULL_TREE);\n+\n   tree ftype;\n \n   /* The __float80 type.  */\n@@ -19354,6 +19419,110 @@ ix86_init_mmx_sse_builtins (void)\n \tcase V2SF_FTYPE_V2SI:\n \t  type = v2sf_ftype_v2si;\n \t  break;\n+\tcase V16QI_FTYPE_V16QI_V16QI:\n+\t  type = v16qi_ftype_v16qi_v16qi;\n+\t  break;\n+\tcase V16QI_FTYPE_V8HI_V8HI:\n+\t  type = v16qi_ftype_v8hi_v8hi;\n+\t  break;\n+\tcase V8QI_FTYPE_V8QI_V8QI:\n+\t  type = v8qi_ftype_v8qi_v8qi;\n+\t  break;\n+\tcase V8QI_FTYPE_V4HI_V4HI:\n+\t  type = v8qi_ftype_v4hi_v4hi;\n+\t  break;\n+\tcase V8HI_FTYPE_V8HI_V8HI:\n+\t  type = v8hi_ftype_v8hi_v8hi;\n+\t  break;\n+\tcase V8HI_FTYPE_V16QI_V16QI:\n+\t  type = v8hi_ftype_v16qi_v16qi;\n+\t  break;\n+\tcase V8HI_FTYPE_V4SI_V4SI:\n+\t  type = v8hi_ftype_v4si_v4si;\n+\t  break;\n+\tcase V4SI_FTYPE_V4SI_V4SI:\n+\t  type = v4si_ftype_v4si_v4si;\n+\t  break;\n+\tcase V4SI_FTYPE_V8HI_V8HI:\n+\t  type = v4si_ftype_v8hi_v8hi;\n+\t  break;\n+\tcase V4SI_FTYPE_V4SF_V4SF:\n+\t  type = v4si_ftype_v4sf_v4sf;\n+\t  break;\n+\tcase V4SI_FTYPE_V2DF_V2DF:\n+\t  type = v4si_ftype_v2df_v2df;\n+\t  break;\n+\tcase V4HI_FTYPE_V4HI_V4HI:\n+\t  type = v4hi_ftype_v4hi_v4hi;\n+\t  break;\n+\tcase V4HI_FTYPE_V8QI_V8QI:\n+\t  type = v4hi_ftype_v8qi_v8qi;\n+\t  break;\n+\tcase V4HI_FTYPE_V2SI_V2SI:\n+\t  type = v4hi_ftype_v2si_v2si;\n+\t  break;\n+\tcase V4SF_FTYPE_V4SF_V4SF:\n+\tcase V4SF_FTYPE_V4SF_V4SF_SWAP:\n+\t  type = v4sf_ftype_v4sf_v4sf;\n+\t  break;\n+\tcase V4SF_FTYPE_V4SF_V2SI:\n+\t  type = v4sf_ftype_v4sf_v2si;\n+\t  break;\n+\tcase V4SF_FTYPE_V4SF_V2DF:\n+\t  type = v4sf_ftype_v4sf_v2df;\n+\t  break;\n+\tcase V4SF_FTYPE_V4SF_DI:\n+\t  type = v4sf_ftype_v4sf_int64;\n+\t  break;\n+\tcase V4SF_FTYPE_V4SF_SI:\n+\t  type = v4sf_ftype_v4sf_int;\n+\t  break;\n+\tcase V2DI_FTYPE_V2DI_V2DI:\n+\t  type = v2di_ftype_v2di_v2di;\n+\t  break;\n+\tcase V2DI_FTYPE_V16QI_V16QI:\n+\t  type = v2di_ftype_v16qi_v16qi;\n+\t  break;\n+\tcase V2DI_FTYPE_V4SI_V4SI:\n+\t  type = v2di_ftype_v4si_v4si;\n+\t  break;\n+\tcase V2DI_FTYPE_V2DF_V2DF:\n+\t  type = v2di_ftype_v2df_v2df;\n+\t  break;\n+\tcase V2SI_FTYPE_V2SI_V2SI:\n+\t  type = v2si_ftype_v2si_v2si;\n+\t  break;\n+\tcase V2SI_FTYPE_V4HI_V4HI:\n+\t  type = v2si_ftype_v4hi_v4hi;\n+\t  break;\n+\tcase V2SI_FTYPE_V2SF_V2SF:\n+\t  type = v2si_ftype_v2sf_v2sf;\n+\t  break;\n+\tcase V2DF_FTYPE_V2DF_V2DF:\n+\tcase V2DF_FTYPE_V2DF_V2DF_SWAP:\n+\t  type = v2df_ftype_v2df_v2df;\n+\t  break;\n+\tcase V2DF_FTYPE_V2DF_V4SF:\n+\t  type = v2df_ftype_v2df_v4sf;\n+\t  break;\n+\tcase V2DF_FTYPE_V2DF_DI:\n+\t  type = v2df_ftype_v2df_int64;\n+\t  break;\n+\tcase V2DF_FTYPE_V2DF_SI:\n+\t  type = v2df_ftype_v2df_int;\n+\t  break;\n+\tcase V2SF_FTYPE_V2SF_V2SF:\n+\t  type = v2sf_ftype_v2sf_v2sf;\n+\t  break;\n+\tcase V1DI_FTYPE_V1DI_V1DI:\n+\t  type = v1di_ftype_v1di_v1di;\n+\t  break;\n+\tcase V1DI_FTYPE_V8QI_V8QI:\n+\t  type = v1di_ftype_v8qi_v8qi;\n+\t  break;\n+\tcase V1DI_FTYPE_V2SI_V2SI:\n+\t  type = v1di_ftype_v2si_v2si;\n+\t  break;\n \tcase V4SF_FTYPE_V4SF_INT:\n \t  type = v4sf_ftype_v4sf_int;\n \t  break;\n@@ -19397,71 +19566,6 @@ ix86_init_mmx_sse_builtins (void)\n       def_builtin_const (d->mask, d->name, type, d->code);\n     }\n \n-  /* Add all builtins that are more or less simple operations on two\n-     operands.  */\n-  for (i = 0, d = bdesc_2arg; i < ARRAY_SIZE (bdesc_2arg); i++, d++)\n-    {\n-      /* Use one of the operands; the target can have a different mode for\n-\t mask-generating compares.  */\n-      enum machine_mode mode;\n-      tree type;\n-\n-      if (d->name == 0)\n-\tcontinue;\n-      mode = insn_data[d->icode].operand[1].mode;\n-\n-      switch (mode)\n-\t{\n-\tcase V16QImode:\n-\t  type = v16qi_ftype_v16qi_v16qi;\n-\t  break;\n-\tcase V8HImode:\n-\t  type = v8hi_ftype_v8hi_v8hi;\n-\t  break;\n-\tcase V4SImode:\n-\t  type = v4si_ftype_v4si_v4si;\n-\t  break;\n-\tcase V2DImode:\n-\t  type = v2di_ftype_v2di_v2di;\n-\t  break;\n-\tcase V2DFmode:\n-\t  type = v2df_ftype_v2df_v2df;\n-\t  break;\n-\tcase V4SFmode:\n-\t  type = v4sf_ftype_v4sf_v4sf;\n-\t  break;\n-\tcase V8QImode:\n-\t  type = v8qi_ftype_v8qi_v8qi;\n-\t  break;\n-\tcase V4HImode:\n-\t  type = v4hi_ftype_v4hi_v4hi;\n-\t  break;\n-\tcase V2SImode:\n-\t  type = v2si_ftype_v2si_v2si;\n-\t  break;\n-\tcase V1DImode:\n-\t  type = v1di_ftype_v1di_v1di;\n-\t  break;\n-\n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n-\n-      /* Override for comparisons.  */\n-      if (d->icode == CODE_FOR_sse_maskcmpv4sf3\n-\t  || d->icode == CODE_FOR_sse_vmmaskcmpv4sf3)\n-\ttype = v4si_ftype_v4sf_v4sf;\n-\n-      if (d->icode == CODE_FOR_sse2_maskcmpv2df3\n-\t  || d->icode == CODE_FOR_sse2_vmmaskcmpv2df3)\n-\ttype = v2di_ftype_v2df_v2df;\n-\n-      if (d->icode == CODE_FOR_vec_pack_sfix_v2df)\n-\ttype = v4si_ftype_v2df_v2df;\n-\n-      def_builtin_const (d->mask, d->name, type, d->code);\n-    }\n-\n   /* pcmpestr[im] insns.  */\n   for (i = 0, d = bdesc_pcmpestr;\n        i < ARRAY_SIZE (bdesc_pcmpestr);\n@@ -19509,7 +19613,6 @@ ix86_init_mmx_sse_builtins (void)\n   def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_psrad\", v2si_ftype_v2si_v2si, IX86_BUILTIN_PSRAD);\n \n   def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, \"__builtin_ia32_pshufw\", v4hi_ftype_v4hi_int, IX86_BUILTIN_PSHUFW);\n-  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_pmaddwd\", v2si_ftype_v4hi_v4hi, IX86_BUILTIN_PMADDWD);\n \n   /* comi/ucomi insns.  */\n   for (i = 0, d = bdesc_comi; i < ARRAY_SIZE (bdesc_comi); i++, d++)\n@@ -19522,15 +19625,8 @@ ix86_init_mmx_sse_builtins (void)\n   for (i = 0, d = bdesc_ptest; i < ARRAY_SIZE (bdesc_ptest); i++, d++)\n     def_builtin_const (d->mask, d->name, int_ftype_v2di_v2di, d->code);\n \n-  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_packsswb\", v8qi_ftype_v4hi_v4hi, IX86_BUILTIN_PACKSSWB);\n-  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_packssdw\", v4hi_ftype_v2si_v2si, IX86_BUILTIN_PACKSSDW);\n-  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_packuswb\", v8qi_ftype_v4hi_v4hi, IX86_BUILTIN_PACKUSWB);\n-\n   def_builtin (OPTION_MASK_ISA_SSE, \"__builtin_ia32_ldmxcsr\", void_ftype_unsigned, IX86_BUILTIN_LDMXCSR);\n   def_builtin (OPTION_MASK_ISA_SSE, \"__builtin_ia32_stmxcsr\", unsigned_ftype_void, IX86_BUILTIN_STMXCSR);\n-  def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_cvtpi2ps\", v4sf_ftype_v4sf_v2si, IX86_BUILTIN_CVTPI2PS);\n-  def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_cvtsi2ss\", v4sf_ftype_v4sf_int, IX86_BUILTIN_CVTSI2SS);\n-  def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_64BIT, \"__builtin_ia32_cvtsi642ss\", v4sf_ftype_v4sf_int64, IX86_BUILTIN_CVTSI642SS);\n \n   def_builtin (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, \"__builtin_ia32_maskmovq\", void_ftype_v8qi_v8qi_pchar, IX86_BUILTIN_MASKMOVQ);\n \n@@ -19546,8 +19642,6 @@ ix86_init_mmx_sse_builtins (void)\n   def_builtin (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, \"__builtin_ia32_movntq\", void_ftype_pdi_di, IX86_BUILTIN_MOVNTQ);\n   def_builtin (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, \"__builtin_ia32_sfence\", void_ftype_void, IX86_BUILTIN_SFENCE);\n \n-  def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, \"__builtin_ia32_psadbw\", v1di_ftype_v8qi_v8qi, IX86_BUILTIN_PSADBW);\n-\n   def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_sqrtss\", v4sf_ftype_v4sf, IX86_BUILTIN_SQRTSS);\n   def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_rsqrtss\", v4sf_ftype_v4sf, IX86_BUILTIN_RSQRTSS);\n   def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_rcpss\", v4sf_ftype_v4sf, IX86_BUILTIN_RCPSS);\n@@ -19559,25 +19653,6 @@ ix86_init_mmx_sse_builtins (void)\n \n   /* Original 3DNow!  */\n   def_builtin (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_femms\", void_ftype_void, IX86_BUILTIN_FEMMS);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pavgusb\", v8qi_ftype_v8qi_v8qi, IX86_BUILTIN_PAVGUSB);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfacc\", v2sf_ftype_v2sf_v2sf, IX86_BUILTIN_PFACC);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfadd\", v2sf_ftype_v2sf_v2sf, IX86_BUILTIN_PFADD);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfcmpeq\", v2si_ftype_v2sf_v2sf, IX86_BUILTIN_PFCMPEQ);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfcmpge\", v2si_ftype_v2sf_v2sf, IX86_BUILTIN_PFCMPGE);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfcmpgt\", v2si_ftype_v2sf_v2sf, IX86_BUILTIN_PFCMPGT);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfmax\", v2sf_ftype_v2sf_v2sf, IX86_BUILTIN_PFMAX);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfmin\", v2sf_ftype_v2sf_v2sf, IX86_BUILTIN_PFMIN);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfmul\", v2sf_ftype_v2sf_v2sf, IX86_BUILTIN_PFMUL);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfrcpit1\", v2sf_ftype_v2sf_v2sf, IX86_BUILTIN_PFRCPIT1);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfrcpit2\", v2sf_ftype_v2sf_v2sf, IX86_BUILTIN_PFRCPIT2);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfrsqit1\", v2sf_ftype_v2sf_v2sf, IX86_BUILTIN_PFRSQIT1);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfsub\", v2sf_ftype_v2sf_v2sf, IX86_BUILTIN_PFSUB);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pfsubr\", v2sf_ftype_v2sf_v2sf, IX86_BUILTIN_PFSUBR);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW, \"__builtin_ia32_pmulhrw\", v4hi_ftype_v4hi_v4hi, IX86_BUILTIN_PMULHRW);\n-\n-  /* 3DNow! extension as used in the Athlon CPU.  */\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW_A, \"__builtin_ia32_pfnacc\", v2sf_ftype_v2sf_v2sf, IX86_BUILTIN_PFNACC);\n-  def_builtin_const (OPTION_MASK_ISA_3DNOW_A, \"__builtin_ia32_pfpnacc\", v2sf_ftype_v2sf_v2sf, IX86_BUILTIN_PFPNACC);\n \n   /* SSE2 */\n   def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_maskmovdqu\", void_ftype_v16qi_v16qi_pchar, IX86_BUILTIN_MASKMOVDQU);\n@@ -19595,25 +19670,16 @@ ix86_init_mmx_sse_builtins (void)\n   def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_pshufd\", v4si_ftype_v4si_int, IX86_BUILTIN_PSHUFD);\n   def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_pshuflw\", v8hi_ftype_v8hi_int, IX86_BUILTIN_PSHUFLW);\n   def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_pshufhw\", v8hi_ftype_v8hi_int, IX86_BUILTIN_PSHUFHW);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_psadbw128\", v2di_ftype_v16qi_v16qi, IX86_BUILTIN_PSADBW128);\n \n   def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_sqrtsd\", v2df_ftype_v2df, IX86_BUILTIN_SQRTSD);\n \n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_cvtsi2sd\", v2df_ftype_v2df_int, IX86_BUILTIN_CVTSI2SD);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_64BIT, \"__builtin_ia32_cvtsi642sd\", v2df_ftype_v2df_int64, IX86_BUILTIN_CVTSI642SD);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_cvtsd2ss\", v4sf_ftype_v4sf_v2df, IX86_BUILTIN_CVTSD2SS);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_cvtss2sd\", v2df_ftype_v2df_v4sf, IX86_BUILTIN_CVTSS2SD);\n-\n   def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_clflush\", void_ftype_pcvoid, IX86_BUILTIN_CLFLUSH);\n   def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_lfence\", void_ftype_void, IX86_BUILTIN_LFENCE);\n   x86_mfence = def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_mfence\", void_ftype_void, IX86_BUILTIN_MFENCE);\n \n   def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_loaddqu\", v16qi_ftype_pcchar, IX86_BUILTIN_LOADDQU);\n   def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_storedqu\", void_ftype_pchar_v16qi, IX86_BUILTIN_STOREDQU);\n \n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_pmuludq\", v1di_ftype_v2si_v2si, IX86_BUILTIN_PMULUDQ);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_pmuludq128\", v2di_ftype_v4si_v4si, IX86_BUILTIN_PMULUDQ128);\n-\n   def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_pslldqi128\", v2di_ftype_v2di_int, IX86_BUILTIN_PSLLDQI128);\n   def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_psllwi128\", v8hi_ftype_v8hi_int, IX86_BUILTIN_PSLLWI128);\n   def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_pslldi128\", v4si_ftype_v4si_int, IX86_BUILTIN_PSLLDI128);\n@@ -19635,8 +19701,6 @@ ix86_init_mmx_sse_builtins (void)\n   def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_psraw128\", v8hi_ftype_v8hi_v8hi, IX86_BUILTIN_PSRAW128);\n   def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_psrad128\", v4si_ftype_v4si_v4si, IX86_BUILTIN_PSRAD128);\n \n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_pmaddwd128\", v4si_ftype_v8hi_v8hi, IX86_BUILTIN_PMADDWD128);\n-\n   /* SSE3.  */\n   def_builtin (OPTION_MASK_ISA_SSE3, \"__builtin_ia32_monitor\", void_ftype_pcvoid_unsigned_unsigned, IX86_BUILTIN_MONITOR);\n   def_builtin (OPTION_MASK_ISA_SSE3, \"__builtin_ia32_mwait\", void_ftype_unsigned_unsigned, IX86_BUILTIN_MWAIT);\n@@ -19648,7 +19712,6 @@ ix86_init_mmx_sse_builtins (void)\n \n   /* SSE4.1. */\n   def_builtin (OPTION_MASK_ISA_SSE4_1, \"__builtin_ia32_movntdqa\", v2di_ftype_pv2di, IX86_BUILTIN_MOVNTDQA);\n-  def_builtin_const (OPTION_MASK_ISA_SSE4_1, \"__builtin_ia32_pmuldq128\", v2di_ftype_v4si_v4si, IX86_BUILTIN_PMULDQ128);\n \n   /* SSE4.2. */\n   ftype = build_function_type_list (unsigned_type_node,\n@@ -19866,168 +19929,6 @@ safe_vector_operand (rtx x, enum machine_mode mode)\n   return x;\n }\n \n-/* Subroutine of ix86_expand_builtin to take care of SSE insns with\n-   variable number of operands.  */\n-\n-static rtx\n-ix86_expand_args_builtin (enum insn_code icode, tree exp,\n-\t\t\t  enum ix86_builtin_type type, rtx target)\n-{\n-  rtx pat;\n-  unsigned int i, nargs;\n-  int num_memory = 0;\n-  struct\n-    {\n-      rtx op;\n-      enum machine_mode mode;\n-    } args[3];\n-  bool last_arg_constant = false;\n-  const struct insn_data *insn_p = &insn_data[icode];\n-  enum machine_mode tmode = insn_p->operand[0].mode;\n-\n-  switch (type)\n-    {\n-    case FLOAT128_FTYPE_FLOAT128:\n-    case INT64_FTYPE_V4SF:\n-    case INT64_FTYPE_V2DF:\n-    case INT_FTYPE_V16QI:\n-    case INT_FTYPE_V8QI:\n-    case INT_FTYPE_V4SF:\n-    case INT_FTYPE_V2DF:\n-    case V16QI_FTYPE_V16QI:\n-    case V8HI_FTYPE_V8HI:\n-    case V8HI_FTYPE_V16QI:\n-    case V8QI_FTYPE_V8QI:\n-    case V4SI_FTYPE_V4SI:\n-    case V4SI_FTYPE_V16QI:\n-    case V4SI_FTYPE_V4SF:\n-    case V4SI_FTYPE_V8HI:\n-    case V4SI_FTYPE_V2DF:\n-    case V4HI_FTYPE_V4HI:\n-    case V4SF_FTYPE_V4SF:\n-    case V4SF_FTYPE_V4SI:\n-    case V4SF_FTYPE_V2DF:\n-    case V2DI_FTYPE_V2DI:\n-    case V2DI_FTYPE_V16QI:\n-    case V2DI_FTYPE_V8HI:\n-    case V2DI_FTYPE_V4SI:\n-    case V2DF_FTYPE_V2DF:\n-    case V2DF_FTYPE_V4SI:\n-    case V2DF_FTYPE_V4SF:\n-    case V2DF_FTYPE_V2SI:\n-    case V2SI_FTYPE_V2SI:\n-    case V2SI_FTYPE_V4SF:\n-    case V2SI_FTYPE_V2SF:\n-    case V2SI_FTYPE_V2DF:\n-    case V2SF_FTYPE_V2SF:\n-    case V2SF_FTYPE_V2SI:\n-      nargs = 1;\n-      break;\n-    case V4SF_FTYPE_V4SF_INT:\n-    case V2DI_FTYPE_V2DI_INT:\n-    case V2DF_FTYPE_V2DF_INT:\n-      nargs = 2;\n-      last_arg_constant = true;\n-      break;\n-    case V16QI_FTYPE_V16QI_V16QI_V16QI:\n-    case V4SF_FTYPE_V4SF_V4SF_V4SF:\n-    case V2DF_FTYPE_V2DF_V2DF_V2DF:\n-      nargs = 3;\n-      break;\n-    case V16QI_FTYPE_V16QI_V16QI_INT:\n-    case V8HI_FTYPE_V8HI_V8HI_INT:\n-    case V4SI_FTYPE_V4SI_V4SI_INT:\n-    case V4SF_FTYPE_V4SF_V4SF_INT:\n-    case V2DI_FTYPE_V2DI_V2DI_INT:\n-    case V2DF_FTYPE_V2DF_V2DF_INT:\n-      nargs = 3;\n-      last_arg_constant = true;\n-      break;\n-    default:\n-      gcc_unreachable ();\n-    }\n-\n-  gcc_assert (nargs <= ARRAY_SIZE (args));\n-\n-  if (optimize\n-      || target == 0\n-      || GET_MODE (target) != tmode\n-      || ! (*insn_p->operand[0].predicate) (target, tmode))\n-    target = gen_reg_rtx (tmode);\n-\n-  for (i = 0; i < nargs; i++)\n-    {\n-      tree arg = CALL_EXPR_ARG (exp, i);\n-      rtx op = expand_normal (arg);\n-      enum machine_mode mode = insn_p->operand[i + 1].mode;\n-      bool match = (*insn_p->operand[i + 1].predicate) (op, mode);\n-\n-      if (last_arg_constant && (i + 1) == nargs)\n-\t{\n-\t  if (!match)\n-\t    switch (icode)\n-\t      {\n-\t      case CODE_FOR_sse4_1_roundpd:\n-\t      case CODE_FOR_sse4_1_roundps:\n-\t      case CODE_FOR_sse4_1_roundsd:\n-\t      case CODE_FOR_sse4_1_roundss:\n-\t      case CODE_FOR_sse4_1_blendps:\n-\t\terror (\"the last argument must be a 4-bit immediate\");\n-\t\treturn const0_rtx;\n-\n-\t      case CODE_FOR_sse4_1_blendpd:\n-\t\terror (\"the last argument must be a 2-bit immediate\");\n-\t\treturn const0_rtx;\n-\n-\t     default:\n-\t\terror (\"the last argument must be an 8-bit immediate\");\n-\t\treturn const0_rtx;\n-\t      }\n-\t}\n-      else\n-\t{\n-\t  if (VECTOR_MODE_P (mode))\n-\t    op = safe_vector_operand (op, mode);\n-\n-\t  /* If we aren't optimizing, only allow one memory operand to\n-\t     be generated.  */\n-\t  if (memory_operand (op, mode))\n-\t    num_memory++;\n-\n-\t  gcc_assert (GET_MODE (op) == mode\n-\t\t      || GET_MODE (op) == VOIDmode);\n-\n-\t  if (optimize || !match || num_memory > 1)\n-\t    op = copy_to_mode_reg (mode, op);\n-\t}\n-\n-      args[i].op = op;\n-      args[i].mode = mode;\n-    }\n-\n-  switch (nargs)\n-    {\n-    case 1:\n-      pat = GEN_FCN (icode) (target, args[0].op);\n-      break;\n-    case 2:\n-      pat = GEN_FCN (icode) (target, args[0].op, args[1].op);\n-      break;\n-    case 3:\n-      pat = GEN_FCN (icode) (target, args[0].op, args[1].op,\n-\t\t\t     args[2].op);\n-      break;\n-    default:\n-      gcc_unreachable ();\n-    }\n-\n-  if (! pat)\n-    return 0;\n-\n-  emit_insn (pat);\n-  return target;\n-}\n-\n /* Subroutine of ix86_expand_builtin to take care of crc32 insns.  */\n \n static rtx\n@@ -20438,8 +20339,8 @@ ix86_expand_unop1_builtin (enum insn_code icode, tree exp, rtx target)\n /* Subroutine of ix86_expand_builtin to take care of comparison insns.  */\n \n static rtx\n-ix86_expand_sse_compare (const struct builtin_description *d, tree exp,\n-\t\t\t rtx target)\n+ix86_expand_sse_compare (const struct builtin_description *d,\n+\t\t\t tree exp, rtx target, bool swap)\n {\n   rtx pat;\n   tree arg0 = CALL_EXPR_ARG (exp, 0);\n@@ -20459,7 +20360,7 @@ ix86_expand_sse_compare (const struct builtin_description *d, tree exp,\n \n   /* Swap operands if we have a comparison that isn't available in\n      hardware.  */\n-  if (d->flag & BUILTIN_DESC_SWAP_OPERANDS)\n+  if (swap)\n     {\n       rtx tmp = gen_reg_rtx (mode1);\n       emit_move_insn (tmp, op1);\n@@ -20487,6 +20388,222 @@ ix86_expand_sse_compare (const struct builtin_description *d, tree exp,\n   return target;\n }\n \n+/* Subroutine of ix86_expand_builtin to take care of insns with\n+   variable number of operands.  */\n+\n+static rtx\n+ix86_expand_args_builtin (const struct builtin_description *d,\n+\t\t\t  tree exp, rtx target)\n+{\n+  rtx pat;\n+  unsigned int i, nargs;\n+  int num_memory = 0;\n+  struct\n+    {\n+      rtx op;\n+      enum machine_mode mode;\n+    } args[3];\n+  bool last_arg_constant = false;\n+  enum insn_code icode = d->icode;\n+  const struct insn_data *insn_p = &insn_data[icode];\n+  enum machine_mode tmode = insn_p->operand[0].mode;\n+  bool swap = false;\n+  enum rtx_code comparison = d->comparison;\n+\n+  switch ((enum ix86_builtin_type) d->flag)\n+    {\n+    case FLOAT128_FTYPE_FLOAT128:\n+    case INT64_FTYPE_V4SF:\n+    case INT64_FTYPE_V2DF:\n+    case INT_FTYPE_V16QI:\n+    case INT_FTYPE_V8QI:\n+    case INT_FTYPE_V4SF:\n+    case INT_FTYPE_V2DF:\n+    case V16QI_FTYPE_V16QI:\n+    case V8HI_FTYPE_V8HI:\n+    case V8HI_FTYPE_V16QI:\n+    case V8QI_FTYPE_V8QI:\n+    case V4SI_FTYPE_V4SI:\n+    case V4SI_FTYPE_V16QI:\n+    case V4SI_FTYPE_V4SF:\n+    case V4SI_FTYPE_V8HI:\n+    case V4SI_FTYPE_V2DF:\n+    case V4HI_FTYPE_V4HI:\n+    case V4SF_FTYPE_V4SF:\n+    case V4SF_FTYPE_V4SI:\n+    case V4SF_FTYPE_V2DF:\n+    case V2DI_FTYPE_V2DI:\n+    case V2DI_FTYPE_V16QI:\n+    case V2DI_FTYPE_V8HI:\n+    case V2DI_FTYPE_V4SI:\n+    case V2DF_FTYPE_V2DF:\n+    case V2DF_FTYPE_V4SI:\n+    case V2DF_FTYPE_V4SF:\n+    case V2DF_FTYPE_V2SI:\n+    case V2SI_FTYPE_V2SI:\n+    case V2SI_FTYPE_V4SF:\n+    case V2SI_FTYPE_V2SF:\n+    case V2SI_FTYPE_V2DF:\n+    case V2SF_FTYPE_V2SF:\n+    case V2SF_FTYPE_V2SI:\n+      nargs = 1;\n+      break;\n+    case FLOAT128_FTYPE_FLOAT128_FLOAT128:\n+    case V16QI_FTYPE_V16QI_V16QI:\n+    case V16QI_FTYPE_V8HI_V8HI:\n+    case V8QI_FTYPE_V8QI_V8QI:\n+    case V8QI_FTYPE_V4HI_V4HI:\n+    case V8HI_FTYPE_V8HI_V8HI:\n+    case V8HI_FTYPE_V16QI_V16QI:\n+    case V8HI_FTYPE_V4SI_V4SI:\n+    case V4SI_FTYPE_V4SI_V4SI:\n+    case V4SI_FTYPE_V8HI_V8HI:\n+    case V4SI_FTYPE_V4SF_V4SF:\n+    case V4SI_FTYPE_V2DF_V2DF:\n+    case V4HI_FTYPE_V4HI_V4HI:\n+    case V4HI_FTYPE_V8QI_V8QI:\n+    case V4HI_FTYPE_V2SI_V2SI:\n+    case V4SF_FTYPE_V4SF_V4SF:\n+    case V4SF_FTYPE_V4SF_V2SI:\n+    case V4SF_FTYPE_V4SF_V2DF:\n+    case V4SF_FTYPE_V4SF_DI:\n+    case V4SF_FTYPE_V4SF_SI:\n+    case V2DI_FTYPE_V2DI_V2DI:\n+    case V2DI_FTYPE_V16QI_V16QI:\n+    case V2DI_FTYPE_V4SI_V4SI:\n+    case V2DI_FTYPE_V2DF_V2DF:\n+    case V2SI_FTYPE_V2SI_V2SI:\n+    case V2SI_FTYPE_V4HI_V4HI:\n+    case V2SI_FTYPE_V2SF_V2SF:\n+    case V2DF_FTYPE_V2DF_V2DF:\n+    case V2DF_FTYPE_V2DF_V4SF:\n+    case V2DF_FTYPE_V2DF_DI:\n+    case V2DF_FTYPE_V2DF_SI:\n+    case V2SF_FTYPE_V2SF_V2SF:\n+    case V1DI_FTYPE_V1DI_V1DI:\n+    case V1DI_FTYPE_V8QI_V8QI:\n+    case V1DI_FTYPE_V2SI_V2SI:\n+      if (comparison == UNKNOWN)\n+\treturn ix86_expand_binop_builtin (icode, exp, target);\n+      nargs = 2;\n+      break;\n+    case V4SF_FTYPE_V4SF_V4SF_SWAP:\n+    case V2DF_FTYPE_V2DF_V2DF_SWAP:\n+      gcc_assert (comparison != UNKNOWN);\n+      nargs = 2;\n+      swap = true;\n+      break;\n+    case V4SF_FTYPE_V4SF_INT:\n+    case V2DI_FTYPE_V2DI_INT:\n+    case V2DF_FTYPE_V2DF_INT:\n+      nargs = 2;\n+      last_arg_constant = true;\n+      break;\n+    case V16QI_FTYPE_V16QI_V16QI_V16QI:\n+    case V4SF_FTYPE_V4SF_V4SF_V4SF:\n+    case V2DF_FTYPE_V2DF_V2DF_V2DF:\n+      nargs = 3;\n+      break;\n+    case V16QI_FTYPE_V16QI_V16QI_INT:\n+    case V8HI_FTYPE_V8HI_V8HI_INT:\n+    case V4SI_FTYPE_V4SI_V4SI_INT:\n+    case V4SF_FTYPE_V4SF_V4SF_INT:\n+    case V2DI_FTYPE_V2DI_V2DI_INT:\n+    case V2DF_FTYPE_V2DF_V2DF_INT:\n+      nargs = 3;\n+      last_arg_constant = true;\n+      break;\n+    default:\n+      gcc_unreachable ();\n+    }\n+\n+  gcc_assert (nargs <= ARRAY_SIZE (args));\n+\n+  if (comparison != UNKNOWN)\n+    {\n+      gcc_assert (nargs == 2);\n+      return ix86_expand_sse_compare (d, exp, target, swap);\n+    }\n+\n+  if (optimize\n+      || target == 0\n+      || GET_MODE (target) != tmode\n+      || ! (*insn_p->operand[0].predicate) (target, tmode))\n+    target = gen_reg_rtx (tmode);\n+\n+  for (i = 0; i < nargs; i++)\n+    {\n+      tree arg = CALL_EXPR_ARG (exp, i);\n+      rtx op = expand_normal (arg);\n+      enum machine_mode mode = insn_p->operand[i + 1].mode;\n+      bool match = (*insn_p->operand[i + 1].predicate) (op, mode);\n+\n+      if (last_arg_constant && (i + 1) == nargs)\n+\t{\n+\t  if (!match)\n+\t    switch (icode)\n+\t      {\n+\t      case CODE_FOR_sse4_1_roundpd:\n+\t      case CODE_FOR_sse4_1_roundps:\n+\t      case CODE_FOR_sse4_1_roundsd:\n+\t      case CODE_FOR_sse4_1_roundss:\n+\t      case CODE_FOR_sse4_1_blendps:\n+\t\terror (\"the last argument must be a 4-bit immediate\");\n+\t\treturn const0_rtx;\n+\n+\t      case CODE_FOR_sse4_1_blendpd:\n+\t\terror (\"the last argument must be a 2-bit immediate\");\n+\t\treturn const0_rtx;\n+\n+\t     default:\n+\t\terror (\"the last argument must be an 8-bit immediate\");\n+\t\treturn const0_rtx;\n+\t      }\n+\t}\n+      else\n+\t{\n+\t  if (VECTOR_MODE_P (mode))\n+\t    op = safe_vector_operand (op, mode);\n+\n+\t  /* If we aren't optimizing, only allow one memory operand to\n+\t     be generated.  */\n+\t  if (memory_operand (op, mode))\n+\t    num_memory++;\n+\n+\t  gcc_assert (GET_MODE (op) == mode\n+\t\t      || GET_MODE (op) == VOIDmode);\n+\n+\t  if (optimize || !match || num_memory > 1)\n+\t    op = copy_to_mode_reg (mode, op);\n+\t}\n+\n+      args[i].op = op;\n+      args[i].mode = mode;\n+    }\n+\n+  switch (nargs)\n+    {\n+    case 1:\n+      pat = GEN_FCN (icode) (target, args[0].op);\n+      break;\n+    case 2:\n+      pat = GEN_FCN (icode) (target, args[0].op, args[1].op);\n+      break;\n+    case 3:\n+      pat = GEN_FCN (icode) (target, args[0].op, args[1].op,\n+\t\t\t     args[2].op);\n+      break;\n+    default:\n+      gcc_unreachable ();\n+    }\n+\n+  if (! pat)\n+    return 0;\n+\n+  emit_insn (pat);\n+  return target;\n+}\n+\n /* Subroutine of ix86_expand_builtin to take care of comi insns.  */\n \n static rtx\n@@ -21185,57 +21302,6 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n       emit_insn (gen_mmx_femms ());\n       return NULL_RTX;\n \n-    case IX86_BUILTIN_PAVGUSB:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_uavgv8qi3, exp, target);\n-\n-    case IX86_BUILTIN_PFACC:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_haddv2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFADD:\n-     return ix86_expand_binop_builtin (CODE_FOR_mmx_addv2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFCMPEQ:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_eqv2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFCMPGE:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_gev2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFCMPGT:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_gtv2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFMAX:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_smaxv2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFMIN:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_sminv2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFMUL:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_mulv2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFRCPIT1:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_rcpit1v2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFRCPIT2:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_rcpit2v2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFRSQIT1:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_rsqit1v2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFSUB:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_subv2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFSUBR:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_subrv2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PMULHRW:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_pmulhrwv4hi3, exp, target);\n-\n-    case IX86_BUILTIN_PFNACC:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_hsubv2sf3, exp, target);\n-\n-    case IX86_BUILTIN_PFPNACC:\n-      return ix86_expand_binop_builtin (CODE_FOR_mmx_addsubv2sf3, exp, target);\n-\n     case IX86_BUILTIN_SQRTSD:\n       return ix86_expand_unop1_builtin (CODE_FOR_sse2_vmsqrtv2df2, exp, target);\n     case IX86_BUILTIN_LOADUPD:\n@@ -21505,9 +21571,6 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n \treturn target;\n       }\n \n-    case IX86_BUILTIN_COPYSIGNQ:\n-      return ix86_expand_binop_builtin (CODE_FOR_copysigntf3, exp, target);\n-\n     default:\n       break;\n     }\n@@ -21516,23 +21579,7 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n        i < ARRAY_SIZE (bdesc_args);\n        i++, d++)\n     if (d->code == fcode)\n-      {\n-\tenum ix86_builtin_type type = (enum ix86_builtin_type) d->flag;\n-\treturn ix86_expand_args_builtin (d->icode, exp, type, target);\n-      }\n-\n-  for (i = 0, d = bdesc_2arg; i < ARRAY_SIZE (bdesc_2arg); i++, d++)\n-    if (d->code == fcode)\n-      {\n-\t/* Compares are treated specially.  */\n-\tif (d->icode == CODE_FOR_sse_maskcmpv4sf3\n-\t    || d->icode == CODE_FOR_sse_vmmaskcmpv4sf3\n-\t    || d->icode == CODE_FOR_sse2_maskcmpv2df3\n-\t    || d->icode == CODE_FOR_sse2_vmmaskcmpv2df3)\n-\t  return ix86_expand_sse_compare (d, exp, target);\n-\n-\treturn ix86_expand_binop_builtin (d->icode, exp, target);\n-      }\n+      return ix86_expand_args_builtin (d, exp, target);\n \n   for (i = 0, d = bdesc_comi; i < ARRAY_SIZE (bdesc_comi); i++, d++)\n     if (d->code == fcode)"}, {"sha": "4a4260d9a157835cdc3be874086445761e8f1d42", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b667c8276cf37815a08149a801473d3c084bc0e/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b667c8276cf37815a08149a801473d3c084bc0e/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=1b667c8276cf37815a08149a801473d3c084bc0e", "patch": "@@ -5586,7 +5586,7 @@\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"ssse3_pmaddubswv8hi3\"\n+(define_insn \"ssse3_pmaddubsw128\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n \t(ss_plus:V8HI\n \t  (mult:V8HI\n@@ -5640,7 +5640,7 @@\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"ssse3_pmaddubswv4hi3\"\n+(define_insn \"ssse3_pmaddubsw\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n \t(ss_plus:V4HI\n \t  (mult:V4HI"}, {"sha": "4ba62bf32865d99e23109791e4b02eb2a8ab729c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b667c8276cf37815a08149a801473d3c084bc0e/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b667c8276cf37815a08149a801473d3c084bc0e/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=1b667c8276cf37815a08149a801473d3c084bc0e", "patch": "@@ -7748,9 +7748,9 @@ v16qi __builtin_ia32_punpcklbw128 (v16qi, v16qi)\n v8hi __builtin_ia32_punpcklwd128 (v8hi, v8hi)\n v4si __builtin_ia32_punpckldq128 (v4si, v4si)\n v2di __builtin_ia32_punpcklqdq128 (v2di, v2di)\n-v16qi __builtin_ia32_packsswb128 (v16qi, v16qi)\n-v8hi __builtin_ia32_packssdw128 (v8hi, v8hi)\n-v16qi __builtin_ia32_packuswb128 (v16qi, v16qi)\n+v16qi __builtin_ia32_packsswb128 (v8hi, v8hi)\n+v8hi __builtin_ia32_packssdw128 (v4si, v4si)\n+v16qi __builtin_ia32_packuswb128 (v8hi, v8hi)\n v8hi __builtin_ia32_pmulhuw128 (v8hi, v8hi)\n void __builtin_ia32_maskmovdqu (v16qi, v16qi)\n v2df __builtin_ia32_loadupd (double *)\n@@ -7852,7 +7852,7 @@ v4hi __builtin_ia32_phaddsw (v4hi, v4hi)\n v2si __builtin_ia32_phsubd (v2si, v2si)\n v4hi __builtin_ia32_phsubw (v4hi, v4hi)\n v4hi __builtin_ia32_phsubsw (v4hi, v4hi)\n-v8qi __builtin_ia32_pmaddubsw (v8qi, v8qi)\n+v4hi __builtin_ia32_pmaddubsw (v8qi, v8qi)\n v4hi __builtin_ia32_pmulhrsw (v4hi, v4hi)\n v8qi __builtin_ia32_pshufb (v8qi, v8qi)\n v8qi __builtin_ia32_psignb (v8qi, v8qi)\n@@ -7875,7 +7875,7 @@ v8hi __builtin_ia32_phaddsw128 (v8hi, v8hi)\n v4si __builtin_ia32_phsubd128 (v4si, v4si)\n v8hi __builtin_ia32_phsubw128 (v8hi, v8hi)\n v8hi __builtin_ia32_phsubsw128 (v8hi, v8hi)\n-v16qi __builtin_ia32_pmaddubsw128 (v16qi, v16qi)\n+v8hi __builtin_ia32_pmaddubsw128 (v16qi, v16qi)\n v8hi __builtin_ia32_pmulhrsw128 (v8hi, v8hi)\n v16qi __builtin_ia32_pshufb128 (v16qi, v16qi)\n v16qi __builtin_ia32_psignb128 (v16qi, v16qi)"}]}