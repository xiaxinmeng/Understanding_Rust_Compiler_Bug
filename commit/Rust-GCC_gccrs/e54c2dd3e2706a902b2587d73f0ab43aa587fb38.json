{"sha": "e54c2dd3e2706a902b2587d73f0ab43aa587fb38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU0YzJkZDNlMjcwNmE5MDJiMjU4N2Q3M2YwYWI0M2FhNTg3ZmIzOA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2014-04-22T16:31:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2014-04-22T16:31:41Z"}, "message": "Use counter_mode on count_exp to get mode\n\ngcc/\n\n\tPR target/60868\n\t* config/i386/i386.c (ix86_expand_set_or_movmem): Call counter_mode \n\ton count_exp to get mode.\n\ngcc/testsuite/\n\n\tPR target/60868\n\t* gcc.target/i386/pr60868.c: New testcase.\n\nFrom-SVN: r209648", "tree": {"sha": "9967c097b4b23ca0cbea6a29d82a278ba6a97481", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9967c097b4b23ca0cbea6a29d82a278ba6a97481"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e54c2dd3e2706a902b2587d73f0ab43aa587fb38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54c2dd3e2706a902b2587d73f0ab43aa587fb38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e54c2dd3e2706a902b2587d73f0ab43aa587fb38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54c2dd3e2706a902b2587d73f0ab43aa587fb38/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e162a134863bfd95d356fed2edf600854a5712c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e162a134863bfd95d356fed2edf600854a5712c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e162a134863bfd95d356fed2edf600854a5712c8"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "11efb18beb87bb3fb20866ccfb46d46f6d996cab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54c2dd3e2706a902b2587d73f0ab43aa587fb38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54c2dd3e2706a902b2587d73f0ab43aa587fb38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e54c2dd3e2706a902b2587d73f0ab43aa587fb38", "patch": "@@ -1,3 +1,9 @@\n+2014-04-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/60868\n+\t* config/i386/i386.c (ix86_expand_set_or_movmem): Call counter_mode \n+\ton count_exp to get mode.\n+\n 2014-04-22  Andrew Pinski  <apinski@cavium.com>\n \n \t* config/aarch64/aarch64.c (aarch64_load_symref_appropriately):"}, {"sha": "895ebbb67726f0806b0e8ccd78ea635d32d9b5b4", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54c2dd3e2706a902b2587d73f0ab43aa587fb38/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54c2dd3e2706a902b2587d73f0ab43aa587fb38/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e54c2dd3e2706a902b2587d73f0ab43aa587fb38", "patch": "@@ -24384,7 +24384,8 @@ ix86_expand_set_or_movmem (rtx dst, rtx src, rtx count_exp, rtx val_exp,\n \t  if (jump_around_label == NULL_RTX)\n \t    jump_around_label = gen_label_rtx ();\n \t  emit_cmp_and_jump_insns (count_exp, GEN_INT (dynamic_check - 1),\n-\t\t\t\t   LEU, 0, GET_MODE (count_exp), 1, hot_label);\n+\t\t\t\t   LEU, 0, counter_mode (count_exp),\n+\t\t\t\t   1, hot_label);\n \t  predict_jump (REG_BR_PROB_BASE * 90 / 100);\n \t  if (issetmem)\n \t    set_storage_via_libcall (dst, count_exp, val_exp, false);"}, {"sha": "357847004dfaef73d6be329e9cf3ed98c91afa63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54c2dd3e2706a902b2587d73f0ab43aa587fb38/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54c2dd3e2706a902b2587d73f0ab43aa587fb38/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e54c2dd3e2706a902b2587d73f0ab43aa587fb38", "patch": "@@ -1,3 +1,8 @@\n+2014-04-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/60868\n+\t* gcc.target/i386/pr60868.c: New testcase.\n+\n 2014-04-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/59073"}, {"sha": "c30bbfc18366175aa2f52749b73a60477da73f35", "filename": "gcc/testsuite/gcc.target/i386/pr60868.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54c2dd3e2706a902b2587d73f0ab43aa587fb38/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr60868.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54c2dd3e2706a902b2587d73f0ab43aa587fb38/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr60868.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr60868.c?ref=e54c2dd3e2706a902b2587d73f0ab43aa587fb38", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O0 -minline-all-stringops -minline-stringops-dynamically -march=core2\" } */\n+\n+void bar (float *);\n+\n+void foo (void)\n+{\n+  float b[256] = {0};\n+  bar(b);\n+}"}]}