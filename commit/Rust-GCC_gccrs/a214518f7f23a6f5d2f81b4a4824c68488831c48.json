{"sha": "a214518f7f23a6f5d2f81b4a4824c68488831c48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIxNDUxOGY3ZjIzYTZmNWQyZjgxYjRhNDgyNGM2ODQ4ODgzMWM0OA==", "commit": {"author": {"name": "Seongbae Park", "email": "seongbae.park@gmail.com", "date": "2008-02-20T21:19:14Z"}, "committer": {"name": "Seongbae Park", "email": "spark@gcc.gnu.org", "date": "2008-02-20T21:19:14Z"}, "message": "invoke.texi (Warning Options): Add new option -Wframe-larger-than=.\n\ngcc/ChangeLog:\n\n2008-02-20  Seongbae Park <seongbae.park@gmail.com>\n\n\t* doc/invoke.texi (Warning Options): Add new option\n\t-Wframe-larger-than=.\n\t(-Wframe-larger-than): Document.\n\n\t* flags.h (warn_frame_larger_than, frame_larger_than_size):\n\tAdd declarations for new option variables.\n\n\t* final.c (final_start_function): Check the frame size\n\tbefore emission and issue a Wframe-larger-than warning.\n\n\t* opts.c (warn_frame_larger_than, frame_larger_than_size):\n\tAdd definitions for new option variables.\n\t(common_handle_option): Handle new option OPT_Wframe_larger_than_.\n\n\t* common.opt (Wframe-larger-than=): New option.\n\ngcc/testsuite/ChangeLog:\n\n2008-02-20  Seongbae Park <seongbae.park@gmail.com>\n\n\t* gcc.dg/Wframe-larger-than.c: New option test.\n\nFrom-SVN: r132496", "tree": {"sha": "d6c21e69cb0b12b3fcf52d86ecdbdc5d17f346c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6c21e69cb0b12b3fcf52d86ecdbdc5d17f346c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a214518f7f23a6f5d2f81b4a4824c68488831c48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a214518f7f23a6f5d2f81b4a4824c68488831c48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a214518f7f23a6f5d2f81b4a4824c68488831c48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a214518f7f23a6f5d2f81b4a4824c68488831c48/comments", "author": null, "committer": null, "parents": [{"sha": "c8910ef9e2bbec3bfcfaedcd5f79d7b40a7a79ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8910ef9e2bbec3bfcfaedcd5f79d7b40a7a79ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8910ef9e2bbec3bfcfaedcd5f79d7b40a7a79ad"}], "stats": {"total": 78, "additions": 77, "deletions": 1}, "files": [{"sha": "d17b56c7b61ca08a99d58614c259a8cb36c183d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a214518f7f23a6f5d2f81b4a4824c68488831c48", "patch": "@@ -1,3 +1,21 @@\n+2008-02-20  Seongbae Park <seongbae.park@gmail.com>\n+\n+\t* doc/invoke.texi (Warning Options): Add new option\n+\t-Wframe-larger-than=.\n+\t(-Wframe-larger-than): Document.\n+\n+\t* flags.h (warn_frame_larger_than, frame_larger_than_size):\n+\tAdd declarations for new option variables.\n+\n+\t* final.c (final_start_function): Check the frame size\n+\tbefore emission and issue a Wframe-larger-than warning.\n+\n+\t* opts.c (warn_frame_larger_than, frame_larger_than_size):\n+\tAdd definitions for new option variables.\n+\t(common_handle_option): Handle new option OPT_Wframe_larger_than_.\n+\n+\t* common.opt (Wframe-larger-than=): New option.\n+\n 2008-02-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (<sse>_vmmul<mode>3): Fix typo in asm template."}, {"sha": "ea48ba7d760fc2b00667ceb209ba872cab04e9e8", "filename": "gcc/common.opt", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=a214518f7f23a6f5d2f81b4a4824c68488831c48", "patch": "@@ -110,6 +110,17 @@ Wfatal-errors\n Common Var(flag_fatal_errors)\n Exit on the first error occurred\n \n+Wframe-larger-than=\n+Common RejectNegative Joined UInteger\n+-Wframe-larger-than=@var{len} Warn whenever a function's stack frame requires\n+more than @var{len} bytes.  The computation done to determine\n+the stack frame size is approximate and not conservative.\n+The actual requirements may be somewhat greater than @var{len}\n+even if you do not get a warning.  In addition, any space allocated\n+via @code{alloca}, variable-length arrays, or related constructs\n+is not included by the compiler when determining\n+whether or not to issue a warning.\n+\n Winline\n Common Var(warn_inline) Warning\n Warn when an inlined function cannot be inlined"}, {"sha": "cfac283637999277c1c0d0a9703c2f15d9a55e8a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a214518f7f23a6f5d2f81b4a4824c68488831c48", "patch": "@@ -236,7 +236,8 @@ Objective-C and Objective-C++ Dialects}.\n -Werror  -Werror=* @gol\n -Wfatal-errors  -Wfloat-equal  -Wformat  -Wformat=2 @gol\n -Wno-format-extra-args -Wformat-nonliteral @gol\n--Wformat-security  -Wformat-y2k -Wignored-qualifiers @gol\n+-Wformat-security  -Wformat-y2k @gol\n+-Wframe-larger-than=@var{len} -Wignored-qualifiers @gol\n -Wimplicit  -Wimplicit-function-declaration  -Wimplicit-int @gol\n -Wimport  -Wno-import  -Winit-self  -Winline @gol\n -Wno-int-to-pointer-cast -Wno-invalid-offsetof @gol\n@@ -3518,6 +3519,10 @@ global variable or whenever a built-in function is shadowed.\n @opindex Wlarger-than-@var{len}\n Warn whenever an object of larger than @var{len} bytes is defined.\n \n+@item -Wframe-larger-than=@var{len}\n+@opindex Wframe-larger-than\n+Warn whenever the size of a function frame is larger than @var{len} bytes.\n+\n @item -Wunsafe-loop-optimizations\n @opindex Wunsafe-loop-optimizations\n @opindex Wno-unsafe-loop-optimizations"}, {"sha": "8d1cebead414795323dac95500d611005ca02018", "filename": "gcc/final.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=a214518f7f23a6f5d2f81b4a4824c68488831c48", "patch": "@@ -1524,6 +1524,15 @@ final_start_function (rtx first ATTRIBUTE_UNUSED, FILE *file,\n       TREE_ASM_WRITTEN (DECL_INITIAL (current_function_decl)) = 1;\n     }\n \n+  if (warn_frame_larger_than\n+    && get_frame_size () > frame_larger_than_size)\n+  {\n+      /* Issue a warning */\n+      warning (OPT_Wframe_larger_than_,\n+               \"the frame size of %wd bytes is larger than %wd bytes\",\n+               get_frame_size (), frame_larger_than_size);\n+  }\n+\n   /* First output the function prologue: code to set up the stack frame.  */\n   targetm.asm_out.function_prologue (file, get_frame_size ());\n "}, {"sha": "e2041500c149cee314268cdd5cdab96b4819a051", "filename": "gcc/flags.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=a214518f7f23a6f5d2f81b4a4824c68488831c48", "patch": "@@ -137,6 +137,12 @@ extern void set_Wstrict_aliasing (int onoff);\n extern bool warn_larger_than;\n extern HOST_WIDE_INT larger_than_size;\n \n+/* Nonzero means warn about any function whose frame size is larger\n+   than N bytes. */\n+\n+extern bool warn_frame_larger_than;\n+extern HOST_WIDE_INT frame_larger_than_size;\n+\n /* Temporarily suppress certain warnings.\n    This is set while reading code from a system header file.  */\n "}, {"sha": "8b8a1a9c364b6488b6b4f0c6ab4ad9d1c15d6e96", "filename": "gcc/opts.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=a214518f7f23a6f5d2f81b4a4824c68488831c48", "patch": "@@ -58,6 +58,11 @@ bool extra_warnings;\n bool warn_larger_than;\n HOST_WIDE_INT larger_than_size;\n \n+/* True to warn about any function whose frame size is larger\n+ * than N bytes. */\n+bool warn_frame_larger_than;\n+HOST_WIDE_INT frame_larger_than_size;\n+\n /* Hack for cooperation between set_Wunused and set_Wextra.  */\n static bool maybe_warn_unused_parameter;\n \n@@ -1498,6 +1503,11 @@ common_handle_option (size_t scode, const char *arg, int value,\n       warn_larger_than = value != -1;\n       break;\n \n+    case OPT_Wframe_larger_than_:\n+      frame_larger_than_size = value;\n+      warn_frame_larger_than = value != -1;\n+      break;\n+\n     case OPT_Wstrict_aliasing:\n       set_Wstrict_aliasing (value);\n       break;"}, {"sha": "49737884753fed2fa032055b9b5bd22eaab58f8b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a214518f7f23a6f5d2f81b4a4824c68488831c48", "patch": "@@ -1,3 +1,7 @@\n+2008-02-20  Seongbae Park <seongbae.park@gmail.com>\n+\n+\t* gcc.dg/Wframe-larger-than.c: New option test.\n+\n 2008-02-20  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34997"}, {"sha": "fab0adf37eed1107948e675dfc4d8d7403d6467a", "filename": "gcc/testsuite/gcc.dg/Wframe-larger-than.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Ftestsuite%2Fgcc.dg%2FWframe-larger-than.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a214518f7f23a6f5d2f81b4a4824c68488831c48/gcc%2Ftestsuite%2Fgcc.dg%2FWframe-larger-than.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWframe-larger-than.c?ref=a214518f7f23a6f5d2f81b4a4824c68488831c48", "patch": "@@ -0,0 +1,13 @@\n+/* Test -Wframe-larger-than for warning\n+   when the frame size is bigger than specified.\n+   Origin: Seongbae Park <seongbae.park@gmail.com> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-Wframe-larger-than=2048\" } */\n+\n+extern void func(char *);\n+\n+void foo (void) {\n+  char array[4096];\n+  func(array);\n+} /* { dg-warning \"the frame size of .* bytes is larger than 2048 bytes\" } */"}]}