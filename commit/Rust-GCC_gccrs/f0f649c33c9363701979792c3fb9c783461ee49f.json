{"sha": "f0f649c33c9363701979792c3fb9c783461ee49f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBmNjQ5YzMzYzkzNjM3MDE5Nzk3OTJjM2ZiOWM3ODM0NjFlZTQ5Zg==", "commit": {"author": {"name": "James Bowman", "email": "james.bowman@ftdichip.com", "date": "2016-07-08T22:11:30Z"}, "committer": {"name": "James Bowman", "email": "jamesbowman@gcc.gnu.org", "date": "2016-07-08T22:11:30Z"}, "message": "FT32: apply unbias to references to RAM symbols.\n\nThe FT32 binutils use a bias to distinguish between RAM and flash\naddresses.\n\nThis fix adds an ASM_OUTPUT_SYMBOL_REF() that unbiases references to\nRAM symbols.\n\nOnly references to RAM objects have the bias applied. Flash objects\n(that is, objects in ADDR SPACE 1) are not biased, so for these no bias\nshould be applied. Likewise references in the gdb section need to use\nthe biased address, so references in debug sections are not unbiased.\n\ngcc/ChangeLog:\n\n2016-07-08  James Bowman  <james.bowman@ftdichip.com>\n\n\t* config/ft32/ft32.c (ft32_elf_encode_section_info): New function.\n\t* config/ft32/ft32.h (ASM_OUTPUT_SYMBOL_REF): New function.\n\nFrom-SVN: r238185", "tree": {"sha": "625ab019316dfe33ea4e16e9e672a38ec42c0a83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/625ab019316dfe33ea4e16e9e672a38ec42c0a83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0f649c33c9363701979792c3fb9c783461ee49f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f649c33c9363701979792c3fb9c783461ee49f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0f649c33c9363701979792c3fb9c783461ee49f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f649c33c9363701979792c3fb9c783461ee49f/comments", "author": null, "committer": null, "parents": [{"sha": "72b3e203352b9cc6524531e8a0975c672dfdca2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b3e203352b9cc6524531e8a0975c672dfdca2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b3e203352b9cc6524531e8a0975c672dfdca2e"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "7dd0db561c208442c942d13899e9a5477dca34de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f649c33c9363701979792c3fb9c783461ee49f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f649c33c9363701979792c3fb9c783461ee49f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0f649c33c9363701979792c3fb9c783461ee49f", "patch": "@@ -1,3 +1,8 @@\n+2016-07-08  James Bowman  <james.bowman@ftdichip.com>\n+\n+\t* config/ft32/ft32.c (ft32_elf_encode_section_info): New function.\n+\t* config/ft32/ft32.h (ASM_OUTPUT_SYMBOL_REF): New function.\n+\n 2016-07-08  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/71621"}, {"sha": "216a80404287263e083db373b356a56039958365", "filename": "gcc/config/ft32/ft32.c", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f649c33c9363701979792c3fb9c783461ee49f/gcc%2Fconfig%2Fft32%2Fft32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f649c33c9363701979792c3fb9c783461ee49f/gcc%2Fconfig%2Fft32%2Fft32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fft32%2Fft32.c?ref=f0f649c33c9363701979792c3fb9c783461ee49f", "patch": "@@ -35,6 +35,7 @@\n #include \"calls.h\"\n #include \"expr.h\"\n #include \"builtins.h\"\n+#include \"print-tree.h\"\n \n /* This file should be included last.  */\n #include \"target-def.h\"\n@@ -895,6 +896,48 @@ ft32_addr_space_legitimate_address_p (enum machine_mode mode, rtx x,\n   return 1;\n }\n \n+#undef TARGET_ENCODE_SECTION_INFO\n+#define TARGET_ENCODE_SECTION_INFO  ft32_elf_encode_section_info\n+\n+void\n+ft32_elf_encode_section_info (tree decl, rtx rtl, int first)\n+{\n+  enum tree_code code;\n+  rtx symbol;\n+\n+  /* Careful not to prod global register variables.  */\n+  if (!MEM_P (rtl))\n+    return;\n+  symbol = XEXP (rtl, 0);\n+  if (GET_CODE (symbol) != SYMBOL_REF)\n+    return;\n+\n+  default_encode_section_info (decl, rtl, first);\n+\n+  code = TREE_CODE (decl);\n+  switch (TREE_CODE_CLASS (code))\n+    {\n+    case tcc_declaration:\n+      {\n+\ttree type = TREE_TYPE (decl);\n+\tint is_flash = (type && TYPE_P (type)\n+\t\t\t&& !ADDR_SPACE_GENERIC_P (TYPE_ADDR_SPACE (type)));\n+\tif ((code == VAR_DECL) && !is_flash)\n+\t  SYMBOL_REF_FLAGS (symbol) |= 0x1000;\n+      }\n+      break;\n+\n+    case tcc_constant:\n+    case tcc_exceptional:\n+      if (code == STRING_CST)\n+\tSYMBOL_REF_FLAGS (symbol) |= 0x1000;\n+      break;\n+\n+    default:\n+      break;\n+    }\n+}\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-ft32.h\""}, {"sha": "dd40b1de0b665f816c15a5db99ba1595e4071448", "filename": "gcc/config/ft32/ft32.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f649c33c9363701979792c3fb9c783461ee49f/gcc%2Fconfig%2Fft32%2Fft32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f649c33c9363701979792c3fb9c783461ee49f/gcc%2Fconfig%2Fft32%2Fft32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fft32%2Fft32.h?ref=f0f649c33c9363701979792c3fb9c783461ee49f", "patch": "@@ -506,4 +506,14 @@ do { \\\n \n extern int ft32_is_mem_pm(rtx o);\n \n+#define ASM_OUTPUT_SYMBOL_REF(stream, sym) \\\n+  do { \\\n+    assemble_name (stream, XSTR (sym, 0)); \\\n+    int section_debug = in_section && \\\n+      (SECTION_STYLE (in_section) == SECTION_NAMED) && \\\n+      (in_section->named.common.flags & SECTION_DEBUG); \\\n+    if (!section_debug && SYMBOL_REF_FLAGS (sym) & 0x1000) \\\n+      asm_fprintf (stream, \"-0x800000\"); \\\n+  } while (0)\n+\n #endif /* GCC_FT32_H */"}]}