{"sha": "5299815b887b832f44672c5939fe7ccce119995e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI5OTgxNWI4ODdiODMyZjQ0NjcyYzU5MzlmZTdjY2NlMTE5OTk1ZQ==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2008-09-04T22:19:49Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2008-09-04T22:19:49Z"}, "message": "mips.h (ISA_HAS_SEQ_SNE): New macro.\n\n\t* config/mips/mips.h (ISA_HAS_SEQ_SNE): New macro.\n\t* config/mips/mips.c (mips_expand_scc): Also expand seq and sne if\n\tsecond operand is a reg_imm10_operand.\n\t* config/mips/mips.md (*seq_<GPR:mode><GPR2:mode>_seq,\n\t*sne_<GPR:mode><GPR2:mode>_sne): New patterns.\n\t(*seq_<GPR:mode><GPR2:mode>): Rename to\n\t*seq_zero_<GPR:mode><GPR2:mode>.  Don't match if\n\tISA_HAS_SEQ_SNE.\n\t(*seq_<GPR:mode><GPR2:mode>_mips16): Rename to\n\t*seq_zero_<GPR:mode><GPR2:mode>_mip16.  Don't match if\n\tISA_HAS_SEQ_SNE.\n\t(*sne_<GPR:mode><GPR2:mode>): Rename to\n\t*sne_zero_<GPR:mode><GPR2:mode>.  Don't match if\n\tISA_HAS_SEQ_SNE.\n\ntestsuite/\n\t* gcc.target/mips/seq-1.c: New test.\n\t* gcc.target/mips/octeon-seq-1.c: New test.\n\t* gcc.target/mips/octeon-seq-2.c: New test.\n\t* gcc.target/mips/octeon-seq-3.c: New test.\n\t* gcc.target/mips/octeon-seq-4.c: New test.\n\t* gcc.target/mips/scc-2.c: Also pass on sltiu.\n\t* gcc.target/mips/scc-3.c: Likewise.\n\nFrom-SVN: r140010", "tree": {"sha": "be4b665763289b84f4346df7ebad1bb2128c3914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be4b665763289b84f4346df7ebad1bb2128c3914"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5299815b887b832f44672c5939fe7ccce119995e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5299815b887b832f44672c5939fe7ccce119995e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5299815b887b832f44672c5939fe7ccce119995e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5299815b887b832f44672c5939fe7ccce119995e/comments", "author": null, "committer": null, "parents": [{"sha": "c84241327480cec52608beaba811faf1f09e0b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c84241327480cec52608beaba811faf1f09e0b03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c84241327480cec52608beaba811faf1f09e0b03"}], "stats": {"total": 152, "additions": 142, "deletions": 10}, "files": [{"sha": "531589d01b124acb41cac21c55baa12cebb55966", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5299815b887b832f44672c5939fe7ccce119995e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5299815b887b832f44672c5939fe7ccce119995e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5299815b887b832f44672c5939fe7ccce119995e", "patch": "@@ -1,3 +1,20 @@\n+2008-09-04  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* config/mips/mips.h (ISA_HAS_SEQ_SNE): New macro.\n+\t* config/mips/mips.c (mips_expand_scc): Also expand seq and sne if\n+\tsecond operand is a reg_imm10_operand.\n+\t* config/mips/mips.md (*seq_<GPR:mode><GPR2:mode>_seq,\n+\t*sne_<GPR:mode><GPR2:mode>_sne): New patterns.\n+\t(*seq_<GPR:mode><GPR2:mode>): Rename to\n+\t*seq_zero_<GPR:mode><GPR2:mode>.  Don't match if\n+\tISA_HAS_SEQ_SNE.\n+\t(*seq_<GPR:mode><GPR2:mode>_mips16): Rename to\n+\t*seq_zero_<GPR:mode><GPR2:mode>_mip16.  Don't match if\n+\tISA_HAS_SEQ_SNE.\n+\t(*sne_<GPR:mode><GPR2:mode>): Rename to\n+\t*sne_zero_<GPR:mode><GPR2:mode>.  Don't match if\n+\tISA_HAS_SEQ_SNE.\n+\n 2008-09-04  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* config/mips/mips.h (ISA_HAS_EXTS): New macro."}, {"sha": "fd0101b680b7e1b52538c42f4ecc97aaed2da967", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=5299815b887b832f44672c5939fe7ccce119995e", "patch": "@@ -4222,8 +4222,14 @@ mips_expand_scc (enum rtx_code code, rtx target)\n \n   if (code == EQ || code == NE)\n     {\n-      rtx zie = mips_zero_if_equal (cmp_operands[0], cmp_operands[1]);\n-      mips_emit_binary (code, target, zie, const0_rtx);\n+      if (ISA_HAS_SEQ_SNE\n+\t  && reg_imm10_operand (cmp_operands[1], GET_MODE (cmp_operands[1])))\n+\tmips_emit_binary (code, target, cmp_operands[0], cmp_operands[1]);\n+      else\n+\t{\n+\t  rtx zie = mips_zero_if_equal (cmp_operands[0], cmp_operands[1]);\n+\t  mips_emit_binary (code, target, zie, const0_rtx);\n+\t}\n     }\n   else\n     mips_emit_int_order_test (code, 0, target,"}, {"sha": "1a9b542c5e3ca96d66161b747e1c9c100838648f", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=5299815b887b832f44672c5939fe7ccce119995e", "patch": "@@ -1015,6 +1015,9 @@ enum mips_code_readable_setting {\n /* ISA includes the exts instruction.  */\n #define ISA_HAS_EXTS\t\tTARGET_OCTEON\n \n+/* ISA includes the seq and sne instructions.  */\n+#define ISA_HAS_SEQ_SNE\t\tTARGET_OCTEON\n+\n /* ISA includes the pop instruction.  */\n #define ISA_HAS_POP\t\tTARGET_OCTEON\n \f"}, {"sha": "0512a70a40a487e50bbf360e09d852d7f1b7378c", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=5299815b887b832f44672c5939fe7ccce119995e", "patch": "@@ -5200,24 +5200,37 @@\n   \"\"\n   { if (mips_expand_scc (EQ, operands[0])) DONE; else FAIL; })\n \n-(define_insn \"*seq_<GPR:mode><GPR2:mode>\"\n+(define_insn \"*seq_zero_<GPR:mode><GPR2:mode>\"\n   [(set (match_operand:GPR2 0 \"register_operand\" \"=d\")\n \t(eq:GPR2 (match_operand:GPR 1 \"register_operand\" \"d\")\n \t\t (const_int 0)))]\n-  \"!TARGET_MIPS16\"\n+  \"!TARGET_MIPS16 && !ISA_HAS_SEQ_SNE\"\n   \"sltu\\t%0,%1,1\"\n   [(set_attr \"type\" \"slt\")\n    (set_attr \"mode\" \"<GPR:MODE>\")])\n \n-(define_insn \"*seq_<GPR:mode><GPR2:mode>_mips16\"\n+(define_insn \"*seq_zero_<GPR:mode><GPR2:mode>_mips16\"\n   [(set (match_operand:GPR2 0 \"register_operand\" \"=t\")\n \t(eq:GPR2 (match_operand:GPR 1 \"register_operand\" \"d\")\n \t\t (const_int 0)))]\n-  \"TARGET_MIPS16\"\n+  \"TARGET_MIPS16 && !ISA_HAS_SEQ_SNE\"\n   \"sltu\\t%1,1\"\n   [(set_attr \"type\" \"slt\")\n    (set_attr \"mode\" \"<GPR:MODE>\")])\n \n+;; Generate sltiu unless using seq results in better code.\n+(define_insn \"*seq_<GPR:mode><GPR2:mode>_seq\"\n+  [(set (match_operand:GPR2 0 \"register_operand\" \"=d,d,d\")\n+\t(eq:GPR2 (match_operand:GPR 1 \"register_operand\" \"%d,d,d\")\n+\t\t (match_operand:GPR 2 \"reg_imm10_operand\" \"d,J,YB\")))]\n+  \"ISA_HAS_SEQ_SNE\"\n+  \"@\n+   seq\\t%0,%1,%2\n+   sltiu\\t%0,%1,1\n+   seqi\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"slt\")\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n+\n ;; \"sne\" uses sltu instructions in which the first operand is $0.\n ;; This isn't possible in mips16 code.\n \n@@ -5228,15 +5241,28 @@\n   \"!TARGET_MIPS16\"\n   { if (mips_expand_scc (NE, operands[0])) DONE; else FAIL; })\n \n-(define_insn \"*sne_<GPR:mode><GPR2:mode>\"\n+(define_insn \"*sne_zero_<GPR:mode><GPR2:mode>\"\n   [(set (match_operand:GPR2 0 \"register_operand\" \"=d\")\n \t(ne:GPR2 (match_operand:GPR 1 \"register_operand\" \"d\")\n \t\t (const_int 0)))]\n-  \"!TARGET_MIPS16\"\n+  \"!TARGET_MIPS16 && !ISA_HAS_SEQ_SNE\"\n   \"sltu\\t%0,%.,%1\"\n   [(set_attr \"type\" \"slt\")\n    (set_attr \"mode\" \"<GPR:MODE>\")])\n \n+;; Generate sltu unless using sne results in better code.\n+(define_insn \"*sne_<GPR:mode><GPR2:mode>_sne\"\n+  [(set (match_operand:GPR2 0 \"register_operand\" \"=d,d,d\")\n+\t(ne:GPR2 (match_operand:GPR 1 \"register_operand\" \"%d,d,d\")\n+\t\t (match_operand:GPR 2 \"reg_imm10_operand\" \"d,J,YB\")))]\n+  \"ISA_HAS_SEQ_SNE\"\n+  \"@\n+   sne\\t%0,%1,%2\n+   sltu\\t%0,%.,%1\n+   snei\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"slt\")\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n+\n (define_expand \"sgt<u>\"\n   [(set (match_operand:SI 0 \"register_operand\")\n \t(any_gt:SI (match_dup 1)"}, {"sha": "e2e111f7237f9becc937c28d7403dc2ec89f3363", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5299815b887b832f44672c5939fe7ccce119995e", "patch": "@@ -1,3 +1,13 @@\n+2008-09-04  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* gcc.target/mips/seq-1.c: New test.\n+\t* gcc.target/mips/octeon-seq-1.c: New test.\n+\t* gcc.target/mips/octeon-seq-2.c: New test.\n+\t* gcc.target/mips/octeon-seq-3.c: New test.\n+\t* gcc.target/mips/octeon-seq-4.c: New test.\n+\t* gcc.target/mips/scc-2.c: Also pass on sltiu.\n+\t* gcc.target/mips/scc-3.c: Likewise.\n+\n 2008-09-04  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* gcc.target/mips/truncate-2.c: New test."}, {"sha": "3199cd7ad2ad3e6eecaad76e749808a6271c9551", "filename": "gcc/testsuite/gcc.target/mips/octeon-seq-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-1.c?ref=5299815b887b832f44672c5939fe7ccce119995e", "patch": "@@ -0,0 +1,19 @@\n+/* Check if we expand seq and sne.  */\n+\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-march=octeon\" } */\n+/* { dg-final { scan-assembler-times \"\\tseq\\t|\\tseqi\\t\" 4 } } */\n+/* { dg-final { scan-assembler-times \"\\tsne\\t|\\tsnei\\t\" 4 } } */\n+\n+#define TEST(N, LHS, REL, RHS) \\\n+  NOMIPS16 int f##N (int a, int b) { return LHS REL RHS; }\n+\n+TEST (0, a, ==, b);\n+TEST (1, a, ==, 23);\n+TEST (2, a, ==, 511);\n+TEST (3, a, ==, -200);\n+\n+TEST (10, a, !=, b);\n+TEST (11, a, !=, 1);\n+TEST (12, a, !=, 350);\n+TEST (13, a, !=, -512);"}, {"sha": "994e51b77387c3b131fb44d32a489b0f800fb279", "filename": "gcc/testsuite/gcc.target/mips/octeon-seq-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-2.c?ref=5299815b887b832f44672c5939fe7ccce119995e", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-march=octeon -mgp64\" } */\n+/* { dg-final { scan-assembler-times \"\\tseq\\t|\\tseqi\\t\" 3 } } */\n+/* { dg-final { scan-assembler-times \"\\tsne\\t|\\tsnei\\t\" 3 } } */\n+\n+#define TEST(N, LHS, REL, RHS) \\\n+  NOMIPS16 long long f##N (long long a, long long b) { return LHS REL RHS; }\n+\n+TEST (0, a, ==, b);\n+TEST (1, a, ==, 23);\n+TEST (2, a, ==, 511);\n+\n+TEST (3, a, !=, b);\n+TEST (4, a, !=, 1);\n+TEST (5, a, !=, 350);"}, {"sha": "522d0eaa4e32f19f2a4bacea61b3f5e10f40b442", "filename": "gcc/testsuite/gcc.target/mips/octeon-seq-3.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-3.c?ref=5299815b887b832f44672c5939fe7ccce119995e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O -march=octeon -mgp64\" } */\n+\n+/* { dg-final { scan-assembler-not \"and\\t\\|andi\\t\\|ext\\t\\|sll\\t\\|srl\\t\" } } */\n+/* { dg-final { scan-assembler-times \"\\tseqi\\t\\|\\tsnei\\t\" 4 } } */\n+\n+\n+#define TEST(N, LHS, REL, RHS) \\\n+  NOMIPS16 long long w##N (int a, int b) {return LHS REL RHS;} \\\n+  NOMIPS16 int n##N (long long a, long long b) {return LHS REL RHS;} \\\n+\n+TEST (eq, a, ==, 10);\n+TEST (ne, a, !=, 32);"}, {"sha": "88a71001be9e0e9ea02c4e04205c167d530c0bc5", "filename": "gcc/testsuite/gcc.target/mips/octeon-seq-4.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-4.c?ref=5299815b887b832f44672c5939fe7ccce119995e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=octeon\" } */\n+/* { dg-final { scan-assembler-not \"xor\" } } */\n+\n+unsigned\n+m (unsigned e);\n+\n+NOMIPS16 void\n+f (unsigned i)\n+{\n+  unsigned j = m (i);\n+  h (j, i != j);\n+}"}, {"sha": "c6c79d8cb61e1d5ca77a0b0318635a25d70626c9", "filename": "gcc/testsuite/gcc.target/mips/scc-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-2.c?ref=5299815b887b832f44672c5939fe7ccce119995e", "patch": "@@ -2,7 +2,7 @@\n /* { dg-mips-options \"-O -mgp64\" } */\n \n /* { dg-final { scan-assembler-not \"and\\t\\|andi\\t\\|ext\\t\\|sll\\t\\|srl\\t\" } } */\n-/* { dg-final { scan-assembler-times \"slt\\t\\|sltu\\t\" 12 } } */\n+/* { dg-final { scan-assembler-times \"slt\\t\\|slti?u\\t\" 12 } } */\n \n \n #define TEST(N, LHS, REL, RHS) \\"}, {"sha": "445a324bb8a4d832b54fbc9d95c237b93af6a3e6", "filename": "gcc/testsuite/gcc.target/mips/scc-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-3.c?ref=5299815b887b832f44672c5939fe7ccce119995e", "patch": "@@ -3,7 +3,7 @@\n /* { dg-add-options mips16_attribute } */\n \n /* { dg-final { scan-assembler-not \"and\\t\\|andi\\t\\|ext\\t\\|sll\\t\\|srl\\t\" } } */\n-/* { dg-final { scan-assembler-times \"slt\\t\\|sltu\\t\" 8 } } */\n+/* { dg-final { scan-assembler-times \"slt\\t\\|slti?u\\t\" 8 } } */\n \n \n #define TEST(N, LHS, REL, RHS) \\"}, {"sha": "ae23608ceeaac098a77aefc435354a559772f21d", "filename": "gcc/testsuite/gcc.target/mips/seq-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fseq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5299815b887b832f44672c5939fe7ccce119995e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fseq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fseq-1.c?ref=5299815b887b832f44672c5939fe7ccce119995e", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-final { scan-assembler-times \"\\tsltu\\t|\\tsltiu\\t\" 4 } } */\n+\n+#define TEST(N, LHS, REL, RHS) \\\n+  NOMIPS16 int f##N (int a, int b) { return LHS REL RHS; }\n+\n+TEST (0, a, ==, 0);\n+TEST (1, a, ==, 600);\n+TEST (10, a, !=, 0);\n+TEST (11, a, !=, -800);"}]}