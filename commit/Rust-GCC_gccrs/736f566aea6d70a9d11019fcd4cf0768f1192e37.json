{"sha": "736f566aea6d70a9d11019fcd4cf0768f1192e37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM2ZjU2NmFlYTZkNzBhOWQxMTAxOWZjZDRjZjA3NjhmMTE5MmUzNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-07-15T06:25:01Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-07-15T06:25:01Z"}, "message": "alpha.md: Use define_constants for unspec values.\n\n        * config/alpha/alpha.md: Use define_constants for unspec values.\n        Substitute throughout.\n\nFrom-SVN: r44012", "tree": {"sha": "0bfe75ef50f8e99d582bc25c1fb490141ac84623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bfe75ef50f8e99d582bc25c1fb490141ac84623"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/736f566aea6d70a9d11019fcd4cf0768f1192e37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/736f566aea6d70a9d11019fcd4cf0768f1192e37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/736f566aea6d70a9d11019fcd4cf0768f1192e37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/736f566aea6d70a9d11019fcd4cf0768f1192e37/comments", "author": null, "committer": null, "parents": [{"sha": "e6290e7425bf62c065cd68aaaf7baa5dcdf24c69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6290e7425bf62c065cd68aaaf7baa5dcdf24c69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6290e7425bf62c065cd68aaaf7baa5dcdf24c69"}], "stats": {"total": 119, "additions": 68, "deletions": 51}, "files": [{"sha": "0e3a3577213a2bd9e505ae062443e5d8e03b16b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/736f566aea6d70a9d11019fcd4cf0768f1192e37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/736f566aea6d70a9d11019fcd4cf0768f1192e37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=736f566aea6d70a9d11019fcd4cf0768f1192e37", "patch": "@@ -1,3 +1,8 @@\n+2001-07-14  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.md: Use define_constants for unspec values.\n+\tSubstitute throughout.\n+\n 2001-07-14  Tim Josling  <tej@melbpc.org.au>\n \n \t* tree.def (EXPON_EXPR) remove. Never supported anyway."}, {"sha": "4f277b5baaf6406f7b35c0e84715a627adf87f67", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 63, "deletions": 51, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/736f566aea6d70a9d11019fcd4cf0768f1192e37/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/736f566aea6d70a9d11019fcd4cf0768f1192e37/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=736f566aea6d70a9d11019fcd4cf0768f1192e37", "patch": "@@ -23,27 +23,31 @@\n ;;- See file \"rtl.def\" for documentation on define_insn, match_*, et. al.\n \n ;; Uses of UNSPEC in this file:\n-;;\n-;;\t0\targ_home\n-;;\t1\tcttz\n-;;\t2\tinsxh\n-;;\t3\tmskxh\n-;;\t5\tcvtql\n-;;\t6\tnt_lda\n-;;\t\n+\n+(define_constants\n+  [(UNSPEC_ARG_HOME\t0)\n+   (UNSPEC_CTTZ\t\t1)\n+   (UNSPEC_INSXH\t2)\n+   (UNSPEC_MSKXH\t3)\n+   (UNSPEC_CVTQL\t4)\n+   (UNSPEC_NT_LDA\t5)\n+  ])\n+\n ;; UNSPEC_VOLATILE:\n-;;\n-;;\t0\timb\n-;;\t1\tblockage\n-;;\t2\tbuiltin_setjmp_receiver\n-;;\t3\tbuiltin_longjmp\n-;;\t4\ttrapb\n-;;\t5\tprologue_stack_probe_loop\n-;;\t6\trealign\n-;;\t7\texception_receiver\n-;;\t8\tprologue_mcount\n-;;\t9\tprologue_ldgp_1\n-;;\t10\tprologue_ldgp_2\n+\n+(define_constants\n+  [(UNSPECV_IMB\t\t0)\n+   (UNSPECV_BLOCKAGE\t1)\n+   (UNSPECV_SETJMPR\t2)\t; builtin_setjmp_receiver\n+   (UNSPECV_LONGJMP\t3)\t; builtin_longjmp\n+   (UNSPECV_TRAPB\t4)\n+   (UNSPECV_PSPL\t5)\t; prologue_stack_probe_loop\n+   (UNSPECV_REALIGN\t6)\n+   (UNSPECV_EHR\t\t7)\t; exception_receiver\n+   (UNSPECV_MCOUNT\t8)\n+   (UNSPECV_LDGP1\t9)\n+   (UNSPECV_LDGP2\t10)\n+  ])\n \f\n ;; Processor type -- this attribute must exactly match the processor_type\n ;; enumeration in alpha.h.\n@@ -1339,7 +1343,7 @@\n \n (define_expand \"ffsdi2\"\n   [(set (match_dup 2)\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"\")] 1))\n+\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"\")] UNSPEC_CTTZ))\n    (set (match_dup 3)\n \t(plus:DI (match_dup 2) (const_int 1)))\n    (set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -1354,7 +1358,7 @@\n \n (define_insn \"*cttz\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")] 1))]\n+\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")] UNSPEC_CTTZ))]\n   \"TARGET_CIX\"\n   \"cttz %1,%0\"\n   ; EV6 calls all mvi and cttz/ctlz/popc class imisc, so just \n@@ -1877,7 +1881,8 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")\n \t\t    (match_operand:DI 2 \"mode_width_operand\" \"n\")\n-\t\t    (match_operand:DI 3 \"reg_or_8bit_operand\" \"rI\")] 2))]\n+\t\t    (match_operand:DI 3 \"reg_or_8bit_operand\" \"rI\")]\n+\t\t   UNSPEC_INSXH))]\n   \"\"\n   \"ins%M2h %1,%3,%0\"\n   [(set_attr \"type\" \"shift\")])\n@@ -1903,7 +1908,8 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")\n \t\t    (match_operand:DI 2 \"mode_width_operand\" \"n\")\n-\t\t    (match_operand:DI 3 \"reg_or_8bit_operand\" \"rI\")] 3))]\n+\t\t    (match_operand:DI 3 \"reg_or_8bit_operand\" \"rI\")]\n+\t\t   UNSPEC_MSKXH))]\n   \"\"\n   \"msk%M2h %1,%3,%0\"\n   [(set_attr \"type\" \"shift\")])\n@@ -2093,7 +2099,8 @@\n \n (define_insn \"*cvtql\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=f\")\n-\t(unspec:SI [(match_operand:DI 1 \"reg_or_fp0_operand\" \"fG\")] 5))]\n+\t(unspec:SI [(match_operand:DI 1 \"reg_or_fp0_operand\" \"fG\")]\n+\t\t   UNSPEC_CVTQL))]\n   \"TARGET_FP\"\n   \"cvtql%` %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2108,7 +2115,7 @@\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 2) (fix:DI (match_dup 1)))\n-   (set (match_dup 3) (unspec:SI [(match_dup 2)] 5))\n+   (set (match_dup 3) (unspec:SI [(match_dup 2)] UNSPEC_CVTQL))\n    (set (match_dup 0) (match_dup 3))]\n   \"\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2122,7 +2129,7 @@\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 2) (fix:DI (match_dup 1)))\n-   (set (match_dup 3) (unspec:SI [(match_dup 2)] 5))\n+   (set (match_dup 3) (unspec:SI [(match_dup 2)] UNSPEC_CVTQL))\n    (set (match_dup 0) (match_dup 3))]\n   ;; Due to REG_CANNOT_CHANGE_SIZE issues, we cannot simply use SUBREG.\n   \"operands[3] = gen_rtx_REG (SImode, REGNO (operands[2]));\"\n@@ -2157,7 +2164,7 @@\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 2) (fix:DI (float_extend:DF (match_dup 1))))\n-   (set (match_dup 3) (unspec:SI [(match_dup 2)] 5))\n+   (set (match_dup 3) (unspec:SI [(match_dup 2)] UNSPEC_CVTQL))\n    (set (match_dup 0) (match_dup 3))]\n   \"\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2172,7 +2179,7 @@\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 2) (fix:DI (float_extend:DF (match_dup 1))))\n-   (set (match_dup 3) (unspec:SI [(match_dup 2)] 5))\n+   (set (match_dup 3) (unspec:SI [(match_dup 2)] UNSPEC_CVTQL))\n    (set (match_dup 0) (match_dup 3))]\n   ;; Due to REG_CANNOT_CHANGE_SIZE issues, we cannot simply use SUBREG.\n   \"operands[3] = gen_rtx_REG (SImode, REGNO (operands[2]));\"\n@@ -4372,7 +4379,7 @@\n ;; all of memory.  This blocks insns from being moved across this point.\n \n (define_insn \"blockage\"\n-  [(unspec_volatile [(const_int 0)] 1)]\n+  [(unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)]\n   \"\"\n   \"\"\n   [(set_attr \"length\" \"0\")])\n@@ -4561,7 +4568,7 @@\n ;; if we need a GP.  Use ibr instead since it has the same EV5 scheduling\n ;; characteristics.\n (define_insn \"imb\"\n-  [(unspec_volatile [(const_int 0)] 0)]\n+  [(unspec_volatile [(const_int 0)] UNSPECV_IMB)]\n   \"\"\n   \"call_pal 0x86\"\n   [(set_attr \"type\" \"ibr\")])\n@@ -5820,7 +5827,8 @@\n \n (define_insn \"prologue_stack_probe_loop\"\n   [(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"r\")\n-\t\t     (match_operand:DI 1 \"register_operand\" \"r\")] 5)]\n+\t\t     (match_operand:DI 1 \"register_operand\" \"r\")]\n+\t\t    UNSPECV_PSPL)]\n   \"\"\n   \"*\n {\n@@ -5850,27 +5858,27 @@\n ;; with them.\n \n (define_expand \"prologue_ldgp\"\n-  [(unspec_volatile [(const_int 0)] 9)\n-   (unspec_volatile [(const_int 0)] 10)]\n+  [(unspec_volatile [(const_int 0)] UNSPECV_LDGP1)\n+   (unspec_volatile [(const_int 0)] UNSPECV_LDGP2)]\n   \"\"\n   \"\")\n \n (define_insn \"*prologue_ldgp_1\"\n-  [(unspec_volatile [(const_int 0)] 9)]\n-  \"! TARGET_OPEN_VMS && ! TARGET_WINDOWS_NT\"\n+  [(unspec_volatile [(const_int 0)] UNSPECV_LDGP1)]\n+  \"\"\n   \"ldgp $29,0($27)\\\\n$%~..ng:\")\n \n (define_insn \"*prologue_ldgp_2\"\n-  [(unspec_volatile [(const_int 0)] 10)]\n-  \"! TARGET_OPEN_VMS && ! TARGET_WINDOWS_NT\"\n+  [(unspec_volatile [(const_int 0)] UNSPECV_LDGP2)]\n+  \"\"\n   \"\")\n \n ;; The _mcount profiling hook has special calling conventions, and\n ;; does not clobber all the registers that a normal call would.  So\n ;; hide the fact this is a call at all.\n \n (define_insn \"prologue_mcount\"\n-  [(unspec_volatile [(const_int 0)] 8)]\n+  [(unspec_volatile [(const_int 0)] UNSPECV_MCOUNT)]\n   \"\"\n   \"lda $28,_mcount\\;jsr $28,($28),_mcount\"\n   [(set_attr \"type\" \"multi\")\n@@ -5906,7 +5914,8 @@\n (define_insn \"nt_lda\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(unspec:DI [(match_dup 0)\n-\t\t    (match_operand:DI 1 \"const_int_operand\" \"n\")] 6))]\n+\t\t    (match_operand:DI 1 \"const_int_operand\" \"n\")]\n+\t\t   UNSPEC_NT_LDA))]\n   \"\"\n   \"lda %0,%1(%0)\")\n \n@@ -5940,27 +5949,28 @@\n ;; that register renaming cannot foil our cunning plan with $27.\n (define_insn \"builtin_longjmp_internal\"\n   [(set (pc)\n-\t(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"c\")] 3))]\n+\t(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"c\")]\n+\t\t\t UNSPECV_LONGJMP))]\n   \"\"\n   \"jmp $31,(%0),0\"\n   [(set_attr \"type\" \"ibr\")])\n \n (define_insn \"*builtin_setjmp_receiver_sub_label\"\n-  [(unspec_volatile [(label_ref (match_operand 0 \"\" \"\"))] 2)]\n+  [(unspec_volatile [(label_ref (match_operand 0 \"\" \"\"))] UNSPECV_SETJMPR)]\n   \"! TARGET_OPEN_VMS && ! TARGET_WINDOWS_NT && TARGET_AS_CAN_SUBTRACT_LABELS\"\n   \"\\\\n$LSJ%=:\\;ldgp $29,$LSJ%=-%l0($27)\"\n   [(set_attr \"length\" \"8\")\n    (set_attr \"type\" \"multi\")])\n \n (define_insn \"builtin_setjmp_receiver\"\n-  [(unspec_volatile [(label_ref (match_operand 0 \"\" \"\"))] 2)]\n+  [(unspec_volatile [(label_ref (match_operand 0 \"\" \"\"))] UNSPECV_SETJMPR)]\n   \"! TARGET_OPEN_VMS && ! TARGET_WINDOWS_NT\"\n   \"br $29,$LSJ%=\\\\n$LSJ%=:\\;ldgp $29,0($29)\"\n   [(set_attr \"length\" \"12\")\n    (set_attr \"type\" \"multi\")])\n \n (define_expand \"exception_receiver\"\n-  [(unspec_volatile [(match_dup 0)] 7)]\n+  [(unspec_volatile [(match_dup 0)] UNSPECV_EHR)]\n   \"! TARGET_OPEN_VMS && ! TARGET_WINDOWS_NT\"\n   \"\n {\n@@ -5971,7 +5981,7 @@\n }\")\n \n (define_insn \"*exception_receiver_1\"\n-  [(unspec_volatile [(const_int 0)] 7)]\n+  [(unspec_volatile [(const_int 0)] UNSPECV_EHR)]\n   \"! TARGET_LD_BUGGY_LDGP\"\n   \"ldgp $29,0($26)\"\n   [(set_attr \"length\" \"8\")\n@@ -5982,23 +5992,24 @@\n ;; as dead code unless it is represented as a volatile unspec.\n \n (define_insn \"*exception_receiver_2\"\n-  [(unspec_volatile [(match_operand:DI 0 \"nonimmediate_operand\" \"r,m\")] 7)]\n+  [(unspec_volatile [(match_operand:DI 0 \"nonimmediate_operand\" \"r,m\")]\n+\t\t    UNSPECV_EHR)]\n   \"TARGET_LD_BUGGY_LDGP\"\n   \"@\n    mov %0,$29\n    ldq $29,%0\"\n   [(set_attr \"type\" \"ilog,ild\")])\n \n (define_expand \"nonlocal_goto_receiver\"\n-  [(unspec_volatile [(const_int 0)] 1)\n+  [(unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)\n    (set (reg:DI 27) (mem:DI (reg:DI 29)))\n-   (unspec_volatile [(const_int 0)] 1)\n+   (unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)\n    (use (reg:DI 27))]\n   \"TARGET_OPEN_VMS\"\n   \"\")\n \n (define_insn \"arg_home\"\n-  [(unspec [(const_int 0)] 0)\n+  [(unspec [(const_int 0)] UNSPEC_ARG_HOME)\n    (use (reg:DI 1))\n    (use (reg:DI 25))\n    (use (reg:DI 16))\n@@ -6026,7 +6037,7 @@\n ;; by alpha_reorg.\n \n (define_insn \"trapb\"\n-  [(unspec_volatile [(const_int 0)] 4)]\n+  [(unspec_volatile [(const_int 0)] UNSPECV_TRAPB)]\n   \"\"\n   \"trapb\"\n   [(set_attr \"type\" \"misc\")])\n@@ -6052,7 +6063,8 @@\n   \"unop\")\n \n (define_insn \"realign\"\n-  [(unspec_volatile [(match_operand 0 \"immediate_operand\" \"i\")] 6)]\n+  [(unspec_volatile [(match_operand 0 \"immediate_operand\" \"i\")]\n+\t\t    UNSPECV_REALIGN)]\n   \"\"\n   \".align %0 #realign\")\n "}]}