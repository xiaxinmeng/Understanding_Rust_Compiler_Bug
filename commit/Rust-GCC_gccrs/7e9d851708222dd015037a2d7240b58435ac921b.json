{"sha": "7e9d851708222dd015037a2d7240b58435ac921b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U5ZDg1MTcwODIyMmRkMDE1MDM3YTJkNzI0MGI1ODQzNWFjOTIxYg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2004-12-15T23:50:26Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2004-12-15T23:50:26Z"}, "message": "re PR target/18153 (-static-libgcc links in libunwind.so.7)\n\n2004-12-15  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/18153\n\t* configure.ac: Define HAVE_LD_STATIC_DYNAMIC if linker supports\n\t-Bstatic/-Bdynamic option.\n\t* config.in: Regenerated.\n\t* configure: Likewise.\n\n\t* gcc.c (init_spec): Pass -Bstatic/-Bdynamic to ld for static\n\t-lunwind if possible.\n\nFrom-SVN: r92229", "tree": {"sha": "ac4b87cfedeee7a5a423ccc6c144c8184c92684a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac4b87cfedeee7a5a423ccc6c144c8184c92684a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e9d851708222dd015037a2d7240b58435ac921b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e9d851708222dd015037a2d7240b58435ac921b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e9d851708222dd015037a2d7240b58435ac921b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e9d851708222dd015037a2d7240b58435ac921b/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19fabfe02e374c9c1fa4a7481d5e708a4f5bacbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19fabfe02e374c9c1fa4a7481d5e708a4f5bacbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19fabfe02e374c9c1fa4a7481d5e708a4f5bacbe"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "1cdc056bd6c6e0d8f7850074160457fa97a6adea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9d851708222dd015037a2d7240b58435ac921b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9d851708222dd015037a2d7240b58435ac921b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e9d851708222dd015037a2d7240b58435ac921b", "patch": "@@ -1,3 +1,14 @@\n+2004-12-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/18153\n+\t* configure.ac: Define HAVE_LD_STATIC_DYNAMIC if linker supports\n+\t-Bstatic/-Bdynamic option.\n+\t* config.in: Regenerated.\n+\t* configure: Likewise.\n+\n+\t* gcc.c (init_spec): Pass -Bstatic/-Bdynamic to ld for static\n+\t-lunwind if possible.\n+\n 2004-12-15  Daniel Berlin  <dberlin@dberlin.org>\n \t\n \t* cfgloop.c (flow_loops_dump): Don't print out levels."}, {"sha": "e3ae22b18bfc20db0c691dbc0758c5bd67c783eb", "filename": "gcc/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9d851708222dd015037a2d7240b58435ac921b/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9d851708222dd015037a2d7240b58435ac921b/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=7e9d851708222dd015037a2d7240b58435ac921b", "patch": "@@ -370,6 +370,9 @@\n    a read-write section. */\n #undef HAVE_LD_RO_RW_SECTION_MIXING\n \n+/* Define if your linker supports -Bstatic/-Bdynamic option. */\n+#undef HAVE_LD_STATIC_DYNAMIC\n+\n /* Define to 1 if you have the <limits.h> header file. */\n #undef HAVE_LIMITS_H\n "}, {"sha": "2c000521f372947f42fc27b57296422c68054a02", "filename": "gcc/configure", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9d851708222dd015037a2d7240b58435ac921b/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9d851708222dd015037a2d7240b58435ac921b/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=7e9d851708222dd015037a2d7240b58435ac921b", "patch": "@@ -13960,6 +13960,30 @@ fi\n \n # Target-specific assembler checks.\n \n+echo \"$as_me:$LINENO: checking linker -Bstatic/-Bdynamic option\" >&5\n+echo $ECHO_N \"checking linker -Bstatic/-Bdynamic option... $ECHO_C\" >&6\n+gcc_cv_ld_static_dynamic=no\n+if test $in_tree_ld = yes ; then\n+  if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 10; then\n+    gcc_cv_ld_static_dynamic=yes\n+  fi\n+elif test x$gcc_cv_ld != x; then\n+\t# Check if linker supports -Bstatic/-Bdynamic option\n+\tif $gcc_cv_ld --help 2>/dev/null | grep -- -Bstatic > /dev/null \\\n+\t  && $gcc_cv_ld --help 2>/dev/null | grep -- -Bdynamic > /dev/null; then\n+\t\tgcc_cv_ld_static_dynamic=yes\n+\tfi\n+fi\n+if test x\"$gcc_cv_ld_static_dynamic\" = xyes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_LD_STATIC_DYNAMIC 1\n+_ACEOF\n+\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_ld_static_dynamic\" >&5\n+echo \"${ECHO_T}$gcc_cv_ld_static_dynamic\" >&6\n+\n if test x\"$demangler_in_ld\" = xyes; then\n   echo \"$as_me:$LINENO: checking linker --demangle support\" >&5\n echo $ECHO_N \"checking linker --demangle support... $ECHO_C\" >&6"}, {"sha": "e1d5a23dc5c011ac55be712d776dbb170deaa7ee", "filename": "gcc/configure.ac", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9d851708222dd015037a2d7240b58435ac921b/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9d851708222dd015037a2d7240b58435ac921b/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=7e9d851708222dd015037a2d7240b58435ac921b", "patch": "@@ -2518,6 +2518,25 @@ fi\n \n # Target-specific assembler checks.\n \n+AC_MSG_CHECKING(linker -Bstatic/-Bdynamic option)\n+gcc_cv_ld_static_dynamic=no\n+if test $in_tree_ld = yes ; then\n+  if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 10; then\n+    gcc_cv_ld_static_dynamic=yes\n+  fi\n+elif test x$gcc_cv_ld != x; then\n+\t# Check if linker supports -Bstatic/-Bdynamic option\n+\tif $gcc_cv_ld --help 2>/dev/null | grep -- -Bstatic > /dev/null \\\n+\t  && $gcc_cv_ld --help 2>/dev/null | grep -- -Bdynamic > /dev/null; then\n+\t\tgcc_cv_ld_static_dynamic=yes\n+\tfi\n+fi\n+if test x\"$gcc_cv_ld_static_dynamic\" = xyes; then\n+\tAC_DEFINE(HAVE_LD_STATIC_DYNAMIC, 1,\n+[Define if your linker supports -Bstatic/-Bdynamic option.])\n+fi\n+AC_MSG_RESULT($gcc_cv_ld_static_dynamic)\n+\n if test x\"$demangler_in_ld\" = xyes; then\n   AC_MSG_CHECKING(linker --demangle support)\n   gcc_cv_ld_demangle=no"}, {"sha": "27c394099bda54fb4974114eb0a47feb508b7f56", "filename": "gcc/gcc.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9d851708222dd015037a2d7240b58435ac921b/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9d851708222dd015037a2d7240b58435ac921b/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=7e9d851708222dd015037a2d7240b58435ac921b", "patch": "@@ -1715,7 +1715,11 @@ init_spec (void)\n \t\t\t    \"-lgcc\",\n \t\t\t    \"-lgcc_eh\"\n #ifdef USE_LIBUNWIND_EXCEPTIONS\n+# ifdef HAVE_LD_STATIC_DYNAMIC\n+\t\t\t    \" %{!static:-Bstatic} -lunwind %{!static:-Bdynamic}\"\n+# else\n \t\t\t    \" -lunwind\"\n+# endif\n #endif\n \t\t\t    );\n "}]}