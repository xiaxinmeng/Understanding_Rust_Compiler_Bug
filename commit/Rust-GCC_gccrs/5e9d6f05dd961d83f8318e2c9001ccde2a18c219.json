{"sha": "5e9d6f05dd961d83f8318e2c9001ccde2a18c219", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU5ZDZmMDVkZDk2MWQ4M2Y4MzE4ZTJjOTAwMWNjZGUyYTE4YzIxOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T11:37:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T11:37:33Z"}, "message": "[multiple changes]\n\n2014-11-20  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb, exp_dbug.adb, sem_ch13.adb: Minor reformatting.\n\n2014-11-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* einfo.ads: Fix minor typo in comment.\n\nFrom-SVN: r217844", "tree": {"sha": "b4fbea03b3ea47af7f23bb7474f29aaa92cc0704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4fbea03b3ea47af7f23bb7474f29aaa92cc0704"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e9d6f05dd961d83f8318e2c9001ccde2a18c219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e9d6f05dd961d83f8318e2c9001ccde2a18c219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e9d6f05dd961d83f8318e2c9001ccde2a18c219", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e9d6f05dd961d83f8318e2c9001ccde2a18c219/comments", "author": null, "committer": null, "parents": [{"sha": "73e5aa55f9fe667208115d5b3d68e2ca449e929d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73e5aa55f9fe667208115d5b3d68e2ca449e929d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73e5aa55f9fe667208115d5b3d68e2ca449e929d"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "244c744747fe58a563f5615a4113aeb46fffa90a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9d6f05dd961d83f8318e2c9001ccde2a18c219/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9d6f05dd961d83f8318e2c9001ccde2a18c219/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5e9d6f05dd961d83f8318e2c9001ccde2a18c219", "patch": "@@ -1,3 +1,11 @@\n+2014-11-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb, exp_dbug.adb, sem_ch13.adb: Minor reformatting.\n+\n+2014-11-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* einfo.ads: Fix minor typo in comment.\n+\n 2014-11-20  Robert Dewar  <dewar@adacore.com>\n \n \t* inline.adb, sem_util.adb: Minor reformatting."}, {"sha": "5af839f20d7ab0b5b5358571aa007f3a074429ab", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9d6f05dd961d83f8318e2c9001ccde2a18c219/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9d6f05dd961d83f8318e2c9001ccde2a18c219/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5e9d6f05dd961d83f8318e2c9001ccde2a18c219", "patch": "@@ -4159,7 +4159,7 @@ package Einfo is\n --       the full view of a private type T is derived from another private type\n --       with discriminants Td, the full view of T is also private, and there\n --       is no way to attach to it a further full view that would convey the\n---       structure of T to the backend. The Underlying_Full_ View is an\n+--       structure of T to the backend. The Underlying_Full_View is an\n --       attribute of the full view that is a subtype of Td with the same\n --       constraint as the declaration for T. The declaration for this subtype\n --       is built at the point of the declaration of T, either as completion,"}, {"sha": "80bf4ed235a77b3aeb6b62626e9ce38de96ffaa6", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9d6f05dd961d83f8318e2c9001ccde2a18c219/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9d6f05dd961d83f8318e2c9001ccde2a18c219/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=5e9d6f05dd961d83f8318e2c9001ccde2a18c219", "patch": "@@ -134,8 +134,9 @@ package body Exp_Dbug is\n    --  used to determine whether encoding is required for a discrete type.\n \n    function Is_Handled_Scale_Factor (U : Ureal) return Boolean;\n-   --  Determine whether the back-end can handle some scale factor. When it\n-   --  cannot, we have to output a GNAT encoding for the correspondig type.\n+   --  The argument U is the Small_Value of a fixed-point type. This function\n+   --  determines whether the back-end can handle this scale factor. When it\n+   --  cannot, we have to output a GNAT encoding for the corresponding type.\n \n    procedure Output_Homonym_Numbers_Suffix;\n    --  If homonym numbers are stored, then output them into Name_Buffer\n@@ -547,17 +548,17 @@ package body Exp_Dbug is\n    begin\n       --  Keep in sync with gigi (see E_*_Fixed_Point_Type handling in\n       --  decl.c:gnat_to_gnu_entity).\n+\n       if UI_Eq (Numerator (U), Uint_1) then\n-         if Rbase (U) = 2\n-            or else Rbase (U) = 10\n-         then\n+         if Rbase (U) = 2 or else Rbase (U) = 10 then\n             return True;\n          end if;\n       end if;\n \n       return\n         (UI_Is_In_Int_Range (Norm_Num (U))\n-         and then UI_Is_In_Int_Range (Norm_Den (U)));\n+           and then\n+         UI_Is_In_Int_Range (Norm_Den (U)));\n    end Is_Handled_Scale_Factor;\n \n    ----------------------\n@@ -622,9 +623,8 @@ package body Exp_Dbug is\n       --  know the back-end will not be able to handle the scale factor.\n \n       if Is_Fixed_Point_Type (E)\n-           and then\n-         (GNAT_Encodings /= DWARF_GNAT_Encodings_Minimal\n-            or else not Is_Handled_Scale_Factor (Small_Value (E)))\n+        and then (GNAT_Encodings /= DWARF_GNAT_Encodings_Minimal\n+                   or else not Is_Handled_Scale_Factor (Small_Value (E)))\n       then\n          Get_External_Name (E, True, \"XF_\");\n          Add_Real_To_Buffer (Delta_Value (E));"}, {"sha": "332c1ddc86f340fcbe47cd9fc45c9d8630c4253f", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9d6f05dd961d83f8318e2c9001ccde2a18c219/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9d6f05dd961d83f8318e2c9001ccde2a18c219/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=5e9d6f05dd961d83f8318e2c9001ccde2a18c219", "patch": "@@ -7701,15 +7701,13 @@ package body Freeze is\n \n       if Is_Base_Type (T)\n         and then (Is_Array_Type (T)\n-                    or else\n-                  (Is_Record_Type (T)\n-                     and then not (Is_Tagged_Type (T)\n-                                     and then\n-                                   Is_Derived_Type (T))))\n+                   or else (Is_Record_Type (T)\n+                             and then not (Is_Tagged_Type (T)\n+                                            and then Is_Derived_Type (T))))\n       then\n          if ((Bytes_Big_Endian and then SSO_Set_Low_By_Default (T))\n                or else\n-             ((not Bytes_Big_Endian) and then SSO_Set_High_By_Default (T)))\n+            ((not Bytes_Big_Endian) and then SSO_Set_High_By_Default (T)))\n \n            --  For a record type, if native bit order is specified explicitly,\n            --  then never set reverse SSO from default."}, {"sha": "0804fa036337d6305522829906697c0a4a2dc992", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9d6f05dd961d83f8318e2c9001ccde2a18c219/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9d6f05dd961d83f8318e2c9001ccde2a18c219/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=5e9d6f05dd961d83f8318e2c9001ccde2a18c219", "patch": "@@ -3798,8 +3798,7 @@ package body Sem_Ch13 is\n                      (\"variable indexing must return a reference type\");\n                   return;\n \n-               elsif Is_Access_Constant\n-                       (Etype (First_Discriminant (Ret_Type)))\n+               elsif Is_Access_Constant (Etype (First_Discriminant (Ret_Type)))\n                then\n                   Illegal_Indexing\n                     (\"variable indexing must return an access to variable\");"}]}