{"sha": "fa1a41446fdd23107738168d32eae9a7e91e22dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmExYTQxNDQ2ZmRkMjMxMDc3MzgxNjhkMzJlYWU5YTdlOTFlMjJkYw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-01-05T23:53:29Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-01-05T23:53:29Z"}, "message": "Add smaxv2di3, umaxv2di3, sminv2di3 and uminv2di3\n\ngcc/\n\n2010-01-05  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/42542\n\t* config/i386/sse.md (smaxv2di3): New.\n\t(umaxv2di3): Likewise.\n\t(sminv2di3): Likewise.\n\t(uminv2di3): Likewise.\n\ngcc/testsuite/\n\n2010-01-05  H.J. Lu  <hongjiu.lu@intel.com>\n \n\tPR target/42542\n\t* gcc.target/i386/pr42542-4.c: New.\n\t* gcc.target/i386/pr42542-4a.c: Likewise.\n\t* gcc.target/i386/pr42542-5.c: Likewise.\n\t* gcc.target/i386/pr42542-5a.c: Likewise.\n\nFrom-SVN: r155666", "tree": {"sha": "7a299f31f33629f228ef70eeb5bc7552dd389b22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a299f31f33629f228ef70eeb5bc7552dd389b22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa1a41446fdd23107738168d32eae9a7e91e22dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa1a41446fdd23107738168d32eae9a7e91e22dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa1a41446fdd23107738168d32eae9a7e91e22dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa1a41446fdd23107738168d32eae9a7e91e22dc/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "208384fdd27fc1d15c7bc0be8c1f4d8cf8ca6637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/208384fdd27fc1d15c7bc0be8c1f4d8cf8ca6637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/208384fdd27fc1d15c7bc0be8c1f4d8cf8ca6637"}], "stats": {"total": 244, "additions": 244, "deletions": 0}, "files": [{"sha": "123a62ad71c7277e6366df61bf3dd23cea721a29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa1a41446fdd23107738168d32eae9a7e91e22dc", "patch": "@@ -1,3 +1,11 @@\n+2010-01-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/42542\n+\t* config/i386/sse.md (smaxv2di3): New.\n+\t(umaxv2di3): Likewise.\n+\t(sminv2di3): Likewise.\n+\t(uminv2di3): Likewise.\n+\n 2010-01-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/42564"}, {"sha": "54befb4b1398f2680e7ab138e520f00ef8e732aa", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=fa1a41446fdd23107738168d32eae9a7e91e22dc", "patch": "@@ -6134,6 +6134,26 @@\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_expand \"smaxv2di3\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"\")\n+\t(smax:V2DI (match_operand:V2DI 1 \"register_operand\" \"\")\n+\t\t   (match_operand:V2DI 2 \"register_operand\" \"\")))]\n+  \"TARGET_SSE4_2\"\n+{\n+  rtx xops[6];\n+  bool ok;\n+\n+  xops[0] = operands[0];\n+  xops[1] = operands[1];\n+  xops[2] = operands[2];\n+  xops[3] = gen_rtx_GT (VOIDmode, operands[1], operands[2]);\n+  xops[4] = operands[1];\n+  xops[5] = operands[2];\n+  ok = ix86_expand_int_vcond (xops);\n+  gcc_assert (ok);\n+  DONE;\n+})\n+\n (define_expand \"umaxv4si3\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"\")\n \t(umax:V4SI (match_operand:V4SI 1 \"register_operand\" \"\")\n@@ -6170,6 +6190,26 @@\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_expand \"umaxv2di3\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"\")\n+\t(umax:V2DI (match_operand:V2DI 1 \"register_operand\" \"\")\n+\t\t   (match_operand:V2DI 2 \"register_operand\" \"\")))]\n+  \"TARGET_SSE4_2\"\n+{\n+  rtx xops[6];\n+  bool ok;\n+\n+  xops[0] = operands[0];\n+  xops[1] = operands[1];\n+  xops[2] = operands[2];\n+  xops[3] = gen_rtx_GTU (VOIDmode, operands[1], operands[2]);\n+  xops[4] = operands[1];\n+  xops[5] = operands[2];\n+  ok = ix86_expand_int_vcond (xops);\n+  gcc_assert (ok);\n+  DONE;\n+})\n+\n (define_expand \"smin<mode>3\"\n   [(set (match_operand:SSEMODE14 0 \"register_operand\" \"\")\n \t(smin:SSEMODE14 (match_operand:SSEMODE14 1 \"register_operand\" \"\")\n@@ -6195,6 +6235,26 @@\n     }\n })\n \n+(define_expand \"sminv2di3\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"\")\n+\t(smin:V2DI (match_operand:V2DI 1 \"register_operand\" \"\")\n+\t\t   (match_operand:V2DI 2 \"register_operand\" \"\")))]\n+  \"TARGET_SSE4_2\"\n+{\n+  rtx xops[6];\n+  bool ok;\n+\n+  xops[0] = operands[0];\n+  xops[1] = operands[2];\n+  xops[2] = operands[1];\n+  xops[3] = gen_rtx_GT (VOIDmode, operands[1], operands[2]);\n+  xops[4] = operands[1];\n+  xops[5] = operands[2];\n+  ok = ix86_expand_int_vcond (xops);\n+  gcc_assert (ok);\n+  DONE;\n+})\n+\n (define_expand \"umin<mode>3\"\n   [(set (match_operand:SSEMODE24 0 \"register_operand\" \"\")\n \t(umin:SSEMODE24 (match_operand:SSEMODE24 1 \"register_operand\" \"\")\n@@ -6220,6 +6280,26 @@\n     }\n })\n \n+(define_expand \"uminv2di3\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"\")\n+\t(umin:V2DI (match_operand:V2DI 1 \"register_operand\" \"\")\n+\t\t   (match_operand:V2DI 2 \"register_operand\" \"\")))]\n+  \"TARGET_SSE4_2\"\n+{\n+  rtx xops[6];\n+  bool ok;\n+\n+  xops[0] = operands[0];\n+  xops[1] = operands[2];\n+  xops[2] = operands[1];\n+  xops[3] = gen_rtx_GTU (VOIDmode, operands[1], operands[2]);\n+  xops[4] = operands[1];\n+  xops[5] = operands[2];\n+  ok = ix86_expand_int_vcond (xops);\n+  gcc_assert (ok);\n+  DONE;\n+})\n+\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n ;; Parallel integral comparisons"}, {"sha": "e9c215d64e50725d5fae940bd7a4973f80e60123", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa1a41446fdd23107738168d32eae9a7e91e22dc", "patch": "@@ -1,3 +1,11 @@\n+2010-01-05  H.J. Lu  <hongjiu.lu@intel.com>\n+ \n+\tPR target/42542\n+\t* gcc.target/i386/pr42542-4.c: New.\n+\t* gcc.target/i386/pr42542-4a.c: Likewise.\n+\t* gcc.target/i386/pr42542-5.c: Likewise.\n+\t* gcc.target/i386/pr42542-5a.c: Likewise.\n+\n 2010-01-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.dg/tls/opt-15.c: New test."}, {"sha": "afb298989c92041e6019ed68627421b99a575482", "filename": "gcc/testsuite/gcc.target/i386/pr42542-4.c", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-4.c?ref=fa1a41446fdd23107738168d32eae9a7e91e22dc", "patch": "@@ -0,0 +1,70 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target sse4 } */\n+/* { dg-options \"-O1 -msse4.2 -ftree-vectorize\" } */\n+\n+#include \"sse4_2-check.h\"\n+\n+unsigned long long v1[] __attribute__ ((aligned(16))) =\n+{\n+  0x8000000000000000ULL, 2,\n+  3, 0xd000000000000000ULL\n+};\n+unsigned long long v2[] __attribute__ ((aligned(16))) =\n+{\n+  4, 0xb000000000000000ULL,\n+  0xf000000000000000ULL, 6\n+};\n+\n+unsigned long long max[] =\n+{\n+  0x8000000000000000ULL, 0xb000000000000000ULL,\n+  0xf000000000000000ULL, 0xd000000000000000ULL\n+};\n+\n+unsigned long long min[] =\n+{\n+  4, 2,\n+  3, 6\n+};\n+\n+unsigned long long res[4] __attribute__ ((aligned(16)));\n+\n+extern void abort (void);\n+\n+void\n+find_max (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 4; i++)\n+    res[i] = v1[i] < v2[i] ? v2[i] : v1[i];\n+}\n+\n+void\n+find_min (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 4; i++)\n+    res[i] = v1[i] > v2[i] ? v2[i] : v1[i];\n+}\n+\n+static void\n+sse4_2_test (void)\n+{\n+  int i;\n+  int err = 0;\n+\n+  find_max ();\n+  for (i = 0; i < 4; i++)\n+    if (res[i] != max[i])\n+      err++;\n+\n+  find_min ();\n+  for (i = 0; i < 4; i++)\n+    if (res[i] != min[i])\n+      err++;\n+\n+  if (err)\n+    abort ();\n+}"}, {"sha": "bea6c1f5043568b77abf40ce9614e6cdb4910610", "filename": "gcc/testsuite/gcc.target/i386/pr42542-4a.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-4a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-4a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-4a.c?ref=fa1a41446fdd23107738168d32eae9a7e91e22dc", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -msse4.2 -ftree-vectorize\" } */\n+\n+#include \"pr42542-4.c\"\n+\n+/* { dg-final { scan-assembler \"pcmpgtq\" } } */"}, {"sha": "7d77a18ae372770d6ccee8420b1e87675704d352", "filename": "gcc/testsuite/gcc.target/i386/pr42542-5.c", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-5.c?ref=fa1a41446fdd23107738168d32eae9a7e91e22dc", "patch": "@@ -0,0 +1,66 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target sse4 } */\n+/* { dg-options \"-O1 -msse4.2 -ftree-vectorize\" } */\n+\n+#include \"sse4_2-check.h\"\n+\n+long long v1[] __attribute__ ((aligned(16))) =\n+{\n+  -3, 2, 3, -4 \n+};\n+long long v2[] __attribute__ ((aligned(16))) =\n+{\n+  4, -10, -20, 6\n+};\n+\n+long long max[] =\n+{\n+  4, 2, 3, 6\n+};\n+\n+long long min[] =\n+{\n+  -3, -10, -20, -4\n+};\n+\n+long long res[4] __attribute__ ((aligned(16)));\n+\n+extern void abort (void);\n+\n+void\n+find_max (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 4; i++)\n+    res[i] = v1[i] < v2[i] ? v2[i] : v1[i];\n+}\n+\n+void\n+find_min (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 4; i++)\n+    res[i] = v1[i] > v2[i] ? v2[i] : v1[i];\n+}\n+\n+static void\n+sse4_2_test (void)\n+{\n+  int i;\n+  int err = 0;\n+\n+  find_max ();\n+  for (i = 0; i < 4; i++)\n+    if (res[i] != max[i])\n+      err++;\n+\n+  find_min ();\n+  for (i = 0; i < 4; i++)\n+    if (res[i] != min[i])\n+      err++;\n+\n+  if (err)\n+    abort ();\n+}"}, {"sha": "bba0a118ed58b0484c39bec5692216f0f80222eb", "filename": "gcc/testsuite/gcc.target/i386/pr42542-5a.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-5a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1a41446fdd23107738168d32eae9a7e91e22dc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-5a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-5a.c?ref=fa1a41446fdd23107738168d32eae9a7e91e22dc", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -msse4.2 -ftree-vectorize\" } */\n+\n+#include \"pr42542-5.c\"\n+\n+/* { dg-final { scan-assembler \"pcmpgtq\" } } */"}]}