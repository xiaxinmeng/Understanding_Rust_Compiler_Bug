{"sha": "7a761ae658967dab59dca691373e3ea10707217a", "node_id": "C_kwDOANBUbNoAKDdhNzYxYWU2NTg5NjdkYWI1OWRjYTY5MTM3M2UzZWExMDcwNzIxN2E", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-19T00:16:32Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-19T00:16:32Z"}, "message": "Daily bump.", "tree": {"sha": "7a8813599015182d4fa785f0800af996d2e68691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a8813599015182d4fa785f0800af996d2e68691"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a761ae658967dab59dca691373e3ea10707217a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a761ae658967dab59dca691373e3ea10707217a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a761ae658967dab59dca691373e3ea10707217a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a761ae658967dab59dca691373e3ea10707217a/comments", "author": null, "committer": null, "parents": [{"sha": "5ce3c003df29b4a1845936f639f04ff0548ff409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ce3c003df29b4a1845936f639f04ff0548ff409", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ce3c003df29b4a1845936f639f04ff0548ff409"}], "stats": {"total": 582, "additions": 581, "deletions": 1}, "files": [{"sha": "fc661288abe4e6cddebc997b7f33bc01e1087e62", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a761ae658967dab59dca691373e3ea10707217a/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a761ae658967dab59dca691373e3ea10707217a/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=7a761ae658967dab59dca691373e3ea10707217a", "patch": "@@ -1,3 +1,7 @@\n+2022-01-18  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\t* MAINTAINERS: Update my email address.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* MAINTAINERS: Rename .c names to .cc."}, {"sha": "ab74120fea5c74874d84917ed2b26544ce97d0cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 228, "deletions": 0, "changes": 228, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a761ae658967dab59dca691373e3ea10707217a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a761ae658967dab59dca691373e3ea10707217a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a761ae658967dab59dca691373e3ea10707217a", "patch": "@@ -1,3 +1,231 @@\n+2022-01-18  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* ipa-split.cc (visit_bb): Fix comment before the\n+\twarning/error attribute checking code.\n+\n+2022-01-18  David Faust  <david.faust@oracle.com>\n+\n+\t* config/bpf/coreout.cc (bpf_core_reloc_add): Do not account\n+\tfor base strtab offset yet as it may change.\n+\t(output_asm_btfext_core_reloc): Do so here instead.\n+\t(output_btfext_core_sections): Likewise.\n+\n+2022-01-18  David Faust  <david.faust@oracle.com>\n+\n+\t* config/bpf/coreout.cc (output_btfext_header): Account for\n+\t4-byte record size in core_relo_len.\n+\t(output_btfext_core_sections): Only write record size once.\n+\t* config/bpf/coreout.h (btf_ext_section_header): Delete unused\n+\tmember.\n+\n+2022-01-18  Maciej W. Rozycki  <macro@embecosm.com>\n+\n+\t* common/config/riscv/riscv-common.cc\n+\t(riscv_subset_list::parse_multiletter_ext): Move pointer\n+\tarithmetic ahead of `free'.\n+\n+2022-01-18  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104007\n+\t* gimplify.cc (gimple_push_cleanup): Handle eh_only in conditional\n+\tcontext.\n+\n+2022-01-18  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tPR middle-end/103163\n+\t* emit-rtl.cc (init_emit_regs): Initialize stack_limit_rtx here...\n+\t(init_emit_once): ...not here.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* collect2.cc (scan_libraries): Fix -Wformat-diag issues.\n+\t* config/aarch64/aarch64-builtins.cc (aarch64_simd_expand_builtin): Likewise.\n+\t* config/arc/arc.md: Likewise.\n+\t* config/avr/avr.cc (avr_section_type_flags): Likewise.\n+\t* config/bfin/bfin.cc (bfin_option_override): Likewise.\n+\t(bfin_handle_longcall_attribute): Likewise.\n+\t* config/cris/cris.h (FUNCTION_PROFILER): Likewise.\n+\t* config/frv/frv.cc (frv_expand_builtin): Likewise.\n+\t* config/ia64/ia64-c.cc (ia64_hpux_handle_builtin_pragma): Likewise.\n+\t* config/iq2000/iq2000.cc (save_restore_insns): Likewise.\n+\t(iq2000_print_operand_address): Likewise.\n+\t(iq2000_print_operand): Likewise.\n+\t* config/m32c/m32c-pragma.cc (m32c_pragma_memregs): Likewise.\n+\t(m32c_pragma_address): Likewise.\n+\t* config/m68k/m68k.cc (m68k_handle_fndecl_attribute): Likewise.\n+\t* config/mips/mips.cc (mips_handle_interrupt_attr): Likewise.\n+\t(mips_set_compression_mode): Likewise.\n+\t* config/mmix/mmix.cc (mmix_function_profiler): Likewise.\n+\t(mmix_print_operand): Likewise.\n+\t(mmix_output_shiftvalue_op_from_str): Likewise.\n+\t(mmix_output_shifted_value): Likewise.\n+\t* config/msp430/driver-msp430.cc (msp430_select_hwmult_lib): Likewise.\n+\t* config/msp430/msp430.cc (msp430_option_override): Likewise.\n+\t(msp430_attr): Likewise.\n+\t(msp430_expand_delay_cycles): Likewise.\n+\t(msp430_expand_builtin): Likewise.\n+\t* config/rs6000/aix73.h: Likewise.\n+\t* config/rs6000/rtems.h (INVALID_64BIT): Likewise.\n+\t* config/rx/rx.cc (rx_expand_builtin_mvtc): Likewise.\n+\t(valid_psw_flag): Likewise.\n+\t* config/sh/sh.cc (parse_validate_atomic_model_option): Likewise.\n+\t* config/stormy16/stormy16.cc (xstormy16_function_profiler): Likewise.\n+\t(xstormy16_expand_builtin_va_start): Likewise.\n+\t(xstormy16_handle_below100_attribute): Likewise.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/vms/vms-c.cc (vms_pragma_nostandard): Fix -Wformat-diag\n+\twarning.\n+\t(vms_pragma_standard): Likewise.\n+\t(vms_pragma_extern_prefix): Likewise.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/xtensa/xtensa.cc (print_operand): Fix warnings.\n+\t(print_operand_address): Likewise.\n+\t(xtensa_multibss_section_type_flags): Likewise.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/rs6000/rs6000-call.cc (rs6000_invalid_builtin): Change\n+\twording of an error message.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/v850/v850-c.cc (pop_data_area): Fix -Wformat-diag\n+\twarning.\n+\t(ghs_pragma_section): Likewise.\n+\t(ghs_pragma_interrupt): Likewise.\n+\t(ghs_pragma_starttda): Likewise.\n+\t(ghs_pragma_startsda): Likewise.\n+\t(ghs_pragma_startzda): Likewise.\n+\t(ghs_pragma_endtda): Likewise.\n+\t(ghs_pragma_endsda): Likewise.\n+\t(ghs_pragma_endzda): Likewise.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/nds32/nds32-intrinsic.cc (nds32_expand_builtin_impl):\n+\tFix warnings.\n+\t* config/nds32/nds32-intrinsic.md: Likewise.\n+\t* config/nds32/nds32-isr.cc (nds32_check_isr_attrs_conflict): Likewise.\n+\t* config/nds32/nds32.cc (nds32_print_operand): Likewise.\n+\t(nds32_insert_attributes): Likewise.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/nvptx/nvptx.cc (nvptx_goacc_validate_dims_1): Wrap\n+\tkeyword.\n+\t* config/nvptx/nvptx.md: Remove trailing dot.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* common/config/riscv/riscv-common.cc (riscv_subset_list::add):\n+\tWrap keywords with quotes and remove trailing dots.\n+\t(riscv_subset_list::parsing_subset_version): Likewise.\n+\t(riscv_subset_list::parse_std_ext): Likewise.\n+\t(riscv_subset_list::parse_multiletter_ext): Likewise.\n+\t* config/riscv/riscv.cc (riscv_handle_type_attribute): Likewise.\n+\n+2022-01-18  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* tree-vect-loop.cc (vect_estimate_min_profitable_iters): Pass new\n+\targument suggested_unroll_factor.\n+\t(vect_analyze_loop_costing): Likewise.\n+\t(_loop_vec_info::_loop_vec_info): Initialize new member\n+\tsuggested_unroll_factor.\n+\t(vect_determine_partial_vectors_and_peeling): Make epilogue of unrolled\n+\tmain loop use partial vectors.\n+\t(vect_analyze_loop_2): Pass and use new argument\n+\tsuggested_unroll_factor.\n+\t(vect_analyze_loop_1): Change to intialize local\n+\tsuggested_unroll_factor and use it.\n+\t(vectorizable_reduction): Don't use single_defuse_cycle when unrolling.\n+\t* tree-vectorizer.h (_loop_vec_info::_loop_vec_info): Add new member\n+\tsuggested_unroll_factor.\n+\t(vector_costs::vector_costs): Add new member m_suggested_unroll_factor.\n+\t(vector_costs::suggested_unroll_factor): New getter function.\n+\t(finish_cost): Set return argument suggested_unroll_factor.\n+\n+2022-01-18  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/104038\n+\t* doc/invoke.texi (relation-block-limit): New.\n+\t* params.opt (relation-block-limit): New.\n+\t* value-relation.cc (dom_oracle::register_relation): Check for NULL\n+\trecord before invoking transitive registery.\n+\t(dom_oracle::set_one_relation): Check limit before creating record.\n+\t(dom_oracle::register_transitives): Stop when no record created.\n+\t* value-relation.h (relation_chain_head::m_num_relations): New.\n+\n+2022-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/103989\n+\t* ipa-inline.cc (inline_small_functions): Do not enqueue call\n+\tedges originating in functions compiled with -Og.\n+\n+2022-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/103989\n+\t* passes.def (pass_all_optimizations_g): Remove pass_modref\n+\tand pass_local_pure_const.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/s390/s390.cc: Fix -Wformat-diag warnings.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/s390/s390-c.cc (s390_expand_overloaded_builtin): Wrap\n+\tkeyword in quotes.\n+\t(s390_resolve_overloaded_builtin): Remove trailing dot.\n+\t* config/s390/s390.cc (s390_const_operand_ok): Use - for range.\n+\t(s390_expand_builtin): Remove trailing dot.\n+\t(s390_emit_prologue): Likewise, use semicolon.\n+\t(s390_option_override_internal): Update keyword.\n+\t* varasm.cc (do_assemble_alias): Wrap keyword in quotes.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/rs6000/rs6000-call.cc (rs6000_expand_builtin): Wrap\n+\tkeywords and use %qs instead of %<%s%>.\n+\n+2022-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103987\n+\t* tree-ssa-dse.cc (dse_optimize_call): Properly guard modref\n+\tquery with a pointer check.\n+\n+2022-01-18  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/104005\n+\t* config/aarch64/aarch64.cc (aarch64_check_consecutive_mems):\n+\tWhen using MEM_EXPR, require the base to be a decl.\n+\n+2022-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* cgraph.h (struct cgraph_simd_clone_arg): Re-arrange fields to\n+\tavoid padding.\n+\t* function.h (struct function): Likewise.\n+\n+2022-01-18  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* doc/install.texi: Update prerequisites for GNAT\n+\n+2022-01-18  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR tree-optimization/101941\n+\t* ipa-split.cc (visit_bb): Disallow function calls where\n+\tthe function has either error or warning attribute.\n+\n+2022-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104064\n+\t* tree-vect-data-refs.cc (vect_analyze_data_ref_accesses): Check\n+\tDR_INIT fits in a signed HWI, represent the difference from the\n+\tfirst DR in unsigned.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* Makefile.in: Rename .c names to .cc."}, {"sha": "71126d3d29cc28007d8dc891985be7132d419b5c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a761ae658967dab59dca691373e3ea10707217a/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a761ae658967dab59dca691373e3ea10707217a/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=7a761ae658967dab59dca691373e3ea10707217a", "patch": "@@ -1 +1 @@\n-20220118\n+20220119"}, {"sha": "51bef01bfc6f371a735a44e19e9a1ecb08991ea7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a761ae658967dab59dca691373e3ea10707217a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a761ae658967dab59dca691373e3ea10707217a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7a761ae658967dab59dca691373e3ea10707217a", "patch": "@@ -1,3 +1,83 @@\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* adaint.c: Revert filename changes in comments.\n+\t* ctrl_c.c (dummy_handler): Likewise.\n+\t* gsocket.h: Likewise.\n+\t* init.c (__gnat_error_handler): Likewise.\n+\t* libgnarl/s-intman.ads: Likewise.\n+\t* libgnarl/s-osinte__android.ads: Likewise.\n+\t* libgnarl/s-osinte__darwin.ads: Likewise.\n+\t* libgnarl/s-osinte__hpux.ads: Likewise.\n+\t* libgnarl/s-osinte__linux.ads: Likewise.\n+\t* libgnarl/s-osinte__qnx.ads: Likewise.\n+\t* libgnarl/s-taskin.ads: Likewise.\n+\t* rtfinal.c: Likewise.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* Make-generated.in: Revert renaming changes.\n+\t* Makefile.rtl: Likewise.\n+\t* adadecode.cc: Moved to...\n+\t* adadecode.c: ...here.\n+\t* affinity.cc: Moved to...\n+\t* affinity.c: ...here.\n+\t* argv-lynxos178-raven-cert.cc: Moved to...\n+\t* argv-lynxos178-raven-cert.c: ...here.\n+\t* argv.cc: Moved to...\n+\t* argv.c: ...here.\n+\t* aux-io.cc: Moved to...\n+\t* aux-io.c: ...here.\n+\t* cio.cc: Moved to...\n+\t* cio.c: ...here.\n+\t* cstreams.cc: Moved to...\n+\t* cstreams.c: ...here.\n+\t* env.cc: Moved to...\n+\t* env.c: ...here.\n+\t* exit.cc: Moved to...\n+\t* exit.c: ...here.\n+\t* expect.cc: Moved to...\n+\t* expect.c: ...here.\n+\t* final.cc: Moved to...\n+\t* final.c: ...here.\n+\t* gcc-interface/Makefile.in:\n+\t* init.cc: Moved to...\n+\t* init.c: ...here.\n+\t* initialize.cc: Moved to...\n+\t* initialize.c: ...here.\n+\t* libgnarl/thread.cc: Moved to...\n+\t* libgnarl/thread.c: ...here.\n+\t* link.cc: Moved to...\n+\t* link.c: ...here.\n+\t* locales.cc: Moved to...\n+\t* locales.c: ...here.\n+\t* mkdir.cc: Moved to...\n+\t* mkdir.c: ...here.\n+\t* raise.cc: Moved to...\n+\t* raise.c: ...here.\n+\t* rtfinal.cc: Moved to...\n+\t* rtfinal.c: ...here.\n+\t* rtinit.cc: Moved to...\n+\t* rtinit.c: ...here.\n+\t* s-oscons-tmplt.c (CND): Revert renaming changes.\n+\t* seh_init.cc: Moved to...\n+\t* seh_init.c: ...here.\n+\t* sigtramp-armdroid.cc: Moved to...\n+\t* sigtramp-armdroid.c: ...here.\n+\t* sigtramp-ios.cc: Moved to...\n+\t* sigtramp-ios.c: ...here.\n+\t* sigtramp-qnx.cc: Moved to...\n+\t* sigtramp-qnx.c: ...here.\n+\t* sigtramp-vxworks.cc: Moved to...\n+\t* sigtramp-vxworks.c: ...here.\n+\t* socket.cc: Moved to...\n+\t* socket.c: ...here.\n+\t* tracebak.cc: Moved to...\n+\t* tracebak.c: ...here.\n+\t* version.cc: Moved to...\n+\t* version.c: ...here.\n+\t* vx_stack_info.cc: Moved to...\n+\t* vx_stack_info.c: ...here.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* Makefile.rtl: Rename .c names to .cc."}, {"sha": "df4a511f4631f0be405b5588372820ef89c38010", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a761ae658967dab59dca691373e3ea10707217a/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a761ae658967dab59dca691373e3ea10707217a/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=7a761ae658967dab59dca691373e3ea10707217a", "patch": "@@ -1,3 +1,19 @@\n+2022-01-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104089\n+\t* region-model-manager.cc\n+\t(region_model_manager::get_or_create_constant_svalue): Assert that\n+\twe have a CONSTANT_CLASS_P.\n+\t(region_model_manager::maybe_fold_unaryop): Only fold a constant\n+\twhen fold_unary's result is a constant or a cast of a constant.\n+\n+2022-01-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104062\n+\t* region-model-manager.cc\n+\t(region_model_manager::maybe_fold_sub_svalue): Avoid casting to\n+\tNULL type when folding access to repeated svalue.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* analyzer.cc (is_special_named_call_p): Rename .c names to .cc."}, {"sha": "7dee5bf7672dc875c83a73043f63f73ba5105290", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a761ae658967dab59dca691373e3ea10707217a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a761ae658967dab59dca691373e3ea10707217a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7a761ae658967dab59dca691373e3ea10707217a", "patch": "@@ -1,3 +1,25 @@\n+2022-01-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/104055\n+\t* constexpr.cc (cxx_eval_outermost_constant_expr): If t is a\n+\tTARGET_EXPR with TARGET_EXPR_CLEANUP, use get_target_expr rather\n+\tthan get_target_expr_sfinae with tf_no_cleanup, and don't set\n+\tTREE_CONSTANT.\n+\n+2022-01-18  Jason Merrill  <jason@redhat.com>\n+\t    Jakub Jelinek   <jakub@redhat.com>\n+\n+\tPR c++/104025\n+\t* parser.cc (saved_token_sentinel::rollback): Call\n+\tcp_lexer_set_source_position.\n+\t(~saved_token_sentinel): Call rollback.\n+\n+2022-01-18  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/104074\n+\t* pt.cc (invalid_nontype_parm_type_p): Use WILDCARD_TYPE_P so\n+\tthat we return false for DEPENDENT_OPERATOR_TYPE too.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* Make-lang.in: Rename .c names to .cc."}, {"sha": "e0442304f5bf8c2c6f76ca31389cdef6272c964c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a761ae658967dab59dca691373e3ea10707217a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a761ae658967dab59dca691373e3ea10707217a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7a761ae658967dab59dca691373e3ea10707217a", "patch": "@@ -1,3 +1,9 @@\n+2022-01-18  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/103692\n+\t* array.cc (gfc_expand_constructor): Handle zero-sized array\n+\tconstructors.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* check.cc (gfc_check_all_any): Rename .c names to .cc."}, {"sha": "d71a99e8d4fb2a042cfd0d03592f0fd6e38c5e65", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a761ae658967dab59dca691373e3ea10707217a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a761ae658967dab59dca691373e3ea10707217a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7a761ae658967dab59dca691373e3ea10707217a", "patch": "@@ -1,3 +1,116 @@\n+2022-01-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/104055\n+\t* g++.dg/cpp2a/consteval27.C: New test.\n+\n+2022-01-18  Jason Merrill  <jason@redhat.com>\n+\n+\t* lib/g++-dg.exp: Change 2a to 20.\n+\n+2022-01-18  Jason Merrill  <jason@redhat.com>\n+\t    Jakub Jelinek   <jakub@redhat.com>\n+\n+\tPR c++/104025\n+\t* g++.dg/warn/pr104025.C: New test.\n+\n+2022-01-18  David Faust  <david.faust@oracle.com>\n+\n+\t* gcc.target/bpf/core-section-1.c: Adjust expected record size\n+\toccurrences.\n+\n+2022-01-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104089\n+\t* gcc.dg/analyzer/pr104089.c: New test.\n+\n+2022-01-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104062\n+\t* gcc.dg/analyzer/pr104062.c: New test.\n+\n+2022-01-18  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/104074\n+\t* g++.dg/cpp1z/nontype-auto20.C: New test.\n+\n+2022-01-18  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/103692\n+\t* gfortran.dg/pr102520.f90: Adjust error messages.\n+\t* gfortran.dg/pr103692.f90: New test.\n+\n+2022-01-18  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104007\n+\t* g++.dg/eh/new2.C: New test.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.target/powerpc/bfp/scalar-extract-exp-5.c: Update scanned\n+\tpattern.\n+\t* gcc.target/powerpc/bfp/scalar-extract-sig-5.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-11.c: Likewise.\n+\n+2022-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/103989\n+\t* g++.dg/opt/pr103989.C: New testcase.\n+\n+2022-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103987\n+\t* gcc.dg/torture/pr103987.c: New testcase.\n+\n+2022-01-18  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/104005\n+\t* gcc.target/aarch64/pr104005.c: New test.\n+\n+2022-01-18  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR tree-optimization/101941\n+\t* gcc.c-torture/compile/pr101941-1.c: New test.\n+\t* gcc.dg/tree-ssa/pr101941-1.c: New test.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.src/maintainers.exp: Use\n+\tcheck_effective_target_python3_module for checking of unicode\n+\tmodule.\n+\t* lib/target-supports.exp: Add\n+\tcheck_effective_target_python3_module.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.misc-tests/options.exp: Include renamed file.\n+\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.src/maintainers.exp: Use the new\n+\tcheck_effective_target_recent_python3.\n+\t* lib/target-supports.exp: Check for Python3 version >= 3.6.\n+\n+2022-01-18  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/103973\n+\t* g++.target/i386/pr103973-1.C: Change scan-assembler from\n+\t\"\\tucomisd\" to \"\\t\\[v\\]?ucomisd\".\n+\t* g++.target/i386/pr103973-11.C: Ditto.\n+\t* g++.target/i386/pr103973-13.C: Ditto.\n+\t* g++.target/i386/pr103973-15.C: Ditto.\n+\t* g++.target/i386/pr103973-3.C: Ditto.\n+\t* g++.target/i386/pr103973-5.C: Ditto.\n+\t* g++.target/i386/pr103973-7.C: Ditto.\n+\t* g++.target/i386/pr103973-9.C: Ditto.\n+\t* gcc.target/i386/pr103973-1.c: Ditto.\n+\t* gcc.target/i386/pr103973-11.c: Ditto.\n+\t* gcc.target/i386/pr103973-13.c: Ditto.\n+\t* gcc.target/i386/pr103973-15.c: Ditto.\n+\t* gcc.target/i386/pr103973-3.c: Ditto.\n+\t* gcc.target/i386/pr103973-5.c: Ditto.\n+\t* gcc.target/i386/pr103973-7.c: Ditto.\n+\t* gcc.target/i386/pr103973-9.c: Ditto.\n+\n 2022-01-17  qing zhao  <qing.zhao@oracle.com>\n \n \t* gcc.dg/auto-init-uninit-16.c (testfunc): Delete xfail to reflect"}, {"sha": "512bbabadaac489142db85b19d6c2fb10c8ee4d3", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a761ae658967dab59dca691373e3ea10707217a/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a761ae658967dab59dca691373e3ea10707217a/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=7a761ae658967dab59dca691373e3ea10707217a", "patch": "@@ -1,3 +1,10 @@\n+2022-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* include/line-map.h (class line_maps): Re-arrange fields\n+\tto minimize padding.\n+\t(class rich_location): Likewise.\n+\t* line-map.cc (rich_location::rich_location): Adjust.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* Makefile.in: Rename .c names to .cc."}, {"sha": "0c731ddcfef3dbd879cbe0ef869fe1d0dbe0f04e", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a761ae658967dab59dca691373e3ea10707217a/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a761ae658967dab59dca691373e3ea10707217a/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=7a761ae658967dab59dca691373e3ea10707217a", "patch": "@@ -1,3 +1,23 @@\n+2022-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* testsuite/libgomp.oacc-c++/privatized-ref-2.C: Update keyword\n+\tin dg-warning.\n+\t* testsuite/libgomp.oacc-c++/privatized-ref-3.C: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-2.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/parallel-dims.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/pr85486.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/pr95270-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/routine-nohost-2.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/struct-copyout-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/struct-copyout-2.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/vector-length-64-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/attach-descriptor-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/derivedtypes-arrays-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-2.f95: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/parallel-dims.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/privatized-ref-1.f95: Likewise.\n+\n 2022-01-17  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* testsuite/libgomp.oacc-c++/privatized-ref-2.C: Extend."}, {"sha": "7c75cdf9fac509d4ad06c491252375e7feced9bf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a761ae658967dab59dca691373e3ea10707217a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a761ae658967dab59dca691373e3ea10707217a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7a761ae658967dab59dca691373e3ea10707217a", "patch": "@@ -1,3 +1,87 @@\n+2022-01-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104099\n+\t* include/bits/basic_string.h (basic_string(nullptr_t)): Only\n+\tdefine for C++23.\n+\t(operator=(nullptr_t)): Likewise.\n+\t* include/bits/cow_string.h: Likewise.\n+\t* include/std/string_view (basic_string_view(nullptr_t)):\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/cons/char/nullptr.cc: Adjust\n+\texpected error. Add examples that become ill-formed in C++23.\n+\t* testsuite/21_strings/basic_string_view/cons/char/nonnull.cc:\n+\tAdjust expected errors.\n+\t* testsuite/21_strings/basic_string_view/cons/wchar_t/nonnull.cc:\n+\tLikewise.\n+\n+2022-01-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104098\n+\t* include/bits/stl_iterator.h (reverse_iterator): Check\n+\t__cpp_lib_concepts instead of __cplusplus.\n+\n+2022-01-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/101124\n+\t* include/bits/stl_pair.h (pair): Adjust constraints on\n+\tdeprecated constructors accepting literal zero as null pointer\n+\tconstant. Improve wording of deprecated attribute.\n+\t* testsuite/20_util/pair/cons/99957.cc: Check that deprecated\n+\tconstructors do not cause ambiguities for copyable types.\n+\n+2022-01-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_function.h (ptr_fun): Fix suggestion for\n+\tnon-deprecated alternative.\n+\n+2022-01-18  Tom Honermann  <tom@honermann.net>\n+\n+\t* acinclude.m4: Define config macros if uchar.h provides\n+\tc8rtomb() and mbrtoc8().\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* include/c_compatibility/uchar.h (c8rtomb, mbrtoc8): Define.\n+\t* include/c_global/cuchar (c8rtomb, mbrtoc8): Likewise.\n+\t* include/c_std/cuchar (c8rtomb, mbrtoc8): Likewise.\n+\t* testsuite/21_strings/headers/cuchar/functions_std_cxx20.cc:\n+\tNew test.\n+\t* testsuite/21_strings/headers/cuchar/functions_std_fchar8_t.cc:\n+\tNew test.\n+\n+2022-01-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/Makefile.am: Install new header.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/c_compatibility/stdatomic.h: New file.\n+\t* testsuite/29_atomics/headers/stdatomic.h/c_compat.cc: New test.\n+\n+2022-01-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104080\n+\t* src/c++17/fast_float/LOCAL_PATCHES: Update.\n+\t* src/c++17/fast_float/fast_float.h (FASTFLOAT_IS_BIG_ENDIAN):\n+\tDefine in terms of __BYTE_ORDER__.\n+\n+2022-01-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104080\n+\t* src/c++17/fast_float/LOCAL_PATCHES: UPDATE.\n+\t* src/c++17/fast_float/fast_float.h (round): Use explicit\n+\ttemplate argument list for std::min.\n+\n+2022-01-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/status_cxx2017.xml: Update C++17 status.\n+\t* doc/xml/manual/status_cxx2020.xml: Use 12.1 instead of 12 for\n+\tupcoming release.\n+\t* doc/html/manual/status.html: Regenerate.\n+\n+2022-01-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_FULLY_DYNAMIC_STRING): Improve\n+\tcomments.\n+\t* configure: Regenerate.\n+\n 2022-01-17  Patrick Palka  <ppalka@redhat.com>\n \n \t* src/c++17/floating_from_chars.cc: (USE_LIB_FAST_FLOAT):"}]}