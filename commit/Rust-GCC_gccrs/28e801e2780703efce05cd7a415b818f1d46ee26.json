{"sha": "28e801e2780703efce05cd7a415b818f1d46ee26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhlODAxZTI3ODA3MDNlZmNlMDVjZDdhNDE1YjgxOGYxZDQ2ZWUyNg==", "commit": {"author": {"name": "Denis Chertykov", "email": "denisc@overta.ru", "date": "2000-05-03T19:20:09Z"}, "committer": {"name": "Denis Chertykov", "email": "denisc@gcc.gnu.org", "date": "2000-05-03T19:20:09Z"}, "message": "avr-protos.h (test_hard_reg_class): Declared.\n\n\n\t* config/avr/avr-protos.h (test_hard_reg_class): Declared.\n\t* config/avr/avr.c (ashrhi3_out): optimized shift by 15.\n\t(lshrhi3_out): Likewise.\n\t(ashrsi3_out): bugfix in shift by 8.\n\t(test_hard_reg_class): New function.\n\t* config/avr/avr.md: Bugfix inside conditions in peepholes.\n\t(ashlhi3): removed define_expand of this pattern.\n\t(*ashlhi3_insn): renamed to ashlhi3.\n\t(ashlsi3): removed define_expand of this pattern.\n\t(*ashlsi3_insn): renamed to ashlsi3.\n\t(ashrqi3): removed define_expand of this pattern.\n\t(*ashrqi3_insn): renamed to ashrqi3.\n\t(ashrhi3): removed define_expand of this pattern.\n\t(*ashrhi3_insn): renamed to ashrhi3.\n\t(ashrsi3): removed define_expand of this pattern.\n\t(*ashrsi3_insn): renamed to ashrsi3.\n\t(lshrhi3): removed define_expand of this pattern.\n\t(*lshrhi3_insn): renamed to lshrhi3.\n\t(lshrsi3): removed define_expand of this pattern.\n\t(*lshrsi3_insn): renamed to lshrsi3.\n\nFrom-SVN: r33640", "tree": {"sha": "0d9c23ae75e453f83e6bb8785c9e47bc79151a32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d9c23ae75e453f83e6bb8785c9e47bc79151a32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28e801e2780703efce05cd7a415b818f1d46ee26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e801e2780703efce05cd7a415b818f1d46ee26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28e801e2780703efce05cd7a415b818f1d46ee26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e801e2780703efce05cd7a415b818f1d46ee26/comments", "author": null, "committer": null, "parents": [{"sha": "4bd048efabd5718ffd5297b2c658d39bcb28ea84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bd048efabd5718ffd5297b2c658d39bcb28ea84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bd048efabd5718ffd5297b2c658d39bcb28ea84"}], "stats": {"total": 133, "additions": 59, "deletions": 74}, "files": [{"sha": "ec59f5f96bde91a24b415e7015b23bd458596546", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e801e2780703efce05cd7a415b818f1d46ee26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e801e2780703efce05cd7a415b818f1d46ee26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28e801e2780703efce05cd7a415b818f1d46ee26", "patch": "@@ -1,3 +1,26 @@\n+Wed May  3 22:52:53 2000  Denis Chertykov  <denisc@overta.ru>\n+\n+\t* config/avr/avr-protos.h (test_hard_reg_class): Declared.\n+\t* config/avr/avr.c (ashrhi3_out): optimized shift by 15.\n+\t(lshrhi3_out): Likewise.\n+\t(ashrsi3_out): bugfix in shift by 8.\n+\t(test_hard_reg_class): New function.\n+\t* config/avr/avr.md: Bugfix inside conditions in peepholes.\n+\t(ashlhi3): removed define_expand of this pattern.\n+\t(*ashlhi3_insn): renamed to ashlhi3.\n+\t(ashlsi3): removed define_expand of this pattern.\n+\t(*ashlsi3_insn): renamed to ashlsi3.\n+\t(ashrqi3): removed define_expand of this pattern.\n+\t(*ashrqi3_insn): renamed to ashrqi3.\n+\t(ashrhi3): removed define_expand of this pattern.\n+\t(*ashrhi3_insn): renamed to ashrhi3.\n+\t(ashrsi3): removed define_expand of this pattern.\n+\t(*ashrsi3_insn): renamed to ashrsi3.\n+\t(lshrhi3): removed define_expand of this pattern.\n+\t(*lshrhi3_insn): renamed to lshrhi3.\n+\t(lshrsi3): removed define_expand of this pattern.\n+\t(*lshrsi3_insn): renamed to lshrsi3.\n+\n 2000-05-03  Rodney Brown  <RodneyBrown@pmsc.com>\n \n \t* config/mcore/mcore.c: Replacing inclusion of \"stdio,h\" with"}, {"sha": "605c2a33e6d99afce1ec578286fcf367b3e66218", "filename": "gcc/config/avr/avr-protos.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e801e2780703efce05cd7a415b818f1d46ee26/gcc%2Fconfig%2Favr%2Favr-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e801e2780703efce05cd7a415b818f1d46ee26/gcc%2Fconfig%2Favr%2Favr-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-protos.h?ref=28e801e2780703efce05cd7a415b818f1d46ee26", "patch": "@@ -107,9 +107,9 @@ extern char * lshrqi3_out     PARAMS ((rtx insn, rtx operands[], int *len));\n extern char * lshrhi3_out     PARAMS ((rtx insn, rtx operands[], int *len));\n extern char * lshrsi3_out     PARAMS ((rtx insn, rtx operands[], int *len));\n \n-extern int    avr_address_cost       PARAMS ((rtx x));\n extern enum reg_class preferred_reload_class PARAMS ((rtx x,\n \t\t\t\t\t\t     enum reg_class class));\n+extern int    avr_address_cost       PARAMS ((rtx x));\n extern int    extra_constraint       PARAMS ((rtx x, char c));\n extern rtx    legitimize_address     PARAMS ((rtx x, rtx oldx,\n \t\t\t\t\t     enum machine_mode mode));\n@@ -135,6 +135,7 @@ extern int    _reg_unused_after      PARAMS ((rtx insn, rtx reg));\n extern int    avr_jump_mode          PARAMS ((rtx x, rtx insn));\n extern int    byte_immediate_operand PARAMS ((register rtx op,\n \t\t\t\t\t     enum machine_mode mode));\n+extern int    test_hard_reg_class    PARAMS ((enum reg_class class, rtx x));\n \n #endif /* RTX_CODE */\n "}, {"sha": "c2fe4ed638f761127014d9d7df67296621ed2eaf", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e801e2780703efce05cd7a415b818f1d46ee26/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e801e2780703efce05cd7a415b818f1d46ee26/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=28e801e2780703efce05cd7a415b818f1d46ee26", "patch": "@@ -2401,6 +2401,10 @@ ashrhi3_out (insn,operands,len)\n \t    return *len = 3, (AS1 (clr,%B0)     CR_TAB\n \t\t\t      AS2 (sbrc,%A0,7)  CR_TAB\n \t\t\t      AS1 (dec,%B0));\n+\tcase 15:\n+\t  return *len = 3, (AS1 (lsl,%B0)     CR_TAB\n+\t\t\t    AS2 (sbc,%A0,%A0) CR_TAB\n+\t\t\t    AS2 (mov,%B0,%A0));\n \t}\n     }\n   if (len)\n@@ -2455,7 +2459,7 @@ ashrsi3_out (insn,operands,len)\n \t\t\t\tAS1 (dec,%D0));\n \t    else\n \t      return (AS1 (clr,%D0)     CR_TAB\n-\t\t      AS2 (sbrc,%C0,7)  CR_TAB\n+\t\t      AS2 (sbrc,%D1,7)  CR_TAB\n \t\t      AS1 (dec,%D0)     CR_TAB\n \t\t      AS2 (mov,%C0,%D1) CR_TAB\n \t\t      AS2 (mov,%B0,%C1) CR_TAB\n@@ -2634,7 +2638,12 @@ lshrhi3_out (insn,operands,len)\n \t\t\t      AS1 (clr,%B0));\n \t  else\n \t    return *len = 1, AS1 (clr,%B0);\n-\t    \n+\t  \n+\tcase 15:\n+\t  return *len = 4, (AS1 (lsl,%B0)     CR_TAB\n+\t\t\t    AS2 (sbc,%A0,%A0) CR_TAB\n+\t\t\t    AS1 (neg,%A0)     CR_TAB\n+\t\t\t    AS1 (clr,%B0));\n \t}\n     }\n   if (len)\n@@ -3736,6 +3745,17 @@ preferred_reload_class(x,class)\n   return class;\n }\n \n+int\n+test_hard_reg_class(class, x)\n+     enum reg_class class;\n+     rtx x;\n+{\n+  int regno = true_regnum (x);\n+  if (regno < 0)\n+    return 0;\n+  return TEST_HARD_REG_CLASS (class, regno);\n+}\n+\n void\n debug_hard_reg_set (HARD_REG_SET set)\n {"}, {"sha": "019c36bc0d4df9f87477ece860af648d2bfd7225", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 12, "deletions": 71, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e801e2780703efce05cd7a415b818f1d46ee26/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e801e2780703efce05cd7a415b818f1d46ee26/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=28e801e2780703efce05cd7a415b818f1d46ee26", "patch": "@@ -877,15 +877,7 @@\n   [(set_attr \"length\" \"6,4,6,7\")\n    (set_attr \"cc\" \"clobber,set_czn,set_czn,clobber\")])\n \n-(define_expand \"ashlhi3\"\n-  [(parallel [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t\t   (ashift:HI (match_operand:HI 1 \"register_operand\" \"\")\n-\t\t\t      (match_operand:QI 2 \"general_operand\" \"\")))\n-\t      (clobber (match_scratch:QI 3 \"\"))])]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*ashlhi3_insn\"\n+(define_insn \"ashlhi3\"\n   [(set (match_operand:HI 0 \"register_operand\"           \"=r,r,r,r,r,r\")\n \t(ashift:HI (match_operand:HI 1 \"register_operand\" \"0,0,r,0,0,0\")\n \t\t   (match_operand:QI 2 \"general_operand\"  \"r,P,O,K,i,Qm\")))\n@@ -895,15 +887,7 @@\n   [(set_attr \"length\" \"7,2,4,2,5,8\")\n    (set_attr \"cc\" \"clobber,clobber,clobber,clobber,clobber,clobber\")])\n \n-(define_expand \"ashlsi3\"\n-  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t\t   (ashift:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t\t      (match_operand:QI 2 \"general_operand\" \"\")))\n-\t      (clobber (match_scratch:QI 3 \"\"))])]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*ashlsi3_insn\"\n+(define_insn \"ashlsi3\"\n   [(set (match_operand:SI 0 \"register_operand\"           \"=r,r,r,r,r\")\n \t(ashift:SI (match_operand:SI 1 \"register_operand\" \"0,0,r,0,0\")\n \t\t   (match_operand:QI 2 \"general_operand\"  \"r,P,O,i,Qm\")))\n@@ -916,15 +900,7 @@\n ;; >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >>\n ;; arithmetic shift right\n \n-(define_expand \"ashrqi3\"\n-  [(parallel [(set (match_operand:QI 0 \"register_operand\" \"\")\n-\t\t   (ashiftrt:QI (match_operand:QI 1 \"register_operand\" \"\")\n-\t\t\t\t(match_operand:QI 2 \"general_operand\" \"\")))\n-\t      (clobber (match_scratch:QI 3 \"\"))])]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*ashrqi3\"\n+(define_insn \"ashrqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=r,r,r,r,r\")\n \t(ashiftrt:QI (match_operand:QI 1 \"register_operand\" \"0,0,0,0,0\")\n \t\t     (match_operand:QI 2 \"general_operand\" \"r,P,K,i,Qm\")))\n@@ -934,16 +910,7 @@\n   [(set_attr \"length\" \"6,1,2,4,7\")\n    (set_attr \"cc\" \"clobber,clobber,clobber,clobber,clobber\")])\n \n-\n-(define_expand \"ashrhi3\"\n-  [(parallel [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t\t   (ashiftrt:HI (match_operand:HI 1 \"register_operand\" \"\")\n-\t\t\t\t(match_operand:QI 2 \"general_operand\" \"\")))\n-\t      (clobber (match_scratch:QI 3 \"\"))])]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*ashrhi3_insn\"\n+(define_insn \"ashrhi3\"\n   [(set (match_operand:HI 0 \"register_operand\"             \"=r,r,r,r,r,r\")\n \t(ashiftrt:HI (match_operand:HI 1 \"register_operand\" \"0,0,0,r,0,0\")\n \t\t     (match_operand:QI 2 \"general_operand\"  \"r,P,K,O,i,Qm\")))\n@@ -953,15 +920,7 @@\n   [(set_attr \"length\" \"7,2,4,2,5,8\")\n    (set_attr \"cc\" \"clobber,clobber,clobber,clobber,clobber,clobber\")])\n \n-(define_expand \"ashrsi3\"\n-  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t\t   (ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t\t\t(match_operand:QI 2 \"general_operand\" \"\")))\n-\t      (clobber (match_scratch:QI 3 \"\"))])]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*ashrsi3_insn\"\n+(define_insn \"ashrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\"             \"=r,r,r,r,r\")\n \t(ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"0,0,r,0,0\")\n \t\t     (match_operand:QI 2 \"general_operand\"  \"r,P,O,i,Qm\")))\n@@ -983,15 +942,7 @@\n   [(set_attr \"length\" \"6,4,6,7\")\n    (set_attr \"cc\" \"clobber,set_czn,set_czn,clobber\")])\n \n-(define_expand \"lshrhi3\"\n-  [(parallel [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t\t   (lshiftrt:HI (match_operand:HI 1 \"register_operand\" \"\")\n-\t\t\t\t(match_operand:QI 2 \"general_operand\" \"\")))\n-\t      (clobber (match_scratch:QI 3 \"\"))])]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*lshrhi3_insn\"\n+(define_insn \"lshrhi3\"\n   [(set (match_operand:HI 0 \"register_operand\"             \"=r,r,r,r,r,r\")\n \t(lshiftrt:HI (match_operand:HI 1 \"register_operand\" \"0,0,0,r,0,0\")\n \t\t     (match_operand:QI 2 \"general_operand\"  \"r,P,K,O,i,Qm\")))\n@@ -1001,17 +952,7 @@\n   [(set_attr \"length\" \"7,2,4,2,5,8\")\n    (set_attr \"cc\" \"clobber,clobber,clobber,clobber,clobber,clobber\")])\n \n-\n-\n-(define_expand \"lshrsi3\"\n-  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t\t   (lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t\t\t(match_operand:QI 2 \"general_operand\" \"\")))\n-\t      (clobber (match_scratch:QI 3 \"\"))])]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*lshrsi3_insn\"\n+(define_insn \"lshrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\"             \"=r,r,r,r,r\")\n \t(lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"0,0,r,0,0\")\n \t\t     (match_operand:QI 2 \"general_operand\"  \"r,P,O,i,Qm\")))\n@@ -1815,8 +1756,8 @@\n \t(if_then_else (ne (cc0) (const_int 0))\n \t\t      (label_ref (match_operand 2 \"\" \"\"))\n \t\t      (pc)))]\n-  \"(true_regnum (operands[0]) >= LD_REGS\n-    && true_regnum (operands[1]) >= LD_REGS)\"\n+  \"(test_hard_reg_class (LD_REGS, operands[0])\n+    && test_hard_reg_class (LD_REGS, operands[1]))\"\n   \"*\n {\n   if (TEST_HARD_REG_CLASS (ADDW_REGS, true_regnum (operands[0])))\n@@ -1853,8 +1794,8 @@\n \t(if_then_else (ne (cc0) (const_int 0))\n \t\t      (label_ref (match_operand 2 \"\" \"\"))\n \t\t      (pc)))]\n-  \"(true_regnum (operands[0]) >= LD_REGS\n-    && true_regnum (operands[1]) >= LD_REGS)\"\n+  \"(test_hard_reg_class (LD_REGS, operands[0])\n+    && test_hard_reg_class (LD_REGS, operands[1]))\"\n   \"*\n {\n   if (TEST_HARD_REG_CLASS (ADDW_REGS, true_regnum (operands[0])))\n@@ -1885,7 +1826,7 @@\n \t(if_then_else (ne (cc0) (const_int 0))\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))]\n-  \"(true_regnum (operands[0]) >= LD_REGS)\"\n+  \"test_hard_reg_class (LD_REGS, operands[0])\"\n   \"*\n {\n   output_asm_insn (AS2 (subi,%A0,1), operands);"}]}