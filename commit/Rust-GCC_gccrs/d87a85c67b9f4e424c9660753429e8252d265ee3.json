{"sha": "d87a85c67b9f4e424c9660753429e8252d265ee3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg3YTg1YzY3YjlmNGU0MjRjOTY2MDc1MzQyOWU4MjUyZDI2NWVlMw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-09-01T15:07:54Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-09-01T15:07:54Z"}, "message": "rs6000: Use LR_REGNO directly in the save/restore patterns\n\nVarious patterns use \"register_operand\" \"l\" (or \"=l\") although those\npatterns are only created refering to LR_REGNO directly.  This patch\nchanges those patterns to use the hard regs as well.\n\n\n\t* config/rs6000/rs6000.md (*restore_gpregs_<mode>_r11,\n\t*restore_gpregs_<mode>_r12, *restore_gpregs_<mode>_r1,\n\t*return_and_restore_gpregs_<mode>_r11,\n\t*return_and_restore_gpregs_<mode>_r12,\n\t*return_and_restore_gpregs_<mode>_r1,\n\t*return_and_restore_fpregs_<mode>_r11,\n\t*return_and_restore_fpregs_<mode>_r12,\n\t*return_and_restore_fpregs_<mode>_r1): Use the hard register LR_REGNO\n\tdirectly instead of via the \"l\" constraint.  Renumber operands.\n\tFix whitespace.\n\nFrom-SVN: r239942", "tree": {"sha": "df465603fe4df0febedebfd5cdd3a652a4658256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df465603fe4df0febedebfd5cdd3a652a4658256"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d87a85c67b9f4e424c9660753429e8252d265ee3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d87a85c67b9f4e424c9660753429e8252d265ee3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d87a85c67b9f4e424c9660753429e8252d265ee3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d87a85c67b9f4e424c9660753429e8252d265ee3/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "893fc0a002522b9f49564334122fa0a99923e7f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/893fc0a002522b9f49564334122fa0a99923e7f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/893fc0a002522b9f49564334122fa0a99923e7f3"}], "stats": {"total": 133, "additions": 73, "deletions": 60}, "files": [{"sha": "7d80216bc0e6d5a280eae7ac25f4a03b229b8c9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d87a85c67b9f4e424c9660753429e8252d265ee3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d87a85c67b9f4e424c9660753429e8252d265ee3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d87a85c67b9f4e424c9660753429e8252d265ee3", "patch": "@@ -1,3 +1,16 @@\n+2016-09-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (*restore_gpregs_<mode>_r11,\n+\t*restore_gpregs_<mode>_r12, *restore_gpregs_<mode>_r1,\n+\t*return_and_restore_gpregs_<mode>_r11,\n+\t*return_and_restore_gpregs_<mode>_r12,\n+\t*return_and_restore_gpregs_<mode>_r1,\n+\t*return_and_restore_fpregs_<mode>_r11,\n+\t*return_and_restore_fpregs_<mode>_r12,\n+\t*return_and_restore_fpregs_<mode>_r1): Use the hard register LR_REGNO\n+\tdirectly instead of via the \"l\" constraint.  Renumber operands.\n+\tFix whitespace.\n+\n 2016-09-01  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/altivec.md (*save_world, *save_vregs_<mode>_r11,"}, {"sha": "7da4370242d51fd72bb00cb7f8e1bbcd4cefcab4", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 60, "deletions": 60, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d87a85c67b9f4e424c9660753429e8252d265ee3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d87a85c67b9f4e424c9660753429e8252d265ee3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=d87a85c67b9f4e424c9660753429e8252d265ee3", "patch": "@@ -12620,115 +12620,115 @@\n \n (define_insn \"*restore_gpregs_<mode>_r11\"\n  [(match_parallel 0 \"any_parallel_operand\"\n-                  [(clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n-                   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (reg:P 11))\n-\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n-\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n+\t\t  [(clobber (reg:P LR_REGNO))\n+\t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+\t\t   (use (reg:P 11))\n+\t\t   (set (match_operand:P 2 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 3 \"memory_operand\" \"m\"))])]\n  \"\"\n- \"bl %2\"\n+ \"bl %1\"\n  [(set_attr \"type\" \"branch\")\n   (set_attr \"length\" \"4\")])\n \n (define_insn \"*restore_gpregs_<mode>_r12\"\n  [(match_parallel 0 \"any_parallel_operand\"\n-                  [(clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n-                   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (reg:P 12))\n-\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n-\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n+\t\t  [(clobber (reg:P LR_REGNO))\n+\t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+\t\t   (use (reg:P 12))\n+\t\t   (set (match_operand:P 2 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 3 \"memory_operand\" \"m\"))])]\n  \"\"\n- \"bl %2\"\n+ \"bl %1\"\n  [(set_attr \"type\" \"branch\")\n   (set_attr \"length\" \"4\")])\n \n (define_insn \"*restore_gpregs_<mode>_r1\"\n  [(match_parallel 0 \"any_parallel_operand\"\n-                  [(clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n-                   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (reg:P 1))\n-\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n-\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n+\t\t  [(clobber (reg:P LR_REGNO))\n+\t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+\t\t   (use (reg:P 1))\n+\t\t   (set (match_operand:P 2 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 3 \"memory_operand\" \"m\"))])]\n  \"\"\n- \"bl %2\"\n+ \"bl %1\"\n  [(set_attr \"type\" \"branch\")\n   (set_attr \"length\" \"4\")])\n \n (define_insn \"*return_and_restore_gpregs_<mode>_r11\"\n  [(match_parallel 0 \"any_parallel_operand\"\n-                  [(return)\n-\t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n-\t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (reg:P 11))\n-\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n-\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n+\t\t  [(return)\n+\t\t   (clobber (reg:P LR_REGNO))\n+\t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+\t\t   (use (reg:P 11))\n+\t\t   (set (match_operand:P 2 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 3 \"memory_operand\" \"m\"))])]\n  \"\"\n- \"b %2\"\n+ \"b %1\"\n  [(set_attr \"type\" \"branch\")\n   (set_attr \"length\" \"4\")])\n \n (define_insn \"*return_and_restore_gpregs_<mode>_r12\"\n  [(match_parallel 0 \"any_parallel_operand\"\n-                  [(return)\n-\t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n-\t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (reg:P 12))\n-\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n-\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n+\t\t  [(return)\n+\t\t   (clobber (reg:P LR_REGNO))\n+\t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+\t\t   (use (reg:P 12))\n+\t\t   (set (match_operand:P 2 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 3 \"memory_operand\" \"m\"))])]\n  \"\"\n- \"b %2\"\n+ \"b %1\"\n  [(set_attr \"type\" \"branch\")\n   (set_attr \"length\" \"4\")])\n \n (define_insn \"*return_and_restore_gpregs_<mode>_r1\"\n  [(match_parallel 0 \"any_parallel_operand\"\n-                  [(return)\n-\t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n-\t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (reg:P 1))\n-\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n-\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n+\t\t  [(return)\n+\t\t   (clobber (reg:P LR_REGNO))\n+\t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+\t\t   (use (reg:P 1))\n+\t\t   (set (match_operand:P 2 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 3 \"memory_operand\" \"m\"))])]\n  \"\"\n- \"b %2\"\n+ \"b %1\"\n  [(set_attr \"type\" \"branch\")\n   (set_attr \"length\" \"4\")])\n \n (define_insn \"*return_and_restore_fpregs_<mode>_r11\"\n  [(match_parallel 0 \"any_parallel_operand\"\n-                  [(return)\n-\t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n-\t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (reg:P 11))\n-\t\t   (set (match_operand:DF 3 \"gpc_reg_operand\" \"=d\")\n-\t\t\t(match_operand:DF 4 \"memory_operand\" \"m\"))])]\n+\t\t  [(return)\n+\t\t   (clobber (reg:P LR_REGNO))\n+\t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+\t\t   (use (reg:P 11))\n+\t\t   (set (match_operand:DF 2 \"gpc_reg_operand\" \"=d\")\n+\t\t\t(match_operand:DF 3 \"memory_operand\" \"m\"))])]\n  \"\"\n- \"b %2\"\n+ \"b %1\"\n  [(set_attr \"type\" \"branch\")\n   (set_attr \"length\" \"4\")])\n \n (define_insn \"*return_and_restore_fpregs_<mode>_r12\"\n  [(match_parallel 0 \"any_parallel_operand\"\n-                  [(return)\n-\t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n-\t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (reg:P 12))\n-\t\t   (set (match_operand:DF 3 \"gpc_reg_operand\" \"=d\")\n-\t\t\t(match_operand:DF 4 \"memory_operand\" \"m\"))])]\n+\t\t  [(return)\n+\t\t   (clobber (reg:P LR_REGNO))\n+\t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+\t\t   (use (reg:P 12))\n+\t\t   (set (match_operand:DF 2 \"gpc_reg_operand\" \"=d\")\n+\t\t\t(match_operand:DF 3 \"memory_operand\" \"m\"))])]\n  \"\"\n- \"b %2\"\n+ \"b %1\"\n  [(set_attr \"type\" \"branch\")\n   (set_attr \"length\" \"4\")])\n \n (define_insn \"*return_and_restore_fpregs_<mode>_r1\"\n  [(match_parallel 0 \"any_parallel_operand\"\n-                  [(return)\n-\t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n-\t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (reg:P 1))\n-\t\t   (set (match_operand:DF 3 \"gpc_reg_operand\" \"=d\")\n-\t\t\t(match_operand:DF 4 \"memory_operand\" \"m\"))])]\n+\t\t  [(return)\n+\t\t   (clobber (reg:P LR_REGNO))\n+\t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+\t\t   (use (reg:P 1))\n+\t\t   (set (match_operand:DF 2 \"gpc_reg_operand\" \"=d\")\n+\t\t\t(match_operand:DF 3 \"memory_operand\" \"m\"))])]\n  \"\"\n- \"b %2\"\n+ \"b %1\"\n  [(set_attr \"type\" \"branch\")\n   (set_attr \"length\" \"4\")])\n "}]}