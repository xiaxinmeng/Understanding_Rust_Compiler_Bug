{"sha": "eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI3MWFiOWYxZmNmZDIzZTdiM2FlZjlhNTY1OTI3NWJjZDg0MGYyOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-07-01T08:21:40Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-07-01T08:21:40Z"}, "message": "re PR middle-end/66633 (ICE on valid \"verify_gimple failed\" with OpenMP)\n\n\tPR middle-end/66633\n\t* tree-nested.c (convert_nonlocal_omp_clauses): Initialize need_chain\n\tto true if the function is nested and if not optimizing.\n\t(convert_local_omp_clauses): Initialize need_frame to true if the\n\tfunction contains nested functions and if not optimizing.\n\nFrom-SVN: r225227", "tree": {"sha": "2f13674372014283e43e7d373769e20742373c23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f13674372014283e43e7d373769e20742373c23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29/comments", "author": null, "committer": null, "parents": [{"sha": "97e7739106863e3d334a8f9bb0cfcc8ae0e972de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97e7739106863e3d334a8f9bb0cfcc8ae0e972de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97e7739106863e3d334a8f9bb0cfcc8ae0e972de"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "abbdf4641611d4a6837545dc3866063f86d2ce5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29", "patch": "@@ -1,3 +1,11 @@\n+2015-07-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/66633\n+\t* tree-nested.c (convert_nonlocal_omp_clauses): Initialize need_chain\n+\tto true if the function is nested and if not optimizing.\n+\t(convert_local_omp_clauses): Initialize need_frame to true if the\n+\tfunction contains nested functions and if not optimizing.\n+\n 2015-07-01  Richard Biener  <rguenther@suse.de>\n \n \t* fold-const.c (fold_binary_loc): Move ~X ^ X -> -1 and"}, {"sha": "8d53a61fc1e2de49ce96497fc9ec364379437638", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29", "patch": "@@ -1,3 +1,7 @@\n+2015-07-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gfortran.dg/gomp/pr66633.f90: New test.\n+\n 2015-07-01  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/66686"}, {"sha": "60e47b3943af6f432052dbdeba301b690327d415", "filename": "gcc/testsuite/gfortran.dg/gomp/pr66633.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr66633.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr66633.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr66633.f90?ref=eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29", "patch": "@@ -0,0 +1,17 @@\n+! PR middle-end/66633\n+! Testcase by Andrew Benson <abensonca@gmail.com>\n+\n+! { dg-do compile }\n+! { dg-options \"-O0 -fopenmp\" }\n+\n+module spls\n+contains\n+  function spl()\n+    !$omp parallel\n+    write (0,*) igrt(fli)\n+    !$omp end parallel\n+  contains\n+    double precision function fli()\n+    end function fli\n+  end function spl\n+end module spls"}, {"sha": "6b9d753ee52d8ed374a4c46c6f406b0f81aee738", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=eb71ab9f1fcfd23e7b3aef9a5659275bcd840f29", "patch": "@@ -1069,7 +1069,9 @@ static bool\n convert_nonlocal_omp_clauses (tree *pclauses, struct walk_stmt_info *wi)\n {\n   struct nesting_info *const info = (struct nesting_info *) wi->info;\n-  bool need_chain = false, need_stmts = false;\n+  /* If not optimizing, we will force the creation of the CHAIN object in\n+     convert_all_function_calls, so we need to take it into account here.  */\n+  bool need_chain = info->outer && !optimize, need_stmts = false;\n   tree clause, decl;\n   int dummy;\n   bitmap new_suppress;\n@@ -1697,7 +1699,9 @@ static bool\n convert_local_omp_clauses (tree *pclauses, struct walk_stmt_info *wi)\n {\n   struct nesting_info *const info = (struct nesting_info *) wi->info;\n-  bool need_frame = false, need_stmts = false;\n+  /* If not optimizing, we will force the creation of the FRAME object in\n+     convert_all_function_calls, so we need to take it into account here.  */\n+  bool need_frame = info->inner && !optimize, need_stmts = false;\n   tree clause, decl;\n   int dummy;\n   bitmap new_suppress;"}]}