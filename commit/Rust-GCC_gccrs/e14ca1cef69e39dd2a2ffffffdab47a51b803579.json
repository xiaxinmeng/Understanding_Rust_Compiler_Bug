{"sha": "e14ca1cef69e39dd2a2ffffffdab47a51b803579", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE0Y2ExY2VmNjllMzlkZDJhMmZmZmZmZmRhYjQ3YTUxYjgwMzU3OQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2010-09-01T08:33:35Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2010-09-01T08:33:35Z"}, "message": "rx.c (rx_expand_prologue): Do not adjust frame size when pushing accumulator register.\n\n        * config/rx/rx.c (rx_expand_prologue): Do not adjust frame size\n        when pushing accumulator register.\n        (rx_get_stack_layout): Always save call clobbered registers inside\n        interrupt handlers.\n        * config/rx/rx-modes.def: Fix descriptive comment at start of file.\n\nFrom-SVN: r163720", "tree": {"sha": "d97bbb87097291701d7e0bfa093b5efdac6110cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d97bbb87097291701d7e0bfa093b5efdac6110cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e14ca1cef69e39dd2a2ffffffdab47a51b803579", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e14ca1cef69e39dd2a2ffffffdab47a51b803579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e14ca1cef69e39dd2a2ffffffdab47a51b803579", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e14ca1cef69e39dd2a2ffffffdab47a51b803579/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c14c81552aa7c5f7cf837f3728580e29fe94c5ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c14c81552aa7c5f7cf837f3728580e29fe94c5ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c14c81552aa7c5f7cf837f3728580e29fe94c5ef"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "3cb6f27bcd0a22169079b7efe77877591a6cc160", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14ca1cef69e39dd2a2ffffffdab47a51b803579/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14ca1cef69e39dd2a2ffffffdab47a51b803579/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e14ca1cef69e39dd2a2ffffffdab47a51b803579", "patch": "@@ -1,3 +1,11 @@\n+2010-09-01  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/rx/rx.c (rx_expand_prologue): Do not adjust frame size\n+\twhen pushing accumulator register.\n+\t(rx_get_stack_layout): Always save call clobbered registers inside\n+\tinterrupt handlers.\n+\t* config/rx/rx-modes.def: Fix descriptive comment at start of file.\n+\n 2010-09-01  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config.gcc (i[34567]86-*-freebsd*, x86_64-*-freebsd*): Add"}, {"sha": "0c4c192a265647da2e7f0b74c3e37597f38a1273", "filename": "gcc/config/rx/rx-modes.def", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14ca1cef69e39dd2a2ffffffdab47a51b803579/gcc%2Fconfig%2Frx%2Frx-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14ca1cef69e39dd2a2ffffffdab47a51b803579/gcc%2Fconfig%2Frx%2Frx-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx-modes.def?ref=e14ca1cef69e39dd2a2ffffffdab47a51b803579", "patch": "@@ -1,9 +1,6 @@\n-/* Definitions of target machine for GNU compiler, for ARM.\n-   Copyright (C) 2002, 2004, 2007 Free Software Foundation, Inc.\n-   Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n-   and Martin Simmons (@harleqn.co.uk).\n-   More major hacks by Richard Earnshaw (rearnsha@arm.com)\n-   Minor hacks by Nick Clifton (nickc@cygnus.com)\n+/* Definitions of target specific machine modes for the RX.\n+   Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n+   Contributed by Red Hat.\n \n    This file is part of GCC.\n "}, {"sha": "a5be690340d8eacfe352c78748a69b59d90a55ed", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14ca1cef69e39dd2a2ffffffdab47a51b803579/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14ca1cef69e39dd2a2ffffffdab47a51b803579/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=e14ca1cef69e39dd2a2ffffffdab47a51b803579", "patch": "@@ -1067,7 +1067,11 @@ rx_get_stack_layout (unsigned int * lowest,\n \n   for (save_mask = high = low = 0, reg = 1; reg < CC_REGNUM; reg++)\n     {\n-      if (df_regs_ever_live_p (reg)\n+      if ((df_regs_ever_live_p (reg)\n+\t   /* Always save all call clobbered registers inside interrupt\n+\t      handlers, even if they are not live - they may be used in\n+\t      routines called from this one.  */\n+\t   || (call_used_regs[reg] && is_interrupt_func (NULL_TREE)))\n \t  && (! call_used_regs[reg]\n \t      /* Even call clobbered registered must\n \t\t be pushed inside interrupt handlers.  */\n@@ -1307,8 +1311,6 @@ rx_expand_prologue (void)\n \t  emit_insn (gen_stack_pushm (GEN_INT (2 * UNITS_PER_WORD),\n \t\t\t\t      gen_rx_store_vector (acc_low, acc_high)));\n \t}\n-\n-      frame_size += 2 * UNITS_PER_WORD;\n     }\n \n   /* If needed, set up the frame pointer.  */"}]}