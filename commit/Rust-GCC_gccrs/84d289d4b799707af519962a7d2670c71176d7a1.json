{"sha": "84d289d4b799707af519962a7d2670c71176d7a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRkMjg5ZDRiNzk5NzA3YWY1MTk5NjJhN2QyNjcwYzcxMTc2ZDdhMQ==", "commit": {"author": {"name": "Michael Collison", "email": "michael.collison@linaro.org", "date": "2015-11-06T22:38:25Z"}, "committer": {"name": "Michael Collison", "email": "collison@gcc.gnu.org", "date": "2015-11-06T22:38:25Z"}, "message": "revert: arm.md (*arm_smin_cmp): New pattern.\n\n2015-11-06  Michael Collison  <michael.collison@linaro.org\n\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n\n\tRevert:\n\t2015-08-01  Michael Collison  <michael.collison@linaro.org\n\t\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n\n\t* config/arm/arm.md (*arm_smin_cmp): New pattern.\n\t(*arm_umin_cmp): Likewise.\n\n2015-11-06  Michael Collison  <michael.collison@linaro.org\n\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n\n\tRevert:\n\t2015-08-01  Michael Collison  <michael.collison@linaro.org\n\t\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n\n\t* gcc.target/arm/mincmp.c: New test.\n\nFrom-SVN: r229895", "tree": {"sha": "c5ca0201667eec21f2563523c80f2406a1f6124a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5ca0201667eec21f2563523c80f2406a1f6124a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84d289d4b799707af519962a7d2670c71176d7a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84d289d4b799707af519962a7d2670c71176d7a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84d289d4b799707af519962a7d2670c71176d7a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84d289d4b799707af519962a7d2670c71176d7a1/comments", "author": null, "committer": null, "parents": [{"sha": "11c7f78838d7587f95e28e6cbf4695a02c37d842", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11c7f78838d7587f95e28e6cbf4695a02c37d842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11c7f78838d7587f95e28e6cbf4695a02c37d842"}], "stats": {"total": 77, "additions": 19, "deletions": 58}, "files": [{"sha": "b6dcee59dedece6d0862365cad3238d6015c4d5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84d289d4b799707af519962a7d2670c71176d7a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84d289d4b799707af519962a7d2670c71176d7a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84d289d4b799707af519962a7d2670c71176d7a1", "patch": "@@ -1,3 +1,13 @@\n+2015-11-06  Michael Collison  <michael.collison@linaro.org\n+\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+\tRevert:\n+\t2015-08-01  Michael Collison  <michael.collison@linaro.org\n+\t\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+\t* config/arm/arm.md (*arm_smin_cmp): New pattern.\n+\t(*arm_umin_cmp): Likewise.\n+\n 2015-11-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gimplify.c (gimplify_omp_ordered): Fix up diagnostics"}, {"sha": "8ebb1bfd221e8f7f338a41b5552041f7efdb1ffd", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84d289d4b799707af519962a7d2670c71176d7a1/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84d289d4b799707af519962a7d2670c71176d7a1/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=84d289d4b799707af519962a7d2670c71176d7a1", "patch": "@@ -3455,44 +3455,6 @@\n    (set_attr \"type\" \"multiple,multiple\")]\n )\n \n-;; t = (s/u)min (x, y)\n-;; cc = cmp (t, z)\n-;; is the same as\n-;; cmp x, z\n-;; cmpge(u) y, z\n-\n-(define_insn_and_split \"*arm_smin_cmp\"\n-  [(set (reg:CC CC_REGNUM)\n-\t(compare:CC\n-\t (smin:SI (match_operand:SI 0 \"s_register_operand\" \"r\")\n-\t\t  (match_operand:SI 1 \"s_register_operand\" \"r\"))\n-\t (match_operand:SI 2 \"s_register_operand\" \"r\")))]\n-  \"TARGET_32BIT\"\n-  \"#\"\n-  \"&& reload_completed\"\n-  [(set (reg:CC CC_REGNUM)\n-\t(compare:CC (match_dup 0) (match_dup 2)))\n-   (cond_exec (ge:CC (reg:CC CC_REGNUM) (const_int 0))\n-\t      (set (reg:CC CC_REGNUM)\n-\t\t   (compare:CC (match_dup 1) (match_dup 2))))]\n-)\n-\n-(define_insn_and_split \"*arm_umin_cmp\"\n-  [(set (reg:CC CC_REGNUM)\n-\t(compare:CC\n-\t (umin:SI (match_operand:SI 0 \"s_register_operand\" \"r\")\n-\t\t  (match_operand:SI 1 \"s_register_operand\" \"r\"))\n-\t (match_operand:SI 2 \"s_register_operand\" \"r\")))]\n-  \"TARGET_32BIT\"\n-  \"#\"\n-  \"&& reload_completed\"\n-  [(set (reg:CC CC_REGNUM)\n-\t(compare:CC (match_dup 0) (match_dup 2)))\n-   (cond_exec (geu:CC (reg:CC CC_REGNUM) (const_int 0))\n-\t      (set (reg:CC CC_REGNUM)\n-\t\t   (compare:CC (match_dup 1) (match_dup 2))))]\n-)\n-\n (define_expand \"umaxsi3\"\n   [(parallel [\n     (set (match_operand:SI 0 \"s_register_operand\" \"\")"}, {"sha": "80221c1e301ec25f5d2fb3dc9e3dd05e8f1b1da7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84d289d4b799707af519962a7d2670c71176d7a1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84d289d4b799707af519962a7d2670c71176d7a1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=84d289d4b799707af519962a7d2670c71176d7a1", "patch": "@@ -1,3 +1,12 @@\n+2015-11-06  Michael Collison  <michael.collison@linaro.org\n+\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+\tRevert:\n+\t2015-08-01  Michael Collison  <michael.collison@linaro.org\n+\t\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+\t* gcc.target/arm/mincmp.c: New test.\n+\n 2015-11-06  Dominique d'Humieres <dominiq@lps.ens.fr>\n \n \tPR fortran/54224"}, {"sha": "ade3bd9e149c240fef2c86d431dddb7fec699e1e", "filename": "gcc/testsuite/gcc.target/arm/mincmp.c", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11c7f78838d7587f95e28e6cbf4695a02c37d842/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmincmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11c7f78838d7587f95e28e6cbf4695a02c37d842/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmincmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmincmp.c?ref=11c7f78838d7587f95e28e6cbf4695a02c37d842", "patch": "@@ -1,20 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-O2\" } */\n-/* { dg-require-effective-target arm32 } */\n-\n-#define min(x, y) ((x) <= (y)) ? (x) : (y)\n-\n-unsigned int \n-foo (unsigned int i, unsigned int x, unsigned int y)\n-{\n-  return i < (min (x, y));\n-}\n-\n-int \n-bar (int i, int x, int y)\n-{\n-  return i < (min (x, y));\n-}\n-\n-/* { dg-final { scan-assembler \"cmpcs\" } } */\n-/* { dg-final { scan-assembler \"cmpge\" } } */"}]}