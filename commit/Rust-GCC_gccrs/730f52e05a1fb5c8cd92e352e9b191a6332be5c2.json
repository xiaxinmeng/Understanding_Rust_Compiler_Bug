{"sha": "730f52e05a1fb5c8cd92e352e9b191a6332be5c2", "node_id": "C_kwDOANBUbNoAKDczMGY1MmUwNWExZmI1YzhjZDkyZTM1MmU5YjE5MWE2MzMyYmU1YzI", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-10-15T18:09:25Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-10-15T18:09:25Z"}, "message": "Allow early sets of SSE hard registers from standard_sse_constant_p.\n\nMy previous patch, which was intended to reduce the differences seen by\nthe combination of -march=cascadelake and -m32, has additionally found\nsome more instances where this combination behaves differently to regular\nx86_64-pc-linux-gnu.  The middle-end always, and backends usually, use\nemit_move_insn to emit/expand move instructions allowing the backend\ncontrol over placing things in constant pools, adding REG_EQUAL notes,\nand so on.  Several of the AVX512 built-in expanders bypass this logic,\nand instead generate moves directly using emit_insn(gen_rtx_SET (dst,src)).\n\nFor example, i386-expand.c line 12004 contains:\n      for (i = 0; i < 8; i++)\n        emit_insn (gen_rtx_SET (xmm_regs[i], const0_rtx));\n\nI suspect that in this case, loading of standard_sse_constant_p, my\nchange to require loading of likely spilled hard registers via a\npseudo is perhaps overly strict, so this patch/fix reallows these\nimmediate constants values to be loaded directly prior to reload.\n\n2021-10-15  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\t* config/i386/i386.c (ix86_hardreg_mov_ok): For vector modes,\n\tallow standard_sse_constant_p immediate constants.", "tree": {"sha": "02681e0721aae3013e14b323f38bbafaf26e4ceb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02681e0721aae3013e14b323f38bbafaf26e4ceb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/730f52e05a1fb5c8cd92e352e9b191a6332be5c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/730f52e05a1fb5c8cd92e352e9b191a6332be5c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/730f52e05a1fb5c8cd92e352e9b191a6332be5c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/730f52e05a1fb5c8cd92e352e9b191a6332be5c2/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c564e813c0626802e5bfb066c094933d5e6a774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c564e813c0626802e5bfb066c094933d5e6a774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c564e813c0626802e5bfb066c094933d5e6a774"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "9cc903e826b4bf13589fd935b52c6d3a3dc33bbc", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/730f52e05a1fb5c8cd92e352e9b191a6332be5c2/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/730f52e05a1fb5c8cd92e352e9b191a6332be5c2/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=730f52e05a1fb5c8cd92e352e9b191a6332be5c2", "patch": "@@ -19303,7 +19303,9 @@ ix86_hardreg_mov_ok (rtx dst, rtx src)\n   /* Avoid complex sets of likely_spilled hard registers before reload.  */\n   if (REG_P (dst) && HARD_REGISTER_P (dst)\n       && !REG_P (src) && !MEM_P (src)\n-      && !x86_64_immediate_operand (src, GET_MODE (dst))\n+      && !(VECTOR_MODE_P (GET_MODE (dst))\n+\t   ? standard_sse_constant_p (src, GET_MODE (dst))\n+\t   : x86_64_immediate_operand (src, GET_MODE (dst)))\n       && ix86_class_likely_spilled_p (REGNO_REG_CLASS (REGNO (dst)))\n       && !reload_completed)\n     return false;"}]}