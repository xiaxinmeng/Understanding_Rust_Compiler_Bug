{"sha": "f19c10ceb66780205dd9da0c5c056ee7a911de24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE5YzEwY2ViNjY3ODAyMDVkZDlkYTBjNWMwNTZlZTdhOTExZGUyNA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-01-25T01:29:14Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-01-25T01:29:14Z"}, "message": "re PR libfortran/25835 (Segfault or Bad Address error on unformatted sequential READ)\n\n2006-01-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/25835\n\t* gfortran.dg/read_eof_1.f90: Rename from read_eof_1.f90.\n\t* gfortran.dg/read_eof_2.f90: New test.\n\t* gfortran.dg/read_eof_3.f90: New test.\n\nFrom-SVN: r110201", "tree": {"sha": "6d88bc2ca6cc587ed93e4b3cd6513f34fc78b901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d88bc2ca6cc587ed93e4b3cd6513f34fc78b901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f19c10ceb66780205dd9da0c5c056ee7a911de24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f19c10ceb66780205dd9da0c5c056ee7a911de24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f19c10ceb66780205dd9da0c5c056ee7a911de24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f19c10ceb66780205dd9da0c5c056ee7a911de24/comments", "author": null, "committer": null, "parents": [{"sha": "ecc9e67eefe62c0e116f6bda2ee76a6f52d9eb0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc9e67eefe62c0e116f6bda2ee76a6f52d9eb0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecc9e67eefe62c0e116f6bda2ee76a6f52d9eb0a"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "f437418d335f5f9a2f5833b6ea9f11d3f3556c78", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f19c10ceb66780205dd9da0c5c056ee7a911de24/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f19c10ceb66780205dd9da0c5c056ee7a911de24/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f19c10ceb66780205dd9da0c5c056ee7a911de24", "patch": "@@ -1,3 +1,10 @@\n+2006-01-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/25835\n+\t* gfortran.dg/read_eof_1.f90: Rename from read_eof_1.f90.\n+\t* gfortran.dg/read_eof_2.f90: New test.\n+\t* gfortran.dg/read_eof_3.f90: New test.\n+\t\n 2006-01-24  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/25860"}, {"sha": "b5c49016a4aaabc58ce98e7c05cd1c6c0ea31a31", "filename": "gcc/testsuite/gfortran.dg/read_eof_1.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f19c10ceb66780205dd9da0c5c056ee7a911de24/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eof_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f19c10ceb66780205dd9da0c5c056ee7a911de24/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eof_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eof_1.f90?ref=f19c10ceb66780205dd9da0c5c056ee7a911de24", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do run }\n+! PR25697 Check that reading from a file that is at end-of-file does not\n+! segfault or give error.  Test case derived from example in PR from Dale Ranta.\n+! Contributed by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+       integer data(9)\n+       do i = 1,9\n+         data(i)=-3\n+       enddo\n+       open(unit=11,status='scratch',form='unformatted')\n+       write(11)data\n+       read(11,end=        1000 )data\n+       call abort()\n+ 1000  continue\n+       backspace 11\n+       backspace 11\n+       write(11)data\n+       rewind 11\n+       data = 0\n+       read(11,end=        1001 )data\n+ 1001  continue\n+       read(11,end=        1002 )data\n+       call abort\n+ 1002  continue\n+       if (.not. all(data == -3)) call abort()\n+       close(11)\n+       end\n+"}, {"sha": "9017548d463d1b659bfed0e6a0328c5b0adf5c83", "filename": "gcc/testsuite/gfortran.dg/read_eof_2.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f19c10ceb66780205dd9da0c5c056ee7a911de24/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eof_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f19c10ceb66780205dd9da0c5c056ee7a911de24/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eof_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eof_2.f90?ref=f19c10ceb66780205dd9da0c5c056ee7a911de24", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do run }\n+! PR25835 Check that reading from a file that is at end-of-file does not\n+! segfault or give error.  Test case derived from example in PR from Dale Ranta.\n+! Contributed by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+       integer data(2045) ! Exceed internal buffer size\n+       data=-1\n+       open(unit=11,status='scratch', form='unformatted')\n+       write(11)data\n+       read(11,end=        1000 )data\n+       call abort()\n+ 1000  continue\n+       backspace 11\n+       backspace 11\n+       data = 0\n+       read(11)data\n+       if (.not. all(data == -1)) call abort()\n+       read(11,end=        1002 )data\n+       call abort()\n+ 1002  continue\n+       close(11)\n+       end"}, {"sha": "5cca802c2a66f90d47b5ba5d7044347060cfbc3f", "filename": "gcc/testsuite/gfortran.dg/read_eof_3.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f19c10ceb66780205dd9da0c5c056ee7a911de24/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eof_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f19c10ceb66780205dd9da0c5c056ee7a911de24/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eof_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eof_3.f90?ref=f19c10ceb66780205dd9da0c5c056ee7a911de24", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do run }\n+! PR25835 Check that reading from a file that is at end-of-file does not\n+! segfault or give error.  Test case derived from example in PR from Dale Ranta.\n+! Contributed by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+       integer data(5000)\n+       data=-256\n+       open(unit=11,status='scratch', form='unformatted')\n+       write(11)data\n+       write(11)data\n+       read(11,end=        1000 )data\n+       call abort()\n+ 1000  continue\n+       backspace 11\n+       rewind 11\n+       write(11)data\n+       read(11,end=        1001 )data\n+       call abort()\n+ 1001  continue\n+       data = 0\n+       backspace 11\n+       rewind 11\n+       read(11,end=        1002 )data\n+       if (.not. all(data == -256)) call abort()\n+ 1002  continue\n+       read(11,end=        1003 )data\n+       call abort()\n+ 1003  continue\n+       close(11)\n+       end\n+\n+"}]}