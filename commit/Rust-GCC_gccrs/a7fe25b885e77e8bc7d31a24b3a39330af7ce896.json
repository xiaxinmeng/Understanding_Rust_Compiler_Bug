{"sha": "a7fe25b885e77e8bc7d31a24b3a39330af7ce896", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdmZTI1Yjg4NWU3N2U4YmM3ZDMxYTI0YjNhMzkzMzBhZjdjZTg5Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-11-22T08:22:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-11-22T08:22:52Z"}, "message": "re PR target/37170 (gcc.dg/weak/weak-1.c)\n\n\tPR target/37170\n\t* final.c (mark_symbol_refs_as_used): New function.\n\t* output.h (mark_symbol_refs_as_used): New prototype.\n\t* config/s390/s390.c (s390_mark_symbol_ref_as_used): Removed.\n\t(s390_output_pool_entry): Use mark_symbol_refs_as_used.\n\t* config/arm/arm.md (consttable_4): Likewise.\n\nFrom-SVN: r142113", "tree": {"sha": "7469da4a5aa75fe9e17224ad66d315aa58c26db1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7469da4a5aa75fe9e17224ad66d315aa58c26db1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7fe25b885e77e8bc7d31a24b3a39330af7ce896", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7fe25b885e77e8bc7d31a24b3a39330af7ce896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7fe25b885e77e8bc7d31a24b3a39330af7ce896", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7fe25b885e77e8bc7d31a24b3a39330af7ce896/comments", "author": null, "committer": null, "parents": [{"sha": "3b13901446c8019b68e5de6406bc7d3d3ce69a3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b13901446c8019b68e5de6406bc7d3d3ce69a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b13901446c8019b68e5de6406bc7d3d3ce69a3e"}], "stats": {"total": 40, "additions": 17, "deletions": 23}, "files": [{"sha": "b60ba831d1574162d6b9a84f739524e02153de94", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fe25b885e77e8bc7d31a24b3a39330af7ce896/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fe25b885e77e8bc7d31a24b3a39330af7ce896/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=a7fe25b885e77e8bc7d31a24b3a39330af7ce896", "patch": "@@ -10836,6 +10836,7 @@\n       }\n       default:\n         assemble_integer (operands[0], 4, BITS_PER_WORD, 1);\n+\tmark_symbol_refs_as_used (operands[0]);\n         break;\n       }\n     return \\\"\\\";"}, {"sha": "b6c2089f0ba0e9e239722eba9de92d617452d105", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fe25b885e77e8bc7d31a24b3a39330af7ce896/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fe25b885e77e8bc7d31a24b3a39330af7ce896/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=a7fe25b885e77e8bc7d31a24b3a39330af7ce896", "patch": "@@ -6664,25 +6664,6 @@ s390_chunkify_cancel (struct constant_pool *pool_list)\n     }\n }\n \n-/* Helper rtx-iteration-function for s390_output_pool_entry.  Marks\n-   SYMBOL_REFs as referenced through use of assemble_external.  */\n-\n-static int\n-s390_mark_symbol_ref_as_used (rtx *x, void *dummy ATTRIBUTE_UNUSED)\n-{\n-  /* If we have a used symbol, we may have to emit assembly\n-     annotations corresponding to whether the symbol is external, weak\n-     or has non-default visibility.  */\n-  if (GET_CODE (*x) == SYMBOL_REF)\n-    {\n-      tree t = SYMBOL_REF_DECL (*x);\n-      if (t)\n-        assemble_external (t);\n-      return -1;\n-    }\n-  return 0;\n-}\n-\n /* Output the constant pool entry EXP in mode MODE with alignment ALIGN.  */\n \n void\n@@ -6702,7 +6683,7 @@ s390_output_pool_entry (rtx exp, enum machine_mode mode, unsigned int align)\n \n     case MODE_INT:\n       assemble_integer (exp, GET_MODE_SIZE (mode), align, 1);\n-      for_each_rtx (&exp, s390_mark_symbol_ref_as_used, NULL);\n+      mark_symbol_refs_as_used (exp);\n       break;\n \n     default:"}, {"sha": "aceeb7cfb13e9530babc3d324007fe1e0a0072c1", "filename": "gcc/final.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fe25b885e77e8bc7d31a24b3a39330af7ce896/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fe25b885e77e8bc7d31a24b3a39330af7ce896/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=a7fe25b885e77e8bc7d31a24b3a39330af7ce896", "patch": "@@ -3349,8 +3349,9 @@ output_asm_label (rtx x)\n   assemble_name (asm_out_file, buf);\n }\n \n-/* Helper rtx-iteration-function for output_operand.  Marks\n-   SYMBOL_REFs as referenced through use of assemble_external.  */\n+/* Helper rtx-iteration-function for mark_symbol_refs_as_used and\n+   output_operand.  Marks SYMBOL_REFs as referenced through use of\n+   assemble_external.  */\n \n static int\n mark_symbol_ref_as_used (rtx *xp, void *dummy ATTRIBUTE_UNUSED)\n@@ -3374,6 +3375,14 @@ mark_symbol_ref_as_used (rtx *xp, void *dummy ATTRIBUTE_UNUSED)\n   return 0;\n }\n \n+/* Marks SYMBOL_REFs in x as referenced through use of assemble_external.  */\n+\n+void\n+mark_symbol_refs_as_used (rtx x)\n+{\n+  for_each_rtx (&x, mark_symbol_ref_as_used, NULL);\n+}\n+\n /* Print operand X using machine-dependent assembler syntax.\n    The macro PRINT_OPERAND is defined just to control this function.\n    CODE is a non-digit that preceded the operand-number in the % spec,"}, {"sha": "79b628fd3381c7cde1c2b6298b36c9b496b2680a", "filename": "gcc/output.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fe25b885e77e8bc7d31a24b3a39330af7ce896/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fe25b885e77e8bc7d31a24b3a39330af7ce896/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=a7fe25b885e77e8bc7d31a24b3a39330af7ce896", "patch": "@@ -1,7 +1,7 @@\n /* Declarations for insn-output.c.  These functions are defined in recog.c,\n    final.c, and varasm.c.\n    Copyright (C) 1987, 1991, 1994, 1997, 1998, 1999, 2000, 2001, 2002,\n-   2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n+   2003, 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -97,6 +97,9 @@ extern int label_to_alignment (rtx);\n /* Output a LABEL_REF, or a bare CODE_LABEL, as an assembler symbol.  */\n extern void output_asm_label (rtx);\n \n+/* Marks SYMBOL_REFs in x as referenced through use of assemble_external.  */\n+extern void mark_symbol_refs_as_used (rtx);\n+\n /* Print a memory reference operand for address X\n    using machine-dependent assembler syntax.  */\n extern void output_address (rtx);"}]}