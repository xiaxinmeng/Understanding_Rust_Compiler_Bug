{"sha": "1c7485afda66c17e00d3dcdce2ef9bf9106d3cda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM3NDg1YWZkYTY2YzE3ZTAwZDNkY2RjZTJlZjliZjkxMDZkM2NkYQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-10-02T18:01:50Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-10-02T18:01:50Z"}, "message": "re PR c/67730 (No warning when returning NULL in void function)\n\n\tPR c/67730\n\t* c-typeck.c (convert_for_assignment): Use the expansion point\n\tlocation throughout.\n\n\t* gcc.dg/pr67730-1.c: New test.\n\t* gcc.dg/pr67730-2.c: New test.\n\t* gcc.dg/pr67730.h: New test.\n\nFrom-SVN: r228408", "tree": {"sha": "d5d60aff6ad3a5769953eceda32f81ad7a05817c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5d60aff6ad3a5769953eceda32f81ad7a05817c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12651878c680a8568e4d6c03b72d05728f0637fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12651878c680a8568e4d6c03b72d05728f0637fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12651878c680a8568e4d6c03b72d05728f0637fc"}], "stats": {"total": 87, "additions": 87, "deletions": 0}, "files": [{"sha": "c6eab4ed0fc84030506aced1d05c352e7b0fc8c9", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=1c7485afda66c17e00d3dcdce2ef9bf9106d3cda", "patch": "@@ -1,3 +1,9 @@\n+2015-10-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/67730\n+\t* c-typeck.c (convert_for_assignment): Use the expansion point\n+\tlocation throughout.\n+\n 2015-10-02  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/64249"}, {"sha": "ad02d6cfda1a3e0eab7f60e89c76e87a912fa3e3", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=1c7485afda66c17e00d3dcdce2ef9bf9106d3cda", "patch": "@@ -5718,6 +5718,10 @@ convert_for_assignment (location_t location, location_t expr_loc, tree type,\n   tree rname = NULL_TREE;\n   bool objc_ok = false;\n \n+  /* Use the expansion point location to handle cases such as user's\n+     function returning a wrong-type macro defined in a system header.  */\n+  location = expansion_point_location_if_in_system_header (location);\n+\n   if (errtype == ic_argpass)\n     {\n       tree selector;"}, {"sha": "e671952cdbddae0c0eb7b0ca2f1606370be65e0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c7485afda66c17e00d3dcdce2ef9bf9106d3cda", "patch": "@@ -1,3 +1,10 @@\n+2015-10-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/67730\n+\t* gcc.dg/pr67730-1.c: New test.\n+\t* gcc.dg/pr67730-2.c: New test.\n+\t* gcc.dg/pr67730.h: New test.\n+\n 2015-10-02  Marek Polacek  <polacek@redhat.com>\n \n \t* c-c++-common/Wduplicated-cond-2.c: Skip until PR67819 is resolved."}, {"sha": "bb82f6d8e85b2136a213e163afe76bc0db0a957c", "filename": "gcc/testsuite/gcc.dg/pr67730-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67730-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67730-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67730-1.c?ref=1c7485afda66c17e00d3dcdce2ef9bf9106d3cda", "patch": "@@ -0,0 +1,16 @@\n+/* PR c/67730 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wc++-compat\" } */\n+\n+#include \"pr67730.h\"\n+\n+extern void bar (unsigned char *);\n+\n+unsigned char *\n+f (void *p)\n+{\n+   unsigned char *uc = ONEP; /* { dg-warning \"request for implicit conversion\" } */\n+   uc = ONEP; /* { dg-warning \"request for implicit conversion\" } */\n+   bar (ONEP); /* { dg-warning \"request for implicit conversion\" } */\n+   return ONEP; /* { dg-warning \"request for implicit conversion\" } */\n+}"}, {"sha": "29d726754bf0308d40b4f83e4b9daf26eca2b04e", "filename": "gcc/testsuite/gcc.dg/pr67730-2.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67730-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67730-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67730-2.c?ref=1c7485afda66c17e00d3dcdce2ef9bf9106d3cda", "patch": "@@ -0,0 +1,22 @@\n+/* PR c/67730 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+#include \"pr67730.h\"\n+\n+extern void bar (int);\n+\n+int\n+fn1 (void)\n+{\n+  int a = NULL; /* { dg-warning \"initialization makes integer from pointer\" } */\n+  a = NULL; /* { dg-warning \"assignment makes integer from pointer\" } */\n+  bar (NULL); /* { dg-warning \"passing argument 1\" } */\n+  return NULL; /* { dg-warning \"return makes integer from pointer\" } */\n+}\n+\n+int\n+fn2 (void)\n+{\n+  RETURN; /* { dg-warning \"return makes integer from pointer\" } */\n+}"}, {"sha": "9a9afc9a09dd04c2789b1a4a25d7f8bbf8f0cf6e", "filename": "gcc/testsuite/gcc.dg/pr67730.h", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67730.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7485afda66c17e00d3dcdce2ef9bf9106d3cda/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67730.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67730.h?ref=1c7485afda66c17e00d3dcdce2ef9bf9106d3cda", "patch": "@@ -0,0 +1,32 @@\n+#pragma GCC system_header\n+#define NULL (void *) 0\n+#define ONEP (void *) 1\n+#define RETURN return NULL\n+\n+extern void sysbar (unsigned char *);\n+\n+unsigned char *\n+sysfn1 (void *p)\n+{\n+   unsigned char *uc = ONEP;\n+   uc = ONEP;\n+   sysbar (ONEP);\n+   return ONEP;\n+}\n+\n+extern void sysbar2 (int);\n+\n+int\n+sysfn2 (void)\n+{\n+  int a = NULL;\n+  a = NULL;\n+  sysbar2 (NULL);\n+  return NULL;\n+}\n+\n+int\n+sysfn3 (void)\n+{\n+  RETURN;\n+}"}]}