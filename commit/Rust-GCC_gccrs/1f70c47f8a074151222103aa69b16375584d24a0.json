{"sha": "1f70c47f8a074151222103aa69b16375584d24a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY3MGM0N2Y4YTA3NDE1MTIyMjEwM2FhNjliMTYzNzU1ODRkMjRhMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T13:05:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T13:05:10Z"}, "message": "[multiple changes]\n\n2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_util.adb (Is_Post_State): A reference to a\n\tgeneric in out parameter is considered a change in the post-state\n\tof a subprogram.\n\n2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Load_Parent_Of_Generic); When retrieving the\n\tdeclaration of a subprogram instance within its wrapper package,\n\tskip over null statements that may result from the rewriting of\n\tignored pragmas.\n\n2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_attr.adb (Expand_Attribute_Reference, case 'Read):\n\tIf the type is an unchecked_union, replace the attribute with\n\ta Raise_Program_Error (rather than inserting such before the\n\tattribute reference) to handle properly the case where we are\n\tprocessing a component of a larger record, and we need to prevent\n\tfurther expansion for the unchecked union.\n\t(Expand_Attribute_Reference, case 'Write): If the type is\n\tan unchecked_union, check whether enclosing scope is a Write\n\tsubprogram. Replace attribute with a Raise_Program_Error if the\n\tdiscriminants of the unchecked_union type have not default values\n\tbecause such a use is erroneous..\n\n2017-04-25  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_ch9.adb (Expand_N_Task_Type_Declaration):\n\tAdd relative_deadline to task record on edf profile.\n\t(Make_Initialize_Protection): Pass deadline_floor value on edf profile.\n\t(Make_Task_Create_Call): Pass relative_deadline value.\n\t* par-prag.adb (Prag): Handle Pragma_Deadline_Floor.\n\t* s-rident.ads (Profile_Name): Add GNAT_Ravenscar_EDF.\n\t(Profile_Info): Add info for GNAT_Ravenscar_EDF.\n\t* sem_prag.adb (Set_Ravenscar_Profile): Handle\n\tGNAT_Ravenscar_EDF (set scheduling policy).\n\t(Analyze_Pragma): Handle GNAT_Ravenscar_EDF profile and Deadline_Floor\n\tpragma.\n\t(Sig_Flags): Add choice for Pragma_Deadline_Floor.\n\t* snames.ads-tmpl (Name_Deadline_Floor, Name_Gnat_Ravenscar_EDF):\n\tNew names.\n\t(Pragma_Deadline_Floor): New pragma.\n\t* targparm.adb (Get_Target_Parameters): Recognize\n\tGNAT_Ravenscar_EDF profile.\n\nFrom-SVN: r247221", "tree": {"sha": "cb51f33b33295373b1f9a82e8882044d03857fb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb51f33b33295373b1f9a82e8882044d03857fb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f70c47f8a074151222103aa69b16375584d24a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f70c47f8a074151222103aa69b16375584d24a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f70c47f8a074151222103aa69b16375584d24a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f70c47f8a074151222103aa69b16375584d24a0/comments", "author": null, "committer": null, "parents": [{"sha": "daad20d6820a8a84a05192d54725187d7d690ac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daad20d6820a8a84a05192d54725187d7d690ac6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daad20d6820a8a84a05192d54725187d7d690ac6"}], "stats": {"total": 337, "additions": 291, "deletions": 46}, "files": [{"sha": "27c0af01c893cdc1f6f0ae15b00435e32525a02d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1f70c47f8a074151222103aa69b16375584d24a0", "patch": "@@ -1,3 +1,50 @@\n+2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_util.adb (Is_Post_State): A reference to a\n+\tgeneric in out parameter is considered a change in the post-state\n+\tof a subprogram.\n+\n+2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Load_Parent_Of_Generic); When retrieving the\n+\tdeclaration of a subprogram instance within its wrapper package,\n+\tskip over null statements that may result from the rewriting of\n+\tignored pragmas.\n+\n+2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_attr.adb (Expand_Attribute_Reference, case 'Read):\n+\tIf the type is an unchecked_union, replace the attribute with\n+\ta Raise_Program_Error (rather than inserting such before the\n+\tattribute reference) to handle properly the case where we are\n+\tprocessing a component of a larger record, and we need to prevent\n+\tfurther expansion for the unchecked union.\n+\t(Expand_Attribute_Reference, case 'Write): If the type is\n+\tan unchecked_union, check whether enclosing scope is a Write\n+\tsubprogram. Replace attribute with a Raise_Program_Error if the\n+\tdiscriminants of the unchecked_union type have not default values\n+\tbecause such a use is erroneous..\n+\n+2017-04-25  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_N_Task_Type_Declaration):\n+\tAdd relative_deadline to task record on edf profile.\n+\t(Make_Initialize_Protection): Pass deadline_floor value on edf profile.\n+\t(Make_Task_Create_Call): Pass relative_deadline value.\n+\t* par-prag.adb (Prag): Handle Pragma_Deadline_Floor.\n+\t* s-rident.ads (Profile_Name): Add GNAT_Ravenscar_EDF.\n+\t(Profile_Info): Add info for GNAT_Ravenscar_EDF.\n+\t* sem_prag.adb (Set_Ravenscar_Profile): Handle\n+\tGNAT_Ravenscar_EDF (set scheduling policy).\n+\t(Analyze_Pragma): Handle GNAT_Ravenscar_EDF profile and Deadline_Floor\n+\tpragma.\n+\t(Sig_Flags): Add choice for Pragma_Deadline_Floor.\n+\t* snames.ads-tmpl (Name_Deadline_Floor, Name_Gnat_Ravenscar_EDF):\n+\tNew names.\n+\t(Pragma_Deadline_Floor): New pragma.\n+\t* targparm.adb (Get_Target_Parameters): Recognize\n+\tGNAT_Ravenscar_EDF profile.\n+\n 2017-04-25  Arnaud Charlet  <charlet@adacore.com trojanek>\n \n \t* gnatvsn.ads (Library_Version): Bump to 8. Update comment."}, {"sha": "ec16bee6c2a9184af0f675e109dc17df544bffe4", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=1f70c47f8a074151222103aa69b16375584d24a0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -5515,12 +5515,17 @@ package body Exp_Attr is\n \n                --  Ada 2005 (AI-216): Program_Error is raised when executing\n                --  the default implementation of the Read attribute of an\n-               --  Unchecked_Union type.\n+               --  Unchecked_Union type. We replace the attribute with a\n+               --  raise statement (rather than inserting it before) to handle\n+               --  properly the case of an unchecked union that is a record\n+               --  component.\n \n                if Is_Unchecked_Union (Base_Type (U_Type)) then\n-                  Insert_Action (N,\n+                  Rewrite (N,\n                     Make_Raise_Program_Error (Loc,\n                       Reason => PE_Unchecked_Union_Restriction));\n+                  Set_Etype (N, B_Type);\n+                  return;\n                end if;\n \n                if Has_Discriminants (U_Type)\n@@ -7215,14 +7220,21 @@ package body Exp_Attr is\n                --  Unchecked_Union type. However, if the 'Write reference is\n                --  within the generated Output stream procedure, Write outputs\n                --  the components, and the default values of the discriminant\n-               --  are streamed by the Output procedure itself.\n+               --  are streamed by the Output procedure itself. If there are\n+               --  no default values this is also erroneous.\n \n-               if Is_Unchecked_Union (Base_Type (U_Type))\n-                 and not Is_TSS (Current_Scope, TSS_Stream_Output)\n-               then\n-                  Insert_Action (N,\n-                    Make_Raise_Program_Error (Loc,\n-                      Reason => PE_Unchecked_Union_Restriction));\n+               if Is_Unchecked_Union (Base_Type (U_Type)) then\n+                  if (not Is_TSS (Current_Scope, TSS_Stream_Output)\n+                       and not Is_TSS (Current_Scope, TSS_Stream_Write))\n+                    or else No (Discriminant_Default_Value\n+                                 (First_Discriminant (U_Type)))\n+                  then\n+                     Rewrite (N,\n+                       Make_Raise_Program_Error (Loc,\n+                         Reason => PE_Unchecked_Union_Restriction));\n+                     Set_Etype (N, U_Type);\n+                     return;\n+                  end if;\n                end if;\n \n                if Has_Discriminants (U_Type)"}, {"sha": "89f9e71ac9f3ce8e30ab0188da583492449a29d5", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 60, "deletions": 12, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=1f70c47f8a074151222103aa69b16375584d24a0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -12026,9 +12026,11 @@ package body Exp_Ch9 is\n \n       --  Add the _Relative_Deadline component if a Relative_Deadline pragma is\n       --  present. If we are using a restricted run time this component will\n-      --  not be added (deadlines are not allowed by the Ravenscar profile).\n+      --  not be added (deadlines are not allowed by the Ravenscar profile),\n+      --  unless the task dispatching policy is EDF (for GNAT_Ravenscar_EDF\n+      --  profile).\n \n-      if not Restricted_Profile\n+      if (not Restricted_Profile or else Task_Dispatching_Policy = 'E')\n         and then Present (Taskdef)\n         and then Has_Relative_Deadline_Pragma (Taskdef)\n       then\n@@ -13822,6 +13824,46 @@ package body Exp_Ch9 is\n               New_Occurrence_Of (RTE (RE_Unspecified_Priority), Loc));\n          end if;\n \n+         --  Deadline_Floor parameter for GNAT_Ravenscar_EDF runtimes\n+\n+         if Restricted_Profile and Task_Dispatching_Policy = 'E' then\n+            Deadline_Floor : declare\n+               Item : constant Node_Id :=\n+                        Get_Rep_Item\n+                          (Ptyp, Name_Deadline_Floor, Check_Parents => False);\n+\n+               Deadline : Node_Id;\n+\n+            begin\n+               if Present (Item) then\n+\n+                  --  Pragma Deadline_Floor\n+\n+                  if Nkind (Item) = N_Pragma then\n+                     Deadline :=\n+                       Expression\n+                         (First (Pragma_Argument_Associations (Item)));\n+\n+                  --  Attribute definition clause Deadline_Floor\n+\n+                  else\n+                     pragma Assert\n+                       (Nkind (Item) = N_Attribute_Definition_Clause);\n+\n+                     Deadline := Expression (Item);\n+                  end if;\n+\n+                  Append_To (Args, Deadline);\n+\n+               --  Unusual case: default deadline\n+\n+               else\n+                  Append_To (Args,\n+                    New_Occurrence_Of (RTE (RE_Time_Span_Zero), Loc));\n+               end if;\n+            end Deadline_Floor;\n+         end if;\n+\n          --  Test for Compiler_Info parameter. This parameter allows entry body\n          --  procedures and barrier functions to be called from the runtime. It\n          --  is a pointer to the record generated by the compiler to represent\n@@ -14127,15 +14169,18 @@ package body Exp_Ch9 is\n \n       --  Priority parameter. Set to Unspecified_Priority unless there is a\n       --  Priority rep item, in which case we take the value from the rep item.\n+      --  Not used on Ravenscar_EDF profile.\n \n-      if Has_Rep_Item (Ttyp, Name_Priority, Check_Parents => False) then\n-         Append_To (Args,\n-           Make_Selected_Component (Loc,\n-             Prefix        => Make_Identifier (Loc, Name_uInit),\n-             Selector_Name => Make_Identifier (Loc, Name_uPriority)));\n-      else\n-         Append_To (Args,\n-           New_Occurrence_Of (RTE (RE_Unspecified_Priority), Loc));\n+      if not (Restricted_Profile and then Task_Dispatching_Policy = 'E') then\n+         if Has_Rep_Item (Ttyp, Name_Priority, Check_Parents => False) then\n+            Append_To (Args,\n+              Make_Selected_Component (Loc,\n+                Prefix        => Make_Identifier (Loc, Name_uInit),\n+                Selector_Name => Make_Identifier (Loc, Name_uPriority)));\n+         else\n+            Append_To (Args,\n+              New_Occurrence_Of (RTE (RE_Unspecified_Priority), Loc));\n+         end if;\n       end if;\n \n       --  Optional Stack parameter\n@@ -14231,7 +14276,7 @@ package body Exp_Ch9 is\n            New_Occurrence_Of (RTE (RE_Unspecified_CPU), Loc));\n       end if;\n \n-      if not Restricted_Profile then\n+      if not Restricted_Profile or else Task_Dispatching_Policy = 'E' then\n \n          --  Deadline parameter. If no Relative_Deadline pragma is present,\n          --  then the deadline is Time_Span_Zero. If a pragma is present, then\n@@ -14255,6 +14300,9 @@ package body Exp_Ch9 is\n             Append_To (Args,\n               New_Occurrence_Of (RTE (RE_Time_Span_Zero), Loc));\n          end if;\n+      end if;\n+\n+      if not Restricted_Profile then\n \n          --  Dispatching_Domain parameter. If no Dispatching_Domain rep item is\n          --  present, then the dispatching domain is null. If a rep item is"}, {"sha": "6296f7b9c7c54b095c7e73f9b8cb9e2ccbbfbafc", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=1f70c47f8a074151222103aa69b16375584d24a0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1334,6 +1334,7 @@ begin\n          | Pragma_Component_Alignment\n          | Pragma_Controlled\n          | Pragma_Convention\n+         | Pragma_Deadline_Floor\n          | Pragma_Debug_Policy\n          | Pragma_Depends\n          | Pragma_Detect_Blocking"}, {"sha": "f3bd771e89e01fda2827e68344bb3f8e498d9567", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 57, "deletions": 3, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=1f70c47f8a074151222103aa69b16375584d24a0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -381,7 +381,8 @@ package System.Rident is\n       Restricted_Tasking,\n       Restricted,\n       Ravenscar,\n-      GNAT_Extended_Ravenscar);\n+      GNAT_Extended_Ravenscar,\n+      GNAT_Ravenscar_EDF);\n    --  Names of recognized profiles. No_Profile is used to indicate that a\n    --  restriction came from pragma Restrictions[_Warning], as opposed to\n    --  pragma Profile[_Warning]. Restricted_Tasking is a non-user profile that\n@@ -390,7 +391,7 @@ package System.Rident is\n    --  that also restrict protected types.\n \n    subtype Profile_Name_Actual is Profile_Name\n-     range No_Implementation_Extensions .. GNAT_Extended_Ravenscar;\n+     range No_Implementation_Extensions .. Profile_Name'Last;\n    --  Actual used profile names\n \n    type Profile_Data is record\n@@ -581,6 +582,59 @@ package System.Rident is\n \n                         Value =>\n                           (Max_Asynchronous_Select_Nesting => 0,\n+                           Max_Select_Alternatives         => 0,\n+                           Max_Task_Entries                => 0,\n+                           others                          => 0)),\n+\n+                     --  GNAT_Ravenscar_EDF Profile\n+\n+                     --  Note: the table entries here only represent the\n+                     --  required restriction profile for GNAT_Ravenscar_EDF.\n+                     --  The full GNAT_Ravenscar_EDF profile also requires:\n+\n+                     --    pragma Dispatching_Policy (EDF_Across_Priorities);\n+                     --    pragma Locking_Policy (Ceiling_Locking);\n+                     --    pragma Detect_Blocking;\n+\n+                     GNAT_Ravenscar_EDF  =>\n+\n+                     --  Restrictions for Ravenscar = Restricted profile ..\n+\n+                       (Set   =>\n+                          (No_Abort_Statements             => True,\n+                           No_Asynchronous_Control         => True,\n+                           No_Dynamic_Attachment           => True,\n+                           No_Dynamic_Priorities           => True,\n+                           No_Entry_Queue                  => True,\n+                           No_Local_Protected_Objects      => True,\n+                           No_Protected_Type_Allocators    => True,\n+                           No_Requeue_Statements           => True,\n+                           No_Task_Allocators              => True,\n+                           No_Task_Attributes_Package      => True,\n+                           No_Task_Hierarchy               => True,\n+                           No_Terminate_Alternatives       => True,\n+                           Max_Asynchronous_Select_Nesting => True,\n+                           Max_Protected_Entries           => True,\n+                           Max_Select_Alternatives         => True,\n+                           Max_Task_Entries                => True,\n+\n+                           --  plus these additional restrictions:\n+\n+                           No_Calendar                      => True,\n+                           No_Implicit_Heap_Allocations     => True,\n+                           No_Local_Timing_Events           => True,\n+                           No_Relative_Delay                => True,\n+                           No_Select_Statements             => True,\n+                           No_Specific_Termination_Handlers => True,\n+                           No_Task_Termination              => True,\n+                           Simple_Barriers                  => True,\n+                           others                           => False),\n+\n+                        --  Value settings for Ravenscar (same as Restricted)\n+\n+                        Value =>\n+                          (Max_Asynchronous_Select_Nesting => 0,\n+                           Max_Protected_Entries           => 1,\n                            Max_Select_Alternatives         => 0,\n                            Max_Task_Entries                => 0,\n                            others                          => 0)));"}, {"sha": "2f2262d925e2056dfd5f254768c4c2d4b62fb6cf", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=1f70c47f8a074151222103aa69b16375584d24a0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -13217,8 +13217,8 @@ package body Sem_Ch12 is\n                --  package, in which case the usual generic rule applies.\n \n                declare\n-                  Exp_Status         : Boolean := True;\n-                  Scop               : Entity_Id;\n+                  Exp_Status : Boolean := True;\n+                  Scop       : Entity_Id;\n \n                begin\n                   --  Loop through scopes looking for generic package\n@@ -13292,8 +13292,7 @@ package body Sem_Ch12 is\n \n                            --  Package instance\n \n-                           if\n-                             Nkind (Node (Decl)) = N_Package_Instantiation\n+                           if Nkind (Node (Decl)) = N_Package_Instantiation\n                            then\n                               Instantiate_Package_Body\n                                 (Info, Body_Optional => True);\n@@ -13308,16 +13307,19 @@ package body Sem_Ch12 is\n                               --  these result in the corresponding pragmas,\n                               --  inserted after the subprogram declaration.\n                               --  They must be skipped as well when retrieving\n-                              --  the desired spec. A direct link would be\n-                              --  more robust ???\n+                              --  the desired spec. Some of them may have been\n+                              --  rewritten as null statements.\n+                              --  A direct link would be more robust ???\n \n                               declare\n                                  Decl : Node_Id :=\n                                           (Last (Visible_Declarations\n                                             (Specification (Info.Act_Decl))));\n                               begin\n                                  while Nkind_In (Decl,\n-                                   N_Subprogram_Renaming_Declaration, N_Pragma)\n+                                   N_Null_Statement,\n+                                   N_Pragma,\n+                                   N_Subprogram_Renaming_Declaration)\n                                  loop\n                                     Decl := Prev (Decl);\n                                  end loop;"}, {"sha": "6d570d07319888f0d796146b1a912a3bd9bbb1b5", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 64, "deletions": 6, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=1f70c47f8a074151222103aa69b16375584d24a0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3998,9 +3998,10 @@ package body Sem_Prag is\n \n       procedure Set_Ravenscar_Profile (Profile : Profile_Name; N : Node_Id);\n       --  Activate the set of configuration pragmas and restrictions that make\n-      --  up the Profile. Profile must be either GNAT_Extended_Ravencar or\n-      --  Ravenscar. N is the corresponding pragma node, which is used for\n-      --  error messages on any constructs violating the profile.\n+      --  up the Profile. Profile must be either GNAT_Extended_Ravencar,\n+      --  GNAT_Ravenscar_EDF or Ravenscar. N is the corresponding pragma node,\n+      --  which is used for error messages on any constructs violating the\n+      --  profile.\n \n       ----------------------------------\n       -- Acquire_Warning_Match_String --\n@@ -10322,6 +10323,9 @@ package body Sem_Prag is\n       --    Set required policies\n \n       --      pragma Task_Dispatching_Policy (FIFO_Within_Priorities)\n+      --        (For Ravenscar and GNAT_Extended_Ravenscar profiles)\n+      --      pragma Task_Dispatching_Policy (EDF_Across_Priorities)\n+      --        (For GNAT_Ravenscar_EDF profile)\n       --      pragma Locking_Policy (Ceiling_Locking)\n \n       --    Set Detect_Blocking mode\n@@ -10364,13 +10368,24 @@ package body Sem_Prag is\n          Pref_Id : Node_Id;\n          Sel_Id  : Node_Id;\n \n+         Profile_Dispatching_Policy : Character;\n+\n       --  Start of processing for Set_Ravenscar_Profile\n \n       begin\n+         --  pragma Task_Dispatching_Policy (EDF_Across_Priorities)\n+\n+         if Profile = GNAT_Ravenscar_EDF then\n+            Profile_Dispatching_Policy := 'E';\n+\n          --  pragma Task_Dispatching_Policy (FIFO_Within_Priorities)\n \n+         else\n+            Profile_Dispatching_Policy := 'F';\n+         end if;\n+\n          if Task_Dispatching_Policy /= ' '\n-           and then Task_Dispatching_Policy /= 'F'\n+           and then Task_Dispatching_Policy /= Profile_Dispatching_Policy\n          then\n             Error_Msg_Sloc := Task_Dispatching_Policy_Sloc;\n             Set_Error_Msg_To_Profile_Name;\n@@ -10381,7 +10396,7 @@ package body Sem_Prag is\n          --  name.\n \n          else\n-            Task_Dispatching_Policy := 'F';\n+            Task_Dispatching_Policy := Profile_Dispatching_Policy;\n \n             if Task_Dispatching_Policy_Sloc /= System_Location then\n                Task_Dispatching_Policy_Sloc := Loc;\n@@ -13818,6 +13833,45 @@ package body Sem_Prag is\n             Record_Rep_Item (Ent, N);\n          end CPU;\n \n+         --------------------\n+         -- Deadline_Floor --\n+         --------------------\n+\n+         --  pragma Deadline_Floor (time_span_EXPRESSION);\n+\n+         when Pragma_Deadline_Floor => Deadline_Floor : declare\n+            P   : constant Node_Id := Parent (N);\n+            Arg : Node_Id;\n+            Ent : Entity_Id;\n+\n+         begin\n+            GNAT_Pragma;\n+            Check_No_Identifiers;\n+            Check_Arg_Count (1);\n+\n+            Arg := Get_Pragma_Arg (Arg1);\n+\n+            --  The expression must be analyzed in the special manner described\n+            --  in \"Handling of Default and Per-Object Expressions\" in sem.ads.\n+\n+            Preanalyze_Spec_Expression (Arg, RTE (RE_Time_Span));\n+\n+            --  Only protected types allowed\n+\n+            if Nkind (P) /= N_Protected_Definition then\n+               Pragma_Misplaced;\n+\n+            else\n+               Ent := Defining_Identifier (Parent (P));\n+\n+               --  Check duplicate pragma before we chain the pragma in the Rep\n+               --  Item chain of Ent.\n+\n+               Check_Duplicate_Pragma (Ent);\n+               Record_Rep_Item (Ent, N);\n+            end if;\n+         end Deadline_Floor;\n+\n          -----------\n          -- Debug --\n          -----------\n@@ -19928,6 +19982,9 @@ package body Sem_Prag is\n                elsif Chars (Argx) = Name_Gnat_Extended_Ravenscar then\n                   Set_Ravenscar_Profile (GNAT_Extended_Ravenscar, N);\n \n+               elsif Chars (Argx) = Name_Gnat_Ravenscar_EDF then\n+                  Set_Ravenscar_Profile (GNAT_Ravenscar_EDF, N);\n+\n                elsif Chars (Argx) = Name_Restricted then\n                   Set_Profile_Restrictions\n                     (Restricted,\n@@ -29110,6 +29167,7 @@ package body Sem_Prag is\n       Pragma_Controlled                     =>  0,\n       Pragma_Convention                     =>  0,\n       Pragma_Convention_Identifier          =>  0,\n+      Pragma_Deadline_Floor                 => -1,\n       Pragma_Debug                          => -1,\n       Pragma_Debug_Policy                   =>  0,\n       Pragma_Detect_Blocking                =>  0,"}, {"sha": "d33a4f9389c49bedf4728ccee26d28e5bf681fae", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=1f70c47f8a074151222103aa69b16375584d24a0", "patch": "@@ -3311,11 +3311,20 @@ package body Sem_Util is\n                elsif Nkind_In (N, N_Expanded_Name, N_Identifier) then\n                   Ent := Entity (N);\n \n-                  --  The entity may be modifiable through an implicit\n-                  --  dereference.\n+                  --  Treat an undecorated reference as OK\n \n                   if No (Ent)\n-                    or else Ekind (Ent) in Assignable_Kind\n+\n+                    --  A reference to an assignable entity is considered a\n+                    --  change in the post-state of a subprogram.\n+\n+                    or else Ekind_In (Ent, E_Generic_In_Out_Parameter,\n+                                           E_In_Out_Parameter,\n+                                           E_Out_Parameter,\n+                                           E_Variable)\n+\n+                    --  The reference may be modified through a dereference\n+\n                     or else (Is_Access_Type (Etype (Ent))\n                               and then Nkind (Parent (N)) =\n                                          N_Selected_Component)"}, {"sha": "2d49322e982a2db367e3aae265341c3574b41828", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=1f70c47f8a074151222103aa69b16375584d24a0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -513,6 +513,7 @@ package Snames is\n    --  correctly recognize and process CPU. CPU is a standard Ada 2012\n    --  pragma.\n \n+   Name_Deadline_Floor                 : constant Name_Id := N + $; -- GNAT\n    Name_Debug                          : constant Name_Id := N + $; -- GNAT\n    Name_Default_Initial_Condition      : constant Name_Id := N + $; -- GNAT\n    Name_Depends                        : constant Name_Id := N + $; -- GNAT\n@@ -748,6 +749,7 @@ package Snames is\n    Name_General                        : constant Name_Id := N + $;\n    Name_Gnat                           : constant Name_Id := N + $;\n    Name_Gnat_Extended_Ravenscar        : constant Name_Id := N + $;\n+   Name_Gnat_Ravenscar_EDF             : constant Name_Id := N + $;\n    Name_Gnatprove                      : constant Name_Id := N + $;\n    Name_GPL                            : constant Name_Id := N + $;\n    Name_High_Order_First               : constant Name_Id := N + $;\n@@ -1871,6 +1873,7 @@ package Snames is\n       Pragma_CPP_Constructor,\n       Pragma_CPP_Virtual,\n       Pragma_CPP_Vtable,\n+      Pragma_Deadline_Floor,\n       Pragma_Debug,\n       Pragma_Default_Initial_Condition,\n       Pragma_Depends,"}, {"sha": "cb12a28e22302aa40613c284c3ee9cf3d96a260b", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f70c47f8a074151222103aa69b16375584d24a0/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=1f70c47f8a074151222103aa69b16375584d24a0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -304,7 +304,18 @@ package body Targparm is\n             Set_Profile_Restrictions (GNAT_Extended_Ravenscar);\n             Opt.Task_Dispatching_Policy := 'F';\n             Opt.Locking_Policy          := 'C';\n-            P := P + 27;\n+            P := P + 41;\n+            goto Line_Loop_Continue;\n+\n+         --  Test for pragma Profile (GNAT_Ravenscar_EDF);\n+\n+         elsif System_Text (P .. P + 35) =\n+                 \"pragma Profile (GNAT_Ravenscar_EDF);\"\n+         then\n+            Set_Profile_Restrictions (GNAT_Ravenscar_EDF);\n+            Opt.Task_Dispatching_Policy := 'E';\n+            Opt.Locking_Policy          := 'C';\n+            P := P + 36;\n             goto Line_Loop_Continue;\n \n          --  Test for pragma Profile (Restricted);"}]}