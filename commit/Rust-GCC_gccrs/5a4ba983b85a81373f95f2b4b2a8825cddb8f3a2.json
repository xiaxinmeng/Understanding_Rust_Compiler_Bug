{"sha": "5a4ba983b85a81373f95f2b4b2a8825cddb8f3a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE0YmE5ODNiODVhODEzNzNmOTVmMmI0YjJhODgyNWNkZGI4ZjNhMg==", "commit": {"author": {"name": "David Daney", "email": "ddaney@avtrex.com", "date": "2006-09-11T18:15:27Z"}, "committer": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2006-09-11T18:15:27Z"}, "message": "re PR classpath/28580 (HTTP HEAD fails on chuncked encoding)\n\n       PR classpath/28580\n       * gnu/java/net/protocol/http/Request.java (readResponse):  Call\n       createResponseBodyStream in more cases and with new parameter.\n       (createResponseBodyStream):  Added new parameter mayHaveBody. Handle\n       HEAD and !mayHaveBody responses specially.\n\nFrom-SVN: r116853", "tree": {"sha": "e98e8f318fc5b8860f69a1c0e3900d5af1192f18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e98e8f318fc5b8860f69a1c0e3900d5af1192f18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a4ba983b85a81373f95f2b4b2a8825cddb8f3a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4ba983b85a81373f95f2b4b2a8825cddb8f3a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a4ba983b85a81373f95f2b4b2a8825cddb8f3a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4ba983b85a81373f95f2b4b2a8825cddb8f3a2/comments", "author": null, "committer": null, "parents": [{"sha": "d29520088232b973624b0623763f0a9e307ef347", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d29520088232b973624b0623763f0a9e307ef347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d29520088232b973624b0623763f0a9e307ef347"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "923e6070d8247d3f715cc6a0ac934eb233d1b4a1", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4ba983b85a81373f95f2b4b2a8825cddb8f3a2/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4ba983b85a81373f95f2b4b2a8825cddb8f3a2/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=5a4ba983b85a81373f95f2b4b2a8825cddb8f3a2", "patch": "@@ -1,3 +1,11 @@\n+2006-09-11 David Daney  <ddaney@avtrex.com>\n+\n+\tPR classpath/28580\n+\t* gnu/java/net/protocol/http/Request.java (readResponse):  Call \n+\tcreateResponseBodyStream in more cases and with new parameter.\n+\t(createResponseBodyStream):  Added new parameter mayHaveBody. Handle\n+\tHEAD and !mayHaveBody responses specially.\n+\n 2006-09-05  Gary Benson  <gbenson@redhat.com>\n \n \t* java/net/SocketPermission.java"}, {"sha": "cd9d7ea44232d7e8fb867a1cd10bc164c6f37843", "filename": "libjava/classpath/gnu/java/net/protocol/http/Request.java", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4ba983b85a81373f95f2b4b2a8825cddb8f3a2/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4ba983b85a81373f95f2b4b2a8825cddb8f3a2/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java?ref=5a4ba983b85a81373f95f2b4b2a8825cddb8f3a2", "patch": "@@ -419,13 +419,16 @@ Response readResponse(InputStream in)\n     switch (code)\n       {\n       case 100:\n+        break;\n       case 204:\n       case 205:\n       case 304:\n+        body = createResponseBodyStream(responseHeaders, majorVersion,\n+                                        minorVersion, in, false);\n         break;\n       default:\n         body = createResponseBodyStream(responseHeaders, majorVersion,\n-                                        minorVersion, in);\n+                                        minorVersion, in, true);\n       }\n \n     // Construct response\n@@ -453,7 +456,8 @@ void notifyHeaderHandlers(Headers headers)\n   private InputStream createResponseBodyStream(Headers responseHeaders,\n                                                int majorVersion,\n                                                int minorVersion,\n-                                               InputStream in)\n+                                               InputStream in,\n+                                               boolean mayHaveBody)\n     throws IOException\n   {\n     long contentLength = -1;\n@@ -466,7 +470,12 @@ private InputStream createResponseBodyStream(Headers responseHeaders,\n       (majorVersion == 1 && minorVersion == 0);\n \n     String transferCoding = responseHeaders.getValue(\"Transfer-Encoding\");\n-    if (\"chunked\".equalsIgnoreCase(transferCoding))\n+    if (\"HEAD\".equals(method) || !mayHaveBody)\n+      {\n+        // Special case no body.\n+        in = new LimitedLengthInputStream(in, 0, true, connection, doClose);\n+      }\n+    else if (\"chunked\".equalsIgnoreCase(transferCoding))\n       {\n         in = new LimitedLengthInputStream(in, -1, false, connection, doClose);\n           "}]}