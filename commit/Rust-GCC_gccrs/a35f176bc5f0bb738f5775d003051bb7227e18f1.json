{"sha": "a35f176bc5f0bb738f5775d003051bb7227e18f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM1ZjE3NmJjNWYwYmI3MzhmNTc3NWQwMDMwNTFiYjcyMjdlMThmMQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-20T19:51:40Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-20T19:51:40Z"}, "message": "(ASM_DECLARE_OBJECT_NAME): Set size_directive_output.\n\n(ASM_FINISH_DECLARE_OBJECT): Defined.\n\nFrom-SVN: r5829", "tree": {"sha": "84891dc08f597db60a3492f07b2962338dcbf775", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84891dc08f597db60a3492f07b2962338dcbf775"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a35f176bc5f0bb738f5775d003051bb7227e18f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35f176bc5f0bb738f5775d003051bb7227e18f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a35f176bc5f0bb738f5775d003051bb7227e18f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35f176bc5f0bb738f5775d003051bb7227e18f1/comments", "author": null, "committer": null, "parents": [{"sha": "b0316e35edce637812e856d68bc0b4af1bd778ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0316e35edce637812e856d68bc0b4af1bd778ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0316e35edce637812e856d68bc0b4af1bd778ac"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "e895751e01b33b4387ddfc2f51cbcd08e56d24c5", "filename": "gcc/config/svr4.h", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35f176bc5f0bb738f5775d003051bb7227e18f1/gcc%2Fconfig%2Fsvr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35f176bc5f0bb738f5775d003051bb7227e18f1/gcc%2Fconfig%2Fsvr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr4.h?ref=a35f176bc5f0bb738f5775d003051bb7227e18f1", "patch": "@@ -440,7 +440,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define READONLY_DATA_SECTION() const_section ()\n \n-extern void text_section();\n+extern void text_section ();\n \n #define CONST_SECTION_FUNCTION\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n@@ -587,15 +587,37 @@ dtors_section ()\t\t\t\t\t\t\t\\\n     putc (',', FILE);\t\t\t\t\t\t\t\\\n     fprintf (FILE, TYPE_OPERAND_FMT, \"object\");\t\t\t\t\\\n     putc ('\\n', FILE);\t\t\t\t\t\t\t\\\n+    size_directive_output = 0;\t\t\t\t\t\t\\\n     if (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n+\tsize_directive_output = 1;\t\t\t\t\t\\\n \tfprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t\t\\\n \tassemble_name (FILE, NAME);\t\t\t\t\t\\\n \tfprintf (FILE, \",%d\\n\",  int_size_in_bytes (TREE_TYPE (DECL)));\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     ASM_OUTPUT_LABEL(FILE, NAME);\t\t\t\t\t\\\n   } while (0)\n \n+/* Output the size directive for a decl in rest_of_decl_compilation\n+   in the case where we did not do so before the initializer.\n+   Once we find the error_mark_node, we know that the value of\n+   size_directive_output was set\n+   by ASM_DECLARE_OBJECT_NAME when it was run for the same decl.  */\n+\n+#define ASM_FINISH_DECLARE_OBJECT(FILE, DECL, TOP_LEVEL, AT_END)\t \\\n+do {\t\t\t\t\t\t\t\t\t \\\n+     char *name = XSTR (XEXP (DECL_RTL (DECL), 0), 0);\t\t\t \\\n+     if (!flag_inhibit_size_directive && DECL_SIZE (DECL)\t\t \\\n+         && ! AT_END && TOP_LEVEL\t\t\t\t\t \\\n+\t && DECL_INITIAL (DECL) == error_mark_node\t\t\t \\\n+\t && !size_directive_output)\t\t\t\t\t \\\n+       {\t\t\t\t\t\t\t\t \\\n+\t fprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t \\\n+\t assemble_name (FILE, name);\t\t\t\t\t \\\n+\t fprintf (FILE, \",%d\\n\",  int_size_in_bytes (TREE_TYPE (DECL))); \\\n+       }\t\t\t\t\t\t\t\t \\\n+   } while (0)\n+\n /* This is how to declare the size of a function.  */\n \n #define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\t\\"}]}