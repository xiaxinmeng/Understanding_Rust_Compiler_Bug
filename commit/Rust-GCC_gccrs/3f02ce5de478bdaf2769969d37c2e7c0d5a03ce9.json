{"sha": "3f02ce5de478bdaf2769969d37c2e7c0d5a03ce9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YwMmNlNWRlNDc4YmRhZjI3Njk5NjlkMzdjMmU3YzBkNWEwM2NlOQ==", "commit": {"author": {"name": "Matthew Gingell", "email": "gingell@gnat.com", "date": "2004-10-27T13:05:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-27T13:05:18Z"}, "message": "i-cpp.ads, i-cpp.adb: Change layout of VTable for new C++ ABI.\n\n2004-10-26  Matthew Gingell  <gingell@gnat.com>\n\n\t* i-cpp.ads, i-cpp.adb: Change layout of VTable for new C++ ABI.\n\nFrom-SVN: r89655", "tree": {"sha": "b816c9b29ae8b833e46583d85835a7d0377ab429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b816c9b29ae8b833e46583d85835a7d0377ab429"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f02ce5de478bdaf2769969d37c2e7c0d5a03ce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f02ce5de478bdaf2769969d37c2e7c0d5a03ce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f02ce5de478bdaf2769969d37c2e7c0d5a03ce9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f02ce5de478bdaf2769969d37c2e7c0d5a03ce9/comments", "author": null, "committer": null, "parents": [{"sha": "9cc29fc6f4116e86c5b09ce2915673caec1029b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cc29fc6f4116e86c5b09ce2915673caec1029b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cc29fc6f4116e86c5b09ce2915673caec1029b8"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "387dcb5583c4e109e927d1ae4d7d22edac70cec4", "filename": "gcc/ada/i-cpp.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f02ce5de478bdaf2769969d37c2e7c0d5a03ce9/gcc%2Fada%2Fi-cpp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f02ce5de478bdaf2769969d37c2e7c0d5a03ce9/gcc%2Fada%2Fi-cpp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpp.adb?ref=3f02ce5de478bdaf2769969d37c2e7c0d5a03ce9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,6 @@\n ------------------------------------------------------------------------------\n \n with Ada.Tags;                use Ada.Tags;\n-with Interfaces.C;            use Interfaces.C;\n with System;                  use System;\n with System.Storage_Elements; use System.Storage_Elements;\n with Unchecked_Conversion;\n@@ -60,10 +59,8 @@ package body Interfaces.CPP is\n    type Vtable_Entry_Array is array (Positive range <>) of Vtable_Entry;\n \n    type VTable is record\n-      Unused1   : C.short;\n-      Unused2   : C.short;\n-      TSD       : Type_Specific_Data_Ptr;\n       Prims_Ptr : Vtable_Entry_Array (Positive);\n+      TSD       : Type_Specific_Data_Ptr;\n    end record;\n \n    --------------------------------------------------------"}, {"sha": "9a5998837a269b308bcfa0faf005ee7175405850", "filename": "gcc/ada/i-cpp.ads", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f02ce5de478bdaf2769969d37c2e7c0d5a03ce9/gcc%2Fada%2Fi-cpp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f02ce5de478bdaf2769969d37c2e7c0d5a03ce9/gcc%2Fada%2Fi-cpp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpp.ads?ref=3f02ce5de478bdaf2769969d37c2e7c0d5a03ce9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2000, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,15 +41,16 @@ package Interfaces.CPP is\n    package S   renames System;\n    package SSE renames System.Storage_Elements;\n \n-   --  This package corresponds to Ada.Tags but applied to tagged types\n-   --  which are 'imported' from C++ and correspond to exactly to a C++\n-   --  Class.  GNAT doesn't know about the structure od the C++ dispatch\n-   --  table (Vtable) but always access it through the procedural interface\n-   --  defined below, thus the implementation of this package (the body) can\n-   --  be customized to another C++ compiler without any change in the\n-   --  compiler code itself as long as this procedural interface is\n-   --  respected. Note that Ada.Tags defines a very similar procedural\n-   --  interface to the regular Ada Dispatch Table.\n+   --  This package corresponds to Ada.Tags but applied to tagged\n+   --  types which are 'imported' from C++ and correspond exactly to a\n+   --  C++ Class. GNAT doesn't know about the structure of the C++\n+   --  dispatch table (Vtable) but always accesses it through the\n+   --  procedural interface defined below, thus the implementation of\n+   --  this package (the body) can be customized to another C++\n+   --  compiler without any change in the compiler code itself as long\n+   --  as this procedural interface is respected. Note that Ada.Tags\n+   --  defines a very similar procedural interface to the regular Ada\n+   --  Dispatch Table.\n \n    type Vtable_Ptr is private;\n \n@@ -95,7 +96,7 @@ private\n \n    CPP_DT_Prologue_Size : constant SSE.Storage_Count :=\n                             SSE.Storage_Count\n-                              (2 * (Standard'Address_Size / S.Storage_Unit));\n+                              (1 * (Standard'Address_Size / S.Storage_Unit));\n    --  Size of the first part of the dispatch table\n \n    CPP_DT_Entry_Size : constant SSE.Storage_Count :=\n@@ -110,7 +111,7 @@ private\n \n    CPP_TSD_Entry_Size : constant SSE.Storage_Count :=\n                           SSE.Storage_Count\n-                            (Standard'Address_Size / S.Storage_Unit);\n+                            (1 * (Standard'Address_Size / S.Storage_Unit));\n    --  Size of each ancestor tag entry in the TSD\n \n    procedure CPP_Inherit_DT"}]}