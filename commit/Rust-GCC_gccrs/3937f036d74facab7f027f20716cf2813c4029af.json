{"sha": "3937f036d74facab7f027f20716cf2813c4029af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkzN2YwMzZkNzRmYWNhYjdmMDI3ZjIwNzE2Y2YyODEzYzQwMjlhZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-09-09T23:33:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-09-09T23:33:38Z"}, "message": "re PR c++/28293 (ICE on invalid typedef)\n\n/cp\n2009-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/28293\n\t* decl2.c (grokfield): Check for explicit template argument lists.\n\n/testsuite\n2009-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/28293\n\t* g++.dg/template/crash91.C: New.\n\nFrom-SVN: r151581", "tree": {"sha": "1ad4d74864ead4f7a38441b92d74909d42abcbba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ad4d74864ead4f7a38441b92d74909d42abcbba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3937f036d74facab7f027f20716cf2813c4029af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3937f036d74facab7f027f20716cf2813c4029af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3937f036d74facab7f027f20716cf2813c4029af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3937f036d74facab7f027f20716cf2813c4029af/comments", "author": null, "committer": null, "parents": [{"sha": "e7e5ba098425d3d3a569d36539a977f40ca5c797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e5ba098425d3d3a569d36539a977f40ca5c797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7e5ba098425d3d3a569d36539a977f40ca5c797"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "d00507723850f53c44bd2743d1f22990f29d6003", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3937f036d74facab7f027f20716cf2813c4029af/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3937f036d74facab7f027f20716cf2813c4029af/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3937f036d74facab7f027f20716cf2813c4029af", "patch": "@@ -1,7 +1,7 @@\n 2009-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/28293\n-\t* decl.c (grokfield): Check for explicit template argument lists.\n+\t* decl2.c (grokfield): Check for explicit template argument lists.\n \n 2009-09-09  Jack Howarth  <howarth@bromo.med.uc.edu>\n "}, {"sha": "eb48c5551f2bcc293cebac83898030cc8461adab", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3937f036d74facab7f027f20716cf2813c4029af/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3937f036d74facab7f027f20716cf2813c4029af/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=3937f036d74facab7f027f20716cf2813c4029af", "patch": "@@ -764,6 +764,7 @@ grokfield (const cp_declarator *declarator,\n   tree value;\n   const char *asmspec = 0;\n   int flags = LOOKUP_ONLYCONVERTING;\n+  tree name;\n \n   if (init\n       && TREE_CODE (init) == TREE_LIST\n@@ -792,11 +793,21 @@ grokfield (const cp_declarator *declarator,\n       && DECL_CONTEXT (value) != current_class_type)\n     return value;\n \n-  if (DECL_NAME (value) != NULL_TREE\n-      && IDENTIFIER_POINTER (DECL_NAME (value))[0] == '_'\n-      && ! strcmp (IDENTIFIER_POINTER (DECL_NAME (value)), \"_vptr\"))\n-    error (\"member %qD conflicts with virtual function table field name\",\n-\t   value);\n+  name = DECL_NAME (value);\n+\n+  if (name != NULL_TREE)\n+    {\n+      if (TREE_CODE (name) == TEMPLATE_ID_EXPR)\n+\t{\n+\t  error (\"explicit template argument list not allowed\");\n+\t  return error_mark_node;\n+\t}\n+\n+      if (IDENTIFIER_POINTER (name)[0] == '_'\n+\t  && ! strcmp (IDENTIFIER_POINTER (name), \"_vptr\"))\n+\terror (\"member %qD conflicts with virtual function table field name\",\n+\t       value);\n+    }\n \n   /* Stash away type declarations.  */\n   if (TREE_CODE (value) == TYPE_DECL)"}]}