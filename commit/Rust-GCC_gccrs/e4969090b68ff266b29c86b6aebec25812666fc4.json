{"sha": "e4969090b68ff266b29c86b6aebec25812666fc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ5NjkwOTBiNjhmZjI2NmIyOWM4NmI2YWViZWMyNTgxMjY2NmZjNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-08-15T09:56:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-08-15T09:56:00Z"}, "message": "re PR tree-optimization/73434 (Wrong code with casting, branches and aliasing)\n\n2016-08-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/73434\n\t* tree-ssa-sccvn.c (vn_reference_maybe_forwprop_address): Preserve\n\tTBAA info on the base when forwarding a non-invariant address.\n\n\t* gcc.dg/torture/pr73434.c: New testcase.\n\nFrom-SVN: r239471", "tree": {"sha": "c23c379cf6e756837d03ce0db535edbb68acd4cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c23c379cf6e756837d03ce0db535edbb68acd4cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4969090b68ff266b29c86b6aebec25812666fc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4969090b68ff266b29c86b6aebec25812666fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4969090b68ff266b29c86b6aebec25812666fc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4969090b68ff266b29c86b6aebec25812666fc4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "980bd53780025944008dbcd89caeed8d6e782715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980bd53780025944008dbcd89caeed8d6e782715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/980bd53780025944008dbcd89caeed8d6e782715"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "4e6ffb46a3ca21002cf9902695358526eca6b710", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4969090b68ff266b29c86b6aebec25812666fc4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4969090b68ff266b29c86b6aebec25812666fc4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4969090b68ff266b29c86b6aebec25812666fc4", "patch": "@@ -1,3 +1,9 @@\n+2016-08-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/73434\n+\t* tree-ssa-sccvn.c (vn_reference_maybe_forwprop_address): Preserve\n+\tTBAA info on the base when forwarding a non-invariant address.\n+\n 2016-08-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (struct checksum_attributes): Add"}, {"sha": "fc25482e1bb735a2ed3b9be0d4b2984d90cae792", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4969090b68ff266b29c86b6aebec25812666fc4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4969090b68ff266b29c86b6aebec25812666fc4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e4969090b68ff266b29c86b6aebec25812666fc4", "patch": "@@ -1,3 +1,8 @@\n+2016-08-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/73434\n+\t* gcc.dg/torture/pr73434.c: New testcase.\n+\n 2016-08-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/72824"}, {"sha": "624e0c6ccfb4c31bd3379e6e58463b64d6261be0", "filename": "gcc/testsuite/gcc.dg/torture/pr73434.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4969090b68ff266b29c86b6aebec25812666fc4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr73434.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4969090b68ff266b29c86b6aebec25812666fc4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr73434.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr73434.c?ref=e4969090b68ff266b29c86b6aebec25812666fc4", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+\n+typedef struct { unsigned char x; } A;\n+typedef struct { unsigned char x; } B;\n+\n+int idx = 0;\n+\n+A objs[1] = {{0}};\n+\n+int main()\n+{\n+  B *b = (B*)&objs[idx];\n+  b->x++;\n+  if (b->x)\n+    b->x = 0;\n+  if (b->x)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "21b3d56605278f80b661c8ae8449fa6e5eb410db", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4969090b68ff266b29c86b6aebec25812666fc4/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4969090b68ff266b29c86b6aebec25812666fc4/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=e4969090b68ff266b29c86b6aebec25812666fc4", "patch": "@@ -1225,6 +1225,18 @@ vn_reference_maybe_forwprop_address (vec<vn_reference_op_s> *ops,\n \t{\n \t  auto_vec<vn_reference_op_s, 32> tem;\n \t  copy_reference_ops_from_ref (TREE_OPERAND (addr, 0), &tem);\n+\t  /* Make sure to preserve TBAA info.  The only objects not\n+\t     wrapped in MEM_REFs that can have their address taken are\n+\t     STRING_CSTs.  */\n+\t  if (tem.length () >= 2\n+\t      && tem[tem.length () - 2].opcode == MEM_REF)\n+\t    {\n+\t      vn_reference_op_t new_mem_op = &tem[tem.length () - 2];\n+\t      new_mem_op->op0 = fold_convert (TREE_TYPE (mem_op->op0),\n+\t\t\t\t\t      new_mem_op->op0);\n+\t    }\n+\t  else\n+\t    gcc_assert (tem.last ().opcode == STRING_CST);\n \t  ops->pop ();\n \t  ops->pop ();\n \t  ops->safe_splice (tem);"}]}