{"sha": "7f21d440de1553836ad853bdd338fa45caafaf00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YyMWQ0NDBkZTE1NTM4MzZhZDg1M2JkZDMzOGZhNDVjYWFmYWYwMA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-05-27T23:29:18Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-05-27T23:29:18Z"}, "message": "toplev.c (compile_file): Call init_regs after `word_mode' is valid.\n\n\t* toplev.c (compile_file): Call init_regs after `word_mode' is valid.\n\t* regclass.c (init_reg_modes): If choose_hard_reg_mode can't find a\n\tvalid mode, fall back to word_mode.\n\nFrom-SVN: r7379", "tree": {"sha": "2b880c424efa11c2c8d2cf47b592ab48227c4182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b880c424efa11c2c8d2cf47b592ab48227c4182"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f21d440de1553836ad853bdd338fa45caafaf00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f21d440de1553836ad853bdd338fa45caafaf00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f21d440de1553836ad853bdd338fa45caafaf00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f21d440de1553836ad853bdd338fa45caafaf00/comments", "author": null, "committer": null, "parents": [{"sha": "0304dfbb673b5a0ce0af93e9fa6821ab9937d1e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0304dfbb673b5a0ce0af93e9fa6821ab9937d1e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0304dfbb673b5a0ce0af93e9fa6821ab9937d1e5"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "bef30abe539995d4a1e0db5d7b6ab38f875a267c", "filename": "gcc/regclass.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f21d440de1553836ad853bdd338fa45caafaf00/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f21d440de1553836ad853bdd338fa45caafaf00/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=7f21d440de1553836ad853bdd338fa45caafaf00", "patch": "@@ -402,7 +402,18 @@ init_reg_modes ()\n   register int i;\n \n   for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-    reg_raw_mode[i] = choose_hard_reg_mode (i, 1);\n+    {\n+      reg_raw_mode[i] = choose_hard_reg_mode (i, 1);\n+\n+      /* If we couldn't find a valid mode, fall back to `word_mode'.\n+\t ??? We assume `word_mode' has already been initialized.\n+         ??? One situation in which we need to do this is on the mips where\n+\t HARD_REGNO_NREGS (fpreg, [SD]Fmode) returns 2.  Ideally we'd like\n+\t to use DF mode for the even registers and VOIDmode for the odd\n+\t (for the cpu models where the odd ones are inaccessable).  */\n+      if (reg_raw_mode[i] == VOIDmode)\n+\treg_raw_mode[i] = word_mode;\n+    }\n }\n \n /* Finish initializing the register sets and"}, {"sha": "2a759574b7a012032b92044800935f7e43e7451f", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f21d440de1553836ad853bdd338fa45caafaf00/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f21d440de1553836ad853bdd338fa45caafaf00/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=7f21d440de1553836ad853bdd338fa45caafaf00", "patch": "@@ -2026,9 +2026,9 @@ compile_file (name)\n   /* Some of these really don't need to be called when generating bytecode,\n      but the options would have to be parsed first to know that. -bson */\n   init_rtl ();\n-  init_regs ();\n   init_emit_once (debug_info_level == DINFO_LEVEL_NORMAL\n \t\t  || debug_info_level == DINFO_LEVEL_VERBOSE);\n+  init_regs ();\n   init_decl_processing ();\n   init_optabs ();\n   init_stmt ();"}]}