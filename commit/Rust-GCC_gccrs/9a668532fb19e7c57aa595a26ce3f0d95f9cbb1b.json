{"sha": "9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "node_id": "C_kwDOANBUbNoAKDlhNjY4NTMyZmIxOWU3YzU3YWE1OTVhMjZjZTNmMGQ5NWY5Y2JiMWI", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-07-01T15:52:03Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-07-01T15:52:03Z"}, "message": "OpenMP: Handle tofrom with target enter/exit data\n\nIn 5.2, a map clause can be map-entering or map-exiting,\neither containing 'tofrom'. The main reason for this is\npermit 'map(x)' with 'omp target enter/exit data',\navoiding to specify 'to:/from:' explicitly. (OpenMP\ndefaults to 'tofrom'.)\n\ngcc/c/ChangeLog:\n\n\t* c-parser.cc (c_parser_omp_target_enter_data,\n\tc_parser_omp_target_exit_data): Accept tofrom\n\tmap-type modifier but use 'to' / 'from' internally.\n\ngcc/cp/ChangeLog:\n\n\t* parser.cc (cp_parser_omp_target_enter_data,\n\tcp_parser_omp_target_exit_data): Accept tofrom\n\tmap-type modifier but use 'to' / 'from' internally.\n\ngcc/fortran/ChangeLog:\n\n\t* dump-parse-tree.cc (show_omp_namelist): For the map-type,\n\talso handle the always modifer and release/delete.\n\t* openmp.cc (resolve_omp_clauses): Accept tofrom\n\tmap-type modifier for target enter/exit data,\n\tbut use 'to' / 'from' internally.\n\nlibgomp/ChangeLog:\n\n\t* libgomp.texi (OpenMP 5.2): Mark target enter/exit data\n\twith fromto as implemented.\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/gomp/target-data-2.c: New test.\n\t* c-c++-common/gomp/target-data-3.c: New test.\n\t* gfortran.dg/gomp/target-data-1.f90: New test.\n\t* gfortran.dg/gomp/target-data-2.f90: New test.", "tree": {"sha": "b127b7654ff9265f677a85bfc921e47aaf605c78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b127b7654ff9265f677a85bfc921e47aaf605c78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f843bea4ca5613cb713f8b9313daa3938f254a05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f843bea4ca5613cb713f8b9313daa3938f254a05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f843bea4ca5613cb713f8b9313daa3938f254a05"}], "stats": {"total": 139, "additions": 128, "deletions": 11}, "files": [{"sha": "97e3b23b5d20da56b362f64b6af4f4df67d36feb", "filename": "gcc/c/c-parser.cc", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Fc%2Fc-parser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Fc%2Fc-parser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.cc?ref=9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "patch": "@@ -21072,6 +21072,14 @@ c_parser_omp_target_enter_data (location_t loc, c_parser *parser,\n \t  case GOMP_MAP_ALLOC:\n \t    map_seen = 3;\n \t    break;\n+\t  case GOMP_MAP_TOFROM:\n+\t    OMP_CLAUSE_SET_MAP_KIND (*pc, GOMP_MAP_TO);\n+\t    map_seen = 3;\n+\t    break;\n+\t  case GOMP_MAP_ALWAYS_TOFROM:\n+\t    OMP_CLAUSE_SET_MAP_KIND (*pc, GOMP_MAP_ALWAYS_TO);\n+\t    map_seen = 3;\n+\t    break;\n \t  case GOMP_MAP_FIRSTPRIVATE_POINTER:\n \t  case GOMP_MAP_ALWAYS_POINTER:\n \t  case GOMP_MAP_ATTACH_DETACH:\n@@ -21080,7 +21088,7 @@ c_parser_omp_target_enter_data (location_t loc, c_parser *parser,\n \t    map_seen |= 1;\n \t    error_at (OMP_CLAUSE_LOCATION (*pc),\n \t\t      \"%<#pragma omp target enter data%> with map-type other \"\n-\t\t      \"than %<to%> or %<alloc%> on %<map%> clause\");\n+\t\t      \"than %<to%>, %<tofrom%> or %<alloc%> on %<map%> clause\");\n \t    *pc = OMP_CLAUSE_CHAIN (*pc);\n \t    continue;\n \t  }\n@@ -21159,6 +21167,14 @@ c_parser_omp_target_exit_data (location_t loc, c_parser *parser,\n \t  case GOMP_MAP_DELETE:\n \t    map_seen = 3;\n \t    break;\n+\t  case GOMP_MAP_TOFROM:\n+\t    OMP_CLAUSE_SET_MAP_KIND (*pc, GOMP_MAP_FROM);\n+\t    map_seen = 3;\n+\t    break;\n+\t  case GOMP_MAP_ALWAYS_TOFROM:\n+\t    OMP_CLAUSE_SET_MAP_KIND (*pc, GOMP_MAP_ALWAYS_FROM);\n+\t    map_seen = 3;\n+\t    break;\n \t  case GOMP_MAP_FIRSTPRIVATE_POINTER:\n \t  case GOMP_MAP_ALWAYS_POINTER:\n \t  case GOMP_MAP_ATTACH_DETACH:\n@@ -21167,8 +21183,8 @@ c_parser_omp_target_exit_data (location_t loc, c_parser *parser,\n \t    map_seen |= 1;\n \t    error_at (OMP_CLAUSE_LOCATION (*pc),\n \t\t      \"%<#pragma omp target exit data%> with map-type other \"\n-\t\t      \"than %<from%>, %<release%> or %<delete%> on %<map%>\"\n-\t\t      \" clause\");\n+\t\t      \"than %<from%>, %<tofrom%>, %<release%> or %<delete%> \"\n+\t\t      \"on %<map%> clause\");\n \t    *pc = OMP_CLAUSE_CHAIN (*pc);\n \t    continue;\n \t  }"}, {"sha": "212ed1445d54cc46d7656c375dbfe0167a955ea5", "filename": "gcc/cp/parser.cc", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Fcp%2Fparser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Fcp%2Fparser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.cc?ref=9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "patch": "@@ -44445,6 +44445,14 @@ cp_parser_omp_target_enter_data (cp_parser *parser, cp_token *pragma_tok,\n \t  case GOMP_MAP_ALLOC:\n \t    map_seen = 3;\n \t    break;\n+\t  case GOMP_MAP_TOFROM:\n+\t    OMP_CLAUSE_SET_MAP_KIND (*pc, GOMP_MAP_TO);\n+\t    map_seen = 3;\n+\t    break;\n+\t  case GOMP_MAP_ALWAYS_TOFROM:\n+\t    OMP_CLAUSE_SET_MAP_KIND (*pc, GOMP_MAP_ALWAYS_TO);\n+\t    map_seen = 3;\n+\t    break;\n \t  case GOMP_MAP_FIRSTPRIVATE_POINTER:\n \t  case GOMP_MAP_FIRSTPRIVATE_REFERENCE:\n \t  case GOMP_MAP_ALWAYS_POINTER:\n@@ -44454,7 +44462,7 @@ cp_parser_omp_target_enter_data (cp_parser *parser, cp_token *pragma_tok,\n \t    map_seen |= 1;\n \t    error_at (OMP_CLAUSE_LOCATION (*pc),\n \t\t      \"%<#pragma omp target enter data%> with map-type other \"\n-\t\t      \"than %<to%> or %<alloc%> on %<map%> clause\");\n+\t\t      \"than %<to%>, %<tofrom%> or %<alloc%> on %<map%> clause\");\n \t    *pc = OMP_CLAUSE_CHAIN (*pc);\n \t    continue;\n \t  }\n@@ -44537,6 +44545,14 @@ cp_parser_omp_target_exit_data (cp_parser *parser, cp_token *pragma_tok,\n \t  case GOMP_MAP_DELETE:\n \t    map_seen = 3;\n \t    break;\n+\t  case GOMP_MAP_TOFROM:\n+\t    OMP_CLAUSE_SET_MAP_KIND (*pc, GOMP_MAP_FROM);\n+\t    map_seen = 3;\n+\t    break;\n+\t  case GOMP_MAP_ALWAYS_TOFROM:\n+\t    OMP_CLAUSE_SET_MAP_KIND (*pc, GOMP_MAP_ALWAYS_FROM);\n+\t    map_seen = 3;\n+\t    break;\n \t  case GOMP_MAP_FIRSTPRIVATE_POINTER:\n \t  case GOMP_MAP_FIRSTPRIVATE_REFERENCE:\n \t  case GOMP_MAP_ALWAYS_POINTER:\n@@ -44546,8 +44562,8 @@ cp_parser_omp_target_exit_data (cp_parser *parser, cp_token *pragma_tok,\n \t    map_seen |= 1;\n \t    error_at (OMP_CLAUSE_LOCATION (*pc),\n \t\t      \"%<#pragma omp target exit data%> with map-type other \"\n-\t\t      \"than %<from%>, %<release%> or %<delete%> on %<map%>\"\n-\t\t      \" clause\");\n+\t\t      \"than %<from%>, %<tofrom%>, %<release%> or %<delete%> \"\n+\t\t      \"on %<map%> clause\");\n \t    *pc = OMP_CLAUSE_CHAIN (*pc);\n \t    continue;\n \t  }"}, {"sha": "85c0b98f615b853452f1fea530cc1d653182b95e", "filename": "gcc/fortran/dump-parse-tree.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Ffortran%2Fdump-parse-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Ffortran%2Fdump-parse-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.cc?ref=9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "patch": "@@ -1414,6 +1414,11 @@ show_omp_namelist (int list_type, gfc_omp_namelist *n)\n \t  case OMP_MAP_TO: fputs (\"to:\", dumpfile); break;\n \t  case OMP_MAP_FROM: fputs (\"from:\", dumpfile); break;\n \t  case OMP_MAP_TOFROM: fputs (\"tofrom:\", dumpfile); break;\n+\t  case OMP_MAP_ALWAYS_TO: fputs (\"always,to:\", dumpfile); break;\n+\t  case OMP_MAP_ALWAYS_FROM: fputs (\"always,from:\", dumpfile); break;\n+\t  case OMP_MAP_ALWAYS_TOFROM: fputs (\"always,tofrom:\", dumpfile); break;\n+\t  case OMP_MAP_DELETE: fputs (\"delete:\", dumpfile); break;\n+\t  case OMP_MAP_RELEASE: fputs (\"release:\", dumpfile); break;\n \t  default: break;\n \t  }\n       else if (list_type == OMP_LIST_LINEAR)"}, {"sha": "93e40f25f8210212eea2a282839c0f8a3f07addb", "filename": "gcc/fortran/openmp.cc", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Ffortran%2Fopenmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Ffortran%2Fopenmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.cc?ref=9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "patch": "@@ -7153,10 +7153,16 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t\t\tcase OMP_MAP_ALWAYS_TO:\n \t\t\tcase OMP_MAP_ALLOC:\n \t\t\t  break;\n+\t\t\tcase OMP_MAP_TOFROM:\n+\t\t\t  n->u.map_op = OMP_MAP_TO;\n+\t\t\t  break;\n+\t\t\tcase OMP_MAP_ALWAYS_TOFROM:\n+\t\t\t  n->u.map_op = OMP_MAP_ALWAYS_TO;\n+\t\t\t  break;\n \t\t\tdefault:\n \t\t\t  gfc_error (\"TARGET ENTER DATA with map-type other \"\n-\t\t\t\t     \"than TO, or ALLOC on MAP clause at %L\",\n-\t\t\t\t     &n->where);\n+\t\t\t\t     \"than TO, TOFROM or ALLOC on MAP clause \"\n+\t\t\t\t     \"at %L\", &n->where);\n \t\t\t  break;\n \t\t\t}\n \t\t      break;\n@@ -7168,10 +7174,16 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t\t\tcase OMP_MAP_RELEASE:\n \t\t\tcase OMP_MAP_DELETE:\n \t\t\t  break;\n+\t\t\tcase OMP_MAP_TOFROM:\n+\t\t\t  n->u.map_op = OMP_MAP_FROM;\n+\t\t\t  break;\n+\t\t\tcase OMP_MAP_ALWAYS_TOFROM:\n+\t\t\t  n->u.map_op = OMP_MAP_ALWAYS_FROM;\n+\t\t\t  break;\n \t\t\tdefault:\n \t\t\t  gfc_error (\"TARGET EXIT DATA with map-type other \"\n-\t\t\t\t     \"than FROM, RELEASE, or DELETE on MAP \"\n-\t\t\t\t     \"clause at %L\", &n->where);\n+\t\t\t\t     \"than FROM, TOFROM, RELEASE, or DELETE on \"\n+\t\t\t\t     \"MAP clause at %L\", &n->where);\n \t\t\t  break;\n \t\t\t}\n \t\t      break;"}, {"sha": "e3248705b5929953457021f07e9c927696af863c", "filename": "gcc/testsuite/c-c++-common/gomp/target-data-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Ftarget-data-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Ftarget-data-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Ftarget-data-2.c?ref=9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-additional-options \"-fdump-tree-original\" } */\n+\n+/* In OpenMP 5.2 permits tofrom for enter/exit data\n+   in the FE, it is already converted to 'to' and 'from', respectively. */\n+int x, y, z;\n+\n+void\n+copyin ()\n+{\n+  #pragma omp target enter data map(x) map(tofrom: y) map(always, tofrom: z)\n+}\n+\n+void\n+copyout ()\n+{\n+  #pragma omp target exit data map(x) map(tofrom: y) map(always, tofrom: z)\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"#pragma omp target enter data map\\\\(always,to:z\\\\) map\\\\(to:y\\\\) map\\\\(to:x\\\\)\" 1 \"original\" } } */\n+/* { dg-final { scan-tree-dump-times \"#pragma omp target exit data map\\\\(always,from:z\\\\) map\\\\(from:y\\\\) map\\\\(from:x\\\\)\" 1 \"original\" } } */"}, {"sha": "8c6d5cb88698d93a20a12f3bcb7ce3cc4155cfeb", "filename": "gcc/testsuite/c-c++-common/gomp/target-data-3.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Ftarget-data-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Ftarget-data-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Ftarget-data-3.c?ref=9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "patch": "@@ -0,0 +1,17 @@\n+/* In OpenMP 5.2 permits tofrom for enter/exit data\n+   in the FE, it is already converted to 'to' and 'from', respectively. */\n+int y, z;\n+\n+void\n+copyin ()\n+{\n+  #pragma omp target enter data map(from: y)         /* { dg-error \"'#pragma omp target enter data' with map-type other than 'to', 'tofrom' or 'alloc' on 'map' clause\" } */\n+  #pragma omp target enter data map(always, from: z) /* { dg-error \"'#pragma omp target enter data' with map-type other than 'to', 'tofrom' or 'alloc' on 'map' clause\" } */\n+}\n+\n+void\n+copyout ()\n+{\n+  #pragma omp target exit data map(to: y)         /* { dg-error \"'#pragma omp target exit data' with map-type other than 'from', 'tofrom', 'release' or 'delete' on 'map' clause\" } */\n+  #pragma omp target exit data map(always, to: z) /* { dg-error \"'#pragma omp target exit data' with map-type other than 'from', 'tofrom', 'release' or 'delete' on 'map' clause\" } */\n+}"}, {"sha": "0f086f5d71cee5d9bab7bbfcca6dd7d32143bc9c", "filename": "gcc/testsuite/gfortran.dg/gomp/target-data-1.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Ftarget-data-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Ftarget-data-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Ftarget-data-1.f90?ref=9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "patch": "@@ -0,0 +1,17 @@\n+! { dg-additional-options \"-fdump-tree-original\" }\n+!\n+! In OpenMP 5.2 permits tofrom for enter/exit data\n+! in the FE, it is already converted to 'to' and 'from', respectively.\n+module m\n+  integer :: x, y, z\n+contains\n+subroutine copyin\n+  !$omp target enter data map(x) map(tofrom: y) map(always, tofrom: z)\n+end\n+subroutine copyout\n+  !$omp target exit data map(x) map(tofrom: y) map(always, tofrom: z)\n+end\n+end\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp target enter data map\\\\(to:x\\\\) map\\\\(to:y\\\\) map\\\\(always,to:z\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target exit data map\\\\(from:x\\\\) map\\\\(from:y\\\\) map\\\\(always,from:z\\\\)\" 1 \"original\" } }"}, {"sha": "71ee1eb9b953e6fd1aa1c932a9e2e86b51b63014", "filename": "gcc/testsuite/gfortran.dg/gomp/target-data-2.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Ftarget-data-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Ftarget-data-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Ftarget-data-2.f90?ref=9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "patch": "@@ -0,0 +1,14 @@\n+! In OpenMP 5.2 permits tofrom for enter/exit data\n+! in the FE, it is already converted to 'to' and 'from', respectively.\n+module m\n+  integer :: y, z\n+contains\n+subroutine copyin\n+  !$omp target enter data map(from: y)         ! { dg-error \"TARGET ENTER DATA with map-type other than TO, TOFROM or ALLOC on MAP clause\" }\n+  !$omp target enter data map(always, from: z) ! { dg-error \"TARGET ENTER DATA with map-type other than TO, TOFROM or ALLOC on MAP clause\" }\n+end\n+subroutine copyout\n+  !$omp target exit data map(to: y)         ! { dg-error \"TARGET EXIT DATA with map-type other than FROM, TOFROM, RELEASE, or DELETE on MAP clause\" }\n+  !$omp target exit data map(always, to: z) ! { dg-error \"TARGET EXIT DATA with map-type other than FROM, TOFROM, RELEASE, or DELETE on MAP clause\" }\n+end\n+end"}, {"sha": "a75cd244a8397ab398111685e62f2210cdaf9857", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=9a668532fb19e7c57aa595a26ce3f0d95f9cbb1b", "patch": "@@ -390,7 +390,7 @@ The OpenMP 4.5 specification is fully supported.\n       @tab Y @tab\n @item @code{ompt_callback_work} @tab N @tab\n @item Default map-type for @code{map} clause in @code{target enter/exit data}\n-      @tab N @tab\n+      @tab Y @tab\n @item New @code{doacross} clause as alias for @code{depend} with\n       @code{source}/@code{sink} modifier @tab N @tab\n @item Deprecation of @code{depend} with @code{source}/@code{sink} modifier"}]}