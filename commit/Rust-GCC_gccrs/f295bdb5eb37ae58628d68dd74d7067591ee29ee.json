{"sha": "f295bdb5eb37ae58628d68dd74d7067591ee29ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI5NWJkYjVlYjM3YWU1ODYyOGQ2OGRkNzRkNzA2NzU5MWVlMjllZQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@cygnus.com", "date": "2000-02-15T23:25:28Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2000-02-15T23:25:28Z"}, "message": "sh.md: Guard insn splits against illegal registers.\n\n\t* config/sh/sh.md: Guard insn splits against illegal registers.\n\t* config/sh/sh.h: Correct comment about macros.\n\nFrom-SVN: r31994", "tree": {"sha": "a25a657c91463ebf935fdb3e96d4f7bf6712ddec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a25a657c91463ebf935fdb3e96d4f7bf6712ddec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f295bdb5eb37ae58628d68dd74d7067591ee29ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f295bdb5eb37ae58628d68dd74d7067591ee29ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f295bdb5eb37ae58628d68dd74d7067591ee29ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f295bdb5eb37ae58628d68dd74d7067591ee29ee/comments", "author": null, "committer": null, "parents": [{"sha": "cdd59e7bdf1b6b4a5c42e81d4f2955eb4f7dd3fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdd59e7bdf1b6b4a5c42e81d4f2955eb4f7dd3fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdd59e7bdf1b6b4a5c42e81d4f2955eb4f7dd3fd"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "263836457aef57ac8e5ce54a117ad751685b417d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f295bdb5eb37ae58628d68dd74d7067591ee29ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f295bdb5eb37ae58628d68dd74d7067591ee29ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f295bdb5eb37ae58628d68dd74d7067591ee29ee", "patch": "@@ -1,3 +1,8 @@\n+Tue Feb 15 23:22:26 2000  Andrew Haley  <aph@cygnus.com>\n+\n+\t* config/sh/sh.md: Guard insn splits against illegal registers.\n+\t* config/sh/sh.h: Correct comment about macros.\n+\n Tue Feb 15 22:30:36 2000  J\"orn Rennecke <amylaar@cygnus.co.uk>\n                           Andrew MacLeod  <amacleod@cygnus.com>\n "}, {"sha": "df3b667e782e6c7b67bf6da6b63842356bbcd08d", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f295bdb5eb37ae58628d68dd74d7067591ee29ee/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f295bdb5eb37ae58628d68dd74d7067591ee29ee/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=f295bdb5eb37ae58628d68dd74d7067591ee29ee", "patch": "@@ -1269,9 +1269,7 @@ extern int current_function_anonymous_args;\n /* GO_IF_LEGITIMATE_ADDRESS recognizes an RTL expression\n    that is a valid memory address for an instruction.\n    The MODE argument is the machine mode for the MEM expression\n-   that wants to use this address.\n-\n-   The other macros defined here are used only in GO_IF_LEGITIMATE_ADDRESS.  */\n+   that wants to use this address.  */\n \n #define MODE_DISP_OK_4(X,MODE) \\\n (GET_MODE_SIZE (MODE) == 4 && (unsigned) INTVAL (X) < 64\t\\"}, {"sha": "61720e07795cb25ad167ea5d4dc5fbf7ff91bce2", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f295bdb5eb37ae58628d68dd74d7067591ee29ee/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f295bdb5eb37ae58628d68dd74d7067591ee29ee/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=f295bdb5eb37ae58628d68dd74d7067591ee29ee", "patch": "@@ -2768,7 +2768,8 @@\n     FAIL;\n   reg = XEXP (addr, 0);\n   const_int = XEXP (addr, 1);\n-  if (GET_CODE (reg) != REG || GET_CODE (const_int) != CONST_INT)\n+  if (! (BASE_REGISTER_RTX_P (reg) && INDEX_REGISTER_RTX_P (operands[2])\n+\t && GET_CODE (const_int) == CONST_INT))\n     FAIL;\n   emit_move_insn (operands[2], const_int);\n   emit_move_insn (operands[0],\n@@ -2794,7 +2795,8 @@\n     FAIL;\n   reg = XEXP (addr, 0);\n   const_int = XEXP (addr, 1);\n-  if (GET_CODE (reg) != REG || GET_CODE (const_int) != CONST_INT)\n+  if (! (BASE_REGISTER_RTX_P (reg) && INDEX_REGISTER_RTX_P (operands[2])\n+\t && GET_CODE (const_int) == CONST_INT))\n     FAIL;\n   emit_move_insn (operands[2], const_int);\n   emit_move_insn (change_address (operands[1], VOIDmode,"}]}