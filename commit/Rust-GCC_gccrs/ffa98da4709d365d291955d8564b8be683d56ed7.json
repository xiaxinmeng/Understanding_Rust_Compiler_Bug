{"sha": "ffa98da4709d365d291955d8564b8be683d56ed7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZhOThkYTQ3MDlkMzY1ZDI5MTk1NWQ4NTY0YjhiZTY4M2Q1NmVkNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-07-01T23:19:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-07-01T23:19:24Z"}, "message": "runtime: introduce build targets for running benchmarks\n\nThis introduces the \"bench\" build target, which can be used to run\nall benchmarks.\n\nIt is also possible to run subsets of benchmarks with the\n\"package/check\" build targets by setting GOBENCH to a matching regex.\n\nFrom-SVN: r212212", "tree": {"sha": "785728d7da32e48edda7da9938acfc4bf0835f12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/785728d7da32e48edda7da9938acfc4bf0835f12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffa98da4709d365d291955d8564b8be683d56ed7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa98da4709d365d291955d8564b8be683d56ed7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffa98da4709d365d291955d8564b8be683d56ed7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa98da4709d365d291955d8564b8be683d56ed7/comments", "author": null, "committer": null, "parents": [{"sha": "25eff60debb13f86c0c11929544c43e476683057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25eff60debb13f86c0c11929544c43e476683057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25eff60debb13f86c0c11929544c43e476683057"}], "stats": {"total": 58, "additions": 44, "deletions": 14}, "files": [{"sha": "7466a17708837dd3632c25dd29842f9cc84896ab", "filename": "libgo/Makefile.am", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa98da4709d365d291955d8564b8be683d56ed7/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa98da4709d365d291955d8564b8be683d56ed7/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=ffa98da4709d365d291955d8564b8be683d56ed7", "patch": "@@ -1996,6 +1996,7 @@ BUILDPACKAGE = \\\n \t$(LTGOCOMPILE) -I . -c -fgo-pkgpath=`echo $@ | sed -e 's/.lo$$//' -e 's/-go$$//'` -o $@ $$files\n \n GOTESTFLAGS =\n+GOBENCH = \n \n # Check a package.\n CHECK = \\\n@@ -2015,6 +2016,8 @@ CHECK = \\\n \trm -f $@-testsum $@-testlog; \\\n \tif test \"$(USE_DEJAGNU)\" = \"yes\"; then \\\n \t  $(SHELL) $(srcdir)/testsuite/gotest --dejagnu=yes --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --pkgpath=\"$(@D)\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --testname=\"$(@D)\" --goarch=\"$(GOARCH)\" $(GOTESTFLAGS) $(go_$(subst /,_,$(@D))_test_files); \\\n+\telif test \"$(GOBENCH)\" != \"\"; then \\\n+\t  $(SHELL) $(srcdir)/testsuite/gotest --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --pkgpath=\"$(@D)\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --goarch=\"$(GOARCH)\" --bench=\"$(GOBENCH)\" $(GOTESTFLAGS) $(go_$(subst /,_,$(@D))_test_files); \\\n \telse \\\n \t  if $(SHELL) $(srcdir)/testsuite/gotest --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --pkgpath=\"$(@D)\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --goarch=\"$(GOARCH)\" $(GOTESTFLAGS) $(go_$(subst /,_,$(@D))_test_files) >>$@-testlog 2>&1; then \\\n \t    echo \"PASS: $(@D)\" >> $@-testlog; \\\n@@ -3845,6 +3848,9 @@ check-am:\n check-multi:\n \t$(MULTIDO) $(AM_MAKEFLAGS) DO=check-am multi-do # $(MAKE)\n \n+bench:\n+\t-@$(MAKE) -k $(TEST_PACKAGES) GOBENCH=.\n+\n MOSTLYCLEAN_FILES = libgo.head libgo.sum.sep libgo.log.sep\n \n mostlyclean-local:"}, {"sha": "dd94285f1d5947ad1e8b2e3a94912ec8cc92caf6", "filename": "libgo/Makefile.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa98da4709d365d291955d8564b8be683d56ed7/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa98da4709d365d291955d8564b8be683d56ed7/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=ffa98da4709d365d291955d8564b8be683d56ed7", "patch": "@@ -2066,6 +2066,7 @@ BUILDPACKAGE = \\\n \t$(LTGOCOMPILE) -I . -c -fgo-pkgpath=`echo $@ | sed -e 's/.lo$$//' -e 's/-go$$//'` -o $@ $$files\n \n GOTESTFLAGS = \n+GOBENCH = \n \n # Check a package.\n CHECK = \\\n@@ -2085,6 +2086,8 @@ CHECK = \\\n \trm -f $@-testsum $@-testlog; \\\n \tif test \"$(USE_DEJAGNU)\" = \"yes\"; then \\\n \t  $(SHELL) $(srcdir)/testsuite/gotest --dejagnu=yes --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --pkgpath=\"$(@D)\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --testname=\"$(@D)\" --goarch=\"$(GOARCH)\" $(GOTESTFLAGS) $(go_$(subst /,_,$(@D))_test_files); \\\n+\telif test \"$(GOBENCH)\" != \"\"; then \\\n+\t  $(SHELL) $(srcdir)/testsuite/gotest --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --pkgpath=\"$(@D)\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --goarch=\"$(GOARCH)\" --bench=\"$(GOBENCH)\" $(GOTESTFLAGS) $(go_$(subst /,_,$(@D))_test_files); \\\n \telse \\\n \t  if $(SHELL) $(srcdir)/testsuite/gotest --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --pkgpath=\"$(@D)\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --goarch=\"$(GOARCH)\" $(GOTESTFLAGS) $(go_$(subst /,_,$(@D))_test_files) >>$@-testlog 2>&1; then \\\n \t    echo \"PASS: $(@D)\" >> $@-testlog; \\\n@@ -6083,6 +6086,9 @@ check-am:\n check-multi:\n \t$(MULTIDO) $(AM_MAKEFLAGS) DO=check-am multi-do # $(MAKE)\n \n+bench:\n+\t-@$(MAKE) -k $(TEST_PACKAGES) GOBENCH=.\n+\n mostlyclean-local:\n \tfind . -name '*.lo' -print | xargs $(LIBTOOL) --mode=clean rm -f\n \tfind . -name '*.$(OBJEXT)' -print | xargs rm -f"}, {"sha": "39beac393c6c197f71cd219c24bee096f3a9f7e9", "filename": "libgo/testsuite/gotest", "status": "modified", "additions": 32, "deletions": 14, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa98da4709d365d291955d8564b8be683d56ed7/libgo%2Ftestsuite%2Fgotest", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa98da4709d365d291955d8564b8be683d56ed7/libgo%2Ftestsuite%2Fgotest", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2Fgotest?ref=ffa98da4709d365d291955d8564b8be683d56ed7", "patch": "@@ -36,6 +36,7 @@ dejagnu=no\n GOARCH=\"\"\n timeout=240\n testname=\"\"\n+bench=\"\"\n trace=false\n while $loop; do\n \tcase \"x$1\" in\n@@ -124,6 +125,15 @@ while $loop; do\n \t\ttestname=`echo $1 | sed -e 's/^--testname=//'`\n \t\tshift\n \t\t;;\n+\tx--bench)\n+\t\tbench=$2\n+\t\tshift\n+\t\tshift\n+\t\t;;\n+\tx--bench=*)\n+\t\tbench=`echo $1 | sed -e 's/^--bench=//'`\n+\t\tshift\n+\t\t;;\n \tx--trace)\n \t\ttrace=true\n \t\tshift\n@@ -473,20 +483,28 @@ xno)\n \tfi\n \t${GL} *.o ${GOLIBS}\n \n-\tif test \"$trace\" = \"true\"; then\n-\t    echo ./a.out -test.short -test.timeout=${timeout}s \"$@\"\n-\tfi\n-\t./a.out -test.short -test.timeout=${timeout}s \"$@\" &\n-\tpid=$!\n-\t(sleep `expr $timeout + 10`\n-\t    echo > gotest-timeout\n-\t    echo \"timed out in gotest\" 1>&2\n-\t    kill -9 $pid) &\n-\talarmpid=$!\n-\twait $pid\n-\tstatus=$?\n-\tif ! test -f gotest-timeout; then\n-\t    kill $alarmpid\n+\tif test \"$bench\" = \"\"; then\n+\t\tif test \"$trace\" = \"true\"; then\n+\t\t    echo ./a.out -test.short -test.timeout=${timeout}s \"$@\"\n+\t\tfi\n+\t\t./a.out -test.short -test.timeout=${timeout}s \"$@\" &\n+\t\tpid=$!\n+\t\t(sleep `expr $timeout + 10`\n+\t\t    echo > gotest-timeout\n+\t\t    echo \"timed out in gotest\" 1>&2\n+\t\t    kill -9 $pid) &\n+\t\talarmpid=$!\n+\t\twait $pid\n+\t\tstatus=$?\n+\t\tif ! test -f gotest-timeout; then\n+\t\t    kill $alarmpid\n+\t\tfi\n+\telse\n+\t\tif test \"$trace\" = \"true\"; then\n+\t\t    echo ./a.out -test.run=^\\$ -test.bench=\"${bench}\" \"$@\"\n+\t\tfi\n+\t\t./a.out -test.run=^\\$ -test.bench=\"${bench}\" \"$@\"\n+\t\tstatus=$?\n \tfi\n \texit $status\n \t;;"}]}