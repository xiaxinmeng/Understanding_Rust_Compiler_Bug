{"sha": "b8ee7f0279afe920c8e5740499bfd0368f8f806b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhlZTdmMDI3OWFmZTkyMGM4ZTU3NDA0OTliZmQwMzY4ZjhmODA2Yg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-12-23T23:55:06Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-12-23T23:55:06Z"}, "message": "gcc-dg.exp (dg-require-profiling): New function.\n\n\t* lib/gcc-dg.exp (dg-require-profiling): New function.\n\t* lib/target-supports.exp (check_profiling_available): Likewise.\n\t* g++.dg/bprob/bprob.exp: Use check_profiling_available.\n\t* g77.dg/bprob/bprob.exp: Likewise.\n\t* gcc.misc-tests/bprob.exp: Likewise.\n\t* g++.old-deja/g++.law/profile1.C: Use dg-require-profiling.\n\t* gcc.dg/20021014-1.c: Likewise.\n\t* gcc.dg/nest.c: Likewise.\n\nFrom-SVN: r74995", "tree": {"sha": "85e6485dc17957eec0bed8927a0a464c9f4decad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85e6485dc17957eec0bed8927a0a464c9f4decad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8ee7f0279afe920c8e5740499bfd0368f8f806b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ee7f0279afe920c8e5740499bfd0368f8f806b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8ee7f0279afe920c8e5740499bfd0368f8f806b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ee7f0279afe920c8e5740499bfd0368f8f806b/comments", "author": null, "committer": null, "parents": [{"sha": "7bd35dac2435a177f9891854a0b6b8335c74b3d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd35dac2435a177f9891854a0b6b8335c74b3d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bd35dac2435a177f9891854a0b6b8335c74b3d4"}], "stats": {"total": 71, "additions": 53, "deletions": 18}, "files": [{"sha": "f1558a7ebe32bc9ffc79fad1bd4a023d95683ccb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b8ee7f0279afe920c8e5740499bfd0368f8f806b", "patch": "@@ -1,3 +1,14 @@\n+2003-12-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* lib/gcc-dg.exp (dg-require-profiling): New function.\n+\t* lib/target-supports.exp (check_profiling_available): Likewise.\n+\t* g++.dg/bprob/bprob.exp: Use check_profiling_available.\n+\t* g77.dg/bprob/bprob.exp: Likewise.\n+\t* gcc.misc-tests/bprob.exp: Likewise.\n+\t* g++.old-deja/g++.law/profile1.C: Use dg-require-profiling.\n+\t* gcc.dg/20021014-1.c: Likewise.\n+\t* gcc.dg/nest.c: Likewise.\n+\n 2003-12-23  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/lookup/java1.C: Use -fdollars-in-identifiers when"}, {"sha": "35bec3378620be57d5e7595843ad4a5bf3cb26b8", "filename": "gcc/testsuite/g++.dg/bprob/bprob.exp", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fbprob%2Fbprob.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fbprob%2Fbprob.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fbprob%2Fbprob.exp?ref=b8ee7f0279afe920c8e5740499bfd0368f8f806b", "patch": "@@ -19,11 +19,7 @@\n \n # Some targets don't have any implementation of __bb_init_func or are\n # missing other needed machinery.\n-if { [istarget mmix-*-*]\n-     || [istarget arm*-*-elf]\n-     || [istarget strongarm*-*-elf]\n-     || [istarget xscale*-*-elf]\n-     || [istarget cris-*-*] } {\n+if { ![check_profiling_available] } {\n     return\n }\n "}, {"sha": "0a03bff6e80177b8c375d9dfe3b8bf211e445661", "filename": "gcc/testsuite/g++.old-deja/g++.law/profile1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fprofile1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fprofile1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fprofile1.C?ref=b8ee7f0279afe920c8e5740499bfd0368f8f806b", "patch": "@@ -1,4 +1,5 @@\n // { dg-do run { xfail m68k-motorola-sysv m88k-motorola-sysv3 mips*-*-* i[3456]86-*-sco3.2v5* } }\n+// { dg-require-profiling \"\" }\n // { dg-options \"-pg\" }\n // { dg-options \"-pg -static\" { target hppa*-*-hpux* } }\n // GROUPS passed profiling"}, {"sha": "e30234e12cfa0083480f7827d6bc884fa2f02d33", "filename": "gcc/testsuite/g77.dg/bprob/bprob.exp", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Fg77.dg%2Fbprob%2Fbprob.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Fg77.dg%2Fbprob%2Fbprob.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fbprob%2Fbprob.exp?ref=b8ee7f0279afe920c8e5740499bfd0368f8f806b", "patch": "@@ -19,11 +19,7 @@\n \n # Some targets don't have any implementation of __bb_init_func or are\n # missing other needed machinery.\n-if { [istarget mmix-*-*]\n-     || [istarget arm*-*-elf]\n-     || [istarget strongarm*-*-elf]\n-     || [istarget xscale*-*-elf]\n-     || [istarget cris-*-*] } {\n+if { ![check_profiling_available] } {\n     return\n }\n "}, {"sha": "1e2b76c761430432f4f63ca01f0d8a0e473da36d", "filename": "gcc/testsuite/gcc.dg/20021014-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Fgcc.dg%2F20021014-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Fgcc.dg%2F20021014-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20021014-1.c?ref=b8ee7f0279afe920c8e5740499bfd0368f8f806b", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do run } */\n+/* { dg-require-profiling \"\" } */\n /* { dg-options \"-O2 -p\" } */\n /* { dg-options \"-O2 -p -static\" { target hppa*-*-hpux* } } */\n-/* { dg-error \"profiler\" \"No profiler support\" { target mmix-*-* xstormy16-*-* *-*-windiss } 0 } */\n+/* { dg-error \"profiler\" \"No profiler support\" { target xstormy16-*-* } 0 } */\n /* { dg-error \"\" \"consider using `-pg' instead of `-p' with gprof(1)\" { target *-*-freebsd* } 0 } */\n /* Support for -p on solaris2 relies on mcrt1.o which comes with the\n    vendor compiler.  We cannot reiably predict the directory where the"}, {"sha": "872feade5810e6567c8f8f9d647df622783fdbf1", "filename": "gcc/testsuite/gcc.dg/nest.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Fgcc.dg%2Fnest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Fgcc.dg%2Fnest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnest.c?ref=b8ee7f0279afe920c8e5740499bfd0368f8f806b", "patch": "@@ -1,8 +1,9 @@\n /* PR 5967, PR 7114 */\n /* { dg-do run } */\n+/* { dg-require-profiling \"\" } */\n /* { dg-options \"-O2 -pg\" } */\n /* { dg-options \"-O2 -pg -static\" { target hppa*-*-hpux* } } */\n-/* { dg-error \"profiler\" \"No profiler support\" { target mmix-*-* xstormy16-*-* *-*-windiss } 0 } */\n+/* { dg-error \"profiler\" \"No profiler support\" { target xstormy16-*-* } 0 } */\n /* Support for -pg on irix relies on gcrt1.o which doesn't exist yet.\n    See: http://gcc.gnu.org/ml/gcc/2002-10/msg00169.html */\n /* { dg-error \"gcrt1.o\" \"Profiler support missing\" { target mips*-*-irix* } 0 } */"}, {"sha": "df59900a844d276e3651b05e7a40970aff1e1a6b", "filename": "gcc/testsuite/gcc.misc-tests/bprob.exp", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob.exp?ref=b8ee7f0279afe920c8e5740499bfd0368f8f806b", "patch": "@@ -19,12 +19,7 @@\n \n # Some targets don't have any implementation of __bb_init_func or are\n # missing other needed machinery.\n-if { [istarget mmix-*-*]\n-     || [istarget arm*-*-elf]\n-     || [istarget strongarm*-*-elf]\n-     || [istarget xscale*-*-elf]\n-     || [istarget cris-*-*]\n-     || [istarget h8300-*-*] } {\n+if { ![check_profiling_available] } {\n     return\n }\n "}, {"sha": "c67766793892814efdeafe4385cc3ac0cb36d27b", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=b8ee7f0279afe920c8e5740499bfd0368f8f806b", "patch": "@@ -321,6 +321,16 @@ proc dg-require-gc-sections { args } {\n     }\n }\n \n+# If this target does not support profiling, skip this test.\n+\n+proc dg-require-profiling { args } {\n+    if { ![ check_profiling_available ] } {\n+\tupvar dg-do-what dg-do-what\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+\treturn\n+    }\n+}\n+\n # If this target does not support DLL attributes skip this test.\n \n proc dg-require-dll { args } { "}, {"sha": "bff0a4f4441601f466c4a8d91de4667ab77a7491", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ee7f0279afe920c8e5740499bfd0368f8f806b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=b8ee7f0279afe920c8e5740499bfd0368f8f806b", "patch": "@@ -161,3 +161,27 @@ proc check_gc_sections_available { } {\n     }\n     return $gc_sections_available_saved\n }\n+\n+# Return true if profiling is supported on the target.\n+\n+proc check_profiling_available { } {\n+    global profiling_available_saved\n+\n+    if {![info exists profiling_available_saved]} {\n+\t# Some targets don't have any implementation of __bb_init_func or are\n+\t# missing other needed machinery.\n+\tif { [istarget mmix-*-*]\n+\t     || [istarget arm*-*-elf]\n+\t     || [istarget strongarm*-*-elf]\n+\t     || [istarget xscale*-*-elf]\n+\t     || [istarget cris-*-*]\n+\t     || [istarget h8300-*-*] \n+\t     || [istarget *-*-windiss] } {\n+\t    set profiling_available_saved 0\n+\t} else {\n+\t    set profiling_available_saved 1\n+\t}\n+    }\n+    \n+    return $profiling_available_saved\n+}"}]}