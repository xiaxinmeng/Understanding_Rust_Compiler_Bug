{"sha": "d9f462fb372fb02da032cefd6b091d7582c425ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlmNDYyZmIzNzJmYjAyZGEwMzJjZWZkNmIwOTFkNzU4MmM0MjVhZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-17T09:27:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-17T09:27:14Z"}, "message": "sanitizer: Fix asan against glibc 2.34 [PR100114]\n\nAs mentioned in the PR, SIGSTKSZ is no longer a compile time constant in\nglibc 2.34 and later, so\nstatic const uptr kAltStackSize = SIGSTKSZ * 4;\nneeds dynamic initialization, but is used by a function called indirectly\nfrom .preinit_array and therefore before the variable is constructed.\nThis results in using 0 size instead and all asan instrumented programs\ndie with:\n==91==ERROR: AddressSanitizer failed to allocate 0x0 (0) bytes of SetAlternateSignalStack (error code: 22)\n\nHere is a cherry-pick from upstream to fix this.\n\n2021-04-17  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR sanitizer/100114\n\t* sanitizer_common/sanitizer_posix_libcdep.cpp: Cherry-pick\n\tllvm-project revisions 82150606fb11d28813ae6da1101f5bda638165fe\n\tand b93629dd335ffee2fc4b9b619bf86c3f9e6b0023.", "tree": {"sha": "6b683d7a74cceaeca92c798254f0fde039765487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b683d7a74cceaeca92c798254f0fde039765487"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9f462fb372fb02da032cefd6b091d7582c425ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9f462fb372fb02da032cefd6b091d7582c425ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9f462fb372fb02da032cefd6b091d7582c425ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9f462fb372fb02da032cefd6b091d7582c425ae/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ae884c09fbba91e9cec391290ee4a2859e7ff41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae884c09fbba91e9cec391290ee4a2859e7ff41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ae884c09fbba91e9cec391290ee4a2859e7ff41"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "7ff48c35851ebc728a8c37a6230dfc3a90c7134d", "filename": "libsanitizer/sanitizer_common/sanitizer_posix_libcdep.cpp", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f462fb372fb02da032cefd6b091d7582c425ae/libsanitizer%2Fsanitizer_common%2Fsanitizer_posix_libcdep.cpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f462fb372fb02da032cefd6b091d7582c425ae/libsanitizer%2Fsanitizer_common%2Fsanitizer_posix_libcdep.cpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_posix_libcdep.cpp?ref=d9f462fb372fb02da032cefd6b091d7582c425ae", "patch": "@@ -165,7 +165,11 @@ bool SupportsColoredOutput(fd_t fd) {\n \n #if !SANITIZER_GO\n // TODO(glider): different tools may require different altstack size.\n-static const uptr kAltStackSize = SIGSTKSZ * 4;  // SIGSTKSZ is not enough.\n+static uptr GetAltStackSize() {\n+  // SIGSTKSZ is not enough.\n+  static const uptr kAltStackSize = SIGSTKSZ * 4;\n+  return kAltStackSize;\n+}\n \n void SetAlternateSignalStack() {\n   stack_t altstack, oldstack;\n@@ -176,18 +180,17 @@ void SetAlternateSignalStack() {\n   // TODO(glider): the mapped stack should have the MAP_STACK flag in the\n   // future. It is not required by man 2 sigaltstack now (they're using\n   // malloc()).\n-  void* base = MmapOrDie(kAltStackSize, __func__);\n-  altstack.ss_sp = (char*) base;\n+  altstack.ss_size = GetAltStackSize();\n+  altstack.ss_sp = (char *)MmapOrDie(altstack.ss_size, __func__);\n   altstack.ss_flags = 0;\n-  altstack.ss_size = kAltStackSize;\n   CHECK_EQ(0, sigaltstack(&altstack, nullptr));\n }\n \n void UnsetAlternateSignalStack() {\n   stack_t altstack, oldstack;\n   altstack.ss_sp = nullptr;\n   altstack.ss_flags = SS_DISABLE;\n-  altstack.ss_size = kAltStackSize;  // Some sane value required on Darwin.\n+  altstack.ss_size = GetAltStackSize();  // Some sane value required on Darwin.\n   CHECK_EQ(0, sigaltstack(&altstack, &oldstack));\n   UnmapOrDie(oldstack.ss_sp, oldstack.ss_size);\n }"}]}