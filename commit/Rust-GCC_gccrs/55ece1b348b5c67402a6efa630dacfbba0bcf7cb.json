{"sha": "55ece1b348b5c67402a6efa630dacfbba0bcf7cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVlY2UxYjM0OGI1YzY3NDAyYTZlZmE2MzBkYWNmYmJhMGJjZjdjYg==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-07-14T10:48:59Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-07-14T10:48:59Z"}, "message": "re PR c++/11154 (spurious ambiguity report for template class specialization)\n\n\tPR c++/11154\n\t* pt.c (more_specialized_class): Add full_args parameter.\n\t(most_specialized_class): Adjust calls to more_specialized_class.\n\t* cp-tree.h (more_specialized_class): Adjust declaration.\n\n\t* g++.dg/template/partial2.C: New test.\n\nFrom-SVN: r69328", "tree": {"sha": "aa534e8dcff947fe6f748a9d107e23d6420d6c08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa534e8dcff947fe6f748a9d107e23d6420d6c08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55ece1b348b5c67402a6efa630dacfbba0bcf7cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ece1b348b5c67402a6efa630dacfbba0bcf7cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ece1b348b5c67402a6efa630dacfbba0bcf7cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ece1b348b5c67402a6efa630dacfbba0bcf7cb/comments", "author": null, "committer": null, "parents": [{"sha": "9a8c9b44ccb0d9a94256bfa2bf3d1cf8f1f7744f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a8c9b44ccb0d9a94256bfa2bf3d1cf8f1f7744f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a8c9b44ccb0d9a94256bfa2bf3d1cf8f1f7744f"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "8cc02342dbe7365e11bbf4b7b83b297418375349", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ece1b348b5c67402a6efa630dacfbba0bcf7cb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ece1b348b5c67402a6efa630dacfbba0bcf7cb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=55ece1b348b5c67402a6efa630dacfbba0bcf7cb", "patch": "@@ -1,3 +1,10 @@\n+2003-07-14  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/11154\n+\t* pt.c (more_specialized_class): Add full_args parameter.\n+\t(most_specialized_class): Adjust calls to more_specialized_class.\n+\t* cp-tree.h (more_specialized_class): Adjust declaration.\n+\n 2003-07-14  Dan Nicolaescu  <dann@ics.uci.edu>\n \n \t* lex.c (enum tree_node_kind): Delete."}, {"sha": "8658be6d93a8db088b5d995a74e0d9e176234344", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ece1b348b5c67402a6efa630dacfbba0bcf7cb/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ece1b348b5c67402a6efa630dacfbba0bcf7cb/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=55ece1b348b5c67402a6efa630dacfbba0bcf7cb", "patch": "@@ -3968,7 +3968,7 @@ extern tree instantiate_decl\t\t\t(tree, int);\n extern tree get_bindings\t\t\t(tree, tree, tree);\n extern int push_tinst_level\t\t\t(tree);\n extern void pop_tinst_level\t\t\t(void);\n-extern int more_specialized_class\t\t(tree, tree);\n+extern int more_specialized_class\t\t(tree, tree, tree);\n extern int is_member_template                   (tree);\n extern int comp_template_parms                  (tree, tree);\n extern int template_class_depth                 (tree);"}, {"sha": "ee9d2459d7eb64627b98fdf5037aa7e7df46daaa", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ece1b348b5c67402a6efa630dacfbba0bcf7cb/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ece1b348b5c67402a6efa630dacfbba0bcf7cb/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=55ece1b348b5c67402a6efa630dacfbba0bcf7cb", "patch": "@@ -9962,21 +9962,24 @@ more_specialized (tree pat1, tree pat2, int deduce, int len)\n \n    1 if PAT1 is more specialized than PAT2 as described in [temp.class.order].\n    -1 if PAT2 is more specialized than PAT1.\n-   0 if neither is more specialized.  */\n+   0 if neither is more specialized.\n+\n+   FULL_ARGS is the full set of template arguments that triggers this\n+   partial ordering.  */\n    \n int\n-more_specialized_class (tree pat1, tree pat2)\n+more_specialized_class (tree pat1, tree pat2, tree full_args)\n {\n   tree targs;\n   int winner = 0;\n \n   targs = get_class_bindings (TREE_VALUE (pat1), TREE_PURPOSE (pat1),\n-\t\t\t      TREE_PURPOSE (pat2));\n+\t\t\t      add_outermost_template_args (full_args, TREE_PURPOSE (pat2)));\n   if (targs)\n     --winner;\n \n   targs = get_class_bindings (TREE_VALUE (pat2), TREE_PURPOSE (pat2),\n-\t\t\t      TREE_PURPOSE (pat1));\n+\t\t\t      add_outermost_template_args (full_args, TREE_PURPOSE (pat1)));\n   if (targs)\n     ++winner;\n \n@@ -10257,7 +10260,7 @@ most_specialized_class (tree tmpl, tree args)\n   t = TREE_CHAIN (t);\n   for (; t; t = TREE_CHAIN (t))\n     {\n-      fate = more_specialized_class (champ, t);\n+      fate = more_specialized_class (champ, t, args);\n       if (fate == 1)\n \t;\n       else\n@@ -10274,7 +10277,7 @@ most_specialized_class (tree tmpl, tree args)\n \n   for (t = list; t && t != champ; t = TREE_CHAIN (t))\n     {\n-      fate = more_specialized_class (champ, t);\n+      fate = more_specialized_class (champ, t, args);\n       if (fate != 1)\n \treturn error_mark_node;\n     }"}, {"sha": "92c235c8d5fbecb3cfc08a53edabd0a5c09b7b0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ece1b348b5c67402a6efa630dacfbba0bcf7cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ece1b348b5c67402a6efa630dacfbba0bcf7cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=55ece1b348b5c67402a6efa630dacfbba0bcf7cb", "patch": "@@ -1,3 +1,8 @@\n+2003-07-14  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/11154\n+\t* g++.dg/template/partial2.C: New test.\n+\n 2003-07-13  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/11503"}, {"sha": "ebfdce27889db7484c3d42e404da5a044d63754b", "filename": "gcc/testsuite/g++.dg/template/partial2.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ece1b348b5c67402a6efa630dacfbba0bcf7cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpartial2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ece1b348b5c67402a6efa630dacfbba0bcf7cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpartial2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpartial2.C?ref=55ece1b348b5c67402a6efa630dacfbba0bcf7cb", "patch": "@@ -0,0 +1,14 @@\n+// { dg-do compile }\n+\n+// Origin: lorgon1@yahoo.com\n+\n+// PR c++/11154: Multi-level template argument in partial ordering of\n+// class template\n+\n+template <class A> struct Outer {\n+   template <class T, class U = void, class V = void> struct Foo {};\n+   template <class T, class U> struct Foo<T,U,void> {};\n+   template <class T> struct Foo<T,void,void> {};\n+};\n+\n+Outer<int>::Foo<int,void,void> f;"}]}