{"sha": "4a39264367b95457f73b01dee38aaff729cd81ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEzOTI2NDM2N2I5NTQ1N2Y3M2IwMWRlZTM4YWFmZjcyOWNkODFlZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-06T21:30:57Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-06T21:30:57Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r921", "tree": {"sha": "9bab58dd21c8fb77fa5360a11cdcef9f5ea36538", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bab58dd21c8fb77fa5360a11cdcef9f5ea36538"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a39264367b95457f73b01dee38aaff729cd81ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a39264367b95457f73b01dee38aaff729cd81ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a39264367b95457f73b01dee38aaff729cd81ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a39264367b95457f73b01dee38aaff729cd81ee/comments", "author": null, "committer": null, "parents": [{"sha": "431b17864d5f02629104c6fb0c96eee46ba0f1e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/431b17864d5f02629104c6fb0c96eee46ba0f1e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/431b17864d5f02629104c6fb0c96eee46ba0f1e0"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "4876ef7294d5ec5fe6ca5c31e6c2208f4cafdd9c", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a39264367b95457f73b01dee38aaff729cd81ee/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a39264367b95457f73b01dee38aaff729cd81ee/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=4a39264367b95457f73b01dee38aaff729cd81ee", "patch": "@@ -55,7 +55,8 @@ enum delay_type {\n \n /* Which processor to schedule for.  Since there is no difference between\n    a R2000 and R3000 in terms of the scheduler, we collapse them into\n-   just an R3000.  */\n+   just an R3000.  The elements of the enumeration must match exactly\n+   the cpu attribute in the mips.md machine description.  */\n \n enum processor_type {\n   PROCESSOR_DEFAULT,\n@@ -64,6 +65,9 @@ enum processor_type {\n   PROCESSOR_R4000\n };\n \n+/* Recast the cpu class to be the cpu attribute.  */\n+#define mips_cpu_attr ((enum attr_cpu)mips_cpu)\n+\n /* Which type of block move to do (whether or not the last store is\n    split out so it can fill a branch delay slot).  */\n \n@@ -170,6 +174,8 @@ extern void\t\ttext_section ();\n \n #ifndef HALF_PIC_P\n #define HALF_PIC_P() 0\n+#define HALF_PIC_NUMBER_PTRS 0\n+#define HALF_PIC_NUMBER_REFS 0\n #define HALF_PIC_ENCODE(DECL)\n #define HALF_PIC_DECLARE(NAME)\n #define HALF_PIC_INIT()\terror (\"half-pic init called on systems that don't support it.\")\n@@ -420,7 +426,7 @@ while (0)\n \f\n /* Print subsidiary information on the compiler version in use.  */\n \n-#define MIPS_VERSION \"[AL 1.1, MM 17]\"\n+#define MIPS_VERSION \"[AL 1.1, MM 18]\"\n \n #ifndef MACHINE_TYPE\n #define MACHINE_TYPE \"BSD Mips\""}, {"sha": "49f6d2fc1052f921423f5bdd3fca901e2099026b", "filename": "gcc/mips-tdump.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a39264367b95457f73b01dee38aaff729cd81ee/gcc%2Fmips-tdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a39264367b95457f73b01dee38aaff729cd81ee/gcc%2Fmips-tdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tdump.c?ref=4a39264367b95457f73b01dee38aaff729cd81ee", "patch": "@@ -242,25 +242,11 @@ char *glevel_to_string\t__proto((glevel_t));\n char *lang_to_string\t__proto((lang_t));\n char *type_to_string\t__proto((AUXU *, int));\n \n-/* Library routines with prototypes.  */\n-#if !defined(NO_LIB_PROTOTYPE) && !defined(_OSF_SOURCE) && !defined(_STDIO_H_)\n-extern void\tperror\t__proto((const char *));\n-extern char    *strcpy\t__proto((char *, const char *));\n-extern int\tstrlen\t__proto((const char *));\n-extern int\topen\t__proto((const char *, int, ...));\n-#endif\n-\n-extern int\tread\t__proto((int, PTR_T, size_t));\n-extern int\twrite\t__proto((int, CPTR_T, size_t));\n-extern int\tclose\t__proto((int));\n-extern off_t\tlseek\t__proto((int, off_t, int));\n extern PTR_T\tmalloc\t__proto((size_t));\n extern PTR_T\tcalloc\t__proto((size_t, size_t));\n extern PTR_T\trealloc\t__proto((PTR_T, size_t));\n extern void\tfree\t__proto((PTR_T));\n-extern void\texit\t__proto((int));\n extern char    *ctime\t__proto((time_t *));\n-extern int\tgetopt\t__proto((int, char **, const char *));\n \n extern char *optarg;\n extern int   optind;"}]}