{"sha": "b2e894b50a1953727cb77898cc618e06577c34d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJlODk0YjUwYTE5NTM3MjdjYjc3ODk4Y2M2MThlMDY1NzdjMzRkOQ==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2010-06-22T22:09:07Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2010-06-22T22:09:07Z"}, "message": "printers.py: Don't use string exceptions.\n\n2010-06-22  Matthias Klose  <doko@ubuntu.com>\n\n        * python/libstdcxx/v6/printers.py: Don't use string exceptions.\n\nFrom-SVN: r161233", "tree": {"sha": "4f0e34dbce91266a9ad414b6eee1c18e9ce35914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f0e34dbce91266a9ad414b6eee1c18e9ce35914"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2e894b50a1953727cb77898cc618e06577c34d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2e894b50a1953727cb77898cc618e06577c34d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2e894b50a1953727cb77898cc618e06577c34d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2e894b50a1953727cb77898cc618e06577c34d9/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "87867ff6566abe2217e4796873dd1efae6783707", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87867ff6566abe2217e4796873dd1efae6783707", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87867ff6566abe2217e4796873dd1efae6783707"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "2fb2a7216ad097039fd922f72feb4ada1276c0d8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e894b50a1953727cb77898cc618e06577c34d9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e894b50a1953727cb77898cc618e06577c34d9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b2e894b50a1953727cb77898cc618e06577c34d9", "patch": "@@ -1,3 +1,7 @@\n+2010-06-22  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* python/libstdcxx/v6/printers.py: Don't use string exceptions.\n+\n 2010-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/44630"}, {"sha": "0533deaf1586a3c8cfc47783892c36a57e7ffea6", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e894b50a1953727cb77898cc618e06577c34d9/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e894b50a1953727cb77898cc618e06577c34d9/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=b2e894b50a1953727cb77898cc618e06577c34d9", "patch": "@@ -15,7 +15,7 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-import gdb\n+#import gdb\n import itertools\n import re\n \n@@ -77,6 +77,7 @@ def children(self):\n         elif self.typename == \"std::__debug::list\":\n             nodetype = gdb.lookup_type('std::__norm::_List_node<%s>' % itype).pointer()\n         else:\n+            #raise ValueError, \"Cannot cast list node for list printer.\"\n             raise \"Cannot cast list node for list printer.\"\n         return self._iterator(nodetype, self.val['_M_impl']['_M_node'])\n \n@@ -101,7 +102,7 @@ def to_string(self):\n         elif self.typename == \"std::__norm::_List_iterator\" or self.typename == \"std::__norm::_List_const_iterator\":\n             nodetype = gdb.lookup_type('std::__norm::_List_node<%s>' % itype).pointer()\n         else:\n-            raise \"Cannot cast list node for list iterator printer.\"\n+            raise ValueError, \"Cannot cast list node for list iterator printer.\"\n         return self.val['_M_node'].cast(nodetype).dereference()['_M_data']\n \n class StdSlistPrinter:\n@@ -208,7 +209,7 @@ def __init__ (self, head):\n             # tuple.\n             nodes = self.head.type.fields ()\n             if len (nodes) != 1:\n-                raise \"Top of tuple tree does not consist of a single node.\"\n+                raise ValueError, \"Top of tuple tree does not consist of a single node.\"\n \n             # Set the actual head to the first pair.\n             self.head  = self.head.cast (nodes[0].type)\n@@ -224,7 +225,7 @@ def next (self):\n                 raise StopIteration\n             # Check that this iteration has an expected structure.\n             if len (nodes) != 2:\n-                raise \"Cannot parse more than 2 nodes in a tuple tree.\"\n+                raise ValueError, \"Cannot parse more than 2 nodes in a tuple tree.\"\n \n             # - Left node is the next recursion parent.\n             # - Right node is the actual class contained in the tuple."}]}