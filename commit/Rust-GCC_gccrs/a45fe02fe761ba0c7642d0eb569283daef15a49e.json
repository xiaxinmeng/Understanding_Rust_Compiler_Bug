{"sha": "a45fe02fe761ba0c7642d0eb569283daef15a49e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ1ZmUwMmZlNzYxYmEwYzc2NDJkMGViNTY5MjgzZGFlZjE1YTQ5ZQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2011-06-13T18:24:39Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2011-06-13T18:24:39Z"}, "message": "[multiple changes]\n\n2011-06-13  David Edelsohn  <dje.gcc@gmail.com>\n\n        * config/rs6000/rs6000.md (movdi_mfpgpr): Remove POWER mnemonic.\n        (movdi_internal64): Same.\n\n2011-06-13  Edmar Wienskoski  <edmar@freescale.com>\n\n        * config/rs6000/rs6000.md (save_gpregs_<mode>): Replaced pattern\n        with a set of similar patterns, where the MATCH_OPERAND for the\n        function argument is replaced with individual references to hardware\n        registers.\n        (save_fpregs_<mode>): Ditto\n        (restore_gpregs_<mode>): Ditto\n        (return_and_restore_gpregs_<mode>): Ditto\n        (return_and_restore_fpregs_<mode>): Ditto\n        (return_and_restore_fpregs_aix_<mode>): Ditto\n\nFrom-SVN: r174997", "tree": {"sha": "e59b6c6b036d63a2cc944724a714f91bfcd9f5f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e59b6c6b036d63a2cc944724a714f91bfcd9f5f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a45fe02fe761ba0c7642d0eb569283daef15a49e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a45fe02fe761ba0c7642d0eb569283daef15a49e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a45fe02fe761ba0c7642d0eb569283daef15a49e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a45fe02fe761ba0c7642d0eb569283daef15a49e/comments", "author": null, "committer": null, "parents": [{"sha": "8b160d504a8c41f2738827d18f4eeab326cef8ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b160d504a8c41f2738827d18f4eeab326cef8ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b160d504a8c41f2738827d18f4eeab326cef8ec"}], "stats": {"total": 236, "additions": 210, "deletions": 26}, "files": [{"sha": "4059d4e73d269cd32e91e16b34a0a547f685b013", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a45fe02fe761ba0c7642d0eb569283daef15a49e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a45fe02fe761ba0c7642d0eb569283daef15a49e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a45fe02fe761ba0c7642d0eb569283daef15a49e", "patch": "@@ -1,3 +1,20 @@\n+2011-06-13  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config/rs6000/rs6000.md (movdi_mfpgpr): Remove POWER mnemonic.\n+\t(movdi_internal64): Same.\n+\n+2011-06-13  Edmar Wienskoski  <edmar@freescale.com>\n+\n+\t* config/rs6000/rs6000.md (save_gpregs_<mode>): Replaced pattern\n+\twith a set of similar patterns, where the MATCH_OPERAND for the\n+\tfunction argument is replaced with individual references to hardware\n+\tregisters.\n+\t(save_fpregs_<mode>): Ditto\n+\t(restore_gpregs_<mode>): Ditto\n+\t(return_and_restore_gpregs_<mode>): Ditto\n+\t(return_and_restore_fpregs_<mode>): Ditto\n+\t(return_and_restore_fpregs_aix_<mode>): Ditto\n+\n 2011-06-13  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-utils.c (postorder_stack): New structure."}, {"sha": "61a70eeff338baf1de303481ceaeb994af13fe2e", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 193, "deletions": 26, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a45fe02fe761ba0c7642d0eb569283daef15a49e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a45fe02fe761ba0c7642d0eb569283daef15a49e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=a45fe02fe761ba0c7642d0eb569283daef15a49e", "patch": "@@ -10133,7 +10133,7 @@\n    li %0,%1\n    lis %0,%v1\n    #\n-   {cal|la} %0,%a1\n+   la %0,%a1\n    fmr %0,%1\n    lfd%U1%X1 %0,%1\n    stfd%U0%X0 %1,%0\n@@ -10158,7 +10158,7 @@\n    li %0,%1\n    lis %0,%v1\n    #\n-   {cal|la} %0,%a1\n+   la %0,%a1\n    fmr %0,%1\n    lfd%U1%X1 %0,%1\n    stfd%U0%X0 %1,%0\n@@ -15889,25 +15889,88 @@\n   \"{stm|stmw} %2,%1\"\n   [(set_attr \"type\" \"store_ux\")])\n \n-(define_insn \"*save_gpregs_<mode>\"\n+; The following comment applies to:\n+;     save_gpregs_*\n+;     save_fpregs_*\n+;     restore_gpregs*\n+;     return_and_restore_gpregs*\n+;     return_and_restore_fpregs*\n+;     return_and_restore_fpregs_aix*\n+;\n+; The out-of-line save / restore functions expects one input argument.\n+; Since those are not standard call_insn's, we must avoid using\n+; MATCH_OPERAND for that argument. That way the register rename\n+; optimization will not try to rename this register.\n+; Each pattern is repeated for each possible register number used in \n+; various ABIs (r11, r1, and for some functions r12)\n+\n+(define_insn \"*save_gpregs_<mode>_r11\"\n+  [(match_parallel 0 \"any_parallel_operand\"\n+\t\t   [(clobber (reg:P 65))\n+\t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+                    (use (reg:P 11))\n+\t\t    (set (match_operand:P 2 \"memory_operand\" \"=m\")\n+\t\t\t (match_operand:P 3 \"gpc_reg_operand\" \"r\"))])]\n+  \"\"\n+  \"bl %1\"\n+  [(set_attr \"type\" \"branch\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*save_gpregs_<mode>_r12\"\n+  [(match_parallel 0 \"any_parallel_operand\"\n+\t\t   [(clobber (reg:P 65))\n+\t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+                    (use (reg:P 12))\n+\t\t    (set (match_operand:P 2 \"memory_operand\" \"=m\")\n+\t\t\t (match_operand:P 3 \"gpc_reg_operand\" \"r\"))])]\n+  \"\"\n+  \"bl %1\"\n+  [(set_attr \"type\" \"branch\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*save_gpregs_<mode>_r1\"\n+  [(match_parallel 0 \"any_parallel_operand\"\n+\t\t   [(clobber (reg:P 65))\n+\t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+                    (use (reg:P 1))\n+\t\t    (set (match_operand:P 2 \"memory_operand\" \"=m\")\n+\t\t\t (match_operand:P 3 \"gpc_reg_operand\" \"r\"))])]\n+  \"\"\n+  \"bl %1\"\n+  [(set_attr \"type\" \"branch\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*save_fpregs_<mode>_r11\"\n+  [(match_parallel 0 \"any_parallel_operand\"\n+\t\t   [(clobber (reg:P 65))\n+\t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n+                    (use (reg:P 11))\n+\t\t    (set (match_operand:DF 2 \"memory_operand\" \"=m\")\n+\t\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"d\"))])]\n+  \"\"\n+  \"bl %1\"\n+  [(set_attr \"type\" \"branch\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*save_fpregs_<mode>_r12\"\n   [(match_parallel 0 \"any_parallel_operand\"\n \t\t   [(clobber (reg:P 65))\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n-                    (use (match_operand:P 2 \"gpc_reg_operand\" \"r\"))\n-\t\t    (set (match_operand:P 3 \"memory_operand\" \"=m\")\n-\t\t\t (match_operand:P 4 \"gpc_reg_operand\" \"r\"))])]\n+                    (use (reg:P 12))\n+\t\t    (set (match_operand:DF 2 \"memory_operand\" \"=m\")\n+\t\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"d\"))])]\n   \"\"\n   \"bl %1\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"4\")])\n \n-(define_insn \"*save_fpregs_<mode>\"\n+(define_insn \"*save_fpregs_<mode>_r1\"\n   [(match_parallel 0 \"any_parallel_operand\"\n \t\t   [(clobber (reg:P 65))\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n-                    (use (match_operand:P 2 \"gpc_reg_operand\" \"r\"))\n-\t\t    (set (match_operand:DF 3 \"memory_operand\" \"=m\")\n-\t\t\t (match_operand:DF 4 \"gpc_reg_operand\" \"d\"))])]\n+                    (use (reg:P 1))\n+\t\t    (set (match_operand:DF 2 \"memory_operand\" \"=m\")\n+\t\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"d\"))])]\n   \"\"\n   \"bl %1\"\n   [(set_attr \"type\" \"branch\")\n@@ -16005,52 +16068,156 @@\n ; FIXME: This would probably be somewhat simpler if the Cygnus sibcall\n ; stuff was in GCC.  Oh, and \"any_parallel_operand\" is a bit flexible...\n \n-(define_insn \"*restore_gpregs_<mode>\"\n+; The following comment applies to:\n+;     save_gpregs_*\n+;     save_fpregs_*\n+;     restore_gpregs*\n+;     return_and_restore_gpregs*\n+;     return_and_restore_fpregs*\n+;     return_and_restore_fpregs_aix*\n+;\n+; The out-of-line save / restore functions expects one input argument.\n+; Since those are not standard call_insn's, we must avoid using\n+; MATCH_OPERAND for that argument. That way the register rename\n+; optimization will not try to rename this register.\n+; Each pattern is repeated for each possible register number used in \n+; various ABIs (r11, r1, and for some functions r12)\n+\n+(define_insn \"*restore_gpregs_<mode>_r11\"\n+ [(match_parallel 0 \"any_parallel_operand\"\n+                  [(clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n+                   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n+                   (use (reg:P 11))\n+\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n+ \"\"\n+ \"bl %2\"\n+ [(set_attr \"type\" \"branch\")\n+  (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*restore_gpregs_<mode>_r12\"\n  [(match_parallel 0 \"any_parallel_operand\"\n                   [(clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n                    (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (match_operand:P 3 \"gpc_reg_operand\" \"r\"))\n-\t\t   (set (match_operand:P 4 \"gpc_reg_operand\" \"=r\")\n-\t\t\t(match_operand:P 5 \"memory_operand\" \"m\"))])]\n+                   (use (reg:P 12))\n+\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n  \"\"\n  \"bl %2\"\n  [(set_attr \"type\" \"branch\")\n   (set_attr \"length\" \"4\")])\n \n-(define_insn \"*return_and_restore_gpregs_<mode>\"\n+(define_insn \"*restore_gpregs_<mode>_r1\"\n+ [(match_parallel 0 \"any_parallel_operand\"\n+                  [(clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n+                   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n+                   (use (reg:P 1))\n+\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n+ \"\"\n+ \"bl %2\"\n+ [(set_attr \"type\" \"branch\")\n+  (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*return_and_restore_gpregs_<mode>_r11\"\n+ [(match_parallel 0 \"any_parallel_operand\"\n+                  [(return)\n+\t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n+\t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n+                   (use (reg:P 11))\n+\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n+ \"\"\n+ \"b %2\"\n+ [(set_attr \"type\" \"branch\")\n+  (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*return_and_restore_gpregs_<mode>_r12\"\n+ [(match_parallel 0 \"any_parallel_operand\"\n+                  [(return)\n+\t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n+\t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n+                   (use (reg:P 12))\n+\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n+ \"\"\n+ \"b %2\"\n+ [(set_attr \"type\" \"branch\")\n+  (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*return_and_restore_gpregs_<mode>_r1\"\n  [(match_parallel 0 \"any_parallel_operand\"\n                   [(return)\n \t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n \t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (match_operand:P 3 \"gpc_reg_operand\" \"r\"))\n-\t\t   (set (match_operand:P 4 \"gpc_reg_operand\" \"=r\")\n-\t\t\t(match_operand:P 5 \"memory_operand\" \"m\"))])]\n+                   (use (reg:P 1))\n+\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n  \"\"\n  \"b %2\"\n  [(set_attr \"type\" \"branch\")\n   (set_attr \"length\" \"4\")])\n \n-(define_insn \"*return_and_restore_fpregs_<mode>\"\n+(define_insn \"*return_and_restore_fpregs_<mode>_r11\"\n  [(match_parallel 0 \"any_parallel_operand\"\n                   [(return)\n \t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n \t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (match_operand:P 3 \"gpc_reg_operand\" \"r\"))\n-\t\t   (set (match_operand:DF 4 \"gpc_reg_operand\" \"=d\")\n-\t\t\t(match_operand:DF 5 \"memory_operand\" \"m\"))])]\n+                   (use (reg:P 11))\n+\t\t   (set (match_operand:DF 3 \"gpc_reg_operand\" \"=d\")\n+\t\t\t(match_operand:DF 4 \"memory_operand\" \"m\"))])]\n+ \"\"\n+ \"b %2\"\n+ [(set_attr \"type\" \"branch\")\n+  (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*return_and_restore_fpregs_<mode>_r12\"\n+ [(match_parallel 0 \"any_parallel_operand\"\n+                  [(return)\n+\t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n+\t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n+                   (use (reg:P 12))\n+\t\t   (set (match_operand:DF 3 \"gpc_reg_operand\" \"=d\")\n+\t\t\t(match_operand:DF 4 \"memory_operand\" \"m\"))])]\n+ \"\"\n+ \"b %2\"\n+ [(set_attr \"type\" \"branch\")\n+  (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*return_and_restore_fpregs_<mode>_r1\"\n+ [(match_parallel 0 \"any_parallel_operand\"\n+                  [(return)\n+\t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n+\t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n+                   (use (reg:P 1))\n+\t\t   (set (match_operand:DF 3 \"gpc_reg_operand\" \"=d\")\n+\t\t\t(match_operand:DF 4 \"memory_operand\" \"m\"))])]\n+ \"\"\n+ \"b %2\"\n+ [(set_attr \"type\" \"branch\")\n+  (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*return_and_restore_fpregs_aix_<mode>_r11\"\n+ [(match_parallel 0 \"any_parallel_operand\"\n+\t\t  [(return)\n+\t\t   (use (match_operand:P 1 \"register_operand\" \"l\"))\n+\t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n+\t\t   (use (reg:P 11))\n+\t\t   (set (match_operand:DF 3 \"gpc_reg_operand\" \"=d\")\n+\t\t\t(match_operand:DF 4 \"memory_operand\" \"m\"))])]\n  \"\"\n  \"b %2\"\n  [(set_attr \"type\" \"branch\")\n   (set_attr \"length\" \"4\")])\n \n-(define_insn \"*return_and_restore_fpregs_aix_<mode>\"\n+(define_insn \"*return_and_restore_fpregs_aix_<mode>_r1\"\n  [(match_parallel 0 \"any_parallel_operand\"\n \t\t  [(return)\n \t\t   (use (match_operand:P 1 \"register_operand\" \"l\"))\n \t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-\t\t   (use (match_operand:P 3 \"gpc_reg_operand\" \"r\"))\n-\t\t   (set (match_operand:DF 4 \"gpc_reg_operand\" \"=d\")\n-\t\t\t(match_operand:DF 5 \"memory_operand\" \"m\"))])]\n+\t\t   (use (reg:P 1))\n+\t\t   (set (match_operand:DF 3 \"gpc_reg_operand\" \"=d\")\n+\t\t\t(match_operand:DF 4 \"memory_operand\" \"m\"))])]\n  \"\"\n  \"b %2\"\n  [(set_attr \"type\" \"branch\")"}]}