{"sha": "9220b5116d0f4e880c073409f3854dec7d065eb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIyMGI1MTE2ZDBmNGU4ODBjMDczNDA5ZjM4NTRkZWM3ZDA2NWViNQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2018-05-02T12:16:32Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-05-02T12:16:32Z"}, "message": "[testsuite] Add scan-ltrans-tree-dump\n\n2018-05-02  Tom de Vries  <tom@codesourcery.com>\n\n\tPR testsuite/85106\n\t* gcc.dg/ipa/ipa-icf-38.c: Use scan-ltrans-tree-dump.\n\t* lib/scanltranstree.exp: New file.\n\t* lib/target-supports.exp (scan-ltrans-tree-dump_required_options)\n\t(scan-ltrans-tree-dump-times_required_options)\n\t(scan-ltrans-tree-dump-not_required_options)\n\t(scan-ltrans-tree-dump-dem_required_options)\n\t(scan-ltrans-tree-dump-dem-not_required_options): New proc.\n\t* lib/gcc-dg.exp: Include scanltranstree.exp.\n\n\t* testsuite/lib/libatomic.exp: Include scanltranstree.exp.\n\n\t* testsuite/lib/libgomp.exp: Include scanltranstree.exp.\n\n\t* testsuite/lib/libitm.exp: Include scanltranstree.exp.\n\n\t* testsuite/lib/libvtv.exp: Include scanltranstree.exp.\n\n\t* doc/sourcebuild.texi (Commands for use in dg-final, Scan optimization\n\tdump files): Add ltrans-tree.\n\nFrom-SVN: r259838", "tree": {"sha": "462543897aa19f5809dd931a66e4303cd1d056f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/462543897aa19f5809dd931a66e4303cd1d056f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9220b5116d0f4e880c073409f3854dec7d065eb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9220b5116d0f4e880c073409f3854dec7d065eb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9220b5116d0f4e880c073409f3854dec7d065eb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9220b5116d0f4e880c073409f3854dec7d065eb5/comments", "author": null, "committer": null, "parents": [{"sha": "6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820"}], "stats": {"total": 219, "additions": 216, "deletions": 3}, "files": [{"sha": "1c50825790b831b7e473333aacdf652c7cb470ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -1,3 +1,9 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/85106\n+\t* doc/sourcebuild.texi (Commands for use in dg-final, Scan optimization\n+\tdump files): Add ltrans-tree.\n+\n 2018-05-02  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/85106"}, {"sha": "16164ae2cf3e7728c0430fd8991f6ac8b6c00c36", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -2588,8 +2588,8 @@ assembly output.\n \n @subsubsection Scan optimization dump files\n \n-These commands are available for @var{kind} of @code{tree}, @code{rtl},\n-@code{ipa}, and @code{wpa-ipa}.\n+These commands are available for @var{kind} of @code{tree}, @code{ltrans-tree},\n+@code{rtl}, @code{ipa}, and @code{wpa-ipa}.\n \n @table @code\n @item scan-@var{kind}-dump @var{regex} @var{suffix} [@{ target/xfail @var{selector} @}]"}, {"sha": "e6ee793567a164ce35087de9a40e2d030673df4b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -1,3 +1,15 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/85106\n+\t* gcc.dg/ipa/ipa-icf-38.c: Use scan-ltrans-tree-dump.\n+\t* lib/scanltranstree.exp: New file.\n+\t* lib/target-supports.exp (scan-ltrans-tree-dump_required_options)\n+\t(scan-ltrans-tree-dump-times_required_options)\n+\t(scan-ltrans-tree-dump-not_required_options)\n+\t(scan-ltrans-tree-dump-dem_required_options)\n+\t(scan-ltrans-tree-dump-dem-not_required_options): New proc.\n+\t* lib/gcc-dg.exp: Include scanltranstree.exp.\n+\n 2018-05-02  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/85106"}, {"sha": "85531ab1cf3f938736b76db6719150d5374e2f83", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-38.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-38.c?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do link } */\n-/* { dg-options \"-O2 -fdump-ipa-icf -flto\" } */\n+/* { dg-options \"-O2 -fdump-ipa-icf -flto -fdump-tree-fixup_cfg4\" } */\n /* { dg-require-effective-target lto } */\n /* { dg-additional-sources \"ipa-icf-38a.c\" }*/\n \n@@ -29,3 +29,5 @@ int main()\n \n /* { dg-final { scan-wpa-ipa-dump \"Semantic equality hit:foo->bar\" \"icf\"  } } */\n /* { dg-final { scan-wpa-ipa-dump \"Equal symbols: 1\" \"icf\"  } } */\n+/* { dg-final { scan-ltrans-tree-dump \"Function foo\" \"fixup_cfg4\" } } */\n+/* { dg-final { scan-ltrans-tree-dump-not \"Function bar\" \"fixup_cfg4\" } } */"}, {"sha": "a15c5d5e2a6443ef02f51a3d261b786f5d7f946b", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -21,6 +21,7 @@ load_lib target-supports-dg.exp\n load_lib scanasm.exp\n load_lib scanrtl.exp\n load_lib scantree.exp\n+load_lib scanltranstree.exp\n load_lib scanipa.exp\n load_lib scanwpaipa.exp\n load_lib scanlang.exp"}, {"sha": "f536f848551d61c94b8d200586bb1a6a3b0e011a", "filename": "gcc/testsuite/lib/scanltranstree.exp", "status": "added", "additions": 148, "deletions": 0, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2Ftestsuite%2Flib%2Fscanltranstree.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2Ftestsuite%2Flib%2Fscanltranstree.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanltranstree.exp?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -0,0 +1,148 @@\n+#   Copyright (C) 2000-2018 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Various utilities for scanning ltrans tree dump output, used by gcc-dg.exp and\n+# g++-dg.exp.\n+\n+load_lib scandump.exp\n+\n+# Utility for scanning compiler result, invoked via dg-final.\n+# Call pass if pattern is present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped tree pass\n+# Argument 2 handles expected failures and the like\n+proc scan-ltrans-tree-dump { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-ltrans-tree-dump: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-ltrans-tree-dump: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump \"ltrans-tree\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".exe.ltrans0\" \\\n+\t\t  [lindex $args 2]\n+    } else {\n+\tscan-dump \"ltrans-tree\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".exe.ltrans0\"\n+    }\n+}\n+\n+# Call pass if pattern is present given number of times, otherwise fail.\n+# Argument 0 is the regexp to match\n+# Argument 1 is number of times the regexp must be found\n+# Argument 2 is the name of the dumped tree pass\n+# Argument 3 handles expected failures and the like\n+proc scan-ltrans-tree-dump-times { args } {\n+\n+    if { [llength $args] < 3 } {\n+\terror \"scan-ltrans-tree-dump-times: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 4 } {\n+\terror \"scan-ltrans-tree-dump-times: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 4 } {\n+\tscan-dump-times \"ltrans-tree\" [lindex $args 0] [lindex $args 1] \\\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 2]\" \\\n+\t\t\t\".exe.ltrans0\" [lindex $args 3]\n+    } else {\n+\tscan-dump-times \"ltrans-tree\" [lindex $args 0] [lindex $args 1] \\\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 2]\" \".exe.ltrans0\"\n+    }\n+}\n+\n+# Call pass if pattern is not present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped tree pass\n+# Argument 2 handles expected failures and the like\n+proc scan-ltrans-tree-dump-not { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-ltrans-tree-dump-not: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-ltrans-tree-dump-not: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump-not \"ltrans-tree\" [lindex $args 0] \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".exe.ltrans0\" \\\n+\t\t      [lindex $args 2]\n+    } else {\n+\tscan-dump-not \"ltrans-tree\" [lindex $args 0] \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".exe.ltrans0\"\n+    }\n+}\n+\n+# Utility for scanning demangled compiler result, invoked via dg-final.\n+# Call pass if pattern is present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped tree pass\n+# Argument 2 handles expected failures and the like\n+proc scan-ltrans-tree-dump-dem { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-ltrans-tree-dump-dem: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-ltrans-tree-dump-dem: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump-dem \"ltrans-tree\" [lindex $args 0] \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".exe.ltrans0\" \\\n+\t\t      [lindex $args 2]\n+    } else {\n+\tscan-dump-dem \"ltrans-tree\" [lindex $args 0] \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".exe.ltrans0\"\n+    }\n+}\n+\n+# Call pass if demangled pattern is not present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped tree pass\n+# Argument 2 handles expected failures and the like\n+proc scan-ltrans-tree-dump-dem-not { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-ltrans-tree-dump-dem-not: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-ltrans-tree-dump-dem-not: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump-dem-not \"ltrans-tree\" [lindex $args 0] \\\n+\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \\\n+\t\t\t  \".exe.ltrans0\" [lindex $args 2]\n+    } else {\n+\tscan-dump-dem-not \"ltrans-tree\" [lindex $args 0] \\\n+\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \\\n+\t\t\t  \".exe.ltrans0\"\n+    }\n+}"}, {"sha": "cfc22a2297587351ac7f8eed692adc9c42a69033", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -8809,6 +8809,26 @@ proc force_conventional_output_for { test } {\n     }\n }\n \n+# Record that dg-final test scan-ltrans-tree-dump* requires -flto-partition=one\n+# in order to force a single partition, allowing scan-ltrans-tree-dump* to scan\n+# a dump file *.exe.ltrans0.*.\n+\n+proc scan-ltrans-tree-dump_required_options {} {\n+    return \"-flto-partition=one\"\n+}\n+proc scan-ltrans-tree-dump-times_required_options {} {\n+    return \"-flto-partition=one\"\n+}\n+proc scan-ltrans-tree-dump-not_required_options {} {\n+    return \"-flto-partition=one\"\n+}\n+proc scan-ltrans-tree-dump-dem_required_options {} {\n+    return \"-flto-partition=one\"\n+}\n+proc scan-ltrans-tree-dump-dem-not_required_options {} {\n+    return \"-flto-partition=one\"\n+}\n+\n # Return 1 if the x86-64 target supports PIE with copy reloc, 0\n # otherwise.  Cache the result.\n "}, {"sha": "82a2e040c6b04c07ef322854d707b136f004f9d6", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -1,3 +1,8 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/85106\n+\t* testsuite/lib/libatomic.exp: Include scanltranstree.exp.\n+\n 2018-05-02  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/85106"}, {"sha": "38f3e5673e24f36e641c15bc5aba5221dc6a4f0a", "filename": "libatomic/testsuite/lib/libatomic.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/libatomic%2Ftestsuite%2Flib%2Flibatomic.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/libatomic%2Ftestsuite%2Flib%2Flibatomic.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Ftestsuite%2Flib%2Flibatomic.exp?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -37,6 +37,7 @@ load_gcc_lib scandump.exp\n load_gcc_lib scanlang.exp\n load_gcc_lib scanrtl.exp\n load_gcc_lib scantree.exp\n+load_gcc_lib scanltranstree.exp\n load_gcc_lib scanipa.exp\n load_gcc_lib scanwpaipa.exp\n load_gcc_lib multiline.exp"}, {"sha": "958f92bc4c7fff261595b0a46c7f6a4e06bd7e53", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -1,3 +1,8 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/85106\n+\t* testsuite/lib/libgomp.exp: Include scanltranstree.exp.\n+\n 2018-05-02  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/85106"}, {"sha": "c694f17c62ff77769447ad45d229caa95d2b1346", "filename": "libgomp/testsuite/lib/libgomp.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -29,6 +29,7 @@ load_gcc_lib scandump.exp\n load_gcc_lib scanlang.exp\n load_gcc_lib scanrtl.exp\n load_gcc_lib scantree.exp\n+load_gcc_lib scanltranstree.exp\n load_gcc_lib scanipa.exp\n load_gcc_lib scanwpaipa.exp\n load_gcc_lib timeout-dg.exp"}, {"sha": "1758b6a8f7fb914ab29045a216c2f4cf34abee22", "filename": "libitm/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -1,3 +1,8 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/85106\n+\t* testsuite/lib/libitm.exp: Include scanltranstree.exp.\n+\n 2018-05-02  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/85106"}, {"sha": "b3d247b9f98a1fce8651726910f8fe13a49b23d9", "filename": "libitm/testsuite/lib/libitm.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/libitm%2Ftestsuite%2Flib%2Flibitm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/libitm%2Ftestsuite%2Flib%2Flibitm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Ftestsuite%2Flib%2Flibitm.exp?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -43,6 +43,7 @@ load_gcc_lib scandump.exp\n load_gcc_lib scanlang.exp\n load_gcc_lib scanrtl.exp\n load_gcc_lib scantree.exp\n+load_gcc_lib scanltranstree.exp\n load_gcc_lib scanipa.exp\n load_gcc_lib scanwpaipa.exp\n load_gcc_lib timeout-dg.exp"}, {"sha": "cd1beb9004b2a54f1fa5332b1c14fbad2e4fda3f", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -1,3 +1,8 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/85106\n+\t* testsuite/lib/libvtv.exp: Include scanltranstree.exp.\n+\n 2018-05-02  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/85106"}, {"sha": "4b71c9ce7bcf8d2461258c65d861fbad59756f33", "filename": "libvtv/testsuite/lib/libvtv.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9220b5116d0f4e880c073409f3854dec7d065eb5/libvtv%2Ftestsuite%2Flib%2Flibvtv.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9220b5116d0f4e880c073409f3854dec7d065eb5/libvtv%2Ftestsuite%2Flib%2Flibvtv.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Ftestsuite%2Flib%2Flibvtv.exp?ref=9220b5116d0f4e880c073409f3854dec7d065eb5", "patch": "@@ -42,6 +42,7 @@ load_gcc_lib scanasm.exp\n load_gcc_lib scandump.exp\n load_gcc_lib scanrtl.exp\n load_gcc_lib scantree.exp\n+load_gcc_lib scanltranstree.exp\n load_gcc_lib scanipa.exp\n load_gcc_lib scanwpaipa.exp\n load_gcc_lib timeout-dg.exp"}]}