{"sha": "b834435c8fa4cb9424787fe3044a49fef7992de8", "node_id": "C_kwDOANBUbNoAKGI4MzQ0MzVjOGZhNGNiOTQyNDc4N2ZlMzA0NGE0OWZlZjc5OTJkZTg", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-19T08:26:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-19T08:26:13Z"}, "message": "fold-const: Optimize &\"foo\"[0] == \"foo\" [PR89074]\n\nThis is a non-C++ related part from the PR89074 address_compare changes.\nFor \"foo\" == \"foo\" we already optimize this from the (cmp @0 @0)\nsimplification, because we use operand_equal_p in that case\nand operand_equal_p also compares the STRING_CSTs bytes rather than\njust addresses.\n\n2022-01-19  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/89074\n\t* fold-const.cc (address_compare): Consider different STRING_CSTs\n\twith the same lengths that memcmp the same as equal, not different.\n\n\t* gcc.dg/tree-ssa/pr89074.c: New test.", "tree": {"sha": "229604493332e62ed597166cf8cac53a00edeac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/229604493332e62ed597166cf8cac53a00edeac6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b834435c8fa4cb9424787fe3044a49fef7992de8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b834435c8fa4cb9424787fe3044a49fef7992de8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b834435c8fa4cb9424787fe3044a49fef7992de8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b834435c8fa4cb9424787fe3044a49fef7992de8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29a6db635f5eb38ba34d15a6ee35b00e753740e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a6db635f5eb38ba34d15a6ee35b00e753740e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a6db635f5eb38ba34d15a6ee35b00e753740e4"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "8fe633c03f995de446b8fd9bbf9d494da1ae3ef8", "filename": "gcc/fold-const.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b834435c8fa4cb9424787fe3044a49fef7992de8/gcc%2Ffold-const.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b834435c8fa4cb9424787fe3044a49fef7992de8/gcc%2Ffold-const.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.cc?ref=b834435c8fa4cb9424787fe3044a49fef7992de8", "patch": "@@ -16587,6 +16587,15 @@ address_compare (tree_code code, tree type, tree op0, tree op1,\n \t       || TREE_CODE (base1) == SSA_NAME\n \t       || TREE_CODE (base1) == STRING_CST))\n     equal = (base0 == base1);\n+  /* Assume different STRING_CSTs with the same content will be\n+     merged.  */\n+  if (equal == 0\n+      && TREE_CODE (base0) == STRING_CST\n+      && TREE_CODE (base1) == STRING_CST\n+      && TREE_STRING_LENGTH (base0) == TREE_STRING_LENGTH (base1)\n+      && memcmp (TREE_STRING_POINTER (base0), TREE_STRING_POINTER (base1),\n+\t\t TREE_STRING_LENGTH (base0)) == 0)\n+    equal = 1;\n   if (equal == 1)\n     {\n       if (code == EQ_EXPR"}, {"sha": "666dfa7e105a92bf72bc005a586669a50228eff2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr89074.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b834435c8fa4cb9424787fe3044a49fef7992de8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr89074.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b834435c8fa4cb9424787fe3044a49fef7992de8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr89074.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr89074.c?ref=b834435c8fa4cb9424787fe3044a49fef7992de8", "patch": "@@ -0,0 +1,12 @@\n+/* PR c++/89074 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump \"return 1;\" \"optimized\" } } */\n+\n+int\n+foo (void)\n+{\n+  const char *a = &\"foo\"[0];\n+  const char *b = \"foo\";\n+  return a == b;\n+}"}]}