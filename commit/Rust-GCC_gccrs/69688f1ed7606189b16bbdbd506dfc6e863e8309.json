{"sha": "69688f1ed7606189b16bbdbd506dfc6e863e8309", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk2ODhmMWVkNzYwNjE4OWIxNmJiZGJkNTA2ZGZjNmU4NjNlODMwOQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-02-24T11:18:59Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-02-24T11:18:59Z"}, "message": "* unroll.c (unroll_loop): Avoid out-of-bounds index for local_regno.\n\nFrom-SVN: r25399", "tree": {"sha": "bfd28bdcb71fb9f9e964e3c992b6656e251ff9f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfd28bdcb71fb9f9e964e3c992b6656e251ff9f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69688f1ed7606189b16bbdbd506dfc6e863e8309", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69688f1ed7606189b16bbdbd506dfc6e863e8309", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69688f1ed7606189b16bbdbd506dfc6e863e8309", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69688f1ed7606189b16bbdbd506dfc6e863e8309/comments", "author": null, "committer": null, "parents": [{"sha": "d2ae3ff54e52449707326c83c1286d0928e25817", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ae3ff54e52449707326c83c1286d0928e25817", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2ae3ff54e52449707326c83c1286d0928e25817"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "08591cca4b6826c65bf8827065e315485c48c2ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69688f1ed7606189b16bbdbd506dfc6e863e8309/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69688f1ed7606189b16bbdbd506dfc6e863e8309/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69688f1ed7606189b16bbdbd506dfc6e863e8309", "patch": "@@ -1,3 +1,7 @@\n+Wed Feb 24 19:17:11 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* unroll.c (unroll_loop): Avoid out-of-bounds index for local_regno.\n+\n Wed Feb 24 11:26:41 1999  Vladimir N. Makarov  <vmakarov@cygnus.com>\n \n \t* config/sparc/sparc.h (CONDITIONAL_REGISTER_USAGE): Don't use"}, {"sha": "bf0375761a7e2e154287a43752a2a98a76b20b46", "filename": "gcc/unroll.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69688f1ed7606189b16bbdbd506dfc6e863e8309/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69688f1ed7606189b16bbdbd506dfc6e863e8309/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=69688f1ed7606189b16bbdbd506dfc6e863e8309", "patch": "@@ -238,6 +238,7 @@ unroll_loop (loop_end, insn_count, loop_start, end_insert_before,\n   struct inline_remap *map;\n   char *local_label;\n   char *local_regno;\n+  int max_local_regnum;\n   int maxregnum;\n   rtx exit_label = 0;\n   rtx start_label;\n@@ -755,6 +756,9 @@ unroll_loop (loop_end, insn_count, loop_start, end_insert_before,\n   /* The preconditioning code may allocate two new pseudo registers.  */\n   maxregnum = max_reg_num ();\n \n+  /* local_regno is only valid for regnos < max_local_regnum.  */\n+  max_local_regnum = maxregnum;\n+\n   /* Allocate and zero out the splittable_regs and addr_combined_regs\n      arrays.  These must be zeroed here because they will be used if\n      loop preconditioning is performed, and must be zero for that case.\n@@ -1051,7 +1055,7 @@ unroll_loop (loop_end, insn_count, loop_start, end_insert_before,\n \t\tif (local_label[j])\n \t\t  set_label_in_map (map, j, gen_label_rtx ());\n \n-\t      for (j = FIRST_PSEUDO_REGISTER; j < maxregnum; j++)\n+\t      for (j = FIRST_PSEUDO_REGISTER; j < max_local_regnum; j++)\n \t\tif (local_regno[j])\n \t\t  {\n \t\t    map->reg_map[j] = gen_reg_rtx (GET_MODE (regno_reg_rtx[j]));\n@@ -1199,7 +1203,7 @@ unroll_loop (loop_end, insn_count, loop_start, end_insert_before,\n \tif (local_label[j])\n \t  set_label_in_map (map, j, gen_label_rtx ());\n \n-      for (j = FIRST_PSEUDO_REGISTER; j < maxregnum; j++)\n+      for (j = FIRST_PSEUDO_REGISTER; j < max_local_regnum; j++)\n \tif (local_regno[j])\n \t  {\n \t    map->reg_map[j] = gen_reg_rtx (GET_MODE (regno_reg_rtx[j]));"}]}