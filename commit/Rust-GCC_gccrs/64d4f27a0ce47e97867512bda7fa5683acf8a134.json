{"sha": "64d4f27a0ce47e97867512bda7fa5683acf8a134", "node_id": "C_kwDOANBUbNoAKDY0ZDRmMjdhMGNlNDdlOTc4Njc1MTJiZGE3ZmE1NjgzYWNmOGExMzQ", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-06-27T06:47:40Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-06-27T06:47:40Z"}, "message": "Implement __imag__ of float _Complex using shufps on x86_64.\n\nThis patch is a follow-up improvement to my recent patch for\nPR rtl-optimization/7061.  That patch added the test case\ngcc.target/i386/pr7061-2.c:\n\nfloat im(float _Complex a) { return __imag__ a; }\n\nFor which GCC on x86_64 currently generates:\n\n        movq    %xmm0, %rax\n        shrq    $32, %rax\n        movd    %eax, %xmm0\n        ret\n\nbut with this patch we now generate (the same as LLVM):\n\n        shufps  $85, %xmm0, %xmm0\n        ret\n\nThis is achieved by providing a define_insn_and_split that allows\ntruncated lshiftrt:DI by 32 to be performed on either SSE or general\nregs, where if the register allocator prefers to use SSE, we split\nto a shufps_v4si, or if not, we use a regular shrq.\n\n2022-06-27  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\tPR rtl-optimization/7061\n\t* config/i386/i386.md (*highpartdisi2): New define_insn_and_split.\n\ngcc/testsuite/ChangeLog\n\tPR rtl-optimization/7061\n\t* gcc.target/i386/pr7061-2.c: Update to look for shufps.", "tree": {"sha": "ce98fc5bd02f772e5fffe058cb00d38efe6ca474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce98fc5bd02f772e5fffe058cb00d38efe6ca474"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64d4f27a0ce47e97867512bda7fa5683acf8a134", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64d4f27a0ce47e97867512bda7fa5683acf8a134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64d4f27a0ce47e97867512bda7fa5683acf8a134", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64d4f27a0ce47e97867512bda7fa5683acf8a134/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3f73e86ec8613f176db3e52bbfbfbb9636cb714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3f73e86ec8613f176db3e52bbfbfbb9636cb714", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3f73e86ec8613f176db3e52bbfbfbb9636cb714"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "125a3b44a6d69458c2d202d87768f3d1af3f18c6", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64d4f27a0ce47e97867512bda7fa5683acf8a134/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64d4f27a0ce47e97867512bda7fa5683acf8a134/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=64d4f27a0ce47e97867512bda7fa5683acf8a134", "patch": "@@ -13249,6 +13249,31 @@\n        (const_string \"*\")))\n    (set_attr \"mode\" \"<MODE>\")])\n \n+;; Specialization of *lshr<mode>3_1 below, extracting the SImode\n+;; highpart of a DI to be extracted, but allowing it to be clobbered.\n+(define_insn_and_split \"*highpartdisi2\"\n+  [(set (subreg:DI (match_operand:SI 0 \"register_operand\" \"=r,x,?k\") 0)\n+        (lshiftrt:DI (match_operand:DI 1 \"register_operand\" \"0,0,k\")\n+\t\t     (const_int 32)))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_64BIT\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(parallel\n+    [(set (match_dup 0) (lshiftrt:DI (match_dup 1) (const_int 32)))\n+     (clobber (reg:CC FLAGS_REG))])]\n+{\n+  if (SSE_REG_P (operands[0]))\n+    {\n+      rtx tmp = gen_rtx_REG (V4SImode, REGNO (operands[0]));\n+      emit_insn (gen_sse_shufps_v4si (tmp, tmp, tmp,\n+\t\t\t\t      const1_rtx, const1_rtx,\n+\t\t\t\t      GEN_INT (5), GEN_INT (5)));\n+      DONE;\n+    }\n+  operands[0] = gen_rtx_REG (DImode, REGNO (operands[0]));\n+})\n+\n (define_insn \"*lshr<mode>3_1\"\n   [(set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=rm,r,?k\")\n \t(lshiftrt:SWI48"}, {"sha": "837cd83e156926042d62f3df6a8379d0cc3dc0c4", "filename": "gcc/testsuite/gcc.target/i386/pr7061-2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64d4f27a0ce47e97867512bda7fa5683acf8a134/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr7061-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64d4f27a0ce47e97867512bda7fa5683acf8a134/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr7061-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr7061-2.c?ref=64d4f27a0ce47e97867512bda7fa5683acf8a134", "patch": "@@ -1,5 +1,9 @@\n /* { dg-do compile { target { ! ia32 } } } */\n /* { dg-options \"-O2\" } */\n float im(float _Complex a) { return __imag__ a; }\n+/* { dg-final { scan-assembler \"shufps\" } } */\n+/* { dg-final { scan-assembler-not \"movd\" } } */\n+/* { dg-final { scan-assembler-not \"movq\" } } */\n /* { dg-final { scan-assembler-not \"movss\" } } */\n /* { dg-final { scan-assembler-not \"rsp\" } } */\n+/* { dg-final { scan-assembler-not \"shr\" } } */"}]}