{"sha": "5eafdd32daa76b989be4386ab641ac6be6034ee0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVhZmRkMzJkYWE3NmI5ODliZTQzODZhYjY0MWFjNmJlNjAzNGVlMA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@apple.com", "date": "2007-06-14T21:43:45Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-06-14T21:43:45Z"}, "message": "sse.md (movdi_to_sse): Rewrite body.\n\n2007-06-14  Eric Christopher  <echristo@apple.com>\n\n        * config/i386/sse.md (movdi_to_sse): Rewrite body.\n        (movv4sf): Use gcc_unreachable instead of abort.\n\nFrom-SVN: r125723", "tree": {"sha": "afd7d0e47d1ee723820c01ca4eae2c6b7a226b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afd7d0e47d1ee723820c01ca4eae2c6b7a226b27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5eafdd32daa76b989be4386ab641ac6be6034ee0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eafdd32daa76b989be4386ab641ac6be6034ee0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eafdd32daa76b989be4386ab641ac6be6034ee0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eafdd32daa76b989be4386ab641ac6be6034ee0/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c96f00012ba9b81dba57042a29361ecd0a99e284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c96f00012ba9b81dba57042a29361ecd0a99e284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c96f00012ba9b81dba57042a29361ecd0a99e284"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "5ac574e7aa27e915ac552d4b794917a12cd0879b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eafdd32daa76b989be4386ab641ac6be6034ee0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eafdd32daa76b989be4386ab641ac6be6034ee0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5eafdd32daa76b989be4386ab641ac6be6034ee0", "patch": "@@ -1,3 +1,8 @@\n+2007-06-14  Eric Christopher  <echristo@apple.com>\n+\n+\t* config/i386/sse.md (movdi_to_sse): Rewrite body.\n+\t(movv4sf): Use gcc_unreachable instead of abort.\n+\n 2007-06-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/32268"}, {"sha": "c74c0f7fe699046c3bf754fe7be36d4cb1095883", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eafdd32daa76b989be4386ab641ac6be6034ee0/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eafdd32daa76b989be4386ab641ac6be6034ee0/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=5eafdd32daa76b989be4386ab641ac6be6034ee0", "patch": "@@ -108,26 +108,20 @@\n   \"&& reload_completed\"\n   [(const_int 0)]\n {\n-  switch (which_alternative)\n-    {\n-    case 0:\n+ if (register_operand (operands[1], DImode))\n+   {\n       /* The DImode arrived in a pair of integral registers (e.g. %edx:%eax).\n \t Assemble the 64-bit DImode value in an xmm register.  */\n       emit_insn (gen_sse2_loadld (operands[0], CONST0_RTX (V4SImode),\n       \t\t\t\t  gen_rtx_SUBREG (SImode, operands[1], 0)));\n       emit_insn (gen_sse2_loadld (operands[2], CONST0_RTX (V4SImode),\n \t\t\t\t  gen_rtx_SUBREG (SImode, operands[1], 4)));\n       emit_insn (gen_sse2_punpckldq (operands[0], operands[0], operands[2]));\n-      break;\n-\n-    case 1:\n-      emit_insn (gen_vec_concatv2di (operands[0], operands[1], const0_rtx));\n-      break;\n-\n-    default:\n-      gcc_unreachable ();\n     }\n-  DONE;\n+ else if (memory_operand (operands[1], DImode))\n+      emit_insn (gen_vec_concatv2di (gen_lowpart (V2DImode, operands[0]), operands[1], const0_rtx));\n+ else\n+      gcc_unreachable ();\n })\n \n (define_expand \"movv4sf\"\n@@ -154,7 +148,7 @@\n     case 2:\n       return \"movaps\\t{%1, %0|%0, %1}\";\n     default:\n-      abort();\n+      gcc_unreachable ();\n     }\n }\n   [(set_attr \"type\" \"sselog1,ssemov,ssemov\")"}]}