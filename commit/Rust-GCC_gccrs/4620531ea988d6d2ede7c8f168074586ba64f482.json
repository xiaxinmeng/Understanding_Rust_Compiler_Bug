{"sha": "4620531ea988d6d2ede7c8f168074586ba64f482", "node_id": "C_kwDOANBUbNoAKDQ2MjA1MzFlYTk4OGQ2ZDJlZGU3YzhmMTY4MDc0NTg2YmE2NGY0ODI", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2022-01-02T17:12:45Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2022-01-02T17:12:45Z"}, "message": "Generate illegal instruction fault if LWS syscall returns -EFAULT.\n\n2022-01-02  John David Anglin  <danglin@gcc.gnu.org>\n\nlibgcc/ChangeLog:\n\n\t* config/pa/linux-atomic.c (_ASM_EFAULT): Define.\n\t(__kernel_cmpxchg): Nullify illegal iitlbp instruction if error\n\treturn is not equal _ASM_EFAULT.\n\t(__kernel_cmpxchg2): Likewise.", "tree": {"sha": "5761f90e1956bf14948c46c97acbb91f78c50aa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5761f90e1956bf14948c46c97acbb91f78c50aa1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4620531ea988d6d2ede7c8f168074586ba64f482", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4620531ea988d6d2ede7c8f168074586ba64f482", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4620531ea988d6d2ede7c8f168074586ba64f482", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4620531ea988d6d2ede7c8f168074586ba64f482/comments", "author": null, "committer": null, "parents": [{"sha": "4759c16beec2a7a4ed56608adcf932f9a6acbdc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4759c16beec2a7a4ed56608adcf932f9a6acbdc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4759c16beec2a7a4ed56608adcf932f9a6acbdc7"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "e4d74b2d5983c5221a4ffbe267b5f3e75674823c", "filename": "libgcc/config/pa/linux-atomic.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4620531ea988d6d2ede7c8f168074586ba64f482/libgcc%2Fconfig%2Fpa%2Flinux-atomic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4620531ea988d6d2ede7c8f168074586ba64f482/libgcc%2Fconfig%2Fpa%2Flinux-atomic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Flinux-atomic.c?ref=4620531ea988d6d2ede7c8f168074586ba64f482", "patch": "@@ -28,6 +28,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define EBUSY   16\n #define ENOSYS 251 \n \n+#define _ASM_EFAULT \"-14\"\n+\n typedef unsigned char u8;\n typedef short unsigned int u16;\n #ifdef __LP64__\n@@ -58,6 +60,8 @@ __kernel_cmpxchg (volatile void *mem, int oldval, int newval)\n   register long lws_errno asm(\"r21\");\n   asm volatile (\t\"ble\t0xb0(%%sr2, %%r0)\t\\n\\t\"\n \t\t\t\"ldi\t%2, %%r20\t\t\\n\\t\"\n+\t\t\t\"cmpiclr,<> \" _ASM_EFAULT \", %%r21, %%r0\\n\\t\"\n+\t\t\t\"iitlbp %%r0,(%%sr0, %%r0)\t\\n\\t\"\n \t: \"=r\" (lws_ret), \"=r\" (lws_errno)\n \t: \"i\" (LWS_CAS), \"r\" (lws_mem), \"r\" (lws_old), \"r\" (lws_new)\n \t: \"r1\", \"r20\", \"r22\", \"r23\", \"r29\", \"r31\", \"memory\"\n@@ -84,6 +88,8 @@ __kernel_cmpxchg2 (volatile void *mem, const void *oldval, const void *newval,\n   register long lws_errno asm(\"r21\");\n   asm volatile (\t\"ble\t0xb0(%%sr2, %%r0)\t\\n\\t\"\n \t\t\t\"ldi\t%6, %%r20\t\t\\n\\t\"\n+\t\t\t\"cmpiclr,<> \" _ASM_EFAULT \", %%r21, %%r0\\n\\t\"\n+\t\t\t\"iitlbp %%r0,(%%sr0, %%r0)\t\\n\\t\"\n \t: \"=r\" (lws_ret), \"=r\" (lws_errno), \"+r\" (lws_mem),\n \t  \"+r\" (lws_old), \"+r\" (lws_new), \"+r\" (lws_size)\n \t: \"i\" (2)"}]}