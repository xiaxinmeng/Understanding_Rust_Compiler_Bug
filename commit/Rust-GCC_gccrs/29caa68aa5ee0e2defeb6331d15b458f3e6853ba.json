{"sha": "29caa68aa5ee0e2defeb6331d15b458f3e6853ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjljYWE2OGFhNWVlMGUyZGVmZWI2MzMxZDE1YjQ1OGYzZTY4NTNiYQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-06-25T18:38:14Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-06-25T18:38:14Z"}, "message": "Use reset_bb_predicate whenever the predicate of a BB should be reset to true.\n\n2010-06-25  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* tree-if-conv.c (init_bb_predicate): Initialize the predicate\n\tto boolean_true_node.\n\t(reset_bb_predicate): New.\n\t(predicate_bbs): Call reset_bb_predicate.\n\nFrom-SVN: r161397", "tree": {"sha": "7397dfd8fdb71bbd08d9b75bbb20ea4f22b9fef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7397dfd8fdb71bbd08d9b75bbb20ea4f22b9fef1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29caa68aa5ee0e2defeb6331d15b458f3e6853ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29caa68aa5ee0e2defeb6331d15b458f3e6853ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29caa68aa5ee0e2defeb6331d15b458f3e6853ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29caa68aa5ee0e2defeb6331d15b458f3e6853ba/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f741287d6f41e37052c58fdb2bb3eee9ab3cd79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f741287d6f41e37052c58fdb2bb3eee9ab3cd79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f741287d6f41e37052c58fdb2bb3eee9ab3cd79"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "0e9bd8320bd7660a67f16c960992f3102079d6bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29caa68aa5ee0e2defeb6331d15b458f3e6853ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29caa68aa5ee0e2defeb6331d15b458f3e6853ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29caa68aa5ee0e2defeb6331d15b458f3e6853ba", "patch": "@@ -1,3 +1,10 @@\n+2010-06-25  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* tree-if-conv.c (init_bb_predicate): Initialize the predicate\n+\tto boolean_true_node.\n+\t(reset_bb_predicate): New.\n+\t(predicate_bbs): Call reset_bb_predicate.\n+\n 2010-06-25  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-if-conv.c (combine_blocks): Remove FIXME comment."}, {"sha": "80a53a807bbfd457ad6e61287dec037d49f9c130", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29caa68aa5ee0e2defeb6331d15b458f3e6853ba/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29caa68aa5ee0e2defeb6331d15b458f3e6853ba/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=29caa68aa5ee0e2defeb6331d15b458f3e6853ba", "patch": "@@ -175,7 +175,7 @@ init_bb_predicate (basic_block bb)\n {\n   bb->aux = XNEW (struct bb_predicate_s);\n   set_bb_predicate_gimplified_stmts (bb, NULL);\n-  set_bb_predicate (bb, NULL_TREE);\n+  set_bb_predicate (bb, boolean_true_node);\n }\n \n /* Free the predicate of basic block BB.  */\n@@ -203,6 +203,16 @@ free_bb_predicate (basic_block bb)\n   bb->aux = NULL;\n }\n \n+/* Free the predicate of BB and reinitialize it with the true\n+   predicate.  */\n+\n+static inline void\n+reset_bb_predicate (basic_block bb)\n+{\n+  free_bb_predicate (bb);\n+  init_bb_predicate (bb);\n+}\n+\n /* Create a new temp variable of type TYPE.  Add GIMPLE_ASSIGN to assign EXP\n    to the new variable.  */\n \n@@ -605,8 +615,7 @@ predicate_bbs (loop_p loop)\n \t to be processed: skip it.  */\n       if (bb == loop->latch)\n \t{\n-\t  set_bb_predicate (loop->latch, boolean_true_node);\n-\t  set_bb_predicate_gimplified_stmts (loop->latch, NULL);\n+\t  reset_bb_predicate (loop->latch);\n \t  continue;\n \t}\n \n@@ -680,7 +689,7 @@ predicate_bbs (loop_p loop)\n     }\n \n   /* The loop header is always executed.  */\n-  set_bb_predicate (loop->header, boolean_true_node);\n+  reset_bb_predicate (loop->header);\n   gcc_assert (bb_predicate_gimplified_stmts (loop->header) == NULL\n \t      && bb_predicate_gimplified_stmts (loop->latch) == NULL);\n "}]}