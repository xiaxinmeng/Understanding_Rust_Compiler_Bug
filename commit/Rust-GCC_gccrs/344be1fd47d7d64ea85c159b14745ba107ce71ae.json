{"sha": "344be1fd47d7d64ea85c159b14745ba107ce71ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ0YmUxZmQ0N2Q3ZDY0ZWE4NWMxNTliMTQ3NDViYTEwN2NlNzFhZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-08-17T07:16:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-08-17T07:16:30Z"}, "message": "tree-vrp.c (vrp_int_const_binop): Do not set *overflow_p to true when overflow is undefined and we saturated the...\n\n2017-08-17  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vrp.c (vrp_int_const_binop): Do not set *overflow_p\n\tto true when overflow is undefined and we saturated the\n\tresult.\n\n\t* gcc.dg/tree-ssa/vrp117.c: New testcase.\n\nFrom-SVN: r251141", "tree": {"sha": "b1f4f85d29d08f6dacb0ffd21c27e044bec07848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1f4f85d29d08f6dacb0ffd21c27e044bec07848"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/344be1fd47d7d64ea85c159b14745ba107ce71ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/344be1fd47d7d64ea85c159b14745ba107ce71ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/344be1fd47d7d64ea85c159b14745ba107ce71ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/344be1fd47d7d64ea85c159b14745ba107ce71ae/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b263d657e1c4bc182f0f72f62402010f8a8ad3fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b263d657e1c4bc182f0f72f62402010f8a8ad3fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b263d657e1c4bc182f0f72f62402010f8a8ad3fe"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "bed451652a7c9c7f937a6833d32c295857dbeff9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344be1fd47d7d64ea85c159b14745ba107ce71ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344be1fd47d7d64ea85c159b14745ba107ce71ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=344be1fd47d7d64ea85c159b14745ba107ce71ae", "patch": "@@ -1,3 +1,9 @@\n+2017-08-17  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vrp.c (vrp_int_const_binop): Do not set *overflow_p\n+\tto true when overflow is undefined and we saturated the\n+\tresult.\n+\n 2017-08-17  Alan Modra  <amodra@gmail.com>\n \n \tPR target/80938"}, {"sha": "2b2183fa576e66d49d1e89d5a0866b137864465c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344be1fd47d7d64ea85c159b14745ba107ce71ae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344be1fd47d7d64ea85c159b14745ba107ce71ae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=344be1fd47d7d64ea85c159b14745ba107ce71ae", "patch": "@@ -1,3 +1,7 @@\n+2017-08-17  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/vrp117.c: New testcase.\n+\n 2017-08-16  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* c-c++-common/patchable_function_entry-decl.c (dg-final): Adapt"}, {"sha": "d07a6722cd7ab346c9a2e2cb5d1ff1b6e23505da", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp117.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344be1fd47d7d64ea85c159b14745ba107ce71ae/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp117.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344be1fd47d7d64ea85c159b14745ba107ce71ae/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp117.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp117.c?ref=344be1fd47d7d64ea85c159b14745ba107ce71ae", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-evrp\" } */\n+\n+void link_error (void);\n+\n+void foo (int i)\n+{\n+  if (i > __INT_MAX__ - 10)\n+    {\n+      int j = i * 10;\n+      if (j < i)\n+\tlink_error ();\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"link_error\" \"evrp\" } } */"}, {"sha": "e3735ff4023a0bed6e193a3af47442dffe274eb3", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344be1fd47d7d64ea85c159b14745ba107ce71ae/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344be1fd47d7d64ea85c159b14745ba107ce71ae/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=344be1fd47d7d64ea85c159b14745ba107ce71ae", "patch": "@@ -1614,6 +1614,8 @@ vrp_int_const_binop (enum tree_code code, tree val1, tree val2,\n   signop sign = TYPE_SIGN (TREE_TYPE (val1));\n   wide_int res;\n \n+  *overflow_p = false;\n+\n   switch (code)\n     {\n     case RSHIFT_EXPR:\n@@ -1685,8 +1687,6 @@ vrp_int_const_binop (enum tree_code code, tree val1, tree val2,\n       gcc_unreachable ();\n     }\n \n-  *overflow_p = overflow;\n-\n   if (overflow\n       && TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (val1)))\n     {\n@@ -1730,6 +1730,8 @@ vrp_int_const_binop (enum tree_code code, tree val1, tree val2,\n \t\t\t      TYPE_SIGN (TREE_TYPE (val1)));\n     }\n \n+  *overflow_p = overflow;\n+\n   return res;\n }\n "}]}