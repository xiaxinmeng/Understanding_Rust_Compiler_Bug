{"sha": "18a3415e239132c0273e306421147d79a7d3ae28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThhMzQxNWUyMzkxMzJjMDI3M2UzMDY0MjExNDdkNzlhN2QzYWUyOA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2014-10-22T10:40:30Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2014-10-22T10:40:30Z"}, "message": "lib1funcs.S (__do_global_dtors): Fix wrong code introduced with 2014-10-21 trunk r216525.\n\n\t* config/avr/lib1funcs.S (__do_global_dtors): Fix wrong code\n\tintroduced with 2014-10-21 trunk r216525.\n\nFrom-SVN: r216550", "tree": {"sha": "837d2c93cac1bcce0f8f79f2912cf4abf40baadd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/837d2c93cac1bcce0f8f79f2912cf4abf40baadd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18a3415e239132c0273e306421147d79a7d3ae28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a3415e239132c0273e306421147d79a7d3ae28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18a3415e239132c0273e306421147d79a7d3ae28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a3415e239132c0273e306421147d79a7d3ae28/comments", "author": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8584f1c4910165d1ba7d5d3aa37af2834041e03e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8584f1c4910165d1ba7d5d3aa37af2834041e03e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8584f1c4910165d1ba7d5d3aa37af2834041e03e"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "b5ddae631af18b78af95c0617dde2433213d98dd", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a3415e239132c0273e306421147d79a7d3ae28/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a3415e239132c0273e306421147d79a7d3ae28/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=18a3415e239132c0273e306421147d79a7d3ae28", "patch": "@@ -1,3 +1,8 @@\n+2014-10-22  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/lib1funcs.S (__do_global_dtors): Fix wrong code\n+\tintroduced with 2014-10-21 trunk r216525.\n+\n 2014-10-21  Joern Rennecke  <joern.rennecke@embecosm.com>\n \t    Vidya Praveen <vidya.praveen@atmel.com>\n \t    Praveen Kumar Kaushik <Praveen_Kumar.Kaushik@atmel.com>\n@@ -18,7 +23,7 @@\n \t(__mulpsi3): Likewise.\n \t(__muldi3, __udivmodsi4, __divmodsi4, __negsi2, __umoddi3, __udivmod64,\n \t__moddi3, __adddi3, __adddi3_s8, __subdi3, __cmpdi2, __cmpdi2_s8,\n-\t__negdi2, __prologue_saves__, __epilogue_restores__): Excluded for \n+\t__negdi2, __prologue_saves__, __epilogue_restores__): Excluded for\n \tAVRTINY.\n \t(__tablejump2__): Added lpm equivalent instructions for AVRTINY.\n \t(__do_copy_data): Added new definition for AVRTINY.\n@@ -28,10 +33,10 @@\n \t* config/avr/lib1funcs-fixed.S: Replaced occurrences of r0/r1 with\n \ttmp/zero reg macros. Replaced occurrences of sbiw/adiw with wsubi/wadi\n \tmacors.\n-\t   * config/avr/t-avr (LIB1ASMFUNCS): Remove unsupported functions for\n+\t* config/avr/t-avr (LIB1ASMFUNCS): Remove unsupported functions for\n \tAVRTINY.\n \n-\tFix broken long multiplication on tiny arch.         \n+\tFix broken long multiplication on tiny arch.\n \n 2014-10-09  Joseph Myers  <joseph@codesourcery.com>\n "}, {"sha": "51cdbf188687d2c7f9d8cf52666ed23f23546f2d", "filename": "libgcc/config/avr/lib1funcs.S", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a3415e239132c0273e306421147d79a7d3ae28/libgcc%2Fconfig%2Favr%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a3415e239132c0273e306421147d79a7d3ae28/libgcc%2Fconfig%2Favr%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Favr%2Flib1funcs.S?ref=18a3415e239132c0273e306421147d79a7d3ae28", "patch": "@@ -2502,14 +2502,16 @@ DEFUN __do_global_dtors\n #endif /* HAVE_EIJMP */\n     rjmp    .L__do_global_dtors_start\n .L__do_global_dtors_loop:\n-    waddi   28, 1\n #ifdef __AVR_HAVE_EIJMP_EICALL__\n-    adc     r16, __zero_reg__\n     mov     r24, r16\n #endif /* HAVE_EIJMP */\n     mov_h   r31, r29\n     mov_l   r30, r28\n     XCALL   __tablejump2__\n+    waddi   28, 1\n+#ifdef __AVR_HAVE_EIJMP_EICALL__\n+    adc     r16, __zero_reg__\n+#endif /* HAVE_EIJMP */\n .L__do_global_dtors_start:\n     cpi     r28, pm_lo8(__dtors_end)\n     cpc     r29, cdtors_tst_reg\n@@ -2521,6 +2523,8 @@ DEFUN __do_global_dtors\n ENDF __do_global_dtors\n #endif /* L_dtors */\n \n+#undef cdtors_tst_reg\n+\n .section .text.libgcc, \"ax\", @progbits\n \n #if !defined (__AVR_TINY__)"}]}