{"sha": "40746dccd1050a3f97adf682472338043cb1b3bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA3NDZkY2NkMTA1MGEzZjk3YWRmNjgyNDcyMzM4MDQzY2IxYjNiZA==", "commit": {"author": {"name": "Brooks Moses", "email": "brooks.moses@codesourcery.com", "date": "2007-01-04T00:19:36Z"}, "committer": {"name": "Brooks Moses", "email": "brooks@gcc.gnu.org", "date": "2007-01-04T00:19:36Z"}, "message": "invoke.texi: Change @code-type macros to appropriate variants (@command, @option, etc.)\n\n* invoke.texi: Change @code-type macros to appropriate\nvariants (@command, @option, etc.)\n* gfortran.texi: Same.\n\nFrom-SVN: r120420", "tree": {"sha": "ce55994153d1a1952174a796fd41830a5e8882f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce55994153d1a1952174a796fd41830a5e8882f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40746dccd1050a3f97adf682472338043cb1b3bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40746dccd1050a3f97adf682472338043cb1b3bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40746dccd1050a3f97adf682472338043cb1b3bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40746dccd1050a3f97adf682472338043cb1b3bd/comments", "author": null, "committer": null, "parents": [{"sha": "ad89ea97c79100d9d2682a17f4f098635e913eb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad89ea97c79100d9d2682a17f4f098635e913eb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad89ea97c79100d9d2682a17f4f098635e913eb3"}], "stats": {"total": 79, "additions": 41, "deletions": 38}, "files": [{"sha": "85fa9fc5abd3c46487fa4425abf2d8ba9a034236", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40746dccd1050a3f97adf682472338043cb1b3bd/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40746dccd1050a3f97adf682472338043cb1b3bd/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=40746dccd1050a3f97adf682472338043cb1b3bd", "patch": "@@ -1,3 +1,9 @@\n+2007-01-03  Brooks Moses  <brooks.moses@codesourcery.com>\n+\n+\t* invoke.texi: Change @code-type macros to appropriate\n+\tvariants (@command, @option, etc.)\n+\t* gfortran.texi: Same.\n+\n 2007-01-03  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \t* intrinsic.texi: Various minor cleanups."}, {"sha": "9ed30f75a9b3eb18cda83b8aa5f982368268a45c", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40746dccd1050a3f97adf682472338043cb1b3bd/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40746dccd1050a3f97adf682472338043cb1b3bd/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=40746dccd1050a3f97adf682472338043cb1b3bd", "patch": "@@ -618,7 +618,7 @@ be sure to quote spaces, as in\n @smallexample\n $ GFORTRAN_LIST_SEPARATOR='  ,  ' ./a.out\n @end smallexample\n-when @code{a.out} is the compiled Fortran program that you want to run.\n+when @command{a.out} is the compiled Fortran program that you want to run.\n Default is a single space.\n \n @node GFORTRAN_CONVERT_UNIT\n@@ -648,7 +648,7 @@ the modes are the same as for the @code{CONVERT} specifier:\n @item @code{BIG_ENDIAN} Use the big-endian format for unformatted files.\n @end itemize\n A missing mode for an exception is taken to mean @code{BIG_ENDIAN}.\n-Examples of values for @code{GFORTRAN_CONVERT_UNIT} are:\n+Examples of values for @env{GFORTRAN_CONVERT_UNIT} are:\n @itemize @w{}\n @item @code{'big_endian'}  Do all unformatted I/O in big_endian mode.\n @item @code{'little_endian;native:10-20,25'}  Do all unformatted I/O \n@@ -658,17 +658,17 @@ native format.\n @end itemize\n \n Setting the environment variables should be done on the command\n-line or via the @code{export}\n-command for @code{sh}-compatible shells and via @code{setenv}\n-for @code{csh}-compatible shells.\n+line or via the @command{export}\n+command for @command{sh}-compatible shells and via @command{setenv}\n+for @command{csh}-compatible shells.\n \n-Example for @code{sh}:\n+Example for @command{sh}:\n @smallexample\n $ gfortran foo.f90\n $ GFORTRAN_CONVERT_UNIT='big_endian;native:10-20' ./a.out\n @end smallexample\n \n-Example code for @code{csh}:\n+Example code for @command{csh}:\n @smallexample\n % gfortran foo.f90\n % setenv GFORTRAN_CONVERT_UNIT 'big_endian;native:10-20'\n@@ -683,7 +683,7 @@ portable.\n @xref{CONVERT specifier}, for an alternative way to specify the\n data representation for unformatted files.  @xref{Runtime Options}, for\n setting a default data representation for the whole program.  The\n-@code{CONVERT} specifier overrides the @code{-fconvert} compile options.\n+@code{CONVERT} specifier overrides the @option{-fconvert} compile options.\n \n \n @c =====================================================================\n@@ -1261,12 +1261,12 @@ portable.\n @cindex OpenMP\n \n GNU Fortran attempts to be OpenMP Application Program Interface v2.5\n-compatible when invoked with the @code{-fopenmp} option.  GNU Fortran\n+compatible when invoked with the @option{-fopenmp} option.  GNU Fortran\n then generates parallelized code according to the OpenMP directives\n used in the source.  The OpenMP Fortran runtime library\n-routines are provided both in a form of Fortran 90 module named\n+routines are provided both in a form of a Fortran 90 module named\n @code{omp_lib} and in a form of a Fortran @code{include} file named\n-@code{omp_lib.h}.\n+@file{omp_lib.h}.\n \n For details refer to the actual\n @uref{http://www.openmp.org/drupal/mp-documents/spec25.pdf,"}, {"sha": "6fbbc7b13bbeb871d09518d6601b84a87cd35179", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 24, "deletions": 27, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40746dccd1050a3f97adf682472338043cb1b3bd/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40746dccd1050a3f97adf682472338043cb1b3bd/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=40746dccd1050a3f97adf682472338043cb1b3bd", "patch": "@@ -289,8 +289,8 @@ Specify the maximum allowed identifier length. Typical values are\n @cindex options, -fimplicit-none\n @item -fimplicit-none\n Specify that no implicit typing is allowed, unless overridden by explicit\n-@samp{IMPLICIT} statements.  This is the equivalent of adding\n-@samp{implicit none} to the start of every procedure.\n+@code{IMPLICIT} statements.  This is the equivalent of adding\n+@code{implicit none} to the start of every procedure.\n \n @cindex -fcray-pointer option\n @cindex options, -fcray-pointer\n@@ -312,14 +312,14 @@ in.\n @cindex -frange-check\n @cindex options, -frange-check\n @item -frange-check\n-Enable range checking on results of simplification of constant expressions\n-during compilation.  For example, by default, GNU Fortran will give\n-an overflow error at compile time when simplifying @code{a = EXP(1000)}.\n-With @samp{-fno-range-check}, no error will be given and the variable @code{a}\n-will be assigned the value @code{+Infinity}.  Similarly,\n-@code{DATA i/Z'FFFFFFFF'/} will result in an integer overflow on most systems,\n-but with @samp{-fno-range-check} the value will ``wrap around'' and @code{i}\n-will be initialized to @math{-1} instead.\n+Enable range checking on results of simplification of constant\n+expressions during compilation.  For example, by default, GNU Fortran\n+will give an overflow error at compile time when simplifying @code{a =\n+EXP(1000)}. With @option{-fno-range-check}, no error will be given and\n+the variable @code{a} will be assigned the value @code{+Infinity}.\n+Similarly, @code{DATA i/Z'FFFFFFFF'/} will result in an integer overflow\n+on most systems, but with @option{-fno-range-check} the value will\n+``wrap around'' and @code{i} will be initialized to @math{-1} instead.\n \n @cindex -std=@var{std} option\n @cindex option, -std=@var{std}\n@@ -384,7 +384,7 @@ Check the code for syntax errors, but don't do anything beyond that.\n Issue warnings for uses of extensions to Fortran 95.\n @option{-pedantic} also applies to C-language constructs where they\n occur in GNU Fortran source files, such as use of @samp{\\e} in a\n-character constant within a directive like @samp{#include}.\n+character constant within a directive like @code{#include}.\n \n Valid Fortran 95 programs should compile properly with or without\n this option.\n@@ -429,7 +429,7 @@ This currently includes @option{-Waliasing},\n @cindex aliasing\n Warn about possible aliasing of dummy arguments. Specifically, it warns\n if the same actual argument is associated with a dummy argument with\n-@code{intent(in)} and a dummy argument with @code{intent(out)} in a call\n+@code{INTENT(IN)} and a dummy argument with @code{INTENT(OUT)} in a call\n with an explicit interface.\n \n The following example will trigger the warning.\n@@ -564,7 +564,7 @@ Specify a list of IEEE exceptions when a Floating Point Exception\n signal being sent and the program being interrupted, producing a core\n file useful for debugging.  @var{list} is a (possibly empty) comma-separated\n list of the following IEEE exceptions: @samp{invalid} (invalid floating\n-point operation, such as @code{sqrt(-1.0)}), @samp{zero} (division by\n+point operation, such as @code{SQRT(-1.0)}), @samp{zero} (division by\n zero), @samp{overflow} (overflow in a floating point operation),\n @samp{underflow} (underflow in a floating point operation),\n @samp{precision} (loss of precision during operation) and @samp{denormal}\n@@ -608,7 +608,7 @@ Also note that the general behavior of @option{-I} and\n @code{#include} in the @command{cpp} preprocessor, with regard to\n looking for @file{header.gcc} files and other such things.\n \n-This path is also used to search for @samp{.mod} files when previously\n+This path is also used to search for @file{.mod} files when previously\n compiled modules are required by a @code{USE} statement.\n \n @xref{Directory Options,,Options for Directory Search,\n@@ -619,7 +619,7 @@ gcc,Using the GNU Compiler Collection (GCC)}, for information on the\n @cindex option, -Mdir\n @item -M@var{dir}\n @item -J@var{dir}\n-This option specifies where to put @samp{.mod} files for compiled modules.\n+This option specifies where to put @file{.mod} files for compiled modules.\n It is also added to the list of directories to searched by an @code{USE}\n statement.\n \n@@ -645,7 +645,7 @@ representation for unformatted files.\n \n @emph{This option has an effect only when used in the main program.\n The @code{CONVERT} specifier and the GFORTRAN_CONVERT_UNIT environment\n-variable override the default specified by -fconvert.}\n+variable override the default specified by @option{-fconvert}.}\n \n @cindex -frecord-marker=@var{length}\n @item -frecord-marker=@var{length}\n@@ -654,7 +654,7 @@ Valid values for @var{length} are 4 and 8.  Default is 4.\n @emph{This is different from previous versions of gfortran},\n which specified a default record marker length of 8 on most\n systems.  If you want to read or write files compatible\n-with earlier versions of gfortran, use @samp{-frecord-marker=8}.\n+with earlier versions of gfortran, use @option{-frecord-marker=8}.\n \n @cindex -fmax-subrecord-length=@var{length}\n @item -fmax-subrecord-length=@var{length}\n@@ -714,15 +714,15 @@ option, unless @option{-fno-second-underscore} is explicitly requested.\n This does not affect the generation of code that interfaces with\n the @command{libgfortran} library.\n \n-@emph{Caution:} It is not a good idea to mix Fortran code compiled\n-with @code{-ff2c} with code compiled with the default @code{-fno-f2c}\n+@emph{Caution:} It is not a good idea to mix Fortran code compiled with\n+@option{-ff2c} with code compiled with the default @option{-fno-f2c}\n calling conventions as, calling @code{COMPLEX} or default @code{REAL}\n functions between program parts which were compiled with different\n calling conventions will break at execution time.\n \n @emph{Caution:} This will break code which passes intrinsic functions\n of type default @code{REAL} or @code{COMPLEX} as actual arguments, as\n-the library implementations use the @command{-fno-f2c} calling conventions.\n+the library implementations use the @option{-fno-f2c} calling conventions.\n \n @cindex @option{-fno-underscoring option}\n @cindex options, @option{-fno-underscoring}\n@@ -750,17 +750,14 @@ existing system environments (vis-a-vis existing libraries, tools, and\n so on).\n \n For example, with @option{-funderscoring}, and assuming other defaults like\n-@option{-fcase-lower} and that @samp{j()} and @samp{max_count()} are\n-external functions while @samp{my_var} and @samp{lvar} are local variables,\n+@option{-fcase-lower} and that @code{j()} and @code{max_count()} are\n+external functions while @code{my_var} and @code{lvar} are local variables,\n a statement like\n-\n @smallexample\n I = J() + MAX_COUNT (MY_VAR, LVAR)\n @end smallexample\n-\n @noindent\n is implemented as something akin to:\n-\n @smallexample\n i = j_() + max_count__(&my_var__, &lvar);\n @end smallexample\n@@ -818,9 +815,9 @@ names.\n This option has no effect if @option{-fno-underscoring} is\n in effect.  It is implied by the @option{-ff2c} option.\n \n-Otherwise, with this option, an external name such as @samp{MAX_COUNT}\n+Otherwise, with this option, an external name such as @code{MAX_COUNT}\n is implemented as a reference to the link-time external symbol\n-@samp{max_count__}, instead of @samp{max_count_}.  This is required\n+@code{max_count__}, instead of @code{max_count_}.  This is required\n for compatibility with @command{g77} and @command{f2c}, and is implied\n by use of the @option{-ff2c} option.\n "}]}