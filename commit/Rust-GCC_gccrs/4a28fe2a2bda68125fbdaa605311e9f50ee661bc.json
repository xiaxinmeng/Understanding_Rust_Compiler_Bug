{"sha": "4a28fe2a2bda68125fbdaa605311e9f50ee661bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEyOGZlMmEyYmRhNjgxMjVmYmRhYTYwNTMxMWU5ZjUwZWU2NjFiYw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-19T04:01:32Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-19T04:01:32Z"}, "message": "Avoid infinite loop inheriting interface methods.\n\nFrom-SVN: r170303", "tree": {"sha": "07e4c8519c9a1f8432f88a966cc0e18b7e7dc08c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07e4c8519c9a1f8432f88a966cc0e18b7e7dc08c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a28fe2a2bda68125fbdaa605311e9f50ee661bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a28fe2a2bda68125fbdaa605311e9f50ee661bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a28fe2a2bda68125fbdaa605311e9f50ee661bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a28fe2a2bda68125fbdaa605311e9f50ee661bc/comments", "author": null, "committer": null, "parents": [{"sha": "196bc4071beb8caa9897f3ffaabb7ebb472e9b3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196bc4071beb8caa9897f3ffaabb7ebb472e9b3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/196bc4071beb8caa9897f3ffaabb7ebb472e9b3c"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "90bc4e1d4a9d0a83ced2daf3bbf94c854000808f", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a28fe2a2bda68125fbdaa605311e9f50ee661bc/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a28fe2a2bda68125fbdaa605311e9f50ee661bc/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=4a28fe2a2bda68125fbdaa605311e9f50ee661bc", "patch": "@@ -5605,6 +5605,7 @@ Interface_type::finalize_methods()\n {\n   if (this->methods_ == NULL)\n     return;\n+  std::vector<Named_type*> seen;\n   bool is_recursive = false;\n   size_t from = 0;\n   size_t to = 0;\n@@ -5632,6 +5633,7 @@ Interface_type::finalize_methods()\n \t  ++from;\n \t  continue;\n \t}\n+\n       Interface_type* it = p->type()->interface_type();\n       if (it == NULL)\n \t{\n@@ -5649,6 +5651,27 @@ Interface_type::finalize_methods()\n \t  ++from;\n \t  continue;\n \t}\n+\n+      Named_type* nt = p->type()->named_type();\n+      if (nt != NULL)\n+\t{\n+\t  std::vector<Named_type*>::const_iterator q;\n+\t  for (q = seen.begin(); q != seen.end(); ++q)\n+\t    {\n+\t      if (*q == nt)\n+\t\t{\n+\t\t  error_at(p->location(), \"inherited interface loop\");\n+\t\t  break;\n+\t\t}\n+\t    }\n+\t  if (q != seen.end())\n+\t    {\n+\t      ++from;\n+\t      continue;\n+\t    }\n+\t  seen.push_back(nt);\n+\t}\n+\n       const Typed_identifier_list* methods = it->methods();\n       if (methods == NULL)\n \t{"}]}