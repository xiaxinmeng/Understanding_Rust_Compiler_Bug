{"sha": "6dd05d08c4940ed65cc4c98d7fbeef100a7ce515", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRkMDVkMDhjNDk0MGVkNjVjYzRjOThkN2ZiZWVmMTAwYTdjZTUxNQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-01-10T22:13:05Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-01-10T22:13:05Z"}, "message": "Makefile.in (RANLIB_FOR_TARGET): Use RANLIB when native.\n\n\t* Makefile.in (RANLIB_FOR_TARGET): Use RANLIB when native.\n\t(RANLIB_TEST_FOR_TARGET): Delete.  Don't pass down to sub-makes.\n\tRemove calls.\n\t* mklibgcc.in: Remove uses of RANLIB_TEST_FOR_TARGET.\n\nFrom-SVN: r61171", "tree": {"sha": "ea1a5cdcb45309f0c4ace592a7d4beabb7602139", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea1a5cdcb45309f0c4ace592a7d4beabb7602139"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dd05d08c4940ed65cc4c98d7fbeef100a7ce515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd05d08c4940ed65cc4c98d7fbeef100a7ce515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dd05d08c4940ed65cc4c98d7fbeef100a7ce515", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd05d08c4940ed65cc4c98d7fbeef100a7ce515/comments", "author": null, "committer": null, "parents": [{"sha": "3466b2921e8c718007b5423f15d37183e32b01bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3466b2921e8c718007b5423f15d37183e32b01bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3466b2921e8c718007b5423f15d37183e32b01bd"}], "stats": {"total": 86, "additions": 29, "deletions": 57}, "files": [{"sha": "29a0278666b7b4ad1300ed427b08106b32741714", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd05d08c4940ed65cc4c98d7fbeef100a7ce515/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd05d08c4940ed65cc4c98d7fbeef100a7ce515/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6dd05d08c4940ed65cc4c98d7fbeef100a7ce515", "patch": "@@ -1,17 +1,24 @@\n+2003-01-10  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* Makefile.in (RANLIB_FOR_TARGET): Use RANLIB when native.\n+\t(RANLIB_TEST_FOR_TARGET): Delete.  Don't pass down to sub-makes.\n+\tRemove calls.\n+\t* mklibgcc.in: Remove uses of RANLIB_TEST_FOR_TARGET.\n+\n Fri Jan 10 22:05:35 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* ifcvt.c (noce_try_addcc): Do not call emit_conditional_add\n \twith weird operands.\n \n 2003-01-10  Dale Johannesen <dalej@apple.com>\n- \n-        * calls.c (load_register_parameters):  Add is_sibcall, sibcall_failure\n-        parameters.  Call check_sibcall_argument_overlap if indicated.\n-        (check_sibcall_argument_overlap):  Add mark_stored_args_map\n-        parameter.  Don't mark parameter area as clobbered if not set.\n-        (expand_call):  Adjust calls to above.\n- \n- 2003-01-10 Kelley Cook <kelleycook@comcast.net>\n+\n+\t* calls.c (load_register_parameters):  Add is_sibcall, sibcall_failure\n+\tparameters.  Call check_sibcall_argument_overlap if indicated.\n+\t(check_sibcall_argument_overlap):  Add mark_stored_args_map\n+\tparameter.  Don't mark parameter area as clobbered if not set.\n+\t(expand_call):\tAdjust calls to above.\n+\n+2003-01-10 Kelley Cook <kelleycook@comcast.net>\n \n \t* configure.in (linker read-only and read-write section mixing):\n \tSquelch some assembler warnings."}, {"sha": "c9a5d19ea66c3c730b76c1c55c83610e748373d1", "filename": "gcc/Makefile.in", "status": "modified", "additions": 11, "deletions": 42, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd05d08c4940ed65cc4c98d7fbeef100a7ce515/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd05d08c4940ed65cc4c98d7fbeef100a7ce515/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=6dd05d08c4940ed65cc4c98d7fbeef100a7ce515", "patch": "@@ -227,15 +227,11 @@ RANLIB_FOR_TARGET = ` \\\n     echo $(objdir)/../binutils/ranlib ; \\\n   else \\\n     if [ \"$(host_canonical)\" = \"$(target)\" ] ; then \\\n-      echo ranlib; \\\n+      echo $(RANLIB); \\\n     else \\\n        t='$(program_transform_cross_name)'; echo ranlib | sed -e $$t ; \\\n     fi; \\\n   fi`\n-RANLIB_TEST_FOR_TARGET = \\\n-  [ -f $(RANLIB_FOR_TARGET) ] \\\n-  || ( [ \"$(host_canonical)\" = \"$(target)\" ] \\\n-       && [ -f /usr/bin/ranlib -o -f /bin/ranlib ] )\n NM_FOR_TARGET = ` \\\n   if [ -f ./nm ] ; then \\\n     echo ./nm ; \\\n@@ -701,7 +697,6 @@ ORDINARY_FLAGS_TO_PASS = \\\n \t\"MAKEINFOFLAGS=$(MAKEINFOFLAGS)\" \\\n \t\"MAKEOVERRIDES=\" \\\n \t\"RANLIB_FOR_TARGET=$(RANLIB_FOR_TARGET)\" \\\n-\t\"RANLIB_TEST_FOR_TARGET=$(RANLIB_TEST_FOR_TARGET)\" \\\n \t\"SHELL=$(SHELL)\" \\\n \t\"exeext=$(exeext)\" \\\n \t\"build_exeext=$(build_exeext)\" \\\n@@ -1065,7 +1060,6 @@ libgcc.a: $(LIBGCC_DEPS)\n \t  AR_FLAGS_FOR_TARGET=\"$(AR_FLAGS_FOR_TARGET)\" \\\n \t  CFLAGS=\"$(CFLAGS) $(WARN_CFLAGS)\" \\\n \t  RANLIB_FOR_TARGET=\"$(RANLIB_FOR_TARGET)\" \\\n-\t  RANLIB_TEST_FOR_TARGET=\"$(RANLIB_TEST_FOR_TARGET)\" \\\n \t  NM_FOR_TARGET=\"$(NM_FOR_TARGET)\" AWK=\"$(AWK)\" \\\n \t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)\" \\\n \t  INCLUDES=\"$(INCLUDES)\" \\\n@@ -1107,7 +1101,6 @@ stmp-multilib: $(LIBGCC_DEPS)\n \t  AR_FLAGS_FOR_TARGET=\"$(AR_FLAGS_FOR_TARGET)\" \\\n \t  CFLAGS=\"$(CFLAGS) $(WARN_CFLAGS)\" \\\n \t  RANLIB_FOR_TARGET=\"$(RANLIB_FOR_TARGET)\" \\\n-\t  RANLIB_TEST_FOR_TARGET=\"$(RANLIB_TEST_FOR_TARGET)\" \\\n \t  NM_FOR_TARGET=\"$(NM_FOR_TARGET)\" AWK=\"$(AWK)\" \\\n \t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)\" \\\n \t  INCLUDES=\"$(INCLUDES)\" \\\n@@ -2943,53 +2936,41 @@ install-man: installdirs $(GENERATED_MANPAGES) lang.install-man\n \n # Install the library.\n install-libgcc: libgcc.mk libgcc.a installdirs\n-\tif $(RANLIB_TEST_FOR_TARGET); then \\\n-\t  r_f_t=$(RANLIB_FOR_TARGET); \\\n-\telse \\\n-\t  r_f_t=: ; \\\n-\tfi; \\\n \t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \t  BUILD_PREFIX=\"$(BUILD_PREFIX)\" BUILD_PREFIX_1=\"$(BUILD_PREFIX_1)\" \\\n \t  AR_FOR_TARGET=\"$(AR_FOR_TARGET)\" \\\n \t  AR_CREATE_FOR_TARGET=\"$(AR_CREATE_FOR_TARGET)\" \\\n \t  AR_FLAGS_FOR_TARGET=\"$(AR_FLAGS_FOR_TARGET)\" \\\n \t  CFLAGS=\"$(CFLAGS) $(WARN_CFLAGS)\" \\\n-\t  RANLIB_TEST_FOR_TARGET=\"$(RANLIB_TEST_FOR_TARGET)\" \\\n \t  NM_FOR_TARGET=\"$(NM_FOR_TARGET)\" AWK=\"$(AWK)\" \\\n \t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)\" \\\n \t  INCLUDES=\"$(INCLUDES)\" \\\n \t  CONFIG_H=\"$(TCONFIG_H)\" MACHMODE_H=\"$(MACHMODE_H)\" \\\n \t  LIB1ASMSRC='$(LIB1ASMSRC)' \\\n \t  MAKEOVERRIDES= \\\n \t  INSTALL_DATA=\"$(INSTALL_DATA)\" \\\n-\t  RANLIB_FOR_TARGET=\"$$r_f_t\" \\\n+\t  RANLIB_FOR_TARGET=\"$(RANLIB_FOR_TARGET)\" \\\n \t  DESTDIR=\"$(DESTDIR)\" \\\n \t  libsubdir=\"$(libsubdir)\" \\\n \t  slibdir=\"$(slibdir)\" \\\n \t  -f libgcc.mk install\n \n # Install multiple versions of libgcc.a.\n install-multilib: stmp-multilib installdirs\n-\tif $(RANLIB_TEST_FOR_TARGET); then \\\n-\t  r_f_t=$(RANLIB_FOR_TARGET); \\\n-\telse \\\n-\t  r_f_t=: ; \\\n-\tfi; \\\n \t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \t  BUILD_PREFIX=\"$(BUILD_PREFIX)\" BUILD_PREFIX_1=\"$(BUILD_PREFIX_1)\" \\\n \t  AR_FOR_TARGET=\"$(AR_FOR_TARGET)\" \\\n \t  AR_CREATE_FOR_TARGET=\"$(AR_CREATE_FOR_TARGET)\" \\\n \t  AR_FLAGS_FOR_TARGET=\"$(AR_FLAGS_FOR_TARGET)\" \\\n \t  CFLAGS=\"$(CFLAGS) $(WARN_CFLAGS)\" \\\n-\t  RANLIB_TEST_FOR_TARGET=\"$(RANLIB_TEST_FOR_TARGET)\" \\\n \t  NM_FOR_TARGET=\"$(NM_FOR_TARGET)\" AWK=\"$(AWK)\" \\\n \t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)\" \\\n \t  INCLUDES=\"$(INCLUDES)\" \\\n \t  CONFIG_H=\"$(CONFIG_H)\" MACHMODE_H=\"$(MACHMODE_H)\" \\\n \t  LIB1ASMSRC='$(LIB1ASMSRC)' \\\n \t  MAKEOVERRIDES= \\\n \t  INSTALL_DATA=\"$(INSTALL_DATA)\" \\\n-\t  RANLIB_FOR_TARGET=\"$$r_f_t\" \\\n+\t  RANLIB_FOR_TARGET=\"$(RANLIB_FOR_TARGET)\" \\\n \t  DESTDIR=\"$(DESTDIR)\" \\\n \t  libsubdir=\"$(libsubdir)\" \\\n \t  slibdir=\"$(slibdir)\" \\\n@@ -3582,13 +3563,10 @@ stage1-start:\n \t-if [ -f collect-ld$(exeext) ] ; then (cd stage1 && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n \t-rm -f stage1/libgcc.a stage1/libgcc_eh.a\n \t-cp libgcc.a stage1\n-\t-if $(RANLIB_TEST_FOR_TARGET) ; then \\\n-\t  $(RANLIB_FOR_TARGET) stage1/libgcc.a; \\\n-\telse true; fi\n+\t-$(RANLIB_FOR_TARGET) stage1/libgcc.a\n \t-if [ -f libgcc_eh.a ] ; then cp libgcc_eh.a stage1; \\\n-\t  if $(RANLIB_TEST_FOR_TARGET) ; then \\\n \t   $(RANLIB_FOR_TARGET) stage1/libgcc_eh.a; \\\n-\t  else true; fi; fi\n+\tfi\n \t-for f in .. $(EXTRA_MULTILIB_PARTS); do if [ x$${f} != x.. ]; then \\\n \t  cp stage1/$${f} . ; \\\n \telse true; \\\n@@ -3615,13 +3593,10 @@ stage2-start:\n \t-if [ -f collect-ld$(exeext) ] ; then (cd stage2 && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n \t-rm -f stage2/libgcc.a stage2/libgcc_eh.a\n \t-cp libgcc.a stage2\n-\t-if $(RANLIB_TEST_FOR_TARGET) ; then \\\n-\t  $(RANLIB_FOR_TARGET) stage2/libgcc.a; \\\n-\telse true; fi\n+\t-$(RANLIB_FOR_TARGET) stage2/libgcc.a\n \t-if [ -f libgcc_eh.a ] ; then cp libgcc_eh.a stage2; \\\n-\t  if $(RANLIB_TEST_FOR_TARGET) ; then \\\n \t   $(RANLIB_FOR_TARGET) stage2/libgcc_eh.a; \\\n-\t  else true; fi; fi\n+\tfi\n \t-for f in .. $(EXTRA_MULTILIB_PARTS); do if [ x$${f} != x.. ]; then \\\n \t  cp stage2/$${f} . ; \\\n \telse true; \\\n@@ -3644,13 +3619,10 @@ stage3-start:\n \t-if [ -f collect-ld$(exeext) ] ; then (cd stage3 && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n \t-rm -f stage3/libgcc.a stage3/libgcc_eh.a\n \t-cp libgcc.a stage3\n-\t-if $(RANLIB_TEST_FOR_TARGET) ; then \\\n-\t  $(RANLIB_FOR_TARGET) stage3/libgcc.a; \\\n-\telse true; fi\n+\t-$(RANLIB_FOR_TARGET) stage3/libgcc.a\n \t-if [ -f libgcc_eh.a ] ; then cp libgcc_eh.a stage3; \\\n-\t  if $(RANLIB_TEST_FOR_TARGET) ; then \\\n \t   $(RANLIB_FOR_TARGET) stage3/libgcc_eh.a; \\\n-\t  else true; fi; fi\n+\tfi\n \t-for f in .. $(EXTRA_MULTILIB_PARTS); do if [ x$${f} != x.. ]; then \\\n \t  cp stage3/$${f} . ; \\\n \telse true; \\\n@@ -3673,13 +3645,10 @@ stage4-start:\n \t-if [ -f collect-ld$(exeext) ] ; then (cd stage4 && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n \t-rm -f stage4/libgcc.a stage4/libgcc_eh.a\n \t-cp libgcc.a stage4\n-\t-if $(RANLIB_TEST_FOR_TARGET) ; then \\\n-\t  $(RANLIB_FOR_TARGET) stage4/libgcc.a; \\\n-\telse true; fi\n+\t-$(RANLIB_FOR_TARGET) stage4/libgcc.a\n \t-if [ -f libgcc_eh.a ] ; then cp libgcc_eh.a stage4; \\\n-\t  if $(RANLIB_TEST_FOR_TARGET) ; then \\\n \t   $(RANLIB_FOR_TARGET) stage4/libgcc_eh.a; \\\n-\t  else true; fi; fi\n+\tfi\n \t-for f in .. $(EXTRA_MULTILIB_PARTS); do if [ x$${f} != x.. ]; then \\\n \t  cp stage4/$${f} . ; \\\n \telse true; \\"}, {"sha": "a139bef2800fab946ed1e78564bc2cb362f5bfb4", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd05d08c4940ed65cc4c98d7fbeef100a7ce515/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd05d08c4940ed65cc4c98d7fbeef100a7ce515/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=6dd05d08c4940ed65cc4c98d7fbeef100a7ce515", "patch": "@@ -1,6 +1,6 @@\n #!/bin/sh\n # Construct makefile for libgcc.\n-#   Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n+#   Copyright (C) 2000, 2002, 2003 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n \n@@ -295,19 +295,15 @@ for ml in $MULTILIBS; do\n   echo \"${dir}/libgcc.a: $libgcc_a_objs\"\n   echo \"\t-rm -rf ${dir}/libgcc.a\"\n   echo '\t$(AR_CREATE_FOR_TARGET)' ${dir}/libgcc.a $libgcc_a_objs\n-  echo '\tif $(RANLIB_TEST_FOR_TARGET) ; then' \\\\\n-  echo '\t  $(RANLIB_FOR_TARGET)' ${dir}/libgcc.a ';' \\\\\n-  echo '\telse true; fi;'\n+  echo '\t$(RANLIB_FOR_TARGET)' ${dir}/libgcc.a\n \n   if [ \"$SHLIB_LINK\" ]; then\n \n     echo \"\"\n     echo \"${dir}/libgcc_eh.a: $libgcc_eh_objs\"\n     echo \"\t-rm -rf ${dir}/libgcc_eh.a\"\n     echo '\t$(AR_CREATE_FOR_TARGET)' ${dir}/libgcc_eh.a $libgcc_eh_objs\n-    echo '\tif $(RANLIB_TEST_FOR_TARGET) ; then' \\\\\n-    echo '\t  $(RANLIB_FOR_TARGET)' ${dir}/libgcc_eh.a ';' \\\\\n-    echo '\telse true; fi;'\n+    echo '\t$(RANLIB_FOR_TARGET)' ${dir}/libgcc_eh.a\n \n     if [ -z \"$SHLIB_MULTILIB\" ]; then\n       if [ \"$dir\" = . ]; then"}]}