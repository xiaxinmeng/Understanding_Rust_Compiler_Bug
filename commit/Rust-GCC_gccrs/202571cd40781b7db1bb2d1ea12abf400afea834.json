{"sha": "202571cd40781b7db1bb2d1ea12abf400afea834", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAyNTcxY2Q0MDc4MWI3ZGIxYmIyZDFlYTEyYWJmNDAwYWZlYTgzNA==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-02-02T12:10:28Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-02-02T12:10:28Z"}, "message": "(cmov): Use @ for output.\n\nFrom-SVN: r3406", "tree": {"sha": "55c74ec82270a8ffda3796f26546584b3355d10c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55c74ec82270a8ffda3796f26546584b3355d10c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/202571cd40781b7db1bb2d1ea12abf400afea834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/202571cd40781b7db1bb2d1ea12abf400afea834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/202571cd40781b7db1bb2d1ea12abf400afea834", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/202571cd40781b7db1bb2d1ea12abf400afea834/comments", "author": null, "committer": null, "parents": [{"sha": "d74154d50862c9d36cc5291d65d094fbf0b9d0f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d74154d50862c9d36cc5291d65d094fbf0b9d0f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d74154d50862c9d36cc5291d65d094fbf0b9d0f2"}], "stats": {"total": 39, "additions": 13, "deletions": 26}, "files": [{"sha": "03c3008fff236f4287b308f95b112dd0b701c6f5", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 13, "deletions": 26, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/202571cd40781b7db1bb2d1ea12abf400afea834/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/202571cd40781b7db1bb2d1ea12abf400afea834/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=202571cd40781b7db1bb2d1ea12abf400afea834", "patch": "@@ -493,34 +493,21 @@\n ;;; Experimental conditional move\n \n (define_insn \"cmov\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n-        (if_then_else:SI\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r\")\n+\t(if_then_else:SI\n \t (match_operator 5 \"comparison_operator\"\n-                         [(match_operand:SI 3 \"register_operand\" \"r,r\")\n-\t\t\t  (match_operand:SI 4 \"arith5_operand\" \"rL,rL\")])\n-         (match_operand:SI 1 \"arith11_operand\" \"0,rI\")\n-         (match_operand:SI 2 \"arith11_operand\" \"rI,0\")))]\n+\t\t\t [(match_operand:SI 3 \"register_operand\" \"r,r,r,r\")\n+\t\t\t  (match_operand:SI 4 \"arith5_operand\" \"rL,rL,rL,rL\")])\n+\t (match_operand:SI 1 \"arith11_operand\" \"0,0,r,I\")\n+\t (match_operand:SI 2 \"arith11_operand\" \"r,I,0,0\")))]\n   \"\"\n-  \"*\n-{\n-  output_asm_insn (\\\"com%I4clr,%S5 %4,%3,0\\\", operands);\n-  if (which_alternative == 0)\n-    {\n-      if (GET_CODE (operands[2]) == CONST_INT)\n-\treturn \\\"ldi %2,%0\\\";\n-      else \n-\treturn \\\"copy %2,%0\\\";\n-    }\n-  else\n-    {\n-      if (GET_CODE (operands[1]) == CONST_INT)\n-\treturn \\\"ldi %1,%0\\\";\n-      else \n-\treturn \\\"copy %1,%0\\\";\n-    }\n-}\"\n-  [(set_attr \"type\" \"multi,multi\")\n-   (set_attr \"length\" \"2,2\")])\n+  \"@\n+   com%I4clr,%S5 %4,%3,0\\;copy %2,%0\n+   com%I4clr,%S5 %4,%3,0\\;ldi %2,%0\n+   com%I4clr,%S5 %4,%3,0\\;copy %1,%0\n+   com%I4clr,%S5 %4,%3,0\\;ldi %1,%0\"\n+  [(set_attr \"type\" \"multi,multi,multi,multi\")\n+   (set_attr \"length\" \"2,2,2,2\")])\n \n ;; Conditional Branches\n "}]}