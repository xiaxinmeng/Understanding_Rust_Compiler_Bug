{"sha": "e1113ffbd619d0568fb3b37e9660d9e0ae7862f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTExMTNmZmJkNjE5ZDA1NjhmYjNiMzdlOTY2MGQ5ZTBhZTc4NjJmNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-19T10:13:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-19T10:13:33Z"}, "message": "c, objc: Fix up c_parser_objc_selector_arg after CPP_SCOPE changes [PR94637]\n\nSimilarly to inline asm, :: (or any other number of consecutive colons) can\nappear in ObjC @selector argument and with the introduction of CPP_SCOPE\ninto the C FE, we need to trat CPP_SCOPE as two CPP_COLON tokens.\nThe C++ FE does that already that way.\n\n2020-04-19  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR objc/94637\n\t* c-parser.c (c_parser_objc_selector_arg): Handle CPP_SCOPE like\n\ttwo CPP_COLON tokens.\n\n\t* objc.dg/pr94637.m: New test.", "tree": {"sha": "09b934e4b3623821ce9842b128072434f976171b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09b934e4b3623821ce9842b128072434f976171b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a9ce39f8bbb2ae0798bec0ed2051a5f10b21122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a9ce39f8bbb2ae0798bec0ed2051a5f10b21122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a9ce39f8bbb2ae0798bec0ed2051a5f10b21122"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "83d1ccc8edc8f31e52313f932dac621ded78fe69", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=e1113ffbd619d0568fb3b37e9660d9e0ae7862f5", "patch": "@@ -1,3 +1,9 @@\n+2020-04-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR objc/94637\n+\t* c-parser.c (c_parser_objc_selector_arg): Handle CPP_SCOPE like\n+\ttwo CPP_COLON tokens.\n+\n 2020-04-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/94629"}, {"sha": "ae354e6af66ac0297133143b6a250961463adb00", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=e1113ffbd619d0568fb3b37e9660d9e0ae7862f5", "patch": "@@ -11782,15 +11782,28 @@ c_parser_objc_selector_arg (c_parser *parser)\n {\n   tree sel = c_parser_objc_selector (parser);\n   tree list = NULL_TREE;\n-  if (sel && c_parser_next_token_is_not (parser, CPP_COLON))\n+  if (sel\n+      && c_parser_next_token_is_not (parser, CPP_COLON)\n+      && c_parser_next_token_is_not (parser, CPP_SCOPE))\n     return sel;\n   while (true)\n     {\n-      if (!c_parser_require (parser, CPP_COLON, \"expected %<:%>\"))\n-\treturn list;\n-      list = chainon (list, build_tree_list (sel, NULL_TREE));\n+      if (c_parser_next_token_is (parser, CPP_SCOPE))\n+\t{\n+\t  c_parser_consume_token (parser);\n+\t  list = chainon (list, build_tree_list (sel, NULL_TREE));\n+\t  list = chainon (list, build_tree_list (NULL_TREE, NULL_TREE));\n+\t}\n+      else\n+\t{\n+\t  if (!c_parser_require (parser, CPP_COLON, \"expected %<:%>\"))\n+\t    return list;\n+\t  list = chainon (list, build_tree_list (sel, NULL_TREE));\n+\t}\n       sel = c_parser_objc_selector (parser);\n-      if (!sel && c_parser_next_token_is_not (parser, CPP_COLON))\n+      if (!sel\n+\t  && c_parser_next_token_is_not (parser, CPP_COLON)\n+\t  && c_parser_next_token_is_not (parser, CPP_SCOPE))\n \tbreak;\n     }\n   return list;"}, {"sha": "9f8ae6ccccb1b6e0a83a5ecae8188a7a456f8c42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e1113ffbd619d0568fb3b37e9660d9e0ae7862f5", "patch": "@@ -1,3 +1,8 @@\n+2020-04-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR objc/94637\n+\t* objc.dg/pr94637.m: New test.\n+\n 2020-04-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* lib/gdc-utils.exp (gdc-convert-test): Add dg-skip-if for tests that"}, {"sha": "10a0ea8307b20bec57dfd82a7c0de5d04e33f60e", "filename": "gcc/testsuite/objc.dg/pr94637.m", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5/gcc%2Ftestsuite%2Fobjc.dg%2Fpr94637.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5/gcc%2Ftestsuite%2Fobjc.dg%2Fpr94637.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fpr94637.m?ref=e1113ffbd619d0568fb3b37e9660d9e0ae7862f5", "patch": "@@ -0,0 +1,10 @@\n+/* PR objc/94637 */\n+/* { dg-do compile } */\n+\n+#include <objc/objc.h>\n+\n+SEL\n+foo ()\n+{\n+  return @selector(example::);\n+}"}]}