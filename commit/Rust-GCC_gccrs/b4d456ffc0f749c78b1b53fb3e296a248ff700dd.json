{"sha": "b4d456ffc0f749c78b1b53fb3e296a248ff700dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRkNDU2ZmZjMGY3NDljNzhiMWI1M2ZiM2UyOTZhMjQ4ZmY3MDBkZA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2010-08-20T22:08:41Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2010-08-20T22:08:41Z"}, "message": "tree.h (alias_diag_flags): New enum.\n\n        * tree.h (alias_diag_flags): New enum.\n        (alias_pair): Add an 'emitted_diags' field.\n        * varasm.c (finish_aliases_1): Honor and update\n        * p->emitted_diags.\n        (assemble_alias): Initialize emitted_diags of new pairs.\n\nFrom-SVN: r163425", "tree": {"sha": "25a265db39729efa8d868a101c02397e6e62df3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25a265db39729efa8d868a101c02397e6e62df3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4d456ffc0f749c78b1b53fb3e296a248ff700dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d456ffc0f749c78b1b53fb3e296a248ff700dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4d456ffc0f749c78b1b53fb3e296a248ff700dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d456ffc0f749c78b1b53fb3e296a248ff700dd/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39acb18f66f7b0ff8c36f5fa96e76168f959d2a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39acb18f66f7b0ff8c36f5fa96e76168f959d2a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39acb18f66f7b0ff8c36f5fa96e76168f959d2a1"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "75390678917e64a3949dac4ae0935d9a9020bd4a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d456ffc0f749c78b1b53fb3e296a248ff700dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d456ffc0f749c78b1b53fb3e296a248ff700dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4d456ffc0f749c78b1b53fb3e296a248ff700dd", "patch": "@@ -1,3 +1,10 @@\n+2010-08-20  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* tree.h (alias_diag_flags): New enum.\n+\t(alias_pair): Add an 'emitted_diags' field.\n+\t* varasm.c (finish_aliases_1): Honor and update p->emitted_diags.\n+\t(assemble_alias): Initialize emitted_diags of new pairs.\n+\n 2010-08-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/rs6000/aix.h (STACK_CHECK_STATIC_BUILTIN): Define to 1."}, {"sha": "907fc3e3a7ba237e04bd565b72f528f6da004dab", "filename": "gcc/tree.h", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d456ffc0f749c78b1b53fb3e296a248ff700dd/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d456ffc0f749c78b1b53fb3e296a248ff700dd/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b4d456ffc0f749c78b1b53fb3e296a248ff700dd", "patch": "@@ -184,10 +184,21 @@ extern const char *const tree_code_name[];\n    of an alias.  This requires that the decl have been defined.  Aliases\n    that precede their definition have to be queued for later processing.  */\n \n+/* The deferred processing proceeds in several passes.  We memorize the\n+   diagnostics emitted for a pair to prevent repeating messages when the\n+   queue gets re-scanned after possible updates.  */\n+\n+typedef enum {\n+  ALIAS_DIAG_NONE      = 0x0,\n+  ALIAS_DIAG_TO_UNDEF  = 0x1,\n+  ALIAS_DIAG_TO_EXTERN = 0x2\n+} alias_diag_flags;\n+  \n typedef struct GTY(()) alias_pair\n {\n   tree decl;\n-  tree target;\n+  tree target;  \n+  int  emitted_diags;  /* alias_diags already emitted for this pair.  */\n } alias_pair;\n \n /* Define gc'd vector type.  */"}, {"sha": "c509219e3aa04496921b7a35421cd0e17d26bb01", "filename": "gcc/varasm.c", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d456ffc0f749c78b1b53fb3e296a248ff700dd/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d456ffc0f749c78b1b53fb3e296a248ff700dd/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=b4d456ffc0f749c78b1b53fb3e296a248ff700dd", "patch": "@@ -5444,19 +5444,27 @@ finish_aliases_1 (void)\n       target_decl = find_decl_and_mark_needed (p->decl, p->target);\n       if (target_decl == NULL)\n \t{\n-\t  if (! lookup_attribute (\"weakref\", DECL_ATTRIBUTES (p->decl)))\n-\t    error (\"%q+D aliased to undefined symbol %qE\",\n-\t\t   p->decl, p->target);\n+\t  if (! (p->emitted_diags & ALIAS_DIAG_TO_UNDEF)\n+\t      && ! lookup_attribute (\"weakref\", DECL_ATTRIBUTES (p->decl)))\n+\t    {\n+\t      error (\"%q+D aliased to undefined symbol %qE\",\n+\t\t     p->decl, p->target);\n+\t      p->emitted_diags |= ALIAS_DIAG_TO_UNDEF;\n+\t    }\n \t}\n-      else if (DECL_EXTERNAL (target_decl)\n- \t       /* We use local aliases for C++ thunks to force the tailcall\n- \t\t  to bind locally.  Of course this is a hack - to keep it\n- \t\t  working do the following (which is not strictly correct).  */\n- \t       && (! TREE_CODE (target_decl) == FUNCTION_DECL\n- \t\t   || ! DECL_VIRTUAL_P (target_decl))\n+      else if (! (p->emitted_diags & ALIAS_DIAG_TO_EXTERN)\n+\t       && DECL_EXTERNAL (target_decl)\n+\t       /* We use local aliases for C++ thunks to force the tailcall\n+\t\t  to bind locally.  This is a hack - to keep it working do\n+\t\t  the following (which is not strictly correct).  */\n+\t       && (! TREE_CODE (target_decl) == FUNCTION_DECL\n+\t\t   || ! DECL_VIRTUAL_P (target_decl))\n \t       && ! lookup_attribute (\"weakref\", DECL_ATTRIBUTES (p->decl)))\n-\terror (\"%q+D aliased to external symbol %qE\",\n-\t       p->decl, p->target);\n+\t{\n+\t  error (\"%q+D aliased to external symbol %qE\",\n+\t\t p->decl, p->target);\t  \n+\t  p->emitted_diags |= ALIAS_DIAG_TO_EXTERN;\n+\t}\n     }\n }\n \n@@ -5549,6 +5557,7 @@ assemble_alias (tree decl, tree target)\n       alias_pair *p = VEC_safe_push (alias_pair, gc, alias_pairs, NULL);\n       p->decl = decl;\n       p->target = target;\n+      p->emitted_diags = ALIAS_DIAG_NONE;\n     }\n }\n "}]}