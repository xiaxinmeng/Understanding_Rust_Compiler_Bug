{"sha": "1ebf0641a5201939cbaa1cc4f008bb8eda68895c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWViZjA2NDFhNTIwMTkzOWNiYWExY2M0ZjAwOGJiOGVkYTY4ODk1Yw==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2018-08-29T22:16:09Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-08-29T22:16:09Z"}, "message": "re PR middle-end/87053 (wrong code with c_strlen)\n\ngcc:\n2018-08-22  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n\tPR middle-end/87053\n\t* builtins.c (c_strlen): Improve range checks.\n\ntestsuite:\n2018-08-22  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n\tPR middle-end/87053\n\t* gcc.c-torture/execute/pr87053.c: New test.\n\nFrom-SVN: r263968", "tree": {"sha": "db468a623870c89e111e941c934472e18869fe46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db468a623870c89e111e941c934472e18869fe46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ebf0641a5201939cbaa1cc4f008bb8eda68895c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ebf0641a5201939cbaa1cc4f008bb8eda68895c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ebf0641a5201939cbaa1cc4f008bb8eda68895c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ebf0641a5201939cbaa1cc4f008bb8eda68895c/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d66ab7d12bb632c3de947f535d189275209a3915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66ab7d12bb632c3de947f535d189275209a3915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d66ab7d12bb632c3de947f535d189275209a3915"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "8865f31a43c817248291ba65a89cdf6915287f0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ebf0641a5201939cbaa1cc4f008bb8eda68895c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ebf0641a5201939cbaa1cc4f008bb8eda68895c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ebf0641a5201939cbaa1cc4f008bb8eda68895c", "patch": "@@ -1,3 +1,8 @@\n+2018-08-29  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR middle-end/87053\n+\t* builtins.c (c_strlen): Improve range checks.\n+\n 2018-08-29  Martin Sebor  <msebor@redhat.com>\n \t    Jeff Law  <law@redhat.com>\n "}, {"sha": "58ea7475ef7bb2a8abad2463b896efaa8fd79650", "filename": "gcc/builtins.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ebf0641a5201939cbaa1cc4f008bb8eda68895c/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ebf0641a5201939cbaa1cc4f008bb8eda68895c/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=1ebf0641a5201939cbaa1cc4f008bb8eda68895c", "patch": "@@ -567,7 +567,7 @@ string_length (const void *ptr, unsigned eltsize, unsigned maxelts)\n tree\n c_strlen (tree src, int only_value, unsigned eltsize)\n {\n-  gcc_assert (eltsize == 1 || eltsize == 2 || eltsize == 4);\n+  gcc_checking_assert (eltsize == 1 || eltsize == 2 || eltsize == 4);\n   STRIP_NOPS (src);\n   if (TREE_CODE (src) == COND_EXPR\n       && (only_value || !TREE_SIDE_EFFECTS (TREE_OPERAND (src, 0))))\n@@ -656,10 +656,10 @@ c_strlen (tree src, int only_value, unsigned eltsize)\n      a null character if we can represent it as a single HOST_WIDE_INT.  */\n   if (byteoff == 0)\n     eltoff = 0;\n-  else if (! tree_fits_shwi_p (byteoff))\n+  else if (! tree_fits_uhwi_p (byteoff) || tree_to_uhwi (byteoff) % eltsize)\n     eltoff = -1;\n   else\n-    eltoff = tree_to_shwi (byteoff) / eltsize;\n+    eltoff = tree_to_uhwi (byteoff) / eltsize;\n \n   /* If the offset is known to be out of bounds, warn, and call strlen at\n      runtime.  */\n@@ -691,6 +691,11 @@ c_strlen (tree src, int only_value, unsigned eltsize)\n   unsigned len = string_length (ptr + eltoff * eltsize, eltsize,\n \t\t\t\tstrelts - eltoff);\n \n+  /* Don't know what to return if there was no zero termination. \n+     Ideally this would turn into a gcc_checking_assert over time.  */\n+  if (len > maxelts - eltoff)\n+    return NULL_TREE;\n+\n   return ssize_int (len);\n }\n "}, {"sha": "317cb47957546abd923d35456b749d1140e6daf9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ebf0641a5201939cbaa1cc4f008bb8eda68895c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ebf0641a5201939cbaa1cc4f008bb8eda68895c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ebf0641a5201939cbaa1cc4f008bb8eda68895c", "patch": "@@ -1,3 +1,8 @@\n+2018-08-29  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR middle-end/87053\n+\t* gcc.c-torture/execute/pr87053.c: New test.\n+\n 2018-08-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/87095"}, {"sha": "0170731860b132074b7ce5b96758135cf3465c1a", "filename": "gcc/testsuite/gcc.c-torture/execute/pr87053.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ebf0641a5201939cbaa1cc4f008bb8eda68895c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr87053.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ebf0641a5201939cbaa1cc4f008bb8eda68895c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr87053.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr87053.c?ref=1ebf0641a5201939cbaa1cc4f008bb8eda68895c", "patch": "@@ -0,0 +1,17 @@\n+/* PR middle-end/87053 */\n+\n+const union\n+{ struct {\n+    char x[4];\n+    char y[4];\n+  };\n+  struct {\n+    char z[8];\n+  };\n+} u = {{\"1234\", \"567\"}};\n+\n+int main ()\n+{\n+  if (__builtin_strlen (u.z) != 7)\n+    __builtin_abort ();\n+}"}]}