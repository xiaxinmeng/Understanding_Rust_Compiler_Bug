{"sha": "6917e65713dbc8a8c215097dccd85665544d5e7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkxN2U2NTcxM2RiYzhhOGMyMTUwOTdkY2NkODU2NjU1NDRkNWU3ZQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2004-11-16T07:42:43Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2004-11-16T07:42:43Z"}, "message": "[multiple changes]\n\n2004-11-16  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* Makefile.am: Add imported files.\n\t* Makefile.in: Regenerate.\n\n\t2004-10-24  Casey Marshall  <csm@gnu.org>\n\n\t* javax/security/auth/login/LoginContext.java: Implemented.\n\t* javax/security/auth/login/Configuration.java (getConfig): New method.\n\t* javax/security/auth/spi/LoginModule.java,\n\t* gnu/java/security/action/GetSecurityPropertyAction.java: New files.\n\nFrom-SVN: r90718", "tree": {"sha": "5e0cee5581b321f1929f80fb1ddb23bb28ce62b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e0cee5581b321f1929f80fb1ddb23bb28ce62b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6917e65713dbc8a8c215097dccd85665544d5e7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6917e65713dbc8a8c215097dccd85665544d5e7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6917e65713dbc8a8c215097dccd85665544d5e7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6917e65713dbc8a8c215097dccd85665544d5e7e/comments", "author": null, "committer": null, "parents": [{"sha": "40b026d890b797f058047aeba398e22b0e8d7db6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b026d890b797f058047aeba398e22b0e8d7db6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40b026d890b797f058047aeba398e22b0e8d7db6"}], "stats": {"total": 463, "additions": 461, "deletions": 2}, "files": [{"sha": "105c95fb4f0f4ec9d23f1853d9f56685da30292d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6917e65713dbc8a8c215097dccd85665544d5e7e", "patch": "@@ -1,3 +1,15 @@\n+2004-11-16  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* Makefile.am: Add imported files.\n+\t* Makefile.in: Regenerate.\n+\n+\t2004-10-24  Casey Marshall  <csm@gnu.org>\n+\n+\t* javax/security/auth/login/LoginContext.java: Implemented.\n+\t* javax/security/auth/login/Configuration.java (getConfig): New method.\n+\t* javax/security/auth/spi/LoginModule.java,\n+\t* gnu/java/security/action/GetSecurityPropertyAction.java: New files.\n+\n 2004-11-15  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \tImport/Merge the X.509 certificate code from Classpath."}, {"sha": "7058ea9644455f79cb229a519add7209fec3906f", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=6917e65713dbc8a8c215097dccd85665544d5e7e", "patch": "@@ -2194,6 +2194,7 @@ javax/security/auth/login/FailedLoginException.java \\\n javax/security/auth/login/LoginContext.java \\\n javax/security/auth/login/LoginException.java \\\n javax/security/auth/login/NullConfiguration.java \\\n+javax/security/auth/spi/LoginModule.java \\\n javax/security/auth/Policy.java \\\n javax/security/auth/PrivateCredentialPermission.java \\\n javax/security/auth/Refreshable.java \\\n@@ -2742,6 +2743,7 @@ gnu/java/nio/charset/UTF_8.java \\\n gnu/java/security/Engine.java \\\n gnu/java/security/OID.java \\\n gnu/java/security/action/GetPropertyAction.java \\\n+gnu/java/security/action/GetSecurityPropertyAction.java \\\n gnu/java/security/action/SetAccessibleAction.java \\\n gnu/java/security/der/BitString.java \\\n gnu/java/security/der/DER.java \\"}, {"sha": "dfa16c00b68b15f23126872c6f2d46a5869f1465", "filename": "libjava/Makefile.in", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=6917e65713dbc8a8c215097dccd85665544d5e7e", "patch": "@@ -795,6 +795,7 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc resolve.cc \\\n \tgnu/java/nio/charset/UTF_8.java gnu/java/security/Engine.java \\\n \tgnu/java/security/OID.java \\\n \tgnu/java/security/action/GetPropertyAction.java \\\n+\tgnu/java/security/action/GetSecurityPropertyAction.java \\\n \tgnu/java/security/action/SetAccessibleAction.java \\\n \tgnu/java/security/der/BitString.java \\\n \tgnu/java/security/der/DER.java \\\n@@ -2254,6 +2255,7 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc resolve.cc \\\n \tjavax/security/auth/login/LoginContext.java \\\n \tjavax/security/auth/login/LoginException.java \\\n \tjavax/security/auth/login/NullConfiguration.java \\\n+\tjavax/security/auth/spi/LoginModule.java \\\n \tjavax/security/auth/Policy.java \\\n \tjavax/security/auth/PrivateCredentialPermission.java \\\n \tjavax/security/auth/Refreshable.java \\\n@@ -3514,6 +3516,7 @@ am__objects_13 = javax/accessibility/Accessible.lo \\\n \tjavax/security/auth/login/LoginContext.lo \\\n \tjavax/security/auth/login/LoginException.lo \\\n \tjavax/security/auth/login/NullConfiguration.lo \\\n+\tjavax/security/auth/spi/LoginModule.lo \\\n \tjavax/security/auth/Policy.lo \\\n \tjavax/security/auth/PrivateCredentialPermission.lo \\\n \tjavax/security/auth/Refreshable.lo \\\n@@ -3773,6 +3776,7 @@ am__objects_14 = $(am__objects_9) gnu/classpath/ServiceFactory.lo \\\n \tgnu/java/nio/charset/UTF_16LE.lo gnu/java/nio/charset/UTF_8.lo \\\n \tgnu/java/security/Engine.lo gnu/java/security/OID.lo \\\n \tgnu/java/security/action/GetPropertyAction.lo \\\n+\tgnu/java/security/action/GetSecurityPropertyAction.lo \\\n \tgnu/java/security/action/SetAccessibleAction.lo \\\n \tgnu/java/security/der/BitString.lo \\\n \tgnu/java/security/der/DER.lo \\\n@@ -6096,6 +6100,7 @@ javax/security/auth/login/FailedLoginException.java \\\n javax/security/auth/login/LoginContext.java \\\n javax/security/auth/login/LoginException.java \\\n javax/security/auth/login/NullConfiguration.java \\\n+javax/security/auth/spi/LoginModule.java \\\n javax/security/auth/Policy.java \\\n javax/security/auth/PrivateCredentialPermission.java \\\n javax/security/auth/Refreshable.java \\\n@@ -6632,6 +6637,7 @@ gnu/java/nio/charset/UTF_8.java \\\n gnu/java/security/Engine.java \\\n gnu/java/security/OID.java \\\n gnu/java/security/action/GetPropertyAction.java \\\n+gnu/java/security/action/GetSecurityPropertyAction.java \\\n gnu/java/security/action/SetAccessibleAction.java \\\n gnu/java/security/der/BitString.java \\\n gnu/java/security/der/DER.java \\\n@@ -9474,6 +9480,9 @@ gnu/java/security/action/$(DEPDIR)/$(am__dirstamp):\n gnu/java/security/action/GetPropertyAction.lo:  \\\n \tgnu/java/security/action/$(am__dirstamp) \\\n \tgnu/java/security/action/$(DEPDIR)/$(am__dirstamp)\n+gnu/java/security/action/GetSecurityPropertyAction.lo:  \\\n+\tgnu/java/security/action/$(am__dirstamp) \\\n+\tgnu/java/security/action/$(DEPDIR)/$(am__dirstamp)\n gnu/java/security/action/SetAccessibleAction.lo:  \\\n \tgnu/java/security/action/$(am__dirstamp) \\\n \tgnu/java/security/action/$(DEPDIR)/$(am__dirstamp)\n@@ -14079,6 +14088,15 @@ javax/security/auth/login/LoginException.lo:  \\\n javax/security/auth/login/NullConfiguration.lo:  \\\n \tjavax/security/auth/login/$(am__dirstamp) \\\n \tjavax/security/auth/login/$(DEPDIR)/$(am__dirstamp)\n+javax/security/auth/spi/$(am__dirstamp):\n+\t@$(mkdir_p) javax/security/auth/spi\n+\t@: > javax/security/auth/spi/$(am__dirstamp)\n+javax/security/auth/spi/$(DEPDIR)/$(am__dirstamp):\n+\t@$(mkdir_p) javax/security/auth/spi/$(DEPDIR)\n+\t@: > javax/security/auth/spi/$(DEPDIR)/$(am__dirstamp)\n+javax/security/auth/spi/LoginModule.lo:  \\\n+\tjavax/security/auth/spi/$(am__dirstamp) \\\n+\tjavax/security/auth/spi/$(DEPDIR)/$(am__dirstamp)\n javax/security/auth/Policy.lo: javax/security/auth/$(am__dirstamp) \\\n \tjavax/security/auth/$(DEPDIR)/$(am__dirstamp)\n javax/security/auth/PrivateCredentialPermission.lo:  \\\n@@ -15249,6 +15267,8 @@ mostlyclean-compile:\n \t-rm -f gnu/java/security/OID.lo\n \t-rm -f gnu/java/security/action/GetPropertyAction.$(OBJEXT)\n \t-rm -f gnu/java/security/action/GetPropertyAction.lo\n+\t-rm -f gnu/java/security/action/GetSecurityPropertyAction.$(OBJEXT)\n+\t-rm -f gnu/java/security/action/GetSecurityPropertyAction.lo\n \t-rm -f gnu/java/security/action/SetAccessibleAction.$(OBJEXT)\n \t-rm -f gnu/java/security/action/SetAccessibleAction.lo\n \t-rm -f gnu/java/security/der/BitString.$(OBJEXT)\n@@ -18421,6 +18441,8 @@ mostlyclean-compile:\n \t-rm -f javax/security/auth/login/LoginException.lo\n \t-rm -f javax/security/auth/login/NullConfiguration.$(OBJEXT)\n \t-rm -f javax/security/auth/login/NullConfiguration.lo\n+\t-rm -f javax/security/auth/spi/LoginModule.$(OBJEXT)\n+\t-rm -f javax/security/auth/spi/LoginModule.lo\n \t-rm -f javax/security/auth/x500/X500Principal.$(OBJEXT)\n \t-rm -f javax/security/auth/x500/X500Principal.lo\n \t-rm -f javax/security/auth/x500/X500PrivateCredential.$(OBJEXT)\n@@ -19892,6 +19914,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/security/$(DEPDIR)/Engine.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/security/$(DEPDIR)/OID.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/security/action/$(DEPDIR)/GetPropertyAction.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/java/security/action/$(DEPDIR)/GetSecurityPropertyAction.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/security/action/$(DEPDIR)/SetAccessibleAction.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/security/der/$(DEPDIR)/BitString.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/security/der/$(DEPDIR)/DER.Plo@am__quote@\n@@ -21478,6 +21501,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/security/auth/login/$(DEPDIR)/LoginContext.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/security/auth/login/$(DEPDIR)/LoginException.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/security/auth/login/$(DEPDIR)/NullConfiguration.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/security/auth/spi/$(DEPDIR)/LoginModule.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/security/auth/x500/$(DEPDIR)/X500Principal.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/security/auth/x500/$(DEPDIR)/X500PrivateCredential.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/security/cert/$(DEPDIR)/Certificate.Plo@am__quote@\n@@ -22924,6 +22948,7 @@ clean-libtool:\n \t-rm -rf javax/security/auth/.libs javax/security/auth/_libs\n \t-rm -rf javax/security/auth/callback/.libs javax/security/auth/callback/_libs\n \t-rm -rf javax/security/auth/login/.libs javax/security/auth/login/_libs\n+\t-rm -rf javax/security/auth/spi/.libs javax/security/auth/spi/_libs\n \t-rm -rf javax/security/auth/x500/.libs javax/security/auth/x500/_libs\n \t-rm -rf javax/security/cert/.libs javax/security/cert/_libs\n \t-rm -rf javax/security/sasl/.libs javax/security/sasl/_libs\n@@ -23531,6 +23556,8 @@ distclean-generic:\n \t-rm -f javax/security/auth/callback/$(am__dirstamp)\n \t-rm -f javax/security/auth/login/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f javax/security/auth/login/$(am__dirstamp)\n+\t-rm -f javax/security/auth/spi/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/security/auth/spi/$(am__dirstamp)\n \t-rm -f javax/security/auth/x500/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f javax/security/auth/x500/$(am__dirstamp)\n \t-rm -f javax/security/cert/$(DEPDIR)/$(am__dirstamp)\n@@ -23603,7 +23630,7 @@ clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \\\n \n distclean: distclean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n-\t-rm -rf ./$(DEPDIR) gnu/awt/$(DEPDIR) gnu/awt/j2d/$(DEPDIR) gnu/awt/xlib/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/awt/$(DEPDIR) gnu/java/awt/image/$(DEPDIR) gnu/java/awt/peer/$(DEPDIR) gnu/java/awt/peer/gtk/$(DEPDIR) gnu/java/beans/$(DEPDIR) gnu/java/beans/editors/$(DEPDIR) gnu/java/beans/info/$(DEPDIR) gnu/java/io/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/lang/reflect/$(DEPDIR) gnu/java/locale/$(DEPDIR) gnu/java/math/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/net/protocol/file/$(DEPDIR) gnu/java/net/protocol/gcjlib/$(DEPDIR) gnu/java/net/protocol/http/$(DEPDIR) gnu/java/net/protocol/jar/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) gnu/java/nio/charset/$(DEPDIR) gnu/java/rmi/$(DEPDIR) gnu/java/rmi/dgc/$(DEPDIR) gnu/java/rmi/registry/$(DEPDIR) gnu/java/rmi/rmic/$(DEPDIR) gnu/java/rmi/server/$(DEPDIR) gnu/java/security/$(DEPDIR) gnu/java/security/action/$(DEPDIR) gnu/java/security/der/$(DEPDIR) gnu/java/security/provider/$(DEPDIR) gnu/java/security/util/$(DEPDIR) gnu/java/security/x509/$(DEPDIR) gnu/java/security/x509/ext/$(DEPDIR) gnu/java/text/$(DEPDIR) gnu/java/util/$(DEPDIR) gnu/java/util/prefs/$(DEPDIR) gnu/regexp/$(DEPDIR) java/applet/$(DEPDIR) java/awt/$(DEPDIR) java/awt/color/$(DEPDIR) java/awt/datatransfer/$(DEPDIR) java/awt/dnd/$(DEPDIR) java/awt/dnd/peer/$(DEPDIR) java/awt/event/$(DEPDIR) java/awt/font/$(DEPDIR) java/awt/geom/$(DEPDIR) java/awt/im/$(DEPDIR) java/awt/im/spi/$(DEPDIR) java/awt/image/$(DEPDIR) java/awt/image/renderable/$(DEPDIR) java/awt/peer/$(DEPDIR) java/awt/print/$(DEPDIR) java/beans/$(DEPDIR) java/beans/beancontext/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/math/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/nio/channels/spi/$(DEPDIR) java/nio/charset/$(DEPDIR) java/nio/charset/spi/$(DEPDIR) java/rmi/$(DEPDIR) java/rmi/activation/$(DEPDIR) java/rmi/dgc/$(DEPDIR) java/rmi/registry/$(DEPDIR) java/rmi/server/$(DEPDIR) java/security/$(DEPDIR) java/security/acl/$(DEPDIR) java/security/cert/$(DEPDIR) java/security/interfaces/$(DEPDIR) java/security/spec/$(DEPDIR) java/sql/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/jar/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/prefs/$(DEPDIR) java/util/regex/$(DEPDIR) java/util/zip/$(DEPDIR) javax/accessibility/$(DEPDIR) javax/crypto/$(DEPDIR) javax/crypto/interfaces/$(DEPDIR) javax/crypto/spec/$(DEPDIR) javax/imageio/$(DEPDIR) javax/imageio/event/$(DEPDIR) javax/imageio/metadata/$(DEPDIR) javax/imageio/spi/$(DEPDIR) javax/imageio/stream/$(DEPDIR) javax/naming/$(DEPDIR) javax/naming/directory/$(DEPDIR) javax/naming/event/$(DEPDIR) javax/naming/ldap/$(DEPDIR) javax/naming/spi/$(DEPDIR) javax/net/$(DEPDIR) javax/net/ssl/$(DEPDIR) javax/print/$(DEPDIR) javax/print/attribute/$(DEPDIR) javax/print/attribute/standard/$(DEPDIR) javax/print/event/$(DEPDIR) javax/security/auth/$(DEPDIR) javax/security/auth/callback/$(DEPDIR) javax/security/auth/login/$(DEPDIR) javax/security/auth/x500/$(DEPDIR) javax/security/cert/$(DEPDIR) javax/security/sasl/$(DEPDIR) javax/sql/$(DEPDIR) javax/swing/$(DEPDIR) javax/swing/border/$(DEPDIR) javax/swing/colorchooser/$(DEPDIR) javax/swing/event/$(DEPDIR) javax/swing/filechooser/$(DEPDIR) javax/swing/plaf/$(DEPDIR) javax/swing/plaf/basic/$(DEPDIR) javax/swing/plaf/metal/$(DEPDIR) javax/swing/table/$(DEPDIR) javax/swing/text/$(DEPDIR) javax/swing/text/html/$(DEPDIR) javax/swing/text/html/parser/$(DEPDIR) javax/swing/tree/$(DEPDIR) javax/swing/undo/$(DEPDIR) javax/transaction/$(DEPDIR) javax/transaction/xa/$(DEPDIR) jni/classpath/$(DEPDIR) jni/gtk-peer/$(DEPDIR) org/ietf/jgss/$(DEPDIR) org/w3c/dom/$(DEPDIR) org/w3c/dom/ranges/$(DEPDIR) org/w3c/dom/traversal/$(DEPDIR) org/xml/sax/$(DEPDIR) org/xml/sax/ext/$(DEPDIR) org/xml/sax/helpers/$(DEPDIR) sysdep/$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR) gnu/awt/$(DEPDIR) gnu/awt/j2d/$(DEPDIR) gnu/awt/xlib/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/awt/$(DEPDIR) gnu/java/awt/image/$(DEPDIR) gnu/java/awt/peer/$(DEPDIR) gnu/java/awt/peer/gtk/$(DEPDIR) gnu/java/beans/$(DEPDIR) gnu/java/beans/editors/$(DEPDIR) gnu/java/beans/info/$(DEPDIR) gnu/java/io/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/lang/reflect/$(DEPDIR) gnu/java/locale/$(DEPDIR) gnu/java/math/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/net/protocol/file/$(DEPDIR) gnu/java/net/protocol/gcjlib/$(DEPDIR) gnu/java/net/protocol/http/$(DEPDIR) gnu/java/net/protocol/jar/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) gnu/java/nio/charset/$(DEPDIR) gnu/java/rmi/$(DEPDIR) gnu/java/rmi/dgc/$(DEPDIR) gnu/java/rmi/registry/$(DEPDIR) gnu/java/rmi/rmic/$(DEPDIR) gnu/java/rmi/server/$(DEPDIR) gnu/java/security/$(DEPDIR) gnu/java/security/action/$(DEPDIR) gnu/java/security/der/$(DEPDIR) gnu/java/security/provider/$(DEPDIR) gnu/java/security/util/$(DEPDIR) gnu/java/security/x509/$(DEPDIR) gnu/java/security/x509/ext/$(DEPDIR) gnu/java/text/$(DEPDIR) gnu/java/util/$(DEPDIR) gnu/java/util/prefs/$(DEPDIR) gnu/regexp/$(DEPDIR) java/applet/$(DEPDIR) java/awt/$(DEPDIR) java/awt/color/$(DEPDIR) java/awt/datatransfer/$(DEPDIR) java/awt/dnd/$(DEPDIR) java/awt/dnd/peer/$(DEPDIR) java/awt/event/$(DEPDIR) java/awt/font/$(DEPDIR) java/awt/geom/$(DEPDIR) java/awt/im/$(DEPDIR) java/awt/im/spi/$(DEPDIR) java/awt/image/$(DEPDIR) java/awt/image/renderable/$(DEPDIR) java/awt/peer/$(DEPDIR) java/awt/print/$(DEPDIR) java/beans/$(DEPDIR) java/beans/beancontext/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/math/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/nio/channels/spi/$(DEPDIR) java/nio/charset/$(DEPDIR) java/nio/charset/spi/$(DEPDIR) java/rmi/$(DEPDIR) java/rmi/activation/$(DEPDIR) java/rmi/dgc/$(DEPDIR) java/rmi/registry/$(DEPDIR) java/rmi/server/$(DEPDIR) java/security/$(DEPDIR) java/security/acl/$(DEPDIR) java/security/cert/$(DEPDIR) java/security/interfaces/$(DEPDIR) java/security/spec/$(DEPDIR) java/sql/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/jar/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/prefs/$(DEPDIR) java/util/regex/$(DEPDIR) java/util/zip/$(DEPDIR) javax/accessibility/$(DEPDIR) javax/crypto/$(DEPDIR) javax/crypto/interfaces/$(DEPDIR) javax/crypto/spec/$(DEPDIR) javax/imageio/$(DEPDIR) javax/imageio/event/$(DEPDIR) javax/imageio/metadata/$(DEPDIR) javax/imageio/spi/$(DEPDIR) javax/imageio/stream/$(DEPDIR) javax/naming/$(DEPDIR) javax/naming/directory/$(DEPDIR) javax/naming/event/$(DEPDIR) javax/naming/ldap/$(DEPDIR) javax/naming/spi/$(DEPDIR) javax/net/$(DEPDIR) javax/net/ssl/$(DEPDIR) javax/print/$(DEPDIR) javax/print/attribute/$(DEPDIR) javax/print/attribute/standard/$(DEPDIR) javax/print/event/$(DEPDIR) javax/security/auth/$(DEPDIR) javax/security/auth/callback/$(DEPDIR) javax/security/auth/login/$(DEPDIR) javax/security/auth/spi/$(DEPDIR) javax/security/auth/x500/$(DEPDIR) javax/security/cert/$(DEPDIR) javax/security/sasl/$(DEPDIR) javax/sql/$(DEPDIR) javax/swing/$(DEPDIR) javax/swing/border/$(DEPDIR) javax/swing/colorchooser/$(DEPDIR) javax/swing/event/$(DEPDIR) javax/swing/filechooser/$(DEPDIR) javax/swing/plaf/$(DEPDIR) javax/swing/plaf/basic/$(DEPDIR) javax/swing/plaf/metal/$(DEPDIR) javax/swing/table/$(DEPDIR) javax/swing/text/$(DEPDIR) javax/swing/text/html/$(DEPDIR) javax/swing/text/html/parser/$(DEPDIR) javax/swing/tree/$(DEPDIR) javax/swing/undo/$(DEPDIR) javax/transaction/$(DEPDIR) javax/transaction/xa/$(DEPDIR) jni/classpath/$(DEPDIR) jni/gtk-peer/$(DEPDIR) org/ietf/jgss/$(DEPDIR) org/w3c/dom/$(DEPDIR) org/w3c/dom/ranges/$(DEPDIR) org/w3c/dom/traversal/$(DEPDIR) org/xml/sax/$(DEPDIR) org/xml/sax/ext/$(DEPDIR) org/xml/sax/helpers/$(DEPDIR) sysdep/$(DEPDIR)\n \t-rm -f Makefile\n distclean-am: clean-am distclean-compile distclean-generic \\\n \tdistclean-libtool distclean-local distclean-tags\n@@ -23633,7 +23660,7 @@ installcheck-am:\n maintainer-clean: maintainer-clean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n \t-rm -rf $(top_srcdir)/autom4te.cache\n-\t-rm -rf ./$(DEPDIR) gnu/awt/$(DEPDIR) gnu/awt/j2d/$(DEPDIR) gnu/awt/xlib/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/awt/$(DEPDIR) gnu/java/awt/image/$(DEPDIR) gnu/java/awt/peer/$(DEPDIR) gnu/java/awt/peer/gtk/$(DEPDIR) gnu/java/beans/$(DEPDIR) gnu/java/beans/editors/$(DEPDIR) gnu/java/beans/info/$(DEPDIR) gnu/java/io/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/lang/reflect/$(DEPDIR) gnu/java/locale/$(DEPDIR) gnu/java/math/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/net/protocol/file/$(DEPDIR) gnu/java/net/protocol/gcjlib/$(DEPDIR) gnu/java/net/protocol/http/$(DEPDIR) gnu/java/net/protocol/jar/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) gnu/java/nio/charset/$(DEPDIR) gnu/java/rmi/$(DEPDIR) gnu/java/rmi/dgc/$(DEPDIR) gnu/java/rmi/registry/$(DEPDIR) gnu/java/rmi/rmic/$(DEPDIR) gnu/java/rmi/server/$(DEPDIR) gnu/java/security/$(DEPDIR) gnu/java/security/action/$(DEPDIR) gnu/java/security/der/$(DEPDIR) gnu/java/security/provider/$(DEPDIR) gnu/java/security/util/$(DEPDIR) gnu/java/security/x509/$(DEPDIR) gnu/java/security/x509/ext/$(DEPDIR) gnu/java/text/$(DEPDIR) gnu/java/util/$(DEPDIR) gnu/java/util/prefs/$(DEPDIR) gnu/regexp/$(DEPDIR) java/applet/$(DEPDIR) java/awt/$(DEPDIR) java/awt/color/$(DEPDIR) java/awt/datatransfer/$(DEPDIR) java/awt/dnd/$(DEPDIR) java/awt/dnd/peer/$(DEPDIR) java/awt/event/$(DEPDIR) java/awt/font/$(DEPDIR) java/awt/geom/$(DEPDIR) java/awt/im/$(DEPDIR) java/awt/im/spi/$(DEPDIR) java/awt/image/$(DEPDIR) java/awt/image/renderable/$(DEPDIR) java/awt/peer/$(DEPDIR) java/awt/print/$(DEPDIR) java/beans/$(DEPDIR) java/beans/beancontext/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/math/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/nio/channels/spi/$(DEPDIR) java/nio/charset/$(DEPDIR) java/nio/charset/spi/$(DEPDIR) java/rmi/$(DEPDIR) java/rmi/activation/$(DEPDIR) java/rmi/dgc/$(DEPDIR) java/rmi/registry/$(DEPDIR) java/rmi/server/$(DEPDIR) java/security/$(DEPDIR) java/security/acl/$(DEPDIR) java/security/cert/$(DEPDIR) java/security/interfaces/$(DEPDIR) java/security/spec/$(DEPDIR) java/sql/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/jar/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/prefs/$(DEPDIR) java/util/regex/$(DEPDIR) java/util/zip/$(DEPDIR) javax/accessibility/$(DEPDIR) javax/crypto/$(DEPDIR) javax/crypto/interfaces/$(DEPDIR) javax/crypto/spec/$(DEPDIR) javax/imageio/$(DEPDIR) javax/imageio/event/$(DEPDIR) javax/imageio/metadata/$(DEPDIR) javax/imageio/spi/$(DEPDIR) javax/imageio/stream/$(DEPDIR) javax/naming/$(DEPDIR) javax/naming/directory/$(DEPDIR) javax/naming/event/$(DEPDIR) javax/naming/ldap/$(DEPDIR) javax/naming/spi/$(DEPDIR) javax/net/$(DEPDIR) javax/net/ssl/$(DEPDIR) javax/print/$(DEPDIR) javax/print/attribute/$(DEPDIR) javax/print/attribute/standard/$(DEPDIR) javax/print/event/$(DEPDIR) javax/security/auth/$(DEPDIR) javax/security/auth/callback/$(DEPDIR) javax/security/auth/login/$(DEPDIR) javax/security/auth/x500/$(DEPDIR) javax/security/cert/$(DEPDIR) javax/security/sasl/$(DEPDIR) javax/sql/$(DEPDIR) javax/swing/$(DEPDIR) javax/swing/border/$(DEPDIR) javax/swing/colorchooser/$(DEPDIR) javax/swing/event/$(DEPDIR) javax/swing/filechooser/$(DEPDIR) javax/swing/plaf/$(DEPDIR) javax/swing/plaf/basic/$(DEPDIR) javax/swing/plaf/metal/$(DEPDIR) javax/swing/table/$(DEPDIR) javax/swing/text/$(DEPDIR) javax/swing/text/html/$(DEPDIR) javax/swing/text/html/parser/$(DEPDIR) javax/swing/tree/$(DEPDIR) javax/swing/undo/$(DEPDIR) javax/transaction/$(DEPDIR) javax/transaction/xa/$(DEPDIR) jni/classpath/$(DEPDIR) jni/gtk-peer/$(DEPDIR) org/ietf/jgss/$(DEPDIR) org/w3c/dom/$(DEPDIR) org/w3c/dom/ranges/$(DEPDIR) org/w3c/dom/traversal/$(DEPDIR) org/xml/sax/$(DEPDIR) org/xml/sax/ext/$(DEPDIR) org/xml/sax/helpers/$(DEPDIR) sysdep/$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR) gnu/awt/$(DEPDIR) gnu/awt/j2d/$(DEPDIR) gnu/awt/xlib/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/awt/$(DEPDIR) gnu/java/awt/image/$(DEPDIR) gnu/java/awt/peer/$(DEPDIR) gnu/java/awt/peer/gtk/$(DEPDIR) gnu/java/beans/$(DEPDIR) gnu/java/beans/editors/$(DEPDIR) gnu/java/beans/info/$(DEPDIR) gnu/java/io/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/lang/reflect/$(DEPDIR) gnu/java/locale/$(DEPDIR) gnu/java/math/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/net/protocol/file/$(DEPDIR) gnu/java/net/protocol/gcjlib/$(DEPDIR) gnu/java/net/protocol/http/$(DEPDIR) gnu/java/net/protocol/jar/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) gnu/java/nio/charset/$(DEPDIR) gnu/java/rmi/$(DEPDIR) gnu/java/rmi/dgc/$(DEPDIR) gnu/java/rmi/registry/$(DEPDIR) gnu/java/rmi/rmic/$(DEPDIR) gnu/java/rmi/server/$(DEPDIR) gnu/java/security/$(DEPDIR) gnu/java/security/action/$(DEPDIR) gnu/java/security/der/$(DEPDIR) gnu/java/security/provider/$(DEPDIR) gnu/java/security/util/$(DEPDIR) gnu/java/security/x509/$(DEPDIR) gnu/java/security/x509/ext/$(DEPDIR) gnu/java/text/$(DEPDIR) gnu/java/util/$(DEPDIR) gnu/java/util/prefs/$(DEPDIR) gnu/regexp/$(DEPDIR) java/applet/$(DEPDIR) java/awt/$(DEPDIR) java/awt/color/$(DEPDIR) java/awt/datatransfer/$(DEPDIR) java/awt/dnd/$(DEPDIR) java/awt/dnd/peer/$(DEPDIR) java/awt/event/$(DEPDIR) java/awt/font/$(DEPDIR) java/awt/geom/$(DEPDIR) java/awt/im/$(DEPDIR) java/awt/im/spi/$(DEPDIR) java/awt/image/$(DEPDIR) java/awt/image/renderable/$(DEPDIR) java/awt/peer/$(DEPDIR) java/awt/print/$(DEPDIR) java/beans/$(DEPDIR) java/beans/beancontext/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/math/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/nio/channels/spi/$(DEPDIR) java/nio/charset/$(DEPDIR) java/nio/charset/spi/$(DEPDIR) java/rmi/$(DEPDIR) java/rmi/activation/$(DEPDIR) java/rmi/dgc/$(DEPDIR) java/rmi/registry/$(DEPDIR) java/rmi/server/$(DEPDIR) java/security/$(DEPDIR) java/security/acl/$(DEPDIR) java/security/cert/$(DEPDIR) java/security/interfaces/$(DEPDIR) java/security/spec/$(DEPDIR) java/sql/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/jar/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/prefs/$(DEPDIR) java/util/regex/$(DEPDIR) java/util/zip/$(DEPDIR) javax/accessibility/$(DEPDIR) javax/crypto/$(DEPDIR) javax/crypto/interfaces/$(DEPDIR) javax/crypto/spec/$(DEPDIR) javax/imageio/$(DEPDIR) javax/imageio/event/$(DEPDIR) javax/imageio/metadata/$(DEPDIR) javax/imageio/spi/$(DEPDIR) javax/imageio/stream/$(DEPDIR) javax/naming/$(DEPDIR) javax/naming/directory/$(DEPDIR) javax/naming/event/$(DEPDIR) javax/naming/ldap/$(DEPDIR) javax/naming/spi/$(DEPDIR) javax/net/$(DEPDIR) javax/net/ssl/$(DEPDIR) javax/print/$(DEPDIR) javax/print/attribute/$(DEPDIR) javax/print/attribute/standard/$(DEPDIR) javax/print/event/$(DEPDIR) javax/security/auth/$(DEPDIR) javax/security/auth/callback/$(DEPDIR) javax/security/auth/login/$(DEPDIR) javax/security/auth/spi/$(DEPDIR) javax/security/auth/x500/$(DEPDIR) javax/security/cert/$(DEPDIR) javax/security/sasl/$(DEPDIR) javax/sql/$(DEPDIR) javax/swing/$(DEPDIR) javax/swing/border/$(DEPDIR) javax/swing/colorchooser/$(DEPDIR) javax/swing/event/$(DEPDIR) javax/swing/filechooser/$(DEPDIR) javax/swing/plaf/$(DEPDIR) javax/swing/plaf/basic/$(DEPDIR) javax/swing/plaf/metal/$(DEPDIR) javax/swing/table/$(DEPDIR) javax/swing/text/$(DEPDIR) javax/swing/text/html/$(DEPDIR) javax/swing/text/html/parser/$(DEPDIR) javax/swing/tree/$(DEPDIR) javax/swing/undo/$(DEPDIR) javax/transaction/$(DEPDIR) javax/transaction/xa/$(DEPDIR) jni/classpath/$(DEPDIR) jni/gtk-peer/$(DEPDIR) org/ietf/jgss/$(DEPDIR) org/w3c/dom/$(DEPDIR) org/w3c/dom/ranges/$(DEPDIR) org/w3c/dom/traversal/$(DEPDIR) org/xml/sax/$(DEPDIR) org/xml/sax/ext/$(DEPDIR) org/xml/sax/helpers/$(DEPDIR) sysdep/$(DEPDIR)\n \t-rm -f Makefile\n maintainer-clean-am: distclean-am maintainer-clean-generic\n "}, {"sha": "01aab81d9c834a5d078d7d7d3a6f50dbb3ed6d0e", "filename": "libjava/gnu/java/security/action/GetSecurityPropertyAction.java", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2Fgnu%2Fjava%2Fsecurity%2Faction%2FGetSecurityPropertyAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2Fgnu%2Fjava%2Fsecurity%2Faction%2FGetSecurityPropertyAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fsecurity%2Faction%2FGetSecurityPropertyAction.java?ref=6917e65713dbc8a8c215097dccd85665544d5e7e", "patch": "@@ -0,0 +1,76 @@\n+/* GetSecurityPropertyAction.java\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.security.action;\n+\n+import java.security.PrivilegedAction;\n+import java.security.Security;\n+\n+/**\n+ * PrivilegedAction implementation that calls Security.getProperty()\n+ * with the property name passed to its constructor.\n+ *\n+ * Example of use:\n+ * <code>\n+ * GetSecurityPropertyAction action = new GetSecurityPropertyAction(\"javax.net.ssl.trustStorePassword\");\n+ * String passwd = AccessController.doPrivileged(action);\n+ * </code>\n+ */\n+public class GetSecurityPropertyAction extends GetPropertyAction\n+{\n+  public GetSecurityPropertyAction()\n+  {\n+  }\n+\n+  public GetSecurityPropertyAction (String propName)\n+  {\n+    super (propName);\n+  }\n+\n+  public GetSecurityPropertyAction(String propName, String defaultValue)\n+  {\n+    super (propName, defaultValue);\n+  }\n+\n+  public Object run()\n+  {\n+    String val = Security.getProperty (name);\n+    if (val == null)\n+      val = value;\n+    return val;\n+  }\n+}"}, {"sha": "4425770d6fadaff0e469813ba2c5a14b6288cb24", "filename": "libjava/javax/security/auth/login/Configuration.java", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2Fjavax%2Fsecurity%2Fauth%2Flogin%2FConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2Fjavax%2Fsecurity%2Fauth%2Flogin%2FConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsecurity%2Fauth%2Flogin%2FConfiguration.java?ref=6917e65713dbc8a8c215097dccd85665544d5e7e", "patch": "@@ -106,4 +106,15 @@ public static synchronized void setConfiguration (Configuration config)\n   public abstract AppConfigurationEntry[] getAppConfigurationEntry (String applicationName);\n \n   public abstract void refresh();\n+\n+  // Package-private methods.\n+  // -------------------------------------------------------------------------\n+\n+  /**\n+   * Get the current configuration, bypassing security checks.\n+   */\n+  static Configuration getConfig()\n+  {\n+    return config;\n+  }\n }"}, {"sha": "aa4d611d98ca186d924bdc1ca22827cb069ae1c5", "filename": "libjava/javax/security/auth/login/LoginContext.java", "status": "modified", "additions": 209, "deletions": 0, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2Fjavax%2Fsecurity%2Fauth%2Flogin%2FLoginContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2Fjavax%2Fsecurity%2Fauth%2Flogin%2FLoginContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsecurity%2Fauth%2Flogin%2FLoginContext.java?ref=6917e65713dbc8a8c215097dccd85665544d5e7e", "patch": "@@ -38,7 +38,216 @@\n \n package javax.security.auth.login;\n \n+import gnu.java.security.action.GetSecurityPropertyAction;\n+\n+import java.security.AccessController;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import javax.security.auth.Subject;\n+import javax.security.auth.callback.CallbackHandler;\n+import javax.security.auth.spi.LoginModule;\n+\n public class LoginContext\n {\n \n+  private static final String OTHER = \"other\";\n+\n+  private final String name;\n+  private final CallbackHandler cbHandler;\n+  private final Subject subject;\n+  private final AppConfigurationEntry[] entries;\n+  private final LoginModule[] modules;\n+  private final Map sharedState;\n+\n+  public LoginContext (final String name) throws LoginException\n+  {\n+    this (name, new Subject(), defaultHandler());\n+  }\n+\n+  public LoginContext (final String name, final CallbackHandler cbHandler)\n+    throws LoginException\n+  {\n+    this (name, new Subject(), cbHandler);\n+  }\n+\n+  public LoginContext (final String name, final Subject subject)\n+    throws LoginException\n+  {\n+    this (name, subject, defaultHandler());\n+  }\n+\n+  public LoginContext (final String name, final Subject subject,\n+                       final CallbackHandler cbHandler)\n+    throws LoginException\n+  {\n+    Configuration config = Configuration.getConfig();\n+    AppConfigurationEntry[] entries = config.getAppConfigurationEntry (name);\n+    if (entries == null)\n+      entries = config.getAppConfigurationEntry (OTHER);\n+    if (entries == null)\n+      throw new LoginException (\"no configured modules for application \"\n+                                + name);\n+    this.entries = entries;\n+    modules = new LoginModule[entries.length];\n+    sharedState = new HashMap();\n+    for (int i = 0; i < entries.length; i++)\n+      modules[i] = lookupModule (entries[i], subject, sharedState);\n+    this.name = name;\n+    this.subject = subject;\n+    this.cbHandler = cbHandler;\n+  }\n+\n+  /**\n+   * Returns the authenticated subject, or the parameter passed to one\n+   * of the constructors. <code>null</code> is returned if the previous\n+   * login attempt failed and there was no subject provided.\n+   *\n+   * @return The subject, or null.\n+   */\n+  public Subject getSubject()\n+  {\n+    return subject;\n+  }\n+\n+  /**\n+   * Logs a subject in, using all login modules configured for this\n+   * application. This method will call the {@link LoginModule#login()}\n+   * method of each module configured for this application, stopping\n+   * if a REQUISITE module fails or if a SUFFICIENT module succeeds. If\n+   * the overall login attempt fails, a {@link LoginException} will be\n+   * thrown.\n+   *\n+   * @throws LoginException If logging in fails.\n+   */\n+  public void login() throws LoginException\n+  {\n+    boolean failure = false;\n+    for (int i = 0; i < modules.length; i++)\n+      {\n+        try\n+          {\n+            boolean result = modules[i].login();\n+            if (!result)\n+              {\n+                if (entries[i].getControlFlag() ==\n+                    AppConfigurationEntry.LoginModuleControlFlag.REQUISITE)\n+                  throw new LoginException (\"REQUISITE module \" + entries[i].getLoginModuleName()\n+                                            + \" failed\");\n+                else if (entries[i].getControlFlag() ==\n+                         AppConfigurationEntry.LoginModuleControlFlag.REQUIRED)\n+                  failure = true;\n+              }\n+            else\n+              {\n+                if (entries[i].getControlFlag() ==\n+                    AppConfigurationEntry.LoginModuleControlFlag.SUFFICIENT)\n+                  break;\n+              }\n+          }\n+        catch (LoginException le)\n+          {\n+            if (entries[i].getControlFlag() !=\n+                AppConfigurationEntry.LoginModuleControlFlag.REQUISITE)\n+              continue;\n+            for (int j = 0; j < modules.length; j++)\n+              modules[i].abort();\n+            throw le;\n+          }\n+      }\n+    if (failure)\n+      throw new LoginException (\"not all REQUIRED modules succeeded\");\n+\n+    for (int i = 0; i < modules.length; i++)\n+      modules[i].commit();\n+  }\n+\n+  /**\n+   * Logs a subject out, cleaning up any state that may be in memory.\n+   *\n+   * @throws LoginException If logging out fails.\n+   */\n+  public void logout() throws LoginException\n+  {\n+    for (int i = 0; i < modules.length; i++)\n+      modules[i].logout();\n+  }\n+\n+  // Own methods.\n+\n+  /**\n+   * Fetch the default callback handler, based on the\n+   * auth.login.defaultCallbackHandler property, or null if it is not\n+   * set.\n+   */\n+  private static CallbackHandler defaultHandler()\n+  {\n+    GetSecurityPropertyAction act =\n+      new GetSecurityPropertyAction (\"auth.login.defaultCallbackHandler\");\n+    String classname = (String) AccessController.doPrivileged (act);\n+    if (classname != null)\n+      {\n+        try\n+          {\n+            return (CallbackHandler) Class.forName (classname).newInstance();\n+          }\n+        catch (ClassNotFoundException cnfe)\n+          {\n+            return null;\n+          }\n+        catch (ClassCastException cce)\n+          {\n+            return null;\n+          }\n+        catch (IllegalAccessException iae)\n+          {\n+            return null;\n+          }\n+        catch (InstantiationException ie)\n+          {\n+            return null;\n+          }\n+      }\n+    return null;\n+  }\n+\n+  private LoginModule lookupModule (AppConfigurationEntry entry,\n+                                    Subject subject, Map sharedState)\n+    throws LoginException\n+  {\n+    LoginModule module = null;\n+    Exception cause = null;\n+    try\n+      {\n+        module = (LoginModule) Class.forName (entry.getLoginModuleName()).newInstance();\n+      }\n+    catch (ClassNotFoundException cnfe)\n+      {\n+        cause = cnfe;\n+      }\n+    catch (ClassCastException cce)\n+      {\n+        cause = cce;\n+      }\n+    catch (IllegalAccessException iae)\n+      {\n+        cause = iae;\n+      }\n+    catch (InstantiationException ie)\n+      {\n+        cause = ie;\n+      }\n+\n+    if (cause != null)\n+      {\n+        LoginException le = new LoginException (\"could not load module \"\n+                                                + entry.getLoginModuleName());\n+        le.initCause (cause);\n+        throw le;\n+      }\n+\n+    module.initialize (subject, cbHandler, sharedState, entry.getOptions());\n+    return module;\n+  }\n }"}, {"sha": "4f9cc4017d6ee857cbb3c1786100eed3e3d4bf54", "filename": "libjava/javax/security/auth/spi/LoginModule.java", "status": "added", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2Fjavax%2Fsecurity%2Fauth%2Fspi%2FLoginModule.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6917e65713dbc8a8c215097dccd85665544d5e7e/libjava%2Fjavax%2Fsecurity%2Fauth%2Fspi%2FLoginModule.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsecurity%2Fauth%2Fspi%2FLoginModule.java?ref=6917e65713dbc8a8c215097dccd85665544d5e7e", "patch": "@@ -0,0 +1,122 @@\n+/* LoginModule.java -- interface for login implementations.\n+   Copyright (C) 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.security.auth.spi;\n+\n+import java.util.Map;\n+\n+import javax.security.auth.Subject;\n+import javax.security.auth.callback.CallbackHandler;\n+import javax.security.auth.login.LoginException;\n+\n+/**\n+ * The base interface for login methods in the Java Authentication and\n+ * Authorization Service (JAAS).\n+ *\n+ * <p>This interface is used by service providers that implement login\n+ * services, and is used internally by the JAAS system. It is not useful\n+ * to application programmers, who should use the {@link\n+ * javax.security.auth.login.LoginContext} instead.\n+ *\n+ * @author Casey Marshall (csm@gnu.org)\n+ */\n+public interface LoginModule\n+{\n+  /**\n+   * Abort the current login attempt. This is called after {@link #login()}\n+   * if the overall login attempt fails (that is, if one of the other login\n+   * modules that is REQUIRED or REQUISITE fails). This method should clean\n+   * up this module's saved state, if any.\n+   *\n+   * @return True if the abort succeeded, or false if this module should\n+   * be ignored.\n+   * @throws LoginException If the abort fails.\n+   */\n+  boolean abort() throws LoginException;\n+\n+  /**\n+   * Commit the current login attempt. This is called after {@link\n+   * #login()} if the overall login attempt succeeds (that is, all\n+   * methods have satisfied all REQUIRED, REQUISITE, SUFFICIENT and\n+   * OPTIONAL module requirements).\n+   *\n+   * @return True if the commit succeeded, or false if this module\n+   * should be ignored.\n+   * @throws LoginException If the commit fails.\n+   */\n+  boolean commit() throws LoginException;\n+\n+  /**\n+   * Initializes this login module. This method is called when the\n+   * instance implementing this interface is instantiated, and should\n+   * perform any initialization based on the given parameters.\n+   * Implementations should ignore state variables and options they do\n+   * not recognize.\n+   *\n+   * @param subject The subject being authenticated.\n+   * @param handler The callback handler for user input.\n+   * @param sharedState A mapping that is shared between all login\n+   * modules.\n+   * @param options A mapping of options given to this module.\n+   */\n+  void initialize(Subject subject, CallbackHandler handler,\n+                  Map sharedState, Map options);\n+\n+  /**\n+   * Authenticates a subject to the system. This is the primary\n+   * mechanism by which subjects are authenticated, and typically\n+   * implementations will ask for credentials (for example, a user\n+   * name and password) which will then be verified.\n+   *\n+   * @return True if the subject was authenticated, or false if this\n+   * module should be ignored.\n+   * @throws LoginException If this method fails.\n+   */\n+  boolean login() throws LoginException;\n+\n+  /**\n+   * Logs a subject out. This is primarily used for modules that must\n+   * destroy or remove the authentication state associated with a\n+   * logged-in subject.\n+   *\n+   * @return True if the logout succeeds, or false if this module\n+   * should be ignored.\n+   * @throws LoginException If this method fails.\n+   */\n+  boolean logout() throws LoginException;\n+}"}]}