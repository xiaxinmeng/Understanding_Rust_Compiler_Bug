{"sha": "70a51bdac188747940e46a6d88e68b2a2c646f07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBhNTFiZGFjMTg4NzQ3OTQwZTQ2YTZkODhlNjhiMmEyYzY0NmYwNw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-02-06T04:27:53Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-02-06T04:27:53Z"}, "message": "Makefile.in (call.o): Depend on $(EXPR_H).\n\n\t* Makefile.in (call.o): Depend on $(EXPR_H).\n\n\t* call.c: Include \"expr.h\".\n\n\t* class.c (dump_class_hierarchy): Add prototype.\n\n\t* search.c (dfs_get_pure_virtuals): Likewise.\n\nFrom-SVN: r31811", "tree": {"sha": "fec871e4b0d870523fe90c6f0412b15575a9d33c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fec871e4b0d870523fe90c6f0412b15575a9d33c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70a51bdac188747940e46a6d88e68b2a2c646f07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a51bdac188747940e46a6d88e68b2a2c646f07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a51bdac188747940e46a6d88e68b2a2c646f07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a51bdac188747940e46a6d88e68b2a2c646f07/comments", "author": null, "committer": null, "parents": [{"sha": "c69916605c40755b50a2b6db59a1963093236f04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c69916605c40755b50a2b6db59a1963093236f04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c69916605c40755b50a2b6db59a1963093236f04"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "7192d7d00919d0c320384d6f5d3a09e6c190d350", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a51bdac188747940e46a6d88e68b2a2c646f07/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a51bdac188747940e46a6d88e68b2a2c646f07/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=70a51bdac188747940e46a6d88e68b2a2c646f07", "patch": "@@ -1,3 +1,13 @@\n+2000-02-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (call.o): Depend on $(EXPR_H).\n+\n+\t* call.c: Include \"expr.h\".\n+\n+\t* class.c (dump_class_hierarchy): Add prototype.\n+\n+\t* search.c (dfs_get_pure_virtuals): Likewise.\n+\n 2000-02-1  Ulrich Drepper  <drepper@redhat.com>\n \n \t* parse.y (simple_stmt): Allow :: token in asm parameter list."}, {"sha": "a72e7b3e92e1976fcc179e88c6fe705075d5bafe", "filename": "gcc/cp/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a51bdac188747940e46a6d88e68b2a2c646f07/gcc%2Fcp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a51bdac188747940e46a6d88e68b2a2c646f07/gcc%2Fcp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMakefile.in?ref=70a51bdac188747940e46a6d88e68b2a2c646f07", "patch": "@@ -262,7 +262,7 @@ typeck.o : typeck.c $(CXX_TREE_H) $(srcdir)/../flags.h $(RTL_H) \\\n class.o : class.c $(CXX_TREE_H) $(srcdir)/../flags.h \\\n   $(srcdir)/../toplev.h $(RTL_H)\n call.o : call.c $(CXX_TREE_H) $(srcdir)/../flags.h \\\n-  $(srcdir)/../toplev.h $(RTL_H)\n+  $(srcdir)/../toplev.h $(RTL_H) $(EXPR_H)\n friend.o : friend.c $(CXX_TREE_H) $(srcdir)/../flags.h $(RTL_H) \\\n   $(srcdir)/../toplev.h\n init.o : init.c $(CXX_TREE_H) $(srcdir)/../flags.h $(RTL_H) \\"}, {"sha": "241c0ec071073a7209d0d5861cb12f4d9bc904cc", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a51bdac188747940e46a6d88e68b2a2c646f07/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a51bdac188747940e46a6d88e68b2a2c646f07/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=70a51bdac188747940e46a6d88e68b2a2c646f07", "patch": "@@ -32,6 +32,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"rtl.h\"\n #include \"toplev.h\"\n #include \"defaults.h\"\n+#include \"expr.h\"\n \n #include \"obstack.h\"\n #define obstack_chunk_alloc xmalloc"}, {"sha": "4351de58b1d3c0b4219de049704b40c902712bf0", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a51bdac188747940e46a6d88e68b2a2c646f07/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a51bdac188747940e46a6d88e68b2a2c646f07/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=70a51bdac188747940e46a6d88e68b2a2c646f07", "patch": "@@ -150,6 +150,7 @@ static tree dfs_find_final_overrider PARAMS ((tree, void *));\n static tree find_final_overrider PARAMS ((tree, tree, tree));\n static tree dfs_find_base PARAMS ((tree, void *));\n static int make_new_vtable PARAMS ((tree, tree));\n+extern void dump_class_hierarchy PARAMS ((tree, int));\n \n /* Variables shared between class.c and call.c.  */\n "}, {"sha": "87e8f3ea697e4428a8063c017a8cb1aa7eb02e68", "filename": "gcc/cp/search.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a51bdac188747940e46a6d88e68b2a2c646f07/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a51bdac188747940e46a6d88e68b2a2c646f07/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=70a51bdac188747940e46a6d88e68b2a2c646f07", "patch": "@@ -147,6 +147,7 @@ static void fixup_all_virtual_upcast_offsets PARAMS ((tree, tree));\n static tree dfs_mark_primary_bases PARAMS ((tree, void *));\n static tree get_shared_vbase_if_not_primary PARAMS ((tree, void *));\n static tree dfs_find_vbase_instance PARAMS ((tree, void *));\n+static tree dfs_get_pure_virtuals PARAMS ((tree, void *));\n \n /* Allocate a level of searching.  */\n "}]}