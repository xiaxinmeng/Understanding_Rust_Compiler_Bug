{"sha": "dd30d93f1a3ead7b814c1b179cf7197e4bf1e183", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzMGQ5M2YxYTNlYWQ3YjgxNGMxYjE3OWNmNzE5N2U0YmYxZTE4Mw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2020-08-05T18:53:44Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2020-08-05T18:54:48Z"}, "message": "Added test case to make sure that legal cases still pass.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/96469\n\t* gfortran.dg/do_check_14.f90: New test.", "tree": {"sha": "c018c2ac506ab3da9b7be589360d2b27b6f98617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c018c2ac506ab3da9b7be589360d2b27b6f98617"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd30d93f1a3ead7b814c1b179cf7197e4bf1e183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd30d93f1a3ead7b814c1b179cf7197e4bf1e183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd30d93f1a3ead7b814c1b179cf7197e4bf1e183", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd30d93f1a3ead7b814c1b179cf7197e4bf1e183/comments", "author": null, "committer": null, "parents": [{"sha": "27eac9ee6137a6b5ae693b54cafa22bdc0cbcd5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27eac9ee6137a6b5ae693b54cafa22bdc0cbcd5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27eac9ee6137a6b5ae693b54cafa22bdc0cbcd5a"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "43425f19deca11384ea57b27c4cd7931fc3c5a33", "filename": "gcc/testsuite/gfortran.dg/do_check_14.f90", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd30d93f1a3ead7b814c1b179cf7197e4bf1e183/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd30d93f1a3ead7b814c1b179cf7197e4bf1e183/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_14.f90?ref=dd30d93f1a3ead7b814c1b179cf7197e4bf1e183", "patch": "@@ -0,0 +1,56 @@\n+! { dg-do compile }\n+! PR fortran/96469 - make sure that all legal variants pass.\n+\n+module x\n+  implicit none\n+contains\n+  subroutine sub_intent_in(i)\n+    integer, intent(in) :: i\n+  end subroutine sub_intent_in\n+  subroutine sub_intent_unspec(i)\n+    integer :: i\n+  end subroutine sub_intent_unspec\n+  integer function fcn_intent_in(i)\n+    integer, intent(in) :: i\n+    fcn_intent_in = i + 42\n+  end function fcn_intent_in\n+  integer function fcn_intent_unspec (i)\n+    integer :: i\n+    fcn_intent_unspec = i + 42\n+  end function fcn_intent_unspec\n+end module x\n+\n+program main\n+  use x\n+  implicit none\n+  integer :: i1, i2, i3, i4\n+  integer :: k, l\n+  do i1=1,10\n+     call sub1\n+  end do\n+  do i2=1,10\n+     call sub2\n+  end do\n+  do i3 = 1,10\n+     k = fcn3()\n+  end do\n+  do i4=1,10\n+     l = fcn4()\n+  end do\n+contains\n+  subroutine sub1\n+    call sub_intent_in (i1)\n+  end subroutine sub1\n+  subroutine sub2\n+    integer :: m\n+    m = fcn_intent_in (i2)\n+    print *,m\n+  end subroutine sub2\n+  integer function fcn3()\n+    call sub_intent_unspec (i3)\n+    fcn3 = 42\n+  end function fcn3\n+  integer function fcn4()\n+    fcn4 = fcn_intent_unspec (i4)\n+  end function fcn4\n+end program main"}]}