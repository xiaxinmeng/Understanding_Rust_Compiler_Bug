{"sha": "a0e99d5bb741d3db74a67d492f47b28217fbf88a", "node_id": "C_kwDOANBUbNoAKGEwZTk5ZDViYjc0MWQzZGI3NGE2N2Q0OTJmNDdiMjgyMTdmYmY4OGE", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-11-20T23:35:22Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-11-20T23:35:22Z"}, "message": "Fix looping flag discovery in ipa-pure-const\n\nThe testcase shows situation where there is non-trivial cycle in the callgraph\ninvolving a noreturn call.  This cycle is important for const function discovery\nbut not important for pure.  IPA pure const uses same strongly connected\ncomponents for both propagations which makes it to get suboptimal result\n(does not detect the pure flag). However local pure const gets the situation\nright becaue it processes functions in right order.  This hits rarely\nexecuted code in propagate_pure_const that merge results with previously\nknown state that has long standing bug in it that makes it to throw away\nthe looping flag.\n\nBootstrapped/regtested x86_64-linux.\n\ngcc/ChangeLog:\n\n2021-11-21  Jan Hubicka  <hubicka@ucw.cz>\n\n\tPR ipa/103052\n\t* ipa-pure-const.c (propagate_pure_const): Fix merging of loping flag.\n\ngcc/testsuite/ChangeLog:\n\n2021-11-21  Jan Hubicka  <hubicka@ucw.cz>\n\n\tPR ipa/103052\n\t* gcc.c-torture/execute/pr103052.c: New test.", "tree": {"sha": "f4977c5265e5b8e669205985682fb8819e1ce5a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4977c5265e5b8e669205985682fb8819e1ce5a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0e99d5bb741d3db74a67d492f47b28217fbf88a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0e99d5bb741d3db74a67d492f47b28217fbf88a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0e99d5bb741d3db74a67d492f47b28217fbf88a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0e99d5bb741d3db74a67d492f47b28217fbf88a/comments", "author": null, "committer": null, "parents": [{"sha": "7950c96ca667ddaab9d6e894da3958ebc2e2dccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7950c96ca667ddaab9d6e894da3958ebc2e2dccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7950c96ca667ddaab9d6e894da3958ebc2e2dccb"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "fea8b08c4eb7fc673eb4fddb6d902032e5b865e5", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e99d5bb741d3db74a67d492f47b28217fbf88a/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e99d5bb741d3db74a67d492f47b28217fbf88a/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=a0e99d5bb741d3db74a67d492f47b28217fbf88a", "patch": "@@ -1782,9 +1782,9 @@ propagate_pure_const (void)\n \t  if (w_l->state_previously_known != IPA_NEITHER\n \t      && this_state > w_l->state_previously_known)\n \t    {\n-              this_state = w_l->state_previously_known;\n \t      if (this_state == IPA_NEITHER)\n-\t        this_looping = w_l->looping_previously_known;\n+\t\tthis_looping = w_l->looping_previously_known;\n+\t      this_state = w_l->state_previously_known;\n \t    }\n \t  if (!this_looping && self_recursive_p (w))\n \t    this_looping = true;"}, {"sha": "bef8674a43c71e8f8e59bdef0ce5e678471d5681", "filename": "gcc/testsuite/gcc.c-torture/execute/pr103052.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e99d5bb741d3db74a67d492f47b28217fbf88a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr103052.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e99d5bb741d3db74a67d492f47b28217fbf88a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr103052.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr103052.c?ref=a0e99d5bb741d3db74a67d492f47b28217fbf88a", "patch": "@@ -0,0 +1,35 @@\n+static void js_error(void);\n+static int top;\n+static void js_throw(void)\n+{\n+\t__builtin_exit(0);\n+}\n+\n+// LOCATION A -- if js_pop is here, the bug is present\n+static void js_pop(void)\n+{\n+\tif (++top > 100)\n+\t\tjs_error();\n+}\n+\n+static void jsC_error(const char *v)\n+{\n+\tif (v[0] == 0)\n+\t\tjs_error();\n+\tjs_throw();\n+}\n+static void checkfutureword(const char *exp)\n+{\n+\tif (!__builtin_strcmp(exp, \"const\"))\n+\t\tjsC_error(\"boom\");\n+}\n+static void js_error(void) {\n+\tcheckfutureword(\"foo\");\n+\tcheckfutureword(\"bar\");\n+\tjs_pop();\n+}\n+int main(void)\n+{\n+\tcheckfutureword(\"const\");\n+\t__builtin_abort ();\n+}"}]}