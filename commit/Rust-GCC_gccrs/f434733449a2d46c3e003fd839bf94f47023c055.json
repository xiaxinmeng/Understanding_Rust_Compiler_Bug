{"sha": "f434733449a2d46c3e003fd839bf94f47023c055", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQzNDczMzQ0OWEyZDQ2YzNlMDAzZmQ4MzliZjk0ZjQ3MDIzYzA1NQ==", "commit": {"author": {"name": "Zydrunas Gimbutas", "email": "gimbutas@cims.nyu.edu", "date": "2012-01-16T18:22:16Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2012-01-16T18:22:16Z"}, "message": "re PR fortran/48426 ([patch] Quad precision promotion)\n\n2012-01-16  Zydrunas Gimbutas  <gimbutas@cims.nyu.edu>\n\t    Andreas Kloeckner  <kloeckner@cims.nyu.edu>\n\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/48426\n\t* gfortran.h (gfc_option_t): Add members flag_*_kind to store kind.\n\t* lang.opt: Add options -freal-4-real-8, -freal-4-real-10,\n\t-freal-4-real-16, -freal-8-real-4, -freal-8-real-10, -freal-8-real-16\n\tand -finteger-4-integer-8. User-desired type conversion information.\n\t* decl.c (gfc_match_old_kind_spec,kind_expr): Type conversions\n\tin declaration parsing.\n\t* trans-types.c (gfc_init_kinds): User-specified type conversion\n\tchecked for current backend.\n\t* primary.c (match_integer_constant,match_real_constant): Implement\n\ttype conversion in constant parsing.\n\t* options.c (gfc_init_options,gfc_handle_option): Translate input\n\toptions to flags in internal options data structure.\n\t* invoke.texi: Document new options.  Re-order options in Options\n\tsummary section.\n\nFrom-SVN: r183217", "tree": {"sha": "cf8663a9b800278ec15ee8247c9d42a68cba8a07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf8663a9b800278ec15ee8247c9d42a68cba8a07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f434733449a2d46c3e003fd839bf94f47023c055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f434733449a2d46c3e003fd839bf94f47023c055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f434733449a2d46c3e003fd839bf94f47023c055", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f434733449a2d46c3e003fd839bf94f47023c055/comments", "author": null, "committer": null, "parents": [{"sha": "866e6d1bc163f73aebee6db5eb107fd2c5631543", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/866e6d1bc163f73aebee6db5eb107fd2c5631543", "html_url": "https://github.com/Rust-GCC/gccrs/commit/866e6d1bc163f73aebee6db5eb107fd2c5631543"}], "stats": {"total": 380, "additions": 313, "deletions": 67}, "files": [{"sha": "7f3fad2fe0ad0b93de60ddfe816e20bbff08c0a4", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 57, "deletions": 3, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=f434733449a2d46c3e003fd839bf94f47023c055", "patch": "@@ -1,5 +1,5 @@\n /* Declaration statement matcher\n-   Copyright (C) 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   Copyright (C) 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n@@ -1572,7 +1572,8 @@ build_struct (const char *name, gfc_charlen *cl, gfc_expr **init,\n \n   /* Should this ever get more complicated, combine with similar section\n      in add_init_expr_to_sym into a separate function.  */\n-  if (c->ts.type == BT_CHARACTER && !c->attr.pointer && c->initializer && c->ts.u.cl\n+  if (c->ts.type == BT_CHARACTER && !c->attr.pointer && c->initializer\n+      && c->ts.u.cl\n       && c->ts.u.cl->length && c->ts.u.cl->length->expr_type == EXPR_CONSTANT)\n     {\n       int len;\n@@ -2101,6 +2102,33 @@ gfc_match_old_kind_spec (gfc_typespec *ts)\n \t  return MATCH_ERROR;\n \t}\n       ts->kind /= 2;\n+\n+    }\n+\n+  if (ts->type == BT_INTEGER && ts->kind == 4 && gfc_option.flag_integer4_kind == 8)\n+    ts->kind = 8;\n+\n+  if (ts->type == BT_REAL || ts->type == BT_COMPLEX)\n+    {\n+      if (ts->kind == 4)\n+\t{\n+\t  if (gfc_option.flag_real4_kind == 8)\n+\t    ts->kind =  8;\n+\t  if (gfc_option.flag_real4_kind == 10)\n+\t    ts->kind = 10;\n+\t  if (gfc_option.flag_real4_kind == 16)\n+\t    ts->kind = 16;\n+\t}\n+\n+      if (ts->kind == 8)\n+\t{\n+\t  if (gfc_option.flag_real8_kind == 4)\n+\t    ts->kind = 4;\n+\t  if (gfc_option.flag_real8_kind == 10)\n+\t    ts->kind = 10;\n+\t  if (gfc_option.flag_real8_kind == 16)\n+\t    ts->kind = 16;\n+\t}\n     }\n \n   if (gfc_validate_kind (ts->type, ts->kind, true) < 0)\n@@ -2246,7 +2274,33 @@ gfc_match_kind_spec (gfc_typespec *ts, bool kind_expr_only)\n \n   if(m == MATCH_ERROR)\n      gfc_current_locus = where;\n-  \n+\n+  if (ts->type == BT_INTEGER && ts->kind == 4 && gfc_option.flag_integer4_kind == 8)\n+    ts->kind =  8;\n+\n+  if (ts->type == BT_REAL || ts->type == BT_COMPLEX)\n+    {\n+      if (ts->kind == 4)\n+\t{\n+\t  if (gfc_option.flag_real4_kind == 8)\n+\t    ts->kind =  8;\n+\t  if (gfc_option.flag_real4_kind == 10)\n+\t    ts->kind = 10;\n+\t  if (gfc_option.flag_real4_kind == 16)\n+\t    ts->kind = 16;\n+\t}\n+\n+      if (ts->kind == 8)\n+\t{\n+\t  if (gfc_option.flag_real8_kind == 4)\n+\t    ts->kind = 4;\n+\t  if (gfc_option.flag_real8_kind == 10)\n+\t    ts->kind = 10;\n+\t  if (gfc_option.flag_real8_kind == 16)\n+\t    ts->kind = 16;\n+\t}\n+    }\n+\n   /* Return what we know from the test(s).  */\n   return m;\n "}, {"sha": "23c16ba77455becd0f0be8d4205241dae9813a85", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=f434733449a2d46c3e003fd839bf94f47023c055", "patch": "@@ -2221,6 +2221,9 @@ typedef struct\n   int flag_default_double;\n   int flag_default_integer;\n   int flag_default_real;\n+  int flag_integer4_kind;\n+  int flag_real4_kind;\n+  int flag_real8_kind;\n   int flag_dollar_ok;\n   int flag_underscoring;\n   int flag_second_underscore;"}, {"sha": "410da2c4ecb8966d09e2b7c8c47ac357123ee4c8", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 83, "deletions": 50, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=f434733449a2d46c3e003fd839bf94f47023c055", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+@c Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n @c Free Software Foundation, Inc.\n @c This is part of the GNU Fortran manual.   \n @c For copying conditions, see the file gfortran.texi.\n@@ -66,7 +66,8 @@ GNU Fortran.\n @c man begin DESCRIPTION\n \n The @command{gfortran} command supports all the options supported by the\n-@command{gcc} command.  Only options specific to GNU Fortran are documented here.\n+@command{gcc} command.  Only options specific to GNU Fortran are documented\n+here.\n \n @xref{Invoking GCC,,GCC Command Options,gcc,Using the GNU Compiler\n Collection (GCC)}, for information\n@@ -115,37 +116,46 @@ by type.  Explanations are in the following sections.\n @table @emph\n @item Fortran Language Options\n @xref{Fortran Dialect Options,,Options controlling Fortran dialect}.\n-@gccoptlist{-fall-intrinsics  -ffree-form  -fno-fixed-form @gol\n--fdollar-ok  -fimplicit-none  -fmax-identifier-length @gol\n--std=@var{std} -fd-lines-as-code  -fd-lines-as-comments @gol\n--ffixed-line-length-@var{n}  -ffixed-line-length-none @gol\n--ffree-line-length-@var{n}  -ffree-line-length-none @gol\n--fdefault-double-8  -fdefault-integer-8  -fdefault-real-8 @gol\n--fcray-pointer  -fopenmp  -fno-range-check -fbackslash -fmodule-private}\n+@gccoptlist{-fall-intrinsics -fbackslash -fcray-pointer -fd-lines-as-code @gol\n+-fd-lines-as-comments -fdefault-double-8 -fdefault-integer-8 @gol\n+-fdefault-real-8 -fdollar-ok -ffixed-line-length-@var{n} @gol\n+-ffixed-line-length-none -ffree-form -ffree-line-length-@var{n} @gol\n+-ffree-line-length-none -fimplicit-none -finteger-4-integer-8 @gol\n+-fmax-identifier-length -fmodule-private -fno-fixed-form -fno-range-check @gol\n+-fopenmp -freal-4-real-10 -freal-4-real-16 -freal-4-real-8 @gol\n+-freal-8-real-10 -freal-8-real-16 -freal-8-real-4 -std=@var{std}\n+}\n \n @item Preprocessing Options\n @xref{Preprocessing Options,,Enable and customize preprocessing}.\n-@gccoptlist{-cpp -dD -dI -dM -dN -dU -fworking-directory @gol\n--imultilib @var{dir} -iprefix @var{file} -isysroot @var{dir} @gol\n--iquote -isystem @var{dir} -nocpp -nostdinc -undef @gol\n--A@var{question}=@var{answer} -A-@var{question}@r{[}=@var{answer}@r{]} @gol\n--C -CC -D@var{macro}@r{[}=@var{defn}@r{]} -U@var{macro} -H -P}\n+@gccoptlist{-A-@var{question}@r{[}=@var{answer}@r{]}\n+-A@var{question}=@var{answer} -C -CC -D@var{macro}@r{[}=@var{defn}@r{]}\n+-H -P @gol\n+-U@var{macro} -cpp -dD -dI -dM -dN -dU -fworking-directory\n+-imultilib @var{dir} @gol\n+-iprefix @var{file} -iquote -isysroot @var{dir} -isystem @var{dir} -nocpp \n+-nostdinc @gol\n+-undef\n+}\n \n @item Error and Warning Options\n @xref{Error and Warning Options,,Options to request or suppress errors\n and warnings}.\n-@gccoptlist{-fmax-errors=@var{n}\n--fsyntax-only -pedantic -pedantic-errors -Wall @gol\n--Waliasing -Wampersand -Warray-bounds -Wcharacter-truncation @gol\n--Wconversion -Wimplicit-interface -Wimplicit-procedure -Wline-truncation @gol\n--Wintrinsics-std -Wreal-q-constant -Wsurprising -Wno-tabs -Wunderflow @gol\n--Wunused-parameter -Wintrinsic-shadow -Wno-align-commons @gol\n--Wfunction-elimination}\n+@gccoptlist{-Waliasing -Wall -Wampersand -Warray-bounds\n+-Wcharacter-truncation @gol\n+-Wconversion -Wfunction-elimination -Wimplicit-interface @gol\n+-Wimplicit-procedure -Wintrinsic-shadow -Wintrinsics-std @gol\n+-Wline-truncation -Wno-align-commons -Wno-tabs -Wreal-q-constant @gol\n+-Wsurprising -Wunderflow -Wunused-parameter -fmax-errors=@var{n}\n+-fsyntax-only @gol\n+-pedantic -pedantic-errors\n+}\n \n @item Debugging Options\n @xref{Debugging Options,,Options for debugging your program or GNU Fortran}.\n-@gccoptlist{-fdump-fortran-original  -fdump-fortran-optimized @gol\n--ffpe-trap=@var{list} -fbacktrace -fdump-parse-tree}\n+@gccoptlist{-fbacktrace -fdump-fortran-optimized -fdump-fortran-original @gol\n+-fdump-parse-tree -ffpe-trap=@var{list}\n+}\n \n @item Directory Options\n @xref{Directory Options,,Options for directory search}.\n@@ -157,39 +167,29 @@ and warnings}.\n \n @item Runtime Options\n @xref{Runtime Options,,Options for influencing runtime behavior}.\n-@gccoptlist{-fconvert=@var{conversion}  -fno-range-check\n--frecord-marker=@var{length} @gol  -fmax-subrecord-length=@var{length}\n--fsign-zero}\n+@gccoptlist{-fconvert=@var{conversion} -fmax-subrecord-length=@var{length}\n+-fno-range-check @gol\n+-frecord-marker=@var{length} -fsign-zero\n+}\n \n @item Code Generation Options\n @xref{Code Gen Options,,Options for code generation conventions}.\n-@gccoptlist{-fno-automatic  -ff2c  -fno-underscoring @gol\n--fno-whole-file -fsecond-underscore @gol\n--fbounds-check -fcheck-array-temporaries  -fmax-array-constructor =@var{n} @gol\n+@gccoptlist{-faggressive-function-elimination -fblas-matmul-limit=@var{n} @gol\n+-fbounds-check -fcheck-array-temporaries @gol\n -fcheck=@var{<all|array-temps|bounds|do|mem|pointer|recursion>} @gol\n--fcoarray=@var{<none|single|lib>} -fmax-stack-var-size=@var{n} @gol\n--fstack-arrays @gol\n--fpack-derived  -frepack-arrays  -fshort-enums  -fexternal-blas @gol\n--fblas-matmul-limit=@var{n} -frecursive -finit-local-zero @gol\n--finit-integer=@var{n} -finit-real=@var{<zero|inf|-inf|nan|snan>} @gol\n--finit-logical=@var{<true|false>} -finit-character=@var{n} @gol\n--fno-align-commons -fno-protect-parens -frealloc-lhs @gol\n--faggressive-function-elimination -ffrontend-optimize}\n+-fcoarray=@var{<none|single|lib>} -fexternal-blas -ff2c\n+-ffrontend-optimize @gol\n+-finit-character=@var{n} -finit-integer=@var{n} -finit-local-zero @gol\n+-finit-logical=@var{<true|false>}\n+-finit-real=@var{<zero|inf|-inf|nan|snan>} @gol\n+-fmax-array-constructor=@var{n} -fmax-stack-var-size=@var{n}\n+-fno-align-commons @gol\n+-fno-automatic -fno-protect-parens -fno-underscoring -fno-whole-file @gol\n+-fsecond-underscore -fpack-derived -frealloc-lhs -frecursive @gol\n+-frepack-arrays -fshort-enums -fstack-arrays\n+}\n @end table\n \n-@menu\n-* Fortran Dialect Options::  Controlling the variant of Fortran language\n-                             compiled.\n-* Preprocessing Options::  Enable and customize preprocessing.\n-* Error and Warning Options::     How picky should the compiler be?\n-* Debugging Options::   Symbol tables, measurements, and debugging dumps.\n-* Directory Options::   Where to find module files\n-* Link Options ::       Influencing the linking step\n-* Runtime Options::     Influencing runtime behavior\n-* Code Gen Options::    Specifying conventions for function calls, data layout\n-                        and register usage.\n-@end menu\n-\n @node Fortran Dialect Options\n @section Options controlling Fortran dialect\n @cindex dialect options\n@@ -324,6 +324,17 @@ Specify that no implicit typing is allowed, unless overridden by explicit\n @code{IMPLICIT} statements.  This is the equivalent of adding\n @code{implicit none} to the start of every procedure.\n \n+@item -finteger-4-integer-8\n+@opindex @code{finteger-4-integer-8}\n+Promote all @code{INTEGER(KIND=4)} entities to an @code{INTEGER(KIND=8)}\n+entities.  If @code{KIND=8} is unavailable, then an error will be issued.\n+This option should be used with care and may not be suitable for your codes.\n+Areas of possible concern include calls to external procedures,\n+alignment in @code{EQUIVALENCE} and/or @code{COMMON}, generic interfaces,\n+BOZ literal constant conversion, and I/O.  Inspection of the intermediate\n+representation of the translated Fortran code, produced by\n+@option{-fdump-tree-original}, is suggested.\n+\n @item -fcray-pointer\n @opindex @code{fcray-pointer}\n Enable the Cray pointer extension, which provides C-like pointer\n@@ -354,6 +365,28 @@ Similarly, @code{DATA i/Z'FFFFFFFF'/} will result in an integer overflow\n on most systems, but with @option{-fno-range-check} the value will\n ``wrap around'' and @code{i} will be initialized to @math{-1} instead.\n \n+@item  -freal-4-real-8\n+@itemx -freal-4-real-10\n+@itemx -freal-8-real-4\n+@itemx -freal-8-real-10\n+@itemx -freal-8-real-16\n+@opindex @code{freal-4-real-8}\n+@opindex @code{freal-4-real-10}\n+@opindex @code{freal-4-real-16}\n+@opindex @code{freal-8-real-4}\n+@opindex @code{freal-8-real-10}\n+@opindex @code{freal-8-real-16}\n+@cindex options, real kind type promotion\n+Promote all @code{REAL(KIND=M)} entities to @code{REAL(KIND=N)} entities.\n+If @code{REAL(KIND=N)} is unavailable, then an error will be issued.\n+All other real kind types are unaffected by this option.\n+These options should be used with care and may not be suitable for your\n+codes.  Areas of possible concern include calls to external procedures,\n+alignment in @code{EQUIVALENCE} and/or @code{COMMON}, generic interfaces,\n+BOZ literal constant conversion, and I/O.  Inspection of the intermediate\n+representation of the translated Fortran code, produced by\n+@option{-fdump-tree-original}, is suggested.\n+\n @item -std=@var{std}\n @opindex @code{std=}@var{std} option\n Specify the standard to which the program is expected to conform, which"}, {"sha": "c27b58e4b549c68be2f58cb344e55d3f0fc3abdf", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=f434733449a2d46c3e003fd839bf94f47023c055", "patch": "@@ -1,5 +1,5 @@\n ; Options for the Fortran 95 front end.\n-; Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+; Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n ; Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n@@ -394,6 +394,10 @@ ffixed-form\n Fortran RejectNegative\n Assume that the source file is fixed form\n \n+finteger-4-integer-8\n+Fortran RejectNegative\n+Interpret any INTEGER(4) as an INTEGER(8)\n+\n fintrinsic-modules-path\n Fortran RejectNegative Joined Separate\n Specify where to find the compiled intrinsic modules\n@@ -494,6 +498,30 @@ frange-check\n Fortran\n Enable range checking during compilation\n \n+freal-4-real-8\n+Fortran RejectNegative\n+Interpret any REAl(4) as a REAL(8)\n+\n+freal-4-real-10\n+Fortran RejectNegative\n+Interpret any REAL(4) as a REAL(10)\n+\n+freal-4-real-16\n+Fortran RejectNegative\n+Interpret any REAL(4) as a REAl(16)\n+\n+freal-8-real-4\n+Fortran RejectNegative\n+Interpret any REAL(8) as a REAL(4)\n+\n+freal-8-real-10\n+Fortran RejectNegative\n+Interpret any REAL(8) as a REAL(10)\n+\n+freal-8-real-16\n+Fortran RejectNegative\n+Interpret any REAL(8) as a REAl(16)\n+\n frealloc-lhs\n Fortran\n Reallocate the LHS in assignments"}, {"sha": "b6929fce1f25267ea47e5fdea89f47b79bde9521", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=f434733449a2d46c3e003fd839bf94f47023c055", "patch": "@@ -1,6 +1,6 @@\n /* Parse and display command line options.\n    Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,\n-   2009, 2010, 2011\n+   2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n@@ -116,6 +116,9 @@ gfc_init_options (unsigned int decoded_options_count,\n   gfc_option.flag_default_double = 0;\n   gfc_option.flag_default_integer = 0;\n   gfc_option.flag_default_real = 0;\n+  gfc_option.flag_integer4_kind = 0;\n+  gfc_option.flag_real4_kind = 0;\n+  gfc_option.flag_real8_kind = 0;\n   gfc_option.flag_dollar_ok = 0;\n   gfc_option.flag_underscoring = 1;\n   gfc_option.flag_whole_file = 1;\n@@ -849,6 +852,34 @@ gfc_handle_option (size_t scode, const char *arg, int value,\n       gfc_option.flag_default_double = value;\n       break;\n \n+    case OPT_finteger_4_integer_8:\n+      gfc_option.flag_integer4_kind = 8;\n+      break;\n+\n+    case OPT_freal_4_real_8:\n+      gfc_option.flag_real4_kind = 8;\n+      break;\n+\n+    case OPT_freal_4_real_10:\n+      gfc_option.flag_real4_kind = 10;\n+      break;\n+\n+    case OPT_freal_4_real_16:\n+      gfc_option.flag_real4_kind = 16;\n+      break;\n+\n+    case OPT_freal_8_real_4:\n+      gfc_option.flag_real8_kind = 4;\n+      break;\n+\n+    case OPT_freal_8_real_10:\n+      gfc_option.flag_real8_kind = 10;\n+      break;\n+\n+    case OPT_freal_8_real_16:\n+      gfc_option.flag_real8_kind = 16;\n+      break;\n+\n     case OPT_finit_local_zero:\n       gfc_option.flag_init_integer = GFC_INIT_INTEGER_ON;\n       gfc_option.flag_init_integer_value = 0;"}, {"sha": "83d9132b41f67ea013f879be44ce2306fac30970", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=f434733449a2d46c3e003fd839bf94f47023c055", "patch": "@@ -1,5 +1,6 @@\n /* Primary expression subroutines\n-   Copyright (C) 2000, 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Copyright (C) 2000, 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n+   2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n@@ -224,6 +225,9 @@ match_integer_constant (gfc_expr **result, int signflag)\n   if (kind == -1)\n     return MATCH_ERROR;\n \n+  if (kind == 4 && gfc_option.flag_integer4_kind == 8)\n+    kind = 8;\n+\n   if (gfc_validate_kind (BT_INTEGER, kind, true) < 0)\n     {\n       gfc_error (\"Integer kind %d at %C not available\", kind);\n@@ -636,6 +640,26 @@ match_real_constant (gfc_expr **result, int signflag)\n \t  goto cleanup;\n \t}\n       kind = gfc_default_double_kind;\n+\n+      if (kind == 4)\n+\t{\n+\t  if (gfc_option.flag_real4_kind == 8)\n+\t    kind = 8;\n+\t  if (gfc_option.flag_real4_kind == 10)\n+\t    kind = 10;\n+\t  if (gfc_option.flag_real4_kind == 16)\n+\t    kind = 16;\n+\t}\n+\n+      if (kind == 8)\n+\t{\n+\t  if (gfc_option.flag_real8_kind == 4)\n+\t    kind = 4;\n+\t  if (gfc_option.flag_real8_kind == 10)\n+\t    kind = 10;\n+\t  if (gfc_option.flag_real8_kind == 16)\n+\t    kind = 16;\n+\t}\n       break;\n \n     case 'q':\n@@ -666,6 +690,26 @@ match_real_constant (gfc_expr **result, int signflag)\n       if (kind == -2)\n \tkind = gfc_default_real_kind;\n \n+      if (kind == 4)\n+\t{\n+\t  if (gfc_option.flag_real4_kind == 8)\n+\t    kind = 8;\n+\t  if (gfc_option.flag_real4_kind == 10)\n+\t    kind = 10;\n+\t  if (gfc_option.flag_real4_kind == 16)\n+\t    kind = 16;\n+\t}\n+\n+      if (kind == 8)\n+\t{\n+\t  if (gfc_option.flag_real8_kind == 4)\n+\t    kind = 4;\n+\t  if (gfc_option.flag_real8_kind == 10)\n+\t    kind = 10;\n+\t  if (gfc_option.flag_real8_kind == 16)\n+\t    kind = 16;\n+\t}\n+\n       if (gfc_validate_kind (BT_REAL, kind, true) < 0)\n \t{\n \t  gfc_error (\"Invalid real kind %d at %C\", kind);"}, {"sha": "2579e2356ab20043eb8940d40c9a1e673fad75d8", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 64, "deletions": 11, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f434733449a2d46c3e003fd839bf94f47023c055/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=f434733449a2d46c3e003fd839bf94f47023c055", "patch": "@@ -1,6 +1,6 @@\n /* Backend support for Fortran 95 basic types and derived types.\n    Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,\n-   2010, 2011\n+   2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Paul Brook <paul@nowt.org>\n    and Steven Bosscher <s.bosscher@student.tudelft.nl>\n@@ -362,7 +362,7 @@ gfc_init_kinds (void)\n   unsigned int mode;\n   int i_index, r_index, kind;\n   bool saw_i4 = false, saw_i8 = false;\n-  bool saw_r4 = false, saw_r8 = false, saw_r16 = false;\n+  bool saw_r4 = false, saw_r8 = false, saw_r10 = false, saw_r16 = false;\n \n   for (i_index = 0, mode = MIN_MODE_INT; mode <= MAX_MODE_INT; mode++)\n     {\n@@ -456,6 +456,8 @@ gfc_init_kinds (void)\n \tsaw_r4 = true;\n       if (kind == 8)\n \tsaw_r8 = true;\n+      if (kind == 10)\n+\tsaw_r10 = true;\n       if (kind == 16)\n \tsaw_r16 = true;\n \n@@ -482,23 +484,31 @@ gfc_init_kinds (void)\n       r_index += 1;\n     }\n \n-  /* Choose the default integer kind.  We choose 4 unless the user\n-     directs us otherwise.  */\n+  /* Choose the default integer kind.  We choose 4 unless the user directs us\n+     otherwise.  Even if the user specified that the default integer kind is 8,\n+     the numeric storage size is not 64 bits.  In this case, a warning will be\n+     issued when NUMERIC_STORAGE_SIZE is used.  Set NUMERIC_STORAGE_SIZE to 32.  */\n+\n+  gfc_numeric_storage_size = 4 * 8;\n+\n   if (gfc_option.flag_default_integer)\n     {\n       if (!saw_i8)\n-\tfatal_error (\"integer kind=8 not available for -fdefault-integer-8 option\");\n+\tfatal_error (\"INTEGER(KIND=8) is not available for -fdefault-integer-8 option\");\n+\n       gfc_default_integer_kind = 8;\n \n-      /* Even if the user specified that the default integer kind be 8,\n-         the numeric storage size isn't 64.  In this case, a warning will\n-\t be issued when NUMERIC_STORAGE_SIZE is used.  */\n-      gfc_numeric_storage_size = 4 * 8;\n+    }\n+  else if (gfc_option.flag_integer4_kind == 8)\n+    {\n+      if (!saw_i8)\n+\tfatal_error (\"INTEGER(KIND=8) is not available for -finteger-4-integer-8 option\");\n+\n+      gfc_default_integer_kind = 8;\n     }\n   else if (saw_i4)\n     {\n       gfc_default_integer_kind = 4;\n-      gfc_numeric_storage_size = 4 * 8;\n     }\n   else\n     {\n@@ -510,9 +520,31 @@ gfc_init_kinds (void)\n   if (gfc_option.flag_default_real)\n     {\n       if (!saw_r8)\n-\tfatal_error (\"real kind=8 not available for -fdefault-real-8 option\");\n+\tfatal_error (\"REAL(KIND=8) is not available for -fdefault-real-8 option\");\n+\n       gfc_default_real_kind = 8;\n     }\n+  else if (gfc_option.flag_real4_kind == 8)\n+  {\n+    if (!saw_r8)\n+      fatal_error (\"REAL(KIND=8) is not available for -freal-4-real-8 option\");\n+\n+    gfc_default_real_kind = 8;\n+  }\n+  else if (gfc_option.flag_real4_kind == 10)\n+  {\n+    if (!saw_r10)\n+      fatal_error (\"REAL(KIND=10) is not available for -freal-4-real-10 option\");\n+\n+    gfc_default_real_kind = 10;\n+  }\n+  else if (gfc_option.flag_real4_kind == 16)\n+  {\n+    if (!saw_r16)\n+      fatal_error (\"REAL(KIND=16) is not available for -freal-4-real-16 option\");\n+\n+    gfc_default_real_kind = 16;\n+  }\n   else if (saw_r4)\n     gfc_default_real_kind = 4;\n   else\n@@ -529,6 +561,27 @@ gfc_init_kinds (void)\n     gfc_default_double_kind = 8;\n   else if (gfc_option.flag_default_real && saw_r16)\n     gfc_default_double_kind = 16;\n+  else if (gfc_option.flag_real8_kind == 4)\n+    {\n+      if (!saw_r4)\n+\tfatal_error (\"REAL(KIND=4) is not available for -freal-8-real-4 option\");\n+\n+\tgfc_default_double_kind = 4;\n+    }\n+  else if (gfc_option.flag_real8_kind == 10 )\n+    {\n+      if (!saw_r10)\n+\tfatal_error (\"REAL(KIND=10) is not available for -freal-8-real-10 option\");\n+\n+\tgfc_default_double_kind = 10;\n+    }\n+  else if (gfc_option.flag_real8_kind == 16 )\n+    {\n+      if (!saw_r16)\n+\tfatal_error (\"REAL(KIND=10) is not available for -freal-8-real-16 option\");\n+\n+\tgfc_default_double_kind = 16;\n+    }\n   else if (saw_r4 && saw_r8)\n     gfc_default_double_kind = 8;\n   else"}]}