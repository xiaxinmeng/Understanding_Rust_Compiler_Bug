{"sha": "510bd1c178f3719df7148dd584d30acc2595dc3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEwYmQxYzE3OGYzNzE5ZGY3MTQ4ZGQ1ODRkMzBhY2MyNTk1ZGMzYw==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-02-24T21:38:07Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-02-25T18:04:32Z"}, "message": "libstdc++: LWG 3301 transform_view::iterator has incorrect iterator_category\n\nlibstdc++-v3/ChangeLog:\n\n\tLWG 3301 transform_view::_Iterator has incorrect iterator_category\n\t* include/std/ranges (transform_view::_Iterator::_S_iter_cat): Adjust\n\tdetermination of iterator_category as per LWG 3301.\n\t* testsuite/std/ranges/adaptors/transform.cc: Augment test.", "tree": {"sha": "0c8d33fb33c43e3ad04b302c0ab6c6dc898f49e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c8d33fb33c43e3ad04b302c0ab6c6dc898f49e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/510bd1c178f3719df7148dd584d30acc2595dc3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510bd1c178f3719df7148dd584d30acc2595dc3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/510bd1c178f3719df7148dd584d30acc2595dc3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510bd1c178f3719df7148dd584d30acc2595dc3c/comments", "author": null, "committer": null, "parents": [{"sha": "7f0f108309a881fe9e84a9c0b9a6f13b24a7886e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f0f108309a881fe9e84a9c0b9a6f13b24a7886e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f0f108309a881fe9e84a9c0b9a6f13b24a7886e"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "1a56a7d221c9be4aba1aea3d915b8b1c74ab143a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510bd1c178f3719df7148dd584d30acc2595dc3c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510bd1c178f3719df7148dd584d30acc2595dc3c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=510bd1c178f3719df7148dd584d30acc2595dc3c", "patch": "@@ -1,5 +1,10 @@\n 2020-02-25  Patrick Palka  <ppalka@redhat.com>\n \n+\tLWG 3301 transform_view::_Iterator has incorrect iterator_category\n+\t* include/std/ranges (transform_view::_Iterator::_S_iter_cat): Adjust\n+\tdetermination of iterator_category as per LWG 3301.\n+\t* testsuite/std/ranges/adaptors/transform.cc: Augment test.\n+\n \tLWG 3292 iota_view is under-constrained\n \t* include/std/ranges (iota_view): Require that _Winc models semiregular\n \t  as per LWG 3292."}, {"sha": "aed90e9710e1ffc671f0c3dd69df05ac5534b22e", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510bd1c178f3719df7148dd584d30acc2595dc3c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510bd1c178f3719df7148dd584d30acc2595dc3c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=510bd1c178f3719df7148dd584d30acc2595dc3c", "patch": "@@ -1570,12 +1570,18 @@ namespace views\n \t  static constexpr auto\n \t  _S_iter_cat()\n \t  {\n-\t    using _Cat\n-              = typename iterator_traits<_Base_iter>::iterator_category;\n-\t    if constexpr (derived_from<_Cat, contiguous_iterator_tag>)\n-\t      return random_access_iterator_tag{};\n+\t    using _Res = invoke_result_t<_Fp&, range_reference_t<_Base>>;\n+\t    if constexpr (is_lvalue_reference_v<_Res>)\n+\t      {\n+\t\tusing _Cat\n+\t\t  = typename iterator_traits<_Base_iter>::iterator_category;\n+\t\tif constexpr (derived_from<_Cat, contiguous_iterator_tag>)\n+\t\t  return random_access_iterator_tag{};\n+\t\telse\n+\t\t  return _Cat{};\n+\t      }\n \t    else\n-\t      return _Cat{};\n+\t      return input_iterator_tag{};\n \t  }\n \n \t  static constexpr decltype(auto)"}, {"sha": "178544d6378f05b93209f71f14740a2b9a6a9aaa", "filename": "libstdc++-v3/testsuite/std/ranges/adaptors/transform.cc", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510bd1c178f3719df7148dd584d30acc2595dc3c/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Ftransform.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510bd1c178f3719df7148dd584d30acc2595dc3c/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Ftransform.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Ftransform.cc?ref=510bd1c178f3719df7148dd584d30acc2595dc3c", "patch": "@@ -77,10 +77,34 @@ test03()\n   VERIFY( ranges::equal(v, (int[]){1,2,3,4,5}) );\n }\n \n+void\n+test04()\n+{\n+  // LWG 3301\n+    {\n+      auto f = [] (int x) { return x; };\n+      int x[] = {1,2,3,4,5};\n+      auto v = x | views::transform(f);\n+      auto i = v.begin();\n+      using Cat = decltype(i)::iterator_category;\n+      static_assert(std::same_as<Cat, std::input_iterator_tag>);\n+    }\n+\n+    {\n+      auto f = [] (int &x) -> int& { return x; };\n+      int x[] = {1,2,3,4,5};\n+      auto v = x | views::transform(f);\n+      auto i = v.begin();\n+      using Cat = decltype(i)::iterator_category;\n+      static_assert(std::derived_from<Cat, std::forward_iterator_tag>);\n+    }\n+}\n+\n int\n main()\n {\n   test01();\n   test02();\n   test03();\n+  test04();\n }"}]}