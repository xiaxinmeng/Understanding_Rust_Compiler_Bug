{"sha": "dc17cfda7d0869fdc32c9e42b59534bd9ab23bbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMxN2NmZGE3ZDA4NjlmZGMzMmM5ZTQyYjU5NTM0YmQ5YWIyM2JiYw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-08-07T19:58:54Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-08-07T19:58:54Z"}, "message": "(MAX_MOVE_MAX, MAX_UNITS_PER_WORD): New macros.\n\n(regno_save_mode, regno_save_mem): Use them.\n\nFrom-SVN: r5102", "tree": {"sha": "a3c286d361c7821b316b425e34540a9723277432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3c286d361c7821b316b425e34540a9723277432"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc17cfda7d0869fdc32c9e42b59534bd9ab23bbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc17cfda7d0869fdc32c9e42b59534bd9ab23bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc17cfda7d0869fdc32c9e42b59534bd9ab23bbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc17cfda7d0869fdc32c9e42b59534bd9ab23bbc/comments", "author": null, "committer": null, "parents": [{"sha": "6706083e3a79ed64998a1a040bb88a27438a53e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6706083e3a79ed64998a1a040bb88a27438a53e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6706083e3a79ed64998a1a040bb88a27438a53e9"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "3518feb373bc770f9506f76152b032596dccf54f", "filename": "gcc/caller-save.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc17cfda7d0869fdc32c9e42b59534bd9ab23bbc/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc17cfda7d0869fdc32c9e42b59534bd9ab23bbc/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=dc17cfda7d0869fdc32c9e42b59534bd9ab23bbc", "patch": "@@ -28,19 +28,27 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"reload.h\"\n #include \"expr.h\"\n \n+#ifndef MAX_MOVE_MAX\n+#define MAX_MOVE_MAX MOVE_MAX\n+#endif\n+\n+#ifndef MAX_UNITS_PER_WORD\n+#define MAX_UNITS_PER_WORD UNITS_PER_WORD\n+#endif\n+\n /* Modes for each hard register that we can save.  The smallest mode is wide\n    enough to save the entire contents of the register.  When saving the\n    register because it is live we first try to save in multi-register modes.\n    If that is not possible the save is done one register at a time.  */\n \n static enum machine_mode \n-  regno_save_mode[FIRST_PSEUDO_REGISTER][MOVE_MAX / UNITS_PER_WORD + 1];\n+  regno_save_mode[FIRST_PSEUDO_REGISTER][MAX_MOVE_MAX / MAX_UNITS_PER_WORD + 1];\n \n /* For each hard register, a place on the stack where it can be saved,\n    if needed.  */\n \n static rtx \n-  regno_save_mem[FIRST_PSEUDO_REGISTER][MOVE_MAX / UNITS_PER_WORD + 1];\n+  regno_save_mem[FIRST_PSEUDO_REGISTER][MAX_MOVE_MAX / MAX_UNITS_PER_WORD + 1];\n \n /* We will only make a register eligible for caller-save if it can be\n    saved in its widest mode with a simple SET insn as long as the memory\n@@ -49,9 +57,9 @@ static rtx\n    be recognized.  */\n \n static enum insn_code \n-  reg_save_code[FIRST_PSEUDO_REGISTER][MOVE_MAX / UNITS_PER_WORD + 1];\n+  reg_save_code[FIRST_PSEUDO_REGISTER][MAX_MOVE_MAX / MAX_UNITS_PER_WORD + 1];\n static enum insn_code \n-  reg_restore_code[FIRST_PSEUDO_REGISTER][MOVE_MAX / UNITS_PER_WORD + 1];\n+  reg_restore_code[FIRST_PSEUDO_REGISTER][MAX_MOVE_MAX / MAX_UNITS_PER_WORD + 1];\n \n /* Set of hard regs currently live (during scan of all insns).  */\n "}]}