{"sha": "7f335c645dfac32c3697548434e25029b2e0b1ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YzMzVjNjQ1ZGZhYzMyYzM2OTc1NDg0MzRlMjUwMjliMmUwYjFjZQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2008-04-08T06:46:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T06:46:41Z"}, "message": "2008-04-08  Olivier Hainque  <hainque@adacore.com>\n\n\t* s-intman-vxworks.ads, s-intman-vxworks.adb\n\t(Map_And_Raise_Exception): Remove. Was an import of only part of the\n\trequired services already implemented elsewhere.\n\t(Notify_Exception): Delete body, import __gnat_error_handler instead.\n\t(Initialize): Add SA_SIGINFO to the sa_flags, to get the sigcontext\n\targument passed to the handler, which we need for ZCX propagation\n\tpurposes.\n\nFrom-SVN: r134016", "tree": {"sha": "e9096e08065d54a563ef473ac93537efc384a4ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9096e08065d54a563ef473ac93537efc384a4ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f335c645dfac32c3697548434e25029b2e0b1ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f335c645dfac32c3697548434e25029b2e0b1ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f335c645dfac32c3697548434e25029b2e0b1ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f335c645dfac32c3697548434e25029b2e0b1ce/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c54ec67ce7019a0f5212ca95054cfe972c587b21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54ec67ce7019a0f5212ca95054cfe972c587b21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c54ec67ce7019a0f5212ca95054cfe972c587b21"}], "stats": {"total": 41, "additions": 12, "deletions": 29}, "files": [{"sha": "65617de247638e7ad63aed6d95d818ae0686c37d", "filename": "gcc/ada/s-intman-vxworks.adb", "status": "modified", "additions": 9, "deletions": 26, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f335c645dfac32c3697548434e25029b2e0b1ce/gcc%2Fada%2Fs-intman-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f335c645dfac32c3697548434e25029b2e0b1ce/gcc%2Fada%2Fs-intman-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-vxworks.adb?ref=7f335c645dfac32c3697548434e25029b2e0b1ce", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,8 +49,11 @@ package body System.Interrupt_Management is\n    Exception_Action : aliased struct_sigaction;\n    --  Keep this variable global so that it is initialized only once\n \n-   procedure Map_And_Raise_Exception (signo : Signal);\n-   pragma Import (C, Map_And_Raise_Exception, \"__gnat_map_signal\");\n+   procedure Notify_Exception\n+     (signo      : Signal;\n+      siginfo    : System.Address;\n+      sigcontext : System.Address);\n+   pragma Import (C, Notify_Exception, \"__gnat_error_handler\");\n    --  Map signal to Ada exception and raise it.  Different versions\n    --  of VxWorks need different mappings.\n \n@@ -71,28 +74,6 @@ package body System.Interrupt_Management is\n    --    's'   Interrupt_State pragma set state to System (use \"default\"\n    --           system handler)\n \n-   procedure Notify_Exception (signo : Signal);\n-   --  Identify the Ada exception to be raised using\n-   --  the information when the system received a synchronous signal.\n-\n-   ----------------------\n-   -- Notify_Exception --\n-   ----------------------\n-\n-   procedure Notify_Exception (signo : Signal) is\n-      Mask   : aliased sigset_t;\n-\n-      Result : int;\n-      pragma Unreferenced (Result);\n-\n-   begin\n-      Result := pthread_sigmask (SIG_SETMASK, null, Mask'Access);\n-      Result := sigdelset (Mask'Access, signo);\n-      Result := pthread_sigmask (SIG_SETMASK, Mask'Access, null);\n-\n-      Map_And_Raise_Exception (signo);\n-   end Notify_Exception;\n-\n    ---------------------------\n    -- Initialize_Interrupts --\n    ---------------------------\n@@ -118,10 +99,12 @@ package body System.Interrupt_Management is\n    ----------------\n \n    Initialized : Boolean := False;\n+   --  Set to True once Initialize is called, further calls have no effect\n \n    procedure Initialize is\n       mask   : aliased sigset_t;\n       Result : int;\n+\n    begin\n       if Initialized then\n          return;\n@@ -135,7 +118,7 @@ package body System.Interrupt_Management is\n       Abort_Task_Interrupt := SIGABRT;\n \n       Exception_Action.sa_handler := Notify_Exception'Address;\n-      Exception_Action.sa_flags := SA_ONSTACK;\n+      Exception_Action.sa_flags := SA_ONSTACK + SA_SIGINFO;\n       Result := sigemptyset (mask'Access);\n       pragma Assert (Result = 0);\n "}, {"sha": "b249301d723497bc31177c997207b25d52d1a522", "filename": "gcc/ada/s-intman-vxworks.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f335c645dfac32c3697548434e25029b2e0b1ce/gcc%2Fada%2Fs-intman-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f335c645dfac32c3697548434e25029b2e0b1ce/gcc%2Fada%2Fs-intman-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-vxworks.ads?ref=7f335c645dfac32c3697548434e25029b2e0b1ce", "patch": "@@ -103,9 +103,9 @@ package System.Interrupt_Management is\n    --  each task.\n \n    procedure Initialize;\n-   --  Initialize the various variables defined in this package.\n-   --  This procedure must be called before accessing any object from this\n-   --  package and can be called multiple times.\n+   --  Initialize the various variables defined in this package. This procedure\n+   --  must be called before accessing any object from this package and can be\n+   --  called multiple times (only the first call has any effect).\n \n private\n    type Interrupt_Mask is new System.OS_Interface.sigset_t;"}]}