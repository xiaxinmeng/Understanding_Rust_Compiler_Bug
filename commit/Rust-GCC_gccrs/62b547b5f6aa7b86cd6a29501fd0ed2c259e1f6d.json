{"sha": "62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJiNTQ3YjVmNmFhN2I4NmNkNmEyOTUwMWZkMGVkMmMyNTllMWY2ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2011-12-06T15:13:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-12-06T15:13:04Z"}, "message": "re PR libstdc++/51183 (pair piecewise_construct_t constructor copies)\n\n2011-12-06  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\t    Chris Jefferson  <chris@bubblescope.net>\n\n\tPR libstdc++/51183\n\t* include/std/stl_pair.h (pair<>::__cons, pair<>::__do_cons): Remove.\n\t(pair<>::pair(piecewise_construct_t, tuple<>, tuple<>): Only declare.\n\t(pair<>::pair(tuple<>&, tuple<>&, _Index_tuple<>, _Index_tuple<>)):\n\tDeclare.\n\t* include/std/tuple (pair<>::__cons, pair<>::__do_cons): Remove.\n\t(pair<>::pair(tuple<>&, tuple<>&, _Index_tuple<>, _Index_tuple<>)):\n\tDefine.\n\t(pair<>::pair(piecewise_construct_t, tuple<>, tuple<>): Define,\n\tdelegating to the latter.\n\t* testsuite/20_util/pair/piecewise2.cc: New.\n\nCo-Authored-By: Chris Jefferson <chris@bubblescope.net>\n\nFrom-SVN: r182054", "tree": {"sha": "44ef218cd901a8d4cee7ffbbed9e50f7894de307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44ef218cd901a8d4cee7ffbbed9e50f7894de307"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d/comments", "author": null, "committer": null, "parents": [{"sha": "6232acfe4d905c0e79f3a088c0672eae3cc26eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6232acfe4d905c0e79f3a088c0672eae3cc26eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6232acfe4d905c0e79f3a088c0672eae3cc26eb8"}], "stats": {"total": 124, "additions": 99, "deletions": 25}, "files": [{"sha": "b93cc654e84c8a363730b540a2114abcf0cd1bf5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d", "patch": "@@ -1,3 +1,18 @@\n+2011-12-06  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\t    Chris Jefferson  <chris@bubblescope.net>\n+\n+\tPR libstdc++/51183\n+\t* include/std/stl_pair.h (pair<>::__cons, pair<>::__do_cons): Remove.\n+\t(pair<>::pair(piecewise_construct_t, tuple<>, tuple<>): Only declare.\n+\t(pair<>::pair(tuple<>&, tuple<>&, _Index_tuple<>, _Index_tuple<>)):\n+\tDeclare.\n+\t* include/std/tuple (pair<>::__cons, pair<>::__do_cons): Remove.\n+\t(pair<>::pair(tuple<>&, tuple<>&, _Index_tuple<>, _Index_tuple<>)):\n+\tDefine.\n+\t(pair<>::pair(piecewise_construct_t, tuple<>, tuple<>): Define,\n+\tdelegating to the latter.\n+\t* testsuite/20_util/pair/piecewise2.cc: New.\n+\n 2011-12-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* libsupc++/initializer_list: Do not declare anything if"}, {"sha": "c1df571c5d5483f6f3c92eb0fe64f03b0f4529bc", "filename": "libstdc++-v3/include/bits/stl_pair.h", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h?ref=62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d", "patch": "@@ -149,11 +149,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t: first(std::forward<_U1>(__p.first)),\n \t  second(std::forward<_U2>(__p.second)) { }\n \n-      template<class... _Args1, class... _Args2>\n-\tpair(piecewise_construct_t,\n-\t     tuple<_Args1...> __first, tuple<_Args2...> __second)\n-\t: first(__cons<first_type>(std::move(__first))),\n-\t  second(__cons<second_type>(std::move(__second))) { }\n+      template<typename... _Args1, typename... _Args2>\n+        pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);\n \n       pair&\n       operator=(const pair& __p)\n@@ -202,13 +199,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n     private:\n-      template<typename _Tp, typename... _Args>\n-\tstatic _Tp\n-\t__cons(tuple<_Args...>&&);\n-\n-      template<typename _Tp, typename... _Args, std::size_t... _Indexes>\n-\tstatic _Tp\n-\t__do_cons(tuple<_Args...>&&, const _Index_tuple<_Indexes...>&);\n+      template<typename... _Args1, std::size_t... _Indexes1,\n+               typename... _Args2, std::size_t... _Indexes2>\n+        pair(tuple<_Args1...>&, tuple<_Args2...>&,\n+             _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>);\n #endif\n     };\n "}, {"sha": "e8aaf4610c3de15bcb66f6371cb8a109eae8ca08", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d", "patch": "@@ -1057,21 +1057,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   // See stl_pair.h...\n   template<class _T1, class _T2>\n-    template<typename _Tp, typename... _Args>\n-      inline _Tp\n-      pair<_T1, _T2>::__cons(tuple<_Args...>&& __tuple)\n-      {\n-\ttypedef typename _Build_index_tuple<sizeof...(_Args)>::__type\n-\t  _Indexes;\n-\treturn __do_cons<_Tp>(std::move(__tuple), _Indexes());\n-      }\n+    template<typename... _Args1, typename... _Args2>\n+      inline\n+      pair<_T1, _T2>::\n+      pair(piecewise_construct_t,\n+\t   tuple<_Args1...> __first, tuple<_Args2...> __second)\n+      : pair(__first, __second,\n+\t     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),\n+\t     typename _Build_index_tuple<sizeof...(_Args2)>::__type())\n+      { }\n \n   template<class _T1, class _T2>\n-    template<typename _Tp, typename... _Args, std::size_t... _Indexes>\n-      inline _Tp\n-      pair<_T1, _T2>::__do_cons(tuple<_Args...>&& __tuple,\n-\t\t\t\tconst _Index_tuple<_Indexes...>&)\n-      { return _Tp(std::forward<_Args>(get<_Indexes>(__tuple))...); }\n+    template<typename... _Args1, std::size_t... _Indexes1,\n+             typename... _Args2, std::size_t... _Indexes2>\n+      inline\n+      pair<_T1, _T2>::\n+      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,\n+\t   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)\n+      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),\n+        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)\n+      { }\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace"}, {"sha": "695a3c94399a03cb541983d3376ec514ca3438d4", "filename": "libstdc++-v3/testsuite/20_util/pair/piecewise2.cc", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fpiecewise2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fpiecewise2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Fpiecewise2.cc?ref=62b547b5f6aa7b86cd6a29501fd0ed2c259e1f6d", "patch": "@@ -0,0 +1,60 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <utility>\n+#include <tuple>\n+\n+struct NoCon\n+{\n+  NoCon() = delete;\n+  NoCon(const NoCon&) = delete;\n+};\n+\n+struct RefCheck1\n+{\n+  RefCheck1(NoCon&, NoCon&&) { }\n+  RefCheck1() = delete;\n+  RefCheck1(const RefCheck1&) = delete;\n+};\n+\n+struct RefCheck2\n+{\n+  RefCheck2(const NoCon&, const NoCon&&, NoCon&) { }\n+  RefCheck2() = delete;\n+  RefCheck2(const RefCheck2&) = delete;\n+};\n+\n+struct Default\n+{\n+  Default();\n+  Default(const Default&) = delete;\n+};\n+\n+// libstdc++/51183\n+void test01(std::tuple<NoCon&, NoCon&&> t1,\n+            std::tuple<NoCon&, NoCon&&, NoCon&> t2)\n+{\n+  std::pair<RefCheck1, RefCheck2>(std::piecewise_construct, t1, t2);\n+}\n+\n+void test02(std::tuple<> t1, std::tuple<int> t2)\n+{\n+  std::pair<Default, int> A(std::piecewise_construct, t1, t2);\n+}"}]}