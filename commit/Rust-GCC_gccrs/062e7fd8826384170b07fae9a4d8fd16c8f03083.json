{"sha": "062e7fd8826384170b07fae9a4d8fd16c8f03083", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYyZTdmZDg4MjYzODQxNzBiMDdmYWU5YTRkOGZkMTZjOGYwMzA4Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-04-29T12:54:19Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-04-29T12:54:19Z"}, "message": "calls.c (emit_call_1): Pass rounded_stack_size to emit_call instead of the unrounded size.\n\n        * calls.c (emit_call_1): Pass rounded_stack_size to emit_call\n        instead of the unrounded size.\n\nFrom-SVN: r26694", "tree": {"sha": "f82b91abd07dc24d86f6c56307c7621d341ff5a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f82b91abd07dc24d86f6c56307c7621d341ff5a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/062e7fd8826384170b07fae9a4d8fd16c8f03083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062e7fd8826384170b07fae9a4d8fd16c8f03083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/062e7fd8826384170b07fae9a4d8fd16c8f03083", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062e7fd8826384170b07fae9a4d8fd16c8f03083/comments", "author": null, "committer": null, "parents": [{"sha": "d8e8b2b99774f2b8223fac3223e7cd5d77db1d32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8e8b2b99774f2b8223fac3223e7cd5d77db1d32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8e8b2b99774f2b8223fac3223e7cd5d77db1d32"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "ba0194a69874948bf7df711b73dba0b7f2bec782", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062e7fd8826384170b07fae9a4d8fd16c8f03083/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062e7fd8826384170b07fae9a4d8fd16c8f03083/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=062e7fd8826384170b07fae9a4d8fd16c8f03083", "patch": "@@ -1,3 +1,8 @@\n+Thu Apr 29 12:53:33 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* calls.c (emit_call_1): Pass rounded_stack_size to emit_call\n+\tinstead of the unrounded size.\n+\n 1999-04-28 14:40 Bruce Korb <ddsinc09@ix.netcom.com>\n \n \t* fixinc/mkfixinc.sh: Makesure the result shell script is writable"}, {"sha": "03bac91251bf73d0d632566bc0f2cdecadae559b", "filename": "gcc/calls.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062e7fd8826384170b07fae9a4d8fd16c8f03083/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062e7fd8826384170b07fae9a4d8fd16c8f03083/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=062e7fd8826384170b07fae9a4d8fd16c8f03083", "patch": "@@ -389,7 +389,7 @@ emit_call_1 (funexp, fndecl, funtype, stack_size, rounded_stack_size,\n      rtx call_fusage;\n      int is_const;\n {\n-  rtx stack_size_rtx = GEN_INT (stack_size);\n+  rtx rounded_stack_size_rtx = GEN_INT (rounded_stack_size);\n   rtx struct_value_size_rtx = GEN_INT (struct_value_size);\n   rtx call_insn;\n #ifndef ACCUMULATE_OUTGOING_ARGS\n@@ -416,10 +416,10 @@ emit_call_1 (funexp, fndecl, funtype, stack_size, rounded_stack_size,\n       if (valreg)\n \tpat = gen_call_value_pop (valreg,\n \t\t\t\t  gen_rtx_MEM (FUNCTION_MODE, funexp),\n-\t\t\t\t  stack_size_rtx, next_arg_reg, n_pop);\n+\t\t\t\t  rounded_stack_size_rtx, next_arg_reg, n_pop);\n       else\n \tpat = gen_call_pop (gen_rtx_MEM (FUNCTION_MODE, funexp),\n-\t\t\t    stack_size_rtx, next_arg_reg, n_pop);\n+\t\t\t    rounded_stack_size_rtx, next_arg_reg, n_pop);\n \n       emit_call_insn (pat);\n       already_popped = 1;\n@@ -434,11 +434,11 @@ emit_call_1 (funexp, fndecl, funtype, stack_size, rounded_stack_size,\n       if (valreg)\n \temit_call_insn (gen_call_value (valreg,\n \t\t\t\t\tgen_rtx_MEM (FUNCTION_MODE, funexp),\n-\t\t\t\t\tstack_size_rtx, next_arg_reg,\n+\t\t\t\t\trounded_stack_size_rtx, next_arg_reg,\n \t\t\t\t\tNULL_RTX));\n       else\n \temit_call_insn (gen_call (gen_rtx_MEM (FUNCTION_MODE, funexp),\n-\t\t\t\t  stack_size_rtx, next_arg_reg,\n+\t\t\t\t  rounded_stack_size_rtx, next_arg_reg,\n \t\t\t\t  struct_value_size_rtx));\n     }\n   else\n@@ -492,16 +492,16 @@ emit_call_1 (funexp, fndecl, funtype, stack_size, rounded_stack_size,\n \t  = gen_rtx_EXPR_LIST (VOIDmode,\n \t\t\t       gen_rtx_CLOBBER (VOIDmode, stack_pointer_rtx),\n \t\t\t       CALL_INSN_FUNCTION_USAGE (call_insn));\n-      stack_size -= n_popped;\n       rounded_stack_size -= n_popped;\n+      rounded_stack_size_rtx = GEN_INT (rounded_stack_size);\n     }\n \n   if (rounded_stack_size != 0)\n     {\n       if (flag_defer_pop && inhibit_defer_pop == 0 && !is_const)\n \tpending_stack_adjust += rounded_stack_size;\n       else\n-\tadjust_stack (GEN_INT (rounded_stack_size));\n+\tadjust_stack (rounded_stack_size_rtx);\n     }\n #endif\n }"}]}