{"sha": "99fcd602a82e28e1d6a843e5cbe011b570dc81fa", "node_id": "C_kwDOANBUbNoAKDk5ZmNkNjAyYTgyZTI4ZTFkNmE4NDNlNWNiZTAxMWI1NzBkYzgxZmE", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-03-13T16:29:45Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-03-18T15:23:23Z"}, "message": "libcody: Do not use a dummy port number in getaddrinfo().\n\nthe getaddrinfo() requires either a non-null name for the server or\na port service / number.  In the code that opens a connection we have\nbeen calling this with a dummy port number of \"0\".  Unfortunately this\ntriggers a bug in some BSD versions and OSes importing that code.\n\nIn this part of the code we do not really need a port number, since it\nis not reasonable to open a connection to an unspecified host.\n\nSetting hints info field to 0, and the servname parm to nullptr works\naround the BSD bug in this case.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\nlibcody/ChangeLog:\n\n\t* netclient.cc (OpenInet6): Do not provide a dummy port number\n\tin the getaddrinfo() call.", "tree": {"sha": "910b447b760b47e8dbf2b1b44d37e16a9128bcf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/910b447b760b47e8dbf2b1b44d37e16a9128bcf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99fcd602a82e28e1d6a843e5cbe011b570dc81fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99fcd602a82e28e1d6a843e5cbe011b570dc81fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99fcd602a82e28e1d6a843e5cbe011b570dc81fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99fcd602a82e28e1d6a843e5cbe011b570dc81fa/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "356e2720e9030927579024c2f060d665a0b9080f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/356e2720e9030927579024c2f060d665a0b9080f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/356e2720e9030927579024c2f060d665a0b9080f"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "558808be48588368f96d6b40b48c75380427b7db", "filename": "libcody/netclient.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99fcd602a82e28e1d6a843e5cbe011b570dc81fa/libcody%2Fnetclient.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99fcd602a82e28e1d6a843e5cbe011b570dc81fa/libcody%2Fnetclient.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fnetclient.cc?ref=99fcd602a82e28e1d6a843e5cbe011b570dc81fa", "patch": "@@ -93,7 +93,7 @@ int OpenInet6 (char const **e, char const *name, int port)\n     }\n \n   addrinfo hints;\n-  hints.ai_flags = AI_NUMERICSERV;\n+  hints.ai_flags = 0;\n   hints.ai_family = AF_INET6;\n   hints.ai_socktype = SOCK_STREAM;\n   hints.ai_protocol = 0;\n@@ -102,9 +102,7 @@ int OpenInet6 (char const **e, char const *name, int port)\n   hints.ai_canonname = nullptr;\n   hints.ai_next = nullptr;\n \n-  /* getaddrinfo requires a port number, but is quite happy to accept\n-     invalid ones.  So don't rely on it.  */\n-  if (int err = getaddrinfo (name, \"0\", &hints, &addrs))\n+  if (int err = getaddrinfo (name, nullptr, &hints, &addrs))\n     {\n       errstr = gai_strerror (err);\n       // What's the best errno to set?"}]}