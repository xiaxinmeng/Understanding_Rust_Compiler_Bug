{"sha": "2baa36d4911940a068e63f2ee4298c13f92cf8d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJhYTM2ZDQ5MTE5NDBhMDY4ZTYzZjJlZTQyOThjMTNmOTJjZjhkOQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-10-12T00:16:25Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-10-12T00:16:25Z"}, "message": "Daily bump.", "tree": {"sha": "8e9fb9ab40854769deb67d5c04c26294e52f26eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e9fb9ab40854769deb67d5c04c26294e52f26eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2baa36d4911940a068e63f2ee4298c13f92cf8d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2baa36d4911940a068e63f2ee4298c13f92cf8d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2baa36d4911940a068e63f2ee4298c13f92cf8d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2baa36d4911940a068e63f2ee4298c13f92cf8d9/comments", "author": null, "committer": null, "parents": [{"sha": "2ad4120746f401959637e467112cb768f945463d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad4120746f401959637e467112cb768f945463d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ad4120746f401959637e467112cb768f945463d"}], "stats": {"total": 195, "additions": 194, "deletions": 1}, "files": [{"sha": "a5dadb9c37c5c2e722dc1b914d62b7e59f982d37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2baa36d4911940a068e63f2ee4298c13f92cf8d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2baa36d4911940a068e63f2ee4298c13f92cf8d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2baa36d4911940a068e63f2ee4298c13f92cf8d9", "patch": "@@ -1,3 +1,28 @@\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.c (darwin_globalize_label): Make a subset of\n+\tmetadate symbols global.\n+\t(darwin_label_is_anonymous_local_objc_name): Make a subset of\n+\tmetadata symbols linker-visible.\n+\t(darwin_override_options): Track more target OS versions, make\n+\tthe next_runtime version track this (unless it's set to 0 for\n+\tGNU runtime).\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.c (darwin_globalize_label): Add protocol\n+\tmeta-data labels to the set that are global.\n+\t(darwin_label_is_anonymous_local_objc_name): Arrange for meta-\n+\tdata start labels to be linker-visible.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.c (darwin_objc2_section): Allow for\n+\tvalues > 1 to represent the next runtime.\n+\t(darwin_objc1_section): Likewise.\n+\t* config/darwin.h (NEXT_OBJC_RUNTIME): Set the default\n+\tnext runtime value to be 10.5.8.\n+\n 2020-10-10  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-modref.c (modref_transform): Fix parameter map computation."}, {"sha": "02373369eab52090658584934b73652d79aab446", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2baa36d4911940a068e63f2ee4298c13f92cf8d9/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2baa36d4911940a068e63f2ee4298c13f92cf8d9/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=2baa36d4911940a068e63f2ee4298c13f92cf8d9", "patch": "@@ -1 +1 @@\n-20201011\n+20201012"}, {"sha": "98e0f4555257d898af4aeaf6b373e6a119d5563a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2baa36d4911940a068e63f2ee4298c13f92cf8d9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2baa36d4911940a068e63f2ee4298c13f92cf8d9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2baa36d4911940a068e63f2ee4298c13f92cf8d9", "patch": "@@ -1,3 +1,10 @@\n+2020-10-11  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* libgnat/a-numaux.ads: Make all imports Intrinsic.\n+\t* libgnat/a-numaux__darwin.ads: Likewise.\n+\t* libgnat/a-numaux__libc-x86.ads: Likewise.\n+\t* libgnat/a-numaux__vxworks.ads: Likewise.\n+\n 2020-09-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (Subprogram_Body_to_gnu): Set the end locus"}, {"sha": "f69d2d7d5ad27601b73c61d33c4b397871efcb95", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2baa36d4911940a068e63f2ee4298c13f92cf8d9/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2baa36d4911940a068e63f2ee4298c13f92cf8d9/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=2baa36d4911940a068e63f2ee4298c13f92cf8d9", "patch": "@@ -1,3 +1,69 @@\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc-next-runtime-abi-02.c\n+\t(create_global_decl): Update to allow the caller to\n+\tspecify declaration or definition.\n+\t(create_hidden_decl): Likewise.\n+\t(next_runtime_abi_02_protocol_decl): Make the symbol\n+\tweak and hidden for later OS runtime versions.\n+\t(build_v2_protocol_list_address_table): Likewise.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc-next-runtime-abi-02.c (objc_v2_build_ivar_ref): Test\n+\tDECL_C_BIT_FIELD to detect that an ivar is a bitfield.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc-next-runtime-abi-02.c (FIXUP_NEEDED): Rename ...\n+\t(USE_FIXUP_BEFORE): ... to this.\n+\t(next_runtime_02_initialize): Likewise.\n+\t(next_runtime_abi_02_get_arg_type_list_base): Likewise.\n+\t(next_runtime_abi_02_build_objc_method_call): Likewise.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc-next-runtime-abi-02.c (TAG_MSGSENDSUPER): Revised\n+\tspelling.\n+\t(TAG_MSGSENDID): Likewise.\n+\t(TAG_MSGSENDSUPER_STRET): Likewise.\n+\t(TAG_MSGSENDID_STRET): Likewise.\n+\t(FIXUP_NEEDED): Likewise.\n+\t(TAG_FIXUP): New.\n+\t(next_runtime_02_initialize): Adjust message calls to use\n+\tfixup variants only when required.\n+\t(next_runtime_abi_02_get_arg_type_list_base): Correct\n+\tindent.\n+\t(build_v2_build_objc_method_call): New.\n+\t(build_v2_objc_method_fixup_call): Split out from ...\n+\t(next_runtime_abi_02_build_objc_method_call): ... here.\n+\tArrange to adjust the call on the basis of the target\n+\truntime.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc-runtime-shared-support.c (start_var_decl): Make the\n+\tdecl_assembler_name follow the metadata name for C++ on NeXT\n+\truntime platforms.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc-next-runtime-abi-02.c\n+\t(next_runtime_abi_02_category_decl): Adjust category\n+\tsuperclass name ordering.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc-next-runtime-abi-02.c (build_v2_super_template): Add new\n+\tfields to the template.\n+\t(build_v2_protocol_template): Build new field entries.\n+\t(generate_v2_meth_descriptor_table): Adjust to allow recording all\n+\tmethod types.\n+\t(generate_v2_meth_type_list): New.\n+\t(build_v2_protocol_initializer): Initialize the additional fields.\n+\t(generate_v2_protocols): Record method types for all entries and\n+\tgenerate the additional method type table.\n+\n 2020-10-10  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* objc-next-runtime-abi-02.c"}, {"sha": "12c7d8fe384ed171cf31aef71312536676c7f2c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2baa36d4911940a068e63f2ee4298c13f92cf8d9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2baa36d4911940a068e63f2ee4298c13f92cf8d9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2baa36d4911940a068e63f2ee4298c13f92cf8d9", "patch": "@@ -1,3 +1,78 @@\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* obj-c++.dg/plugin/diagnostic-test-expressions-1.mm:\n+\tAdjust testcase to include expressions for @selector and\n+\t@protocol. XFAIL where this is still not sufficient to obtain\n+\ta disgnostic range.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc-obj-c++-shared/TestsuiteObject.h: Add dummy retain and\n+\trelease method declarations.\n+\t* objc-obj-c++-shared/TestsuiteObject.m: Add dummy retain and\n+\trelease implementations.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* obj-c++.dg/objc-gc-3.mm:i Skip for Darwin >= 16.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* obj-c++.dg/cxx-ivars-3.mm: Skip for macOS >= 10.7.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* obj-c++.dg/gnu-api-2-class-meta.mm: Add a flag to cause NeXT\n+\theaders to expose prototypes for messaging.\n+\t* obj-c++.dg/gnu-api-2-class.mm: Likewise.\n+\t* obj-c++.dg/gnu-api-2-objc.mm: Skip this because of the extra\n+\tprotocols pulled in by system headers.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc.dg/plugin/diagnostic-test-expressions-1.m: Use assignment\n+\texpressions for @selector and @protocol to obtain a useful\n+\tdiagnostic range.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc.dg/call-super-2.m: Remove inclusion of runtime.h.\n+\tAdd a FIXME about the test portability.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc.dg/torture/forward-1.m: Implement forwarding using the\n+\tnative NeXT (NSInvocation) method for Darwin.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc.dg/ivar-scope-4.m: Add inititialize method to the\n+\troot class.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc.dg/gnu-api-2-class-meta.m: Add a flag to cause NeXT\n+\theaders to expose prototypes for messaging. Mark the root\n+\tclass if the objc_root_class attribute is available. Use\n+\tchar ** as the second arg to main.\n+\t* objc.dg/gnu-api-2-class.m: Use dispatch prototype.\n+\t* objc.dg/gnu-api-2-objc.m: Skip on NeXT because of extra\n+\tprototypes pulled in by headers.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc.dg/objc-gc-4.m: Disable for macOS 10.15 and 11.x.\n+\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc-obj-c++-shared/TestsuiteObject.h: If the compiler\n+\tsupports objc_root_object attributes, then mark the testsuite\n+\tobject accordingly.\n+\t* objc-obj-c++-shared/TestsuiteObject.m: Avoid direct access\n+\tto isa, which is an error for modern Objective-C.\n+\t* objc/execute/class-tests-1.h: Declare a string function we\n+\tuse locally (avoid pulling in the whole of string.h).\n+\n 2020-10-10  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* gcc.dg/darwin-sections.c: Adjust test for renamed BSS and common"}, {"sha": "b78355f96935754a42fa8da8ca5f7809f5f77c74", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2baa36d4911940a068e63f2ee4298c13f92cf8d9/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2baa36d4911940a068e63f2ee4298c13f92cf8d9/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=2baa36d4911940a068e63f2ee4298c13f92cf8d9", "patch": "@@ -1,3 +1,8 @@\n+2020-10-11  Clement Chigot  <clement.chigot@atos.net>\n+\n+\t* config/t-aix: Delete and recreate libatomic before creating\n+\tFAT library.\n+\n 2020-09-27  Clement Chigot  <clement.chigot@atos.net>\n \n \t* config/t-aix: Use $(AR) without -X32_64."}, {"sha": "bab61a7b1dae88cb53fbeae419494091775c4eb6", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2baa36d4911940a068e63f2ee4298c13f92cf8d9/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2baa36d4911940a068e63f2ee4298c13f92cf8d9/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=2baa36d4911940a068e63f2ee4298c13f92cf8d9", "patch": "@@ -1,3 +1,8 @@\n+2020-10-11  Clement Chigot  <clement.chigot@atos.net>\n+\n+\t* config/t-aix: Delete and recreate libgomp before creating\n+\tFAT library.\n+\n 2020-10-08  Tom de Vries  <tdevries@suse.de>\n \n \tPR libgomp/81802"}, {"sha": "43578a06292e3d1f5cee5873bcd15881c2d24af7", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2baa36d4911940a068e63f2ee4298c13f92cf8d9/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2baa36d4911940a068e63f2ee4298c13f92cf8d9/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=2baa36d4911940a068e63f2ee4298c13f92cf8d9", "patch": "@@ -1,3 +1,8 @@\n+2020-10-11  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* encoding.c (_darwin_rs6000_special_round_type_align):\n+\tUse DFMode in the emulation of the special round type.\n+\n 2020-05-29  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR bootstrap/95413"}, {"sha": "199f4f7be97fb7fd06d997ebc7923eefcefafa7f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2baa36d4911940a068e63f2ee4298c13f92cf8d9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2baa36d4911940a068e63f2ee4298c13f92cf8d9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2baa36d4911940a068e63f2ee4298c13f92cf8d9", "patch": "@@ -1,3 +1,8 @@\n+2020-10-11  Clement Chigot  <clement.chigot@atos.net>\n+\n+\t* config/os/aix/t-aix: Add complementary mode object file to\n+\tlibstdc++fs.a\n+\n 2020-10-10  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/97362"}]}