{"sha": "f4874691812bc20e3d8e3302db439c27f30c472c", "node_id": "C_kwDOANBUbNoAKGY0ODc0NjkxODEyYmMyMGUzZDhlMzMwMmRiNDM5YzI3ZjMwYzQ3MmM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-01T13:47:24Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-02T12:54:16Z"}, "message": "libstdc++: Remove unnecessary variant member in std::expected\n\nHui Xie pointed out that we don't need a dummy member in the union,\nbecause all constructors always initialize either _M_val or _M_unex.\n\nWe still need the _M_void member of the expected<void, E>\nspecialization, because the constructor has to initialize something when\nnot using the _M_unex member.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/expected (expected::_M_invalid): Remove.", "tree": {"sha": "99b9be831ea469f73b4e8ea163fde347b07a2f70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99b9be831ea469f73b4e8ea163fde347b07a2f70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4874691812bc20e3d8e3302db439c27f30c472c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4874691812bc20e3d8e3302db439c27f30c472c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4874691812bc20e3d8e3302db439c27f30c472c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4874691812bc20e3d8e3302db439c27f30c472c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf35818a390e7cb4b1a4fa70c243ede59d6cbbac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf35818a390e7cb4b1a4fa70c243ede59d6cbbac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf35818a390e7cb4b1a4fa70c243ede59d6cbbac"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "e491ce41591e17d220e70ea6a1604783d7a89b88", "filename": "libstdc++-v3/include/std/expected", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4874691812bc20e3d8e3302db439c27f30c472c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fexpected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4874691812bc20e3d8e3302db439c27f30c472c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fexpected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fexpected?ref=f4874691812bc20e3d8e3302db439c27f30c472c", "patch": "@@ -359,7 +359,7 @@ namespace __expected\n       requires is_copy_constructible_v<_Tp> && is_copy_constructible_v<_Er>\n       && (!is_trivially_copy_constructible_v<_Tp>\n \t  || !is_trivially_copy_constructible_v<_Er>)\n-      : _M_invalid(), _M_has_value(__x._M_has_value)\n+      : _M_has_value(__x._M_has_value)\n       {\n \tif (_M_has_value)\n \t  std::construct_at(__builtin_addressof(_M_val), __x._M_val);\n@@ -376,7 +376,7 @@ namespace __expected\n       requires is_move_constructible_v<_Tp> && is_move_constructible_v<_Er>\n       && (!is_trivially_move_constructible_v<_Tp>\n \t  || !is_trivially_move_constructible_v<_Er>)\n-      : _M_invalid(), _M_has_value(__x._M_has_value)\n+      : _M_has_value(__x._M_has_value)\n       {\n \tif (_M_has_value)\n \t  std::construct_at(__builtin_addressof(_M_val),\n@@ -394,7 +394,7 @@ namespace __expected\n \texpected(const expected<_Up, _Gr>& __x)\n \tnoexcept(__and_v<is_nothrow_constructible<_Tp, const _Up&>,\n \t\t\t is_nothrow_constructible<_Er, const _Gr&>>)\n-\t: _M_invalid(), _M_has_value(__x._M_has_value)\n+\t: _M_has_value(__x._M_has_value)\n \t{\n \t  if (_M_has_value)\n \t    std::construct_at(__builtin_addressof(_M_val), __x._M_val);\n@@ -410,7 +410,7 @@ namespace __expected\n \texpected(expected<_Up, _Gr>&& __x)\n \tnoexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,\n \t\t\t is_nothrow_constructible<_Er, _Gr>>)\n-\t: _M_invalid(), _M_has_value(__x._M_has_value)\n+\t: _M_has_value(__x._M_has_value)\n \t{\n \t  if (_M_has_value)\n \t    std::construct_at(__builtin_addressof(_M_val),\n@@ -890,7 +890,6 @@ namespace __expected\n       }\n \n       union {\n-\tstruct { } _M_invalid;\n \t_Tp _M_val;\n \t_Er _M_unex;\n       };"}]}