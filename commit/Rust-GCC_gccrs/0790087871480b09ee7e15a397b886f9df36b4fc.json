{"sha": "0790087871480b09ee7e15a397b886f9df36b4fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc5MDA4Nzg3MTQ4MGIwOWVlN2UxNWEzOTdiODg2ZjlkZjM2YjRmYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-03-09T17:03:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-03-09T17:03:34Z"}, "message": "re PR c++/16859 (Empty initializer for array of unknown size spuriously accepted)\n\n2005-03-09  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR c++/16859\n\t* decl.c (complete_array_type): In pedantic mode, return\n\t3 for an empty initializer list as the initializer for an\n\tarray of unknown bound (8.5.1/4).\n\t(maybe_deduce_size_from_array_init): Fix final test to use\n\tthe above.\n\nFrom-SVN: r96194", "tree": {"sha": "8eb378f345a71c8ed7a59ad7a085cd3bd7b2144c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8eb378f345a71c8ed7a59ad7a085cd3bd7b2144c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0790087871480b09ee7e15a397b886f9df36b4fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0790087871480b09ee7e15a397b886f9df36b4fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0790087871480b09ee7e15a397b886f9df36b4fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0790087871480b09ee7e15a397b886f9df36b4fc/comments", "author": null, "committer": null, "parents": [{"sha": "5e91f7a384b7a767308f73b7a9d467986cc3472c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e91f7a384b7a767308f73b7a9d467986cc3472c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e91f7a384b7a767308f73b7a9d467986cc3472c"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "7986946e3e291ca467c90f362e62c8c7bef002e7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0790087871480b09ee7e15a397b886f9df36b4fc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0790087871480b09ee7e15a397b886f9df36b4fc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0790087871480b09ee7e15a397b886f9df36b4fc", "patch": "@@ -1,3 +1,12 @@\n+2005-03-09  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR c++/16859\t\n+\t* decl.c (complete_array_type): In pedantic mode, return\n+\t3 for an empty initializer list as the initializer for an\n+\tarray of unknown bound (8.5.1/4).\n+\t(maybe_deduce_size_from_array_init): Fix final test to use\n+\tthe above.\n+\n 2005-03-08  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/20186"}, {"sha": "c253028709a044c463fa7a5fcc085b458a14fca1", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0790087871480b09ee7e15a397b886f9df36b4fc/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0790087871480b09ee7e15a397b886f9df36b4fc/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=0790087871480b09ee7e15a397b886f9df36b4fc", "patch": "@@ -3924,9 +3924,7 @@ maybe_deduce_size_from_array_init (tree decl, tree init)\n \t    DECL_EXTERNAL (decl) = 1;\n \t}\n \n-      if (pedantic && TYPE_DOMAIN (type) != NULL_TREE\n-\t  && tree_int_cst_lt (TYPE_MAX_VALUE (TYPE_DOMAIN (type)),\n-\t\t\t      integer_zero_node))\n+      if (failure == 3)\n \terror (\"zero-size array %qD\", decl);\n \n       layout_decl (decl, 0);\n@@ -5329,7 +5327,8 @@ expand_static_init (tree decl, tree init)\n \f\n /* Make TYPE a complete type based on INITIAL_VALUE.\n    Return 0 if successful, 1 if INITIAL_VALUE can't be deciphered,\n-   2 if there was no information (in which case assume 0 if DO_DEFAULT).  */\n+   2 if there was no information (in which case assume 0 if DO_DEFAULT),\n+   3 if the initializer list is empty (in pedantic mode). */\n \n int\n complete_array_type (tree type, tree initial_value, int do_default)\n@@ -5371,6 +5370,9 @@ complete_array_type (tree type, tree initial_value, int do_default)\n \t      else\n \t\tmaxindex = size_binop (PLUS_EXPR, maxindex, ssize_int (1));\n \t    }\n+\n+\t  if (pedantic && tree_int_cst_equal (maxindex, ssize_int (-1)))\n+\t    value = 3;\n \t}\n       else\n \t{"}]}