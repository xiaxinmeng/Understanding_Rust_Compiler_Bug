{"sha": "61f0131c68b026c24560d3b9adde5ab7c34c073c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFmMDEzMWM2OGIwMjZjMjQ1NjBkM2I5YWRkZTVhYjdjMzRjMDczYw==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@redhat.com", "date": "2001-01-19T09:20:14Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2001-01-19T09:20:14Z"}, "message": "alias.c (find_base_value): Recognize TRUNCATE.\n\n\t* alias.c (find_base_value): Recognize TRUNCATE.\n\t(record_set): In PLUS case, invalidate if other summand is also a\n\tbase value.\n\nFrom-SVN: r39128", "tree": {"sha": "b6bec1c4b2aae7a1debf11a5759969276bc5ae55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6bec1c4b2aae7a1debf11a5759969276bc5ae55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61f0131c68b026c24560d3b9adde5ab7c34c073c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f0131c68b026c24560d3b9adde5ab7c34c073c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61f0131c68b026c24560d3b9adde5ab7c34c073c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f0131c68b026c24560d3b9adde5ab7c34c073c/comments", "author": null, "committer": null, "parents": [{"sha": "08c2df0f4f04b0f799842f66b68d17dce626fe02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c2df0f4f04b0f799842f66b68d17dce626fe02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c2df0f4f04b0f799842f66b68d17dce626fe02"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "6866f157e8de9b22cdb08c5d455f65ada0babacc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f0131c68b026c24560d3b9adde5ab7c34c073c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f0131c68b026c24560d3b9adde5ab7c34c073c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61f0131c68b026c24560d3b9adde5ab7c34c073c", "patch": "@@ -1,3 +1,9 @@\n+Fri Jan 19 09:18:42 2001  J\"orn Rennecke <amylaar@redhat.com>\n+\n+\t* alias.c (find_base_value): Recognize TRUNCATE.\n+\t(record_set): In PLUS case, invalidate if other summand is also a\n+\tbase value.\n+\n Thu Jan 18 06:43:04 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* flow.c (mark_set_1, case PARALLEL): Now case; rework to allow"}, {"sha": "a77e7c8f7c1e93c203e7c0b0fbc724d3bb141cd2", "filename": "gcc/alias.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f0131c68b026c24560d3b9adde5ab7c34c073c/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f0131c68b026c24560d3b9adde5ab7c34c073c/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=61f0131c68b026c24560d3b9adde5ab7c34c073c", "patch": "@@ -759,6 +759,10 @@ find_base_value (src)\n \treturn find_base_value (XEXP (src, 0));\n       return 0;\n \n+    case TRUNCATE:\n+      if (GET_MODE_SIZE (GET_MODE (src)) < GET_MODE_SIZE (Pmode))\n+\tbreak;\n+      /* Fall through.  */\n     case ZERO_EXTEND:\n     case SIGN_EXTEND:\t/* used for NT/Alpha pointers */\n     case HIGH:\n@@ -832,11 +836,26 @@ record_set (dest, set, data)\n     switch (GET_CODE (src))\n       {\n       case LO_SUM:\n-      case PLUS:\n       case MINUS:\n \tif (XEXP (src, 0) != dest && XEXP (src, 1) != dest)\n \t  new_reg_base_value[regno] = 0;\n \tbreak;\n+      case PLUS:\n+\t/* If the value we add in the PLUS is also a valid base value,\n+\t   this might be the actual base value, and the original value\n+\t   an index.  */\n+\t{\n+\t  rtx other = NULL_RTX;\n+\n+\t  if (XEXP (src, 0) == dest)\n+\t    other = XEXP (src, 1);\n+\t  else if (XEXP (src, 1) == dest)\n+\t    other = XEXP (src, 0);\n+\n+\t  if (! other || find_base_value (other))\n+\t    new_reg_base_value[regno] = 0;\n+\t  break;\n+\t}\n       case AND:\n \tif (XEXP (src, 0) != dest || GET_CODE (XEXP (src, 1)) != CONST_INT)\n \t  new_reg_base_value[regno] = 0;"}]}