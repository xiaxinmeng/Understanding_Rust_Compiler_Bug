{"sha": "9263e6d6cd693077540af9c91a0d11df55aac444", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI2M2U2ZDZjZDY5MzA3NzU0MGFmOWM5MWEwZDExZGY1NWFhYzQ0NA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-09-15T06:09:53Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-15T06:09:53Z"}, "message": "decl.c (build_target_expr): Set TREE_SIDE_EFFECTS on the TARGET_EXPR.\n\n\t* decl.c (build_target_expr): Set TREE_SIDE_EFFECTS on the\n\tTARGET_EXPR.\n\t* call.c (build_over_call): Don't set TREE_SIDE_EFFECTS on\n\tthe TARGET_EXPR.\n\t* cvt.c (build_up_reference): Likewise.\n\t* tree.c (build_cplus_new): Likewise.\n\t(get_target_expr): Likewise.\n\nFrom-SVN: r29426", "tree": {"sha": "634dafd7ae201fdd23c6c986014764530e0e8a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/634dafd7ae201fdd23c6c986014764530e0e8a7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9263e6d6cd693077540af9c91a0d11df55aac444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9263e6d6cd693077540af9c91a0d11df55aac444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9263e6d6cd693077540af9c91a0d11df55aac444", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9263e6d6cd693077540af9c91a0d11df55aac444/comments", "author": null, "committer": null, "parents": [{"sha": "41babf2e0dfabe8afe45da1c0bf099af468be048", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41babf2e0dfabe8afe45da1c0bf099af468be048", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41babf2e0dfabe8afe45da1c0bf099af468be048"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "9697001144ae5f4fe496158876141f00b4853fa8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9263e6d6cd693077540af9c91a0d11df55aac444/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9263e6d6cd693077540af9c91a0d11df55aac444/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9263e6d6cd693077540af9c91a0d11df55aac444", "patch": "@@ -1,3 +1,13 @@\n+1999-09-14  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl.c (build_target_expr): Set TREE_SIDE_EFFECTS on the \n+\tTARGET_EXPR.\n+\t* call.c (build_over_call): Don't set TREE_SIDE_EFFECTS on\n+\tthe TARGET_EXPR.\n+\t* cvt.c (build_up_reference): Likewise.\n+\t* tree.c (build_cplus_new): Likewise.\n+\t(get_target_expr): Likewise.\n+\t\n Tue Sep 14 01:45:10 1999  Marc Espie <espie@cvs.openbsd.org>\n \n \t* Makefile.in:  Prepend $(SHELL) to move-if-change calls."}, {"sha": "4c9cdb8a02f7d668a0abf4b7dc43461150803c3e", "filename": "gcc/cp/call.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9263e6d6cd693077540af9c91a0d11df55aac444/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9263e6d6cd693077540af9c91a0d11df55aac444/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=9263e6d6cd693077540af9c91a0d11df55aac444", "patch": "@@ -4038,7 +4038,6 @@ build_over_call (cand, args, flags)\n \t    {\n \t      val = build_decl (VAR_DECL, NULL_TREE, DECL_CONTEXT (fn));\n \t      val = build_target_expr (val, arg);\n-\t      TREE_SIDE_EFFECTS (val) = 1;\n \t      return val;\n \t    }\n \t}"}, {"sha": "79968a8686971917d19e290d2448bd1b9b041be7", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9263e6d6cd693077540af9c91a0d11df55aac444/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9263e6d6cd693077540af9c91a0d11df55aac444/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=9263e6d6cd693077540af9c91a0d11df55aac444", "patch": "@@ -365,7 +365,6 @@ build_up_reference (type, arg, flags)\n       tree slot = build_decl (VAR_DECL, NULL_TREE, argtype);\n       DECL_ARTIFICIAL (slot) = 1;\n       arg = build_target_expr (slot, arg);\n-      TREE_SIDE_EFFECTS (arg) = 1;\n     }\n \n   /* If we had a way to wrap this up, and say, if we ever needed it's"}, {"sha": "789fe4e9445e799fa7b7ad6b8b51c41adb587867", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9263e6d6cd693077540af9c91a0d11df55aac444/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9263e6d6cd693077540af9c91a0d11df55aac444/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=9263e6d6cd693077540af9c91a0d11df55aac444", "patch": "@@ -14127,8 +14127,17 @@ build_target_expr (decl, value)\n      tree decl;\n      tree value;\n {\n-  return build (TARGET_EXPR, TREE_TYPE (decl), decl, value, \n-\t\tmaybe_build_cleanup (decl), NULL_TREE);\n+  tree t;\n+\n+  t = build (TARGET_EXPR, TREE_TYPE (decl), decl, value, \n+\t     maybe_build_cleanup (decl), NULL_TREE);\n+  /* We always set TREE_SIDE_EFFECTS so that expand_expr does not\n+     ignore the TARGET_EXPR.  If there really turn out to be no\n+     side-effects, then the optimizer should be able to get rid of\n+     whatever code is generated anyhow.  */\n+  TREE_SIDE_EFFECTS (t) = 1;\n+\n+  return t;\n }\n \n /* If DECL is of a type which needs a cleanup, build that cleanup"}, {"sha": "48425ed1e5d3abdbf037f12fc9eab96173387fd8", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9263e6d6cd693077540af9c91a0d11df55aac444/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9263e6d6cd693077540af9c91a0d11df55aac444/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=9263e6d6cd693077540af9c91a0d11df55aac444", "patch": "@@ -252,7 +252,6 @@ build_cplus_new (type, init)\n        && TREE_CODE (TREE_OPERAND (fn, 0)) == FUNCTION_DECL\n        && DECL_CONSTRUCTOR_P (TREE_OPERAND (fn, 0)));\n   rval = build_target_expr (slot, rval);\n-  TREE_SIDE_EFFECTS (rval) = 1;\n \n   return rval;\n }\n@@ -270,7 +269,6 @@ get_target_expr (init)\n   DECL_ARTIFICIAL (slot) = 1;\n   layout_decl (slot, 0);\n   rval = build_target_expr (slot, init);\n-  TREE_SIDE_EFFECTS (rval) = 1;\n \n   return rval;\n }"}]}