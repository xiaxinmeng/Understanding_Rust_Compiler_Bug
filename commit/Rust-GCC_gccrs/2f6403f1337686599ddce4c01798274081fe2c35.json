{"sha": "2f6403f1337686599ddce4c01798274081fe2c35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY2NDAzZjEzMzc2ODY1OTlkZGNlNGMwMTc5ODI3NDA4MWZlMmMzNQ==", "commit": {"author": {"name": "Terry Guo", "email": "terry.guo@arm.com", "date": "2014-09-30T10:02:39Z"}, "committer": {"name": "Xuepeng Guo", "email": "xguo@gcc.gnu.org", "date": "2014-09-30T10:02:39Z"}, "message": "arm-cores.def (cortex-m7): New core name.\n\n2014-09-30  Terry Guo  <terry.guo@arm.com>\n\n\t* config/arm/arm-cores.def (cortex-m7): New core name.\n\t* config/arm/arm-fpus.def (fpv5-sp-d16): New fpu name.\n\t(fpv5-d16): Ditto.\n\t* config/arm/arm-tables.opt: Regenerated.\n\t* config/arm/arm-tune.md: Regenerated.\n\t* config/arm/arm.h (TARGET_VFP5): New macro.\n\t* config/arm/bpabi.h (BE8_LINK_SPEC): Include cortex-m7.\n\t* config/arm/vfp.md (<vrint_pattern><SDF:mode>2,\n\tsmax<mode>3, smin<mode>3): Enabled for FPU FPv5.\n\t* doc/invoke.texi: Document new cpu and fpu names.\n\nFrom-SVN: r215711", "tree": {"sha": "41500c8135070cf53522a008ea2d04788197fbcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41500c8135070cf53522a008ea2d04788197fbcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f6403f1337686599ddce4c01798274081fe2c35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f6403f1337686599ddce4c01798274081fe2c35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f6403f1337686599ddce4c01798274081fe2c35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f6403f1337686599ddce4c01798274081fe2c35/comments", "author": null, "committer": null, "parents": [{"sha": "24f21354f88690bedd452a961b17d9f712c60ffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24f21354f88690bedd452a961b17d9f712c60ffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24f21354f88690bedd452a961b17d9f712c60ffb"}], "stats": {"total": 59, "additions": 45, "deletions": 14}, "files": [{"sha": "766e935638b959433bc597544e4abc5d4d2bc1e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f6403f1337686599ddce4c01798274081fe2c35", "patch": "@@ -1,3 +1,16 @@\n+2014-09-30  Terry Guo  <terry.guo@arm.com>\n+\n+\t* config/arm/arm-cores.def (cortex-m7): New core name.\n+\t* config/arm/arm-fpus.def (fpv5-sp-d16): New fpu name.\n+\t(fpv5-d16): Ditto.\n+\t* config/arm/arm-tables.opt: Regenerated.\n+\t* config/arm/arm-tune.md: Regenerated.\n+\t* config/arm/arm.h (TARGET_VFP5): New macro.\n+\t* config/arm/bpabi.h (BE8_LINK_SPEC): Include cortex-m7.\n+\t* config/arm/vfp.md (<vrint_pattern><SDF:mode>2,\n+\tsmax<mode>3, smin<mode>3): Enabled for FPU FPv5.\n+\t* doc/invoke.texi: Document new cpu and fpu names.\n+\n 2014-09-30  Jiong Wang  <jiong.wang@arm.com>\n \n \t* shrink-wrap.c (move_insn_for_shrink_wrap): Check \"can_throw_internal\""}, {"sha": "56ec7fd8fe7b262f9ebff8dd4d76b2dbcd58fecc", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=2f6403f1337686599ddce4c01798274081fe2c35", "patch": "@@ -149,6 +149,7 @@ ARM_CORE(\"cortex-r4\",\t\tcortexr4, cortexr4,\t\t7R,  FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-r4f\",\t\tcortexr4f, cortexr4f,\t\t7R,  FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-r5\",\t\tcortexr5, cortexr5,\t\t7R,  FL_LDSCHED | FL_ARM_DIV, cortex)\n ARM_CORE(\"cortex-r7\",\t\tcortexr7, cortexr7,\t\t7R,  FL_LDSCHED | FL_ARM_DIV, cortex)\n+ARM_CORE(\"cortex-m7\",\t\tcortexm7, cortexm7,\t\t7EM, FL_LDSCHED, v7m)\n ARM_CORE(\"cortex-m4\",\t\tcortexm4, cortexm4,\t\t7EM, FL_LDSCHED, v7m)\n ARM_CORE(\"cortex-m3\",\t\tcortexm3, cortexm3,\t\t7M,  FL_LDSCHED, v7m)\n ARM_CORE(\"marvell-pj4\",\t\tmarvell_pj4, marvell_pj4,\t7A,  FL_LDSCHED, 9e)"}, {"sha": "edd0c35247426f58b7fcd85c2be38f4bc6907c5d", "filename": "gcc/config/arm/arm-fpus.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Farm-fpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Farm-fpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-fpus.def?ref=2f6403f1337686599ddce4c01798274081fe2c35", "patch": "@@ -37,6 +37,8 @@ ARM_FPU(\"neon-fp16\",\tARM_FP_MODEL_VFP, 3, VFP_REG_D32, true, true, false)\n ARM_FPU(\"vfpv4\",\tARM_FP_MODEL_VFP, 4, VFP_REG_D32, false, true, false)\n ARM_FPU(\"vfpv4-d16\",\tARM_FP_MODEL_VFP, 4, VFP_REG_D16, false, true, false)\n ARM_FPU(\"fpv4-sp-d16\",\tARM_FP_MODEL_VFP, 4, VFP_REG_SINGLE, false, true, false)\n+ARM_FPU(\"fpv5-sp-d16\",\tARM_FP_MODEL_VFP, 5, VFP_REG_SINGLE, false, true, false)\n+ARM_FPU(\"fpv5-d16\",\tARM_FP_MODEL_VFP, 5, VFP_REG_D16, false, true, false)\n ARM_FPU(\"neon-vfpv4\",\tARM_FP_MODEL_VFP, 4, VFP_REG_D32, true, true, false)\n ARM_FPU(\"fp-armv8\",\tARM_FP_MODEL_VFP, 8, VFP_REG_D32, false, true, false)\n ARM_FPU(\"neon-fp-armv8\",ARM_FP_MODEL_VFP, 8, VFP_REG_D32, true, true, false)"}, {"sha": "04191bceefbb1f279f031d18ac11c083ea9d7d15", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=2f6403f1337686599ddce4c01798274081fe2c35", "patch": "@@ -273,6 +273,9 @@ Enum(processor_type) String(cortex-r5) Value(cortexr5)\n EnumValue\n Enum(processor_type) String(cortex-r7) Value(cortexr7)\n \n+EnumValue\n+Enum(processor_type) String(cortex-m7) Value(cortexm7)\n+\n EnumValue\n Enum(processor_type) String(cortex-m4) Value(cortexm4)\n \n@@ -423,17 +426,23 @@ EnumValue\n Enum(arm_fpu) String(fpv4-sp-d16) Value(11)\n \n EnumValue\n-Enum(arm_fpu) String(neon-vfpv4) Value(12)\n+Enum(arm_fpu) String(fpv5-sp-d16) Value(12)\n+\n+EnumValue\n+Enum(arm_fpu) String(fpv5-d16) Value(13)\n+\n+EnumValue\n+Enum(arm_fpu) String(neon-vfpv4) Value(14)\n \n EnumValue\n-Enum(arm_fpu) String(fp-armv8) Value(13)\n+Enum(arm_fpu) String(fp-armv8) Value(15)\n \n EnumValue\n-Enum(arm_fpu) String(neon-fp-armv8) Value(14)\n+Enum(arm_fpu) String(neon-fp-armv8) Value(16)\n \n EnumValue\n-Enum(arm_fpu) String(crypto-neon-fp-armv8) Value(15)\n+Enum(arm_fpu) String(crypto-neon-fp-armv8) Value(17)\n \n EnumValue\n-Enum(arm_fpu) String(vfp3) Value(16)\n+Enum(arm_fpu) String(vfp3) Value(18)\n "}, {"sha": "4217fbe8b2c8e62c3098fa531ad40600f948944b", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=2f6403f1337686599ddce4c01798274081fe2c35", "patch": "@@ -28,7 +28,8 @@\n \tgenericv7a,cortexa5,cortexa7,\n \tcortexa8,cortexa9,cortexa12,\n \tcortexa15,cortexr4,cortexr4f,\n-\tcortexr5,cortexr7,cortexm4,\n-\tcortexm3,marvell_pj4,cortexa15cortexa7,\n-\tcortexa53,cortexa57,cortexa57cortexa53\"\n+\tcortexr5,cortexr7,cortexm7,\n+\tcortexm4,cortexm3,marvell_pj4,\n+\tcortexa15cortexa7,cortexa53,cortexa57,\n+\tcortexa57cortexa53\"\n \t(const (symbol_ref \"((enum attr_tune) arm_tune)\")))"}, {"sha": "3623c70441e68481421174398488ce4359b573ff", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=2f6403f1337686599ddce4c01798274081fe2c35", "patch": "@@ -296,6 +296,9 @@ extern void (*arm_lang_output_object_attributes_hook)(void);\n /* FPU supports VFPv3 instructions.  */\n #define TARGET_VFP3 (TARGET_VFP && arm_fpu_desc->rev >= 3)\n \n+/* FPU supports FPv5 instructions.  */\n+#define TARGET_VFP5 (TARGET_VFP && arm_fpu_desc->rev >= 5)\n+\n /* FPU only supports VFP single-precision instructions.  */\n #define TARGET_VFP_SINGLE (TARGET_VFP && arm_fpu_desc->regs == VFP_REG_SINGLE)\n "}, {"sha": "9a471c251a8d5aa565f423fbf1e49d0380b80178", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=2f6403f1337686599ddce4c01798274081fe2c35", "patch": "@@ -73,7 +73,7 @@\n    |mcpu=generic-armv7-a                                \\\n    |march=armv7ve\t                                \\\n    |march=armv7-m|mcpu=cortex-m3                        \\\n-   |march=armv7e-m|mcpu=cortex-m4                       \\\n+   |march=armv7e-m|mcpu=cortex-m4|mcpu=cortex-m7        \\\n    |march=armv6-m|mcpu=cortex-m0                        \\\n    |march=armv8-a\t\t\t\t\t\\\n    :%{!r:--be8}}}\"\n@@ -91,7 +91,7 @@\n    |mcpu=generic-armv7-a                                \\\n    |march=armv7ve\t                                \\\n    |march=armv7-m|mcpu=cortex-m3                        \\\n-   |march=armv7e-m|mcpu=cortex-m4                       \\\n+   |march=armv7e-m|mcpu=cortex-m4|mcpu=cortex-m7        \\\n    |march=armv6-m|mcpu=cortex-m0                        \\\n    |march=armv8-a\t\t\t\t\t\\\n    :%{!r:--be8}}}\""}, {"sha": "6522c9082fa4998a814c8c203ea4a3e9e8cf5547", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=2f6403f1337686599ddce4c01798274081fe2c35", "patch": "@@ -1298,7 +1298,7 @@\n         (unspec:SDF [(match_operand:SDF 1\n \t\t         \"register_operand\" \"<F_constraint>\")]\n          VRINT))]\n-  \"TARGET_HARD_FLOAT && TARGET_FPU_ARMV8 <vfp_double_cond>\"\n+  \"TARGET_HARD_FLOAT && TARGET_VFP5 <vfp_double_cond>\"\n   \"vrint<vrint_variant>%?.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1\"\n   [(set_attr \"predicable\" \"<vrint_predicable>\")\n    (set_attr \"predicable_short_it\" \"no\")\n@@ -1329,7 +1329,7 @@\n   [(set (match_operand:SDF 0 \"register_operand\" \"=<F_constraint>\")\n         (smax:SDF (match_operand:SDF 1 \"register_operand\" \"<F_constraint>\")\n \t\t  (match_operand:SDF 2 \"register_operand\" \"<F_constraint>\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_FPU_ARMV8 <vfp_double_cond>\"\n+  \"TARGET_HARD_FLOAT && TARGET_VFP5 <vfp_double_cond>\"\n   \"vmaxnm.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"f_minmax<vfp_type>\")\n    (set_attr \"conds\" \"unconditional\")]\n@@ -1339,7 +1339,7 @@\n   [(set (match_operand:SDF 0 \"register_operand\" \"=<F_constraint>\")\n         (smin:SDF (match_operand:SDF 1 \"register_operand\" \"<F_constraint>\")\n \t\t  (match_operand:SDF 2 \"register_operand\" \"<F_constraint>\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_FPU_ARMV8 <vfp_double_cond>\"\n+  \"TARGET_HARD_FLOAT && TARGET_VFP5 <vfp_double_cond>\"\n   \"vminnm.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"f_minmax<vfp_type>\")\n    (set_attr \"conds\" \"unconditional\")]"}, {"sha": "5fe7e15b4e9146ddadfd48b7e4da38c708f5405a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6403f1337686599ddce4c01798274081fe2c35/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2f6403f1337686599ddce4c01798274081fe2c35", "patch": "@@ -12632,7 +12632,8 @@ Permissible names are: @samp{arm2}, @samp{arm250},\n @samp{cortex-a5}, @samp{cortex-a7}, @samp{cortex-a8}, @samp{cortex-a9},\n @samp{cortex-a12}, @samp{cortex-a15}, @samp{cortex-a53}, @samp{cortex-a57},\n @samp{cortex-r4},\n-@samp{cortex-r4f}, @samp{cortex-r5}, @samp{cortex-r7}, @samp{cortex-m4},\n+@samp{cortex-r4f}, @samp{cortex-r5}, @samp{cortex-r7}, @samp{cortex-m7},\n+@samp{cortex-m4},\n @samp{cortex-m3},\n @samp{cortex-m1},\n @samp{cortex-m0},\n@@ -12686,6 +12687,7 @@ available on the target.  Permissible names are: @samp{vfp}, @samp{vfpv3},\n @samp{vfpv3-fp16}, @samp{vfpv3-d16}, @samp{vfpv3-d16-fp16}, @samp{vfpv3xd},\n @samp{vfpv3xd-fp16}, @samp{neon}, @samp{neon-fp16}, @samp{vfpv4},\n @samp{vfpv4-d16}, @samp{fpv4-sp-d16}, @samp{neon-vfpv4},\n+@samp{fpv5-d16}, @samp{fpv5-sp-d16},\n @samp{fp-armv8}, @samp{neon-fp-armv8}, and @samp{crypto-neon-fp-armv8}.\n \n If @option{-msoft-float} is specified this specifies the format of"}]}