{"sha": "7ae8cf75dae94f2b0b68f433e0962ffe7883a158", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FlOGNmNzVkYWU5NGYyYjBiNjhmNDMzZTA5NjJmZmU3ODgzYTE1OA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-08-11T19:14:26Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-08-11T19:14:26Z"}, "message": "darwin-c.c (darwin_pragma_options): Const-ify.\n\n\t* darwin-c.c (darwin_pragma_options): Const-ify.\n\t* darwin.c (machopic_non_lazy_ptr_name,\n\tmachopic_validate_stub_or_non_lazy_ptr): Likewise.\n\t(machopic_indirect_data_reference): Wrap variables in macros\n\tcontrolling their use.\n\t(machopic_finish, update_non_lazy_ptrs, update_stubs): Const-ify.\n\t(machopic_select_section): Use parentheses around && within ||.\n\t* i386/darwin.h (ASM_OUTPUT_ALIGN): Avoid ambiguous-else.\n\nFrom-SVN: r56211", "tree": {"sha": "2afdfe3aa2d375d3235aab63fb28da667db8b05d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2afdfe3aa2d375d3235aab63fb28da667db8b05d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ae8cf75dae94f2b0b68f433e0962ffe7883a158", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ae8cf75dae94f2b0b68f433e0962ffe7883a158", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ae8cf75dae94f2b0b68f433e0962ffe7883a158", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ae8cf75dae94f2b0b68f433e0962ffe7883a158/comments", "author": null, "committer": null, "parents": [{"sha": "8819cab5c307c14939f8766035324c8c12abf8ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8819cab5c307c14939f8766035324c8c12abf8ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8819cab5c307c14939f8766035324c8c12abf8ca"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "0158816d95422d7cf0b46661205b048d0c80b41d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae8cf75dae94f2b0b68f433e0962ffe7883a158/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae8cf75dae94f2b0b68f433e0962ffe7883a158/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ae8cf75dae94f2b0b68f433e0962ffe7883a158", "patch": "@@ -1,3 +1,14 @@\n+2002-08-11  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* darwin-c.c (darwin_pragma_options): Const-ify.\n+\t* darwin.c (machopic_non_lazy_ptr_name,\n+\tmachopic_validate_stub_or_non_lazy_ptr): Likewise.\n+\t(machopic_indirect_data_reference): Wrap variables in macros\n+\tcontrolling their use.\n+\t(machopic_finish, update_non_lazy_ptrs, update_stubs): Const-ify.\n+\t(machopic_select_section): Use parentheses around && within ||.\n+\t* i386/darwin.h (ASM_OUTPUT_ALIGN): Avoid ambiguous-else.\n+\n 2002-08-11  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* ip2k.c (mdr_resequence_xy_yx, mdr_propagate_reg_equivs,"}, {"sha": "c04c2b576076a7dd52ae6850b954bc6c067301ab", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae8cf75dae94f2b0b68f433e0962ffe7883a158/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae8cf75dae94f2b0b68f433e0962ffe7883a158/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=7ae8cf75dae94f2b0b68f433e0962ffe7883a158", "patch": "@@ -90,7 +90,7 @@ void\n darwin_pragma_options (pfile)\n      cpp_reader *pfile ATTRIBUTE_UNUSED;\n {\n-  char *arg;\n+  const char *arg;\n   tree t, x;\n \n   if (c_lex (&t) != CPP_NAME)"}, {"sha": "2fdc20a799a25912538bcea3bb95bce8c19aeb74", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae8cf75dae94f2b0b68f433e0962ffe7883a158/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae8cf75dae94f2b0b68f433e0962ffe7883a158/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=7ae8cf75dae94f2b0b68f433e0962ffe7883a158", "patch": "@@ -265,7 +265,7 @@ const char *\n machopic_non_lazy_ptr_name (name)\n      const char *name;\n {\n-  char *temp_name;\n+  const char *temp_name;\n   tree temp, ident = get_identifier (name);\n   \n   for (temp = machopic_non_lazy_pointers;\n@@ -389,7 +389,7 @@ machopic_validate_stub_or_non_lazy_ptr (name, validate_stub)\n      const char *name;\n      int validate_stub;\n {\n-  char *real_name;\n+  const char *real_name;\n   tree temp, ident = get_identifier (name), id2;\n \n     for (temp = (validate_stub ? machopic_stubs : machopic_non_lazy_pointers);\n@@ -428,10 +428,12 @@ machopic_indirect_data_reference (orig, reg)\n \n       if (machopic_data_defined_p (name))\n \t{\n+#if defined (TARGET_TOC) || defined (HAVE_lo_sum)\n \t  rtx pic_base = gen_rtx (SYMBOL_REF, Pmode, \n \t\t\t\t  machopic_function_base_name ());\n \t  rtx offset = gen_rtx (CONST, Pmode,\n \t\t\t\tgen_rtx (MINUS, Pmode, orig, pic_base));\n+#endif\n \n #if defined (TARGET_TOC) /* i.e., PowerPC */\n \t  rtx hi_sum_reg = reg;\n@@ -855,8 +857,8 @@ machopic_finish (asm_out_file)\n        temp != NULL_TREE; \n        temp = TREE_CHAIN (temp))\n     {\n-      char *sym_name = IDENTIFIER_POINTER (TREE_VALUE (temp));\n-      char *lazy_name = IDENTIFIER_POINTER (TREE_PURPOSE (temp));\n+      const char *const sym_name = IDENTIFIER_POINTER (TREE_VALUE (temp));\n+      const char *const lazy_name = IDENTIFIER_POINTER (TREE_PURPOSE (temp));\n #if 0\n       tree decl = lookup_name_darwin (TREE_VALUE (temp));\n #endif\n@@ -1026,7 +1028,7 @@ update_non_lazy_ptrs (name)\n        temp != NULL_TREE; \n        temp = TREE_CHAIN (temp))\n     {\n-      char *sym_name = IDENTIFIER_POINTER (TREE_VALUE (temp));\n+      const char *sym_name = IDENTIFIER_POINTER (TREE_VALUE (temp));\n \n       if (*sym_name == '!')\n \t{\n@@ -1090,7 +1092,7 @@ update_stubs (name)\n        temp != NULL_TREE; \n        temp = TREE_CHAIN (temp))\n     {\n-      char *sym_name = IDENTIFIER_POINTER (TREE_VALUE (temp));\n+      const char *sym_name = IDENTIFIER_POINTER (TREE_VALUE (temp));\n \n       if (*sym_name == '!')\n \t{\n@@ -1150,7 +1152,7 @@ machopic_select_section (exp, reloc, align)\n \tobjc_string_object_section ();\n       else if (TREE_READONLY (exp) || TREE_CONSTANT (exp))\n \t{\n-\t  if (TREE_SIDE_EFFECTS (exp) || flag_pic && reloc)\n+\t  if (TREE_SIDE_EFFECTS (exp) || (flag_pic && reloc))\n \t    const_data_section ();\n \t  else\n \t    readonly_data_section ();\n@@ -1223,7 +1225,7 @@ machopic_select_section (exp, reloc, align)\n     }\n   else if (TREE_READONLY (exp) || TREE_CONSTANT (exp))\n     {\n-      if (TREE_SIDE_EFFECTS (exp) || flag_pic && reloc)\n+      if (TREE_SIDE_EFFECTS (exp) || (flag_pic && reloc))\n \tconst_data_section ();\n       else\n \treadonly_data_section ();"}, {"sha": "b37d4e890943dc1c94de12416004845ff54d5229", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae8cf75dae94f2b0b68f433e0962ffe7883a158/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae8cf75dae94f2b0b68f433e0962ffe7883a158/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=7ae8cf75dae94f2b0b68f433e0962ffe7883a158", "patch": "@@ -87,11 +87,12 @@ Boston, MA 02111-1307, USA.  */\n #undef ASM_OUTPUT_ALIGN\n #define ASM_OUTPUT_ALIGN(FILE,LOG)\t\\\n  do { if ((LOG) != 0)\t\t\t\\\n-      if (in_text_section ()\t\t\\\n-          ) \\\n-\tfprintf (FILE, \"\\t%s %d,0x90\\n\", ALIGN_ASM_OP, (LOG)); \\\n-      else \\\n-\tfprintf (FILE, \"\\t%s %d\\n\", ALIGN_ASM_OP, (LOG)); \\\n+        {\t\t\t\t\\\n+          if (in_text_section ())\t\\\n+            fprintf (FILE, \"\\t%s %d,0x90\\n\", ALIGN_ASM_OP, (LOG)); \\\n+          else\t\t\t\t\\\n+            fprintf (FILE, \"\\t%s %d\\n\", ALIGN_ASM_OP, (LOG)); \\\n+        }\t\t\t\t\\\n     } while (0)\n \n /* This says how to output an assembler line"}]}