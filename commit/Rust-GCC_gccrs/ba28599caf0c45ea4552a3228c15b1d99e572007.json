{"sha": "ba28599caf0c45ea4552a3228c15b1d99e572007", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEyODU5OWNhZjBjNDVlYTQ1NTJhMzIyOGMxNWIxZDk5ZTU3MjAwNw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-11-27T17:07:24Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-11-27T17:07:24Z"}, "message": "PR 87756 - missing unterminated argument warning using address of a constant character\n\nPR 87756 - missing unterminated argument warning using address of a constant character\nPR 88211 - missing warning on printf %ls and unterminated wide member array\nPR 88226 - missing warning on fprintf, fputs, and puts with an unterminated array\n\ngcc/ChangeLog:\n\n\t* gcc.dg/tree-ssa/builtin-fprintf-warn-1.c: Update/remove xfails.\n\t* gcc.dg/tree-ssa/builtin-printf-warn-1.c: Same.\n\t* gcc.dg/tree-ssa/user-printf-warn-1.c: Same.\n\nFrom-SVN: r266522", "tree": {"sha": "cd622ce1a7298ac30c7e08478aad5138dd3c82aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd622ce1a7298ac30c7e08478aad5138dd3c82aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba28599caf0c45ea4552a3228c15b1d99e572007", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba28599caf0c45ea4552a3228c15b1d99e572007", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba28599caf0c45ea4552a3228c15b1d99e572007", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba28599caf0c45ea4552a3228c15b1d99e572007/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ffa4bc2c5bcda57245cba94579ee3e1152830e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ffa4bc2c5bcda57245cba94579ee3e1152830e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ffa4bc2c5bcda57245cba94579ee3e1152830e2"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "d8eff4002857abab1c3df2a409a522aa42d41551", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba28599caf0c45ea4552a3228c15b1d99e572007/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba28599caf0c45ea4552a3228c15b1d99e572007/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba28599caf0c45ea4552a3228c15b1d99e572007", "patch": "@@ -1,3 +1,12 @@\n+2018-11-27  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR 87756\n+\tPR 88211\n+\tPR 88226\n+\t* gcc.dg/tree-ssa/builtin-fprintf-warn-1.c: Update/remove xfails.\n+\t* gcc.dg/tree-ssa/builtin-printf-warn-1.c: Same.\n+\t* gcc.dg/tree-ssa/user-printf-warn-1.c: Same.\n+\n 2018-11-27  Mike Gulick  <mgulick@mathworks.com>\n \n \tPR preprocessor/83173"}, {"sha": "690404ade99bb0ce74fea0c81fef0e07a16a186d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-fprintf-warn-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba28599caf0c45ea4552a3228c15b1d99e572007/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-fprintf-warn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba28599caf0c45ea4552a3228c15b1d99e572007/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-fprintf-warn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-fprintf-warn-1.c?ref=ba28599caf0c45ea4552a3228c15b1d99e572007", "patch": "@@ -84,8 +84,8 @@ void test_fprintf_s_const (int width)\n   if (nulptr)\n     T (\"%s\", nulptr);\n \n-  T (\"%s\", &chr_no_nul);          /* { dg-warning \".%s. directive argument is not a nul-terminated string\" \"pr87756\" { xfail *-*-* } } */\n-  T (\"%s\", arr_no_nul);           /* { dg-warning \".%s. directive argument is not a nul-terminated string\" \"pr87756\" { xfail *-*-* } } */\n+  T (\"%s\", &chr_no_nul);          /* { dg-warning \".%s. directive argument is not a nul-terminated string\" \"pr88226\" { xfail *-*-* } } */\n+  T (\"%s\", arr_no_nul);           /* { dg-warning \".%s. directive argument is not a nul-terminated string\" \"pr88226\" { xfail *-*-* } } */\n \n   /* Verify that output in excess of INT_MAX bytes is diagnosed even\n      when the size of the destination object is unknown.  */\n@@ -116,8 +116,8 @@ void test_fprintf_ls_const (int width)\n   if (nulptr)\n     T (\"%ls\", nulptr);\n \n-  T (\"%ls\", &wchr_no_nul);        /* { dg-warning \".%ls. directive argument is not a nul-terminated string\" \"pr87756\" { xfail *-*-* } } */\n-  T (\"%ls\", warr_no_nul);         /* { dg-warning \".%ls. directive argument is not a nul-terminated string\" \"pr87756\" { xfail *-*-* } } */\n+  T (\"%ls\", &wchr_no_nul);        /* { dg-warning \".%ls. directive argument is not a nul-terminated string\" } */\n+  T (\"%ls\", warr_no_nul);         /* { dg-warning \".%ls. directive argument is not a nul-terminated string\" \"pr88211\" { xfail *-*-* } } */\n \n   /* Verify that output in excess of INT_MAX bytes is diagnosed even\n      when the size of the destination object is unknown.  */"}, {"sha": "87ef66025822d3daf60a5e6defadbff2ea865e7b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-printf-warn-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba28599caf0c45ea4552a3228c15b1d99e572007/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-printf-warn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba28599caf0c45ea4552a3228c15b1d99e572007/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-printf-warn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-printf-warn-1.c?ref=ba28599caf0c45ea4552a3228c15b1d99e572007", "patch": "@@ -81,7 +81,7 @@ void test_printf_s_const (int width)\n   if (nulptr)\n     T (\"%s\", nulptr);\n \n-  T (\"%s\", &chr_no_nul);          /* { dg-warning \".%s. directive argument is not a nul-terminated string\" \"pr87756\" { xfail *-*-* } } */\n+  T (\"%s\", &chr_no_nul);          /* { dg-warning \".%s. directive argument is not a nul-terminated string\" } */\n   T (\"%s\", arr_no_nul);           /* { dg-warning \".%s. directive argument is not a nul-terminated string\" } */\n \n   /* Verify that output in excess of INT_MAX bytes is diagnosed even\n@@ -113,8 +113,8 @@ void test_printf_ls_const (int width)\n   if (nulptr)\n     T (\"%ls\", nulptr);\n \n-  T (\"%ls\", &wchr_no_nul);        /* { dg-warning \".%ls. directive argument is not a nul-terminated string\" \"pr87756\" { xfail *-*-* } } */\n-  T (\"%ls\", warr_no_nul);         /* { dg-warning \".%ls. directive argument is not a nul-terminated string\" \"pr87756\" { xfail *-*-* } } */\n+  T (\"%ls\", &wchr_no_nul);        /* { dg-warning \".%ls. directive argument is not a nul-terminated string\" } */\n+  T (\"%ls\", warr_no_nul);         /* { dg-warning \".%ls. directive argument is not a nul-terminated string\" \"pr88211\" { xfail *-*-* } } */\n \n   /* Verify that output in excess of INT_MAX bytes is diagnosed even\n      when the size of the destination object is unknown.  */"}, {"sha": "1896e1c64890a34a50df1b538361a8295e81321e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/user-printf-warn-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba28599caf0c45ea4552a3228c15b1d99e572007/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fuser-printf-warn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba28599caf0c45ea4552a3228c15b1d99e572007/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fuser-printf-warn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fuser-printf-warn-1.c?ref=ba28599caf0c45ea4552a3228c15b1d99e572007", "patch": "@@ -107,7 +107,7 @@ void test_user_print_s_const (int width)\n   if (null)\n     T (\"%s\", null);\n \n-  T (\"%s\", &chr_no_nul);          /* { dg-warning \".%s. directive argument is not a nul-terminated string\" \"pr87756\" { xfail *-*-* } } */\n+  T (\"%s\", &chr_no_nul);          /* { dg-warning \".%s. directive argument is not a nul-terminated string\" } */\n   T (\"%s\", arr_no_nul);           /* { dg-warning \".%s. directive argument is not a nul-terminated string\" } */\n \n   /* Verify that output in excess of INT_MAX bytes is diagnosed even\n@@ -139,8 +139,8 @@ void test_user_print_ls_const (int width)\n   if (null)\n     T (\"%ls\", null);\n \n-  T (\"%ls\", &wchr_no_nul);        /* { dg-warning \".%ls. directive argument is not a nul-terminated string\" \"pr87756\" { xfail *-*-* } } */\n-  T (\"%ls\", warr_no_nul);         /* { dg-warning \".%ls. directive argument is not a nul-terminated string\" \"pr87756\" { xfail *-*-* } } */\n+  T (\"%ls\", &wchr_no_nul);        /* { dg-warning \".%ls. directive argument is not a nul-terminated string\" } */\n+  T (\"%ls\", warr_no_nul);         /* { dg-warning \".%ls. directive argument is not a nul-terminated string\" \"pr88211\" { xfail *-*-* } } */\n \n   /* Verify that output in excess of INT_MAX bytes is diagnosed even\n      when the size of the destination object is unknown.  */"}]}