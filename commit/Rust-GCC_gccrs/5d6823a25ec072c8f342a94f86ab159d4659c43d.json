{"sha": "5d6823a25ec072c8f342a94f86ab159d4659c43d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ2ODIzYTI1ZWMwNzJjOGYzNDJhOTRmODZhYjE1OWQ0NjU5YzQzZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2015-11-04T17:01:23Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-11-04T17:01:23Z"}, "message": "loop-red-g-1.c: New.\n\n\t* libgomp.oacc-c-c++-common/loop-red-g-1.c: New.\n\t* libgomp.oacc-c-c++-common/loop-red-gwv-1.c: New.\n\t* libgomp.oacc-c-c++-common/loop-red-v-1.c: New.\n\t* libgomp.oacc-c-c++-common/loop-red-v-2.c: New.\n\t* libgomp.oacc-c-c++-common/loop-red-w-1.c: New.\n\t* libgomp.oacc-c-c++-common/loop-red-w-2.c: New.\n\t* libgomp.oacc-c-c++-common/loop-red-wv-1.c: New.\n\t* libgomp.oacc-fortran/reduction-5.f90: Avoid reference var.\n\nFrom-SVN: r229770", "tree": {"sha": "53909c3e5c21fb9610a4ba1bf69cf3f045983020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53909c3e5c21fb9610a4ba1bf69cf3f045983020"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d6823a25ec072c8f342a94f86ab159d4659c43d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d6823a25ec072c8f342a94f86ab159d4659c43d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d6823a25ec072c8f342a94f86ab159d4659c43d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d6823a25ec072c8f342a94f86ab159d4659c43d/comments", "author": null, "committer": null, "parents": [{"sha": "4d49f9642af94874e1d62da0a5c877dfb894e914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d49f9642af94874e1d62da0a5c877dfb894e914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d49f9642af94874e1d62da0a5c877dfb894e914"}], "stats": {"total": 412, "additions": 408, "deletions": 4}, "files": [{"sha": "e0897e8f713d76b45ed4f8fbb7c58c0822cf616e", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=5d6823a25ec072c8f342a94f86ab159d4659c43d", "patch": "@@ -1,3 +1,14 @@\n+2015-11-04  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* libgomp.oacc-c-c++-common/loop-red-g-1.c: New.\n+\t* libgomp.oacc-c-c++-common/loop-red-gwv-1.c: New.\n+\t* libgomp.oacc-c-c++-common/loop-red-v-1.c: New.\n+\t* libgomp.oacc-c-c++-common/loop-red-v-2.c: New.\n+\t* libgomp.oacc-c-c++-common/loop-red-w-1.c: New.\n+\t* libgomp.oacc-c-c++-common/loop-red-w-2.c: New.\n+\t* libgomp.oacc-c-c++-common/loop-red-wv-1.c: New.\n+\t* libgomp.oacc-fortran/reduction-5.f90: Avoid reference var.\n+\n 2015-11-03  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* libgomp.h (struct acc_dispatch_t): Remove args from exec_func."}, {"sha": "f315cdc7fc4ffecac66421445cbfc63edbfe68e9", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-g-1.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-g-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-g-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-g-1.c?ref=5d6823a25ec072c8f342a94f86ab159d4659c43d", "patch": "@@ -0,0 +1,54 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+int main ()\n+{\n+  int ix;\n+  int ondev = 0;\n+  int t = 0, h = 0;\n+  \n+#pragma acc parallel num_gangs(32) vector_length(32) copy(t) copy(ondev)\n+  {\n+#pragma acc loop gang  reduction (+:t)\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tint val = ix;\n+\t\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    val = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\tt += val;\n+      }\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int val = ix;\n+      if(ondev)\n+\t{\n+\t  int g = ix / ((N + 31) / 32);\n+\t  int w = 0;\n+\t  int v = 0;\n+\n+\t  val = (g << 16) | (w << 8) | v;\n+\t}\n+      h += val;\n+    }\n+  if (t != h)\n+    {\n+      printf (\"t=%x expected %x\\n\", t, h);\n+      return 1;\n+    }\n+  \n+  return 0;\n+}"}, {"sha": "1663e65e81aafb7bf13dee73c7080d5c61ad70cf", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-gwv-1.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-gwv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-gwv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-gwv-1.c?ref=5d6823a25ec072c8f342a94f86ab159d4659c43d", "patch": "@@ -0,0 +1,56 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+int main ()\n+{\n+  int ix;\n+  int ondev = 0;\n+  int t = 0, h = 0;\n+  \n+#pragma acc parallel num_gangs(32) num_workers(32) vector_length(32) copy(t) copy(ondev)\n+  {\n+#pragma acc loop gang worker vector reduction(+:t)\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tint val = ix;\n+\t\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    val = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\tt += val;\n+      }\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int val = ix;\n+      if(ondev)\n+\t{\n+\t  int chunk_size = (N + 32*32*32 - 1) / (32*32*32);\n+\t  \n+\t  int g = ix / (chunk_size * 32 * 32);\n+\t  int w = ix / 32 % 32;\n+\t  int v = ix % 32;\n+\n+\t  val = (g << 16) | (w << 8) | v;\n+\t}\n+      h += val;\n+    }\n+  if (t != h)\n+    {\n+      printf (\"t=%x expected %x\\n\", t, h);\n+      return 1;\n+    }\n+  \n+  return 0;\n+}"}, {"sha": "be6916ab241f512fbb46bbd9bdfbabc1a4e7ba45", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-v-1.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-v-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-v-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-v-1.c?ref=5d6823a25ec072c8f342a94f86ab159d4659c43d", "patch": "@@ -0,0 +1,56 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+\n+int main ()\n+{\n+  int ix;\n+  int ondev = 0;\n+  int t = 0,  h = 0;\n+\n+#pragma acc parallel vector_length(32) copy(t) copy(ondev)\n+  {\n+#pragma acc loop vector reduction (+:t)\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tint val = ix;\n+\t\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    val = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\tt += val;\n+      }\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int val = ix;\n+      if (ondev)\n+\t{\n+\t  int g = 0;\n+\t  int w = 0;\n+\t  int v = ix % 32;\n+\n+\t  val = (g << 16) | (w << 8) | v;\n+\t}\n+      h += val;\n+    }\n+\n+  if (t != h)\n+    {\n+      printf (\"t=%x expected %x\\n\", t, h);\n+      return 1;\n+    }\n+  \n+  return 0;\n+}"}, {"sha": "e66732da32c1e39dc09903324e7bd01c7499d9c9", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-v-2.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-v-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-v-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-v-2.c?ref=5d6823a25ec072c8f342a94f86ab159d4659c43d", "patch": "@@ -0,0 +1,59 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+\n+int main ()\n+{\n+  int ix;\n+  int ondev = 0;\n+  int q = 0,  h = 0;\n+\n+#pragma acc parallel vector_length(32) copy(q) copy(ondev)\n+  {\n+    int t = q;\n+    \n+#pragma acc loop vector reduction (+:t)\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tint val = ix;\n+\t\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    val = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\tt += val;\n+      }\n+    q = t;\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int val = ix;\n+      if (ondev)\n+\t{\n+\t  int g = 0;\n+\t  int w = 0;\n+\t  int v = ix % 32;\n+\n+\t  val = (g << 16) | (w << 8) | v;\n+\t}\n+      h += val;\n+    }\n+\n+  if (q != h)\n+    {\n+      printf (\"t=%x expected %x\\n\", q, h);\n+      return 1;\n+    }\n+  \n+  return 0;\n+}"}, {"sha": "85fe6ebb482317d6ed2000027f35814fa80099c3", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-w-1.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-w-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-w-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-w-1.c?ref=5d6823a25ec072c8f342a94f86ab159d4659c43d", "patch": "@@ -0,0 +1,54 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+int main ()\n+{\n+  int ix;\n+  int ondev = 0;\n+  int t = 0,  h = 0;\n+\n+#pragma acc parallel num_workers(32) vector_length(32) copy(t) copy(ondev)\n+  {\n+#pragma acc loop worker reduction(+:t)\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tint val = ix;\n+\t\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    val = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\tt += val;\n+      }\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int val = ix;\n+      if(ondev)\n+\t{\n+\t  int g = 0;\n+\t  int w = ix % 32;\n+\t  int v = 0;\n+\n+\t  val = (g << 16) | (w << 8) | v;\n+\t}\n+      h += val;\n+    }\n+  if (t != h)\n+    {\n+      printf (\"t=%x expected %x\\n\", t, h);\n+      return 1;\n+    }\n+  \n+  return 0;\n+}"}, {"sha": "0059077b6851fd1262f7679563fe6ac835c54e49", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-w-2.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-w-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-w-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-w-2.c?ref=5d6823a25ec072c8f342a94f86ab159d4659c43d", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+int main ()\n+{\n+  int ix;\n+  int ondev = 0;\n+  int q = 0,  h = 0;\n+\n+#pragma acc parallel num_workers(32) vector_length(32) copy(q) copy(ondev)\n+  {\n+    int t = q;\n+    \n+#pragma acc loop worker reduction(+:t)\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tint val = ix;\n+\t\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    val = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\tt += val;\n+      }\n+    q = t;\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int val = ix;\n+      if(ondev)\n+\t{\n+\t  int g = 0;\n+\t  int w = ix % 32;\n+\t  int v = 0;\n+\n+\t  val = (g << 16) | (w << 8) | v;\n+\t}\n+      h += val;\n+    }\n+  if (q != h)\n+    {\n+      printf (\"t=%x expected %x\\n\", q, h);\n+      return 1;\n+    }\n+  \n+  return 0;\n+}"}, {"sha": "3a5be5ce0d3171cbb1051971156e55f3191dbcf0", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-wv-1.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-wv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-wv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-wv-1.c?ref=5d6823a25ec072c8f342a94f86ab159d4659c43d", "patch": "@@ -0,0 +1,54 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+int main ()\n+{\n+  int ix;\n+  int ondev = 0;\n+  int t = 0, h = 0;\n+  \n+#pragma acc parallel num_workers(32) vector_length(32) copy(t) copy(ondev)\n+  {\n+#pragma acc loop worker vector reduction (+:t)\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tint val = ix;\n+\t\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    val = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\tt += val;\n+      }\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int val = ix;\n+      if(ondev)\n+\t{\n+\t  int g = 0;\n+\t  int w = (ix / 32) % 32;\n+\t  int v = ix % 32;\n+\n+\t  val = (g << 16) | (w << 8) | v;\n+\t}\n+      h += val;\n+    }\n+  if (t != h)\n+    {\n+      printf (\"t=%x expected %x\\n\", t, h);\n+      return 1;\n+    }\n+  \n+  return 0;\n+}"}, {"sha": "ec13e4e6c079aed703be515f4eeabd8241d2eb05", "filename": "libgomp/testsuite/libgomp.oacc-fortran/reduction-5.f90", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d6823a25ec072c8f342a94f86ab159d4659c43d/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-5.f90?ref=5d6823a25ec072c8f342a94f86ab159d4659c43d", "patch": "@@ -21,12 +21,15 @@ end program reduction\n subroutine redsub(sum, n, c)\n   integer :: sum, n, c\n \n-  sum = 0\n+  integer :: s\n+  s = 0\n \n-  !$acc parallel vector_length(n) copyin (n, c) num_gangs(1)\n-  !$acc loop reduction(+:sum)\n+  !$acc parallel vector_length(32) copyin (n, c) copy (s) num_gangs(1)\n+  !$acc loop reduction(+:s)\n   do i = 1, n\n-     sum = sum + c\n+     s = s + c\n   end do\n   !$acc end parallel\n+\n+  sum = s\n end subroutine redsub"}]}