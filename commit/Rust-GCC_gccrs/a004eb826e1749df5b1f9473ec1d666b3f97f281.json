{"sha": "a004eb826e1749df5b1f9473ec1d666b3f97f281", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAwNGViODI2ZTE3NDlkZjViMWY5NDczZWMxZDY2NmIzZjk3ZjI4MQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2001-12-20T04:42:23Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-12-20T04:42:23Z"}, "message": "install.texi: Add documentation for --enable-altivec.\n\n2001-12-19  Aldy Hernandez  <aldyh@redhat.com>\n\n        * doc/install.texi: Add documentation for --enable-altivec.\n\n        * config.gcc: Add support for --enable-altivec.\n\n        * config/rs6000/altivec.h: New.\n\n        * config/rs6000/linuxaltivec.h (SUBSUBTARGET_OVERRIDE_OPTIONS):\n        Define.  Fix typo.\n\n        * config/rs6000/rs6000.c (vrsave_operation): Change unspec to\n\tunspec_volatile.\n        (generate_set_vrsave): Generate the unspec here instead of calling\n        an .md pattern.\n        (generate_set_vrsave): Use gen_rtvec.\n        (rs6000_emit_prologue): Replace call to gen_get_vrsave with\n        gen_rtx_SET.\n\n        * config/rs6000/rs6000.md (\"*movsi_internal1\"): Add constraints\n\tfor setting special registers.\n        (\"*set_vrsave_internal\"): Use unspec_volatile.\n        (\"set_vrsave\"): Remove.\n        (\"get_vrsave\"): Remove.\n\n        * config/rs6000/rs6000.h (REG_CLASS_CONTENTS): Add vrsave to\n\tSPECIAL_REGS.\n\nFrom-SVN: r48194", "tree": {"sha": "e4df2a799c5a304a82f7b133313247ccb414b48e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4df2a799c5a304a82f7b133313247ccb414b48e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a004eb826e1749df5b1f9473ec1d666b3f97f281", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a004eb826e1749df5b1f9473ec1d666b3f97f281", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a004eb826e1749df5b1f9473ec1d666b3f97f281", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a004eb826e1749df5b1f9473ec1d666b3f97f281/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5639a499ea9d3749f44bbd28328e7ff8a43010c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5639a499ea9d3749f44bbd28328e7ff8a43010c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5639a499ea9d3749f44bbd28328e7ff8a43010c"}], "stats": {"total": 118, "additions": 86, "deletions": 32}, "files": [{"sha": "47fe504bb91686dad67013aa843ff9ad4f28da31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a004eb826e1749df5b1f9473ec1d666b3f97f281", "patch": "@@ -1,3 +1,31 @@\n+2001-12-19  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * doc/install.texi: Add documentation for --enable-altivec.\n+\n+        * config.gcc: Add support for --enable-altivec.\n+\n+        * config/rs6000/altivec.h: New.\n+\n+        * config/rs6000/linuxaltivec.h (SUBSUBTARGET_OVERRIDE_OPTIONS):\n+        Define.  Fix typo.\n+\n+        * config/rs6000/rs6000.c (vrsave_operation): Change unspec to\n+\tunspec_volatile.\n+        (generate_set_vrsave): Generate the unspec here instead of calling\n+        an .md pattern.\n+        (generate_set_vrsave): Use gen_rtvec.\n+        (rs6000_emit_prologue): Replace call to gen_get_vrsave with\n+        gen_rtx_SET.\n+\n+        * config/rs6000/rs6000.md (\"*movsi_internal1\"): Add constraints\n+\tfor setting special registers.\n+        (\"*set_vrsave_internal\"): Use unspec_volatile.\n+        (\"set_vrsave\"): Remove.\n+        (\"get_vrsave\"): Remove.\n+\n+        * config/rs6000/rs6000.h (REG_CLASS_CONTENTS): Add vrsave to\n+\tSPECIAL_REGS.\n+\n 2001-12-19  Bruce Korb  <bkorb@gnu.org>\n \n \t* gcc/fixinc/inclhack.def:  Remove all the fix suppression \"fixes\"."}, {"sha": "123e1c836edc4bb113fb98cd3858c26596cf97f4", "filename": "gcc/config/rs6000/altivec.h", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=a004eb826e1749df5b1f9473ec1d666b3f97f281", "patch": "@@ -0,0 +1,27 @@\n+/* Target definitions for GNU compiler for PowerPC with AltiVec.\n+   Copyright (C) 2001 Free Software Foundation, Inc.\n+   Contributed by Aldy Hernandez (aldyh@redhat.com).\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#undef SUBSUBTARGET_OVERRIDE_OPTIONS\n+#define SUBSUBTARGET_OVERRIDE_OPTIONS\t\\\n+do {\t\t\t\t\t\\\n+  rs6000_altivec_abi = 1;\t\t\\\n+  target_flags |= MASK_ALTIVEC;\t\t\\\n+} while (0)"}, {"sha": "d2f184f196a49e1978bfe7a2f654427652c5ac84", "filename": "gcc/config/rs6000/linuxaltivec.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2Fconfig%2Frs6000%2Flinuxaltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2Fconfig%2Frs6000%2Flinuxaltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinuxaltivec.h?ref=a004eb826e1749df5b1f9473ec1d666b3f97f281", "patch": "@@ -27,4 +27,5 @@ Boston, MA 02111-1307, USA.  */\n #undef\tTARGET_DEFAULT\n #define\tTARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_ALTIVEC)\n \n-#undef SUBSUBTARGET_OVERRIDE_OPTIONS\trs6000_altivec_abi = 1\n+#undef SUBSUBTARGET_OVERRIDE_OPTIONS\n+#define SUBSUBTARGET_OVERRIDE_OPTIONS rs6000_altivec_abi = 1"}, {"sha": "ad7321f1ccf94956fc0638e05eccd4ac25be7081", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=a004eb826e1749df5b1f9473ec1d666b3f97f281", "patch": "@@ -4555,7 +4555,7 @@ vrsave_operation (op, mode)\n   if (count <= 1\n       || GET_CODE (XVECEXP (op, 0, 0)) != SET\n       || GET_CODE (SET_DEST (XVECEXP (op, 0, 0))) != REG\n-      || GET_CODE (SET_SRC (XVECEXP (op, 0, 0))) != UNSPEC)\n+      || GET_CODE (SET_SRC (XVECEXP (op, 0, 0))) != UNSPEC_VOLATILE)\n     return 0;\n \n   dest_regno = REGNO (SET_DEST (XVECEXP (op, 0, 0)));\n@@ -7831,8 +7831,14 @@ generate_set_vrsave (reg, info, epiloguep)\n {\n   int nclobs, i;\n   rtx insn, clobs[TOTAL_ALTIVEC_REGS + 1];\n+  rtx vrsave = gen_rtx_REG (SImode, VRSAVE_REGNO);\n \n-  clobs[0] = gen_set_vrsave (reg);\n+  clobs[0]\n+    = gen_rtx_SET (VOIDmode,\n+\t\t   vrsave,\n+\t\t   gen_rtx_UNSPEC_VOLATILE (SImode,\n+\t\t\t\t\t    gen_rtvec (2, reg, vrsave),\n+\t\t\t\t\t    30));\n \n   nclobs = 1;\n \n@@ -7859,12 +7865,12 @@ generate_set_vrsave (reg, info, epiloguep)\n \telse\n \t  {\n \t    rtx reg = gen_rtx_REG (V4SImode, i);\n-\t    rtvec r = rtvec_alloc (1);\n-\n-\t    RTVEC_ELT (r, 0) = reg;\n \n \t    clobs[nclobs++]\n-\t      = gen_rtx_SET (VOIDmode, reg, gen_rtx_UNSPEC (V4SImode, r, 27));\n+\t      = gen_rtx_SET (VOIDmode,\n+\t\t\t     reg,\n+\t\t\t     gen_rtx_UNSPEC (V4SImode,\n+\t\t\t\t\t     gen_rtvec (1, reg), 27));\n \t  }\n       }\n \n@@ -7958,12 +7964,13 @@ rs6000_emit_prologue ()\n \n   if (TARGET_ALTIVEC && info->vrsave_mask != 0)\n     {\n-      rtx reg, mem;\n+      rtx reg, mem, vrsave;\n       int offset;\n \n       /* Get VRSAVE onto a GPR.  */\n       reg = gen_rtx_REG (SImode, 12);\n-      emit_insn (gen_get_vrsave (reg));\n+      vrsave = gen_rtx_REG (SImode, VRSAVE_REGNO);\n+      emit_insn (gen_rtx_SET (VOIDmode, reg, vrsave));\n \n       /* Save VRSAVE.  */\n       offset = info->vrsave_save_offset + sp_offset;"}, {"sha": "ed8becd6567f2cd814c0a5761ce4c973748075bf", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=a004eb826e1749df5b1f9473ec1d666b3f97f281", "patch": "@@ -1120,7 +1120,7 @@ enum reg_class\n   { 0x00000000, 0x00000000, 0x00000002, 0x00000000 }, /* LINK_REGS */\t     \\\n   { 0x00000000, 0x00000000, 0x00000004, 0x00000000 }, /* CTR_REGS */\t     \\\n   { 0x00000000, 0x00000000, 0x00000006, 0x00000000 }, /* LINK_OR_CTR_REGS */ \\\n-  { 0x00000000, 0x00000000, 0x00000007, 0x00000000 }, /* SPECIAL_REGS */     \\\n+  { 0x00000000, 0x00000000, 0x00000007, 0x00002000 }, /* SPECIAL_REGS */     \\\n   { 0xffffffff, 0x00000000, 0x0000000f, 0x00000000 }, /* SPEC_OR_GEN_REGS */ \\\n   { 0x00000000, 0x00000000, 0x00000010, 0x00000000 }, /* CR0_REGS */\t     \\\n   { 0x00000000, 0x00000000, 0x00000ff0, 0x00000000 }, /* CR_REGS */\t     \\"}, {"sha": "fc2848f84e9a8c5c56110962be0bcde04c0edcc9", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 7, "deletions": 22, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=a004eb826e1749df5b1f9473ec1d666b3f97f281", "patch": "@@ -7630,8 +7630,8 @@\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"*movsi_internal1\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,m,r,r,r,r,r,*q,*c*l,*h\")\n-\t(match_operand:SI 1 \"input_operand\" \"r,U,m,r,I,L,n,R,*h,r,r,0\"))]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,m,r,r,r,r,r,*q,*c*l,*h,*h\")\n+\t(match_operand:SI 1 \"input_operand\" \"r,U,m,r,I,L,n,R,*h,r,r,r,0\"))]\n   \"gpc_reg_operand (operands[0], SImode)\n    || gpc_reg_operand (operands[1], SImode)\"\n   \"@\n@@ -7646,9 +7646,10 @@\n    mf%1 %0\n    mt%0 %1\n    mt%0 %1\n+   mt%0 %1\n    cror 0,0,0\"\n-  [(set_attr \"type\" \"*,*,load,store,*,*,*,*,*,*,mtjmpr,*\")\n-   (set_attr \"length\" \"4,4,4,4,4,4,8,4,4,4,4,4\")])\n+  [(set_attr \"type\" \"*,*,load,store,*,*,*,*,*,*,mtjmpr,*,*\")\n+   (set_attr \"length\" \"4,4,4,4,4,4,8,4,4,4,4,4,4\")])\n \n ;; Split a load of a large constant into the appropriate two-insn\n ;; sequence.\n@@ -13944,31 +13945,15 @@\n    vor %0,%1,%1\"\n   [(set_attr \"type\" \"altivec\")])\n \n-;; Copy VRSAVE into a GPR.\n-(define_insn \"get_vrsave\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(reg:SI 109)] 28))]\n-  \"TARGET_ALTIVEC\"\n-  \"mfvrsave %0\"\n-  [(set_attr \"type\" \"altivec\")])\n-\n (define_insn \"*set_vrsave_internal\"\n   [(match_parallel 0 \"vrsave_operation\"\n      [(set (reg:SI 109)\n-\t   (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t       (reg:SI 109)] 30))])]\n+\t   (unspec_volatile:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t\t(reg:SI 109)] 30))])]\n   \"TARGET_ALTIVEC\"\n   \"mtvrsave %1\"\n   [(set_attr \"type\" \"altivec\")])\n \n-(define_insn \"set_vrsave\"\n-  [(set (reg:SI 109)\n-\t(unspec:SI [(match_operand:SI 0 \"register_operand\" \"r\")\n-\t\t    (reg:SI 109)] 30))]\n-  \"TARGET_ALTIVEC\"\n-  \"mtvrsave %0\"\n-  [(set_attr \"type\" \"altivec\")])\n-\n ;; Simple binary operations.\n \n (define_insn \"addv16qi3\""}, {"sha": "091625435efa6e55088135ebaf3037c571d8db7e", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a004eb826e1749df5b1f9473ec1d666b3f97f281/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=a004eb826e1749df5b1f9473ec1d666b3f97f281", "patch": "@@ -678,6 +678,12 @@ SPARC@.  If configure does not recognize the model name (e.g.@: arm700,\n 603e, or ultrasparc) you provide, please check the configure script\n for a complete list of supported models.\n \n+@item --enable-altivec\n+Specify that the target supports AltiVec vector enhancements.  This\n+option will adjust the ABI for AltiVec enhancements, as well as generate\n+AltiVec code when appropriate.  This option is only available for\n+PowerPC systems.\n+\n @item --enable-target-optspace\n Specify that target\n libraries should be optimized for code space instead of code speed."}]}