{"sha": "67e740fa3005211b72da34e28ec2a8a22dcc4797", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdlNzQwZmEzMDA1MjExYjcyZGEzNGUyOGVjMmE4YTIyZGNjNDc5Nw==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2010-06-17T09:06:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-17T09:06:41Z"}, "message": "back_end.adb (Scan_Compiler_Arguments): Put all arguments in new local Argument_List variable Args.\n\n2010-06-17  Vincent Celier  <celier@adacore.com>\n\n\t* back_end.adb (Scan_Compiler_Arguments): Put all arguments in new\n\tlocal Argument_List variable Args.\n\t* switch-c.adb (Scan_Front_End_Switches): New Argument_List argument\n\tArgs.\n\t(Switch_Subsequently_Cancelled): New Argument_List argument Args. Look\n\tfor subsequent switches in Args.\n\t* switch-c.ads (Scan_Front_End_Switches): New Argument_List argument\n\tArgs.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\nFrom-SVN: r160890", "tree": {"sha": "25c725c1b73e3d2b69447a18fb45899560dec4d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25c725c1b73e3d2b69447a18fb45899560dec4d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67e740fa3005211b72da34e28ec2a8a22dcc4797", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67e740fa3005211b72da34e28ec2a8a22dcc4797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67e740fa3005211b72da34e28ec2a8a22dcc4797", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67e740fa3005211b72da34e28ec2a8a22dcc4797/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bce79204fbd55ec8f622979e582752e44498c76c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bce79204fbd55ec8f622979e582752e44498c76c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bce79204fbd55ec8f622979e582752e44498c76c"}], "stats": {"total": 158, "additions": 88, "deletions": 70}, "files": [{"sha": "339925d656da496b2c42115c13290d993e7c692e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e740fa3005211b72da34e28ec2a8a22dcc4797/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e740fa3005211b72da34e28ec2a8a22dcc4797/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=67e740fa3005211b72da34e28ec2a8a22dcc4797", "patch": "@@ -1,3 +1,15 @@\n+2010-06-17  Vincent Celier  <celier@adacore.com>\n+\n+\t* back_end.adb (Scan_Compiler_Arguments): Put all arguments in new\n+\tlocal Argument_List variable Args.\n+\t* switch-c.adb (Scan_Front_End_Switches): New Argument_List argument\n+\tArgs.\n+\t(Switch_Subsequently_Cancelled): New Argument_List argument Args. Look\n+\tfor subsequent switches in Args.\n+\t* switch-c.ads (Scan_Front_End_Switches): New Argument_List argument\n+\tArgs.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n 2010-06-17  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.adb: Minor code fix, allow E_Class_Wide_Type for"}, {"sha": "41372fc33f3a7ac9764a407ee19f41c8f9dc9573", "filename": "gcc/ada/back_end.adb", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e740fa3005211b72da34e28ec2a8a22dcc4797/gcc%2Fada%2Fback_end.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e740fa3005211b72da34e28ec2a8a22dcc4797/gcc%2Fada%2Fback_end.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.adb?ref=67e740fa3005211b72da34e28ec2a8a22dcc4797", "patch": "@@ -40,6 +40,8 @@ with Switch.C;  use Switch.C;\n with System;    use System;\n with Types;     use Types;\n \n+with System.OS_Lib; use System.OS_Lib;\n+\n package body Back_End is\n \n    type Arg_Array is array (Nat) of Big_String_Ptr;\n@@ -162,7 +164,7 @@ package body Back_End is\n \n    procedure Scan_Compiler_Arguments is\n \n-      Next_Arg : Pos;\n+      Next_Arg : Positive;\n       --  Next argument to be scanned\n \n       Output_File_Name_Seen : Boolean := False;\n@@ -222,22 +224,38 @@ package body Back_End is\n          end if;\n       end Scan_Back_End_Switches;\n \n+      --  Local variables\n+\n+      Arg_Count : constant Natural := Natural (save_argc - 1);\n+      Args : Argument_List (1 .. Arg_Count);\n+\n    --  Start of processing for Scan_Compiler_Arguments\n \n    begin\n       --  Acquire stack checking mode directly from GCC\n \n       Opt.Stack_Checking_Enabled := (flag_stack_check /= 0);\n \n+      --  Put the arguments in Args\n+\n+      for Arg in Pos range 1 .. save_argc - 1 loop\n+         declare\n+            Argv_Ptr : constant Big_String_Ptr := save_argv (Arg);\n+            Argv_Len : constant Nat            := Len_Arg (Arg);\n+            Argv     : constant String         :=\n+                         Argv_Ptr (1 .. Natural (Argv_Len));\n+\n+         begin\n+            Args (Positive (Arg)) := new String'(Argv);\n+         end;\n+      end loop;\n+\n       --  Loop through command line arguments, storing them for later access\n \n       Next_Arg := 1;\n-      while Next_Arg < save_argc loop\n+      while Next_Arg < Args'Last loop\n          Look_At_Arg : declare\n-            Argv_Ptr : constant Big_String_Ptr := save_argv (Next_Arg);\n-            Argv_Len : constant Nat            := Len_Arg (Next_Arg);\n-            Argv     : constant String         :=\n-                         Argv_Ptr (1 .. Natural (Argv_Len));\n+            Argv     : constant String := Args (Next_Arg).all;\n \n          begin\n             --  If the previous switch has set the Output_File_Name_Present\n@@ -284,7 +302,7 @@ package body Back_End is\n                Opt.No_Stdlib := True;\n \n             elsif Is_Front_End_Switch (Argv) then\n-               Scan_Front_End_Switches (Argv, Integer (Next_Arg));\n+               Scan_Front_End_Switches (Argv, Args, Next_Arg);\n \n             --  All non-front-end switches are back-end switches\n "}, {"sha": "6103dd8a74ba336fc09d6e6395e2af55f2afba50", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 35, "deletions": 42, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e740fa3005211b72da34e28ec2a8a22dcc4797/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e740fa3005211b72da34e28ec2a8a22dcc4797/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=67e740fa3005211b72da34e28ec2a8a22dcc4797", "patch": "@@ -120,7 +120,6 @@ GNAT1_C_OBJS = ada/b_gnat1.o ada/adadecode.o ada/adaint.o ada/cstreams.o \\\n GNAT_ADA_OBJS =\t\\\n  ada/a-charac.o\t\\\n  ada/a-chlat1.o\t\\\n- ada/a-comlin.o \\\n  ada/a-elchha.o\t\\\n  ada/a-except.o\t\\\n  ada/a-ioexce.o\t\\\n@@ -2913,16 +2912,10 @@ ada/prepcomp.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/table.adb ada/tree_io.ads ada/types.ads ada/uintp.ads \\\n    ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n-ada/put_scos.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n-   ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/debug.ads \\\n-   ada/einfo.ads ada/gnat.ads ada/g-table.ads ada/g-table.adb \\\n-   ada/hostparm.ads ada/namet.ads ada/opt.ads ada/output.ads \\\n-   ada/put_scos.ads ada/put_scos.adb ada/scos.ads ada/sinfo.ads \\\n-   ada/snames.ads ada/system.ads ada/s-exctab.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-stalib.ads ada/s-string.ads \\\n-   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/tree_io.ads ada/types.ads ada/uintp.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \n+ada/put_scos.o : ada/ada.ads ada/a-unccon.ads ada/gnat.ads ada/g-table.ads \\\n+   ada/g-table.adb ada/put_scos.ads ada/put_scos.adb ada/scos.ads \\\n+   ada/system.ads ada/s-exctab.ads ada/s-memory.ads ada/s-stalib.ads \\\n+   ada/s-unstyp.ads ada/types.ads ada/unchconv.ads ada/unchdeal.ads \n \n ada/repinfo.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\\n@@ -3851,30 +3844,30 @@ ada/sem_prag.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/lib.ads ada/lib.adb ada/lib-list.adb ada/lib-sort.adb \\\n    ada/lib-writ.ads ada/lib-xref.ads ada/namet.ads ada/namet.adb \\\n    ada/namet-sp.ads ada/nlists.ads ada/nlists.adb ada/nmake.ads \\\n-   ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n-   ada/restrict.adb ada/rident.ads ada/rtsfind.ads ada/scans.ads \\\n-   ada/scn.ads ada/scng.ads ada/scng.adb ada/sem.ads ada/sem_aggr.ads \\\n-   ada/sem_attr.ads ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch12.ads \\\n-   ada/sem_ch13.ads ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch6.ads \\\n-   ada/sem_ch8.ads ada/sem_disp.ads ada/sem_dist.ads ada/sem_elab.ads \\\n-   ada/sem_elim.ads ada/sem_eval.ads ada/sem_eval.adb ada/sem_intr.ads \\\n-   ada/sem_mech.ads ada/sem_prag.ads ada/sem_prag.adb ada/sem_res.ads \\\n-   ada/sem_res.adb ada/sem_scil.ads ada/sem_type.ads ada/sem_util.ads \\\n-   ada/sem_util.adb ada/sem_vfpt.ads ada/sem_warn.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinfo-cn.ads ada/sinput.ads ada/sinput.adb \\\n-   ada/snames.ads ada/snames.adb ada/stand.ads ada/stringt.ads \\\n-   ada/stringt.adb ada/style.ads ada/styleg.ads ada/styleg.adb \\\n-   ada/stylesw.ads ada/system.ads ada/s-carun8.ads ada/s-crc32.ads \\\n-   ada/s-exctab.ads ada/s-exctab.adb ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n-   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/types.adb \\\n-   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/urealp.adb ada/validsw.ads \\\n-   ada/widechar.ads \n+   ada/nmake.adb ada/opt.ads ada/output.ads ada/par_sco.ads \\\n+   ada/restrict.ads ada/restrict.adb ada/rident.ads ada/rtsfind.ads \\\n+   ada/scans.ads ada/scn.ads ada/scng.ads ada/scng.adb ada/sem.ads \\\n+   ada/sem_aggr.ads ada/sem_attr.ads ada/sem_aux.ads ada/sem_cat.ads \\\n+   ada/sem_ch12.ads ada/sem_ch13.ads ada/sem_ch3.ads ada/sem_ch4.ads \\\n+   ada/sem_ch6.ads ada/sem_ch8.ads ada/sem_disp.ads ada/sem_dist.ads \\\n+   ada/sem_elab.ads ada/sem_elim.ads ada/sem_eval.ads ada/sem_eval.adb \\\n+   ada/sem_intr.ads ada/sem_mech.ads ada/sem_prag.ads ada/sem_prag.adb \\\n+   ada/sem_res.ads ada/sem_res.adb ada/sem_scil.ads ada/sem_type.ads \\\n+   ada/sem_util.ads ada/sem_util.adb ada/sem_vfpt.ads ada/sem_warn.ads \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinfo-cn.ads ada/sinput.ads \\\n+   ada/sinput.adb ada/snames.ads ada/snames.adb ada/stand.ads \\\n+   ada/stringt.ads ada/stringt.adb ada/style.ads ada/styleg.ads \\\n+   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-carun8.ads \\\n+   ada/s-crc32.ads ada/s-exctab.ads ada/s-exctab.adb ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n+   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/types.adb ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n+   ada/validsw.ads ada/widechar.ads \n \n ada/sem_res.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\\n@@ -4200,17 +4193,17 @@ ada/switch-b.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tree_io.ads \\\n    ada/types.ads ada/unchconv.ads ada/unchdeal.ads \n \n-ada/switch-c.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n-   ada/a-uncdea.ads ada/alloc.ads ada/back_end.ads ada/debug.ads \\\n+ada/switch-c.o : ada/ada.ads ada/a-comlin.ads ada/a-except.ads \\\n+   ada/a-unccon.ads ada/a-uncdea.ads ada/alloc.ads ada/debug.ads \\\n    ada/gnatvsn.ads ada/hostparm.ads ada/lib.ads ada/namet.ads ada/opt.ads \\\n    ada/osint.ads ada/output.ads ada/prepcomp.ads ada/sem_warn.ads \\\n    ada/stylesw.ads ada/switch.ads ada/switch-c.ads ada/switch-c.adb \\\n    ada/system.ads ada/s-exctab.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/tree_io.ads ada/types.ads ada/unchconv.ads ada/unchdeal.ads \\\n-   ada/validsw.ads \n+   ada/s-parame.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/tree_io.ads ada/types.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/validsw.ads \n \n ada/switch.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/debug.ads ada/gnatvsn.ads \\"}, {"sha": "09a87e040b276a895c54dfef0a6cfaf1111aa3a4", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e740fa3005211b72da34e28ec2a8a22dcc4797/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e740fa3005211b72da34e28ec2a8a22dcc4797/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=67e740fa3005211b72da34e28ec2a8a22dcc4797", "patch": "@@ -32,9 +32,7 @@ with Validsw;  use Validsw;\n with Sem_Warn; use Sem_Warn;\n with Stylesw;  use Stylesw;\n \n-with Ada.Command_Line; use Ada.Command_Line;\n-\n-with System.OS_Lib;  use System.OS_Lib;\n+with System.Strings;\n with System.WCh_Con; use System.WCh_Con;\n \n package body Switch.C is\n@@ -44,6 +42,7 @@ package body Switch.C is\n \n    function Switch_Subsequently_Cancelled\n      (C        : String;\n+      Args     : Argument_List;\n       Arg_Rank : Positive) return Boolean;\n    --  This function is called from Scan_Front_End_Switches. It determines if\n    --  the switch currently being scanned is followed by a switch of the form\n@@ -57,6 +56,7 @@ package body Switch.C is\n \n    procedure Scan_Front_End_Switches\n      (Switch_Chars : String;\n+      Args         : Argument_List;\n       Arg_Rank     : Positive)\n    is\n       First_Switch : Boolean := True;\n@@ -677,7 +677,7 @@ package body Switch.C is\n \n                --  Skip processing if cancelled by subsequent -gnat-p\n \n-               if Switch_Subsequently_Cancelled (\"p\", Arg_Rank) then\n+               if Switch_Subsequently_Cancelled (\"p\", Args, Arg_Rank) then\n                   Store_Switch := False;\n \n                else\n@@ -1096,25 +1096,17 @@ package body Switch.C is\n \n    function Switch_Subsequently_Cancelled\n      (C        : String;\n+      Args     : Argument_List;\n       Arg_Rank : Positive) return Boolean\n    is\n-      Arg : Positive;\n-      Max : constant Natural := Argument_Count;\n-\n+      use type System.Strings.String_Access;\n    begin\n       --  Loop through arguments following the current one\n \n-      Arg := Arg_Rank + 1;\n-      while Arg < Max loop\n-         declare\n-            Argv : constant String := Argument (Arg);\n-         begin\n-            if Argv = \"-gnat-\" & C then\n-               return True;\n-            end if;\n-         end;\n-\n-         Arg := Arg + 1;\n+      for Arg in Arg_Rank + 1 .. Args'Last loop\n+         if Args (Arg).all = \"-gnat-\" & C then\n+            return True;\n+         end if;\n       end loop;\n \n       --  No match found, not cancelled"}, {"sha": "1595858a28d5e6399b4844718357cee2ee13c23c", "filename": "gcc/ada/switch-c.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e740fa3005211b72da34e28ec2a8a22dcc4797/gcc%2Fada%2Fswitch-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e740fa3005211b72da34e28ec2a8a22dcc4797/gcc%2Fada%2Fswitch-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.ads?ref=67e740fa3005211b72da34e28ec2a8a22dcc4797", "patch": "@@ -29,10 +29,13 @@\n --  switches that are recognized. In addition, package Debug documents\n --  the otherwise undocumented debug switches that are also recognized.\n \n+with System.OS_Lib; use System.OS_Lib;\n+\n package Switch.C is\n \n    procedure Scan_Front_End_Switches\n      (Switch_Chars : String;\n+      Args         : Argument_List;\n       Arg_Rank     : Positive);\n    --  Procedures to scan out front end switches stored in the given string.\n    --  The first character is known to be a valid switch character, and there\n@@ -42,8 +45,8 @@ package Switch.C is\n    --  a fatal error exit and control does not return. The call also sets\n    --  Usage_Requested to True if a switch -gnath is encountered.\n    --\n-   --  Arg_Rank is the position of the switch in the command line arguments.\n-   --  It is used for certain switches -gnatx to check if a subsequent switch\n-   --  -gnat-x cancels the switch -gnatx.\n+   --  Args is the full list of command line arguments. Arg_Rank is the\n+   --  position of the switch in Args. It is used for certain switches -gnatx\n+   --  to check if a subsequent switch -gnat-x cancels the switch -gnatx.\n \n end Switch.C;"}]}