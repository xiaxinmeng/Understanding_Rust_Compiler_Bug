{"sha": "8f6562d026def4d1010e5beb0d4b5afaf0703a9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY2NTYyZDAyNmRlZjRkMTAxMGU1YmViMGQ0YjVhZmFmMDcwM2E5Yw==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1996-06-07T19:11:44Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1996-06-07T19:11:44Z"}, "message": "* expr.c (safe_from_p):  Allow Chill-style variable-sized arrays.\n\nFrom-SVN: r12213", "tree": {"sha": "8c1e02659f2c61d5fbbb3f15767a3b1643324dfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c1e02659f2c61d5fbbb3f15767a3b1643324dfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f6562d026def4d1010e5beb0d4b5afaf0703a9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f6562d026def4d1010e5beb0d4b5afaf0703a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f6562d026def4d1010e5beb0d4b5afaf0703a9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f6562d026def4d1010e5beb0d4b5afaf0703a9c/comments", "author": null, "committer": null, "parents": [{"sha": "03cad97d1eeb7acb2d5be6d8e3cba7b27ae7bef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03cad97d1eeb7acb2d5be6d8e3cba7b27ae7bef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03cad97d1eeb7acb2d5be6d8e3cba7b27ae7bef4"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "9bda758497b191063da0c29acc904d56718ff637", "filename": "gcc/expr.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f6562d026def4d1010e5beb0d4b5afaf0703a9c/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f6562d026def4d1010e5beb0d4b5afaf0703a9c/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=8f6562d026def4d1010e5beb0d4b5afaf0703a9c", "patch": "@@ -4466,12 +4466,17 @@ safe_from_p (x, exp)\n \n   if (x == 0\n       /* If EXP has varying size, we MUST use a target since we currently\n-\t have no way of allocating temporaries of variable size.  So we\n-\t assume here that something at a higher level has prevented a\n+\t have no way of allocating temporaries of variable size\n+\t (except for arrays that have TYPE_ARRAY_MAX_SIZE set).\n+\t So we assume here that something at a higher level has prevented a\n \t clash.  This is somewhat bogus, but the best we can do.  Only\n \t do this when X is BLKmode.  */\n       || (TREE_TYPE (exp) != 0 && TYPE_SIZE (TREE_TYPE (exp)) != 0\n \t  && TREE_CODE (TYPE_SIZE (TREE_TYPE (exp))) != INTEGER_CST\n+\t  && (TREE_CODE (TREE_TYPE (exp)) != ARRAY_TYPE\n+\t      || TYPE_ARRAY_MAX_SIZE (TREE_TYPE (exp)) == NULL_TREE\n+\t      || TREE_CODE (TYPE_ARRAY_MAX_SIZE (TREE_TYPE (exp)))\n+\t      != INTEGER_CST)\n \t  && GET_MODE (x) == BLKmode))\n     return 1;\n "}]}