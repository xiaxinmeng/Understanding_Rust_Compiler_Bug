{"sha": "7610fee82af0217dd376ce0213d195209f72b606", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYxMGZlZTgyYWYwMjE3ZGQzNzZjZTAyMTNkMTk1MjA5ZjcyYjYwNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-24T14:23:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-24T14:23:03Z"}, "message": "[multiple changes]\n\n2014-01-24  Doug Rupp  <rupp@adacore.com>\n\n\t* init.c: Add a handler section for Android.\n\n2014-01-24  Arnaud Charlet  <charlet@adacore.com>\n\n\t* i-cexten.ads (Unsigned_33..64, Unsigned_33..64): New types.\n\n2014-01-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Operator_Check): If one operand is a\n\tRaise_Expression, set its type to that of the other operand.\n\t* sem_res.adb (Resolve_Raise_Expression): new procedure.\n\t(Resolve_Actuals): For an actual that is a Raise_Expression,\n\tset the type to that of the formal.\n\t* sem_type.adb (Find_Unique_Type): If one of the operands is a\n\tRaise_Expression, return type of the other operand.\n\n2014-01-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Record_Aggregate): If a scalar\n\tcomponent of the record has a type with a default aspect, and\n\tthe corresponding aggregate component is initiaized with a box,\n\tuse the default value in the rewritten aggregate.\n\n2014-01-24  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-interr.ads, s-interr.adb, s-interr-hwint.adb, s-interr-vms.adb,\n\ts-interr-sigaction.adb,\n\ts-interr-dummy.adb (Install_Restricted_Handlers): Add Prio parameter.\n\t* exp_ch9.adb (Make_Initialize_Protection): Add Prio parameter\n\tto the call to Install_Restricted_Handlers.\n\n2014-01-24  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-nmsc.adb (Check_File): Add protection when the source is\n\tnot fully initialized.\n\nFrom-SVN: r207033", "tree": {"sha": "9c66fd5109d2f7bfc6e07d67646d74a2c885dbf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c66fd5109d2f7bfc6e07d67646d74a2c885dbf7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7610fee82af0217dd376ce0213d195209f72b606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7610fee82af0217dd376ce0213d195209f72b606", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7610fee82af0217dd376ce0213d195209f72b606", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7610fee82af0217dd376ce0213d195209f72b606/comments", "author": null, "committer": null, "parents": [{"sha": "4a8548473e9241313033cbd0ff3e37ab1f6971fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a8548473e9241313033cbd0ff3e37ab1f6971fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a8548473e9241313033cbd0ff3e37ab1f6971fe"}], "stats": {"total": 483, "additions": 427, "deletions": 56}, "files": [{"sha": "fd2bca2cca0aeb3e29c408eb1e32d482fa5a349e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -1,3 +1,41 @@\n+2014-01-24  Doug Rupp  <rupp@adacore.com>\n+\n+\t* init.c: Add a handler section for Android.\n+\n+2014-01-24  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* i-cexten.ads (Unsigned_33..64, Unsigned_33..64): New types.\n+\n+2014-01-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Operator_Check): If one operand is a\n+\tRaise_Expression, set its type to that of the other operand.\n+\t* sem_res.adb (Resolve_Raise_Expression): new procedure.\n+\t(Resolve_Actuals): For an actual that is a Raise_Expression,\n+\tset the type to that of the formal.\n+\t* sem_type.adb (Find_Unique_Type): If one of the operands is a\n+\tRaise_Expression, return type of the other operand.\n+\n+2014-01-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Record_Aggregate): If a scalar\n+\tcomponent of the record has a type with a default aspect, and\n+\tthe corresponding aggregate component is initiaized with a box,\n+\tuse the default value in the rewritten aggregate.\n+\n+2014-01-24  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-interr.ads, s-interr.adb, s-interr-hwint.adb, s-interr-vms.adb,\n+\ts-interr-sigaction.adb,\n+\ts-interr-dummy.adb (Install_Restricted_Handlers): Add Prio parameter.\n+\t* exp_ch9.adb (Make_Initialize_Protection): Add Prio parameter\n+\tto the call to Install_Restricted_Handlers.\n+\n+2014-01-24  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-nmsc.adb (Check_File): Add protection when the source is\n+\tnot fully initialized.\n+\n 2014-01-24  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_util.adb (Is_Post_State): In a postcondition, a selected"}, {"sha": "6adf7b384f4c443cc39d2b949233440d240ba7f8", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 33, "deletions": 31, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -13451,6 +13451,7 @@ package body Exp_Ch9 is\n       L           : constant List_Id := New_List;\n       Has_Entry   : constant Boolean := Has_Entries (Ptyp);\n       Prio_Type   : Entity_Id;\n+      Prio_Var    : Entity_Id := Empty;\n       Restricted  : constant Boolean := Restricted_Profile;\n \n    begin\n@@ -13509,7 +13510,6 @@ package body Exp_Ch9 is\n                                  (Ptyp, Name_Priority, Check_Parents => False);\n \n                Prio : Node_Id;\n-               Temp : Entity_Id;\n \n             begin\n                --  Pragma Priority\n@@ -13539,37 +13539,21 @@ package body Exp_Ch9 is\n                   Prio := Expression (Prio_Clause);\n                end if;\n \n-               --  If priority is a static expression, then we can duplicate it\n-               --  with no problem and simply append it to the argument list.\n-               --  However, it has only be pre-analyzed, so we need to check\n-               --  now that it is in the bounds of the priority type.\n+               --  Always create a locale variable to capture the priority.\n+               --  The priority is also passed to Install_Restriced_Handlers.\n+               --  Note that it is really necessary to create this variable\n+               --  explicitly. It might be thought that removing side effects\n+               --  would the appropriate approach, but that could generate\n+               --  declarations improperly placed in the enclosing scope.\n \n-               if Is_Static_Expression (Prio) then\n-                  Set_Analyzed (Prio, False);\n-                  Append_To (Args,\n-                    Make_Type_Conversion (Loc,\n-                      Subtype_Mark => New_Occurrence_Of (Prio_Type, Loc),\n-                      Expression   => Duplicate_Subexpr (Prio)));\n-\n-               --  Otherwise, the priority may be a per-object expression, if\n-               --  it depends on a discriminant of the type. In this case,\n-               --  create local variable to capture the expression. Note that\n-               --  it is really necessary to create this variable explicitly.\n-               --  It might be thought that removing side effects would the\n-               --  appropriate approach, but that could generate declarations\n-               --  improperly placed in the enclosing scope.\n+               Prio_Var := Make_Temporary (Loc, 'R', Prio);\n+               Append_To (L,\n+                 Make_Object_Declaration (Loc,\n+                   Defining_Identifier => Prio_Var,\n+                   Object_Definition   => New_Occurrence_Of (Prio_Type,  Loc),\n+                   Expression          => Relocate_Node (Prio)));\n \n-               else\n-                  Temp := Make_Temporary (Loc, 'R', Prio);\n-                  Append_To (L,\n-                     Make_Object_Declaration (Loc,\n-                        Defining_Identifier => Temp,\n-                        Object_Definition   =>\n-                          New_Occurrence_Of (Prio_Type,  Loc),\n-                        Expression          => Relocate_Node (Prio)));\n-\n-                  Append_To (Args, New_Occurrence_Of (Temp, Loc));\n-               end if;\n+               Append_To (Args, New_Occurrence_Of (Prio_Var, Loc));\n             end;\n \n          --  When no priority is specified but an xx_Handler pragma is, we\n@@ -13714,14 +13698,32 @@ package body Exp_Ch9 is\n          --  or, in the case of Ravenscar:\n \n          --  Install_Restricted_Handlers\n-         --    ((Expr1, Proc1'access), ...., (ExprN, ProcN'access));\n+         --    (Prio, (Expr1, Proc1'access), ...., (ExprN, ProcN'access));\n \n          declare\n             Args  : constant List_Id := New_List;\n             Table : constant List_Id := New_List;\n             Ritem : Node_Id          := First_Rep_Item (Ptyp);\n \n          begin\n+            --  Build the Priority parameter (only for ravenscar)\n+\n+            if Restricted then\n+\n+               --  Priority comes from a pragma\n+\n+               if Present (Prio_Var) then\n+                  Append_To (Args, New_Occurrence_Of (Prio_Var, Loc));\n+\n+               --  Priority is the default one\n+\n+               else\n+                  Append_To (Args,\n+                    New_Reference_To\n+                      (RTE (RE_Default_Interrupt_Priority), Loc));\n+               end if;\n+            end if;\n+\n             --  Build the Attach_Handler table argument\n \n             while Present (Ritem) loop"}, {"sha": "e256dec22ba0515547bef331a97961b4345a6a43", "filename": "gcc/ada/i-cexten.ads", "status": "modified", "additions": 193, "deletions": 1, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fi-cexten.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fi-cexten.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cexten.ads?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -170,6 +170,102 @@ package Interfaces.C.Extensions is\n    type Unsigned_32 is mod 2 ** 32;\n    for Unsigned_32'Size use 32;\n \n+   type Unsigned_33 is mod 2 ** 33;\n+   for Unsigned_33'Size use 33;\n+\n+   type Unsigned_34 is mod 2 ** 34;\n+   for Unsigned_34'Size use 34;\n+\n+   type Unsigned_35 is mod 2 ** 35;\n+   for Unsigned_35'Size use 35;\n+\n+   type Unsigned_36 is mod 2 ** 36;\n+   for Unsigned_36'Size use 36;\n+\n+   type Unsigned_37 is mod 2 ** 37;\n+   for Unsigned_37'Size use 37;\n+\n+   type Unsigned_38 is mod 2 ** 38;\n+   for Unsigned_38'Size use 38;\n+\n+   type Unsigned_39 is mod 2 ** 39;\n+   for Unsigned_39'Size use 39;\n+\n+   type Unsigned_40 is mod 2 ** 40;\n+   for Unsigned_40'Size use 40;\n+\n+   type Unsigned_41 is mod 2 ** 41;\n+   for Unsigned_41'Size use 41;\n+\n+   type Unsigned_42 is mod 2 ** 42;\n+   for Unsigned_42'Size use 42;\n+\n+   type Unsigned_43 is mod 2 ** 43;\n+   for Unsigned_43'Size use 43;\n+\n+   type Unsigned_44 is mod 2 ** 44;\n+   for Unsigned_44'Size use 44;\n+\n+   type Unsigned_45 is mod 2 ** 45;\n+   for Unsigned_45'Size use 45;\n+\n+   type Unsigned_46 is mod 2 ** 46;\n+   for Unsigned_46'Size use 46;\n+\n+   type Unsigned_47 is mod 2 ** 47;\n+   for Unsigned_47'Size use 47;\n+\n+   type Unsigned_48 is mod 2 ** 48;\n+   for Unsigned_48'Size use 48;\n+\n+   type Unsigned_49 is mod 2 ** 49;\n+   for Unsigned_49'Size use 49;\n+\n+   type Unsigned_50 is mod 2 ** 50;\n+   for Unsigned_50'Size use 50;\n+\n+   type Unsigned_51 is mod 2 ** 51;\n+   for Unsigned_51'Size use 51;\n+\n+   type Unsigned_52 is mod 2 ** 52;\n+   for Unsigned_52'Size use 52;\n+\n+   type Unsigned_53 is mod 2 ** 53;\n+   for Unsigned_53'Size use 53;\n+\n+   type Unsigned_54 is mod 2 ** 54;\n+   for Unsigned_54'Size use 54;\n+\n+   type Unsigned_55 is mod 2 ** 55;\n+   for Unsigned_55'Size use 55;\n+\n+   type Unsigned_56 is mod 2 ** 56;\n+   for Unsigned_56'Size use 56;\n+\n+   type Unsigned_57 is mod 2 ** 57;\n+   for Unsigned_57'Size use 57;\n+\n+   type Unsigned_58 is mod 2 ** 58;\n+   for Unsigned_58'Size use 58;\n+\n+   type Unsigned_59 is mod 2 ** 59;\n+   for Unsigned_59'Size use 59;\n+\n+   type Unsigned_60 is mod 2 ** 60;\n+   for Unsigned_60'Size use 60;\n+\n+   type Unsigned_61 is mod 2 ** 61;\n+   for Unsigned_61'Size use 61;\n+\n+   type Unsigned_62 is mod 2 ** 62;\n+   for Unsigned_62'Size use 62;\n+\n+   type Unsigned_63 is mod 2 ** 63;\n+   for Unsigned_63'Size use 63;\n+\n+   type Unsigned_64 is mod 2 ** 64;\n+   for Unsigned_64'Size use 64;\n+\n    type Signed_2 is range -2 ** 1 .. 2 ** 1 - 1;\n    for Signed_2'Size use 2;\n \n@@ -263,4 +359,100 @@ package Interfaces.C.Extensions is\n    type Signed_32 is range -2 ** 31 .. 2 ** 31 - 1;\n    for Signed_32'Size use 32;\n \n+   type Signed_33 is range -2 ** 32 .. 2 ** 32 - 1;\n+   for Signed_33'Size use 33;\n+\n+   type Signed_34 is range -2 ** 33 .. 2 ** 33 - 1;\n+   for Signed_34'Size use 34;\n+\n+   type Signed_35 is range -2 ** 34 .. 2 ** 34 - 1;\n+   for Signed_35'Size use 35;\n+\n+   type Signed_36 is range -2 ** 35 .. 2 ** 35 - 1;\n+   for Signed_36'Size use 36;\n+\n+   type Signed_37 is range -2 ** 36 .. 2 ** 36 - 1;\n+   for Signed_37'Size use 37;\n+\n+   type Signed_38 is range -2 ** 37 .. 2 ** 37 - 1;\n+   for Signed_38'Size use 38;\n+\n+   type Signed_39 is range -2 ** 38 .. 2 ** 38 - 1;\n+   for Signed_39'Size use 39;\n+\n+   type Signed_40 is range -2 ** 39 .. 2 ** 39 - 1;\n+   for Signed_40'Size use 40;\n+\n+   type Signed_41 is range -2 ** 40 .. 2 ** 40 - 1;\n+   for Signed_41'Size use 41;\n+\n+   type Signed_42 is range -2 ** 41 .. 2 ** 41 - 1;\n+   for Signed_42'Size use 42;\n+\n+   type Signed_43 is range -2 ** 42 .. 2 ** 42 - 1;\n+   for Signed_43'Size use 43;\n+\n+   type Signed_44 is range -2 ** 43 .. 2 ** 43 - 1;\n+   for Signed_44'Size use 44;\n+\n+   type Signed_45 is range -2 ** 44 .. 2 ** 44 - 1;\n+   for Signed_45'Size use 45;\n+\n+   type Signed_46 is range -2 ** 45 .. 2 ** 45 - 1;\n+   for Signed_46'Size use 46;\n+\n+   type Signed_47 is range -2 ** 46 .. 2 ** 46 - 1;\n+   for Signed_47'Size use 47;\n+\n+   type Signed_48 is range -2 ** 47 .. 2 ** 47 - 1;\n+   for Signed_48'Size use 48;\n+\n+   type Signed_49 is range -2 ** 48 .. 2 ** 48 - 1;\n+   for Signed_49'Size use 49;\n+\n+   type Signed_50 is range -2 ** 49 .. 2 ** 49 - 1;\n+   for Signed_50'Size use 50;\n+\n+   type Signed_51 is range -2 ** 50 .. 2 ** 50 - 1;\n+   for Signed_51'Size use 51;\n+\n+   type Signed_52 is range -2 ** 51 .. 2 ** 51 - 1;\n+   for Signed_52'Size use 52;\n+\n+   type Signed_53 is range -2 ** 52 .. 2 ** 52 - 1;\n+   for Signed_53'Size use 53;\n+\n+   type Signed_54 is range -2 ** 53 .. 2 ** 53 - 1;\n+   for Signed_54'Size use 54;\n+\n+   type Signed_55 is range -2 ** 54 .. 2 ** 54 - 1;\n+   for Signed_55'Size use 55;\n+\n+   type Signed_56 is range -2 ** 55 .. 2 ** 55 - 1;\n+   for Signed_56'Size use 56;\n+\n+   type Signed_57 is range -2 ** 56 .. 2 ** 56 - 1;\n+   for Signed_57'Size use 57;\n+\n+   type Signed_58 is range -2 ** 57 .. 2 ** 57 - 1;\n+   for Signed_58'Size use 58;\n+\n+   type Signed_59 is range -2 ** 58 .. 2 ** 58 - 1;\n+   for Signed_59'Size use 59;\n+\n+   type Signed_60 is range -2 ** 59 .. 2 ** 59 - 1;\n+   for Signed_60'Size use 60;\n+\n+   type Signed_61 is range -2 ** 60 .. 2 ** 60 - 1;\n+   for Signed_61'Size use 61;\n+\n+   type Signed_62 is range -2 ** 61 .. 2 ** 61 - 1;\n+   for Signed_62'Size use 62;\n+\n+   type Signed_63 is range -2 ** 62 .. 2 ** 62 - 1;\n+   for Signed_63'Size use 63;\n+\n+   type Signed_64 is range -2 ** 63 .. 2 ** 63 - 1;\n+   for Signed_64'Size use 64;\n+\n end Interfaces.C.Extensions;"}, {"sha": "e943837d07a583590433d05e0b266433d171b4d2", "filename": "gcc/ada/init.c", "status": "modified", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -2320,6 +2320,83 @@ __gnat_install_handler (void)\n   __gnat_handler_installed = 1;\n }\n \n+#elif defined(__ANDROID__)\n+\n+/*******************/\n+/* Android Section */\n+/*******************/\n+\n+#include <signal.h>\n+#include <stdlib.h>\n+\n+static void\n+__gnat_error_handler (int sig,\n+\t\t      siginfo_t *si ATTRIBUTE_UNUSED,\n+\t\t      void *ucontext ATTRIBUTE_UNUSED)\n+{\n+  struct Exception_Data *exception;\n+  const char *msg;\n+\n+  switch (sig)\n+    {\n+    case SIGSEGV:\n+      exception = &storage_error;\n+      msg = \"stack overflow or erroneous memory access\";\n+      break;\n+\n+    case SIGBUS:\n+      exception = &constraint_error;\n+      msg = \"SIGBUS\";\n+      break;\n+\n+    case SIGFPE:\n+      exception = &constraint_error;\n+      msg = \"SIGFPE\";\n+      break;\n+\n+    default:\n+      exception = &program_error;\n+      msg = \"unhandled signal\";\n+    }\n+\n+  Raise_From_Signal_Handler (exception, msg);\n+}\n+\n+/* This must be in keeping with System.OS_Interface.Alternate_Stack_Size.  */\n+char __gnat_alternate_stack[16 * 1024];\n+\n+void\n+__gnat_install_handler (void)\n+{\n+  struct sigaction act;\n+\n+  /* Set up signal handler to map synchronous signals to appropriate\n+     exceptions.  Make sure that the handler isn't interrupted by another\n+     signal that might cause a scheduling event!  Also setup an alternate\n+     stack region for the handler execution so that stack overflows can be\n+     handled properly, avoiding a SEGV generation from stack usage by the\n+     handler itself.  */\n+\n+  stack_t stack;\n+  stack.ss_sp = __gnat_alternate_stack;\n+  stack.ss_size = sizeof (__gnat_alternate_stack);\n+  stack.ss_flags = 0;\n+  sigaltstack (&stack, NULL);\n+\n+  act.sa_sigaction = __gnat_error_handler;\n+  act.sa_flags = SA_NODEFER | SA_RESTART | SA_SIGINFO;\n+  sigemptyset (&act.sa_mask);\n+\n+  sigaction (SIGABRT, &act, NULL);\n+  sigaction (SIGFPE,  &act, NULL);\n+  sigaction (SIGILL,  &act, NULL);\n+  sigaction (SIGBUS,  &act, NULL);\n+  act.sa_flags |= SA_ONSTACK;\n+  sigaction (SIGSEGV, &act, NULL);\n+\n+  __gnat_handler_installed = 1;\n+}\n+\n #else\n \n /* For all other versions of GNAT, the handler does nothing.  */"}, {"sha": "e6a1f4c601be2fc11731c3d9071bbd5c35245235", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -7051,7 +7051,9 @@ package body Prj.Nmsc is\n             --  Check if it is OK to have the same file name in several\n             --  source directories.\n \n-            if Source_Dir_Rank = Name_Loc.Source.Source_Dir_Rank then\n+            if Name_Loc.Source /= No_Source\n+              and then Source_Dir_Rank = Name_Loc.Source.Source_Dir_Rank\n+            then\n                Error_Msg_File_1 := File_Name;\n                Error_Msg\n                  (Data.Flags,"}, {"sha": "87ed21d0367696f3067fadbdf603852293c7f086", "filename": "gcc/ada/s-interr-dummy.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fs-interr-dummy.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fs-interr-dummy.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr-dummy.adb?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -7,7 +7,7 @@\n --                                  B o d y                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2010, AdaCore                     --\n+--                     Copyright (C) 1995-2013, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -187,7 +187,10 @@ package body System.Interrupts is\n    -- Install_Restricted_Handlers --\n    ---------------------------------\n \n-   procedure Install_Restricted_Handlers (Handlers : New_Handler_Array) is\n+   procedure Install_Restricted_Handlers\n+     (Prio     : Any_Priority;\n+      Handlers : New_Handler_Array)\n+   is\n    begin\n       Unimplemented;\n    end Install_Restricted_Handlers;"}, {"sha": "5cb38ea941c4f7cc0be6c2a48be59dabc9e3fa61", "filename": "gcc/ada/s-interr-hwint.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fs-interr-hwint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fs-interr-hwint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr-hwint.adb?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2011, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2013, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -476,7 +476,11 @@ package body System.Interrupts is\n    -- Install_Restricted_Handlers --\n    ---------------------------------\n \n-   procedure Install_Restricted_Handlers (Handlers : New_Handler_Array) is\n+   procedure Install_Restricted_Handlers\n+      (Prio     : Any_Priority;\n+       Handlers : New_Handler_Array)\n+   is\n+      pragma Unreferenced (Prio);\n    begin\n       for N in Handlers'Range loop\n          Attach_Handler (Handlers (N).Handler, Handlers (N).Interrupt, True);"}, {"sha": "233fdc38f28c90c0a935f1455d7d4e959aac8776", "filename": "gcc/ada/s-interr-sigaction.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fs-interr-sigaction.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fs-interr-sigaction.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr-sigaction.adb?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -292,7 +292,11 @@ package body System.Interrupts is\n    -- Install_Restricted_Handlers --\n    ---------------------------------\n \n-   procedure Install_Restricted_Handlers (Handlers : New_Handler_Array) is\n+   procedure Install_Restricted_Handlers\n+      (Prio     : Any_Priority;\n+       Handlers : New_Handler_Array)\n+   is\n+      pragma Unreferenced (Prio);\n    begin\n       for N in Handlers'Range loop\n          Attach_Handler (Handlers (N).Handler, Handlers (N).Interrupt, True);"}, {"sha": "16dc88103c21ce8d911c79fa687c2e4b607bf2a3", "filename": "gcc/ada/s-interr-vms.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fs-interr-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fs-interr-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr-vms.adb?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2009, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2013, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1098,7 +1098,11 @@ package body System.Interrupts is\n    -- Install_Restricted_Handlers --\n    ---------------------------------\n \n-   procedure Install_Restricted_Handlers (Handlers : New_Handler_Array) is\n+   procedure Install_Restricted_Handlers\n+      (Prio     : Any_Priority;\n+       Handlers : New_Handler_Array)\n+   is\n+      pragma Unreferenced (Prio);\n    begin\n       for N in Handlers'Range loop\n          Attach_Handler (Handlers (N).Handler, Handlers (N).Interrupt, True);"}, {"sha": "7b7b7bd160e91ad28ece63321cade6cff41f400b", "filename": "gcc/ada/s-interr.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fs-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fs-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.adb?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2009, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2013, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -469,7 +469,11 @@ package body System.Interrupts is\n    -- Install_Restricted_Handlers --\n    ---------------------------------\n \n-   procedure Install_Restricted_Handlers (Handlers : New_Handler_Array) is\n+   procedure Install_Restricted_Handlers\n+     (Prio     : Any_Priority;\n+      Handlers : New_Handler_Array)\n+   is\n+      pragma Unreferenced (Prio);\n    begin\n       for N in Handlers'Range loop\n          Attach_Handler (Handlers (N).Handler, Handlers (N).Interrupt, True);"}, {"sha": "7c3ed56f9dcb5a562b0cc34cfb316eacd6e5509d", "filename": "gcc/ada/s-interr.ads", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fs-interr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fs-interr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.ads?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -266,11 +266,13 @@ package System.Interrupts is\n    --  Store the old handlers in Object.Previous_Handlers and install\n    --  the new static handlers.\n \n-   procedure Install_Restricted_Handlers (Handlers : New_Handler_Array);\n-   --  Install the static Handlers for the given interrupts and do not store\n-   --  previously installed handlers. This procedure is used when the Ravenscar\n-   --  restrictions are in place since in that case there are only\n-   --  library-level protected handlers that will be installed at\n-   --  initialization and never be replaced.\n+   procedure Install_Restricted_Handlers\n+     (Prio     : Any_Priority;\n+      Handlers : New_Handler_Array);\n+   --  Install the static Handlers for the given interrupts and do not\n+   --  store previously installed handlers. This procedure is used when\n+   --  the Ravenscar restrictions are in place since in that case there\n+   --  are only library-level protected handlers that will be installed\n+   --  at initialization and never be replaced.\n \n end System.Interrupts;"}, {"sha": "374bb7b9081082cddcb69ec0c8516f0c3080f6ff", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -4204,6 +4204,17 @@ package body Sem_Aggr is\n                      end;\n                   end if;\n \n+               --  Ada 2012: If component is scalar with default value, use it\n+\n+               elsif Is_Scalar_Type (Ctyp)\n+                 and then Has_Default_Aspect (Ctyp)\n+               then\n+                  Add_Association\n+                    (Component  => Component,\n+                     Expr       => Default_Aspect_Value\n+                                     (First_Subtype (Underlying_Type (Ctyp))),\n+                     Assoc_List => New_Assoc_List);\n+\n                elsif Has_Non_Null_Base_Init_Proc (Ctyp)\n                  or else not Expander_Active\n                then"}, {"sha": "29e3e2faaac7e205f1d0183f3faed13ae774d792", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -6298,6 +6298,19 @@ package body Sem_Ch4 is\n               or else Etype (R) = Any_Type\n               or else (Nkind (N) in N_Binary_Op and then Etype (L) = Any_Type)\n             then\n+               --  For the rather unusual case where one of the operands is\n+               --  a Raise_Expression, whose initial type is Any_Type, use\n+               --  the type of the other operand.\n+\n+               if Nkind (L) = N_Raise_Expression then\n+                  Set_Etype (L, Etype (R));\n+                  Set_Etype (N, Etype (R));\n+\n+               elsif Nkind (R) = N_Raise_Expression then\n+                  Set_Etype (R, Etype (L));\n+                  Set_Etype (N, Etype (L));\n+               end if;\n+\n                return;\n \n             --  We explicitly check for the case of concatenation of component"}, {"sha": "751ca29bf5bc4496ea1d9dfb57642bba2f96628c", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -193,6 +193,7 @@ package body Sem_Res is\n    procedure Resolve_Op_Expon                  (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Op_Not                    (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Qualified_Expression      (N : Node_Id; Typ : Entity_Id);\n+   procedure Resolve_Raise_Expression          (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Range                     (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Real_Literal              (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Reference                 (N : Node_Id; Typ : Entity_Id);\n@@ -2876,11 +2877,8 @@ package body Sem_Res is\n             when N_Quantified_Expression\n                              => null;\n \n-            --  Nothing to do for Raise_Expression, since we took care of\n-            --  setting the Etype earlier, and no other processing is needed.\n-\n             when N_Raise_Expression\n-                             => null;\n+                             => Resolve_Raise_Expression         (N, Ctx_Type);\n \n             when N_Raise_xxx_Error\n                              => Set_Etype (N, Ctx_Type);\n@@ -3453,13 +3451,16 @@ package body Sem_Res is\n \n          --  If we have an error in any actual or formal, indicated by a type\n          --  of Any_Type, then abandon resolution attempt, and set result type\n-         --  to Any_Type.\n+         --  to Any_Type. Skip this if the actual is a Raise_Expression, whose\n+         --  type is imposed from context.\n \n          elsif (Present (A) and then Etype (A) = Any_Type)\n            or else Etype (F) = Any_Type\n          then\n-            Set_Etype (N, Any_Type);\n-            return;\n+            if Nkind (A) /= N_Raise_Expression then\n+               Set_Etype (N, Any_Type);\n+               return;\n+            end if;\n          end if;\n \n          --  Case where actual is present\n@@ -8751,6 +8752,15 @@ package body Sem_Res is\n       Eval_Qualified_Expression (N);\n    end Resolve_Qualified_Expression;\n \n+   ------------------------------\n+   -- Resolve_Raise_Expression --\n+   ------------------------------\n+\n+   procedure Resolve_Raise_Expression (N : Node_Id; Typ : Entity_Id) is\n+   begin\n+      Set_Etype (N, Typ);\n+   end Resolve_Raise_Expression;\n+\n    -------------------\n    -- Resolve_Range --\n    -------------------"}, {"sha": "f0fea637a385d65b82e590e94ffb230e3d18d045", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7610fee82af0217dd376ce0213d195209f72b606/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=7610fee82af0217dd376ce0213d195209f72b606", "patch": "@@ -2221,6 +2221,11 @@ package body Sem_Type is\n       then\n          return Etype (R);\n \n+      --  If one operand is a raise_expression, use type of other operand\n+\n+      elsif Nkind (L) = N_Raise_Expression then\n+         return Etype (R);\n+\n       else\n          return Specific_Type (T, Etype (R));\n       end if;"}]}