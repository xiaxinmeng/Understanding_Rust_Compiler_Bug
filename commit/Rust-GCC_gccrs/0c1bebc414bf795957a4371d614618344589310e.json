{"sha": "0c1bebc414bf795957a4371d614618344589310e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMxYmViYzQxNGJmNzk1OTU3YTQzNzFkNjE0NjE4MzQ0NTg5MzEwZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-08-31T21:05:22Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-08-31T21:05:22Z"}, "message": "tree-nested.c (convert_all_function_calls): Iterate until after the sum of static chains in the nest doesn't change.\n\n\t* tree-nested.c (convert_all_function_calls): Iterate until after the\n\tsum of static chains in the nest doesn't change.\n\nFrom-SVN: r163698", "tree": {"sha": "e6c48d895113d40a0dd1251fb99c06c246c3b901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6c48d895113d40a0dd1251fb99c06c246c3b901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c1bebc414bf795957a4371d614618344589310e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c1bebc414bf795957a4371d614618344589310e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c1bebc414bf795957a4371d614618344589310e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c1bebc414bf795957a4371d614618344589310e/comments", "author": null, "committer": null, "parents": [{"sha": "0e607518d5cb2b5254adf739f90b6ca68e3f3daa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e607518d5cb2b5254adf739f90b6ca68e3f3daa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e607518d5cb2b5254adf739f90b6ca68e3f3daa"}], "stats": {"total": 85, "additions": 73, "deletions": 12}, "files": [{"sha": "3d10080611a32dea5429d202380337852d163853", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1bebc414bf795957a4371d614618344589310e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1bebc414bf795957a4371d614618344589310e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c1bebc414bf795957a4371d614618344589310e", "patch": "@@ -1,3 +1,8 @@\n+2010-08-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-nested.c (convert_all_function_calls): Iterate until after the\n+\tsum of static chains in the nest doesn't change.\n+\n 2010-08-31  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/m32c/m32c.c (classes_intersect): Remove."}, {"sha": "3f9a2eee032fda989bcfad957570f8792476165d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1bebc414bf795957a4371d614618344589310e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1bebc414bf795957a4371d614618344589310e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c1bebc414bf795957a4371d614618344589310e", "patch": "@@ -1,3 +1,7 @@\n+2010-08-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/nested-func-8.c: New test.\n+\n 2010-08-31  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/38282"}, {"sha": "ccec27d08fbdcfd20cc6d7fa39a8e1a962b1359c", "filename": "gcc/testsuite/gcc.dg/nested-func-8.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1bebc414bf795957a4371d614618344589310e/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-func-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1bebc414bf795957a4371d614618344589310e/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-func-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-func-8.c?ref=0c1bebc414bf795957a4371d614618344589310e", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O -fno-inline\" } */\n+\n+extern void abort (void);\n+\n+/* Return 0 and clobber the static chain.  */\n+\n+int\n+zero (int n)\n+{\n+  int\n+  nested (int m)\n+  {\n+    return m - n;\n+  }\n+\n+  return nested (n);\n+}\n+\n+/* Return the triple of ARG in a convoluted manner.  */\n+\n+int\n+triple (int arg)\n+{\n+  int\n+  read_arg (void)\n+  {\n+    return arg;\n+  }\n+\n+  int\n+  parent (int nested_arg)\n+  {\n+    int\n+    child1 (void)\n+    {\n+      return parent (zero (5));\n+    }\n+\n+    int\n+    child2 (void)\n+    {\n+      return nested_arg + read_arg ();\n+    }\n+\n+    return (nested_arg == 0 ? 0 : child1 ()) + child2 ();\n+  }\n+\n+  return parent (arg);\n+}\n+\n+int main(void)\n+{\n+  if (triple (13) != 3 * 13)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "b811ec500dff75d70168be12ecaccf185d758ace", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1bebc414bf795957a4371d614618344589310e/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1bebc414bf795957a4371d614618344589310e/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=0c1bebc414bf795957a4371d614618344589310e", "patch": "@@ -2070,9 +2070,8 @@ convert_gimple_call (gimple_stmt_iterator *gsi, bool *handled_ops_p,\n static void\n convert_all_function_calls (struct nesting_info *root)\n {\n+  unsigned int chain_count = 0, old_chain_count, iter_count;\n   struct nesting_info *n;\n-  int iter_count;\n-  bool any_changed;\n \n   /* First, optimistically clear static_chain for all decls that haven't\n      used the static chain already for variable access.  */\n@@ -2088,6 +2087,7 @@ convert_all_function_calls (struct nesting_info *root)\n \t}\n       else\n \tDECL_STATIC_CHAIN (decl) = 1;\n+      chain_count += DECL_STATIC_CHAIN (decl);\n     }\n \n   /* Walk the functions and perform transformations.  Note that these\n@@ -2100,7 +2100,8 @@ convert_all_function_calls (struct nesting_info *root)\n   iter_count = 0;\n   do\n     {\n-      any_changed = false;\n+      old_chain_count = chain_count;\n+      chain_count = 0;\n       iter_count++;\n \n       if (dump_file && (dump_flags & TDF_DETAILS))\n@@ -2109,22 +2110,16 @@ convert_all_function_calls (struct nesting_info *root)\n       FOR_EACH_NEST_INFO (n, root)\n \t{\n \t  tree decl = n->context;\n-\t  bool old_static_chain = DECL_STATIC_CHAIN (decl);\n-\n \t  walk_function (convert_tramp_reference_stmt,\n \t\t\t convert_tramp_reference_op, n);\n \t  walk_function (convert_gimple_call, NULL, n);\n-\n-\t  /* If a call to another function created the use of a chain\n-\t     within this function, we'll have to continue iteration.  */\n-\t  if (!old_static_chain && DECL_STATIC_CHAIN (decl))\n-\t    any_changed = true;\n+\t  chain_count += DECL_STATIC_CHAIN (decl);\n \t}\n     }\n-  while (any_changed);\n+  while (chain_count != old_chain_count);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n-    fprintf (dump_file, \"convert_all_function_calls iterations: %d\\n\\n\",\n+    fprintf (dump_file, \"convert_all_function_calls iterations: %u\\n\\n\",\n \t     iter_count);\n }\n "}]}