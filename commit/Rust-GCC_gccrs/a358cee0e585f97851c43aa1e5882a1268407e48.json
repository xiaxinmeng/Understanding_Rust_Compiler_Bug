{"sha": "a358cee0e585f97851c43aa1e5882a1268407e48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM1OGNlZTBlNTg1Zjk3ODUxYzQzYWExZTU4ODJhMTI2ODQwN2U0OA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-20T06:23:58Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-20T06:23:58Z"}, "message": "(expand_increment): Convert constant subtract to add before setting single_insn.\n\n(expand_increment): Convert constant subtract to add\nbefore setting single_insn.  Compensate for this when choosing\nthe tree code to pass to `build'.\n\nFrom-SVN: r4944", "tree": {"sha": "9533cd0e8d0d9b582e0dea97f525ef8a2fc9f36f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9533cd0e8d0d9b582e0dea97f525ef8a2fc9f36f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a358cee0e585f97851c43aa1e5882a1268407e48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a358cee0e585f97851c43aa1e5882a1268407e48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a358cee0e585f97851c43aa1e5882a1268407e48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a358cee0e585f97851c43aa1e5882a1268407e48/comments", "author": null, "committer": null, "parents": [{"sha": "04780ee7ea605cb7157502cd427fe8555d98d3f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04780ee7ea605cb7157502cd427fe8555d98d3f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04780ee7ea605cb7157502cd427fe8555d98d3f5"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "9ba19e5d3a3fc022ad9f288d4fc1287f024e44c7", "filename": "gcc/expr.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a358cee0e585f97851c43aa1e5882a1268407e48/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a358cee0e585f97851c43aa1e5882a1268407e48/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=a358cee0e585f97851c43aa1e5882a1268407e48", "patch": "@@ -6898,6 +6898,14 @@ expand_increment (exp, post)\n       || TREE_CODE (exp) == PREDECREMENT_EXPR)\n     this_optab = sub_optab;\n \n+  /* Convert decrement by a constant into a negative increment.  */\n+  if (this_optab == sub_optab\n+      && GET_CODE (op1) == CONST_INT)\n+    {\n+      op1 = GEN_INT (- INTVAL (op1));\n+      this_optab = add_optab;\n+    }\n+\n   /* For a preincrement, see if we can do this with a single instruction.  */\n   if (!post)\n     {\n@@ -6924,23 +6932,16 @@ expand_increment (exp, post)\n \t in which case it was stabilized above, or (2) it is an array_ref\n \t with constant index in an array in a register, which is\n \t safe to reevaluate.  */\n-      tree newexp = build ((this_optab == add_optab\n-\t\t\t    ? PLUS_EXPR : MINUS_EXPR),\n+      tree newexp = build (((TREE_CODE (exp) == POSTDECREMENT_EXPR\n+\t\t\t     || TREE_CODE (exp) == PREDECREMENT_EXPR)\n+\t\t\t    ? MINUS_EXPR : PLUS_EXPR),\n \t\t\t   TREE_TYPE (exp),\n \t\t\t   incremented,\n \t\t\t   TREE_OPERAND (exp, 1));\n       temp = expand_assignment (incremented, newexp, ! post, 0);\n       return post ? op0 : temp;\n     }\n \n-  /* Convert decrement by a constant into a negative increment.  */\n-  if (this_optab == sub_optab\n-      && GET_CODE (op1) == CONST_INT)\n-    {\n-      op1 = GEN_INT (- INTVAL (op1));\n-      this_optab = add_optab;\n-    }\n-\n   if (post)\n     {\n       /* We have a true reference to the value in OP0."}]}