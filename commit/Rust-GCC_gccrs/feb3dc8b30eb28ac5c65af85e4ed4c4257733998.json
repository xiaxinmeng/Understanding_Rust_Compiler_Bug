{"sha": "feb3dc8b30eb28ac5c65af85e4ed4c4257733998", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmViM2RjOGIzMGViMjhhYzVjNjVhZjg1ZTRlZDRjNDI1NzczMzk5OA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-08-17T16:20:35Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-08-17T16:20:35Z"}, "message": "Revert 2004-08-16 Stan Shebs <shebs@apple.com>\n\n        Revert 2004-08-16  Stan Shebs  <shebs@apple.com>\n        * config/rs6000/rs6000.md: Include darwin.md.\n        (builtin_setjmp_receiver): Add DImode case.\n        * config/rs6000/rs6000.c (rs6000_emit_move): Add DImode case to\n        Darwin bits.\n\nFrom-SVN: r86132", "tree": {"sha": "24fc022646289e410645a872aa922c02708c67b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24fc022646289e410645a872aa922c02708c67b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/feb3dc8b30eb28ac5c65af85e4ed4c4257733998", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feb3dc8b30eb28ac5c65af85e4ed4c4257733998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feb3dc8b30eb28ac5c65af85e4ed4c4257733998", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feb3dc8b30eb28ac5c65af85e4ed4c4257733998/comments", "author": null, "committer": null, "parents": [{"sha": "79fe1b3bd07343a1be36195a9053b582198a4123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79fe1b3bd07343a1be36195a9053b582198a4123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79fe1b3bd07343a1be36195a9053b582198a4123"}], "stats": {"total": 31, "additions": 13, "deletions": 18}, "files": [{"sha": "47a6ede89925e6666e4a634b3155fd3cac7cb6b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb3dc8b30eb28ac5c65af85e4ed4c4257733998/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb3dc8b30eb28ac5c65af85e4ed4c4257733998/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=feb3dc8b30eb28ac5c65af85e4ed4c4257733998", "patch": "@@ -1,3 +1,11 @@\n+2004-08-17  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tRevert 2004-08-16  Stan Shebs  <shebs@apple.com>\n+\t* config/rs6000/rs6000.md: Include darwin.md.\n+\t(builtin_setjmp_receiver): Add DImode case.\n+\t* config/rs6000/rs6000.c (rs6000_emit_move): Add DImode case to\n+\tDarwin bits.\n+\n 2004-08-17  Dorit Naishlos  <dorit@il.ibm.com>\n \n \t* tree-vectorizer.c: New File: loop vectorization on SSAed GIMPLE trees.\n@@ -1866,7 +1874,7 @@\n \t* config/i386/xmmintrin.h: Include <mm_malloc.h>.\n \n 2004-08-03  H.J. Lu  <hongjiu.lu@intel.com>\n-\t    Tanguy Fautr\u00c3  <tfautre@pandora.be>\n+\t    Tanguy Fautr\ufffd  <tfautre@pandora.be>\n \n \t* config/i386/pmm_malloc.h: New file.\n "}, {"sha": "a3a8f34e2371f1139336f08d765f40b181f81c1f", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb3dc8b30eb28ac5c65af85e4ed4c4257733998/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb3dc8b30eb28ac5c65af85e4ed4c4257733998/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=feb3dc8b30eb28ac5c65af85e4ed4c4257733998", "patch": "@@ -4319,16 +4319,8 @@ rs6000_emit_move (rtx dest, rtx source, enum machine_mode mode)\n \t\t  return;\n \t\t}\n #endif\n-\t      if (mode == DImode)\n-\t\t{\n-\t\t  emit_insn (gen_macho_high_di (target, operands[1]));\n-\t\t  emit_insn (gen_macho_low_di (operands[0], target, operands[1]));\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  emit_insn (gen_macho_high (target, operands[1]));\n-\t\t  emit_insn (gen_macho_low (operands[0], target, operands[1]));\n-\t\t}\n+\t      emit_insn (gen_macho_high (target, operands[1]));\n+\t      emit_insn (gen_macho_low (operands[0], target, operands[1]));\n \t      return;\n \t    }\n "}, {"sha": "198291e22b40be589bde2c8b162c88c44d286d30", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb3dc8b30eb28ac5c65af85e4ed4c4257733998/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb3dc8b30eb28ac5c65af85e4ed4c4257733998/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=feb3dc8b30eb28ac5c65af85e4ed4c4257733998", "patch": "@@ -101,7 +101,6 @@\n (include \"8540.md\")\n (include \"power4.md\")\n (include \"power5.md\")\n-(include \"darwin.md\")\n \n \f\n ;; Start with fixed-point load and store insns.  Here we put only the more\n@@ -10159,12 +10158,8 @@\n \t\t\t\t  CODE_LABEL_NUMBER (operands[0]));\n       tmplabrtx = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (tmplab));\n \n-      emit_insn (TARGET_64BIT\n-\t ? gen_load_macho_picbase_di (picreg, tmplabrtx)\n-\t : gen_load_macho_picbase (picreg, tmplabrtx));\n-      emit_insn (TARGET_64BIT\n-\t ? gen_macho_correct_pic_di (picreg, picreg, picrtx, tmplabrtx)\n-\t : gen_macho_correct_pic (picreg, picreg, picrtx, tmplabrtx));\n+      emit_insn (gen_load_macho_picbase (picreg, tmplabrtx));\n+      emit_insn (gen_macho_correct_pic (picreg, picreg, picrtx, tmplabrtx));\n     }\n   else\n #endif"}]}