{"sha": "b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFhOTVlMGIxNTBhOTQyM2RkNGFkOGI5ZmRjOTc0MjZjZmE3NzY0Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-01-29T02:21:51Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-01-29T02:21:51Z"}, "message": "re PR c++/13791 (ICE in layout_type with packed types)\n\n\tPR c++/13791\n\t* typeck.c (merge_types): Do not merge attributes into\n\tTYPENAME_TYPEs.\n\n2004-01-28  Mark Mitchell  <mark@codesourcery.com>\n\n\tPR c++/13791\n\t* g++.dg/ext/attrib12.C: New test.\n\nFrom-SVN: r76837", "tree": {"sha": "cafd844b692303df44cc7d8087c98289e4c221df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cafd844b692303df44cc7d8087c98289e4c221df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f/comments", "author": null, "committer": null, "parents": [{"sha": "dc7efe6ea91a0ce3c619490c254529c33ba56f2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc7efe6ea91a0ce3c619490c254529c33ba56f2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc7efe6ea91a0ce3c619490c254529c33ba56f2b"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "873a79fd1aa6167ae8c9ba810402ae2d17512f5b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f", "patch": "@@ -1,5 +1,9 @@\n 2004-01-28  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/13791\n+\t* typeck.c (merge_types): Do not merge attributes into\n+\tTYPENAME_TYPEs.\n+\n \tPR c++/13736\n \t* parser.c (cp_parser_direct_declarator): Do not prevent\n \tbacktracking inside a parenthesized declarator."}, {"sha": "137cedede721cca016384daf0a4ec86c3030774c", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f", "patch": "@@ -714,6 +714,12 @@ merge_types (tree t1, tree t2)\n \tbreak;\n       }\n \n+    case TYPENAME_TYPE:\n+      /* There is no need to merge attributes into a TYPENAME_TYPE.\n+\t When the type is instantiated it will have whatever\n+\t attributes result from the instantiation.  */\n+      return t1;\n+\n     default:;\n     }\n   return build_type_attribute_variant (t1, attributes);"}, {"sha": "d5cbccb74424fba4a4003b357252a84b70d11d6b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f", "patch": "@@ -1,5 +1,8 @@\n 2004-01-28  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/13791\n+\t* g++.dg/ext/attrib12.C: New test.\n+\n \tPR c++/13736\n \t* g++.dg/parse/cast2.C: New test.\n "}, {"sha": "aea93781df891ee820c1478ec8cc3641658ea7ed", "filename": "gcc/testsuite/g++.dg/ext/attrib12.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib12.C?ref=b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/13791\n+\n+template <typename T> struct O {\n+  struct __attribute__((packed)) I {\n+    int i;\n+    char c;\n+  };\n+\n+  I* foo();\n+};\n+\n+template <typename T>\n+typename O<T>::I*\n+O<T>::foo() { return 0; }\n+\n+template class O<int>;"}]}