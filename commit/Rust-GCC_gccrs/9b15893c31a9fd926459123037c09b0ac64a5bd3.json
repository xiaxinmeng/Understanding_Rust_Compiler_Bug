{"sha": "9b15893c31a9fd926459123037c09b0ac64a5bd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIxNTg5M2MzMWE5ZmQ5MjY0NTkxMjMwMzdjMDliMGFjNjRhNWJkMw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-06-21T20:24:01Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-06-21T20:24:01Z"}, "message": "re PR fortran/67884 (Missing error message on required allocatable attribute)\n\n2019-06-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/67884\n\t* resolve.c (deferred_requirements) : Check only the result variable.\n\t(resolve_fl_procedure): Check deferred requirements on functions.\n\n2019-06-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/67884\n\t* gfortran.dg/dummy_procedure_8.f90: Remove a test that is ...\n\t* gfortran.dg/pr67884.f90: ... covered here.  New test.\n\nFrom-SVN: r272569", "tree": {"sha": "fcb1e45b392ab45e4ec15c1c0fda0d7bc93adfdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcb1e45b392ab45e4ec15c1c0fda0d7bc93adfdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b15893c31a9fd926459123037c09b0ac64a5bd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b15893c31a9fd926459123037c09b0ac64a5bd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b15893c31a9fd926459123037c09b0ac64a5bd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b15893c31a9fd926459123037c09b0ac64a5bd3/comments", "author": null, "committer": null, "parents": [{"sha": "4c60db9a7b033fc58a93fd93eb36a4f0bb311b63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "42892276dbde813298ae8c632d21a69558ea987e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b15893c31a9fd926459123037c09b0ac64a5bd3/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b15893c31a9fd926459123037c09b0ac64a5bd3/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9b15893c31a9fd926459123037c09b0ac64a5bd3", "patch": "@@ -1,3 +1,9 @@\n+2019-06-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/67884\n+\t* resolve.c (deferred_requirements) : Check only the result variable.\n+\t(resolve_fl_procedure): Check deferred requirements on functions.\n+\n 2019-06-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/51991"}, {"sha": "af7078a46d90be818a0a8d37f7794c9d4d043752", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b15893c31a9fd926459123037c09b0ac64a5bd3/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b15893c31a9fd926459123037c09b0ac64a5bd3/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=9b15893c31a9fd926459123037c09b0ac64a5bd3", "patch": "@@ -12388,6 +12388,10 @@ deferred_requirements (gfc_symbol *sym)\n \t   || sym->attr.associate_var\n \t   || sym->attr.omp_udr_artificial_var))\n     {\n+      /* If a function has a result variable, only check the variable.  */\n+      if (sym->result && sym->name != sym->result->name)\n+\treturn true;\n+\n       gfc_error (\"Entity %qs at %L has a deferred type parameter and \"\n \t\t \"requires either the POINTER or ALLOCATABLE attribute\",\n \t\t sym->name, &sym->declared_at);\n@@ -12598,6 +12602,10 @@ resolve_fl_procedure (gfc_symbol *sym, int mp_flag)\n       && !resolve_fl_var_and_proc (sym, mp_flag))\n     return false;\n \n+  /* Constraints on deferred type parameter.  */\n+  if (!deferred_requirements (sym))\n+    return false;\n+\n   if (sym->ts.type == BT_CHARACTER)\n     {\n       gfc_charlen *cl = sym->ts.u.cl;"}, {"sha": "63bb7b94e7b91d0ef5784b7432de1e40ca3ea052", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b15893c31a9fd926459123037c09b0ac64a5bd3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b15893c31a9fd926459123037c09b0ac64a5bd3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9b15893c31a9fd926459123037c09b0ac64a5bd3", "patch": "@@ -1,3 +1,9 @@\n+2019-06-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/67884\n+\t* gfortran.dg/dummy_procedure_8.f90: Remove a test that is ...\n+\t* gfortran.dg/pr67884.f90: ... covered here.  New test.\n+\n 2019-06-21  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/90490 - fix decltype issues in noexcept-specifier."}, {"sha": "603692c18b95a416219855c8a7194207ea1239f2", "filename": "gcc/testsuite/gfortran.dg/dummy_procedure_8.f90", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b15893c31a9fd926459123037c09b0ac64a5bd3/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b15893c31a9fd926459123037c09b0ac64a5bd3/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_8.f90?ref=9b15893c31a9fd926459123037c09b0ac64a5bd3", "patch": "@@ -7,7 +7,6 @@\n implicit none\n \n call call_a(a1)  ! { dg-error \"Character length mismatch in function result\" }\n-call call_a(a2)  ! { dg-error \"Character length mismatch in function result\" }\n call call_b(b1)  ! { dg-error \"Shape mismatch\" }\n call call_c(c1)  ! { dg-error \"POINTER attribute mismatch in function result\" }\n call call_d(c1)  ! { dg-error \"ALLOCATABLE attribute mismatch in function result\" }\n@@ -19,9 +18,6 @@\n   character(1) function a1()\n   end function\n \n-  character(:) function a2()\n-  end function\n-\n   subroutine call_a(a3)\n     interface\n       character(2) function a3()"}, {"sha": "d50264240b33ccc14ab7c9e703c8c6e1a6536477", "filename": "gcc/testsuite/gfortran.dg/pr67884.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b15893c31a9fd926459123037c09b0ac64a5bd3/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr67884.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b15893c31a9fd926459123037c09b0ac64a5bd3/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr67884.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr67884.f90?ref=9b15893c31a9fd926459123037c09b0ac64a5bd3", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do compile }\n+! PR fortran/67884\n+! Original code contribute by Gerhard Steinmetz \n+program p\n+   integer i\n+   print *, [(f(i), i=1,3)]\n+   print *, [(g(i), i=1,3)]\n+   contains\n+   function f(n)              ! { dg-error \"has a deferred type parameter\" }\n+      integer :: n\n+      character(:) :: f\n+      character(3) :: c = 'abc'\n+      f = c(n:n)\n+   end\n+   function g(n) result(z)    ! { dg-error \"has a deferred type parameter\" }\n+      integer :: n\n+      character(:) :: z\n+      character(3) :: c = 'abc'\n+      z = c(n:n)\n+   end\n+end program p"}]}