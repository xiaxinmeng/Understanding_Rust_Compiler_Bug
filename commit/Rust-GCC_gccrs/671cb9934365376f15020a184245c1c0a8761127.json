{"sha": "671cb9934365376f15020a184245c1c0a8761127", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcxY2I5OTM0MzY1Mzc2ZjE1MDIwYTE4NDI0NWMxYzBhODc2MTEyNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-04-23T01:06:54Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-04-23T01:06:54Z"}, "message": "init.c (build_aggr_init): Fix accidental use of C99 construct in previous change.\n\n\t* init.c (build_aggr_init): Fix accidental use of C99 construct in\n\tprevious change.\n\nFrom-SVN: r81067", "tree": {"sha": "f887ec91f724eba796a864326763be5884693725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f887ec91f724eba796a864326763be5884693725"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/671cb9934365376f15020a184245c1c0a8761127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/671cb9934365376f15020a184245c1c0a8761127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/671cb9934365376f15020a184245c1c0a8761127", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/671cb9934365376f15020a184245c1c0a8761127/comments", "author": null, "committer": null, "parents": [{"sha": "08a21bfd0aabedc3e3f50eae61b81949f8749ad0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a21bfd0aabedc3e3f50eae61b81949f8749ad0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08a21bfd0aabedc3e3f50eae61b81949f8749ad0"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "f654b18f735a171fcb42d924701eb33e53a0eb23", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/671cb9934365376f15020a184245c1c0a8761127/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/671cb9934365376f15020a184245c1c0a8761127/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=671cb9934365376f15020a184245c1c0a8761127", "patch": "@@ -1,5 +1,8 @@\n 2004-04-22  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* init.c (build_aggr_init): Fix accidental use of C99 construct in\n+\tprevious change.\n+\t\n \t* class.c (initialize_array): Don't set TREE_HAS_CONSTRUCTOR on\n \tbraced initializer.\n \t* cp-tree.h (BRACE_ENCLOSED_INITIALIZER_P): New macro.\n@@ -8,6 +11,7 @@\n \t(build_aggr_init): Adjust to handle brace-enclosed initializers\n \tcorrectly.\n \t(expand_default_init): Use BRACE_ENCLOSED_INITIALIZER_P.\n+\n \t* parser.c (cp_parser_initializer_clause): Do not set\n \tTREE_HAS_CONSTRUCTOR on the initializer.\n \t* rtti.c (tinfo_base_init): Likewise."}, {"sha": "6811aaab58e3fbdc78289d3d8df5e3b01828f657", "filename": "gcc/cp/init.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/671cb9934365376f15020a184245c1c0a8761127/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/671cb9934365376f15020a184245c1c0a8761127/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=671cb9934365376f15020a184245c1c0a8761127", "patch": "@@ -1090,6 +1090,8 @@ build_aggr_init (tree exp, tree init, int flags)\n \n   if (TREE_CODE (type) == ARRAY_TYPE)\n     {\n+      tree itype;\n+\n       /* An array may not be initialized use the parenthesized\n \t initialization form -- unless the initializer is \"()\".  */\n       if (init && TREE_CODE (init) == TREE_LIST)\n@@ -1099,7 +1101,7 @@ build_aggr_init (tree exp, tree init, int flags)\n \t}\n       /* Must arrange to initialize each element of EXP\n \t from elements of INIT.  */\n-      tree itype = init ? TREE_TYPE (init) : NULL_TREE;\n+      itype = init ? TREE_TYPE (init) : NULL_TREE;\n       if (cp_type_quals (type) != TYPE_UNQUALIFIED)\n \tTREE_TYPE (exp) = TYPE_MAIN_VARIANT (type);\n       if (itype && cp_type_quals (itype) != TYPE_UNQUALIFIED)"}]}