{"sha": "fad034a7605150489b6435a7e4719c3e40bd0539", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFkMDM0YTc2MDUxNTA0ODliNjQzNWE3ZTQ3MTljM2U0MGJkMDUzOQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-10-12T22:32:23Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-10-12T22:32:23Z"}, "message": "Fix sparc when assembler lacks support for vis3/fmaf instructions.\n\ngcc/\n\n\t* config/sparc/sparc.h: Do not force TARGET_VIS3 and TARGET_FMAF\n\tto zero when assembler lacks support for such instructions.\n\t* config/sparc/sparc.c (sparc_option_override): Clear MASK_VIS3\n\tand MASK_FMAF in defaults when assembler lacks necessary support.\n\ngcc/testsuite/\n\n\t* gcc.target/sparc/cmask.c: Remove 'vis3' target check and specify\n\t'-mvis3' instead of 'mcpu=niagara3' in options.\n\t* gcc.target/sparc/fhalve.c: Likewise.\n\t* gcc.target/sparc/fnegop.c: Likewise.\n\t* gcc.target/sparc/fpadds.c: Likewise.\n\t* gcc.target/sparc/fshift.c: Likewise.\n\t* gcc.target/sparc/fucmp.c: Likewise.\n\t* gcc.target/sparc/lzd.c: Likewise.\n\t* gcc.target/sparc/vis3misc.c: Likewise.\n\t* gcc.target/sparc/xmul.c: Likewise.\n\nFrom-SVN: r179875", "tree": {"sha": "3bce1dc8f00001ccbb2ce7700a93745e2cc628d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bce1dc8f00001ccbb2ce7700a93745e2cc628d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fad034a7605150489b6435a7e4719c3e40bd0539", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fad034a7605150489b6435a7e4719c3e40bd0539", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fad034a7605150489b6435a7e4719c3e40bd0539", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fad034a7605150489b6435a7e4719c3e40bd0539/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "722356ce27601ee33c0aabfa939af8367ac11d54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/722356ce27601ee33c0aabfa939af8367ac11d54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/722356ce27601ee33c0aabfa939af8367ac11d54"}], "stats": {"total": 66, "additions": 43, "deletions": 23}, "files": [{"sha": "017594f98dfa7b664da2250abce004cd176197fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -1,3 +1,10 @@\n+2011-10-12  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/sparc.h: Do not force TARGET_VIS3 and TARGET_FMAF\n+\tto zero when assembler lacks support for such instructions.\n+\t* config/sparc/sparc.c (sparc_option_override): Clear MASK_VIS3\n+\tand MASK_FMAF in defaults when assembler lacks necessary support.\n+\n 2011-10-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/sse.md (vec_unpacks_lo_<mode>,"}, {"sha": "fa790b359d2aa10736592cd8f33d1799c8774d20", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -850,7 +850,11 @@ sparc_option_override (void)\n \n   cpu = &cpu_table[(int) sparc_cpu_and_features];\n   target_flags &= ~cpu->disable;\n-  target_flags |= cpu->enable;\n+  target_flags |= (cpu->enable\n+#ifndef HAVE_AS_FMAF_HPC_VIS3\n+\t\t   & ~(MASK_FMAF | MASK_VIS3)\n+#endif\n+\t\t   );\n \n   /* If -mfpu or -mno-fpu was explicitly used, don't override with\n      the processor default.  */"}, {"sha": "669f106fe32620dd7c45560f1d59a084529c07e0", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -1871,10 +1871,6 @@ extern int sparc_indent_opcode;\n \n #ifndef HAVE_AS_FMAF_HPC_VIS3\n #define AS_NIAGARA3_FLAG \"b\"\n-#undef TARGET_FMAF\n-#define TARGET_FMAF 0\n-#undef TARGET_VIS3\n-#define TARGET_VIS3 0\n #else\n #define AS_NIAGARA3_FLAG \"d\"\n #endif"}, {"sha": "943f36f4ab08cb1f061a7d8b6d4f27e3f1d53172", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -1,3 +1,16 @@\n+2011-10-12  David S. Miller  <davem@davemloft.net>\n+\n+\t* gcc.target/sparc/cmask.c: Remove 'vis3' target check and specify\n+\t'-mvis3' instead of 'mcpu=niagara3' in options.\n+\t* gcc.target/sparc/fhalve.c: Likewise.\n+\t* gcc.target/sparc/fnegop.c: Likewise.\n+\t* gcc.target/sparc/fpadds.c: Likewise.\n+\t* gcc.target/sparc/fshift.c: Likewise.\n+\t* gcc.target/sparc/fucmp.c: Likewise.\n+\t* gcc.target/sparc/lzd.c: Likewise.\n+\t* gcc.target/sparc/vis3misc.c: Likewise.\n+\t* gcc.target/sparc/xmul.c: Likewise.\n+\n 2011-10-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/vect1.ad[sb]: New test."}, {"sha": "d1be910f5e0b1cf28aa81d1c06a809bdad8877c3", "filename": "gcc/testsuite/gcc.target/sparc/cmask.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fcmask.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fcmask.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fcmask.c?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { vis3 } } } */\n-/* { dg-options \"-mcpu=niagara3 -mvis\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-mvis3\" } */\n \n void test_cm8 (long x)\n {"}, {"sha": "b8f0745afc989b0d5e8b26ed032e0f76c484fc8a", "filename": "gcc/testsuite/gcc.target/sparc/fhalve.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffhalve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffhalve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffhalve.c?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { vis3 } } } */\n-/* { dg-options \"-mcpu=niagara3 -mvis\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-mvis3\" } */\n \n float test_fhadds (float x, float y)\n {"}, {"sha": "cbdf28f4c6017adc5d3708c98b7e5c06b9ac8a40", "filename": "gcc/testsuite/gcc.target/sparc/fnegop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffnegop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffnegop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffnegop.c?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { vis3 } } } */\n-/* { dg-options \"-O2 -mcpu=niagara3 -mvis\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mvis3\" } */\n \n float test_fnadds(float x, float y)\n {"}, {"sha": "9b1027d5fcab807ea59205e71047600d4158e03c", "filename": "gcc/testsuite/gcc.target/sparc/fpadds.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffpadds.c?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { vis3 } } } */\n-/* { dg-options \"-mcpu=niagara3 -mvis\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-mvis3\" } */\n typedef int __v2si __attribute__((vector_size(8)));\n typedef int __v1si __attribute__((vector_size(4)));\n typedef short __v4hi __attribute__((vector_size(8)));"}, {"sha": "1f032151c16ba85cc4758f017037e30e4d14cd6b", "filename": "gcc/testsuite/gcc.target/sparc/fshift.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffshift.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffshift.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffshift.c?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { vis3 } } } */\n-/* { dg-options \"-mcpu=niagara3 -mvis\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-mvis3\" } */\n typedef int __v2si __attribute__((vector_size(8)));\n typedef short __v4hi __attribute__((vector_size(8)));\n "}, {"sha": "6e8f1b3418efd8f9bba2c475aaa7c141460d17dd", "filename": "gcc/testsuite/gcc.target/sparc/fucmp.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffucmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffucmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Ffucmp.c?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { vis3 } } } */\n-/* { dg-options \"-mcpu=niagara3 -mvis\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-mvis3\" } */\n typedef unsigned char vec8 __attribute__((vector_size(8)));\n \n long test_fucmple8 (vec8 a, vec8 b)"}, {"sha": "bc2b8522be8af72ef7fe6f5dcc2388ceac294b45", "filename": "gcc/testsuite/gcc.target/sparc/lzd.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Flzd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Flzd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Flzd.c?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { vis3 } } } */\n-/* { dg-options \"-mcpu=niagara3\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-mvis3\" } */\n int test_clz(int a)\n {\n   return __builtin_clz(a);"}, {"sha": "7286d705dd5612f9b09502c59fde13e6e1ba84d7", "filename": "gcc/testsuite/gcc.target/sparc/vis3misc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fvis3misc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fvis3misc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fvis3misc.c?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { vis3 } } } */\n-/* { dg-options \"-mcpu=niagara3 -mvis\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-mvis3\" } */\n typedef int __v2si __attribute__((vector_size(8)));\n typedef short __v4hi __attribute__((vector_size(8)));\n typedef unsigned char __v8qi __attribute__((vector_size(8)));"}, {"sha": "a432ee1fec1d2e0e8abd9eb07ed782606d4302a8", "filename": "gcc/testsuite/gcc.target/sparc/xmul.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fxmul.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad034a7605150489b6435a7e4719c3e40bd0539/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fxmul.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fxmul.c?ref=fad034a7605150489b6435a7e4719c3e40bd0539", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { vis3 } } } */\n-/* { dg-options \"-mcpu=niagara3 -mvis\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-mvis3\" } */\n typedef long long int64_t;\n \n int64_t test_umulxhi (int64_t x, int64_t y)"}]}