{"sha": "5b6dad5d8fbc79a1029f55e565336df4b74ed3c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI2ZGFkNWQ4ZmJjNzlhMTAyOWY1NWU1NjUzMzZkZjRiNzRlZDNjNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-11-13T18:46:47Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-11-13T18:46:47Z"}, "message": "re PR c++/27425 (ICE with invalid template-template-parameter)\n\n\tPR c++/27425\n\tPR c++/34274\n\t* pt.c (expand_template_argument_pack): Handle null arg gracefully.\n\t(convert_template_argument): Use %T for type.\n\nFrom-SVN: r154164", "tree": {"sha": "958e6c0f89c03cb213cac1100fedef710dab9406", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/958e6c0f89c03cb213cac1100fedef710dab9406"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b6dad5d8fbc79a1029f55e565336df4b74ed3c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6dad5d8fbc79a1029f55e565336df4b74ed3c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b6dad5d8fbc79a1029f55e565336df4b74ed3c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6dad5d8fbc79a1029f55e565336df4b74ed3c6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9dd90d8e354751116b280bfb6884d3bdd7c6dc59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd90d8e354751116b280bfb6884d3bdd7c6dc59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dd90d8e354751116b280bfb6884d3bdd7c6dc59"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "d5dc053c741fae11271cac25bfea62b86925c08a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6dad5d8fbc79a1029f55e565336df4b74ed3c6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6dad5d8fbc79a1029f55e565336df4b74ed3c6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5b6dad5d8fbc79a1029f55e565336df4b74ed3c6", "patch": "@@ -1,5 +1,10 @@\n 2009-11-13  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/27425\n+\tPR c++/34274\n+\t* pt.c (expand_template_argument_pack): Handle null arg gracefully.\n+\t(convert_template_argument): Use %T for type.\n+\n \tPR c++/29363\n \t* decl.c (create_implicit_typedef): Set TYPE_STUB_DECL here.\n \t(cxx_init_decl_processing): Not here."}, {"sha": "b7d72c1045a0d66a9166b40ba7e82abb2c6d9d96", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6dad5d8fbc79a1029f55e565336df4b74ed3c6/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6dad5d8fbc79a1029f55e565336df4b74ed3c6/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5b6dad5d8fbc79a1029f55e565336df4b74ed3c6", "patch": "@@ -3150,6 +3150,8 @@ expand_template_argument_pack (tree args)\n   for (in_arg = 0; in_arg < nargs; ++in_arg)\n     {\n       tree arg = TREE_VEC_ELT (args, in_arg);\n+      if (arg == NULL_TREE)\n+\treturn args;\n       if (ARGUMENT_PACK_P (arg))\n         {\n           int num_packed = TREE_VEC_LENGTH (ARGUMENT_PACK_ARGS (arg));\n@@ -5472,7 +5474,7 @@ convert_template_argument (tree parm,\n \t\t      error (\"type/value mismatch at argument %d in \"\n \t\t\t     \"template parameter list for %qD\",\n \t\t\t     i + 1, in_decl);\n-\t\t      error (\"  expected a template of type %qD, got %qD\",\n+\t\t      error (\"  expected a template of type %qD, got %qT\",\n \t\t\t     parm, orig_arg);\n \t\t    }\n "}, {"sha": "e26d7052aaef248321e0b6372c1b9241818a91c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6dad5d8fbc79a1029f55e565336df4b74ed3c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6dad5d8fbc79a1029f55e565336df4b74ed3c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b6dad5d8fbc79a1029f55e565336df4b74ed3c6", "patch": "@@ -1,5 +1,9 @@\n 2009-11-13  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/27425\n+\tPR c++/34274\n+\t* g++.dg/template/arg7.C: New.\n+\n \tPR c++/29363\n \t* g++.dg/template/error43.C: New.\n "}, {"sha": "a9333b26a2162fd08856e026831d31e7db279407", "filename": "gcc/testsuite/g++.dg/template/arg7.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6dad5d8fbc79a1029f55e565336df4b74ed3c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farg7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6dad5d8fbc79a1029f55e565336df4b74ed3c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farg7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farg7.C?ref=5b6dad5d8fbc79a1029f55e565336df4b74ed3c6", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/27425, 34274\n+\n+template<typename T> struct A\n+{\n+  template<template<T> class> struct B {}; // { dg-error \"void|mismatch|expected\" }\n+  // { dg-bogus \"not supported\" \"\" { target *-*-* } 5 }\n+  template<T> struct C;\t\t\t   // { dg-error \"void\" }\n+  B<C> b;\n+};\n+\n+A<void> a;\t\t\t// { dg-message \"instantiated\" }"}]}