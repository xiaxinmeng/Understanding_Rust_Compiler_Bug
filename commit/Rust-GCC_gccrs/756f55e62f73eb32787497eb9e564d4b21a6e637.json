{"sha": "756f55e62f73eb32787497eb9e564d4b21a6e637", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU2ZjU1ZTYyZjczZWIzMjc4NzQ5N2ViOWU1NjRkNGIyMWE2ZTYzNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-12-03T16:49:42Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-12-03T16:51:45Z"}, "message": "i386: Fix up ix86_md_asm_adjust for TImode [PR98086]\n\nix86_md_asm_adjust assumes that dest_mode can be only [QHSD]Imode\nand nothing else.  The patch rewrites zero-extension part to use\nconvert_to_mode to handle TImode and hypothetically even wider modes.\n\n2020-12-03  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\t    Jakub Jelinek  <jakub@redhat.com>\n\ngcc/\n\tPR target/98086\n\t* config/i386/i386.c (ix86_md_asm_adjustmd): Rewrite\n\tzero-extension part to use convert_to_mode.\n\ngcc/testsuite/\n\tPR target/98086\n\t* gcc.target/i386/pr98086.c: New test.", "tree": {"sha": "dbf2773336146b83d713ec71abc5064e3b4411ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbf2773336146b83d713ec71abc5064e3b4411ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/756f55e62f73eb32787497eb9e564d4b21a6e637", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756f55e62f73eb32787497eb9e564d4b21a6e637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/756f55e62f73eb32787497eb9e564d4b21a6e637", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756f55e62f73eb32787497eb9e564d4b21a6e637/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7254a78cf4c419a9b9361289d8c535130cf1dfd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7254a78cf4c419a9b9361289d8c535130cf1dfd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7254a78cf4c419a9b9361289d8c535130cf1dfd0"}], "stats": {"total": 55, "additions": 25, "deletions": 30}, "files": [{"sha": "6321678243078eb739607448a2fbf12b279fcddb", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 30, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756f55e62f73eb32787497eb9e564d4b21a6e637/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756f55e62f73eb32787497eb9e564d4b21a6e637/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=756f55e62f73eb32787497eb9e564d4b21a6e637", "patch": "@@ -21508,40 +21508,18 @@ ix86_md_asm_adjust (vec<rtx> &outputs, vec<rtx> &/*inputs*/,\n \t  continue;\n \t}\n \n-      if (dest_mode == DImode && !TARGET_64BIT)\n-\tdest_mode = SImode;\n-\n-      if (dest_mode != QImode)\n-\t{\n-\t  rtx destqi = gen_reg_rtx (QImode);\n-\t  emit_insn (gen_rtx_SET (destqi, x));\n-\n-\t  if (TARGET_ZERO_EXTEND_WITH_AND\n-\t      && optimize_function_for_speed_p (cfun))\n-\t    {\n-\t      x = force_reg (dest_mode, const0_rtx);\n-\n-\t      emit_insn (gen_movstrictqi (gen_lowpart (QImode, x), destqi));\n-\t    }\n-\t  else\n-\t    {\n-\t      x = gen_rtx_ZERO_EXTEND (dest_mode, destqi);\n-\t      if (dest_mode == GET_MODE (dest)\n-\t\t  && !register_operand (dest, GET_MODE (dest)))\n-\t\tx = force_reg (dest_mode, x);\n-\t    }\n-\t}\n-\n-      if (dest_mode != GET_MODE (dest))\n+      if (dest_mode == QImode)\n+\temit_insn (gen_rtx_SET (dest, x));\n+      else\n \t{\n-\t  rtx tmp = gen_reg_rtx (SImode);\n+\t  rtx reg = gen_reg_rtx (QImode);\n+\t  emit_insn (gen_rtx_SET (reg, x));\n \n-\t  emit_insn (gen_rtx_SET (tmp, x));\n-\t  emit_insn (gen_zero_extendsidi2 (dest, tmp));\n+\t  reg = convert_to_mode (dest_mode, reg, 1);\n+\t  emit_move_insn (dest, reg);\n \t}\n-      else\n-\temit_insn (gen_rtx_SET (dest, x));\n     }\n+\n   rtx_insn *seq = get_insns ();\n   end_sequence ();\n "}, {"sha": "254a3b9bef6cdc45ebb6b13b4a2d9021b314caf6", "filename": "gcc/testsuite/gcc.target/i386/pr98086.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756f55e62f73eb32787497eb9e564d4b21a6e637/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98086.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756f55e62f73eb32787497eb9e564d4b21a6e637/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98086.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98086.c?ref=756f55e62f73eb32787497eb9e564d4b21a6e637", "patch": "@@ -0,0 +1,17 @@\n+/* PR target/98086 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+#ifdef __x86_64__\n+typedef __int128 T;\n+#else\n+typedef long long T;\n+#endif\n+\n+T x;\n+\n+void\n+foo (void)\n+{\n+  __asm (\"\" : \"=@ccc\" (x));\n+}"}]}