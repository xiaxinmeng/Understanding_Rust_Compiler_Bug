{"sha": "fae7e83445b4547f98b83e101b4e74fbfbb4d915", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFlN2U4MzQ0NWI0NTQ3Zjk4YjgzZTEwMWI0ZTc0ZmJmYmI0ZDkxNQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2018-07-04T00:27:38Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-07-04T00:27:38Z"}, "message": "h8300.md (movmd_internal_normal): Consolidated with (movmd_internal) into a single pattern using the P mode iterator.\n\n\t* config/h8300/h8300.md (movmd_internal_normal): Consolidated with\n\t(movmd_internal) into a single pattern using the P mode iterator.\n\t(movmd splitters): Similarly.\n\t(stpcpy_internal_normal, stpcpy_internal): Similarly for thes patterns.\n\t(movsd splitters): Similarly.\n\nFrom-SVN: r262365", "tree": {"sha": "4f6935dcce341317c26ee3a6881ed92553c07066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f6935dcce341317c26ee3a6881ed92553c07066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fae7e83445b4547f98b83e101b4e74fbfbb4d915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fae7e83445b4547f98b83e101b4e74fbfbb4d915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fae7e83445b4547f98b83e101b4e74fbfbb4d915", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fae7e83445b4547f98b83e101b4e74fbfbb4d915/comments", "author": null, "committer": null, "parents": [{"sha": "f1ee57639de81209481faf57d007060d26212497", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ee57639de81209481faf57d007060d26212497", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1ee57639de81209481faf57d007060d26212497"}], "stats": {"total": 119, "additions": 26, "deletions": 93}, "files": [{"sha": "9e27699088cfde24c9277865770b85fb15859751", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fae7e83445b4547f98b83e101b4e74fbfbb4d915/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fae7e83445b4547f98b83e101b4e74fbfbb4d915/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fae7e83445b4547f98b83e101b4e74fbfbb4d915", "patch": "@@ -1,5 +1,10 @@\n 2018-07-03  Jeff Law  <law@redhat.com>\n-\n+\t* config/h8300/h8300.md (movmd_internal_normal): Consolidated with\n+\t(movmd_internal) into a single pattern using the P mode iterator.\n+\t(movmd splitters): Similarly.\n+\t(stpcpy_internal_normal, stpcpy_internal): Similarly for thes patterns.\n+\t(movsd splitters): Similarly.\n+\t\n \t* config/h8300/h8300.c (h8300_insn_length_from_table): Consolidate\n \tADDB, ADDW and ADDL into a single ADD attribute which selects the\n \tright table based on the size of the operand."}, {"sha": "e6547843bd305ced347b93f7bd8f4ba0c59fe098", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 20, "deletions": 92, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fae7e83445b4547f98b83e101b4e74fbfbb4d915/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fae7e83445b4547f98b83e101b4e74fbfbb4d915/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=fae7e83445b4547f98b83e101b4e74fbfbb4d915", "patch": "@@ -512,33 +512,16 @@\n ;; This is a difficult instruction to reload since operand 0 must be the\n ;; frame pointer.  See h8300_reg_class_from_letter for an explanation.\n \n-(define_insn \"movmd_internal_normal\"\n-  [(set (mem:BLK (match_operand:HI 3 \"register_operand\" \"0,r\"))\n-\t(mem:BLK (match_operand:HI 4 \"register_operand\" \"1,1\")))\n+(define_insn \"movmd_internal_<mode>\"\n+  [(set (mem:BLK (match_operand:P 3 \"register_operand\" \"0,r\"))\n+\t(mem:BLK (match_operand:P 4 \"register_operand\" \"1,1\")))\n    (unspec [(match_operand:HI 5 \"register_operand\" \"2,2\")\n \t    (match_operand:HI 6 \"const_int_operand\" \"n,n\")] UNSPEC_MOVMD)\n-   (clobber (match_operand:HI 0 \"register_operand\" \"=d,??D\"))\n-   (clobber (match_operand:HI 1 \"register_operand\" \"=f,f\"))\n+   (clobber (match_operand:P 0 \"register_operand\" \"=d,??D\"))\n+   (clobber (match_operand:P 1 \"register_operand\" \"=f,f\"))\n    (set (match_operand:HI 2 \"register_operand\" \"=c,c\")\n \t(const_int 0))]\n-  \"TARGET_H8300SX && TARGET_NORMAL_MODE\"\n-  \"@\n-    movmd%m6\n-    #\"\n-  [(set_attr \"length\" \"2,14\")\n-   (set_attr \"can_delay\" \"no\")\n-   (set_attr \"cc\" \"none,clobber\")])\n-\n-(define_insn \"movmd_internal\"\n-  [(set (mem:BLK (match_operand:SI 3 \"register_operand\" \"0,r\"))\n-\t(mem:BLK (match_operand:SI 4 \"register_operand\" \"1,1\")))\n-   (unspec [(match_operand:HI 5 \"register_operand\" \"2,2\")\n-\t    (match_operand:HI 6 \"const_int_operand\" \"n,n\")] UNSPEC_MOVMD)\n-   (clobber (match_operand:SI 0 \"register_operand\" \"=d,??D\"))\n-   (clobber (match_operand:SI 1 \"register_operand\" \"=f,f\"))\n-   (set (match_operand:HI 2 \"register_operand\" \"=c,c\")\n-\t(const_int 0))]\n-  \"TARGET_H8300SX && !TARGET_NORMAL_MODE\"\n+  \"TARGET_H8300SX\"\n   \"@\n     movmd%m6\n     #\"\n@@ -563,33 +546,11 @@\n \t(match_operand:BLK 1 \"memory_operand\" \"\"))\n    (unspec [(match_operand:HI 2 \"register_operand\" \"\")\n \t    (match_operand:HI 3 \"const_int_operand\" \"\")] UNSPEC_MOVMD)\n-   (clobber (match_operand:HI 4 \"register_operand\" \"\"))\n-   (clobber (match_operand:HI 5 \"register_operand\" \"\"))\n-   (set (match_dup 2)\n-\t(const_int 0))]\n-  \"TARGET_H8300SX && TARGET_NORMAL_MODE && reload_completed\n-   && REGNO (operands[4]) != DESTINATION_REG\"\n-  [(const_int 0)]\n-  {\n-    rtx dest;\n-\n-    h8300_swap_into_er6 (XEXP (operands[0], 0));\n-    dest = replace_equiv_address (operands[0], hard_frame_pointer_rtx);\n-    emit_insn (gen_movmd (dest, operands[1], operands[2], operands[3]));\n-    h8300_swap_out_of_er6 (operands[4]);\n-    DONE;\n-  })\n-\n-(define_split\n-  [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n-\t(match_operand:BLK 1 \"memory_operand\" \"\"))\n-   (unspec [(match_operand:HI 2 \"register_operand\" \"\")\n-\t    (match_operand:HI 3 \"const_int_operand\" \"\")] UNSPEC_MOVMD)\n-   (clobber (match_operand:SI 4 \"register_operand\" \"\"))\n-   (clobber (match_operand:SI 5 \"register_operand\" \"\"))\n+   (clobber (match_operand:P 4 \"register_operand\" \"\"))\n+   (clobber (match_operand:P 5 \"register_operand\" \"\"))\n    (set (match_dup 2)\n \t(const_int 0))]\n-  \"TARGET_H8300SX && !TARGET_NORMAL_MODE && reload_completed\n+  \"TARGET_H8300SX && reload_completed\n    && REGNO (operands[4]) != DESTINATION_REG\"\n   [(const_int 0)]\n   {\n@@ -641,28 +602,14 @@\n \n ;; See comments above memcpy_internal().\n \n-(define_insn \"stpcpy_internal_normal\"\n-  [(set (mem:BLK (match_operand:HI 3 \"register_operand\" \"0,r\"))\n-\t(unspec:BLK [(mem:BLK (match_operand:HI 4 \"register_operand\" \"1,1\"))]\n-\tUNSPEC_STPCPY))\n-   (clobber (match_operand:HI 0 \"register_operand\" \"=d,??D\"))\n-   (clobber (match_operand:HI 1 \"register_operand\" \"=f,f\"))\n-   (clobber (match_operand:HI 2 \"register_operand\" \"=c,c\"))]\n-  \"TARGET_H8300SX && TARGET_NORMAL_MODE\"\n-  \"@\n-    \\n1:\\tmovsd\\t2f\\;bra\\t1b\\n2:\n-    #\"\n-  [(set_attr \"length\" \"6,18\")\n-   (set_attr \"cc\" \"none,clobber\")])\n-\n-(define_insn \"stpcpy_internal\"\n-  [(set (mem:BLK (match_operand:SI 3 \"register_operand\" \"0,r\"))\n-\t(unspec:BLK [(mem:BLK (match_operand:SI 4 \"register_operand\" \"1,1\"))]\n+(define_insn \"stpcpy_internal_<mode>\"\n+  [(set (mem:BLK (match_operand:P 3 \"register_operand\" \"0,r\"))\n+\t(unspec:BLK [(mem:BLK (match_operand:P 4 \"register_operand\" \"1,1\"))]\n \tUNSPEC_STPCPY))\n-   (clobber (match_operand:SI 0 \"register_operand\" \"=d,??D\"))\n-   (clobber (match_operand:SI 1 \"register_operand\" \"=f,f\"))\n-   (clobber (match_operand:SI 2 \"register_operand\" \"=c,c\"))]\n-  \"TARGET_H8300SX && !TARGET_NORMAL_MODE\"\n+   (clobber (match_operand:P 0 \"register_operand\" \"=d,??D\"))\n+   (clobber (match_operand:P 1 \"register_operand\" \"=f,f\"))\n+   (clobber (match_operand:P 2 \"register_operand\" \"=c,c\"))]\n+  \"TARGET_H8300SX\"\n   \"@\n     \\n1:\\tmovsd\\t2f\\;bra\\t1b\\n2:\n     #\"\n@@ -675,29 +622,10 @@\n (define_split\n   [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n \t(unspec:BLK [(match_operand:BLK 1 \"memory_operand\" \"\")] UNSPEC_STPCPY))\n-   (clobber (match_operand:HI 2 \"register_operand\" \"\"))\n-   (clobber (match_operand:HI 3 \"register_operand\" \"\"))\n-   (clobber (match_operand:HI 4 \"register_operand\" \"\"))]\n-  \"TARGET_H8300SX && TARGET_NORMAL_MODE && reload_completed\n-   && REGNO (operands[2]) != DESTINATION_REG\"\n-  [(const_int 0)]\n-  {\n-    rtx dest;\n-\n-    h8300_swap_into_er6 (XEXP (operands[0], 0));\n-    dest = replace_equiv_address (operands[0], hard_frame_pointer_rtx);\n-    emit_insn (gen_movsd (dest, operands[1], operands[4]));\n-    h8300_swap_out_of_er6 (operands[2]);\n-    DONE;\n-  })\n-\n-(define_split\n-  [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n-\t(unspec:BLK [(match_operand:BLK 1 \"memory_operand\" \"\")] UNSPEC_STPCPY))\n-   (clobber (match_operand:SI 2 \"register_operand\" \"\"))\n-   (clobber (match_operand:SI 3 \"register_operand\" \"\"))\n-   (clobber (match_operand:SI 4 \"register_operand\" \"\"))]\n-  \"TARGET_H8300SX && !TARGET_NORMAL_MODE && reload_completed\n+   (clobber (match_operand:P 2 \"register_operand\" \"\"))\n+   (clobber (match_operand:P 3 \"register_operand\" \"\"))\n+   (clobber (match_operand:P 4 \"register_operand\" \"\"))]\n+  \"TARGET_H8300SX &&  reload_completed\n    && REGNO (operands[2]) != DESTINATION_REG\"\n   [(const_int 0)]\n   {"}]}