{"sha": "0fa1b65cad6cb3ccbf48f992e1710a6953604842", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZhMWI2NWNhZDZjYjNjY2JmNDhmOTkyZTE3MTBhNjk1MzYwNDg0Mg==", "commit": {"author": {"name": "Bud Davis", "email": "bdavis9659@comcast.net", "date": "2004-08-21T11:20:29Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-08-21T11:20:29Z"}, "message": "re PR libfortran/16908 (Segfault in libgfortran/io/transfer.c)\n\n2004-08-21  Bud Davis  <bdavis9659@comcast.net>\n\n\tPR 16908\n\t* io/transfer.c (next_record_w): Do not blank pad.\n\t* io/transfer.c (next_record): Take into account partial records.\ntestsuite/\n\t* gfortran.dg/direct_io.f90: New test.\n\nFrom-SVN: r86361", "tree": {"sha": "0aa7c855dd9dab30240c940a6ba4ab0f044510d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aa7c855dd9dab30240c940a6ba4ab0f044510d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fa1b65cad6cb3ccbf48f992e1710a6953604842", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa1b65cad6cb3ccbf48f992e1710a6953604842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fa1b65cad6cb3ccbf48f992e1710a6953604842", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa1b65cad6cb3ccbf48f992e1710a6953604842/comments", "author": null, "committer": null, "parents": [{"sha": "be2043db430c362c56607a0538b8c8823799f44f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be2043db430c362c56607a0538b8c8823799f44f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be2043db430c362c56607a0538b8c8823799f44f"}], "stats": {"total": 58, "additions": 54, "deletions": 4}, "files": [{"sha": "de614afc6de76bc13e4231d2f666ae8eb6833940", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa1b65cad6cb3ccbf48f992e1710a6953604842/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa1b65cad6cb3ccbf48f992e1710a6953604842/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0fa1b65cad6cb3ccbf48f992e1710a6953604842", "patch": "@@ -1,3 +1,8 @@\n+2004-08-21  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR 16908\n+\t* gfortran.dg/direct_io.f90: New test.\n+\n 2004-08-20  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/17121"}, {"sha": "db79c6e959871aeb054fb2f5c41550c35103735c", "filename": "gcc/testsuite/gfortran.dg/direct_io_1.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa1b65cad6cb3ccbf48f992e1710a6953604842/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirect_io_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa1b65cad6cb3ccbf48f992e1710a6953604842/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirect_io_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirect_io_1.f90?ref=0fa1b65cad6cb3ccbf48f992e1710a6953604842", "patch": "@@ -0,0 +1,31 @@\n+! PR 16908\n+! Segfaulted on second set of writes.  We weren't handling partial records\n+! properly when calculating the file position.\n+program direct_io_1\n+  implicit none\n+\n+  integer n, nt, mt, m\n+  real dt, tm, w\n+  real, allocatable :: p(:)\n+\n+  nt =  2049 ! if nt < 2049, then everything works.\n+\n+  allocate(p(nt))\n+  p  = 0.e0\n+\n+  inquire(iolength=mt) (p(m), m=1, nt)\n+\n+  open(unit=12, file='syn.sax', access='direct', recl=mt)\n+  n = 1\n+  write(12, rec=n) mt, nt\n+  write(12, rec=n+1) (p(m), m=1, nt)\n+  close(12)\n+\n+  inquire(iolength=mt) (p(m), m=1, nt)\n+\n+  open(unit=12, file='syn.sax', access='direct', recl=mt)\n+  n = 1\n+  write(12, rec=n) mt, nt\n+  write(12, rec=n+1) (p(m), m=1, nt)\n+  close(12)\n+end program"}, {"sha": "46d5061492af678c4400eed63fdb2cec0b20001a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa1b65cad6cb3ccbf48f992e1710a6953604842/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa1b65cad6cb3ccbf48f992e1710a6953604842/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=0fa1b65cad6cb3ccbf48f992e1710a6953604842", "patch": "@@ -1,3 +1,9 @@\n+2004-08-21  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR 16908\n+\t* io/transfer.c (next_record_w): Do not blank pad.\n+\t* io/transfer.c (next_record): Take into account partial records.\n+\n 2004-08-18  Victor Leikehman  <lei@il.ibm.com>\n \n \tPR fortran/13278"}, {"sha": "5bc3c002b6086b775a800139b701986d8558e9ad", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa1b65cad6cb3ccbf48f992e1710a6953604842/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa1b65cad6cb3ccbf48f992e1710a6953604842/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=0fa1b65cad6cb3ccbf48f992e1710a6953604842", "patch": "@@ -1223,20 +1223,23 @@ next_record_w (int done)\n   switch (current_mode ())\n     {\n     case FORMATTED_DIRECT:\n-    case UNFORMATTED_DIRECT:\n       if (current_unit->bytes_left == 0)\n \tbreak;\n \n       length = current_unit->bytes_left;\n-\n       p = salloc_w (current_unit->s, &length);\n+\n       if (p == NULL)\n \tgoto io_error;\n \n       memset (p, ' ', current_unit->bytes_left);\n       if (sfree (current_unit->s) == FAILURE)\n \tgoto io_error;\n+      break;\n \n+    case UNFORMATTED_DIRECT:\n+      if (sfree (current_unit->s) == FAILURE)\n+        goto io_error;\n       break;\n \n     case UNFORMATTED_SEQUENTIAL:\n@@ -1304,6 +1307,7 @@ next_record_w (int done)\n void\n next_record (int done)\n {\n+  gfc_offset fp; /* file position */\n \n   current_unit->read_bad = 0;\n \n@@ -1314,8 +1318,12 @@ next_record (int done)\n \n   current_unit->current_record = 0;\n   if (current_unit->flags.access == ACCESS_DIRECT)\n-    current_unit->last_record = file_position (current_unit->s) \n-                               / current_unit->recl;\n+   {\n+    fp = file_position (current_unit->s);\n+    /* Calculate next record, rounding up partial records.  */\n+    current_unit->last_record = (fp + curren_unit->recl - 1)\n+\t\t\t\t/ current_unit->recl;\n+   }\n   else\n     current_unit->last_record++;\n "}]}