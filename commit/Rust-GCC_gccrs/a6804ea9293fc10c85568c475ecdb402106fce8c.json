{"sha": "a6804ea9293fc10c85568c475ecdb402106fce8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY4MDRlYTkyOTNmYzEwYzg1NTY4YzQ3NWVjZGI0MDIxMDZmY2U4Yw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-01-16T22:38:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-01-16T22:38:33Z"}, "message": "syscall: mark C syscall functions noescape\n    \n    Many C syscall functions take pointer arguments. The pointers\n    don't escape in the C functions. Mark the C functions noescape so\n    calling them doesn't need allocation.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/158158\n\nFrom-SVN: r267989", "tree": {"sha": "1a1cf662c1c95e2cf4823bb2d6923c78490ecf9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a1cf662c1c95e2cf4823bb2d6923c78490ecf9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6804ea9293fc10c85568c475ecdb402106fce8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6804ea9293fc10c85568c475ecdb402106fce8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6804ea9293fc10c85568c475ecdb402106fce8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6804ea9293fc10c85568c475ecdb402106fce8c/comments", "author": null, "committer": null, "parents": [{"sha": "07e1534f44b26a1acb0b3393aae7d1a4a90fa942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07e1534f44b26a1acb0b3393aae7d1a4a90fa942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07e1534f44b26a1acb0b3393aae7d1a4a90fa942"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "67abd997051b49ef9ad2e2ac5713858d8331118a", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6804ea9293fc10c85568c475ecdb402106fce8c/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6804ea9293fc10c85568c475ecdb402106fce8c/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=a6804ea9293fc10c85568c475ecdb402106fce8c", "patch": "@@ -1,4 +1,4 @@\n-9a79c333e896ea49f6a708d459148074d29a2af6\n+ee94431c133a90ca5c3c5ebbebcb019c60258dac\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "e5ccc69015583c57294239337bee4de8d78bbe8a", "filename": "libgo/go/syscall/exec_linux.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6804ea9293fc10c85568c475ecdb402106fce8c/libgo%2Fgo%2Fsyscall%2Fexec_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6804ea9293fc10c85568c475ecdb402106fce8c/libgo%2Fgo%2Fsyscall%2Fexec_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fexec_linux.go?ref=a6804ea9293fc10c85568c475ecdb402106fce8c", "patch": "@@ -62,6 +62,7 @@ func runtime_AfterFork()\n func runtime_AfterForkInChild()\n \n // Implemented in clone_linux.c\n+//go:noescape\n func rawClone(flags _C_ulong, child_stack *byte, ptid *Pid_t, ctid *Pid_t, regs unsafe.Pointer) _C_long\n \n // Fork, dup fd onto 0..len(fd), and exec(argv0, argvv, envv) in child."}, {"sha": "50802d9f521f62c07be75be5828f876e724bd2f8", "filename": "libgo/go/syscall/mksyscall.awk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6804ea9293fc10c85568c475ecdb402106fce8c/libgo%2Fgo%2Fsyscall%2Fmksyscall.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6804ea9293fc10c85568c475ecdb402106fce8c/libgo%2Fgo%2Fsyscall%2Fmksyscall.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fmksyscall.awk?ref=a6804ea9293fc10c85568c475ecdb402106fce8c", "patch": "@@ -98,6 +98,7 @@ BEGIN {\n     printf(\"// Automatically generated wrapper for %s/%s\\n\", gofnname, cfnname)\n     if (!(cfnname in cfns)) {\n         cfns[cfnname] = 1\n+        printf(\"//go:noescape\\n\")\n         printf(\"//extern %s\\n\", cfnname)\n         printf(\"func c_%s(%s) %s\\n\", cfnname, cfnparams, cfnresult)\n     }"}]}