{"sha": "b4da9f9dd016e83cea7d443f171fe91f0b962b9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRkYTlmOWRkMDE2ZTgzY2VhN2Q0NDNmMTcxZmU5MWYwYjk2MmI5ZQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2008-01-23T16:44:27Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2008-01-23T16:44:27Z"}, "message": "re PR debug/34895 (ICE in force_type_die, at dwarf2out.c:12923)\n\n        PR debug/34895\n        * dwarf2out.c (force_type_die): Use modified_type_die instead of\n        gen_type_die.\n\n        * g++.dg/debug/pr34895.cc: New testcase.\n\nFrom-SVN: r131761", "tree": {"sha": "18dbb33ebeeb64f69964239a861dad4b258d8612", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18dbb33ebeeb64f69964239a861dad4b258d8612"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4da9f9dd016e83cea7d443f171fe91f0b962b9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4da9f9dd016e83cea7d443f171fe91f0b962b9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4da9f9dd016e83cea7d443f171fe91f0b962b9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4da9f9dd016e83cea7d443f171fe91f0b962b9e/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b7af7b04cee6a97cdf17b3e585279608db60c0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b7af7b04cee6a97cdf17b3e585279608db60c0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b7af7b04cee6a97cdf17b3e585279608db60c0d"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "99fe6282519f1155984d199d056590e8eee11fa4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4da9f9dd016e83cea7d443f171fe91f0b962b9e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4da9f9dd016e83cea7d443f171fe91f0b962b9e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4da9f9dd016e83cea7d443f171fe91f0b962b9e", "patch": "@@ -1,3 +1,9 @@\n+2008-01-23  Michael Matz  <matz@suse.de>\n+\n+\tPR debug/34895\n+\t* dwarf2out.c (force_type_die): Use modified_type_die instead of\n+\tgen_type_die.\n+\n 2008-01-23  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* ipa-struct-reorg.c (create_new_malloc): Use pointer type as"}, {"sha": "c1df45af12ad58a2b4fc829b06857499438f77f6", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4da9f9dd016e83cea7d443f171fe91f0b962b9e/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4da9f9dd016e83cea7d443f171fe91f0b962b9e/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=b4da9f9dd016e83cea7d443f171fe91f0b962b9e", "patch": "@@ -13736,11 +13736,8 @@ force_type_die (tree type)\n       else\n \tcontext_die = comp_unit_die;\n \n-      type_die = lookup_type_die (type);\n-      if (type_die)\n-\treturn type_die;\n-      gen_type_die (type, context_die);\n-      type_die = lookup_type_die (type);\n+      type_die = modified_type_die (type, TYPE_READONLY (type),\n+\t\t\t\t    TYPE_VOLATILE (type), context_die);\n       gcc_assert (type_die);\n     }\n   return type_die;"}, {"sha": "fe9442a92b80385fb0f7e7876798a60844ca45c5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4da9f9dd016e83cea7d443f171fe91f0b962b9e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4da9f9dd016e83cea7d443f171fe91f0b962b9e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4da9f9dd016e83cea7d443f171fe91f0b962b9e", "patch": "@@ -1,3 +1,8 @@\n+2008-01-23  Michael Matz  <matz@suse.de>\n+\n+\tPR debug/34895\n+\t* g++.dg/debug/pr34895.cc: New testcase.\n+\n 2008-01-23  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/31529"}, {"sha": "ca06336c62abb3fafb6b0213ac6c5cf41abc0056", "filename": "gcc/testsuite/g++.dg/debug/pr34895.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4da9f9dd016e83cea7d443f171fe91f0b962b9e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr34895.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4da9f9dd016e83cea7d443f171fe91f0b962b9e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr34895.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr34895.C?ref=b4da9f9dd016e83cea7d443f171fe91f0b962b9e", "patch": "@@ -0,0 +1,19 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 -g\" }\n+//\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+// Contributed by Theodore.Papadopoulo 20 Jan 2008 <Theodore.Papadopoulo@sophia.inria.fr>\n+\n+struct A {\n+    A() { }\n+    unsigned operator()() { return 1; }\n+};\n+struct B: public A {\n+    typedef const A base;\n+    using base::operator();\n+    B() { }\n+};\n+int\n+main() {\n+    B b;\n+}"}]}