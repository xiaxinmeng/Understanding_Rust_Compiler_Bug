{"sha": "bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIxZjU4NDBiNTgwYmExNjcyZDk3Y2YwYzhlY2NiY2I1MGMzZDNjMA==", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@rfc1149.net", "date": "2007-11-23T13:16:54Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2007-11-23T13:16:54Z"}, "message": "s-inmaop-posix.adb, [...]: Use 'Access instead of 'Unchecked_Access in second and third arguments of...\n\n    gcc/ada/\n\t* s-inmaop-posix.adb, s-intman-vxworks.adb, s-taprop-hpux-dce.adb,\n\ts-taprop-irix.adb, s-taprop-linux.adb, s-taprop-lynxos.adb,\n\ts-taprop-posix.adb, s-taprop-tru64.adb, s-taprop-vxworks.adb:\n\tUse 'Access instead of 'Unchecked_Access in second and third\n\targuments of pthread_sigmask.\n\nFrom-SVN: r130376", "tree": {"sha": "56a41285f1340e35411735052795b4b1e040e120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56a41285f1340e35411735052795b4b1e040e120"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/comments", "author": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "356d89619e375836a8ec1a38d9cf3a47b50e923a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/356d89619e375836a8ec1a38d9cf3a47b50e923a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/356d89619e375836a8ec1a38d9cf3a47b50e923a"}], "stats": {"total": 48, "additions": 28, "deletions": 20}, "files": [{"sha": "b8f8e24f090f67f70441b380324dfed24d996259", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "patch": "@@ -1,3 +1,11 @@\n+2007-11-23  Samuel Tardieu  <sam@rfc1149.net>\n+\n+\t* s-inmaop-posix.adb, s-intman-vxworks.adb, s-taprop-hpux-dce.adb,\n+\ts-taprop-irix.adb, s-taprop-linux.adb, s-taprop-lynxos.adb,\n+\ts-taprop-posix.adb, s-taprop-tru64.adb, s-taprop-vxworks.adb:\n+\tUse 'Access instead of 'Unchecked_Access in second and third\n+\targuments of pthread_sigmask.\n+\n 2007-11-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* decl.c (ceil_alignment): New function."}, {"sha": "a38d391fdfc64c57f95de3faca25e29c375a3c10", "filename": "gcc/ada/s-inmaop-posix.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-inmaop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-inmaop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-inmaop-posix.adb?ref=bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "patch": "@@ -77,7 +77,7 @@ package body System.Interrupt_Management.Operations is\n       pragma Assert (Result = 0);\n       Result := sigaddset (Mask'Access, Signal (Interrupt));\n       pragma Assert (Result = 0);\n-      Result := pthread_sigmask (SIG_BLOCK, Mask'Unchecked_Access, null);\n+      Result := pthread_sigmask (SIG_BLOCK, Mask'Access, null);\n       pragma Assert (Result = 0);\n    end Thread_Block_Interrupt;\n \n@@ -95,7 +95,7 @@ package body System.Interrupt_Management.Operations is\n       pragma Assert (Result = 0);\n       Result := sigaddset (Mask'Access, Signal (Interrupt));\n       pragma Assert (Result = 0);\n-      Result := pthread_sigmask (SIG_UNBLOCK, Mask'Unchecked_Access, null);\n+      Result := pthread_sigmask (SIG_UNBLOCK, Mask'Access, null);\n       pragma Assert (Result = 0);\n    end Thread_Unblock_Interrupt;\n \n@@ -286,7 +286,7 @@ begin\n \n       for Sig in 1 .. Signal'Last loop\n          Result := sigaction\n-           (Sig, null, Initial_Action (Sig)'Unchecked_Access);\n+           (Sig, null, Initial_Action (Sig)'Access);\n \n          --  ??? [assert 1]\n          --  we can't check Result here since sigaction will fail on\n@@ -326,12 +326,12 @@ begin\n \n       --  The Keep_Unmasked signals should be unmasked for Environment task\n \n-      Result := pthread_sigmask (SIG_UNBLOCK, mask'Unchecked_Access, null);\n+      Result := pthread_sigmask (SIG_UNBLOCK, mask'Access, null);\n       pragma Assert (Result = 0);\n \n       --  Get the signal mask of the Environment Task\n \n-      Result := pthread_sigmask (SIG_SETMASK, null, mask'Unchecked_Access);\n+      Result := pthread_sigmask (SIG_SETMASK, null, mask'Access);\n       pragma Assert (Result = 0);\n \n       --  Setup the constants exported"}, {"sha": "a7c0b7f3da34e49933c4ec0a141aa1775f0abfc1", "filename": "gcc/ada/s-intman-vxworks.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-intman-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-intman-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-vxworks.adb?ref=bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "patch": "@@ -86,9 +86,9 @@ package body System.Interrupt_Management is\n       pragma Unreferenced (Result);\n \n    begin\n-      Result := pthread_sigmask (SIG_SETMASK, null, Mask'Unchecked_Access);\n+      Result := pthread_sigmask (SIG_SETMASK, null, Mask'Access);\n       Result := sigdelset (Mask'Access, signo);\n-      Result := pthread_sigmask (SIG_SETMASK, Mask'Unchecked_Access, null);\n+      Result := pthread_sigmask (SIG_SETMASK, Mask'Access, null);\n \n       Map_And_Raise_Exception (signo);\n    end Notify_Exception;"}, {"sha": "b962b890a07a8adf3c5f94c715b37d20535b91db", "filename": "gcc/ada/s-taprop-hpux-dce.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-hpux-dce.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-hpux-dce.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-hpux-dce.adb?ref=bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "patch": "@@ -193,8 +193,8 @@ package body System.Task_Primitives.Operations is\n          Result :=\n            pthread_sigmask\n              (SIG_UNBLOCK,\n-              Unblocked_Signal_Mask'Unchecked_Access,\n-              Old_Set'Unchecked_Access);\n+              Unblocked_Signal_Mask'Access,\n+              Old_Set'Access);\n          pragma Assert (Result = 0);\n \n          raise Standard'Abort_Signal;"}, {"sha": "0ca8ccac5193f20e3b3a53b4bdd860a144456734", "filename": "gcc/ada/s-taprop-irix.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-irix.adb?ref=bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "patch": "@@ -189,8 +189,8 @@ package body System.Task_Primitives.Operations is\n \n          Result := pthread_sigmask\n            (SIG_UNBLOCK,\n-            Unblocked_Signal_Mask'Unchecked_Access,\n-            Old_Set'Unchecked_Access);\n+            Unblocked_Signal_Mask'Access,\n+            Old_Set'Access);\n          pragma Assert (Result = 0);\n \n          raise Standard'Abort_Signal;"}, {"sha": "8e0f241cc07dc9de7c84048105fd0cd08ceb3182", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "patch": "@@ -211,8 +211,8 @@ package body System.Task_Primitives.Operations is\n          Result :=\n            pthread_sigmask\n              (SIG_UNBLOCK,\n-              Unblocked_Signal_Mask'Unchecked_Access,\n-              Old_Set'Unchecked_Access);\n+              Unblocked_Signal_Mask'Access,\n+              Old_Set'Access);\n          pragma Assert (Result = 0);\n \n          raise Standard'Abort_Signal;"}, {"sha": "cc4e74a8bd73e5dbecf425c23b5b38b7db95fd2f", "filename": "gcc/ada/s-taprop-lynxos.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-lynxos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-lynxos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-lynxos.adb?ref=bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "patch": "@@ -200,8 +200,8 @@ package body System.Task_Primitives.Operations is\n          Result :=\n            pthread_sigmask\n              (SIG_UNBLOCK,\n-              Unblocked_Signal_Mask'Unchecked_Access,\n-              Old_Set'Unchecked_Access);\n+              Unblocked_Signal_Mask'Access,\n+              Old_Set'Access);\n          pragma Assert (Result = 0);\n \n          raise Standard'Abort_Signal;"}, {"sha": "7d3df5c075519a047578b9137cdbecf1d45391bc", "filename": "gcc/ada/s-taprop-posix.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-posix.adb?ref=bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "patch": "@@ -226,7 +226,7 @@ package body System.Task_Primitives.Operations is\n          --  Make sure signals used for RTS internal purpose are unmasked\n \n          Result := pthread_sigmask (SIG_UNBLOCK,\n-           Unblocked_Signal_Mask'Unchecked_Access, Old_Set'Unchecked_Access);\n+           Unblocked_Signal_Mask'Access, Old_Set'Access);\n          pragma Assert (Result = 0);\n \n          raise Standard'Abort_Signal;"}, {"sha": "0b4620b59acba5b01756a861d9f096bd5085264e", "filename": "gcc/ada/s-taprop-tru64.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-tru64.adb?ref=bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "patch": "@@ -197,8 +197,8 @@ package body System.Task_Primitives.Operations is\n          Result :=\n            pthread_sigmask\n              (SIG_UNBLOCK,\n-              Unblocked_Signal_Mask'Unchecked_Access,\n-              Old_Set'Unchecked_Access);\n+              Unblocked_Signal_Mask'Access,\n+              Old_Set'Access);\n          pragma Assert (Result = 0);\n \n          raise Standard'Abort_Signal;"}, {"sha": "54c4f82c6923e9fe3c57ca2c7ab8a97acfaeed2a", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=bb1f5840b580ba1672d97cf0c8eccbcb50c3d3c0", "patch": "@@ -200,8 +200,8 @@ package body System.Task_Primitives.Operations is\n          Result :=\n            pthread_sigmask\n              (SIG_UNBLOCK,\n-              Unblocked_Signal_Mask'Unchecked_Access,\n-              Old_Set'Unchecked_Access);\n+              Unblocked_Signal_Mask'Access,\n+              Old_Set'Access);\n          pragma Assert (Result = 0);\n \n          raise Standard'Abort_Signal;"}]}