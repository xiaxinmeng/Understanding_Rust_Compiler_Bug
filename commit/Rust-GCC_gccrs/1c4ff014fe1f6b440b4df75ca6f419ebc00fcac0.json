{"sha": "1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM0ZmYwMTRmZTFmNmI0NDBiNGRmNzVjYTZmNDE5ZWJjMDBmY2FjMA==", "commit": {"author": {"name": "Ed Smith-Rowland", "email": "3dw4rd@verizon.net", "date": "2014-07-29T14:56:45Z"}, "committer": {"name": "Edward Smith-Rowland", "email": "emsr@gcc.gnu.org", "date": "2014-07-29T14:56:45Z"}, "message": "PR libstdc++/60037 - SIGFPE in std::generate_canonical<unsigned int...>\n\n2014-07-29  Ed Smith-Rowland  <3dw4rd@verizon.net>\n\n\tPR libstdc++/60037 - SIGFPE in std::generate_canonical<unsigned int...>\n\t* include/bits/random.h (_Adaptor): static_assert for non floating-point\n\tresult type.\n\t* include/bits/random.tcc (generate_canonical): Ditto.\n\t* include/ext/random.tcc (hypergeometric_distribution::operator()):\n\tUse double as a rng result type.\n\t* testsuite/26_numerics/random/pr60037-neg.cc: New.\n\t* testsuite/ext/random/hypergeometric_distribution/pr60037.cc: New.\n\nFrom-SVN: r213207", "tree": {"sha": "c98e05a6bf49ab42d191c28ae725ebc36e2debb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c98e05a6bf49ab42d191c28ae725ebc36e2debb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/comments", "author": {"login": "emsr", "id": 1936479, "node_id": "MDQ6VXNlcjE5MzY0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1936479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emsr", "html_url": "https://github.com/emsr", "followers_url": "https://api.github.com/users/emsr/followers", "following_url": "https://api.github.com/users/emsr/following{/other_user}", "gists_url": "https://api.github.com/users/emsr/gists{/gist_id}", "starred_url": "https://api.github.com/users/emsr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emsr/subscriptions", "organizations_url": "https://api.github.com/users/emsr/orgs", "repos_url": "https://api.github.com/users/emsr/repos", "events_url": "https://api.github.com/users/emsr/events{/privacy}", "received_events_url": "https://api.github.com/users/emsr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3691f465e062f2380c0d9a6018951030fc8a2a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3691f465e062f2380c0d9a6018951030fc8a2a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3691f465e062f2380c0d9a6018951030fc8a2a3"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "4a7ee072d25d5397f10979f81b1b2a64e6eefb3c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0", "patch": "@@ -1,3 +1,14 @@\n+2014-07-29  Ed Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\tPR libstdc++/60037 - SIGFPE in std::generate_canonical<unsigned int...>\n+\t* include/bits/random.h (_Adaptor): static_assert for non floating-point\n+\tresult type.\n+\t* include/bits/random.tcc (generate_canonical): Ditto.\n+\t* include/ext/random.tcc (hypergeometric_distribution::operator()):\n+\tUse double as a rng result type.\n+\t* testsuite/26_numerics/random/pr60037-neg.cc: New.\n+\t* testsuite/ext/random/hypergeometric_distribution/pr60037.cc: New.\n+\n 2014-07-25  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/abi/post/alpha-linux-gnu/baseline_symbols.txt: Update."}, {"sha": "774f726d0a6410db71f3c75936f3aebf22042c3c", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0", "patch": "@@ -164,6 +164,8 @@ _GLIBCXX_END_NAMESPACE_VERSION\n     template<typename _Engine, typename _DInputType>\n       struct _Adaptor\n       {\n+\tstatic_assert(std::is_floating_point<_DInputType>::value,\n+\t\t      \"template argument not a floating point type\");\n \n       public:\n \t_Adaptor(_Engine& __g)"}, {"sha": "8849ee90d644c9eda51dcc8fb1e41bd7219e7fd1", "filename": "libstdc++-v3/include/bits/random.tcc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc?ref=1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0", "patch": "@@ -3463,6 +3463,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     _RealType\n     generate_canonical(_UniformRandomNumberGenerator& __urng)\n     {\n+      static_assert(std::is_floating_point<_RealType>::value,\n+\t\t    \"template argument not a floating point type\");\n+\n       const size_t __b\n \t= std::min(static_cast<size_t>(std::numeric_limits<_RealType>::digits),\n                    __bits);"}, {"sha": "05361d8f49169a8e5b46ffe2d39eb30798ac65fd", "filename": "libstdc++-v3/include/ext/random.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom.tcc?ref=1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0", "patch": "@@ -1355,7 +1355,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       operator()(_UniformRandomNumberGenerator& __urng,\n \t\t const param_type& __param)\n       {\n-\tstd::__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>\n+\tstd::__detail::_Adaptor<_UniformRandomNumberGenerator, double>\n \t  __aurng(__urng);\n \n \tresult_type __a = __param.successful_size();"}, {"sha": "11d553910c96a648dd9f7cbc5efe82520b60fc46", "filename": "libstdc++-v3/testsuite/26_numerics/random/pr60037-neg.cc", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc?ref=1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++11\" }\n+\n+#include <random>\n+\n+std::mt19937 urng;\n+\n+std::__detail::_Adaptor<std::mt19937, unsigned long> aurng(urng);\n+\n+auto x = std::generate_canonical<std::size_t,\n+\t\t\tstd::numeric_limits<std::size_t>::digits>(urng);\n+\n+// { dg-error \"static assertion failed: template argument not a floating point type\" \"\" { target *-*-* } 167 }\n+\n+// { dg-error \"static assertion failed: template argument not a floating point type\" \"\" { target *-*-* } 3466 }"}, {"sha": "d3088a6ec38557464844f4b898e45a2dadf7f8ec", "filename": "libstdc++-v3/testsuite/ext/random/hypergeometric_distribution/pr60037.cc", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhypergeometric_distribution%2Fpr60037.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhypergeometric_distribution%2Fpr60037.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frandom%2Fhypergeometric_distribution%2Fpr60037.cc?ref=1c4ff014fe1f6b440b4df75ca6f419ebc00fcac0", "patch": "@@ -0,0 +1,23 @@\n+// { dg-options \"-std=gnu++11 -O0\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-cmath \"\" }\n+\n+#include <ext/random>\n+#include <functional>\n+\n+void\n+hyperplot(unsigned int N, unsigned int K, unsigned int n)\n+{\n+  std::mt19937 re; // the default engine\n+  __gnu_cxx::hypergeometric_distribution<> hd(N, K, n);\n+  auto gen = std::bind(hd, re);\n+  gen();\n+}\n+\n+int\n+main()\n+{\n+  hyperplot(15, 3, 2);\n+  hyperplot(500, 50, 30);\n+  hyperplot(100, 20, 5);\n+}"}]}