{"sha": "b0e0a0f9a896325adff6975a7ccf152bb7fc09cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBlMGEwZjlhODk2MzI1YWRmZjY5NzVhN2NjZjE1MmJiN2ZjMDljZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-12T13:01:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-12T13:01:09Z"}, "message": "(indirect_operand): Verify mode of OP is correct.\n\nFrom-SVN: r6222", "tree": {"sha": "4d2efe95cd5fac66ba8cc028203cd12be779c8cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d2efe95cd5fac66ba8cc028203cd12be779c8cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0e0a0f9a896325adff6975a7ccf152bb7fc09cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0e0a0f9a896325adff6975a7ccf152bb7fc09cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0e0a0f9a896325adff6975a7ccf152bb7fc09cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0e0a0f9a896325adff6975a7ccf152bb7fc09cd/comments", "author": null, "committer": null, "parents": [{"sha": "cc79451b143419faf1d7c587d82aaa7627679bac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc79451b143419faf1d7c587d82aaa7627679bac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc79451b143419faf1d7c587d82aaa7627679bac"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "b3ae350709533395dca5c6e90e600a5da1619691", "filename": "gcc/recog.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0e0a0f9a896325adff6975a7ccf152bb7fc09cd/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0e0a0f9a896325adff6975a7ccf152bb7fc09cd/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=b0e0a0f9a896325adff6975a7ccf152bb7fc09cd", "patch": "@@ -1088,6 +1088,9 @@ indirect_operand (op, mode)\n \t\t - MIN (UNITS_PER_WORD, GET_MODE_SIZE (GET_MODE (inner))));\n #endif\n \n+      if (mode != VOIDmode && GET_MODE (op) != mode)\n+\treturn 0;\n+\n       /* The only way that we can have a general_operand as the resulting\n \t address is if OFFSET is zero and the address already is an operand\n \t or if the address is (plus Y (const_int -OFFSET)) and Y is an"}]}