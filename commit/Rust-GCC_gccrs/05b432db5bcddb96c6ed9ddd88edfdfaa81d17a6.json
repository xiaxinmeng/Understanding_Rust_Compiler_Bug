{"sha": "05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDViNDMyZGI1YmNkZGI5NmM2ZWQ5ZGRkODhlZGZkZmFhODFkMTdhNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-06-26T10:47:33Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-06-26T10:47:33Z"}, "message": "i386.md (float_truncate splitter, [...]): Add reload_completted; fix operand predicate.\n\n\n\t* i386.md (float_truncate splitter, and to mov splitters): Add\n\treload_completted; fix operand predicate.\n\n\t* haifa-sched.c (sched_init): Do not split insns.\n\t* toplev.c (rest_of_compilation): Call split_all_insns before\n\tsched1 pass; simplify condition of post-reload splitter;\n\tcall split_all_insn before sched2 pass.\n\nFrom-SVN: r43575", "tree": {"sha": "144f44b72eb338b2b0f1378f869aeee6e66f6bc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/144f44b72eb338b2b0f1378f869aeee6e66f6bc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6/comments", "author": null, "committer": null, "parents": [{"sha": "f4655693b5aff2a21929d4c127b89a0fc9803a49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4655693b5aff2a21929d4c127b89a0fc9803a49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4655693b5aff2a21929d4c127b89a0fc9803a49"}], "stats": {"total": 42, "additions": 25, "deletions": 17}, "files": [{"sha": "34c713a5c22338fe5af6ba59b7aeacde5b66e45c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6", "patch": "@@ -1,3 +1,13 @@\n+Tue Jun 26 12:40:12 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (float_truncate splitter, and to mov splitters): Add\n+\treload_completed; fix operand predicate.\n+\n+\t* haifa-sched.c (sched_init): Do not split insns.\n+\t* toplev.c (rest_of_compilation): Call split_all_insns before\n+\tsched1 pass; simplify condition of post-reload splitter;\n+\tcall split_all_insn before sched2 pass.\n+\n 2001-06-26  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* diagnostic.h (diagnostic_prefixing_rule_t): New enum type."}, {"sha": "62f93d2ff43a078509462a8113746f837af41f78", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6", "patch": "@@ -4410,7 +4410,8 @@\n \t(float_truncate:SF\n \t (match_operand:DF 1 \"nonimmediate_operand\" \"\")))\n    (clobber (match_operand 2 \"\" \"\"))]\n-  \"TARGET_80387 && !FP_REG_P (operands[0]) && !FP_REG_P (operands[1])\"\n+  \"TARGET_80387 && reload_completed\n+   && !FP_REG_P (operands[0]) && !FP_REG_P (operands[1])\"\n   [(set (match_dup 0) (float_truncate:SF (match_dup 1)))]\n   \"\")\n \n@@ -8310,7 +8311,7 @@\n    (set_attr \"mode\" \"SI\")])\n \n (define_split\n-  [(set (match_operand 0 \"ext_register_operand\" \"\")\n+  [(set (match_operand 0 \"register_operand\" \"\")\n \t(and (match_dup 0)\n \t     (const_int -65536)))\n    (clobber (reg:CC 17))]\n@@ -8323,7 +8324,7 @@\n \t(and (match_dup 0)\n \t     (const_int -256)))\n    (clobber (reg:CC 17))]\n-  \"(optimize_size || !TARGET_PARTIAL_REG_STALL)\"\n+  \"(optimize_size || !TARGET_PARTIAL_REG_STALL) && reload_completed\"\n   [(set (strict_low_part (match_dup 1)) (const_int 0))]\n   \"operands[1] = gen_lowpart (QImode, operands[0]);\")\n \n@@ -8332,7 +8333,7 @@\n \t(and (match_dup 0)\n \t     (const_int -65281)))\n    (clobber (reg:CC 17))]\n-  \"(optimize_size || !TARGET_PARTIAL_REG_STALL)\"\n+  \"(optimize_size || !TARGET_PARTIAL_REG_STALL) && reload_completed\"\n   [(parallel [(set (zero_extract:SI (match_dup 0)\n \t\t\t\t    (const_int 8)\n \t\t\t\t    (const_int 8))"}, {"sha": "4974c22f686b0a5ff3d7577626ab890c8fa6705b", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6", "patch": "@@ -1906,8 +1906,6 @@ sched_init (dump_file)\n   /* Initialize issue_rate.  */\n   issue_rate = ISSUE_RATE;\n \n-  split_all_insns (1);\n-\n   /* We use LUID 0 for the fake insn (UID 0) which holds dependencies for\n      pseudos which do not cross calls.  */\n   old_max_uid = get_max_uid () + 1;"}, {"sha": "7ca7e91ae11bd538f4242123f7ffc44c3fd0d9db", "filename": "gcc/toplev.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=05b432db5bcddb96c6ed9ddd88edfdfaa81d17a6", "patch": "@@ -3410,13 +3410,16 @@ rest_of_compilation (decl)\n   timevar_pop (TV_GCSE);\n #endif\n \n+  timevar_push (TV_SCHED);\n+\n+  split_all_insns (1);\n+\n #ifdef INSN_SCHEDULING\n \n   /* Print function header into sched dump now\n      because doing the sched analysis makes some of the dump.  */\n   if (optimize > 0 && flag_schedule_insns)\n     {\n-      timevar_push (TV_SCHED);\n       open_dump_file (DFI_sched, decl);\n \n       /* Do control and data sched analysis,\n@@ -3425,15 +3428,15 @@ rest_of_compilation (decl)\n       schedule_insns (rtl_dump_file);\n \n       close_dump_file (DFI_sched, print_rtl_with_bb, insns);\n-      timevar_pop (TV_SCHED);\n-\n-      ggc_collect ();\n \n       /* Register lifetime information was updated as part of verifying\n \t the schedule.  */\n       register_life_up_to_date = 1;\n     }\n #endif\n+  timevar_pop (TV_SCHED);\n+\n+  ggc_collect ();\n \n   /* Determine if the current function is a leaf before running reload\n      since this can impact optimizations done by the prologue and\n@@ -3510,14 +3513,8 @@ rest_of_compilation (decl)\n     }\n \n   /* If optimizing, then go ahead and split insns now since we are about\n-     to recompute flow information anyway.  Since we can't split insns after\n-     reload, do the splitting unconditionally here to avoid gcc from losing\n-     REG_DEAD notes.  */\n-#ifdef STACK_REGS\n-  if (1)\n-#else\n+     to recompute flow information anyway.  */\n   if (optimize > 0)\n-#endif\n     {\n       int old_labelnum = max_label_num ();\n \n@@ -3619,6 +3616,8 @@ rest_of_compilation (decl)\n       /* Do control and data sched analysis again,\n \t and write some more of the results to dump file.  */\n \n+      split_all_insns (1);\n+\n       schedule_insns (rtl_dump_file);\n \n       close_dump_file (DFI_sched2, print_rtl_with_bb, insns);"}]}