{"sha": "9d691ba7501c741571edc1618c434316b1eb0170", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ2OTFiYTc1MDFjNzQxNTcxZWRjMTYxOGM0MzQzMTZiMWViMDE3MA==", "commit": {"author": {"name": "Bernhard Fischer", "email": "aldot@gcc.gnu.org", "date": "2006-11-20T16:20:33Z"}, "committer": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2006-11-20T16:20:33Z"}, "message": "re PR fortran/24783 ([4.1 and 4.2 only] Implicit none in module overwrite explicit in procedure)\n\nfortran/ChangeLog\n2006-11-20  Bernhard Fischer  <aldot@gcc.gnu.org>\n\n        PR fortran/24783\n        * resolve.c (resolve_variable): Get the implicit type from the\n        symbols namespace rather than the default namespace. Fix whitespace.\n        (resolve_formal_arglist, resolve_equivalence): Fix typo.\n\n\ntestsuite/ChangeLog\n2006-11-20  Bernhard Fischer  <aldot@gcc.gnu.org>\n\n        PR fortran/24783\n        * gfortran.dg/implicit_10.f90: New test.\n\nFrom-SVN: r119016", "tree": {"sha": "1c22521a19dd87fd68039ebbda9a598ad162614e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c22521a19dd87fd68039ebbda9a598ad162614e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d691ba7501c741571edc1618c434316b1eb0170", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d691ba7501c741571edc1618c434316b1eb0170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d691ba7501c741571edc1618c434316b1eb0170", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d691ba7501c741571edc1618c434316b1eb0170/comments", "author": null, "committer": null, "parents": [{"sha": "d58542ea03f8bd11572dee1bdc16758df3235083", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d58542ea03f8bd11572dee1bdc16758df3235083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d58542ea03f8bd11572dee1bdc16758df3235083"}], "stats": {"total": 53, "additions": 48, "deletions": 5}, "files": [{"sha": "da741c6faff5e8a53ea6b2886b7840f3b09ccf97", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d691ba7501c741571edc1618c434316b1eb0170/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d691ba7501c741571edc1618c434316b1eb0170/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9d691ba7501c741571edc1618c434316b1eb0170", "patch": "@@ -1,3 +1,10 @@\n+2006-11-20  Bernhard Fischer  <aldot@gcc.gnu.org>\n+\n+\tPR fortran/24783\n+\t* resolve.c (resolve_variable): Get the implicit type from the\n+\tsymbols namespace rather than the default namespace. Fix whitespace.\n+\t(resolve_formal_arglist, resolve_equivalence): Fix typo.\n+\n 2006-11-19  Erik Edelmann  <eedelman@gcc.gnu.org>\n \n \t* resolve.c (resolve_ref): Check for ALLOCATABLEs to the right of"}, {"sha": "5bd8296b55b888092d86e6d37d8ef9173170bd6c", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d691ba7501c741571edc1618c434316b1eb0170/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d691ba7501c741571edc1618c434316b1eb0170/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=9d691ba7501c741571edc1618c434316b1eb0170", "patch": "@@ -232,7 +232,7 @@ resolve_formal_arglist (gfc_symbol * proc)\n                 {\n                   gfc_error\n                     (\"Character-valued argument '%s' of statement function at \"\n-                     \"%L must has constant length\",\n+                     \"%L must have constant length\",\n                      sym->name, &sym->declared_at);\n                   continue;\n                 }\n@@ -2966,7 +2966,7 @@ resolve_variable (gfc_expr * e)\n   else\n     {\n       /* Must be a simple variable reference.  */\n-      if (gfc_set_default_type (sym, 1, NULL) == FAILURE)\n+      if (gfc_set_default_type (sym, 1, sym->ns) == FAILURE)\n \treturn FAILURE;\n       e->ts = sym->ts;\n     }\n@@ -6008,11 +6008,9 @@ resolve_symbol (gfc_symbol * sym)\n     case FL_PARAMETER:\n       if (resolve_fl_parameter (sym) == FAILURE)\n \treturn;\n-\n       break;\n \n     default:\n-\n       break;\n     }\n \n@@ -6692,7 +6690,7 @@ resolve_equivalence (gfc_equiv *eq)\n \t{\n \t  if (value_name != NULL)\n \t    {\n-\t      gfc_error (\"Initialized objects '%s' and '%s'  cannot both \"\n+\t      gfc_error (\"Initialized objects '%s' and '%s' cannot both \"\n \t\t\t \"be in the EQUIVALENCE statement at %L\",\n \t\t\t value_name, sym->name, &e->where);\n \t      continue;"}, {"sha": "bda06241fd7527775f77d59e86a8d0347f9c96bf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d691ba7501c741571edc1618c434316b1eb0170/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d691ba7501c741571edc1618c434316b1eb0170/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d691ba7501c741571edc1618c434316b1eb0170", "patch": "@@ -1,3 +1,8 @@\n+2006-11-20  Bernhard Fischer  <aldot@gcc.gnu.org>\n+\n+\tPR fortran/24783\n+\t* gfortran.dg/implicit_10.f90: New test.\n+\n 2006-11-19  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \tPR c++/8586"}, {"sha": "0f5094f420948611c51ac2009d3902989d66ff51", "filename": "gcc/testsuite/gfortran.dg/implicit_10.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d691ba7501c741571edc1618c434316b1eb0170/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d691ba7501c741571edc1618c434316b1eb0170/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_10.f90?ref=9d691ba7501c741571edc1618c434316b1eb0170", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do run }\n+! Check fix for PR24783 where we did try to resolve the implicit type\n+! from the wrong namespace thus rejecting valid code.\n+      MODULE mod1\n+      IMPLICIT NONE\n+      CONTAINS\n+      SUBROUTINE sub(vec, ny)\n+      IMPLICIT REAL (a-h,o-z)\n+      IMPLICIT INTEGER (i-n)\n+      DIMENSION vec(ny)\n+      ny = fun(vec(ny),1,1) \n+      RETURN\n+      END SUBROUTINE sub\n+      REAL FUNCTION fun(r1, i1, i2)\n+      IMPLICIT REAL (r,f)\n+      IMPLICIT INTEGER (i)\n+      DIMENSION r1(i1:i2)\n+      r1(i1) = i1 + 1\n+      r1(i2) = i2 + 1\n+      fun = r1(i1) + r1(i2)\n+      END FUNCTION fun\n+      END MODULE mod1\n+\n+      use mod1\n+      IMPLICIT REAL (d)\n+      INTEGER i\n+      dimension di(5)\n+      i = 1\n+      if (fun(di(i),1,2).NE.5) call abort()\n+      call sub(di(i),i)\n+      if (i.NE.4) call abort()\n+      end\n+! { dg-final { cleanup-modules \"mod1\" } }"}]}