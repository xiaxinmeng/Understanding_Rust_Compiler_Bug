{"sha": "06d946d52234e2776be002662439d43e3d557673", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZkOTQ2ZDUyMjM0ZTI3NzZiZTAwMjY2MjQzOWQ0M2UzZDU1NzY3Mw==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-01-06T12:54:57Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-01-08T11:37:22Z"}, "message": "Respect the f32 and f64 suffix on literals\n\nRust is permissive for integers being marked as floats so the check in the\nlexer can be removed here.", "tree": {"sha": "2a8d6a810ff0f7ad759ed3d7764ad7c6d11eb092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a8d6a810ff0f7ad759ed3d7764ad7c6d11eb092"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06d946d52234e2776be002662439d43e3d557673", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d946d52234e2776be002662439d43e3d557673", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06d946d52234e2776be002662439d43e3d557673", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d946d52234e2776be002662439d43e3d557673/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e0189ed288223f8b376eedd286f5bdff5b35698", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0189ed288223f8b376eedd286f5bdff5b35698", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e0189ed288223f8b376eedd286f5bdff5b35698"}], "stats": {"total": 52, "additions": 36, "deletions": 16}, "files": [{"sha": "037012946fbe92bfad4aa60ada9678a50f13c62b", "filename": "gcc/rust/backend/rust-compile-expr.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d946d52234e2776be002662439d43e3d557673/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d946d52234e2776be002662439d43e3d557673/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.h?ref=06d946d52234e2776be002662439d43e3d557673", "patch": "@@ -156,8 +156,6 @@ class CompileExpr : public HIRCompileBase\n \treturn;\n \n \tcase HIR::Literal::FLOAT: {\n-\t  printf (\"FLOATY BOYO: [%s]\\n\", expr.as_string ().c_str ());\n-\n \t  mpfr_t fval;\n \t  if (mpfr_init_set_str (fval, expr.as_string ().c_str (), 10,\n \t\t\t\t MPFR_RNDN)\n@@ -177,8 +175,6 @@ class CompileExpr : public HIRCompileBase\n \t      return;\n \t    }\n \n-\t  printf (\"tyty float is [%s]\\n\", tyty->as_string ().c_str ());\n-\n \t  Btype *type = TyTyResolveCompile::compile (ctx, tyty);\n \t  translated\n \t    = ctx->get_backend ()->float_constant_expression (type, fval);"}, {"sha": "5d758eef2686da674727c2bef91fdca3c2e73eac", "filename": "gcc/rust/hir/tree/rust-hir.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d946d52234e2776be002662439d43e3d557673/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d946d52234e2776be002662439d43e3d557673/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h?ref=06d946d52234e2776be002662439d43e3d557673", "patch": "@@ -257,6 +257,8 @@ struct Literal\n     return Literal (\"\", CHAR, PrimitiveCoreType::CORETYPE_UNKNOWN);\n   }\n \n+  void set_lit_type (LitType lt) { type = lt; }\n+\n   // Returns whether literal is in an invalid state.\n   bool is_error () const { return value_as_string == \"\"; }\n };"}, {"sha": "4606a6cb2b12797e9edb16a7226f9b1d9c93012a", "filename": "gcc/rust/lex/rust-lex.cc", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d946d52234e2776be002662439d43e3d557673/gcc%2Frust%2Flex%2Frust-lex.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d946d52234e2776be002662439d43e3d557673/gcc%2Frust%2Flex%2Frust-lex.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flex%2Frust-lex.cc?ref=06d946d52234e2776be002662439d43e3d557673", "patch": "@@ -1938,16 +1938,6 @@ Lexer::parse_decimal_int_or_float (Location loc)\n       PrimitiveCoreType type_hint = type_suffix_pair.first;\n       length += type_suffix_pair.second;\n \n-      if (type_hint == CORETYPE_F32 || type_hint == CORETYPE_F64)\n-\t{\n-\t  rust_error_at (\n-\t    get_current_location (),\n-\t    \"invalid type suffix %qs for integer (decimal) literal\",\n-\t    get_type_hint_string (type_hint));\n-\t  // ignore invalid type suffix as everything else seems fine\n-\t  type_hint = CORETYPE_UNKNOWN;\n-\t}\n-\n       current_column += length;\n \n       str.shrink_to_fit ();"}, {"sha": "f2014a10405c12eee07dd8529592f3007f3ef153", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d946d52234e2776be002662439d43e3d557673/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d946d52234e2776be002662439d43e3d557673/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=06d946d52234e2776be002662439d43e3d557673", "patch": "@@ -188,6 +188,15 @@ class TypeCheckExpr : public TypeCheckBase\n \t      ok = context->lookup_builtin (\"u128\", &infered);\n \t      break;\n \n+\t    case CORETYPE_F32:\n+\t      expr.get_literal ()->set_lit_type (HIR::Literal::LitType::FLOAT);\n+\t      ok = context->lookup_builtin (\"f32\", &infered);\n+\t      break;\n+\t    case CORETYPE_F64:\n+\t      expr.get_literal ()->set_lit_type (HIR::Literal::LitType::FLOAT);\n+\t      ok = context->lookup_builtin (\"f64\", &infered);\n+\t      break;\n+\n \t    default:\n \t      ok = context->lookup_builtin (\"i32\", &infered);\n \t      break;\n@@ -197,8 +206,20 @@ class TypeCheckExpr : public TypeCheckBase\n \tbreak;\n \n \tcase HIR::Literal::LitType::FLOAT: {\n-\t  // FIXME need to respect the suffix if applicable\n-\t  auto ok = context->lookup_builtin (\"f32\", &infered);\n+\t  bool ok = false;\n+\n+\t  switch (expr.get_literal ()->get_type_hint ())\n+\t    {\n+\t    case CORETYPE_F32:\n+\t      ok = context->lookup_builtin (\"f32\", &infered);\n+\t      break;\n+\t    case CORETYPE_F64:\n+\t      ok = context->lookup_builtin (\"f64\", &infered);\n+\t      break;\n+\t    default:\n+\t      ok = context->lookup_builtin (\"f32\", &infered);\n+\t      break;\n+\t    }\n \t  rust_assert (ok);\n \t}\n \tbreak;"}, {"sha": "50b392e65008387712dcd5aaf758e6db66ea06ca", "filename": "gcc/testsuite/rust.test/compilable/float_types.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d946d52234e2776be002662439d43e3d557673/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Ffloat_types.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d946d52234e2776be002662439d43e3d557673/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Ffloat_types.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Ffloat_types.rs?ref=06d946d52234e2776be002662439d43e3d557673", "patch": "@@ -0,0 +1,11 @@\n+fn main() {\n+    let a1: f32 = 1.0f32;\n+    let a2: f64 = 2.0f64;\n+    let a3: f32 = 3f32;\n+    let a4: f64 = 4f64;\n+\n+    let b1 = 1.0f32;\n+    let b2 = 2.0f64;\n+    let b3 = 3f32;\n+    let b4 = 4f64;\n+}"}]}