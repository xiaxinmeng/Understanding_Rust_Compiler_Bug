{"sha": "74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRlYTRjZDVlM2VjZmZkZmJkNTBlMmEwM2VhYzkwM2QxYzQ2OTAwYw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-07-13T02:43:10Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-07-13T02:43:10Z"}, "message": "tree.c: add [cd]tors to free_lang_data_d\n\ngcc/ChangeLog:\n\n2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* tree.c (struct free_lang_data_d): Add constructor and change\n\ttypes of members to ones that automatically manage resources.\n\t(fld_worklist_push): Adjust.\n\t(find_decls_types): Likewise.\n\t(find_decls_types_in_eh_region): Likewise.\n\t(free_lang_data_in_cgraph): Stop manually creating and\n\tdestroying members of free_lang_data_d.\n\nFrom-SVN: r238278", "tree": {"sha": "caffa7ffe14f6985665e1f80863de4a69210a13e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caffa7ffe14f6985665e1f80863de4a69210a13e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c/comments", "author": null, "committer": null, "parents": [{"sha": "4aa59659944ed1e331bc43185776df4db9d32849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aa59659944ed1e331bc43185776df4db9d32849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aa59659944ed1e331bc43185776df4db9d32849"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "6ab7475a87980279d7d7f0bcf92c6e0454c774d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c", "patch": "@@ -1,3 +1,13 @@\n+2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* tree.c (struct free_lang_data_d): Add constructor and change\n+\ttypes of members to ones that automatically manage resources.\n+\t(fld_worklist_push): Adjust.\n+\t(find_decls_types): Likewise.\n+\t(find_decls_types_in_eh_region): Likewise.\n+\t(free_lang_data_in_cgraph): Stop manually creating and\n+\tdestroying members of free_lang_data_d.\n+\n 2016-07-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR rtl-optimization/68961"}, {"sha": "ac3e3e93f5f22bf59cabdd44702cbf358b64574c", "filename": "gcc/tree.c", "status": "modified", "additions": 12, "deletions": 21, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c", "patch": "@@ -5500,17 +5500,19 @@ free_lang_data_in_decl (tree decl)\n \n struct free_lang_data_d\n {\n+  free_lang_data_d () : decls (100), types (100) {}\n+\n   /* Worklist to avoid excessive recursion.  */\n-  vec<tree> worklist;\n+  auto_vec<tree> worklist;\n \n   /* Set of traversed objects.  Used to avoid duplicate visits.  */\n-  hash_set<tree> *pset;\n+  hash_set<tree> pset;\n \n   /* Array of symbols to process with free_lang_data_in_decl.  */\n-  vec<tree> decls;\n+  auto_vec<tree> decls;\n \n   /* Array of types to process with free_lang_data_in_type.  */\n-  vec<tree> types;\n+  auto_vec<tree> types;\n };\n \n \n@@ -5569,7 +5571,7 @@ add_tree_to_fld_list (tree t, struct free_lang_data_d *fld)\n static inline void\n fld_worklist_push (tree t, struct free_lang_data_d *fld)\n {\n-  if (t && !is_lang_specific (t) && !fld->pset->contains (t))\n+  if (t && !is_lang_specific (t) && !fld->pset.contains (t))\n     fld->worklist.safe_push ((t));\n }\n \n@@ -5738,8 +5740,8 @@ find_decls_types (tree t, struct free_lang_data_d *fld)\n {\n   while (1)\n     {\n-      if (!fld->pset->contains (t))\n-\twalk_tree (&t, find_decls_types_r, fld, fld->pset);\n+      if (!fld->pset.contains (t))\n+\twalk_tree (&t, find_decls_types_r, fld, &fld->pset);\n       if (fld->worklist.is_empty ())\n \tbreak;\n       t = fld->worklist.pop ();\n@@ -5793,20 +5795,20 @@ find_decls_types_in_eh_region (eh_region r, struct free_lang_data_d *fld)\n \tfor (c = r->u.eh_try.first_catch; c ; c = c->next_catch)\n \t  {\n \t    c->type_list = get_eh_types_for_runtime (c->type_list);\n-\t    walk_tree (&c->type_list, find_decls_types_r, fld, fld->pset);\n+\t    walk_tree (&c->type_list, find_decls_types_r, fld, &fld->pset);\n \t  }\n       }\n       break;\n \n     case ERT_ALLOWED_EXCEPTIONS:\n       r->u.allowed.type_list\n \t= get_eh_types_for_runtime (r->u.allowed.type_list);\n-      walk_tree (&r->u.allowed.type_list, find_decls_types_r, fld, fld->pset);\n+      walk_tree (&r->u.allowed.type_list, find_decls_types_r, fld, &fld->pset);\n       break;\n \n     case ERT_MUST_NOT_THROW:\n       walk_tree (&r->u.must_not_throw.failure_decl,\n-\t\t find_decls_types_r, fld, fld->pset);\n+\t\t find_decls_types_r, fld, &fld->pset);\n       break;\n     }\n }\n@@ -5948,12 +5950,6 @@ free_lang_data_in_cgraph (void)\n   unsigned i;\n   alias_pair *p;\n \n-  /* Initialize sets and arrays to store referenced decls and types.  */\n-  fld.pset = new hash_set<tree>;\n-  fld.worklist.create (0);\n-  fld.decls.create (100);\n-  fld.types.create (100);\n-\n   /* Find decls and types in the body of every function in the callgraph.  */\n   FOR_EACH_FUNCTION (n)\n     find_decls_types_in_node (n, &fld);\n@@ -5983,11 +5979,6 @@ free_lang_data_in_cgraph (void)\n       FOR_EACH_VEC_ELT (fld.types, i, t)\n \tverify_type (t);\n     }\n-\n-  delete fld.pset;\n-  fld.worklist.release ();\n-  fld.decls.release ();\n-  fld.types.release ();\n }\n \n "}]}