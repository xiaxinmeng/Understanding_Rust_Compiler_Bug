{"sha": "bcf49b9e570cb574f49c67f0e102bf8f1a6e92f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNmNDliOWU1NzBjYjU3NGY0OWM2N2YwZTEwMmJmOGYxYTZlOTJmNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-10-29T15:28:55Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-10-29T15:28:55Z"}, "message": "ChangeLog: Fix formatting.\n\n\t* ChangeLog: Fix formatting.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r129723", "tree": {"sha": "6a227c561175d4d54cf1eb50bbc3be588934adec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a227c561175d4d54cf1eb50bbc3be588934adec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcf49b9e570cb574f49c67f0e102bf8f1a6e92f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcf49b9e570cb574f49c67f0e102bf8f1a6e92f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcf49b9e570cb574f49c67f0e102bf8f1a6e92f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcf49b9e570cb574f49c67f0e102bf8f1a6e92f4/comments", "author": null, "committer": null, "parents": [{"sha": "22c7e1461acd840abecda5f538feb62f225b370b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c7e1461acd840abecda5f538feb62f225b370b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22c7e1461acd840abecda5f538feb62f225b370b"}], "stats": {"total": 242, "additions": 119, "deletions": 123}, "files": [{"sha": "315649734ee9df7875dade215ee8e2a39c973ab8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 87, "deletions": 120, "changes": 207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcf49b9e570cb574f49c67f0e102bf8f1a6e92f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcf49b9e570cb574f49c67f0e102bf8f1a6e92f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bcf49b9e570cb574f49c67f0e102bf8f1a6e92f4", "patch": "@@ -2,102 +2,69 @@\n \n \t* modulo-sched.c (sms_schedule): Add DF_UD_CHAIN problem.\n \n-2007-10-29  Razya Ladelsky\n-\n-        Automatic parallelization reduction tests.\n-\n-\t* testsuite/gcc.dg/tree-ssa/reduc-1.c: New test.\n-\t* testsuite/gcc.dg/tree-ssa/reduc-1char.c: New test.\n-\t* testsuite/gcc.dg/tree-ssa/reduc-1short.c: New test.\n-\t* testsuite/gcc.dg/tree-ssa/reduc-2.c: New test.\n-\t* testsuite/gcc.dg/tree-ssa/reduc-2char.c: New test.\n-\t* testsuite/gcc.dg/tree-ssa/reduc-2short.c: New test.\n-\t* testsuite/gcc.dg/tree-ssa/reduc-3.c: New test.\n-\t* testsuite/gcc.dg/tree-ssa/reduc-6.c: New test.\n-\t* testsuite/gcc.dg/tree-ssa/reduc-7.c: New test.\n-\t* testsuite/gcc.dg/tree-ssa/reduc-8.c: New test.\n-\t* testsuite/gcc.dg/tree-ssa/reduc-9.c: New test.\n-\n-2007-10-29  Razya Ladelsky\n-            Zdenek Dvorak\n-\n-        OMP_ATOMIC Changes, testsuite changes.\n-\n-\t* testsuite/gcc.dg/gomp/atomic-3.c: Search for string on\n-\tompexp dump instead of gimple dump.\n-\t* testsuite/gcc.dg/gomp/atomic-9.c: Same.\n-\t* testsuite/gcc.dg/gomp/atomic-10.c: Same.\n-\t* testsuite/g++.dg/gomp/atomic-3.C: Same.\n-\t* testsuite/g++.dg/gomp/atomic-9.C: Same.\n-\t* testsuite/g++.dg/gomp/atomic-10.C: Same.\n-\n-2007-10-29  Razya Ladelsky\n-            Zdenek Dvorak\n-\n-        OMP_ATOMIC Changes,\n-        Reduction support for automatic parallelization.\n-\n-        * expr.c (expand_expr_real_1): Add cases for OMP_ATOMIC_LOAD,\n-        OMP_ATOMIC_STORE.\n-        * Makefile.in: Add dependencies to expr.o, tree-parloops.o, omp-low.o\n-        * tree-pretty-print.c (dump_generic_node): Add OMP_ATOMIC_LOAD\n-        and OMP_ATOMIC_STORE.\n-        * tree.h (OMP_DIRECTIVE_P): Add OMP_ATOMIC_LOAD,\n-        OMP_ATOMIC_STORE.\n-        * gimple-low.c (lower_stmt): Same.\n-        * gimplify.c (gimplify_expr): Same.\n-        (gimplify_omp_atomic_fetch_op, gimplify_omp_atomic_pipeline,\n-        gimplify_omp_atomic_mutex): Remove.\n-        (gimplify_omp_atomic): Change it to simply gimplify the\n-        statement instead of expanding it.\n-        * omp-low.c: Add includes to optabs.h, cfgloop.h.\n-        (expand_omp_atomic, expand_omp_atomic_pipeline,\n-        goa_stabilize_expr, expand_omp_atomic_mutex,\n-        expand_omp_atomic_fetch_op): New functions to implement\n-        expansion of OMP_ATOMIC.\n-        (expand_omp, build_omp_regions_1): Add support for\n-        OMP_ATOMIC_LOAD/OMP_ATOMIC_STORE.\n-        * tree-cfg.c (make_edges): add case for OMP_ATOMIC_LOAD,\n-        OMP_ATOMIC_STORE.\n-        * tree-gimple.c (is_gimple_stmt): Add OMP_ATOMIC_LOAD,\n-        OMP_ATOMIC_STORE.\n-        * tree-parloops.c: add include to tree-vectorizer.h.\n-        (reduction_info): New structure for reduction.\n-        (reduction_list): New list to represent list of reductions\n-        per loop.\n-        (struct data_arg): New helper structure for reduction.\n-        (reduction_info_hash, reduction_info_eq, reduction_phi,\n-        initialize_reductions,\n-        create_call_for_reduction, create_phi_for_local_result,\n-        create_call_for_reduction_1, create_loads_for_reductions,\n-        create_final_loads_for_reduction): New functions.\n-        (loop_parallel_p): Identify reductions, add reduction_list parameter.\n-        (separate_decls_in_loop_name): Support reduction variables.\n-        (separate_decls_in_loop): Add reduction_list and ld_st_data arguments,\n-        call create_loads_for_reduction for each reduction.\n-        (canonicalize_loop_ivs): Identify reductions, add reduction_list\n-        parameter.\n-        (transform_to_exit_first_loop): Add reduction support, add\n-        reduction_list parameter.\n-        (gen_parallel_loop): Add reduction_list parameter. Add call\n-        separate_decls_in_loop with\n-        the new argument. Traverse reductions and call\n-        initialize_reductions, create_call_for_reduction.\n-        (parallelize_loops): Create and delete the reduction list.\n-        (add_field_for_name): Change use of data parameter. Add fields for\n-        reductions.\n-        * tree-vectorizer.h (vect_analyze_loop_form): Add declaration.\n-        * tree-vect-analyze.c (vect_analyze_loop_form): export it.\n-        * tree.def: Add definitions for OMP_ATOMIC_LOAD,\n-        OMP_ATOMIC_STORE.\n-        * tree-inline.c (estimate_num_insns_1): add cases for\n-        OMP_ATOMIC_LOAD, OMP_ATOMIC_STORE.\n-        * tree-cfg.c (make_edges): Add OMP_ATOMIC_LOAD,\n-        OMP_ATOMIC_STORE.\n-        * tree-ssa-operands.c (get_addr_dereference_operands):\n-        New function. Subroutine of get_indirect_ref_operands.\n-        (get_indirect_ref_operands): Call get_addr_dereference_operands.\n-        (get_expr_operands): Support OMP_ATOMIC_LOAD, OMP_ATOMIC_STORE.\n+2007-10-29  Razya Ladelsky  <razya@il.ibm.com>\n+            Zdenek Dvorak  <ook@ucw.cz>\n+\n+\tOMP_ATOMIC Changes,\n+\treduction support for automatic parallelization.\n+\n+\t* expr.c (expand_expr_real_1): Add cases for OMP_ATOMIC_LOAD,\n+\tOMP_ATOMIC_STORE.\n+\t* Makefile.in: Add dependencies to expr.o, tree-parloops.o, omp-low.o\n+\t* tree-pretty-print.c (dump_generic_node): Add OMP_ATOMIC_LOAD\n+\tand OMP_ATOMIC_STORE.\n+\t* tree.h (OMP_DIRECTIVE_P): Add OMP_ATOMIC_LOAD, OMP_ATOMIC_STORE.\n+\t* gimple-low.c (lower_stmt): Same.\n+\t* gimplify.c (gimplify_expr): Same.\n+\t(gimplify_omp_atomic_fetch_op, gimplify_omp_atomic_pipeline,\n+\tgimplify_omp_atomic_mutex): Remove.\n+\t(gimplify_omp_atomic): Change it to simply gimplify the\n+\tstatement instead of expanding it.\n+\t* omp-low.c: Add includes to optabs.h, cfgloop.h.\n+\t(expand_omp_atomic, expand_omp_atomic_pipeline,\n+\tgoa_stabilize_expr, expand_omp_atomic_mutex,\n+\texpand_omp_atomic_fetch_op): New functions to implement\n+\texpansion of OMP_ATOMIC.\n+\t(expand_omp, build_omp_regions_1): Add support for\n+\tOMP_ATOMIC_LOAD/OMP_ATOMIC_STORE.\n+\t* tree-cfg.c (make_edges): add case for OMP_ATOMIC_LOAD,\n+\tOMP_ATOMIC_STORE.\n+\t* tree-gimple.c (is_gimple_stmt): Add OMP_ATOMIC_LOAD,\n+\tOMP_ATOMIC_STORE.\n+\t* tree-parloops.c: add include to tree-vectorizer.h.\n+\t(reduction_info): New structure for reduction.\n+\t(reduction_list): New list to represent list of reductions per loop.\n+\t(struct data_arg): New helper structure for reduction.\n+\t(reduction_info_hash, reduction_info_eq, reduction_phi,\n+\tinitialize_reductions, create_call_for_reduction,\n+\tcreate_phi_for_local_result, create_call_for_reduction_1,\n+\tcreate_loads_for_reductions, create_final_loads_for_reduction):\n+\tNew functions.\n+\t(loop_parallel_p): Identify reductions, add reduction_list parameter.\n+\t(separate_decls_in_loop_name): Support reduction variables.\n+\t(separate_decls_in_loop): Add reduction_list and ld_st_data arguments,\n+\tcall create_loads_for_reduction for each reduction.\n+\t(canonicalize_loop_ivs): Identify reductions, add reduction_list\n+\tparameter.\n+\t(transform_to_exit_first_loop): Add reduction support, add\n+\treduction_list parameter.\n+\t(gen_parallel_loop): Add reduction_list parameter.  Add call\n+\tseparate_decls_in_loop with\n+\tthe new argument.  Traverse reductions and call\n+\tinitialize_reductions, create_call_for_reduction.\n+\t(parallelize_loops): Create and delete the reduction list.\n+\t(add_field_for_name): Change use of data parameter.  Add fields for\n+\treductions.\n+\t* tree-vectorizer.h (vect_analyze_loop_form): Add declaration.\n+\t* tree-vect-analyze.c (vect_analyze_loop_form): export it.\n+\t* tree.def: Add definitions for OMP_ATOMIC_LOAD, OMP_ATOMIC_STORE.\n+\t* tree-inline.c (estimate_num_insns_1): add cases for\n+\tOMP_ATOMIC_LOAD, OMP_ATOMIC_STORE.\n+\t* tree-cfg.c (make_edges): Add OMP_ATOMIC_LOAD, OMP_ATOMIC_STORE.\n+\t* tree-ssa-operands.c (get_addr_dereference_operands):\n+\tNew function.  Subroutine of get_indirect_ref_operands.\n+\t(get_indirect_ref_operands): Call get_addr_dereference_operands.\n+\t(get_expr_operands): Support OMP_ATOMIC_LOAD, OMP_ATOMIC_STORE.\n \n \n 2007-10-29  Hans-Peter Nilsson  <hp@axis.com>\n@@ -283,7 +250,7 @@\n \tDW_ATE_signed_fixed to describe FIXED_POINT_TYPE.\n \n 2007-10-24  Samuel Tardieu  <sam@rfc1149.net>\n-            Olga Golovanevsky <olga@il.ibm.com>\n+\t    Olga Golovanevsky <olga@il.ibm.com>\n \t\n \t* ipa-struct-reorg.c (replace_field_acc): Make it clear to\n \tthe compiler that wr.wrap and wr.domain are initialized in\n@@ -1208,25 +1175,25 @@\n \n 2007-10-18  Chen Liqin  <liqin@sunnorth.com.cn>\n \n-        * config.gcc : update score-*-elf(extra_objs).\n-        * config/score/mac.md : Remove.\n-        * config/score/misc.md : Remove.\n-        * config/score/score7.md : Remove.\n-        * config/score/score-mdaux.h : Remove.\n-        * config/score/score-mdaux.c : Remove.\n-        * config/score/score-version.h : Remove.\n-        * config/score/score-generic.md : New.\n-        * config/score/score3.h : New.\n-        * config/score/score3.c : New.\n-        * config/score/score7.h : New.\n-        * config/score/score7.c : New.\n-        * config/score/mul-div.S : add flush_cache score3 support.\n-        * config/score/elf.h : Fix some typos.\n-        * config/score/score.md : merge score3 and score7 pattern.\n-        * config/score/score.c : use to seperate which target it used.\n-        * config/score/score.h : use to seperate the target macro.\n-        * config/score/score.opt : remove -mmac option , add -mscore3,\n-        -mscore3d and -march OPTION support.\n+\t* config.gcc : update score-*-elf(extra_objs).\n+\t* config/score/mac.md : Remove.\n+\t* config/score/misc.md : Remove.\n+\t* config/score/score7.md : Remove.\n+\t* config/score/score-mdaux.h : Remove.\n+\t* config/score/score-mdaux.c : Remove.\n+\t* config/score/score-version.h : Remove.\n+\t* config/score/score-generic.md : New.\n+\t* config/score/score3.h : New.\n+\t* config/score/score3.c : New.\n+\t* config/score/score7.h : New.\n+\t* config/score/score7.c : New.\n+\t* config/score/mul-div.S : add flush_cache score3 support.\n+\t* config/score/elf.h : Fix some typos.\n+\t* config/score/score.md : merge score3 and score7 pattern.\n+\t* config/score/score.c : use to seperate which target it used.\n+\t* config/score/score.h : use to seperate the target macro.\n+\t* config/score/score.opt : remove -mmac option , add -mscore3,\n+\t-mscore3d and -march OPTION support.\n  \n 2007-10-17  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n@@ -1396,8 +1363,8 @@\n \n 2007-10-15  Razya Ladelsky  <razya@il.ibm.com>\n \n-        * matrix-reorg.c (gate_matrix_reorg): Don't comment out whole\n-        program flag.\n+\t* matrix-reorg.c (gate_matrix_reorg): Don't comment out whole\n+\tprogram flag.\n \n 2007-10-15  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -1601,7 +1568,7 @@\n 2007-10-10  Wolfgang Gellerich  <gellerich@de.ibm.com>\n \n \t* opth-gen.awk: Fixed generation of comment stating the origin\n-          of options.h\n+\t  of options.h\n \n 2007-10-10  Kazu Hirata  <kazu@codesourcery.com>\n \n@@ -1811,7 +1778,7 @@\n \t* config/m68k/m68k.h (ASSEMBLER_DIALECT): New.\n \n 2007-10-06  Eric Botcazou  <ebotcazou@adacore.com>\n-            Nathan Froyd  <froydnj@codesourcery.com>\n+\t    Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* dwarf2out.c (dwarf2out_frame_init): Check for DWARF2_FRAME_INFO\n \twhen determining whether to record INCOMING_RETURN_ADDR_RTX."}, {"sha": "69a05fb6043fb97fc9aca2b4a1c7e4e843e16878", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcf49b9e570cb574f49c67f0e102bf8f1a6e92f4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcf49b9e570cb574f49c67f0e102bf8f1a6e92f4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bcf49b9e570cb574f49c67f0e102bf8f1a6e92f4", "patch": "@@ -1,3 +1,32 @@\n+2007-10-29  Razya Ladelsky  <razya@il.ibm.com>\n+\n+\tAutomatic parallelization reduction tests.\n+\n+\t* testsuite/gcc.dg/tree-ssa/reduc-1.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-1char.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-1short.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-2.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-2char.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-2short.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-3.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-6.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-7.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-8.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-9.c: New test.\n+\n+2007-10-29  Razya Ladelsky  <razya@il.ibm.com>\n+\t    Zdenek Dvorak  <ook@ucw.cz>\n+\n+\tOMP_ATOMIC Changes, testsuite changes.\n+\n+\t* testsuite/gcc.dg/gomp/atomic-3.c: Search for string on ompexp dump\n+\tinstead of gimple dump.\n+\t* testsuite/gcc.dg/gomp/atomic-9.c: Same.\n+\t* testsuite/gcc.dg/gomp/atomic-10.c: Same.\n+\t* testsuite/g++.dg/gomp/atomic-3.C: Same.\n+\t* testsuite/g++.dg/gomp/atomic-9.C: Same.\n+\t* testsuite/g++.dg/gomp/atomic-10.C: Same.\n+\n 2007-10-29  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31217\n@@ -109,7 +138,7 @@\n \t* g++.dg/template/error32.C: New.\n \n 2007-10-25  Martin Michlmayr <tbm@cyrius.com>\n-            Ira Rosen  <irar@il.ibm.com>\n+\t    Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/33833\n \t* gcc.dg/vect/pr33833.c: New testcase.\n@@ -119,7 +148,7 @@\n \t* gcc.dg/tree-ssa/20040204-1.c: Un-xfail for mips*-*-*.\n \n 2007-10-25  Martin Michlmayr <tbm@cyrius.com>\n-            Ira Rosen  <irar@il.ibm.com>\n+\t    Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/33866\n \t* gcc.dg/vect/pr33866.c: New testcase.\n@@ -225,7 +254,7 @@\n \tand o64 if generating MIPS16 hard-float code.\n \n 2007-10-21  Ira Rosen  <irar@il.ibm.com>\n-            Revital Eres  <eres@il.ibm.com>\n+\t    Revital Eres  <eres@il.ibm.com>\n \n \t* gcc.dg/vect/vect-ifcvt-5.c: Require vect_int.\n \t* gcc.dg/vect/vect-16.c: Fix comment."}]}