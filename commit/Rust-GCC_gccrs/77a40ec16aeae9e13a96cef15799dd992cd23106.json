{"sha": "77a40ec16aeae9e13a96cef15799dd992cd23106", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdhNDBlYzE2YWVhZTllMTNhOTZjZWYxNTc5OWRkOTkyY2QyMzEwNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-05-21T12:35:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-05-21T12:35:51Z"}, "message": "[multiple changes]\n\n2014-05-21  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.adb, erroutc.adb, erroutc.ads: Allow warning tag in pragma\n\tWarnings (Off, string).\n\n2014-05-21  Robert Dewar  <dewar@adacore.com>\n\n\t* osint.adb: Fix three error messages to say invalid instead\n\tof erroneous.\n\t* par-ch4.adb, exp_aggr.adb, sem_attr.adb, sem_aux.adb, sem_ch3.adb,\n\tsem_ch5.adb, sem_ch6.adb, sem_ch7.adb, sem_dim.adb, sem_res.adb,\n\tsem_util.adb, sem_util.ads: Fix incorrect use of erroneous in comments.\n\n2014-05-21  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb, sem_ch13.adb, sem_ch13.ads, sem_ch9.adb,\n\tsem_ch9.ads: Move discriminant manipulation routines for analysis of\n\taspect specifications from sem_ch9 to sem_ch13, where they belong.\n\nFrom-SVN: r210695", "tree": {"sha": "d5cc7f6d4438f211fb69543f995409bf0ba9712c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5cc7f6d4438f211fb69543f995409bf0ba9712c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77a40ec16aeae9e13a96cef15799dd992cd23106", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a40ec16aeae9e13a96cef15799dd992cd23106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a40ec16aeae9e13a96cef15799dd992cd23106", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a40ec16aeae9e13a96cef15799dd992cd23106/comments", "author": null, "committer": null, "parents": [{"sha": "dbed5a9bffce4f2c875abc4f9f502ed339aa0ae0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbed5a9bffce4f2c875abc4f9f502ed339aa0ae0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbed5a9bffce4f2c875abc4f9f502ed339aa0ae0"}], "stats": {"total": 351, "additions": 192, "deletions": 159}, "files": [{"sha": "e74ad47cf5867cae9c795bc389d5c37d6b707e7f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -1,3 +1,22 @@\n+2014-05-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.adb, erroutc.adb, erroutc.ads: Allow warning tag in pragma\n+\tWarnings (Off, string).\n+\n+2014-05-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* osint.adb: Fix three error messages to say invalid instead\n+\tof erroneous.\n+\t* par-ch4.adb, exp_aggr.adb, sem_attr.adb, sem_aux.adb, sem_ch3.adb,\n+\tsem_ch5.adb, sem_ch6.adb, sem_ch7.adb, sem_dim.adb, sem_res.adb,\n+\tsem_util.adb, sem_util.ads: Fix incorrect use of erroneous in comments.\n+\n+2014-05-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb, sem_ch13.adb, sem_ch13.ads, sem_ch9.adb,\n+\tsem_ch9.ads: Move discriminant manipulation routines for analysis of\n+\taspect specifications from sem_ch9 to sem_ch13, where they belong.\n+\n 2014-05-21  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_ugn.texi: Clearly document -gnatw.g (GNAT warnings)."}, {"sha": "59c37c35d9b6f11e0fa10a215de7169070c2cc49", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -1339,14 +1339,16 @@ package body Errout is\n       Cur := First_Error_Msg;\n       while Cur /= No_Error_Msg loop\n          declare\n-            CE : Error_Msg_Object renames Errors.Table (Cur);\n+            CE  : Error_Msg_Object renames Errors.Table (Cur);\n+            Tag : constant String := Get_Warning_Tag (Cur);\n \n          begin\n             if (CE.Warn and not CE.Deleted)\n-              and then (Warning_Specifically_Suppressed (CE.Sptr, CE.Text) /=\n+              and then\n+                   (Warning_Specifically_Suppressed (CE.Sptr, CE.Text, Tag) /=\n                                                                    No_String\n-                          or else\n-                        Warning_Specifically_Suppressed (CE.Optr, CE.Text) /=\n+                      or else\n+                    Warning_Specifically_Suppressed (CE.Optr, CE.Text, Tag) /=\n                                                                    No_String)\n             then\n                Delete_Warning (Cur);"}, {"sha": "e0fad22ff05a3f157de824aec16812cef45545a1", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -1457,7 +1457,8 @@ package body Erroutc is\n \n    function Warning_Specifically_Suppressed\n      (Loc : Source_Ptr;\n-      Msg : String_Ptr) return String_Id\n+      Msg : String_Ptr;\n+      Tag : String) return String_Id\n    is\n    begin\n       --  Loop through specific warning suppression entries\n@@ -1473,7 +1474,9 @@ package body Erroutc is\n             if SWE.Config\n               or else (SWE.Start <= Loc and then Loc <= SWE.Stop)\n             then\n-               if Matches (Msg.all, SWE.Msg.all) then\n+               if Matches (Msg.all, SWE.Msg.all)\n+                 or else Matches (Tag, SWE.Msg.all)\n+               then\n                   SWE.Used := True;\n                   return SWE.Reason;\n                end if;"}, {"sha": "219238a5b2e31798ad3b750dad77b5ea0dd2db5e", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -556,12 +556,14 @@ package Erroutc is\n \n    function Warning_Specifically_Suppressed\n      (Loc : Source_Ptr;\n-      Msg : String_Ptr) return String_Id;\n+      Msg : String_Ptr;\n+      Tag : String) return String_Id;\n    --  Determines if given message to be posted at given location is suppressed\n    --  by specific ON/OFF Warnings pragmas specifying this particular message.\n    --  If the warning is not suppressed then No_String is returned, otherwise\n    --  the corresponding warning string is returned (or the null string if no\n-   --  Warning argument was present in the pragma).\n+   --  Warning argument was present in the pragma). Tag is the error message\n+   --  tag for the message in question.\n \n    function Warning_Treated_As_Error (Msg : String) return Boolean;\n    --  Returns True if the warning message Msg matches any of the strings"}, {"sha": "676a6105bf312b87310721f358e257c2dc875037", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -5300,7 +5300,7 @@ package body Exp_Aggr is\n          --       interactions with bootstrapping. That limit is removed by\n          --       use of the No_Implicit_Loops restriction.\n \n-         --    b) It erroneously ends up with the resulting expressions being\n+         --    b) It incorrectly ends up with the resulting expressions being\n          --       considered static when they are not. For example, the\n          --       following test should fail:\n "}, {"sha": "729a8d77ca611aef48168890848d5c6cdedaf001", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -50,7 +50,6 @@ with Sem_Cat;  use Sem_Cat;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch7;  use Sem_Ch7;\n with Sem_Ch8;  use Sem_Ch8;\n-with Sem_Ch9;  use Sem_Ch9;\n with Sem_Ch13; use Sem_Ch13;\n with Sem_Eval; use Sem_Eval;\n with Sem_Mech; use Sem_Mech;"}, {"sha": "0c15982597d482a9c5636aa640a508611ebcb445", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2988,7 +2988,7 @@ package body Osint is\n \n    exception\n       when others =>\n-         Fail (\"erroneous directory spec: \" & Host_Dir);\n+         Fail (\"invalid directory spec: \" & Host_Dir);\n          return null;\n    end To_Canonical_Dir_Spec;\n \n@@ -3081,7 +3081,7 @@ package body Osint is\n \n    exception\n       when others =>\n-         Fail (\"erroneous file spec: \" & Host_File);\n+         Fail (\"invalid file spec: \" & Host_File);\n          return null;\n    end To_Canonical_File_Spec;\n \n@@ -3114,7 +3114,7 @@ package body Osint is\n \n    exception\n       when others =>\n-         Fail (\"erroneous path spec: \" & Host_Path);\n+         Fail (\"invalid path spec: \" & Host_Path);\n          return null;\n    end To_Canonical_Path_Spec;\n "}, {"sha": "7926bd11766e16c410c15ee2ffbe46f0b02f69f5", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -376,7 +376,7 @@ package body Ch4 is\n \n          --  If dot is at end of line and followed by nothing legal,\n          --  then assume end of name and quit (dot will be taken as\n-         --  an erroneous form of some other punctuation by our caller).\n+         --  an incorrect form of some other punctuation by our caller).\n \n          elsif Token_Is_At_Start_Of_Line then\n             Restore_Scan_State (Scan_State);\n@@ -770,11 +770,11 @@ package body Ch4 is\n          Expr_Node := P_Expression_If_OK;\n          goto LP_State_Expr;\n \n-      --  LP_State_Call corresponds to the situation in which at least\n-      --  one instance of Id => Expression has been encountered, so we\n-      --  know that we do not have a name, but rather a call. We enter\n-      --  it with the scan pointer pointing to the next argument to scan,\n-      --  and Arg_List containing the list of arguments scanned so far.\n+      --  LP_State_Call corresponds to the situation in which at least one\n+      --  instance of Id => Expression has been encountered, so we know that\n+      --  we do not have a name, but rather a call. We enter it with the\n+      --  scan pointer pointing to the next argument to scan, and Arg_List\n+      --  containing the list of arguments scanned so far.\n \n       <<LP_State_Call>>\n \n@@ -785,7 +785,7 @@ package body Ch4 is\n             Ident_Node := Token_Node;\n             Scan; -- past Id\n \n-            --  Deal with => (allow := as erroneous substitute)\n+            --  Deal with => (allow := as incorrect substitute)\n \n             if Token = Tok_Arrow or else Token = Tok_Colon_Equal then\n                Arg_Node := New_Node (N_Parameter_Association, Prev_Token_Ptr);"}, {"sha": "7ca8c22c8fbea98045ca2d5ca1478dacdffb583b", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6172,7 +6172,7 @@ package body Sem_Attr is\n                Comp_Or_Discr := Next_Entity (Comp_Or_Discr);\n             end loop;\n \n-            --  Diagnose possible erroneous references\n+            --  Diagnose possible illegal references\n \n             if Present (Comp_Or_Discr) then\n                if Ekind (Comp_Or_Discr) = E_Discriminant then"}, {"sha": "897d99b4d222f4aa39246e451cf246f874dbd8f3", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1008,7 +1008,7 @@ package body Sem_Aux is\n       --  Otherwise we will look around to see if there is some other reason\n       --  for it to be limited, except that if an error was posted on the\n       --  entity, then just assume it is non-limited, because it can cause\n-      --  trouble to recurse into a murky erroneous entity.\n+      --  trouble to recurse into a murky entity resulting from other errors.\n \n       elsif Error_Posted (Ent) then\n          return False;"}, {"sha": "f1c2de17d6f2243c47694b9d9ec0f3152ca13c67", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 100, "deletions": 2, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,7 +48,6 @@ with Sem_Case; use Sem_Case;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch8;  use Sem_Ch8;\n-with Sem_Ch9;  use Sem_Ch9;\n with Sem_Dim;  use Sem_Dim;\n with Sem_Disp; use Sem_Disp;\n with Sem_Eval; use Sem_Eval;\n@@ -10059,6 +10058,24 @@ package body Sem_Ch13 is\n       Unchecked_Conversions.Init;\n    end Initialize;\n \n+   ---------------------------\n+   -- Install_Discriminants --\n+   ---------------------------\n+\n+   procedure Install_Discriminants (E : Entity_Id) is\n+      Disc : Entity_Id;\n+      Prev : Entity_Id;\n+   begin\n+      Disc := First_Discriminant (E);\n+      while Present (Disc) loop\n+         Prev := Current_Entity (Disc);\n+         Set_Current_Entity (Disc);\n+         Set_Is_Immediately_Visible (Disc);\n+         Set_Homonym (Disc, Prev);\n+         Next_Discriminant (Disc);\n+      end loop;\n+   end Install_Discriminants;\n+\n    -------------------------\n    -- Is_Operational_Item --\n    -------------------------\n@@ -10433,6 +10450,24 @@ package body Sem_Ch13 is\n       end if;\n    end New_Stream_Subprogram;\n \n+   ------------------------------------------\n+   -- Push_Scope_And_Install_Discriminants --\n+   ------------------------------------------\n+\n+   procedure Push_Scope_And_Install_Discriminants (E : Entity_Id) is\n+   begin\n+      if Has_Discriminants (E) then\n+         Push_Scope (E);\n+\n+         --  Make discriminants visible for type declarations and protected\n+         --  type declarations, not for subtype declarations (RM 13.1.1 (12/3))\n+\n+         if Nkind (Parent (E)) /= N_Subtype_Declaration then\n+            Install_Discriminants (E);\n+         end if;\n+      end if;\n+   end Push_Scope_And_Install_Discriminants;\n+\n    ------------------------\n    -- Rep_Item_Too_Early --\n    ------------------------\n@@ -11138,6 +11173,69 @@ package body Sem_Ch13 is\n       end if;\n    end Set_Enum_Esize;\n \n+   -----------------------------\n+   -- Uninstall_Discriminants --\n+   -----------------------------\n+\n+   procedure Uninstall_Discriminants (E : Entity_Id) is\n+      Disc  : Entity_Id;\n+      Prev  : Entity_Id;\n+      Outer : Entity_Id;\n+\n+   begin\n+      --  Discriminants have been made visible for type declarations and\n+      --  protected type declarations, not for subtype declarations.\n+\n+      if Nkind (Parent (E)) /= N_Subtype_Declaration then\n+         Disc := First_Discriminant (E);\n+         while Present (Disc) loop\n+            if Disc /= Current_Entity (Disc) then\n+               Prev := Current_Entity (Disc);\n+               while Present (Prev)\n+                 and then Present (Homonym (Prev))\n+                 and then Homonym (Prev) /= Disc\n+               loop\n+                  Prev := Homonym (Prev);\n+               end loop;\n+            else\n+               Prev := Empty;\n+            end if;\n+\n+            Set_Is_Immediately_Visible (Disc, False);\n+\n+            Outer := Homonym (Disc);\n+            while Present (Outer) and then Scope (Outer) = E loop\n+               Outer := Homonym (Outer);\n+            end loop;\n+\n+            --  Reset homonym link of other entities, but do not modify link\n+            --  between entities in current scope, so that the back-end can\n+            --  have a proper count of local overloadings.\n+\n+            if No (Prev) then\n+               Set_Name_Entity_Id (Chars (Disc), Outer);\n+\n+            elsif Scope (Prev) /= Scope (Disc) then\n+               Set_Homonym (Prev,  Outer);\n+            end if;\n+\n+            Next_Discriminant (Disc);\n+         end loop;\n+      end if;\n+   end Uninstall_Discriminants;\n+\n+   -------------------------------------------\n+   -- Uninstall_Discriminants_And_Pop_Scope --\n+   -------------------------------------------\n+\n+   procedure Uninstall_Discriminants_And_Pop_Scope (E : Entity_Id) is\n+   begin\n+      if Has_Discriminants (E) then\n+         Uninstall_Discriminants (E);\n+         Pop_Scope;\n+      end if;\n+   end Uninstall_Discriminants_And_Pop_Scope;\n+\n    ------------------------------\n    -- Validate_Address_Clauses --\n    ------------------------------"}, {"sha": "0f31265b621c369c6cc31f62598bcf2a3173edf1", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -331,4 +331,27 @@ package Sem_Ch13 is\n    --  for First, Next, and Has_Element. Optionally an Element primitive may\n    --  also be defined.\n \n+   -----------------------------------------------------------\n+   --  Visibility of Discriminants in Aspect Specifications --\n+   -----------------------------------------------------------\n+\n+   --  The discriminants of a type are visible when analyzing the aspect\n+   --  specifications of a type declaration or protected type declaration,\n+   --  but not when analyzing those of a subtype declaration. The following\n+   --  routines enforce this distinction.\n+\n+   procedure Install_Discriminants (E : Entity_Id);\n+   --  Make visible the discriminants of type entity E\n+\n+   procedure Push_Scope_And_Install_Discriminants (E : Entity_Id);\n+   --  Push scope E and makes visible the discriminants of type entity E if E\n+   --  has discriminants and is not a subtype.\n+\n+   procedure Uninstall_Discriminants (E : Entity_Id);\n+   --  Remove visibility to the discriminants of type entity E\n+\n+   procedure Uninstall_Discriminants_And_Pop_Scope (E : Entity_Id);\n+   --  Remove visibility to the discriminants of type entity E and pop the\n+   --  scope stack if E has discriminants and is not a subtype.\n+\n end Sem_Ch13;"}, {"sha": "8d53a0c2cf73303227d9bbf7d61d4a1a655ef0ec", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -18184,7 +18184,7 @@ package body Sem_Ch3 is\n \n             if Ekind (Typ) = E_Record_Type_With_Private then\n \n-               --  Handle the following erroneous case:\n+               --  Handle the following illegal usage:\n                --      type Private_Type is tagged private;\n                --   private\n                --      type Private_Type is new Type_Implementing_Iface;"}, {"sha": "41f310d21247bf7ba699f1f9cd7e598cec3be334", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2352,7 +2352,7 @@ package body Sem_Ch5 is\n       --  Analyze the subtype definition and create temporaries for the bounds.\n       --  Do not evaluate the range when preanalyzing a quantified expression\n       --  because bounds expressed as function calls with side effects will be\n-      --  erroneously replicated.\n+      --  incorrectly replicated.\n \n       if Nkind (DS) = N_Range\n         and then Expander_Active"}, {"sha": "0c2bdf4e8d7dcb328d2101ec803ebd54a6b37e8b", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2038,9 +2038,9 @@ package body Sem_Ch6 is\n       Ref_Global  : Node_Id := Empty;\n \n    begin\n-      --  When a subprogram body declaration is erroneous, its defining entity\n-      --  is left unanalyzed. There is nothing left to do in this case because\n-      --  the body lacks a contract.\n+      --  When a subprogram body declaration is illegal, its defining entity is\n+      --  left unanalyzed. There is nothing left to do in this case because the\n+      --  body lacks a contract.\n \n       if not Analyzed (Body_Id) then\n          return;"}, {"sha": "7afe23676c58238c9d542124959f5329c4a77bac", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -917,7 +917,7 @@ package body Sem_Ch7 is\n          Analyze_Aspect_Specifications (N, Id);\n       end if;\n \n-      --  Ada 2005 (AI-217): Check if the package has been erroneously named\n+      --  Ada 2005 (AI-217): Check if the package has been illegally named\n       --  in a limited-with clause of its own context. In this case the error\n       --  has been previously notified by Analyze_Context.\n "}, {"sha": "4894a646cff98451bb5223cfd9ba39d6ca110c29", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 0, "deletions": 99, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -3420,103 +3420,4 @@ package body Sem_Ch9 is\n          Next_Entity (E);\n       end loop;\n    end Install_Declarations;\n-\n-   ---------------------------\n-   -- Install_Discriminants --\n-   ---------------------------\n-\n-   procedure Install_Discriminants (E : Entity_Id) is\n-      Disc : Entity_Id;\n-      Prev : Entity_Id;\n-   begin\n-      Disc := First_Discriminant (E);\n-      while Present (Disc) loop\n-         Prev := Current_Entity (Disc);\n-         Set_Current_Entity (Disc);\n-         Set_Is_Immediately_Visible (Disc);\n-         Set_Homonym (Disc, Prev);\n-         Next_Discriminant (Disc);\n-      end loop;\n-   end Install_Discriminants;\n-\n-   ------------------------------------------\n-   -- Push_Scope_And_Install_Discriminants --\n-   ------------------------------------------\n-\n-   procedure Push_Scope_And_Install_Discriminants (E : Entity_Id) is\n-   begin\n-      if Has_Discriminants (E) then\n-         Push_Scope (E);\n-\n-         --  Make discriminants visible for type declarations and protected\n-         --  type declarations, not for subtype declarations (RM 13.1.1 (12/3))\n-\n-         if Nkind (Parent (E)) /= N_Subtype_Declaration then\n-            Install_Discriminants (E);\n-         end if;\n-      end if;\n-   end Push_Scope_And_Install_Discriminants;\n-\n-   -----------------------------\n-   -- Uninstall_Discriminants --\n-   -----------------------------\n-\n-   procedure Uninstall_Discriminants (E : Entity_Id) is\n-      Disc  : Entity_Id;\n-      Prev  : Entity_Id;\n-      Outer : Entity_Id;\n-\n-   begin\n-      --  Discriminants have been made visible for type declarations and\n-      --  protected type declarations, not for subtype declarations.\n-\n-      if Nkind (Parent (E)) /= N_Subtype_Declaration then\n-         Disc := First_Discriminant (E);\n-         while Present (Disc) loop\n-            if Disc /= Current_Entity (Disc) then\n-               Prev := Current_Entity (Disc);\n-               while Present (Prev)\n-                 and then Present (Homonym (Prev))\n-                 and then Homonym (Prev) /= Disc\n-               loop\n-                  Prev := Homonym (Prev);\n-               end loop;\n-            else\n-               Prev := Empty;\n-            end if;\n-\n-            Set_Is_Immediately_Visible (Disc, False);\n-\n-            Outer := Homonym (Disc);\n-            while Present (Outer) and then Scope (Outer) = E loop\n-               Outer := Homonym (Outer);\n-            end loop;\n-\n-            --  Reset homonym link of other entities, but do not modify link\n-            --  between entities in current scope, so that the back-end can\n-            --  have a proper count of local overloadings.\n-\n-            if No (Prev) then\n-               Set_Name_Entity_Id (Chars (Disc), Outer);\n-\n-            elsif Scope (Prev) /= Scope (Disc) then\n-               Set_Homonym (Prev,  Outer);\n-            end if;\n-\n-            Next_Discriminant (Disc);\n-         end loop;\n-      end if;\n-   end Uninstall_Discriminants;\n-\n-   -------------------------------------------\n-   -- Uninstall_Discriminants_And_Pop_Scope --\n-   -------------------------------------------\n-\n-   procedure Uninstall_Discriminants_And_Pop_Scope (E : Entity_Id) is\n-   begin\n-      if Has_Discriminants (E) then\n-         Uninstall_Discriminants (E);\n-         Pop_Scope;\n-      end if;\n-   end Uninstall_Discriminants_And_Pop_Scope;\n end Sem_Ch9;"}, {"sha": "1a953b60f2c552bfb6434c7d5de2deb2a74d5cb5", "filename": "gcc/ada/sem_ch9.ads", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_ch9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.ads?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -58,20 +58,6 @@ package Sem_Ch9  is\n    --  Make visible in corresponding body the entities defined in a task,\n    --  protected type declaration, or entry declaration.\n \n-   procedure Install_Discriminants (E : Entity_Id);\n-   --  Make visible the discriminants of type entity E\n-\n-   procedure Push_Scope_And_Install_Discriminants (E : Entity_Id);\n-   --  Push scope E and makes visible the discriminants of type entity E if E\n-   --  has discriminants.\n-\n-   procedure Uninstall_Discriminants (E : Entity_Id);\n-   --  Remove visibility to the discriminants of type entity E\n-\n-   procedure Uninstall_Discriminants_And_Pop_Scope (E : Entity_Id);\n-   --  Remove visibility to the discriminants of type entity E and pop the\n-   --  scope stack if E has discriminants.\n-\n    ------------------------------\n    -- Lock Free Data Structure --\n    ------------------------------"}, {"sha": "6bb74ee0714029042b86c009413db193606d9a10", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -772,7 +772,7 @@ package body Sem_Dim is\n \n                Others_Seen := True;\n \n-            --  All other cases are erroneous declarations of dimension names\n+            --  All other cases are illegal declarations of dimension names\n \n             else\n                Error_Msg_NE (\"wrong syntax for aspect&\", Choice, Id);"}, {"sha": "50b7f4843b8f59796758f48fda7de669d774eede", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -4684,7 +4684,7 @@ package body Sem_Res is\n          Check_Restriction (No_Task_Hierarchy, N);\n       end if;\n \n-      --  An erroneous allocator may be rewritten as a raise Program_Error\n+      --  An illegal allocator may be rewritten as a raise Program_Error\n       --  statement.\n \n       if Nkind (N) = N_Allocator then"}, {"sha": "3682d02029693c05fe2ce583a66fba9fee11ec11", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -8241,7 +8241,7 @@ package body Sem_Util is\n       Index := First_Index (Typ);\n       for Indx in 1 .. Ndims loop\n \n-         --  In case of an erroneous index which is not a discrete type, return\n+         --  In case of an illegal index which is not a discrete type, return\n          --  that the type is not static.\n \n          if not Is_Discrete_Type (Etype (Index))"}, {"sha": "13fe68897f62988f2085a0006acf525f92930f29", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a40ec16aeae9e13a96cef15799dd992cd23106/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=77a40ec16aeae9e13a96cef15799dd992cd23106", "patch": "@@ -1451,7 +1451,7 @@ package Sem_Util is\n    procedure Mark_Coextensions (Context_Nod : Node_Id; Root_Nod : Node_Id);\n    --  Given a node which designates the context of analysis and an origin in\n    --  the tree, traverse from Root_Nod and mark all allocators as either\n-   --  dynamic or static depending on Context_Nod. Any erroneous marking is\n+   --  dynamic or static depending on Context_Nod. Any incorrect marking is\n    --  cleaned up during resolution.\n \n    function May_Be_Lvalue (N : Node_Id) return Boolean;"}]}