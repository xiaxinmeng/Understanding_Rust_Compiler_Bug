{"sha": "60bb81e0db60f1a0f6be8ece24a05052aba21b20", "node_id": "C_kwDOANBUbNoAKDYwYmI4MWUwZGI2MGYxYTBmNmJlOGVjZTI0YTA1MDUyYWJhMjFiMjA", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2022-09-06T14:35:53Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-12T08:16:53Z"}, "message": "[Ada] Storage_Error raised analyzing type with call in its range constraint\n\nThis patch corrects a problem in the compiler whereby the determination of\nscope levels during the generation of accessibility checks for function calls\nwithin range constraints leads to a compiler crash due to the type not being\nfully analyzed at the point in which its scope depth must be obtained.\n\ngcc/ada/\n\n\t* sem_util.adb\n\t(Innermost_Master_Scope_Depth): Detect and handle case where scope\n\tdepth is not set on an enclosing scope.", "tree": {"sha": "aa74670f941b3553b5fc7b1ced86c0856cf2d4e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa74670f941b3553b5fc7b1ced86c0856cf2d4e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60bb81e0db60f1a0f6be8ece24a05052aba21b20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60bb81e0db60f1a0f6be8ece24a05052aba21b20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60bb81e0db60f1a0f6be8ece24a05052aba21b20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60bb81e0db60f1a0f6be8ece24a05052aba21b20/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd548d67e7141c29d4a7b81ca893402bc2ef100a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd548d67e7141c29d4a7b81ca893402bc2ef100a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd548d67e7141c29d4a7b81ca893402bc2ef100a"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "b0babeb9d6f19679a6c7d8cfbc6452b054e04e73", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60bb81e0db60f1a0f6be8ece24a05052aba21b20/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60bb81e0db60f1a0f6be8ece24a05052aba21b20/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=60bb81e0db60f1a0f6be8ece24a05052aba21b20", "patch": "@@ -316,8 +316,20 @@ package body Sem_Util is\n                --  Ignore transient scopes made during expansion\n \n                if Comes_From_Source (Node_Par) then\n-                  return\n-                    Scope_Depth (Encl_Scop) + Master_Lvl_Modifier;\n+                  --  Note that in some rare cases the scope depth may not be\n+                  --  set, for example, when we are in the middle of analyzing\n+                  --  a type and the enclosing scope is said type. So, instead,\n+                  --  continue to move up the parent chain since the scope\n+                  --  depth of the type's parent is the same as that of the\n+                  --  type.\n+\n+                  if not Scope_Depth_Set (Encl_Scop) then\n+                     pragma Assert (Nkind (Parent (Encl_Scop))\n+                                     = N_Full_Type_Declaration);\n+                  else\n+                     return\n+                       Scope_Depth (Encl_Scop) + Master_Lvl_Modifier;\n+                  end if;\n                end if;\n \n             --  For a return statement within a function, return"}]}