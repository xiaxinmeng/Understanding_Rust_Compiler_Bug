{"sha": "655d51578160132920f0f88daadf8c9453c20045", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU1ZDUxNTc4MTYwMTMyOTIwZjBmODhkYWFkZjhjOTQ1M2MyMDA0NQ==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kirill.yukhin@intel.com", "date": "2011-09-21T15:57:04Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-09-21T15:57:04Z"}, "message": "Add MULX intrinsics.\n\ngcc/\n\n2011-09-21  Kirill Yukhin  <kirill.yukhin@intel.com>\n\n\t* config/i386/bmi2intrin.h (_mulx_u64): New.\n\t(_mulx_u32): Ditto.\n\ngcc/testsuite/\n\n2011-09-21  Kirill Yukhin  <kirill.yukhin@intel.com>\n\n\t* gcc.target/i386/bmi2-mulx32-2.c: New test.\n\t* gcc.target/i386/bmi2-mulx32-2a.c: Ditto.\n\t* gcc.target/i386/bmi2-mulx64-2.c: Ditto.\n\t* gcc.target/i386/bmi2-mulx64-2a.c: Ditto.\n\nFrom-SVN: r179050", "tree": {"sha": "65bbc87af8014e7e630a85e38a43a998d31b039a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65bbc87af8014e7e630a85e38a43a998d31b039a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/655d51578160132920f0f88daadf8c9453c20045", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/655d51578160132920f0f88daadf8c9453c20045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/655d51578160132920f0f88daadf8c9453c20045", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/655d51578160132920f0f88daadf8c9453c20045/comments", "author": null, "committer": null, "parents": [{"sha": "88cc02ff69c4528b0d8a7c82f7b20aaa1a88dc1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88cc02ff69c4528b0d8a7c82f7b20aaa1a88dc1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88cc02ff69c4528b0d8a7c82f7b20aaa1a88dc1b"}], "stats": {"total": 145, "additions": 144, "deletions": 1}, "files": [{"sha": "8a3c23adf565a74c931a16dc1ab49fc0c15e0171", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655d51578160132920f0f88daadf8c9453c20045/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655d51578160132920f0f88daadf8c9453c20045/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=655d51578160132920f0f88daadf8c9453c20045", "patch": "@@ -1,3 +1,8 @@\n+2011-09-21  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\t* config/i386/bmi2intrin.h (_mulx_u64): New.\n+\t(_mulx_u32): Ditto.\n+\n 2011-09-21  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/50433"}, {"sha": "4c13a70adabe735cc86187fe0fe6cfdb46b0f553", "filename": "gcc/config/i386/bmi2intrin.h", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655d51578160132920f0f88daadf8c9453c20045/gcc%2Fconfig%2Fi386%2Fbmi2intrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655d51578160132920f0f88daadf8c9453c20045/gcc%2Fconfig%2Fi386%2Fbmi2intrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbmi2intrin.h?ref=655d51578160132920f0f88daadf8c9453c20045", "patch": "@@ -76,6 +76,27 @@ _pext_u64 (unsigned long long __X, unsigned long long __Y)\n   return __builtin_ia32_pext_di (__X, __Y);\n }\n \n-#endif /* __x86_64__  */\n+extern __inline unsigned long long\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mulx_u64 (unsigned long long __X, unsigned long long __Y,\n+\t   unsigned long long *__P)\n+{\n+  unsigned __int128 __res = (unsigned __int128) __X * __Y;\n+  *__P = (unsigned long long) (__res >> 64);\n+  return (unsigned long long) __res;\n+}\n+\n+#else /* !__x86_64__ */\n+\n+extern __inline unsigned int\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mulx_u32 (unsigned int __X, unsigned int __Y, unsigned int *__P)\n+{\n+  unsigned long long __res = (unsigned long long) __X * __Y;\n+  *__P = (unsigned int) (__res >> 32);\n+  return (unsigned int) __res;\n+}\n+\n+#endif /* !__x86_64__  */\n \n #endif /* _BMI2INTRIN_H_INCLUDED */"}, {"sha": "7022c0b17cbd53458272b5e39afa8facb09bda69", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655d51578160132920f0f88daadf8c9453c20045/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655d51578160132920f0f88daadf8c9453c20045/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=655d51578160132920f0f88daadf8c9453c20045", "patch": "@@ -1,3 +1,10 @@\n+2011-09-21  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\t* gcc.target/i386/bmi2-mulx32-2.c: New test.\n+\t* gcc.target/i386/bmi2-mulx32-2a.c: Ditto.\n+\t* gcc.target/i386/bmi2-mulx64-2.c: Ditto.\n+\t* gcc.target/i386/bmi2-mulx64-2a.c: Ditto.\n+\n 2011-09-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/opt19.adb: New test."}, {"sha": "c9f159e064f7ed2671d85b25e10c9403ccb9768d", "filename": "gcc/testsuite/gcc.target/i386/bmi2-mulx32-2.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655d51578160132920f0f88daadf8c9453c20045/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-mulx32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655d51578160132920f0f88daadf8c9453c20045/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-mulx32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-mulx32-2.c?ref=655d51578160132920f0f88daadf8c9453c20045", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do run { target { bmi2 && { ia32 } } } } */\n+/* { dg-options \"-mbmi2 -O2\" } */\n+\n+#include <x86intrin.h>\n+\n+#include \"bmi2-check.h\"\n+\n+__attribute__((noinline))\n+unsigned long long\n+calc_mul_u32 (unsigned volatile a, unsigned b)\n+{\n+  unsigned long long res = 0;\n+  int i;\n+  for (i = 0; i < b; ++i)\n+    res += a;\n+\n+  return res;\n+}\n+\n+__attribute__((noinline))\n+unsigned calc_mulx_u32 (unsigned x, unsigned y, unsigned *res_h)\n+{\n+  return (unsigned) _mulx_u32 (x, y, res_h);\n+}\n+\n+static void\n+bmi2_test ()\n+{\n+  unsigned i;\n+  unsigned a = 0xce7ace0;\n+  unsigned b = 0xfacefff;\n+  unsigned res_l, res_h;\n+  unsigned long long res, res_ref;\n+\n+  for (i = 0; i < 5; ++i) {\n+    a = a * (i + 1);\n+    b = b / (i + 1);\n+\n+    res_ref = calc_mul_u32 (a, b);\n+    res_l = calc_mulx_u32 (a, b, &res_h);\n+\n+    res = ((unsigned long long) res_h << 32) | res_l;\n+\n+    if (res != res_ref)\n+      abort();\n+  }\n+}"}, {"sha": "356d593c7eb4161a630e48eb19e30a75fabb14a8", "filename": "gcc/testsuite/gcc.target/i386/bmi2-mulx32-2a.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655d51578160132920f0f88daadf8c9453c20045/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-mulx32-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655d51578160132920f0f88daadf8c9453c20045/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-mulx32-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-mulx32-2a.c?ref=655d51578160132920f0f88daadf8c9453c20045", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile { target { ia32 } } } */\n+/* { dg-options \"-O2 -mbmi2\" } */\n+\n+#include \"bmi2-mulx32-2.c\"\n+\n+/* { dg-final { scan-assembler-times \"mulx\\[ \\\\t\\]+\\[^\\n\\]*\" 1 } } */"}, {"sha": "55b3554628b635f33570fa513e5d3bdb0fcdc285", "filename": "gcc/testsuite/gcc.target/i386/bmi2-mulx64-2.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655d51578160132920f0f88daadf8c9453c20045/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-mulx64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655d51578160132920f0f88daadf8c9453c20045/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-mulx64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-mulx64-2.c?ref=655d51578160132920f0f88daadf8c9453c20045", "patch": "@@ -0,0 +1,51 @@\n+/* { dg-do run { target { bmi2 && { ! ia32 } } } } */\n+/* { dg-options \"-mbmi2 -O2\" } */\n+\n+#include <x86intrin.h>\n+#include \"bmi2-check.h\"\n+\n+__attribute__((noinline))\n+unsigned __int128\n+calc_mul_u64 (unsigned long long volatile a, unsigned long long b)\n+{\n+  unsigned __int128 res = 0;\n+  int i;\n+  for (i = 0; i < b; ++i)\n+    res += (unsigned __int128) a;\n+\n+  return res;\n+}\n+\n+__attribute__((noinline))\n+unsigned long long\n+calc_mulx_u64 (unsigned long long x,\n+\t       unsigned long long y,\n+\t       unsigned long long *res_h)\n+{\n+  return _mulx_u64 (x, y, res_h);\n+}\n+\n+\n+static void\n+bmi2_test ()\n+{\n+  unsigned i;\n+  unsigned long long a = 0xce7ace0ce7ace0;\n+  unsigned long long b = 0xface;\n+  unsigned long long res_l, res_h;\n+  unsigned __int128 res, res_ref;\n+\n+  for (i=0; i<5; ++i) {\n+    a = a * (i + 1);\n+    b = b / (i + 1);\n+\n+    res_ref = calc_mul_u64 (a, b);\n+\n+    res_l = calc_mulx_u64 (a, b, &res_h);\n+\n+    res = ((unsigned __int128) res_h << 64) | res_l;\n+\n+    if (res != res_ref)\n+      abort();\n+  }\n+}"}, {"sha": "d8b3e0eccae8e8b20450023f5e5787cc2b7d4165", "filename": "gcc/testsuite/gcc.target/i386/bmi2-mulx64-2a.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655d51578160132920f0f88daadf8c9453c20045/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-mulx64-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655d51578160132920f0f88daadf8c9453c20045/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-mulx64-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-mulx64-2a.c?ref=655d51578160132920f0f88daadf8c9453c20045", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mbmi2\" } */\n+\n+#include \"bmi2-mulx64-2.c\"\n+\n+/* { dg-final { scan-assembler-times \"mulx\\[ \\\\t\\]+\\[^\\n\\]*\" 1 } } */"}]}