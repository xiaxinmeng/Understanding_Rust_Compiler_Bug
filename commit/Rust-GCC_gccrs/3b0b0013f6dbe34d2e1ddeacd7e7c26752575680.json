{"sha": "3b0b0013f6dbe34d2e1ddeacd7e7c26752575680", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IwYjAwMTNmNmRiZTM0ZDJlMWRkZWFjZDdlN2MyNjc1MjU3NTY4MA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-07-28T19:54:06Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-07-28T19:54:06Z"}, "message": "target-insns.def (eh_return): New targetm instruction pattern.\n\ngcc/\n\t* target-insns.def (eh_return): New targetm instruction pattern.\n\t* except.c (expand_eh_return): Use it instead of HAVE_*/gen_*\n\tinterface.\n\t* function.c (thread_prologue_and_epilogue_insns): Remove\n\tpreprocessor condition.\n\nFrom-SVN: r226322", "tree": {"sha": "3dbb6e90be69d5c5eb3e51551fbd506f50407225", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dbb6e90be69d5c5eb3e51551fbd506f50407225"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b0b0013f6dbe34d2e1ddeacd7e7c26752575680", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b0b0013f6dbe34d2e1ddeacd7e7c26752575680", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b0b0013f6dbe34d2e1ddeacd7e7c26752575680", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b0b0013f6dbe34d2e1ddeacd7e7c26752575680/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "902628047cb9763809ef2c3155cbf321e08c2656", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/902628047cb9763809ef2c3155cbf321e08c2656", "html_url": "https://github.com/Rust-GCC/gccrs/commit/902628047cb9763809ef2c3155cbf321e08c2656"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "d94dfce15aa106a6f9dce7e6b8a005261c7366f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b0b0013f6dbe34d2e1ddeacd7e7c26752575680/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b0b0013f6dbe34d2e1ddeacd7e7c26752575680/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b0b0013f6dbe34d2e1ddeacd7e7c26752575680", "patch": "@@ -1,3 +1,11 @@\n+2015-07-28  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* target-insns.def (eh_return): New targetm instruction pattern.\n+\t* except.c (expand_eh_return): Use it instead of HAVE_*/gen_*\n+\tinterface.\n+\t* function.c (thread_prologue_and_epilogue_insns): Remove\n+\tpreprocessor condition.\n+\n 2015-07-28  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* target-insns.def (indirect_jump): New targetm instruction pattern."}, {"sha": "d59c539908749bd0d225fee15150b2e3ce5613f1", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b0b0013f6dbe34d2e1ddeacd7e7c26752575680/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b0b0013f6dbe34d2e1ddeacd7e7c26752575680/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=3b0b0013f6dbe34d2e1ddeacd7e7c26752575680", "patch": "@@ -2265,11 +2265,9 @@ expand_eh_return (void)\n   emit_move_insn (EH_RETURN_STACKADJ_RTX, crtl->eh.ehr_stackadj);\n #endif\n \n-#ifdef HAVE_eh_return\n-  if (HAVE_eh_return)\n-    emit_insn (gen_eh_return (crtl->eh.ehr_handler));\n+  if (targetm.have_eh_return ())\n+    emit_insn (targetm.gen_eh_return (crtl->eh.ehr_handler));\n   else\n-#endif\n     {\n #ifdef EH_RETURN_HANDLER_RTX\n       emit_move_insn (EH_RETURN_HANDLER_RTX, crtl->eh.ehr_handler);"}, {"sha": "536de195acfd1e01671507f3fe8284b678a1fad5", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b0b0013f6dbe34d2e1ddeacd7e7c26752575680/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b0b0013f6dbe34d2e1ddeacd7e7c26752575680/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=3b0b0013f6dbe34d2e1ddeacd7e7c26752575680", "patch": "@@ -5936,7 +5936,6 @@ thread_prologue_and_epilogue_insns (void)\n      uses the flag in the meantime.  */\n   epilogue_completed = 1;\n \n-#ifdef HAVE_eh_return\n   /* Find non-fallthru edges that end with EH_RETURN instructions.  On\n      some targets, these get split to a special version of the epilogue\n      code.  In order to be able to properly annotate these with unwind\n@@ -5960,7 +5959,6 @@ thread_prologue_and_epilogue_insns (void)\n       record_insns (NEXT_INSN (prev), NEXT_INSN (trial), &epilogue_insn_hash);\n       emit_note_after (NOTE_INSN_EPILOGUE_BEG, prev);\n     }\n-#endif\n \n   /* If nothing falls through into the exit block, we don't need an\n      epilogue.  */"}, {"sha": "df76a6e411d51a22c9cd878598924e7ae22ffd43", "filename": "gcc/target-insns.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b0b0013f6dbe34d2e1ddeacd7e7c26752575680/gcc%2Ftarget-insns.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b0b0013f6dbe34d2e1ddeacd7e7c26752575680/gcc%2Ftarget-insns.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-insns.def?ref=3b0b0013f6dbe34d2e1ddeacd7e7c26752575680", "patch": "@@ -40,6 +40,7 @@ DEF_TARGET_INSN (check_stack, (rtx x0))\n DEF_TARGET_INSN (clear_cache, (rtx x0, rtx x1))\n DEF_TARGET_INSN (doloop_begin, (rtx x0, rtx x1))\n DEF_TARGET_INSN (doloop_end, (rtx x0, rtx x1))\n+DEF_TARGET_INSN (eh_return, (rtx x0))\n DEF_TARGET_INSN (epilogue, (void))\n DEF_TARGET_INSN (exception_receiver, (void))\n DEF_TARGET_INSN (extv, (rtx x0, rtx x1, rtx x2, rtx x3))"}]}