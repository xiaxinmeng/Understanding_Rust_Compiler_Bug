{"sha": "2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ0YzNhZjk0Zjg0Yzg3NGNmZGRjNzUzZGMwZjM0ZWJmN2ZjMTFkOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-21T09:09:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-21T09:13:54Z"}, "message": "Fix AIX libstdc++ semaphore support [PR100164]\n\n> > The #error would not be hit if _GLIBCXX_HAVE_POSIX_SEMAPHORE were defined,\n> > but it shows up in your error report.\n\n> You now have pinpointed the problem.\n\n> It's not that AIX doesn't have semaphore, but that the code previously\n> had a fallback that hid a bug in the macros:\n\n  // Use futex if available and didn't force use of POSIX\n  using __fast_semaphore = __atomic_semaphore<__detail::__platform_wait_t>;\n  using __fast_semaphore = __platform_semaphore;\n  using __fast_semaphore = __atomic_semaphore<ptrdiff_t>;\n\n> The problem is that libstdc++ configure defines\n> _GLIBCXX_HAVE_POSIX_SEMAPHORE in config.h.  libstdc++ uses sed to\n> rewrite config.h to c++config.h and prepends _GLIBCXX_, so c++config.h\n> contains\n\n> And bits/semaphore_base.h is not testing that corrupted macro.  Either\n> semaphore_base.h needs to test for the corrupted macro, or libtsdc++\n> configure needs to define HAVE_POSIX_SEMAPHORE without itself\n> prepending _GLIBCXX_  so that the c++config.h rewriting works\n> correctly and defines the correct macro for semaphore_base.h.\n\nThe include/Makefile.am sed is:\n        sed -e 's/HAVE_/_GLIBCXX_HAVE_/g' \\\n            -e 's/PACKAGE/_GLIBCXX_PACKAGE/g' \\\n            -e 's/VERSION/_GLIBCXX_VERSION/g' \\\n            -e 's/WORDS_/_GLIBCXX_WORDS_/g' \\\n            -e 's/_DARWIN_USE_64_BIT_INODE/_GLIBCXX_DARWIN_USE_64_BIT_INODE/g' \\\n            -e 's/_FILE_OFFSET_BITS/_GLIBCXX_FILE_OFFSET_BITS/g' \\\n            -e 's/_LARGE_FILES/_GLIBCXX_LARGE_FILES/g' \\\n            -e 's/ICONV_CONST/_GLIBCXX_ICONV_CONST/g' \\\n            -e '/[       ]_GLIBCXX_LONG_DOUBLE_COMPAT[   ]/d' \\\n            -e '/[       ]_GLIBCXX_LONG_DOUBLE_ALT128_COMPAT[    ]/d' \\\n            < ${CONFIG_HEADER} >> $@ ;\\\nso for many macros one needs _GLIBCXX_ prefixes already in configure,\nas can be seen in grep AC_DEFINE.*_GLIBCXX configure.ac acinclude.m4\nBut _GLIBCXX_HAVE_POSIX_SEMAPHORE is the only one that shouldn't have\nthat prefix because the sed is adding that.\nE.g. on i686-linux, I see\ngrep _GLIBCXX__GLIBCXX c++config.h\nthat proves it is the only broken one.\n\nSo this change fixes the acinclude.m4 side.\n\n2021-04-21  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR libstdc++/100164\n\t* acinclude.m4: For POSIX semaphores AC_DEFINE HAVE_POSIX_SEMAPHORE\n\trather than _GLIBCXX_HAVE_POSIX_SEMAPHORE.\n\t* configure: Regenerated.\n\t* config.h.in: Regenerated.", "tree": {"sha": "0c2846199cd8422a5c2c912460c746ff7279d9ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c2846199cd8422a5c2c912460c746ff7279d9ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bf8cd9d5e8acf6fd90a14f832bb2d5de97449b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bf8cd9d5e8acf6fd90a14f832bb2d5de97449b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bf8cd9d5e8acf6fd90a14f832bb2d5de97449b3"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "1c0a4c130525466bf12fd6892fb624d0b95636de", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9", "patch": "@@ -4097,7 +4097,7 @@ AC_DEFUN([GLIBCXX_CHECK_GTHREADS], [\n       [ac_have_posix_semaphore=no])\n \n   if test $ac_have_posix_semaphore = yes ; then\n-    AC_DEFINE(_GLIBCXX_HAVE_POSIX_SEMAPHORE,\n+    AC_DEFINE(HAVE_POSIX_SEMAPHORE,\n \t      1,\n \t      [Define to 1 if POSIX Semaphores with sem_timedwait are available in <semaphore.h>.])\n   fi"}, {"sha": "37b56b82b0ea35c1ecc697d0c1cc9fb2bc6400f6", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9", "patch": "@@ -291,6 +291,10 @@\n /* Define to 1 if you have the `posix_memalign' function. */\n #undef HAVE_POSIX_MEMALIGN\n \n+/* Define to 1 if POSIX Semaphores with sem_timedwait are available in\n+   <semaphore.h>. */\n+#undef HAVE_POSIX_SEMAPHORE\n+\n /* Define to 1 if you have the `powf' function. */\n #undef HAVE_POWF\n \n@@ -818,10 +822,6 @@\n /* Define if gthreads library is available. */\n #undef _GLIBCXX_HAS_GTHREADS\n \n-/* Define to 1 if POSIX Semaphores with sem_timedwait are available in\n-   <semaphore.h>. */\n-#undef _GLIBCXX_HAVE_POSIX_SEMAPHORE\n-\n /* Define to 1 if a full hosted library is built, or 0 if freestanding. */\n #undef _GLIBCXX_HOSTED\n "}, {"sha": "326a279c54f218ee55a62aad28b2ef12009e1bf2", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=2d4c3af94f84c874cfddc753dc0f34ebf7fc11d9", "patch": "@@ -75836,7 +75836,7 @@ fi\n \n   if test $ac_have_posix_semaphore = yes ; then\n \n-$as_echo \"#define _GLIBCXX_HAVE_POSIX_SEMAPHORE 1\" >>confdefs.h\n+$as_echo \"#define HAVE_POSIX_SEMAPHORE 1\" >>confdefs.h\n \n   fi\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_have_posix_semaphore\" >&5"}]}