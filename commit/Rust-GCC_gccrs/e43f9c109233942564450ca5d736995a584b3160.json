{"sha": "e43f9c109233942564450ca5d736995a584b3160", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQzZjljMTA5MjMzOTQyNTY0NDUwY2E1ZDczNjk5NWE1ODRiMzE2MA==", "commit": {"author": {"name": "Mumit Khan", "email": "khan@xraylith.wisc.edu", "date": "1999-06-21T04:52:50Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-06-21T04:52:50Z"}, "message": "winnt.c (exports_head): New static variable.\n\n        * i386/winnt.c (exports_head): New static variable.\n        (i386_pe_record_exported_symbol): New function.\n        (i386_pe_asm_file_end): Use.\n        * i386/cygwin.h (ASM_OUTPUT_COMMON): Record the exported\n        symbols to be emitted at end of assembly.\n        (ASM_DECLARE_OBJECT_NAME): Likewise.\n        (ASM_DECLARE_FUNCTION_NAME): Likewise.\n\nFrom-SVN: r27639", "tree": {"sha": "5db0fed3f3e55665a956f15a9b1959900a0d001e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5db0fed3f3e55665a956f15a9b1959900a0d001e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e43f9c109233942564450ca5d736995a584b3160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43f9c109233942564450ca5d736995a584b3160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e43f9c109233942564450ca5d736995a584b3160", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43f9c109233942564450ca5d736995a584b3160/comments", "author": null, "committer": null, "parents": [{"sha": "6000b42b218b075fe08b1cb9c6c7e43d595e6ac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6000b42b218b075fe08b1cb9c6c7e43d595e6ac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6000b42b218b075fe08b1cb9c6c7e43d595e6ac9"}], "stats": {"total": 62, "additions": 43, "deletions": 19}, "files": [{"sha": "e0f21f7a0e28a38c766c40adb3c86bf55b4f6863", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43f9c109233942564450ca5d736995a584b3160/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43f9c109233942564450ca5d736995a584b3160/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e43f9c109233942564450ca5d736995a584b3160", "patch": "@@ -1,5 +1,13 @@\n Mon Jun 21 05:33:15 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \n+\t* i386/winnt.c (exports_head): New static variable.\n+\t(i386_pe_record_exported_symbol): New function.\n+\t(i386_pe_asm_file_end): Use.\n+\t* i386/cygwin.h (ASM_OUTPUT_COMMON): Record the exported\n+\tsymbols to be emitted at end of assembly.\n+\t(ASM_DECLARE_OBJECT_NAME): Likewise.\n+\t(ASM_DECLARE_FUNCTION_NAME): Likewise.\n+\n \t* i386/uwin.h (CPP_SPEC): Use -idirafter instead -iprefix and\n \t-iwithprefix.\n "}, {"sha": "dbea466bc863d053d175c7a1836a1790d73452cc", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43f9c109233942564450ca5d736995a584b3160/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43f9c109233942564450ca5d736995a584b3160/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=e43f9c109233942564450ca5d736995a584b3160", "patch": "@@ -326,11 +326,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_COMMON(STREAM, NAME, SIZE, ROUNDED)\t\\\n do {\t\t\t\t\t\t\t\\\n   if (i386_pe_dllexport_name_p (NAME))\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      drectve_section ();\t\t\t\t\\\n-      fprintf ((STREAM), \"\\t.ascii \\\" -export:%s\\\"\\n\",\t\\\n-               I386_PE_STRIP_ENCODING (NAME));\t\t\\\n-    }\t\t\t\t\t\t\t\\\n+    i386_pe_record_exported_symbol (NAME);\t\t\\\n   if (! i386_pe_dllimport_name_p (NAME))\t\t\\\n     {\t\t\t\t\t\t\t\\\n       fprintf ((STREAM), \"\\t.comm\\t\"); \t\t\t\\\n@@ -345,13 +341,7 @@ do {\t\t\t\t\t\t\t\\\n #define ASM_DECLARE_OBJECT_NAME(STREAM, NAME, DECL) \t\\\n do {\t\t\t\t\t\t\t\\\n   if (i386_pe_dllexport_name_p (NAME))\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      enum in_section save_section = in_section;\t\\\n-      drectve_section ();\t\t\t\t\\\n-      fprintf ((STREAM), \"\\t.ascii \\\" -export:%s\\\"\\n\",\t\\\n-               I386_PE_STRIP_ENCODING (NAME));\t\t\\\n-      switch_to_section (save_section, (DECL));\t\t\\\n-    }\t\t\t\t\t\t\t\\\n+    i386_pe_record_exported_symbol (NAME);\t\t\\\n   ASM_OUTPUT_LABEL ((STREAM), (NAME));\t\t\t\\\n } while (0)\n \n@@ -447,12 +437,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       if (i386_pe_dllexport_name_p (NAME))\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  drectve_section ();\t\t\t\t\t\t\\\n-\t  fprintf ((FILE), \"\\t.ascii \\\" -export:%s\\\"\\n\", \t\t\\\n-\t\t   I386_PE_STRIP_ENCODING (NAME));\t\t\t\\\n-\t  function_section (DECL);\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n+\ti386_pe_record_exported_symbol (NAME);\t\t\t\t\\\n       if (write_symbols != SDB_DEBUG)\t\t\t\t\t\\\n \ti386_pe_declare_function_type (FILE, NAME, TREE_PUBLIC (DECL));\t\\\n       ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n@@ -518,6 +503,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n extern void i386_pe_record_external_function PROTO((char *));\n extern void i386_pe_declare_function_type STDIO_PROTO((FILE *, char *, int));\n+extern void i386_pe_record_exported_symbol PROTO((char *));\n extern void i386_pe_asm_file_end STDIO_PROTO((FILE *));\n \n /* For Win32 ABI compatibility */"}, {"sha": "24d8617f8dfa01c83207358c1c229045c24cfd76", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43f9c109233942564450ca5d736995a584b3160/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43f9c109233942564450ca5d736995a584b3160/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=e43f9c109233942564450ca5d736995a584b3160", "patch": "@@ -545,8 +545,29 @@ i386_pe_record_external_function (name)\n   extern_head = p;\n }\n \n+static struct extern_list *exports_head;\n+\n+/* Assemble an export symbol entry.  We need to keep a list of\n+   these, so that we can output the export list at the end of the\n+   assembly.  We used to output these export symbols in each function,\n+   but that causes problems with GNU ld when the sections are \n+   linkonce.  */\n+\n+void\n+i386_pe_record_exported_symbol (name)\n+     char *name;\n+{\n+  struct extern_list *p;\n+\n+  p = (struct extern_list *) permalloc (sizeof *p);\n+  p->next = exports_head;\n+  p->name = name;\n+  exports_head = p;\n+}\n+\n /* This is called at the end of assembly.  For each external function\n-   which has not been defined, we output a declaration now.  */\n+   which has not been defined, we output a declaration now.  We also\n+   output the .drectve section.  */\n \n void\n i386_pe_asm_file_end (file)\n@@ -567,4 +588,13 @@ i386_pe_asm_file_end (file)\n \t  i386_pe_declare_function_type (file, p->name, TREE_PUBLIC (decl));\n \t}\n     }\n+\n+  if (exports_head)\n+    drectve_section ();\n+  for (p = exports_head; p != NULL; p = p->next)\n+    {\n+      fprintf (file, \"\\t.ascii \\\" -export:%s\\\"\\n\",\n+               I386_PE_STRIP_ENCODING (p->name));\n+    }\n }\n+"}]}