{"sha": "bf243ea70d6d2f7f7c0cb10144ed4ca88be66db8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYyNDNlYTcwZDZkMmY3ZjdjMGNiMTAxNDRlZDRjYTg4YmU2NmRiOA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-12-05T00:21:12Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-12-05T00:21:12Z"}, "message": "ipa.c (cgraph_externally_visible_p): Do not localize builtins and functions with user asm defined names.\n\n\n\t* ipa.c (cgraph_externally_visible_p): Do not localize builtins\n\tand functions with user asm defined names.\n\t(varpool_externally_visible_p): Do not localize vars with user\n\tasm defined names.\n\nFrom-SVN: r167465", "tree": {"sha": "6c77de6e6dde1df685ac253d4609f568169d3ac4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c77de6e6dde1df685ac253d4609f568169d3ac4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf243ea70d6d2f7f7c0cb10144ed4ca88be66db8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf243ea70d6d2f7f7c0cb10144ed4ca88be66db8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf243ea70d6d2f7f7c0cb10144ed4ca88be66db8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf243ea70d6d2f7f7c0cb10144ed4ca88be66db8/comments", "author": null, "committer": null, "parents": [{"sha": "422ff5a2062922f3e587176ca031a4bb871eddf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/422ff5a2062922f3e587176ca031a4bb871eddf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/422ff5a2062922f3e587176ca031a4bb871eddf7"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "c9a578d58414a6f5394cd2e285a92d9c7721dea4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf243ea70d6d2f7f7c0cb10144ed4ca88be66db8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf243ea70d6d2f7f7c0cb10144ed4ca88be66db8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf243ea70d6d2f7f7c0cb10144ed4ca88be66db8", "patch": "@@ -1,3 +1,10 @@\n+2010-12-03  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa.c (cgraph_externally_visible_p): Do not localize builtins\n+\tand functions with user asm defined names.\n+\t(varpool_externally_visible_p): Do not localize vars with user\n+\tasm defined names.\n+\n 2010-12-03  Jan Hubicka  <jh@suse.cz>\n \n \t* dwarf2asm.c (dw2_output_indirect_constant_1): Set DECL_ASSEMBLER_NAME"}, {"sha": "5f39904f00e75da20620efc2d2694f63acf6b21f", "filename": "gcc/ipa.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf243ea70d6d2f7f7c0cb10144ed4ca88be66db8/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf243ea70d6d2f7f7c0cb10144ed4ca88be66db8/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=bf243ea70d6d2f7f7c0cb10144ed4ca88be66db8", "patch": "@@ -655,6 +655,22 @@ cgraph_externally_visible_p (struct cgraph_node *node, bool whole_program, bool\n   if (aliased)\n     return true;\n \n+  /* Do not try to localize built-in functions yet.  One of problems is that we\n+     end up mangling their asm for WHOPR that makes it impossible to call them\n+     using the implicit built-in declarations anymore.  Similarly this enables\n+     us to remove them as unreachable before actual calls may appear during\n+     expansion or folding.  */\n+  if (DECL_BUILT_IN (node->decl))\n+    return true;\n+\n+  /* FIXME: We get wrong symbols with asm aliases in callgraph and LTO.\n+     This is because very little of code knows that assembler name needs to\n+     mangled.  Avoid touching declarations with user asm name set to mask\n+     some of the problems.  */\n+  if (DECL_ASSEMBLER_NAME_SET_P (node->decl)\n+      && IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (node->decl))[0]=='*')\n+    return true;\n+\n   /* If linker counts on us, we must preserve the function.  */\n   if (cgraph_used_from_object_file_p (node))\n     return true;\n@@ -721,6 +737,14 @@ varpool_externally_visible_p (struct varpool_node *vnode, bool aliased)\n   if (varpool_used_from_object_file_p (vnode))\n     return true;\n \n+  /* FIXME: We get wrong symbols with asm aliases in callgraph and LTO.\n+     This is because very little of code knows that assembler name needs to\n+     mangled.  Avoid touching declarations with user asm name set to mask\n+     some of the problems.  */\n+  if (DECL_ASSEMBLER_NAME_SET_P (vnode->decl)\n+      && IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (vnode->decl))[0]=='*')\n+    return true;\n+\n   if (DECL_PRESERVE_P (vnode->decl))\n     return true;\n   if (lookup_attribute (\"externally_visible\","}]}