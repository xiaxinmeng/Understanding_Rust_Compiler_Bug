{"sha": "0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQzNGNjYjdmMmMxMWJiMTNkYWUxNTZiMDViNGNhNGNjZmYwZWRhMQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@cygnus.com", "date": "1999-01-06T16:50:39Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-01-06T16:50:39Z"}, "message": "lex.h: Moved static function declarations to lex.c, to shut up some -Wall warnings.\n\n\ufffd\n\t* lex.h:  Moved static function declarations to lex.c,\n\tto shut up some -Wall warnings.\n\t* lex.c:  Static function declarations moved here.\n\t* jcf-dump.c:  Small fixes to shut up -Wall warnings.\n\nFrom-SVN: r24518", "tree": {"sha": "f149c5d2e99ff5a913b97b68e0a9b709ad068f39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f149c5d2e99ff5a913b97b68e0a9b709ad068f39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1/comments", "author": null, "committer": null, "parents": [{"sha": "90e6a802fc1cde08d2070104fced961ae96f0e7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90e6a802fc1cde08d2070104fced961ae96f0e7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90e6a802fc1cde08d2070104fced961ae96f0e7c"}], "stats": {"total": 65, "additions": 35, "deletions": 30}, "files": [{"sha": "32fa2da498a6fa2c396bc6045a125d04a9dea455", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1", "patch": "@@ -1,3 +1,10 @@\n+Wed Jan  6 16:20:06 1999  Per Bothner  <bothner@cygnus.com>\n+\n+\t* lex.h:  Moved static function declarations to lex.c,\n+\tto shut up some -Wall warnings.\n+\t* lex.c:  Static function declarations moved here.\n+\t* jcf-dump.c:  Small fixes to shut up -Wall warnings.\n+\n Tue Jan  5 22:15:40 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n         * Make-lang.in ($(GCJ).o): Depend on prefix.h."}, {"sha": "36f0eade32cbf61b1e070ac1e03bb7ac08839f6a", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1", "patch": "@@ -119,7 +119,7 @@ DEFUN(utf8_equal_string, (jcf, index, value),\n #define HANDLE_SOURCEFILE(INDEX) \\\n { fprintf (out, \"Attribute \"); \\\n   print_constant_terse (out, jcf, attribute_name, CONSTANT_Utf8); \\\n-  fprintf (out, \", length:%d, #%d=\", attribute_length, INDEX); \\\n+  fprintf (out, \", length:%ld, #%d=\", (long) attribute_length, INDEX); \\\n   print_constant_terse (out, jcf, INDEX, CONSTANT_Utf8); fputc ('\\n', out); }\n \n #define HANDLE_CLASS_INFO(ACCESS_FLAGS, THIS, SUPER, INTERFACES_COUNT) \\\n@@ -228,7 +228,7 @@ DEFUN(utf8_equal_string, (jcf, index, value),\n #define COMMON_HANDLE_ATTRIBUTE(JCF, INDEX, LENGTH) \\\n ( fprintf (out, \"Attribute \"), \\\n   print_constant_terse (out, jcf, INDEX, CONSTANT_Utf8), \\\n-  fprintf (out, \", length:%d\", LENGTH) )\n+  fprintf (out, \", length:%ld\", (long) LENGTH) )\n \n #define HANDLE_CONSTANTVALUE(VALUE_INDEX) \\\n ( COMMON_HANDLE_ATTRIBUTE(JCF, attribute_name, attribute_length), \\\n@@ -302,7 +302,7 @@ DEFUN(print_constant_ref, (stream, jcf, index),\n     fprintf (stream, \"out of range\");\n   else\n     print_constant (stream, jcf, index, 1);\n-  fprintf (stream, \">\", index);\n+  fprintf (stream, \">\");\n }\n \n static int\n@@ -916,8 +916,6 @@ DEFUN(disassemble_method, (jcf, byte_ops, len),\n       int saw_index;\n       jlong LONG_temp;\n       jint INT_temp;\n-      jfloat FLOAT_temp;\n-      jdouble DOUBLE_temp;\n       switch (byte_ops[PC++])\n \t{\n \n@@ -946,10 +944,10 @@ DEFUN(disassemble_method, (jcf, byte_ops, len),\n /* Print out operand (if not implied by the opcode) for PUSCH opcodes.\n    These all push a constant onto the opcode stack. */\n #define PUSHC(OPERAND_TYPE, OPERAND_VALUE) \\\n-  saw_index = 0, INT_temp = (OPERAND_VALUE); \\\n+  saw_index = 0, i = (OPERAND_VALUE); \\\n   if (oldpc+1 == PC) /* nothing */; \\\n-  else if (saw_index) fprintf (out, \" \"), print_constant_ref (out, jcf, INT_temp); \\\n-  else fprintf (out, \" %d\", INT_temp);\n+  else if (saw_index) fprintf (out, \" \"), print_constant_ref (out, jcf, i); \\\n+  else fprintf (out, \" %d\", i);\n \n /* Print out operand (a local variable index) for LOAD opcodes.\n    These all push local variable onto the opcode stack. */\n@@ -1055,11 +1053,11 @@ DEFUN(disassemble_method, (jcf, byte_ops, len),\n   SPECIAL_##OPERAND_VALUE(OPERAND_TYPE)\n \n #define SPECIAL_IINC(OPERAND_TYPE) \\\n-  INT_temp = saw_wide ? IMMEDIATE_u2 : IMMEDIATE_u1; \\\n-  fprintf (out, \" %d\", INT_temp); \\\n+  i = saw_wide ? IMMEDIATE_u2 : IMMEDIATE_u1; \\\n+  fprintf (out, \" %d\", i); \\\n   INT_temp = saw_wide ? IMMEDIATE_s2 : IMMEDIATE_s1; \\\n   saw_wide = 0; \\\n-  fprintf (out, \" %d\", INT_temp)\n+  fprintf (out, \" %d\", i)\n \n #define SPECIAL_WIDE(OPERAND_TYPE) \\\n   saw_wide = 1;"}, {"sha": "f1b546988ef54f253457325cce666baabceef430", "filename": "gcc/java/lex.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1", "patch": "@@ -55,6 +55,25 @@ Addison Wesley 1996\" (http://java.sun.com/docs/books/jls/html/3.doc.html)  */\n extern struct obstack *expression_obstack;\n #endif\n \n+/* Function declaration  */\n+static int java_lineterminator PROTO ((unicode_t));\n+static char *java_sprint_unicode PROTO ((struct java_line *, int));\n+static void java_unicode_2_utf8 PROTO ((unicode_t));\n+static void java_lex_error PROTO ((char *, int));\n+static int java_is_eol PROTO ((FILE *, int));\n+static void java_store_unicode PROTO ((struct java_line *, unicode_t, int));\n+static unicode_t java_parse_escape_sequence PROTO (());\n+static int java_letter_or_digit_p PROTO ((unicode_t));\n+static int java_parse_doc_section PROTO ((unicode_t));\n+static void java_parse_end_comment PROTO (());\n+static unicode_t java_get_unicode PROTO (());\n+static unicode_t java_read_unicode PROTO ((int, int *));\n+static void java_store_unicode PROTO ((struct java_line *, unicode_t, int));\n+static unicode_t java_read_char PROTO (());\n+static void java_allocate_new_line PROTO (());\n+static void java_unget_unicode PROTO (());\n+static unicode_t java_sneak_unicode PROTO (());\n+\n void\n java_init_lex ()\n {"}, {"sha": "0fb97a1c801a4945c4fdfb2ed1e3611330645a0b", "filename": "gcc/java/lex.h", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1/gcc%2Fjava%2Flex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1/gcc%2Fjava%2Flex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.h?ref=0d34ccb7f2c11bb13dae156b05b4ca4ccff0eda1", "patch": "@@ -505,23 +505,4 @@ static tree build_wfl_node ();\n #define JAVA_READ_BUFFER 256\n #define UEOF (unicode_t)0xffff\n \n-/* Function declaration  */\n-static int java_lineterminator PROTO ((unicode_t));\n-static char *java_sprint_unicode PROTO ((struct java_line *, int));\n-static void java_unicode_2_utf8 PROTO ((unicode_t));\n-static void java_lex_error PROTO ((char *, int));\n-static int java_is_eol PROTO ((FILE *, int));\n-static void java_store_unicode PROTO ((struct java_line *, unicode_t, int));\n-static unicode_t java_parse_escape_sequence PROTO (());\n-static int java_letter_or_digit_p PROTO ((unicode_t));\n-static int java_parse_doc_section PROTO ((unicode_t));\n-static void java_parse_end_comment PROTO (());\n-static unicode_t java_get_unicode PROTO (());\n-static unicode_t java_read_unicode PROTO ((int, int *));\n-static void java_store_unicode PROTO ((struct java_line *, unicode_t, int));\n-static unicode_t java_read_char PROTO (());\n-static void java_allocate_new_line PROTO (());\n-static void java_unget_unicode PROTO (());\n-static unicode_t java_sneak_unicode PROTO (());\n-\n #endif"}]}