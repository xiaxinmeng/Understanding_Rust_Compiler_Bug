{"sha": "ecf706e5ec4f1a866018e821659deff1d442f9c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNmNzA2ZTVlYzRmMWE4NjYwMThlODIxNjU5ZGVmZjFkNDQyZjljNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-06-25T13:25:39Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-06-25T13:25:39Z"}, "message": "re PR debug/53740 (--enable-checking=yes,rtl bootstrap failure with ada)\n\ngcc/\n\tPR debug/53740\n\t* df.h (dead_debug_add): Remove third argument.\n\t* df-problems.c (dead_debug_add): Likewise.  Use the REGNO of the\n\tREG that we want to replace instead.\n\t(dead_debug_insert_temp): Use the REGNO of the reg that we want\n\tto replace instead of DF_REF_REGNO.  Require there to always be\n\tat least one such use.  Check for cases where the same location\n\thas more than df_ref associated with it.\n\t(df_note_bb_compute): Remove third dead_debug_add argument.\n\t* dce.c (word_dce_process_block): Likewise.\n\nFrom-SVN: r188934", "tree": {"sha": "d65c918cbab139605a2b1e1899bb37533bc20c3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d65c918cbab139605a2b1e1899bb37533bc20c3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecf706e5ec4f1a866018e821659deff1d442f9c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf706e5ec4f1a866018e821659deff1d442f9c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecf706e5ec4f1a866018e821659deff1d442f9c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf706e5ec4f1a866018e821659deff1d442f9c7/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39ce30d841a90473fc5aeefe4dc6081c1966375d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ce30d841a90473fc5aeefe4dc6081c1966375d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39ce30d841a90473fc5aeefe4dc6081c1966375d"}], "stats": {"total": 67, "additions": 40, "deletions": 27}, "files": [{"sha": "8ccdaf02d31e33ca55db9c5eed20dd44035d8d49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf706e5ec4f1a866018e821659deff1d442f9c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf706e5ec4f1a866018e821659deff1d442f9c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecf706e5ec4f1a866018e821659deff1d442f9c7", "patch": "@@ -1,3 +1,16 @@\n+2012-06-25  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tPR debug/53740\n+\t* df.h (dead_debug_add): Remove third argument.\n+\t* df-problems.c (dead_debug_add): Likewise.  Use the REGNO of the\n+\tREG that we want to replace instead.\n+\t(dead_debug_insert_temp): Use the REGNO of the reg that we want\n+\tto replace instead of DF_REF_REGNO.  Require there to always be\n+\tat least one such use.  Check for cases where the same location\n+\thas more than df_ref associated with it.\n+\t(df_note_bb_compute): Remove third dead_debug_add argument.\n+\t* dce.c (word_dce_process_block): Likewise.\n+\n 2012-06-25  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* config/v850/v850.c: Remove redundant extern declarations for"}, {"sha": "7e522c19a82b1f7ea5297247e0088134d6b8f40e", "filename": "gcc/dce.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf706e5ec4f1a866018e821659deff1d442f9c7/gcc%2Fdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf706e5ec4f1a866018e821659deff1d442f9c7/gcc%2Fdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdce.c?ref=ecf706e5ec4f1a866018e821659deff1d442f9c7", "patch": "@@ -848,7 +848,7 @@ word_dce_process_block (basic_block bb, bool redo_out)\n \t\t  == 2 * UNITS_PER_WORD)\n \t      && !bitmap_bit_p (local_live, 2 * DF_REF_REGNO (*use_rec))\n \t      && !bitmap_bit_p (local_live, 2 * DF_REF_REGNO (*use_rec) + 1))\n-\t    dead_debug_add (&debug, *use_rec, DF_REF_REGNO (*use_rec));\n+\t    dead_debug_add (&debug, *use_rec);\n       }\n     else if (INSN_P (insn))\n       {\n@@ -938,7 +938,7 @@ dce_process_block (basic_block bb, bool redo_out, bitmap au)\n \tfor (use_rec = DF_INSN_USES (insn); *use_rec; use_rec++)\n \t  if (!bitmap_bit_p (local_live, DF_REF_REGNO (*use_rec))\n \t      && !bitmap_bit_p (au, DF_REF_REGNO (*use_rec)))\n-\t    dead_debug_add (&debug, *use_rec, DF_REF_REGNO (*use_rec));\n+\t    dead_debug_add (&debug, *use_rec);\n       }\n     else if (INSN_P (insn))\n       {"}, {"sha": "2a698d4d5e2f17908368b8e7af3f1d18f488d8b6", "filename": "gcc/df-problems.c", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf706e5ec4f1a866018e821659deff1d442f9c7/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf706e5ec4f1a866018e821659deff1d442f9c7/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=ecf706e5ec4f1a866018e821659deff1d442f9c7", "patch": "@@ -3165,10 +3165,10 @@ dead_debug_finish (struct dead_debug *debug, bitmap used)\n     }\n }\n \n-/* Add USE to DEBUG.  It must be a dead reference to UREGNO in a debug\n+/* Add USE to DEBUG.  It must be a dead reference to a register in a debug\n    insn.  Create a bitmap for DEBUG as needed.  */\n void\n-dead_debug_add (struct dead_debug *debug, df_ref use, unsigned int uregno)\n+dead_debug_add (struct dead_debug *debug, df_ref use)\n {\n   struct dead_debug_use *newddu = XNEW (struct dead_debug_use);\n \n@@ -3179,7 +3179,7 @@ dead_debug_add (struct dead_debug *debug, df_ref use, unsigned int uregno)\n   if (!debug->used)\n     debug->used = BITMAP_ALLOC (NULL);\n \n-  bitmap_set_bit (debug->used, uregno);\n+  bitmap_set_bit (debug->used, REGNO (*DF_REF_REAL_LOC (use)));\n }\n \n /* If UREGNO is referenced by any entry in DEBUG, emit a debug insn\n@@ -3201,6 +3201,7 @@ dead_debug_insert_temp (struct dead_debug *debug, unsigned int uregno,\n   rtx breg;\n   rtx dval;\n   rtx bind;\n+  rtx cur_reg;\n \n   if (!debug->used || !bitmap_clear_bit (debug->used, uregno))\n     return 0;\n@@ -3209,29 +3210,22 @@ dead_debug_insert_temp (struct dead_debug *debug, unsigned int uregno,\n      the widest referenced mode.  */\n   while ((cur = *tailp))\n     {\n-      if (DF_REF_REGNO (cur->use) == uregno)\n+      cur_reg = *DF_REF_REAL_LOC (cur->use);\n+      if (REGNO (cur_reg) == uregno)\n \t{\n \t  *usesp = cur;\n \t  usesp = &cur->next;\n \t  *tailp = cur->next;\n \t  cur->next = NULL;\n \t  if (!reg\n \t      || (GET_MODE_BITSIZE (GET_MODE (reg))\n-\t\t  < GET_MODE_BITSIZE (GET_MODE (*DF_REF_REAL_LOC (cur->use)))))\n-\t    reg = *DF_REF_REAL_LOC (cur->use);\n+\t\t  < GET_MODE_BITSIZE (GET_MODE (cur_reg))))\n+\t    reg = cur_reg;\n \t}\n       else\n \ttailp = &(*tailp)->next;\n     }\n \n-  /* We may have dangling bits in debug->used for registers that were part\n-     of a multi-register use, one component of which has been reset.  */\n-  if (reg == NULL)\n-    {\n-      gcc_checking_assert (!uses);\n-      return 0;\n-    }\n-\n   gcc_checking_assert (uses);\n \n   breg = reg;\n@@ -3340,15 +3334,21 @@ dead_debug_insert_temp (struct dead_debug *debug, unsigned int uregno,\n   /* Adjust all uses.  */\n   while ((cur = uses))\n     {\n-      if (GET_MODE (*DF_REF_REAL_LOC (cur->use)) == GET_MODE (reg))\n-\t*DF_REF_REAL_LOC (cur->use) = dval;\n-      else\n-\t*DF_REF_REAL_LOC (cur->use)\n-\t  = gen_lowpart_SUBREG (GET_MODE (*DF_REF_REAL_LOC (cur->use)), dval);\n-      /* ??? Should we simplify subreg of subreg?  */\n-      if (debug->to_rescan == NULL)\n-\tdebug->to_rescan = BITMAP_ALLOC (NULL);\n-      bitmap_set_bit (debug->to_rescan, INSN_UID (DF_REF_INSN (cur->use)));\n+      /* If the reference spans multiple hard registers, we'll have\n+\t a use for each one.  Only change each reference once.  */\n+      cur_reg = *DF_REF_REAL_LOC (cur->use);\n+      if (REG_P (cur_reg))\n+\t{\n+\t  if (GET_MODE (cur_reg) == GET_MODE (reg))\n+\t    *DF_REF_REAL_LOC (cur->use) = dval;\n+      \t  else\n+\t    *DF_REF_REAL_LOC (cur->use)\n+\t      = gen_lowpart_SUBREG (GET_MODE (cur_reg), dval);\n+\t  /* ??? Should we simplify subreg of subreg?  */\n+\t  if (debug->to_rescan == NULL)\n+\t    debug->to_rescan = BITMAP_ALLOC (NULL);\n+\t  bitmap_set_bit (debug->to_rescan, INSN_UID (DF_REF_INSN (cur->use)));\n+        }\n       uses = cur->next;\n       XDELETE (cur);\n     }\n@@ -3547,7 +3547,7 @@ df_note_bb_compute (unsigned int bb_index,\n \t\t\t debug insns either.  */\n \t\t      if (!bitmap_bit_p (artificial_uses, uregno)\n \t\t\t  && !df_ignore_stack_reg (uregno))\n-\t\t\tdead_debug_add (&debug, use, uregno);\n+\t\t\tdead_debug_add (&debug, use);\n \t\t      continue;\n \t\t    }\n \t\t  break;"}, {"sha": "b6d168d8ee92e756431f1fc5c01b4a719ae37f9e", "filename": "gcc/df.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf706e5ec4f1a866018e821659deff1d442f9c7/gcc%2Fdf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf706e5ec4f1a866018e821659deff1d442f9c7/gcc%2Fdf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.h?ref=ecf706e5ec4f1a866018e821659deff1d442f9c7", "patch": "@@ -1138,7 +1138,7 @@ enum debug_temp_where\n \n extern void dead_debug_init (struct dead_debug *, bitmap);\n extern void dead_debug_finish (struct dead_debug *, bitmap);\n-extern void dead_debug_add (struct dead_debug *, df_ref, unsigned int);\n+extern void dead_debug_add (struct dead_debug *, df_ref);\n extern int dead_debug_insert_temp (struct dead_debug *,\n \t\t\t\t   unsigned int uregno, rtx insn,\n \t\t\t\t   enum debug_temp_where);"}]}