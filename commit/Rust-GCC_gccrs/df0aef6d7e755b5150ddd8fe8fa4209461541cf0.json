{"sha": "df0aef6d7e755b5150ddd8fe8fa4209461541cf0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYwYWVmNmQ3ZTc1NWI1MTUwZGRkOGZlOGZhNDIwOTQ2MTU0MWNmMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-06-19T06:53:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-06-19T06:53:04Z"}, "message": "re PR tree-optimization/86179 (ice in get_later_stmt, at tree-vectorizer.h:1108)\n\n2018-06-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/86179\n\t* tree-vect-patterns.c (vect_pattern_recog_1): Clean up\n\tafter failed recognition.\n\n\t* gcc.dg/pr86179.c: New testcase.\n\nFrom-SVN: r261731", "tree": {"sha": "5f7cbbe5636899339318358506deccefd3ed7952", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f7cbbe5636899339318358506deccefd3ed7952"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df0aef6d7e755b5150ddd8fe8fa4209461541cf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df0aef6d7e755b5150ddd8fe8fa4209461541cf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df0aef6d7e755b5150ddd8fe8fa4209461541cf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df0aef6d7e755b5150ddd8fe8fa4209461541cf0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6bdfada421e21cbeb4cfb29b2566ac6075be463a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bdfada421e21cbeb4cfb29b2566ac6075be463a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bdfada421e21cbeb4cfb29b2566ac6075be463a"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "e1b5d2a00b97958406b3771b447fbe65721d386a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0aef6d7e755b5150ddd8fe8fa4209461541cf0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0aef6d7e755b5150ddd8fe8fa4209461541cf0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df0aef6d7e755b5150ddd8fe8fa4209461541cf0", "patch": "@@ -1,3 +1,9 @@\n+2018-06-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/86179\n+\t* tree-vect-patterns.c (vect_pattern_recog_1): Clean up\n+\tafter failed recognition.\n+\n 2018-06-18  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/85602"}, {"sha": "67835408169b53a7699d510a47f3ce9bae7bc6c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0aef6d7e755b5150ddd8fe8fa4209461541cf0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0aef6d7e755b5150ddd8fe8fa4209461541cf0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=df0aef6d7e755b5150ddd8fe8fa4209461541cf0", "patch": "@@ -1,3 +1,8 @@\n+2018-06-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/86179\n+\t* gcc.dg/pr86179.c: New testcase.\n+\n 2018-06-18  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/85602"}, {"sha": "6a90f09e6e80ea7d0c8a588302f30cb2c03be843", "filename": "gcc/testsuite/gcc.dg/pr86179.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0aef6d7e755b5150ddd8fe8fa4209461541cf0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr86179.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0aef6d7e755b5150ddd8fe8fa4209461541cf0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr86179.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr86179.c?ref=df0aef6d7e755b5150ddd8fe8fa4209461541cf0", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+void c(int *d, char *g)\n+{\n+  char *a, *b, *e;\n+  int f;\n+  for (; f; f -= 8) {\n+      *d++ = *e++ | (unsigned)*g++ << 8 | (unsigned)*b++ << 16 |\n+\t  (unsigned)*a++ << 24;\n+      *d++ = *e++ | (unsigned)*g++ << 8 | (unsigned)*b++ << 16 |\n+\t  (unsigned)*a++ << 24;\n+  }\n+}"}, {"sha": "19d4ea9fb323eb2c6a5302666432cb9c71399172", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0aef6d7e755b5150ddd8fe8fa4209461541cf0/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0aef6d7e755b5150ddd8fe8fa4209461541cf0/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=df0aef6d7e755b5150ddd8fe8fa4209461541cf0", "patch": "@@ -4496,7 +4496,18 @@ vect_pattern_recog_1 (vect_recog_func *recog_func,\n   stmts_to_replace->quick_push (stmt);\n   pattern_stmt = recog_func->fn (stmts_to_replace, &type_in, &type_out);\n   if (!pattern_stmt)\n-    return false;\n+    {\n+      /* Clear related stmt info that analysis might have noted for\n+         to be replaced stmts.  */\n+      for (i = 0; stmts_to_replace->iterate (i, &stmt)\n+\t   && (unsigned) i < stmts_to_replace->length ();\n+\t   i++)\n+\t{\n+\t  stmt_info = vinfo_for_stmt (stmt);\n+\t  STMT_VINFO_RELATED_STMT (stmt_info) = NULL;\n+\t}\n+      return false;\n+    }\n \n   stmt = stmts_to_replace->last ();\n   stmt_info = vinfo_for_stmt (stmt);\n@@ -4668,7 +4679,6 @@ vect_pattern_recog (vec_info *vinfo)\n   gimple_stmt_iterator si;\n   unsigned int i, j;\n   auto_vec<gimple *, 1> stmts_to_replace;\n-  gimple *stmt;\n \n   DUMP_VECT_SCOPE (\"vect_pattern_recog\");\n \n@@ -4685,6 +4695,10 @@ vect_pattern_recog (vec_info *vinfo)\n \t  basic_block bb = bbs[i];\n \t  for (si = gsi_start_bb (bb); !gsi_end_p (si); gsi_next (&si))\n \t    {\n+\t      gimple *stmt = gsi_stmt (si);\n+\t      stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n+\t      if (stmt_info && STMT_VINFO_IN_PATTERN_P (stmt_info))\n+\t\tcontinue;\n \t      /* Scan over all generic vect_recog_xxx_pattern functions.  */\n \t      for (j = 0; j < NUM_PATTERNS; j++)\n \t\tif (vect_pattern_recog_1 (&vect_vect_recog_func_ptrs[j], si,\n@@ -4699,9 +4713,11 @@ vect_pattern_recog (vec_info *vinfo)\n       for (si = bb_vinfo->region_begin;\n \t   gsi_stmt (si) != gsi_stmt (bb_vinfo->region_end); gsi_next (&si))\n \t{\n-\t  if ((stmt = gsi_stmt (si))\n-\t      && vinfo_for_stmt (stmt)\n-\t      && !STMT_VINFO_VECTORIZABLE (vinfo_for_stmt (stmt)))\n+\t  gimple *stmt = gsi_stmt (si);\n+\t  stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n+\t  if (stmt_info\n+\t      && (!STMT_VINFO_VECTORIZABLE (stmt_info)\n+\t\t  || STMT_VINFO_IN_PATTERN_P (stmt_info)))\n \t    continue;\n \n \t  /* Scan over all generic vect_recog_xxx_pattern functions.  */"}]}