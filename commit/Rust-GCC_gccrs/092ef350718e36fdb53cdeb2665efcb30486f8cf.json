{"sha": "092ef350718e36fdb53cdeb2665efcb30486f8cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkyZWYzNTA3MThlMzZmZGI1M2NkZWIyNjY1ZWZjYjMwNDg2ZjhjZg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2010-06-17T10:45:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-17T10:45:18Z"}, "message": "exp_fixd.adb, [...]: Use Make_Temporary\n\n2010-06-17  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_fixd.adb, exp_imgv.adb, exp_intr.adb, exp_pakd.adb, exp_prag.adb,\n\texp_sel.adb, exp_util.adb, sem_ch10.adb, sem_ch12.adb, sem_ch13.adb,\n\tsem_ch3.adb, sem_ch4.adb, sem_ch5.adb, sem_ch8.adb, sem_ch9.adb,\n\tsem_dist.adb, sem_util.adb: Use Make_Temporary\n\t* itypes.ads, tbuild.ads: Minor comment update\n\t* exp_ch9.adb, exp_dist.adb: Minor reformatting\n\nFrom-SVN: r160897", "tree": {"sha": "1525c8d5e724329aa9414a76a7d00427628a949f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1525c8d5e724329aa9414a76a7d00427628a949f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/092ef350718e36fdb53cdeb2665efcb30486f8cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/092ef350718e36fdb53cdeb2665efcb30486f8cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/092ef350718e36fdb53cdeb2665efcb30486f8cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/092ef350718e36fdb53cdeb2665efcb30486f8cf/comments", "author": null, "committer": null, "parents": [{"sha": "2287a75d05dc2c3fecee4a40173d67df5f2b7919", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2287a75d05dc2c3fecee4a40173d67df5f2b7919", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2287a75d05dc2c3fecee4a40173d67df5f2b7919"}], "stats": {"total": 382, "additions": 138, "deletions": 244}, "files": [{"sha": "fa3ca302e744e0ed1318f57c97c87de249e588af", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -1,3 +1,12 @@\n+2010-06-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_fixd.adb, exp_imgv.adb, exp_intr.adb, exp_pakd.adb, exp_prag.adb,\n+\texp_sel.adb, exp_util.adb, sem_ch10.adb, sem_ch12.adb, sem_ch13.adb,\n+\tsem_ch3.adb, sem_ch4.adb, sem_ch5.adb, sem_ch8.adb, sem_ch9.adb,\n+\tsem_dist.adb, sem_util.adb: Use Make_Temporary\n+\t* itypes.ads, tbuild.ads: Minor comment update\n+\t* exp_ch9.adb, exp_dist.adb: Minor reformatting\n+\n 2010-06-17  Thomas Quinot  <quinot@adacore.com>\n \n \t* exp_imgv.adb, exp_ch7.ads: Minor reformatting."}, {"sha": "0a7ef3be2331afae18a21f4713d79403e193e64f", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -2132,7 +2132,6 @@ package body Exp_Ch9 is\n          --  record type, so mark the spec accordingly.\n \n          if Ekind (Subp_Id) = E_Function then\n-\n             declare\n                Res_Def : Node_Id;\n \n@@ -2388,12 +2387,10 @@ package body Exp_Ch9 is\n          Add_Object_Pointer (Loc, Typ, Decls);\n \n          while Present (Ent) loop\n-\n             if Ekind (Ent) = E_Entry then\n                Add_If_Clause (Make_Integer_Literal (Loc, 1));\n \n             elsif Ekind (Ent) = E_Entry_Family then\n-\n                E_Typ := Etype (Discrete_Subtype_Definition (Parent (Ent)));\n                Hi := Convert_Discriminant_Ref (Type_High_Bound (E_Typ));\n                Lo := Convert_Discriminant_Ref (Type_Low_Bound  (E_Typ));"}, {"sha": "8b9dabd00bde2060c1e999a85f1c28d93af1a5ed", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -9358,7 +9358,7 @@ package body Exp_Dist is\n             --  that the expected type of its parameter is U_Type.\n \n             if Ekind (Fnam) = E_Function\n-                 and then Present (First_Formal (Fnam))\n+              and then Present (First_Formal (Fnam))\n             then\n                C_Type := Etype (First_Formal (Fnam));\n             else"}, {"sha": "28b93b5f8a57af2cb5713d166412c15d676688b6", "filename": "gcc/ada/exp_fixd.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_fixd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_fixd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -505,8 +505,8 @@ package body Exp_Fixd is\n       --  Define quotient and remainder, and set their Etypes, so\n       --  that they can be picked up by Build_xxx routines.\n \n-      Qnn := Make_Defining_Identifier (Loc, New_Internal_Name ('S'));\n-      Rnn := Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n+      Qnn := Make_Temporary (Loc, 'S');\n+      Rnn := Make_Temporary (Loc, 'R');\n \n       Set_Etype (Qnn, QR_Typ);\n       Set_Etype (Rnn, QR_Typ);\n@@ -518,8 +518,8 @@ package body Exp_Fixd is\n          --  Create temporaries for numerator and denominator and set Etypes,\n          --  so that New_Occurrence_Of picks them up for Build_xxx calls.\n \n-         Nnn := Make_Defining_Identifier (Loc, New_Internal_Name ('N'));\n-         Dnn := Make_Defining_Identifier (Loc, New_Internal_Name ('D'));\n+         Nnn := Make_Temporary (Loc, 'N');\n+         Dnn := Make_Temporary (Loc, 'D');\n \n          Set_Etype (Nnn, QR_Typ);\n          Set_Etype (Dnn, QR_Typ);\n@@ -882,17 +882,17 @@ package body Exp_Fixd is\n       --  Define quotient and remainder, and set their Etypes, so\n       --  that they can be picked up by Build_xxx routines.\n \n-      Qnn := Make_Defining_Identifier (Loc, New_Internal_Name ('S'));\n-      Rnn := Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n+      Qnn := Make_Temporary (Loc, 'S');\n+      Rnn := Make_Temporary (Loc, 'R');\n \n       Set_Etype (Qnn, QR_Typ);\n       Set_Etype (Rnn, QR_Typ);\n \n       --  Case that we can compute the numerator in 64 bits\n \n       if QR_Siz <= 64 then\n-         Nnn := Make_Defining_Identifier (Loc, New_Internal_Name  ('N'));\n-         Dnn := Make_Defining_Identifier (Loc, New_Internal_Name  ('D'));\n+         Nnn := Make_Temporary (Loc, 'N');\n+         Dnn := Make_Temporary (Loc, 'D');\n \n          --  Set Etypes, so that they can be picked up by New_Occurrence_Of\n "}, {"sha": "1ec4727107e1428e208d4dd0bebba3a6b26b7ef6", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 6, "deletions": 22, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -260,13 +260,8 @@ package body Exp_Imgv is\n       Ins_List : List_Id;\n       --  List of actions to be inserted\n \n-      Snn : constant Entity_Id :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('S'));\n-\n-      Pnn : constant Entity_Id :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('P'));\n+      Snn : constant Entity_Id := Make_Temporary (Loc, 'S');\n+      Pnn : constant Entity_Id := Make_Temporary (Loc, 'P');\n \n    begin\n       --  Build declarations of Snn and Pnn to be inserted\n@@ -773,14 +768,8 @@ package body Exp_Imgv is\n    procedure Expand_Wide_Image_Attribute (N : Node_Id) is\n       Loc  : constant Source_Ptr := Sloc (N);\n       Rtyp : constant Entity_Id  := Root_Type (Entity (Prefix (N)));\n-\n-      Rnn : constant Entity_Id :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('S'));\n-\n-      Lnn : constant Entity_Id :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('P'));\n+      Rnn  : constant Entity_Id := Make_Temporary (Loc, 'S');\n+      Lnn  : constant Entity_Id := Make_Temporary (Loc, 'P');\n \n    begin\n       Insert_Actions (N, New_List (\n@@ -871,13 +860,8 @@ package body Exp_Imgv is\n       Loc  : constant Source_Ptr := Sloc (N);\n       Rtyp : constant Entity_Id  := Root_Type (Entity (Prefix (N)));\n \n-      Rnn : constant Entity_Id :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('S'));\n-\n-      Lnn : constant Entity_Id :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('P'));\n+      Rnn : constant Entity_Id := Make_Temporary (Loc, 'S');\n+      Lnn : constant Entity_Id := Make_Temporary (Loc, 'P');\n \n    begin\n       Insert_Actions (N, New_List ("}, {"sha": "461539d92f5c06f7915c109ea7438bf7ea7b3c61", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -171,11 +171,10 @@ package body Exp_Intr is\n \n             Iface_Tag :=\n               Make_Object_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Make_Defining_Identifier (Loc, New_Internal_Name ('V')),\n-                Object_Definition =>\n+                Defining_Identifier => Make_Temporary (Loc, 'V'),\n+                Object_Definition   =>\n                   New_Reference_To (RTE (RE_Tag), Loc),\n-                Expression =>\n+                Expression          =>\n                   Make_Function_Call (Loc,\n                     Name => New_Reference_To (RTE (RE_Secondary_Tag), Loc),\n                     Parameter_Associations => New_List (\n@@ -325,7 +324,7 @@ package body Exp_Intr is\n             --  be referencing it by normal visibility methods.\n \n             if No (Choice_Parameter (P)) then\n-               E := Make_Defining_Identifier (Loc, New_Internal_Name ('E'));\n+               E := Make_Temporary (Loc, 'E');\n                Set_Choice_Parameter (P, E);\n                Set_Ekind (E, E_Variable);\n                Set_Etype (E, RTE (RE_Exception_Occurrence));\n@@ -362,11 +361,9 @@ package body Exp_Intr is\n       Loc : constant Source_Ptr := Sloc (N);\n       Ent : constant Entity_Id  := Entity (Name (N));\n       Str : constant Node_Id    := First_Actual (N);\n-      Dum : Entity_Id;\n+      Dum : constant Entity_Id  := Make_Temporary (Loc, 'D');\n \n    begin\n-      Dum := Make_Defining_Identifier (Loc, New_Internal_Name ('D'));\n-\n       Insert_Actions (N, New_List (\n         Make_Object_Declaration (Loc,\n           Defining_Identifier => Dum,\n@@ -1025,13 +1022,11 @@ package body Exp_Intr is\n                   D_Type := Entity (D_Subtyp);\n \n                else\n-                  D_Type := Make_Defining_Identifier (Loc,\n-                              New_Internal_Name ('A'));\n+                  D_Type := Make_Temporary (Loc, 'A');\n                   Insert_Action (Deref,\n                     Make_Subtype_Declaration (Loc,\n                       Defining_Identifier => D_Type,\n                       Subtype_Indication  => D_Subtyp));\n-\n                end if;\n \n                --  Force freezing at the point of the dereference. For the"}, {"sha": "cea583d57b165d4e033b43d936c449bebd7e3fb6", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -1347,10 +1347,9 @@ package body Exp_Pakd is\n          begin\n             Decl :=\n               Make_Object_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Make_Defining_Identifier (Loc,  New_Internal_Name ('T')),\n-                Object_Definition => New_Occurrence_Of (Ctyp, Loc),\n-                Expression => New_Copy_Tree (Rhs));\n+                Defining_Identifier => Make_Temporary (Loc, 'T', Rhs),\n+                Object_Definition   => New_Occurrence_Of (Ctyp, Loc),\n+                Expression          => New_Copy_Tree (Rhs));\n \n             Insert_Actions (N, New_List (Decl));\n             Rhs := New_Occurrence_Of (Defining_Identifier (Decl), Loc);\n@@ -1841,11 +1840,8 @@ package body Exp_Pakd is\n \n       else\n          declare\n-            Result_Ent : constant Entity_Id :=\n-                           Make_Defining_Identifier (Loc,\n-                             Chars => New_Internal_Name ('T'));\n-\n-            E_Id : RE_Id;\n+            Result_Ent : constant Entity_Id := Make_Temporary (Loc, 'T');\n+            E_Id       : RE_Id;\n \n          begin\n             if Nkind (N) = N_Op_And then\n@@ -2192,9 +2188,7 @@ package body Exp_Pakd is\n \n       else\n          declare\n-            Result_Ent : constant Entity_Id :=\n-                           Make_Defining_Identifier (Loc,\n-                             Chars => New_Internal_Name ('T'));\n+            Result_Ent : constant Entity_Id := Make_Temporary (Loc, 'T');\n \n          begin\n             Insert_Actions (N, New_List ("}, {"sha": "987cddc0bbdf604581d65737891ffaae809f5d98", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -536,17 +536,14 @@ package body Exp_Prag is\n       begin\n          if Present (Call) then\n             declare\n-               Excep_Internal : constant Node_Id :=\n-                                 Make_Defining_Identifier\n-                                  (Loc, New_Internal_Name ('V'));\n-\n-               Export_Pragma : Node_Id;\n-               Excep_Alias   : Node_Id;\n-               Excep_Object  : Node_Id;\n-               Excep_Image   : String_Id;\n-               Exdata        : List_Id;\n-               Lang_Char     : Node_Id;\n-               Code          : Node_Id;\n+               Excep_Internal : constant Node_Id := Make_Temporary (Loc, 'V');\n+               Export_Pragma  : Node_Id;\n+               Excep_Alias    : Node_Id;\n+               Excep_Object   : Node_Id;\n+               Excep_Image    : String_Id;\n+               Exdata         : List_Id;\n+               Lang_Char      : Node_Id;\n+               Code           : Node_Id;\n \n             begin\n                if Present (Interface_Name (Id)) then"}, {"sha": "8250516a04f7629d637d80227b2e9beb6a4cdd76", "filename": "gcc/ada/exp_sel.adb", "status": "modified", "additions": 11, "deletions": 29, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_sel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_sel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_sel.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -83,19 +83,13 @@ package body Exp_Sel is\n      (Loc   : Source_Ptr;\n       Decls : List_Id) return Entity_Id\n    is\n-      B : constant Entity_Id := Make_Defining_Identifier (Loc,\n-                                  Chars => New_Internal_Name ('B'));\n-\n+      B : constant Entity_Id := Make_Temporary (Loc, 'B');\n    begin\n       Append_To (Decls,\n         Make_Object_Declaration (Loc,\n-          Defining_Identifier =>\n-            B,\n-          Object_Definition =>\n-            New_Reference_To (Standard_Boolean, Loc),\n-          Expression =>\n-            New_Reference_To (Standard_False, Loc)));\n-\n+          Defining_Identifier => B,\n+          Object_Definition   => New_Reference_To (Standard_Boolean, Loc),\n+          Expression          => New_Reference_To (Standard_False, Loc)));\n       return B;\n    end Build_B;\n \n@@ -107,17 +101,12 @@ package body Exp_Sel is\n      (Loc   : Source_Ptr;\n       Decls : List_Id) return Entity_Id\n    is\n-      C : constant Entity_Id := Make_Defining_Identifier (Loc,\n-                                  Chars => New_Internal_Name ('C'));\n-\n+      C : constant Entity_Id := Make_Temporary (Loc, 'C');\n    begin\n       Append_To (Decls,\n         Make_Object_Declaration (Loc,\n-          Defining_Identifier =>\n-            C,\n-          Object_Definition =>\n-            New_Reference_To (RTE (RE_Prim_Op_Kind), Loc)));\n-\n+          Defining_Identifier => C,\n+          Object_Definition => New_Reference_To (RTE (RE_Prim_Op_Kind), Loc)));\n       return C;\n    end Build_C;\n \n@@ -155,9 +144,7 @@ package body Exp_Sel is\n       Decls : List_Id;\n       Obj   : Entity_Id) return Entity_Id\n    is\n-      K : constant Entity_Id := Make_Defining_Identifier (Loc,\n-                                  Chars => New_Internal_Name ('K'));\n-\n+      K : constant Entity_Id := Make_Temporary (Loc, 'K');\n    begin\n       Append_To (Decls,\n         Make_Object_Declaration (Loc,\n@@ -169,7 +156,6 @@ package body Exp_Sel is\n               Name => New_Reference_To (RTE (RE_Get_Tagged_Kind), Loc),\n               Parameter_Associations => New_List (\n                 Unchecked_Convert_To (RTE (RE_Tag), Obj)))));\n-\n       return K;\n    end Build_K;\n \n@@ -181,16 +167,12 @@ package body Exp_Sel is\n      (Loc   : Source_Ptr;\n       Decls : List_Id) return Entity_Id\n    is\n-      S : constant Entity_Id := Make_Defining_Identifier (Loc,\n-                                  Chars => New_Internal_Name ('S'));\n-\n+      S : constant Entity_Id := Make_Temporary (Loc, 'S');\n    begin\n       Append_To (Decls,\n         Make_Object_Declaration (Loc,\n           Defining_Identifier => S,\n-          Object_Definition   =>\n-            New_Reference_To (Standard_Integer, Loc)));\n-\n+          Object_Definition   => New_Reference_To (Standard_Integer, Loc)));\n       return S;\n    end Build_S;\n "}, {"sha": "5a11220c843321c5d651444cb08dac40e5f307ee", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 38, "deletions": 54, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -398,7 +398,7 @@ package body Exp_Util is\n       Pos : Entity_Id;\n       --  Running index for substring assignments\n \n-      Pref : Entity_Id;\n+      Pref : constant Entity_Id := Make_Temporary (Loc, 'P');\n       --  Name of enclosing variable, prefix of resulting name\n \n       Res : Entity_Id;\n@@ -417,8 +417,6 @@ package body Exp_Util is\n       Stats : constant List_Id := New_List;\n \n    begin\n-      Pref := Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n-\n       --  For a dynamic task, the name comes from the target variable.\n       --  For a static one it is a formal of the enclosing init proc.\n \n@@ -444,7 +442,7 @@ package body Exp_Util is\n       Val  := First (Expressions (Id_Ref));\n \n       for J in 1 .. Dims loop\n-         T := Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n+         T := Make_Temporary (Loc, 'T');\n          Temps (J) := T;\n \n          Append_To (Decls,\n@@ -454,10 +452,8 @@ package body Exp_Util is\n                Expression =>\n                  Make_Attribute_Reference (Loc,\n                    Attribute_Name => Name_Image,\n-                   Prefix =>\n-                     New_Occurrence_Of (Etype (Indx), Loc),\n-                   Expressions => New_List (\n-                     New_Copy_Tree (Val)))));\n+                   Prefix         => New_Occurrence_Of (Etype (Indx), Loc),\n+                   Expressions    => New_List (New_Copy_Tree (Val)))));\n \n          Next_Index (Indx);\n          Next (Val);\n@@ -613,7 +609,7 @@ package body Exp_Util is\n       if Restriction_Active (No_Implicit_Heap_Allocations)\n         or else Global_Discard_Names\n       then\n-         T_Id := Make_Defining_Identifier (Loc, New_Internal_Name ('J'));\n+         T_Id := Make_Temporary (Loc, 'J');\n          Name_Len := 0;\n \n          return\n@@ -697,9 +693,8 @@ package body Exp_Util is\n           Expression => New_Occurrence_Of (Res, Loc)));\n \n       Spec := Make_Function_Specification (Loc,\n-        Defining_Unit_Name =>\n-          Make_Defining_Identifier (Loc, New_Internal_Name ('F')),\n-        Result_Definition => New_Occurrence_Of (Standard_String, Loc));\n+        Defining_Unit_Name => Make_Temporary (Loc, 'F'),\n+        Result_Definition  => New_Occurrence_Of (Standard_String, Loc));\n \n       --  Calls to 'Image use the secondary stack, which must be cleaned\n       --  up after the task name is built.\n@@ -726,15 +721,15 @@ package body Exp_Util is\n        Stats  : List_Id)\n    is\n    begin\n-      Len := Make_Defining_Identifier (Loc, New_Internal_Name ('L'));\n+      Len := Make_Temporary (Loc, 'L', Sum);\n \n       Append_To (Decls,\n         Make_Object_Declaration (Loc,\n           Defining_Identifier => Len,\n-          Object_Definition => New_Occurrence_Of (Standard_Integer, Loc),\n-          Expression        => Sum));\n+          Object_Definition   => New_Occurrence_Of (Standard_Integer, Loc),\n+          Expression          => Sum));\n \n-      Res := Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n+      Res := Make_Temporary (Loc, 'R');\n \n       Append_To (Decls,\n          Make_Object_Declaration (Loc,\n@@ -750,12 +745,12 @@ package body Exp_Util is\n                          Low_Bound => Make_Integer_Literal (Loc, 1),\n                          High_Bound => New_Occurrence_Of (Len, Loc)))))));\n \n-      Pos := Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+      Pos := Make_Temporary (Loc, 'P');\n \n       Append_To (Decls,\n          Make_Object_Declaration (Loc,\n             Defining_Identifier => Pos,\n-            Object_Definition => New_Occurrence_Of (Standard_Integer, Loc)));\n+            Object_Definition   => New_Occurrence_Of (Standard_Integer, Loc)));\n \n       --  Pos := Prefix'Length;\n \n@@ -765,29 +760,29 @@ package body Exp_Util is\n             Expression =>\n               Make_Attribute_Reference (Loc,\n                 Attribute_Name => Name_Length,\n-                Prefix => New_Occurrence_Of (Prefix, Loc),\n-                Expressions =>\n-                    New_List (Make_Integer_Literal (Loc, 1)))));\n+                Prefix         => New_Occurrence_Of (Prefix, Loc),\n+                Expressions    => New_List (Make_Integer_Literal (Loc, 1)))));\n \n       --  Res (1 .. Pos) := Prefix;\n \n       Append_To (Stats,\n-         Make_Assignment_Statement (Loc,\n-           Name => Make_Slice (Loc,\n-              Prefix => New_Occurrence_Of (Res, Loc),\n+        Make_Assignment_Statement (Loc,\n+          Name =>\n+            Make_Slice (Loc,\n+              Prefix          => New_Occurrence_Of (Res, Loc),\n               Discrete_Range  =>\n                 Make_Range (Loc,\n-                   Low_Bound => Make_Integer_Literal (Loc, 1),\n+                   Low_Bound  => Make_Integer_Literal (Loc, 1),\n                    High_Bound => New_Occurrence_Of (Pos, Loc))),\n \n-           Expression => New_Occurrence_Of (Prefix, Loc)));\n+          Expression => New_Occurrence_Of (Prefix, Loc)));\n \n       Append_To (Stats,\n          Make_Assignment_Statement (Loc,\n-            Name => New_Occurrence_Of (Pos, Loc),\n+            Name       => New_Occurrence_Of (Pos, Loc),\n             Expression =>\n               Make_Op_Add (Loc,\n-                Left_Opnd => New_Occurrence_Of (Pos, Loc),\n+                Left_Opnd  => New_Occurrence_Of (Pos, Loc),\n                 Right_Opnd => Make_Integer_Literal (Loc, 1))));\n    end Build_Task_Image_Prefix;\n \n@@ -809,7 +804,7 @@ package body Exp_Util is\n       Res : Entity_Id;\n       --  String to hold result\n \n-      Pref : Entity_Id;\n+      Pref : constant Entity_Id := Make_Temporary (Loc, 'P');\n       --  Name of enclosing variable, prefix of resulting name\n \n       Sum : Node_Id;\n@@ -822,8 +817,6 @@ package body Exp_Util is\n       Stats : constant List_Id := New_List;\n \n    begin\n-      Pref := Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n-\n       --  For a dynamic task, the name comes from the target variable.\n       --  For a static one it is a formal of the enclosing init proc.\n \n@@ -845,15 +838,15 @@ package body Exp_Util is\n              Name                => Make_Identifier (Loc, Name_uTask_Name)));\n       end if;\n \n-      Sel := Make_Defining_Identifier (Loc, New_Internal_Name ('S'));\n+      Sel := Make_Temporary (Loc, 'S');\n \n       Get_Name_String (Chars (Selector_Name (Id_Ref)));\n \n       Append_To (Decls,\n          Make_Object_Declaration (Loc,\n            Defining_Identifier => Sel,\n-           Object_Definition => New_Occurrence_Of (Standard_String, Loc),\n-           Expression =>\n+           Object_Definition   => New_Occurrence_Of (Standard_String, Loc),\n+           Expression          =>\n              Make_String_Literal (Loc,\n                Strval => String_From_Name_Buffer)));\n \n@@ -1300,9 +1293,7 @@ package body Exp_Util is\n             end if;\n \n          else\n-            T :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('T'));\n+            T := Make_Temporary (Loc, 'T');\n \n             Insert_Action (N,\n               Make_Subtype_Declaration (Loc,\n@@ -3758,21 +3749,19 @@ package body Exp_Util is\n       if not Has_Discriminants (Root_Typ) then\n          Constr_Root := Root_Typ;\n       else\n-         Constr_Root :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n+         Constr_Root := Make_Temporary (Loc, 'R');\n \n          --  subtype cstr__n is T (List of discr constraints taken from Exp)\n \n          Append_To (List_Def,\n            Make_Subtype_Declaration (Loc,\n              Defining_Identifier => Constr_Root,\n-               Subtype_Indication =>\n-                 Make_Subtype_From_Expr (E, Root_Typ)));\n+             Subtype_Indication  => Make_Subtype_From_Expr (E, Root_Typ)));\n       end if;\n \n       --  Generate the range subtype declaration\n \n-      Range_Type := Make_Defining_Identifier (Loc, New_Internal_Name ('G'));\n+      Range_Type := Make_Temporary (Loc, 'G');\n \n       if not Is_Interface (Root_Typ) then\n \n@@ -3821,7 +3810,7 @@ package body Exp_Util is\n \n       --  subtype str__nn is Storage_Array (rg__x);\n \n-      Str_Type := Make_Defining_Identifier (Loc, New_Internal_Name ('S'));\n+      Str_Type := Make_Temporary (Loc, 'S');\n       Append_To (List_Def,\n         Make_Subtype_Declaration (Loc,\n           Defining_Identifier => Str_Type,\n@@ -3838,7 +3827,7 @@ package body Exp_Util is\n       --    E : Str_Type;\n       --  end Equiv_T;\n \n-      Equiv_Type := Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n+      Equiv_Type := Make_Temporary (Loc, 'T');\n       Set_Ekind (Equiv_Type, E_Record_Type);\n       Set_Parent_Subtype (Equiv_Type, Constr_Root);\n \n@@ -3863,9 +3852,7 @@ package body Exp_Util is\n \n       Append_To (Comp_List,\n         Make_Component_Declaration (Loc,\n-          Defining_Identifier =>\n-            Make_Defining_Identifier (Loc,\n-              Chars => New_Internal_Name ('C')),\n+          Defining_Identifier  => Make_Temporary (Loc, 'C'),\n           Component_Definition =>\n             Make_Component_Definition (Loc,\n               Aliased_Present    => False,\n@@ -3991,15 +3978,12 @@ package body Exp_Util is\n          --  actual or an explicit subtype.\n \n          Utyp        := Underlying_Type (Base_Type (Unc_Typ));\n-         Full_Subtyp := Make_Defining_Identifier (Loc,\n-                          New_Internal_Name ('C'));\n+         Full_Subtyp := Make_Temporary (Loc, 'C');\n          Full_Exp    :=\n-           Unchecked_Convert_To\n-             (Utyp, Duplicate_Subexpr_No_Checks (E));\n+           Unchecked_Convert_To (Utyp, Duplicate_Subexpr_No_Checks (E));\n          Set_Parent (Full_Exp, Parent (E));\n \n-         Priv_Subtyp :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+         Priv_Subtyp := Make_Temporary (Loc, 'P');\n \n          Insert_Action (E,\n            Make_Subtype_Declaration (Loc,\n@@ -4870,7 +4854,7 @@ package body Exp_Util is\n             end;\n          end if;\n \n-         Ref_Type := Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+         Ref_Type := Make_Temporary (Loc, 'A');\n \n          Ptr_Typ_Decl :=\n            Make_Full_Type_Declaration (Loc,"}, {"sha": "ffd3a1d496ec50d2c2d4c5a3f55159716dcebdf2", "filename": "gcc/ada/itypes.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fitypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fitypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fitypes.ads?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -127,7 +127,7 @@ package Itypes is\n    --  If the implicit type does not need an external name, then the\n    --  Related_Id parameter is omitted (and hence Empty). In this case\n    --  Suffix and Suffix_Index are ignored and the implicit type name is\n-   --  created by a call to New_Internal_Name ('T').\n+   --  created by a call to Make_Temporary.\n    --\n    --  Note that in all cases, the name starts with \"T\". This is used\n    --  to identify implicit types in the error message handling circuits."}, {"sha": "29d33b7535af88e26724b4d1852a7a81f098f265", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -5346,7 +5346,7 @@ package body Sem_Ch10 is\n          --  and the full-view.\n \n          if No (Class_Wide_Type (T)) then\n-            CW := Make_Defining_Identifier (Loc,  New_Internal_Name ('S'));\n+            CW := Make_Temporary (Loc, 'S');\n \n             --  Set parent to be the same as the parent of the tagged type.\n             --  We need a parent field set, and it is supposed to point to\n@@ -5398,9 +5398,7 @@ package body Sem_Ch10 is\n          Sloc_Value : Source_Ptr;\n          Id_Char    : Character) return Entity_Id\n       is\n-         E : constant Entity_Id :=\n-               Make_Defining_Identifier (Sloc_Value,\n-                 Chars => New_Internal_Name (Id_Char));\n+         E : constant Entity_Id := Make_Temporary (Sloc_Value, Id_Char);\n \n       begin\n          Set_Ekind       (E, Kind);\n@@ -5475,9 +5473,7 @@ package body Sem_Ch10 is\n \n       --  Build the header of the limited_view\n \n-      Lim_Header :=\n-        Make_Defining_Identifier (Sloc (N),\n-          Chars => New_Internal_Name (Id_Char => 'Z'));\n+      Lim_Header := Make_Temporary (Sloc (N), 'Z');\n       Set_Ekind (Lim_Header, E_Package);\n       Set_Is_Internal (Lim_Header);\n       Set_Limited_View (P, Lim_Header);"}, {"sha": "eecb533acaf4bc98a73d72d52ea7a0806fd194f6", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -7865,8 +7865,7 @@ package body Sem_Ch12 is\n          if not Box_Present (Formal) then\n             declare\n                I_Pack : constant Entity_Id :=\n-                          Make_Defining_Identifier (Sloc (Actual),\n-                            Chars => New_Internal_Name  ('P'));\n+                          Make_Temporary (Sloc (Actual), 'P');\n \n             begin\n                Set_Is_Internal (I_Pack);\n@@ -8165,9 +8164,8 @@ package body Sem_Ch12 is\n          --  to prevent freezing anomalies.\n \n          declare\n-            Anon_Id : constant Entity_Id :=\n-                        Make_Defining_Identifier\n-                          (Loc, New_Internal_Name ('E'));\n+            Anon_Id : constant Entity_Id := Make_Temporary (Loc, 'E');\n+\n          begin\n             Set_Defining_Unit_Name (New_Spec, Anon_Id);\n             Insert_Before (Instantiation_Node, Decl_Node);\n@@ -8314,8 +8312,7 @@ package body Sem_Ch12 is\n \n             Subt_Decl :=\n               Make_Subtype_Declaration (Loc,\n-                 Defining_Identifier =>\n-                   Make_Defining_Identifier (Loc, New_Internal_Name ('P')),\n+                 Defining_Identifier => Make_Temporary (Loc, 'P'),\n                  Subtype_Indication  => New_Occurrence_Of (Ftyp, Loc));\n \n             Prepend (Subt_Decl, List);\n@@ -10340,8 +10337,7 @@ package body Sem_Ch12 is\n             Corr_Decl : Node_Id;\n \n          begin\n-            New_Corr := Make_Defining_Identifier (Loc,\n-                            Chars => New_Internal_Name  ('S'));\n+            New_Corr := Make_Temporary (Loc, 'S');\n             Corr_Decl :=\n               Make_Subtype_Declaration (Loc,\n                 Defining_Identifier => New_Corr,"}, {"sha": "18bd7c9db56b8943d6d3155083b7e9280050a780", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -1742,17 +1742,15 @@ package body Sem_Ch13 is\n             if not Is_Entity_Name (Expr)\n               and then Is_Object_Reference (Expr)\n             then\n-               Pool :=\n-                 Make_Defining_Identifier (Loc,\n-                   Chars => New_Internal_Name ('P'));\n+               Pool := Make_Temporary (Loc, 'P', Expr);\n \n                declare\n                   Rnode : constant Node_Id :=\n                             Make_Object_Renaming_Declaration (Loc,\n                               Defining_Identifier => Pool,\n                               Subtype_Mark        =>\n                                 New_Occurrence_Of (Etype (Expr), Loc),\n-                              Name => Expr);\n+                              Name                => Expr);\n \n                begin\n                   Insert_Before (N, Rnode);"}, {"sha": "59e3107943a9a2e4f353bc78def82931448d9438", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 11, "deletions": 26, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -1364,7 +1364,7 @@ package body Sem_Ch3 is\n              Subtype_Indication =>\n                New_Occurrence_Of (RTE (RE_Interface_Tag), Loc));\n \n-         Tag := Make_Defining_Identifier (Loc, New_Internal_Name ('V'));\n+         Tag := Make_Temporary (Loc, 'V');\n \n          Decl :=\n            Make_Component_Declaration (Loc,\n@@ -1406,8 +1406,7 @@ package body Sem_Ch3 is\n                 Subtype_Indication =>\n                   New_Occurrence_Of (RTE (RE_Storage_Offset), Loc));\n \n-            Offset :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('V'));\n+            Offset := Make_Temporary (Loc, 'V');\n \n             Decl :=\n               Make_Component_Declaration (Loc,\n@@ -4323,9 +4322,7 @@ package body Sem_Ch3 is\n                Decl  : Entity_Id;\n \n             begin\n-               New_E :=\n-                 Make_Defining_Identifier (Loc,\n-                   Chars => New_Internal_Name ('T'));\n+               New_E := Make_Temporary (Loc, 'T');\n                Set_Is_Internal (New_E);\n \n                Decl :=\n@@ -4574,10 +4571,7 @@ package body Sem_Ch3 is\n       Curr_Scope : constant Scope_Stack_Entry :=\n                      Scope_Stack.Table (Scope_Stack.Last);\n \n-      Anon : constant Entity_Id :=\n-               Make_Defining_Identifier (Loc,\n-                 Chars => New_Internal_Name ('S'));\n-\n+      Anon : constant Entity_Id := Make_Temporary (Loc, 'S');\n       Acc  : Node_Id;\n       Comp : Node_Id;\n       Decl : Node_Id;\n@@ -4919,9 +4913,7 @@ package body Sem_Ch3 is\n    is\n       Loc : constant Source_Ptr := Sloc (N);\n \n-      Corr_Record : constant Entity_Id :=\n-                      Make_Defining_Identifier (Loc, New_Internal_Name ('C'));\n-\n+      Corr_Record      : constant Entity_Id := Make_Temporary (Loc, 'C');\n       Corr_Decl        : Node_Id;\n       Corr_Decl_Needed : Boolean;\n       --  If the derived type has fewer discriminants than its parent, the\n@@ -5724,9 +5716,7 @@ package body Sem_Ch3 is\n            and then Expander_Active\n          then\n             declare\n-               Full_Der : constant Entity_Id :=\n-                            Make_Defining_Identifier (Loc,\n-                              Chars => New_Internal_Name ('T'));\n+               Full_Der : constant Entity_Id := Make_Temporary (Loc, 'T');\n                New_Ext  : constant Node_Id :=\n                             Copy_Separate_Tree\n                               (Record_Extension_Part (Type_Definition (N)));\n@@ -9655,14 +9645,11 @@ package body Sem_Ch3 is\n          then\n             declare\n                Loc    : constant Source_Ptr := Sloc (N);\n-               Def_Id : constant Entity_Id :=\n-                          Make_Defining_Identifier (Loc,\n-                            New_Internal_Name ('S'));\n-               Decl   : constant Node_Id :=\n+               Def_Id : constant Entity_Id  := Make_Temporary (Loc, 'S');\n+               Decl   : constant Node_Id    :=\n                           Make_Subtype_Declaration (Loc,\n-                            Defining_Identifier =>\n-                              Def_Id,\n-                            Subtype_Indication =>\n+                            Defining_Identifier => Def_Id,\n+                            Subtype_Indication  =>\n                               Relocate_Node (Curr_Obj_Def));\n \n             begin\n@@ -17693,9 +17680,7 @@ package body Sem_Ch3 is\n                 (Access_Definition (Comp_Def));\n \n             Build_Incomplete_Type_Declaration;\n-            Anon_Access :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('S'));\n+            Anon_Access := Make_Temporary (Loc, 'S');\n \n             --  Create a declaration for the anonymous access type: either\n             --  an access_to_object or an access_to_subprogram."}, {"sha": "010802b0cdc7e18878b95f413e9c7654a61aae29", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -472,8 +472,7 @@ package body Sem_Ch4 is\n                end if;\n \n                if Expander_Active then\n-                  Def_Id :=\n-                    Make_Defining_Identifier (Loc, New_Internal_Name ('S'));\n+                  Def_Id := Make_Temporary (Loc, 'S');\n \n                   Insert_Action (E,\n                     Make_Subtype_Declaration (Loc,"}, {"sha": "5525cd855ec61f54ed5e3580382b1abc280d7bca", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -1520,9 +1520,7 @@ package body Sem_Ch5 is\n \n             Analyze_And_Resolve (Original_Bound, Typ);\n \n-            Id :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('S'));\n+            Id := Make_Temporary (Loc, 'S', Original_Bound);\n \n             --  Normally, the best approach is simply to generate a constant\n             --  declaration that captures the bound. However, there is a nasty\n@@ -1721,13 +1719,10 @@ package body Sem_Ch5 is\n          then\n             declare\n                Loc  : constant Source_Ptr := Sloc (N);\n-               Arr  : constant Entity_Id :=\n-                        Etype (Entity (Prefix (DS)));\n+               Arr  : constant Entity_Id := Etype (Entity (Prefix (DS)));\n                Indx : constant Entity_Id :=\n                         Base_Type (Etype (First_Index (Arr)));\n-               Subt : constant Entity_Id :=\n-                        Make_Defining_Identifier\n-                          (Loc, New_Internal_Name ('S'));\n+               Subt : constant Entity_Id := Make_Temporary (Loc, 'S');\n                Decl : Node_Id;\n \n             begin"}, {"sha": "3823669ca830084cbb00a4a7d746521f6e32ab4f", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -910,9 +910,7 @@ package body Sem_Ch8 is\n                then\n                   declare\n                      Loc  : constant Source_Ptr := Sloc (N);\n-                     Subt : constant Entity_Id :=\n-                              Make_Defining_Identifier (Loc,\n-                                Chars => New_Internal_Name ('T'));\n+                     Subt : constant Entity_Id  := Make_Temporary (Loc, 'T');\n                   begin\n                      Remove_Side_Effects (Nam);\n                      Insert_Action (N,\n@@ -2837,19 +2835,17 @@ package body Sem_Ch8 is\n \n       if Aname = Name_AST_Entry then\n          declare\n-            Ent  : Entity_Id;\n+            Ent  : constant Entity_Id := Make_Temporary (Loc, 'R', Nam);\n             Decl : Node_Id;\n \n          begin\n-            Ent := Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n-\n             Decl :=\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Ent,\n-                Object_Definition =>\n+                Object_Definition   =>\n                   New_Occurrence_Of (RTE (RE_AST_Handler), Loc),\n-                Expression => Nam,\n-                Constant_Present => True);\n+                Expression          => Nam,\n+                Constant_Present    => True);\n \n             Set_Assignment_OK (Decl, True);\n             Insert_Action (N, Decl);"}, {"sha": "db3eed737e0bea46df77d7e9fa697ebb93d66670", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -991,9 +991,7 @@ package body Sem_Ch9 is\n    procedure Analyze_Entry_Index_Specification (N : Node_Id) is\n       Iden    : constant Node_Id   := Defining_Identifier (N);\n       Def     : constant Node_Id   := Discrete_Subtype_Definition (N);\n-      Loop_Id : constant Entity_Id :=\n-                  Make_Defining_Identifier (Sloc (N),\n-                    Chars => New_Internal_Name ('L'));\n+      Loop_Id : constant Entity_Id := Make_Temporary (Sloc (N), 'L');\n \n    begin\n       Tasking_Used := True;"}, {"sha": "64b85758a10e073ae0360cf4264db2d91b21381f", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -451,9 +451,7 @@ package body Sem_Dist is\n       --  True iff this RAS has an access formal parameter (see\n       --  Exp_Dist.Add_RAS_Dereference_TSS for details).\n \n-      Subpkg      : constant Entity_Id :=\n-                      Make_Defining_Identifier (Loc,\n-                        New_Internal_Name ('S'));\n+      Subpkg      : constant Entity_Id := Make_Temporary (Loc, 'S');\n       Subpkg_Decl : Node_Id;\n       Subpkg_Body : Node_Id;\n       Vis_Decls   : constant List_Id := New_List;\n@@ -464,16 +462,14 @@ package body Sem_Dist is\n                       New_External_Name (Chars (User_Type), 'R'));\n \n       Full_Obj_Type : constant Entity_Id :=\n-                        Make_Defining_Identifier (Loc,\n-                          Chars (Obj_Type));\n+                        Make_Defining_Identifier (Loc, Chars (Obj_Type));\n \n       RACW_Type : constant Entity_Id :=\n                     Make_Defining_Identifier (Loc,\n                       New_External_Name (Chars (User_Type), 'P'));\n \n       Fat_Type : constant Entity_Id :=\n-                   Make_Defining_Identifier (Loc,\n-                     Chars (User_Type));\n+                   Make_Defining_Identifier (Loc, Chars (User_Type));\n \n       Fat_Type_Decl : Node_Id;\n "}, {"sha": "927688c6c1bd86cea01ba47bc29ae2639dfc0127", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -398,9 +398,7 @@ package body Sem_Util is\n          end loop;\n       end if;\n \n-      Subt :=\n-        Make_Defining_Identifier (Loc,\n-          Chars => New_Internal_Name ('S'));\n+      Subt := Make_Temporary (Loc, 'S');\n       Set_Is_Internal (Subt);\n \n       Decl :=\n@@ -624,9 +622,7 @@ package body Sem_Util is\n          return Empty;\n       end if;\n \n-      Subt :=\n-        Make_Defining_Identifier (Loc,\n-          Chars => New_Internal_Name ('S'));\n+      Subt := Make_Temporary (Loc, 'S');\n       Set_Is_Internal (Subt);\n \n       Decl :=\n@@ -666,10 +662,7 @@ package body Sem_Util is\n       end if;\n \n       declare\n-         Act : constant Entity_Id :=\n-                 Make_Defining_Identifier (Loc,\n-                   Chars => New_Internal_Name ('S'));\n-\n+         Act         : constant Entity_Id := Make_Temporary (Loc, 'S');\n          Constraints : constant List_Id := New_List;\n          Decl        : Node_Id;\n \n@@ -2080,9 +2073,7 @@ package body Sem_Util is\n                --  so we can continue semantic analysis\n \n                elsif Nam = Error then\n-                  Err :=\n-                    Make_Defining_Identifier (Sloc (N),\n-                      Chars => New_Internal_Name ('T'));\n+                  Err := Make_Temporary (Sloc (N), 'T');\n                   Set_Defining_Unit_Name (N, Err);\n \n                   return Err;\n@@ -8851,8 +8842,7 @@ package body Sem_Util is\n       Sloc_Value : Source_Ptr;\n       Id_Char    : Character) return Entity_Id\n    is\n-      N : constant Entity_Id :=\n-            Make_Defining_Identifier (Sloc_Value, New_Internal_Name (Id_Char));\n+      N : constant Entity_Id := Make_Temporary (Sloc_Value, Id_Char);\n \n    begin\n       Set_Ekind          (N, Kind);"}, {"sha": "da41111943bfa2cb19e95d1aeeb99768567cba6b", "filename": "gcc/ada/tbuild.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Ftbuild.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092ef350718e36fdb53cdeb2665efcb30486f8cf/gcc%2Fada%2Ftbuild.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.ads?ref=092ef350718e36fdb53cdeb2665efcb30486f8cf", "patch": "@@ -277,6 +277,9 @@ package Tbuild is\n    --  if the identical unit is compiled with a semantically consistent set\n    --  of sources, the numbers will be consistent. This means that it is fine\n    --  to use these as public symbols.\n+   --\n+   --  Note: Nearly all uses of this function are via calls to Make_Temporary,\n+   --  but there are just a few cases where it is called directly.\n \n    function New_Occurrence_Of\n      (Def_Id : Entity_Id;"}]}