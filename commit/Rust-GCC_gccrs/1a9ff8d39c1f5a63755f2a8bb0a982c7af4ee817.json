{"sha": "1a9ff8d39c1f5a63755f2a8bb0a982c7af4ee817", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE5ZmY4ZDM5YzFmNWE2Mzc1NWYyYThiYjBhOTgyYzdhZjRlZTgxNw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-03-03T19:15:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-16T08:43:05Z"}, "message": "[Ada] Ignore volatile restrictions in preanalysis\n\ngcc/ada/\n\n\t* sem_util.adb (Is_OK_Volatile_Context): All references to\n\tvolatile objects are legal in preanalysis.\n\t(Within_Volatile_Function): Previously it was wrongly called on\n\tEmpty entities; now it is only called on E_Return_Statement,\n\twhich allow the body to be greatly simplified.", "tree": {"sha": "a5a5925693632156078ad4efaec6b99830b9b561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5a5925693632156078ad4efaec6b99830b9b561"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a9ff8d39c1f5a63755f2a8bb0a982c7af4ee817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a9ff8d39c1f5a63755f2a8bb0a982c7af4ee817", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a9ff8d39c1f5a63755f2a8bb0a982c7af4ee817", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a9ff8d39c1f5a63755f2a8bb0a982c7af4ee817/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3feba0a578c364e6ca44ad5f954a30dc55e98065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3feba0a578c364e6ca44ad5f954a30dc55e98065", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3feba0a578c364e6ca44ad5f954a30dc55e98065"}], "stats": {"total": 32, "additions": 14, "deletions": 18}, "files": [{"sha": "6376b4e6b62cf51b56f1db8adb0a3761401fd2cd", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a9ff8d39c1f5a63755f2a8bb0a982c7af4ee817/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a9ff8d39c1f5a63755f2a8bb0a982c7af4ee817/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=1a9ff8d39c1f5a63755f2a8bb0a982c7af4ee817", "patch": "@@ -18871,27 +18871,14 @@ package body Sem_Util is\n       ------------------------------\n \n       function Within_Volatile_Function (Id : Entity_Id) return Boolean is\n-         Func_Id : Entity_Id;\n+         pragma Assert (Ekind (Id) = E_Return_Statement);\n \n-      begin\n-         --  Traverse the scope stack looking for a [generic] function\n-\n-         Func_Id := Id;\n-         while Present (Func_Id) and then Func_Id /= Standard_Standard loop\n-            if Ekind (Func_Id) in E_Function | E_Generic_Function then\n-\n-               --  ??? This routine could just use Return_Applies_To, but it\n-               --  is currently wrongly called by unanalyzed return statements\n-               --  coming from expression functions.\n-               pragma Assert (Func_Id = Return_Applies_To (Id));\n+         Func_Id : constant Entity_Id := Return_Applies_To (Id);\n \n-               return Is_Volatile_Function (Func_Id);\n-            end if;\n-\n-            Func_Id := Scope (Func_Id);\n-         end loop;\n+      begin\n+         pragma Assert (Ekind (Func_Id) in E_Function | E_Generic_Function);\n \n-         return False;\n+         return Is_Volatile_Function (Func_Id);\n       end Within_Volatile_Function;\n \n       --  Local variables\n@@ -18901,6 +18888,15 @@ package body Sem_Util is\n    --  Start of processing for Is_OK_Volatile_Context\n \n    begin\n+      --  Ignore context restriction when doing preanalysis, e.g. on a copy of\n+      --  an expression function, because this copy is not fully decorated and\n+      --  it is not possible to reliably decide the legality of the context.\n+      --  Any violations will be reported anyway when doing the full analysis.\n+\n+      if not Full_Analysis then\n+         return True;\n+      end if;\n+\n       --  For actual parameters within explicit parameter associations switch\n       --  the context to the corresponding subprogram call.\n "}]}