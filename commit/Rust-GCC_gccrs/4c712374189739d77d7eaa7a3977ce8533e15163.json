{"sha": "4c712374189739d77d7eaa7a3977ce8533e15163", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM3MTIzNzQxODk3MzlkNzdkN2VhYTdhMzk3N2NlODUzM2UxNTE2Mw==", "commit": {"author": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-10-19T21:00:39Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-10-19T21:00:39Z"}, "message": "c-common.c (c_common_truthvalue_conversion): Warn only for signed integer shift ops in boolean context.\n\n2016-10-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * c-common.c (c_common_truthvalue_conversion): Warn only for signed\n        integer shift ops in boolean context.\n\ntestsuite:\n2016-10-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * c-c++-common/Wint-in-bool-context-2.c: New test.\n\nFrom-SVN: r241354", "tree": {"sha": "480d808d16c12ad38fd79a06b8bb8ab85fdb929b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/480d808d16c12ad38fd79a06b8bb8ab85fdb929b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c712374189739d77d7eaa7a3977ce8533e15163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c712374189739d77d7eaa7a3977ce8533e15163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c712374189739d77d7eaa7a3977ce8533e15163", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c712374189739d77d7eaa7a3977ce8533e15163/comments", "author": null, "committer": null, "parents": [{"sha": "f3070dab7a2ded2c2ee612d6e48ca01b77327379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3070dab7a2ded2c2ee612d6e48ca01b77327379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3070dab7a2ded2c2ee612d6e48ca01b77327379"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "0ef8ef7aad9ea69bd86a8a77fa5dca8e221cab4f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c712374189739d77d7eaa7a3977ce8533e15163/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c712374189739d77d7eaa7a3977ce8533e15163/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=4c712374189739d77d7eaa7a3977ce8533e15163", "patch": "@@ -1,4 +1,9 @@\n-2016-06-16  Aldy Hernandez  <aldyh@redhat.com>\n+2016-10-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* c-common.c (c_common_truthvalue_conversion): Warn only for signed\n+\tinteger shift ops in boolean context.\n+\n+2016-10-18  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* c.opt (Walloca): New.\n \t(Walloca-larger-than=): New."}, {"sha": "8af3ad53a3dde1d0e3e4cc798e39001f3c4ff7ba", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c712374189739d77d7eaa7a3977ce8533e15163/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c712374189739d77d7eaa7a3977ce8533e15163/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=4c712374189739d77d7eaa7a3977ce8533e15163", "patch": "@@ -3328,8 +3328,15 @@ c_common_truthvalue_conversion (location_t location, tree expr)\n \t\t\t\t\t       TREE_OPERAND (expr, 0));\n \n     case LSHIFT_EXPR:\n-      warning_at (EXPR_LOCATION (expr), OPT_Wint_in_bool_context,\n-\t\t  \"<< in boolean context, did you mean '<' ?\");\n+      /* We will only warn on unsigned shifts here, because the majority of\n+\t false positive warnings happen in code where unsigned arithmetic\n+\t was used in anticipation of a possible overflow.\n+\t Furthermore, if we see an unsigned type here we know that the\n+\t result of the shift is not subject to integer promotion rules.  */\n+      if (TREE_CODE (TREE_TYPE (expr)) == INTEGER_TYPE\n+\t  && !TYPE_UNSIGNED (TREE_TYPE (expr)))\n+\twarning_at (EXPR_LOCATION (expr), OPT_Wint_in_bool_context,\n+\t\t    \"<< in boolean context, did you mean '<' ?\");\n       break;\n \n     case COND_EXPR:"}, {"sha": "8f5230f515ab7b5ba7e2088f51184247ae7d6e69", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c712374189739d77d7eaa7a3977ce8533e15163/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c712374189739d77d7eaa7a3977ce8533e15163/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c712374189739d77d7eaa7a3977ce8533e15163", "patch": "@@ -1,3 +1,7 @@\n+2016-10-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* c-c++-common/Wint-in-bool-context-2.c: New test.\n+\n 2016-10-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* gfortran.dg/dtio_17.f90: Fix test."}, {"sha": "04c064d778f4929beef5eaab52dc8f6ca51ec89c", "filename": "gcc/testsuite/c-c++-common/Wint-in-bool-context-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c712374189739d77d7eaa7a3977ce8533e15163/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWint-in-bool-context-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c712374189739d77d7eaa7a3977ce8533e15163/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWint-in-bool-context-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWint-in-bool-context-2.c?ref=4c712374189739d77d7eaa7a3977ce8533e15163", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-Wint-in-bool-context\" } */\n+/* { dg-do compile } */\n+\n+typedef unsigned u32;\n+typedef unsigned char u8;\n+#define KEYLENGTH 8\n+\n+int foo (u8 plen, u32 key)\n+{\n+  if ((plen < KEYLENGTH) && (key << plen)) /* { dg-bogus \"boolean context\" } */\n+    return -1;\n+\n+  if ((plen << KEYLENGTH) && (key < plen)) /* { dg-warning \"boolean context\" } */\n+    return -2;\n+\n+  return 0;\n+}"}]}