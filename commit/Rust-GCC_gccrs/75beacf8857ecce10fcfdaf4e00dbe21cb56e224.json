{"sha": "75beacf8857ecce10fcfdaf4e00dbe21cb56e224", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzViZWFjZjg4NTdlY2NlMTBmY2ZkYWY0ZTAwZGJlMjFjYjU2ZTIyNA==", "commit": {"author": {"name": "Will Cohen", "email": "wcohen@redhat.com", "date": "2001-02-21T05:05:25Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-02-21T05:05:25Z"}, "message": "quadlib.c (_U_Qfcnvfxt_quad_to_usgl): New function.\n\n\n        * config/pa/quadlib.c (_U_Qfcnvfxt_quad_to_usgl): New function.\n        * config/pa/long_double.h (FIXUNS_TRUNCTFSI2_LIBCALL): Added.\n        (INIT_TARGET_OPTABS): Use FIXUNS_TRUNCTFSI2_LIBCALL for\n        fixunstfsi_libfunc.\n\nFrom-SVN: r39937", "tree": {"sha": "14cce2eb5e6754f2aa1439ec07c12abe2e8eb43a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14cce2eb5e6754f2aa1439ec07c12abe2e8eb43a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75beacf8857ecce10fcfdaf4e00dbe21cb56e224", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75beacf8857ecce10fcfdaf4e00dbe21cb56e224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75beacf8857ecce10fcfdaf4e00dbe21cb56e224", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75beacf8857ecce10fcfdaf4e00dbe21cb56e224/comments", "author": {"login": "wcohen", "id": 1050609, "node_id": "MDQ6VXNlcjEwNTA2MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1050609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wcohen", "html_url": "https://github.com/wcohen", "followers_url": "https://api.github.com/users/wcohen/followers", "following_url": "https://api.github.com/users/wcohen/following{/other_user}", "gists_url": "https://api.github.com/users/wcohen/gists{/gist_id}", "starred_url": "https://api.github.com/users/wcohen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wcohen/subscriptions", "organizations_url": "https://api.github.com/users/wcohen/orgs", "repos_url": "https://api.github.com/users/wcohen/repos", "events_url": "https://api.github.com/users/wcohen/events{/privacy}", "received_events_url": "https://api.github.com/users/wcohen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33011c358ecb53978ad9d93f1d1dc5e9cd1ad551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33011c358ecb53978ad9d93f1d1dc5e9cd1ad551", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33011c358ecb53978ad9d93f1d1dc5e9cd1ad551"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "af11506d31163efba779fa272bf3db706cf18176", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75beacf8857ecce10fcfdaf4e00dbe21cb56e224/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75beacf8857ecce10fcfdaf4e00dbe21cb56e224/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75beacf8857ecce10fcfdaf4e00dbe21cb56e224", "patch": "@@ -1,3 +1,10 @@\n+2001-02-20  Will Cohen  <wcohen@redhat.com>\n+ \n+\t* config/pa/quadlib.c (_U_Qfcnvfxt_quad_to_usgl): New function.\n+\t* config/pa/long_double.h (FIXUNS_TRUNCTFSI2_LIBCALL): Added.\n+\t(INIT_TARGET_OPTABS): Use FIXUNS_TRUNCTFSI2_LIBCALL for\n+\tfixunstfsi_libfunc.\n+\n 2001-02-20  Stan Shebs  <shebs@apple.com>\n \n \t* config/rs6000/rs6000.c (output_cbranch): Output branches"}, {"sha": "e65f15f9345298c26444e5b985d6c977f6ae3e04", "filename": "gcc/config/pa/long_double.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75beacf8857ecce10fcfdaf4e00dbe21cb56e224/gcc%2Fconfig%2Fpa%2Flong_double.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75beacf8857ecce10fcfdaf4e00dbe21cb56e224/gcc%2Fconfig%2Fpa%2Flong_double.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Flong_double.h?ref=75beacf8857ecce10fcfdaf4e00dbe21cb56e224", "patch": "@@ -52,6 +52,7 @@ do { long value[4];                                                     \\\n    we can massage its return value for PA64.  */\n #define FIX_TRUNCTFSI2_LIBCALL \\\n   (TARGET_64BIT ? \"__U_Qfcnvfxt_quad_to_sgl\" : \"_U_Qfcnvfxt_quad_to_sgl\")\n+#define FIXUNS_TRUNCTFSI2_LIBCALL \"_U_Qfcnvfxt_quad_to_usgl\"\n #define FIX_TRUNCTFDI2_LIBCALL \"_U_Qfcnvfxt_quad_to_dbl\"\n #define EQTF2_LIBCALL \"_U_Qfeq\"\n #define NETF2_LIBCALL \"_U_Qfne\"\n@@ -89,7 +90,7 @@ do { long value[4];                                                     \\\n     floatditf_libfunc = gen_rtx_SYMBOL_REF (Pmode, FLOATDITF2_LIBCALL);  \\\n     fixtfsi_libfunc = gen_rtx_SYMBOL_REF (Pmode, FIX_TRUNCTFSI2_LIBCALL);\\\n     fixtfdi_libfunc = gen_rtx_SYMBOL_REF (Pmode, FIX_TRUNCTFDI2_LIBCALL);\\\n-    fixunstfsi_libfunc = gen_rtx_SYMBOL_REF (Pmode, FIX_TRUNCTFSI2_LIBCALL);  \\\n+    fixunstfsi_libfunc = gen_rtx_SYMBOL_REF (Pmode, FIXUNS_TRUNCTFSI2_LIBCALL);\\\n     fixunstfdi_libfunc = gen_rtx_SYMBOL_REF (Pmode, FIX_TRUNCTFDI2_LIBCALL);  \\\n     eqtf2_libfunc = gen_rtx_SYMBOL_REF (Pmode, EQTF2_LIBCALL);\t\t\\\n     netf2_libfunc = gen_rtx_SYMBOL_REF (Pmode, NETF2_LIBCALL);\t\t\\"}, {"sha": "cdf3ea989db236bff0dd7d0d46fe41c6722fa2d1", "filename": "gcc/config/pa/quadlib.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75beacf8857ecce10fcfdaf4e00dbe21cb56e224/gcc%2Fconfig%2Fpa%2Fquadlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75beacf8857ecce10fcfdaf4e00dbe21cb56e224/gcc%2Fconfig%2Fpa%2Fquadlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fquadlib.c?ref=75beacf8857ecce10fcfdaf4e00dbe21cb56e224", "patch": "@@ -92,3 +92,12 @@ __U_Qfcnvfxt_quad_to_sgl (long double a)\n   return _U_Qfcnvfxt_quad_to_sgl (a) >> 32;\n }\n #endif\n+\n+/* HP only has signed conversion in library, so need to synthesize an\n+   unsigned version */\n+unsigned int\n+_U_Qfcnvfxt_quad_to_usgl(long double a)\n+{\n+  extern long long _U_Qfcnvfxt_quad_to_dbl (long double a);\n+  return (unsigned int) _U_Qfcnvfxt_quad_to_dbl (a);\n+}"}]}