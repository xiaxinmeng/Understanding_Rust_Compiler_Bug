{"sha": "7192cbf1e29ab55637e9f20a4a9508a46c8ec18c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE5MmNiZjFlMjlhYjU1NjM3ZTlmMjBhNGE5NTA4YTQ2YzhlYzE4Yw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-21T07:06:37Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-21T07:06:37Z"}, "message": "h8300.c (function_arg): Replace 0 with NULL_RTX as appropriate.\n\n\t* config/h8300/h8300.c (function_arg): Replace 0 with NULL_RTX\n\tas appropriate.\n\tRemove redundant code.\n\nFrom-SVN: r49034", "tree": {"sha": "4bb4bc5da58e1a9255426166a94e27839f1f3ac0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bb4bc5da58e1a9255426166a94e27839f1f3ac0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7192cbf1e29ab55637e9f20a4a9508a46c8ec18c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7192cbf1e29ab55637e9f20a4a9508a46c8ec18c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7192cbf1e29ab55637e9f20a4a9508a46c8ec18c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7192cbf1e29ab55637e9f20a4a9508a46c8ec18c/comments", "author": null, "committer": null, "parents": [{"sha": "d1552d7b014918281e1bcb68388936b68094e354", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1552d7b014918281e1bcb68388936b68094e354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1552d7b014918281e1bcb68388936b68094e354"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "c86738f1e1f9acede287c6adc0814a8f1b66515e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7192cbf1e29ab55637e9f20a4a9508a46c8ec18c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7192cbf1e29ab55637e9f20a4a9508a46c8ec18c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7192cbf1e29ab55637e9f20a4a9508a46c8ec18c", "patch": "@@ -1,3 +1,9 @@\n+2002-01-21  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.c (function_arg): Replace 0 with NULL_RTX\n+\tas appropriate.\n+\tRemove redundant code.\n+\n 2002-01-21  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* config/alpha/alpha.h, config/arc/arc.h, config/avr/avr.h,"}, {"sha": "6770e03ff09bbbf7dc7b77bb298c194d1832269c", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7192cbf1e29ab55637e9f20a4a9508a46c8ec18c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7192cbf1e29ab55637e9f20a4a9508a46c8ec18c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=7192cbf1e29ab55637e9f20a4a9508a46c8ec18c", "patch": "@@ -825,28 +825,26 @@ function_arg (cum, mode, type, named)\n      tree type;\n      int named;\n {\n-  rtx result = 0;\n+  rtx result = NULL_RTX;\n   const char *fname;\n   int regpass = 0;\n \n   /* Never pass unnamed arguments in registers.  */\n   if (!named)\n-    return 0;\n+    return NULL_RTX;\n \n   /* Pass 3 regs worth of data in regs when user asked on the command line.  */\n   if (TARGET_QUICKCALL)\n     regpass = 3;\n \n   /* If calling hand written assembler, use 4 regs of args.  */\n-\n   if (cum->libcall)\n     {\n       const char * const *p;\n \n       fname = XSTR (cum->libcall, 0);\n \n       /* See if this libcall is one of the hand coded ones.  */\n-\n       for (p = hand_list; *p && strcmp (*p, fname) != 0; p++)\n \t;\n \n@@ -863,11 +861,7 @@ function_arg (cum, mode, type, named)\n       else\n \tsize = GET_MODE_SIZE (mode);\n \n-      if (size + cum->nbytes > regpass * UNITS_PER_WORD)\n-\t{\n-\t  result = 0;\n-\t}\n-      else\n+      if (size + cum->nbytes <= regpass * UNITS_PER_WORD)\n \t{\n \t  switch (cum->nbytes / UNITS_PER_WORD)\n \t    {\n@@ -883,8 +877,6 @@ function_arg (cum, mode, type, named)\n \t    case 3:\n \t      result = gen_rtx_REG (mode, 3);\n \t      break;\n-\t    default:\n-\t      result = 0;\n \t    }\n \t}\n     }"}]}