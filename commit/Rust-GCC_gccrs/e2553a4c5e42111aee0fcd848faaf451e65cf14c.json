{"sha": "e2553a4c5e42111aee0fcd848faaf451e65cf14c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI1NTNhNGM1ZTQyMTExYWVlMGZjZDg0OGZhYWY0NTFlNjVjZjE0Yw==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "francois.cppdevs@free.fr", "date": "2010-02-22T21:21:17Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-02-22T21:21:17Z"}, "message": "profile_mode.xml: Minor updates and fixes.\n\n2010-02-22  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n\n       * doc/xml/manual/profile_mode.xml: Minor updates and fixes.\n       * doc/xml/manual/debug_mode.xml: Likewise.\n       * doc/xml/manual/test.xml: Likewise.\n\nFrom-SVN: r156975", "tree": {"sha": "26e0f94a123c9226eb6774b3bdfbcc293d4276e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26e0f94a123c9226eb6774b3bdfbcc293d4276e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2553a4c5e42111aee0fcd848faaf451e65cf14c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2553a4c5e42111aee0fcd848faaf451e65cf14c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2553a4c5e42111aee0fcd848faaf451e65cf14c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2553a4c5e42111aee0fcd848faaf451e65cf14c/comments", "author": null, "committer": null, "parents": [{"sha": "8d7746235a8ac13e003757868e4b55efbbea4e8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d7746235a8ac13e003757868e4b55efbbea4e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d7746235a8ac13e003757868e4b55efbbea4e8d"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "f6448c16d9d779b58411df4e0d7059c87864227d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2553a4c5e42111aee0fcd848faaf451e65cf14c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2553a4c5e42111aee0fcd848faaf451e65cf14c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e2553a4c5e42111aee0fcd848faaf451e65cf14c", "patch": "@@ -1,3 +1,9 @@\n+2010-02-22  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n+\n+       * doc/xml/manual/profile_mode.xml: Minor updates and fixes.\n+       * doc/xml/manual/debug_mode.xml: Likewise.\n+       * doc/xml/manual/test.xml: Likewise.\n+\n 2010-02-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/tr1_impl/complex (arg): Use std::signbit only when"}, {"sha": "32b87a12c7dbe620c08974e91b267537f842ad58", "filename": "libstdc++-v3/doc/xml/manual/debug_mode.xml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2553a4c5e42111aee0fcd848faaf451e65cf14c/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug_mode.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2553a4c5e42111aee0fcd848faaf451e65cf14c/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug_mode.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug_mode.xml?ref=e2553a4c5e42111aee0fcd848faaf451e65cf14c", "patch": "@@ -629,7 +629,7 @@ namespace std\n </programlisting>\n   \n <para>In debug mode we include the release-mode container (which is now\n-defined in in the namespace <code>__norm</code>) and also the\n+defined in the namespace <code>__norm</code>) and also the\n debug-mode container. The debug-mode container is defined within the\n namespace <code>__debug</code>, which is associated with namespace\n <code>std</code> via the C++0x namespace association language feature.  This\n@@ -672,7 +672,7 @@ namespace std\n     debug-mode components</title>\n \n <para>Because each component has a distinct and separate release and\n-debug implementation, there are are no issues with link-time\n+debug implementation, there is no issue with link-time\n coexistence: the separate namespaces result in different mangled\n names, and thus unique linkage.</para>\n \n@@ -799,7 +799,7 @@ test02()\n       enticing option, because it would eliminate the need for\n       the <code>link_name</code> extension by aliasing the\n       templates. However, there is no true template aliasing mechanism\n-      is C++, because both <code>using</code> directives and using\n+      in C++, because both <code>using</code> directives and using\n       declarations disallow specialization. This method fails\n       the <emphasis>correctness</emphasis> criteria.</para></listitem>\n "}, {"sha": "2dfeb62debc03128c7041f9a6bde75ac2ec87c84", "filename": "libstdc++-v3/doc/xml/manual/profile_mode.xml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2553a4c5e42111aee0fcd848faaf451e65cf14c/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprofile_mode.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2553a4c5e42111aee0fcd848faaf451e65cf14c/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprofile_mode.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprofile_mode.xml?ref=e2553a4c5e42111aee0fcd848faaf451e65cf14c", "patch": "@@ -128,7 +128,7 @@ vector-size: improvement = 3: call stack = 0x804842c ...\n   The warning message.  For some warnings, this is static text, e.g.,\n   \"change vector to list\".  For other warnings, such as the one above,\n   the message contains numeric advice, e.g., the suggested initial size\n-  of the hashtable.\n+  of the vector.\n   </para>\n   </listitem>\n   </itemizedlist>\n@@ -199,7 +199,7 @@ vector-size: improvement = 3: call stack = 0x804842c ...\n    Make the library not use threads.  If thread local storage (TLS) is not \n    available, you will get a preprocessor error asking you to set\n    -D_GLIBCXX_PROFILE_NO_THREADS if your program is single-threaded.\n-   Multithreded execution without TLS is not supported.\n+   Multithreaded execution without TLS is not supported.\n    (Environment variable not supported.)\n    </para></listitem>\n   <listitem><para>\n@@ -536,7 +536,7 @@ it helps the user focus on the key problems and ignore the uninteresting ones.\n  xreflabel=\"Using the Standard Library in the Runtime Library\">\n <title>Using the Standard Library in the Instrumentation Implementation</title>\n   <para>\n-  As much as we would like to avoid uses of stdlibc++ within our \n+  As much as we would like to avoid uses of libstdc++ within our \n   instrumentation library, containers such as unordered_map are very \n   appealing.  We plan to use them as long as they are named properly \n   to avoid ambiguity.\n@@ -551,7 +551,7 @@ it helps the user focus on the key problems and ignore the uninteresting ones.\n   User applications/libraries can provide malloc hooks.\n   When the implementation of the malloc hooks uses stdlibc++, there can\n   be an infinite cycle between the profile mode instrumentation and the\n-  the malloc hook code.\n+  malloc hook code.\n   </para>\n   <para>\n   We protect against reentrance to the profile mode instrumentation code,"}, {"sha": "6c0f266d34919754f3dcb5d12d2487f75621d207", "filename": "libstdc++-v3/doc/xml/manual/test.xml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2553a4c5e42111aee0fcd848faaf451e65cf14c/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2553a4c5e42111aee0fcd848faaf451e65cf14c/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml?ref=e2553a4c5e42111aee0fcd848faaf451e65cf14c", "patch": "@@ -837,7 +837,7 @@ only default variables.\n        </para>\n \n        <para>\n-\t Random code paths can be constructed using the the basic test\n+\t Random code paths can be constructed using the basic test\n \t sequences and instrumentation as above, only combined in a\n \t random or pseudo-random way.\n        </para>\n@@ -891,7 +891,7 @@ only default variables.\n \t Which has several tests for container member functions,\n Includes control and test container objects. Configuration includes\n random seed, iterations, number of distinct values, and the\n-probability that and exception will be thrown. Assumes instantiating\n+probability that an exception will be thrown. Assumes instantiating\n container uses an extension\n allocator, <classname>__gnu_cxx::throw_allocator_random</classname>,\n as the allocator type."}]}