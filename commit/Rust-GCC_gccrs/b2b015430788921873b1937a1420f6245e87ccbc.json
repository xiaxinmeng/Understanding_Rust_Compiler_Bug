{"sha": "b2b015430788921873b1937a1420f6245e87ccbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJiMDE1NDMwNzg4OTIxODczYjE5MzdhMTQyMGY2MjQ1ZTg3Y2NiYw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2010-11-02T12:34:02Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2010-11-02T12:34:02Z"}, "message": "Tune alignment for Intel Core i7\n\n\t* config/i386.h (TARGET_COREI7{_32,_64,}): New macros.\n\t(enum processor_type): Update comment.  Add entries for Core i7.\n\t* config/i386-c.c (ix86_target_macros_internal): Update.\n\t* config/i386.c (m_COREI7{_32,_64}): New macros.\n\t(m_GENERIC32, m_GENERIC64): Use generic tuning for Core i7.\n\t(processor_target_table): Tune alignment for Core i7.\n\t(ix86_option_override_internal): Use PROCESSOR_COREI7_*.\n\n\t* doc/invoke.texi: Document \"corei7\" option value.\n\nCo-Authored-By: Maxim Kuvyrkov <maxim@codesourcery.com>\n\nFrom-SVN: r166177", "tree": {"sha": "45c2d3b30ecf29a6bd3a8a1fc240eda24ee834b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45c2d3b30ecf29a6bd3a8a1fc240eda24ee834b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2b015430788921873b1937a1420f6245e87ccbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b015430788921873b1937a1420f6245e87ccbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2b015430788921873b1937a1420f6245e87ccbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b015430788921873b1937a1420f6245e87ccbc/comments", "author": null, "committer": null, "parents": [{"sha": "2855d9d9497b1dfb719b8fd4262c261ac85b49d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2855d9d9497b1dfb719b8fd4262c261ac85b49d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2855d9d9497b1dfb719b8fd4262c261ac85b49d3"}], "stats": {"total": 52, "additions": 47, "deletions": 5}, "files": [{"sha": "83aa17691b3fdff22138740c58c27e8fbaad1db5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b015430788921873b1937a1420f6245e87ccbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b015430788921873b1937a1420f6245e87ccbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2b015430788921873b1937a1420f6245e87ccbc", "patch": "@@ -1,3 +1,18 @@\n+2010-11-02  Bernd Schmidt  <bernds@codesourcery.com>\n+\t    Maxim Kuvyrkov  <maxim@codesourcery.com>\n+\n+\tTune alignment for Intel Core i7\n+\n+\t* config/i386.h (TARGET_COREI7{_32,_64,}): New macros.\n+\t(enum processor_type): Update comment.  Add entries for Core i7.\n+\t* config/i386-c.c (ix86_target_macros_internal): Update.\n+\t* config/i386.c (m_COREI7{_32,_64}): New macros.\n+\t(m_GENERIC32, m_GENERIC64): Use generic tuning for Core i7.\n+\t(processor_target_table): Tune alignment for Core i7.\n+\t(ix86_option_override_internal): Use PROCESSOR_COREI7_*.\n+\n+\t* doc/invoke.texi: Document \"corei7\" option value.\n+\n 2010-11-02  Bernd Schmidt  <bernds@codesourcery.com>\n \t    Maxim Kuvyrkov  <maxim@codesourcery.com>\n \t    H.J. Lu  <hjl.tools@gmail.com>"}, {"sha": "3b4409e889a8ba6ffc1314bd6bf657e6dbd73815", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b015430788921873b1937a1420f6245e87ccbc/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b015430788921873b1937a1420f6245e87ccbc/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=b2b015430788921873b1937a1420f6245e87ccbc", "patch": "@@ -122,6 +122,11 @@ ix86_target_macros_internal (int isa_flag,\n       def_or_undef (parse_in, \"__core2\");\n       def_or_undef (parse_in, \"__core2__\");\n       break;\n+    case PROCESSOR_COREI7_32:\n+    case PROCESSOR_COREI7_64:\n+      def_or_undef (parse_in, \"__corei7\");\n+      def_or_undef (parse_in, \"__corei7__\");\n+      break;\n     case PROCESSOR_ATOM:\n       def_or_undef (parse_in, \"__atom\");\n       def_or_undef (parse_in, \"__atom__\");\n@@ -197,6 +202,10 @@ ix86_target_macros_internal (int isa_flag,\n     case PROCESSOR_CORE2:\n       def_or_undef (parse_in, \"__tune_core2__\");\n       break;\n+    case PROCESSOR_COREI7_32:\n+    case PROCESSOR_COREI7_64:\n+      def_or_undef (parse_in, \"__tune_corei7__\");\n+      break;\n     case PROCESSOR_ATOM:\n       def_or_undef (parse_in, \"__tune_atom__\");\n       break;"}, {"sha": "84317e08a092f7972fc30af571923f7ec324610b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b015430788921873b1937a1420f6245e87ccbc/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b015430788921873b1937a1420f6245e87ccbc/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b2b015430788921873b1937a1420f6245e87ccbc", "patch": "@@ -1642,6 +1642,8 @@ const struct processor_costs *ix86_cost = &pentium_cost;\n #define m_PENT4  (1<<PROCESSOR_PENTIUM4)\n #define m_NOCONA  (1<<PROCESSOR_NOCONA)\n #define m_CORE2  (1<<PROCESSOR_CORE2)\n+#define m_COREI7_32  (1<<PROCESSOR_COREI7_32)\n+#define m_COREI7_64  (1<<PROCESSOR_COREI7_64)\n #define m_ATOM  (1<<PROCESSOR_ATOM)\n \n #define m_GEODE  (1<<PROCESSOR_GEODE)\n@@ -1654,8 +1656,8 @@ const struct processor_costs *ix86_cost = &pentium_cost;\n #define m_BDVER1  (1<<PROCESSOR_BDVER1)\n #define m_AMD_MULTIPLE  (m_K8 | m_ATHLON | m_AMDFAM10 | m_BDVER1)\n \n-#define m_GENERIC32 (1<<PROCESSOR_GENERIC32)\n-#define m_GENERIC64 (1<<PROCESSOR_GENERIC64)\n+#define m_GENERIC32 (1<<PROCESSOR_GENERIC32 | m_COREI7_32)\n+#define m_GENERIC64 (1<<PROCESSOR_GENERIC64 | m_COREI7_64)\n \n /* Generic instruction choice should be common subset of supported CPUs\n    (PPro/PENT4/NOCONA/CORE2/Athlon/K8).  */\n@@ -2461,6 +2463,10 @@ static const struct ptt processor_target_table[PROCESSOR_max] =\n   {&k8_cost, 16, 7, 16, 7, 16},\n   {&nocona_cost, 0, 0, 0, 0, 0},\n   {&core2_cost, 16, 10, 16, 10, 16},\n+  /* Core i7 32-bit.  */\n+  {&generic32_cost, 16, 10, 16, 10, 16},\n+  /* Core i7 64-bit.  */\n+  {&generic64_cost, 16, 10, 16, 10, 16},\n   {&generic32_cost, 16, 7, 16, 7, 16},\n   {&generic64_cost, 16, 10, 16, 10, 16},\n   {&amdfam10_cost, 32, 24, 32, 7, 32},\n@@ -3183,7 +3189,7 @@ ix86_option_override_internal (bool main_args_p)\n       {\"core2\", PROCESSOR_CORE2, CPU_CORE2,\n \tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n \t| PTA_SSSE3 | PTA_CX16},\n-      {\"corei7\", PROCESSOR_GENERIC64, CPU_GENERIC64,\n+      {\"corei7\", PROCESSOR_COREI7_64, CPU_GENERIC64,\n        PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n        | PTA_SSSE3 | PTA_SSE4_1 | PTA_SSE4_2 | PTA_CX16},\n       {\"atom\", PROCESSOR_ATOM, CPU_ATOM,\n@@ -3554,6 +3560,11 @@ ix86_option_override_internal (bool main_args_p)\n \t\tix86_schedule = CPU_PENTIUMPRO;\n \t\tbreak;\n \n+\t      case PROCESSOR_COREI7_64:\n+\t\tix86_tune = PROCESSOR_COREI7_32;\n+\t\tix86_schedule = CPU_PENTIUMPRO;\n+\t\tbreak;\n+\n \t      default:\n \t\tbreak;\n \t      }"}, {"sha": "1a2c3f33194961ca3e9709ba76b2d0256457c269", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b015430788921873b1937a1420f6245e87ccbc/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b015430788921873b1937a1420f6245e87ccbc/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=b2b015430788921873b1937a1420f6245e87ccbc", "patch": "@@ -239,6 +239,9 @@ extern const struct processor_costs ix86_size_cost;\n #define TARGET_ATHLON_K8 (TARGET_K8 || TARGET_ATHLON)\n #define TARGET_NOCONA (ix86_tune == PROCESSOR_NOCONA)\n #define TARGET_CORE2 (ix86_tune == PROCESSOR_CORE2)\n+#define TARGET_COREI7_32 (ix86_tune == PROCESSOR_COREI7_32)\n+#define TARGET_COREI7_64 (ix86_tune == PROCESSOR_COREI7_64)\n+#define TARGET_COREI7 (TARGET_COREI7_32 || TARGET_COREI7_64)\n #define TARGET_GENERIC32 (ix86_tune == PROCESSOR_GENERIC32)\n #define TARGET_GENERIC64 (ix86_tune == PROCESSOR_GENERIC64)\n #define TARGET_GENERIC (TARGET_GENERIC32 || TARGET_GENERIC64)\n@@ -2040,8 +2043,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t\"call \" CRT_MKSTR(__USER_LABEL_PREFIX__) #FUNC \"\\n\"\t\\\n \tTEXT_SECTION_ASM_OP);\n \f\n-/* Which processor to schedule for. The cpu attribute defines a list that\n-   mirrors this list, so changes to i386.md must be made at the same time.  */\n+/* Which processor to tune code generation for.  */\n \n enum processor_type\n {\n@@ -2056,6 +2058,8 @@ enum processor_type\n   PROCESSOR_K8,\n   PROCESSOR_NOCONA,\n   PROCESSOR_CORE2,\n+  PROCESSOR_COREI7_32,\n+  PROCESSOR_COREI7_64,\n   PROCESSOR_GENERIC32,\n   PROCESSOR_GENERIC64,\n   PROCESSOR_AMDFAM10,"}, {"sha": "0355344b4b082bfcb89524337556a0a07511895f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b015430788921873b1937a1420f6245e87ccbc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b015430788921873b1937a1420f6245e87ccbc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b2b015430788921873b1937a1420f6245e87ccbc", "patch": "@@ -12051,6 +12051,9 @@ SSE2 and SSE3 instruction set support.\n @item core2\n Intel Core2 CPU with 64-bit extensions, MMX, SSE, SSE2, SSE3 and SSSE3\n instruction set support.\n+@item corei7\n+Intel Core i7 CPU with 64-bit extensions, MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1\n+and SSE4.2 instruction set support.\n @item atom\n Intel Atom CPU with 64-bit extensions, MMX, SSE, SSE2, SSE3 and SSSE3\n instruction set support."}]}