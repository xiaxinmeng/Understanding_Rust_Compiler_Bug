{"sha": "66dfe4c4f83eb1a3f42083251c989f271fa3b5cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZkZmU0YzRmODNlYjFhM2Y0MjA4MzI1MWM5ODlmMjcxZmEzYjVjZg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2013-08-25T00:24:27Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2013-08-25T00:24:27Z"}, "message": "c-pretty-print.h (c_pretty_printer::id_expression): Now a virtual function.\n\nc-family/\n\t* c-pretty-print.h (c_pretty_printer::id_expression): Now a\n\tvirtual function.\n\t(pp_c_id_expression): Remove.\n\t(pp_id_expression): Adjust.\n\t* c-pretty-print.c (c_pretty_printer::id_expression): Rename from\n\tpp_c_id_expression.  Adjust.\n\t(pp_c_postfix_expression): Use pp_id_expression.\n\t(c_pretty_printer::c_pretty_printer): Do not assign to id_expression.\n\ncp/\n\t* cxx-pretty-print.h (cxx_pretty_printer::id_expression): Declare.\n\t* cxx-pretty-print.c (cxx_pretty_printer::id_expression): Rename\n\tfrom pp_cxx_id_expression.  Adjust.\n\t(pp_cxx_userdef_literal): Use pp_id_expression.\n\t(pp_cxx_primary_expression): Likewise.\n\t(pp_cxx_direct_declarator): Likewise.\n\t(cxx_pretty_printer::cxx_pretty_printer): Do not assign to\n\tid_expression.\n\nFrom-SVN: r201973", "tree": {"sha": "238b02b9d5f7acb7ad9b512c5376edf0261499fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/238b02b9d5f7acb7ad9b512c5376edf0261499fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84deafd2c30fe64b6980d58ef9ac74395526fba8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84deafd2c30fe64b6980d58ef9ac74395526fba8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84deafd2c30fe64b6980d58ef9ac74395526fba8"}], "stats": {"total": 58, "additions": 39, "deletions": 19}, "files": [{"sha": "c3d9ab7fcaff812f44a1aa9b62b3d08f22ed7e39", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=66dfe4c4f83eb1a3f42083251c989f271fa3b5cf", "patch": "@@ -1,3 +1,14 @@\n+2013-08-24  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* c-pretty-print.h (c_pretty_printer::id_expression): Now a\n+\tvirtual function.\n+\t(pp_c_id_expression): Remove.\n+\t(pp_id_expression): Adjust.\n+\t* c-pretty-print.c (c_pretty_printer::id_expression): Rename from\n+\tpp_c_id_expression.  Adjust.\n+\t(pp_c_postfix_expression): Use pp_id_expression.\n+\t(c_pretty_printer::c_pretty_printer): Do not assign to id_expression.\n+\n 2013-08-24  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* c-pretty-print.h (c_pretty_printer::constant): Now a virtual"}, {"sha": "a5dc62e07c1eddb2dcad5e2a9ef72b9828e29550", "filename": "gcc/c-family/c-pretty-print.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/gcc%2Fc-family%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/gcc%2Fc-family%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.c?ref=66dfe4c4f83eb1a3f42083251c989f271fa3b5cf", "patch": "@@ -1422,7 +1422,7 @@ pp_c_brace_enclosed_initializer_list (c_pretty_printer *pp, tree l)\n        identifier  */\n \n void\n-pp_c_id_expression (c_pretty_printer *pp, tree t)\n+c_pretty_printer::id_expression (tree t)\n {\n   switch (TREE_CODE (t))\n     {\n@@ -1433,15 +1433,15 @@ pp_c_id_expression (c_pretty_printer *pp, tree t)\n     case FUNCTION_DECL:\n     case FIELD_DECL:\n     case LABEL_DECL:\n-      pp_c_tree_decl_identifier (pp, t);\n+      pp_c_tree_decl_identifier (this, t);\n       break;\n \n     case IDENTIFIER_NODE:\n-      pp_c_tree_identifier (pp, t);\n+      pp_c_tree_identifier (this, t);\n       break;\n \n     default:\n-      pp_unsupported_tree (pp, t);\n+      pp_unsupported_tree (this, t);\n       break;\n     }\n }\n@@ -1645,7 +1645,7 @@ pp_c_postfix_expression (c_pretty_printer *pp, tree e)\n     case ADDR_EXPR:\n       if (TREE_CODE (TREE_OPERAND (e, 0)) == FUNCTION_DECL)\n \t{\n-\t  pp_c_id_expression (pp, TREE_OPERAND (e, 0));\n+          pp_id_expression (pp, TREE_OPERAND (e, 0));\n \t  break;\n \t}\n       /* else fall through.  */\n@@ -2339,7 +2339,6 @@ c_pretty_printer::c_pretty_printer ()\n \n   statement                 = pp_c_statement;\n \n-  id_expression             = pp_c_id_expression;\n   primary_expression        = pp_c_primary_expression;\n   postfix_expression        = pp_c_postfix_expression;\n   unary_expression          = pp_c_unary_expression;"}, {"sha": "91e635f56abb019e0130ba568946fcae05c086d7", "filename": "gcc/c-family/c-pretty-print.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/gcc%2Fc-family%2Fc-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/gcc%2Fc-family%2Fc-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.h?ref=66dfe4c4f83eb1a3f42083251c989f271fa3b5cf", "patch": "@@ -52,6 +52,7 @@ struct c_pretty_printer : pretty_printer\n   c_pretty_printer ();\n \n   virtual void constant (tree);\n+  virtual void id_expression (tree);\n   /* Points to the first element of an array of offset-list.\n      Not used yet.  */\n   int *offset_list;\n@@ -77,7 +78,6 @@ struct c_pretty_printer : pretty_printer\n \n   c_pretty_print_fn statement;\n \n-  c_pretty_print_fn id_expression;\n   c_pretty_print_fn primary_expression;\n   c_pretty_print_fn postfix_expression;\n   c_pretty_print_fn unary_expression;\n@@ -110,7 +110,7 @@ struct c_pretty_printer : pretty_printer\n #define pp_statement(PP, S)             (PP)->statement (PP, S)\n \n #define pp_constant(PP, E)              (PP)->constant (E)\n-#define pp_id_expression(PP, E)         (PP)->id_expression (PP, E)\n+#define pp_id_expression(PP, E)         (PP)->id_expression (E)\n #define pp_primary_expression(PP, E)    (PP)->primary_expression (PP, E)\n #define pp_postfix_expression(PP, E)    (PP)->postfix_expression (PP, E)\n #define pp_unary_expression(PP, E)      (PP)->unary_expression (PP, E)\n@@ -169,7 +169,6 @@ void pp_c_cast_expression (c_pretty_printer *, tree);\n void pp_c_postfix_expression (c_pretty_printer *, tree);\n void pp_c_primary_expression (c_pretty_printer *, tree);\n void pp_c_init_declarator (c_pretty_printer *, tree);\n-void pp_c_id_expression (c_pretty_printer *, tree);\n void pp_c_ws_string (c_pretty_printer *, const char *);\n void pp_c_identifier (c_pretty_printer *, const char *);\n void pp_c_string_literal (c_pretty_printer *, tree);"}, {"sha": "830744826cfbaa885b919d9097357a48ca38be6f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=66dfe4c4f83eb1a3f42083251c989f271fa3b5cf", "patch": "@@ -1,3 +1,14 @@\n+2013-08-24  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* cxx-pretty-print.h (cxx_pretty_printer::id_expression): Declare.\n+\t* cxx-pretty-print.c (cxx_pretty_printer::id_expression): Rename\n+\tfrom pp_cxx_id_expression.  Adjust.\n+\t(pp_cxx_userdef_literal): Use pp_id_expression.\n+\t(pp_cxx_primary_expression): Likewise.\n+\t(pp_cxx_direct_declarator): Likewise.\n+\t(cxx_pretty_printer::cxx_pretty_printer): Do not assign to\n+\tid_expression.\n+\n 2013-08-24  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* cxx-pretty-print.h (cxx_pretty_printer::constant): Now a member"}, {"sha": "dcebe0bbcc643192bad523768ef0a18d3c69cfa1", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=66dfe4c4f83eb1a3f42083251c989f271fa3b5cf", "patch": "@@ -355,15 +355,15 @@ cxx_pretty_printer::constant (tree t)\n       unqualified-id\n       qualified-id   */\n \n-static inline void\n-pp_cxx_id_expression (cxx_pretty_printer *pp, tree t)\n+void\n+cxx_pretty_printer::id_expression (tree t)\n {\n   if (TREE_CODE (t) == OVERLOAD)\n     t = OVL_CURRENT (t);\n   if (DECL_P (t) && DECL_CONTEXT (t))\n-    pp_cxx_qualified_id (pp, t);\n+    pp_cxx_qualified_id (this, t);\n   else\n-    pp_cxx_unqualified_id (pp, t);\n+    pp_cxx_unqualified_id (this, t);\n }\n \n /* user-defined literal:\n@@ -373,7 +373,7 @@ void\n pp_cxx_userdef_literal (cxx_pretty_printer *pp, tree t)\n {\n   pp_constant (pp, USERDEF_LITERAL_VALUE (t));\n-  pp_cxx_id_expression (pp, USERDEF_LITERAL_SUFFIX_ID (t));\n+  pp_id_expression (pp, USERDEF_LITERAL_SUFFIX_ID (t));\n }\n \n \n@@ -436,7 +436,7 @@ pp_cxx_primary_expression (cxx_pretty_printer *pp, tree t)\n     case OVERLOAD:\n     case CONST_DECL:\n     case TEMPLATE_DECL:\n-      pp_cxx_id_expression (pp, t);\n+      pp_id_expression (pp, t);\n       break;\n \n     case RESULT_DECL:\n@@ -1543,14 +1543,14 @@ pp_cxx_direct_declarator (cxx_pretty_printer *pp, tree t)\n \t       parameter pack.  */\n \t    pp_cxx_ws_string (pp, \"...\");\n \t\t      \n-\t  pp_cxx_id_expression (pp, DECL_NAME (t));\n+\t  pp_id_expression (pp, DECL_NAME (t));\n \t}\n       pp_cxx_abstract_declarator (pp, TREE_TYPE (t));\n       break;\n \n     case FUNCTION_DECL:\n       pp_cxx_space_for_pointer_operator (pp, TREE_TYPE (TREE_TYPE (t)));\n-      pp_cxx_id_expression (pp, t);\n+      pp_id_expression (pp, t);\n       pp_cxx_parameter_declaration_clause (pp, t);\n \n       if (DECL_NONSTATIC_MEMBER_FUNCTION_P (t))\n@@ -2452,7 +2452,6 @@ cxx_pretty_printer::cxx_pretty_printer ()\n \n   /* pp->statement = (pp_fun) pp_cxx_statement;  */\n \n-  id_expression = (pp_fun) pp_cxx_id_expression;\n   primary_expression = (pp_fun) pp_cxx_primary_expression;\n   postfix_expression = (pp_fun) pp_cxx_postfix_expression;\n   unary_expression = (pp_fun) pp_cxx_unary_expression;"}, {"sha": "77447c30a1bf68359bacca208533c8e4e6e1f879", "filename": "gcc/cp/cxx-pretty-print.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/gcc%2Fcp%2Fcxx-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66dfe4c4f83eb1a3f42083251c989f271fa3b5cf/gcc%2Fcp%2Fcxx-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.h?ref=66dfe4c4f83eb1a3f42083251c989f271fa3b5cf", "patch": "@@ -33,7 +33,8 @@ struct cxx_pretty_printer : c_pretty_printer\n {\n   cxx_pretty_printer ();\n \n-  virtual void constant (tree);\n+  void constant (tree);\n+  void id_expression (tree);\n   /* This is the enclosing scope of the entity being pretty-printed.  */\n   tree enclosing_scope;\n };"}]}