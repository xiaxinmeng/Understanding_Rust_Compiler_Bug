{"sha": "fa3717c173192eb04440734a3ee110982f31e592", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmEzNzE3YzE3MzE5MmViMDQ0NDA3MzRhM2VlMTEwOTgyZjMxZTU5Mg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-05-24T13:05:26Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-24T13:05:26Z"}, "message": "[Ada] Crash on function in Ghost subunit\n\nThis patch modifies the creation of class-wide subtypes to preserve vital\nattributes related to Ghost code. The subtype is created by copying the\ncontents of a class-wide type into a newly created itype. When the itype\nis created within a Ghost region, the act of copying destroys Ghost code\nrelated attributes. As a result, if the now living class-wide subtype is\nfrozen within an ignored Ghost region, its freeze node is hoisted prior\nto the start of the region, howeve the subtype is still eliminated from\nthe tree.\n\n------------\n-- Source --\n------------\n\n--  pack.ads\n\nwith Ada.Finalization; use Ada.Finalization;\n\npackage Pack is\n   type Ctrl is new Controlled with null record;\n   function Make_Ctrl return Ctrl;\n\n   package Nested with Ghost is\n      procedure Proc;\n   end Nested;\nend Pack;\n\n--  pack.adb\n\npackage body Pack is\n   function Make_Ctrl return Ctrl is\n   begin\n      return Result : Ctrl;\n   end Make_Ctrl;\n\n   package body Nested is separate;\nend Pack;\n\n--  pack-nested.adb\n\nseparate (Pack)\n\npackage body Nested is\n   procedure Proc is\n      Res : constant Ctrl'Class := Make_Ctrl;\n   begin null; end Proc;\nend Nested;\n\n-----------------\n-- Compilation --\n-----------------\n\n$ gcc -c pack.adb\n\n2018-05-24  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* exp_util.adb (New_Class_Wide_Subtype): Capture and restore relevant\n\tGhost-related attributes of the class-wide subtype because the copy\n\tclobbers them.\n\nFrom-SVN: r260653", "tree": {"sha": "cc31ee41442c6c152781125628426dd0b51a799e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc31ee41442c6c152781125628426dd0b51a799e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa3717c173192eb04440734a3ee110982f31e592", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa3717c173192eb04440734a3ee110982f31e592", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa3717c173192eb04440734a3ee110982f31e592", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa3717c173192eb04440734a3ee110982f31e592/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "36e7d49f8afc9bde0ef5691fc5a3ce4330fd3063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36e7d49f8afc9bde0ef5691fc5a3ce4330fd3063", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36e7d49f8afc9bde0ef5691fc5a3ce4330fd3063"}], "stats": {"total": 54, "additions": 39, "deletions": 15}, "files": [{"sha": "bf69dbf2d790297ca652536084341bcaa5443831", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa3717c173192eb04440734a3ee110982f31e592/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa3717c173192eb04440734a3ee110982f31e592/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fa3717c173192eb04440734a3ee110982f31e592", "patch": "@@ -1,3 +1,9 @@\n+2018-05-24  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb (New_Class_Wide_Subtype): Capture and restore relevant\n+\tGhost-related attributes of the class-wide subtype because the copy\n+\tclobbers them.\n+\n 2018-05-24  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_res.adb (Resolve_Entity_Name): Add guard to protect against"}, {"sha": "8ae2d2ba7dac26f19ecdece2cd7409b6aa54b0c5", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 33, "deletions": 15, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa3717c173192eb04440734a3ee110982f31e592/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa3717c173192eb04440734a3ee110982f31e592/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=fa3717c173192eb04440734a3ee110982f31e592", "patch": "@@ -10580,26 +10580,44 @@ package body Exp_Util is\n      (CW_Typ : Entity_Id;\n       N      : Node_Id) return Entity_Id\n    is\n-      Res       : constant Entity_Id := Create_Itype (E_Void, N);\n-      Res_Name  : constant Name_Id   := Chars (Res);\n-      Res_Scope : constant Entity_Id := Scope (Res);\n+      Res : constant Entity_Id := Create_Itype (E_Void, N);\n+\n+      --  Capture relevant attributes of the class-wide subtype which must be\n+      --  restored after the copy.\n+\n+      Res_Chars  : constant Name_Id   := Chars (Res);\n+      Res_Is_CGE : constant Boolean   := Is_Checked_Ghost_Entity (Res);\n+      Res_Is_IGE : constant Boolean   := Is_Ignored_Ghost_Entity (Res);\n+      Res_Is_IGN : constant Boolean   := Is_Ignored_Ghost_Node   (Res);\n+      Res_Scope  : constant Entity_Id := Scope (Res);\n \n    begin\n       Copy_Node (CW_Typ, Res);\n-      Set_Comes_From_Source (Res, False);\n-      Set_Sloc (Res, Sloc (N));\n-      Set_Is_Itype (Res);\n+\n+      --  Restore the relevant attributes of the class-wide subtype\n+\n+      Set_Chars                   (Res, Res_Chars);\n+      Set_Is_Checked_Ghost_Entity (Res, Res_Is_CGE);\n+      Set_Is_Ignored_Ghost_Entity (Res, Res_Is_IGE);\n+      Set_Is_Ignored_Ghost_Node   (Res, Res_Is_IGN);\n+      Set_Scope                   (Res, Res_Scope);\n+\n+      --  Decorate the class-wide subtype\n+\n       Set_Associated_Node_For_Itype (Res, N);\n-      Set_Is_Public (Res, False);   --  By default, may be changed below.\n+      Set_Comes_From_Source         (Res, False);\n+      Set_Ekind                     (Res, E_Class_Wide_Subtype);\n+      Set_Etype                     (Res, Base_Type (CW_Typ));\n+      Set_Freeze_Node               (Res, Empty);\n+      Set_Is_Frozen                 (Res, False);\n+      Set_Is_Itype                  (Res);\n+      Set_Is_Public                 (Res, False);\n+      Set_Next_Entity               (Res, Empty);\n+      Set_Sloc                      (Res, Sloc (N));\n+\n       Set_Public_Status (Res);\n-      Set_Chars (Res, Res_Name);\n-      Set_Scope (Res, Res_Scope);\n-      Set_Ekind (Res, E_Class_Wide_Subtype);\n-      Set_Next_Entity (Res, Empty);\n-      Set_Etype (Res, Base_Type (CW_Typ));\n-      Set_Is_Frozen (Res, False);\n-      Set_Freeze_Node (Res, Empty);\n-      return (Res);\n+\n+      return Res;\n    end New_Class_Wide_Subtype;\n \n    --------------------------------"}]}