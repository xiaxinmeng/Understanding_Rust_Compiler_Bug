{"sha": "dbe81a8b250a76985950ab1c9fd761145b0b67f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJlODFhOGIyNTBhNzY5ODU5NTBhYjFjOWZkNzYxMTQ1YjBiNjdmMg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2004-07-08T19:58:56Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-07-08T19:58:56Z"}, "message": "re PR libfortran/16291 (F2003 formatting of Inf /Nan on irix6.5)\n\n\tPR fortran/16291\n\t* libgfortran/io/write.c: (write_float): Added length check.\n\tRemove pointless memset calls.\n\nFrom-SVN: r84308", "tree": {"sha": "c36ea0df740fc8868e4aef1dd4a24f2b0573c7c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c36ea0df740fc8868e4aef1dd4a24f2b0573c7c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbe81a8b250a76985950ab1c9fd761145b0b67f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe81a8b250a76985950ab1c9fd761145b0b67f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbe81a8b250a76985950ab1c9fd761145b0b67f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe81a8b250a76985950ab1c9fd761145b0b67f2/comments", "author": null, "committer": null, "parents": [{"sha": "36c1b0def4a4672a93e846c610e19a1a15f4e17d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36c1b0def4a4672a93e846c610e19a1a15f4e17d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36c1b0def4a4672a93e846c610e19a1a15f4e17d"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "8458be34da262920519a37710e902052fd5e6dea", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe81a8b250a76985950ab1c9fd761145b0b67f2/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe81a8b250a76985950ab1c9fd761145b0b67f2/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=dbe81a8b250a76985950ab1c9fd761145b0b67f2", "patch": "@@ -1,13 +1,19 @@\n+2004-07-08  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\tPR fortran/16291\n+\t* libgfortran/io/write.c: (write_float): Added length check.\n+\tRemove pointless memset calls.\n+\n 2004-07-04  Bud Davis  <bdavis9659@comcast.net>\n \t    Paul Brook  <paul@codesourcery.com>\n \n \tPR fortran/15472\n \t* io/transfer.c(us_write): set recl for seq unform writes to max size.\n \t* io/transfer.c(data_transfer_init): handle un-opened seq unform unit.\n \t* io/unix.c(fd_alloc_w_at): handle requests at start, fd_flush at \n-\t  right time.\n+\tright time.\n \t* io/unix.c(is_seekable): set based upon the file/device, not the\n-          method being used to access it (fd or mmap).\n+\tmethod being used to access it (fd or mmap).\n \t* io/unix.c(fd_flush): don't set file_size if !seekable.\n \t* io/unix.c(fd_truncate: ditto.\n "}, {"sha": "749a34a48341666b5a5ddbd34e9f9af3e3f5fb03", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe81a8b250a76985950ab1c9fd761145b0b67f2/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe81a8b250a76985950ab1c9fd761145b0b67f2/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=dbe81a8b250a76985950ab1c9fd761145b0b67f2", "patch": "@@ -535,10 +535,10 @@ write_float (fnode *f, const char *source, int len)\n                memcpy(p + nb - 8, \"Infinity\", 8); \n             else\n                memcpy(p + nb - 3, \"Inf\", 3);\n-            if (nb < 8)\n-               memset(p + nb - 4, fin, 1);\n+            if (nb < 8 && nb > 3)\n+               p[nb - 4] = fin;\n             else if (nb > 8)\n-               memset(p + nb - 9, fin, 1); \n+               p[nb - 9] = fin; \n           }\n          else\n              memcpy(p + nb - 3, \"NaN\", 3);"}]}