{"sha": "27345558cce16e849884f5d1d4dd7d88974bb724", "node_id": "C_kwDOANBUbNoAKDI3MzQ1NTU4Y2NlMTZlODQ5ODg0ZjVkMWQ0ZGQ3ZDg4OTc0YmI3MjQ", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2022-10-13T21:12:18Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-07T08:36:34Z"}, "message": "ada: Fix inherited postconditions in inlined subprograms\n\nProtect the building of postcondition pragmas in case the\npostcondition is not present due to inlining.\n\ngcc/ada/\n\n\t* freeze.adb\n\t(Build_Inherited_Condition_Pragmas): Do nothing if A_Post is\n\tempty.", "tree": {"sha": "e1da88c7d858d017fb054aa7a502e3085beacde8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1da88c7d858d017fb054aa7a502e3085beacde8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27345558cce16e849884f5d1d4dd7d88974bb724", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27345558cce16e849884f5d1d4dd7d88974bb724", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27345558cce16e849884f5d1d4dd7d88974bb724", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27345558cce16e849884f5d1d4dd7d88974bb724/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b86ff061234ff42934bc08c5dc1ba041724eba22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86ff061234ff42934bc08c5dc1ba041724eba22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b86ff061234ff42934bc08c5dc1ba041724eba22"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "1fdc9d0d60e0ba39e321e5b1dc6f6992041d6d73", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27345558cce16e849884f5d1d4dd7d88974bb724/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27345558cce16e849884f5d1d4dd7d88974bb724/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=27345558cce16e849884f5d1d4dd7d88974bb724", "patch": "@@ -1718,11 +1718,16 @@ package body Freeze is\n                end;\n             end if;\n \n-            New_Prag := New_Copy_Tree (A_Post);\n-            Rewrite\n-              (Expression (First (Pragma_Argument_Associations (New_Prag))),\n-               Class_Post);\n-            Append (New_Prag, Decls);\n+            --  A_Post can be null here if the postcondition was inlined in the\n+            --  called subprogram.\n+\n+            if Present (A_Post) then\n+               New_Prag := New_Copy_Tree (A_Post);\n+               Rewrite\n+                 (Expression (First (Pragma_Argument_Associations (New_Prag))),\n+                  Class_Post);\n+               Append (New_Prag, Decls);\n+            end if;\n          end if;\n       end Build_Inherited_Condition_Pragmas;\n "}]}