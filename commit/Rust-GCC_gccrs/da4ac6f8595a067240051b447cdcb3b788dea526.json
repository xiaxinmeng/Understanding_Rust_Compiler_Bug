{"sha": "da4ac6f8595a067240051b447cdcb3b788dea526", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE0YWM2Zjg1OTVhMDY3MjQwMDUxYjQ0N2NkY2IzYjc4OGRlYTUyNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-01-15T17:06:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-01-15T17:06:49Z"}, "message": "comment\n\nFrom-SVN: r39044", "tree": {"sha": "c82b7a5023390c02dc956770567e65eea6c8215b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c82b7a5023390c02dc956770567e65eea6c8215b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da4ac6f8595a067240051b447cdcb3b788dea526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da4ac6f8595a067240051b447cdcb3b788dea526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da4ac6f8595a067240051b447cdcb3b788dea526", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da4ac6f8595a067240051b447cdcb3b788dea526/comments", "author": null, "committer": null, "parents": [{"sha": "611081b2882d1928df1d9c09becabe6e645ab424", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/611081b2882d1928df1d9c09becabe6e645ab424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/611081b2882d1928df1d9c09becabe6e645ab424"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "46f1c85761bb0184474f22a6385bd2ef89fa3f09", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da4ac6f8595a067240051b447cdcb3b788dea526/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da4ac6f8595a067240051b447cdcb3b788dea526/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=da4ac6f8595a067240051b447cdcb3b788dea526", "patch": "@@ -319,6 +319,7 @@ copy_body_r (tp, walk_subtrees, data)\n     remap_save_expr (tp, id->decl_map, VARRAY_TREE (id->fns, 0), \n \t\t     walk_subtrees);\n   else if (TREE_CODE (*tp) == UNSAVE_EXPR)\n+    /* UNSAVE_EXPRs should not be generated until expansion time.  */\n     my_friendly_abort (19991113);\n   /* For a SCOPE_STMT, we must copy the associated block so that we\n      can write out debugging information for the inlined variables.  */"}]}