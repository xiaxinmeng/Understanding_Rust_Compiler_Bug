{"sha": "3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FkNDVmN2ZmM2VmNGUzYzg2M2VhNjY4ZThkZGIxM2Y3MTg1YzhhZA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-07-31T09:20:56Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-07-31T09:20:56Z"}, "message": "re PR pch/53880 (compile time regression when generating precompiled headers for boost)\n\n\tPR pch/53880\n\t* gengtype.c (struct walk_type_data): Add have_this_obj field.\n\t(walk_type): For functions that take a this_obj argument and\n\tthat process fields with a GTY((length)) argument, write the\n\ttest that write_types_local_process_field will write also at the\n\thead of the loop, effectively unswitching the loop.\n\t(write_func_for_structure, write_local_func_for_structure): Clear\n\thave_this_obj before calling walk_type.\n\t(write_local_func_for_structure): Set have_this_obj before walk_type.\n\t(write_array): Set have_this_obj for output of local pointer walking\n\tfunctions but not for marker functions.\n\t(write_types_local_process_field): Assert have_this_obj is set.\n\n\t* rtl.h (simplify_using_condition): Adjust prototype using bitmap\n\tfrom coretypes.h.\n\nFrom-SVN: r189999", "tree": {"sha": "7b64afcca3aba595d2bf430c39ed491bbd9f189b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b64afcca3aba595d2bf430c39ed491bbd9f189b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad/comments", "author": null, "committer": null, "parents": [{"sha": "0d13c974d946713065b57fdcd46d5d5b2af3beb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d13c974d946713065b57fdcd46d5d5b2af3beb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d13c974d946713065b57fdcd46d5d5b2af3beb0"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "4229a2255f80644e74723c3248dbf72d78ac4f07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad", "patch": "@@ -1,3 +1,21 @@\n+2012-07-31  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\tPR pch/53880\n+\t* gengtype.c (struct walk_type_data): Add have_this_obj field.\n+\t(walk_type): For functions that take a this_obj argument and\n+\tthat process fields with a GTY((length)) argument, write the\n+\ttest that write_types_local_process_field will write also at the\n+\thead of the loop, effectively unswitching the loop.\n+\t(write_func_for_structure, write_local_func_for_structure): Clear\n+\thave_this_obj before calling walk_type.\n+\t(write_local_func_for_structure): Set have_this_obj before walk_type.\n+\t(write_array): Set have_this_obj for output of local pointer walking\n+\tfunctions but not for marker functions.\n+\t(write_types_local_process_field): Assert have_this_obj is set.\n+\n+\t* rtl.h (simplify_using_condition): Adjust prototype using bitmap\n+\tfrom coretypes.h.\n+\n 2012-07-30  Nathan Froyd  <froydnj@gcc.gnu.org>\n \n "}, {"sha": "a4aa72554bed719fe2b178c40bba12b2245c76ab", "filename": "gcc/gengtype.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad", "patch": "@@ -2303,6 +2303,7 @@ struct walk_type_data\n   bool fn_wants_lvalue;\n   bool in_record_p;\n   int loopcounter;\n+  bool have_this_obj;\n };\n \n /* Print a mangled name representing T to OF.  */\n@@ -2618,6 +2619,9 @@ walk_type (type_p t, struct walk_type_data *d)\n \t      output_escaped_param (d, length, \"length\");\n \t    else\n \t      oprintf (d->of, \"l%d\", loopcounter);\n+\t    if (d->have_this_obj)\n+\t      /* Try to unswitch loops (see PR53880).  */\n+\t      oprintf (d->of, \") && ((void *)%s == this_obj\", oldval);\n \t    oprintf (d->of, \"); i%d++) {\\n\", loopcounter);\n \t    d->indent += 2;\n \t    d->val = newval = xasprintf (\"%s[i%d]\", oldval, loopcounter);\n@@ -3105,6 +3109,7 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n   d.prev_val[1] = \"not valid postage\";\t/* Guarantee an error.  */\n   d.prev_val[3] = \"x\";\n   d.val = \"(*x)\";\n+  d.have_this_obj = false;\n \n   oprintf (d.of, \"\\n\");\n   oprintf (d.of, \"void\\n\");\n@@ -3400,6 +3405,7 @@ static const struct write_types_data pch_wtd = {\n static void\n write_types_local_process_field (type_p f, const struct walk_type_data *d)\n {\n+  gcc_assert (d->have_this_obj);\n   switch (f->kind)\n     {\n     case TYPE_POINTER:\n@@ -3458,6 +3464,7 @@ write_local_func_for_structure (const_type_p orig_s, type_p s, type_p *param)\n \t   s->kind == TYPE_UNION ? \"union\" : \"struct\", s->u.s.tag,\n \t   s->kind == TYPE_UNION ? \"union\" : \"struct\", s->u.s.tag);\n   d.indent = 2;\n+  d.have_this_obj = true;\n   walk_type (s, &d);\n   oprintf (d.of, \"}\\n\");\n }\n@@ -3967,6 +3974,7 @@ write_array (outf_p f, pair_p v, const struct write_types_data *wtd)\n       oprintf (d.of, \"{\\n\");\n       d.prev_val[0] = d.prev_val[1] = d.prev_val[2] = d.val = v->name;\n       d.process_field = write_types_local_process_field;\n+      d.have_this_obj = true;\n       walk_type (v->type, &d);\n       oprintf (f, \"}\\n\\n\");\n     }\n@@ -3978,6 +3986,7 @@ write_array (outf_p f, pair_p v, const struct write_types_data *wtd)\n   oprintf (f, \"{\\n\");\n   d.prev_val[0] = d.prev_val[1] = d.prev_val[2] = d.val = v->name;\n   d.process_field = write_types_process_field;\n+  d.have_this_obj = false;\n   walk_type (v->type, &d);\n   free (prevval3);\n   oprintf (f, \"}\\n\\n\");"}, {"sha": "b611fbeda5e42167e87da8cb2f3cc6630099b5b1", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=3ad45f7ff3ef4e3c863ea668e8ddb13f7185c8ad", "patch": "@@ -2620,7 +2620,7 @@ extern rtx compare_and_jump_seq (rtx, rtx, enum rtx_code, rtx, int, rtx);\n \n /* In loop-iv.c  */\n extern rtx canon_condition (rtx);\n-extern void simplify_using_condition (rtx, rtx *, struct bitmap_head_def *);\n+extern void simplify_using_condition (rtx, rtx *, bitmap);\n \n /* In final.c  */\n extern unsigned int compute_alignments (void);"}]}