{"sha": "bcd8d322db3a07471bd32ceeefbd0c5145a934ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNkOGQzMjJkYjNhMDc0NzFiZDMyY2VlZWZiZDBjNTE0NWE5MzRjYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-10-20T14:19:12Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-10-20T14:19:12Z"}, "message": "loop-iv.c (iv_number_of_iterations): Record the upper bound only if there are no further conditions on it.\n\n\n\t* loop-iv.c (iv_number_of_iterations): Record the upper bound\n\tonly if there are no further conditions on it.\n\nFrom-SVN: r192636", "tree": {"sha": "0567eba9d46edbae6337e20803e32610525d1bfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0567eba9d46edbae6337e20803e32610525d1bfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcd8d322db3a07471bd32ceeefbd0c5145a934ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcd8d322db3a07471bd32ceeefbd0c5145a934ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcd8d322db3a07471bd32ceeefbd0c5145a934ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcd8d322db3a07471bd32ceeefbd0c5145a934ca/comments", "author": null, "committer": null, "parents": [{"sha": "4a0ae68e1ce9e7fb876b9846bee6a77d9c592e52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0ae68e1ce9e7fb876b9846bee6a77d9c592e52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a0ae68e1ce9e7fb876b9846bee6a77d9c592e52"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "47263fd823210578892b8188d47b463fe5b0c0e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcd8d322db3a07471bd32ceeefbd0c5145a934ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcd8d322db3a07471bd32ceeefbd0c5145a934ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bcd8d322db3a07471bd32ceeefbd0c5145a934ca", "patch": "@@ -1,3 +1,8 @@\n+2012-10-20  Jan Hubicka  <jh@suse.cz>\n+\n+\t* loop-iv.c (iv_number_of_iterations): Record the upper bound\n+\tonly if there are no further conditions on it.\n+\n 2012-10-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c/53063"}, {"sha": "50b75362a97201562c730db9ad35fae0867075e0", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcd8d322db3a07471bd32ceeefbd0c5145a934ca/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcd8d322db3a07471bd32ceeefbd0c5145a934ca/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=bcd8d322db3a07471bd32ceeefbd0c5145a934ca", "patch": "@@ -2593,8 +2593,10 @@ iv_number_of_iterations (struct loop *loop, rtx insn, rtx condition,\n \t\t\t ? iv0.base\n \t\t\t : mode_mmin);\n \t  max = (up - down) / inc + 1;\n-\t  record_niter_bound (loop, double_int::from_uhwi (max),\n-\t\t\t      false, true);\n+\t  if (!desc->infinite\n+\t      && !desc->assumptions)\n+\t    record_niter_bound (loop, double_int::from_uhwi (max),\n+\t\t\t        false, true);\n \n \t  if (iv0.step == const0_rtx)\n \t    {\n@@ -2806,15 +2808,19 @@ iv_number_of_iterations (struct loop *loop, rtx insn, rtx condition,\n \n       desc->const_iter = true;\n       desc->niter = val & GET_MODE_MASK (desc->mode);\n-      record_niter_bound (loop, double_int::from_uhwi (desc->niter),\n-\t\t\t  false, true);\n+      if (!desc->infinite\n+\t  && !desc->assumptions)\n+        record_niter_bound (loop, double_int::from_uhwi (desc->niter),\n+\t\t\t    false, true);\n     }\n   else\n     {\n       max = determine_max_iter (loop, desc, old_niter);\n       gcc_assert (max);\n-      record_niter_bound (loop, double_int::from_uhwi (max),\n-\t\t\t  false, true);\n+      if (!desc->infinite\n+\t  && !desc->assumptions)\n+\trecord_niter_bound (loop, double_int::from_uhwi (max),\n+\t\t\t    false, true);\n \n       /* simplify_using_initial_values does a copy propagation on the registers\n \t in the expression for the number of iterations.  This prolongs life"}]}