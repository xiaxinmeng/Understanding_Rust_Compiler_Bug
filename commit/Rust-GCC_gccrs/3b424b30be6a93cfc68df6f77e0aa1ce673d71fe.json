{"sha": "3b424b30be6a93cfc68df6f77e0aa1ce673d71fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I0MjRiMzBiZTZhOTNjZmM2OGRmNmY3N2UwYWExY2U2NzNkNzFmZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-02-11T10:30:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-02-11T10:30:43Z"}, "message": "re PR libstdc++/56282 (std::basic_ios<char> broken with -std=c++11 (undefined reference))\n\n2013-02-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/56282\n\tRevert:\n\t2013-02-06  Edward Smith-Rowland  <3dw4rd@verizon.net>\n\n\tPR libstdc++/56193\n\t* include/bits/basic_ios.h: Replace operator void*() const\n\twith explicit operator bool() const in C++11 and greater.\n\t* testsuite/27_io/basic_ios/pr56193.cc: New file.\n\nFrom-SVN: r195939", "tree": {"sha": "be0673180897842cf5edd597377fcb675d1ecf7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be0673180897842cf5edd597377fcb675d1ecf7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b424b30be6a93cfc68df6f77e0aa1ce673d71fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b424b30be6a93cfc68df6f77e0aa1ce673d71fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b424b30be6a93cfc68df6f77e0aa1ce673d71fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b424b30be6a93cfc68df6f77e0aa1ce673d71fe/comments", "author": null, "committer": null, "parents": [{"sha": "adb1c4d1e0511ae9dbfa4da277e18e9394f792d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adb1c4d1e0511ae9dbfa4da277e18e9394f792d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adb1c4d1e0511ae9dbfa4da277e18e9394f792d5"}], "stats": {"total": 71, "additions": 23, "deletions": 48}, "files": [{"sha": "1768b9b45bebfbf3796a058e632daf7dd6906693", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 23, "deletions": 12, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b424b30be6a93cfc68df6f77e0aa1ce673d71fe/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b424b30be6a93cfc68df6f77e0aa1ce673d71fe/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3b424b30be6a93cfc68df6f77e0aa1ce673d71fe", "patch": "@@ -1,3 +1,14 @@\n+2013-02-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/56282\n+\tRevert:\n+\t2013-02-06  Edward Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\tPR libstdc++/56193\n+\t* include/bits/basic_ios.h: Replace operator void*() const\n+\twith explicit operator bool() const in C++11 and greater.\n+\t* testsuite/27_io/basic_ios/pr56193.cc: New file.\n+\n 2013-02-10  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \t    Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n@@ -30,20 +41,20 @@\n \tPR libstdc++/56216\n \t* include/tr1/special_function_util.h: Remove spurious const\n \tfrom numeric arguments.\n-\t* include/tr1/riemann_zeta.tcc: Ditto.\n-\t* include/tr1/exp_integral.tcc: Ditto.\n-\t* include/tr1/bessel_function.tcc: Ditto.\n-\t* include/tr1/hypergeometric.tcc: Ditto.\n-\t* include/tr1/modified_bessel_func.tcc: Ditto.\n-\t* include/tr1/poly_laguerre.tcc: Ditto.\n-\t* include/tr1/gamma.tcc: Ditto.\n-\t* include/tr1/legendre_function.tcc: Ditto.\n-\t* include/tr1/poly_hermite.tcc: Ditto.\n-\t* include/tr1/ell_integral.tcc: Ditto.\n+\t* include/tr1/riemann_zeta.tcc: Likewise.\n+\t* include/tr1/exp_integral.tcc: Likewise.\n+\t* include/tr1/bessel_function.tcc: Likewise.\n+\t* include/tr1/hypergeometric.tcc: Likewise.\n+\t* include/tr1/modified_bessel_func.tcc: Likewise.\n+\t* include/tr1/poly_laguerre.tcc: Likewise.\n+\t* include/tr1/gamma.tcc: Likewise.\n+\t* include/tr1/legendre_function.tcc: Likewise.\n+\t* include/tr1/poly_hermite.tcc: Likewise.\n+\t* include/tr1/ell_integral.tcc: Likewise.\n \t* include/tr1/bessel_function.tcc (__cyl_bessel_ij_series):\n \tIf argument is zero return function value.\n-\t* testsuite/tr1/5_numerical_facilities/special_functions/08_cyl_bessel_i/pr56216.cc:\n-\tNew file.\n+\t* testsuite/tr1/5_numerical_facilities/special_functions/\n+\t08_cyl_bessel_i/pr56216.cc: New.\n \n 2013-02-07  Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "b78b464ba02d4ee2ac4a4d469fcfa4f0e4261c04", "filename": "libstdc++-v3/include/bits/basic_ios.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b424b30be6a93cfc68df6f77e0aa1ce673d71fe/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b424b30be6a93cfc68df6f77e0aa1ce673d71fe/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h?ref=3b424b30be6a93cfc68df6f77e0aa1ce673d71fe", "patch": "@@ -112,13 +112,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This allows you to write constructs such as\n        *  <code>if (!a_stream) ...</code> and <code>while (a_stream) ...</code>\n       */\n-#if __cplusplus >= 201103L\n-      explicit operator bool() const\n-      { return !this->fail(); }\n-#else\n       operator void*() const\n       { return this->fail() ? 0 : const_cast<basic_ios*>(this); }\n-#endif\n \n       bool\n       operator!() const"}, {"sha": "79793e267566b96e3b34a53fe922a377e911e573", "filename": "libstdc++-v3/testsuite/27_io/basic_ios/pr56193.cc", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adb1c4d1e0511ae9dbfa4da277e18e9394f792d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fpr56193.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adb1c4d1e0511ae9dbfa4da277e18e9394f792d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fpr56193.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fpr56193.cc?ref=adb1c4d1e0511ae9dbfa4da277e18e9394f792d5", "patch": "@@ -1,31 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n-\n-// 2013-02-06  Edward Smith-Rowland <3dw4rd@verizon.net>\n-//\n-// Copyright (C) 2013 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <iostream>\n-\n-// PR libstdc++/56193\n-void\n-test01()\n-{\n-  std::cout << std::cout; // { dg-error \"cannot bind\" }\n-}\n-// { dg-error \"initializing argument\" \"\" { target *-*-* } 602 }"}]}