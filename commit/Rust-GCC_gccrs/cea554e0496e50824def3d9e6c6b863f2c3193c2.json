{"sha": "cea554e0496e50824def3d9e6c6b863f2c3193c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VhNTU0ZTA0OTZlNTA4MjRkZWYzZDllNmM2Yjg2M2YyYzMxOTNjMg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2002-06-05T00:08:00Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-06-05T00:08:00Z"}, "message": "* gengtype-yacc.y: Make sure all rules end with a semicolon.\n\nFrom-SVN: r54270", "tree": {"sha": "d1382dc5ebaf8a9c70bbc441505c5549cc1cddcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1382dc5ebaf8a9c70bbc441505c5549cc1cddcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cea554e0496e50824def3d9e6c6b863f2c3193c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea554e0496e50824def3d9e6c6b863f2c3193c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cea554e0496e50824def3d9e6c6b863f2c3193c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea554e0496e50824def3d9e6c6b863f2c3193c2/comments", "author": null, "committer": null, "parents": [{"sha": "072326388a74c6eed48c24ea0a1d61f863fa72ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072326388a74c6eed48c24ea0a1d61f863fa72ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/072326388a74c6eed48c24ea0a1d61f863fa72ed"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "6d4ae5f9f64749f6a6cfdcf6727bd56953b164b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cea554e0496e50824def3d9e6c6b863f2c3193c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cea554e0496e50824def3d9e6c6b863f2c3193c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cea554e0496e50824def3d9e6c6b863f2c3193c2", "patch": "@@ -1,3 +1,7 @@\n+2002-06-04  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gengtype-yacc.y: Make sure all rules end with a semicolon.\n+\n 2002-06-04  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/xtensa.c (xtensa_init_machine_status): Fix"}, {"sha": "ba3340765d4a03e63ce96c59a195d5704d0a0995", "filename": "gcc/gengtype-yacc.y", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cea554e0496e50824def3d9e6c6b863f2c3193c2/gcc%2Fgengtype-yacc.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cea554e0496e50824def3d9e6c6b863f2c3193c2/gcc%2Fgengtype-yacc.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-yacc.y?ref=cea554e0496e50824def3d9e6c6b863f2c3193c2", "patch": "@@ -63,6 +63,7 @@ start: /* empty */\n        | typedef_struct start\n        | externstatic start\n        | yacc_union start\n+       ;\n \n typedef_struct: ENT_TYPEDEF_STRUCT options '{' struct_fields '}' ID\n \t\t   {\n@@ -79,6 +80,7 @@ typedef_struct: ENT_TYPEDEF_STRUCT options '{' struct_fields '}' ID\n \t\t     lexer_toplevel_done = 1;\n \t\t   }\n \t\t ';'\n+\t\t;\n \n externstatic: ENT_EXTERNSTATIC options lasttype ID semiequal\n \t         {\n@@ -96,21 +98,25 @@ externstatic: ENT_EXTERNSTATIC options lasttype ID semiequal\n \t      \t\t\t\t      $5),\n \t      \t\t    $2, &lexer_line);\n \t         }\n+\t      ;\n \n lasttype: type\n \t    { \n \t      lexer_toplevel_done = 1;\n \t      $$ = $1;\n \t    }\n+\t    ;\n \n semiequal: ';'\n \t   | '='\n \t   ;\n \n-yacc_union: ENT_YACCUNION options struct_fields '}' yacc_typematch PERCENTPERCENT\n+yacc_union: ENT_YACCUNION options struct_fields '}' yacc_typematch\n+\t    PERCENTPERCENT\n \t      {\n \t        note_yacc_type ($2, $3, $5, &lexer_line);\n \t      }\n+\t    ;\n \n yacc_typematch: /* empty */\n \t\t   { $$ = NULL; }\n@@ -170,6 +176,7 @@ yacc_ids: /* empty */\n \t  sprintf (p->opt->info, \"'%s'\", $2);\n \t  $$ = p;\n \t}\n+     ;\n \n struct_fields: { $$ = NULL; }\n \t       | type optionsopt ID bitfieldopt ';' struct_fields\n@@ -202,9 +209,11 @@ struct_fields: { $$ = NULL; }\n \t\t    p->line = lexer_line;\n \t\t    $$ = p;\n \t\t  }\n+\t       ;\n \n bitfieldopt: /* empty */\n \t     | ':' NUM\n+\t     ;\n \n type: SCALAR\n          { $$ = $1; }\n@@ -230,6 +239,7 @@ type: SCALAR\n          { $$ = create_scalar_type ($2, strlen ($2)); }\n       | ENUM ID '{' enum_items '}'\n          { $$ = create_scalar_type ($2, strlen ($2)); }\n+      ;\n \n enum_items: /* empty */\n \t    | ID '=' NUM ',' enum_items\n@@ -242,13 +252,17 @@ enum_items: /* empty */\n \n optionsopt: { $$ = NULL; }\n \t    | options { $$ = $1; }\n+\t    ;\n \n-options: GTY_TOKEN '(' '(' optionseqopt ')' ')' { $$ = $4; }\n+options: GTY_TOKEN '(' '(' optionseqopt ')' ')'\n+\t   { $$ = $4; }\n+\t ;\n \n type_option : ALIAS\n \t        { $$ = \"ptr_alias\"; }\n \t      | PARAM_IS\n \t        { $$ = \"param_is\"; }\n+\t      ;\n \n option:\ttype_option '(' type ')'\n \t   {\n@@ -264,6 +278,7 @@ option:\ttype_option '(' type ')'\n \t     o->info = (void *)$3;\n \t     $$ = o;\n \t   }\n+\t;\n \n optionseq: option\n \t      {\n@@ -275,8 +290,9 @@ optionseq: option\n \t        $3->next = $1;\n \t\t$$ = $3;\n \t      }\n+\t    ;\n \n optionseqopt: { $$ = NULL }\n \t      | optionseq { $$ = $1; }\n-\n+\t      ;\n %%"}]}