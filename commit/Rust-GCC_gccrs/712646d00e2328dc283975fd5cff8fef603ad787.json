{"sha": "712646d00e2328dc283975fd5cff8fef603ad787", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEyNjQ2ZDAwZTIzMjhkYzI4Mzk3NWZkNWNmZjhmZWY2MDNhZDc4Nw==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@redhat.co.uk", "date": "2000-09-08T02:46:41Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2000-09-08T02:46:41Z"}, "message": "sh.md (cmpeqsi_ior_t, [...]): Remove.\n\n\t* sh.md (cmpeqsi_ior_t, cmpeqsi_and_t): Remove.\n\t(cmpeqdi_t): Add output pattern.\n\t(cmpeqdi_t+1): Don't split when not optimizing.\n\tRestore proper splitting operation.\n\nFrom-SVN: r36258", "tree": {"sha": "62ef210fc73c3ab84d6550dc9923ff416f21f50b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62ef210fc73c3ab84d6550dc9923ff416f21f50b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/712646d00e2328dc283975fd5cff8fef603ad787", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/712646d00e2328dc283975fd5cff8fef603ad787", "html_url": "https://github.com/Rust-GCC/gccrs/commit/712646d00e2328dc283975fd5cff8fef603ad787", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/712646d00e2328dc283975fd5cff8fef603ad787/comments", "author": null, "committer": null, "parents": [{"sha": "30acbc3e34bb8b43154fc49bf84ebce893f165d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30acbc3e34bb8b43154fc49bf84ebce893f165d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30acbc3e34bb8b43154fc49bf84ebce893f165d9"}], "stats": {"total": 49, "additions": 20, "deletions": 29}, "files": [{"sha": "9e2afe11bdee1c054c2f7bc345d3632b26e5ebe2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/712646d00e2328dc283975fd5cff8fef603ad787/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/712646d00e2328dc283975fd5cff8fef603ad787/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=712646d00e2328dc283975fd5cff8fef603ad787", "patch": "@@ -1,3 +1,10 @@\n+Fri Sep  8 03:26:38 2000  J\"orn Rennecke <amylaar@redhat.co.uk>\n+\n+\t* sh.md (cmpeqsi_ior_t, cmpeqsi_and_t): Remove.\n+\t(cmpeqdi_t): Add output pattern.\n+\t(cmpeqdi_t+1): Don't split when not optimizing.\n+\tRestore proper splitting operation.\n+\n 2000-09-07  Richard Henderson  <rth@cygnus.com>\n \n \t* c-lex.c (process_directive): If not HANDLE_GENERIC_PRAGMAS,"}, {"sha": "cbbf06e62e8c3e0ab770f4aa903ded89cda657b1", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 13, "deletions": 29, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/712646d00e2328dc283975fd5cff8fef603ad787/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/712646d00e2328dc283975fd5cff8fef603ad787/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=712646d00e2328dc283975fd5cff8fef603ad787", "patch": "@@ -558,30 +558,6 @@\n \tcmp/eq\t%1,%0\n \tcmp/eq\t%1,%0\")\n \n-(define_insn \"cmpeqsi_ior_t\"\n-  [(set (reg:SI 18)\n-\t(ior:SI (reg:SI 18)\n-\t\t(eq:SI (match_operand:SI 0 \"arith_reg_operand\" \"r,z,r\")\n-\t\t       (match_operand:SI 1 \"arith_operand\" \"N,rI,r\"))))]\n-  \"\"\n-  \"@\n-\tbt .+4\\;tst\t%0,%0\n-\tbt .+4\\;cmp/eq\t%1,%0\n-\tbt .+4\\;cmp/eq\t%1,%0\"\n-  [(set_attr \"length\" \"4\")])\n-\n-(define_insn \"cmpeqsi_and_t\"\n-  [(set (reg:SI 18)\n-\t(and:SI (reg:SI 18)\n-\t\t(eq:SI (match_operand:SI 0 \"arith_reg_operand\" \"r,z,r\")\n-\t\t       (match_operand:SI 1 \"arith_operand\" \"N,rI,r\"))))]\n-  \"\"\n-  \"@\n-\tbf .+4\\;tst\t%0,%0\n-\tbf .+4\\;cmp/eq\t%1,%0\n-\tbf .+4\\;cmp/eq\t%1,%0\"\n-  [(set_attr \"length\" \"4\")])\n-\n (define_insn \"cmpgtsi_t\"\n   [(set (reg:SI 18) (gt:SI (match_operand:SI 0 \"arith_reg_operand\" \"r,r\")\n \t\t\t   (match_operand:SI 1 \"arith_reg_or_0_operand\" \"r,N\")))]\n@@ -651,18 +627,25 @@\n   [(set (reg:SI 18) (eq:SI (match_operand:DI 0 \"arith_reg_operand\" \"r,r\")\n \t\t\t   (match_operand:DI 1 \"arith_reg_or_0_operand\" \"N,r\")))]\n   \"\"\n-  \"#\"\n+  \"@\n+\ttst\t%S0,%S0\\;bf\t%,Ldi%=\\;tst\t%R0,%R0\\\\nLdi%=:\n+\tcmp/eq\t%S1,%S0\\;bf\t%,Ldi%=\\;cmp/eq\t%R1,%R0\\\\nLdi%=:\"\n   [(set_attr \"length\" \"6\")\n    (set_attr \"type\" \"arith3b\")])\n \n (define_split\n   [(set (reg:SI 18) (eq:SI (match_operand:DI 0 \"arith_reg_operand\" \"r,r\")\n \t\t\t   (match_operand:DI 1 \"arith_reg_or_0_operand\" \"N,r\")))]\n-  \"reload_completed\"\n+;; If we applied this split when not optimizing, it would only be\n+;; applied during the machine-dependent reorg, when no new basic blocks\n+;; may be created.\n+  \"reload_completed && optimize\"\n   [(set (reg:SI 18) (eq:SI (match_dup 2) (match_dup 3)))\n-   (set (reg:SI 18)\n-\t(and:SI (reg:SI 18)\n-\t\t(eq:SI (match_dup 4) (match_dup 5))))]\n+   (set (pc) (if_then_else (eq (reg:SI 18) (const_int 0))\n+\t\t\t   (label_ref (match_dup 6))\n+\t\t\t   (pc)))\n+   (set (reg:SI 18) (eq:SI (match_dup 4) (match_dup 5)))\n+   (match_dup 6)]\n   \"\n {\n   operands[2]\n@@ -676,6 +659,7 @@\n \t\t      + (TARGET_LITTLE_ENDIAN ? 1 : 0)));\n   operands[4] = gen_lowpart (SImode, operands[0]);\n   operands[5] = gen_lowpart (SImode, operands[1]);\n+  operands[6] = gen_label_rtx ();\n }\")\n \n (define_insn \"cmpgtdi_t\""}]}