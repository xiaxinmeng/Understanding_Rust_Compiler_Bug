{"sha": "d1f37bc642e0f746f2199514ddb017e9de9d07cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFmMzdiYzY0MmUwZjc0NmYyMTk5NTE0ZGRiMDE3ZTlkZTlkMDdjYw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-01-16T22:03:14Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-01-16T22:03:14Z"}, "message": "configure.ac (CFLAGS): Update to include -std=gnu99 so that the configure tests will be run with the...\n\n\n\t* configure.ac (CFLAGS): Update to include -std=gnu99 so that\n\tthe configure tests will be run with the same environment as\n\tused to compile the libgfortran source code.\n\t* configure: Regenerate.\n\nFrom-SVN: r109774", "tree": {"sha": "84f146ec71a8d94adcbaa82b061c8a23118009fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84f146ec71a8d94adcbaa82b061c8a23118009fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1f37bc642e0f746f2199514ddb017e9de9d07cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1f37bc642e0f746f2199514ddb017e9de9d07cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1f37bc642e0f746f2199514ddb017e9de9d07cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1f37bc642e0f746f2199514ddb017e9de9d07cc/comments", "author": null, "committer": null, "parents": [{"sha": "fea4cfe00b554d35d9a7f7666e3e2734d342596f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea4cfe00b554d35d9a7f7666e3e2734d342596f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fea4cfe00b554d35d9a7f7666e3e2734d342596f"}], "stats": {"total": 780, "additions": 521, "deletions": 259}, "files": [{"sha": "5ce87028e72338300e4b35949c1f5199c60486a3", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f37bc642e0f746f2199514ddb017e9de9d07cc/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f37bc642e0f746f2199514ddb017e9de9d07cc/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=d1f37bc642e0f746f2199514ddb017e9de9d07cc", "patch": "@@ -1,3 +1,10 @@\n+2006-01-16  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* configure.ac (CFLAGS): Update to include -std=gnu99 so that\n+\tthe configure tests will be run with the same environment as\n+\tused to compile the libgfortran source code.\n+\t* configure: Regenerate.\n+\n 2006-01-12  Roger Sayle  <roger@eyesopen.com>\n \n \t* intrinsics/c99_functions.c: Add function prototypes to avoid"}, {"sha": "cb8e1d116b7e5f69f110276253be772ff71d4329", "filename": "libgfortran/configure", "status": "modified", "additions": 511, "deletions": 259, "changes": 770, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f37bc642e0f746f2199514ddb017e9de9d07cc/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f37bc642e0f746f2199514ddb017e9de9d07cc/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=d1f37bc642e0f746f2199514ddb017e9de9d07cc"}, {"sha": "e01d7128bc4fb19e5cdcd51400b5db90f81ada21", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f37bc642e0f746f2199514ddb017e9de9d07cc/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f37bc642e0f746f2199514ddb017e9de9d07cc/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=d1f37bc642e0f746f2199514ddb017e9de9d07cc", "patch": "@@ -116,6 +116,9 @@ if test \"x$GCC\" = \"xyes\"; then\n   ## We like to use C99 routines when available.  This makes sure that\n   ## __STDC_VERSION__ is set such that libc includes make them available.\n   AM_CFLAGS=\"-std=gnu99 -Wall -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wextra -Wwrite-strings\"\n+  ## Compile the following tests with the same system header contents\n+  ## that we'll encounter when compiling our own source files.\n+  CFLAGS=\"-std=gnu99 $CFLAGS\"\n fi\n AC_SUBST(AM_FCFLAGS)\n AC_SUBST(AM_CFLAGS)"}]}