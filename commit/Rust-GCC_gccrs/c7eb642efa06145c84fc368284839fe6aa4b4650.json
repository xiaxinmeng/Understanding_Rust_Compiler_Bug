{"sha": "c7eb642efa06145c84fc368284839fe6aa4b4650", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdlYjY0MmVmYTA2MTQ1Yzg0ZmMzNjgyODQ4MzlmZTZhYTRiNDY1MA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2017-04-23T15:49:16Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2017-04-23T15:49:16Z"}, "message": "re PR fortran/80484 (Three syntax errors involving derived-type I/O)\n\n2017-04-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/80484\n\t* io.c (format_lex): Check for '/' and set token to FMT_SLASH.\n\t(check_format): Move FMT_DT checking code to data_desc section.\n\t* module.c (gfc_match_use): Include the case of INTERFACE_DTIO.\n\n\tPR fortran/80484\n\t* gfortran.dg/dtio_29.f03: New test.\n\nFrom-SVN: r247084", "tree": {"sha": "6fc389c4b330d8b2dc3bbc728b96c6383caac40f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fc389c4b330d8b2dc3bbc728b96c6383caac40f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7eb642efa06145c84fc368284839fe6aa4b4650", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7eb642efa06145c84fc368284839fe6aa4b4650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7eb642efa06145c84fc368284839fe6aa4b4650", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7eb642efa06145c84fc368284839fe6aa4b4650/comments", "author": null, "committer": null, "parents": [{"sha": "60fc41bd415a631d7db82d56ed44d95677edf57e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60fc41bd415a631d7db82d56ed44d95677edf57e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60fc41bd415a631d7db82d56ed44d95677edf57e"}], "stats": {"total": 166, "additions": 118, "deletions": 48}, "files": [{"sha": "c5ed5071b09e1d599a337655af5e5f0fd8dc8164", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7eb642efa06145c84fc368284839fe6aa4b4650/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7eb642efa06145c84fc368284839fe6aa4b4650/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c7eb642efa06145c84fc368284839fe6aa4b4650", "patch": "@@ -1,3 +1,10 @@\n+2017-04-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/80484\n+\t* io.c (format_lex): Check for '/' and set token to FMT_SLASH.\n+\t(check_format): Move FMT_DT checking code to data_desc section.\n+\t* module.c (gfc_match_use): Include the case of INTERFACE_DTIO.\n+\n 2017-04-22  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/80121"}, {"sha": "7ab897daa44b0d37b8c8a1d0a5bff67609d1e381", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 58, "deletions": 48, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7eb642efa06145c84fc368284839fe6aa4b4650/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7eb642efa06145c84fc368284839fe6aa4b4650/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=c7eb642efa06145c84fc368284839fe6aa4b4650", "patch": "@@ -491,13 +491,23 @@ format_lex (void)\n \t\t\t  token = FMT_END;\n \t\t\t  break;\n \t\t\t}\n+\t\t      if (c == '/')\n+\t\t\t{\n+\t\t\t  token = FMT_SLASH;\n+\t\t\t  break;\n+\t\t\t}\n \t\t      if (c == delim)\n \t\t\tcontinue;\n \t\t      unget_char ();\n \t\t      break;\n \t\t    }\n \t\t}\n \t    }\n+\t  else if (c == '/')\n+\t    {\n+\t      token = FMT_SLASH;\n+\t      break;\n+\t    }\n \t  else\n \t    unget_char ();\n \t}\n@@ -687,54 +697,6 @@ check_format (bool is_input)\n \treturn false;\n       goto between_desc;\n \n-    case FMT_DT:\n-      t = format_lex ();\n-      if (t == FMT_ERROR)\n-\tgoto fail;\n-      switch (t)\n-\t{\n-\tcase FMT_RPAREN:\n-\t  level--;\n-\t  if (level < 0)\n-\t    goto finished;\n-\t  goto between_desc;\n-\n-\tcase FMT_COMMA:\n-\t  goto format_item;\n-\n-\tcase FMT_LPAREN:\n-\n-  dtio_vlist:\n-\t  t = format_lex ();\n-\t  if (t == FMT_ERROR)\n-\t    goto fail;\n-\n-\t  if (t != FMT_POSINT)\n-\t    {\n-\t      error = posint_required;\n-\t      goto syntax;\n-\t    }\n-\n-\t  t = format_lex ();\n-\t  if (t == FMT_ERROR)\n-\t    goto fail;\n-\n-\t  if (t == FMT_COMMA)\n-\t    goto dtio_vlist;\n-\t  if (t != FMT_RPAREN)\n-\t    {\n-\t      error = _(\"Right parenthesis expected at %C\");\n-\t      goto syntax;\n-\t    }\n-\t  goto between_desc;\n-\n-\tdefault:\n-\t  error = unexpected_element;\n-\t  goto syntax;\n-\t}\n-\n-      goto format_item;\n-\n     case FMT_SIGN:\n     case FMT_BLANK:\n     case FMT_DP:\n@@ -783,6 +745,7 @@ check_format (bool is_input)\n     case FMT_A:\n     case FMT_D:\n     case FMT_H:\n+    case FMT_DT:\n       goto data_desc;\n \n     case FMT_END:\n@@ -1004,6 +967,53 @@ check_format (bool is_input)\n \n       break;\n \n+    case FMT_DT:\n+      t = format_lex ();\n+      if (t == FMT_ERROR)\n+\tgoto fail;\n+      switch (t)\n+\t{\n+\tcase FMT_RPAREN:\n+\t  level--;\n+\t  if (level < 0)\n+\t    goto finished;\n+\t  goto between_desc;\n+\n+\tcase FMT_COMMA:\n+\t  goto format_item;\n+\n+\tcase FMT_LPAREN:\n+\n+  dtio_vlist:\n+\t  t = format_lex ();\n+\t  if (t == FMT_ERROR)\n+\t    goto fail;\n+\n+\t  if (t != FMT_POSINT)\n+\t    {\n+\t      error = posint_required;\n+\t      goto syntax;\n+\t    }\n+\n+\t  t = format_lex ();\n+\t  if (t == FMT_ERROR)\n+\t    goto fail;\n+\n+\t  if (t == FMT_COMMA)\n+\t    goto dtio_vlist;\n+\t  if (t != FMT_RPAREN)\n+\t    {\n+\t      error = _(\"Right parenthesis expected at %C\");\n+\t      goto syntax;\n+\t    }\n+\t  goto between_desc;\n+\n+\tdefault:\n+\t  error = unexpected_element;\n+\t  goto syntax;\n+\t}\n+      break;\n+\n     case FMT_F:\n       t = format_lex ();\n       if (t == FMT_ERROR)"}, {"sha": "e8cba1455aafa920662a5a2cb1a45454e37ee418", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7eb642efa06145c84fc368284839fe6aa4b4650/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7eb642efa06145c84fc368284839fe6aa4b4650/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=c7eb642efa06145c84fc368284839fe6aa4b4650", "patch": "@@ -631,6 +631,7 @@ gfc_match_use (void)\n \n \tcase INTERFACE_USER_OP:\n \tcase INTERFACE_GENERIC:\n+\tcase INTERFACE_DTIO:\n \t  m = gfc_match (\" =>\");\n \n \t  if (type == INTERFACE_USER_OP && m == MATCH_YES"}, {"sha": "e87a01adf3c7aa3b96e5b06919a0de190c374b68", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7eb642efa06145c84fc368284839fe6aa4b4650/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7eb642efa06145c84fc368284839fe6aa4b4650/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7eb642efa06145c84fc368284839fe6aa4b4650", "patch": "@@ -1,3 +1,8 @@\n+2017-04-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/80484\n+\t* gfortran.dg/dtio_29.f03: New test.\n+\n 2017-04-22  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/80121"}, {"sha": "46961e4ccc4969eb30edd7c50617d906d1c0fa4c", "filename": "gcc/testsuite/gfortran.dg/dtio_29.f03", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7eb642efa06145c84fc368284839fe6aa4b4650/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_29.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7eb642efa06145c84fc368284839fe6aa4b4650/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_29.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_29.f03?ref=c7eb642efa06145c84fc368284839fe6aa4b4650", "patch": "@@ -0,0 +1,47 @@\n+! { dg-do compile }\n+! PR80484 Three syntax errors involving derived-type I/O\n+module dt_write_mod\n+   type, public :: B_type\n+      real :: amount\n+   end type B_type\n+   interface write (formatted)\n+      procedure :: Write_b\n+   end interface\n+contains\n+\n+subroutine Write_b &\n+   (amount, unit, b_edit_descriptor, v_list, iostat, iomsg)\n+\n+   class (B_type), intent(in) :: amount\n+   integer, intent(in) :: unit\n+   character (len=*), intent(in) :: b_edit_descriptor\n+   integer, dimension(:), intent(in) :: v_list\n+   integer, intent(out) :: iostat\n+   character (len=*), intent(inout) :: iomsg\n+   write (unit=unit, fmt=\"(f9.3)\", iostat=iostat) amount%amount\n+\n+end subroutine Write_b\n+\n+end module dt_write_mod\n+\n+program test\n+   use dt_write_mod, only: B_type  , write(formatted)\n+   implicit none\n+\n+   real :: wage = 15.10\n+   integer :: ios\n+   character(len=99) :: iom = \"OK\"\n+\n+   write (unit=*, fmt=\"(DT'$$$Z.##')\", iostat=ios, iomsg=iom) &\n+     B_type(wage), B_type(wage)\n+   print *, trim(iom)\n+   write (unit=*, fmt=\"(2DT'$$$Z.##')\", iostat=ios, iomsg=iom) &\n+     B_type(wage), B_type(wage)\n+   print *, trim(iom)\n+   write (unit=*, fmt=\"(3DT'$$$Z.##')\", iostat=ios, iomsg=iom) &\n+     B_type(wage), B_type(wage)\n+   print *, trim(iom)\n+   write (unit=*, fmt=\"(DT'$$$Z.##'/)\", iostat=ios, iomsg=iom) &\n+     B_type(wage), B_type(wage)\n+   print *, trim(iom)\n+end program test"}]}