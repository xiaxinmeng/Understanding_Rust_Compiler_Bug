{"sha": "c86fab9d08853121dfe3d001b973af1e1c44fddd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg2ZmFiOWQwODg1MzEyMWRmZTNkMDAxYjk3M2FmMWUxYzQ0ZmRkZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-01-09T09:37:34Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-01-09T09:37:34Z"}, "message": "PR libstdc++/88204 disable std::complex<long double> tests\n\nThe IBM128 long double format isn't foldable in constant expressions, so\nconditionally skip the std::complex<long double> cases when they'll\nfail.\n\n\tPR libstdc++/88204\n\t* testsuite/26_numerics/complex/operators/more_constexpr.cc: Do not\n\ttest std::complex<long double> if long double format is IBM128.\n\t* testsuite/26_numerics/complex/requirements/more_constexpr.cc:\n\tLikewise.\n\nFrom-SVN: r267757", "tree": {"sha": "c355e5124ff17620f3ba495706ad1e35899f6619", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c355e5124ff17620f3ba495706ad1e35899f6619"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c86fab9d08853121dfe3d001b973af1e1c44fddd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c86fab9d08853121dfe3d001b973af1e1c44fddd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c86fab9d08853121dfe3d001b973af1e1c44fddd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c86fab9d08853121dfe3d001b973af1e1c44fddd/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73075e06b7591dacd413e2e9a944d9fe6722dde9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73075e06b7591dacd413e2e9a944d9fe6722dde9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73075e06b7591dacd413e2e9a944d9fe6722dde9"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "870fce269e66e25d95e27ae34e0301d8e3049c74", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86fab9d08853121dfe3d001b973af1e1c44fddd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86fab9d08853121dfe3d001b973af1e1c44fddd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c86fab9d08853121dfe3d001b973af1e1c44fddd", "patch": "@@ -1,3 +1,11 @@\n+2019-01-09  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/88204\n+\t* testsuite/26_numerics/complex/operators/more_constexpr.cc: Do not\n+\ttest std::complex<long double> if long double format is IBM128.\n+\t* testsuite/26_numerics/complex/requirements/more_constexpr.cc:\n+\tLikewise.\n+\n 2019-01-08  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/libstdc++-prettyprinters/compat.cc: Test printer support"}, {"sha": "3def7db25510dece8b3babd1d07ade49ed3bf135", "filename": "libstdc++-v3/testsuite/26_numerics/complex/operators/more_constexpr.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86fab9d08853121dfe3d001b973af1e1c44fddd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Foperators%2Fmore_constexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86fab9d08853121dfe3d001b973af1e1c44fddd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Foperators%2Fmore_constexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Foperators%2Fmore_constexpr.cc?ref=c86fab9d08853121dfe3d001b973af1e1c44fddd", "patch": "@@ -56,7 +56,9 @@ int main()\n {\n   __gnu_test::test_operators<float>();\n   __gnu_test::test_operators<double>();\n+#ifndef __LONG_DOUBLE_IBM128__ // IBM128 format is not constexpr foldable\n   __gnu_test::test_operators<long double>();\n+#endif\n \n   return 0;\n }"}, {"sha": "670378dc0c301702929009df9fbc0c5e1cfac6e2", "filename": "libstdc++-v3/testsuite/26_numerics/complex/requirements/more_constexpr.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86fab9d08853121dfe3d001b973af1e1c44fddd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Frequirements%2Fmore_constexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86fab9d08853121dfe3d001b973af1e1c44fddd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Frequirements%2Fmore_constexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Frequirements%2Fmore_constexpr.cc?ref=c86fab9d08853121dfe3d001b973af1e1c44fddd", "patch": "@@ -23,7 +23,6 @@\n \n namespace __gnu_test\n {\n-\n   // Test constexpr real(val) imag(val).\n   template<typename _Tp, const int _Val = 42>\n     inline void\n@@ -160,9 +159,11 @@ int main()\n   __gnu_test::test_operator_members<double, float>();\n   __gnu_test::test_operator_members<double, double>();\n   __gnu_test::test_operator_members<double, long double>();\n+#ifndef __LONG_DOUBLE_IBM128__ // IBM128 format is not constexpr foldable\n   __gnu_test::test_operator_members<long double, float>();\n   __gnu_test::test_operator_members<long double, double>();\n   __gnu_test::test_operator_members<long double, long double>();\n+#endif\n \n #if defined(_GLIBCXX_USE_FLOAT128)\n   // Test primary template."}]}