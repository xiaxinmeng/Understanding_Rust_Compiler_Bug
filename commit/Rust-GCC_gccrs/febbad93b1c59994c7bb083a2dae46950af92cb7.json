{"sha": "febbad93b1c59994c7bb083a2dae46950af92cb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmViYmFkOTNiMWM1OTk5NGM3YmIwODNhMmRhZTQ2OTUwYWY5MmNiNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2009-05-15T15:23:06Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2009-05-15T15:23:06Z"}, "message": "flatten-2.c: Disable early inlining; add comment.\n\n\t* flatten-2.c: Disable early inlining; add comment.\n\t* flatten-3.c: New test based on flatten-2.c.\n\nFrom-SVN: r147582", "tree": {"sha": "3c1a3954b5d0640bb58c436818fbee7eb4cc2fc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c1a3954b5d0640bb58c436818fbee7eb4cc2fc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/febbad93b1c59994c7bb083a2dae46950af92cb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/febbad93b1c59994c7bb083a2dae46950af92cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/febbad93b1c59994c7bb083a2dae46950af92cb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/febbad93b1c59994c7bb083a2dae46950af92cb7/comments", "author": null, "committer": null, "parents": [{"sha": "b51c6a2c924795975501a7775946933cd6d3f587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b51c6a2c924795975501a7775946933cd6d3f587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b51c6a2c924795975501a7775946933cd6d3f587"}], "stats": {"total": 93, "additions": 91, "deletions": 2}, "files": [{"sha": "1cd470bbe7a22d1e27bdda668ea0c2e43f5ebbac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/febbad93b1c59994c7bb083a2dae46950af92cb7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/febbad93b1c59994c7bb083a2dae46950af92cb7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=febbad93b1c59994c7bb083a2dae46950af92cb7", "patch": "@@ -1,3 +1,8 @@\n+2009-05-15  Jan Hubicka  <jh@suse.cz>\n+\n+\t* flatten-2.c: Disable early inlining; add comment.\n+\t* flatten-3.c: New test based on flatten-2.c.\n+\n 2009-05-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/39999"}, {"sha": "ffed23cf4546c08c6c98e3fd72d9ba21f736b4d7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/flatten-2.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/febbad93b1c59994c7bb083a2dae46950af92cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fflatten-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/febbad93b1c59994c7bb083a2dae46950af92cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fflatten-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fflatten-2.c?ref=febbad93b1c59994c7bb083a2dae46950af92cb7", "patch": "@@ -1,11 +1,16 @@\n /* { dg-do compile } */\n-/* { dg-options -O2 } */\n+/* { dg-options \"-O2 -fno-early-inlining\" } */\n \n extern void do_something_usefull();\n /* Check that we finish compiling even if instructed to\n    flatten a cyclic callgraph.  Verify we correctly\n    flatten with another function marked flatten in the\n-   callgraph.  */\n+   callgraph. \n+\n+   Main inline is cureful about indirect calls giving\n+   precedence to breaking cycle at indirect call sites.\n+   Early inliner can't do similar analysis, so we need\n+   to disable it if we want cycles to be broken consistently.  */\n \n void __attribute__((flatten)) direct(void)\n {"}, {"sha": "a1edb910e9de27ea2a1c0a7bdde73a149fc775b6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/flatten-3.c", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/febbad93b1c59994c7bb083a2dae46950af92cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fflatten-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/febbad93b1c59994c7bb083a2dae46950af92cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fflatten-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fflatten-3.c?ref=febbad93b1c59994c7bb083a2dae46950af92cb7", "patch": "@@ -0,0 +1,79 @@\n+/* { dg-do compile } */\n+/* { dg-options -O2 } */\n+\n+extern void do_something_usefull();\n+/* Check that we finish compiling even if instructed to\n+   flatten a cyclic callgraph.  Verify we correctly\n+   flatten with another function marked flatten in the\n+   callgraph.  */\n+\n+void __attribute__((flatten)) direct(void)\n+{\n+  direct();\n+}\n+\n+\n+void __attribute__((flatten)) indirect(void);\n+static void indirect1(void)\n+{\n+  indirect();\n+}\n+void __attribute__((flatten)) indirect(void)\n+{\n+  indirect1();\n+}\n+\n+\n+void __attribute__((flatten)) doubleindirect(void);\n+static void doubleindirect2(void)\n+{\n+  doubleindirect();\n+  do_something_usefull ();\n+}\n+static void doubleindirect1(void)\n+{\n+  doubleindirect2();\n+}\n+void __attribute__((flatten)) doubleindirect(void)\n+{\n+  doubleindirect1();\n+}\n+\n+\n+static void subcycle1(void);\n+static void subcycle2(void)\n+{\n+  subcycle1();\n+  do_something_usefull ();\n+}\n+static void subcycle1(void)\n+{\n+  subcycle2();\n+}\n+void __attribute__((flatten)) subcycle(void)\n+{\n+  subcycle1();\n+}\n+\n+\n+static void doublesubcycle1(void);\n+static void doublesubcycle2(void);\n+static void doublesubcycle3(void)\n+{\n+  doublesubcycle1();\n+  do_something_usefull ();\n+}\n+static void doublesubcycle2(void)\n+{\n+  doublesubcycle3();\n+}\n+static void doublesubcycle1(void)\n+{\n+  doublesubcycle2();\n+}\n+void __attribute__((flatten)) doublesubcycle(void)\n+{\n+  doublesubcycle1();\n+}\n+\n+/* { dg-final { scan-assembler \"cycle\\[123\\]\\[: \\t\\n\\]\" } } */"}]}