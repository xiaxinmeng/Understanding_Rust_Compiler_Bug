{"sha": "a1af4623ea5217822d3029c131d3f08904d914e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFhZjQ2MjNlYTUyMTc4MjJkMzAyOWMxMzFkM2YwODkwNGQ5MTRlMQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-06-18T05:09:50Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-06-18T05:09:50Z"}, "message": "Makefile.am (new-abi-baseline): Create baseline directory.\n\n\t* testsuite/Makefile.am (new-abi-baseline): Create baseline\n\tdirectory.\n\t(baseline_file): Use baseline_dir.\n\t(baseline_dir): New.\n\t(mkinstalldirs): New.\n\n\t* acinclude.m4: Rename baseline_file to baseline_dir, strip\n\tfilename from baseline_dir.\n\n\t* testsuite/Makefile.in: Regenerated.\n\t* Makefile.in: Regenerated.\n\t* aclocal.m4: Regenerated.\n\t* configure: Regenerated.\n\nFrom-SVN: r68136", "tree": {"sha": "ea8fe635ded2a4e0a75f3ee8ca10f009bd0187a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea8fe635ded2a4e0a75f3ee8ca10f009bd0187a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1af4623ea5217822d3029c131d3f08904d914e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1af4623ea5217822d3029c131d3f08904d914e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1af4623ea5217822d3029c131d3f08904d914e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1af4623ea5217822d3029c131d3f08904d914e1/comments", "author": null, "committer": null, "parents": [{"sha": "2f934953f4a47b41356c152dfed8cc27bad2c147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f934953f4a47b41356c152dfed8cc27bad2c147", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f934953f4a47b41356c152dfed8cc27bad2c147"}], "stats": {"total": 207, "additions": 115, "deletions": 92}, "files": [{"sha": "a6e67e7d9a5b4c511144789f82290f6a20ac6393", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 97, "deletions": 81, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a1af4623ea5217822d3029c131d3f08904d914e1", "patch": "@@ -1,3 +1,19 @@\n+2003-06-18  Andreas Jaeger  <aj@suse.de>\n+\n+\t* testsuite/Makefile.am (new-abi-baseline): Create baseline\n+\tdirectory.\n+\t(baseline_file): Use baseline_dir.\n+\t(baseline_dir): New.\n+\t(mkinstalldirs): New.\n+\n+\t* acinclude.m4: Rename baseline_file to baseline_dir, strip\n+\tfilename from baseline_dir.\n+\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\t* aclocal.m4: Regenerated.\n+\t* configure: Regenerated.\n+\n 2003-06-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* configure.in: Missed check_survey bit.\n@@ -20,10 +36,10 @@\n \tlocation of testsuite_flags.\n \t* Makefile.am (check-script): Move..\n \t(check-script-install): Move...\n-\t* testsuite/Makefile.am: ... here.\t\n+\t* testsuite/Makefile.am: ... here.\n \t* testsuite/Makefile.in: Regenerate.\n-\t* Makefile.in: Regenerate.\t\n-\t\n+\t* Makefile.in: Regenerate.\n+\n 2003-06-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/abi/i486-linux-gnu/baseline_symbols.txt: Update to 3.3.0.\n@@ -37,18 +53,18 @@\n \t(check-abi): Conditionalize.\n \t(check-abi-verbose): New.\n \t* Makefile.in: Regenerate.\n-\t* testsuite/Makefile.in: Regenerate.\t\n+\t* testsuite/Makefile.in: Regenerate.\n \t* configure.in: Consolidate testsuite configure bits.\n \t* acinclude.m4 (GLIBCPP_CONFIGURE_TESTSUITE): Same.\n \t* configure: Regenerate.\n-\t* aclocal.m4: Regenerate.\t\n+\t* aclocal.m4: Regenerate.\n \t* testsuite/abi_check.cc: Add --check-verbose.\n \tOnly output detailed information if --check-verbose.\n \n 2003-06-16  Andreas Jaeger  <aj@suse.de>\n-        \n+\n         * testsuite/abi_check.cc: Create summary report.\n- \n+\n 2003-06-16  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/27_io/basic_filebuf/sgetn/char/1-in.cc: Fix\n@@ -63,7 +79,7 @@\n \tcheck-abi multilib aware.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n 2003-06-16  Benjamin Kosnik  <bkoz@redhat.com>\n             Andreas Jaeger  <aj@suse.de>\n \n@@ -79,7 +95,7 @@\n \t* testsuite/27_io/basic_filebuf/sungetc/char/2-in.cc: New.\n \t* testsuite/27_io/basic_filebuf/sungetc/char/2-io.cc: New.\n \t* testsuite/27_io/basic_filebuf/sungetc/char/2-out.cc: New.\n-\t\t\n+\n 2003-06-15  Richard Henderson  <rth@redhat.com>\n \n \t* config/linker-map.gnu: Export virtual function thunks for\n@@ -127,21 +143,21 @@\n 2003-06-13  Nathan C. Myers <ncm-nospam@cantrip.org>\n \n \tAvoid multi-processor bus contention on increment/decrement-and-\n-\ttest of the reference count in the empty-string object, by comparing \n+\ttest of the reference count in the empty-string object, by comparing\n         addresses first, and never touching the reference count of the empty-\n-        string object.  \n+        string object.\n \t* include/bits/basic_string.h:\n \t(_S_empty_rep_storage): Move into basic_string<>::_Rep for use by its\n \tmembers.\n-\t(_Rep::_S_empty_rep()): New accessor. \n+\t(_Rep::_S_empty_rep()): New accessor.\n \t(_Rep::_M_length, _Rep::_M_capacity, _Rep::_M_references): Move to\n \ta base class _Rep_base.\n \t(_Rep::_M_dispose, _Rep::_M_refcopy): Check for the empty string.\n \t(basic_string()): Change to use _M_refdata() in place of _M_refcopy(),\n \tsince no longer must increment its refcount.\n \t* include/bits/basic_string.tcc:\n-\t(_Rep::_M_destroy, _M_leak_hard): Check for the empty string and \n-        return immediately.  The former might be unnecessary.  The latter \n+\t(_Rep::_M_destroy, _M_leak_hard): Check for the empty string and\n+        return immediately.  The former might be unnecessary.  The latter\n         prevents begin() and end() from cloning it unnecessarily.\n \t(_S_construct(_InIterator, _InIterator, const _Alloc&,\n \tinput_iterator_tag), _S_construct(_InIterator, _InIterator,\n@@ -151,14 +167,14 @@\n         This is necessary here because _M_mutate is sometimes called with\n         all-zero arguments; in all other uses of _M_is_shared, the test comes\n         out right anyhow.\n-\t\n+\n 2003-06-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* src/allocator-inst.cc: Explicitly instantiate.\n \t* include/ext/pool_allocator.h: Inhibit implicit instantiations.\n \tTweaks.\n \t* config/linker-map.gnu: Add __pool_alloc bits. Tweaks.\n-\t\n+\n 2003-06-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_ENABLE_CSTDIO): Simplify.\n@@ -168,15 +184,15 @@\n \t* configure.in: Same.\n \t* configure: Regenerate.\n \t* config/io/basic_file_libio.cc: Remove.\n-\t* config/io/basic_file_libio.h: Remove.\t\n+\t* config/io/basic_file_libio.h: Remove.\n \t* config/io/c_io_libio_codecvt.c: Remove.\n-\t* config/io/c_io_libio.h: Remove.\t\n+\t* config/io/c_io_libio.h: Remove.\n \t* libio/*: Remove.\n \t* src/Makefile.am: Same.\n \t* src/Makefile.in: Regenerate.\n-\t* docs/html/configopts.html: Edits.\t\n+\t* docs/html/configopts.html: Edits.\n \t* docs/html/explanations.html: Edits.\n-\t\n+\n 2003-06-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/stl_alloc.h (__debug_alloc): Move out.\n@@ -189,19 +205,19 @@\n \t* include/bits/stl_tree.h: Modify include.\n \t* include/std/std_memory.h: Same.\n \t* include/ext/rope: Same.\n-\t* include/ext/slist: Same.\t\n+\t* include/ext/slist: Same.\n \t* include/std/std_vector.h: Same.\n \t* include/std/std_stack.h: Same.\n \t* include/std/std_queue.h: Same.\n \t* include/std/std_list.h: Same.\n \t* include/std/std_deque.h: Same.\n \t* include/backward/alloc.h: Same.\n \t* include/ext/debug_allocator.h: New.\n-\t* include/ext/malloc_allocator.h: New.\t\n-\t* include/ext/pool_allocator.h: New.\t\t\n+\t* include/ext/malloc_allocator.h: New.\n+\t* include/ext/pool_allocator.h: New.\n \t* include/ext/new_allocator.h: New.\n \t* include/bits/pthread_allocimpl.h: Remove.\n-\t* include/bits/stl_pthread_alloc.h: Remove.\t\n+\t* include/bits/stl_pthread_alloc.h: Remove.\n \t* include/Makefile.am (ext_headers): Add.\n \t* include/Makefile.in: Regenerate.\n \t* src/stl-inst.cc: Use __gnu_cxx namespace.\n@@ -212,10 +228,10 @@\n \t* config/linker-map.gnu: Remove __pool_alloc bits.\n \t* testsuite/ext/headers.cc: Add.\n \t* testsuite/ext/allocators.cc: Fixup.\n-\t\n+\n 2003-06-11  Stefan Olsson  <stefan@snon.net>\n             Ola R\ufffdnnerup  <fnolis@home.se>\n-\t\n+\n \t* include/Makefile.am (ext_headers): Add.\n \t* include/Makefile.in: Regenerate.\n \t* include/ext/mt_allocator.h: New file.\n@@ -340,7 +356,7 @@\n \n 2003-06-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tPR libstdc++/9024\t\n+\tPR libstdc++/9024\n \t* include/bits/fstream.tcc (_M_underflow): Fix for unbuffered.\n \t* include/bits/stl_algobase.h: Tweak.\n \t* include/std/std_fstream.h: Move _M_buf_size to...\n@@ -395,7 +411,7 @@\n \t* testsuite/27_io/basic_filebuf/sputn/char/2-out.cc: New.\n \t* testsuite/data/sgetc.txt: New.\n \t* testsuite/data/sgetn.txt: New.\n-\t\n+\n 2003-06-05  Paolo Carlini  <pcarlini@unitus.it>\n \n \tPR libstdc++/11095\n@@ -454,7 +470,7 @@\n \tasm case to asm.\n \t* config/cpu/i486/atomicity.h (__exchange_and_add): Likewise.\n \t(__atomic_add): likewise.\n-\t\n+\n 2003-06-02  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/sstream.tcc (pbackfail): Minor clean up and\n@@ -556,7 +572,7 @@\n \t(basic_filebuf::overflow): ...this.\n \t* testsuite/27_io/basic_filebuf/sputn/char/9339.cc: New.\n \t* testsuite/27_io/basic_filebuf/sputc/char/2.cc: Unbuffered.\n-\t\n+\n 2003-05-24  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* libsupc++/Makefile.am, libsupc++/cxxabi.h, libsupc++/del_op.cc,\n@@ -585,7 +601,7 @@\n \t* aclocal.m4: Regenerate.\n \t* configure.target: Same. Rename to...\n \t* configure.host: This.\n-\t\n+\n 2003-05-22  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/std/std_fstream.h (_S_pback_size): Remove definition.\n@@ -678,12 +694,12 @@\n         * testsuite/performance/string_append.cc: New.\n \t* testsuite/lib/libstdc++-v3-dg.exp (v3-compute-tests): Filter\n \tperformance tests.\n- \n+\n 2003-05-20  Gabriel Dos Reis <gdr@integrable-solutions.net>\n \n \tPR libstdc++/10689\n \t* include/std/std_complex.h (pow): Tidy.\n-\t\n+\n 2003-05-19  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/27_io/basic_filebuf/close/char/4.cc: New file, testing\n@@ -730,7 +746,7 @@\n \texcess errors dg marker, use dg-errors instead.\n \t* testsuite/27_io/ios_base/cons/assign_neg.cc: Same.\n \t* testsuite/20_util/auto_ptr_neg.cc: Same.\n-\t\n+\n 2003-05-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/std/std_fstream.h (basic_filebuf::_M_codecvt): Add\n@@ -745,11 +761,11 @@\n \t(basic_filebuf::imbue): Use it, tweaks.\n \t* include/bits/localefwd.h (__check_facet): New.\n \t* include/bits/locale_classes.h: Tweaks.\n-\t* include/bits/locale_facets.tcc: Tweaks.\t\n+\t* include/bits/locale_facets.tcc: Tweaks.\n \t* include/bits/basic_ios.h (basic_ios::_M_check_facet): Remove.\n \t_M_fctype to _M_ctype, _M_fnumput to _M_num_put, _M_fnumget to\n \t_M_num_get. Change _M_check_facet to __check_facet. Tweaks.\n-\t* include/bits/basic_ios.tcc: Same.\t\n+\t* include/bits/basic_ios.tcc: Same.\n \t* include/bits/istream.tcc: Same.\n \t* include/bits/ostream.tcc: Same.\n \t* include/std/std_streambuf.h: Same.\n@@ -759,7 +775,7 @@\n \t* testsuite/27_io/basic_filebuf/imbue/wchar_t/2.cc: New.\n \t* testsuite/27_io/basic_filebuf/imbue/wchar_t/3.cc: New.\n \t* testsuite/27_io/basic_filebuf/imbue/wchar_t/9322.cc: New.\n-\t\n+\n 2003-05-12  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/27_io/basic_filebuf/sgetc/char/1.cc: Remove\n@@ -821,7 +837,7 @@\n \t* include/bits/cpp_type_traits.h (__are_same<>): New traits.\n \t(__enable_if): Likewise.\n \t* testsuite/26_numerics/cmath/overloads.C: New test.\n-\t\n+\n 2003-05-10  Petur Runolfsson  <peturr02@ru.is>\n \n \tPR libstdc++/9027\n@@ -859,7 +875,7 @@\n \t* include/bits/fstream.tcc: Same.\n \t* src/fstream.cc: Same.\n \t* testsuite/27_io/basic_filebuf/sgetn/char/1.cc (test05): Tidy.\n-\t\n+\n 2003-05-10  Petur Runolfsson  <peturr02@ru.is>\n \n \tPR libstdc++/9520\n@@ -871,7 +887,7 @@\n \t* include/Makefile.in: Regenerate.\n \t* include/bits/ios_base.h (Init::_S_create_buffers,\n \tInit::_S_destroy_buffers):  Remove declarations.\n-\t* src/globals.cc (buf_cout_sync, buf_cin_sync, buf_cerr_sync, \n+\t* src/globals.cc (buf_cout_sync, buf_cin_sync, buf_cerr_sync,\n \tbuf_wcout_sync, buf_wcin_sync, buf_wcerr_sync):  Define.\n \t* src/ios.cc (Init::_S_create_buffers,\n \tInit::_S_destroy_buffers):  Remove.\n@@ -945,10 +961,10 @@\n         (__cxa_call_unexpected): Remove foreign exception fixmes.\n \n 2003-05-07  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* testsuite/27_io/ios_base/cons: New.\n \t* testsuite/27_io/ios_base/cons/assign_neg.cc: New.\n-\t* testsuite/27_io/ios_base/cons/copy_neg.cc: New.\t\n+\t* testsuite/27_io/ios_base/cons/copy_neg.cc: New.\n \n 2003-05-07  Paolo Carlini  <pcarlini@unitus.it>\n \n@@ -973,30 +989,30 @@\n \tto clean up.\n \n 2003-05-06  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* include/bits/stl_algo.h: Enums as _S_.\n \t* include/bits/stl_tree.h: Same.\n \t* include/bits/stl_bvector.h: Same.\n \t* include/bits/ios_base.h: Same.\n \t* include/bits/stl_alloc.h: Same.\n \t* include/ext/stl_hashtable.h: Same.\n \t* src/ios.cc: And here.\n-\t\n-\t* include/std/std_sstream.h: Replace _M_really_sync to _M_sync. \n+\n+\t* include/std/std_sstream.h: Replace _M_really_sync to _M_sync.\n \t* include/bits/sstream.tcc: Same.\n \n         * include/bits/basic_ios.h: Correct spacing for '< ctype'.\n- \n+\n \t* include/bits/locale_facets.tcc: Replace __temp to __tmp.\n \n \t* include/bits/locale_facets.h (__num_base): Remove protected.\n \tUse _S_[io]* names for enumerations.\n \t(_S_format_int): Remove.\n \t* include/bits/locale_facets.tcc: Same.\n \t* src/locale.cc: Same.\n-\t\n+\n \t* include/std/std_sstream.h (stringbuf::str): Tweak formatting.\n-\t\n+\n 2003-05-06  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/html/faq/index.html (3.10):  Add note about mips atomicity.h.\n@@ -1087,7 +1103,7 @@\n \t* testsuite/abi_check.cc (check_version): Update known versions.\n \tCheck added symbols for version_name != base version. Add missing\n \tsymbols to incompatible list.\n-\t\n+\n 2003-05-01  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_EXPORT_FLAGS): Remove -Winline.\n@@ -1181,7 +1197,7 @@\n \t* config/locale/ieee_1003.1-2001/codecvt_specializations.h: Same.\n \n \t* testsuite/testsuite_hooks.cc (__gnu_cxx_test): Modify.\n-\t\n+\n 2003-04-28  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/std/std_streambuf.h (_M_buf_size): is currently\n@@ -1215,7 +1231,7 @@\n \t* po/Makefile.in, config.h.in, configure:  Regenerate.\n \n 2003-04-28  Petur Runolfsson  <peturr02@ru.is>\n- \n+\n         PR libstdc++/9523\n         * include/bits/ios_base.h (Init::_S_ios_create,\n         Init::_S_ios_destroy):  Remove declarations.\n@@ -1237,12 +1253,12 @@\n 2003-04-28  Benjamin Kosnik  <bkoz@redhat.com>\n \n         * testsuite/27_io/objects/char/8.cc:  New test.\n-\t\n+\n 2003-04-28  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/22_locale/codecvt/unicode/char.cc: Remove bom usage.\n \t* testsuite/22_locale/codecvt/unicode/wchar_t.cc: Same.\n-\t\n+\n 2003-04-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/std/std_fstream.h (basic_filebuf): _M_pback_destroy to\n@@ -1256,7 +1272,7 @@\n \t* include/bits/streambuf.tcc: Same.\n \t* include/bits/fstream.tcc: Same.\n \t* include/bits/sstream.tcc: Same.\n-\t\n+\n 2003-04-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_classes.h (locale::_Impl): Change _M_names\n@@ -1271,7 +1287,7 @@\n \t* src/localename.cc: Use them.\n \t(locale::_Impl::~_Impl): Destroy _M_names.\n \t(locale::_Impl::_Impl): Create _M_names.\n-\t\n+\n 2003-04-27  Andreas Schwab  <schwab@suse.de>\n \n \t* config/locale/ieee_1003.1-2001/codecvt_specializations.h\n@@ -1289,7 +1305,7 @@\n \treplace(size_type, size_type, const _CharT*, size_type)):\n \tMove from here to...\n \t* include/bits/basic_string.tcc: ...here.\n-\t\n+\n 2003-04-26  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/fstream.tcc (pbackfail): Shorten a bit (10 lines)\n@@ -1304,19 +1320,19 @@\n \n \t* include/std/std_sstream.h (setbuf): don't set _M_buf_size,\n \tin basic_stringbuf it's unused.\n-\t\n+\n \t* include/std/std_sstream.h (underflow): consistently use\n \t_M_in_cur, not gptr().\n \n 2003-04-25  Ranjit Mathew  <rmathew@hotmail.com>\n             Phil Edwards  <pme@gcc.gnu.org>\n-\t\n+\n \t* testsuite_flags.in: Guard against the possibility\n \tof having \"xgcc\" as a part of a folder name in the\n \tpath to the GCC build folder.\n \t* testsuite/Makefile.am: Likewise.\n \t* testsuite/Makefile.in: Regenerated.\n-\t\n+\n 2003-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/10132\n@@ -1325,27 +1341,27 @@\n \t(basic_filebuf::close): Same.\n \t(basic_filebuf::_M_pback_destroy): Same.\n \t(basic_filebuf::_M_destroy_internal_buffer): Same.\n-\t(basic_filebuf): Remove __res_type typedef.\t\n+\t(basic_filebuf): Remove __res_type typedef.\n \t* src/fstream.cc: Same.\n \t* include/bits/fstream.tcc\n \t(basic_filebuf::_M_convert_to_external): Simplify.\n \t(basic_filebuf::seekoff): Use has_facet\tbefore use_facet.\n \t(basic_filebuf::close): Add exception specification of throw().\n \t* testsuite/27_io/basic_filebuf/cons: New.\n-\t* testsuite/27_io/basic_filebuf/cons/wchar_t: New.\t\n-\t* testsuite/27_io/basic_filebuf/cons/wchar_t/10132-1.cc: New.\t\n+\t* testsuite/27_io/basic_filebuf/cons/wchar_t: New.\n+\t* testsuite/27_io/basic_filebuf/cons/wchar_t/10132-1.cc: New.\n \t* testsuite/27_io/basic_filebuf/seekoff/10132-2.cc: New.\n \t* testsuite/27_io/basic_filebuf/seekpos/10132-3.cc: New.\n \n 2003-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* include/bits/locale_classes.h\n \t(locale::_S_extra_categories_size): Remove.\n \t* src/locale.cc: Remove _S_extra_categories_size.\n \t* src/localename.cc: Same.\n \t* config/locale/gnu/c_locale.cc: Same.\n \t* config/locale/generic/c_locale.cc: Same.\n-\t\n+\n 2003-04-24  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* src/localename.cc (__gnu_cxx::facet_vec): Correct types.\n@@ -1395,9 +1411,9 @@\n \n \t* configure.in: Move GLIBCPP_CHECK_PCH before native/cross conditions.\n \t* configure: Regenerated.\n-\t\n+\n 2003-04-23  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* config/locale/generic/c_locale.h (__convert_from_v): Use\n \tattribute unused.\n \n@@ -1595,7 +1611,7 @@\n \t* testsuite/thread/pthread4.cc: Same.\n \t* testsuite/thread/pthread5.cc: Same.\n \t* testsuite/thread/pthread6.cc: Same.\n- \n+\n 2003-04-15  Loren J. Rittle  <ljrittle@acm.org>\n \n \tlibstdc++/7680\n@@ -1613,12 +1629,12 @@\n \t* testsuite/26_numerics/c_math_dynamic.cc: New file.\n \n 2003-04-14  Andreas Tobler  <toa@pop.agri.ch>\n- \t    Benjamin Kosnik  <bkoz@redhat.com>\n+\t    Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/os/generic/ctype_inline.h: Fix.\n-\t\n+\n 2003-04-14  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* testsuite/testsuite_hooks.h\n \t(__gnu_cxx_test::run_test_wrapped_generic_locale_exception_catcher):\n \tChange to try_named_locale.\n@@ -1763,9 +1779,9 @@\n \t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/2.cc: Same.\n \t* testsuite/27_io/basic_streambuf/imbue/char/9322.cc: Same.\n \t* testsuite/27_io/basic_stringbuf/imbue/char/9322.cc: Same.\n-\t\n+\n 2003-04-14  Andreas Tobler  <toa@pop.agri.ch>\n- \t    \n+\n \t* configure.target (_cpu_incdir_fullpath): Solaris 2.9 uses\n \tsolaris includes, not generic.\n \n@@ -1809,7 +1825,7 @@\n \tRemove _M_buf_size_opt, use directly _M_buf_size instead.\n \t* include/bits/fstream.tcc\n \t(basic_filebuf::_M_allocate_internal_buffer, setbuf): Remove\n-\treferences to _M_buf_size_opt. \n+\treferences to _M_buf_size_opt.\n \t* include/bits/sstream.tcc (basic_stringbuf::overflow): Likewise.\n \t* include/bits/streambuf.tcc (__copy_streambufs): Likewise, rename\n \t__bufsize to __in_avail and __size_opt to __buf_size.\n@@ -1852,12 +1868,12 @@\n \n \t* testsuite/22_locale/locale/cons/3.cc: Split.\n \t* testsuite/22_locale/locale/cons/7222-c.cc: New.\n-\t* testsuite/22_locale/locale/cons/7222-env.cc: New.\t\n+\t* testsuite/22_locale/locale/cons/7222-env.cc: New.\n \tCheck before trying to create a locale from the environment.\n \t* testsuite/27_io/ios_base/state/1.cc (test02): Use \"C\" locale.\n \t* testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc:\n \tAdjust includes.\n-\t\n+\n 2003-04-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/22_locale/ctype/is/char/3.cc (test03): Use the classic\n@@ -1869,7 +1885,7 @@\n \tinstantiation for AIX.\n \t* testsuite/27_io/basic_ostream/sentry/char/3983-fstream.cc: Same.\n \t* testsuite/25_algorithms/min_max.cc: Same.\n-\t\n+\n 2003-04-10  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* basic_file_stdio.cc (__basic_file<char>::close): Don't flush stream\n@@ -2243,27 +2259,27 @@\n \n \t* include/std/std_streambuf.h (basic_streambuf::setp): Set\n \t_M_out_lim.\n-\t\n+\n \t* include/std/std_sstream.h (basic_strinbuf::str): Zero length\n \toutput string shouldn't core.\n \t(basic_stringbuf::_M_really_sync): Add base argument. Remove rturn\n \ttype.\n \t* include/bits/sstream.tcc: Adjust _M_really_sync bits here.\n-\t\n+\n \t* include/bits/istream.tcc (basic_istream::putback): Set gcount to\n \tzero.\n \n 2003-04-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/data: New directory.\n \t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init): Modify\n-\tto copy files from the testsuite data directory.\t\n+\tto copy files from the testsuite data directory.\n \t(libstdc++-v3-list-sourcefiles): Add another test list filter, for\n \ttestfiles containing _xin, which now means this is an interactive\n \ttest and should be run with the interactive dejagnu hooks.\n \t* testsuite/Makefile.am: Remove testsuite_* files.\n \t* testsuite/Makefile.in: Regenerate.\n-\t\n+\n 2003-04-09  Zack Weinberg  <zack@codesourcery.com>\n \n \t* docs/html/install.html: Document complete list of locales\n@@ -3050,7 +3066,7 @@\n \t(basic_streambuf()): Initialize _M_out_lim too.\n \t* testsuite/27_io/filebuf_virtuals.cc (test10): Trivial tweak.\n \t* testsuite/27_io/filebuf_virtuals.cc (test11): Add.\n- \t* testsuite/27_io/stringbuf_virtuals.cc (test09): Add.\n+\t* testsuite/27_io/stringbuf_virtuals.cc (test09): Add.\n \n 2003-02-24  Benjamin Kosnik  <bkoz@redhat.com>\n "}, {"sha": "1df7b1a3a5ea2406d43b12b67774b3d003c78873", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=a1af4623ea5217822d3029c131d3f08904d914e1", "patch": "@@ -121,7 +121,7 @@ USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@\n WERROR = @WERROR@\n-baseline_file = @baseline_file@\n+baseline_dir = @baseline_dir@\n check_msgfmt = @check_msgfmt@\n enable_shared = @enable_shared@\n enable_static = @enable_static@"}, {"sha": "c34d93d5721a018c8bb04629116460c3cc58ab31", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=a1af4623ea5217822d3029c131d3f08904d914e1", "patch": "@@ -2059,8 +2059,8 @@ AC_DEFUN(GLIBCPP_CONFIGURE_TESTSUITE, [\n   fi\n \n   # Export file names for ABI checking.\n-  baseline_file=\"${glibcpp_srcdir}/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)/baseline_symbols.txt\"\n-  AC_SUBST(baseline_file)\n+  baseline_dir=\"${glibcpp_srcdir}/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n+  AC_SUBST(baseline_dir)\n \n   # Determine if checking the ABI is desirable.\n   if test x$enable_symvers = xno; then"}, {"sha": "00c2796b314a6e9e7cc44443bbb7b5c04cc7ad36", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=a1af4623ea5217822d3029c131d3f08904d914e1", "patch": "@@ -2071,8 +2071,8 @@ AC_DEFUN(GLIBCPP_CONFIGURE_TESTSUITE, [\n   fi\n \n   # Export file names for ABI checking.\n-  baseline_file=\"${glibcpp_srcdir}/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)/baseline_symbols.txt\"\n-  AC_SUBST(baseline_file)\n+  baseline_dir=\"${glibcpp_srcdir}/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n+  AC_SUBST(baseline_dir)\n \n   # Determine if checking the ABI is desirable.\n   if test x$enable_symvers = xno; then"}, {"sha": "9270ed362451077f37115b0d5f8c4c1275e8f2a3", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=a1af4623ea5217822d3029c131d3f08904d914e1", "patch": "@@ -23607,7 +23607,7 @@ done\n   fi\n \n   # Export file names for ABI checking.\n-  baseline_file=\"${glibcpp_srcdir}/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)/baseline_symbols.txt\"\n+  baseline_dir=\"${glibcpp_srcdir}/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n   \n \n   # Determine if checking the ABI is desirable.\n@@ -24095,7 +24095,7 @@ s%@WERROR@%$WERROR%g\n s%@SYMVER_MAP@%$SYMVER_MAP%g\n s%@GLIBCPP_BUILD_VERSIONED_SHLIB_TRUE@%$GLIBCPP_BUILD_VERSIONED_SHLIB_TRUE%g\n s%@GLIBCPP_BUILD_VERSIONED_SHLIB_FALSE@%$GLIBCPP_BUILD_VERSIONED_SHLIB_FALSE%g\n-s%@baseline_file@%$baseline_file%g\n+s%@baseline_dir@%$baseline_dir%g\n s%@GLIBCPP_TEST_WCHAR_T_TRUE@%$GLIBCPP_TEST_WCHAR_T_TRUE%g\n s%@GLIBCPP_TEST_WCHAR_T_FALSE@%$GLIBCPP_TEST_WCHAR_T_FALSE%g\n s%@GLIBCPP_TEST_ABI_TRUE@%$GLIBCPP_TEST_ABI_TRUE%g"}, {"sha": "e0810e2cb8003b78f4bb6a7aac32ce4d8ca105b8", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=a1af4623ea5217822d3029c131d3f08904d914e1", "patch": "@@ -23,6 +23,8 @@\n \n AUTOMAKE_OPTIONS =  cygnus dejagnu\n \n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+\n DEJATOOL = libstdc++-v3\n \n EXPECT = `if [ -f @glibcpp_builddir@/../../expect/expect ] ; then \\\n@@ -83,8 +85,9 @@ check-am:\n \n check-local: check-abi\n \n-baseline_file = @baseline_file@\n-extract_symvers = @glibcpp_srcdir@/scripts/extract_symvers\n+baseline_dir = @baseline_dir@\n+baseline_file = ${baseline_dir}/baseline_symbols.txt\n+extract_symvers = @glibcpp_srcdir@/config/abi/extract_symvers\n \n current_symbols.txt: ${extract_symvers} ../src/.libs/libstdc++.so\n \t  -@(${extract_symvers} ../src/.libs/libstdc++.so current_symbols.txt)\n@@ -99,6 +102,7 @@ baseline_symbols:\n \ttouch baseline_symbols)\n \n new-abi-baseline: \n+\t-@$(mkinstalldirs) ${baseline_dir}\n \t-@(output=${baseline_file}; \\\n \t  if test -f $${output}; then \\\n \t    output=$${output}.new; \\"}, {"sha": "680247079ef25f900b59a71f74fcb3d9120f214e", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1af4623ea5217822d3029c131d3f08904d914e1/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=a1af4623ea5217822d3029c131d3f08904d914e1", "patch": "@@ -137,6 +137,8 @@ toplevel_srcdir = @toplevel_srcdir@\n \n AUTOMAKE_OPTIONS = cygnus dejagnu\n \n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+\n DEJATOOL = libstdc++-v3\n \n EXPECT = `if [ -f @glibcpp_builddir@/../../expect/expect ] ; then \\\n@@ -177,7 +179,8 @@ libv3test_a_SOURCES = testsuite_hooks.cc testsuite_allocator.cc\n @GLIBCPP_TEST_ABI_FALSE@noinst_PROGRAMS = \n abi_check_SOURCES = abi_check.cc\n \n-baseline_file = @baseline_file@\n+baseline_dir = @baseline_dir@\n+baseline_file = ${baseline_dir}/baseline_symbols.txt\n extract_symvers = @glibcpp_srcdir@/scripts/extract_symvers\n \n # These two special 'check-script' rules use the bash script 'check'\n@@ -197,7 +200,6 @@ check_performance = ${glibcpp_srcdir}/scripts/check_performance\n CLEANFILES = *.txt *.tst *.exe core* filebuf_* tmp* ostream_* *.log *.sum \\\n \t     testsuite_* site.exp abi_check baseline_symbols\n \n-mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n LIBRARIES =  $(noinst_LIBRARIES)\n@@ -507,6 +509,7 @@ baseline_symbols:\n \ttouch baseline_symbols)\n \n new-abi-baseline: \n+\t-@$(mkinstalldirs) ${baseline_dir}\n \t-@(output=${baseline_file}; \\\n \t  if test -f $${output}; then \\\n \t    output=$${output}.new; \\"}]}