{"sha": "425d737b36727ca68cb77ff01d6aad8b150044ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI1ZDczN2IzNjcyN2NhNjhjYjc3ZmYwMWQ2YWFkOGIxNTAwNDRlZQ==", "commit": {"author": {"name": "Matthew Gretton-Dann", "email": "matthew.gretton-dann@arm.com", "date": "2011-11-16T18:02:12Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2011-11-16T18:02:12Z"}, "message": "lib1funcs.asm (udivsi3): Add support for divide functions.\n\n2011-11-16  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>\n\n\t* config/arm/lib1funcs.asm (udivsi3): Add support for divide\n\tfunctions.\n\t(aeabi_uidivmod): Likewise.\t\n\t(umodsi3): Likewise.\n\t(divsi3): Likewise.\n\t(aeabi_idivmod): Likewise.\n\t(modsi3): Likewise.\n\nFrom-SVN: r181419", "tree": {"sha": "be0651d23eff26d5d3f9720a58c32ca892d961ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be0651d23eff26d5d3f9720a58c32ca892d961ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/425d737b36727ca68cb77ff01d6aad8b150044ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/425d737b36727ca68cb77ff01d6aad8b150044ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/425d737b36727ca68cb77ff01d6aad8b150044ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/425d737b36727ca68cb77ff01d6aad8b150044ee/comments", "author": {"login": "matt-gretton-dann", "id": 53790742, "node_id": "MDQ6VXNlcjUzNzkwNzQy", "avatar_url": "https://avatars.githubusercontent.com/u/53790742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matt-gretton-dann", "html_url": "https://github.com/matt-gretton-dann", "followers_url": "https://api.github.com/users/matt-gretton-dann/followers", "following_url": "https://api.github.com/users/matt-gretton-dann/following{/other_user}", "gists_url": "https://api.github.com/users/matt-gretton-dann/gists{/gist_id}", "starred_url": "https://api.github.com/users/matt-gretton-dann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matt-gretton-dann/subscriptions", "organizations_url": "https://api.github.com/users/matt-gretton-dann/orgs", "repos_url": "https://api.github.com/users/matt-gretton-dann/repos", "events_url": "https://api.github.com/users/matt-gretton-dann/events{/privacy}", "received_events_url": "https://api.github.com/users/matt-gretton-dann/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0fe1f31b9e6a6064b2748b97a971b2b7ccf18337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fe1f31b9e6a6064b2748b97a971b2b7ccf18337", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fe1f31b9e6a6064b2748b97a971b2b7ccf18337"}], "stats": {"total": 80, "additions": 76, "deletions": 4}, "files": [{"sha": "57fcc5400194ad9122a60caf56126036bf58b20a", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/425d737b36727ca68cb77ff01d6aad8b150044ee/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/425d737b36727ca68cb77ff01d6aad8b150044ee/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=425d737b36727ca68cb77ff01d6aad8b150044ee", "patch": "@@ -1,3 +1,13 @@\n+2011-11-16  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>\n+\n+\t* config/arm/lib1funcs.asm (udivsi3): Add support for divide\n+\tfunctions.\n+\t(aeabi_uidivmod): Likewise.\t\n+\t(umodsi3): Likewise.\n+\t(divsi3): Likewise.\n+\t(aeabi_idivmod): Likewise.\n+\t(modsi3): Likewise.\n+\n 2011-11-16  Tristan Gingold  <gingold@adacore.com>\n \n \t* config/alpha/qrnnd.S: Use specific pseudos for VMS."}, {"sha": "094d79afad6ee0de0bae085aa4226fc81aea436c", "filename": "libgcc/config/arm/lib1funcs.S", "status": "modified", "additions": 66, "deletions": 4, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/425d737b36727ca68cb77ff01d6aad8b150044ee/libgcc%2Fconfig%2Farm%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/425d737b36727ca68cb77ff01d6aad8b150044ee/libgcc%2Fconfig%2Farm%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Flib1funcs.S?ref=425d737b36727ca68cb77ff01d6aad8b150044ee", "patch": "@@ -951,6 +951,17 @@ LSYM(udivsi3_skip_div0_test):\n \tpop\t{ work }\n \tRET\n \n+#elif defined(__ARM_ARCH_EXT_IDIV__)\n+\n+\tARM_FUNC_START udivsi3\n+\tARM_FUNC_ALIAS aeabi_uidiv udivsi3\n+\n+\tcmp\tr1, #0\n+\tbeq\tLSYM(Ldiv0)\n+\n+\tudiv\tr0, r0, r1\n+\tRET\n+\n #else /* ARM version/Thumb-2.  */\n \n \tARM_FUNC_START udivsi3\n@@ -997,6 +1008,14 @@ FUNC_START aeabi_uidivmod\n \tmul\tr2, r0\n \tsub\tr1, r1, r2\n \tbx\tr3\n+#elif defined(__ARM_ARCH_EXT_IDIV__)\n+ARM_FUNC_START aeabi_uidivmod\n+\tcmp\tr1, #0\n+\tbeq\tLSYM(Ldiv0)\n+\tmov     r2, r0 \n+\tudiv\tr0, r0, r1\n+\tmls     r1, r0, r1, r2\n+\tRET\n #else\n ARM_FUNC_START aeabi_uidivmod\n \tcmp\tr1, #0\n@@ -1014,9 +1033,19 @@ ARM_FUNC_START aeabi_uidivmod\n /* ------------------------------------------------------------------------ */\n #ifdef L_umodsi3\n \n-\tFUNC_START umodsi3\n+#ifdef __ARM_ARCH_EXT_IDIV__\n \n-#ifdef __thumb__\n+\tARM_FUNC_START umodsi3\n+\n+\tcmp\tr1, #0\n+\tbeq\tLSYM(Ldiv0)\n+\tudiv\tr2, r0, r1\n+\tmls     r0, r1, r2, r0\n+\tRET\n+\n+#elif defined(__thumb__)\n+\n+\tFUNC_START umodsi3\n \n \tcmp\tdivisor, #0\n \tbeq\tLSYM(Ldiv0)\n@@ -1035,6 +1064,8 @@ LSYM(Lover10):\n \t\n #else  /* ARM version.  */\n \t\n+\tFUNC_START umodsi3\n+\n \tsubs\tr2, r1, #1\t\t\t@ compare divisor with 1\n \tbcc\tLSYM(Ldiv0)\n \tcmpne\tr0, r1\t\t\t\t@ compare dividend with divisor\n@@ -1091,6 +1122,16 @@ LSYM(Lover12):\n \tpop\t{ work }\n \tRET\n \n+#elif defined(__ARM_ARCH_EXT_IDIV__)\n+\n+\tARM_FUNC_START divsi3\n+\tARM_FUNC_ALIAS aeabi_idiv divsi3\n+\n+\tcmp \tr1, #0\n+\tbeq\tLSYM(Ldiv0)\n+\tsdiv\tr0, r0, r1\n+\tRET\n+\n #else /* ARM/Thumb-2 version.  */\n \t\n \tARM_FUNC_START divsi3\t\n@@ -1153,6 +1194,14 @@ FUNC_START aeabi_idivmod\n \tmul\tr2, r0\n \tsub\tr1, r1, r2\n \tbx\tr3\n+#elif defined(__ARM_ARCH_EXT_IDIV__)\n+ARM_FUNC_START aeabi_idivmod\n+\tcmp \tr1, #0\n+\tbeq\tLSYM(Ldiv0)\n+\tmov     r2, r0\n+\tsdiv\tr0, r0, r1\n+\tmls     r1, r0, r1, r2\n+\tRET\n #else\n ARM_FUNC_START aeabi_idivmod\n \tcmp\tr1, #0\n@@ -1170,9 +1219,20 @@ ARM_FUNC_START aeabi_idivmod\n /* ------------------------------------------------------------------------ */\n #ifdef L_modsi3\n \n-\tFUNC_START modsi3\n+#if defined(__ARM_ARCH_EXT_IDIV__)\n \n-#ifdef __thumb__\n+\tARM_FUNC_START modsi3\n+\n+\tcmp\tr1, #0\n+\tbeq\tLSYM(Ldiv0)\n+\n+\tsdiv\tr2, r0, r1\n+\tmls     r0, r1, r2, r0\n+\tRET\n+\n+#elif defined(__thumb__)\n+\n+\tFUNC_START modsi3\n \n \tmov\tcurbit, #1\n \tcmp\tdivisor, #0\n@@ -1204,6 +1264,8 @@ LSYM(Lover12):\n \n #else /* ARM version.  */\n \t\n+\tFUNC_START modsi3\n+\n \tcmp\tr1, #0\n \tbeq\tLSYM(Ldiv0)\n \trsbmi\tr1, r1, #0\t\t\t@ loops below use unsigned."}]}