{"sha": "a0367a97c5b4c714b43066ea44c66333f0526056", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAzNjdhOTdjNWI0YzcxNGI0MzA2NmVhNDRjNjYzMzNmMDUyNjA1Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-06T10:11:07Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-06T10:11:07Z"}, "message": "[multiple changes]\n\n2014-02-06  Pascal Obry  <obry@adacore.com>\n\n\t* prj-util.adb (For_Interface_Sources): Fix handling of required\n\tbodies for aggregate libs.\n\n2014-02-06  Robert Dewar  <dewar@adacore.com>\n\n\t* nlists.ads: Minor comment clarifications.\n\n2014-02-06  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Set Modify_Tree_For_C\n\tif gnatd.V set.\n\t* opt.ads (Modify_Tree_For_C): New flag.\n\t* output.ads, output.adb (Last_Char): New function.\n\n2014-02-06  Pascal Obry  <obry@adacore.com>\n\n\t* projects.texi, prj-env.adb (Initialize_Default_Project_Path): Add\n\tshare/gpr for cross-builds.\n\nFrom-SVN: r207542", "tree": {"sha": "fa134c2379a030767243524185079b49ece51c23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa134c2379a030767243524185079b49ece51c23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0367a97c5b4c714b43066ea44c66333f0526056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0367a97c5b4c714b43066ea44c66333f0526056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0367a97c5b4c714b43066ea44c66333f0526056", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0367a97c5b4c714b43066ea44c66333f0526056/comments", "author": null, "committer": null, "parents": [{"sha": "ce3904da34e70f926123e730107380dede9353d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3904da34e70f926123e730107380dede9353d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce3904da34e70f926123e730107380dede9353d3"}], "stats": {"total": 114, "additions": 95, "deletions": 19}, "files": [{"sha": "87a36e6b0aba2599b1bc0e80ab4a01a4671bf417", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a0367a97c5b4c714b43066ea44c66333f0526056", "patch": "@@ -1,3 +1,24 @@\n+2014-02-06  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-util.adb (For_Interface_Sources): Fix handling of required\n+\tbodies for aggregate libs.\n+\n+2014-02-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* nlists.ads: Minor comment clarifications.\n+\n+2014-02-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): Set Modify_Tree_For_C\n+\tif gnatd.V set.\n+\t* opt.ads (Modify_Tree_For_C): New flag.\n+\t* output.ads, output.adb (Last_Char): New function.\n+\n+2014-02-06  Pascal Obry  <obry@adacore.com>\n+\n+\t* projects.texi, prj-env.adb (Initialize_Default_Project_Path): Add\n+\tshare/gpr for cross-builds.\n+\n 2014-02-06  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_util.ads, checks.adb, sem_prag.adb, prj-util.adb, sem_ch13.adb:"}, {"sha": "cfa89b1d23c20a413c56815c8e1254585eac3934", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=a0367a97c5b4c714b43066ea44c66333f0526056", "patch": "@@ -117,6 +117,12 @@ procedure Gnat1drv is\n          Relaxed_RM_Semantics := True;\n       end if;\n \n+      --  -gnatd.V enables special C expansion mode\n+\n+      if Debug_Flag_Dot_VV then\n+         Modify_Tree_For_C := True;\n+      end if;\n+\n       --  -gnatd.E sets Error_To_Warning mode, causing selected error messages\n       --  to be treated as warnings instead of errors.\n "}, {"sha": "42c280e23315317aaf0ba2ae31da03574393e41f", "filename": "gcc/ada/nlists.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Fnlists.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Fnlists.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.ads?ref=a0367a97c5b4c714b43066ea44c66333f0526056", "patch": "@@ -346,7 +346,9 @@ package Nlists is\n    function No (List : List_Id) return Boolean;\n    pragma Inline (No);\n    --  Tests given Id for equality with No_List. This allows notations like\n-   --  \"if No (Statements)\" as opposed to \"if Statements = No_List\".\n+   --  \"if No (Statements)\" as opposed to \"if Statements = No_List\". Note that\n+   --  an empty list gives False for this test, as opposed to Is_Empty_List\n+   --  which gives True either for No_List or for an empty list.\n \n    function Present (List : List_Id) return Boolean;\n    pragma Inline (Present);"}, {"sha": "c52435b31a5be88e77aaeab3d34502511e51b4f1", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=a0367a97c5b4c714b43066ea44c66333f0526056", "patch": "@@ -996,6 +996,13 @@ package Opt is\n    --  GNATMAKE\n    --  Set to True if minimal recompilation mode requested\n \n+   Modify_Tree_For_C : Boolean := False;\n+   --  GNAT\n+   --  If this switch is set True (currently it is set only by -gnatd.V), then\n+   --  certain meaning-preserving transformations are applied to the tree to\n+   --  make it easier to interface with back ends that implement C semantics.\n+   --  There is a section in Sinfo which describes the transformations made.\n+\n    Multiple_Unit_Index : Int := 0;\n    --  GNAT\n    --  This is set non-zero if the current unit is being compiled in multiple"}, {"sha": "901c922fd91581bac29e7789a8cbb574e3550d81", "filename": "gcc/ada/output.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Foutput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Foutput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.adb?ref=a0367a97c5b4c714b43066ea44c66333f0526056", "patch": "@@ -181,6 +181,19 @@ package body Output is\n         (Cur_Indentation + Indentation_Amount) mod Indentation_Limit;\n    end Indent;\n \n+   ---------------\n+   -- Last_Char --\n+   ---------------\n+\n+   function Last_Char return Character is\n+   begin\n+      if Next_Col /= 1 then\n+         return Buffer (Next_Col - 1);\n+      else\n+         return ASCII.NUL;\n+      end if;\n+   end Last_Char;\n+\n    -------------\n    -- Outdent --\n    -------------"}, {"sha": "715a26a285e280868282dce0ade06440124c9adb", "filename": "gcc/ada/output.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Foutput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Foutput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.ads?ref=a0367a97c5b4c714b43066ea44c66333f0526056", "patch": "@@ -137,6 +137,10 @@ package Output is\n    procedure Write_Line (S : String);\n    --  Equivalent to Write_Str (S) followed by Write_Eol;\n \n+   function Last_Char return Character;\n+   --  Returns last character written on the current line, or null if the\n+   --  current line is (so far) empty.\n+\n    function Column return Pos;\n    pragma Inline (Column);\n    --  Returns the number of the column about to be written (e.g. a value of 1"}, {"sha": "43bc57888b030f734f4e6ed813523653bf061a92", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 33, "deletions": 17, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=a0367a97c5b4c714b43066ea44c66333f0526056", "patch": "@@ -148,7 +148,7 @@ package body Prj.Env is\n       if Recursive then\n \n          --  If it is the first time we call this function for this project,\n-         --  compute the source path\n+         --  compute the source path.\n \n          if Project.Ada_Include_Path = null then\n             Buffer := new String (1 .. Buffer_Initial);\n@@ -292,7 +292,6 @@ package body Prj.Env is\n       for Index in\n         Object_Path_Table.First .. Object_Path_Table.Last (Object_Paths)\n       loop\n-\n          --  If it is, remove it, and add it as the last one\n \n          if Object_Paths.Table (Index) = Object_Dir then\n@@ -323,9 +322,10 @@ package body Prj.Env is\n       Buffer      : in out String_Access;\n       Buffer_Last : in out Natural)\n    is\n-      Current    : String_List_Id := Source_Dirs;\n+      Current    : String_List_Id;\n       Source_Dir : String_Element;\n    begin\n+      Current := Source_Dirs;\n       while Current /= Nil_String loop\n          Source_Dir := Shared.String_Elements.Table (Current);\n          Add_To_Path (Get_Name_String (Source_Dir.Display_Value),\n@@ -359,11 +359,10 @@ package body Prj.Env is\n             --  Note: the order of the conditions below is important, since\n             --  it ensures a minimal number of string comparisons.\n \n-            if (J = Path'First\n-                or else Path (J - 1) = Path_Separator)\n+            if (J = Path'First or else Path (J - 1) = Path_Separator)\n               and then\n                 (J + Dir'Length > Path'Last\n-                 or else Path (J + Dir'Length) = Path_Separator)\n+                  or else Path (J + Dir'Length) = Path_Separator)\n               and then Dir = Path (J .. J + Dir'Length - 1)\n             then\n                return True;\n@@ -426,13 +425,14 @@ package body Prj.Env is\n       Shared       : Shared_Project_Tree_Data_Access;\n       Source_Paths : in out Source_Path_Table.Instance)\n    is\n-      Current    : String_List_Id := Source_Dirs;\n+      Current    : String_List_Id;\n       Source_Dir : String_Element;\n       Add_It     : Boolean;\n \n    begin\n       --  Add each source directory\n \n+      Current := Source_Dirs;\n       while Current /= Nil_String loop\n          Source_Dir := Shared.String_Elements.Table (Current);\n          Add_It := True;\n@@ -1088,15 +1088,17 @@ package body Prj.Env is\n \n          Unit := Units_Htable.Get_First (In_Tree.Units_HT);\n          while Unit /= null loop\n+\n             --  Check for body\n \n             if not Main_Project_Only\n               or else\n                 (Unit.File_Names (Impl) /= null\n-                 and then Unit.File_Names (Impl).Project = The_Project)\n+                  and then Unit.File_Names (Impl).Project = The_Project)\n             then\n                declare\n                   Current_Name : File_Name_Type;\n+\n                begin\n                   --  Case of a body present\n \n@@ -1365,8 +1367,8 @@ package body Prj.Env is\n                 (Namet.Get_Name_String\n                    (Unit.File_Names (Spec).File) = Original_Name\n                  or else (Unit.File_Names (Spec).Path /= No_Path_Information\n-                          and then\n-                            Namet.Get_Name_String\n+                           and then\n+                             Namet.Get_Name_String\n                                (Unit.File_Names (Spec).Path.Name) =\n                                                            Original_Name))\n             then\n@@ -1481,7 +1483,6 @@ package body Prj.Env is\n       Write_Line (\"List of Sources:\");\n \n       Unit := Units_Htable.Get_First (In_Tree.Units_HT);\n-\n       while Unit /= No_Unit_Index loop\n          Write_Str  (\"   \");\n          Write_Line (Namet.Get_Name_String (Unit.Name));\n@@ -2121,6 +2122,21 @@ package body Prj.Env is\n \n                   Add_Str_To_Name_Buffer\n                     (\"lib\" & Directory_Separator & \"gnat\");\n+\n+                  --  $prefix/$target/share/gpr\n+\n+                  Add_Str_To_Name_Buffer\n+                    (Path_Separator & Prefix.all & Target_Name);\n+\n+                  --  Note: Target_Name has a trailing / when it comes from\n+                  --  Sdefault.\n+\n+                  if Name_Buffer (Name_Len) /= '/' then\n+                     Add_Char_To_Name_Buffer (Directory_Separator);\n+                  end if;\n+\n+                  Add_Str_To_Name_Buffer\n+                    (\"share\" & Directory_Separator & \"gpr\");\n                end if;\n \n                --  $prefix/share/gpr\n@@ -2172,8 +2188,8 @@ package body Prj.Env is\n      (Self : Project_Search_Path;\n       Path : String) return String_Access\n    is\n-      First  : Natural;\n-      Last   : Natural;\n+      First : Natural;\n+      Last  : Natural;\n \n    begin\n       if Current_Verbosity = High then\n@@ -2328,15 +2344,15 @@ package body Prj.Env is\n             Result :=\n               Try_Path_Name\n                 (Self,\n-                 Directory & Directory_Separator &\n-                   File & Project_File_Extension);\n+                 Directory & Directory_Separator\n+                 & File & Project_File_Extension);\n          end if;\n \n          --  Then we try <directory>/<file_name>\n \n          if Result = null then\n-            Result := Try_Path_Name\n-                       (Self, Directory & Directory_Separator & File);\n+            Result :=\n+              Try_Path_Name (Self, Directory & Directory_Separator & File);\n          end if;\n       end if;\n "}, {"sha": "d369ae2494e588dee9499b04a9fb61e13cbc4ec3", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=a0367a97c5b4c714b43066ea44c66333f0526056", "patch": "@@ -530,7 +530,11 @@ package body Prj.Util is\n       --  Now handle the bodies and separates if needed\n \n       if Deps.Length /= 0 then\n-         Iter := For_Each_Source (Tree, Project);\n+         if Project.Qualifier = Aggregate_Library then\n+            Iter := For_Each_Source (Tree);\n+         else\n+            Iter := For_Each_Source (Tree, Project);\n+         end if;\n \n          loop\n             Sid := Element (Iter);"}, {"sha": "dcc108de9898f62ffa0f84023a37b8168915544f", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0367a97c5b4c714b43066ea44c66333f0526056/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=a0367a97c5b4c714b43066ea44c66333f0526056", "patch": "@@ -1254,6 +1254,9 @@ the search stops:\n   @item @file{<prefix>/<target>/lib/gnat}\n   (for @command{gnatmake} in all cases, and for @command{gprbuild} if option\n   @option{--target} is specified)\n+  @item @file{<prefix>/<target>/share/gpr}\n+  (for @command{gnatmake} in all cases, and for @command{gprbuild} if option\n+  @option{--target} is specified)\n   @item @file{<prefix>/share/gpr/}\n   (for @command{gnatmake} and @command{gprbuild})\n   @item @file{<prefix>/lib/gnat/}"}]}