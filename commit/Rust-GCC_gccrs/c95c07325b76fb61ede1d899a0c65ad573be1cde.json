{"sha": "c95c07325b76fb61ede1d899a0c65ad573be1cde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk1YzA3MzI1Yjc2ZmI2MWVkZTFkODk5YTBjNjVhZDU3M2JlMWNkZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-14T21:23:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-14T21:23:53Z"}, "message": "(reload_as_needed): Clear spill_reg_store at start.\n\n(emit_reload_insns): Omit erroneous predicate of reload\ndeletion -- reload_spill_index is not indexed by regno.\n\nFrom-SVN: r7454", "tree": {"sha": "908ee83849c5e6618a587cd47fc75789ca1c4743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/908ee83849c5e6618a587cd47fc75789ca1c4743"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c95c07325b76fb61ede1d899a0c65ad573be1cde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c95c07325b76fb61ede1d899a0c65ad573be1cde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c95c07325b76fb61ede1d899a0c65ad573be1cde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c95c07325b76fb61ede1d899a0c65ad573be1cde/comments", "author": null, "committer": null, "parents": [{"sha": "86bb0d5f7b6c138d95cd0c470a69e7249caa9552", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86bb0d5f7b6c138d95cd0c470a69e7249caa9552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86bb0d5f7b6c138d95cd0c470a69e7249caa9552"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "10afe98bb564464fcc1bf132270cdf7570bb89ee", "filename": "gcc/reload1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c95c07325b76fb61ede1d899a0c65ad573be1cde/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c95c07325b76fb61ede1d899a0c65ad573be1cde/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=c95c07325b76fb61ede1d899a0c65ad573be1cde", "patch": "@@ -3618,6 +3618,7 @@ reload_as_needed (first, live_known)\n   rtx after_call = 0;\n \n   bzero (spill_reg_rtx, sizeof spill_reg_rtx);\n+  bzero (spill_reg_store, sizeof spill_reg_store);\n   reg_last_reload_reg = (rtx *) alloca (max_regno * sizeof (rtx));\n   bzero (reg_last_reload_reg, max_regno * sizeof (rtx));\n   reg_has_output_reload = (char *) alloca (max_regno);\n@@ -5630,12 +5631,11 @@ emit_reload_insns (insn)\n \t  if (optimize && GET_CODE (oldequiv) == REG\n \t      && REGNO (oldequiv) < FIRST_PSEUDO_REGISTER\n \t      && spill_reg_order[REGNO (oldequiv)] >= 0\n-\t      && spill_reg_store[reload_spill_index[REGNO (oldequiv)]] != 0\n+\t      && spill_reg_store[spill_reg_order[REGNO (oldequiv)]] != 0\n \t      && find_reg_note (insn, REG_DEAD, reload_in[j])\n \t      /* This is unsafe if operand occurs more than once in current\n \t\t insn.  Perhaps some occurrences weren't reloaded.  */\n-\t      && count_occurrences (PATTERN (insn), reload_in[j]) == 1\n-\t      && spill_reg_store[spill_reg_order[REGNO (oldequiv)]] != 0)\n+\t      && count_occurrences (PATTERN (insn), reload_in[j]) == 1)\n \t    delete_output_reload\n \t      (insn, j, spill_reg_store[spill_reg_order[REGNO (oldequiv)]]);\n "}]}