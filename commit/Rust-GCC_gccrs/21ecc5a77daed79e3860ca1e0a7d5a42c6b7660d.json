{"sha": "21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFlY2M1YTc3ZGFlZDc5ZTM4NjBjYTFlMGE3ZDVhNDJjNmI3NjYwZA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2003-08-03T22:14:47Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2003-08-03T22:14:47Z"}, "message": "opts.c (decode_options): Do language-specific initialization for the global diagnostic context.\n\n\t* opts.c (decode_options): Do language-specific initialization for\n\tthe global diagnostic context.\n\t* langhooks-def.h (lhd_initialize_diagnostics): Declare.\n\t(LANG_HOOKS_INITIALIZE_DIAGNOSTITCS): New macro.\n\t(LANG_HOOKS_INITIALIZER): Adjust.\n\t* langhooks.h (struct lang_hooks): Add new field\n\tinitialize_diagnostics.\n\t* langhooks.c (lhd_initialize_diagnostics): Define.\n\nFrom-SVN: r70129", "tree": {"sha": "29df02f871698c716e4d5eefae48e0e4cf22f599", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29df02f871698c716e4d5eefae48e0e4cf22f599"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f7ace48dd79e309d9067717828a44544c8aa4e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7ace48dd79e309d9067717828a44544c8aa4e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f7ace48dd79e309d9067717828a44544c8aa4e4"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "06492d6c019a2c163b7e7f951610bbd0fd31bc75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d", "patch": "@@ -1,3 +1,24 @@\n+2003-08-03  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* opts.c (decode_options): Do language-specific initialization for\n+\tthe global diagnostic context.\n+\t* langhooks-def.h (lhd_initialize_diagnostics): Declare.\n+\t(LANG_HOOKS_INITIALIZE_DIAGNOSTITCS): New macro.\n+\t(LANG_HOOKS_INITIALIZER): Adjust.\n+\t* langhooks.h (struct lang_hooks): Add new field \n+\tinitialize_diagnostics. \n+\t* langhooks.c (lhd_initialize_diagnostics): Define.\n+\n+2003-08-03  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* pretty-print.h:   Adjust macro definitions.\n+\t* pretty-print.c (pp_newline): Rename to pp_base_newline.\n+\t(pp_character): Rename to pp_base_character.\n+\t(pp_string): Rename to pp_base_string.\n+\t* c-pretty-print.c (pp_buffer): Move to pretty-print.h\n+\t(pp_newline):  Likewise.  Adjust.\n+\t(pp_c_char): Adjust.\n+\n 2003-08-03  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.def (BUILT_IN_ABS, BUILT_IN_IMAXABS, BUILT_IN_LABS,"}, {"sha": "47e8b7209af6372dc1b9d654f7c0386d5da07258", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d", "patch": "@@ -79,6 +79,7 @@ extern int lhd_tree_inlining_anon_aggr_type_p (tree);\n extern int lhd_tree_inlining_start_inlining (tree);\n extern void lhd_tree_inlining_end_inlining (tree);\n extern tree lhd_tree_inlining_convert_parm_for_inlining (tree, tree, tree);\n+extern void lhd_initialize_diagnostics (struct diagnostic_context *);\n \n #define LANG_HOOKS_NAME\t\t\t\"GNU unknown\"\n #define LANG_HOOKS_IDENTIFIER_SIZE\tsizeof (struct lang_identifier)\n@@ -87,6 +88,7 @@ extern tree lhd_tree_inlining_convert_parm_for_inlining (tree, tree, tree);\n #define LANG_HOOKS_PARSE_FILE\t\tlhd_do_nothing_i\n #define LANG_HOOKS_CLEAR_BINDING_STACK\tlhd_clear_binding_stack\n #define LANG_HOOKS_INIT_OPTIONS\t\thook_uint_uint_constcharptrptr_0\n+#define LANG_HOOKS_INITIALIZE_DIAGNOSTITCS lhd_initialize_diagnostics\n #define LANG_HOOKS_HANDLE_OPTION\thook_int_size_t_constcharptr_int_0\n #define LANG_HOOKS_MISSING_ARGUMENT\thook_bool_constcharptr_size_t_false\n #define LANG_HOOKS_POST_OPTIONS\t\tlhd_post_options\n@@ -245,6 +247,7 @@ extern int lhd_tree_dump_type_quals (tree);\n   LANG_HOOKS_IDENTIFIER_SIZE, \\\n   LANG_HOOKS_TREE_SIZE, \\\n   LANG_HOOKS_INIT_OPTIONS, \\\n+  LANG_HOOKS_INITIALIZE_DIAGNOSTITCS, \\\n   LANG_HOOKS_HANDLE_OPTION, \\\n   LANG_HOOKS_MISSING_ARGUMENT, \\\n   LANG_HOOKS_POST_OPTIONS, \\"}, {"sha": "b4c160f25285b4e6c989f311cf66b51800d26392", "filename": "gcc/langhooks.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d", "patch": "@@ -479,4 +479,10 @@ write_global_declarations (void)\n   free (vec);\n }\n \n+/* Called to perform language-specific initialization of CTX.  */\n+void\n+lhd_initialize_diagnostics (struct diagnostic_context *ctx ATTRIBUTE_UNUSED)\n+{\n+}\n+\n #include \"gt-langhooks.h\""}, {"sha": "fbdaadc61cad899bb41494dc1f5adf8f532b41f0", "filename": "gcc/langhooks.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d", "patch": "@@ -202,6 +202,10 @@ struct lang_hooks\n      the language mask to filter the switch array with.  */\n   unsigned int (*init_options) (unsigned int argc, const char **argv);\n \n+  /* Callback used to perform language-specific initialization for the\n+     global diagnostic context structure.  */\n+  void (*initialize_diagnostics) (struct diagnostic_context *);\n+\n   /* Handle the switch CODE, which has real type enum opt_code from\n      options.h.  If the switch takes an argument, it is passed in ARG\n      which points to permanent storage.  The handler is responsible for"}, {"sha": "31041932723541aefc9c3011024c6d57eccf93de", "filename": "gcc/opts.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=21ecc5a77daed79e3860ca1e0a7d5a42c6b7660d", "patch": "@@ -460,6 +460,8 @@ decode_options (unsigned int argc, const char **argv)\n   /* Perform language-specific options initialization.  */\n   lang_mask = (*lang_hooks.init_options) (argc, argv);\n \n+  lang_hooks.initialize_diagnostics (global_dc);\n+\n   /* Scan to see what optimization level has been specified.  That will\n      determine the default value of many flags.  */\n   for (i = 1; i < argc; i++)"}]}