{"sha": "13ef00fa08169669d0d995c80962f1fb43138f0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNlZjAwZmEwODE2OTY2OWQwZDk5NWM4MDk2MmYxZmI0MzEzOGYwZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-10-10T17:52:40Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-10-10T17:52:40Z"}, "message": "x86-tune.def: Enable X86_TUNE_SSE_TYPELESS_STORES for generic...\n\n\n\t* config/i386/x86-tune.def: Enable X86_TUNE_SSE_TYPELESS_STORES\n\tfor generic, enable X86_TUNE_SSE_LOAD0_BY_PXOR for Bulldozer,\n\tBobcat and generic.\n\n\t* gcc.target/i386/avx256-unaligned-store-3.c: Update template for\n\ttuning change.\n\t* gcc.target/i386/avx256-unaligned-store-1.c: Likewise.\n\t* gcc.target/i386/pr49168-1.c: Likewise.\n\t* gcc.target/i386/pr49002-2.c: Likewise.\n\nFrom-SVN: r203387", "tree": {"sha": "21305e9ed712bf24b4e14fb320638c8bfdfc4c94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21305e9ed712bf24b4e14fb320638c8bfdfc4c94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13ef00fa08169669d0d995c80962f1fb43138f0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ef00fa08169669d0d995c80962f1fb43138f0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13ef00fa08169669d0d995c80962f1fb43138f0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ef00fa08169669d0d995c80962f1fb43138f0f/comments", "author": null, "committer": null, "parents": [{"sha": "a1d5038607b04afa011d77552c0193d2cd8e1251", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d5038607b04afa011d77552c0193d2cd8e1251", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1d5038607b04afa011d77552c0193d2cd8e1251"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "0e3efc369dee9e6282429b9c4d1deed33e20c82f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13ef00fa08169669d0d995c80962f1fb43138f0f", "patch": "@@ -1,3 +1,9 @@\n+2013-10-10  Jan Hubicka  <jh@suse.cz>\n+\n+\t* config/i386/x86-tune.def: Enable X86_TUNE_SSE_TYPELESS_STORES\n+\tfor generic, enable X86_TUNE_SSE_LOAD0_BY_PXOR for Bulldozer,\n+\tBobcat and generic.\n+\n 2013-10-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/58670"}, {"sha": "34484a287491f29ffa0c1b6f27649d82e547a541", "filename": "gcc/config/i386/x86-tune.def", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune.def?ref=13ef00fa08169669d0d995c80962f1fb43138f0f", "patch": "@@ -221,16 +221,14 @@ DEF_TUNE (X86_TUNE_SSE_PACKED_SINGLE_INSN_OPTIMAL, \"sse_packed_single_insn_optim\n    upper part undefined.  */\n DEF_TUNE (X86_TUNE_SSE_SPLIT_REGS, \"sse_split_regs\", m_ATHLON_K8)\n \n-/* X86_TUNE_SSE_TYPELESS_STORES: Always movaps/movups for 128bit stores. \n-   FIXME: Shall we enable it for generic?  */\n+/* X86_TUNE_SSE_TYPELESS_STORES: Always movaps/movups for 128bit stores.   */\n DEF_TUNE (X86_TUNE_SSE_TYPELESS_STORES, \"sse_typeless_stores\",\n-\t  m_AMD_MULTIPLE | m_CORE_ALL)\n+\t  m_AMD_MULTIPLE | m_CORE_ALL | m_GENERIC)\n \n /* X86_TUNE_SSE_LOAD0_BY_PXOR: Always use pxor to load0 as opposed to\n-   xorps/xorpd and other variants.\n-   FIXME: Shall we enable it buldozers and for generic?  */\n+   xorps/xorpd and other variants.  */\n DEF_TUNE (X86_TUNE_SSE_LOAD0_BY_PXOR, \"sse_load0_by_pxor\",\n-\t  m_PPRO | m_P4_NOCONA | m_CORE_ALL)\n+\t  m_PPRO | m_P4_NOCONA | m_CORE_ALL | m_BDVER | m_BTVER | m_GENERIC)\n \n /* X86_TUNE_MEMORY_MISMATCH_STALL: Avoid partial stores that are followed by\n    full sized loads.  */"}, {"sha": "92b24ea8fa89a1ac77a2fab32792cb3185aa8a65", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13ef00fa08169669d0d995c80962f1fb43138f0f", "patch": "@@ -1,3 +1,11 @@\n+2013-10-10  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.target/i386/avx256-unaligned-store-3.c: Update template for\n+\ttuning change.\n+\t* gcc.target/i386/avx256-unaligned-store-1.c: Likewise.\n+\t* gcc.target/i386/pr49168-1.c: Likewise.\n+\t* gcc.target/i386/pr49002-2.c: Likewise.\n+\n 2013-10-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/58670"}, {"sha": "48e2efa13823987d32e6d2e60cbf455568b7f81f", "filename": "gcc/testsuite/gcc.target/i386/avx256-unaligned-store-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-2.c?ref=13ef00fa08169669d0d995c80962f1fb43138f0f", "patch": "@@ -24,5 +24,5 @@ avx_test (void)\n }\n \n /* { dg-final { scan-assembler-not \"avx_storedqu256\" } } */\n-/* { dg-final { scan-assembler \"vmovdqu.*\\\\*movv16qi_internal/3\" } } */\n+/* { dg-final { scan-assembler \"vmovups.*\\\\*movv16qi_internal/3\" } } */\n /* { dg-final { scan-assembler \"vextract.128\" } } */"}, {"sha": "6175d52176406ea278b5c310cb291ba9bb077744", "filename": "gcc/testsuite/gcc.target/i386/avx256-unaligned-store-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-3.c?ref=13ef00fa08169669d0d995c80962f1fb43138f0f", "patch": "@@ -18,5 +18,5 @@ avx_test (void)\n }\n \n /* { dg-final { scan-assembler-not \"avx_storeupd256\" } } */\n-/* { dg-final { scan-assembler \"vmovupd.*\\\\*movv2df_internal/3\" } } */\n+/* { dg-final { scan-assembler \"vmovups.*\\\\*movv2df_internal/3\" } } */\n /* { dg-final { scan-assembler \"vextractf128\" } } */"}, {"sha": "9f21a2d17d959d89508eade0669e8e46191c3c12", "filename": "gcc/testsuite/gcc.target/i386/pr49002-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49002-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49002-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49002-2.c?ref=13ef00fa08169669d0d995c80962f1fb43138f0f", "patch": "@@ -11,4 +11,5 @@ void foo(const __m128d from, __m256d *to)\n \n /* Ensure we store ymm, not xmm.  */\n /* { dg-final { scan-assembler-not \"vmovapd\\[\\t \\]*%xmm\\[0-9\\]\\+,\\[^,\\]*\" } } */\n-/* { dg-final { scan-assembler \"vmovapd\\[\\t \\]*%ymm\\[0-9\\]\\+,\\[^,\\]*\" } } */\n+/* { dg-final { scan-assembler-not \"vmovaps\\[\\t \\]*%xmm\\[0-9\\]\\+,\\[^,\\]*\" } } */\n+/* { dg-final { scan-assembler \"vmovaps\\[\\t \\]*%ymm\\[0-9\\]\\+,\\[^,\\]*\" } } */"}, {"sha": "4ca5e34d9cb27f50f4160ea25303192d0ea67520", "filename": "gcc/testsuite/gcc.target/i386/pr49168-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49168-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ef00fa08169669d0d995c80962f1fb43138f0f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49168-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49168-1.c?ref=13ef00fa08169669d0d995c80962f1fb43138f0f", "patch": "@@ -2,7 +2,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -msse2 -mtune=generic\" } */\n /* { dg-final { scan-assembler-not \"movdqa\\[\\t \\]*%xmm\\[0-9\\]\\+,\\[^,\\]*\" } } */\n-/* { dg-final { scan-assembler \"movdqu\\[\\t \\]*%xmm\\[0-9\\]\\+,\\[^,\\]*\" } } */\n+/* { dg-final { scan-assembler-not \"movaps\\[\\t \\]*%xmm\\[0-9\\]\\+,\\[^,\\]*\" } } */\n+/* { dg-final { scan-assembler \"movups\\[\\t \\]*%xmm\\[0-9\\]\\+,\\[^,\\]*\" } } */\n \n void\n flt128_va (void *mem, __float128 d)"}]}