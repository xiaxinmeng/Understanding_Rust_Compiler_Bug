{"sha": "f75d3e11d3fbc92458b33c06374c3fb1a121bcd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc1ZDNlMTFkM2ZiYzkyNDU4YjMzYzA2Mzc0YzNmYjFhMTIxYmNkNA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-06-03T05:42:25Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-06-03T05:42:25Z"}, "message": "c-opts.c (c_common_handle_option): New, pulled out of c_common_decode_option.\n\n\t* c-opts.c (c_common_handle_option): New, pulled out of\n\tc_common_decode_option.  Substitute uses of argv.\n\t(c_common_decode_option): Broken into two.\n\nFrom-SVN: r67354", "tree": {"sha": "059fbf544b825d5e6c092b83277f2511050c3f6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/059fbf544b825d5e6c092b83277f2511050c3f6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f75d3e11d3fbc92458b33c06374c3fb1a121bcd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f75d3e11d3fbc92458b33c06374c3fb1a121bcd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f75d3e11d3fbc92458b33c06374c3fb1a121bcd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f75d3e11d3fbc92458b33c06374c3fb1a121bcd4/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c68a546c5a7c963ba56cf556a28d5e4ef079f50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c68a546c5a7c963ba56cf556a28d5e4ef079f50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c68a546c5a7c963ba56cf556a28d5e4ef079f50"}], "stats": {"total": 51, "additions": 35, "deletions": 16}, "files": [{"sha": "1b0a883d2aeef6c9cf4d3b0affafdc59235ed11f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f75d3e11d3fbc92458b33c06374c3fb1a121bcd4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f75d3e11d3fbc92458b33c06374c3fb1a121bcd4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f75d3e11d3fbc92458b33c06374c3fb1a121bcd4", "patch": "@@ -1,3 +1,9 @@\n+2003-06-03  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* c-opts.c (c_common_handle_option): New, pulled out of\n+\tc_common_decode_option.  Substitute uses of argv.\n+\t(c_common_decode_option): Broken into two.\n+\n 2003-06-02  Roger Sayle  <roger@eyesopen.com>\n \t    Zack Weinberg  <zack@codesourcery.com>\n "}, {"sha": "1dd59669aa5bf0cc1f821dd670a37a7e7f3157fe", "filename": "gcc/c-opts.c", "status": "modified", "additions": 29, "deletions": 16, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f75d3e11d3fbc92458b33c06374c3fb1a121bcd4/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f75d3e11d3fbc92458b33c06374c3fb1a121bcd4/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=f75d3e11d3fbc92458b33c06374c3fb1a121bcd4", "patch": "@@ -114,6 +114,7 @@ static void add_prefixed_path PARAMS ((const char *, size_t));\n static void push_command_line_include PARAMS ((void));\n static void cb_file_change PARAMS ((cpp_reader *, const struct line_map *));\n static void finish_options PARAMS ((void));\n+static int c_common_handle_option (enum opt_code, const char *arg, int on);\n \n #ifndef STDC_0_IN_SYSTEM_HEADERS\n #define STDC_0_IN_SYSTEM_HEADERS 0\n@@ -356,9 +357,8 @@ c_common_decode_option (argc, argv)\n   const char *opt, *arg = 0;\n   char *dup = 0;\n   bool on = true;\n-  int result = 0, lang_flag;\n+  int result = 0, temp, lang_flag;\n   const struct cl_option *option;\n-  enum opt_code code;\n \n   opt = argv[0];\n \n@@ -446,7 +446,26 @@ c_common_decode_option (argc, argv)\n       goto done;\n     }\n \n-  code = opt_index;\n+  temp = c_common_handle_option (opt_index, arg, on);\n+  if (temp <= 0)\n+    result = temp;\n+\n+ done:\n+  if (dup)\n+    free (dup);\n+  return result;\n+}\n+\n+/* Handle switch OPT_INDEX with argument ARG.  ON is true, unless no-\n+   form of an -f or -W option was given.  Returns 0 if the switch was\n+   invalid, a negative number to prevent language-independent\n+   processing in toplev.c (a hack necessary for the short-term).  */\n+static int\n+c_common_handle_option (enum opt_code code, const char *arg, int on)\n+{\n+  const struct cl_option *option = &cl_options[code];\n+  int result = 1;\n+\n   switch (code)\n     {\n     case N_OPTS: /* Shut GCC up.  */\n@@ -873,11 +892,11 @@ c_common_decode_option (argc, argv)\n     case OPT_fthis_is_variable:\n     case OPT_fvtable_thunks:\n     case OPT_fxref:\n-      warning (\"switch \\\"%s\\\" is no longer supported\", argv[0]);\n+      warning (\"switch \\\"%s\\\" is no longer supported\", option->opt_text);\n       break;\n \n     case OPT_fabi_version_:\n-      flag_abi_version = read_integral_parameter (arg, argv[0], 1);\n+      flag_abi_version = read_integral_parameter (arg, option->opt_text, 1);\n       break;\n \n     case OPT_faccess_control:\n@@ -889,7 +908,7 @@ c_common_decode_option (argc, argv)\n       if (on)\n \tflag_external_templates = true;\n     cp_deprecated:\n-      warning (\"switch \\\"%s\\\" is deprecated, please see documentation for details\", argv[0]);\n+      warning (\"switch \\\"%s\\\" is deprecated, please see documentation for details\", option->opt_text);\n       break;\n \n     case OPT_fasm:\n@@ -912,7 +931,7 @@ c_common_decode_option (argc, argv)\n       break;\n \n     case OPT_fdump_:\n-      if (!dump_switch_p (argv[0] + strlen (\"-f\")))\n+      if (!dump_switch_p (option->opt_text + strlen (\"f\")))\n \tresult = 0;\n       break;\n \n@@ -1009,7 +1028,7 @@ c_common_decode_option (argc, argv)\n       break;\n \n     case OPT_fhandle_exceptions:\n-      warning (\"-fhandle-exceptions has been renamed to -fexceptions (and is now on by default)\");\n+      warning (\"-fhandle-exceptions has been renamed -fexceptions (and is now on by default)\");\n       flag_exceptions = on;\n       break;\n \n@@ -1086,7 +1105,7 @@ c_common_decode_option (argc, argv)\n       break;\n \n     case OPT_ftemplate_depth_:\n-      max_tinst_depth = read_integral_parameter (arg, argv[0], 0);\n+      max_tinst_depth = read_integral_parameter (arg, option->opt_text, 0);\n       break;\n \n     case OPT_fvtable_gc:\n@@ -1155,10 +1174,7 @@ c_common_decode_option (argc, argv)\n       if (!out_fname)\n \tout_fname = arg;\n       else\n-\t{\n-\t  error (\"output filename specified twice\");\n-\t  result = argc;\n-\t}\n+\terror (\"output filename specified twice\");\n       break;\n \n       /* We need to handle the -pedantic switches here, rather than in\n@@ -1228,9 +1244,6 @@ c_common_decode_option (argc, argv)\n       break;\n     }\n \n- done:\n-  if (dup)\n-    free (dup);\n   return result;\n }\n "}]}