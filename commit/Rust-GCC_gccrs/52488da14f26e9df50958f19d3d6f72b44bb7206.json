{"sha": "52488da14f26e9df50958f19d3d6f72b44bb7206", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI0ODhkYTE0ZjI2ZTlkZjUwOTU4ZjE5ZDNkNmY3MmI0NGJiNzIwNg==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "2001-12-05T05:47:36Z"}, "committer": {"name": "John Wehle", "email": "wehle@gcc.gnu.org", "date": "2001-12-05T05:47:36Z"}, "message": "emit-rtl.c (set_unique_reg_note): Don't set a REG_EQUAL or REG_EQUIV note if multiple sets are present.\n\n\t* emit-rtl.c (set_unique_reg_note): Don't set\n\ta REG_EQUAL or REG_EQUIV note if multiple sets\n\tare present.\n\nFrom-SVN: r47657", "tree": {"sha": "ab8e7d78c735260db81c354ad6ada82224f8c855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab8e7d78c735260db81c354ad6ada82224f8c855"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52488da14f26e9df50958f19d3d6f72b44bb7206", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52488da14f26e9df50958f19d3d6f72b44bb7206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52488da14f26e9df50958f19d3d6f72b44bb7206", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52488da14f26e9df50958f19d3d6f72b44bb7206/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32a6f30e69f5044b5718c0c30b3a86eb94a2e8ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32a6f30e69f5044b5718c0c30b3a86eb94a2e8ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32a6f30e69f5044b5718c0c30b3a86eb94a2e8ec"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "1eb92922f7049e260961c92cdbbe09e55b3afb96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52488da14f26e9df50958f19d3d6f72b44bb7206/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52488da14f26e9df50958f19d3d6f72b44bb7206/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52488da14f26e9df50958f19d3d6f72b44bb7206", "patch": "@@ -1,3 +1,9 @@\n+Wed Dec  5 00:42:16 EST 2001  John Wehle  (john@feith.com)\n+\n+\t* emit-rtl.c (set_unique_reg_note): Don't set\n+\ta REG_EQUAL or REG_EQUIV note if multiple sets\n+\tare present.\n+\n 2001-12-04  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* cfgrtl.c (verify_flow_info): Allow jump table data in fallthru if"}, {"sha": "6a30769cecb81ff24f6f6dc993f56a88c9968747", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52488da14f26e9df50958f19d3d6f72b44bb7206/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52488da14f26e9df50958f19d3d6f72b44bb7206/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=52488da14f26e9df50958f19d3d6f72b44bb7206", "patch": "@@ -4068,11 +4068,30 @@ set_unique_reg_note (insn, kind, datum)\n {\n   rtx note = find_reg_note (insn, kind, NULL_RTX);\n \n-  /* Don't add ASM_OPERAND REG_EQUAL/REG_EQUIV notes.\n-     It serves no useful purpose and breaks eliminate_regs.  */\n-  if ((kind == REG_EQUAL || kind == REG_EQUIV)\n-      && GET_CODE (datum) == ASM_OPERANDS)\n-    return NULL_RTX;\n+  switch (kind)\n+    {\n+    case REG_EQUAL:\n+    case REG_EQUIV:\n+      /* Don't add REG_EQUAL/REG_EQUIV notes if the insn\n+\t has multiple sets (some callers assume single_set\n+\t means the insn only has one set, when in fact it\n+\t means the insn only has one * useful * set).  */\n+      if (GET_CODE (PATTERN (insn)) == PARALLEL && multiple_sets (insn))\n+\t{\n+\t  if (note)\n+\t    abort ();\n+\t  return NULL_RTX;\n+\t}\n+\n+      /* Don't add ASM_OPERAND REG_EQUAL/REG_EQUIV notes.\n+\t It serves no useful purpose and breaks eliminate_regs.  */\n+      if (GET_CODE (datum) == ASM_OPERANDS)\n+\treturn NULL_RTX;\n+      break;\n+\n+    default:\n+      break;\n+    }\n \n   if (note)\n     {"}]}