{"sha": "cded791923589322b993c18c19179d601943df87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RlZDc5MTkyMzU4OTMyMmI5OTNjMThjMTkxNzlkNjAxOTQzZGY4Nw==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2015-11-20T14:50:35Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2015-11-20T14:50:35Z"}, "message": "[multiple changes]\n\n2015-11-20  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/68237\n\t* decl.c (gfc_match_submod_proc): Test the interface symbol\n\tbefore accessing its attributes.\n\n2015-11-20  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/66762\n\t(gfc_get_symbol_decl): Test for attr.used_in_submodule as well\n\tas attr.use_assoc (twice).\n\t(gfc_create_module_variable): Ditto.\n\n2015-11-20  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/68237\n\t* gfortran.dg/submodule_12.f90: New test\n\n\tPR fortran/66762\n\t* gfortran.dg/submodule_6.f90: Add compile option -flto.\n\nFrom-SVN: r230661", "tree": {"sha": "f8729d6392d23ecf7ed26cc71ed090142cf675a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8729d6392d23ecf7ed26cc71ed090142cf675a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cded791923589322b993c18c19179d601943df87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cded791923589322b993c18c19179d601943df87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cded791923589322b993c18c19179d601943df87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cded791923589322b993c18c19179d601943df87/comments", "author": null, "committer": null, "parents": [{"sha": "3be962317494f61771391c828558a240e3f37e19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be962317494f61771391c828558a240e3f37e19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3be962317494f61771391c828558a240e3f37e19"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "1c38f958ba043fee3dd8e9f42f4ba02cbca282f6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded791923589322b993c18c19179d601943df87/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded791923589322b993c18c19179d601943df87/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cded791923589322b993c18c19179d601943df87", "patch": "@@ -1,3 +1,16 @@\n+2015-11-20  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/68237\n+\t* decl.c (gfc_match_submod_proc): Test the interface symbol\n+\tbefore accessing its attributes.\n+\n+2015-11-20  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/66762\n+\t(gfc_get_symbol_decl): Test for attr.used_in_submodule as well\n+\tas attr.use_assoc (twice).\n+\t(gfc_create_module_variable): Ditto.\n+\n 2015-11-18  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/59910\n@@ -7,7 +20,7 @@\n 2015-11-18  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/43996\n-\t* simplify.c (gfc_simplify_spread): Issue error for too large array \n+\t* simplify.c (gfc_simplify_spread): Issue error for too large array\n \tconstructor in a PARAMETER statement.\n \n 2015-11-17  Steven G. Kargl  <kargl@gcc.gnu.org>"}, {"sha": "c4ce18b9ad9d3fd68ce04cecaf5ff8bbf1d4cdcc", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded791923589322b993c18c19179d601943df87/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded791923589322b993c18c19179d601943df87/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=cded791923589322b993c18c19179d601943df87", "patch": "@@ -7666,7 +7666,7 @@ gfc_match_submod_proc (void)\n \n   /* Make sure that the result field is appropriately filled, even though\n      the result symbol will be replaced later on.  */\n-  if (sym->ts.interface->attr.function)\n+  if (sym->ts.interface && sym->ts.interface->attr.function)\n     {\n       if (sym->ts.interface->result\n \t  && sym->ts.interface->result != sym->ts.interface)"}, {"sha": "0e5eecc70e4ca87aeb99ff4f9c5f948be8da2016", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded791923589322b993c18c19179d601943df87/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded791923589322b993c18c19179d601943df87/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=cded791923589322b993c18c19179d601943df87", "patch": "@@ -1497,7 +1497,7 @@ gfc_get_symbol_decl (gfc_symbol * sym)\n      declaration.  */\n   if ((sym->attr.flavor == FL_VARIABLE\n        || sym->attr.flavor == FL_PARAMETER)\n-      && sym->attr.use_assoc\n+      && (sym->attr.use_assoc || sym->attr.used_in_submodule)\n       && !intrinsic_array_parameter\n       && sym->module\n       && gfc_get_module_backend_decl (sym))\n@@ -4499,7 +4499,7 @@ gfc_create_module_variable (gfc_symbol * sym)\n       decl = sym->backend_decl;\n       gcc_assert (sym->ns->proc_name->attr.flavor == FL_MODULE);\n \n-      if (!sym->attr.use_assoc)\n+      if (!sym->attr.use_assoc && !sym->attr.used_in_submodule)\n \t{\n \t  gcc_assert (TYPE_CONTEXT (decl) == NULL_TREE\n \t\t      || TYPE_CONTEXT (decl) == sym->ns->proc_name->backend_decl);\n@@ -4531,7 +4531,8 @@ gfc_create_module_variable (gfc_symbol * sym)\n \n   /* Don't generate variables from other modules. Variables from\n      COMMONs and Cray pointees will already have been generated.  */\n-  if (sym->attr.use_assoc || sym->attr.in_common || sym->attr.cray_pointee)\n+  if (sym->attr.use_assoc || sym->attr.used_in_submodule\n+      || sym->attr.in_common || sym->attr.cray_pointee)\n     return;\n \n   /* Equivalenced variables arrive here after creation.  */"}, {"sha": "b6810c8fd786dd81d09db5fdcce00d5db8718962", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded791923589322b993c18c19179d601943df87/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded791923589322b993c18c19179d601943df87/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cded791923589322b993c18c19179d601943df87", "patch": "@@ -1,3 +1,11 @@\n+2015-11-20  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/68237\n+\t* gfortran.dg/submodule_12.f90: New test\n+\n+\tPR fortran/66762\n+\t* gfortran.dg/submodule_6.f90: Add compile option -flto.\n+\n 2015-11-20  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* lib/target-supports.exp"}, {"sha": "6fba4bf645e5e5ad974f975794bc3444316beefa", "filename": "gcc/testsuite/gfortran.dg/submodule_12.f08", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded791923589322b993c18c19179d601943df87/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_12.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded791923589322b993c18c19179d601943df87/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_12.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_12.f08?ref=cded791923589322b993c18c19179d601943df87", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile }\n+!\n+! Test the fix for PR68237 in which 'foo' caused a seg fault rather than an error.\n+!\n+! Contributed by Martin Reinecke  <martin@mpa-garching.mpg.de>\n+!\n+module m1\n+  interface\n+    module subroutine bar\n+    end subroutine\n+  end interface\n+end module m1\n+\n+submodule (m1) m2\n+contains\n+  module procedure foo ! { dg-error \"must be in a generic module interface\" }\n+  end procedure ! { dg-error \"Expecting END SUBMODULE statement\" }\n+end submodule"}, {"sha": "b453b5444b10599f57e8f45ab7b09987cf827c12", "filename": "gcc/testsuite/gfortran.dg/submodule_6.f08", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded791923589322b993c18c19179d601943df87/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_6.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded791923589322b993c18c19179d601943df87/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_6.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_6.f08?ref=cded791923589322b993c18c19179d601943df87", "patch": "@@ -1,6 +1,9 @@\n ! { dg-do run }\n+! { dg-options \"-flto\" }\n !\n-! Checks that the results of module procedures have the correct characteristics.\n+! Checks that the results of module procedures have the correct characteristics\n+! and that submodules use the module version of vtables (PR66762). This latter\n+! requires the -flto compile option.\n !\n ! Contributed by Reinhold Bader  <reinhold.bader@lrz.de>\n !"}]}