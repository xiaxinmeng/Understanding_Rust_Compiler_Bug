{"sha": "6741411b033a7e8eae96d5a85e24e5be214757dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc0MTQxMWIwMzNhN2U4ZWFlOTZkNWE4NWUyNGU1YmUyMTQ3NTdkZA==", "commit": {"author": {"name": "Dimitar Dimitrov", "email": "dimitar@dinux.eu", "date": "2020-07-09T19:00:46Z"}, "committer": {"name": "Dimitar Dimitrov", "email": "dimitar@dinux.eu", "date": "2020-07-21T15:35:44Z"}, "message": "testsuite: Filter unaligned pointer value warning\n\nTargets which pack structures by default will not get warnings about\nunaligned access to structure members.\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/Waddress-of-packed-member-1.c: Filter dg-warning\n\tfor targets who pack by default.\n\t* c-c++-common/Waddress-of-packed-member-2.c: Ditto.\n\t* c-c++-common/pr51628-13.c: Ditto.\n\t* c-c++-common/pr51628-15.c: Ditto.\n\t* c-c++-common/pr51628-16.c: Ditto.\n\t* c-c++-common/pr51628-26.c: Ditto.\n\t* c-c++-common/pr51628-27.c: Ditto.\n\t* c-c++-common/pr51628-28.c: Ditto.\n\t* c-c++-common/pr51628-29.c: Ditto.\n\t* c-c++-common/pr51628-3.c: Ditto.\n\t* c-c++-common/pr51628-30.c: Ditto.\n\t* c-c++-common/pr51628-31.c: Ditto.\n\t* c-c++-common/pr51628-32.c: Ditto.\n\t* c-c++-common/pr51628-33.c: Ditto.\n\t* c-c++-common/pr51628-35.c: Ditto.\n\t* c-c++-common/pr51628-4.c: Ditto.\n\t* c-c++-common/pr51628-5.c: Ditto.\n\t* c-c++-common/pr51628-6.c: Ditto.\n\t* c-c++-common/pr51628-8.c: Ditto.\n\t* c-c++-common/pr51628-9.c: Ditto.\n\t* c-c++-common/pr88664-2.c: Ditto.\n\t* gcc.dg/pr51628-17.c: Ditto.\n\t* gcc.dg/pr51628-19.c: Ditto.\n\t* gcc.dg/pr51628-20.c: Ditto.\n\t* gcc.dg/pr51628-21.c: Ditto.\n\t* gcc.dg/pr51628-22.c: Ditto.\n\t* gcc.dg/pr51628-24.c: Ditto.\n\t* gcc.dg/pr51628-25.c: Ditto.\n\t* gcc.dg/pr51628-34.c: Ditto.\n\t* gcc.dg/pr88928.c: Ditto.\n\nSigned-off-by: Dimitar Dimitrov <dimitar@dinux.eu>", "tree": {"sha": "752d0a1f345905214533a2926bf1cfb5bcb0b3c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/752d0a1f345905214533a2926bf1cfb5bcb0b3c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6741411b033a7e8eae96d5a85e24e5be214757dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6741411b033a7e8eae96d5a85e24e5be214757dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6741411b033a7e8eae96d5a85e24e5be214757dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6741411b033a7e8eae96d5a85e24e5be214757dd/comments", "author": null, "committer": null, "parents": [{"sha": "c850a642e1dfd3a15335d86976015c4a5064b5df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c850a642e1dfd3a15335d86976015c4a5064b5df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c850a642e1dfd3a15335d86976015c4a5064b5df"}], "stats": {"total": 234, "additions": 117, "deletions": 117}, "files": [{"sha": "95a376664da46df463bd3c08948c38585b159ddd", "filename": "gcc/testsuite/c-c++-common/Waddress-of-packed-member-1.c", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWaddress-of-packed-member-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWaddress-of-packed-member-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWaddress-of-packed-member-1.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -52,28 +52,28 @@ void foo (void)\n   f0 = *&__real__ t0.f;        /* { dg-bogus \"may result in an unaligned pointer value\" } */\n   f0 = *&__imag__ t0.f;        /* { dg-bogus \"may result in an unaligned pointer value\" } */\n   i1 = (&t0.c, (int*) 0);      /* { dg-bogus \"may result in an unaligned pointer value\" } */\n-  t2 = (struct t**) t10;     /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  t2 = (struct t**) t100;    /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  t2 = (struct t**) t1;      /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  t2 = (struct t**) bar();   /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  t2 = (struct t**) baz();   /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  t2 = (struct t**) bazz();  /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i1 = &t0.b;                /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i1 = &t1->b;               /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i1 = &t10[0].b;            /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i1 = t0.d;                 /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i1 = t1->d;                /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i1 = t10[0].d;             /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i1 = (int*) &t10[0].e[0];  /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i1 = (int*) t10[0].e;      /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i2 = &t10[0].e[0];         /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i2 = t10[0].e;             /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i2 = &*&t0.c;              /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i2 = &*&*&t0.c;            /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  f1 = &__real__ t0.f;       /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  f1 = &__imag__ t0.f;       /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i1 = (0, (int*) &t0.c);    /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i1 = (int*) (0, &t0.c);    /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i1 = (0, (int*)(0, &t0.c));/* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i1 = (int*)(0, 1, (void*)(2, 3, (int*)(4, 5, &t0.c)));/* { dg-warning \"may result in an unaligned pointer value\" } */\n+  t2 = (struct t**) t10;     /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  t2 = (struct t**) t100;    /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  t2 = (struct t**) t1;      /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  t2 = (struct t**) bar();   /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  t2 = (struct t**) baz();   /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  t2 = (struct t**) bazz();  /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i1 = &t0.b;                /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i1 = &t1->b;               /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i1 = &t10[0].b;            /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i1 = t0.d;                 /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i1 = t1->d;                /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i1 = t10[0].d;             /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i1 = (int*) &t10[0].e[0];  /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i1 = (int*) t10[0].e;      /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i2 = &t10[0].e[0];         /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i2 = t10[0].e;             /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i2 = &*&t0.c;              /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i2 = &*&*&t0.c;            /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  f1 = &__real__ t0.f;       /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  f1 = &__imag__ t0.f;       /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i1 = (0, (int*) &t0.c);    /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i1 = (int*) (0, &t0.c);    /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i1 = (0, (int*)(0, &t0.c));/* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i1 = (int*)(0, 1, (void*)(2, 3, (int*)(4, 5, &t0.c)));/* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n }"}, {"sha": "5dbcb89ffbcda297e9bf6edcc537d31203587a54", "filename": "gcc/testsuite/c-c++-common/Waddress-of-packed-member-2.c", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWaddress-of-packed-member-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWaddress-of-packed-member-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWaddress-of-packed-member-2.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -24,24 +24,24 @@ int *i0;\n \n void foo (void)\n {\n-  i0 = s0.p.a;               /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = t0.p.a;               /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = s0.p.b[0];            /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = t0.p.b[0];            /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = &s0.p.a[0];           /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = &t0.p.a[0];           /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = &s0.p.b[0][0];        /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = &t0.p.b[0][0];        /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = *s0.p.b;              /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = *t0.p.b;              /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = &**s0.p.b;            /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = &**t0.p.b;            /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = **&s0.p.b;            /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = **&t0.p.b;            /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = &*s0.p.a;             /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = &*t0.p.a;             /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = *&s0.p.a;             /* { dg-warning \"may result in an unaligned pointer value\" } */\n-  i0 = *&t0.p.a;             /* { dg-warning \"may result in an unaligned pointer value\" } */\n+  i0 = s0.p.a;               /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = t0.p.a;               /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = s0.p.b[0];            /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = t0.p.b[0];            /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = &s0.p.a[0];           /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = &t0.p.a[0];           /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = &s0.p.b[0][0];        /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = &t0.p.b[0][0];        /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = *s0.p.b;              /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = *t0.p.b;              /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = &**s0.p.b;            /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = &**t0.p.b;            /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = **&s0.p.b;            /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = **&t0.p.b;            /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = &*s0.p.a;             /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = &*t0.p.a;             /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = *&s0.p.a;             /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n+  i0 = *&t0.p.a;             /* { dg-warning \"may result in an unaligned pointer value\" \"\"  { target { ! default_packed } } } */\n   i0 = t0.u.a;                 /* { dg-bogus \"may result in an unaligned pointer value\" } */\n   i0 = t0.u.b[0];              /* { dg-bogus \"may result in an unaligned pointer value\" } */\n   i0 = &t0.u.a[0];             /* { dg-bogus \"may result in an unaligned pointer value\" } */"}, {"sha": "b77e16c408f32f3e55fe6dfd9f954259ff72efdf", "filename": "gcc/testsuite/c-c++-common/pr51628-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-13.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -6,4 +6,4 @@ struct B { int i; };\n struct C { struct B b; } __attribute__ ((packed));\n \n int* h4 (struct C *p) { return &p->b.i; }\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */"}, {"sha": "2ce3406481f787afc065f5b2919ec81332f5a387", "filename": "gcc/testsuite/c-c++-common/pr51628-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-15.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -10,5 +10,5 @@ int*\n f (struct A *p, int *q)\n {\n   return q ? q : &p->i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "b02cd8df1fc7f3b0857680d21efb2d3a12fb12b3", "filename": "gcc/testsuite/c-c++-common/pr51628-16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-16.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -8,6 +8,6 @@ struct B {\n } b;\n \n int *p = (int*)&b.a.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n int *q = (int*)&b.a;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */"}, {"sha": "5ca381dba5d31e3884901c2f785a0361a884deed", "filename": "gcc/testsuite/c-c++-common/pr51628-26.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-26.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -15,19 +15,19 @@ void\n foo1 (void)\n {\n   addr = (i = -1, &p.i);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }\n \n void\n foo2 (void)\n {\n   addr = (i = -1, j = -2, &p.i);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }\n \n void\n foo3 (void)\n {\n   addr = (i = -1, (j = -2, &p.i));\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "016a68f6549d19e3626ee6e5990b5a3252a892b4", "filename": "gcc/testsuite/c-c++-common/pr51628-27.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-27.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -9,4 +9,4 @@ struct C { struct B b; };\n extern struct C *p;\n \n int* g8 (void) { return &p->b.a.i; }\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */"}, {"sha": "80d0c605670a9420f8c4f3521bebbf5a385597ea", "filename": "gcc/testsuite/c-c++-common/pr51628-28.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-28.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -11,21 +11,21 @@ foo3 (struct A *p1, int *q1, int *q2, struct A *p2)\n {\n   return (q1 \n \t  ? &p1->i\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n \t  : (q2 ? &p2->i : q2));\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }\n \n int*\n foo4 (struct A *p1, int **q1, int *q2, int *q3, struct A *p2)\n {\n   return (q1\n \t  ? (*q1 = q2, &p1->i)\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n \t  : (q2\n \t     ? (*q1 = &p1->i,\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n \t\t*q2 = 2, &p2->i)\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n \t     : q2));\n }"}, {"sha": "a3e77455b6bef219256aeeb0ce0821040c5ce6d6", "filename": "gcc/testsuite/c-c++-common/pr51628-29.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-29.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -12,5 +12,5 @@ int*\n g8 (void)\n {\n   return &p->b.a.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "805ce7d05096305c59e3e86192e59c8c96355f7e", "filename": "gcc/testsuite/c-c++-common/pr51628-3.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-3.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -13,23 +13,23 @@ extern int *x;\n extern void bar (int *);\n \n int *addr = &p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n \n int *\n foo (void)\n {\n   struct pair_t arr[2] = { { 1, 10 }, { 2, 20 } };\n   int *p0, *p1;\n   p0 = &arr[0].i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (p0);\n   p1 = &arr[1].i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (p1);\n   bar (&p.i);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   x = &p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   return &p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "b31e73ec036274dde890a2ab499eecfefd97f652", "filename": "gcc/testsuite/c-c++-common/pr51628-30.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-30.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -12,12 +12,12 @@ int*\n foo1 (void)\n {\n   return &__real(p->b.a.i);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }\n \n int*\n foo2 (void)\n {\n   return &__imag(p->b.a.i);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "b2963581dcbd78d4acb1bab61ea82afd77987036", "filename": "gcc/testsuite/c-c++-common/pr51628-31.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-31.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -12,5 +12,5 @@ int *\n foo()\n {\n   return &x.x[1];\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "52f5e543ab734058af50ba25840cf07f4e9a9a97", "filename": "gcc/testsuite/c-c++-common/pr51628-32.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-32.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -16,4 +16,4 @@ struct B\n struct B b;\n \n int *p = &b.ar[1].i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */"}, {"sha": "6b5e277b7c6db08299db46ed34ea9ac451d76fb8", "filename": "gcc/testsuite/c-c++-common/pr51628-33.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-33.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -15,5 +15,5 @@ void\n foo (struct pair_t *p)\n {\n   bar (p ? p->i : (int *) 0);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "fa37d99beb798e65f589e7cb75506f146e440723", "filename": "gcc/testsuite/c-c++-common/pr51628-35.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-35.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -12,12 +12,12 @@ long *\n foo1 (void)\n {\n   return (long *) p;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }\n \n long *\n foo2 (void)\n {\n   return (long *) bar ();\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "ba88f5d0a39f642b87407ced48ea277a4a2220c6", "filename": "gcc/testsuite/c-c++-common/pr51628-4.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-4.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -13,23 +13,23 @@ extern int *x;\n extern void bar (int *);\n \n int *addr = &p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n \n int *\n foo (void)\n {\n   struct pair_t arr[2] = { { 1, 10 }, { 2, 20 } };\n   int *p0, *p1;\n   p0 = &arr[0].i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (p0);\n   p1 = &arr[1].i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (p1);\n   bar (&p.i);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   x = &p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   return &p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "86d01e9f3b3caa3ebb1c4e730e9dfdb727bb67c2", "filename": "gcc/testsuite/c-c++-common/pr51628-5.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-5.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -13,23 +13,23 @@ extern int *x;\n extern void bar (int *);\n \n int *addr = &p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n \n int *\n foo (void)\n {\n   struct pair_t arr[2] = { { 1, 10 }, { 2, 20 } };\n   int *p0, *p1;\n   p0 = &arr[0].i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (p0);\n   p1 = &arr[1].i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (p1);\n   bar (&p.i);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   x = &p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   return &p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "e7be7fbffc52f6c6e3e2a6bba5d70bf13e7857da", "filename": "gcc/testsuite/c-c++-common/pr51628-6.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-6.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -13,23 +13,23 @@ extern int *x;\n extern void bar (int *);\n \n int *addr = &p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n \n int *\n foo (void)\n {\n   struct pair_t arr[2] = { { 1, 10 }, { 2, 20 } };\n   int *p0, *p1;\n   p0 = &arr[0].i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (p0);\n   p1 = &arr[1].i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (p1);\n   bar (&p.i);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   x = &p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   return &p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "dd4f1904c117c47c62ccd57c4a0e8ac6c7ad960f", "filename": "gcc/testsuite/c-c++-common/pr51628-8.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-8.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -13,24 +13,24 @@ extern int *x;\n extern void bar (int *);\n \n int *addr = p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n \n int *\n foo (struct pair_t *p)\n {\n   int *p0, *p1;\n   p0 = p->i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (p0);\n   p1 = &p->i[1];\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (p1);\n   bar (p->i);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (&p->i[2]);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   x = p->i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   return &p->i[3];\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "aa3d5292d435210ebe78657be76890d791b9197b", "filename": "gcc/testsuite/c-c++-common/pr51628-9.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr51628-9.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -13,24 +13,24 @@ extern int *x;\n extern void bar (int *);\n \n int *addr = p.i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n \n int *\n foo (struct pair_t *p)\n {\n   int *p0, *p1;\n   p0 = p->i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (p0);\n   p1 = &p->i[1];\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (p1);\n   bar (p->i);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   bar (&p->i[2]);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   x = p->i;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   return &p->i[3];\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "9a81b75180294527306dd1c341ef7dcbe1ed84a1", "filename": "gcc/testsuite/c-c++-common/pr88664-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr88664-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr88664-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr88664-2.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -11,12 +11,12 @@ void **\n fun1 (struct data *p)\n {\n   return &p->ptr;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }\n \n int *\n fun2 (struct data *p, int *x)\n {\n   return p ? (*x = 1, (int *) &p->ptr) : (int *) 0;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "42dc9d745dcf0420e5b5168e3bce11841b9feef7", "filename": "gcc/testsuite/gcc.dg/pr51628-17.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-17.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -7,4 +7,4 @@ struct A {\n } __attribute__ ((packed));\n \n long* f8 (struct A *p) { return &p->i; }\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */"}, {"sha": "91ff39abc880ca4d6a1ec561ce096b1c831adf59", "filename": "gcc/testsuite/gcc.dg/pr51628-19.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-19.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -16,11 +16,11 @@ bar (int n, int k, void *ptr)\n \n   int *p0, *p1;\n   p0 = p->x;\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   foo (p0);\n   p1 = &p->x[1];\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n   foo (p1);\n   return &p->x[1];\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "2249d85098b7445daa236b150147b66d86649436", "filename": "gcc/testsuite/gcc.dg/pr51628-20.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-20.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -8,4 +8,4 @@ struct C { struct B b; } __attribute__ ((packed));\n extern struct C *p;\n \n long* g8 (void) { return p; }\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */"}, {"sha": "f1adbe640029dfa28398bcb6542d0b70b92fd4be", "filename": "gcc/testsuite/gcc.dg/pr51628-21.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-21.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -8,4 +8,4 @@ struct C { struct B b; } __attribute__ ((packed));\n extern struct C p[];\n \n long* g8 (void) { return p; }\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */"}, {"sha": "25ac36cf0a2b588efda9c928b7cffbda5147ed79", "filename": "gcc/testsuite/gcc.dg/pr51628-22.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-22.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -6,4 +6,4 @@ struct B { int i; };\n struct C { struct B b; } __attribute__ ((packed));\n \n int* g4 (struct C *p) { return &p->b; }\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */"}, {"sha": "1e454a1dc0e8d3b8b432f9240ac7a5841a9e33ea", "filename": "gcc/testsuite/gcc.dg/pr51628-24.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-24.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -7,4 +7,4 @@ struct A {\n } __attribute__ ((packed));\n \n short* f2 (struct A *p) { return &p->i; }\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */"}, {"sha": "f00d9b1bcacf0617d18bfcc60ac2ae26278bf294", "filename": "gcc/testsuite/gcc.dg/pr51628-25.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-25.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -6,4 +6,4 @@ struct B { int i; };\n struct C { struct B b; } __attribute__ ((packed));\n \n long* g8 (struct C *p) { return p; }\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */"}, {"sha": "0f6ae34fb96c89d8945bd7f84b7d0a898dddd338", "filename": "gcc/testsuite/gcc.dg/pr51628-34.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51628-34.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -9,17 +9,17 @@ baz (int x, struct S *p)\n {\n   return (x\n \t  ? &p->a \n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n \t  : &p->b);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }\n \n short *\n qux (int x, struct S *p)\n {\n   return (short *) (x\n \t\t    ?  &p->a\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n \t\t    : &p->b);\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */\n }"}, {"sha": "0b6c1d70f05a35681b17c2951568880db53ade56", "filename": "gcc/testsuite/gcc.dg/pr88928.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88928.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6741411b033a7e8eae96d5a85e24e5be214757dd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88928.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88928.c?ref=6741411b033a7e8eae96d5a85e24e5be214757dd", "patch": "@@ -3,4 +3,4 @@\n struct a { } __attribute__((__packed__));\n void c (struct a **);\n void d (const struct a *b) { c ((struct a **) b); }\n-/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"may result in an unaligned pointer value\" \"\" { target { ! default_packed } } .-1 } */"}]}