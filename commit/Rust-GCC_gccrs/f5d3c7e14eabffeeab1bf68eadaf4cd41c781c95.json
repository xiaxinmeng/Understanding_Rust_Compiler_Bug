{"sha": "f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVkM2M3ZTE0ZWFiZmZlZWFiMWJmNjhlYWRhZjRjZDQxYzc4MWM5NQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2008-08-23T10:42:34Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2008-08-23T10:42:34Z"}, "message": "re PR middle-end/37174 (ICE: in vinfo_for_stmt, at tree-vectorizer.h:546)\n\n\tPR tree-optimization/37174\n\t* tree-vect-analyze.c (vect_get_and_check_slp_defs): Check that the\n\tdef stmt is a part of the loop before accessing its stmt_vec_info.\n\nFrom-SVN: r139508", "tree": {"sha": "0c0c6b8de3e63a75580ba19a61a28e2b88532885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c0c6b8de3e63a75580ba19a61a28e2b88532885"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae96d86a558d34895062072eb64fdce930d385b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae96d86a558d34895062072eb64fdce930d385b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae96d86a558d34895062072eb64fdce930d385b8"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "06707dd562ae93407c7585f7f58d0f6da4e2aee2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95", "patch": "@@ -1,3 +1,9 @@\n+2008-08-23  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/37174\n+\t* tree-vect-analyze.c (vect_get_and_check_slp_defs): Check that the\n+\tdef stmt is a part of the loop before accessing its stmt_vec_info.\n+\n 2008-08-22  Anatoly Sokolov  <aesok@post.ru>\n \n \tPR target/11259"}, {"sha": "38b9dab478992e8169dd7b74f6cf8e2b8ed81d6f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95", "patch": "@@ -1,3 +1,8 @@\n+2008-08-23  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/37174\n+\t* g++.dg/vect/pr37174.cc: New test.\n+\n 2008-08-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/37078"}, {"sha": "d720e4bfe9da6ef705fcce6acb76f86d58123130", "filename": "gcc/testsuite/g++.dg/vect/pr37174.cc", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr37174.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr37174.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr37174.cc?ref=f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+\n+int* getFoo();\n+struct Bar {\n+        Bar();\n+        int* foo1;\n+        int* foo2;\n+        int* table[4][4][4];\n+};\n+Bar::Bar() {\n+        foo1 = getFoo();\n+        foo2 = getFoo();\n+        for (int a = 0; a < 4; ++a) {\n+                for (int b = 0; b < 4; ++b) {\n+                        for (int c = 0; c < 4; ++c) {\n+                                table[a][b][c] = foo1;\n+                        }\n+                }\n+        }\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "0f2efd85ed526ca491258a5a232ad94b7878de70", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=f5d3c7e14eabffeeab1bf68eadaf4cd41c781c95", "patch": "@@ -2508,6 +2508,7 @@ vect_get_and_check_slp_defs (loop_vec_info loop_vinfo, slp_tree slp_node,\n   stmt_vec_info stmt_info = \n     vinfo_for_stmt (VEC_index (gimple, SLP_TREE_SCALAR_STMTS (slp_node), 0));\n   enum gimple_rhs_class rhs_class;\n+  struct loop *loop = LOOP_VINFO_LOOP (loop_vinfo);\n \n   rhs_class = get_gimple_rhs_class (gimple_assign_rhs_code (stmt));\n   number_of_oprnds = gimple_num_ops (stmt) - 1;\t/* RHS only */\n@@ -2531,7 +2532,9 @@ vect_get_and_check_slp_defs (loop_vec_info loop_vinfo, slp_tree slp_node,\n       /* Check if DEF_STMT is a part of a pattern and get the def stmt from\n          the pattern. Check that all the stmts of the node are in the\n          pattern.  */\n-      if (def_stmt && vinfo_for_stmt (def_stmt)\n+      if (def_stmt && gimple_bb (def_stmt)\n+          && flow_bb_inside_loop_p (loop, gimple_bb (def_stmt))\n+          && vinfo_for_stmt (def_stmt)\n           && STMT_VINFO_IN_PATTERN_P (vinfo_for_stmt (def_stmt)))\n         {\n           if (!*first_stmt_dt0)"}]}