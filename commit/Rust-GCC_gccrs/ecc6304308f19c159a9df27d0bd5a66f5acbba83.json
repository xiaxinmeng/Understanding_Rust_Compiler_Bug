{"sha": "ecc6304308f19c159a9df27d0bd5a66f5acbba83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNjNjMwNDMwOGYxOWMxNTlhOWRmMjdkMGJkNWE2NmY1YWNiYmE4Mw==", "commit": {"author": {"name": "Catherine Moore", "email": "clm@codesourcery.com", "date": "2014-06-24T22:07:39Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2014-06-24T22:07:39Z"}, "message": "mips.c (mips_order_regs_for_local_alloc): Delete.\n\n2014-06-24  Catherine Moore  <clm@codesourcery.com>\n\t    Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* config/mips/mips.c (mips_order_regs_for_local_alloc): Delete.\n\t* config/mips/mips.h (ADJUST_REG_ALLOC_ORDER): Delete.\n\t* config/mips/mips-protos.h (mips_order_regs_for_local_alloc): Delete.\n\nCo-Authored-By: Sandra Loosemore <sandra@codesourcery.com>\n\nFrom-SVN: r211959", "tree": {"sha": "616d460f0f31bb751c3841d6306510ad0ecc7b41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/616d460f0f31bb751c3841d6306510ad0ecc7b41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecc6304308f19c159a9df27d0bd5a66f5acbba83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc6304308f19c159a9df27d0bd5a66f5acbba83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecc6304308f19c159a9df27d0bd5a66f5acbba83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc6304308f19c159a9df27d0bd5a66f5acbba83/comments", "author": {"login": "CatherineMoore", "id": 15636327, "node_id": "MDQ6VXNlcjE1NjM2MzI3", "avatar_url": "https://avatars.githubusercontent.com/u/15636327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CatherineMoore", "html_url": "https://github.com/CatherineMoore", "followers_url": "https://api.github.com/users/CatherineMoore/followers", "following_url": "https://api.github.com/users/CatherineMoore/following{/other_user}", "gists_url": "https://api.github.com/users/CatherineMoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/CatherineMoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CatherineMoore/subscriptions", "organizations_url": "https://api.github.com/users/CatherineMoore/orgs", "repos_url": "https://api.github.com/users/CatherineMoore/repos", "events_url": "https://api.github.com/users/CatherineMoore/events{/privacy}", "received_events_url": "https://api.github.com/users/CatherineMoore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc3a2e70f4e362b52cf73453667613ffce27167c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc3a2e70f4e362b52cf73453667613ffce27167c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc3a2e70f4e362b52cf73453667613ffce27167c"}], "stats": {"total": 37, "additions": 7, "deletions": 30}, "files": [{"sha": "c8cc0b403b1f3bd302115b738462344981884bab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc6304308f19c159a9df27d0bd5a66f5acbba83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc6304308f19c159a9df27d0bd5a66f5acbba83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecc6304308f19c159a9df27d0bd5a66f5acbba83", "patch": "@@ -1,3 +1,10 @@\n+2014-06-24  Catherine Moore  <clm@codesourcery.com>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* config/mips/mips.c (mips_order_regs_for_local_alloc): Delete.\n+\t* config/mips/mips.h (ADJUST_REG_ALLOC_ORDER): Delete.\n+\t* config/mips/mips-protos.h (mips_order_regs_for_local_alloc): Delete.\n+\n 2014-06-24  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* doc/invoke.texi (Warning Options): Remove duplicated"}, {"sha": "8a517ee02ea7cbaf7e80b701cd866fad93fcf5f7", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc6304308f19c159a9df27d0bd5a66f5acbba83/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc6304308f19c159a9df27d0bd5a66f5acbba83/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=ecc6304308f19c159a9df27d0bd5a66f5acbba83", "patch": "@@ -247,7 +247,6 @@ extern bool mips_expand_ext_as_unaligned_load (rtx, rtx, HOST_WIDE_INT,\n extern bool mips_expand_ins_as_unaligned_store (rtx, rtx, HOST_WIDE_INT,\n \t\t\t\t\t\tHOST_WIDE_INT);\n extern bool mips_mem_fits_mode_p (enum machine_mode mode, rtx x);\n-extern void mips_order_regs_for_local_alloc (void);\n extern HOST_WIDE_INT mips_debugger_offset (rtx, HOST_WIDE_INT);\n \n extern void mips_push_asm_switch (struct mips_asm_switch *);"}, {"sha": "10efc270298a1f876efc9acb7c7abac7eaec5993", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc6304308f19c159a9df27d0bd5a66f5acbba83/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc6304308f19c159a9df27d0bd5a66f5acbba83/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=ecc6304308f19c159a9df27d0bd5a66f5acbba83", "patch": "@@ -17497,28 +17497,6 @@ mips_conditional_register_usage (void)\n     }\n }\n \n-/* When generating MIPS16 code, we want to allocate $24 (T_REG) before\n-   other registers for instructions for which it is possible.  This\n-   encourages the compiler to use CMP in cases where an XOR would\n-   require some register shuffling.  */\n-\n-void\n-mips_order_regs_for_local_alloc (void)\n-{\n-  int i;\n-\n-  for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-    reg_alloc_order[i] = i;\n-\n-  if (TARGET_MIPS16)\n-    {\n-      /* It really doesn't matter where we put register 0, since it is\n-         a fixed register anyhow.  */\n-      reg_alloc_order[0] = 24;\n-      reg_alloc_order[24] = 0;\n-    }\n-}\n-\n /* Implement EH_USES.  */\n \n bool"}, {"sha": "1164b4b18085431d52fc0872eaa6f26e83e9e0b4", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc6304308f19c159a9df27d0bd5a66f5acbba83/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc6304308f19c159a9df27d0bd5a66f5acbba83/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=ecc6304308f19c159a9df27d0bd5a66f5acbba83", "patch": "@@ -2046,13 +2046,6 @@ enum reg_class\n   182,183,184,185,186,187\t\t\t\t\t\t\\\n }\n \n-/* ADJUST_REG_ALLOC_ORDER is a macro which permits reg_alloc_order\n-   to be rearranged based on a particular function.  On the mips16, we\n-   want to allocate $24 (T_REG) before other registers for\n-   instructions for which it is possible.  */\n-\n-#define ADJUST_REG_ALLOC_ORDER mips_order_regs_for_local_alloc ()\n-\n /* True if VALUE is an unsigned 6-bit number.  */\n \n #define UIMM6_OPERAND(VALUE) \\"}]}