{"sha": "cdb574d383b485bbee692ab4763fb1ac4be5e34d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RiNTc0ZDM4M2I0ODViYmVlNjkyYWI0NzYzZmIxYWM0YmU1ZTM0ZA==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "2002-01-12T04:14:50Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2002-01-12T04:14:50Z"}, "message": "conflict.c (conflict_graph_compute): Free regsets when finished.\n\n\t* conflict.c (conflict_graph_compute): Free regsets when finished.\n\t* ssa.c (compute_coalesced_reg_partition): Likewise.\n\nFrom-SVN: r48792", "tree": {"sha": "47df6508da9cc82385c9decb1dd19e83285dd868", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47df6508da9cc82385c9decb1dd19e83285dd868"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdb574d383b485bbee692ab4763fb1ac4be5e34d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb574d383b485bbee692ab4763fb1ac4be5e34d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdb574d383b485bbee692ab4763fb1ac4be5e34d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb574d383b485bbee692ab4763fb1ac4be5e34d/comments", "author": null, "committer": null, "parents": [{"sha": "cf11ac5596a2a5f7ebb0f8269e45aac2f85954df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf11ac5596a2a5f7ebb0f8269e45aac2f85954df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf11ac5596a2a5f7ebb0f8269e45aac2f85954df"}], "stats": {"total": 35, "additions": 24, "deletions": 11}, "files": [{"sha": "4f07be04a5bddf90ba55c52dcd41e541da2b73d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb574d383b485bbee692ab4763fb1ac4be5e34d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb574d383b485bbee692ab4763fb1ac4be5e34d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cdb574d383b485bbee692ab4763fb1ac4be5e34d", "patch": "@@ -1,3 +1,8 @@\n+2002-01-12  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* conflict.c (conflict_graph_compute): Free regsets when finished.\n+\t* ssa.c (compute_coalesced_reg_partition): Likewise.\n+\t\n 2002-01-12  Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n \n \t* global.c (find_reg): Check for HARD_REGNO_CALL_PART_CLOBBERED"}, {"sha": "d1fb1293cf9f142f1bc8020201029bdb56bf389a", "filename": "gcc/conflict.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb574d383b485bbee692ab4763fb1ac4be5e34d/gcc%2Fconflict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb574d383b485bbee692ab4763fb1ac4be5e34d/gcc%2Fconflict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconflict.c?ref=cdb574d383b485bbee692ab4763fb1ac4be5e34d", "patch": "@@ -449,20 +449,20 @@ conflict_graph_compute (regs, p)\n {\n   int b;\n   conflict_graph graph = conflict_graph_new (max_reg_num ());\n+  regset_head live_head;\n+  regset live = &live_head;\n+  regset_head born_head;\n+  regset born = &born_head;\n+\n+  INIT_REG_SET (live);\n+  INIT_REG_SET (born);\n \n   for (b = n_basic_blocks; --b >= 0; )\n     {\n       basic_block bb = BASIC_BLOCK (b);\n-      regset_head live_head;\n-      regset live = &live_head;\n-      regset_head born_head;\n-      regset born = &born_head;\n       rtx insn;\n       rtx head;\n \n-      INIT_REG_SET (live);\n-      INIT_REG_SET (born);\n-\n       /* Start with the regs that are live on exit, limited to those\n \t we're interested in.  */\n       COPY_REG_SET (live, bb->global_live_at_end);\n@@ -524,5 +524,8 @@ conflict_graph_compute (regs, p)\n \t}\n     }\n \n+  FREE_REG_SET (live);\n+  FREE_REG_SET (born);\n+\n   return graph;\n }"}, {"sha": "503d1a74f6d29c4ff05663b6f22b24c965793456", "filename": "gcc/ssa.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb574d383b485bbee692ab4763fb1ac4be5e34d/gcc%2Fssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb574d383b485bbee692ab4763fb1ac4be5e34d/gcc%2Fssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa.c?ref=cdb574d383b485bbee692ab4763fb1ac4be5e34d", "patch": "@@ -1850,6 +1850,8 @@ compute_coalesced_reg_partition ()\n {\n   int bb;\n   int changed = 0;\n+  regset_head phi_set_head;\n+  regset phi_set = &phi_set_head;\n \n   partition p = \n     partition_new (ssa_definition->num_elements);\n@@ -1861,20 +1863,21 @@ compute_coalesced_reg_partition ()\n   for (bb = n_basic_blocks; --bb >= 0; )\n     make_regs_equivalent_over_bad_edges (bb, p);\n \n+  INIT_REG_SET (phi_set);\n+\n   do\n     {\n-      regset_head phi_set;\n       conflict_graph conflicts;\n \n       changed = 0;\n \n       /* Build the set of registers involved in phi nodes, either as\n \t arguments to the phi function or as the target of a set.  */\n-      INITIALIZE_REG_SET (phi_set);\n-      mark_phi_and_copy_regs (&phi_set);\n+      CLEAR_REG_SET (phi_set);\n+      mark_phi_and_copy_regs (phi_set);\n \n       /* Compute conflicts.  */\n-      conflicts = conflict_graph_compute (&phi_set, p);\n+      conflicts = conflict_graph_compute (phi_set, p);\n \n       /* FIXME: Better would be to process most frequently executed\n \t blocks first, so that most frequently executed copies would\n@@ -1892,6 +1895,8 @@ compute_coalesced_reg_partition ()\n     }\n   while (changed > 0);\n \n+  FREE_REG_SET (phi_set);\n+\n   return p;\n }\n "}]}