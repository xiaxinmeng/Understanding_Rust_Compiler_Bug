{"sha": "b2cb69647e04765b87f0f1ba9f39b4a353574135", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJjYjY5NjQ3ZTA0NzY1Yjg3ZjBmMWJhOWYzOWI0YTM1MzU3NDEzNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-02-13T21:30:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-02-13T21:30:31Z"}, "message": "PR libstdc++/51798 continued\n\nPR libstdc++/51798 continued\n\t* include/bits/shared_ptr_base.h\n\t(_Sp_counted_base<_S_atomic>::_M_add_ref_lock): Hoist initial load\n\toutside compare_exchange loop.\n\t* include/tr1/shared_ptr.h: Same.\n\t* include/parallel/compatibility.h (__compare_and_swap_32): Use strong\n\tversion of compare_exchange.\n\t(__compare_and_swap_64): Same.\n\t* include/profile/impl/profiler_state.h (__gnu_profile::__turn): Same.\n\t* libsupc++/guard.cc (__cxa_guard_acquire): Same.\n\nFrom-SVN: r184171", "tree": {"sha": "840fce549883497ba5e22c723942237b1faa64ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/840fce549883497ba5e22c723942237b1faa64ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2cb69647e04765b87f0f1ba9f39b4a353574135", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2cb69647e04765b87f0f1ba9f39b4a353574135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2cb69647e04765b87f0f1ba9f39b4a353574135", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2cb69647e04765b87f0f1ba9f39b4a353574135/comments", "author": null, "committer": null, "parents": [{"sha": "67b977ada8b0fece1138d67d2ebfbf2e9b030d01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b977ada8b0fece1138d67d2ebfbf2e9b030d01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67b977ada8b0fece1138d67d2ebfbf2e9b030d01"}], "stats": {"total": 45, "additions": 29, "deletions": 16}, "files": [{"sha": "723007cdfe014fb740b79314b8e772426e4636b5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cb69647e04765b87f0f1ba9f39b4a353574135/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cb69647e04765b87f0f1ba9f39b4a353574135/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b2cb69647e04765b87f0f1ba9f39b4a353574135", "patch": "@@ -1,3 +1,16 @@\n+2012-02-13  Richard Henderson  <rth@redhat.com>\n+\n+\tPR libstdc++/51798 continued.\n+\t* include/bits/shared_ptr_base.h\n+\t(_Sp_counted_base<_S_atomic>::_M_add_ref_lock): Hoist initial load\n+\toutside compare_exchange loop.\n+\t* include/tr1/shared_ptr.h: Same.\n+\t* include/parallel/compatibility.h (__compare_and_swap_32): Use strong\n+\tversion of compare_exchange.\n+\t(__compare_and_swap_64): Same.\n+\t* include/profile/impl/profiler_state.h (__gnu_profile::__turn): Same.\n+\t* libsupc++/guard.cc (__cxa_guard_acquire): Same.\n+\n 2012-02-10  Benjamin Kosnik  <bkoz@redhat.com>\n             Jonathan Wakely  <jwakely.gcc@gmail.com>\n "}, {"sha": "c48c18eaee9b53b8e5bc0afd5149b98bf429eb6c", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cb69647e04765b87f0f1ba9f39b4a353574135/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cb69647e04765b87f0f1ba9f39b4a353574135/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=b2cb69647e04765b87f0f1ba9f39b4a353574135", "patch": "@@ -236,13 +236,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     _M_add_ref_lock()\n     {\n       // Perform lock-free add-if-not-zero operation.\n-      _Atomic_word __count;\n+      _Atomic_word __count = _M_use_count;\n       do\n \t{\n-\t  __count = _M_use_count;\n \t  if (__count == 0)\n \t    __throw_bad_weak_ptr();\n-\t  \n \t  // Replace the current counter value with the old value + 1, as\n \t  // long as it's not changed meanwhile. \n \t}"}, {"sha": "ed75215ceaf1eeddfb620e159efbd95c7264a805", "filename": "libstdc++-v3/include/parallel/compatibility.h", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cb69647e04765b87f0f1ba9f39b4a353574135/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fcompatibility.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cb69647e04765b87f0f1ba9f39b4a353574135/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fcompatibility.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fcompatibility.h?ref=b2cb69647e04765b87f0f1ba9f39b4a353574135", "patch": "@@ -252,8 +252,9 @@ namespace __gnu_parallel\n                __replacement, __comparand)\n              == __comparand;\n #elif defined(__GNUC__)\n-    return __atomic_compare_exchange_n(__ptr, &__comparand, __replacement, true,\n-\t\t\t\t       __ATOMIC_ACQ_REL, __ATOMIC_RELAXED);\n+    return __atomic_compare_exchange_n(__ptr, &__comparand, __replacement,\n+\t\t\t\t       false, __ATOMIC_ACQ_REL,\n+\t\t\t\t       __ATOMIC_RELAXED);\n #elif defined(__SUNPRO_CC) && defined(__sparc)\n     return atomic_cas_32((volatile unsigned int*)__ptr, __comparand,\n                          __replacement) == __comparand;\n@@ -299,13 +300,15 @@ namespace __gnu_parallel\n #endif\n \n #elif defined(__GNUC__) && defined(__x86_64)\n-    return __atomic_compare_exchange_n(__ptr, &__comparand, __replacement, true,\n-\t\t\t\t       __ATOMIC_ACQ_REL, __ATOMIC_RELAXED);\n+    return __atomic_compare_exchange_n(__ptr, &__comparand, __replacement,\n+\t\t\t\t       false, __ATOMIC_ACQ_REL,\n+\t\t\t\t       __ATOMIC_RELAXED);\n #elif defined(__GNUC__) && defined(__i386) &&                   \\\n   (defined(__i686) || defined(__pentium4) || defined(__athlon)  \\\n    || defined(__k8) || defined(__core2))\n-    return __atomic_compare_exchange_n(__ptr, &__comparand, __replacement, true,\n-\t\t\t\t       __ATOMIC_ACQ_REL, __ATOMIC_RELAXED);\n+    return __atomic_compare_exchange_n(__ptr, &__comparand, __replacement,\n+\t\t\t\t       false, __ATOMIC_ACQ_REL,\n+\t\t\t\t       __ATOMIC_RELAXED);\n #elif defined(__SUNPRO_CC) && defined(__sparc)\n     return atomic_cas_64((volatile unsigned long long*)__ptr,\n                          __comparand, __replacement) == __comparand;"}, {"sha": "d48801ab561a8786f8ba78f1bc13cb40a51f8e49", "filename": "libstdc++-v3/include/profile/impl/profiler_state.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cb69647e04765b87f0f1ba9f39b4a353574135/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_state.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cb69647e04765b87f0f1ba9f39b4a353574135/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_state.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_state.h?ref=b2cb69647e04765b87f0f1ba9f39b4a353574135", "patch": "@@ -48,7 +48,7 @@ namespace __gnu_profile\n   { \n     __state_type inv(__INVALID);\n     return __atomic_compare_exchange_n(&_GLIBCXX_PROFILE_DATA(__state),\n-\t\t\t\t       &inv, __s, true, __ATOMIC_ACQ_REL, \n+\t\t\t\t       &inv, __s, false, __ATOMIC_ACQ_REL, \n \t\t\t\t       __ATOMIC_RELAXED);\n   }\n "}, {"sha": "5a1eb038a38b593a9d4b1c615cb1230834e875d2", "filename": "libstdc++-v3/include/tr1/shared_ptr.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cb69647e04765b87f0f1ba9f39b4a353574135/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fshared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cb69647e04765b87f0f1ba9f39b4a353574135/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fshared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fshared_ptr.h?ref=b2cb69647e04765b87f0f1ba9f39b4a353574135", "patch": "@@ -237,13 +237,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     _M_add_ref_lock()\n     {\n       // Perform lock-free add-if-not-zero operation.\n-      _Atomic_word __count;\n+      _Atomic_word __count = _M_use_count;\n       do\n \t{\n-\t  __count = _M_use_count;\n \t  if (__count == 0)\n \t    __throw_bad_weak_ptr();\n-\t  \n \t  // Replace the current counter value with the old value + 1, as\n \t  // long as it's not changed meanwhile. \n \t}"}, {"sha": "adc960861081b576de67bbd3c3dad9d0348399bf", "filename": "libstdc++-v3/libsupc++/guard.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cb69647e04765b87f0f1ba9f39b4a353574135/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fguard.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cb69647e04765b87f0f1ba9f39b4a353574135/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fguard.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fguard.cc?ref=b2cb69647e04765b87f0f1ba9f39b4a353574135", "patch": "@@ -251,8 +251,9 @@ namespace __cxxabiv1\n \n \twhile (1)\n \t  {\n-\t    if (__atomic_compare_exchange_n(gi, &expected, pending_bit, true,\n-\t\t\t\t\t    __ATOMIC_ACQ_REL, __ATOMIC_RELAXED))\n+\t    if (__atomic_compare_exchange_n(gi, &expected, pending_bit, false,\n+\t\t\t\t\t    __ATOMIC_ACQ_REL,\n+\t\t\t\t\t    __ATOMIC_RELAXED))\n \t      {\n \t\t// This thread should do the initialization.\n \t\treturn 1;\n@@ -266,7 +267,7 @@ namespace __cxxabiv1\n \t     if (expected == pending_bit)\n \t       {\n \t\t int newv = expected | waiting_bit;\n-\t\t if (!__atomic_compare_exchange_n(gi, &expected, newv, true,\n+\t\t if (!__atomic_compare_exchange_n(gi, &expected, newv, false,\n \t\t\t\t\t\t  __ATOMIC_ACQ_REL, \n \t\t\t\t\t\t  __ATOMIC_RELAXED))\n \t\t   continue;"}]}