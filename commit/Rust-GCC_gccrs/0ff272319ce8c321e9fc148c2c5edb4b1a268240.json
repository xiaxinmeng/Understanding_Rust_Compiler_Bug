{"sha": "0ff272319ce8c321e9fc148c2c5edb4b1a268240", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZmMjcyMzE5Y2U4YzMyMWU5ZmMxNDhjMmM1ZWRiNGIxYTI2ODI0MA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2016-11-09T10:40:00Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2016-11-09T10:40:00Z"}, "message": "re PR target/78254 (FAIL: g++.dg/torture/pr77822.C   -O3 -g  (internal compiler error))\n\nPR target/78254\n* config/m68k/m68k.md: Reject out-of-range bit pos in bit-fields\ninsns operating on a register.\n\nFrom-SVN: r241996", "tree": {"sha": "50a89549b79ed9610f7901daecc0991988808008", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50a89549b79ed9610f7901daecc0991988808008"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ff272319ce8c321e9fc148c2c5edb4b1a268240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ff272319ce8c321e9fc148c2c5edb4b1a268240", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ff272319ce8c321e9fc148c2c5edb4b1a268240", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ff272319ce8c321e9fc148c2c5edb4b1a268240/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bfcb501d83778b8f2b4cc52672b940e62e611e17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfcb501d83778b8f2b4cc52672b940e62e611e17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfcb501d83778b8f2b4cc52672b940e62e611e17"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "7c94651348f072abf5aeafe668fcad074350595e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ff272319ce8c321e9fc148c2c5edb4b1a268240/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ff272319ce8c321e9fc148c2c5edb4b1a268240/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ff272319ce8c321e9fc148c2c5edb4b1a268240", "patch": "@@ -1,3 +1,9 @@\n+2016-11-09  Andreas Schwab  <schwab@suse.de>\n+\n+\tPR target/78254\n+\t* config/m68k/m68k.md: Reject out-of-range bit pos in bit-fields\n+\tinsns operating on a register.\n+\n 2016-11-09  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/78007"}, {"sha": "3d7895d264c91d03c634f0d53d82ef93bcb99e25", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ff272319ce8c321e9fc148c2c5edb4b1a268240/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ff272319ce8c321e9fc148c2c5edb4b1a268240/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=0ff272319ce8c321e9fc148c2c5edb4b1a268240", "patch": "@@ -706,7 +706,7 @@\n \t\t\t       (minus:SI (const_int 31)\n \t\t\t\t         (match_operand:SI 1 \"general_operand\" \"di\")))\n \t     (const_int 0)))]\n-  \"\"\n+  \"!(CONST_INT_P (operands[1]) && !IN_RANGE (INTVAL (operands[1]), 0, 31))\"\n {\n   return output_btst (operands, operands[1], operands[0], insn, 31);\n })\n@@ -765,9 +765,10 @@\n     (cc0)\n     (compare (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"do\")\n \t\t\t      (const_int 1)\n-\t\t\t    (match_operand:SI 1 \"const_int_operand\" \"n\"))\n+\t\t\t      (match_operand:SI 1 \"const_int_operand\" \"n\"))\n \t     (const_int 0)))]\n-  \"!TARGET_COLDFIRE\"\n+  \"!TARGET_COLDFIRE\n+   && !(REG_P (operands[0]) && !IN_RANGE (INTVAL (operands[1]), 0, 31))\"\n {\n   if (GET_CODE (operands[0]) == MEM)\n     {\n@@ -790,7 +791,8 @@\n \t\t\t      (const_int 1)\n \t\t\t      (match_operand:SI 1 \"const_int_operand\" \"n\"))\n \t     (const_int 0)))]\n-  \"TARGET_COLDFIRE\"\n+  \"TARGET_COLDFIRE\n+   && !(REG_P (operands[0]) && !IN_RANGE (INTVAL (operands[1]), 0, 31))\"\n {\n   if (GET_CODE (operands[0]) == MEM)\n     {\n@@ -5397,6 +5399,7 @@\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\"))\n \t(match_operand:SI 3 \"register_operand\" \"d\"))]\n   \"TARGET_68020 && TARGET_BITFIELD\n+   && IN_RANGE (INTVAL (operands[2]), 0, 31)\n    && (INTVAL (operands[1]) == 8 || INTVAL (operands[1]) == 16)\n    && INTVAL (operands[2]) % INTVAL (operands[1]) == 0\"\n {\n@@ -5438,6 +5441,7 @@\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\")\n \t\t\t (match_operand:SI 3 \"const_int_operand\" \"n\")))]\n   \"TARGET_68020 && TARGET_BITFIELD\n+   && IN_RANGE (INTVAL (operands[3]), 0, 31)\n    && (INTVAL (operands[2]) == 8 || INTVAL (operands[2]) == 16)\n    && INTVAL (operands[3]) % INTVAL (operands[2]) == 0\"\n {\n@@ -5480,6 +5484,7 @@\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\")\n \t\t\t (match_operand:SI 3 \"const_int_operand\" \"n\")))]\n   \"TARGET_68020 && TARGET_BITFIELD\n+   && IN_RANGE (INTVAL (operands[3]), 0, 31)\n    && (INTVAL (operands[2]) == 8 || INTVAL (operands[2]) == 16)\n    && INTVAL (operands[3]) % INTVAL (operands[2]) == 0\"\n {\n@@ -5610,15 +5615,15 @@\n \t(sign_extract:SI (match_operand:SI 1 \"register_operand\" \"d\")\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\")\n \t\t\t (match_operand:SI 3 \"const_int_operand\" \"n\")))]\n-  \"TARGET_68020 && TARGET_BITFIELD\"\n+  \"TARGET_68020 && TARGET_BITFIELD && IN_RANGE (INTVAL (operands[3]), 0, 31)\"\n   \"bfexts %1{%b3:%b2},%0\")\n \n (define_insn \"*extv_bfextu_reg\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d\")\n \t(zero_extract:SI (match_operand:SI 1 \"register_operand\" \"d\")\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\")\n \t\t\t (match_operand:SI 3 \"const_int_operand\" \"n\")))]\n-  \"TARGET_68020 && TARGET_BITFIELD\"\n+  \"TARGET_68020 && TARGET_BITFIELD && IN_RANGE (INTVAL (operands[3]), 0, 31)\"\n {\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {\n@@ -5637,7 +5642,7 @@\n \t\t\t (match_operand:SI 1 \"const_int_operand\" \"n\")\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\"))\n \t(const_int 0))]\n-  \"TARGET_68020 && TARGET_BITFIELD\"\n+  \"TARGET_68020 && TARGET_BITFIELD && IN_RANGE (INTVAL (operands[2]), 0, 31)\"\n {\n   CC_STATUS_INIT;\n   return \"bfclr %0{%b2:%b1}\";\n@@ -5648,7 +5653,7 @@\n \t\t\t (match_operand:SI 1 \"const_int_operand\" \"n\")\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\"))\n \t(const_int -1))]\n-  \"TARGET_68020 && TARGET_BITFIELD\"\n+  \"TARGET_68020 && TARGET_BITFIELD && IN_RANGE (INTVAL (operands[2]), 0, 31)\"\n {\n   CC_STATUS_INIT;\n   return \"bfset %0{%b2:%b1}\";\n@@ -5659,7 +5664,7 @@\n \t\t\t (match_operand:SI 1 \"const_int_operand\" \"n\")\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\"))\n \t(match_operand:SI 3 \"register_operand\" \"d\"))]\n-  \"TARGET_68020 && TARGET_BITFIELD\"\n+  \"TARGET_68020 && TARGET_BITFIELD && IN_RANGE (INTVAL (operands[2]), 0, 31)\"\n {\n #if 0\n   /* These special cases are now recognized by a specific pattern.  */\n@@ -5707,7 +5712,8 @@\n \t\t\t\t  (match_operand:SI 1 \"const_int_operand\" \"n\")\n \t\t\t \t  (match_operand:SI 2 \"general_operand\" \"dn\"))\n \t\t (const_int 0)))]\n-  \"TARGET_68020 && TARGET_BITFIELD\"\n+  \"TARGET_68020 && TARGET_BITFIELD\n+    && !(CONST_INT_P (operands[2]) && !IN_RANGE (INTVAL (operands[2]), 0, 31))\"\n {\n   if (operands[1] == const1_rtx\n       && GET_CODE (operands[2]) == CONST_INT)"}]}