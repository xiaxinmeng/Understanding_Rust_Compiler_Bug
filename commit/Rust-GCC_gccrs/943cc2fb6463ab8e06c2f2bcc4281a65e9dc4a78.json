{"sha": "943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQzY2MyZmI2NDYzYWI4ZTA2YzJmMmJjYzQyODFhNjVlOWRjNGE3OA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2018-10-29T18:44:39Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-10-29T18:44:39Z"}, "message": "compiler: add location_file\n    \n    Add support for getting the file name from a Location value.  This\n    will be used by later work.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/145318\n\n\t* go-linemap.cc (Gcc_linemap::location_file): New method.\n\nFrom-SVN: r265598", "tree": {"sha": "d33e568cab7d6f7f5dc3e5d6efa7dbd3ebdb4b6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d33e568cab7d6f7f5dc3e5d6efa7dbd3ebdb4b6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "266ef3613ea80da937a9fc782eb5c3ae8dcabb8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "915630daec98427a8fe25452e0dbc6296c98c399", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78", "patch": "@@ -1,3 +1,7 @@\n+2018-10-29  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* go-linemap.cc (Gcc_linemap::location_file): New method.\n+\n 2018-10-17  David Malcolm  <dmalcolm@redhat.com>\n \n \t* Make-lang.in (selftest-go): New."}, {"sha": "a4d4b7d13e2c85fedfa1c26bd2e2c8986e85f962", "filename": "gcc/go/go-linemap.cc", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78/gcc%2Fgo%2Fgo-linemap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78/gcc%2Fgo%2Fgo-linemap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-linemap.cc?ref=943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78", "patch": "@@ -34,6 +34,9 @@ class Gcc_linemap : public Linemap\n   std::string\n   to_string(Location);\n \n+  std::string\n+  location_file(Location);\n+\n   int\n   location_line(Location);\n \n@@ -93,7 +96,16 @@ Gcc_linemap::to_string(Location location)\n   return ss.str();\n }\n \n-// Return the line number for a given location (for debugging dumps)\n+// Return the file name for a given location.\n+\n+std::string\n+Gcc_linemap::location_file(Location loc)\n+{\n+  return LOCATION_FILE(loc.gcc_location());\n+}\n+\n+// Return the line number for a given location.\n+\n int\n Gcc_linemap::location_line(Location loc)\n {"}, {"sha": "7074d3e508adf4487e8ce5b1484cc3acad2a4faa", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78", "patch": "@@ -1,4 +1,4 @@\n-8902fb43c569e4d3ec5bd143bfa8cb6bf2836780\n+e4a421a01ad1fcc4315e530e79272604f3683051\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "1811c9db4111dce8fc862eaf3bbf6278adae4576", "filename": "gcc/go/gofrontend/go-linemap.h", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78/gcc%2Fgo%2Fgofrontend%2Fgo-linemap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78/gcc%2Fgo%2Fgofrontend%2Fgo-linemap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgo-linemap.h?ref=943cc2fb6463ab8e06c2f2bcc4281a65e9dc4a78", "patch": "@@ -63,7 +63,11 @@ class Linemap\n   virtual std::string\n   to_string(Location) = 0;\n \n-  // Return the line number for a given location (for debugging dumps)\n+  // Return the file name for a given location.\n+  virtual std::string\n+  location_file(Location) = 0;\n+\n+  // Return the line number for a given location.\n   virtual int\n   location_line(Location) = 0;\n \n@@ -140,7 +144,15 @@ class Linemap\n     return Linemap::instance_->to_string(loc);\n   }\n \n-  // Return line number for location\n+  // Return the file name of a location.\n+  static std::string\n+  location_to_file(Location loc)\n+  {\n+    go_assert(Linemap::instance_ != NULL);\n+    return Linemap::instance_->location_file(loc);\n+  }\n+\n+  // Return line number of a location.\n   static int\n   location_to_line(Location loc)\n   {"}]}