{"sha": "417e7bed131e9fbb05e1766c722d87f76f1868e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE3ZTdiZWQxMzFlOWZiYjA1ZTE3NjZjNzIyZDg3Zjc2ZjE4NjhlNw==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.org", "date": "2007-12-08T19:23:58Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2007-12-08T19:23:58Z"}, "message": "configure.host: Add bits for i?86-*-darwin9 and x86_64-*-darwin9.\n\n2007-12-08  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* configure.host: Add bits for i?86-*-darwin9 and x86_64-*-darwin9.\n\t* configure.ac: Add darwin-signal.h to x86_64-*-darwin9 and\n\ti?86-*darwin9.\n\t* configure.in: Regenerate.\n\t* darwin.cc: Add definitions for Darwin specific functions for 64-bit.\n\t(darwin_java_register_dyld_add_image_hook): Use this specific\n\tfunctions.\n\t* Makefile.am (gij_LDFLAGS): Add extra_gij_ldflags for Darwin9.\n\t* Makefile.in: Regenerate.\n\t* include/Makefile.in: Likewise.\n\t* gcj/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\t* testsuite/lib/libjava.exp (libjava_arguments): Add allow_stack_execute\n\tfor *-*-darwin9*.\n\nFrom-SVN: r130709", "tree": {"sha": "d401774a93a831901d00b5fb20b5620d25dfe2b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d401774a93a831901d00b5fb20b5620d25dfe2b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/417e7bed131e9fbb05e1766c722d87f76f1868e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/417e7bed131e9fbb05e1766c722d87f76f1868e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/417e7bed131e9fbb05e1766c722d87f76f1868e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/417e7bed131e9fbb05e1766c722d87f76f1868e7/comments", "author": null, "committer": null, "parents": [{"sha": "c9f7e8258a6a36303f7ba5b41528679eb0e74855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9f7e8258a6a36303f7ba5b41528679eb0e74855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9f7e8258a6a36303f7ba5b41528679eb0e74855"}], "stats": {"total": 149, "additions": 102, "deletions": 47}, "files": [{"sha": "4c8707a06b536f2cbaecc2d7a6610aef6f661414", "filename": "libjava/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=417e7bed131e9fbb05e1766c722d87f76f1868e7", "patch": "@@ -1,3 +1,20 @@\n+2007-12-08  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* configure.host: Add bits for i?86-*-darwin9 and x86_64-*-darwin9.\n+\t* configure.ac: Add darwin-signal.h to x86_64-*-darwin9 and\n+\ti?86-*darwin9.\n+\t* configure.in: Regenerate.\n+\t* darwin.cc: Add definitions for Darwin specific functions for 64-bit.\n+\t(darwin_java_register_dyld_add_image_hook): Use this specific\n+\tfunctions.\n+\t* Makefile.am (gij_LDFLAGS): Add extra_gij_ldflags for Darwin9.\n+\t* Makefile.in: Regenerate.\n+\t* include/Makefile.in: Likewise.\n+\t* gcj/Makefile.in: Likewise.\n+\t* testsuite/Makefile.in: Likewise.\n+\t* testsuite/lib/libjava.exp (libjava_arguments): Add allow_stack_execute\n+\tfor *-*-darwin9*.\n+\n 2007-12-06  David Daney  <ddaney@avtrex.com>\n \n \t* interpret.cc: Replace ffi_raw with INTERP_FFI_RAW_TYPE throughout."}, {"sha": "d906c2ee4f0deb8e2785751ea9b8971d8707309d", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=417e7bed131e9fbb05e1766c722d87f76f1868e7", "patch": "@@ -675,7 +675,8 @@ gij_SOURCES =\n ## need this because we are explicitly using libtool to link using the\n ## `.la' file.\n gij_LDFLAGS = -rpath $(dbexecdir) -rpath $(toolexeclibdir) \\\n-\t-shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n+\t-shared-libgcc $(THREADLDFLAGS) $(extra_ldflags) \\\n+\t$(extra_gij_ldflags) \n gij_LINK = $(GCJLINK)\n ## See jv_convert_LDADD.\n gij_LDADD = -L$(here)/.libs libgij.la"}, {"sha": "d757fe662e918853649329009ad00ee31a0daf7b", "filename": "libjava/Makefile.in", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=417e7bed131e9fbb05e1766c722d87f76f1868e7", "patch": "@@ -81,6 +81,7 @@ subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/libltdl/acinclude.m4 \\\n \t$(top_srcdir)/../config/acx.m4 \\\n+\t$(top_srcdir)/../config/confsubdir.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/gxx-include-dir.m4 \\\n@@ -725,7 +726,6 @@ USING_WIN32_THREADS_TRUE = @USING_WIN32_THREADS_TRUE@\n VERSION = @VERSION@\n XLIB_AWT_FALSE = @XLIB_AWT_FALSE@\n XLIB_AWT_TRUE = @XLIB_AWT_TRUE@\n-XMKMF = @XMKMF@\n X_AWT_FALSE = @X_AWT_FALSE@\n X_AWT_TRUE = @X_AWT_TRUE@\n X_CFLAGS = @X_CFLAGS@\n@@ -737,9 +737,14 @@ ZIP = @ZIP@\n ZLIBS = @ZLIBS@\n ZLIBSPEC = @ZLIBSPEC@\n ZLIBTESTSPEC = @ZLIBTESTSPEC@\n+ac_ct_AR = @ac_ct_AR@\n+ac_ct_AS = @ac_ct_AS@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+ac_ct_LD = @ac_ct_LD@\n+ac_ct_RANLIB = @ac_ct_RANLIB@\n+ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n@@ -760,11 +765,9 @@ build_os = @build_os@\n build_subdir = @build_subdir@\n build_vendor = @build_vendor@\n datadir = @datadir@\n-datarootdir = @datarootdir@\n dbexecdir = @dbexecdir@\n-docdir = @docdir@\n-dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n+extra_gij_ldflags = @extra_gij_ldflags@\n extra_ldflags = @extra_ldflags@\n extra_ldflags_libjava = @extra_ldflags_libjava@ $(am__append_5)\n gxx_include_dir = @gxx_include_dir@\n@@ -776,25 +779,21 @@ host_exeext = @host_exeext@\n host_os = @host_os@\n host_subdir = @host_subdir@\n host_vendor = @host_vendor@\n-htmldir = @htmldir@\n includedir = @includedir@\n infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n libstdcxx_incdir = @libstdcxx_incdir@\n-localedir = @localedir@\n localstatedir = @localstatedir@\n lt_ECHO = @lt_ECHO@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n mkinstalldirs = @mkinstalldirs@\n multi_basedir = @multi_basedir@\n oldincludedir = @oldincludedir@\n-pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n-psdir = @psdir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n subdirs = @subdirs@\n@@ -7973,7 +7972,8 @@ gc_analyze_LDADD = -L$(here)/.libs libgcj-tools.la libgcj.la\n gc_analyze_DEPENDENCIES = libgcj-tools.la libgcj.la libgcj.spec\n gij_SOURCES = \n gij_LDFLAGS = -rpath $(dbexecdir) -rpath $(toolexeclibdir) \\\n-\t-shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n+\t-shared-libgcc $(THREADLDFLAGS) $(extra_ldflags) \\\n+\t$(extra_gij_ldflags) \n \n gij_LINK = $(GCJLINK)\n gij_LDADD = -L$(here)/.libs libgij.la"}, {"sha": "e8cc23798077196aa59889e3f1579ca1997b551d", "filename": "libjava/configure", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=417e7bed131e9fbb05e1766c722d87f76f1868e7", "patch": "@@ -459,7 +459,7 @@ ac_includes_default=\"\\\n #endif\"\n \n ac_subdirs_all=\"$ac_subdirs_all classpath libltdl\"\n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os build_libsubdir build_subdir host_subdir target_subdir multi_basedir host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical LN_S mkinstalldirs JAVA_MAINTAINER_MODE_TRUE JAVA_MAINTAINER_MODE_FALSE CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LDFLAGS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE AS ac_ct_AS LD ac_ct_LD AR ac_ct_AR RANLIB ac_ct_RANLIB JAR ZIP UNZIP MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBGCJ_CFLAGS LIBGCJ_CXXFLAGS LIBGCJ_JAVAFLAGS LIBGCJ_LD_SYMBOLIC LIBGCJ_LD_SYMBOLIC_FUNCTIONS LIBGCJDEBUG TOOLKIT XLIB_AWT_TRUE XLIB_AWT_FALSE X_AWT_TRUE X_AWT_FALSE GCJ_FOR_ECJX GCJH host_exeext INCLTDL LIBLTDL DIRLTDL LIBTOOL SED EGREP FGREP GREP DUMPBIN ac_ct_DUMPBIN NM lt_ECHO CPP CPPFLAGS CXXCPP GCJ GCJFLAGS GCJDEPMODE am__fastdepGCJ_TRUE am__fastdepGCJ_FALSE subdirs TESTSUBDIR_TRUE TESTSUBDIR_FALSE ECJ_BUILD_JAR ECJ_JAR BUILD_ECJ1_TRUE BUILD_ECJ1_FALSE INSTALL_ECJ_JAR_TRUE INSTALL_ECJ_JAR_FALSE JAVA_HOME_SET_TRUE JAVA_HOME_SET_FALSE JAVA_HOME INTERPRETER INTERPRETER_TRUE INTERPRETER_FALSE LIBFFI LIBFFIINCS PLATFORM USING_WIN32_PLATFORM_TRUE USING_WIN32_PLATFORM_FALSE USING_POSIX_PLATFORM_TRUE USING_POSIX_PLATFORM_FALSE USING_DARWIN_CRT_TRUE USING_DARWIN_CRT_FALSE SYSTEMSPEC ZLIBSPEC ZLIBTESTSPEC X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS extra_ldflags_libjava extra_ldflags LIBSTDCXXSPEC LIBGCJTESTSPEC GCLIBS GCINCS GCDEPS GCSPEC JC1GCSPEC GCTESTSPEC USING_BOEHMGC_TRUE USING_BOEHMGC_FALSE USING_NOGC_TRUE USING_NOGC_FALSE THREADLIBS THREADINCS THREADDEPS THREADSPEC THREADSTARTFILESPEC THREADLDFLAGS THREADCXXFLAGS USING_POSIX_THREADS_TRUE USING_POSIX_THREADS_FALSE USING_WIN32_THREADS_TRUE USING_WIN32_THREADS_FALSE USING_NO_THREADS_TRUE USING_NO_THREADS_FALSE USE_LIBGCJ_BC_TRUE USE_LIBGCJ_BC_FALSE LIBGCJ_SPEC HASH_SYNC_SPEC USING_GCC_TRUE USING_GCC_FALSE LIBICONV LTLIBICONV PKG_CONFIG GTK_CFLAGS GTK_LIBS GLIB_CFLAGS GLIB_LIBS LIBART_CFLAGS LIBART_LIBS CLASSPATH_SEPARATOR ZLIBS SYS_ZLIBS ZINCS DIVIDESPEC CHECKREFSPEC EXCEPTIONSPEC BACKTRACESPEC IEEESPEC NATIVE_TRUE NATIVE_FALSE ENABLE_SHARED_TRUE ENABLE_SHARED_FALSE NEEDS_DATA_START_TRUE NEEDS_DATA_START_FALSE GCC_UNWIND_INCLUDE toolexecdir toolexecmainlibdir toolexeclibdir GCJVERSION dbexecdir gxx_include_dir libstdcxx_incdir PERL SYSDEP_SOURCES ANONVERSCRIPT_TRUE ANONVERSCRIPT_FALSE LD_START_STATIC_SPEC LD_FINISH_STATIC_SPEC here LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os build_libsubdir build_subdir host_subdir target_subdir multi_basedir host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical LN_S mkinstalldirs JAVA_MAINTAINER_MODE_TRUE JAVA_MAINTAINER_MODE_FALSE CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LDFLAGS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE AS ac_ct_AS LD ac_ct_LD AR ac_ct_AR RANLIB ac_ct_RANLIB JAR ZIP UNZIP MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBGCJ_CFLAGS LIBGCJ_CXXFLAGS LIBGCJ_JAVAFLAGS LIBGCJ_LD_SYMBOLIC LIBGCJ_LD_SYMBOLIC_FUNCTIONS LIBGCJDEBUG TOOLKIT XLIB_AWT_TRUE XLIB_AWT_FALSE X_AWT_TRUE X_AWT_FALSE GCJ_FOR_ECJX GCJH host_exeext INCLTDL LIBLTDL DIRLTDL LIBTOOL SED EGREP FGREP GREP DUMPBIN ac_ct_DUMPBIN NM lt_ECHO CPP CPPFLAGS CXXCPP GCJ GCJFLAGS GCJDEPMODE am__fastdepGCJ_TRUE am__fastdepGCJ_FALSE subdirs TESTSUBDIR_TRUE TESTSUBDIR_FALSE ECJ_BUILD_JAR ECJ_JAR BUILD_ECJ1_TRUE BUILD_ECJ1_FALSE INSTALL_ECJ_JAR_TRUE INSTALL_ECJ_JAR_FALSE JAVA_HOME_SET_TRUE JAVA_HOME_SET_FALSE JAVA_HOME INTERPRETER INTERPRETER_TRUE INTERPRETER_FALSE LIBFFI LIBFFIINCS PLATFORM USING_WIN32_PLATFORM_TRUE USING_WIN32_PLATFORM_FALSE USING_POSIX_PLATFORM_TRUE USING_POSIX_PLATFORM_FALSE USING_DARWIN_CRT_TRUE USING_DARWIN_CRT_FALSE SYSTEMSPEC ZLIBSPEC ZLIBTESTSPEC X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS extra_ldflags_libjava extra_gij_ldflags extra_ldflags LIBSTDCXXSPEC LIBGCJTESTSPEC GCLIBS GCINCS GCDEPS GCSPEC JC1GCSPEC GCTESTSPEC USING_BOEHMGC_TRUE USING_BOEHMGC_FALSE USING_NOGC_TRUE USING_NOGC_FALSE THREADLIBS THREADINCS THREADDEPS THREADSPEC THREADSTARTFILESPEC THREADLDFLAGS THREADCXXFLAGS USING_POSIX_THREADS_TRUE USING_POSIX_THREADS_FALSE USING_WIN32_THREADS_TRUE USING_WIN32_THREADS_FALSE USING_NO_THREADS_TRUE USING_NO_THREADS_FALSE USE_LIBGCJ_BC_TRUE USE_LIBGCJ_BC_FALSE LIBGCJ_SPEC HASH_SYNC_SPEC USING_GCC_TRUE USING_GCC_FALSE LIBICONV LTLIBICONV PKG_CONFIG GTK_CFLAGS GTK_LIBS GLIB_CFLAGS GLIB_LIBS LIBART_CFLAGS LIBART_LIBS CLASSPATH_SEPARATOR ZLIBS SYS_ZLIBS ZINCS DIVIDESPEC CHECKREFSPEC EXCEPTIONSPEC BACKTRACESPEC IEEESPEC NATIVE_TRUE NATIVE_FALSE ENABLE_SHARED_TRUE ENABLE_SHARED_FALSE NEEDS_DATA_START_TRUE NEEDS_DATA_START_FALSE GCC_UNWIND_INCLUDE toolexecdir toolexecmainlibdir toolexeclibdir GCJVERSION dbexecdir gxx_include_dir libstdcxx_incdir PERL SYSDEP_SOURCES ANONVERSCRIPT_TRUE ANONVERSCRIPT_FALSE LD_START_STATIC_SPEC LD_FINISH_STATIC_SPEC here LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -18992,15 +18992,15 @@ ac_x_header_dirs='\n /usr/openwin/share/include'\n \n if test \"$ac_x_includes\" = no; then\n-  # Guess where to find include files, by looking for Xlib.h.\n+  # Guess where to find include files, by looking for Intrinsic.h.\n   # First, try using that file with no special directory specified.\n   cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <X11/Xlib.h>\n+#include <X11/Intrinsic.h>\n _ACEOF\n if { (eval echo \"$as_me:$LINENO: \\\"$ac_cpp conftest.$ac_ext\\\"\") >&5\n   (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1\n@@ -19027,7 +19027,7 @@ else\n sed 's/^/| /' conftest.$ac_ext >&5\n \n   for ac_dir in $ac_x_header_dirs; do\n-  if test -r \"$ac_dir/X11/Xlib.h\"; then\n+  if test -r \"$ac_dir/X11/Intrinsic.h\"; then\n     ac_x_includes=$ac_dir\n     break\n   fi\n@@ -19041,7 +19041,7 @@ if test \"$ac_x_libraries\" = no; then\n   # See if we find them without any special options.\n   # Don't add to $LIBS permanently.\n   ac_save_LIBS=$LIBS\n-  LIBS=\"-lX11 $LIBS\"\n+  LIBS=\"-lXt $LIBS\"\n   if test x$gcc_no_link = xyes; then\n   { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n@@ -19053,11 +19053,11 @@ _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <X11/Xlib.h>\n+#include <X11/Intrinsic.h>\n int\n main ()\n {\n-XrmInitialize ()\n+XtMalloc (0)\n   ;\n   return 0;\n }\n@@ -20380,6 +20380,9 @@ case \"${host}\" in\n     # on Darwin -single_module speeds up loading of the dynamic libraries.\n     extra_ldflags_libjava=-Wl,-single_module\n     ;;\n+*-*-darwin[9]*)\n+    extra_gij_ldflags=-Wl,-allow_stack_execute\n+    ;;\n arm*linux*eabi)\n     # Some of the ARM unwinder code is actually in libstdc++.  We\n     # could in principle replicate it in libgcj, but it's better to\n@@ -20395,6 +20398,7 @@ esac\n \n \n \n+\n # Allow the GC to be disabled.  Can be useful when debugging.\n echo \"$as_me:$LINENO: checking for garbage collector to use\" >&5\n echo $ECHO_N \"checking for garbage collector to use... $ECHO_C\" >&6\n@@ -27268,7 +27272,7 @@ case \"${host}\" in\n  m68*-*-linux*)\n     SIGNAL_HANDLER=include/dwarf2-signal.h\n     ;;\n- powerpc*-*-darwin*)\n+ powerpc*-*-darwin* | i?86-*-darwin9* | x86_64-*-darwin9*)\n     SIGNAL_HANDLER=include/darwin-signal.h\n     ;;\n  *)\n@@ -29221,6 +29225,7 @@ s,@X_PRE_LIBS@,$X_PRE_LIBS,;t t\n s,@X_LIBS@,$X_LIBS,;t t\n s,@X_EXTRA_LIBS@,$X_EXTRA_LIBS,;t t\n s,@extra_ldflags_libjava@,$extra_ldflags_libjava,;t t\n+s,@extra_gij_ldflags@,$extra_gij_ldflags,;t t\n s,@extra_ldflags@,$extra_ldflags,;t t\n s,@LIBSTDCXXSPEC@,$LIBSTDCXXSPEC,;t t\n s,@LIBGCJTESTSPEC@,$LIBGCJTESTSPEC,;t t"}, {"sha": "06ff7fd078d466309d7a10c9a8f623548430798c", "filename": "libjava/configure.ac", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=417e7bed131e9fbb05e1766c722d87f76f1868e7", "patch": "@@ -788,6 +788,9 @@ case \"${host}\" in\n     # on Darwin -single_module speeds up loading of the dynamic libraries.\n     extra_ldflags_libjava=-Wl,-single_module\n     ;;\n+*-*-darwin[[9]]*)\n+    extra_gij_ldflags=-Wl,-allow_stack_execute\n+    ;;\n arm*linux*eabi)\n     # Some of the ARM unwinder code is actually in libstdc++.  We\n     # could in principle replicate it in libgcj, but it's better to\n@@ -798,6 +801,7 @@ arm*linux*eabi)\n     ;;\n esac\n AC_SUBST(extra_ldflags_libjava)\n+AC_SUBST(extra_gij_ldflags)\n AC_SUBST(extra_ldflags)\n AC_SUBST(LIBSTDCXXSPEC)\n \n@@ -1546,7 +1550,7 @@ case \"${host}\" in\n  m68*-*-linux*)\n     SIGNAL_HANDLER=include/dwarf2-signal.h\n     ;;\n- powerpc*-*-darwin*)\n+ powerpc*-*-darwin* | i?86-*-darwin9* | x86_64-*-darwin9*)\n     SIGNAL_HANDLER=include/darwin-signal.h\n     ;;\n  *)"}, {"sha": "b94905117553c54bd91b152c2e3dac532b99e2e4", "filename": "libjava/configure.host", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.host?ref=417e7bed131e9fbb05e1766c722d87f76f1868e7", "patch": "@@ -295,6 +295,17 @@ EOF\n \tslow_pthread_self=\n \tcan_unwind_signal=no\n \t;;\n+  i?86-*-darwin9*)\n+\tcan_unwind_signal=yes\n+\tDIVIDESPEC=-f%{m32:no-}%{!m32:%{!m64:no-}}%{m64:}use-divide-subroutine\n+        ;;\n+  x86_64-*-darwin9*)\n+\tenable_hash_synchronization_default=yes\n+\tslow_pthread_self=\n+\tcan_unwind_signal=yes\n+\tDIVIDESPEC=-fuse-divide-subroutine\n+\tCHECKREFSPEC=-fcheck-references\n+\t;;\n   *-*-freebsd*)\n \tslow_pthread_self=\n \t;;"}, {"sha": "f6406b37599c81c9d7525165fb39ac0f99a5816d", "filename": "libjava/darwin.cc", "status": "modified", "additions": 29, "deletions": 12, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Fdarwin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Fdarwin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fdarwin.cc?ref=417e7bed131e9fbb05e1766c722d87f76f1868e7", "patch": "@@ -1,6 +1,6 @@\n /* darwin.cc - class loader stuff for Darwin.  */\n \n-/* Copyright (C) 2004  Free Software Foundation\n+/* Copyright (C) 2004, 2007  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -21,26 +21,43 @@ details.  */\n    ourself.  */\n \n #include <stdint.h>\n-struct mach_header;\n-extern \"C\" void _dyld_register_func_for_add_image\n-  (void (*func)(const struct mach_header *mh, intptr_t vmaddr_slide));\n-extern \"C\" void _dyld_register_func_for_remove_image\n-  (void (*func)(const struct mach_header *mh, intptr_t vmaddr_slide));\n-extern \"C\" char *getsectdatafromheader\n-(const struct mach_header *mhp, const char *segname, const char *sectname,\n- uint32_t *size);\n+#if !defined (__LP64__)\n+  struct mach_header;\n+# define JAVA_MACH_HEADER mach_header\n+# define  mh_size_t uint32_t\n+  extern \"C\" void _dyld_register_func_for_add_image\n+    (void (*func)(const struct mach_header *mh, intptr_t vmaddr_slide));\n+  extern \"C\" void _dyld_register_func_for_remove_image\n+    (void (*func)(const struct mach_header *mh, intptr_t vmaddr_slide));\n+  extern \"C\" char *getsectdatafromheader\n+    (const struct mach_header *mhp, const char *segname, const char *sectname,\n+     uint32_t *size);\n+# define GETSECTDATA getsectdatafromheader\n+#else\n+  struct mach_header_64;\n+# define JAVA_MACH_HEADER mach_header_64\n+# define mh_size_t uint64_t\n+  extern \"C\" void _dyld_register_func_for_add_image\n+    (void (*func)(const struct mach_header_64 *mh, intptr_t vmaddr_slide));\n+  extern \"C\" void _dyld_register_func_for_remove_image\n+    (void (*func)(const struct mach_header_64 *mh, intptr_t vmaddr_slide));\n+  extern \"C\" char *getsectdatafromheader_64\n+    (const struct mach_header_64 *mhp, const char *segname,\n+     const char *sectname, uint64_t *size);\n+# define GETSECTDATA getsectdatafromheader_64\n+#endif\n \n /* When a new image is loaded, look to see if it has a jcr section\n    and if so register the classes listed in it.  */\n \n static void\n-darwin_java_register_dyld_add_image_hook (const struct mach_header *mh,\n+darwin_java_register_dyld_add_image_hook (const struct JAVA_MACH_HEADER *mh,\n \t\t\t\t\t  intptr_t slide)\n {\n   char *fde;\n-  uint32_t sz;\n+  mh_size_t sz;\n \n-  fde = getsectdatafromheader (mh, \"__DATA\", \"jcr\", &sz);\n+  fde = GETSECTDATA (mh, \"__DATA\", \"jcr\", &sz);\n   if (! fde)\n     return;\n   "}, {"sha": "b837ad3de2eae656b7a8be5ac7ae6aa1d662bb14", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=417e7bed131e9fbb05e1766c722d87f76f1868e7", "patch": "@@ -249,7 +249,6 @@ USING_WIN32_THREADS_TRUE = @USING_WIN32_THREADS_TRUE@\n VERSION = @VERSION@\n XLIB_AWT_FALSE = @XLIB_AWT_FALSE@\n XLIB_AWT_TRUE = @XLIB_AWT_TRUE@\n-XMKMF = @XMKMF@\n X_AWT_FALSE = @X_AWT_FALSE@\n X_AWT_TRUE = @X_AWT_TRUE@\n X_CFLAGS = @X_CFLAGS@\n@@ -261,9 +260,14 @@ ZIP = @ZIP@\n ZLIBS = @ZLIBS@\n ZLIBSPEC = @ZLIBSPEC@\n ZLIBTESTSPEC = @ZLIBTESTSPEC@\n+ac_ct_AR = @ac_ct_AR@\n+ac_ct_AS = @ac_ct_AS@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+ac_ct_LD = @ac_ct_LD@\n+ac_ct_RANLIB = @ac_ct_RANLIB@\n+ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n@@ -284,11 +288,9 @@ build_os = @build_os@\n build_subdir = @build_subdir@\n build_vendor = @build_vendor@\n datadir = @datadir@\n-datarootdir = @datarootdir@\n dbexecdir = @dbexecdir@\n-docdir = @docdir@\n-dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n+extra_gij_ldflags = @extra_gij_ldflags@\n extra_ldflags = @extra_ldflags@\n extra_ldflags_libjava = @extra_ldflags_libjava@\n gxx_include_dir = @gxx_include_dir@\n@@ -300,25 +302,21 @@ host_exeext = @host_exeext@\n host_os = @host_os@\n host_subdir = @host_subdir@\n host_vendor = @host_vendor@\n-htmldir = @htmldir@\n includedir = @includedir@\n infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n libstdcxx_incdir = @libstdcxx_incdir@\n-localedir = @localedir@\n localstatedir = @localstatedir@\n lt_ECHO = @lt_ECHO@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n mkinstalldirs = @mkinstalldirs@\n multi_basedir = @multi_basedir@\n oldincludedir = @oldincludedir@\n-pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n-psdir = @psdir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n subdirs = @subdirs@"}, {"sha": "07a133b376d4104e9fd2a48eb49cad9bcc397e6c", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=417e7bed131e9fbb05e1766c722d87f76f1868e7", "patch": "@@ -248,7 +248,6 @@ USING_WIN32_THREADS_TRUE = @USING_WIN32_THREADS_TRUE@\n VERSION = @VERSION@\n XLIB_AWT_FALSE = @XLIB_AWT_FALSE@\n XLIB_AWT_TRUE = @XLIB_AWT_TRUE@\n-XMKMF = @XMKMF@\n X_AWT_FALSE = @X_AWT_FALSE@\n X_AWT_TRUE = @X_AWT_TRUE@\n X_CFLAGS = @X_CFLAGS@\n@@ -260,9 +259,14 @@ ZIP = @ZIP@\n ZLIBS = @ZLIBS@\n ZLIBSPEC = @ZLIBSPEC@\n ZLIBTESTSPEC = @ZLIBTESTSPEC@\n+ac_ct_AR = @ac_ct_AR@\n+ac_ct_AS = @ac_ct_AS@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+ac_ct_LD = @ac_ct_LD@\n+ac_ct_RANLIB = @ac_ct_RANLIB@\n+ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n@@ -283,11 +287,9 @@ build_os = @build_os@\n build_subdir = @build_subdir@\n build_vendor = @build_vendor@\n datadir = @datadir@\n-datarootdir = @datarootdir@\n dbexecdir = @dbexecdir@\n-docdir = @docdir@\n-dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n+extra_gij_ldflags = @extra_gij_ldflags@\n extra_ldflags = @extra_ldflags@\n extra_ldflags_libjava = @extra_ldflags_libjava@\n gxx_include_dir = @gxx_include_dir@\n@@ -299,25 +301,21 @@ host_exeext = @host_exeext@\n host_os = @host_os@\n host_subdir = @host_subdir@\n host_vendor = @host_vendor@\n-htmldir = @htmldir@\n includedir = @includedir@\n infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n libstdcxx_incdir = @libstdcxx_incdir@\n-localedir = @localedir@\n localstatedir = @localstatedir@\n lt_ECHO = @lt_ECHO@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n mkinstalldirs = @mkinstalldirs@\n multi_basedir = @multi_basedir@\n oldincludedir = @oldincludedir@\n-pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n-psdir = @psdir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n subdirs = @subdirs@"}, {"sha": "2cec1566965dd7c0e6218ac0272a16bcf49b72cb", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/417e7bed131e9fbb05e1766c722d87f76f1868e7/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=417e7bed131e9fbb05e1766c722d87f76f1868e7", "patch": "@@ -429,6 +429,10 @@ proc libjava_arguments {{mode compile}} {\n \t    lappend args \"additional_flags=-bind_at_load\"\n \t    lappend args \"additional_flags=-multiply_defined suppress\"\n \t}\n+\tif { [istarget \"*-*-darwin9*\"] } {\n+\t    lappend args \"additional_flags=-Wl,-allow_stack_execute\"\n+\t}\n+\n     }\n \n     return $args"}]}