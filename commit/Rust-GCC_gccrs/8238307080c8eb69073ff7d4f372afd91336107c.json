{"sha": "8238307080c8eb69073ff7d4f372afd91336107c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIzODMwNzA4MGM4ZWI2OTA3M2ZmN2Q0ZjM3MmFmZDkxMzM2MTA3Yw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2005-05-14T02:33:25Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2005-05-14T02:33:25Z"}, "message": "cris.h (Node: Register Classes): Remove obsoleted comment regarding defined register classes.\n\n\t* config/cris/cris.h (Node: Register Classes): Remove obsoleted\n\tcomment regarding defined register classes.\n\t(LEGITIMIZE_RELOAD_ADDRESS): Do not define.\n\nFrom-SVN: r99692", "tree": {"sha": "f93a87e3665950f1b8a939382c29ba047551a47b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f93a87e3665950f1b8a939382c29ba047551a47b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8238307080c8eb69073ff7d4f372afd91336107c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8238307080c8eb69073ff7d4f372afd91336107c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8238307080c8eb69073ff7d4f372afd91336107c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8238307080c8eb69073ff7d4f372afd91336107c/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c80a9eb50f16fa7f8d60a8eb1b5e0f8405b29e38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c80a9eb50f16fa7f8d60a8eb1b5e0f8405b29e38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c80a9eb50f16fa7f8d60a8eb1b5e0f8405b29e38"}], "stats": {"total": 75, "additions": 6, "deletions": 69}, "files": [{"sha": "d27c6db7c5af1e28ea1964768243cc4517a8bd63", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8238307080c8eb69073ff7d4f372afd91336107c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8238307080c8eb69073ff7d4f372afd91336107c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8238307080c8eb69073ff7d4f372afd91336107c", "patch": "@@ -1,3 +1,9 @@\n+2005-05-14  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* config/cris/cris.h (Node: Register Classes): Remove obsoleted\n+\tcomment regarding defined register classes.\n+\t(LEGITIMIZE_RELOAD_ADDRESS): Do not define.\n+\n 2005-05-14  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-optimize.c (init_tree_optimization_passes): Move"}, {"sha": "dac03d21d4242062f0194af45e13fefe51a5920d", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8238307080c8eb69073ff7d4f372afd91336107c/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8238307080c8eb69073ff7d4f372afd91336107c/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=8238307080c8eb69073ff7d4f372afd91336107c", "patch": "@@ -502,11 +502,6 @@ extern int target_flags;\n \n /* Node: Register Classes */\n \n-/* CRIS has only one kind of registers, so NO_REGS and ALL_REGS\n-   are the only classes.  FIXME: It actually makes sense to have another\n-   class for special registers, and yet another class for the\n-   multiply-overflow register in v10; then a class for the return\n-   register also makes sense.  */\n enum reg_class \n   {\n     NO_REGS,\n@@ -1071,70 +1066,6 @@ struct cum_args {int regs;};\n    FIXME: Check and adjust for gcc-2.9x.  */\n #define LEGITIMIZE_ADDRESS(X, OLDX, MODE, WIN) {}\n \n-/* Kludge to solve Axis-990219: Work around imperfection in\n-   reload_load_address1:\n-    (plus (sign_extend (mem:qi (reg))) (reg))\n-   should be reloaded as (plus (reg) (reg)), not\n-    (plus (sign_extend (reg)) (reg)).\n-   There are no checks that reload_load_address_1 \"reloads\"\n-   addresses correctly, so invalidness is not caught or\n-   corrected.\n-    When the right thing happens in reload, the kludge can\n-   be removed; still not as of 2003-02-27.  */\n-\n-#define LEGITIMIZE_RELOAD_ADDRESS(X, MODE, OPNUM, TYPE, IND_LEVELS, WIN) \\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (GET_CODE (X) == PLUS\t\t\t\t\t\t\\\n-\t  && REG_P (XEXP (X, 1))\t\t\t\t\t\\\n-\t  && GET_CODE (XEXP (X, 0)) == SIGN_EXTEND\t\t\t\\\n-\t  && GET_CODE (XEXP (XEXP (X, 0), 0)) == MEM\t\t\t\\\n-\t  && (GET_MODE (XEXP (XEXP (X, 0), 0)) == HImode\t\t\\\n-\t      || GET_MODE (XEXP (XEXP (X, 0), 0)) == QImode)\t\t\\\n-\t  && (REG_P (XEXP (XEXP (XEXP (X, 0), 0), 0))\t\t\t\\\n-\t      || (GET_CODE (XEXP (XEXP (XEXP (X, 0), 0), 0))\t\t\\\n-\t\t  == POST_INC\t\t\t\t\t\t\\\n-\t\t  && REG_P (XEXP (XEXP (XEXP (XEXP (X, 0), 0), 0),\t\\\n-\t\t\t\t  0)))))\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  int something_reloaded = 0;\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\t  if (REGNO (XEXP (X, 1)) >= FIRST_PSEUDO_REGISTER)\t\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t      /* Second reg is pseudo, reload it.  */\t\t\t\\\n-\t      push_reload (XEXP (X, 1), NULL_RTX, &XEXP (X, 1), \t\\\n-\t\t\t   NULL,\t\t\t\t\t\\\n-\t\t\t   GENERAL_REGS, GET_MODE (X), VOIDmode, 0, 0,\t\\\n-\t\t\t   OPNUM, TYPE);\t\t\t\t\\\n-\t      something_reloaded = 1;\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\t  if (REG_P (XEXP (XEXP (XEXP (X, 0), 0), 0))\t\t\t\\\n-\t      && (REGNO (XEXP (XEXP (XEXP (X, 0), 0), 0))\t\t\\\n-\t\t  >= FIRST_PSEUDO_REGISTER))\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t      /* First one is a pseudo - reload that.  */\t\t\\\n-\t      push_reload (XEXP (XEXP (XEXP (X, 0), 0), 0), NULL_RTX,\t\\\n-\t\t\t   &XEXP (XEXP (XEXP (X, 0), 0), 0), NULL, \t\\\n-\t\t\t   GENERAL_REGS,\t\t\t\t\\\n-\t\t\t   GET_MODE (X), VOIDmode, 0, 0, OPNUM, TYPE);\t\\\n-\t      something_reloaded = 1;\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\t  if (! something_reloaded\t\t\t\t\t\\\n-\t      || (GET_CODE (XEXP (XEXP (X, 0), 0)) == POST_INC\t\t\\\n-\t\t  && (REGNO (XEXP (XEXP (XEXP (X, 0), 0), 0))\t\t\\\n-\t\t      >= FIRST_PSEUDO_REGISTER)))\t\t\t\\\n-\t    /* Reload the sign_extend.\tHappens if neither reg is a\t\\\n-\t       pseudo, or the first one was inside post_increment.  */\t\\\n-\t    push_reload (XEXP (X, 0), NULL_RTX, &XEXP (X, 0), NULL,\t\\\n-\t\t\t GENERAL_REGS, GET_MODE (X), VOIDmode, 0, 0,\t\\\n-\t\t\t OPNUM, TYPE);\t\t\t\t\t\\\n-\t  goto WIN;\t\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n /* In CRIS, only the postincrement address mode depends thus,\n    since the increment depends on the size of the operand.  */\n #define GO_IF_MODE_DEPENDENT_ADDRESS(ADDR, LABEL)\t\\"}]}