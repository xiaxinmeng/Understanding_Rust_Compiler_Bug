{"sha": "9c3183069b8b1815078bb33079fe3e148af32651", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMzMTgzMDY5YjhiMTgxNTA3OGJiMzMwNzlmZTNlMTQ4YWYzMjY1MQ==", "commit": {"author": {"name": "Manfred Hollstein", "email": "manfred@s-direktnet.de", "date": "1998-03-12T00:43:09Z"}, "committer": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1998-03-12T00:43:09Z"}, "message": "d\nIn gcc/:\n\t* i386.h (RTX_COSTS): Insert braces around nested if.\n\t(ADDITIONAL_REGISTER_NAMES): Insert braces around structured\n\telements.\n\t* gcc.c (default_compilers): Properly put brackets around array elements in\n\tinitializer.\n\t* getopt.c (_getopt_internal): Add explicit braces around nested if;\n\treformatted.\n\t* reg-stack.c (record_asm_reg_life): Add explicit braces around nested if's.\n\t(record_reg_life_pat): Add explicit parens around && and || in expression.\n\t(stack_reg_life_analysis): Add parens around assignment used as expression.\n\t(convert_regs): Likewise.\nIn gcc/cp/:\n\t* lang-specs.h: Properly put brackets around array elements in initializer.\n\t* typeck.c (build_binary_op_nodefault): Correctly place parens around\n\t&& and || in expression.\nIn gcc/f/:\n\t* lang-specs.h: Properly put brackets around array elements in initializer.\n\nFrom-SVN: r18500", "tree": {"sha": "96db34d712de885f746a5676e4a8585ec0844711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96db34d712de885f746a5676e4a8585ec0844711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c3183069b8b1815078bb33079fe3e148af32651", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3183069b8b1815078bb33079fe3e148af32651", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c3183069b8b1815078bb33079fe3e148af32651", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3183069b8b1815078bb33079fe3e148af32651/comments", "author": null, "committer": null, "parents": [{"sha": "54d262334a19f37c50ef83f08646a5e4fdc31f4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54d262334a19f37c50ef83f08646a5e4fdc31f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54d262334a19f37c50ef83f08646a5e4fdc31f4e"}], "stats": {"total": 156, "additions": 89, "deletions": 67}, "files": [{"sha": "1dc85f795daabc856541cf1b57106247a2db99f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3183069b8b1815078bb33079fe3e148af32651/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3183069b8b1815078bb33079fe3e148af32651/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c3183069b8b1815078bb33079fe3e148af32651", "patch": "@@ -1,3 +1,20 @@\n+Thu Mar 12 09:39:40 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n+\n+\t* i386.h (RTX_COSTS): Insert braces around nested if.\n+\t(ADDITIONAL_REGISTER_NAMES): Insert braces around structured\n+\telements.\n+\n+\t* gcc.c (default_compilers): Properly put brackets around array elements in\n+\tinitializer.\n+\n+\t* getopt.c (_getopt_internal): Add explicit braces around nested if;\n+\treformatted.\n+\n+\t* reg-stack.c (record_asm_reg_life): Add explicit braces around nested if's.\n+\t(record_reg_life_pat): Add explicit parens around && and || in expression.\n+\t(stack_reg_life_analysis): Add parens around assignment used as expression.\n+\t(convert_regs): Likewise.\n+\n Thu Mar 12 09:25:29 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n \n \t* bitmap.c (bitmap_element_allocate): Remove unused parameter;"}, {"sha": "f47ad7023df758efe68fe9ecec10900e3b531422", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3183069b8b1815078bb33079fe3e148af32651/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3183069b8b1815078bb33079fe3e148af32651/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9c3183069b8b1815078bb33079fe3e148af32651", "patch": "@@ -1,3 +1,10 @@\n+Thu Mar 12 09:39:40 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n+\n+\t* lang-specs.h: Properly put brackets around array elements in initializer.\n+\n+\t* typeck.c (build_binary_op_nodefault): Correctly place parens around\n+\t&& and || in expression.\n+\n Thu Mar 12 09:26:04 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n \n \t* call.c (default_parm_conversions): Remove prototype definition."}, {"sha": "f6f505caae249e0b42a446c9f4f8acf740692d09", "filename": "gcc/getopt.c", "status": "modified", "additions": 41, "deletions": 48, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3183069b8b1815078bb33079fe3e148af32651/gcc%2Fgetopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3183069b8b1815078bb33079fe3e148af32651/gcc%2Fgetopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgetopt.c?ref=9c3183069b8b1815078bb33079fe3e148af32651", "patch": "@@ -6,23 +6,23 @@\n    Copyright (C) 1987, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97\n    \tFree Software Foundation, Inc.\n \n-NOTE: The canonical source of this file is maintained with the GNU C Library.\n-Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n-\n-This program is free software; you can redistribute it and/or modify it\n-under the terms of the GNU General Public License as published by the\n-Free Software Foundation; either version 2, or (at your option) any\n-later version.\n-\n-This program is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program; if not, write to the Free Software\n-Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-USA.  */\n+   NOTE: The canonical source of this file is maintained with the GNU C Library.\n+   Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n+\n+   This program is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by the\n+   Free Software Foundation; either version 2, or (at your option) any\n+   later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+   USA.  */\n \f\n /* This tells Alpha OSF/1 not to define a getopt prototype in <stdio.h>.\n    Ditto for AIX 3.2 and <stdlib.h>.  */\n@@ -79,12 +79,6 @@ USA.  */\n #endif\n #endif\n \n-#if defined (WIN32) && !defined (__CYGWIN32__)\n-/* It's not Unix, really.  See?  Capital letters.  */\n-#include <windows.h>\n-#define getpid() GetCurrentProcessId()\n-#endif\n-\n #ifndef _\n /* This is for other GNU distributions with internationalized messages.\n    When compiling libc, the _ macro is predefined.  */\n@@ -262,8 +256,6 @@ static int nonoption_flags_len;\n static int original_argc;\n static char *const *original_argv;\n \n-extern pid_t __libc_pid;\n-\n /* Make sure the environment variable bash 2.0 puts in the environment\n    is valid for the getopt call we must make sure that the ARGV passed\n    to getopt is that one passed to the process.  */\n@@ -276,7 +268,9 @@ store_args_and_env (int argc, char *const *argv)\n   original_argc = argc;\n   original_argv = argv;\n }\n+# ifdef text_set_element\n text_set_element (__libc_subinit, store_args_and_env);\n+# endif /* text_set_element */\n \n # define SWAP_FLAGS(ch1, ch2) \\\n   if (nonoption_flags_len > 0)\t\t\t\t\t\t      \\\n@@ -329,9 +323,9 @@ exchange (argv)\n \tnonoption_flags_len = nonoption_flags_max_len = 0;\n       else\n \t{\n-\t  memcpy (new_str, __getopt_nonoption_flags, nonoption_flags_max_len);\n-\t  memset (&new_str[nonoption_flags_max_len], '\\0',\n-\t\t  top + 1 - nonoption_flags_max_len);\n+\t  memset (__mempcpy (new_str, __getopt_nonoption_flags,\n+\t\t\t     nonoption_flags_max_len),\n+\t\t  '\\0', top + 1 - nonoption_flags_max_len);\n \t  nonoption_flags_max_len = top + 1;\n \t  __getopt_nonoption_flags = new_str;\n \t}\n@@ -440,11 +434,8 @@ _getopt_initialize (argc, argv, optstring)\n \t      if (__getopt_nonoption_flags == NULL)\n \t\tnonoption_flags_max_len = -1;\n \t      else\n-\t\t{\n-\t\t  memcpy (__getopt_nonoption_flags, orig_str, len);\n-\t\t  memset (&__getopt_nonoption_flags[len], '\\0',\n-\t\t\t  nonoption_flags_max_len - len);\n-\t\t}\n+\t\tmemset (__mempcpy (__getopt_nonoption_flags, orig_str, len),\n+\t\t\t'\\0', nonoption_flags_max_len - len);\n \t    }\n \t}\n       nonoption_flags_len = nonoption_flags_max_len;\n@@ -699,21 +690,23 @@ _getopt_internal (argc, argv, optstring, longopts, longind, long_only)\n \t      else\n \t\t{\n \t\t  if (opterr)\n-\t\t   if (argv[optind - 1][1] == '-')\n-\t\t    /* --option */\n-\t\t    fprintf (stderr,\n-\t\t     _(\"%s: option `--%s' doesn't allow an argument\\n\"),\n-\t\t     argv[0], pfound->name);\n-\t\t   else\n-\t\t    /* +option or -option */\n-\t\t    fprintf (stderr,\n-\t\t     _(\"%s: option `%c%s' doesn't allow an argument\\n\"),\n-\t\t     argv[0], argv[optind - 1][0], pfound->name);\n-\n-\t\t  nextchar += strlen (nextchar);\n-\n-\t\t  optopt = pfound->val;\n-\t\t  return '?';\n+\t\t    {\n+\t\t      if (argv[optind - 1][1] == '-')\n+\t\t\t/* --option */\n+\t\t\tfprintf (stderr,\n+\t\t\t\t _(\"%s: option `--%s' doesn't allow an argument\\n\"),\n+\t\t\t\t argv[0], pfound->name);\n+\t\t      else\n+\t\t\t/* +option or -option */\n+\t\t\tfprintf (stderr,\n+\t\t\t\t _(\"%s: option `%c%s' doesn't allow an argument\\n\"),\n+\t\t\t\t argv[0], argv[optind - 1][0], pfound->name);\n+\n+\t\t      nextchar += strlen (nextchar);\n+\n+\t\t      optopt = pfound->val;\n+\t\t      return '?';\n+\t\t    }\n \t\t}\n \t    }\n \t  else if (pfound->has_arg == 1)"}, {"sha": "79a16cd4c698af0b0472b7f6f28a0f7718a767ed", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 24, "deletions": 19, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3183069b8b1815078bb33079fe3e148af32651/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3183069b8b1815078bb33079fe3e148af32651/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=9c3183069b8b1815078bb33079fe3e148af32651", "patch": "@@ -940,14 +940,15 @@ record_asm_reg_life (insn, regstack, operands, constraints,\n   bzero ((char *) reg_used_as_output, sizeof (reg_used_as_output));\n   for (i = 0; i < n_outputs; i++)\n     if (STACK_REG_P (operands[i]))\n-      if (reg_class_size[(int) operand_class[i]] != 1)\n-\t{\n-\t  error_for_asm\n-\t    (insn, \"Output constraint %d must specify a single register\", i);\n-\t  malformed_asm = 1;\n-\t}\n-      else\n-\treg_used_as_output[REGNO (operands[i])] = 1;\n+      {\n+\tif (reg_class_size[(int) operand_class[i]] != 1)\n+\t  {\n+\t    error_for_asm (insn, \"Output constraint %d must specify a single register\", i);\n+\t    malformed_asm = 1;\n+\t  }\n+        else\n+\t  reg_used_as_output[REGNO (operands[i])] = 1;\n+      }\n \n \n   /* Search for first non-popped reg.  */\n@@ -1037,10 +1038,12 @@ record_asm_reg_life (insn, regstack, operands, constraints,\n       rtx op = operands[i];\n \n       if (! STACK_REG_P (op))\n-\tif (stack_regs_mentioned_p (op))\n-\t  abort ();\n-\telse\n-\t  continue;\n+\t{\n+\t  if (stack_regs_mentioned_p (op))\n+\t    abort ();\n+\t  else\n+\t    continue;\n+\t}\n \n       /* Each destination is dead before this insn.  If the\n \t destination is not used after this insn, record this with\n@@ -1057,10 +1060,12 @@ record_asm_reg_life (insn, regstack, operands, constraints,\n   for (i = first_input; i < first_input + n_inputs; i++)\n     {\n       if (! STACK_REG_P (operands[i]))\n-\tif (stack_regs_mentioned_p (operands[i]))\n-\t  abort ();\n-\telse\n-\t  continue;\n+\t{\n+\t  if (stack_regs_mentioned_p (operands[i]))\n+\t    abort ();\n+\t  else\n+\t    continue;\n+\t}\n \n       /* If an input is dead after the insn, record a death note.\n \t But don't record a death note if there is already a death note,\n@@ -1111,7 +1116,7 @@ record_reg_life_pat (pat, src, dest, douse)\n     }\n \n   /* We don't need to consider either of these cases.  */\n-  if (GET_CODE (pat) == USE && !douse || GET_CODE (pat) == CLOBBER)\n+  if ((GET_CODE (pat) == USE && !douse) || GET_CODE (pat) == CLOBBER)\n     return;\n \n   fmt = GET_RTX_FORMAT (GET_CODE (pat));\n@@ -1469,7 +1474,7 @@ stack_reg_life_analysis (first, stackentry)\n    {\n      rtx retvalue;\n \n-     if (retvalue = stack_result (current_function_decl))\n+     if ((retvalue = stack_result (current_function_decl)))\n       {\n         /* Find all RETURN insns and mark them.  */\n \n@@ -3129,7 +3134,7 @@ convert_regs ()\n      value_reg_low = value_reg_high = -1;\n       {\n         rtx retvalue;\n-        if (retvalue = stack_result (current_function_decl))\n+        if ((retvalue = stack_result (current_function_decl)))\n \t {\n \t   value_reg_low = REGNO (retvalue);\n \t   value_reg_high = value_reg_low +"}]}