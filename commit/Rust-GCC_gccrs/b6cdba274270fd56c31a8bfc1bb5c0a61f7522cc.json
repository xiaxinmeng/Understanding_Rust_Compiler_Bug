{"sha": "b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZjZGJhMjc0MjcwZmQ1NmMzMWE4YmZjMWJiNWMwYTYxZjc1MjJjYw==", "commit": {"author": {"name": "Uttam Pawar", "email": "uttamp@us.ibm.com", "date": "2006-01-31T21:39:32Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2006-01-31T21:39:32Z"}, "message": "re PR middle-end/25933 (memory leaks)\n\n2006-01-31  Uttam Pawar  <uttamp@us.ibm.com>\n\n        PR middle-end/25933\n        * loop-unroll.c (unroll_loop_runtime_iterations): Free\n        dom_bbs pointer.\n        * tree-ssa-live.c (type_var_init): Allocate bitmap after\n        call to tpa_init.\n\nFrom-SVN: r110449", "tree": {"sha": "62c6f21b5f57fbd7f69d0f1096dfb0d88d89ed8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62c6f21b5f57fbd7f69d0f1096dfb0d88d89ed8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc/comments", "author": null, "committer": null, "parents": [{"sha": "03e34d09a5f61ba6b862a6d0e8845408d98556e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e34d09a5f61ba6b862a6d0e8845408d98556e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03e34d09a5f61ba6b862a6d0e8845408d98556e8"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "ba74dcb333252f41a221b7011fb560105785b867", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc", "patch": "@@ -1,3 +1,11 @@\n+2006-01-31  Uttam Pawar  <uttamp@us.ibm.com>\n+\n+\tPR middle-end/25933\n+\t* loop-unroll.c (unroll_loop_runtime_iterations): Free\n+\tdom_bbs pointer.\n+\t* tree-ssa-live.c (type_var_init): Allocate bitmap after\n+\tcall to tpa_init.\n+\n 2006-01-31  Marcin Dalecki  <martin@dalecki.de>\n \n \t* tree-vrp.c: Use XNEW/XCNEW allocation wrappers."}, {"sha": "48f9deb7bd2ffd0a5b8dd3c693b0ab2bcb7af75c", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc", "patch": "@@ -1167,6 +1167,9 @@ unroll_loop_runtime_iterations (struct loops *loops, struct loop *loop)\n \t     \";; Unrolled loop %d times, counting # of iterations \"\n \t     \"in runtime, %i insns\\n\",\n \t     max_unroll, num_loop_insns (loop));\n+\n+  if (dom_bbs)\n+    free (dom_bbs);\n }\n \n /* Decide whether to simply peel LOOP and how much.  */"}, {"sha": "5b9ead1f9278f55696e084918a498b194a83ecd4", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=b6cdba274270fd56c31a8bfc1bb5c0a61f7522cc", "patch": "@@ -1078,13 +1078,13 @@ type_var_init (var_map map)\n   tree t;\n   sbitmap seen;\n \n-  seen = sbitmap_alloc (num_partitions);\n-  sbitmap_zero (seen);\n-\n   tv = tpa_init (map);\n   if (!tv)\n     return NULL;\n \n+  seen = sbitmap_alloc (num_partitions);\n+  sbitmap_zero (seen);\n+\n   for (x = num_partitions - 1; x >= 0; x--)\n     {\n       t = partition_to_var (map, x);"}]}