{"sha": "badd1ac23d24664b2258b1db4d49f37a3f60ccca", "node_id": "C_kwDOANBUbNoAKGJhZGQxYWMyM2QyNDY2NGIyMjU4YjFkYjRkNDlmMzdhM2Y2MGNjY2E", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2022-10-06T11:08:40Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2022-10-06T11:08:40Z"}, "message": "aarch64: Add test for LDAR generation from __atomic_load_n\n\nI'd like a test to check the generation of LDAR for atomic_load_n.\nNo new functionality added.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/aarch64/ldar_1.c: New test.", "tree": {"sha": "29b2482e019c711c7c5a3d460e6f3da9410ac651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29b2482e019c711c7c5a3d460e6f3da9410ac651"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/badd1ac23d24664b2258b1db4d49f37a3f60ccca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/badd1ac23d24664b2258b1db4d49f37a3f60ccca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/badd1ac23d24664b2258b1db4d49f37a3f60ccca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/badd1ac23d24664b2258b1db4d49f37a3f60ccca/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db2f5d661239737157cf131de7d4df1c17d8d88d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db2f5d661239737157cf131de7d4df1c17d8d88d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db2f5d661239737157cf131de7d4df1c17d8d88d"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "d968a72b30f7c84a7822baef7ea28d1f31b7195a", "filename": "gcc/testsuite/gcc.target/aarch64/ldar_1.c", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/badd1ac23d24664b2258b1db4d49f37a3f60ccca/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fldar_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/badd1ac23d24664b2258b1db4d49f37a3f60ccca/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fldar_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fldar_1.c?ref=badd1ac23d24664b2258b1db4d49f37a3f60ccca", "patch": "@@ -0,0 +1,66 @@\n+/* Test the LDAR instruction generation from atomic acquire loads.  */\n+/* { dg-do assemble } */\n+/* { dg-additional-options \"--save-temps -O1\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" \"\" } } */\n+\n+#include <stdint.h>\n+\n+#pragma GCC target \"+norcpc\"\n+\n+uint8_t v_uint8_t;\n+uint16_t v_uint16_t;\n+uint32_t v_uint32_t;\n+uint64_t v_uint64_t;\n+\n+/*\n+** load_uint8_t:\n+**      ...\n+**      ldarb\tw0, \\[x[0-9]+\\]\n+**      ret\n+*/\n+\n+uint8_t\n+load_uint8_t (void)\n+{\n+  return __atomic_load_n (&v_uint8_t, __ATOMIC_ACQUIRE);\n+}\n+\n+/*\n+** load_uint16_t:\n+**      ...\n+**      ldarh\tw0, \\[x[0-9]+\\]\n+**      ret\n+*/\n+\n+uint16_t\n+load_uint16_t (void)\n+{\n+  return __atomic_load_n (&v_uint16_t, __ATOMIC_ACQUIRE);\n+}\n+\n+/*\n+** load_uint32_t:\n+**      ...\n+**      ldar\tw0, \\[x[0-9]+\\]\n+**      ret\n+*/\n+\n+uint32_t\n+load_uint32_t (void)\n+{\n+  return __atomic_load_n (&v_uint32_t, __ATOMIC_ACQUIRE);\n+}\n+\n+/*\n+** load_uint64_t:\n+**      ...\n+**      ldar\tx0, \\[x[0-9]+\\]\n+**      ret\n+*/\n+\n+uint64_t\n+load_uint64_t (void)\n+{\n+  return __atomic_load_n (&v_uint64_t, __ATOMIC_ACQUIRE);\n+}\n+"}]}