{"sha": "a634323ae02c99a5a7e2b7c9674109ed2af6c969", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYzNDMyM2FlMDJjOTlhNWE3ZTJiN2M5Njc0MTA5ZWQyYWY2Yzk2OQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2014-07-25T19:09:56Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-07-25T19:09:56Z"}, "message": "simplify.c (gfc_simplify_storage_size): Use proper integer kind for the returned value.\n\n2014-07-25  Tobias Burnus  <burnus@net-b.de>\n\n        * simplify.c (gfc_simplify_storage_size): Use proper\n        integer kind for the returned value.\n\n2014-07-25  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.dg/storage_size_5.f90: New.\n\nFrom-SVN: r213060", "tree": {"sha": "73b2d7327321db66dbd5ae0f98398576f7b65ee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73b2d7327321db66dbd5ae0f98398576f7b65ee3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a634323ae02c99a5a7e2b7c9674109ed2af6c969", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a634323ae02c99a5a7e2b7c9674109ed2af6c969", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a634323ae02c99a5a7e2b7c9674109ed2af6c969", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a634323ae02c99a5a7e2b7c9674109ed2af6c969/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a4b0388b2453efd5d9cb4caf38608e7be4d8e007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b0388b2453efd5d9cb4caf38608e7be4d8e007", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4b0388b2453efd5d9cb4caf38608e7be4d8e007"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "8071e117e56749d1bf3b6d65f0c15553d165687f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a634323ae02c99a5a7e2b7c9674109ed2af6c969/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a634323ae02c99a5a7e2b7c9674109ed2af6c969/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a634323ae02c99a5a7e2b7c9674109ed2af6c969", "patch": "@@ -1,3 +1,8 @@\n+2014-07-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* simplify.c (gfc_simplify_storage_size): Use proper\n+\tinteger kind for the returned value.\n+\n 2014-07-24  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* intrinsic.texi (Intrinsic Procedures) <ATOMIC_DEFINE>: Move to"}, {"sha": "d4a67ada3dab1656c85bd788fa0e6f3eb35d90c9", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a634323ae02c99a5a7e2b7c9674109ed2af6c969/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a634323ae02c99a5a7e2b7c9674109ed2af6c969/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=a634323ae02c99a5a7e2b7c9674109ed2af6c969", "patch": "@@ -5841,11 +5841,9 @@ gfc_simplify_storage_size (gfc_expr *x,\n   if (k == -1)\n     return &gfc_bad_expr;\n \n-  result = gfc_get_constant_expr (BT_INTEGER, gfc_index_integer_kind,\n-\t\t\t\t  &x->where);\n+  result = gfc_get_constant_expr (BT_INTEGER, k, &x->where);\n \n   mpz_set_si (result->value.integer, gfc_element_size (x));\n-\n   mpz_mul_ui (result->value.integer, result->value.integer, BITS_PER_UNIT);\n \n   return range_check (result, \"STORAGE_SIZE\");"}, {"sha": "ebf7badad8272993bb0fa00344c2d85cf14737a0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a634323ae02c99a5a7e2b7c9674109ed2af6c969/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a634323ae02c99a5a7e2b7c9674109ed2af6c969/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a634323ae02c99a5a7e2b7c9674109ed2af6c969", "patch": "@@ -1,3 +1,7 @@\n+2014-07-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/storage_size_5.f90: New.\n+\n 2014-07-25  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/61762"}, {"sha": "ae0f12661f089dd03fd121215f278b74c49f08e3", "filename": "gcc/testsuite/gfortran.dg/storage_size_5.f90", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a634323ae02c99a5a7e2b7c9674109ed2af6c969/gcc%2Ftestsuite%2Fgfortran.dg%2Fstorage_size_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a634323ae02c99a5a7e2b7c9674109ed2af6c969/gcc%2Ftestsuite%2Fgfortran.dg%2Fstorage_size_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstorage_size_5.f90?ref=a634323ae02c99a5a7e2b7c9674109ed2af6c969", "patch": "@@ -0,0 +1,44 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+subroutine test()\n+  implicit none\n+  integer :: i0, i1, i2, i3, i4\n+  i0 = kind(STORAGE_SIZE(5))\n+  i1 = kind(STORAGE_SIZE(5, kind=1))\n+  i2 = kind(STORAGE_SIZE(5, kind=2))\n+  i3 = kind(STORAGE_SIZE(5, kind=4))\n+  i4 = kind(STORAGE_SIZE(5, kind=8))\n+end subroutine test\n+\n+subroutine test2(x)\n+  implicit none\n+  class(*) :: x\n+  integer :: j0, j1, j2, j3, j4\n+  integer(1) :: k1\n+  integer(2) :: k2\n+  j0 = kind(STORAGE_SIZE(x))\n+  j1 = kind(STORAGE_SIZE(x, kind=1))\n+  j2 = kind(STORAGE_SIZE(x, kind=2))\n+  j3 = kind(STORAGE_SIZE(x, kind=4))\n+  j4 = kind(STORAGE_SIZE(x, kind=8))\n+\n+  k1 = STORAGE_SIZE(x, kind=1)\n+  k2 = STORAGE_SIZE(x, kind=2)\n+end subroutine test2\n+\n+! { dg-final { scan-tree-dump-times \"i0 = 4;\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"i1 = 1;\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"i2 = 2;\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"i3 = 4;\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"i4 = 8;\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"j0 = 4;\" 1 \"original\" } }\n+\n+! { dg-final { scan-tree-dump-times \"j1 = 1;\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"j2 = 2;\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"j3 = 4;\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"j4 = 8;\" 1 \"original\" } }\n+\n+! { dg-final { scan-tree-dump-times \"k1 = \\\\(integer\\\\(kind=1\\\\)\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"k2 = \\\\(integer\\\\(kind=2\\\\)\\\\)\" 1 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}