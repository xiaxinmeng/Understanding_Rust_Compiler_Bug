{"sha": "d7a0e799d357c10f8fb0312c34b9176c026ca7d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdhMGU3OTlkMzU3YzEwZjhmYjAzMTJjMzRiOTE3NmMwMjZjYTdkOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-08-22T01:53:38Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-22T01:53:38Z"}, "message": "fibheap.h: Tidy formatting.\n\n        * fibheap.h: Tidy formatting.\n        (fibnode_t): Limit degree to 31 bits to avoid warning.\n\nFrom-SVN: r45088", "tree": {"sha": "bf5b9228672cc34590f534ae9519ec22238e8b14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf5b9228672cc34590f534ae9519ec22238e8b14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7a0e799d357c10f8fb0312c34b9176c026ca7d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7a0e799d357c10f8fb0312c34b9176c026ca7d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7a0e799d357c10f8fb0312c34b9176c026ca7d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7a0e799d357c10f8fb0312c34b9176c026ca7d9/comments", "author": null, "committer": null, "parents": [{"sha": "830a47ec5e570f36aeee837b24c37caa56cb9da8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/830a47ec5e570f36aeee837b24c37caa56cb9da8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/830a47ec5e570f36aeee837b24c37caa56cb9da8"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "98beacb7c8c858f2666cb4166a9412993d253784", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a0e799d357c10f8fb0312c34b9176c026ca7d9/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a0e799d357c10f8fb0312c34b9176c026ca7d9/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=d7a0e799d357c10f8fb0312c34b9176c026ca7d9", "patch": "@@ -1,3 +1,8 @@\n+2001-08-21  Richard Henderson  <rth@redhat.com>\n+\n+\t* fibheap.h: Tidy formatting.\n+\t(fibnode_t): Limit degree to 31 bits to avoid warning.\n+\n 2001-08-20  Andrew Cagney  <ac131313@redhat.com>\n \n \t* floatformat.h (floatformat_arm_ext): Document as deprecated."}, {"sha": "06f4b39e39011dbc9b0e2f9f9ed069e508037721", "filename": "include/fibheap.h", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a0e799d357c10f8fb0312c34b9176c026ca7d9/include%2Ffibheap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a0e799d357c10f8fb0312c34b9176c026ca7d9/include%2Ffibheap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Ffibheap.h?ref=d7a0e799d357c10f8fb0312c34b9176c026ca7d9", "patch": "@@ -19,13 +19,12 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* Fibonacci heaps are somewhat complex, but, there's an\n-   article in DDJ on them  that explains them pretty well:\n+/* Fibonacci heaps are somewhat complex, but, there's an article in\n+   DDJ that explains them pretty well:\n \n    http://www.ddj.com/articles/1997/9701/9701o/9701o.htm?topic=algoritms\n \n-   Introduction to algorithms by Corman and Rivest also goes over\n-   them.\n+   Introduction to algorithms by Corman and Rivest also goes over them.\n \n    The original paper that introduced them is \"Fibonacci heaps and their\n    uses in improved network optimization algorithms\" by Tarjan and\n@@ -36,45 +35,47 @@ Boston, MA 02111-1307, USA.  */\n    ExtractMin: O(lg n) amortized. O(n) worst case.\n    DecreaseKey: O(1) amortized.  O(lg n) worst case. \n    Insert: O(2) amortized. O(1) actual.  \n-   Union: O(1) amortized. O(1) actual.\n-\n-  \n-*/\n+   Union: O(1) amortized. O(1) actual.  */\n \n #ifndef _FIBHEAP_H_\n #define _FIBHEAP_H_\n \n #include <ansidecl.h>\n \n+typedef long fibheapkey_t;\n+\n typedef struct fibheap\n {\n   size_t nodes;\n   struct fibnode *min;\n   struct fibnode *root;\n } *fibheap_t;\n-typedef long fibheapkey_t;\n+\n typedef struct fibnode\n {\n   struct fibnode *parent;\n   struct fibnode *child;\n   struct fibnode *left;\n   struct fibnode *right;\n-  unsigned int degree : sizeof(size_t) * CHAR_BIT - 2;\n-  unsigned int mark:1;\n   fibheapkey_t key;\n   void *data;\n+  unsigned int degree : 31;\n+  unsigned int mark : 1;\n } *fibnode_t;\n \n extern fibheap_t fibheap_new PARAMS ((void));\n extern fibnode_t fibheap_insert PARAMS ((fibheap_t, fibheapkey_t, void *));\n extern int fibheap_empty PARAMS ((fibheap_t));\n extern fibheapkey_t fibheap_min_key PARAMS ((fibheap_t));\n-extern fibheapkey_t fibheap_replace_key PARAMS ((fibheap_t, fibnode_t, fibheapkey_t));\n-extern void *fibheap_replace_key_data PARAMS ((fibheap_t, fibnode_t, fibheapkey_t, void *));\n+extern fibheapkey_t fibheap_replace_key PARAMS ((fibheap_t, fibnode_t,\n+\t\t\t\t\t\t fibheapkey_t));\n+extern void *fibheap_replace_key_data PARAMS ((fibheap_t, fibnode_t,\n+\t\t\t\t\t       fibheapkey_t, void *));\n extern void *fibheap_extract_min PARAMS ((fibheap_t));\n extern void *fibheap_min PARAMS ((fibheap_t));\n extern void *fibheap_replace_data PARAMS ((fibheap_t, fibnode_t, void *));\n extern void *fibheap_delete_node PARAMS ((fibheap_t, fibnode_t));\n extern void fibheap_delete PARAMS ((fibheap_t));\n extern fibheap_t fibheap_union PARAMS ((fibheap_t, fibheap_t));\n+\n #endif /* _FIBHEAP_H_ */"}]}