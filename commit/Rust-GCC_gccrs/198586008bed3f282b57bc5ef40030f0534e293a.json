{"sha": "198586008bed3f282b57bc5ef40030f0534e293a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk4NTg2MDA4YmVkM2YyODJiNTdiYzVlZjQwMDMwZjA1MzRlMjkzYQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1992-07-22T20:01:13Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1992-07-22T20:01:13Z"}, "message": "(EXTRA_CONSTRAINT): Add new 'T' and 'U' constraints\nwhich check for aligned accesses to memory and register pairs.\n\nFrom-SVN: r1661", "tree": {"sha": "e55a726e67f4c4f2b047fd887516731c8c7b3427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e55a726e67f4c4f2b047fd887516731c8c7b3427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/198586008bed3f282b57bc5ef40030f0534e293a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198586008bed3f282b57bc5ef40030f0534e293a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/198586008bed3f282b57bc5ef40030f0534e293a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198586008bed3f282b57bc5ef40030f0534e293a/comments", "author": null, "committer": null, "parents": [{"sha": "0fb5ac6f94849fe7d5e4091a1cd3615f499d108b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb5ac6f94849fe7d5e4091a1cd3615f499d108b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fb5ac6f94849fe7d5e4091a1cd3615f499d108b"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "b4f5f6969243d3ea9b38a65987da8880b42ee892", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/198586008bed3f282b57bc5ef40030f0534e293a/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/198586008bed3f282b57bc5ef40030f0534e293a/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=198586008bed3f282b57bc5ef40030f0534e293a", "patch": "@@ -1090,8 +1090,12 @@ extern union tree_node *current_function_decl;\n       && REG_OK_FOR_BASE_P (XEXP (OP, 0)))\t\t\\\n    : (C) == 'S'\t\t\t\t\t\t\\\n    ? (CONSTANT_P (OP) || memory_address_p (Pmode, OP))\t\\\n+   : (C) == 'T'\t\t\t\t\t\t\\\n+   ? (mem_aligned_8 (OP))\t\t\t\t\\\n+   : (C) == 'U'\t\t\t\t\t\t\\\n+   ? (register_ok_for_ldd (OP))\t\t\t\t\\\n    : 0)\n-\n+ \n #else\n \n /* Nonzero if X is a hard reg that can be used as an index.  */\n@@ -1112,7 +1116,11 @@ extern union tree_node *current_function_decl;\n       : ((C) == 'S'\t\t\t\t\t\\\n \t ? (CONSTANT_P (OP)\t\t\t\t\\\n \t    || (GET_CODE (OP) == REG && reg_renumber[REGNO (OP)] > 0)\\\n-\t    || strict_memory_address_p (Pmode, OP)) : 0)))\n+\t    || strict_memory_address_p (Pmode, OP)) \t\\\n+\t : ((C) == 'T' ?\t\t\t\t\\\n+\t    mem_aligned_8 (OP) && strict_memory_address_p (Pmode, OP) \\\n+\t    : ((C) == 'U' ?\t\t\t\t\\\n+\t       register_ok_for_ldd (OP) : 0)))))\n #endif\n \f\n /* GO_IF_LEGITIMATE_ADDRESS recognizes an RTL expression"}]}