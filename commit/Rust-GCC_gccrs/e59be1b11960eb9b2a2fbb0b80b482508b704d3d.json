{"sha": "e59be1b11960eb9b2a2fbb0b80b482508b704d3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU5YmUxYjExOTYwZWI5YjJhMmZiYjBiODBiNDgyNTA4YjcwNGQzZA==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2009-07-17T09:21:25Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2009-07-17T09:21:25Z"}, "message": "configure.ac: Add rule for mingw targets to add -DGC_BUILD=1 to cflags.\n\n2009-07-17  Kai Tietz  <kai.tietz@onevision.com>\n\n        * configure.ac: Add rule for mingw targets to add -DGC_BUILD=1 to\n        cflags.\n        * configure: Regenerated.\n\nFrom-SVN: r149737", "tree": {"sha": "ebae774376bec40f89e9e99ecacacfb1578efa13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebae774376bec40f89e9e99ecacacfb1578efa13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e59be1b11960eb9b2a2fbb0b80b482508b704d3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e59be1b11960eb9b2a2fbb0b80b482508b704d3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e59be1b11960eb9b2a2fbb0b80b482508b704d3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e59be1b11960eb9b2a2fbb0b80b482508b704d3d/comments", "author": null, "committer": null, "parents": [{"sha": "182bf21f324469734ab0624023c0a416909d76d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182bf21f324469734ab0624023c0a416909d76d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/182bf21f324469734ab0624023c0a416909d76d2"}], "stats": {"total": 62, "additions": 42, "deletions": 20}, "files": [{"sha": "14ba80a9a7a8d3cb1f7750d097802705f0707df0", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e59be1b11960eb9b2a2fbb0b80b482508b704d3d/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e59be1b11960eb9b2a2fbb0b80b482508b704d3d/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=e59be1b11960eb9b2a2fbb0b80b482508b704d3d", "patch": "@@ -1,3 +1,9 @@\n+2009-07-17  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* configure.ac: Add rule for mingw targets to add -DGC_BUILD=1 to\n+\tcflags.\n+\t* configure: Regenerated.\n+\n 2009-05-17  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \t* win32_threads.c (GC_get_thread_stack_base):  Implement for Cygwin."}, {"sha": "c3adff342fdd12960d39abf7c9fc32afa09889da", "filename": "boehm-gc/configure", "status": "modified", "additions": 29, "deletions": 20, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e59be1b11960eb9b2a2fbb0b80b482508b704d3d/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e59be1b11960eb9b2a2fbb0b80b482508b704d3d/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=e59be1b11960eb9b2a2fbb0b80b482508b704d3d", "patch": "@@ -4194,6 +4194,12 @@ case \"${host}\" in\n     ;;\n esac\n \n+case \"${host}\" in\n+  *-*-mingw*)\n+    gc_cflags=\"${gc_cflags} -DGC_BUILD=1\"\n+    ;;\n+esac\n+\n \n GC_CFLAGS=${gc_cflags}\n \n@@ -4619,13 +4625,13 @@ if test \"${lt_cv_nm_interface+set}\" = set; then\n else\n   lt_cv_nm_interface=\"BSD nm\"\n   echo \"int some_variable = 0;\" > conftest.$ac_ext\n-  (eval echo \"\\\"\\$as_me:4622: $ac_compile\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:4628: $ac_compile\\\"\" >&5)\n   (eval \"$ac_compile\" 2>conftest.err)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:4625: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:4631: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n   (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:4628: output\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:4634: output\\\"\" >&5)\n   cat conftest.out >&5\n   if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n     lt_cv_nm_interface=\"MS dumpbin\"\n@@ -5783,7 +5789,7 @@ ia64-*-hpux*)\n   ;;\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 5786 \"configure\"' > conftest.$ac_ext\n+  echo '#line 5792 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -8277,11 +8283,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:8280: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:8286: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:8284: \\$? = $ac_status\" >&5\n+   echo \"$as_me:8290: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -8616,11 +8622,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:8619: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:8625: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:8623: \\$? = $ac_status\" >&5\n+   echo \"$as_me:8629: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -8721,11 +8727,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:8724: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:8730: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:8728: \\$? = $ac_status\" >&5\n+   echo \"$as_me:8734: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -8776,11 +8782,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:8779: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:8785: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:8783: \\$? = $ac_status\" >&5\n+   echo \"$as_me:8789: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -11643,7 +11649,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11646 \"configure\"\n+#line 11652 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11739,7 +11745,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11742 \"configure\"\n+#line 11748 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13765,11 +13771,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:13768: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:13774: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:13772: \\$? = $ac_status\" >&5\n+   echo \"$as_me:13778: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -13864,11 +13870,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:13867: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:13873: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:13871: \\$? = $ac_status\" >&5\n+   echo \"$as_me:13877: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -13916,11 +13922,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:13919: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:13925: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:13923: \\$? = $ac_status\" >&5\n+   echo \"$as_me:13929: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -17407,6 +17413,9 @@ ac_configure_args=\"${multilib_arg} ${ac_configure_args}\"\n multi_basedir=\"$multi_basedir\"\n CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n CC=\"$CC\"\n+CXX=\"$CXX\"\n+GFORTRAN=\"$GFORTRAN\"\n+GCJ=\"$GCJ\"\n AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"\n \n "}, {"sha": "2206f76eaa2a67be2bf9f983b2c92f1b8d29148e", "filename": "boehm-gc/configure.ac", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e59be1b11960eb9b2a2fbb0b80b482508b704d3d/boehm-gc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e59be1b11960eb9b2a2fbb0b80b482508b704d3d/boehm-gc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.ac?ref=e59be1b11960eb9b2a2fbb0b80b482508b704d3d", "patch": "@@ -84,6 +84,13 @@ case \"${host}\" in\n     ;;\n esac\n \n+dnl Add for mingw targets GC_BUILD option\n+case \"${host}\" in\n+  *-*-mingw*)\n+    gc_cflags=\"${gc_cflags} -DGC_BUILD=1\"\n+    ;;\n+esac\n+\n dnl gc_cflags=\"${gc_cflags} -fno-builtin\"\n \n GC_CFLAGS=${gc_cflags}"}]}