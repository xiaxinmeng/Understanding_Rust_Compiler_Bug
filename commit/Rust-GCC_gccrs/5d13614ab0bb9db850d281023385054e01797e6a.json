{"sha": "5d13614ab0bb9db850d281023385054e01797e6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQxMzYxNGFiMGJiOWRiODUwZDI4MTAyMzM4NTA1NGUwMTc5N2U2YQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-07-03T19:07:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-07-03T19:07:35Z"}, "message": "stof.cc: Improve check on long double limits.\n\n2008-07-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stof.cc:\n\tImprove check on long double limits.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stod.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n\tstof.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n\tstod.cc: Likewise.\n\nFrom-SVN: r137428", "tree": {"sha": "4d52a0d28b604882413d34f5a8dc242613849ec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d52a0d28b604882413d34f5a8dc242613849ec3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d13614ab0bb9db850d281023385054e01797e6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d13614ab0bb9db850d281023385054e01797e6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d13614ab0bb9db850d281023385054e01797e6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d13614ab0bb9db850d281023385054e01797e6a/comments", "author": null, "committer": null, "parents": [{"sha": "dcde22ac512ea1f529ad173bb03be38d79fb0d18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcde22ac512ea1f529ad173bb03be38d79fb0d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcde22ac512ea1f529ad173bb03be38d79fb0d18"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "a937a52aa92cfda0e406076c94485d4b6ce2518c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d13614ab0bb9db850d281023385054e01797e6a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d13614ab0bb9db850d281023385054e01797e6a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5d13614ab0bb9db850d281023385054e01797e6a", "patch": "@@ -1,3 +1,14 @@\n+2008-07-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/21_strings/basic_string/numeric_conversions/char/stof.cc:\n+\tImprove check on long double limits.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/char/stod.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n+\tstof.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/\n+\tstod.cc: Likewise.\n+\n 2008-07-03  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* libsupc++/Makefile.am: Add initializer_list to the headers."}, {"sha": "765c5a210ec5035738ce315d568faa93b4b0412a", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/stod.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d13614ab0bb9db850d281023385054e01797e6a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d13614ab0bb9db850d281023385054e01797e6a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstod.cc?ref=5d13614ab0bb9db850d281023385054e01797e6a", "patch": "@@ -107,7 +107,8 @@ test01()\n     }\n   VERIFY( test );\n \n-  if (sizeof(double) < sizeof(long double))\n+  if ((numeric_limits<long double>::max() / 10000.0L)\n+      > numeric_limits<double>::max())\n     {\n       test = false;\n       d1 = -1.0;"}, {"sha": "5645c0af9b8fd4eb647cbd3061915db1e88277f7", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/stof.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d13614ab0bb9db850d281023385054e01797e6a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstof.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d13614ab0bb9db850d281023385054e01797e6a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstof.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstof.cc?ref=5d13614ab0bb9db850d281023385054e01797e6a", "patch": "@@ -107,7 +107,8 @@ test01()\n     }\n   VERIFY( test );\n \n-  if (sizeof(float) < sizeof(long double))\n+  if ((numeric_limits<long double>::max() / 10000.0L)\n+      > numeric_limits<float>::max())\n     {\n       test = false;\n       f1 = -1.0f;"}, {"sha": "e494f4282baf480e5ca41c120da0d9da83c66879", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/wchar_t/stod.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d13614ab0bb9db850d281023385054e01797e6a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fwchar_t%2Fstod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d13614ab0bb9db850d281023385054e01797e6a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fwchar_t%2Fstod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fwchar_t%2Fstod.cc?ref=5d13614ab0bb9db850d281023385054e01797e6a", "patch": "@@ -107,7 +107,8 @@ test01()\n     }\n   VERIFY( test );\n \n-  if (sizeof(double) < sizeof(long double))\n+  if ((numeric_limits<long double>::max() / 10000.0L)\n+      > numeric_limits<double>::max())\n     {\n       test = false;\n       d1 = -1.0;"}, {"sha": "a6319f8e31e52376e079566cdab85a34cdf90e0b", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/wchar_t/stof.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d13614ab0bb9db850d281023385054e01797e6a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fwchar_t%2Fstof.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d13614ab0bb9db850d281023385054e01797e6a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fwchar_t%2Fstof.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fwchar_t%2Fstof.cc?ref=5d13614ab0bb9db850d281023385054e01797e6a", "patch": "@@ -107,7 +107,8 @@ test01()\n     }\n   VERIFY( test );\n \n-  if (sizeof(float) < sizeof(long double))\n+  if ((numeric_limits<long double>::max() / 10000.0L)\n+      > numeric_limits<float>::max())\n     {\n       test = false;\n       f1 = -1.0f;"}]}