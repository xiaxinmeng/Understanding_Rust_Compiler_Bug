{"sha": "70aec81b225e9d962725e98be8a89efddb3e5b2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBhZWM4MWIyMjVlOWQ5NjI3MjVlOThiZThhODllZmRkYjNlNWIyYQ==", "commit": {"author": {"name": "Corinna Vinschen", "email": "corinna@vinschen.de", "date": "2006-08-30T13:46:50Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2006-08-30T13:46:50Z"}, "message": "configure.ac: Add case for Mingw as host.\n\n2006-08-30  Corinna Vinschen  <corinna@vinschen.de>\n* configure.ac: Add case for Mingw as host.\n* configure: Regenerate.\n\nFrom-SVN: r116586", "tree": {"sha": "3425722a99f19ea11bb6682556c590b6ecef0d47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3425722a99f19ea11bb6682556c590b6ecef0d47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70aec81b225e9d962725e98be8a89efddb3e5b2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70aec81b225e9d962725e98be8a89efddb3e5b2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70aec81b225e9d962725e98be8a89efddb3e5b2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70aec81b225e9d962725e98be8a89efddb3e5b2a/comments", "author": {"login": "github-cygwin", "id": 7604664, "node_id": "MDQ6VXNlcjc2MDQ2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7604664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-cygwin", "html_url": "https://github.com/github-cygwin", "followers_url": "https://api.github.com/users/github-cygwin/followers", "following_url": "https://api.github.com/users/github-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/github-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/github-cygwin/orgs", "repos_url": "https://api.github.com/users/github-cygwin/repos", "events_url": "https://api.github.com/users/github-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/github-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b93d5ca9df26104f89b75ff120a3dd2b1bcbae58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b93d5ca9df26104f89b75ff120a3dd2b1bcbae58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b93d5ca9df26104f89b75ff120a3dd2b1bcbae58"}], "stats": {"total": 256, "additions": 256, "deletions": 0}, "files": [{"sha": "506cb8bcb6c55076169a1fae1988d1324c306cf3", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70aec81b225e9d962725e98be8a89efddb3e5b2a/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70aec81b225e9d962725e98be8a89efddb3e5b2a/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=70aec81b225e9d962725e98be8a89efddb3e5b2a", "patch": "@@ -1,3 +1,8 @@\n+2006-08-30  Corinna Vinschen  <corinna@vinschen.de>\n+\n+\t* configure.ac: Add case for Mingw as host.\n+\t* configure: Regenerate.\n+\n 2006-08-27  Ian Lance Taylor  <ian@airs.com>\n \n \tPR driver/27622"}, {"sha": "3491102189113af0caff3fc1aa6f827f602b29b4", "filename": "libiberty/configure", "status": "modified", "additions": 202, "deletions": 0, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70aec81b225e9d962725e98be8a89efddb3e5b2a/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70aec81b225e9d962725e98be8a89efddb3e5b2a/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=70aec81b225e9d962725e98be8a89efddb3e5b2a", "patch": "@@ -5679,6 +5679,208 @@ _ACEOF\n \n   fi\n \n+  # If we are being configured for Mingw, we know which functions\n+  # Mingw provides and which ones we will be expected to provide.\n+\n+  case \"${host}\" in\n+  *-*-mingw*)\n+    case $LIBOBJS in\n+    \"asprintf.$ac_objext\"   | \\\n+  *\" asprintf.$ac_objext\"   | \\\n+    \"asprintf.$ac_objext \"* | \\\n+  *\" asprintf.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS asprintf.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"basename.$ac_objext\"   | \\\n+  *\" basename.$ac_objext\"   | \\\n+    \"basename.$ac_objext \"* | \\\n+  *\" basename.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS basename.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"bcmp.$ac_objext\"   | \\\n+  *\" bcmp.$ac_objext\"   | \\\n+    \"bcmp.$ac_objext \"* | \\\n+  *\" bcmp.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS bcmp.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"bcopy.$ac_objext\"   | \\\n+  *\" bcopy.$ac_objext\"   | \\\n+    \"bcopy.$ac_objext \"* | \\\n+  *\" bcopy.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS bcopy.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"bzero.$ac_objext\"   | \\\n+  *\" bzero.$ac_objext\"   | \\\n+    \"bzero.$ac_objext \"* | \\\n+  *\" bzero.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS bzero.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"clock.$ac_objext\"   | \\\n+  *\" clock.$ac_objext\"   | \\\n+    \"clock.$ac_objext \"* | \\\n+  *\" clock.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS clock.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"ffs.$ac_objext\"   | \\\n+  *\" ffs.$ac_objext\"   | \\\n+    \"ffs.$ac_objext \"* | \\\n+  *\" ffs.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS ffs.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"getpagesize.$ac_objext\"   | \\\n+  *\" getpagesize.$ac_objext\"   | \\\n+    \"getpagesize.$ac_objext \"* | \\\n+  *\" getpagesize.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS getpagesize.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"index.$ac_objext\"   | \\\n+  *\" index.$ac_objext\"   | \\\n+    \"index.$ac_objext \"* | \\\n+  *\" index.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS index.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"insque.$ac_objext\"   | \\\n+  *\" insque.$ac_objext\"   | \\\n+    \"insque.$ac_objext \"* | \\\n+  *\" insque.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS insque.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"mempcpy.$ac_objext\"   | \\\n+  *\" mempcpy.$ac_objext\"   | \\\n+    \"mempcpy.$ac_objext \"* | \\\n+  *\" mempcpy.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS mempcpy.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"mkstemps.$ac_objext\"   | \\\n+  *\" mkstemps.$ac_objext\"   | \\\n+    \"mkstemps.$ac_objext \"* | \\\n+  *\" mkstemps.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS mkstemps.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"random.$ac_objext\"   | \\\n+  *\" random.$ac_objext\"   | \\\n+    \"random.$ac_objext \"* | \\\n+  *\" random.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS random.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"rindex.$ac_objext\"   | \\\n+  *\" rindex.$ac_objext\"   | \\\n+    \"rindex.$ac_objext \"* | \\\n+  *\" rindex.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS rindex.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"sigsetmask.$ac_objext\"   | \\\n+  *\" sigsetmask.$ac_objext\"   | \\\n+    \"sigsetmask.$ac_objext \"* | \\\n+  *\" sigsetmask.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS sigsetmask.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"stpcpy.$ac_objext\"   | \\\n+  *\" stpcpy.$ac_objext\"   | \\\n+    \"stpcpy.$ac_objext \"* | \\\n+  *\" stpcpy.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS stpcpy.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"stpncpy.$ac_objext\"   | \\\n+  *\" stpncpy.$ac_objext\"   | \\\n+    \"stpncpy.$ac_objext \"* | \\\n+  *\" stpncpy.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS stpncpy.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"strndup.$ac_objext\"   | \\\n+  *\" strndup.$ac_objext\"   | \\\n+    \"strndup.$ac_objext \"* | \\\n+  *\" strndup.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS strndup.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"strverscmp.$ac_objext\"   | \\\n+  *\" strverscmp.$ac_objext\"   | \\\n+    \"strverscmp.$ac_objext \"* | \\\n+  *\" strverscmp.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS strverscmp.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"vasprintf.$ac_objext\"   | \\\n+  *\" vasprintf.$ac_objext\"   | \\\n+    \"vasprintf.$ac_objext \"* | \\\n+  *\" vasprintf.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS vasprintf.$ac_objext\" ;;\n+esac\n+\n+    case $LIBOBJS in\n+    \"waitpid.$ac_objext\"   | \\\n+  *\" waitpid.$ac_objext\"   | \\\n+    \"waitpid.$ac_objext \"* | \\\n+  *\" waitpid.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS waitpid.$ac_objext\" ;;\n+esac\n+\n+\n+    for f in $funcs; do\n+      case \"$f\" in\n+\tasprintf | basename | bcmp | bcopy | bzero | clock | ffs | getpagesize | index | insque | mempcpy | mkstemps | random | rindex | sigsetmask | stpcpy | stpncpy | strdup | strndup | strverscmp | vasprintf | waitpid)\n+\t  ;;\n+\t*)\n+\t  n=HAVE_`echo $f | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+\t  cat >>confdefs.h <<_ACEOF\n+#define $n 1\n+_ACEOF\n+\n+\t  ;;\n+      esac\n+    done\n+\n+    # Mingw doesnt provide any of the variables in $vars, so we\n+    # dont have to check them here.\n+\n+    # Of the functions in $checkfuncs, Mingw only has strerror.\n+    cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_STRERROR 1\n+_ACEOF\n+\n+\n+    setobjs=yes\n+    ;;\n+\n+  esac\n+\n   # We may wish to install the target headers somewhere.\n   # Check whether --enable-install-libiberty or --disable-install-libiberty was given.\n if test \"${enable_install_libiberty+set}\" = set; then"}, {"sha": "f9713c22e26b250cda5d394666c3642e025a4530", "filename": "libiberty/configure.ac", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70aec81b225e9d962725e98be8a89efddb3e5b2a/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70aec81b225e9d962725e98be8a89efddb3e5b2a/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=70aec81b225e9d962725e98be8a89efddb3e5b2a", "patch": "@@ -419,6 +419,55 @@ if test -n \"${with_target_subdir}\"; then\n \n   fi\n \n+  # If we are being configured for Mingw, we know which functions\n+  # Mingw provides and which ones we will be expected to provide.\n+\n+  case \"${host}\" in\n+  *-*-mingw*)\n+    AC_LIBOBJ([asprintf])\n+    AC_LIBOBJ([basename])\n+    AC_LIBOBJ([bcmp])\n+    AC_LIBOBJ([bcopy])\n+    AC_LIBOBJ([bzero])\n+    AC_LIBOBJ([clock])\n+    AC_LIBOBJ([ffs])\n+    AC_LIBOBJ([getpagesize])\n+    AC_LIBOBJ([index])\n+    AC_LIBOBJ([insque])\n+    AC_LIBOBJ([mempcpy])\n+    AC_LIBOBJ([mkstemps])\n+    AC_LIBOBJ([random])\n+    AC_LIBOBJ([rindex])\n+    AC_LIBOBJ([sigsetmask])\n+    AC_LIBOBJ([stpcpy])\n+    AC_LIBOBJ([stpncpy])\n+    AC_LIBOBJ([strndup])\n+    AC_LIBOBJ([strverscmp])\n+    AC_LIBOBJ([vasprintf])\n+    AC_LIBOBJ([waitpid])\n+\n+    for f in $funcs; do\n+      case \"$f\" in\n+\tasprintf | basename | bcmp | bcopy | bzero | clock | ffs | getpagesize | index | insque | mempcpy | mkstemps | random | rindex | sigsetmask | stpcpy | stpncpy | strdup | strndup | strverscmp | vasprintf | waitpid)\n+\t  ;;\n+\t*)\n+\t  n=HAVE_`echo $f | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+\t  AC_DEFINE_UNQUOTED($n)\n+\t  ;;\n+      esac\n+    done\n+\n+    # Mingw doesnt provide any of the variables in $vars, so we\n+    # dont have to check them here.\n+\n+    # Of the functions in $checkfuncs, Mingw only has strerror.\n+    AC_DEFINE(HAVE_STRERROR)\n+\n+    setobjs=yes\n+    ;;\n+\n+  esac\n+\n   # We may wish to install the target headers somewhere.\n   AC_ARG_ENABLE(install-libiberty,\n   [  --enable-install-libiberty       Install headers for end users],"}]}