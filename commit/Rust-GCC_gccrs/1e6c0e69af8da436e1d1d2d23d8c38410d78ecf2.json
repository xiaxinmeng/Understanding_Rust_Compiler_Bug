{"sha": "1e6c0e69af8da436e1d1d2d23d8c38410d78ecf2", "node_id": "C_kwDOANBUbNoAKDFlNmMwZTY5YWY4ZGE0MzZlMWQxZDJkMjNkOGMzODQxMGQ3OGVjZjI", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-04-21T12:34:59Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-04-21T12:34:59Z"}, "message": "libstdc++: Work around modules ICE in <charconv> [PR105297]\n\nThis makes the initializer for __table in __from_chars_alnum_to_val\ndependent in an artificial way, which works around the reported modules\ntestsuite ICE by preventing the compiler from evaluating the initializer\nparse time.\n\nCompared to the alternative workaround of using a non-local class type\nfor __table, this workaround has the advantage of slightly speeding up\ncompilation of <charconv>, since now the table won't get built (via\nconstexpr evaluation) until the integer std::from_chars overload is\ninstantiated.\n\n\tPR c++/105297\n\tPR c++/105322\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/charconv (__from_chars_alnum_to_val): Make\n\tinitializer for __table dependent in an artificial way.", "tree": {"sha": "02a4d4890159f5f24f1f3d1c9eb57efdba81d4b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02a4d4890159f5f24f1f3d1c9eb57efdba81d4b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e6c0e69af8da436e1d1d2d23d8c38410d78ecf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6c0e69af8da436e1d1d2d23d8c38410d78ecf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e6c0e69af8da436e1d1d2d23d8c38410d78ecf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6c0e69af8da436e1d1d2d23d8c38410d78ecf2/comments", "author": null, "committer": null, "parents": [{"sha": "cf37107522f465d9e12af01ba68d2d1df0f18d46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf37107522f465d9e12af01ba68d2d1df0f18d46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf37107522f465d9e12af01ba68d2d1df0f18d46"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "561234cb2fc6357869c0d99d407ce79e1ab1d5b5", "filename": "libstdc++-v3/include/std/charconv", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6c0e69af8da436e1d1d2d23d8c38410d78ecf2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6c0e69af8da436e1d1d2d23d8c38410d78ecf2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv?ref=1e6c0e69af8da436e1d1d2d23d8c38410d78ecf2", "patch": "@@ -445,7 +445,9 @@ namespace __detail\n \treturn __c - '0';\n       else\n \t{\n-\t  static constexpr auto __table = __from_chars_alnum_to_val_table();\n+\t  // This initializer is deliberately made dependent in order to work\n+\t  // around modules bug PR105322.\n+\t  static constexpr auto __table = (_DecOnly, __from_chars_alnum_to_val_table());\n \t  return __table.__data[__c];\n \t}\n     }"}]}