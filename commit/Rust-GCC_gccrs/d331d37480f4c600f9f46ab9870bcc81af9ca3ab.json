{"sha": "d331d37480f4c600f9f46ab9870bcc81af9ca3ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMzMWQzNzQ4MGY0YzYwMGY5ZjQ2YWI5ODcwYmNjODFhZjljYTNhYg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2013-07-10T21:36:12Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2013-07-10T21:36:12Z"}, "message": "tm.texi.in (TARGET_CANONICALIZE_COMPARISON): Remove stray text on @hook line.\n\n\t* doc/tm.texi.in (TARGET_CANONICALIZE_COMPARISON): Remove stray\n\ttext on @hook line.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r200891", "tree": {"sha": "709e57ee76eed9427cbcb4fe238e491582bb4be0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/709e57ee76eed9427cbcb4fe238e491582bb4be0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d331d37480f4c600f9f46ab9870bcc81af9ca3ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d331d37480f4c600f9f46ab9870bcc81af9ca3ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d331d37480f4c600f9f46ab9870bcc81af9ca3ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d331d37480f4c600f9f46ab9870bcc81af9ca3ab/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bff7cdf66d0c54ba3164eebf1c34d53f0fde2d16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bff7cdf66d0c54ba3164eebf1c34d53f0fde2d16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bff7cdf66d0c54ba3164eebf1c34d53f0fde2d16"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "6f83465bb10da3f0c8e500841ee124c8220f5edb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d331d37480f4c600f9f46ab9870bcc81af9ca3ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d331d37480f4c600f9f46ab9870bcc81af9ca3ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d331d37480f4c600f9f46ab9870bcc81af9ca3ab", "patch": "@@ -1,3 +1,9 @@\n+2013-07-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* doc/tm.texi.in (TARGET_CANONICALIZE_COMPARISON): Remove stray\n+\ttext on @hook line.\n+\t* doc/tm.texi: Regenerate.\n+\n 2013-07-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/57869"}, {"sha": "a1010b7c2da4a1a8f530624637eeebfa2693fdb3", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d331d37480f4c600f9f46ab9870bcc81af9ca3ab/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d331d37480f4c600f9f46ab9870bcc81af9ca3ab/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=d331d37480f4c600f9f46ab9870bcc81af9ca3ab", "patch": "@@ -6040,7 +6040,7 @@ You should define this macro if and only if you define extra CC modes\n in @file{@var{machine}-modes.def}.\n @end defmac\n \n-@deftypefn {Target Hook} void TARGET_CANONICALIZE_COMPARISON (int *@var{code}, rtx *@var{op0}, rtx *@var{op1}, bool @var{op0_preserve_value}) (@var{code}, @var{op0}, @var{op1}, @var{op0_preserve_value})\n+@deftypefn {Target Hook} void TARGET_CANONICALIZE_COMPARISON (int *@var{code}, rtx *@var{op0}, rtx *@var{op1}, bool @var{op0_preserve_value})\n On some machines not all possible comparisons are defined, but you can\n convert an invalid comparison into a valid one.  For example, the Alpha\n does not have a @code{GT} comparison, but you can use an @code{LT}"}, {"sha": "667d5d10ababe7a3f741fb92316902ca09e0ae49", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d331d37480f4c600f9f46ab9870bcc81af9ca3ab/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d331d37480f4c600f9f46ab9870bcc81af9ca3ab/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=d331d37480f4c600f9f46ab9870bcc81af9ca3ab", "patch": "@@ -5940,7 +5940,7 @@ You should define this macro if and only if you define extra CC modes\n in @file{@var{machine}-modes.def}.\n @end defmac\n \n-@hook TARGET_CANONICALIZE_COMPARISON (@var{code}, @var{op0}, @var{op1}, @var{op0_preserve_value})\n+@hook TARGET_CANONICALIZE_COMPARISON\n On some machines not all possible comparisons are defined, but you can\n convert an invalid comparison into a valid one.  For example, the Alpha\n does not have a @code{GT} comparison, but you can use an @code{LT}"}]}