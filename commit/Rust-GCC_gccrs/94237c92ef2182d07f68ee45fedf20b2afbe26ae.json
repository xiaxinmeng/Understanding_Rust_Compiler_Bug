{"sha": "94237c92ef2182d07f68ee45fedf20b2afbe26ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQyMzdjOTJlZjIxODJkMDdmNjhlZTQ1ZmVkZjIwYjJhZmJlMjZhZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-04-02T13:53:38Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-04-02T13:53:38Z"}, "message": "i386.md (plogic): New.\n\n2008-04-02  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.md (plogic): New.\n\t(plogicprefix): Likewise.\n\n\t* config/i386/mmx.md (mmx_<code><mode>3): New.\n\t(mmx_and<mode>3): Removed.\n\t(mmx_ior<mode>3): Likewise.\n\t(mmx_xor<mode>3): Likewise.\n\n\t* config/i386/sse.md (<code><mode>3): New.\n\t(*<code><mode>3): Likewise.\n\t(*<code><mode>3): Likewise.\n\t(<code><mode>3): Likewise.\n\t(*sse_<code><mode>3): Likewise.\n\t(*sse2_<code><mode>3): Likewise.\n\t(<code>tf3): Likewise.\n\t(*<code>tf3): Likewise.\n\t(and<mode>3): Likewise.\n\t(*and<mode>3): Likewise.\n\t(ior<mode>3): Removed.\n\t(*ior<mode>3): Likewise.\n\t(xor<mode>3): Likewise.\n\t(*xor<mode>3): Likewise.\n\t(*and<mode>3): Likewise.\n\t(*ior<mode>3): Likewise.\n\t(*xor<mode>3): Likewise.\n\t(and<mode>3): Likewise.\n\t(*sse_and<mode>3): Likewise.\n\t(*sse2_and<mode>3): Likewise.\n\t(andtf3): Likewise.\n\t(*andtf3): Likewise.\n\t(ior<mode>3): Likewise.\n\t(*sse_ior<mode>3): Likewise.\n\t(*sse2_ior<mode>3): Likewise.\n\t(iortf3): Likewise.\n\t(*iortf3): Likewise.\n\t(xor<mode>3): Likewise.\n\t(*sse_xor<mode>3): Likewise.\n\t(*sse2_xor<mode>3): Likewise.\n\t(xortf3): Likewise.\n\t(*xortf3): Likewise.\n\nFrom-SVN: r133837", "tree": {"sha": "f06060650b8d49bab7882b46f76984029effe80d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f06060650b8d49bab7882b46f76984029effe80d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94237c92ef2182d07f68ee45fedf20b2afbe26ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94237c92ef2182d07f68ee45fedf20b2afbe26ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94237c92ef2182d07f68ee45fedf20b2afbe26ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94237c92ef2182d07f68ee45fedf20b2afbe26ae/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7814a183ca564e2d8cf21c12364d13d8f1226a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7814a183ca564e2d8cf21c12364d13d8f1226a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7814a183ca564e2d8cf21c12364d13d8f1226a2"}], "stats": {"total": 292, "additions": 85, "deletions": 207}, "files": [{"sha": "721fe8c9470cca17cbf7484c86a1a191a84ffc62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94237c92ef2182d07f68ee45fedf20b2afbe26ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94237c92ef2182d07f68ee45fedf20b2afbe26ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94237c92ef2182d07f68ee45fedf20b2afbe26ae", "patch": "@@ -1,3 +1,46 @@\n+2008-04-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.md (plogic): New.\n+\t(plogicprefix): Likewise.\n+\n+\t* config/i386/mmx.md (mmx_<code><mode>3): New.\n+\t(mmx_and<mode>3): Removed.\n+\t(mmx_ior<mode>3): Likewise.\n+\t(mmx_xor<mode>3): Likewise.\n+\n+\t* config/i386/sse.md (<code><mode>3): New.\n+\t(*<code><mode>3): Likewise.\n+\t(*<code><mode>3): Likewise.\n+\t(<code><mode>3): Likewise.\n+\t(*sse_<code><mode>3): Likewise.\n+\t(*sse2_<code><mode>3): Likewise.\n+\t(<code>tf3): Likewise.\n+\t(*<code>tf3): Likewise.\n+\t(and<mode>3): Likewise.\n+\t(*and<mode>3): Likewise.\n+\t(ior<mode>3): Removed.\n+\t(*ior<mode>3): Likewise.\n+\t(xor<mode>3): Likewise.\n+\t(*xor<mode>3): Likewise.\n+\t(*and<mode>3): Likewise.\n+\t(*ior<mode>3): Likewise.\n+\t(*xor<mode>3): Likewise.\n+\t(and<mode>3): Likewise.\n+\t(*sse_and<mode>3): Likewise.\n+\t(*sse2_and<mode>3): Likewise.\n+\t(andtf3): Likewise.\n+\t(*andtf3): Likewise.\n+\t(ior<mode>3): Likewise.\n+\t(*sse_ior<mode>3): Likewise.\n+\t(*sse2_ior<mode>3): Likewise.\n+\t(iortf3): Likewise.\n+\t(*iortf3): Likewise.\n+\t(xor<mode>3): Likewise.\n+\t(*sse_xor<mode>3): Likewise.\n+\t(*sse2_xor<mode>3): Likewise.\n+\t(xortf3): Likewise.\n+\t(*xortf3): Likewise.\n+\n 2008-04-02  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/14495"}, {"sha": "e2d68bb8209d17b10452fa5fcc6ef590efe6a2b3", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94237c92ef2182d07f68ee45fedf20b2afbe26ae/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94237c92ef2182d07f68ee45fedf20b2afbe26ae/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=94237c92ef2182d07f68ee45fedf20b2afbe26ae", "patch": "@@ -540,6 +540,12 @@\n (define_code_attr maxminiprefix [(smax \"maxs\") (smin \"mins\") (umax \"maxu\") (umin \"minu\")])\n (define_code_attr maxminfprefix [(smax \"max\") (smin \"min\")])\n \n+;; Mapping of parallel logic operators\n+(define_code_iterator plogic [and ior xor])\n+\n+;; Base name for insn mnemonic.\n+(define_code_attr plogicprefix [(and \"and\") (ior \"or\") (xor \"xor\")])\n+\n ;; All single word integer modes.\n (define_mode_iterator SWI [QI HI SI (DI \"TARGET_64BIT\")])\n "}, {"sha": "bfcddc6614b4e2b3aab0247d0f0f2dde4dbe82f6", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 4, "deletions": 25, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94237c92ef2182d07f68ee45fedf20b2afbe26ae/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94237c92ef2182d07f68ee45fedf20b2afbe26ae/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=94237c92ef2182d07f68ee45fedf20b2afbe26ae", "patch": "@@ -791,16 +791,6 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_insn \"mmx_and<mode>3\"\n-  [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y\")\n-\t(and:MMXMODEI\n-\t  (match_operand:MMXMODEI 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:MMXMODEI 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"TARGET_MMX && ix86_binary_operator_ok (AND, <MODE>mode, operands)\"\n-  \"pand\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxadd\")\n-   (set_attr \"mode\" \"DI\")])\n-\n (define_insn \"mmx_nand<mode>3\"\n   [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y\")\n \t(and:MMXMODEI\n@@ -811,27 +801,16 @@\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"mmx_ior<mode>3\"\n+(define_insn \"mmx_<code><mode>3\"\n   [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y\")\n-        (ior:MMXMODEI\n+        (plogic:MMXMODEI\n \t  (match_operand:MMXMODEI 1 \"nonimmediate_operand\" \"%0\")\n \t  (match_operand:MMXMODEI 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"TARGET_MMX && ix86_binary_operator_ok (IOR, <MODE>mode, operands)\"\n-  \"por\\t{%2, %0|%0, %2}\"\n+  \"TARGET_MMX && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"p<plogicprefix>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"mmx_xor<mode>3\"\n-  [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y\")\n-\t(xor:MMXMODEI\n-\t  (match_operand:MMXMODEI 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:MMXMODEI 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"TARGET_MMX && ix86_binary_operator_ok (XOR, <MODE>mode, operands)\"\n-  \"pxor\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxadd\")\n-   (set_attr \"mode\" \"DI\")\n-   (set_attr \"memory\" \"none\")])\n-\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n ;; Parallel integral element swizzling"}, {"sha": "2b1e7f249b102c5735e56559ce166a89026f33f8", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 32, "deletions": 182, "changes": 214, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94237c92ef2182d07f68ee45fedf20b2afbe26ae/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94237c92ef2182d07f68ee45fedf20b2afbe26ae/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=94237c92ef2182d07f68ee45fedf20b2afbe26ae", "patch": "@@ -839,25 +839,6 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_expand \"and<mode>3\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"\")\n-\t(and:SSEMODEF2P\n-\t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"\")\n-\t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"\")))]\n-  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-  \"ix86_fixup_binary_operands_no_copy (AND, <MODE>mode, operands);\")\n-\n-(define_insn \"*and<mode>3\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(and:SSEMODEF2P\n-\t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\n-   && ix86_binary_operator_ok (AND, <MODE>mode, operands)\"\n-  \"andp<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n (define_insn \"<sse>_nand<mode>3\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n \t(and:SSEMODEF2P\n@@ -869,41 +850,22 @@\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_expand \"ior<mode>3\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"\")\n-\t(ior:SSEMODEF2P\n-\t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"\")\n-\t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"\")))]\n-  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-  \"ix86_fixup_binary_operands_no_copy (IOR, <MODE>mode, operands);\")\n-\n-(define_insn \"*ior<mode>3\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(ior:SSEMODEF2P\n-\t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\n-   && ix86_binary_operator_ok (IOR, <MODE>mode, operands)\"\n-  \"orp<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_expand \"xor<mode>3\"\n+(define_expand \"<code><mode>3\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"\")\n-\t(xor:SSEMODEF2P\n+\t(plogic:SSEMODEF2P\n \t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"\")\n \t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"\")))]\n   \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-  \"ix86_fixup_binary_operands_no_copy (XOR, <MODE>mode, operands);\")\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n \n-(define_insn \"*xor<mode>3\"\n+(define_insn \"*<code><mode>3\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(xor:SSEMODEF2P\n+\t(plogic:SSEMODEF2P\n \t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%0\")\n \t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")))]\n   \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\n-   && ix86_binary_operator_ok (XOR, <MODE>mode, operands)\"\n-  \"xorp<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n+   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"<plogicprefix>p<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n@@ -912,16 +874,6 @@\n ;; allocation lossage.  These patterns do not allow memory operands\n ;; because the native instructions read the full 128-bits.\n \n-(define_insn \"*and<mode>3\"\n-  [(set (match_operand:MODEF 0 \"register_operand\" \"=x\")\n-\t(and:MODEF\n-\t  (match_operand:MODEF 1 \"register_operand\" \"0\")\n-\t  (match_operand:MODEF 2 \"register_operand\" \"x\")))]\n-  \"SSE_FLOAT_MODE_P (<MODE>mode)\"\n-  \"andp<ssemodefsuffix>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"mode\" \"<ssevecmode>\")])\n-\n (define_insn \"*nand<mode>3\"\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=x\")\n \t(and:MODEF\n@@ -933,23 +885,13 @@\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"mode\" \"<ssevecmode>\")])\n \n-(define_insn \"*ior<mode>3\"\n-  [(set (match_operand:MODEF 0 \"register_operand\" \"=x\")\n-\t(ior:MODEF\n-\t  (match_operand:MODEF 1 \"register_operand\" \"0\")\n-\t  (match_operand:MODEF 2 \"register_operand\" \"x\")))]\n-  \"SSE_FLOAT_MODE_P (<MODE>mode)\"\n-  \"orp<ssemodefsuffix>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"mode\" \"<ssevecmode>\")])\n-\n-(define_insn \"*xor<mode>3\"\n+(define_insn \"*<code><mode>3\"\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=x\")\n-\t(xor:MODEF\n+\t(plogic:MODEF\n \t  (match_operand:MODEF 1 \"register_operand\" \"0\")\n \t  (match_operand:MODEF 2 \"register_operand\" \"x\")))]\n   \"SSE_FLOAT_MODE_P (<MODE>mode)\"\n-  \"xorp<ssemodefsuffix>\\t{%2, %0|%0, %2}\"\n+  \"<plogicprefix>p<ssemodefsuffix>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"mode\" \"<ssevecmode>\")])\n \n@@ -3820,35 +3762,6 @@\n   operands[2] = force_reg (<MODE>mode, gen_rtx_CONST_VECTOR (<MODE>mode, v));\n })\n \n-(define_expand \"and<mode>3\"\n-  [(set (match_operand:SSEMODEI 0 \"register_operand\" \"\")\n-\t(and:SSEMODEI (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"\")\n-\t\t      (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (AND, <MODE>mode, operands);\")\n-\n-(define_insn \"*sse_and<mode>3\"\n-  [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n-        (and:SSEMODEI\n-          (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"%0\")\n-          (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"(TARGET_SSE && !TARGET_SSE2)\n-   && ix86_binary_operator_ok (AND, <MODE>mode, operands)\"\n-  \"andps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n-(define_insn \"*sse2_and<mode>3\"\n-  [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n-\t(and:SSEMODEI\n-\t  (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (AND, <MODE>mode, operands)\"\n-  \"pand\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"*sse_nand<mode>3\"\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n \t(and:SSEMODEI\n@@ -3870,24 +3783,6 @@\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_expand \"andtf3\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"\")\n-\t(and:TF (match_operand:TF 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:TF 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_64BIT\"\n-  \"ix86_fixup_binary_operands_no_copy (AND, TFmode, operands);\")\n-\n-(define_insn \"*andtf3\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=x\")\n-\t(and:TF\n-\t  (match_operand:TF 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:TF 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_64BIT && ix86_binary_operator_ok (AND, TFmode, operands)\"\n-  \"pand\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"*nandtf3\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=x\")\n \t(and:TF\n@@ -3899,96 +3794,51 @@\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_expand \"ior<mode>3\"\n+(define_expand \"<code><mode>3\"\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"\")\n-\t(ior:SSEMODEI (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"\")\n-\t\t      (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"\")))]\n+\t(plogic:SSEMODEI\n+\t  (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"\")\n+\t  (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (IOR, <MODE>mode, operands);\")\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n \n-(define_insn \"*sse_ior<mode>3\"\n+(define_insn \"*sse_<code><mode>3\"\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n-        (ior:SSEMODEI\n+        (plogic:SSEMODEI\n           (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"%0\")\n           (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"xm\")))]\n   \"(TARGET_SSE && !TARGET_SSE2)\n-   && ix86_binary_operator_ok (IOR, <MODE>mode, operands)\"\n-  \"orps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n-(define_insn \"*sse2_ior<mode>3\"\n-  [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n-\t(ior:SSEMODEI\n-\t  (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (IOR, <MODE>mode, operands)\"\n-  \"por\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_expand \"iortf3\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"\")\n-\t(ior:TF (match_operand:TF 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:TF 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_64BIT\"\n-  \"ix86_fixup_binary_operands_no_copy (IOR, TFmode, operands);\")\n-\n-(define_insn \"*iortf3\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=x\")\n-\t(ior:TF\n-\t  (match_operand:TF 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:TF 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_64BIT && ix86_binary_operator_ok (IOR, TFmode, operands)\"\n-  \"por\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_expand \"xor<mode>3\"\n-  [(set (match_operand:SSEMODEI 0 \"register_operand\" \"\")\n-\t(xor:SSEMODEI (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"\")\n-\t\t      (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (XOR, <MODE>mode, operands);\")\n-\n-(define_insn \"*sse_xor<mode>3\"\n-  [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n-\t(xor:SSEMODEI\n-\t  (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"(TARGET_SSE && !TARGET_SSE2)\n-   && ix86_binary_operator_ok (XOR, <MODE>mode, operands)\"\n-  \"xorps\\t{%2, %0|%0, %2}\"\n+   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"<plogicprefix>ps\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"mode\" \"V4SF\")])\n \n-(define_insn \"*sse2_xor<mode>3\"\n+(define_insn \"*sse2_<code><mode>3\"\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n-\t(xor:SSEMODEI\n+\t(plogic:SSEMODEI\n \t  (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"%0\")\n \t  (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (XOR, <MODE>mode, operands)\"\n-  \"pxor\\t{%2, %0|%0, %2}\"\n+  \"TARGET_SSE2 && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"p<plogicprefix>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_expand \"xortf3\"\n+(define_expand \"<code>tf3\"\n   [(set (match_operand:TF 0 \"register_operand\" \"\")\n-\t(xor:TF (match_operand:TF 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:TF 2 \"nonimmediate_operand\" \"\")))]\n+\t(plogic:TF\n+\t  (match_operand:TF 1 \"nonimmediate_operand\" \"\")\n+\t  (match_operand:TF 2 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_64BIT\"\n-  \"ix86_fixup_binary_operands_no_copy (XOR, TFmode, operands);\")\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, TFmode, operands);\")\n \n-(define_insn \"*xortf3\"\n+(define_insn \"*<code>tf3\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=x\")\n-\t(xor:TF\n+\t(plogic:TF\n \t  (match_operand:TF 1 \"nonimmediate_operand\" \"%0\")\n \t  (match_operand:TF 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_64BIT && ix86_binary_operator_ok (XOR, TFmode, operands)\"\n-  \"pxor\\t{%2, %0|%0, %2}\"\n+  \"TARGET_64BIT && ix86_binary_operator_ok (<CODE>, TFmode, operands)\"\n+  \"p<plogicprefix>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"mode\" \"TI\")])"}]}