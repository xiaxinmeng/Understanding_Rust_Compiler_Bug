{"sha": "86f980870a28bc9022cc57362b5031ede43ecff9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZmOTgwODcwYTI4YmM5MDIyY2M1NzM2MmI1MDMxZWRlNDNlY2ZmOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-10-17T22:34:53Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-10-17T22:34:53Z"}, "message": "i386.h (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): Move to...\n\n\t* config/i386/i386.h (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): Move to...\n\t* config/i386/i386.c (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): ...here.\n\t* config/ia64/ia64.h (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): Move to...\n\t* config/ia64/ia64.c (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): ...here.\n\t* config/rs6000/rs6000.h (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): Move to.\n\t* config/rs6000/rs6000.c (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): ...here.\n\t(rs6000_option_override_internal): Clear it if ABI_AIX.\n\t* config/sparc/sparc.h (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): Move to...\n\t* config/sparc/sparc.c (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): ... here.\n\nFrom-SVN: r241285", "tree": {"sha": "b3c12e7259780890218a0b0bd1be0f6dc51b76e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3c12e7259780890218a0b0bd1be0f6dc51b76e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86f980870a28bc9022cc57362b5031ede43ecff9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f980870a28bc9022cc57362b5031ede43ecff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86f980870a28bc9022cc57362b5031ede43ecff9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f980870a28bc9022cc57362b5031ede43ecff9/comments", "author": null, "committer": null, "parents": [{"sha": "806696ebd2938636802ba9a611fcf741bf60f7b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/806696ebd2938636802ba9a611fcf741bf60f7b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/806696ebd2938636802ba9a611fcf741bf60f7b7"}], "stats": {"total": 49, "additions": 35, "deletions": 14}, "files": [{"sha": "dcf210f3511bc23ef4e3f21450f0286c50c52d44", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86f980870a28bc9022cc57362b5031ede43ecff9", "patch": "@@ -1,3 +1,15 @@\n+2016-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/i386/i386.h (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): Move to...\n+\t* config/i386/i386.c (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): ...here.\n+\t* config/ia64/ia64.h (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): Move to...\n+\t* config/ia64/ia64.c (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): ...here.\n+\t* config/rs6000/rs6000.h (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): Move to.\n+\t* config/rs6000/rs6000.c (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): ...here.\n+\t(rs6000_option_override_internal): Clear it if ABI_AIX.\n+\t* config/sparc/sparc.h (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): Move to...\n+\t* config/sparc/sparc.c (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): ... here.\n+\n 2016-10-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* gimple-ssa-strength-reduction.c (record_increment): Remove"}, {"sha": "bafbe75b628288a5aa265fc3d253cdb717a9f36d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=86f980870a28bc9022cc57362b5031ede43ecff9", "patch": "@@ -50833,6 +50833,9 @@ ix86_addr_space_zero_address_valid (addr_space_t as)\n #undef TARGET_HARD_REGNO_SCRATCH_OK\n #define TARGET_HARD_REGNO_SCRATCH_OK ix86_hard_regno_scratch_ok\n \n+#undef TARGET_CUSTOM_FUNCTION_DESCRIPTORS\n+#define TARGET_CUSTOM_FUNCTION_DESCRIPTORS 1\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n #include \"gt-i386.h\""}, {"sha": "add7a64778f0b722cf186901f08e4e807cd56b7a", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=86f980870a28bc9022cc57362b5031ede43ecff9", "patch": "@@ -2666,9 +2666,6 @@ extern void debug_dispatch_window (int);\n \n #define TARGET_SUPPORTS_WIDE_INT 1\n \n-/* Use custom descriptors instead of trampolines when possible.  */\n-#define TARGET_CUSTOM_FUNCTION_DESCRIPTORS 1\n-\n /*\n Local variables:\n version-control: t"}, {"sha": "31a2267a0f8d1583cbbcedd1976a4b3970255399", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=86f980870a28bc9022cc57362b5031ede43ecff9", "patch": "@@ -649,6 +649,9 @@ static const struct attribute_spec ia64_attribute_table[] =\n #undef TARGET_ATTRIBUTE_TAKES_IDENTIFIER_P\n #define TARGET_ATTRIBUTE_TAKES_IDENTIFIER_P ia64_attribute_takes_identifier_p\n \n+#undef TARGET_CUSTOM_FUNCTION_DESCRIPTORS\n+#define TARGET_CUSTOM_FUNCTION_DESCRIPTORS 0\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Returns TRUE iff the target attribute indicated by ATTR_ID takes a plain"}, {"sha": "ac0cb864209126c7d34708ccb4d09d398b9d44a1", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=86f980870a28bc9022cc57362b5031ede43ecff9", "patch": "@@ -1715,7 +1715,4 @@ struct GTY(()) machine_function\n /* Switch on code for querying unit reservations.  */\n #define CPU_UNITS_QUERY 1\n \n-/* IA-64 already uses descriptors for its standard calling sequence.  */\n-#define TARGET_CUSTOM_FUNCTION_DESCRIPTORS 0\n-\n /* End of ia64.h */"}, {"sha": "27611876b4fb853a5c962f039747eee74d9cd083", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=86f980870a28bc9022cc57362b5031ede43ecff9", "patch": "@@ -1867,6 +1867,9 @@ static const struct attribute_spec rs6000_attribute_table[] =\n \n #undef TARGET_OPTAB_SUPPORTED_P\n #define TARGET_OPTAB_SUPPORTED_P rs6000_optab_supported_p\n+\n+#undef TARGET_CUSTOM_FUNCTION_DESCRIPTORS\n+#define TARGET_CUSTOM_FUNCTION_DESCRIPTORS 1\n \f\n \n /* Processor table.  */\n@@ -4862,6 +4865,10 @@ rs6000_option_override_internal (bool global_init_p)\n \t Linux and Darwin ABIs at the moment.  For now, only AIX is fixed.  */\n       if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_DARWIN)\n \ttargetm.calls.split_complex_arg = NULL;\n+\n+      /* The AIX and ELFv1 ABIs define standard function descriptors.  */\n+      if (DEFAULT_ABI == ABI_AIX)\n+\ttargetm.calls.custom_function_descriptors = 0;\n     }\n \n   /* Initialize rs6000_cost with the appropriate target costs.  */"}, {"sha": "f53da1551602d84d081a8a5a499b323b7835d200", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=86f980870a28bc9022cc57362b5031ede43ecff9", "patch": "@@ -2922,9 +2922,6 @@ extern GTY(()) tree rs6000_builtin_decls[RS6000_BUILTIN_COUNT];\n \n #define TARGET_SUPPORTS_WIDE_INT 1\n \n-/* Use custom descriptors instead of trampolines if not AIX or ELFv1.  */\n-#define TARGET_CUSTOM_FUNCTION_DESCRIPTORS (DEFAULT_ABI != ABI_AIX)\n-\n #if (GCC_VERSION >= 3000)\n #pragma GCC poison TARGET_FLOAT128 OPTION_MASK_FLOAT128 MASK_FLOAT128\n #endif"}, {"sha": "4b878c1fcddc7867dbcb1126e3fa8ee193eabd24", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=86f980870a28bc9022cc57362b5031ede43ecff9", "patch": "@@ -866,6 +866,9 @@ char sparc_hard_reg_printed[8];\n #undef TARGET_FIXED_CONDITION_CODE_REGS\n #define TARGET_FIXED_CONDITION_CODE_REGS sparc_fixed_condition_code_regs\n \n+#undef TARGET_CUSTOM_FUNCTION_DESCRIPTORS\n+#define TARGET_CUSTOM_FUNCTION_DESCRIPTORS 1\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n /* Return the memory reference contained in X if any, zero otherwise.  */"}, {"sha": "5389216baa2cc82d938729416ac75ddebecf0109", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=86f980870a28bc9022cc57362b5031ede43ecff9", "patch": "@@ -1813,6 +1813,3 @@ extern int sparc_indent_opcode;\n #define SPARC_LOW_FE_EXCEPT_VALUES 0\n \n #define TARGET_SUPPORTS_WIDE_INT 1\n-\n-/* Use custom descriptors instead of trampolines when possible.  */\n-#define TARGET_CUSTOM_FUNCTION_DESCRIPTORS 1"}, {"sha": "12bcfa6ade71d70bd7c98b7c569addd65f5b24e1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=86f980870a28bc9022cc57362b5031ede43ecff9", "patch": "@@ -1,3 +1,8 @@\n+2016-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/Wtrampolines.c: XFAIL warning on ia64-*-* and powerpc64-*-*.\n+\t* gnat.dg/trampoline4.adb: Minor tweak.\n+\n 2016-10-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/77916"}, {"sha": "62b782a8bf0f83d927be2ff2d30e1a448fdca955", "filename": "gcc/testsuite/gcc.dg/Wtrampolines.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Ftestsuite%2Fgcc.dg%2FWtrampolines.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Ftestsuite%2Fgcc.dg%2FWtrampolines.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWtrampolines.c?ref=86f980870a28bc9022cc57362b5031ede43ecff9", "patch": "@@ -28,7 +28,7 @@ void foo (void)\n \n   double a (int k, pfun x1, pfun x2, pfun x3, pfun x4, pfun x5)\n   {\n-    double b (void)  /* { dg-warning \"trampoline generated for nested function 'b'\" } */\n+    double b (void)  /* { dg-warning \"trampoline generated for nested function 'b'\" \"standard descriptors\" { xfail ia64-*-* powerpc64-*-* } } */\n     { \n       k = k - 1;\n       return a (k, b, x1, x2, x3, x4 );"}, {"sha": "dd0d760affcded2413e07be66d178a2ce4969f17", "filename": "gcc/testsuite/gnat.dg/trampoline4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Ftestsuite%2Fgnat.dg%2Ftrampoline4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f980870a28bc9022cc57362b5031ede43ecff9/gcc%2Ftestsuite%2Fgnat.dg%2Ftrampoline4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftrampoline4.adb?ref=86f980870a28bc9022cc57362b5031ede43ecff9", "patch": "@@ -1,6 +1,6 @@\n -- { dg-do compile { target *-*-linux* } }\n -- { dg-options \"-ftrampolines -gnatws\" }\n--- { dg-skip-if \"native descriptors\" { ia64-*-* powerpc64-*-* } }\n+-- { dg-skip-if \"standard descriptors\" { ia64-*-* powerpc64-*-* } }\n \n procedure Trampoline4 is\n "}]}