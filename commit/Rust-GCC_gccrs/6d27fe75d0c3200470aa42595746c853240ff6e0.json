{"sha": "6d27fe75d0c3200470aa42595746c853240ff6e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQyN2ZlNzVkMGMzMjAwNDcwYWE0MjU5NTc0NmM4NTMyNDBmZjZlMA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-02-02T20:59:41Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-02-02T20:59:41Z"}, "message": "re PR libgcj/19681 (extension loading currently incorrect)\n\n\tPR libgcj/19681:\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (ordinary_java_source_files): Added new class.\n\t* java/lang/natVMClassLoader.cc (getSystemClassLoaderInternal):\n\tUse system_instance, not instance.\n\t* gnu/gcj/runtime/SystemClassLoader.java: New file.\n\t* gnu/gcj/runtime/VMClassLoader.java (init): Don't search\n\tjava.class.path.\n\t(system_instance): New field.\n\t(initialize): Initialize the system loader as well.\n\t(VMClassLoader): Default to LIB_CACHE.\n\nFrom-SVN: r94611", "tree": {"sha": "549b32af6b15702bf023898cb2c6638202d540ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/549b32af6b15702bf023898cb2c6638202d540ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d27fe75d0c3200470aa42595746c853240ff6e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d27fe75d0c3200470aa42595746c853240ff6e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d27fe75d0c3200470aa42595746c853240ff6e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d27fe75d0c3200470aa42595746c853240ff6e0/comments", "author": null, "committer": null, "parents": [{"sha": "7ded35b4c2c8ebf53faa42987703616e2a813421", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ded35b4c2c8ebf53faa42987703616e2a813421", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ded35b4c2c8ebf53faa42987703616e2a813421"}], "stats": {"total": 137, "additions": 101, "deletions": 36}, "files": [{"sha": "31c14656ff610a133c3342938aa06aa6edf2c0bc", "filename": "libjava/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6d27fe75d0c3200470aa42595746c853240ff6e0", "patch": "@@ -1,3 +1,17 @@\n+2005-02-02  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/19681:\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (ordinary_java_source_files): Added new class.\n+\t* java/lang/natVMClassLoader.cc (getSystemClassLoaderInternal):\n+\tUse system_instance, not instance.\n+\t* gnu/gcj/runtime/SystemClassLoader.java: New file.\n+\t* gnu/gcj/runtime/VMClassLoader.java (init): Don't search\n+\tjava.class.path.\n+\t(system_instance): New field.\n+\t(initialize): Initialize the system loader as well.\n+\t(VMClassLoader): Default to LIB_CACHE.\n+\n 2005-02-02  Tom Tromey  <tromey@redhat.com>\n \n \t* gnu/gcj/runtime/PersistentByteMap.java: Fixed typo."}, {"sha": "a3ad469f3e13d2a82b552c1d37242753ccfe6e29", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=6d27fe75d0c3200470aa42595746c853240ff6e0", "patch": "@@ -2872,6 +2872,7 @@ gnu/gcj/runtime/SharedLibHelper.java \\\n gnu/gcj/runtime/SharedLibLoader.java \\\n gnu/gcj/runtime/StackTrace.java \\\n gnu/gcj/runtime/StringBuffer.java \\\n+gnu/gcj/runtime/SystemClassLoader.java \\\n gnu/gcj/runtime/VMClassLoader.java \\\n gnu/gcj/util/Debug.java \\\n gnu/java/io/ASN1ParsingException.java \\"}, {"sha": "cf43aceabbef3c62e9f0db74ec2cf143a32d0e9e", "filename": "libjava/Makefile.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=6d27fe75d0c3200470aa42595746c853240ff6e0", "patch": "@@ -557,6 +557,7 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc link.cc \\\n \tgnu/gcj/runtime/SharedLibLoader.java \\\n \tgnu/gcj/runtime/StackTrace.java \\\n \tgnu/gcj/runtime/StringBuffer.java \\\n+\tgnu/gcj/runtime/SystemClassLoader.java \\\n \tgnu/gcj/runtime/VMClassLoader.java gnu/gcj/util/Debug.java \\\n \tgnu/java/io/ASN1ParsingException.java \\\n \tgnu/java/io/Base64InputStream.java \\\n@@ -3863,6 +3864,7 @@ am__objects_15 = $(am__objects_9) gnu/classpath/ServiceFactory.lo \\\n \tgnu/gcj/runtime/SharedLibHelper.lo \\\n \tgnu/gcj/runtime/SharedLibLoader.lo \\\n \tgnu/gcj/runtime/StackTrace.lo gnu/gcj/runtime/StringBuffer.lo \\\n+\tgnu/gcj/runtime/SystemClassLoader.lo \\\n \tgnu/gcj/runtime/VMClassLoader.lo gnu/gcj/util/Debug.lo \\\n \tgnu/java/io/ASN1ParsingException.lo \\\n \tgnu/java/io/Base64InputStream.lo \\\n@@ -7064,6 +7066,7 @@ gnu/gcj/runtime/SharedLibHelper.java \\\n gnu/gcj/runtime/SharedLibLoader.java \\\n gnu/gcj/runtime/StackTrace.java \\\n gnu/gcj/runtime/StringBuffer.java \\\n+gnu/gcj/runtime/SystemClassLoader.java \\\n gnu/gcj/runtime/VMClassLoader.java \\\n gnu/gcj/util/Debug.java \\\n gnu/java/io/ASN1ParsingException.java \\\n@@ -9334,6 +9337,8 @@ gnu/gcj/runtime/StackTrace.lo: gnu/gcj/runtime/$(am__dirstamp) \\\n \tgnu/gcj/runtime/$(DEPDIR)/$(am__dirstamp)\n gnu/gcj/runtime/StringBuffer.lo: gnu/gcj/runtime/$(am__dirstamp) \\\n \tgnu/gcj/runtime/$(DEPDIR)/$(am__dirstamp)\n+gnu/gcj/runtime/SystemClassLoader.lo: gnu/gcj/runtime/$(am__dirstamp) \\\n+\tgnu/gcj/runtime/$(DEPDIR)/$(am__dirstamp)\n gnu/gcj/runtime/VMClassLoader.lo: gnu/gcj/runtime/$(am__dirstamp) \\\n \tgnu/gcj/runtime/$(DEPDIR)/$(am__dirstamp)\n gnu/gcj/util/Debug.lo: gnu/gcj/util/$(am__dirstamp) \\\n@@ -15834,6 +15839,8 @@ mostlyclean-compile:\n \t-rm -f gnu/gcj/runtime/StackTrace.lo\n \t-rm -f gnu/gcj/runtime/StringBuffer.$(OBJEXT)\n \t-rm -f gnu/gcj/runtime/StringBuffer.lo\n+\t-rm -f gnu/gcj/runtime/SystemClassLoader.$(OBJEXT)\n+\t-rm -f gnu/gcj/runtime/SystemClassLoader.lo\n \t-rm -f gnu/gcj/runtime/VMClassLoader.$(OBJEXT)\n \t-rm -f gnu/gcj/runtime/VMClassLoader.lo\n \t-rm -f gnu/gcj/runtime/natFinalizerThread.$(OBJEXT)\n@@ -21293,6 +21300,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/SharedLibLoader.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/StackTrace.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/StringBuffer.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/SystemClassLoader.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/VMClassLoader.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/natFinalizerThread.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/runtime/$(DEPDIR)/natNameFinder.Plo@am__quote@"}, {"sha": "163d3dd84d77ef2be2d8f3395c95a7e48b216cda", "filename": "libjava/gnu/gcj/runtime/SystemClassLoader.java", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2Fgnu%2Fgcj%2Fruntime%2FSystemClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2Fgnu%2Fgcj%2Fruntime%2FSystemClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FSystemClassLoader.java?ref=6d27fe75d0c3200470aa42595746c853240ff6e0", "patch": "@@ -0,0 +1,57 @@\n+/* Copyright (C) 2005  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package gnu.gcj.runtime;\n+\n+import java.io.*;\n+import java.util.StringTokenizer;\n+import java.util.HashSet;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+\n+public final class SystemClassLoader extends URLClassLoader\n+{\n+  SystemClassLoader(ClassLoader parent)\n+  {\n+    super(new URL[0], parent);\n+  }\n+\n+  // We add the URLs to the system class loader late.  The reason for\n+  // this is that during bootstrap we don't want to parse URLs or\n+  // create URL connections, since that will result in circularities\n+  // causing a crash.\n+  void init()\n+  {\n+    StringTokenizer st\n+      = new StringTokenizer (System.getProperty (\"java.class.path\", \".\"),\n+\t\t\t     File.pathSeparator);\n+    while (st.hasMoreElements ()) \n+      {  \n+\tString e = st.nextToken ();\n+\ttry\n+\t  {\n+\t    if (\"\".equals(e))\n+\t      e = \".\";\n+\n+\t    File path = new File(e);\n+\t    // Ignore invalid paths.\n+\t    if (!path.exists())\n+\t      continue;\n+\t    if (!e.endsWith (File.separator) && path.isDirectory ())\n+\t      addURL(new URL(\"file\", \"\", -1, e + File.separator));\n+\t    else\n+\t      addURL(new URL(\"file\", \"\", -1, e));\n+\t  } \n+\tcatch (java.net.MalformedURLException x)\n+\t  {\n+\t    // This should never happen.\n+\t    throw new RuntimeException(x);\n+\t  }\n+      }\n+  }\n+}"}, {"sha": "1ded892a06d19927efc3429c14f07ef0dbed5788", "filename": "libjava/gnu/gcj/runtime/VMClassLoader.java", "status": "modified", "additions": 15, "deletions": 35, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java?ref=6d27fe75d0c3200470aa42595746c853240ff6e0", "patch": "@@ -14,8 +14,12 @@\n import java.util.StringTokenizer;\n import java.util.HashSet;\n import java.net.URL;\n+import java.net.URLClassLoader;\n \n-public final class VMClassLoader extends java.net.URLClassLoader\n+// Despite its name, this class is really the extension loader for\n+// libgcj.  Class loader bootstrap is a bit tricky, see prims.cc and\n+// SystemClassLoader for some details.\n+public final class VMClassLoader extends URLClassLoader\n {\n   private VMClassLoader ()\n   {\t\n@@ -28,44 +32,17 @@ private VMClassLoader ()\n     else if (\"cache\".equals(p))\n       lib_control = LIB_CACHE;\n     else if (\"full\".equals(p))\n-      {\n-\t// In case we ever want to change the default.\n-\tlib_control = LIB_FULL;\n-      }\n-    else\n       lib_control = LIB_FULL;\n+    else\n+      lib_control = LIB_CACHE;\n   }\n \n   private void init() \n   {\n-    StringTokenizer st\n-\t= new StringTokenizer (System.getProperty (\"java.class.path\", \".\"),\n-\t\t\t       System.getProperty (\"path.separator\", \":\"));\n-\n-    while (st.hasMoreElements ()) \n-      {  \n-\tString e = st.nextToken ();\n-\ttry\n-\t  {\n-\t    File path = new File(e);\n-\t    // Ignore invalid paths.\n-\t    if (!path.exists())\n-\t      continue;\n-\t    if (!e.endsWith (File.separator) && path.isDirectory ())\n-\t      addURL(new URL(\"file\", \"\", -1, e + File.separator));\n-\t    else\n-\t      addURL(new URL(\"file\", \"\", -1, e));\n-\t  } \n-\tcatch (java.net.MalformedURLException x)\n-\t  {\n-\t    // This should never happen.\n-\t    throw new RuntimeException(x);\n-\t  }\n-      }\n-\n     // Add the contents of the extensions directories.  \n-    st = new StringTokenizer (System.getProperty (\"java.ext.dirs\"),\n-\t\t\t      System.getProperty (\"path.separator\", \":\"));\n+    StringTokenizer st\n+      = new StringTokenizer (System.getProperty (\"java.ext.dirs\"),\n+\t\t\t     File.pathSeparator);\n \n     try\n       {\n@@ -91,8 +68,8 @@ public boolean accept (File dir, String name)\n             }\n \t  }\n \n-\t// Add core:/ to the end of the java.class.path so any resources\n-\t// compiled into this executable may be found.\n+\t// Add core:/ to the end so any resources compiled into this\n+\t// executable may be found.\n \taddURL(new URL(\"core\", \"\", -1, \"/\"));\n       }\n     catch (java.net.MalformedURLException x)\n@@ -116,6 +93,7 @@ protected native Class findClass(String name)\n   static void initialize ()\n   {\n     instance.init();\n+    system_instance.init();\n   }\n \n   // Define a package for something loaded natively.\n@@ -148,6 +126,8 @@ void definePackageForNative(String className)\n \n   // The only VMClassLoader that can exist.\n   static VMClassLoader instance = new VMClassLoader();\n+  // The system class loader.\n+  static SystemClassLoader system_instance = new SystemClassLoader(instance);\n \n   private static final int LIB_FULL = 0;\n   private static final int LIB_CACHE = 1;"}, {"sha": "e21bb649542659b6fdad016b05f3502377c3dc6f", "filename": "libjava/java/lang/VMClassLoader.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2Fjava%2Flang%2FVMClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2Fjava%2Flang%2FVMClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FVMClassLoader.java?ref=6d27fe75d0c3200470aa42595746c853240ff6e0", "patch": "@@ -40,15 +40,19 @@\n \n import gnu.java.util.EmptyEnumeration;\n import java.lang.reflect.Constructor;\n+import java.io.File;\n import java.io.IOException;\n import java.net.URL;\n+import java.net.URLClassLoader;\n import java.security.AllPermission;\n import java.security.Permission;\n import java.security.Permissions;\n import java.security.ProtectionDomain;\n+import java.util.ArrayList;\n import java.util.Enumeration;\n import java.util.HashMap;\n import java.util.Map;\n+import java.util.StringTokenizer;\n \n /**\n  * java.lang.VMClassLoader is a package-private helper for VMs to implement"}, {"sha": "cd98e7e45615edcb850f094de7239a6db28c654c", "filename": "libjava/java/lang/natVMClassLoader.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2Fjava%2Flang%2FnatVMClassLoader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d27fe75d0c3200470aa42595746c853240ff6e0/libjava%2Fjava%2Flang%2FnatVMClassLoader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatVMClassLoader.cc?ref=6d27fe75d0c3200470aa42595746c853240ff6e0", "patch": "@@ -24,6 +24,7 @@ details.  */\n #include <java/lang/VMClassLoader.h>\n #include <java/lang/VMCompiler.h>\n #include <gnu/gcj/runtime/VMClassLoader.h>\n+#include <gnu/gcj/runtime/SystemClassLoader.h>\n #include <java/lang/ClassLoader.h>\n #include <java/lang/Class.h>\n #include <java/lang/Throwable.h>\n@@ -114,7 +115,7 @@ java::lang::ClassLoader *\n java::lang::VMClassLoader::getSystemClassLoaderInternal()\n {\n   _Jv_InitClass (&gnu::gcj::runtime::VMClassLoader::class$);\n-  return gnu::gcj::runtime::VMClassLoader::instance;\n+  return gnu::gcj::runtime::VMClassLoader::system_instance;\n }\n \n jclass"}]}