{"sha": "5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "node_id": "C_kwDOANBUbNoAKDVmYjFlNjc0NTNmNDBhZTZlNzdiOTVmN2E3OWEwMTZhZWM2YTE5NjY", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-12-17T00:17:56Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-12-17T00:17:56Z"}, "message": "Daily bump.", "tree": {"sha": "23e2fe920aa1bf720d9be18496cc10266a68cc2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23e2fe920aa1bf720d9be18496cc10266a68cc2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/comments", "author": null, "committer": null, "parents": [{"sha": "6e56633daae79f514b0e71f4d9849bcd8d9ce71f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e56633daae79f514b0e71f4d9849bcd8d9ce71f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e56633daae79f514b0e71f4d9849bcd8d9ce71f"}], "stats": {"total": 239, "additions": 238, "deletions": 1}, "files": [{"sha": "a307c94d0b3cb1deb2bf715e764f3d1fd5d9da60", "filename": "contrib/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "patch": "@@ -1,3 +1,19 @@\n+2022-12-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Print each warning only one time.\n+\n+2022-12-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_email.py: Use PatchSet constructor\n+\tas newline argument is not supported with older unidiff\n+\tlibrary.\n+\n+2022-12-16  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gcc-changelog/git_email.py (GitEmail:__init__): Support older\n+\tunidiff.PatchSet that do not have a newline= argument\n+\tof from_filename.\n+\n 2022-12-14  Martin Liska  <mliska@suse.cz>\n \n \t* analyze_brprob.py: Add copyright header."}, {"sha": "a4c26b4394d099674f67c495e69577721959f7f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "patch": "@@ -1,3 +1,72 @@\n+2022-12-16  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* config/pa/pa.cc (pa_option_override): Disable -fstack-protector.\n+\n+2022-12-16  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tRevert:\n+\t2022-12-15  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* ira-costs.cc: Include print-rtl.h.\n+\t(record_reg_classes, scan_one_insn): Add code to print debug info.\n+\t* ira.cc (ira_init_register_move_cost): Check that at least one hard\n+\treg of the mode are in the class contents to calculate the\n+\tregister move costs.\n+\n+2022-12-16  Qing Zhao  <qing.zhao@oracle.com>\n+\n+\t* doc/invoke.texi: Document -Wstrict-flex-arrays option.\n+\t* gimple-array-bounds.cc (check_out_of_bounds_and_warn): Add two more\n+\targuments.\n+\t(array_bounds_checker::check_array_ref): Issue warnings for\n+\t-Wstrict-flex-arrays.\n+\t* opts.cc (finish_options): Issue warning for unsupported combination\n+\tof -Wstrict_flex_arrays and -fstrict-flex-array.\n+\t* tree-vrp.cc (execute_ranger_vrp): Enable the pass when\n+\twarn_strict_flex_array is true.\n+\n+2022-12-16  Palmer Dabbelt  <palmer@rivosinc.com>\n+\n+\t* config/riscv/riscv.cc (riscv_option_override): Fix comment\n+\twording.\n+\n+2022-12-16  Palmer Dabbelt  <palmer@rivosinc.com>\n+\n+\t* doc/extend.texi (__builtin_riscv_pause): Imply\n+\tXgnuzihintpausestate.\n+\n+2022-12-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/108086\n+\t* tree-inline.cc (remap_ssa_name): Do not unshare the\n+\tresult from the decl_map.\n+\n+2022-12-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/108086\n+\t* tree-inline.cc (copy_bb): Remove handling of (foo *)&this->m\n+\tsubstitution which is done in remap_gimple_op_r via\n+\tre-gimplifying.\n+\n+2022-12-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/106751\n+\t* loop-invariant.cc (move_invariant_reg): If preheader bb ends\n+\twith a JUMP_INSN, split the preheader edge and emit invariants\n+\tinto the new preheader basic block.\n+\n+2022-12-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/108086\n+\t* tree-inline.cc (remap_gimple_stmt): Add stmts to the\n+\tsequence without updating them.  Simplify x == x detection.\n+\n+2022-12-16  Haochen Jiang  <haochen.jiang@intel.com>\n+\n+\t* config/i386/cmpccxaddintrin.h\n+\t(__cmpccxadd_epi32): Rename to _cmpccxadd_epi32.\n+\t(__cmpccxadd_epi64): Rename to _cmpccxadd_epi64.\n+\n 2022-12-15  Vladimir N. Makarov  <vmakarov@redhat.com>\n \n \t* ira-costs.cc: Include print-rtl.h."}, {"sha": "ee0b6666b546329df00e3a4eab97784d3ff1b98e", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "patch": "@@ -1 +1 @@\n-20221216\n+20221217"}, {"sha": "9ca2e46c8baa43fce8f87e722cea462ed35413dd", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "patch": "@@ -1,3 +1,24 @@\n+2022-12-16  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106479\n+\t* kf.cc (kf_memcpy_memmove::impl_call_pre): Pass in source region\n+\tto region_model::check_for_poison.\n+\t* region-model-asm.cc (region_model::on_asm_stmt): Pass NULL\n+\tregion to region_model::check_for_poison.\n+\t* region-model.cc (region_model::check_for_poison): Add\n+\t\"src_region\" param, and pass it to poisoned_value_diagnostic.\n+\t(region_model::on_assignment): Pass NULL region to\n+\tregion_model::check_for_poison.\n+\t(region_model::get_rvalue): Likewise.\n+\t* region-model.h (region_model::check_for_poison): Add\n+\t\"src_region\" param.\n+\t* sm-fd.cc (fd_state_machine::on_accept): Pass in source region\n+\tto region_model::check_for_poison.\n+\t* varargs.cc (kf_va_copy::impl_call_pre): Pass NULL region to\n+\tregion_model::check_for_poison.\n+\t(kf_va_arg::impl_call_pre): Pass in source region to\n+\tregion_model::check_for_poison.\n+\n 2022-12-14  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/108065"}, {"sha": "3670dcc167b97b39d99a186a471d0c1fe6f185ca", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "patch": "@@ -1,3 +1,7 @@\n+2022-12-16  Qing Zhao  <qing.zhao@oracle.com>\n+\n+\t* c.opt (Wstrict-flex-arrays): New option.\n+\n 2022-12-02  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* c-attribs.cc (handle_deprecated_attribute): Use type when"}, {"sha": "d52b03fcf595b7f8ba6b3b7157c3a4197b22ac31", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "patch": "@@ -1,3 +1,10 @@\n+2022-12-16  Andrew Pinski  <pinskia@gmail.com>\n+\t    Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/107768\n+\t* coroutines.cc (coro_rewrite_function_body): Initialize pointers\n+\tfrom nullptr_node.  (morph_fn_to_coro): Likewise.\n+\n 2022-12-15  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/102104"}, {"sha": "24c4756a31f5cad96afabd8df9ac4180c8cbeb0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "patch": "@@ -1,3 +1,51 @@\n+2022-12-16  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* lib/target-supports.exp (check_effective_target_static): Return 0\n+\ton hppa*-*-*.\n+\n+2022-12-16  Andrew Pinski  <pinskia@gmail.com>\n+\t    Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/107768\n+\t* g++.dg/coroutines/pr107768.C: New test.\n+\n+2022-12-16  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106479\n+\t* gcc.dg/analyzer/pr104308.c (test_memmove_within_uninit): Remove\n+\txfail on region creation event.\n+\n+2022-12-16  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tRevert:\n+\t2022-12-16  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* gcc.target/avr/pr90706.c: New.\n+\n+2022-12-16  Qing Zhao  <qing.zhao@oracle.com>\n+\n+\t* gcc.dg/Warray-bounds-flex-arrays-1.c: Update testing case with\n+\t-Wstrict-flex-arrays.\n+\t* gcc.dg/Warray-bounds-flex-arrays-2.c: Likewise.\n+\t* gcc.dg/Warray-bounds-flex-arrays-3.c: Likewise.\n+\t* gcc.dg/Warray-bounds-flex-arrays-4.c: Likewise.\n+\t* gcc.dg/Warray-bounds-flex-arrays-5.c: Likewise.\n+\t* gcc.dg/Warray-bounds-flex-arrays-6.c: Likewise.\n+\t* c-c++-common/Wstrict-flex-arrays.c: New test.\n+\t* gcc.dg/Wstrict-flex-arrays-2.c: New test.\n+\t* gcc.dg/Wstrict-flex-arrays-3.c: New test.\n+\t* gcc.dg/Wstrict-flex-arrays.c: New test.\n+\n+2022-12-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/106751\n+\t* gcc.c-torture/compile/pr106751.c: New test.\n+\n+2022-12-16  Haochen Jiang  <haochen.jiang@intel.com>\n+\n+\t* gcc.target/i386/cmpccxadd-1.c: Fix intrin name.\n+\t* gcc.target/i386/cmpccxadd-2.c: Ditto.\n+\n 2022-12-15  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/102104"}, {"sha": "5559ce138ee69e9b936ae1d49b5a99938087013d", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "patch": "@@ -1,3 +1,12 @@\n+2022-12-16  Thomas Neumann  <tneumann@users.sourceforge.net>\n+\n+\t* unwind-dw2-fde.c: Initialize fde object lazily when\n+\tthe first exception tries to pass through.\n+\n+2022-12-16  Thomas Neumann  <tneumann@users.sourceforge.net>\n+\n+\t* unwind-dw2-fde.c: Use radix sort instead of split+sort+merge.\n+\n 2022-12-08  Max Filippov  <jcmvbkbc@gmail.com>\n \n \t* config/xtensa/xtensa-config-builtin.h (XCHAL_NUM_AREGS)"}, {"sha": "cf81dc53e0eb2b3ae82fdc1b75e8caed8f67b10f", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "patch": "@@ -1,3 +1,9 @@\n+2022-12-16  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR libfortran/108056\n+\t* testsuite/libgomp.fortran/allocate-4.f90: Remove\n+\taccidentally added file.\n+\n 2022-12-15  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR libfortran/108056"}, {"sha": "3f5637653e70ee330bbafcff9b694692346e455f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb1e67453f40ae6e77b95f7a79a016aec6a1966/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5fb1e67453f40ae6e77b95f7a79a016aec6a1966", "patch": "@@ -1,3 +1,60 @@\n+2022-12-16  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* config/abi/post/hppa-linux-gnu/baseline_symbols.txt: Update.\n+\n+2022-12-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/expected (expected): Add monadic operations.\n+\t(expected<void, E>): Likewise.\n+\t* include/std/version (__cpp_lib_expected): Bump value.\n+\t* testsuite/20_util/expected/synopsis.cc: Adjust expected macro\n+\tvalue.\n+\t* testsuite/20_util/expected/version.cc: Likewise.\n+\t* testsuite/20_util/expected/illformed_neg.cc: Prune additional\n+\terrors from ill-formed monadic operations.\n+\t* testsuite/20_util/expected/observers.cc: Check error_or.\n+\t* testsuite/20_util/expected/monadic.cc: New test.\n+\n+2022-12-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/expected (expected::_M_swap_val_unex): Guard the\n+\tcorrect object.\n+\t(expected::swap): Move is_swappable\n+\trequirement from static_assert to constraint.\n+\t(swap): Likewise.\n+\t(operator==): Remove noexcept-specifier.\n+\t* testsuite/20_util/expected/swap.cc: Check swapping of\n+\ttypes without non-throwing move constructor. Check constraints\n+\ton swap.\n+\t* testsuite/20_util/expected/unexpected.cc: Check constraints on\n+\tswap.\n+\t* testsuite/20_util/expected/equality.cc: New test.\n+\n+2022-12-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/alloc_traits.h (__allocator_traits_base::__rebind):\n+\tAdd static assert for rebind requirement.\n+\t* testsuite/20_util/allocator_traits/members/rebind_alloc.cc:\n+\tFix invalid rebind member in test allocator.\n+\t* testsuite/20_util/allocator_traits/requirements/rebind_neg.cc:\n+\tNew test.\n+\t* testsuite/20_util/scoped_allocator/outermost.cc: Add rebind to\n+\ttest allocator.\n+\t* testsuite/23_containers/forward_list/48101_neg.cc: Prune new\n+\tstatic assert error.\n+\t* testsuite/23_containers/unordered_multiset/48101_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/48101_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/52591.cc: Fix typo in rebind.\n+\n+2022-12-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108118\n+\t* include/bits/shared_ptr_base.h (weak_ptr::operator=):\n+\tImplement as move-and-swap exactly as specified in the standard.\n+\t* testsuite/20_util/weak_ptr/cons/self_move.cc: New test.\n+\n 2022-12-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libstdc++/108075"}]}