{"sha": "cd7d1f448a4a826a4210121ed6bec989913ba4e7", "node_id": "C_kwDOANBUbNoAKGNkN2QxZjQ0OGE0YTgyNmE0MjEwMTIxZWQ2YmVjOTg5OTEzYmE0ZTc", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-06-16T11:22:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-06T13:29:49Z"}, "message": "[Ada] Document the various function return mechanisms\n\ngcc/ada/\n\n\t* exp_ch6.adb (Function return mechanisms): New paragraph.", "tree": {"sha": "f7d156baba193fc3eb1bbae1958e110714284605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7d156baba193fc3eb1bbae1958e110714284605"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd7d1f448a4a826a4210121ed6bec989913ba4e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7d1f448a4a826a4210121ed6bec989913ba4e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd7d1f448a4a826a4210121ed6bec989913ba4e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7d1f448a4a826a4210121ed6bec989913ba4e7/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5802d60130bd804663559471f9c5f3561dfab4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5802d60130bd804663559471f9c5f3561dfab4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5802d60130bd804663559471f9c5f3561dfab4d"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "bf51e64c463534c26dd11b5c902dffc3aa7713cd", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7d1f448a4a826a4210121ed6bec989913ba4e7/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7d1f448a4a826a4210121ed6bec989913ba4e7/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=cd7d1f448a4a826a4210121ed6bec989913ba4e7", "patch": "@@ -83,7 +83,48 @@ with Validsw;        use Validsw;\n \n package body Exp_Ch6 is\n \n-   --  Suffix for BIP formals\n+   --------------------------------\n+   -- Function return mechanisms --\n+   --------------------------------\n+\n+   --  This is a summary of the various function return mechanisms implemented\n+   --  in GNAT for Ada 2005 and later versions of the language. In the below\n+   --  table, the first column must be read as an if expression: if the result\n+   --  type of the function is limited, then the return mechanism is and ...;\n+   --  elsif the result type is indefinite or large definite, then ...; elsif\n+   --  ...; else ... The different mechanisms are implemented either in the\n+   --  front end, or in the back end, or partly in both ends, depending on the\n+   --  result type.\n+\n+   --    Result type    |  Return mechanism    |    Front end    |   Back end\n+   --    --------------------------------------------------------------------\n+\n+   --     Limited           Build In Place              All\n+\n+   --     Indefinite/       Secondary Stack          Needs Fin.       Others\n+   --     Large definite\n+\n+   --     Needs Fin.        Secondary Stack             All\n+   --     (BERS False)\n+\n+   --     Needs Fin.        Invisible Parameter         All            All\n+   --     (BERS True)                                 (return)        (call)\n+\n+   --     By Reference      Invisible Parameter                        All\n+\n+   --     Others            Primary stack/                             All\n+   --                       Registers\n+\n+   --    Needs Fin.: type needs finalization [RM 7.6(9.1/2-9.6/2)]\n+   --    BERS: Opt.Back_End_Return_Slot setting\n+\n+   --  The table is valid for all calls except for those dispatching on result;\n+   --  the latter calls are considered as returning a class-wide type and thus\n+   --  always return on the secondary stack, with the help of a small wrapper\n+   --  function (thunk) if the original result type is not itself returned on\n+   --  the secondary stack as per the above table.\n+\n+   --  Suffixes for Build-In-Place extra formals\n \n    BIP_Alloc_Suffix               : constant String := \"BIPalloc\";\n    BIP_Storage_Pool_Suffix        : constant String := \"BIPstoragepool\";"}]}