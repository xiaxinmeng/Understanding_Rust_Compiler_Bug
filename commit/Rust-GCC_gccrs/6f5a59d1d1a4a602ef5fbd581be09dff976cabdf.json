{"sha": "6f5a59d1d1a4a602ef5fbd581be09dff976cabdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY1YTU5ZDFkMWE0YTYwMmVmNWZiZDU4MWJlMDlkZmY5NzZjYWJkZg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2015-12-02T07:49:47Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-12-02T07:49:47Z"}, "message": "S/390: Further bswap enhancements.\n\ngcc/ChangeLog:\n\n2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/s390.md (\"bswap<mode>2\"): Add support for strv and\n\tstrvg.\n\t(\"bswaphi2\"): New pattern.\n\tNew splitter for HI reg-reg bswap.\n\ngcc/testsuite/ChangeLog:\n\n2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/bswap-1.c (foo64c, foo32a, foo32c): New functions.\n\t* gcc.target/s390/bswaphi-1.c: New test.\n\nFrom-SVN: r231152", "tree": {"sha": "4bae0577f34b971793cdf8decc06252acdb068f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bae0577f34b971793cdf8decc06252acdb068f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf/comments", "author": null, "committer": null, "parents": [{"sha": "a233c891443cf038d305c3cfe36e95506ae1c228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a233c891443cf038d305c3cfe36e95506ae1c228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a233c891443cf038d305c3cfe36e95506ae1c228"}], "stats": {"total": 103, "additions": 88, "deletions": 15}, "files": [{"sha": "2976dfc8c809e05d949ce8d25875c831a124abbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f5a59d1d1a4a602ef5fbd581be09dff976cabdf", "patch": "@@ -1,3 +1,10 @@\n+2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.md (\"bswap<mode>2\"): Add support for strv and\n+\tstrvg.\n+\t(\"bswaphi2\"): New pattern.\n+\tNew splitter for HI reg-reg bswap.\n+\n 2015-11-27  Jiri Engelthaler  <engycz@gmail.com>\n \n \tPR driver/68029"}, {"sha": "e5db537907cdb0a7708b1500fb60ee6f4d9c7818", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 28, "deletions": 10, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=6f5a59d1d1a4a602ef5fbd581be09dff976cabdf", "patch": "@@ -10451,25 +10451,43 @@\n ; FIXME: There is also mvcin but we cannot use it since src and target\n ; may overlap.\n (define_insn \"bswap<mode>2\"\n-  [(set (match_operand:GPR 0            \"register_operand\"     \"=d, d\")\n-\t(bswap:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \" d,RT\")))]\n+  [(set (match_operand:GPR 0            \"nonimmediate_operand\" \"=d, d,RT\")\n+\t(bswap:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \" d,RT, d\")))]\n   \"TARGET_CPU_ZARCH\"\n   \"@\n    lrv<g>r\\t%0,%1\n-   lrv<g>\\t%0,%1\"\n-  [(set_attr \"type\" \"*,load\")\n-   (set_attr \"op_type\" \"RRE,RXY\")\n+   lrv<g>\\t%0,%1\n+   strv<g>\\t%1,%0\"\n+  [(set_attr \"type\" \"*,load,store\")\n+   (set_attr \"op_type\" \"RRE,RXY,RXY\")\n    (set_attr \"z10prop\" \"z10_super\")])\n \n (define_insn \"bswaphi2\"\n-  [(set (match_operand:HI 0           \"register_operand\" \"=d\")\n-\t(bswap:HI (match_operand:HI 1 \"memory_operand\"   \"RT\")))]\n+  [(set (match_operand:HI 0           \"nonimmediate_operand\" \"=d, d,RT\")\n+\t(bswap:HI (match_operand:HI 1 \"nonimmediate_operand\" \" d,RT, d\")))]\n   \"TARGET_CPU_ZARCH\"\n-  \"lrvh\\t%0,%1\"\n-  [(set_attr \"type\" \"load\")\n-   (set_attr \"op_type\" \"RXY\")\n+  \"@\n+   #\n+   lrvh\\t%0,%1\n+   strvh\\t%1,%0\"\n+  [(set_attr \"type\" \"*,load,store\")\n+   (set_attr \"op_type\" \"RRE,RXY,RXY\")\n    (set_attr \"z10prop\" \"z10_super\")])\n \n+(define_split\n+  [(set (match_operand:HI 0           \"register_operand\" \"\")\n+\t(bswap:HI (match_operand:HI 1 \"register_operand\" \"\")))]\n+  \"TARGET_CPU_ZARCH\"\n+  [(set (match_dup 2) (bswap:SI (match_dup 3)))\n+   (set (match_dup 2) (lshiftrt:SI (match_dup 2)\n+\t\t\t\t   (const_int 16)))\n+   (set (match_dup 0) (subreg:HI (match_dup 2) 2))]\n+{\n+  operands[2] = gen_reg_rtx (SImode);\n+  operands[3] = simplify_gen_subreg (SImode, operands[1], HImode, 0);\n+})\n+\n+\n ;\n ; Population count instruction\n ;"}, {"sha": "911868244251208b4dfd9b660e99c7ab4f2d6380", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f5a59d1d1a4a602ef5fbd581be09dff976cabdf", "patch": "@@ -1,3 +1,8 @@\n+2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/bswap-1.c (foo64c, foo32a, foo32c): New functions.\n+\t* gcc.target/s390/bswaphi-1.c: New test.\n+\n 2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* lib/target-supports.exp: Add s390 and s390x to the list of long"}, {"sha": "edfcdf888c06b4f842b76d124cb4f2f08b0a9d2f", "filename": "gcc/testsuite/gcc.target/s390/bswap-1.c", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fbswap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fbswap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fbswap-1.c?ref=6f5a59d1d1a4a602ef5fbd581be09dff976cabdf", "patch": "@@ -21,16 +21,32 @@ foo64b ()\n }\n /* { dg-final { scan-assembler-times \"lrvg\\t%r2,0\\\\(%r\\[0-9\\]*\\\\)\" 1 { target lp64 } } } */\n \n+void\n+foo64c (uint64_t a)\n+{\n+  u64 = __builtin_bswap64 (a);\n+}\n+/* { dg-final { scan-assembler-times \"strvg\\t%r2,0\\\\(%r\\[0-9\\]*\\\\)\" 1 { target lp64 } } } */\n+\n+\n+\n+uint32_t\n+foo32a (uint32_t a)\n+{\n+  return __builtin_bswap32 (a);\n+}\n+/* { dg-final { scan-assembler-times \"lrvr\\t%r2,%r2\" 1 } } */\n+\n uint32_t\n-foo32 ()\n+foo32b ()\n {\n   return __builtin_bswap32 (u32);\n }\n /* { dg-final { scan-assembler-times \"lrv\\t%r2,0\\\\(%r\\[0-9\\]*\\\\)\" 1 } } */\n \n-uint16_t\n-foo16 ()\n+void\n+foo32c (uint32_t a)\n {\n-  return __builtin_bswap16 (u16);\n+  u32 = __builtin_bswap32 (a);\n }\n-/* { dg-final { scan-assembler-times \"lrvh\\t%r2,0\\\\(%r\\[0-9\\]*\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"strv\\t%r2,0\\\\(%r\\[0-9\\]*\\\\)\" 1 } } */"}, {"sha": "f6be9b42d8cd4fd5adfa330ea47a82a8e0dfda7e", "filename": "gcc/testsuite/gcc.target/s390/bswaphi-1.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fbswaphi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5a59d1d1a4a602ef5fbd581be09dff976cabdf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fbswaphi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fbswaphi-1.c?ref=6f5a59d1d1a4a602ef5fbd581be09dff976cabdf", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z900 -mzarch\" } */\n+\n+#include <stdint.h>\n+\n+uint16_t u16;\n+\n+uint16_t\n+foo16a (uint16_t a)\n+{\n+  return __builtin_bswap16 (a);\n+}\n+/* { dg-final { scan-assembler-times \"lrvr\\t%r2,%r\\[0-9\\]*\" 1 } } */\n+\n+uint16_t\n+foo16b ()\n+{\n+  return __builtin_bswap16 (u16);\n+}\n+/* { dg-final { scan-assembler-times \"lrvh\\t%r2,0\\\\(%r\\[0-9\\]*\\\\)\" 1 } } */\n+\n+void\n+foo16c (uint16_t a)\n+{\n+  u16 = __builtin_bswap16 (a);\n+}\n+/* { dg-final { scan-assembler-times \"strvh\\t%r2,0\\\\(%r\\[0-9\\]*\\\\)\" 1 } } */"}]}