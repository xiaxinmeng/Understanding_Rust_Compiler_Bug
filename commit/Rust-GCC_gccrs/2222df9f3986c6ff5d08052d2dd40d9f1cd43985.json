{"sha": "2222df9f3986c6ff5d08052d2dd40d9f1cd43985", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIyMmRmOWYzOTg2YzZmZjVkMDgwNTJkMmRkNDBkOWYxY2Q0Mzk4NQ==", "commit": {"author": {"name": "Ollie Wild", "email": "aaw@google.com", "date": "2012-08-03T15:26:36Z"}, "committer": {"name": "Ollie Wild", "email": "aaw@gcc.gnu.org", "date": "2012-08-03T15:26:36Z"}, "message": "stl_map.h (operator[](key_type&&)): Replace std::make_pair with value_type.\n\n2012-08-03  Ollie Wild  <aaw@google.com>\n\t    Richard Smith  <richardsmith@google.com>\n\n\t* include/bits/stl_map.h (operator[](key_type&&)): Replace\n\tstd::make_pair with value_type.\n\t* testsuite/23_containers/map/operators/2.cc: New test.\n\nCo-Authored-By: Richard Smith <richardsmith@google.com>\n\nFrom-SVN: r190128", "tree": {"sha": "a0e32d6292321994a4b6166b17345cce6227d004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0e32d6292321994a4b6166b17345cce6227d004"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2222df9f3986c6ff5d08052d2dd40d9f1cd43985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2222df9f3986c6ff5d08052d2dd40d9f1cd43985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2222df9f3986c6ff5d08052d2dd40d9f1cd43985", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2222df9f3986c6ff5d08052d2dd40d9f1cd43985/comments", "author": {"login": "olliewild", "id": 11523068, "node_id": "MDQ6VXNlcjExNTIzMDY4", "avatar_url": "https://avatars.githubusercontent.com/u/11523068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olliewild", "html_url": "https://github.com/olliewild", "followers_url": "https://api.github.com/users/olliewild/followers", "following_url": "https://api.github.com/users/olliewild/following{/other_user}", "gists_url": "https://api.github.com/users/olliewild/gists{/gist_id}", "starred_url": "https://api.github.com/users/olliewild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olliewild/subscriptions", "organizations_url": "https://api.github.com/users/olliewild/orgs", "repos_url": "https://api.github.com/users/olliewild/repos", "events_url": "https://api.github.com/users/olliewild/events{/privacy}", "received_events_url": "https://api.github.com/users/olliewild/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b44f5d907f60d7a02ebef69d235ab48ed5eadd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b44f5d907f60d7a02ebef69d235ab48ed5eadd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b44f5d907f60d7a02ebef69d235ab48ed5eadd5"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "3e94f240208a30a73116c766dbec3e6bf19543b6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2222df9f3986c6ff5d08052d2dd40d9f1cd43985/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2222df9f3986c6ff5d08052d2dd40d9f1cd43985/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2222df9f3986c6ff5d08052d2dd40d9f1cd43985", "patch": "@@ -1,3 +1,10 @@\n+2012-08-03  Ollie Wild  <aaw@google.com>\n+\t    Richard Smith  <richardsmith@google.com>\n+\n+\t* include/bits/stl_map.h (operator[](key_type&&)): Replace\n+\tstd::make_pair with value_type.\n+\t* testsuite/23_containers/map/operators/2.cc: New test.\n+\n 2012-08-03  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/std/memory: Include auto_ptr.h later."}, {"sha": "a3abdd4d5fcd50380578cf9d6e69d38932013588", "filename": "libstdc++-v3/include/bits/stl_map.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2222df9f3986c6ff5d08052d2dd40d9f1cd43985/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2222df9f3986c6ff5d08052d2dd40d9f1cd43985/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h?ref=2222df9f3986c6ff5d08052d2dd40d9f1cd43985", "patch": "@@ -475,7 +475,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \titerator __i = lower_bound(__k);\n \t// __i->first is greater than or equivalent to __k.\n \tif (__i == end() || key_comp()(__k, (*__i).first))\n-          __i = insert(__i, std::make_pair(std::move(__k), mapped_type()));\n+          __i = insert(__i, value_type(std::move(__k), mapped_type()));\n \treturn (*__i).second;\n       }\n #endif"}, {"sha": "ce633d72ae6434572286371caa415f3cf0783f17", "filename": "libstdc++-v3/testsuite/23_containers/map/operators/2.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2222df9f3986c6ff5d08052d2dd40d9f1cd43985/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2222df9f3986c6ff5d08052d2dd40d9f1cd43985/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F2.cc?ref=2222df9f3986c6ff5d08052d2dd40d9f1cd43985", "patch": "@@ -0,0 +1,38 @@\n+// Copyright (C) 2012\n+// Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 23.4.4 template class map\n+\n+// This test verifies that the value type of a map need not be default\n+// copyable.\n+\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++11\" }\n+\n+#include <map>\n+\n+struct Mapped {\n+    Mapped();\n+    explicit Mapped(const Mapped&);\n+};\n+\n+Mapped & foo()\n+{\n+  std::map<int, Mapped> m;\n+  return m[0];\n+}"}]}