{"sha": "bc7526f6fca0e6ac3bd462ae54170fa464539148", "node_id": "C_kwDOANBUbNoAKGJjNzUyNmY2ZmNhMGU2YWMzYmQ0NjJhZTU0MTcwZmE0NjQ1MzkxNDg", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-01T08:06:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-02T06:35:01Z"}, "message": "lto/106334 - fix previous fix wrt -flto-partition=none\n\nThis adjusts the assert guard to include -flto-partition=none which\nbehaves as WPA.\n\n\tPR lto/106334\n\t* dwarf2out.cc (dwarf2out_register_external_die): Adjust\n\tassert.", "tree": {"sha": "0dbc870ae1c70c6167ef875355b6dec35caf5298", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dbc870ae1c70c6167ef875355b6dec35caf5298"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc7526f6fca0e6ac3bd462ae54170fa464539148", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc7526f6fca0e6ac3bd462ae54170fa464539148", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc7526f6fca0e6ac3bd462ae54170fa464539148", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc7526f6fca0e6ac3bd462ae54170fa464539148/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9da686470d1c23929eefb401280ad8ba17e2a58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9da686470d1c23929eefb401280ad8ba17e2a58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9da686470d1c23929eefb401280ad8ba17e2a58"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "cfea9cf6451790e16cb246b5b259f8b71dd4ba21", "filename": "gcc/dwarf2out.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc7526f6fca0e6ac3bd462ae54170fa464539148/gcc%2Fdwarf2out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc7526f6fca0e6ac3bd462ae54170fa464539148/gcc%2Fdwarf2out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.cc?ref=bc7526f6fca0e6ac3bd462ae54170fa464539148", "patch": "@@ -6069,11 +6069,12 @@ dwarf2out_register_external_die (tree decl, const char *sym,\n \n   if (!external_die_map)\n     external_die_map = hash_map<tree, sym_off_pair>::create_ggc (1000);\n-  /* When we do tree merging during WPA we can end up re-using GC memory\n-     as there's currently no way to unregister external DIEs.  Ideally\n-     we'd register them only after merging finished but allowing override\n-     here is easiest.  See PR106334.  */\n-  gcc_checking_assert (flag_wpa || !external_die_map->get (decl));\n+  /* When we do tree merging during WPA or with -flto-partition=none we\n+     can end up re-using GC memory as there's currently no way to unregister\n+     external DIEs.  Ideally we'd register them only after merging finished\n+     but allowing override here is easiest.  See PR106334.  */\n+  gcc_checking_assert (!(in_lto_p && !flag_wpa)\n+\t\t       || !external_die_map->get (decl));\n   sym_off_pair p = { IDENTIFIER_POINTER (get_identifier (sym)), off };\n   external_die_map->put (decl, p);\n }"}]}