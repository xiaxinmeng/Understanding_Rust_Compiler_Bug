{"sha": "f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJmZjg4NzI5YTg2YTBkYjg2Y2M2YTZlYTk4ZDNkNWViZmVhYTIzMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-06-16T13:48:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-06-16T13:48:07Z"}, "message": "re PR middle-end/40446 (ICE in gen_lowpart_general)\n\n\tPR middle-end/40446\n\t* expr.c (expand_expr_real_1) <case VIEW_CONVERT_EXPR>: Don't\n\tuse gen_lowpart if op0 has complex mode.\n\n\t* g++.dg/other/pr40446.C: New test.\n\nFrom-SVN: r148533", "tree": {"sha": "e5f094d6ded3ba769f2acf1025a682d282eae0b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5f094d6ded3ba769f2acf1025a682d282eae0b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "345f9a8b8e036b4d17232da2e816e87176e18b49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/345f9a8b8e036b4d17232da2e816e87176e18b49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/345f9a8b8e036b4d17232da2e816e87176e18b49"}], "stats": {"total": 60, "additions": 59, "deletions": 1}, "files": [{"sha": "bbf4e60feb8dfca658edd97c9412078a127ca7a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231", "patch": "@@ -1,3 +1,9 @@\n+2009-06-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/40446\n+\t* expr.c (expand_expr_real_1) <case VIEW_CONVERT_EXPR>: Don't\n+\tuse gen_lowpart if op0 has complex mode.\n+\n 2009-06-16  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (do_ds_constraint): Stores in global"}, {"sha": "34137c0cd07ebac43d32a34bc4222cd4973f99d3", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231", "patch": "@@ -8321,7 +8321,8 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n       /* If neither mode is BLKmode, and both modes are the same size\n \t then we can use gen_lowpart.  */\n       else if (mode != BLKmode && GET_MODE (op0) != BLKmode\n-\t       && GET_MODE_SIZE (mode) == GET_MODE_SIZE (GET_MODE (op0)))\n+\t       && GET_MODE_SIZE (mode) == GET_MODE_SIZE (GET_MODE (op0))\n+\t       && !COMPLEX_MODE_P (GET_MODE (op0)))\n \t{\n \t  if (GET_CODE (op0) == SUBREG)\n \t    op0 = force_reg (GET_MODE (op0), op0);"}, {"sha": "689597830a7466b7ac34b56741e2ff9aa4714f8b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231", "patch": "@@ -1,3 +1,8 @@\n+2009-06-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/40446\n+\t* g++.dg/other/pr40446.C: New test.\n+\n 2009-06-16  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/pta-escape-1.c: New testcase."}, {"sha": "33dbcec7159195062c265fe33c184e7ef29797ef", "filename": "gcc/testsuite/g++.dg/other/pr40446.C", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr40446.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr40446.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr40446.C?ref=f2ff88729a86a0db86cc6a6ea98d3d5ebfeaa231", "patch": "@@ -0,0 +1,46 @@\n+// PR middle-end/40446\n+// { dg-do run { target i?86-*-* x86_64-*-* } }\n+// { dg-options \"-O1 -msse2\" }\n+\n+#include <emmintrin.h>\n+#include \"cpuid.h\"\n+\n+extern \"C\" void abort ();\n+\n+struct S\n+{\n+  S (double r, double i) { __real__ s = r; __imag__ s = i; }\n+  __complex__ double s;\n+};\n+\n+__m128d\n+foo ()\n+{\n+  S c (0, 1);\n+  return _mm_load_pd ((double *) &c);\n+}\n+\n+static void\n+__attribute__((noinline))\n+sse2_test ()\n+{\n+  union { __m128d vec; double val[2]; } u;\n+  u.vec = foo ();\n+  if (u.val[0] != 0 || u.val[1] != 1)\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  unsigned int eax, ebx, ecx, edx;\n+\n+  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n+    return 0;\n+\n+  /* Run SSE2 test only if host has SSE2 support.  */\n+  if (edx & bit_SSE2)\n+    sse2_test ();\n+\n+  return 0;\n+}"}]}