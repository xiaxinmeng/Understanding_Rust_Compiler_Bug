{"sha": "6a87d63407a133d5d715f2d39acfbff686321e38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE4N2Q2MzQwN2ExMzNkNWQ3MTVmMmQzOWFjZmJmZjY4NjMyMWUzOA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-03-15T13:43:33Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-03-15T13:43:33Z"}, "message": "c-cppbuiltin.c (builtin_define_with_value_n): Fix whitespace.\n\n\n\t* c-cppbuiltin.c (builtin_define_with_value_n): Fix whitespace.\n\t* c-typeck.c (c_tree_expr_nonnegative_p): Likewise.\n\t* cfgbuild.c (find_many_sub_basic_blocks): Likewise.\n\t(find_sub_basic_blocks): Likewise.\n\t* cgraphunit.c (cgraph_expand_functions): Likewise.\n\t* dwarf2out.c (prune_unused_types): Likewise.\n\t* expr.c (store_field): Likewise.\n\t* genextract.c (print_path): Likewise.\n\t* haifa-sched.c (schedule_insn): Likewise.\n\t* lcm.c (compute_antinout_edge): Likewise.\n\t* loop-unroll.c (decide_peel_once_rolling): Likewise.\n\t* ra-colorize.c (ra_colorize_free_all): Likewise.\n\t* ra-debug.c (dump_igraph): Likewise.\n\t(debug_hard_reg_set): Likewise.\n\t* reg-stack.c (reg_to_stack): Likewise.\n\t* rtlanal.c (refers_to_regno_p): Likewise.\n\t* tracer.c (layout_superblocks): Likewise.\n\n\t* cp/tree.c (count_functions): Fix whitespace.\n\n\t* f/ste.c (ffeste_R810): Fix whitespace.\n\nFrom-SVN: r64402", "tree": {"sha": "c847e4f13422cdd7b2e5beae6e3067359360474d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c847e4f13422cdd7b2e5beae6e3067359360474d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a87d63407a133d5d715f2d39acfbff686321e38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a87d63407a133d5d715f2d39acfbff686321e38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a87d63407a133d5d715f2d39acfbff686321e38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a87d63407a133d5d715f2d39acfbff686321e38/comments", "author": null, "committer": null, "parents": [{"sha": "49c46444677c552a8475a7781df4efce11a4fabd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49c46444677c552a8475a7781df4efce11a4fabd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49c46444677c552a8475a7781df4efce11a4fabd"}], "stats": {"total": 81, "additions": 53, "deletions": 28}, "files": [{"sha": "732055712cc8fd429117865a7e32b513f666bcca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -1,3 +1,23 @@\n+2003-03-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* c-cppbuiltin.c (builtin_define_with_value_n): Fix whitespace.\n+\t* c-typeck.c (c_tree_expr_nonnegative_p): Likewise.\n+\t* cfgbuild.c (find_many_sub_basic_blocks): Likewise.\n+\t(find_sub_basic_blocks): Likewise.\n+\t* cgraphunit.c (cgraph_expand_functions): Likewise.\n+\t* dwarf2out.c (prune_unused_types): Likewise.\n+\t* expr.c (store_field): Likewise.\n+\t* genextract.c (print_path): Likewise.\n+\t* haifa-sched.c (schedule_insn): Likewise.\n+\t* lcm.c (compute_antinout_edge): Likewise.\n+\t* loop-unroll.c (decide_peel_once_rolling): Likewise.\n+\t* ra-colorize.c (ra_colorize_free_all): Likewise.\n+\t* ra-debug.c (dump_igraph): Likewise.\n+\t(debug_hard_reg_set): Likewise.\n+\t* reg-stack.c (reg_to_stack): Likewise.\n+\t* rtlanal.c (refers_to_regno_p): Likewise.\n+\t* tracer.c (layout_superblocks): Likewise.\n+\n 2003-03-15  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* fix-header.c (read_scan_file): Fix thinko."}, {"sha": "0a9f7d11751fda89d9f8f6c046d5c8471937f024", "filename": "gcc/c-cppbuiltin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-cppbuiltin.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -480,7 +480,7 @@ builtin_define_with_value_n (macro, expansion, elen)\n   /* Space for an = and a NUL.  */\n   buf = alloca (mlen + elen + 2);\n   memcpy (buf, macro, mlen);\n-  buf[mlen]= '=';\n+  buf[mlen] = '=';\n   memcpy (buf + mlen + 1, expansion, elen);\n   buf[mlen + elen + 1] = '\\0';\n "}, {"sha": "0d52a7c9d94908c99c4a6177e14d35a0934aa8f1", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -2599,13 +2599,13 @@ c_tree_expr_nonnegative_p (t)\n {\n   if (TREE_CODE (t) == STMT_EXPR)\n     {\n-      t=COMPOUND_BODY (STMT_EXPR_STMT (t));\n+      t = COMPOUND_BODY (STMT_EXPR_STMT (t));\n \n       /* Find the last statement in the chain, ignoring the final\n \t     * scope statement */\n       while (TREE_CHAIN (t) != NULL_TREE \n              && TREE_CODE (TREE_CHAIN (t)) != SCOPE_STMT)\n-        t=TREE_CHAIN (t);\n+        t = TREE_CHAIN (t);\n       return tree_expr_nonnegative_p (TREE_OPERAND (t, 0));\n     }\n   return tree_expr_nonnegative_p (t);"}, {"sha": "d698f3b057a2142d4ceccdf10541c43142618caf", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -811,7 +811,7 @@ find_many_sub_basic_blocks (blocks)\n \t{\n \t  bb->count = 0;\n \t  bb->frequency = 0;\n-\t  for (e = bb->pred; e; e=e->pred_next)\n+\t  for (e = bb->pred; e; e = e->pred_next)\n \t    {\n \t      bb->count += e->count;\n \t      bb->frequency += EDGE_FREQUENCY (e);\n@@ -852,7 +852,7 @@ find_sub_basic_blocks (bb)\n \t{\n \t  b->count = 0;\n \t  b->frequency = 0;\n-\t  for (e = b->pred; e; e=e->pred_next)\n+\t  for (e = b->pred; e; e = e->pred_next)\n \t    {\n \t      b->count += e->count;\n \t      b->frequency += EDGE_FREQUENCY (e);"}, {"sha": "a1c20ee387b0eb15dfea604e20e0e89dea0923be", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -342,7 +342,7 @@ cgraph_expand_functions ()\n \t      }\n \t  }\n       }\n-  for (i = order_pos - 1; i >=0; i--)\n+  for (i = order_pos - 1; i >= 0; i--)\n     {\n       node = order[i];\n       if (node->output)"}, {"sha": "3caae567932eb319c218c0eddef29e57b2651763", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -1,3 +1,7 @@\n+2003-03-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* tree.c (count_functions): Fix whitespace.\n+\n 2003-03-15  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* Make-lang.in: Update."}, {"sha": "a5858bf2b4ab622ac0490efc21fd03c0692dec64", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -1021,7 +1021,7 @@ count_functions (t)\n     return 1;\n   else if (TREE_CODE (t) == OVERLOAD)\n     {\n-      for (i=0; t; t = OVL_CHAIN (t))\n+      for (i = 0; t; t = OVL_CHAIN (t))\n \ti++;\n       return i;\n     }"}, {"sha": "6a15a3b13f849104f78ce70a1fb8681f5524a3f2", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -12941,14 +12941,10 @@ prune_unused_types ()\n \n   /* Also set the mark on nodes referenced from the\n      pubname_table or arange_table.  */\n-  for (i=0; i < pubname_table_in_use; i++)\n-    {\n-      prune_unused_types_mark (pubname_table[i].die, 1);\n-    }\n-  for (i=0; i < arange_table_in_use; i++)\n-    {\n-      prune_unused_types_mark (arange_table[i], 1);\n-    }\n+  for (i = 0; i < pubname_table_in_use; i++)\n+    prune_unused_types_mark (pubname_table[i].die, 1);\n+  for (i = 0; i < arange_table_in_use; i++)\n+    prune_unused_types_mark (arange_table[i], 1);\n \n   /* Get rid of nodes that aren't marked.  */\n   prune_unused_types_prune (comp_unit_die);"}, {"sha": "04479da94439993f41c40a1cc4c540d1e0ea7b64", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -5503,7 +5503,7 @@ store_field (target, bitsize, bitpos, mode, exp, value_mode, unsignedp, type,\n      side-effects.  */\n   if (bitsize == 0)\n     return expand_expr (exp, const0_rtx, VOIDmode, 0);\n-  else if (bitsize >=0 && bitsize < HOST_BITS_PER_WIDE_INT)\n+  else if (bitsize >= 0 && bitsize < HOST_BITS_PER_WIDE_INT)\n     width_mask = ((HOST_WIDE_INT) 1 << bitsize) - 1;\n \n   /* If we are storing into an unaligned field of an aligned union that is"}, {"sha": "0166c195b745cf576cc6bdfdb8a07e409aeb7f86", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -1,3 +1,7 @@\n+2003-03-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* f/ste.c (ffeste_R810): Fix whitespace.\n+\n 2003-03-15  Andreas Jaeger  <aj@suse.de>\n \n \t* g77spec.c (DEFAULT_SWITCH_TAKES_ARG): Remove."}, {"sha": "7b9b86c006844ada3fd0c0eef3923bbae21de36e", "filename": "gcc/f/ste.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Ff%2Fste.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Ff%2Fste.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fste.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -2725,8 +2725,8 @@ ffeste_R810 (ffestw block, unsigned long casenum)\n \t  }\n \telse\n \t  pushok = pushcase (texprlow, convert, tlabel, &duplicate);\n-\tassert((pushok !=2) || (pushok !=0));\n-\tif (pushok==2)\n+\tassert((pushok != 2) || (pushok != 0));\n+\tif (pushok == 2)\n \t  {\n \t    ffebad_start_msg (\"SELECT (at %0) has duplicate cases -- check integer overflow of CASE(s)\",\n \t      FFEBAD_severityFATAL);"}, {"sha": "e80fd202d3f62cf1d9abc7299873e059db1a80fa", "filename": "gcc/genextract.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fgenextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fgenextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenextract.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -323,7 +323,7 @@ print_path (path)\n   /* We first write out the operations (XEXP or XVECEXP) in reverse\n      order, then write \"insn\", then the indices in forward order.  */\n \n-  for (i = len - 1; i >=0 ; i--)\n+  for (i = len - 1; i >= 0 ; i--)\n     {\n       if (ISLOWER(path[i]))\n \tprintf (\"XVECEXP (\");"}, {"sha": "a8b587e8a8e3d6d9ce9c2596870de7bc839c8490", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -1298,7 +1298,7 @@ schedule_insn (insn, ready, clock)\n       char buf[2048];\n \n       print_insn (buf, insn, 0);\n-      buf[40]=0;\n+      buf[40] = 0;\n       fprintf (sched_dump, \";;\\t%3i--> %-40s:\", clock, buf);\n \n       if (recog_memoized (insn) < 0)"}, {"sha": "8774fbd65db1ded704394cc66e196e6d54770b8e", "filename": "gcc/lcm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Flcm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Flcm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flcm.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -129,7 +129,7 @@ compute_antinout_edge (antloc, transp, antin, antout)\n      optimistic initialization of ANTIN above.  */\n   FOR_EACH_BB_REVERSE (bb)\n     {\n-      *qin++ =bb;\n+      *qin++ = bb;\n       bb->aux = bb;\n     }\n "}, {"sha": "038cb60cd52f1a8d10b49afa9e1f15d8d44520b3", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -296,7 +296,7 @@ decide_peel_once_rolling (loops, loop, flags)\n   loop->has_desc = 1;\n \n   /* Check number of iterations.  */\n-  if (!loop->simple || !loop->desc.const_iter || loop->desc.niter !=0)\n+  if (!loop->simple || !loop->desc.const_iter || loop->desc.niter != 0)\n     {\n       if (rtl_dump_file)\n \tfprintf (rtl_dump_file, \";; Unable to prove that the loop rolls exactly once\\n\");"}, {"sha": "7b9016a1ec1c7bc36f334d4bfb66e04527f35d63", "filename": "gcc/ra-colorize.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fra-colorize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fra-colorize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fra-colorize.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -2722,7 +2722,7 @@ ra_colorize_free_all ()\n     put_web (DLIST_WEB (d), INITIAL);\n   while ((d = pop_list (&WEBS(INITIAL))) != NULL)\n     {\n-      struct web *web =DLIST_WEB (d);\n+      struct web *web = DLIST_WEB (d);\n       struct web *wnext;\n       web->orig_conflict_list = NULL;\n       web->conflict_list = NULL;"}, {"sha": "5f1a6ae375050034714b3c708a455d3167b44295", "filename": "gcc/ra-debug.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fra-debug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Fra-debug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fra-debug.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -668,7 +668,8 @@ dump_igraph (df)\n   for (def1 = 0; def1 < num_webs; def1++)\n     {\n       int num1 = num;\n-      for (num2=0, def2 = 0; def2 < num_webs; def2++)\n+      num2 = 0;\n+      for (def2 = 0; def2 < num_webs; def2++)\n         if (def1 != def2 && TEST_BIT (igraph, igraph_index (def1, def2)))\n \t  {\n \t    if (num1 == num)\n@@ -1107,7 +1108,7 @@ debug_hard_reg_set (set)\n      HARD_REG_SET set;\n {\n   int i;\n-  for (i=0; i < FIRST_PSEUDO_REGISTER; ++i)\n+  for (i = 0; i < FIRST_PSEUDO_REGISTER; ++i)\n     {\n       if (TEST_HARD_REG_BIT (set, i))\n \t{"}, {"sha": "525d06694408b514c852c8e55c8827941977ff6b", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -454,7 +454,7 @@ reg_to_stack (first, file)\n   FOR_EACH_BB_REVERSE (bb)\n     {\n       edge e;\n-      for (e = bb->pred; e; e=e->pred_next)\n+      for (e = bb->pred; e; e = e->pred_next)\n \tif (!(e->flags & EDGE_DFS_BACK)\n \t    && e->src != ENTRY_BLOCK_PTR)\n \t  BLOCK_INFO (bb)->predecessors++;"}, {"sha": "85b193e4cbb6487cc33a56e4bcb98f8d9422d93e", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -1557,7 +1557,7 @@ refers_to_regno_p (regno, endregno, x, loc)\n       else if (fmt[i] == 'E')\n \t{\n \t  int j;\n-\t  for (j = XVECLEN (x, i) - 1; j >=0; j--)\n+\t  for (j = XVECLEN (x, i) - 1; j >= 0; j--)\n \t    if (loc != &XVECEXP (x, i, j)\n \t\t&& refers_to_regno_p (regno, endregno, XVECEXP (x, i, j), loc))\n \t      return 1;"}, {"sha": "0e31b2ae2f66e01c26c51d57d953c1e8e19e2d0a", "filename": "gcc/tracer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Ftracer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a87d63407a133d5d715f2d39acfbff686321e38/gcc%2Ftracer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftracer.c?ref=6a87d63407a133d5d715f2d39acfbff686321e38", "patch": "@@ -347,7 +347,7 @@ layout_superblocks ()\n \t  RBI (best->dest)->visited = 1;\n \t}\n       else\n-\tfor (; bb != EXIT_BLOCK_PTR; bb=bb->next_bb)\n+\tfor (; bb != EXIT_BLOCK_PTR; bb = bb->next_bb)\n \t  {\n \t    if (!RBI (bb)->visited)\n \t      {"}]}