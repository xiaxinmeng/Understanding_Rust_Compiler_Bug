{"sha": "6ae2ae3b84615e5e4504a1592af6a8d5579f17ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFlMmFlM2I4NDYxNWU1ZTQ1MDRhMTU5MmFmNmE4ZDU1NzlmMTdjYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-11-15T19:32:44Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-11-15T19:32:44Z"}, "message": "Make std::tuple_size<cv T> SFINAE-friendly (LWG 2770)\n\n\t* doc/xml/manual/intro.xml: Document LWG 2770 status. Remove entries\n\tfor 2742 and 2748.\n\t* doc/html/*: Regenerate.\n\t* include/std/utility (__tuple_size_cv_impl): New helper to safely\n\tdetect tuple_size<T>::value, as per LWG 2770.\n\t(tuple_size<cv T>): Adjust partial specializations to derive from\n\t__tuple_size_cv_impl.\n\t* testsuite/20_util/tuple/cv_tuple_size.cc: Test SFINAE-friendliness.\n\nFrom-SVN: r242452", "tree": {"sha": "ebab8a077030dde507ddca02199aad37580caa05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebab8a077030dde507ddca02199aad37580caa05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "168126e59828b8d2cc8cbb7e03fbe8341177f58f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/168126e59828b8d2cc8cbb7e03fbe8341177f58f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/168126e59828b8d2cc8cbb7e03fbe8341177f58f"}], "stats": {"total": 68, "additions": 41, "deletions": 27}, "files": [{"sha": "6bf1ecbcf0e2ffd4fb6eede81e024420e8550785", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6ae2ae3b84615e5e4504a1592af6a8d5579f17ca", "patch": "@@ -1,5 +1,14 @@\n 2016-11-15  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* doc/xml/manual/intro.xml: Document LWG 2770 status. Remove entries\n+\tfor 2742 and 2748.\n+\t* doc/html/*: Regenerate.\n+\t* include/std/utility (__tuple_size_cv_impl): New helper to safely\n+\tdetect tuple_size<T>::value, as per LWG 2770.\n+\t(tuple_size<cv T>): Adjust partial specializations to derive from\n+\t__tuple_size_cv_impl.\n+\t* testsuite/20_util/tuple/cv_tuple_size.cc: Test SFINAE-friendliness.\n+\n \t* testsuite/libstdc++-prettyprinters/cxx17.cc: Adjust test for\n \tvariant<T&>.\n "}, {"sha": "ee39a954c5c8fb6779c597543cccd2361b64097e", "filename": "libstdc++-v3/doc/html/manual/bugs.html", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html?ref=6ae2ae3b84615e5e4504a1592af6a8d5579f17ca", "patch": "@@ -503,14 +503,10 @@\n        <span class=\"emphasis\"><em><code class=\"code\">priority_queue</code> lacking comparator typedef\n        </em></span>\n     </span></dt><dd><p>Define the <code class=\"code\">value_compare</code> typedef.\n-    </p></dd><dt><span class=\"term\"><a class=\"link\" href=\"../ext/lwg-defects.html#2742\" target=\"_top\">2742</a>:\n-       <span class=\"emphasis\"><em>Inconsistent <code class=\"code\">string</code> interface taking <code class=\"code\">string_view</code>\n+    </p></dd><dt><span class=\"term\"><a class=\"link\" href=\"../ext/lwg-defects.html#2770\" target=\"_top\">2770</a>:\n+       <span class=\"emphasis\"><em><code class=\"code\">tuple_size&lt;const T&gt;</code> specialization is not\n+\t SFINAE compatible and breaks decomposition declarations\n        </em></span>\n-    </span></dt><dd><p>Add the new constructor and additionally constrain it\n-      to avoid ambiguities with non-const <code class=\"code\">charT*</code>.\n-    </p></dd><dt><span class=\"term\"><a class=\"link\" href=\"../ext/lwg-defects.html#2748\" target=\"_top\">2748</a>:\n-       <span class=\"emphasis\"><em>swappable traits for optionals\n-       </em></span>\n-    </span></dt><dd><p>Disable the non-member <code class=\"code\">swap</code> overload when\n-      the contained object is not swappable.\n+    </span></dt><dd><p>Safely detect <code class=\"code\">tuple_size&lt;T&gt;::value</code> and\n+      only use it if valid.\n     </p></dd></dl></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"license.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"status.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"setup.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">License\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a02.\u00a0Setup</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "d23008ad332dd29f136e41ac79983bfab532fe4c", "filename": "libstdc++-v3/doc/xml/manual/intro.xml", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml?ref=6ae2ae3b84615e5e4504a1592af6a8d5579f17ca", "patch": "@@ -1107,20 +1107,13 @@ requirements of the license of GCC.\n     <listitem><para>Define the <code>value_compare</code> typedef.\n     </para></listitem></varlistentry>\n \n-    <varlistentry><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"../ext/lwg-defects.html#2742\">2742</link>:\n-       <emphasis>Inconsistent <code>string</code> interface taking <code>string_view</code>\n+    <varlistentry><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"../ext/lwg-defects.html#2770\">2770</link>:\n+       <emphasis><code>tuple_size&lt;const T&gt;</code> specialization is not\n+\t SFINAE compatible and breaks decomposition declarations\n        </emphasis>\n     </term>\n-    <listitem><para>Add the new constructor and additionally constrain it\n-      to avoid ambiguities with non-const <code>charT*</code>.\n-    </para></listitem></varlistentry>\n-\n-    <varlistentry><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"../ext/lwg-defects.html#2748\">2748</link>:\n-       <emphasis>swappable traits for optionals\n-       </emphasis>\n-    </term>\n-    <listitem><para>Disable the non-member <code>swap</code> overload when\n-      the contained object is not swappable.\n+    <listitem><para>Safely detect <code>tuple_size&lt;T&gt;::value</code> and\n+      only use it if valid.\n     </para></listitem></varlistentry>\n \n   </variablelist>"}, {"sha": "3982156d6951520ba2db6c0c7f28aa573e9f633b", "filename": "libstdc++-v3/include/std/utility", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility?ref=6ae2ae3b84615e5e4504a1592af6a8d5579f17ca", "patch": "@@ -88,18 +88,24 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     struct tuple_size;\n \n   // _GLIBCXX_RESOLVE_LIB_DEFECTS\n-  // 2313. tuple_size should always derive from integral_constant<size_t, N>\n+  // 2770. tuple_size<const T> specialization is not SFINAE compatible\n+  template<typename _Tp, typename = void>\n+    struct __tuple_size_cv_impl { };\n+\n   template<typename _Tp>\n-    struct tuple_size<const _Tp>\n+    struct __tuple_size_cv_impl<_Tp, __void_t<decltype(tuple_size<_Tp>::value)>>\n     : integral_constant<size_t, tuple_size<_Tp>::value> { };\n \n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 2313. tuple_size should always derive from integral_constant<size_t, N>\n+  template<typename _Tp>\n+    struct tuple_size<const _Tp> : __tuple_size_cv_impl<_Tp> { };\n+\n   template<typename _Tp>\n-    struct tuple_size<volatile _Tp>\n-    : integral_constant<size_t, tuple_size<_Tp>::value> { };\n+    struct tuple_size<volatile _Tp> : __tuple_size_cv_impl<_Tp> { };\n \n   template<typename _Tp>\n-    struct tuple_size<const volatile _Tp>\n-    : integral_constant<size_t, tuple_size<_Tp>::value> { };\n+    struct tuple_size<const volatile _Tp> : __tuple_size_cv_impl<_Tp> { };\n \n   /// Gives the type of the ith element of a given tuple type.\n   template<std::size_t __i, typename _Tp>"}, {"sha": "c4a1e02db87a913affa596e27d6062cb93b6f5f9", "filename": "libstdc++-v3/testsuite/20_util/tuple/cv_tuple_size.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcv_tuple_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcv_tuple_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcv_tuple_size.cc?ref=6ae2ae3b84615e5e4504a1592af6a8d5579f17ca", "patch": "@@ -42,3 +42,13 @@ int main()\n   test01();\n   return 0;\n }\n+\n+// LWG DR 2770. tuple_size<const T> specialization is not SFINAE compatible\n+template<typename T, typename = void>\n+struct has_value : std::false_type { };\n+\n+template<typename T>\n+struct has_value<T, std::__void_t<decltype(T::value)>> : std::true_type { };\n+\n+static_assert( !has_value<std::tuple_size<int>>::value, \"\" );\n+static_assert( !has_value<std::tuple_size<const int>>::value, \"\" );"}]}