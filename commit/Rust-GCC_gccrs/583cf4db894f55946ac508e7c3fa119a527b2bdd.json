{"sha": "583cf4db894f55946ac508e7c3fa119a527b2bdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgzY2Y0ZGI4OTRmNTU5NDZhYzUwOGU3YzNmYTExOWE1MjdiMmJkZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-02T21:42:15Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-02T21:42:15Z"}, "message": "(MASK_PPCFPX): Delete.\n\n(MASK_PPC_GPOPT, MASK_PPC_GFXOPT, TARGET_PPC_GPOPT, TARGET_PPC_GFXOPT):\nNew Macros.\n(TARGET_SWITCHES): Remove -mpowerpc-fpx; add -mpowerpc-gpopt\nand -mpowerpc-gfxopt.\n\nFrom-SVN: r7428", "tree": {"sha": "2a8d9354b3f4b29678cef20bb83e2e65ce71fd7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a8d9354b3f4b29678cef20bb83e2e65ce71fd7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/583cf4db894f55946ac508e7c3fa119a527b2bdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/583cf4db894f55946ac508e7c3fa119a527b2bdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/583cf4db894f55946ac508e7c3fa119a527b2bdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/583cf4db894f55946ac508e7c3fa119a527b2bdd/comments", "author": null, "committer": null, "parents": [{"sha": "ba5ce70d08120244aab6c7cb02570ac8b88983af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba5ce70d08120244aab6c7cb02570ac8b88983af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba5ce70d08120244aab6c7cb02570ac8b88983af"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "607c5ac99298c840a902a37562434d7f36d3fc15", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/583cf4db894f55946ac508e7c3fa119a527b2bdd/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/583cf4db894f55946ac508e7c3fa119a527b2bdd/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=583cf4db894f55946ac508e7c3fa119a527b2bdd", "patch": "@@ -76,22 +76,25 @@ extern int target_flags;\n /* Use PowerPC architecture instructions.  */\n #define MASK_POWERPC\t\t0x04\n \n-/* Use PowerPC extended FP instruction including sqrt and fsel.  */\n-#define MASK_PPCFPX\t\t0x08\n+/* Use PowerPC General Purpose group optional instructions, e.g. fsqrt.  */\n+#define MASK_PPC_GPOPT\t\t0x08\n+\n+/* Use PowerPC Graphics group optional instructions, e.g. fsel.  */\n+#define MASK_PPC_GFXOPT\t\t0x10\n \n /* Use PowerPC-64 architecture instructions.  */\n-#define MASK_POWERPC64\t\t0x10\n+#define MASK_POWERPC64\t\t0x20\n \n /* Use revised mnemonic names defined for PowerPC architecture.  */\n-#define MASK_NEW_MNEMONICS\t0x20\n+#define MASK_NEW_MNEMONICS\t0x40\n \n /* Disable placing fp constants in the TOC; can be turned on when the\n    TOC overflows.  */\n-#define MASK_NO_FP_IN_TOC\t0x40\n+#define MASK_NO_FP_IN_TOC\t0x80\n \n /* Disable placing symbol+offset constants in the TOC; can be turned on when\n    the TOC overflows.  */\n-#define MASK_NO_SUM_IN_TOC\t0x80\n+#define MASK_NO_SUM_IN_TOC\t0x100\n \n /* Output only one TOC entry per module.  Normally linking fails if\n    there are more than 16K unique variables/constants in an executable.  With\n@@ -100,12 +103,13 @@ extern int target_flags;\n \n    This is at the cost of having 2 extra loads and one extra store per\n    function, and one less allocatable register.  */\n-#define MASK_MINIMAL_TOC\t0x100\n+#define MASK_MINIMAL_TOC\t0x200\n \n #define TARGET_POWER\t\t\t(target_flags & MASK_POWER)\n #define TARGET_POWER2\t\t\t(target_flags & MASK_POWER2)\n #define TARGET_POWERPC\t\t\t(target_flags & MASK_POWERPC)\n-#define TARGET_PPCFPX\t\t\t(target_flags & MASK_PPCFPX)\n+#define TARGET_PPC_GPOPT\t\t(target_flags & MASK_PPC_GPOPT)\n+#define TARGET_PPC_GFXOPT\t\t(target_flags & MASK_PPC_GFXOPT)\n #define TARGET_POWERPC64\t\t(target_flags & MASK_POWERPC64)\n #define TARGET_NEW_MNEMONICS\t\t(target_flags & MASK_NEW_MNEMONICS)\n #define TARGET_NO_FP_IN_TOC\t\t(target_flags & MASK_NO_FP_IN_TOC)\n@@ -126,10 +130,13 @@ extern int target_flags;\n   {\"no-power2\",\t\t- MASK_POWER2},\t\t\t\t\\\n   {\"no-power\",\t\t- (MASK_POWER | MASK_POWER2)},\t\t\\\n   {\"powerpc\",\t\tMASK_POWERPC},\t\t\t\t\\\n-  {\"no-powerpc\",\t- (MASK_POWERPC | MASK_PPCFPX | MASK_POWERPC64)}, \\\n-  {\"powerpc-fpx\",\tMASK_POWERPC | MASK_PPCFPX},\t\\\n-  {\"no-powerpc-fpx\",\t- MASK_PPCFPX},\t\t\t\\\n-  {\"powerpc64\",\t\tMASK_POWERPC | MASK_PPCFPX | MASK_POWERPC64},\t\\\n+  {\"no-powerpc\",\t- (MASK_POWERPC | MASK_PPC_GPOPT \t\\\n+\t\t\t   | MASK_PPC_GFXOPT | MASK_POWERPC64)}, \\\n+  {\"powerpc-gpopt\",\tMASK_POWERPC | MASK_PPC_GPOPT},\t\t\\\n+  {\"no-powerpc-gpopt\",\t- MASK_PPC_GPOPT},\t\t\t\\\n+  {\"powerpc-gfxopt\",\tMASK_POWERPC | MASK_PPC_GFXOPT},\t\\\n+  {\"no-powerpc-gfxopt\",\t- MASK_PPC_GFXOPT},\t\t\t\\\n+  {\"powerpc64\",\t\tMASK_POWERPC | MASK_POWERPC64},\t\t\\\n   {\"no-powerpc64\",\t-MASK_POWERPC64},\t\t\t\\\n   {\"new-mnemonics\",\tMASK_NEW_MNEMONICS},\t\t\t\\\n   {\"old-mnemonics\",\t-MASK_NEW_MNEMONICS},\t\t\t\\"}]}