{"sha": "62c0fb87d5e5df1038d45a7a9a51e2c0822468a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJjMGZiODdkNWU1ZGYxMDM4ZDQ1YTdhOWE1MWUyYzA4MjI0NjhhNw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-10-10T22:16:37Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-10-10T22:16:37Z"}, "message": "Correctly handle saving toc space in NT\n\nFrom-SVN: r12946", "tree": {"sha": "2dcf065ce4e64bd3726dcf1860945cb69e858dde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dcf065ce4e64bd3726dcf1860945cb69e858dde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62c0fb87d5e5df1038d45a7a9a51e2c0822468a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c0fb87d5e5df1038d45a7a9a51e2c0822468a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c0fb87d5e5df1038d45a7a9a51e2c0822468a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c0fb87d5e5df1038d45a7a9a51e2c0822468a7/comments", "author": null, "committer": null, "parents": [{"sha": "91760fceca4e9599d3f3b6dcae5729dc150a93bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91760fceca4e9599d3f3b6dcae5729dc150a93bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91760fceca4e9599d3f3b6dcae5729dc150a93bb"}], "stats": {"total": 16, "additions": 2, "deletions": 14}, "files": [{"sha": "fafaba90f65e73c2d9f5d12f446f147a516ad9f1", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0fb87d5e5df1038d45a7a9a51e2c0822468a7/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0fb87d5e5df1038d45a7a9a51e2c0822468a7/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=62c0fb87d5e5df1038d45a7a9a51e2c0822468a7", "patch": "@@ -95,9 +95,6 @@ char *rs6000_sdata_name = (char *)0;\n /* Whether a System V.4 varargs area was created.  */\n int rs6000_sysv_varargs_p;\n \n-/* Whether we need to save the TOC register.  */\n-int rs6000_save_toc_p;\n-\n /* ABI enumeration available for subtarget to use.  */\n enum rs6000_abi rs6000_current_abi;\n \n@@ -2236,7 +2233,6 @@ rs6000_save_machine_status (p)\n \n   p->machine = machine;\n   machine->sysv_varargs_p = rs6000_sysv_varargs_p;\n-  machine->save_toc_p     = rs6000_save_toc_p;\n   machine->fpmem_size     = rs6000_fpmem_size;\n   machine->fpmem_offset   = rs6000_fpmem_offset;\n }\n@@ -2248,7 +2244,6 @@ rs6000_restore_machine_status (p)\n   struct machine_function *machine = p->machine;\n \n   rs6000_sysv_varargs_p = machine->sysv_varargs_p;\n-  rs6000_save_toc_p     = machine->save_toc_p;\n   rs6000_fpmem_size     = machine->fpmem_size;\n   rs6000_fpmem_offset   = machine->fpmem_offset;\n \n@@ -2263,7 +2258,6 @@ rs6000_init_expanders ()\n {\n   /* Reset varargs and save TOC indicator */\n   rs6000_sysv_varargs_p = 0;\n-  rs6000_save_toc_p = 0;\n   rs6000_fpmem_size = 0;\n   rs6000_fpmem_offset = 0;\n   pic_offset_table_rtx = (rtx)0;\n@@ -3023,8 +3017,8 @@ rs6000_stack_info ()\n   /* Does this function call anything? */\n   info_ptr->calls_p = rs6000_makes_calls ();\n \n-  /* Do we need to allocate space to save the toc? */\n-  if (rs6000_save_toc_p)\n+  /* Allocate space to save the toc. */\n+  if (abi == ABI_NT)\n     {\n       info_ptr->toc_save_p = 1;\n       info_ptr->toc_size = reg_size;\n@@ -3483,10 +3477,6 @@ output_prolog (file, size)\n \t\t     reg_names[sp_reg]);\n     }\n \n-  if (info->toc_save_p)\n-    asm_fprintf (file, store_reg, reg_names[2], info->toc_save_offset + sp_offset,\n-\t\t reg_names[sp_reg]);\n-\n   /* NT needs us to probe the stack frame every 4k pages for large frames, so\n      do it here.  */\n   if (DEFAULT_ABI == ABI_NT && info->total_size > 4096)"}, {"sha": "9c93f9b3ec55bd43f8416398a943681b69fd38fa", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0fb87d5e5df1038d45a7a9a51e2c0822468a7/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0fb87d5e5df1038d45a7a9a51e2c0822468a7/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=62c0fb87d5e5df1038d45a7a9a51e2c0822468a7", "patch": "@@ -7212,7 +7212,6 @@\n \t  else if (DEFAULT_ABI == ABI_NT)\n \t    {\n \t      /* NT function pointers are really pointers to a two word area */\n-\t      rs6000_save_toc_p = 1;\n \t      emit_call_insn (gen_call_indirect_nt (force_reg (Pmode, operands[0]),\n \t\t\t\t\t\t    operands[1], operands[2],\n \t\t\t\t\t\t    toc_addr, toc_reg));\n@@ -7272,7 +7271,6 @@\n \t  else if (DEFAULT_ABI == ABI_NT)\n \t    {\n \t      /* NT function pointers are really pointers to a two word area */\n-\t      rs6000_save_toc_p = 1;\n \t      emit_call_insn (gen_call_value_indirect_nt (operands[0],\n \t\t\t\t\t\t\t  force_reg (Pmode, operands[1]),\n \t\t\t\t\t\t\t  operands[2], operands[3],"}]}