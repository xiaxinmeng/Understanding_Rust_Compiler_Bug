{"sha": "d8321b33d3b2d74c90d70ebdddc57bd6c86361ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgzMjFiMzNkM2IyZDc0YzkwZDcwZWJkZGRjNTdiZDZjODYzNjFlZQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2017-01-27T18:08:14Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2017-01-27T18:08:14Z"}, "message": "re PR rtl-optimization/71374 (ICE on valid code at -O1 and above on x86_64-linux-gnu: in extract_constrain_insn, at recog.c:2190)\n\n2017-01-27  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR tree-optimization/71374\n\t* lra-constraints.c (check_conflict_input_operands): New.\n\t(match_reload): Use it.\n\n2017-01-27  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR tree-optimization/71374\n\t* testsuite/gcc.target/i386/pr71374.c: New.\n\nFrom-SVN: r244991", "tree": {"sha": "e97490e51e4d447019a918c2a75043329221c38d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e97490e51e4d447019a918c2a75043329221c38d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8321b33d3b2d74c90d70ebdddc57bd6c86361ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8321b33d3b2d74c90d70ebdddc57bd6c86361ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8321b33d3b2d74c90d70ebdddc57bd6c86361ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8321b33d3b2d74c90d70ebdddc57bd6c86361ee/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e2ea13ec2a6d210520b87ffe8d44c30ede42994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e2ea13ec2a6d210520b87ffe8d44c30ede42994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e2ea13ec2a6d210520b87ffe8d44c30ede42994"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "4de9c0245bec920c4995df9d7d164decb5340608", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8321b33d3b2d74c90d70ebdddc57bd6c86361ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8321b33d3b2d74c90d70ebdddc57bd6c86361ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8321b33d3b2d74c90d70ebdddc57bd6c86361ee", "patch": "@@ -1,3 +1,9 @@\n+2017-01-27  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR tree-optimization/71374\n+\t* lra-constraints.c (check_conflict_input_operands): New.\n+\t(match_reload): Use it.\n+\n 2017-01-27  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/79131"}, {"sha": "22323b2d4df1c78bc91ba477739ce7e5ab0cdff4", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8321b33d3b2d74c90d70ebdddc57bd6c86361ee/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8321b33d3b2d74c90d70ebdddc57bd6c86361ee/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=d8321b33d3b2d74c90d70ebdddc57bd6c86361ee", "patch": "@@ -878,6 +878,29 @@ regno_val_use_in (unsigned int regno, rtx x)\n   return NULL_RTX;\n }\n \n+/* Return true if all current insn non-output operands except INS (it\n+   has a negaitve end marker) do not use pseudos with the same value\n+   as REGNO.  */\n+static bool\n+check_conflict_input_operands (int regno, signed char *ins)\n+{\n+  int in;\n+  int n_operands = curr_static_id->n_operands;\n+\n+  for (int nop = 0; nop < n_operands; nop++)\n+    if (! curr_static_id->operand[nop].is_operator\n+\t&& curr_static_id->operand[nop].type != OP_OUT)\n+      {\n+\tfor (int i = 0; (in = ins[i]) >= 0; i++)\n+\t  if (in == nop)\n+\t    break;\n+\tif (in < 0\n+\t    && regno_val_use_in (regno, *curr_id->operand_loc[nop]) != NULL_RTX)\n+\t  return false;\n+      }\n+  return true;\n+}\n+\n /* Generate reloads for matching OUT and INS (array of input operand\n    numbers with end marker -1) with reg class GOAL_CLASS, considering\n    output operands OUTS (similar array to INS) needing to be in different\n@@ -917,7 +940,9 @@ match_reload (signed char out, signed char *ins, signed char *outs,\n \t     pseudos as reload pseudos can die although original\n \t     pseudos still live where reload pseudos dies.  */\n \t  if (REG_P (in_rtx) && (int) REGNO (in_rtx) < lra_new_regno_start\n-\t      && find_regno_note (curr_insn, REG_DEAD, REGNO (in_rtx)))\n+\t      && find_regno_note (curr_insn, REG_DEAD, REGNO (in_rtx))\n+\t      && (!early_clobber_p\n+\t\t  || check_conflict_input_operands(REGNO (in_rtx), ins)))\n \t    lra_assign_reg_val (REGNO (in_rtx), REGNO (reg));\n \t}\n       else\n@@ -947,7 +972,10 @@ match_reload (signed char out, signed char *ins, signed char *outs,\n \t\t  && (int) REGNO (subreg_reg) < lra_new_regno_start\n \t\t  && GET_MODE (subreg_reg) == outmode\n \t\t  && SUBREG_BYTE (in_rtx) == SUBREG_BYTE (new_in_reg)\n-\t\t  && find_regno_note (curr_insn, REG_DEAD, REGNO (subreg_reg)))\n+\t\t  && find_regno_note (curr_insn, REG_DEAD, REGNO (subreg_reg))\n+\t\t  && (! early_clobber_p\n+\t\t      || check_conflict_input_operands (REGNO (subreg_reg),\n+\t\t\t\t\t\t\tins)))\n \t\tlra_assign_reg_val (REGNO (subreg_reg), REGNO (reg));\n \t    }\n \t}\n@@ -1002,6 +1030,8 @@ match_reload (signed char out, signed char *ins, signed char *outs,\n \t= (! early_clobber_p && ins[1] < 0 && REG_P (in_rtx)\n \t   && (int) REGNO (in_rtx) < lra_new_regno_start\n \t   && find_regno_note (curr_insn, REG_DEAD, REGNO (in_rtx))\n+\t   && (! early_clobber_p\n+\t       || check_conflict_input_operands (REGNO (in_rtx), ins))\n \t   && (out < 0\n \t       || regno_val_use_in (REGNO (in_rtx), out_rtx) == NULL_RTX)\n \t   && !out_conflict"}, {"sha": "f2d9dfb7274d1ec966539440c8cd593c9ada2c8e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8321b33d3b2d74c90d70ebdddc57bd6c86361ee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8321b33d3b2d74c90d70ebdddc57bd6c86361ee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d8321b33d3b2d74c90d70ebdddc57bd6c86361ee", "patch": "@@ -1,3 +1,8 @@\n+2017-01-27  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR tree-optimization/71374\n+\t* testsuite/gcc.target/i386/pr71374.c: New.\n+\n 2017-01-27  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/71290"}, {"sha": "73e8072a49477c273759f5a17b7c573dc04b4e66", "filename": "gcc/testsuite/gcc.target/i386/pr71374.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8321b33d3b2d74c90d70ebdddc57bd6c86361ee/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71374.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8321b33d3b2d74c90d70ebdddc57bd6c86361ee/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71374.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71374.c?ref=d8321b33d3b2d74c90d70ebdddc57bd6c86361ee", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+int a, b, c;\n+void\n+foo (void *x, void *y)\n+{\n+  __asm__ (\"\": \"=&c\" (a), \"=&D\" (b), \"=&S\" (c): \"r\" (y), \"2\" (y));\n+}"}]}