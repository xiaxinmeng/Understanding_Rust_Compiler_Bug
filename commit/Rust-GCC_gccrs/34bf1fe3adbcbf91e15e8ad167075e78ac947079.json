{"sha": "34bf1fe3adbcbf91e15e8ad167075e78ac947079", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRiZjFmZTNhZGJjYmY5MWUxNWU4YWQxNjcwNzVlNzhhYzk0NzA3OQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-15T18:02:01Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-15T18:02:01Z"}, "message": "h8300.c (h8300_return_in_memory): New.\n\n\t* config/h8300/h8300.c (h8300_return_in_memory): New.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t* config/h8300/h8300.h (STRUCT_VALUE): Remove.\n\t(RETURN_IN_MEMORY): Likewise.\n\nFrom-SVN: r75933", "tree": {"sha": "bdbd53502f7ddd2c6fe6c291fe8a7ed19e2ce2a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdbd53502f7ddd2c6fe6c291fe8a7ed19e2ce2a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34bf1fe3adbcbf91e15e8ad167075e78ac947079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34bf1fe3adbcbf91e15e8ad167075e78ac947079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34bf1fe3adbcbf91e15e8ad167075e78ac947079", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34bf1fe3adbcbf91e15e8ad167075e78ac947079/comments", "author": null, "committer": null, "parents": [{"sha": "e5396f908ad826fcb3e114c548b72646f5956c9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5396f908ad826fcb3e114c548b72646f5956c9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5396f908ad826fcb3e114c548b72646f5956c9d"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "2b6837260d7e9851fb623ee7e1f96e118f841f81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bf1fe3adbcbf91e15e8ad167075e78ac947079/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bf1fe3adbcbf91e15e8ad167075e78ac947079/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34bf1fe3adbcbf91e15e8ad167075e78ac947079", "patch": "@@ -1,3 +1,11 @@\n+2004-01-15  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (h8300_return_in_memory): New.\n+\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n+\t(TARGET_RETURN_IN_MEMORY): Likewise.\n+\t* config/h8300/h8300.h (STRUCT_VALUE): Remove.\n+\t(RETURN_IN_MEMORY): Likewise.\n+\n 2004-01-15  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR optimization/13375"}, {"sha": "5c6f8c24db3712a10f43d3ff7d973b8ff21567bf", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bf1fe3adbcbf91e15e8ad167075e78ac947079/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bf1fe3adbcbf91e15e8ad167075e78ac947079/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=34bf1fe3adbcbf91e15e8ad167075e78ac947079", "patch": "@@ -4564,6 +4564,13 @@ h8300_init_libfuncs (void)\n   set_optab_libfunc (umod_optab, HImode, \"__umodhi3\");\n }\n \f\n+static bool\n+h8300_return_in_memory (tree type, tree fntype ATTRIBUTE_UNUSED)\n+{\n+  return (TYPE_MODE (type) == BLKmode\n+\t  || GET_MODE_SIZE (TYPE_MODE (type)) > (TARGET_H8300 ? 4 : 8));\n+}\n+\f\n /* Initialize the GCC target structure.  */\n #undef TARGET_ATTRIBUTE_TABLE\n #define TARGET_ATTRIBUTE_TABLE h8300_attribute_table\n@@ -4591,4 +4598,9 @@ h8300_init_libfuncs (void)\n #undef TARGET_INIT_LIBFUNCS\n #define TARGET_INIT_LIBFUNCS h8300_init_libfuncs\n \n+#undef TARGET_STRUCT_VALUE_RTX\n+#define TARGET_STRUCT_VALUE_RTX hook_rtx_tree_int_null\n+#undef TARGET_RETURN_IN_MEMORY\n+#define TARGET_RETURN_IN_MEMORY h8300_return_in_memory\n+\n struct gcc_target targetm = TARGET_INITIALIZER;"}, {"sha": "240abdf3c75f56e8629f3b5a967ee19fb94acb6a", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bf1fe3adbcbf91e15e8ad167075e78ac947079/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bf1fe3adbcbf91e15e8ad167075e78ac947079/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=34bf1fe3adbcbf91e15e8ad167075e78ac947079", "patch": "@@ -632,16 +632,6 @@ enum reg_class {\n \n #define FUNCTION_ARG_REGNO_P(N) (TARGET_QUICKCALL ? N < 3 : 0)\n \n-/* Register in which address to store a structure value\n-   is passed to a function.  */\n-\n-#define STRUCT_VALUE 0\n-\n-/* Return true if X should be returned in memory.  */\n-#define RETURN_IN_MEMORY(X)\t\t\t\t\t\\\n-  (TYPE_MODE (X) == BLKmode\t\t\t\t\t\\\n-   || GET_MODE_SIZE (TYPE_MODE (X)) > (TARGET_H8300 ? 4 : 8))\n-\n /* When defined, the compiler allows registers explicitly used in the\n    rtl to be used as spill registers but prevents the compiler from\n    extending the lifetime of these registers.  */"}]}