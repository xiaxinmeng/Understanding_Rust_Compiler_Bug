{"sha": "0cecee061e9f6a049703683969b9933f0c8fb07c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNlY2VlMDYxZTlmNmEwNDk3MDM2ODM5NjliOTkzM2YwYzhmYjA3Yw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2011-01-22T21:24:54Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2011-01-22T21:24:54Z"}, "message": "re PR middle-end/47401 (Support for must-not-throw regions with SJLJ exceptions broken)\n\n\tPR middle-end/47401\n\t* except.c (sjlj_assign_call_site_values): Move setting the\n\tcrtl->uses_eh_lsda flag to ...\n\t(sjlj_mark_call_sites): ... here.\n\t(sjlj_emit_function_enter): Support NULL dispatch label.\n\t(sjlj_build_landing_pads): In a function with no landing pads\n\tthat still has must-not-throw regions, generate code to register\n\ta personality function with empty LSDA.\n\nFrom-SVN: r169134", "tree": {"sha": "5f1b34f6aa8d755987883fc48ad09d2649cf9233", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f1b34f6aa8d755987883fc48ad09d2649cf9233"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cecee061e9f6a049703683969b9933f0c8fb07c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cecee061e9f6a049703683969b9933f0c8fb07c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cecee061e9f6a049703683969b9933f0c8fb07c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cecee061e9f6a049703683969b9933f0c8fb07c/comments", "author": null, "committer": null, "parents": [{"sha": "1b7ae0b72282c395192bf024648112123aac5df9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b7ae0b72282c395192bf024648112123aac5df9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b7ae0b72282c395192bf024648112123aac5df9"}], "stats": {"total": 72, "additions": 52, "deletions": 20}, "files": [{"sha": "df4658b3fe046be90b75838eb8553836fcc52374", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cecee061e9f6a049703683969b9933f0c8fb07c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cecee061e9f6a049703683969b9933f0c8fb07c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0cecee061e9f6a049703683969b9933f0c8fb07c", "patch": "@@ -1,3 +1,14 @@\n+2011-01-22  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\tPR middle-end/47401\n+\t* except.c (sjlj_assign_call_site_values): Move setting the\n+\tcrtl->uses_eh_lsda flag to ...\n+\t(sjlj_mark_call_sites): ... here.\n+\t(sjlj_emit_function_enter): Support NULL dispatch label.\n+\t(sjlj_build_landing_pads): In a function with no landing pads\n+\tthat still has must-not-throw regions, generate code to register\n+\ta personality function with empty LSDA.\n+\n 2011-01-21  Richard Henderson  <rth@redhat.com>\n \n \t* config/rx/rx.c (TARGET_FLAGS_REGNUM): New."}, {"sha": "251a5501462a9271e520fb0d38589c3b35713065", "filename": "gcc/except.c", "status": "modified", "additions": 41, "deletions": 20, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cecee061e9f6a049703683969b9933f0c8fb07c/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cecee061e9f6a049703683969b9933f0c8fb07c/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=0cecee061e9f6a049703683969b9933f0c8fb07c", "patch": "@@ -998,8 +998,6 @@ sjlj_assign_call_site_values (void)\n \n \t/* First: build the action table.  */\n \taction = collect_one_action_chain (ar_hash, lp->region);\n-\tif (action != -1)\n-\t  crtl->uses_eh_lsda = 1;\n \n \t/* Next: assign call-site values.  If dwarf2 terms, this would be\n \t   the region number assigned by convert_to_eh_region_ranges, but\n@@ -1065,6 +1063,9 @@ sjlj_mark_call_sites (void)\n \t  this_call_site = 0;\n \t}\n \n+      if (this_call_site != -1)\n+\tcrtl->uses_eh_lsda = 1;\n+\n       if (this_call_site == last_call_site)\n \tcontinue;\n \n@@ -1119,27 +1120,30 @@ sjlj_emit_function_enter (rtx dispatch_label)\n   else\n     emit_move_insn (mem, const0_rtx);\n \n+  if (dispatch_label)\n+    {\n #ifdef DONT_USE_BUILTIN_SETJMP\n-  {\n-    rtx x, last;\n-    x = emit_library_call_value (setjmp_libfunc, NULL_RTX, LCT_RETURNS_TWICE,\n-\t\t\t\t TYPE_MODE (integer_type_node), 1,\n-\t\t\t\t plus_constant (XEXP (fc, 0),\n-\t\t\t\t\t\tsjlj_fc_jbuf_ofs), Pmode);\n-\n-    emit_cmp_and_jump_insns (x, const0_rtx, NE, 0,\n-\t\t\t     TYPE_MODE (integer_type_node), 0, dispatch_label);\n-    last = get_last_insn ();\n-    if (JUMP_P (last) && any_condjump_p (last))\n-      {\n-        gcc_assert (!find_reg_note (last, REG_BR_PROB, 0));\n-        add_reg_note (last, REG_BR_PROB, GEN_INT (REG_BR_PROB_BASE / 100));\n-      }\n-  }\n-#else\n-  expand_builtin_setjmp_setup (plus_constant (XEXP (fc, 0), sjlj_fc_jbuf_ofs),\n+      rtx x, last;\n+      x = emit_library_call_value (setjmp_libfunc, NULL_RTX, LCT_RETURNS_TWICE,\n+\t\t\t\t   TYPE_MODE (integer_type_node), 1,\n+\t\t\t\t   plus_constant (XEXP (fc, 0),\n+\t\t\t\t\t\t  sjlj_fc_jbuf_ofs), Pmode);\n+\n+      emit_cmp_and_jump_insns (x, const0_rtx, NE, 0,\n+\t\t\t       TYPE_MODE (integer_type_node), 0,\n \t\t\t       dispatch_label);\n+      last = get_last_insn ();\n+      if (JUMP_P (last) && any_condjump_p (last))\n+\t{\n+\t  gcc_assert (!find_reg_note (last, REG_BR_PROB, 0));\n+\t  add_reg_note (last, REG_BR_PROB, GEN_INT (REG_BR_PROB_BASE / 100));\n+\t}\n+#else\n+      expand_builtin_setjmp_setup (plus_constant (XEXP (fc, 0),\n+\t\t\t\t\t\t  sjlj_fc_jbuf_ofs),\n+\t\t\t\t   dispatch_label);\n #endif\n+    }\n \n   emit_library_call (unwind_sjlj_register_libfunc, LCT_NORMAL, VOIDmode,\n \t\t     1, XEXP (fc, 0), Pmode);\n@@ -1363,6 +1367,23 @@ sjlj_build_landing_pads (void)\n       sjlj_emit_function_exit ();\n     }\n \n+  /* If we do not have any landing pads, we may still need to register a\n+     personality routine and (empty) LSDA to handle must-not-throw regions.  */\n+  else if (function_needs_eh_personality (cfun) != eh_personality_none)\n+    {\n+      int align = STACK_SLOT_ALIGNMENT (sjlj_fc_type_node,\n+\t\t\t\t\tTYPE_MODE (sjlj_fc_type_node),\n+\t\t\t\t\tTYPE_ALIGN (sjlj_fc_type_node));\n+      crtl->eh.sjlj_fc\n+\t= assign_stack_local (TYPE_MODE (sjlj_fc_type_node),\n+\t\t\t      int_size_in_bytes (sjlj_fc_type_node),\n+\t\t\t      align);\n+\n+      sjlj_mark_call_sites ();\n+      sjlj_emit_function_enter (NULL_RTX);\n+      sjlj_emit_function_exit ();\n+    }\n+\n   VEC_free (int, heap, sjlj_lp_call_site_index);\n }\n "}]}