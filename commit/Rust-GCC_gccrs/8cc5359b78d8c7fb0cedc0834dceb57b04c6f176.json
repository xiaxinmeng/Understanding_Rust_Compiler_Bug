{"sha": "8cc5359b78d8c7fb0cedc0834dceb57b04c6f176", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNjNTM1OWI3OGQ4YzdmYjBjZWRjMDgzNGRjZWI1N2IwNGM2ZjE3Ng==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-12-12T21:19:57Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-12-12T21:19:57Z"}, "message": "h8300.h (CONST_OK_FOR_J): New.\n\n\t* config/h8300/h8300.h (CONST_OK_FOR_J): New.\n\t(CONST_OK_FOR_LETTER_P): Use CONST_OK_FOR_J.\n\t* config/h8300/h8300.md (*addhi_h8300): Add a new alternative.\n\t(*addhi_h8300hs): Likewise.\n\nFrom-SVN: r60079", "tree": {"sha": "e557c4e970f190d89b50db7823adeebdfb6e525f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e557c4e970f190d89b50db7823adeebdfb6e525f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cc5359b78d8c7fb0cedc0834dceb57b04c6f176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc5359b78d8c7fb0cedc0834dceb57b04c6f176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cc5359b78d8c7fb0cedc0834dceb57b04c6f176", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc5359b78d8c7fb0cedc0834dceb57b04c6f176/comments", "author": null, "committer": null, "parents": [{"sha": "ec555f3273efb2947e0a1ed6bbe23d048a4c50a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec555f3273efb2947e0a1ed6bbe23d048a4c50a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec555f3273efb2947e0a1ed6bbe23d048a4c50a9"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "fd9b7425aa546fc8e79944980a5bdfcf7dd319d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc5359b78d8c7fb0cedc0834dceb57b04c6f176/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc5359b78d8c7fb0cedc0834dceb57b04c6f176/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cc5359b78d8c7fb0cedc0834dceb57b04c6f176", "patch": "@@ -1,3 +1,10 @@\n+2002-12-12  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.h (CONST_OK_FOR_J): New.\n+\t(CONST_OK_FOR_LETTER_P): Use CONST_OK_FOR_J.\n+\t* config/h8300/h8300.md (*addhi_h8300): Add a new alternative.\n+\t(*addhi_h8300hs): Likewise.\n+\n Thu Dec 12 16:24:59 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.c (reg_class_from_letter): No longer const.  Add 'e' entry."}, {"sha": "21f3eeb689b20f66a9765346e88e5c01988cc9cf", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc5359b78d8c7fb0cedc0834dceb57b04c6f176/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc5359b78d8c7fb0cedc0834dceb57b04c6f176/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=8cc5359b78d8c7fb0cedc0834dceb57b04c6f176", "patch": "@@ -461,6 +461,7 @@ enum reg_class {\n    Return 1 if VALUE is in the range specified by C.  */\n \n #define CONST_OK_FOR_I(VALUE) ((VALUE) == 0)\n+#define CONST_OK_FOR_J(VALUE) (((VALUE) & 0xff) == 0)\n #define CONST_OK_FOR_L(VALUE)\t\t\t\t\\\n   (TARGET_H8300H || TARGET_H8300S\t\t\t\\\n    ? (VALUE) == 1 || (VALUE) == 2 || (VALUE) == 4\t\\\n@@ -472,6 +473,7 @@ enum reg_class {\n \n #define CONST_OK_FOR_LETTER_P(VALUE, C)\t\t\\\n   ((C) == 'I' ? CONST_OK_FOR_I (VALUE) :\t\\\n+   (C) == 'J' ? CONST_OK_FOR_J (VALUE) :\t\\\n    (C) == 'L' ? CONST_OK_FOR_L (VALUE) :\t\\\n    (C) == 'N' ? CONST_OK_FOR_N (VALUE) :\t\\\n    0)"}, {"sha": "e68e702b25731ff41db6eb201e8d0e2a85158ed8", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc5359b78d8c7fb0cedc0834dceb57b04c6f176/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc5359b78d8c7fb0cedc0834dceb57b04c6f176/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=8cc5359b78d8c7fb0cedc0834dceb57b04c6f176", "patch": "@@ -762,32 +762,34 @@\n   \"\"\n   \"\")\n \n-(define_insn \"\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r,r,&r\")\n-\t(plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0,0,g\")\n-\t\t (match_operand:HI 2 \"nonmemory_operand\" \"L,N,n,r,r\")))]\n+(define_insn \"*addhi3_h8300\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r,r,r,&r\")\n+\t(plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0,0,0,g\")\n+\t\t (match_operand:HI 2 \"nonmemory_operand\" \"L,N,J,n,r,r\")))]\n   \"TARGET_H8300\"\n   \"@\n    adds\t%2,%T0\n    subs\t%G2,%T0\n+   add.b\t%t2,%t0\n    add.b\t%s2,%s0\\;addx\t%t2,%t0\n    add.w\t%T2,%T0\n    mov.w\t%T1,%T0\\;add.w\t%T2,%T0\"\n-  [(set_attr \"length\" \"2,2,4,2,6\")\n-   (set_attr \"cc\" \"none_0hit,none_0hit,clobber,set_zn,set_zn\")])\n+  [(set_attr \"length\" \"2,2,2,4,2,6\")\n+   (set_attr \"cc\" \"none_0hit,none_0hit,clobber,clobber,set_zn,set_zn\")])\n \n-(define_insn \"\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r,r\")\n-\t(plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0,0\")\n-\t\t (match_operand:HI 2 \"nonmemory_operand\" \"L,N,n,r\")))]\n+(define_insn \"*addhi3_h8300hs\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r,r,r\")\n+\t(plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0,0,0\")\n+\t\t (match_operand:HI 2 \"nonmemory_operand\" \"L,N,J,n,r\")))]\n   \"TARGET_H8300H || TARGET_H8300S\"\n   \"@\n    adds\t%2,%S0\n    subs\t%G2,%S0\n+   add.b\t%t2,%t0\n    add.w\t%T2,%T0\n    add.w\t%T2,%T0\"\n-  [(set_attr \"length\" \"2,2,4,2\")\n-   (set_attr \"cc\" \"none_0hit,none_0hit,set_zn,set_zn\")])\n+  [(set_attr \"length\" \"2,2,2,4,2\")\n+   (set_attr \"cc\" \"none_0hit,none_0hit,clobber,set_zn,set_zn\")])\n \n (define_split\n   [(set (match_operand:HI 0 \"register_operand\" \"\")"}]}