{"sha": "6483b8310337917b21a8722de811bf7637a777f6", "node_id": "C_kwDOANBUbNoAKDY0ODNiODMxMDMzNzkxN2IyMWE4NzIyZGU4MTFiZjc2MzdhNzc3ZjY", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-08T02:49:10Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T06:44:50Z"}, "message": "RISC-V: Add vsbc C++ API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/vsbc_vvm-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vvm-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vvm-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vvm_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vvm_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vvm_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vxm_rv32-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vxm_rv32-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vxm_rv32-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vxm_rv64-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vxm_rv64-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vxm_rv64-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vxm_tu_rv32-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vxm_tu_rv32-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vxm_tu_rv32-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vxm_tu_rv64-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vxm_tu_rv64-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsbc_vxm_tu_rv64-3.C: New test.", "tree": {"sha": "112bf101becd9aeddb371f8a74625c0ce2695666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/112bf101becd9aeddb371f8a74625c0ce2695666"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6483b8310337917b21a8722de811bf7637a777f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6483b8310337917b21a8722de811bf7637a777f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6483b8310337917b21a8722de811bf7637a777f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6483b8310337917b21a8722de811bf7637a777f6/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2f4dc5810517f3c5465ecea4ce3820f655a0375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2f4dc5810517f3c5465ecea4ce3820f655a0375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2f4dc5810517f3c5465ecea4ce3820f655a0375"}], "stats": {"total": 5238, "additions": 5238, "deletions": 0}, "files": [{"sha": "bf475cfa9e89e2c59613b49ee2c2b34de60019a4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vvm-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-1.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc(vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc(vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc(vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc(vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc(vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc(vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc(vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc(vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc(vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc(vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc(vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc(vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc(vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc(vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc(vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc(vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc(vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc(vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc(vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc(vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc(vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc(vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc(vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc(vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc(vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc(vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc(vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc(vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc(vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc(vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc(vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc(vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc(vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc(vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc(vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc(vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc(vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc(vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "6a7de4e1a91fdc775730bf4eb8d29dd91c109293", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vvm-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-2.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc(vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc(vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc(vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc(vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc(vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc(vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc(vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc(vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc(vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc(vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc(vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc(vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc(vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc(vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc(vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc(vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc(vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc(vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc(vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc(vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc(vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc(vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc(vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc(vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc(vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc(vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc(vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc(vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc(vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc(vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc(vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc(vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc(vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc(vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc(vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc(vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc(vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc(vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "a0b6b7cd460ac7cd67c3d2a58f1e2eaae5bcd8d9", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vvm-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-3.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc(vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc(vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc(vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc(vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc(vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc(vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc(vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc(vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc(vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc(vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc(vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc(vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc(vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc(vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc(vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc(vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc(vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc(vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc(vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc(vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc(vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc(vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc(vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc(vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc(vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc(vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc(vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc(vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc(vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc(vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc(vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc(vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc(vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc(vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc(vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc(vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc(vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc(vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "f9a6994b762fe38465c776f8225076024a020ff0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vvm_tu-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-1.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test____riscv_vsbc_tu(vint8mf8_t maskedoff,vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf4_t test____riscv_vsbc_tu(vint8mf4_t maskedoff,vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf2_t test____riscv_vsbc_tu(vint8mf2_t maskedoff,vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m1_t test____riscv_vsbc_tu(vint8m1_t maskedoff,vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m2_t test____riscv_vsbc_tu(vint8m2_t maskedoff,vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m4_t test____riscv_vsbc_tu(vint8m4_t maskedoff,vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m8_t test____riscv_vsbc_tu(vint8m8_t maskedoff,vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf4_t test____riscv_vsbc_tu(vint16mf4_t maskedoff,vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf2_t test____riscv_vsbc_tu(vint16mf2_t maskedoff,vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m1_t test____riscv_vsbc_tu(vint16m1_t maskedoff,vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m2_t test____riscv_vsbc_tu(vint16m2_t maskedoff,vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m4_t test____riscv_vsbc_tu(vint16m4_t maskedoff,vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m8_t test____riscv_vsbc_tu(vint16m8_t maskedoff,vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32mf2_t test____riscv_vsbc_tu(vint32mf2_t maskedoff,vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m1_t test____riscv_vsbc_tu(vint32m1_t maskedoff,vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m2_t test____riscv_vsbc_tu(vint32m2_t maskedoff,vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m4_t test____riscv_vsbc_tu(vint32m4_t maskedoff,vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m8_t test____riscv_vsbc_tu(vint32m8_t maskedoff,vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m1_t test____riscv_vsbc_tu(vint64m1_t maskedoff,vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m2_t test____riscv_vsbc_tu(vint64m2_t maskedoff,vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m4_t test____riscv_vsbc_tu(vint64m4_t maskedoff,vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m8_t test____riscv_vsbc_tu(vint64m8_t maskedoff,vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf8_t test____riscv_vsbc_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf4_t test____riscv_vsbc_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf2_t test____riscv_vsbc_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m1_t test____riscv_vsbc_tu(vuint8m1_t maskedoff,vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m2_t test____riscv_vsbc_tu(vuint8m2_t maskedoff,vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m4_t test____riscv_vsbc_tu(vuint8m4_t maskedoff,vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m8_t test____riscv_vsbc_tu(vuint8m8_t maskedoff,vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf4_t test____riscv_vsbc_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf2_t test____riscv_vsbc_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m1_t test____riscv_vsbc_tu(vuint16m1_t maskedoff,vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m2_t test____riscv_vsbc_tu(vuint16m2_t maskedoff,vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m4_t test____riscv_vsbc_tu(vuint16m4_t maskedoff,vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m8_t test____riscv_vsbc_tu(vuint16m8_t maskedoff,vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32mf2_t test____riscv_vsbc_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m1_t test____riscv_vsbc_tu(vuint32m1_t maskedoff,vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m2_t test____riscv_vsbc_tu(vuint32m2_t maskedoff,vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m4_t test____riscv_vsbc_tu(vuint32m4_t maskedoff,vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m8_t test____riscv_vsbc_tu(vuint32m8_t maskedoff,vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m1_t test____riscv_vsbc_tu(vuint64m1_t maskedoff,vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m2_t test____riscv_vsbc_tu(vuint64m2_t maskedoff,vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m4_t test____riscv_vsbc_tu(vuint64m4_t maskedoff,vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m8_t test____riscv_vsbc_tu(vuint64m8_t maskedoff,vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "5c447b2e741f108ba12395ed33b3a8516f9ea053", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vvm_tu-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-2.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test____riscv_vsbc_tu(vint8mf8_t maskedoff,vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf4_t test____riscv_vsbc_tu(vint8mf4_t maskedoff,vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf2_t test____riscv_vsbc_tu(vint8mf2_t maskedoff,vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m1_t test____riscv_vsbc_tu(vint8m1_t maskedoff,vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m2_t test____riscv_vsbc_tu(vint8m2_t maskedoff,vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m4_t test____riscv_vsbc_tu(vint8m4_t maskedoff,vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m8_t test____riscv_vsbc_tu(vint8m8_t maskedoff,vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf4_t test____riscv_vsbc_tu(vint16mf4_t maskedoff,vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf2_t test____riscv_vsbc_tu(vint16mf2_t maskedoff,vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m1_t test____riscv_vsbc_tu(vint16m1_t maskedoff,vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m2_t test____riscv_vsbc_tu(vint16m2_t maskedoff,vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m4_t test____riscv_vsbc_tu(vint16m4_t maskedoff,vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m8_t test____riscv_vsbc_tu(vint16m8_t maskedoff,vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32mf2_t test____riscv_vsbc_tu(vint32mf2_t maskedoff,vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m1_t test____riscv_vsbc_tu(vint32m1_t maskedoff,vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m2_t test____riscv_vsbc_tu(vint32m2_t maskedoff,vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m4_t test____riscv_vsbc_tu(vint32m4_t maskedoff,vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m8_t test____riscv_vsbc_tu(vint32m8_t maskedoff,vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m1_t test____riscv_vsbc_tu(vint64m1_t maskedoff,vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m2_t test____riscv_vsbc_tu(vint64m2_t maskedoff,vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m4_t test____riscv_vsbc_tu(vint64m4_t maskedoff,vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m8_t test____riscv_vsbc_tu(vint64m8_t maskedoff,vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf8_t test____riscv_vsbc_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf4_t test____riscv_vsbc_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf2_t test____riscv_vsbc_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m1_t test____riscv_vsbc_tu(vuint8m1_t maskedoff,vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m2_t test____riscv_vsbc_tu(vuint8m2_t maskedoff,vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m4_t test____riscv_vsbc_tu(vuint8m4_t maskedoff,vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m8_t test____riscv_vsbc_tu(vuint8m8_t maskedoff,vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf4_t test____riscv_vsbc_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf2_t test____riscv_vsbc_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m1_t test____riscv_vsbc_tu(vuint16m1_t maskedoff,vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m2_t test____riscv_vsbc_tu(vuint16m2_t maskedoff,vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m4_t test____riscv_vsbc_tu(vuint16m4_t maskedoff,vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m8_t test____riscv_vsbc_tu(vuint16m8_t maskedoff,vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32mf2_t test____riscv_vsbc_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m1_t test____riscv_vsbc_tu(vuint32m1_t maskedoff,vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m2_t test____riscv_vsbc_tu(vuint32m2_t maskedoff,vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m4_t test____riscv_vsbc_tu(vuint32m4_t maskedoff,vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m8_t test____riscv_vsbc_tu(vuint32m8_t maskedoff,vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m1_t test____riscv_vsbc_tu(vuint64m1_t maskedoff,vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m2_t test____riscv_vsbc_tu(vuint64m2_t maskedoff,vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m4_t test____riscv_vsbc_tu(vuint64m4_t maskedoff,vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m8_t test____riscv_vsbc_tu(vuint64m8_t maskedoff,vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "af032d690b9affa3eedecfaa99dd254109d8f1a4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vvm_tu-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-3.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test____riscv_vsbc_tu(vint8mf8_t maskedoff,vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf4_t test____riscv_vsbc_tu(vint8mf4_t maskedoff,vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf2_t test____riscv_vsbc_tu(vint8mf2_t maskedoff,vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m1_t test____riscv_vsbc_tu(vint8m1_t maskedoff,vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m2_t test____riscv_vsbc_tu(vint8m2_t maskedoff,vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m4_t test____riscv_vsbc_tu(vint8m4_t maskedoff,vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m8_t test____riscv_vsbc_tu(vint8m8_t maskedoff,vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf4_t test____riscv_vsbc_tu(vint16mf4_t maskedoff,vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf2_t test____riscv_vsbc_tu(vint16mf2_t maskedoff,vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m1_t test____riscv_vsbc_tu(vint16m1_t maskedoff,vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m2_t test____riscv_vsbc_tu(vint16m2_t maskedoff,vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m4_t test____riscv_vsbc_tu(vint16m4_t maskedoff,vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m8_t test____riscv_vsbc_tu(vint16m8_t maskedoff,vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32mf2_t test____riscv_vsbc_tu(vint32mf2_t maskedoff,vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m1_t test____riscv_vsbc_tu(vint32m1_t maskedoff,vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m2_t test____riscv_vsbc_tu(vint32m2_t maskedoff,vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m4_t test____riscv_vsbc_tu(vint32m4_t maskedoff,vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m8_t test____riscv_vsbc_tu(vint32m8_t maskedoff,vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m1_t test____riscv_vsbc_tu(vint64m1_t maskedoff,vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m2_t test____riscv_vsbc_tu(vint64m2_t maskedoff,vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m4_t test____riscv_vsbc_tu(vint64m4_t maskedoff,vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m8_t test____riscv_vsbc_tu(vint64m8_t maskedoff,vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf8_t test____riscv_vsbc_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf4_t test____riscv_vsbc_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf2_t test____riscv_vsbc_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m1_t test____riscv_vsbc_tu(vuint8m1_t maskedoff,vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m2_t test____riscv_vsbc_tu(vuint8m2_t maskedoff,vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m4_t test____riscv_vsbc_tu(vuint8m4_t maskedoff,vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m8_t test____riscv_vsbc_tu(vuint8m8_t maskedoff,vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf4_t test____riscv_vsbc_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf2_t test____riscv_vsbc_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m1_t test____riscv_vsbc_tu(vuint16m1_t maskedoff,vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m2_t test____riscv_vsbc_tu(vuint16m2_t maskedoff,vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m4_t test____riscv_vsbc_tu(vuint16m4_t maskedoff,vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m8_t test____riscv_vsbc_tu(vuint16m8_t maskedoff,vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32mf2_t test____riscv_vsbc_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m1_t test____riscv_vsbc_tu(vuint32m1_t maskedoff,vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m2_t test____riscv_vsbc_tu(vuint32m2_t maskedoff,vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m4_t test____riscv_vsbc_tu(vuint32m4_t maskedoff,vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m8_t test____riscv_vsbc_tu(vuint32m8_t maskedoff,vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m1_t test____riscv_vsbc_tu(vuint64m1_t maskedoff,vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m2_t test____riscv_vsbc_tu(vuint64m2_t maskedoff,vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m4_t test____riscv_vsbc_tu(vuint64m4_t maskedoff,vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m8_t test____riscv_vsbc_tu(vuint64m8_t maskedoff,vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "6502614f68fff822efe061f8c6a091dd16b3cfd5", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vxm_rv32-1.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-1.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "ded142e514a5c280501ef063221ac8f102db3b98", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vxm_rv32-2.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-2.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "b71f81710e1c2cb0970504ce6ca7fb983da621ae", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vxm_rv32-3.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-3.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "ef72c1bfa22e35c78a486dc804ab5db19771d99f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vxm_rv64-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-1.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "356ed92b0033a777591b363252a86b302d7eb48e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vxm_rv64-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-2.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "05e3f1fc19b471491b7520e3c70356f4ffbd1c71", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vxm_rv64-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-3.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "ef1de2b335fd6e8edebd85c39d044e3e21c4766d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vxm_tu_rv32-1.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-1.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test____riscv_vsbc_tu(vint8mf8_t maskedoff,vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf4_t test____riscv_vsbc_tu(vint8mf4_t maskedoff,vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf2_t test____riscv_vsbc_tu(vint8mf2_t maskedoff,vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m1_t test____riscv_vsbc_tu(vint8m1_t maskedoff,vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m2_t test____riscv_vsbc_tu(vint8m2_t maskedoff,vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m4_t test____riscv_vsbc_tu(vint8m4_t maskedoff,vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m8_t test____riscv_vsbc_tu(vint8m8_t maskedoff,vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf4_t test____riscv_vsbc_tu(vint16mf4_t maskedoff,vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf2_t test____riscv_vsbc_tu(vint16mf2_t maskedoff,vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m1_t test____riscv_vsbc_tu(vint16m1_t maskedoff,vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m2_t test____riscv_vsbc_tu(vint16m2_t maskedoff,vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m4_t test____riscv_vsbc_tu(vint16m4_t maskedoff,vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m8_t test____riscv_vsbc_tu(vint16m8_t maskedoff,vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32mf2_t test____riscv_vsbc_tu(vint32mf2_t maskedoff,vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m1_t test____riscv_vsbc_tu(vint32m1_t maskedoff,vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m2_t test____riscv_vsbc_tu(vint32m2_t maskedoff,vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m4_t test____riscv_vsbc_tu(vint32m4_t maskedoff,vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m8_t test____riscv_vsbc_tu(vint32m8_t maskedoff,vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m1_t test____riscv_vsbc_tu(vint64m1_t maskedoff,vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m2_t test____riscv_vsbc_tu(vint64m2_t maskedoff,vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m4_t test____riscv_vsbc_tu(vint64m4_t maskedoff,vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m8_t test____riscv_vsbc_tu(vint64m8_t maskedoff,vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf8_t test____riscv_vsbc_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf4_t test____riscv_vsbc_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf2_t test____riscv_vsbc_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m1_t test____riscv_vsbc_tu(vuint8m1_t maskedoff,vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m2_t test____riscv_vsbc_tu(vuint8m2_t maskedoff,vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m4_t test____riscv_vsbc_tu(vuint8m4_t maskedoff,vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m8_t test____riscv_vsbc_tu(vuint8m8_t maskedoff,vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf4_t test____riscv_vsbc_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf2_t test____riscv_vsbc_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m1_t test____riscv_vsbc_tu(vuint16m1_t maskedoff,vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m2_t test____riscv_vsbc_tu(vuint16m2_t maskedoff,vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m4_t test____riscv_vsbc_tu(vuint16m4_t maskedoff,vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m8_t test____riscv_vsbc_tu(vuint16m8_t maskedoff,vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32mf2_t test____riscv_vsbc_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m1_t test____riscv_vsbc_tu(vuint32m1_t maskedoff,vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m2_t test____riscv_vsbc_tu(vuint32m2_t maskedoff,vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m4_t test____riscv_vsbc_tu(vuint32m4_t maskedoff,vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m8_t test____riscv_vsbc_tu(vuint32m8_t maskedoff,vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m1_t test____riscv_vsbc_tu(vuint64m1_t maskedoff,vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m2_t test____riscv_vsbc_tu(vuint64m2_t maskedoff,vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m4_t test____riscv_vsbc_tu(vuint64m4_t maskedoff,vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m8_t test____riscv_vsbc_tu(vuint64m8_t maskedoff,vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "4e0ed444e8d794a6de557a9e06d9bc783652adc6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vxm_tu_rv32-2.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-2.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test____riscv_vsbc_tu(vint8mf8_t maskedoff,vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf4_t test____riscv_vsbc_tu(vint8mf4_t maskedoff,vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf2_t test____riscv_vsbc_tu(vint8mf2_t maskedoff,vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m1_t test____riscv_vsbc_tu(vint8m1_t maskedoff,vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m2_t test____riscv_vsbc_tu(vint8m2_t maskedoff,vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m4_t test____riscv_vsbc_tu(vint8m4_t maskedoff,vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m8_t test____riscv_vsbc_tu(vint8m8_t maskedoff,vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf4_t test____riscv_vsbc_tu(vint16mf4_t maskedoff,vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf2_t test____riscv_vsbc_tu(vint16mf2_t maskedoff,vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m1_t test____riscv_vsbc_tu(vint16m1_t maskedoff,vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m2_t test____riscv_vsbc_tu(vint16m2_t maskedoff,vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m4_t test____riscv_vsbc_tu(vint16m4_t maskedoff,vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m8_t test____riscv_vsbc_tu(vint16m8_t maskedoff,vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32mf2_t test____riscv_vsbc_tu(vint32mf2_t maskedoff,vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m1_t test____riscv_vsbc_tu(vint32m1_t maskedoff,vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m2_t test____riscv_vsbc_tu(vint32m2_t maskedoff,vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m4_t test____riscv_vsbc_tu(vint32m4_t maskedoff,vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m8_t test____riscv_vsbc_tu(vint32m8_t maskedoff,vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m1_t test____riscv_vsbc_tu(vint64m1_t maskedoff,vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m2_t test____riscv_vsbc_tu(vint64m2_t maskedoff,vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m4_t test____riscv_vsbc_tu(vint64m4_t maskedoff,vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m8_t test____riscv_vsbc_tu(vint64m8_t maskedoff,vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf8_t test____riscv_vsbc_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf4_t test____riscv_vsbc_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf2_t test____riscv_vsbc_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m1_t test____riscv_vsbc_tu(vuint8m1_t maskedoff,vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m2_t test____riscv_vsbc_tu(vuint8m2_t maskedoff,vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m4_t test____riscv_vsbc_tu(vuint8m4_t maskedoff,vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m8_t test____riscv_vsbc_tu(vuint8m8_t maskedoff,vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf4_t test____riscv_vsbc_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf2_t test____riscv_vsbc_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m1_t test____riscv_vsbc_tu(vuint16m1_t maskedoff,vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m2_t test____riscv_vsbc_tu(vuint16m2_t maskedoff,vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m4_t test____riscv_vsbc_tu(vuint16m4_t maskedoff,vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m8_t test____riscv_vsbc_tu(vuint16m8_t maskedoff,vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32mf2_t test____riscv_vsbc_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m1_t test____riscv_vsbc_tu(vuint32m1_t maskedoff,vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m2_t test____riscv_vsbc_tu(vuint32m2_t maskedoff,vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m4_t test____riscv_vsbc_tu(vuint32m4_t maskedoff,vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m8_t test____riscv_vsbc_tu(vuint32m8_t maskedoff,vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m1_t test____riscv_vsbc_tu(vuint64m1_t maskedoff,vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m2_t test____riscv_vsbc_tu(vuint64m2_t maskedoff,vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m4_t test____riscv_vsbc_tu(vuint64m4_t maskedoff,vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m8_t test____riscv_vsbc_tu(vuint64m8_t maskedoff,vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "c5750c759a11fcccf52d6ce48468dc34642adb91", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vxm_tu_rv32-3.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-3.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test____riscv_vsbc_tu(vint8mf8_t maskedoff,vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf4_t test____riscv_vsbc_tu(vint8mf4_t maskedoff,vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf2_t test____riscv_vsbc_tu(vint8mf2_t maskedoff,vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m1_t test____riscv_vsbc_tu(vint8m1_t maskedoff,vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m2_t test____riscv_vsbc_tu(vint8m2_t maskedoff,vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m4_t test____riscv_vsbc_tu(vint8m4_t maskedoff,vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m8_t test____riscv_vsbc_tu(vint8m8_t maskedoff,vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf4_t test____riscv_vsbc_tu(vint16mf4_t maskedoff,vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf2_t test____riscv_vsbc_tu(vint16mf2_t maskedoff,vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m1_t test____riscv_vsbc_tu(vint16m1_t maskedoff,vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m2_t test____riscv_vsbc_tu(vint16m2_t maskedoff,vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m4_t test____riscv_vsbc_tu(vint16m4_t maskedoff,vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m8_t test____riscv_vsbc_tu(vint16m8_t maskedoff,vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32mf2_t test____riscv_vsbc_tu(vint32mf2_t maskedoff,vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m1_t test____riscv_vsbc_tu(vint32m1_t maskedoff,vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m2_t test____riscv_vsbc_tu(vint32m2_t maskedoff,vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m4_t test____riscv_vsbc_tu(vint32m4_t maskedoff,vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m8_t test____riscv_vsbc_tu(vint32m8_t maskedoff,vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m1_t test____riscv_vsbc_tu(vint64m1_t maskedoff,vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m2_t test____riscv_vsbc_tu(vint64m2_t maskedoff,vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m4_t test____riscv_vsbc_tu(vint64m4_t maskedoff,vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m8_t test____riscv_vsbc_tu(vint64m8_t maskedoff,vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf8_t test____riscv_vsbc_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf4_t test____riscv_vsbc_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf2_t test____riscv_vsbc_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m1_t test____riscv_vsbc_tu(vuint8m1_t maskedoff,vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m2_t test____riscv_vsbc_tu(vuint8m2_t maskedoff,vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m4_t test____riscv_vsbc_tu(vuint8m4_t maskedoff,vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m8_t test____riscv_vsbc_tu(vuint8m8_t maskedoff,vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf4_t test____riscv_vsbc_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf2_t test____riscv_vsbc_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m1_t test____riscv_vsbc_tu(vuint16m1_t maskedoff,vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m2_t test____riscv_vsbc_tu(vuint16m2_t maskedoff,vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m4_t test____riscv_vsbc_tu(vuint16m4_t maskedoff,vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m8_t test____riscv_vsbc_tu(vuint16m8_t maskedoff,vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32mf2_t test____riscv_vsbc_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m1_t test____riscv_vsbc_tu(vuint32m1_t maskedoff,vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m2_t test____riscv_vsbc_tu(vuint32m2_t maskedoff,vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m4_t test____riscv_vsbc_tu(vuint32m4_t maskedoff,vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m8_t test____riscv_vsbc_tu(vuint32m8_t maskedoff,vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m1_t test____riscv_vsbc_tu(vuint64m1_t maskedoff,vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m2_t test____riscv_vsbc_tu(vuint64m2_t maskedoff,vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m4_t test____riscv_vsbc_tu(vuint64m4_t maskedoff,vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m8_t test____riscv_vsbc_tu(vuint64m8_t maskedoff,vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "b7592162f9463d6f7908a877a071018bd795e501", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vxm_tu_rv64-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-1.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test____riscv_vsbc_tu(vint8mf8_t maskedoff,vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf4_t test____riscv_vsbc_tu(vint8mf4_t maskedoff,vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf2_t test____riscv_vsbc_tu(vint8mf2_t maskedoff,vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m1_t test____riscv_vsbc_tu(vint8m1_t maskedoff,vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m2_t test____riscv_vsbc_tu(vint8m2_t maskedoff,vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m4_t test____riscv_vsbc_tu(vint8m4_t maskedoff,vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m8_t test____riscv_vsbc_tu(vint8m8_t maskedoff,vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf4_t test____riscv_vsbc_tu(vint16mf4_t maskedoff,vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf2_t test____riscv_vsbc_tu(vint16mf2_t maskedoff,vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m1_t test____riscv_vsbc_tu(vint16m1_t maskedoff,vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m2_t test____riscv_vsbc_tu(vint16m2_t maskedoff,vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m4_t test____riscv_vsbc_tu(vint16m4_t maskedoff,vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m8_t test____riscv_vsbc_tu(vint16m8_t maskedoff,vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32mf2_t test____riscv_vsbc_tu(vint32mf2_t maskedoff,vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m1_t test____riscv_vsbc_tu(vint32m1_t maskedoff,vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m2_t test____riscv_vsbc_tu(vint32m2_t maskedoff,vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m4_t test____riscv_vsbc_tu(vint32m4_t maskedoff,vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m8_t test____riscv_vsbc_tu(vint32m8_t maskedoff,vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m1_t test____riscv_vsbc_tu(vint64m1_t maskedoff,vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m2_t test____riscv_vsbc_tu(vint64m2_t maskedoff,vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m4_t test____riscv_vsbc_tu(vint64m4_t maskedoff,vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m8_t test____riscv_vsbc_tu(vint64m8_t maskedoff,vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf8_t test____riscv_vsbc_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf4_t test____riscv_vsbc_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf2_t test____riscv_vsbc_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m1_t test____riscv_vsbc_tu(vuint8m1_t maskedoff,vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m2_t test____riscv_vsbc_tu(vuint8m2_t maskedoff,vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m4_t test____riscv_vsbc_tu(vuint8m4_t maskedoff,vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m8_t test____riscv_vsbc_tu(vuint8m8_t maskedoff,vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf4_t test____riscv_vsbc_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf2_t test____riscv_vsbc_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m1_t test____riscv_vsbc_tu(vuint16m1_t maskedoff,vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m2_t test____riscv_vsbc_tu(vuint16m2_t maskedoff,vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m4_t test____riscv_vsbc_tu(vuint16m4_t maskedoff,vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m8_t test____riscv_vsbc_tu(vuint16m8_t maskedoff,vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32mf2_t test____riscv_vsbc_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m1_t test____riscv_vsbc_tu(vuint32m1_t maskedoff,vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m2_t test____riscv_vsbc_tu(vuint32m2_t maskedoff,vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m4_t test____riscv_vsbc_tu(vuint32m4_t maskedoff,vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m8_t test____riscv_vsbc_tu(vuint32m8_t maskedoff,vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m1_t test____riscv_vsbc_tu(vuint64m1_t maskedoff,vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m2_t test____riscv_vsbc_tu(vuint64m2_t maskedoff,vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m4_t test____riscv_vsbc_tu(vuint64m4_t maskedoff,vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m8_t test____riscv_vsbc_tu(vuint64m8_t maskedoff,vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "29b2d474180b1413372c63da3b889fd74f02ec76", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vxm_tu_rv64-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-2.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test____riscv_vsbc_tu(vint8mf8_t maskedoff,vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf4_t test____riscv_vsbc_tu(vint8mf4_t maskedoff,vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf2_t test____riscv_vsbc_tu(vint8mf2_t maskedoff,vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m1_t test____riscv_vsbc_tu(vint8m1_t maskedoff,vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m2_t test____riscv_vsbc_tu(vint8m2_t maskedoff,vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m4_t test____riscv_vsbc_tu(vint8m4_t maskedoff,vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m8_t test____riscv_vsbc_tu(vint8m8_t maskedoff,vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf4_t test____riscv_vsbc_tu(vint16mf4_t maskedoff,vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf2_t test____riscv_vsbc_tu(vint16mf2_t maskedoff,vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m1_t test____riscv_vsbc_tu(vint16m1_t maskedoff,vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m2_t test____riscv_vsbc_tu(vint16m2_t maskedoff,vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m4_t test____riscv_vsbc_tu(vint16m4_t maskedoff,vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m8_t test____riscv_vsbc_tu(vint16m8_t maskedoff,vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32mf2_t test____riscv_vsbc_tu(vint32mf2_t maskedoff,vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m1_t test____riscv_vsbc_tu(vint32m1_t maskedoff,vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m2_t test____riscv_vsbc_tu(vint32m2_t maskedoff,vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m4_t test____riscv_vsbc_tu(vint32m4_t maskedoff,vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m8_t test____riscv_vsbc_tu(vint32m8_t maskedoff,vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m1_t test____riscv_vsbc_tu(vint64m1_t maskedoff,vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m2_t test____riscv_vsbc_tu(vint64m2_t maskedoff,vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m4_t test____riscv_vsbc_tu(vint64m4_t maskedoff,vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m8_t test____riscv_vsbc_tu(vint64m8_t maskedoff,vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf8_t test____riscv_vsbc_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf4_t test____riscv_vsbc_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf2_t test____riscv_vsbc_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m1_t test____riscv_vsbc_tu(vuint8m1_t maskedoff,vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m2_t test____riscv_vsbc_tu(vuint8m2_t maskedoff,vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m4_t test____riscv_vsbc_tu(vuint8m4_t maskedoff,vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m8_t test____riscv_vsbc_tu(vuint8m8_t maskedoff,vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf4_t test____riscv_vsbc_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf2_t test____riscv_vsbc_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m1_t test____riscv_vsbc_tu(vuint16m1_t maskedoff,vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m2_t test____riscv_vsbc_tu(vuint16m2_t maskedoff,vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m4_t test____riscv_vsbc_tu(vuint16m4_t maskedoff,vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m8_t test____riscv_vsbc_tu(vuint16m8_t maskedoff,vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32mf2_t test____riscv_vsbc_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m1_t test____riscv_vsbc_tu(vuint32m1_t maskedoff,vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m2_t test____riscv_vsbc_tu(vuint32m2_t maskedoff,vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m4_t test____riscv_vsbc_tu(vuint32m4_t maskedoff,vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m8_t test____riscv_vsbc_tu(vuint32m8_t maskedoff,vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m1_t test____riscv_vsbc_tu(vuint64m1_t maskedoff,vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m2_t test____riscv_vsbc_tu(vuint64m2_t maskedoff,vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m4_t test____riscv_vsbc_tu(vuint64m4_t maskedoff,vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m8_t test____riscv_vsbc_tu(vuint64m8_t maskedoff,vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "c52631f6ad7fcfaf668999b96832faaece2ff02f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsbc_vxm_tu_rv64-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6483b8310337917b21a8722de811bf7637a777f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-3.C?ref=6483b8310337917b21a8722de811bf7637a777f6", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test____riscv_vsbc_tu(vint8mf8_t maskedoff,vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf4_t test____riscv_vsbc_tu(vint8mf4_t maskedoff,vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf2_t test____riscv_vsbc_tu(vint8mf2_t maskedoff,vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m1_t test____riscv_vsbc_tu(vint8m1_t maskedoff,vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m2_t test____riscv_vsbc_tu(vint8m2_t maskedoff,vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m4_t test____riscv_vsbc_tu(vint8m4_t maskedoff,vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m8_t test____riscv_vsbc_tu(vint8m8_t maskedoff,vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf4_t test____riscv_vsbc_tu(vint16mf4_t maskedoff,vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf2_t test____riscv_vsbc_tu(vint16mf2_t maskedoff,vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m1_t test____riscv_vsbc_tu(vint16m1_t maskedoff,vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m2_t test____riscv_vsbc_tu(vint16m2_t maskedoff,vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m4_t test____riscv_vsbc_tu(vint16m4_t maskedoff,vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m8_t test____riscv_vsbc_tu(vint16m8_t maskedoff,vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32mf2_t test____riscv_vsbc_tu(vint32mf2_t maskedoff,vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m1_t test____riscv_vsbc_tu(vint32m1_t maskedoff,vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m2_t test____riscv_vsbc_tu(vint32m2_t maskedoff,vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m4_t test____riscv_vsbc_tu(vint32m4_t maskedoff,vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m8_t test____riscv_vsbc_tu(vint32m8_t maskedoff,vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m1_t test____riscv_vsbc_tu(vint64m1_t maskedoff,vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m2_t test____riscv_vsbc_tu(vint64m2_t maskedoff,vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m4_t test____riscv_vsbc_tu(vint64m4_t maskedoff,vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m8_t test____riscv_vsbc_tu(vint64m8_t maskedoff,vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf8_t test____riscv_vsbc_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf4_t test____riscv_vsbc_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf2_t test____riscv_vsbc_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m1_t test____riscv_vsbc_tu(vuint8m1_t maskedoff,vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m2_t test____riscv_vsbc_tu(vuint8m2_t maskedoff,vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m4_t test____riscv_vsbc_tu(vuint8m4_t maskedoff,vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m8_t test____riscv_vsbc_tu(vuint8m8_t maskedoff,vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf4_t test____riscv_vsbc_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf2_t test____riscv_vsbc_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m1_t test____riscv_vsbc_tu(vuint16m1_t maskedoff,vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m2_t test____riscv_vsbc_tu(vuint16m2_t maskedoff,vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m4_t test____riscv_vsbc_tu(vuint16m4_t maskedoff,vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m8_t test____riscv_vsbc_tu(vuint16m8_t maskedoff,vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32mf2_t test____riscv_vsbc_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m1_t test____riscv_vsbc_tu(vuint32m1_t maskedoff,vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m2_t test____riscv_vsbc_tu(vuint32m2_t maskedoff,vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m4_t test____riscv_vsbc_tu(vuint32m4_t maskedoff,vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m8_t test____riscv_vsbc_tu(vuint32m8_t maskedoff,vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m1_t test____riscv_vsbc_tu(vuint64m1_t maskedoff,vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m2_t test____riscv_vsbc_tu(vuint64m2_t maskedoff,vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m4_t test____riscv_vsbc_tu(vuint64m4_t maskedoff,vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m8_t test____riscv_vsbc_tu(vuint64m8_t maskedoff,vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}]}