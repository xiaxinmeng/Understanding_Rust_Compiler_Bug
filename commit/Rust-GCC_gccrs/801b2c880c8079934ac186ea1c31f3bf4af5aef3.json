{"sha": "801b2c880c8079934ac186ea1c31f3bf4af5aef3", "node_id": "C_kwDOANBUbNoAKDgwMWIyYzg4MGM4MDc5OTM0YWMxODZlYTFjMzFmM2JmNGFmNWFlZjM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-04T09:12:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-04T09:12:17Z"}, "message": "shrink-wrapping: Don't call can_get_prologue unnecessarily [PR103860]\n\nOn Thu, Dec 30, 2021 at 04:08:25AM -0600, Segher Boessenkool wrote:\n> > The following simple patch makes sure we call can_get_prologue even after\n> > the last former iteration when vec is already empty and only break from\n> > the loop afterwards (and only if the updating of pro done because of\n> > !can_get_prologue didn't push anything into vec again).\n\nDuring the development of the above patch I've noticed that in many cases\nwe call can_get_prologue often on the same pro again and again and again,\nwe can have many basic blocks pushed into vec and if most of those don't\nrequire pro updates, i.e.\n      basic_block bb = vec.pop ();\n      if (!can_dup_for_shrink_wrapping (bb, pro, max_grow_size))\n        while (!dominated_by_p (CDI_DOMINATORS, bb, pro))\nisn't true, then pro is can_get_prologue checked for each bb in the vec.\n\nThe following simple patch just remembers which bb we've verified already\nand verifies again only when pro changes.  Most of the patch is just\nreindentation.\n\n2022-01-04  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/103860\n\t* shrink-wrap.c (try_shrink_wrapping): Don't call can_get_prologue\n\tuselessly for blocks for which it has been called already.", "tree": {"sha": "92735cabf5cebdab517a6ddf6bf5bf833abffec7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92735cabf5cebdab517a6ddf6bf5bf833abffec7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/801b2c880c8079934ac186ea1c31f3bf4af5aef3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/801b2c880c8079934ac186ea1c31f3bf4af5aef3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/801b2c880c8079934ac186ea1c31f3bf4af5aef3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/801b2c880c8079934ac186ea1c31f3bf4af5aef3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bd5297f665fd3ba5691297c016809f3501e7fba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bd5297f665fd3ba5691297c016809f3501e7fba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bd5297f665fd3ba5691297c016809f3501e7fba"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "f022039fb8ce3a484047ebc739117d17a2bcd022", "filename": "gcc/shrink-wrap.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/801b2c880c8079934ac186ea1c31f3bf4af5aef3/gcc%2Fshrink-wrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/801b2c880c8079934ac186ea1c31f3bf4af5aef3/gcc%2Fshrink-wrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fshrink-wrap.c?ref=801b2c880c8079934ac186ea1c31f3bf4af5aef3", "patch": "@@ -781,14 +781,20 @@ try_shrink_wrapping (edge *entry_edge, rtx_insn *prologue_seq)\n   unsigned max_grow_size = get_uncond_jump_length ();\n   max_grow_size *= param_max_grow_copy_bb_insns;\n \n+  basic_block checked_pro = NULL;\n+\n   while (pro != entry)\n     {\n-      while (pro != entry && !can_get_prologue (pro, prologue_clobbered))\n+      if (pro != checked_pro)\n \t{\n-\t  pro = get_immediate_dominator (CDI_DOMINATORS, pro);\n+\t  while (pro != entry && !can_get_prologue (pro, prologue_clobbered))\n+\t    {\n+\t      pro = get_immediate_dominator (CDI_DOMINATORS, pro);\n \n-\t  if (bitmap_set_bit (bb_with, pro->index))\n-\t    vec.quick_push (pro);\n+\t      if (bitmap_set_bit (bb_with, pro->index))\n+\t\tvec.quick_push (pro);\n+\t    }\n+\t  checked_pro = pro;\n \t}\n \n       if (vec.is_empty ())"}]}