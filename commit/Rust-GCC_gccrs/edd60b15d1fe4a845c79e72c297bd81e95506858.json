{"sha": "edd60b15d1fe4a845c79e72c297bd81e95506858", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRkNjBiMTVkMWZlNGE4NDVjNzllNzJjMjk3YmQ4MWU5NTUwNjg1OA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2001-07-24T20:08:58Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2001-07-24T20:08:58Z"}, "message": "prims.cc (_JNI_OnLoad): New function.\n\n\t* prims.cc (_JNI_OnLoad): New function.\n\t(JNI_OnLoad): Use it.\n\t(_Jv_CreateJavaVM): Check for _JNI_OnLoad, not NULL.\n\nFrom-SVN: r44316", "tree": {"sha": "73237875779300713dd1ab622cdddf291c188485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73237875779300713dd1ab622cdddf291c188485"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edd60b15d1fe4a845c79e72c297bd81e95506858", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edd60b15d1fe4a845c79e72c297bd81e95506858", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edd60b15d1fe4a845c79e72c297bd81e95506858", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edd60b15d1fe4a845c79e72c297bd81e95506858/comments", "author": null, "committer": null, "parents": [{"sha": "6e6958dce4887e887a942da5ff9415c23e45fd46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e6958dce4887e887a942da5ff9415c23e45fd46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e6958dce4887e887a942da5ff9415c23e45fd46"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "dc779d13d32c288a8f8cfb3c9d7ea644afe69f05", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edd60b15d1fe4a845c79e72c297bd81e95506858/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edd60b15d1fe4a845c79e72c297bd81e95506858/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=edd60b15d1fe4a845c79e72c297bd81e95506858", "patch": "@@ -1,3 +1,9 @@\n+2001-07-24  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* prims.cc (_JNI_OnLoad): New function.\n+\t(JNI_OnLoad): Use it.\n+\t(_Jv_CreateJavaVM): Check for _JNI_OnLoad, not NULL.\n+\n 2001-07-24  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* Makefile.am (AM_MAKEFLAGS): Pass RUNTESTFLAGS."}, {"sha": "f10497e7a9dc6acc4a560fe0b4c696ca1675deed", "filename": "libjava/prims.cc", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edd60b15d1fe4a845c79e72c297bd81e95506858/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edd60b15d1fe4a845c79e72c297bd81e95506858/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=edd60b15d1fe4a845c79e72c297bd81e95506858", "patch": "@@ -690,12 +690,19 @@ win32_exception_handler (LPEXCEPTION_POINTERS e)\n \n #endif\n \n-/* This will be non-NULL if the user has preloaded a JNI library, or\n-   linked one into the executable.  */\n+/* This will be different from _JNI_OnLoad if the user has preloaded a JNI\n+   library, or linked one into the executable.  */\n extern \"C\" \n {\n-#pragma weak JNI_OnLoad\n+  /* Some systems, like Tru64 UNIX, don't support weak definitions, so use\n+     an empty dummy function to check if the user provided his own.  */\n+#pragma weak JNI_OnLoad = _JNI_OnLoad\n   extern jint JNI_OnLoad (JavaVM *, void *) __attribute__((weak));\n+\n+  jint _JNI_OnLoad (JavaVM *vm, void *)\n+  {\n+    return 0;\n+  }\n }\n \n \n@@ -895,7 +902,7 @@ _Jv_CreateJavaVM (void* /*vm_args*/)\n      environment variable.  We take advatage of this here to allow for\n      dynamically loading a JNI library into a fully linked executable.  */\n \n-  if (JNI_OnLoad != NULL)\n+  if (JNI_OnLoad != _JNI_OnLoad)\n     {\n       JavaVM *vm = _Jv_GetJavaVM ();\n       if (vm == NULL)"}]}