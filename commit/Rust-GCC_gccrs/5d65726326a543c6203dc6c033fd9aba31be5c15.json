{"sha": "5d65726326a543c6203dc6c033fd9aba31be5c15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ2NTcyNjMyNmE1NDNjNjIwM2RjNmMwMzNmZDlhYmEzMWJlNWMxNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-07-05T12:20:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-05T12:20:00Z"}, "message": "re PR middle-end/44784 (Failed to build 403.gcc in SPEC CPU 2006)\n\n2010-07-05  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/44784\n\t* tree-ssa-pre.c (bitmap_find_leader): Fix dominance check\n\tfor inserted stmts.\n\t(find_or_generate_expression): Fix SCCVN insertion check.\n\n\t* gcc.c-torture/compile/pr44784.c: New testcase.\n\nFrom-SVN: r161829", "tree": {"sha": "76ccfe242e5f15fb4cbc6fe32f20a7346bc63b50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76ccfe242e5f15fb4cbc6fe32f20a7346bc63b50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d65726326a543c6203dc6c033fd9aba31be5c15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d65726326a543c6203dc6c033fd9aba31be5c15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d65726326a543c6203dc6c033fd9aba31be5c15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d65726326a543c6203dc6c033fd9aba31be5c15/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3cd0d4fa96b392b70a6b44aa5072a69512d4fbae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd0d4fa96b392b70a6b44aa5072a69512d4fbae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cd0d4fa96b392b70a6b44aa5072a69512d4fbae"}], "stats": {"total": 69, "additions": 66, "deletions": 3}, "files": [{"sha": "a5d97fcc3bd449feec501b36e91222d159d2a847", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d65726326a543c6203dc6c033fd9aba31be5c15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d65726326a543c6203dc6c033fd9aba31be5c15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d65726326a543c6203dc6c033fd9aba31be5c15", "patch": "@@ -1,3 +1,10 @@\n+2010-07-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/44784\n+\t* tree-ssa-pre.c (bitmap_find_leader): Fix dominance check\n+\tfor inserted stmts.\n+\t(find_or_generate_expression): Fix SCCVN insertion check.\n+\n 2010-07-05  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/rs6000/e500crtsavg64gprctr.asm: Correct done label name."}, {"sha": "b05391a97c4b79f4f17e98579edab208b2c56aeb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d65726326a543c6203dc6c033fd9aba31be5c15/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d65726326a543c6203dc6c033fd9aba31be5c15/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d65726326a543c6203dc6c033fd9aba31be5c15", "patch": "@@ -1,3 +1,8 @@\n+2010-07-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/44784\n+\t* gcc.c-torture/compile/pr44784.c: New testcase.\n+\n 2010-07-05  Ira Rosen  <irar@il.ibm.com>\n \n \t* gcc.dg/vect/costmodel/i386/costmodel-fast-math-vect-pr29925.c:"}, {"sha": "54d531a3dff7eaa753d48b8a4f4b75c5e9b62ed9", "filename": "gcc/testsuite/gcc.c-torture/compile/pr44784.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d65726326a543c6203dc6c033fd9aba31be5c15/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44784.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d65726326a543c6203dc6c033fd9aba31be5c15/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44784.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44784.c?ref=5d65726326a543c6203dc6c033fd9aba31be5c15", "patch": "@@ -0,0 +1,47 @@\n+typedef struct rtx_def *rtx;\n+enum rtx_code { SUBREG };\n+typedef union rtunion_def {\n+    long rtint;\n+    unsigned long rtuint;\n+    rtx rtx;\n+} rtunion;\n+struct rtx_def {\n+    enum rtx_code code: 8;\n+    rtunion fld[1];\n+};\n+typedef struct simple_bitmap_def {\n+    unsigned long long elms[1];\n+} *sbitmap;\n+struct df_link {\n+    struct df_link *next;\n+    rtx reg;\n+};\n+typedef enum { UNDEFINED,   CONSTANT,   VARYING } latticevalue;\n+typedef struct {\n+    latticevalue lattice_val;\n+} value;\n+static value *values;\n+static sbitmap ssa_edges;\n+void defs_to_varying (struct df_link *start)\n+{\n+  struct df_link *currdef;\n+  for (currdef = start;\n+       currdef;\n+       currdef = currdef->next)\n+    {\n+      rtx reg = currdef->reg;\n+      if (values[(reg->code == SUBREG\n+\t\t  ? reg->fld[0].rtx\n+\t\t  : reg)->fld[0].rtuint].lattice_val != VARYING)\n+\tssa_edges->elms [(reg->code == SUBREG\n+\t\t\t  ? reg->fld[0].rtx\n+\t\t\t  : reg)->fld[0].rtuint / 64]\n+\t    |= ((unsigned long long) 1\n+\t\t<< (reg->code == SUBREG\n+\t\t    ? reg->fld[0].rtx\n+\t\t    : reg)->fld[0].rtuint % 64);\n+      values[(reg->code == SUBREG\n+\t      ? reg->fld[0].rtx\n+\t      : reg)->fld[0].rtuint].lattice_val = VARYING;\n+    }\n+}"}, {"sha": "c864eac37b45c255c1e0181213545c8f7a836ae3", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d65726326a543c6203dc6c033fd9aba31be5c15/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d65726326a543c6203dc6c033fd9aba31be5c15/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=5d65726326a543c6203dc6c033fd9aba31be5c15", "patch": "@@ -1955,7 +1955,10 @@ bitmap_find_leader (bitmap_set_t set, unsigned int val, gimple stmt)\n \t      gimple def_stmt = SSA_NAME_DEF_STMT (PRE_EXPR_NAME (val));\n \t      if (gimple_code (def_stmt) != GIMPLE_PHI\n \t\t  && gimple_bb (def_stmt) == gimple_bb (stmt)\n-\t\t  && gimple_uid (def_stmt) >= gimple_uid (stmt))\n+\t\t  /* PRE insertions are at the end of the basic-block\n+\t\t     and have UID 0.  */\n+\t\t  && (gimple_uid (def_stmt) == 0\n+\t\t      || gimple_uid (def_stmt) >= gimple_uid (stmt)))\n \t\tcontinue;\n \t    }\n \t  return val;\n@@ -3021,9 +3024,10 @@ find_or_generate_expression (basic_block block, pre_expr expr,\n     }\n \n   /* If it's still NULL, it must be a complex expression, so generate\n-     it recursively.  Not so for FRE though.  */\n+     it recursively.  Not so if inserting expressions for values generated\n+     by SCCVN.  */\n   if (genop == NULL\n-      && !in_fre)\n+      && !domstmt)\n     {\n       bitmap_set_t exprset;\n       unsigned int lookfor = get_expr_value_id (expr);"}]}