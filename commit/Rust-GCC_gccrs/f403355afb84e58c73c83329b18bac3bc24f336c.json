{"sha": "f403355afb84e58c73c83329b18bac3bc24f336c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQwMzM1NWFmYjg0ZTU4YzczYzgzMzI5YjE4YmFjM2JjMjRmMzM2Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:49:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:49:34Z"}, "message": "[multiple changes]\n\n2013-02-06  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat_rm.texi: Fix typos.\n\n2013-02-06  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_prag.adb: Minor reformatting.\n\n2013-02-06  Pascal Obry  <obry@adacore.com>\n\n\t* s-tasloc.ads: Set System.Task_Lock to preelaborate.\n\nFrom-SVN: r195800", "tree": {"sha": "e869984ad6c16eaaeb7517b98fd87ac9eaa153ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e869984ad6c16eaaeb7517b98fd87ac9eaa153ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f403355afb84e58c73c83329b18bac3bc24f336c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f403355afb84e58c73c83329b18bac3bc24f336c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f403355afb84e58c73c83329b18bac3bc24f336c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f403355afb84e58c73c83329b18bac3bc24f336c/comments", "author": null, "committer": null, "parents": [{"sha": "a75ea2953b2cc328db203807fd769f17bcd4c476", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a75ea2953b2cc328db203807fd769f17bcd4c476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a75ea2953b2cc328db203807fd769f17bcd4c476"}], "stats": {"total": 55, "additions": 47, "deletions": 8}, "files": [{"sha": "6cb9d04d8e0da127562f4c83d9e5fb0bceb4ab04", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f403355afb84e58c73c83329b18bac3bc24f336c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f403355afb84e58c73c83329b18bac3bc24f336c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f403355afb84e58c73c83329b18bac3bc24f336c", "patch": "@@ -1,3 +1,11 @@\n+2013-02-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_prag.adb: Minor reformatting.\n+\n+2013-02-06  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-tasloc.ads: Set System.Task_Lock to preelaborate.\n+\n 2013-02-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* snames.ads-tmpl (Name_Loop_Optimize, Name_No_Unroll,"}, {"sha": "27f94c146fff6df9825c4173dce524e95d0c4443", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f403355afb84e58c73c83329b18bac3bc24f336c/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f403355afb84e58c73c83329b18bac3bc24f336c/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=f403355afb84e58c73c83329b18bac3bc24f336c", "patch": "@@ -151,6 +151,7 @@ Implementation Defined Pragmas\n * Pragma Finalize_Storage_Only::\n * Pragma Float_Representation::\n * Pragma Ident::\n+* Pragma Implementation_Defined::\n * Pragma Implemented::\n * Pragma Implicit_Packing::\n * Pragma Import_Exception::\n@@ -198,6 +199,7 @@ Implementation Defined Pragmas\n * Pragma Priority_Specific_Dispatching::\n * Pragma Profile (Ravenscar)::\n * Pragma Profile (Restricted)::\n+* Pragma Profile (Rational)::\n * Pragma Psect_Object::\n * Pragma Pure_Function::\n * Pragma Relative_Deadline::\n@@ -901,6 +903,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Finalize_Storage_Only::\n * Pragma Float_Representation::\n * Pragma Ident::\n+* Pragma Implementation_Defined::\n * Pragma Implemented::\n * Pragma Implicit_Packing::\n * Pragma Import_Exception::\n@@ -948,6 +951,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Priority_Specific_Dispatching::\n * Pragma Profile (Ravenscar)::\n * Pragma Profile (Restricted)::\n+* Pragma Profile (Rational)::\n * Pragma Psect_Object::\n * Pragma Pure_Function::\n * Pragma Relative_Deadline::\n@@ -2879,6 +2883,34 @@ maximum allowed length is 31 characters, so if it is important to\n maintain compatibility with this compiler, you should obey this length\n limit.\n \n+@node Pragma Implementation_Defined\n+@unnumberedsec Pragma Implementation_Defined\n+@findex Implementation_Defined\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Implementation_Defined (local_NAME);\n+@end smallexample\n+\n+@noindent\n+This pragma marks a previously declared entioty as implementation-defined.\n+For an overloaded entity, applies to the most recent homonym.\n+\n+@smallexample @c ada\n+pragma Implementation_Defined;\n+@end smallexample\n+\n+@noindent\n+The form with no arguments appears anywhere within a scope, most\n+typically a package spec, and indicates that all entities that are\n+defined within the package spec are Implementation_Defined.\n+\n+This pragma is used within the GNAT runtime library to identify\n+implementation-defined entities introduced in language-defined units,\n+for the purpose of implementing the No_Implementation_Identifiers\n+restriction.\n+\n @node Pragma Implemented\n @unnumberedsec Pragma Implemented\n @findex Implemented\n@@ -4932,7 +4964,6 @@ The Rational profile is intended to facilitate porting legacy code that\n compiles with the Rational APEX compiler, even when the code includes non-\n conforming Ada constructs.  The profile enables the following three pragmas:\n \n-\n @itemize @bullet\n pragma Implicit_Packing;\n pragma Overriding_Renamings;\n@@ -8298,8 +8329,8 @@ Manual.\n @unnumberedsubsec No_Implementation_Identifiers\n @findex No_Implementation_Identifiers\n [RM 13.12.1] This restriction checks at compile time that no\n-implementation-defined identifiers occur within language-defined\n-packages.\n+implementation-defined identifiers (marked with pragma Implementation_Defined)\n+occur within language-defined packages.\n \n @node No_Implementation_Pragmas\n @unnumberedsubsec No_Implementation_Pragmas"}, {"sha": "5e370bba36ef1954e509026da20e131e7e4bac8f", "filename": "gcc/ada/s-tasloc.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f403355afb84e58c73c83329b18bac3bc24f336c/gcc%2Fada%2Fs-tasloc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f403355afb84e58c73c83329b18bac3bc24f336c/gcc%2Fada%2Fs-tasloc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasloc.ads?ref=f403355afb84e58c73c83329b18bac3bc24f336c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2010, AdaCore                     --\n+--                     Copyright (C) 1998-2013, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,7 +44,7 @@\n --  a renaming of this package in GNAT.Task_Lock (file g-tasloc.ads).\n \n package System.Task_Lock is\n-   pragma Elaborate_Body;\n+   pragma Preelaborate;\n \n    procedure Lock;\n    pragma Inline (Lock);"}, {"sha": "d842f1be490a27993754a64f04c069a2cbb5f5ff", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f403355afb84e58c73c83329b18bac3bc24f336c/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f403355afb84e58c73c83329b18bac3bc24f336c/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=f403355afb84e58c73c83329b18bac3bc24f336c", "patch": "@@ -12379,16 +12379,16 @@ package body Sem_Prag is\n          --  OPTIMIZATION_HINT ::= No_Unroll | Unroll | No_Vector | Vector\n \n          when Pragma_Loop_Optimize => Loop_Optimize : declare\n-            Hint      : Node_Id;\n+            Hint : Node_Id;\n \n          begin\n             GNAT_Pragma;\n             Check_At_Least_N_Arguments (1);\n             Check_No_Identifiers;\n             Hint := First (Pragma_Argument_Associations (N));\n             while Present (Hint) loop\n-               Check_Arg_Is_One_Of (Hint, Name_No_Unroll, Name_Unroll,\n-                                    Name_No_Vector, Name_Vector);\n+               Check_Arg_Is_One_Of (Hint,\n+                 Name_No_Unroll, Name_Unroll, Name_No_Vector, Name_Vector);\n                Next (Hint);\n             end loop;\n             Check_Loop_Pragma_Placement;"}]}