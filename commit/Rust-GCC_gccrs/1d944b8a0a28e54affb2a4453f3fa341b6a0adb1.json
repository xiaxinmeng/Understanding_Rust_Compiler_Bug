{"sha": "1d944b8a0a28e54affb2a4453f3fa341b6a0adb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ5NDRiOGEwYTI4ZTU0YWZmYjJhNDQ1M2YzZmEzNDFiNmEwYWRiMQ==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-08-14T13:20:25Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-08-14T13:20:25Z"}, "message": "i386.c (ix86_preferred_simd_mode): Allow V64QImode and V32HImode.\n\ngcc/\n\t* config/i386/i386.c (ix86_preferred_simd_mode): Allow V64QImode and\n\tV32HImode.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r213963", "tree": {"sha": "afe8a3831812b190844b069b8f56cd1db817ab3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afe8a3831812b190844b069b8f56cd1db817ab3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d944b8a0a28e54affb2a4453f3fa341b6a0adb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d944b8a0a28e54affb2a4453f3fa341b6a0adb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d944b8a0a28e54affb2a4453f3fa341b6a0adb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d944b8a0a28e54affb2a4453f3fa341b6a0adb1/comments", "author": null, "committer": null, "parents": [{"sha": "9e4a4dd6518a86c94278a978412e162c4b770c7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e4a4dd6518a86c94278a978412e162c4b770c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e4a4dd6518a86c94278a978412e162c4b770c7b"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "a3a1d0846d459b17788c01db1cc9529db618333f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d944b8a0a28e54affb2a4453f3fa341b6a0adb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d944b8a0a28e54affb2a4453f3fa341b6a0adb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d944b8a0a28e54affb2a4453f3fa341b6a0adb1", "patch": "@@ -1,3 +1,15 @@\n+2014-08-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/i386.c (ix86_preferred_simd_mode): Allow V64QImode and\n+\tV32HImode.\n+\n 2014-08-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "4d5c20717160a56382118fc009cbe9d0f3b18796", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d944b8a0a28e54affb2a4453f3fa341b6a0adb1/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d944b8a0a28e54affb2a4453f3fa341b6a0adb1/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1d944b8a0a28e54affb2a4453f3fa341b6a0adb1", "patch": "@@ -46474,9 +46474,11 @@ ix86_preferred_simd_mode (enum machine_mode mode)\n   switch (mode)\n     {\n     case QImode:\n-      return (TARGET_AVX && !TARGET_PREFER_AVX128) ? V32QImode : V16QImode;\n+      return TARGET_AVX512BW ? V64QImode :\n+       (TARGET_AVX && !TARGET_PREFER_AVX128) ? V32QImode : V16QImode;\n     case HImode:\n-      return (TARGET_AVX && !TARGET_PREFER_AVX128) ? V16HImode : V8HImode;\n+      return TARGET_AVX512BW ? V32HImode :\n+       (TARGET_AVX && !TARGET_PREFER_AVX128) ? V16HImode : V8HImode;\n     case SImode:\n       return TARGET_AVX512F ? V16SImode :\n \t(TARGET_AVX && !TARGET_PREFER_AVX128) ? V8SImode : V4SImode;"}]}