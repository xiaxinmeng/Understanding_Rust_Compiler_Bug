{"sha": "8afbdb8a64c8f269bdda336ee8150d86b42beb04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFmYmRiOGE2NGM4ZjI2OWJkZGEzMzZlZTgxNTBkODZiNDJiZWIwNA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2020-04-17T18:41:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-17T08:14:20Z"}, "message": "[Ada] Ada2020: AI12-0279 more dispatching points with aspect Yield\n\n2020-06-17  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* aspects.ads (type Aspect_Id): Add Aspect_Yield as a Boolean\n\taspect, and update the Is_Representation_Aspect, Aspect_Names,\n\tand Aspect_Delay arrays.\n\t* einfo.ads, einfo.adb (Has_Yield_Aspect, Yield_Aspect): New\n\tsubprograms.\n\t* exp_ch6.adb (Add_Return, Expand_Non_Function_Return,\n\tExpand_Simple_Function_Return): Add calls to Yield.\n\t* exp_ch9.adb (Build_Accept_Body, Expand_N_Accept_Statement):\n\tAdd calls to Yield.\n\t* rtsfind.ads (RE_Yield): Adding support to generate calls to\n\tthe runtime service Ada.Dispatching.Yield\n\t* sem_ch13.adb (Analyze_Aspect_Yield): New subprogram.\n\t* sem_ch3.adb (Derive_Subprogram): Inherit attribute\n\tHas_Yield_Aspect.\n\t* sem_ch8.adb (Analyze_Subprogram_Renaming): Check consistency\n\tof Has_Yield in the actual subprogram of a generic\n\tinstantiation.\n\t* sem_disp.adb (Check_Dispatching_Operation): Check that if the\n\tYield aspect is specified for a dispatching subprogram that\n\tinherits the aspect, the specified value shall be confirming.\n\t* sem_prag.adb (Analyze_Pragma [Pragma_Implemented]): Check that\n\tthe implementation kind By_Protected_Procedure cannot be applied\n\tto a procedure that has aspect Yield.", "tree": {"sha": "39cbd1e15a04c203b7122b5c6d7717e3f09b2b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39cbd1e15a04c203b7122b5c6d7717e3f09b2b55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8afbdb8a64c8f269bdda336ee8150d86b42beb04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8afbdb8a64c8f269bdda336ee8150d86b42beb04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8afbdb8a64c8f269bdda336ee8150d86b42beb04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8afbdb8a64c8f269bdda336ee8150d86b42beb04/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67b2ed8e563ac254e6a7952cb7bff1d0f2d0a89a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b2ed8e563ac254e6a7952cb7bff1d0f2d0a89a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67b2ed8e563ac254e6a7952cb7bff1d0f2d0a89a"}], "stats": {"total": 345, "additions": 320, "deletions": 25}, "files": [{"sha": "2c1245207f71bcd88f77026dbc92d46182f03e42", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=8afbdb8a64c8f269bdda336ee8150d86b42beb04", "patch": "@@ -218,7 +218,8 @@ package Aspects is\n       Aspect_Unreferenced_Objects,          -- GNAT\n       Aspect_Volatile,\n       Aspect_Volatile_Components,\n-      Aspect_Volatile_Full_Access);         -- GNAT\n+      Aspect_Volatile_Full_Access,          -- GNAT\n+      Aspect_Yield);\n \n    subtype Aspect_Id_Exclude_No_Aspect is\n      Aspect_Id range Aspect_Id'Succ (No_Aspect) .. Aspect_Id'Last;\n@@ -566,7 +567,8 @@ package Aspects is\n       Aspect_Unreferenced_Objects         => False,\n       Aspect_Volatile                     => True,\n       Aspect_Volatile_Components          => True,\n-      Aspect_Volatile_Full_Access         => True);\n+      Aspect_Volatile_Full_Access         => True,\n+      Aspect_Yield                        => False);\n \n    -----------------------------------------\n    -- Table Linking Names and Aspect_Id's --\n@@ -709,7 +711,8 @@ package Aspects is\n       Aspect_Volatile_Full_Access         => Name_Volatile_Full_Access,\n       Aspect_Volatile_Function            => Name_Volatile_Function,\n       Aspect_Warnings                     => Name_Warnings,\n-      Aspect_Write                        => Name_Write);\n+      Aspect_Write                        => Name_Write,\n+      Aspect_Yield                        => Name_Yield);\n \n    function Get_Aspect_Id (Name : Name_Id) return Aspect_Id;\n    pragma Inline (Get_Aspect_Id);\n@@ -943,6 +946,7 @@ package Aspects is\n       Aspect_Unimplemented                => Never_Delay,\n       Aspect_Volatile_Function            => Never_Delay,\n       Aspect_Warnings                     => Never_Delay,\n+      Aspect_Yield                        => Never_Delay,\n \n       Aspect_Alignment                    => Rep_Aspect,\n       Aspect_Atomic                       => Rep_Aspect,"}, {"sha": "8280d3bef961ef81492dd11f51d53da9a282cfdd", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=8afbdb8a64c8f269bdda336ee8150d86b42beb04", "patch": "@@ -522,8 +522,8 @@ package body Einfo is\n    --    Known_To_Have_Preelab_Init      Flag207\n    --    Must_Have_Preelab_Init          Flag208\n    --    Is_Return_Object                Flag209\n-   --    Elaborate_Body_Desirable        Flag210\n \n+   --    Elaborate_Body_Desirable        Flag210\n    --    Has_Static_Discriminants        Flag211\n    --    Has_Pragma_Unreferenced_Objects Flag212\n    --    Requires_Overriding             Flag213\n@@ -533,8 +533,8 @@ package body Einfo is\n    --    Suppress_Value_Tracking_On_Call Flag217\n    --    Is_Primitive                    Flag218\n    --    Has_Initial_Value               Flag219\n-   --    Has_Dispatch_Table              Flag220\n \n+   --    Has_Dispatch_Table              Flag220\n    --    Has_Pragma_Preelab_Init         Flag221\n    --    Used_As_Generic_Actual          Flag222\n    --    Is_Descendant_Of_Address        Flag223\n@@ -544,8 +544,8 @@ package body Einfo is\n    --    Referenced_As_Out_Parameter     Flag227\n    --    Has_Thunks                      Flag228\n    --    Can_Use_Internal_Rep            Flag229\n-   --    Has_Pragma_Inline_Always        Flag230\n \n+   --    Has_Pragma_Inline_Always        Flag230\n    --    Renamed_In_Spec                 Flag231\n    --    Has_Own_Invariants              Flag232\n    --    Has_Pragma_Unmodified           Flag233\n@@ -555,8 +555,8 @@ package body Einfo is\n    --    Warnings_Off_Used_Unmodified    Flag237\n    --    Warnings_Off_Used_Unreferenced  Flag238\n    --    No_Reordering                   Flag239\n-   --    Has_Expanded_Contract           Flag240\n \n+   --    Has_Expanded_Contract           Flag240\n    --    Optimize_Alignment_Space        Flag241\n    --    Optimize_Alignment_Time         Flag242\n    --    Overlays_Constant               Flag243\n@@ -566,8 +566,8 @@ package body Einfo is\n    --    OK_To_Rename                    Flag247\n    --    Has_Inheritable_Invariants      Flag248\n    --    Is_Safe_To_Reevaluate           Flag249\n-   --    Has_Predicates                  Flag250\n \n+   --    Has_Predicates                  Flag250\n    --    Has_Implicit_Dereference        Flag251\n    --    Is_Finalized_Transient          Flag252\n    --    Disable_Controlled              Flag253\n@@ -577,8 +577,8 @@ package body Einfo is\n    --    Is_Invariant_Procedure          Flag257\n    --    Has_Dynamic_Predicate_Aspect    Flag258\n    --    Has_Static_Predicate_Aspect     Flag259\n-   --    Has_Loop_Entry_Attributes       Flag260\n \n+   --    Has_Loop_Entry_Attributes       Flag260\n    --    Has_Delayed_Rep_Aspects         Flag261\n    --    May_Inherit_Delayed_Rep_Aspects Flag262\n    --    Has_Visible_Refinement          Flag263\n@@ -588,8 +588,8 @@ package body Einfo is\n    --    Has_Shift_Operator              Flag267\n    --    Is_Independent                  Flag268\n    --    Has_Static_Predicate            Flag269\n-   --    Stores_Attribute_Old_Prefix     Flag270\n \n+   --    Stores_Attribute_Old_Prefix     Flag270\n    --    Has_Protected                   Flag271\n    --    SSO_Set_Low_By_Default          Flag272\n    --    SSO_Set_High_By_Default         Flag273\n@@ -599,8 +599,8 @@ package body Einfo is\n    --    Is_Checked_Ghost_Entity         Flag277\n    --    Is_Ignored_Ghost_Entity         Flag278\n    --    Contains_Ignored_Ghost_Code     Flag279\n-   --    Partial_View_Has_Unknown_Discr  Flag280\n \n+   --    Partial_View_Has_Unknown_Discr  Flag280\n    --    Is_Static_Type                  Flag281\n    --    Has_Nested_Subprogram           Flag282\n    --    Is_Uplevel_Referenced_Entity    Flag283\n@@ -610,8 +610,8 @@ package body Einfo is\n    --    Rewritten_For_C                 Flag287\n    --    Predicates_Ignored              Flag288\n    --    Has_Timing_Event                Flag289\n-   --    Is_Class_Wide_Clone             Flag290\n \n+   --    Is_Class_Wide_Clone             Flag290\n    --    Has_Inherited_Invariants        Flag291\n    --    Is_Partial_Invariant_Procedure  Flag292\n    --    Is_Actual_Subtype               Flag293\n@@ -621,17 +621,17 @@ package body Einfo is\n    --    Is_Entry_Wrapper                Flag297\n    --    Is_Underlying_Full_View         Flag298\n    --    Body_Needed_For_Inlining        Flag299\n-   --    Has_Private_Extension           Flag300\n \n+   --    Has_Private_Extension           Flag300\n    --    Ignore_SPARK_Mode_Pragmas       Flag301\n    --    Is_Initial_Condition_Procedure  Flag302\n    --    Suppress_Elaboration_Warnings   Flag303\n    --    Is_Elaboration_Warnings_OK_Id   Flag304\n    --    Is_Activation_Record            Flag305\n    --    Needs_Activation_Record         Flag306\n    --    Is_Loop_Parameter               Flag307\n+   --    Has_Yield_Aspect                Flag308\n \n-   --    (unused)                        Flag308\n    --    (unused)                        Flag309\n \n    --  Note: Flag310-317 are defined in atree.ads/adb, but not yet in atree.h\n@@ -1989,6 +1989,11 @@ package body Einfo is\n       return Flag182 (Id);\n    end Has_Xref_Entry;\n \n+   function Has_Yield_Aspect (Id : E) return B is\n+   begin\n+      return Flag308 (Id);\n+   end Has_Yield_Aspect;\n+\n    function Hiding_Loop_Variable (Id : E) return E is\n    begin\n       pragma Assert (Ekind (Id) = E_Variable);\n@@ -5192,6 +5197,13 @@ package body Einfo is\n       Set_Flag182 (Id, V);\n    end Set_Has_Xref_Entry;\n \n+   procedure Set_Has_Yield_Aspect (Id : E; V : B := True) is\n+   begin\n+      pragma Assert\n+        (Is_Entry (Id) or else Is_Subprogram_Or_Generic_Subprogram (Id));\n+      Set_Flag308 (Id, V);\n+   end Set_Has_Yield_Aspect;\n+\n    procedure Set_Hiding_Loop_Variable (Id : E; V : E) is\n    begin\n       pragma Assert (Ekind (Id) = E_Variable);\n@@ -9812,6 +9824,7 @@ package body Einfo is\n       W (\"Has_Visible_Refinement\",          Flag263 (Id));\n       W (\"Has_Volatile_Components\",         Flag87  (Id));\n       W (\"Has_Xref_Entry\",                  Flag182 (Id));\n+      W (\"Has_Yield_Aspect\",                Flag308 (Id));\n       W (\"Ignore_SPARK_Mode_Pragmas\",       Flag301 (Id));\n       W (\"In_Package_Body\",                 Flag48  (Id));\n       W (\"In_Private_Part\",                 Flag45  (Id));"}, {"sha": "8cf9d2e8f78cbc007a953ffe8b1df5619ee6134c", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=8afbdb8a64c8f269bdda336ee8150d86b42beb04", "patch": "@@ -2189,6 +2189,10 @@ package Einfo is\n --       references an entity with a type reference. See package Lib.Xref for\n --       further details).\n \n+--    Has_Yield_Aspect (Flag308)\n+--       Defined in subprograms, generic subprograms, entries, entry families.\n+--       Set if the entity has aspect Yield.\n+\n --    Hiding_Loop_Variable (Node8)\n --       Defined in variables. Set only if a variable of a discrete type is\n --       hidden by a loop variable in the same local scope, in which case\n@@ -6092,6 +6096,7 @@ package Einfo is\n    --    SPARK_Pragma                        (Node40)   (protected kind)\n    --    Default_Expressions_Processed       (Flag108)\n    --    Entry_Accepted                      (Flag152)\n+   --    Has_Yield_Aspect                    (Flag308)\n    --    Has_Expanded_Contract               (Flag240)\n    --    Ignore_SPARK_Mode_Pragmas           (Flag301)\n    --    Is_Elaboration_Checks_OK_Id         (Flag148)\n@@ -6229,6 +6234,7 @@ package Einfo is\n    --    Has_Nested_Subprogram               (Flag282)\n    --    Has_Out_Or_In_Out_Parameter         (Flag110)\n    --    Has_Recursive_Call                  (Flag143)\n+   --    Has_Yield_Aspect                    (Flag308)\n    --    Ignore_SPARK_Mode_Pragmas           (Flag301)\n    --    Is_Abstract_Subprogram              (Flag19)   (non-generic case only)\n    --    Is_Called                           (Flag102)  (non-generic case only)\n@@ -6554,6 +6560,7 @@ package Einfo is\n    --    Has_Master_Entity                   (Flag21)\n    --    Has_Nested_Block_With_Handler       (Flag101)\n    --    Has_Nested_Subprogram               (Flag282)\n+   --    Has_Yield_Aspect                    (Flag308)\n    --    Ignore_SPARK_Mode_Pragmas           (Flag301)\n    --    Is_Abstract_Subprogram              (Flag19)   (non-generic case only)\n    --    Is_Asynchronous                     (Flag81)\n@@ -7297,6 +7304,7 @@ package Einfo is\n    function Has_Visible_Refinement              (Id : E) return B;\n    function Has_Volatile_Components             (Id : E) return B;\n    function Has_Xref_Entry                      (Id : E) return B;\n+   function Has_Yield_Aspect                    (Id : E) return B;\n    function Hiding_Loop_Variable                (Id : E) return E;\n    function Hidden_In_Formal_Instance           (Id : E) return L;\n    function Homonym                             (Id : E) return E;\n@@ -8008,6 +8016,7 @@ package Einfo is\n    procedure Set_Has_Visible_Refinement          (Id : E; V : B := True);\n    procedure Set_Has_Volatile_Components         (Id : E; V : B := True);\n    procedure Set_Has_Xref_Entry                  (Id : E; V : B := True);\n+   procedure Set_Has_Yield_Aspect                (Id : E; V : B := True);\n    procedure Set_Hiding_Loop_Variable            (Id : E; V : E);\n    procedure Set_Hidden_In_Formal_Instance       (Id : E; V : L);\n    procedure Set_Homonym                         (Id : E; V : E);\n@@ -8839,6 +8848,7 @@ package Einfo is\n    pragma Inline (Has_Visible_Refinement);\n    pragma Inline (Has_Volatile_Components);\n    pragma Inline (Has_Xref_Entry);\n+   pragma Inline (Has_Yield_Aspect);\n    pragma Inline (Hiding_Loop_Variable);\n    pragma Inline (Hidden_In_Formal_Instance);\n    pragma Inline (Homonym);\n@@ -9452,6 +9462,7 @@ package Einfo is\n    pragma Inline (Set_Has_Visible_Refinement);\n    pragma Inline (Set_Has_Volatile_Components);\n    pragma Inline (Set_Has_Xref_Entry);\n+   pragma Inline (Set_Has_Yield_Aspect);\n    pragma Inline (Set_Hiding_Loop_Variable);\n    pragma Inline (Set_Hidden_In_Formal_Instance);\n    pragma Inline (Set_Homonym);"}, {"sha": "1e0047bfb2966b584cc01815e8d52b0b43f6550e", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=8afbdb8a64c8f269bdda336ee8150d86b42beb04", "patch": "@@ -6463,6 +6463,19 @@ package body Exp_Ch6 is\n                    Name =>\n                      New_Occurrence_Of (Postconditions_Proc (Spec_Id), Loc)));\n             end if;\n+\n+            --  Ada 2020 (AI12-0279): append the call to 'Yield unless this is\n+            --  a generic subprogram (since in such case it will be added to\n+            --  the instantiations).\n+\n+            if Has_Yield_Aspect (Spec_Id)\n+              and then Ekind (Spec_Id) /= E_Generic_Procedure\n+              and then RTE_Available (RE_Yield)\n+            then\n+               Insert_Action (Stmt,\n+                 Make_Procedure_Call_Statement (Loc,\n+                   New_Occurrence_Of (RTE (RE_Yield), Loc)));\n+            end if;\n          end if;\n       end Add_Return;\n \n@@ -6896,6 +6909,16 @@ package body Exp_Ch6 is\n              Name => New_Occurrence_Of (Postconditions_Proc (Scope_Id), Loc)));\n       end if;\n \n+      --  Ada 2020 (AI12-0279)\n+\n+      if Has_Yield_Aspect (Scope_Id)\n+        and then RTE_Available (RE_Yield)\n+      then\n+         Insert_Action (N,\n+           Make_Procedure_Call_Statement (Loc,\n+             New_Occurrence_Of (RTE (RE_Yield), Loc)));\n+      end if;\n+\n       --  If it is a return from a procedure do no extra steps\n \n       if Kind = E_Procedure or else Kind = E_Generic_Procedure then\n@@ -8045,6 +8068,16 @@ package body Exp_Ch6 is\n             Set_Original_Node (Exp, New_Copy_Of_Exp);\n          end if;\n       end if;\n+\n+      --  Ada 2020 (AI12-0279)\n+\n+      if Has_Yield_Aspect (Scope_Id)\n+        and then RTE_Available (RE_Yield)\n+      then\n+         Insert_Action (N,\n+           Make_Procedure_Call_Statement (Loc,\n+             New_Occurrence_Of (RTE (RE_Yield), Loc)));\n+      end if;\n    end Expand_Simple_Function_Return;\n \n    -----------------------"}, {"sha": "651ca1f70af1262b418700c45a8bba8007d6f814", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 69, "deletions": 10, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=8afbdb8a64c8f269bdda336ee8150d86b42beb04", "patch": "@@ -826,6 +826,16 @@ package body Exp_Ch9 is\n       Insert_Before (Last (Statements (Stats)), Call);\n       Analyze (Call);\n \n+      --  Ada 2020 (AI12-0279)\n+\n+      if Has_Yield_Aspect (Entity (Entry_Direct_Name (Astat)))\n+        and then RTE_Available (RE_Yield)\n+      then\n+         Insert_Action_After (Call,\n+           Make_Procedure_Call_Statement (Loc,\n+             New_Occurrence_Of (RTE (RE_Yield), Loc)));\n+      end if;\n+\n       --  If exception handlers are present, then append Complete_Rendezvous\n       --  calls to the handlers, and construct the required outer block. As\n       --  above, the Sloc is copied from the last statement in the sequence.\n@@ -838,6 +848,17 @@ package body Exp_Ch9 is\n                 (Sloc (Last (Statements (Hand))), RE_Complete_Rendezvous);\n             Append (Call, Statements (Hand));\n             Analyze (Call);\n+\n+            --  Ada 2020 (AI12-0279)\n+\n+            if Has_Yield_Aspect (Entity (Entry_Direct_Name (Astat)))\n+              and then RTE_Available (RE_Yield)\n+            then\n+               Insert_Action_After (Call,\n+                 Make_Procedure_Call_Statement (Loc,\n+                   New_Occurrence_Of (RTE (RE_Yield), Loc)));\n+            end if;\n+\n             Next (Hand);\n          end loop;\n \n@@ -861,6 +882,16 @@ package body Exp_Ch9 is\n       --  We handle Abort_Signal to make sure that we properly catch the abort\n       --  case and wake up the caller.\n \n+      Call :=\n+        Make_Procedure_Call_Statement (Sloc (Stats),\n+          Name                   => New_Occurrence_Of (\n+            RTE (RE_Exceptional_Complete_Rendezvous), Sloc (Stats)),\n+          Parameter_Associations => New_List (\n+            Make_Function_Call (Sloc (Stats),\n+              Name =>\n+                New_Occurrence_Of\n+                  (RTE (RE_Get_GNAT_Exception), Sloc (Stats)))));\n+\n       Ohandle := Make_Others_Choice (Loc);\n       Set_All_Others (Ohandle);\n \n@@ -869,15 +900,17 @@ package body Exp_Ch9 is\n           Make_Implicit_Exception_Handler (Loc,\n             Exception_Choices => New_List (Ohandle),\n \n-            Statements => New_List (\n-              Make_Procedure_Call_Statement (Sloc (Stats),\n-                Name                   => New_Occurrence_Of (\n-                  RTE (RE_Exceptional_Complete_Rendezvous), Sloc (Stats)),\n-                Parameter_Associations => New_List (\n-                  Make_Function_Call (Sloc (Stats),\n-                    Name =>\n-                      New_Occurrence_Of\n-                        (RTE (RE_Get_GNAT_Exception), Sloc (Stats)))))))));\n+            Statements => New_List (Call))));\n+\n+      --  Ada 2020 (AI12-0279)\n+\n+      if Has_Yield_Aspect (Entity (Entry_Direct_Name (Astat)))\n+        and then RTE_Available (RE_Yield)\n+      then\n+         Insert_Action_After (Call,\n+           Make_Procedure_Call_Statement (Loc,\n+             New_Occurrence_Of (RTE (RE_Yield), Loc)));\n+      end if;\n \n       Set_Parent (New_S, Astat); -- temp parent for Analyze call\n       Analyze_Exception_Handlers (Exception_Handlers (New_S));\n@@ -6548,6 +6581,16 @@ package body Exp_Ch9 is\n \n          Analyze (N);\n \n+         --  Ada 2020 (AI12-0279)\n+\n+         if Has_Yield_Aspect (Eent)\n+           and then RTE_Available (RE_Yield)\n+         then\n+            Insert_Action_After (N,\n+              Make_Procedure_Call_Statement (Loc,\n+                New_Occurrence_Of (RTE (RE_Yield), Loc)));\n+         end if;\n+\n          --  Discard Entry_Address that was created for it, so it will not be\n          --  emitted if this accept statement is in the statement part of a\n          --  delay alternative.\n@@ -10842,7 +10885,23 @@ package body Exp_Ch9 is\n          --  Accept with no body (followed by trailing statements)\n \n          else\n-            Alt_Stats := Empty_List;\n+            declare\n+               Entry_Id : constant Entity_Id :=\n+                           Entity (Entry_Direct_Name (Accept_Statement (Alt)));\n+            begin\n+               --  Ada 2020 (AI12-0279)\n+\n+               if Has_Yield_Aspect (Entry_Id)\n+                 and then RTE_Available (RE_Yield)\n+               then\n+                  Alt_Stats :=\n+                    New_List (\n+                      Make_Procedure_Call_Statement (Sloc (Proc),\n+                        New_Occurrence_Of (RTE (RE_Yield), Sloc (Proc))));\n+               else\n+                  Alt_Stats := Empty_List;\n+               end if;\n+            end;\n          end if;\n \n          Ensure_Statement_Present (Sloc (Astmt), Alt);"}, {"sha": "d8420d7cbcefabcffac0aa021fb686be5ee69a34", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=8afbdb8a64c8f269bdda336ee8150d86b42beb04", "patch": "@@ -428,6 +428,8 @@ package Rtsfind is\n      RO_CA_Delay_Until,                  -- Ada.Calendar.Delays\n      RO_CA_To_Duration,                  -- Ada.Calendar.Delays\n \n+     RE_Yield,                           -- Ada_Dispatching\n+\n      RE_Set_Deadline,                    -- Ada.Dispatching.EDF\n \n      RE_Code_Loc,                        -- Ada.Exceptions\n@@ -1712,6 +1714,8 @@ package Rtsfind is\n      RO_CA_Delay_Until                   => Ada_Calendar_Delays,\n      RO_CA_To_Duration                   => Ada_Calendar_Delays,\n \n+     RE_Yield                            => Ada_Dispatching,\n+\n      RE_Set_Deadline                     => Ada_Dispatching_EDF,\n \n      RE_Code_Loc                         => Ada_Exceptions,"}, {"sha": "05a511f5be354ab0dfe97d173294b748cdc3441e", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=8afbdb8a64c8f269bdda336ee8150d86b42beb04", "patch": "@@ -1792,6 +1792,9 @@ package body Sem_Ch13 is\n             procedure Analyze_Aspect_Relaxed_Initialization;\n             --  Perform analysis of aspect Relaxed_Initialization\n \n+            procedure Analyze_Aspect_Yield;\n+            --  Perform analysis of aspect Yield\n+\n             procedure Analyze_Aspect_Static;\n             --  Ada 202x (AI12-0075): Perform analysis of aspect Static\n \n@@ -2466,6 +2469,97 @@ package body Sem_Ch13 is\n                end if;\n             end Analyze_Aspect_Static;\n \n+            --------------------------\n+            -- Analyze_Aspect_Yield --\n+            --------------------------\n+\n+            procedure Analyze_Aspect_Yield is\n+               Expr_Value : Boolean := False;\n+\n+            begin\n+               --  Check valid declarations for 'Yield\n+\n+               if (Nkind_In (N, N_Abstract_Subprogram_Declaration,\n+                                N_Entry_Declaration,\n+                                N_Generic_Subprogram_Declaration,\n+                                N_Subprogram_Declaration)\n+                     or else Nkind (N) in N_Formal_Subprogram_Declaration)\n+                 and then not Within_Protected_Type (E)\n+               then\n+                  null;\n+\n+               elsif Within_Protected_Type (E) then\n+                  Error_Msg_N\n+                    (\"aspect% not applicable to protected operations\", Id);\n+                  return;\n+\n+               else\n+                  Error_Msg_N\n+                    (\"aspect% only applicable to subprogram and entry \"\n+                     & \"declarations\", Id);\n+                  return;\n+               end if;\n+\n+               --  Evaluate its static expression (if available); otherwise it\n+               --  defaults to True.\n+\n+               if No (Expr) then\n+                  Expr_Value := True;\n+\n+               --  Otherwise it must have a static boolean expression\n+\n+               else\n+                  if Inside_A_Generic then\n+                     Preanalyze_And_Resolve (Expr, Any_Boolean);\n+                  else\n+                     Analyze_And_Resolve (Expr, Any_Boolean);\n+                  end if;\n+\n+                  if Is_OK_Static_Expression (Expr) then\n+                     if Is_True (Static_Boolean (Expr)) then\n+                        Expr_Value := True;\n+                     end if;\n+                  else\n+                     Error_Msg_N\n+                       (\"expression of aspect % must be static\", Aspect);\n+                  end if;\n+               end if;\n+\n+               if Expr_Value then\n+\n+                  --  Adding minimum decoration to generic subprograms to set\n+                  --  the Yield attribute (since at this stage it may not be\n+                  --  set; see Analyze_Generic_Subprogram_Declaration).\n+\n+                  if Nkind (N) in N_Generic_Subprogram_Declaration\n+                    and then Ekind (E) = E_Void\n+                  then\n+                     if Nkind (Specification (N)) = N_Function_Specification\n+                     then\n+                        Set_Ekind (E, E_Function);\n+                     else\n+                        Set_Ekind (E, E_Procedure);\n+                     end if;\n+                  end if;\n+\n+                  Set_Has_Yield_Aspect (E);\n+               end if;\n+\n+               --  If the Yield aspect is specified for a dispatching\n+               --  subprogram that inherits the aspect, the specified\n+               --  value shall be confirming.\n+\n+               if Present (Expr)\n+                 and then Is_Dispatching_Operation (E)\n+                 and then Present (Overridden_Operation (E))\n+                 and then Has_Yield_Aspect (Overridden_Operation (E))\n+                            /= Is_True (Static_Boolean (Expr))\n+               then\n+                  Error_Msg_N (\"specification of inherited aspect% can only \" &\n+                               \"confirm parent value\", Id);\n+               end if;\n+            end Analyze_Aspect_Yield;\n+\n             -----------------------\n             -- Make_Aitem_Pragma --\n             -----------------------\n@@ -4220,6 +4314,12 @@ package body Sem_Ch13 is\n                   elsif A_Id = Aspect_Static then\n                      Analyze_Aspect_Static;\n                      goto Continue;\n+\n+                  --  Ada 2020 (AI12-0279)\n+\n+                  elsif A_Id = Aspect_Yield then\n+                     Analyze_Aspect_Yield;\n+                     goto Continue;\n                   end if;\n \n                   --  Library unit aspects require special handling in the case"}, {"sha": "6e0cfe2b8a8ab0284463717e158b3186dd39b205", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=8afbdb8a64c8f269bdda336ee8150d86b42beb04", "patch": "@@ -15803,6 +15803,17 @@ package body Sem_Ch3 is\n       if Ekind (New_Subp) = E_Function then\n          Set_Mechanism (New_Subp, Mechanism (Parent_Subp));\n       end if;\n+\n+      --  Ada 2020 (AI12-0279): If a Yield aspect is specified True for a\n+      --  primitive subprogram S of a type T, then the aspect is inherited\n+      --  by the corresponding primitive subprogram of each descendant of T.\n+\n+      if Is_Tagged_Type (Derived_Type)\n+        and then Is_Dispatching_Operation (New_Subp)\n+        and then Has_Yield_Aspect (Alias (New_Subp))\n+      then\n+         Set_Has_Yield_Aspect (New_Subp, Has_Yield_Aspect (Alias (New_Subp)));\n+      end if;\n    end Derive_Subprogram;\n \n    ------------------------"}, {"sha": "acb5b2167331b5dd0f182928b12a2453762c132b", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=8afbdb8a64c8f269bdda336ee8150d86b42beb04", "patch": "@@ -3772,6 +3772,17 @@ package body Sem_Ch8 is\n          Analyze_Aspect_Specifications (N, New_S);\n       end if;\n \n+      --  AI12-0279\n+\n+      if Is_Actual\n+        and then Has_Yield_Aspect (Formal_Spec)\n+        and then not Has_Yield_Aspect (Old_S)\n+      then\n+         Error_Msg_Name_1 := Name_Yield;\n+         Error_Msg_N\n+           (\"actual subprogram& must have aspect% to match formal\", Name (N));\n+      end if;\n+\n       Ada_Version := Save_AV;\n       Ada_Version_Pragma := Save_AVP;\n       Ada_Version_Explicit := Save_AV_Exp;"}, {"sha": "6e74098914dcfff097b6f5c375dd659174ccd6f8", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=8afbdb8a64c8f269bdda336ee8150d86b42beb04", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Aspects;  use Aspects;\n with Atree;    use Atree;\n with Debug;    use Debug;\n with Elists;   use Elists;\n@@ -1636,6 +1637,42 @@ package body Sem_Disp is\n          end;\n       end if;\n \n+      --  AI12-0279: If the Yield aspect is specified for a dispatching\n+      --  subprogram that inherits the aspect, the specified value shall\n+      --  be confirming.\n+\n+      if Is_Dispatching_Operation (Subp)\n+        and then Is_Primitive_Wrapper (Subp)\n+        and then Present (Wrapped_Entity (Subp))\n+        and then Comes_From_Source (Wrapped_Entity (Subp))\n+        and then Present (Overridden_Operation (Subp))\n+        and then Has_Yield_Aspect (Overridden_Operation (Subp))\n+                   /= Has_Yield_Aspect (Wrapped_Entity (Subp))\n+      then\n+         declare\n+            W_Ent  : constant Entity_Id := Wrapped_Entity (Subp);\n+            W_Decl : constant Node_Id := Parent (W_Ent);\n+            Asp    : Node_Id;\n+\n+         begin\n+            if Present (Aspect_Specifications (W_Decl)) then\n+               Asp := First (Aspect_Specifications (W_Decl));\n+               while Present (Asp) loop\n+                  if Chars (Identifier (Asp)) = Name_Yield then\n+                     Error_Msg_Name_1 := Name_Yield;\n+                     Error_Msg_N\n+                       (\"specification of inherited aspect% can only confirm \"\n+                        & \"parent value\", Asp);\n+                  end if;\n+\n+                  Next (Asp);\n+               end loop;\n+            end if;\n+\n+            Set_Has_Yield_Aspect (Wrapped_Entity (Subp));\n+         end;\n+      end if;\n+\n       --  For similarity with record extensions, in Ada 9X the language should\n       --  have disallowed adding visible operations to a tagged type after\n       --  deriving a private extension from it. Report a warning if this"}, {"sha": "32b4572e503e08c13306755523a033d091718c32", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afbdb8a64c8f269bdda336ee8150d86b42beb04/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=8afbdb8a64c8f269bdda336ee8150d86b42beb04", "patch": "@@ -17195,7 +17195,7 @@ package body Sem_Prag is\n                --  By_Protected_Procedure to the primitive procedure of a task\n                --  interface.\n \n-               if Chars (Arg2) = Name_By_Protected_Procedure\n+               if Chars (Get_Pragma_Arg (Arg2)) = Name_By_Protected_Procedure\n                  and then Is_Interface (Typ)\n                  and then Is_Task_Interface (Typ)\n                then\n@@ -17220,6 +17220,18 @@ package body Sem_Prag is\n                return;\n             end if;\n \n+            --  Ada 2012 (AI12-0279): Cannot apply the implementation_kind\n+            --  By_Protected_Procedure to a procedure that has aspect Yield\n+\n+            if Chars (Get_Pragma_Arg (Arg2)) = Name_By_Protected_Procedure\n+              and then Has_Yield_Aspect (Proc_Id)\n+            then\n+               Error_Pragma_Arg\n+                 (\"implementation kind By_Protected_Procedure cannot be \"\n+                  & \"applied to entities with aspect 'Yield\", Arg2);\n+               return;\n+            end if;\n+\n             Record_Rep_Item (Proc_Id, N);\n          end Implemented;\n "}]}