{"sha": "282a221c4e06e2db3863811780e340769814340d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgyYTIyMWM0ZTA2ZTJkYjM4NjM4MTE3ODBlMzQwNzY5ODE0MzQwZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-07-28T14:00:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-07-28T14:00:46Z"}, "message": "class.c (finish_struct_1): Convert integer_zero_node to ssizetype before passing it to set_rtti_entry.\n\n\t* class.c (finish_struct_1): Convert integer_zero_node to\n \tssizetype before passing it to set_rtti_entry.\n\t* typeck2.c (initializer_constant_valid_p): Allow conversion of 0\n\tof any size to a pointer.\n\nFrom-SVN: r21438", "tree": {"sha": "eb7a51180277737fc441952b22170541ffdc9504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb7a51180277737fc441952b22170541ffdc9504"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/282a221c4e06e2db3863811780e340769814340d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/282a221c4e06e2db3863811780e340769814340d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/282a221c4e06e2db3863811780e340769814340d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/282a221c4e06e2db3863811780e340769814340d/comments", "author": null, "committer": null, "parents": [{"sha": "9e393e151a5317f3c879b4a25c638775750ac876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e393e151a5317f3c879b4a25c638775750ac876", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e393e151a5317f3c879b4a25c638775750ac876"}], "stats": {"total": 8598, "additions": 4344, "deletions": 4254}, "files": [{"sha": "f1cd93e5de8079f9278941a5c42807d266a110b1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/282a221c4e06e2db3863811780e340769814340d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/282a221c4e06e2db3863811780e340769814340d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=282a221c4e06e2db3863811780e340769814340d", "patch": "@@ -1,3 +1,10 @@\n+1998-07-28  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* class.c (finish_struct_1): Convert integer_zero_node to\n+ \tssizetype before passing it to set_rtti_entry.\n+\t* typeck2.c (initializer_constant_valid_p): Allow conversion of 0\n+\tof any size to a pointer.\n+\n 1998-07-27  Mark Mitchell  <mark@markmitchell.com>\n \n \t* cp-tree.h (TI_USES_TEMPLATE_PARMS): Remove."}, {"sha": "b62e8343bcb7da181573dcb8f4b7ba8584af305b", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/282a221c4e06e2db3863811780e340769814340d/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/282a221c4e06e2db3863811780e340769814340d/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=282a221c4e06e2db3863811780e340769814340d", "patch": "@@ -3994,7 +3994,8 @@ finish_struct_1 (t, warn_anon)\n \t  /* The first slot is for the rtti offset.  */\n \t  pending_virtuals = tree_cons (NULL_TREE, NULL_TREE, pending_virtuals);\n \n-\t  set_rtti_entry (pending_virtuals, integer_zero_node, t);\n+\t  set_rtti_entry (pending_virtuals,\n+\t\t\t  convert (ssizetype, integer_zero_node), t);\n \t  build_vtable (NULL_TREE, t);\n \t}\n       else"}, {"sha": "d3920a4d26ad8877289ef367fdd4335207acdc3c", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 4324, "deletions": 4247, "changes": 8571, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/282a221c4e06e2db3863811780e340769814340d/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/282a221c4e06e2db3863811780e340769814340d/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=282a221c4e06e2db3863811780e340769814340d"}, {"sha": "265b387fd232585367ea4951b7c164018e250b14", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/282a221c4e06e2db3863811780e340769814340d/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/282a221c4e06e2db3863811780e340769814340d/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=282a221c4e06e2db3863811780e340769814340d", "patch": "@@ -485,13 +485,18 @@ initializer_constant_valid_p (value, endtype)\n \treturn initializer_constant_valid_p (TREE_OPERAND (value, 0),\n \t\t\t\t\t     endtype);\n \n-      /* Likewise conversions from int to pointers.  */\n+      /* Likewise conversions from int to pointers, but also allow\n+\t conversions from 0.  */\n       if (TREE_CODE (TREE_TYPE (value)) == POINTER_TYPE\n-\t  && TREE_CODE (TREE_TYPE (TREE_OPERAND (value, 0))) == INTEGER_TYPE\n-\t  && (TYPE_PRECISION (TREE_TYPE (value))\n-\t      <= TYPE_PRECISION (TREE_TYPE (TREE_OPERAND (value, 0)))))\n-\treturn initializer_constant_valid_p (TREE_OPERAND (value, 0),\n-\t\t\t\t\t     endtype);\n+\t  && TREE_CODE (TREE_TYPE (TREE_OPERAND (value, 0))) == INTEGER_TYPE)\n+\t{\n+\t  if (integer_zerop (TREE_OPERAND (value, 0)))\n+\t    return null_pointer_node;\n+\t  else if (TYPE_PRECISION (TREE_TYPE (value))\n+\t\t   <= TYPE_PRECISION (TREE_TYPE (TREE_OPERAND (value, 0))))\n+\t    return initializer_constant_valid_p (TREE_OPERAND (value, 0),\n+\t\t\t\t\t\t endtype);\n+\t}\n \n       /* Allow conversions to union types if the value inside is okay.  */\n       if (TREE_CODE (TREE_TYPE (value)) == UNION_TYPE)"}]}