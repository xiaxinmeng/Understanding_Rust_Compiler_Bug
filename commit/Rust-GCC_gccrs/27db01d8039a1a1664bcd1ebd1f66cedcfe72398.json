{"sha": "27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdkYjAxZDgwMzlhMWExNjY0YmNkMWViZDFmNjZjZWRjZmU3MjM5OA==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2018-05-02T19:51:33Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2018-05-02T19:51:33Z"}, "message": "deque.tcc (deque<>::_M_assign_aux): Cast to void to ensure overloaded comma not used.\n\n2018-05-02  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* include/bits/deque.tcc (deque<>::_M_assign_aux): Cast to void to\n\tensure overloaded comma not used.\n\t* include/bits/list.tcc (list<>::_M_assign_dispatch): Likewise.\n\t* include/bits/vector.tcc (vector<>::_M_assign_aux): Likewise.\n\t* include/bits/stl_bvector.h (vector<bool>::_M_assign_aux): Likewise.\n\t* testsuite/23_containers/deque/modifiers/assign/1.cc: New.\n\t* testsuite/23_containers/list/modifiers/assign/1.cc: New.\n\t* testsuite/23_containers/vector/bool/modifiers/assign/1.cc: New.\n\t* testsuite/23_containers/vector/modifiers/assign/1.cc: New.\n\nFrom-SVN: r259856", "tree": {"sha": "f042570f7ee6b09d19f49069e2394e29bfbf95d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f042570f7ee6b09d19f49069e2394e29bfbf95d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/comments", "author": null, "committer": null, "parents": [{"sha": "85d0fad46932c6ff6cad0d839157c4290a5f6586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d0fad46932c6ff6cad0d839157c4290a5f6586", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d0fad46932c6ff6cad0d839157c4290a5f6586"}], "stats": {"total": 174, "additions": 170, "deletions": 4}, "files": [{"sha": "69a9eeba469445414aae6a1521ad8662e2538edd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "patch": "@@ -1,3 +1,15 @@\n+2018-05-02  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/bits/deque.tcc (deque<>::_M_assign_aux): Cast to void to\n+\tensure overloaded comma not used.\n+\t* include/bits/list.tcc (list<>::_M_assign_dispatch): Likewise.\n+\t* include/bits/vector.tcc (vector<>::_M_assign_aux): Likewise.\n+\t* include/bits/stl_bvector.h (vector<bool>::_M_assign_aux): Likewise.\n+\t* testsuite/23_containers/deque/modifiers/assign/1.cc: New.\n+\t* testsuite/23_containers/list/modifiers/assign/1.cc: New.\n+\t* testsuite/23_containers/vector/bool/modifiers/assign/1.cc: New.\n+\t* testsuite/23_containers/vector/modifiers/assign/1.cc: New.\n+\n 2018-05-02  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/68197"}, {"sha": "8724a19504b1b918fe7657a304cf4d66f1f1791b", "filename": "libstdc++-v3/include/bits/deque.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc?ref=27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "patch": "@@ -291,7 +291,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t\t    std::input_iterator_tag)\n       {\n         iterator __cur = begin();\n-        for (; __first != __last && __cur != end(); ++__cur, ++__first)\n+        for (; __first != __last && __cur != end(); ++__cur, (void)++__first)\n           *__cur = *__first;\n         if (__first == __last)\n           _M_erase_at_end(__cur);"}, {"sha": "e90d9574cd26cd9e2d70e4fba2b8e4fd3750e908", "filename": "libstdc++-v3/include/bits/list.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc?ref=27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "patch": "@@ -312,7 +312,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n         iterator __first1 = begin();\n         iterator __last1 = end();\n         for (; __first1 != __last1 && __first2 != __last2;\n-\t     ++__first1, ++__first2)\n+\t     ++__first1, (void)++__first2)\n           *__first1 = *__first2;\n         if (__first2 == __last2)\n           erase(__first1, __last1);"}, {"sha": "24594044d7ac92b5835682fffe0063f682a7272d", "filename": "libstdc++-v3/include/bits/stl_bvector.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h?ref=27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "patch": "@@ -1221,7 +1221,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t\t      std::input_iterator_tag)\n \t{\n \t  iterator __cur = begin();\n-\t  for (; __first != __last && __cur != end(); ++__cur, ++__first)\n+\t  for (; __first != __last && __cur != end(); ++__cur, (void)++__first)\n \t    *__cur = *__first;\n \t  if (__first == __last)\n \t    _M_erase_at_end(__cur);"}, {"sha": "1d1ef427b26d99a4d817c3dfeb10f8a4374d520e", "filename": "libstdc++-v3/include/bits/vector.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc?ref=27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "patch": "@@ -273,7 +273,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       {\n \tpointer __cur(this->_M_impl._M_start);\n \tfor (; __first != __last && __cur != this->_M_impl._M_finish;\n-\t     ++__cur, ++__first)\n+\t     ++__cur, (void)++__first)\n \t  *__cur = *__first;\n \tif (__first == __last)\n \t  _M_erase_at_end(__cur);"}, {"sha": "fbab09b9ba2bbd9b9d980c3cda5b1b251efe4168", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/assign/1.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fassign%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fassign%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fassign%2F1.cc?ref=27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "patch": "@@ -0,0 +1,36 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <deque>\n+\n+#include <testsuite_iterators.h>\n+#include <testsuite_hooks.h>\n+\n+typedef __gnu_test::test_container<int, __gnu_test::input_iterator_wrapper>\n+  input_iterator_seq;\n+\n+int main()\n+{\n+  std::deque<int> d;\n+\n+  int array[] { 0, 1, 2 };\n+  input_iterator_seq seq(array, array + 3);\n+\n+  d.assign(seq.begin(), seq.end());\n+  VERIFY( d.size() == 3 );\n+  return 0;\n+}"}, {"sha": "c5fde47059a577bc6aea3e569487f9089868c816", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/assign/1.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fassign%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fassign%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fassign%2F1.cc?ref=27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "patch": "@@ -0,0 +1,36 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <list>\n+\n+#include <testsuite_iterators.h>\n+#include <testsuite_hooks.h>\n+\n+typedef __gnu_test::test_container<int, __gnu_test::input_iterator_wrapper>\n+  input_iterator_seq;\n+\n+int main()\n+{\n+  std::list<int> l;\n+\n+  int array[] { 0, 1, 2 };\n+  input_iterator_seq seq(array, array + 3);\n+\n+  l.assign(seq.begin(), seq.end());\n+  VERIFY( !l.empty() );\n+  return 0;\n+}"}, {"sha": "833201b39a3eca565b90db75eace69029861170b", "filename": "libstdc++-v3/testsuite/23_containers/vector/bool/modifiers/assign/1.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fmodifiers%2Fassign%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fmodifiers%2Fassign%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fmodifiers%2Fassign%2F1.cc?ref=27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "patch": "@@ -0,0 +1,41 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <vector>\n+\n+#include <testsuite_iterators.h>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  typedef __gnu_test::test_container<bool, __gnu_test::input_iterator_wrapper>\n+    input_iterator_seq;\n+\n+  std::vector<bool> bv;\n+\n+  bool array[] { false, true, true };\n+  input_iterator_seq seq(array, array + 3);\n+\n+  bv.assign(seq.begin(), seq.end());\n+  VERIFY( bv.size() == 3 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "ca7b125e7cae4a631289ecd9f0b1cb7301429ff5", "filename": "libstdc++-v3/testsuite/23_containers/vector/modifiers/assign/1.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Fassign%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27db01d8039a1a1664bcd1ebd1f66cedcfe72398/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Fassign%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Fassign%2F1.cc?ref=27db01d8039a1a1664bcd1ebd1f66cedcfe72398", "patch": "@@ -0,0 +1,41 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <vector>\n+\n+#include <testsuite_iterators.h>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  typedef __gnu_test::test_container<int, __gnu_test::input_iterator_wrapper>\n+    input_iterator_seq;\n+\n+  std::vector<int> v;\n+\n+  int array[] { 0, 1, 2 };\n+  input_iterator_seq seq(array, array + 3);\n+\n+  v.assign(seq.begin(), seq.end());\n+  VERIFY( v.size() == 3 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}