{"sha": "220d905f7c53b81c4572450f9caf6197b2cc6c02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIwZDkwNWY3YzUzYjgxYzQ1NzI0NTBmOWNhZjYxOTdiMmNjNmMwMg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2015-02-21T00:27:05Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2015-02-21T00:27:05Z"}, "message": "re PR debug/58123 (debug line not tracked for last autovariable dtor)\n\n\tPR debug/58123\n\t* gimplify.c (gimplify_expr): Prefer location of TRY_FINALLY_EXPR\n\tover input_location.\n\nFrom-SVN: r220886", "tree": {"sha": "ae75ab12d5884f08dfac4774b542d49dad9ee896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae75ab12d5884f08dfac4774b542d49dad9ee896"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/220d905f7c53b81c4572450f9caf6197b2cc6c02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220d905f7c53b81c4572450f9caf6197b2cc6c02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/220d905f7c53b81c4572450f9caf6197b2cc6c02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220d905f7c53b81c4572450f9caf6197b2cc6c02/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1f217ad105cde2a7a34297fc7027655a93e75ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1f217ad105cde2a7a34297fc7027655a93e75ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1f217ad105cde2a7a34297fc7027655a93e75ac"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "ca429c08d63c87c7b2ec15384fa6897b27233864", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d905f7c53b81c4572450f9caf6197b2cc6c02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d905f7c53b81c4572450f9caf6197b2cc6c02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=220d905f7c53b81c4572450f9caf6197b2cc6c02", "patch": "@@ -1,3 +1,9 @@\n+2015-02-20  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR debug/58123\n+\t* gimplify.c (gimplify_expr): Prefer location of TRY_FINALLY_EXPR\n+\tover input_location.\n+\n 2015-02-20  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* tree-streamer-in.c (unpack_ts_decl_common_value_fields,"}, {"sha": "d822913accea99a07d137242b7e1a0b5099825e2", "filename": "gcc/gimplify.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d905f7c53b81c4572450f9caf6197b2cc6c02/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d905f7c53b81c4572450f9caf6197b2cc6c02/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=220d905f7c53b81c4572450f9caf6197b2cc6c02", "patch": "@@ -8244,10 +8244,10 @@ gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t\t\t\t     TREE_CODE (*expr_p) == TRY_FINALLY_EXPR\n \t\t\t\t     ? GIMPLE_TRY_FINALLY\n \t\t\t\t     : GIMPLE_TRY_CATCH);\n-\t    if (LOCATION_LOCUS (saved_location) != UNKNOWN_LOCATION)\n-\t      gimple_set_location (try_, saved_location);\n-\t    else\n+\t    if (EXPR_HAS_LOCATION (save_expr))\n \t      gimple_set_location (try_, EXPR_LOCATION (save_expr));\n+\t    else if (LOCATION_LOCUS (saved_location) != UNKNOWN_LOCATION)\n+\t      gimple_set_location (try_, saved_location);\n \t    if (TREE_CODE (*expr_p) == TRY_CATCH_EXPR)\n \t      gimple_try_set_catch_is_cleanup (try_,\n \t\t\t\t\t       TRY_CATCH_IS_CLEANUP (*expr_p));"}, {"sha": "011e1a3def3d93a1b3a764dbbebb0dade4aeb199", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d905f7c53b81c4572450f9caf6197b2cc6c02/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d905f7c53b81c4572450f9caf6197b2cc6c02/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=220d905f7c53b81c4572450f9caf6197b2cc6c02", "patch": "@@ -1,3 +1,10 @@\n+2015-02-20  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR debug/58123\n+\t* g++.dg/debug/dwarf2/deallocator.C: Adjust for correct try\n+\tlocation.\n+\t* g++.dg/gcov/gcov-2.C: Likewise.\n+\n 2015-02-20  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/65136"}, {"sha": "0fcd08ea6f90464ae04aebc6e518350436b4e390", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/deallocator.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d905f7c53b81c4572450f9caf6197b2cc6c02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdeallocator.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d905f7c53b81c4572450f9caf6197b2cc6c02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdeallocator.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdeallocator.C?ref=220d905f7c53b81c4572450f9caf6197b2cc6c02", "patch": "@@ -41,6 +41,6 @@ void foo(int i)\n   return;\n }\n // { dg-final { scan-assembler \"deallocator.C:29\" } }\n-// { dg-final { scan-assembler \"deallocator.C:31\" } }\n-// { dg-final { scan-assembler \"deallocator.C:38\" } }\n-// { dg-final { scan-assembler \"deallocator.C:41\" } }\n+// { dg-final { scan-assembler \"deallocator.C:24\" } }\n+// { dg-final { scan-assembler \"deallocator.C:34\" } }\n+// { dg-final { scan-assembler \"deallocator.C:21\" } }"}, {"sha": "6d002f5d2cd01d7818d14c45ae7092924d2fa8d8", "filename": "gcc/testsuite/g++.dg/gcov/gcov-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d905f7c53b81c4572450f9caf6197b2cc6c02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d905f7c53b81c4572450f9caf6197b2cc6c02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-2.C?ref=220d905f7c53b81c4572450f9caf6197b2cc6c02", "patch": "@@ -20,7 +20,7 @@ private:\n \n void foo()\n {\n-  C c;\t\t\t\t\t/* count(1) */\n+  C c;\t\t\t\t\t/* count(2) */\n   c.seti (1);\t\t\t\t/* count(1) */\n }\n "}, {"sha": "7fe1a27651893c12c982aaa790fbabaf55b6da81", "filename": "gcc/testsuite/g++.dg/pr58123.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d905f7c53b81c4572450f9caf6197b2cc6c02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr58123.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d905f7c53b81c4572450f9caf6197b2cc6c02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr58123.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr58123.C?ref=220d905f7c53b81c4572450f9caf6197b2cc6c02", "patch": "@@ -0,0 +1,18 @@\n+// { dg-do compile }\n+// { dg-options \"-fdump-tree-gimple-lineno\" }\n+\n+// Test that the TRY block's location is the definition of \"C a\".\n+\n+class C {\n+public:\n+  C() {}\n+  ~C() {}\n+  int m() { return 0; }\n+};\n+int main() {\n+   C a;\n+   return a.m();\n+}\n+\n+// { dg-final { scan-tree-dump-times \"pr58123.C:13\\.6\\] try\" 1 \"gimple\" } }\n+// { dg-final { cleanup-tree-dump \"gimple\" } }"}]}