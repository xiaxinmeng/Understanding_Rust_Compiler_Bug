{"sha": "07c772ed4e2bfd648c705575b0ff7f0c06f44c0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdjNzcyZWQ0ZTJiZmQ2NDhjNzA1NTc1YjBmZjdmMGMwNmY0NGMwYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-07-20T18:21:53Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-07-20T18:21:53Z"}, "message": "LWG 2328 Rvalue stream extraction should use perfect forwarding\n\n\t* include/std/istream (operator>>(basic_istream&&, _Tp&)): Adjust\n\tto use perfect forwarding (LWG 2328).\n\t* testsuite/27_io/rvalue_streams.cc: Test perfect forwarding.\n\t* doc/xml/manual/intro.xml: Document DR 2328 status.\n\nFrom-SVN: r238533", "tree": {"sha": "5864bd747d713f7fbbd48ba1ca5e713dfe3d26ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5864bd747d713f7fbbd48ba1ca5e713dfe3d26ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07c772ed4e2bfd648c705575b0ff7f0c06f44c0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07c772ed4e2bfd648c705575b0ff7f0c06f44c0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07c772ed4e2bfd648c705575b0ff7f0c06f44c0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07c772ed4e2bfd648c705575b0ff7f0c06f44c0c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "ad31fe6fdee7d30db8a0ae2b7eca8aebded4b854", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07c772ed4e2bfd648c705575b0ff7f0c06f44c0c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07c772ed4e2bfd648c705575b0ff7f0c06f44c0c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=07c772ed4e2bfd648c705575b0ff7f0c06f44c0c", "patch": "@@ -1,5 +1,10 @@\n 2016-07-20  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/istream (operator>>(basic_istream&&, _Tp&)): Adjust\n+\tto use perfect forwarding (LWG 2328).\n+\t* testsuite/27_io/rvalue_streams.cc: Test perfect forwarding.\n+\t* doc/xml/manual/intro.xml: Document DR 2328 status.\n+\n \t* libsupc++/pbase_type_info.cc (__pbase_type_info::__do_catch): Use\n \tstatic objects for catching nullptr as pointer to member types.\n "}, {"sha": "6335614efdbbf5cedc65ef805d9a6287f9af1c67", "filename": "libstdc++-v3/doc/xml/manual/intro.xml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07c772ed4e2bfd648c705575b0ff7f0c06f44c0c/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07c772ed4e2bfd648c705575b0ff7f0c06f44c0c/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml?ref=07c772ed4e2bfd648c705575b0ff7f0c06f44c0c", "patch": "@@ -948,6 +948,12 @@ requirements of the license of GCC.\n     <listitem><para>Update definitions of the partial specializations for const and volatile types.\n     </para></listitem></varlistentry>\n \n+    <varlistentry><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"../ext/lwg-defects.html#2328\">2328</link>:\n+       <emphasis>Rvalue stream extraction should use perfect forwarding</emphasis>\n+    </term>\n+    <listitem><para>Use perfect forwarding for right operand.\n+    </para></listitem></varlistentry>\n+\n     <varlistentry><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"../ext/lwg-defects.html#2329\">2329</link>:\n        <emphasis><code>regex_match()/regex_search()</code> with <code>match_results</code> should forbid temporary strings</emphasis>\n     </term>"}, {"sha": "c8a2e08e9f945b5dd6e9c25aad5ee1be1457fbab", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07c772ed4e2bfd648c705575b0ff7f0c06f44c0c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07c772ed4e2bfd648c705575b0ff7f0c06f44c0c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=07c772ed4e2bfd648c705575b0ff7f0c06f44c0c", "patch": "@@ -909,6 +909,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #if __cplusplus >= 201103L\n   // [27.7.1.6] Rvalue stream extraction\n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 2328. Rvalue stream extraction should use perfect forwarding\n   /**\n    *  @brief  Generic extractor for rvalue stream\n    *  @param  __is  An input stream.\n@@ -921,9 +923,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   */\n   template<typename _CharT, typename _Traits, typename _Tp>\n     inline basic_istream<_CharT, _Traits>&\n-    operator>>(basic_istream<_CharT, _Traits>&& __is, _Tp& __x)\n+    operator>>(basic_istream<_CharT, _Traits>&& __is, _Tp&& __x)\n     {\n-      __is >> __x;\n+      __is >> std::forward<_Tp>(__x);\n       return __is;\n     }\n #endif // C++11"}, {"sha": "5918595acbcf678572101826172d00dd18b36ef9", "filename": "libstdc++-v3/testsuite/27_io/rvalue_streams.cc", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07c772ed4e2bfd648c705575b0ff7f0c06f44c0c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Frvalue_streams.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07c772ed4e2bfd648c705575b0ff7f0c06f44c0c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Frvalue_streams.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Frvalue_streams.cc?ref=07c772ed4e2bfd648c705575b0ff7f0c06f44c0c", "patch": "@@ -34,9 +34,33 @@ test01()\n   VERIFY (i == i2);\n }\n \n+struct X { bool as_rvalue; };\n+\n+void operator>>(std::istream&, X& x) { x.as_rvalue = false; }\n+void operator>>(std::istream&, X&& x) { x.as_rvalue = true; }\n+\n+// LWG 2328 Rvalue stream extraction should use perfect forwarding\n+void\n+test02()\n+{\n+  X x;\n+  std::istringstream is;\n+  auto& ref1 = (std::move(is) >> x);\n+  VERIFY( &ref1 == &is );\n+  VERIFY( x.as_rvalue == false );\n+  auto& ref2 = (std::move(is) >> std::move(x));\n+  VERIFY( &ref2 == &is );\n+  VERIFY( x.as_rvalue == true );\n+\n+  char arr[2];\n+  std::istringstream(\"x\") >> &arr[0];\n+  std::istringstream(\"x\") >> arr;\n+}\n+\n int\n main()\n {\n   test01();\n+  test02();\n   return 0;\n }"}]}