{"sha": "c21ffa3e53606d421c44f13fbd9e96a49b0cf833", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIxZmZhM2U1MzYwNmQ0MjFjNDRmMTNmYmQ5ZTk2YTQ5YjBjZjgzMw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-05-06T23:24:32Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-05-06T23:24:32Z"}, "message": "re PR fortran/90290 (-std=f2008 should reject non-constant stop and error stop codes)\n\n2019-05-06  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/90290\n\t* match.c (gfc_match_stopcode): Check F2008 condition on stop code.\n\n2019-05-06  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/90290\n\t* gfortran.dg/pr90290.f90: New test.\n\nFrom-SVN: r270928", "tree": {"sha": "d376cbb87c5845bec6297bee384dcd8e7bf0c39d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d376cbb87c5845bec6297bee384dcd8e7bf0c39d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c21ffa3e53606d421c44f13fbd9e96a49b0cf833", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21ffa3e53606d421c44f13fbd9e96a49b0cf833", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21ffa3e53606d421c44f13fbd9e96a49b0cf833", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21ffa3e53606d421c44f13fbd9e96a49b0cf833/comments", "author": null, "committer": null, "parents": [{"sha": "b56be669f0aa79df4937c780306b77af538cd3a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56be669f0aa79df4937c780306b77af538cd3a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b56be669f0aa79df4937c780306b77af538cd3a6"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "5aaa52eb302a787c2c52b45457f45f7c1a749710", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21ffa3e53606d421c44f13fbd9e96a49b0cf833/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21ffa3e53606d421c44f13fbd9e96a49b0cf833/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c21ffa3e53606d421c44f13fbd9e96a49b0cf833", "patch": "@@ -1,3 +1,8 @@\n+2019-05-06  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/90290\n+\t* match.c (gfc_match_stopcode): Check F2008 condition on stop code.\n+\n 2019-05-01  Andrew Benson  <abensonca@gmail.com>\n \n \t* module.c (write_module): Initialize module_column before writing"}, {"sha": "69698e5ba2ecec701037fb7eb7425a37c656a5ba", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21ffa3e53606d421c44f13fbd9e96a49b0cf833/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21ffa3e53606d421c44f13fbd9e96a49b0cf833/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=c21ffa3e53606d421c44f13fbd9e96a49b0cf833", "patch": "@@ -2977,14 +2977,17 @@ gfc_match_stopcode (gfc_statement st)\n {\n   gfc_expr *e = NULL;\n   match m;\n-  bool f95, f03;\n+  bool f95, f03, f08;\n \n   /* Set f95 for -std=f95.  */\n   f95 = (gfc_option.allow_std == GFC_STD_OPT_F95);\n \n   /* Set f03 for -std=f2003.  */\n   f03 = (gfc_option.allow_std == GFC_STD_OPT_F03);\n \n+  /* Set f08 for -std=f2008.  */\n+  f08 = (gfc_option.allow_std == GFC_STD_OPT_F08);\n+\n   /* Look for a blank between STOP and the stop-code for F2008 or later.  */\n   if (gfc_current_form != FORM_FIXED && !(f95 || f03))\n     {\n@@ -3073,8 +3076,8 @@ gfc_match_stopcode (gfc_statement st)\n       /* Test for F95 and F2003 style STOP stop-code.  */\n       if (e->expr_type != EXPR_CONSTANT && (f95 || f03))\n \t{\n-\t  gfc_error (\"STOP code at %L must be a scalar CHARACTER constant or \"\n-\t\t     \"digit[digit[digit[digit[digit]]]]\", &e->where);\n+\t  gfc_error (\"STOP code at %L must be a scalar CHARACTER constant \"\n+\t\t     \"or digit[digit[digit[digit[digit]]]]\", &e->where);\n \t  goto cleanup;\n \t}\n \n@@ -3084,6 +3087,14 @@ gfc_match_stopcode (gfc_statement st)\n       gfc_reduce_init_expr (e);\n       gfc_init_expr_flag = false;\n \n+      /* Test for F2008 style STOP stop-code.  */\n+      if (e->expr_type != EXPR_CONSTANT && f08)\n+\t{\n+\t  gfc_error (\"STOP code at %L must be a scalar default CHARACTER or \"\n+\t\t     \"INTEGER constant expression\", &e->where);\n+\t  goto cleanup;\n+\t}\n+\n       if (!(e->ts.type == BT_CHARACTER || e->ts.type == BT_INTEGER))\n \t{\n \t  gfc_error (\"STOP code at %L must be either INTEGER or CHARACTER type\","}, {"sha": "662b419440b040493501403d4ccc0c69b44ba6e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21ffa3e53606d421c44f13fbd9e96a49b0cf833/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21ffa3e53606d421c44f13fbd9e96a49b0cf833/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c21ffa3e53606d421c44f13fbd9e96a49b0cf833", "patch": "@@ -1,3 +1,8 @@\n+2019-05-06  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/90290\n+\t* gfortran.dg/pr90290.f90: New test.\n+\n 2019-05-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/88709"}, {"sha": "280d7ded0c3fe89eb3822263c9173dff5aa0f9a7", "filename": "gcc/testsuite/gfortran.dg/pr90290.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21ffa3e53606d421c44f13fbd9e96a49b0cf833/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr90290.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21ffa3e53606d421c44f13fbd9e96a49b0cf833/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr90290.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr90290.f90?ref=c21ffa3e53606d421c44f13fbd9e96a49b0cf833", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2008\" }\n+program errorstop\n+  integer :: ec\n+  read *, ec\n+  stop ec      ! { dg-error \"STOP code at \" }\n+end program"}]}