{"sha": "1ff0c00d9f3d9eb2f6e4143c9c3daba4ff3c1d07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZmMGMwMGQ5ZjNkOWViMmY2ZTQxNDNjOWMzZGFiYTRmZjNjMWQwNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-31T12:00:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-31T12:00:31Z"}, "message": "(insert_regs): If a REG already is in a class but not in the mode we\nwant, don't do anything to the classes.\n\nFrom-SVN: r3951", "tree": {"sha": "10daf37d36b024785dbba39025f6a8c4db301180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10daf37d36b024785dbba39025f6a8c4db301180"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ff0c00d9f3d9eb2f6e4143c9c3daba4ff3c1d07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ff0c00d9f3d9eb2f6e4143c9c3daba4ff3c1d07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ff0c00d9f3d9eb2f6e4143c9c3daba4ff3c1d07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ff0c00d9f3d9eb2f6e4143c9c3daba4ff3c1d07/comments", "author": null, "committer": null, "parents": [{"sha": "e6878cb948d1dc2b8cc636a59e7f4847361a3cb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6878cb948d1dc2b8cc636a59e7f4847361a3cb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6878cb948d1dc2b8cc636a59e7f4847361a3cb8"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "a2aac9447fc555a456dac60cd617db5f75f4fd61", "filename": "gcc/cse.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff0c00d9f3d9eb2f6e4143c9c3daba4ff3c1d07/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff0c00d9f3d9eb2f6e4143c9c3daba4ff3c1d07/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=1ff0c00d9f3d9eb2f6e4143c9c3daba4ff3c1d07", "patch": "@@ -984,9 +984,14 @@ insert_regs (x, classp, modified)\n     {\n       register int regno = REGNO (x);\n \n-      if (modified\n-\t  || ! (REGNO_QTY_VALID_P (regno)\n-\t\t&& qty_mode[reg_qty[regno]] == GET_MODE (x)))\n+      /* If REGNO is in the equivalence table already but is of the\n+\t wrong mode for that equivalence, don't do anything here.  */\n+\n+      if (REGNO_QTY_VALID_P (regno)\n+\t  && qty_mode[reg_qty[regno]] != GET_MODE (x))\n+\treturn 0;\n+\n+      if (modified || ! REGNO_QTY_VALID_P (regno))\n \t{\n \t  if (classp)\n \t    for (classp = classp->first_same_value;"}]}