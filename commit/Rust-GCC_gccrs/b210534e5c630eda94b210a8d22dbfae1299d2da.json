{"sha": "b210534e5c630eda94b210a8d22dbfae1299d2da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIxMDUzNGU1YzYzMGVkYTk0YjIxMGE4ZDIyZGJmYWUxMjk5ZDJkYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-12-14T09:26:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-12-14T09:26:05Z"}, "message": "gimple-ssa-split-paths.c (is_feasible_trace): Remove duplicated code block.\n\n2018-12-14  Richard Biener  <rguenther@suse.de>\n\n\t* gimple-ssa-split-paths.c (is_feasible_trace): Remove\n\tduplicated code block.\n\nFrom-SVN: r267126", "tree": {"sha": "a1b11295255d1140d92238a7a42169223a3cd88a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1b11295255d1140d92238a7a42169223a3cd88a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b210534e5c630eda94b210a8d22dbfae1299d2da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b210534e5c630eda94b210a8d22dbfae1299d2da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b210534e5c630eda94b210a8d22dbfae1299d2da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b210534e5c630eda94b210a8d22dbfae1299d2da/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "04f4909a1e91c3fc350789aa5a46390df3aa89f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04f4909a1e91c3fc350789aa5a46390df3aa89f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04f4909a1e91c3fc350789aa5a46390df3aa89f3"}], "stats": {"total": 51, "additions": 5, "deletions": 46}, "files": [{"sha": "5d81eb0beb96236d01a3e86402279a626f17a77b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b210534e5c630eda94b210a8d22dbfae1299d2da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b210534e5c630eda94b210a8d22dbfae1299d2da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b210534e5c630eda94b210a8d22dbfae1299d2da", "patch": "@@ -1,3 +1,8 @@\n+2018-12-14  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-ssa-split-paths.c (is_feasible_trace): Remove\n+\tduplicated code block.\n+\n 2018-12-14  Alan Modra  <amodra@gmail.com>\n \n \tPR rtl-optimization/88311"}, {"sha": "75f6be8f1cf9871b4bd3448147fd6d1dcff9d24b", "filename": "gcc/gimple-ssa-split-paths.c", "status": "modified", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b210534e5c630eda94b210a8d22dbfae1299d2da/gcc%2Fgimple-ssa-split-paths.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b210534e5c630eda94b210a8d22dbfae1299d2da/gcc%2Fgimple-ssa-split-paths.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-split-paths.c?ref=b210534e5c630eda94b210a8d22dbfae1299d2da", "patch": "@@ -249,52 +249,6 @@ is_feasible_trace (basic_block bb)\n \t}\n     }\n \n-  /* Canonicalize the form.  */\n-  if (num_stmts_in_pred1 == 0 && num_stmts_in_pred2 == 1)\n-    {\n-      std::swap (pred1, pred2);\n-      std::swap (num_stmts_in_pred1, num_stmts_in_pred2);\n-    }\n-\n-  /* Another variant.  This one is half-diamond.  */\n-  if (num_stmts_in_pred1 == 1 && num_stmts_in_pred2 == 0\n-      && dominated_by_p (CDI_DOMINATORS, pred1, pred2))\n-    {\n-      gimple *stmt1 = last_and_only_stmt (pred1);\n-\n-      /* The only statement in PRED1 must be an assignment that is\n-\t not a good candidate for if-conversion.   This may need some\n-\t generalization.  */\n-      if (stmt1 && gimple_code (stmt1) == GIMPLE_ASSIGN)\n-\t{\n-\t  enum tree_code code1 = gimple_assign_rhs_code (stmt1);\n-\n-\t  if (!poor_ifcvt_candidate_code (code1))\n-\t    {\n-\t      tree lhs1 = gimple_assign_lhs (stmt1);\n-\t      tree rhs1 = gimple_assign_rhs1 (stmt1);\n-\n-\t      gimple_stmt_iterator gsi;\n-\t      for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-\t\t{\n-\t\t  gimple *phi = gsi_stmt (gsi);\n-\t\t  if ((gimple_phi_arg_def (phi, 0) == lhs1\n-\t\t       && gimple_phi_arg_def (phi, 1) == rhs1)\n-\t\t      || (gimple_phi_arg_def (phi, 1) == lhs1\n-\t\t\t  && gimple_phi_arg_def (phi, 0) == rhs1))\n-\t\t    {\n-\t\t      if (dump_file && (dump_flags & TDF_DETAILS))\n-\t\t\tfprintf (dump_file,\n-\t\t\t\t \"Block %d appears to be a join point for \"\n-\t\t\t\t \"if-convertable half-diamond.\\n\",\n-\t\t\t\t bb->index);\n-\t\t      return false;\n-\t\t    }\n-\t\t}\n-\t    }\n-\t}\n-    }\n-\n   /* If the joiner has no PHIs with useful uses there is zero chance\n      of CSE/DCE/jump-threading possibilities exposed by duplicating it.  */\n   bool found_useful_phi = false;"}]}