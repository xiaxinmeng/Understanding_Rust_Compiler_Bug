{"sha": "d809264e863ffbf312af0e23bd30799ffa999096", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgwOTI2NGU4NjNmZmJmMzEyYWYwZTIzYmQzMDc5OWZmYTk5OTA5Ng==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-09-02T01:33:01Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-09-02T01:33:01Z"}, "message": "format.c (parse_format_list): Set repeat count for P descriptors.\n\n\t* io/format.c (parse_format_list): Set repeat count for P descriptors.\n\t* write.c (output_float): Fix condition.  Correctly handle nonzero\n\tscale factor.\ntestsuite/\n\t* gfortran.dg/edit_real_1.f90: Add new tests.\n\nFrom-SVN: r86952", "tree": {"sha": "f174d83e96b96dfdc5e9932f24caad92c63d9fe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f174d83e96b96dfdc5e9932f24caad92c63d9fe1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d809264e863ffbf312af0e23bd30799ffa999096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d809264e863ffbf312af0e23bd30799ffa999096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d809264e863ffbf312af0e23bd30799ffa999096", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d809264e863ffbf312af0e23bd30799ffa999096/comments", "author": null, "committer": null, "parents": [{"sha": "130d5426f03f01226b351b31ccf6fffbd85b1410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/130d5426f03f01226b351b31ccf6fffbd85b1410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/130d5426f03f01226b351b31ccf6fffbd85b1410"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "d1915c175e72acd05b88c3fac988f79a2520b8c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d809264e863ffbf312af0e23bd30799ffa999096/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d809264e863ffbf312af0e23bd30799ffa999096/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d809264e863ffbf312af0e23bd30799ffa999096", "patch": "@@ -1,3 +1,7 @@\n+2004-09-02  Paul Brook  <paul@codesourcery.com>\n+\n+\t* gfortran.dg/edit_real_1.f90: Add new tests.\n+\n 2004-09-01  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/15327"}, {"sha": "dc8eee19d2fff3ba8c4346ceaad2a6f50e421a84", "filename": "gcc/testsuite/gfortran.dg/edit_real_1.f90", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d809264e863ffbf312af0e23bd30799ffa999096/gcc%2Ftestsuite%2Fgfortran.dg%2Fedit_real_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d809264e863ffbf312af0e23bd30799ffa999096/gcc%2Ftestsuite%2Fgfortran.dg%2Fedit_real_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fedit_real_1.f90?ref=d809264e863ffbf312af0e23bd30799ffa999096", "patch": "@@ -62,5 +62,13 @@ program edit_real_1\n   s = x\n   write (s, '(EN15.3,A)') 999.9999, \"z\"\n   if (s .ne. \"      1.000E+03z\") call abort\n+  ! E format, positive scale factor\n+  s = x\n+  write (s, '(2PE10.4,A)') 1.2345, \"z\"\n+  if (s .ne. '12.345E-01z') call abort\n+  ! E format, negative scale factor\n+  s = x\n+  write (s, '(-2PE10.4,A)') 1.25, \"z\"\n+  if (s .ne. '0.0013E+03z') call abort\n end\n "}, {"sha": "6bf52bbc7a96d31f8a9c61ffae4313855e64d362", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d809264e863ffbf312af0e23bd30799ffa999096/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d809264e863ffbf312af0e23bd30799ffa999096/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=d809264e863ffbf312af0e23bd30799ffa999096", "patch": "@@ -1,3 +1,9 @@\n+2004-09-02  Paul Brook  <paul@codesourcery.com>\n+\n+\t* io/format.c (parse_format_list): Set repeat count for P descriptors.\n+\t* write.c (output_float): Fix condition.  Correctly handle nonzero\n+\tscale factor.\n+\n 2004-09-01  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* mk-sik-inc.sh: Use a temporary string instead of 'echo -n'."}, {"sha": "23b8d5ebf1bea72477da1f895fea9705b89a730d", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d809264e863ffbf312af0e23bd30799ffa999096/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d809264e863ffbf312af0e23bd30799ffa999096/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=d809264e863ffbf312af0e23bd30799ffa999096", "patch": "@@ -501,6 +501,7 @@ parse_format_list (void)\n     p_descriptor:\n       get_fnode (&head, &tail, FMT_P);\n       tail->u.k = value;\n+      tail->repeat = 1;\n \n       t = format_lex ();\n       if (t == FMT_F || t == FMT_EN || t == FMT_ES || t == FMT_D"}, {"sha": "f4d888e50d246734b4e1fa25ee924dfccc42b8eb", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d809264e863ffbf312af0e23bd30799ffa999096/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d809264e863ffbf312af0e23bd30799ffa999096/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=d809264e863ffbf312af0e23bd30799ffa999096", "patch": "@@ -307,7 +307,8 @@ output_float (fnode *f, double value, int len)\n \tedigits = 2;\n     }\n   \n-  if (FMT_F || FMT_ES)\n+  if (ft == FMT_F || ft == FMT_EN\n+      || ((ft == FMT_D || ft == FMT_E) && g.scale_factor != 0))\n     {\n       /* Always convert at full precision to avoid double rounding.  */\n       ndigits = 27 - edigits;\n@@ -368,18 +369,26 @@ output_float (fnode *f, double value, int len)\n     case FMT_E:\n     case FMT_D:\n       i = g.scale_factor;\n+      e -= i;\n       if (i < 0)\n \t{\n \t  nbefore = 0;\n \t  nzero = -i;\n \t  nafter = d + i;\n \t}\n-      else\n+      else if (i > 0)\n \t{\n \t  nbefore = i;\n \t  nzero = 0;\n-\t  nafter = d - i;\n+\t  nafter = (d - i) + 1;\n \t}\n+      else /* i == 0 */\n+\t{\n+\t  nbefore = 0;\n+\t  nzero = 0;\n+\t  nafter = d;\n+\t}\n+\n       if (ft = FMT_E)\n \texpchar = 'E';\n       else"}]}