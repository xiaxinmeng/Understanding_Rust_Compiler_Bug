{"sha": "118f7432dfb8f0237ca3256b8ec3e0abec54488f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE4Zjc0MzJkZmI4ZjAyMzdjYTMyNTZiOGVjM2UwYWJlYzU0NDg4Zg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-12-05T13:07:53Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-12-05T13:07:53Z"}, "message": "re PR libstdc++/38411 (Revision 142439 caused 22_locale/locale/cons/7.cc execution test)\n\n2008-12-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/38411\n\t* testsuite/22_locale/numpunct/members/char/2.cc: Use is_IS instead\n\tof fr_FR.\n\t* testsuite/22_locale/numpunct/members/wchar_t/2.cc: Likewise.\n\t* testsuite/22_locale/locale/cons/7.cc: Likewise.\n\nFrom-SVN: r142472", "tree": {"sha": "3c33495a37236b7ad50cb4475c48b16b1ddf1fa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c33495a37236b7ad50cb4475c48b16b1ddf1fa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/118f7432dfb8f0237ca3256b8ec3e0abec54488f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118f7432dfb8f0237ca3256b8ec3e0abec54488f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/118f7432dfb8f0237ca3256b8ec3e0abec54488f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118f7432dfb8f0237ca3256b8ec3e0abec54488f/comments", "author": null, "committer": null, "parents": [{"sha": "6c6b3b2b70166343528a1c79f16c3b2755d0a1b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6b3b2b70166343528a1c79f16c3b2755d0a1b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c6b3b2b70166343528a1c79f16c3b2755d0a1b0"}], "stats": {"total": 66, "additions": 38, "deletions": 28}, "files": [{"sha": "f2820d92e66522804547827a4231dac8f2c33bd6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118f7432dfb8f0237ca3256b8ec3e0abec54488f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118f7432dfb8f0237ca3256b8ec3e0abec54488f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=118f7432dfb8f0237ca3256b8ec3e0abec54488f", "patch": "@@ -1,3 +1,11 @@\n+2008-12-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/38411\n+\t* testsuite/22_locale/numpunct/members/char/2.cc: Use is_IS instead\n+\tof fr_FR.\n+\t* testsuite/22_locale/numpunct/members/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/locale/cons/7.cc: Likewise.\n+\n 2008-12-04  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/38368"}, {"sha": "62e6c24aa5b915ce7f3cb2842982ebe957e27ab8", "filename": "libstdc++-v3/testsuite/22_locale/locale/cons/7.cc", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118f7432dfb8f0237ca3256b8ec3e0abec54488f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118f7432dfb8f0237ca3256b8ec3e0abec54488f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F7.cc?ref=118f7432dfb8f0237ca3256b8ec3e0abec54488f", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-01-19 Benjamin Kosnik <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2003, 2005 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,9 +38,9 @@ test02()\n \n   // construct a locale object with the specialized facet.\n   locale\t\tloc_c = locale::classic();\n-  locale\t\tloc_fr = locale(\"fr_FR\");\n+  locale\t\tloc_is = locale(\"is_IS\");\n   locale \t\tloc_1(locale::classic(), \n-\t\t\t      new numpunct_byname<char>(\"fr_FR\"));\n+\t\t\t      new numpunct_byname<char>(\"is_IS\"));\n \n   // check names\n   VERIFY( loc_c.name() == name_c );\n@@ -58,7 +59,7 @@ test02()\n   const numpunct<char>&\tnump_1 = use_facet<numpunct<char> >(loc_1); \n   const numpunct<char>&\tnump_2 = use_facet<numpunct<char> >(loc_2); \n   const numpunct<char>&\tnump_c = use_facet<numpunct<char> >(loc_c); \n-  const numpunct<char>&\tnump_fr = use_facet<numpunct<char> >(loc_fr); \n+  const numpunct<char>&\tnump_is = use_facet<numpunct<char> >(loc_is); \n \n   // sanity check the data is correct.\n   char dp1 = nump_c.decimal_point();\n@@ -79,11 +80,11 @@ test02()\n   string t3 = nump_2.truename();\n   string f3 = nump_2.falsename();\n \n-  char dp4 = nump_fr.decimal_point();\n-  char th4 = nump_fr.thousands_sep();\n-  string g4 = nump_fr.grouping();\n-  string t4 = nump_fr.truename();\n-  string f4 = nump_fr.falsename();\n+  char dp4 = nump_is.decimal_point();\n+  char th4 = nump_is.thousands_sep();\n+  string g4 = nump_is.grouping();\n+  string t4 = nump_is.truename();\n+  string f4 = nump_is.falsename();\n   VERIFY( dp1 != dp2 );\n   VERIFY( th1 != th2 );\n "}, {"sha": "b24579193c5fe6c99bd1b6036de7c49b1d368f5b", "filename": "libstdc++-v3/testsuite/22_locale/numpunct/members/char/2.cc", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118f7432dfb8f0237ca3256b8ec3e0abec54488f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnumpunct%2Fmembers%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118f7432dfb8f0237ca3256b8ec3e0abec54488f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnumpunct%2Fmembers%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnumpunct%2Fmembers%2Fchar%2F2.cc?ref=118f7432dfb8f0237ca3256b8ec3e0abec54488f", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-01-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2005 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,17 +35,17 @@ void test02()\n   // basic construction\n   locale loc_c = locale::classic();\n   locale loc_us = locale(\"en_US\");\n-  locale loc_fr = locale(\"fr_FR\");\n+  locale loc_is = locale(\"is_IS\");\n   locale loc_de = locale(\"de_DE\");\n   VERIFY( loc_c != loc_de );\n-  VERIFY( loc_us != loc_fr );\n+  VERIFY( loc_us != loc_is );\n   VERIFY( loc_us != loc_de );\n-  VERIFY( loc_de != loc_fr );\n+  VERIFY( loc_de != loc_is );\n \n   // cache the numpunct facets\n   const numpunct<char>& nump_c = use_facet<numpunct<char> >(loc_c); \n   const numpunct<char>& nump_us = use_facet<numpunct<char> >(loc_us); \n-  const numpunct<char>& nump_fr = use_facet<numpunct<char> >(loc_fr); \n+  const numpunct<char>& nump_is = use_facet<numpunct<char> >(loc_is); \n   const numpunct<char>& nump_de = use_facet<numpunct<char> >(loc_de); \n \n   // sanity check the data is correct.\n@@ -58,11 +59,11 @@ void test02()\n   string t2 = nump_us.truename();\n   string f2 = nump_us.falsename();\n \n-  char dp3 = nump_fr.decimal_point();\n-  char th3 = nump_fr.thousands_sep();\n-  string g3 = nump_fr.grouping();\n-  string t3 = nump_fr.truename();\n-  string f3 = nump_fr.falsename();\n+  char dp3 = nump_is.decimal_point();\n+  char th3 = nump_is.thousands_sep();\n+  string g3 = nump_is.grouping();\n+  string t3 = nump_is.truename();\n+  string f3 = nump_is.falsename();\n \n   char dp4 = nump_de.decimal_point();\n   char th4 = nump_de.thousands_sep();"}, {"sha": "ec3ff7ea508563d1105ecc2e630f53731ba25608", "filename": "libstdc++-v3/testsuite/22_locale/numpunct/members/wchar_t/2.cc", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118f7432dfb8f0237ca3256b8ec3e0abec54488f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnumpunct%2Fmembers%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118f7432dfb8f0237ca3256b8ec3e0abec54488f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnumpunct%2Fmembers%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnumpunct%2Fmembers%2Fwchar_t%2F2.cc?ref=118f7432dfb8f0237ca3256b8ec3e0abec54488f", "patch": "@@ -34,17 +34,17 @@ void test02()\n   // basic construction\n   locale loc_c = locale::classic();\n   locale loc_us = locale(\"en_US\");\n-  locale loc_fr = locale(\"fr_FR\");\n+  locale loc_is = locale(\"is_IS\");\n   locale loc_de = locale(\"de_DE\");\n   VERIFY( loc_c != loc_de );\n-  VERIFY( loc_us != loc_fr );\n+  VERIFY( loc_us != loc_is );\n   VERIFY( loc_us != loc_de );\n-  VERIFY( loc_de != loc_fr );\n+  VERIFY( loc_de != loc_is );\n \n   // cache the numpunct facets\n   const numpunct<wchar_t>& nump_c = use_facet<numpunct<wchar_t> >(loc_c); \n   const numpunct<wchar_t>& nump_us = use_facet<numpunct<wchar_t> >(loc_us); \n-  const numpunct<wchar_t>& nump_fr = use_facet<numpunct<wchar_t> >(loc_fr); \n+  const numpunct<wchar_t>& nump_is = use_facet<numpunct<wchar_t> >(loc_is); \n   const numpunct<wchar_t>& nump_de = use_facet<numpunct<wchar_t> >(loc_de); \n \n   // sanity check the data is correct.\n@@ -58,11 +58,11 @@ void test02()\n   wstring t2 = nump_us.truename();\n   wstring f2 = nump_us.falsename();\n \n-  wchar_t dp3 = nump_fr.decimal_point();\n-  wchar_t th3 = nump_fr.thousands_sep();\n-  string g3 = nump_fr.grouping();\n-  wstring t3 = nump_fr.truename();\n-  wstring f3 = nump_fr.falsename();\n+  wchar_t dp3 = nump_is.decimal_point();\n+  wchar_t th3 = nump_is.thousands_sep();\n+  string g3 = nump_is.grouping();\n+  wstring t3 = nump_is.truename();\n+  wstring f3 = nump_is.falsename();\n \n   wchar_t dp4 = nump_de.decimal_point();\n   wchar_t th4 = nump_de.thousands_sep();"}]}