{"sha": "cb69db4fe472c6b0a41ad127a950730cd2686836", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I2OWRiNGZlNDcyYzZiMGE0MWFkMTI3YTk1MDczMGNkMjY4NjgzNg==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-10-03T19:16:29Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-10-03T19:16:29Z"}, "message": "m68k.c (m68k_output_addr_const_extra): Make static.\n\n\t* config/m68k/m68k.c (m68k_output_addr_const_extra): Make static.\n\t(TARGET_OUTPUT_ADDR_CONST_EXTRA): Define.\n\t* config/m68k/m68k.h (OUTPUT_ADDR_CONST_EXTRA): Remove.\n\t* config/m68k/m68k-protos.h (m68k_output_addr_const_extra): Remove.\n\nFrom-SVN: r179474", "tree": {"sha": "afd4c32cec0bda90f31ce498cc5cacbc57d3139d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afd4c32cec0bda90f31ce498cc5cacbc57d3139d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb69db4fe472c6b0a41ad127a950730cd2686836", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb69db4fe472c6b0a41ad127a950730cd2686836", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb69db4fe472c6b0a41ad127a950730cd2686836", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb69db4fe472c6b0a41ad127a950730cd2686836/comments", "author": null, "committer": null, "parents": [{"sha": "491258e638542266cb7537181d078cc207749e1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/491258e638542266cb7537181d078cc207749e1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/491258e638542266cb7537181d078cc207749e1e"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "929dcf6b646dccd65ff891b9ff9dd14e5b70a061", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb69db4fe472c6b0a41ad127a950730cd2686836/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb69db4fe472c6b0a41ad127a950730cd2686836/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb69db4fe472c6b0a41ad127a950730cd2686836", "patch": "@@ -1,3 +1,10 @@\n+2011-10-03  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/m68k/m68k.c (m68k_output_addr_const_extra): Make static.\n+\t(TARGET_OUTPUT_ADDR_CONST_EXTRA): Define.\n+\t* config/m68k/m68k.h (OUTPUT_ADDR_CONST_EXTRA): Remove.\n+\t* config/m68k/m68k-protos.h (m68k_output_addr_const_extra): Remove.\n+\n 2011-10-03  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR target/49967"}, {"sha": "df1888628cc82c88b9ed257cd1f8743d47403477", "filename": "gcc/config/m68k/m68k-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb69db4fe472c6b0a41ad127a950730cd2686836/gcc%2Fconfig%2Fm68k%2Fm68k-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb69db4fe472c6b0a41ad127a950730cd2686836/gcc%2Fconfig%2Fm68k%2Fm68k-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-protos.h?ref=cb69db4fe472c6b0a41ad127a950730cd2686836", "patch": "@@ -51,7 +51,6 @@ extern bool strict_low_part_peephole_ok (enum machine_mode mode, rtx first_insn,\n extern int standard_68881_constant_p (rtx);\n extern void print_operand_address (FILE *, rtx);\n extern void print_operand (FILE *, rtx, int);\n-extern bool m68k_output_addr_const_extra (FILE *, rtx);\n extern void notice_update_cc (rtx, rtx);\n extern bool m68k_legitimate_base_reg_p (rtx, bool);\n extern bool m68k_legitimate_index_reg_p (rtx, bool);"}, {"sha": "e447708d239bacc81854e29ac8b4f40e0820717a", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb69db4fe472c6b0a41ad127a950730cd2686836/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb69db4fe472c6b0a41ad127a950730cd2686836/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=cb69db4fe472c6b0a41ad127a950730cd2686836", "patch": "@@ -163,6 +163,7 @@ static void m68k_function_arg_advance (cumulative_args_t, enum machine_mode,\n static rtx m68k_function_arg (cumulative_args_t, enum machine_mode,\n \t\t\t      const_tree, bool);\n static bool m68k_cannot_force_const_mem (enum machine_mode mode, rtx x);\n+static bool m68k_output_addr_const_extra (FILE *, rtx);\n \f\n /* Initialize the GCC target structure.  */\n \n@@ -297,6 +298,9 @@ static bool m68k_cannot_force_const_mem (enum machine_mode mode, rtx x);\n #undef TARGET_LEGITIMATE_CONSTANT_P\n #define TARGET_LEGITIMATE_CONSTANT_P m68k_legitimate_constant_p\n \n+#undef TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA\n+#define TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA m68k_output_addr_const_extra\n+\n static const struct attribute_spec m68k_attribute_table[] =\n {\n   /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler,\n@@ -4540,9 +4544,9 @@ m68k_get_reloc_decoration (enum m68k_reloc reloc)\n     }\n }\n \n-/* m68k implementation of OUTPUT_ADDR_CONST_EXTRA.  */\n+/* m68k implementation of TARGET_OUTPUT_ADDR_CONST_EXTRA.  */\n \n-bool\n+static bool\n m68k_output_addr_const_extra (FILE *file, rtx x)\n {\n   if (GET_CODE (x) == UNSPEC)"}, {"sha": "c8bd3eee1222f434e20ff4faacdec70d5cc20a6a", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb69db4fe472c6b0a41ad127a950730cd2686836/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb69db4fe472c6b0a41ad127a950730cd2686836/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=cb69db4fe472c6b0a41ad127a950730cd2686836", "patch": "@@ -935,12 +935,6 @@ do { if (cc_prev_status.flags & CC_IN_68881)\t\t\t\\\n \n #define PRINT_OPERAND_ADDRESS(FILE, ADDR) print_operand_address (FILE, ADDR)\n \n-#define OUTPUT_ADDR_CONST_EXTRA(FILE, X, FAIL)\t\t\\\n-do {\t\t\t\t\t\t\t\\\n-  if (! m68k_output_addr_const_extra (FILE, (X)))\t\\\n-    goto FAIL;\t\t\t\t\t\t\\\n-} while (0);\n-\n #include \"config/m68k/m68k-opts.h\"\n \n enum fpu_type"}]}