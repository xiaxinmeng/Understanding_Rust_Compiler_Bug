{"sha": "a50fbd964a31e6a011cd44ef9cc6ad3e80296396", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUwZmJkOTY0YTMxZTZhMDExY2Q0NGVmOWNjNmFkM2U4MDI5NjM5Ng==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@wrs.com", "date": "1999-12-21T06:18:22Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-12-21T06:18:22Z"}, "message": "Makefile.in (crtbegin.o, [...]): Depend on stmp-int-hdrs.\n\n        * Makefile.in (crtbegin.o, crtend.o, s-crtS): Depend on\n        stmp-int-hdrs.\n        (libgcc2.a): Similarly.\n\nFrom-SVN: r31045", "tree": {"sha": "fe375847f319f3e3527bb9b9b7404d53b947f564", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe375847f319f3e3527bb9b9b7404d53b947f564"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a50fbd964a31e6a011cd44ef9cc6ad3e80296396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50fbd964a31e6a011cd44ef9cc6ad3e80296396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a50fbd964a31e6a011cd44ef9cc6ad3e80296396", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50fbd964a31e6a011cd44ef9cc6ad3e80296396/comments", "author": null, "committer": null, "parents": [{"sha": "c6d69baca20b00af7a959cde1a3f793ef2edcb17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d69baca20b00af7a959cde1a3f793ef2edcb17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6d69baca20b00af7a959cde1a3f793ef2edcb17"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "362b65852c4aa0ccfb8a005200a6d913aa652fc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50fbd964a31e6a011cd44ef9cc6ad3e80296396/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50fbd964a31e6a011cd44ef9cc6ad3e80296396/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a50fbd964a31e6a011cd44ef9cc6ad3e80296396", "patch": "@@ -1,3 +1,9 @@\n+Mon Dec 20 23:15:36 1999  Mike Stump  <mrs@wrs.com>\n+\n+\t* Makefile.in (crtbegin.o, crtend.o, s-crtS): Depend on\n+\tstmp-int-hdrs.\n+\t(libgcc2.a): Similarly.\n+\n Mon Dec 20 23:06:47 1999  David Edelsohn  <edelsohn@gnu.org>\n \n \t* longlong.h (_ARCH_PPC): Only protect add_ssaaaa and sub_ddmmss"}, {"sha": "2138d214070921efbba32173dff456f0c6204523", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50fbd964a31e6a011cd44ef9cc6ad3e80296396/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50fbd964a31e6a011cd44ef9cc6ad3e80296396/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=a50fbd964a31e6a011cd44ef9cc6ad3e80296396", "patch": "@@ -1045,7 +1045,7 @@ libgcc2.ready: $(GCC_PASSES) $(LIBGCC2_DEPS) stmp-int-hdrs $(STMP_FIXPROTO)\n \n LIB2ADD = $(srcdir)/frame.c $(LIB2FUNCS_EXTRA) $(LANG_LIB2FUNCS)\n libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(FPBIT) $(DPBIT) $(LIB2ADD) \\\n-   $(MACHMODE_H) longlong.h frame.h gbl-ctors.h config.status\n+   $(MACHMODE_H) longlong.h frame.h gbl-ctors.h config.status stmp-int-hdrs\n # Actually build it in tmplibgcc2.a, then rename at end,\n # so that libgcc2.a itself remains nonexistent if compilation is aborted.\n \t-rm -f tmplibgcc2.a\n@@ -1263,13 +1263,13 @@ stmp-multilib-sub:\n # linked using GCC on systems using COFF or ELF, for the sake of C++\n # constructors.\n $(T)crtbegin.o: crtstuff.c $(GCC_PASSES) $(CONFIG_H) \\\n-  defaults.h frame.h gbl-ctors.h\n+  defaults.h frame.h gbl-ctors.h stmp-int-hdrs\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n \t  -finhibit-size-directive -fno-inline-functions -fno-exceptions $(CRTSTUFF_T_CFLAGS) \\\n \t  -c $(srcdir)/crtstuff.c -DCRT_BEGIN -o $(T)crtbegin$(objext)\n \n $(T)crtend.o: crtstuff.c $(GCC_PASSES) $(CONFIG_H) \\\n-  defaults.h frame.h gbl-ctors.h\n+  defaults.h frame.h gbl-ctors.h stmp-int-hdrs\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n \t  -finhibit-size-directive -fno-inline-functions -fno-exceptions $(CRTSTUFF_T_CFLAGS) \\\n \t  -c $(srcdir)/crtstuff.c -DCRT_END -o $(T)crtend$(objext)\n@@ -1279,7 +1279,7 @@ $(T)crtend.o: crtstuff.c $(GCC_PASSES) $(CONFIG_H) \\\n crtbeginS.o crtendS.o: s-crtS ; @true\n \n s-crtS: crtstuff.c $(GCC_PASSES) $(CONFIG_H) \\\n-  defaults.h frame.h gbl-ctors.h\n+  defaults.h frame.h gbl-ctors.h stmp-int-hdrs\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(CRTSTUFF_T_CFLAGS_S) \\\n \t  -DCRT_BEGIN -DCRTSTUFFS_O -finhibit-size-directive -fno-inline-functions \\\n \t  -fno-exceptions -g0 -c $(srcdir)/crtstuff.c"}]}