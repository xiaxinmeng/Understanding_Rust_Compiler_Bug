{"sha": "2fb5435af8014f687fab56254cd5779ec7588ed2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZiNTQzNWFmODAxNGY2ODdmYWI1NjI1NGNkNTc3OWVjNzU4OGVkMg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-19T13:03:32Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-19T13:03:32Z"}, "message": "Fix dumb thinko.\n\nFrom-SVN: r23181", "tree": {"sha": "05d04d63033815bc97b577ae096a643f74b10be5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05d04d63033815bc97b577ae096a643f74b10be5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fb5435af8014f687fab56254cd5779ec7588ed2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb5435af8014f687fab56254cd5779ec7588ed2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fb5435af8014f687fab56254cd5779ec7588ed2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb5435af8014f687fab56254cd5779ec7588ed2/comments", "author": null, "committer": null, "parents": [{"sha": "51d87cd905f80052041194f99839ac2df6dc4b68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51d87cd905f80052041194f99839ac2df6dc4b68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51d87cd905f80052041194f99839ac2df6dc4b68"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "5db0a9c11ece673a48bbb24fba2fb355c04d4f2f", "filename": "gcc/loop.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb5435af8014f687fab56254cd5779ec7588ed2/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb5435af8014f687fab56254cd5779ec7588ed2/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=2fb5435af8014f687fab56254cd5779ec7588ed2", "patch": "@@ -840,9 +840,9 @@ scan_loop (loop_start, end, unroll_p, bct_p)\n \t  else if (/* The set is not guaranteed to be executed one\n \t\t      the loop starts, or the value before the set is\n \t\t      needed before the set occurs... */\n-\t\t   && (maybe_never\n-\t\t       || loop_reg_used_before_p (set, p, loop_start,\n-\t\t\t\t\t\t  scan_start, end))\n+\t\t   (maybe_never\n+\t\t    || loop_reg_used_before_p (set, p, loop_start,\n+\t\t\t\t\t       scan_start, end))\n \t\t   /* And the register is used in basic blocks other\n \t\t      than the one where it is set (meaning that\n \t\t      something after this point in the loop might"}]}