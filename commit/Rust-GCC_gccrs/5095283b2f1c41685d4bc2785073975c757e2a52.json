{"sha": "5095283b2f1c41685d4bc2785073975c757e2a52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA5NTI4M2IyZjFjNDE2ODVkNGJjMjc4NTA3Mzk3NWM3NTdlMmE1Mg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2008-02-25T12:02:56Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2008-02-25T12:02:56Z"}, "message": "ifunction_logical.m4: Add casts to get rid of warnings.\n\n\t* m4/ifunction_logical.m4: Add casts to get rid of warnings.\n\t* generated/all_l1.c: Regenerate.\n\t* generated/all_l2.c: Regenerate.\n\t* generated/all_l4.c: Regenerate.\n\t* generated/all_l8.c: Regenerate.\n\t* generated/all_l16.c: Regenerate.\n\t* generated/any_l1.c: Regenerate.\n\t* generated/any_l2.c: Regenerate.\n\t* generated/any_l4.c: Regenerate.\n\t* generated/any_l8.c: Regenerate.\n\t* generated/any_l16.c: Regenerate.\n\t* generated/count_1_l.c: Regenerate.\n\t* generated/count_2_l.c: Regenerate.\n\t* generated/count_4_l.c: Regenerate.\n\t* generated/count_8_l.c: Regenerate.\n\t* generated/count_16_l.c: Regenerate.\n\nFrom-SVN: r132619", "tree": {"sha": "c455f08089c0afe6f9e99ba132bb403a14bbc8fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c455f08089c0afe6f9e99ba132bb403a14bbc8fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5095283b2f1c41685d4bc2785073975c757e2a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5095283b2f1c41685d4bc2785073975c757e2a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5095283b2f1c41685d4bc2785073975c757e2a52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5095283b2f1c41685d4bc2785073975c757e2a52/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98266db06cfe6cdf30e6e6052f056ec1277b49ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98266db06cfe6cdf30e6e6052f056ec1277b49ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98266db06cfe6cdf30e6e6052f056ec1277b49ce"}], "stats": {"total": 99, "additions": 67, "deletions": 32}, "files": [{"sha": "94c5c672c723416be1b525148d05ae83f2f57524", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -1,3 +1,22 @@\n+2008-02-25  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* m4/ifunction_logical.m4: Add casts to get rid of warnings.\n+\t* generated/all_l1.c: Regenerate.\n+\t* generated/all_l2.c: Regenerate.\n+\t* generated/all_l4.c: Regenerate.\n+\t* generated/all_l8.c: Regenerate.\n+\t* generated/all_l16.c: Regenerate.\n+\t* generated/any_l1.c: Regenerate.\n+\t* generated/any_l2.c: Regenerate.\n+\t* generated/any_l4.c: Regenerate.\n+\t* generated/any_l8.c: Regenerate.\n+\t* generated/any_l16.c: Regenerate.\n+\t* generated/count_1_l.c: Regenerate.\n+\t* generated/count_2_l.c: Regenerate.\n+\t* generated/count_4_l.c: Regenerate.\n+\t* generated/count_8_l.c: Regenerate.\n+\t* generated/count_16_l.c: Regenerate.\n+\n 2008-02-24  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR libfortran/32841"}, {"sha": "385726af3994c95b0cf04979e4176221ea21e8cc", "filename": "libgfortran/generated/all_l1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fall_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fall_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l1.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ all_l1 (gfc_array_l1 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" ALL intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" ALL intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "fd6a9f0b7156e7cb8de35083aa84d55e8d4fbb20", "filename": "libgfortran/generated/all_l16.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fall_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fall_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l16.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ all_l16 (gfc_array_l16 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" ALL intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" ALL intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "16b4ec94ea1dabcc5b7f301d79105ce9bf3d9ca3", "filename": "libgfortran/generated/all_l2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fall_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fall_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l2.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ all_l2 (gfc_array_l2 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" ALL intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" ALL intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "ef8bdcdddbae45ade0728f48f4c46fc0a67034c7", "filename": "libgfortran/generated/all_l4.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fall_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fall_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l4.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ all_l4 (gfc_array_l4 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" ALL intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" ALL intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "8e7a659a2832b797de4312343a663b68d84adae5", "filename": "libgfortran/generated/all_l8.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fall_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fall_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l8.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ all_l8 (gfc_array_l8 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" ALL intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" ALL intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "8975438ae59b6e2ca6af7aff6e8b80bd66d8fd13", "filename": "libgfortran/generated/any_l1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fany_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fany_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l1.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ any_l1 (gfc_array_l1 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" ANY intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" ANY intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "060a4b82127723bf00a3db776717fa42a2b24708", "filename": "libgfortran/generated/any_l16.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fany_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fany_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l16.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ any_l16 (gfc_array_l16 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" ANY intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" ANY intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "73db5aea082de39db7f94c03ce49d18abc588420", "filename": "libgfortran/generated/any_l2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fany_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fany_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l2.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ any_l2 (gfc_array_l2 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" ANY intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" ANY intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "3e239cab10680ffff3fc807cb228cad133d21044", "filename": "libgfortran/generated/any_l4.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fany_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fany_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l4.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ any_l4 (gfc_array_l4 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" ANY intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" ANY intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "3ea80dd3e315562cf04e6ee5b25b0699e4c369b1", "filename": "libgfortran/generated/any_l8.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fany_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fany_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l8.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ any_l8 (gfc_array_l8 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" ANY intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" ANY intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "654c5495dec4f32e8c2f1d10c9039d5322b22370", "filename": "libgfortran/generated/count_16_l.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fcount_16_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fcount_16_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_16_l.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ count_16_l (gfc_array_i16 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" COUNT intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" COUNT intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "ab2d0eac21adb2bb2f10ca5d67a928c29b9d7872", "filename": "libgfortran/generated/count_1_l.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fcount_1_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fcount_1_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_1_l.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ count_1_l (gfc_array_i1 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" COUNT intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" COUNT intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "bb29d4f3c4f5688f77d14e1cb496c365df639d8c", "filename": "libgfortran/generated/count_2_l.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fcount_2_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fcount_2_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_2_l.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ count_2_l (gfc_array_i2 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" COUNT intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" COUNT intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "82926bd522eabdccace3f1559f7951ccd6f5b4a8", "filename": "libgfortran/generated/count_4_l.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fcount_4_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fcount_4_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ count_4_l (gfc_array_i4 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" COUNT intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" COUNT intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "9cb094f81cd0447ffa643c53e316f2bffc85d6a7", "filename": "libgfortran/generated/count_8_l.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fcount_8_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fgenerated%2Fcount_8_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l.c?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -119,8 +119,9 @@ count_8_l (gfc_array_i8 * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" COUNT intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" COUNT intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}, {"sha": "8666870c88e0c5c80cae35047f1dda3f4a27fcde", "filename": "libgfortran/m4/ifunction_logical.m4", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fm4%2Fifunction_logical.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5095283b2f1c41685d4bc2785073975c757e2a52/libgfortran%2Fm4%2Fifunction_logical.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fifunction_logical.m4?ref=5095283b2f1c41685d4bc2785073975c757e2a52", "patch": "@@ -102,8 +102,9 @@ name`'rtype_qual`_'atype_code (rtype * const restrict retarray,\n     {\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in\"\n-\t\t       \" u_name intrinsic: is %d, should be %d\",\n-\t\t       GFC_DESCRIPTOR_RANK (retarray), rank);\n+\t\t       \" u_name intrinsic: is %ld, should be %ld\",\n+\t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n+\t\t       (long int) rank);\n \n       if (compile_options.bounds_check)\n \t{"}]}