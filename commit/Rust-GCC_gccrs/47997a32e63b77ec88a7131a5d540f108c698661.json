{"sha": "47997a32e63b77ec88a7131a5d540f108c698661", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc5OTdhMzJlNjNiNzdlYzg4YTcxMzFhNWQ1NDBmMTA4YzY5ODY2MQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-09-07T21:16:37Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-09-08T14:49:05Z"}, "message": "analyzer: fix ICE on machine-specific builtins [PR96962]\n\nIn g:ee7bfbe5eb70a23bbf3a2cedfdcbd2ea1a20c3f2 I added a\n  switch (DECL_UNCHECKED_FUNCTION_CODE (callee_fndecl))\nto region_model::on_call_pre guarded by\n  fndecl_built_in_p (callee_fndecl).\nI meant to handle only normal built-ins, whereas this\nsingle-argument overload of fndecl_built_in_p returns true for any\nkind of built-in.\n\nPR analyzer/96962 reports a case where this matches for a\nmachine-specific builtin, leading to an ICE.  Fixed thusly.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/96962\n\t* region-model.cc (region_model::on_call_pre): Fix guard on switch\n\ton built-ins to only consider BUILT_IN_NORMAL, rather than other\n\tkinds of build-ins.", "tree": {"sha": "dc2f7b610852d37f05a40a0a8dbd2efb3de58487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc2f7b610852d37f05a40a0a8dbd2efb3de58487"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47997a32e63b77ec88a7131a5d540f108c698661", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47997a32e63b77ec88a7131a5d540f108c698661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47997a32e63b77ec88a7131a5d540f108c698661", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47997a32e63b77ec88a7131a5d540f108c698661/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19b0fed7c2d3663f0f144ca8557b6af29bafa4e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19b0fed7c2d3663f0f144ca8557b6af29bafa4e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19b0fed7c2d3663f0f144ca8557b6af29bafa4e3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e6a9d3cacd83b45dcc71464ab84ffd5acab6c189", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47997a32e63b77ec88a7131a5d540f108c698661/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47997a32e63b77ec88a7131a5d540f108c698661/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=47997a32e63b77ec88a7131a5d540f108c698661", "patch": "@@ -653,7 +653,7 @@ region_model::on_call_pre (const gcall *call, region_model_context *ctxt)\n \t Having them split out into separate functions makes it easier\n \t to put breakpoints on the handling of specific functions.  */\n \n-      if (fndecl_built_in_p (callee_fndecl)\n+      if (fndecl_built_in_p (callee_fndecl, BUILT_IN_NORMAL)\n \t  && gimple_builtin_call_types_compatible_p (call, callee_fndecl))\n \tswitch (DECL_UNCHECKED_FUNCTION_CODE (callee_fndecl))\n \t  {"}]}