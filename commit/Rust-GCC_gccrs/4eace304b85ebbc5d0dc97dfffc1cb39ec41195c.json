{"sha": "4eace304b85ebbc5d0dc97dfffc1cb39ec41195c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVhY2UzMDRiODVlYmJjNWQwZGM5N2RmZmZjMWNiMzllYzQxMTk1Yw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-11-17T04:44:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-11-17T04:44:27Z"}, "message": "Copy ALIAS_SET_MEMORY_BARRIER when creating a new MEM for atomic ops.\n\n\t* config/alpha/alpha.c (alpha_split_compare_and_swap_12): Copy\n\tALIAS_SET_MEMORY_BARRIER when creating a new memory.\n\t(alpha_split_atomic_exchange_12): Likewise.\n\t* config/rs6000/rs6000.c (rs6000_adjust_atomic_subword): Likewise.\n\nFrom-SVN: r181436", "tree": {"sha": "bafca9114028fee3937d025053f4e61baa2858cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bafca9114028fee3937d025053f4e61baa2858cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4eace304b85ebbc5d0dc97dfffc1cb39ec41195c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eace304b85ebbc5d0dc97dfffc1cb39ec41195c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eace304b85ebbc5d0dc97dfffc1cb39ec41195c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eace304b85ebbc5d0dc97dfffc1cb39ec41195c/comments", "author": null, "committer": null, "parents": [{"sha": "00449933e6832a4a21de8b0f8dd2c8888c636222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00449933e6832a4a21de8b0f8dd2c8888c636222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00449933e6832a4a21de8b0f8dd2c8888c636222"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "1d734149ba4ebbc64c07e511b6df733c2eb7f100", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eace304b85ebbc5d0dc97dfffc1cb39ec41195c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eace304b85ebbc5d0dc97dfffc1cb39ec41195c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4eace304b85ebbc5d0dc97dfffc1cb39ec41195c", "patch": "@@ -1,3 +1,10 @@\n+2011-11-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.c (alpha_split_compare_and_swap_12): Copy\n+\tALIAS_SET_MEMORY_BARRIER when creating a new memory.\n+\t(alpha_split_atomic_exchange_12): Likewise.\n+\t* config/rs6000/rs6000.c (rs6000_adjust_atomic_subword): Likewise.\n+\n 2011-11-16  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/i386/i386elf.h (PREFERRED_DEBUGGING_TYPE): Remove."}, {"sha": "e970227dc4cb0517d387ece0da7646bf113442ae", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eace304b85ebbc5d0dc97dfffc1cb39ec41195c/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eace304b85ebbc5d0dc97dfffc1cb39ec41195c/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=4eace304b85ebbc5d0dc97dfffc1cb39ec41195c", "patch": "@@ -4444,6 +4444,8 @@ alpha_split_compare_and_swap_12 (rtx operands[])\n \n   mem = gen_rtx_MEM (DImode, align);\n   MEM_VOLATILE_P (mem) = MEM_VOLATILE_P (orig_mem);\n+  if (MEM_ALIAS_SET (orig_mem) == ALIAS_SET_MEMORY_BARRIER)\n+    set_mem_alias_set (mem, ALIAS_SET_MEMORY_BARRIER);\n \n   alpha_pre_atomic_barrier (mod_s);\n \n@@ -4583,6 +4585,8 @@ alpha_split_atomic_exchange_12 (rtx operands[])\n \n   mem = gen_rtx_MEM (DImode, align);\n   MEM_VOLATILE_P (mem) = MEM_VOLATILE_P (orig_mem);\n+  if (MEM_ALIAS_SET (orig_mem) == ALIAS_SET_MEMORY_BARRIER)\n+    set_mem_alias_set (mem, ALIAS_SET_MEMORY_BARRIER);\n \n   alpha_pre_atomic_barrier (model);\n "}, {"sha": "89c2ea088b7ba6574e78a775f2f17cc77e977ec7", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eace304b85ebbc5d0dc97dfffc1cb39ec41195c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eace304b85ebbc5d0dc97dfffc1cb39ec41195c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=4eace304b85ebbc5d0dc97dfffc1cb39ec41195c", "patch": "@@ -17244,16 +17244,16 @@ rs6000_post_atomic_barrier (enum memmodel model)\n    which to shift and mask.  */\n \n static rtx\n-rs6000_adjust_atomic_subword (rtx mem, rtx *pshift, rtx *pmask)\n+rs6000_adjust_atomic_subword (rtx orig_mem, rtx *pshift, rtx *pmask)\n {\n-  rtx addr, align, shift, mask;\n+  rtx addr, align, shift, mask, mem;\n   HOST_WIDE_INT shift_mask;\n-  enum machine_mode mode = GET_MODE (mem);\n+  enum machine_mode mode = GET_MODE (orig_mem);\n \n   /* For smaller modes, we have to implement this via SImode.  */\n   shift_mask = (mode == QImode ? 0x18 : 0x10);\n \n-  addr = XEXP (mem, 0);\n+  addr = XEXP (orig_mem, 0);\n   addr = force_reg (GET_MODE (addr), addr);\n \n   /* Aligned memory containing subword.  Generate a new memory.  We\n@@ -17262,7 +17262,9 @@ rs6000_adjust_atomic_subword (rtx mem, rtx *pshift, rtx *pmask)\n   align = expand_simple_binop (Pmode, AND, addr, GEN_INT (-4),\n \t\t\t       NULL_RTX, 1, OPTAB_LIB_WIDEN);\n   mem = gen_rtx_MEM (SImode, align);\n-  MEM_VOLATILE_P (mem) = 1;\n+  MEM_VOLATILE_P (mem) = MEM_VOLATILE_P (orig_mem);\n+  if (MEM_ALIAS_SET (orig_mem) == ALIAS_SET_MEMORY_BARRIER)\n+    set_mem_alias_set (mem, ALIAS_SET_MEMORY_BARRIER);\n \n   /* Shift amount for subword relative to aligned word.  */\n   shift = gen_reg_rtx (SImode);"}]}