{"sha": "2d3c7e4f2d3c39f0ff5f0bcf0c5d97e0d7a893dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQzYzdlNGYyZDNjMzlmMGZmNWYwYmNmMGM1ZDk3ZTBkN2E4OTNkYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-01-04T09:50:33Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-01-04T09:50:33Z"}, "message": "trans.c (Case_Statement_to_gnu): Put the SLOC of the end-of-case on the end label and its associated gotos, if any.\n\n\t* gcc-interface/trans.c (Case_Statement_to_gnu): Put the SLOC of the\n\tend-of-case on the end label and its associated gotos, if any.\n\nFrom-SVN: r168458", "tree": {"sha": "8f2d336054a316aa0401e0ec52b1adf9c9982266", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f2d336054a316aa0401e0ec52b1adf9c9982266"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d3c7e4f2d3c39f0ff5f0bcf0c5d97e0d7a893dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d3c7e4f2d3c39f0ff5f0bcf0c5d97e0d7a893dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d3c7e4f2d3c39f0ff5f0bcf0c5d97e0d7a893dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d3c7e4f2d3c39f0ff5f0bcf0c5d97e0d7a893dc/comments", "author": null, "committer": null, "parents": [{"sha": "0394741f9b89489efdd72c95fae7d2867065a72b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0394741f9b89489efdd72c95fae7d2867065a72b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0394741f9b89489efdd72c95fae7d2867065a72b"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "68446aca7474faf5bfd7ab65700425d556cc94f9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d3c7e4f2d3c39f0ff5f0bcf0c5d97e0d7a893dc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d3c7e4f2d3c39f0ff5f0bcf0c5d97e0d7a893dc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2d3c7e4f2d3c39f0ff5f0bcf0c5d97e0d7a893dc", "patch": "@@ -1,3 +1,8 @@\n+2011-01-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Case_Statement_to_gnu): Put the SLOC of the\n+\tend-of-case on the end label and its associated gotos, if any.\n+\n 2011-01-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (Subprogram_Body_to_gnu): Evaluate the"}, {"sha": "30dbf7a969a822c4d23182f820f17c25d04e2b05", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d3c7e4f2d3c39f0ff5f0bcf0c5d97e0d7a893dc/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d3c7e4f2d3c39f0ff5f0bcf0c5d97e0d7a893dc/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=2d3c7e4f2d3c39f0ff5f0bcf0c5d97e0d7a893dc", "patch": "@@ -1954,6 +1954,7 @@ Case_Statement_to_gnu (Node_Id gnat_node)\n {\n   tree gnu_result, gnu_expr, gnu_label;\n   Node_Id gnat_when;\n+  location_t end_locus;\n   bool may_fallthru = false;\n \n   gnu_expr = gnat_to_gnu (Expression (gnat_node));\n@@ -1977,7 +1978,10 @@ Case_Statement_to_gnu (Node_Id gnat_node)\n \n   /* We build a SWITCH_EXPR that contains the code with interspersed\n      CASE_LABEL_EXPRs for each label.  */\n-  gnu_label = create_artificial_label (input_location);\n+  if (!Sloc_to_locus (Sloc (gnat_node) + UI_To_Int (End_Span (gnat_node)),\n+      &end_locus))\n+    end_locus = input_location;\n+  gnu_label = create_artificial_label (end_locus);\n   start_stmt_group ();\n \n   for (gnat_when = First_Non_Pragma (Alternatives (gnat_node));\n@@ -2062,7 +2066,9 @@ Case_Statement_to_gnu (Node_Id gnat_node)\n \t  add_stmt (group);\n \t  if (group_may_fallthru)\n \t    {\n-\t      add_stmt (build1 (GOTO_EXPR, void_type_node, gnu_label));\n+\t      tree stmt = build1 (GOTO_EXPR, void_type_node, gnu_label);\n+\t      SET_EXPR_LOCATION (stmt, end_locus);\n+\t      add_stmt (stmt);\n \t      may_fallthru = true;\n \t    }\n \t}"}]}