{"sha": "550880a31688f1031a21efe7923c86db423cbbf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUwODgwYTMxNjg4ZjEwMzFhMjFlZmU3OTIzYzg2ZGI0MjNjYmJmMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-23T21:45:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-23T21:45:56Z"}, "message": "c++: Fix up floating point complex handling in build_zero_init_1 [PR98353]\n\nWhile the gimplifier patch I've just committed fixed an ICE, in some cases\nlike on the committed testcase cp folding doesn't happen after\nbuild_zero_init_1 because it is called already during gimplification.\n\nFor the scalar types, if we want to use convert, the problem with complex floats\nis that it returns a COMPLEX_EXPR with FLOAT_EXPR arguments which have\nINTEGER_CST 0 as argument.  As fold isn't recursive, it doesn't do anything\nin that case, we need to first fold those FLOAT_EXPRs to REAL_CST 0.0 and\nonly afterwards the COMPLEX_EXPR can be folded into COMPLEX_CST with 0.0\narguments.\n\nThis patch instead just uses build_zero_cst that creates the zero constant for\nany scalar types (and more) directly, instead of going through multiple hops.\n\n2020-12-23  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/98353\n\t* init.c (build_zero_init_1): Use build_zero_cst for SCALAR_TYPE_P\n\tzero initializers.", "tree": {"sha": "f63dfaf4fe5d40e2c682acc3536d7296af75f10d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f63dfaf4fe5d40e2c682acc3536d7296af75f10d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/550880a31688f1031a21efe7923c86db423cbbf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550880a31688f1031a21efe7923c86db423cbbf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/550880a31688f1031a21efe7923c86db423cbbf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550880a31688f1031a21efe7923c86db423cbbf1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b7d53a25933f4aed71d6d5134e971bd995f8973", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b7d53a25933f4aed71d6d5134e971bd995f8973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b7d53a25933f4aed71d6d5134e971bd995f8973"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "903d17fedc634a878692f16849c5ca6f79ba535c", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/550880a31688f1031a21efe7923c86db423cbbf1/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/550880a31688f1031a21efe7923c86db423cbbf1/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=550880a31688f1031a21efe7923c86db423cbbf1", "patch": "@@ -187,7 +187,7 @@ build_zero_init_1 (tree type, tree nelts, bool static_storage_p,\n   else if (NULLPTR_TYPE_P (type))\n     init = build_int_cst (type, 0);\n   else if (SCALAR_TYPE_P (type))\n-    init = fold (convert (type, integer_zero_node));\n+    init = build_zero_cst (type);\n   else if (RECORD_OR_UNION_CODE_P (TREE_CODE (type)))\n     {\n       tree field;"}]}