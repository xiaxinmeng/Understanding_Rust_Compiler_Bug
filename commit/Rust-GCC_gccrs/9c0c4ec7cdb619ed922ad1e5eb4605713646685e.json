{"sha": "9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMwYzRlYzdjZGI2MTllZDkyMmFkMWU1ZWI0NjA1NzEzNjQ2Njg1ZQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-12-09T16:58:32Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-12-09T16:58:32Z"}, "message": "netware.h (TARGET_POSIX_IO): Define.\n\n\t* config/i386/netware.h (TARGET_POSIX_IO): Define.\n\t* config/i386/nto.h (TARGET_POSIX_IO): Define.\n\t* config/ia64/hpux.h (TARGET_POSIX_IO): Define.\n\t* config/moxie/moxie.h (TARGET_POSIX_IO): Don't undefine.\n\t* config/openbsd.h (TARGET_POSIX_IO): Define.\n\t* config/rtems.h (TARGET_POSIX_IO): Define.\n\t* config/sh/embed-elf.h (TARGET_POSIX_IO): Don't undefine.\n\t* config/sol2.h (TARGET_POSIX_IO): Define.\n\t* config/svr4.h (TARGET_POSIX_IO): Don't define.\n\t* config/vxworksae.h (TARGET_POSIX_IO): Define.\n\nFrom-SVN: r167648", "tree": {"sha": "ebf560b377323f3a8116c05a8c9b24e937bb6834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebf560b377323f3a8116c05a8c9b24e937bb6834"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72b7f7eaf31282b345ccb4acaa9be52777b5f83c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b7f7eaf31282b345ccb4acaa9be52777b5f83c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b7f7eaf31282b345ccb4acaa9be52777b5f83c"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "29c1c32ba83e36142900cb90aa49e9c9f2ba47c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "patch": "@@ -1,3 +1,16 @@\n+2010-12-09  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/i386/netware.h (TARGET_POSIX_IO): Define.\n+\t* config/i386/nto.h (TARGET_POSIX_IO): Define.\n+\t* config/ia64/hpux.h (TARGET_POSIX_IO): Define.\n+\t* config/moxie/moxie.h (TARGET_POSIX_IO): Don't undefine.\n+\t* config/openbsd.h (TARGET_POSIX_IO): Define.\n+\t* config/rtems.h (TARGET_POSIX_IO): Define.\n+\t* config/sh/embed-elf.h (TARGET_POSIX_IO): Don't undefine.\n+\t* config/sol2.h (TARGET_POSIX_IO): Define.\n+\t* config/svr4.h (TARGET_POSIX_IO): Don't define.\n+\t* config/vxworksae.h (TARGET_POSIX_IO): Define.\n+\n 2010-12-09  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/i386/nto.h (MD_EXEC_PREFIX, MD_STARTFILE_PREFIX): Define."}, {"sha": "4b5e31f1462e7f70d6bfcc467ad5f085d5b4c7ed", "filename": "gcc/config/i386/netware.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fi386%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fi386%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetware.h?ref=9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "patch": "@@ -165,3 +165,5 @@ const char *i386_nlm_strip_name_encoding (const char *);\n #define TARGET_MANGLE_DECL_ASSEMBLER_NAME i386_nlm_mangle_decl_assembler_name\n #undef  TARGET_STRIP_NAME_ENCODING\n #define TARGET_STRIP_NAME_ENCODING  i386_nlm_strip_name_encoding\n+\n+#define TARGET_POSIX_IO"}, {"sha": "9a4cdec75087049752c8a5d47bb36545e31c6936", "filename": "gcc/config/i386/nto.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fi386%2Fnto.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fi386%2Fnto.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnto.h?ref=9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "patch": "@@ -98,3 +98,4 @@ crti.o%s \\\n \n #define NO_IMPLICIT_EXTERN_C 1\n \n+#define TARGET_POSIX_IO"}, {"sha": "d4d8da57673910fcb257322f002ae183197d0300", "filename": "gcc/config/ia64/hpux.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fia64%2Fhpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fia64%2Fhpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fhpux.h?ref=9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "patch": "@@ -231,3 +231,5 @@ do {\t\t\t\t\t\t\t\t\\\n    .text.hot.  */\n \n #define TARGET_ASM_FUNCTION_SECTION ia64_hpux_function_section\n+\n+#define TARGET_POSIX_IO"}, {"sha": "eae86cc67e8787f2f276f8bec597580d4087e347", "filename": "gcc/config/moxie/moxie.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.h?ref=9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "patch": "@@ -21,12 +21,6 @@\n #ifndef GCC_MOXIE_H\n #define GCC_MOXIE_H\n \n-/* This is defined by svr4.h, which is included prior to this file.\n-   However, we should undefine it for moxie-elf, since we don't provide\n-   functions like access() and mkdir() in newlib.  This will have to\n-   be defined again for a Linux port.  */\n-#undef TARGET_POSIX_IO\n-\n /* Another C string constant used much like `LINK_SPEC'.  The difference\n    between the two is that `STARTFILE_SPEC' is used at the very beginning of\n    the command given to the linker."}, {"sha": "d4037c36b8612afffc78aad90d4af4cca53e2804", "filename": "gcc/config/openbsd.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd.h?ref=9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "patch": "@@ -144,6 +144,7 @@ while (0)\n #define LIB_SPEC OBSD_LIB_SPEC\n #endif\n \n+#define TARGET_POSIX_IO\n \f\n /* Runtime target specification.  */\n "}, {"sha": "869b14b56d422f393a8556540a94cd33b8cdc239", "filename": "gcc/config/rtems.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frtems.h?ref=9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "patch": "@@ -40,3 +40,5 @@ along with GCC; see the file COPYING3.  If not see\n \"%{!nostdlib: %{qrtems: --start-group \\\n  -lrtemsbsp -lrtemscpu \\\n  -lc -lgcc --end-group %{!qnolinkcmds: -T linkcmds%s}}}\"\n+\n+#define TARGET_POSIX_IO"}, {"sha": "c84ae08b3ad1f7a71e44548871ac7f63302d1396", "filename": "gcc/config/sh/embed-elf.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fsh%2Fembed-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fsh%2Fembed-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fembed-elf.h?ref=9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "patch": "@@ -22,8 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef USER_LABEL_PREFIX\n #define USER_LABEL_PREFIX \"_\"\n \n-#undef TARGET_POSIX_IO\n-\n /* While the speed-optimized implementations of udivsi3_i4i / sdivsi3_i4i\n    in libgcc are not available for SH2, the space-optimized ones in\n    libgcc-Os-4-200 are.  Thus, when not optimizing for space, link"}, {"sha": "e7fe4673e6e81d1d6b3e3f207d6642b9a24db16a", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "patch": "@@ -310,3 +310,5 @@ extern GTY(()) tree solaris_pending_finis;\n \n /* Allow macro expansion in #pragma pack.  */\n #define HANDLE_PRAGMA_PACK_WITH_EXPANSION\n+\n+#define TARGET_POSIX_IO"}, {"sha": "49bb9da601435fbb32dedb2411cdba5263405d1c", "filename": "gcc/config/svr4.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fsvr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fsvr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr4.h?ref=9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "patch": "@@ -175,5 +175,3 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n-\n-#define TARGET_POSIX_IO"}, {"sha": "6e1efa93c403ecdfe1639c8df4ff9b8918096cb7", "filename": "gcc/config/vxworksae.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fvxworksae.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c0c4ec7cdb619ed922ad1e5eb4605713646685e/gcc%2Fconfig%2Fvxworksae.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworksae.h?ref=9c0c4ec7cdb619ed922ad1e5eb4605713646685e", "patch": "@@ -56,6 +56,9 @@ along with GCC; see the file COPYING3.  If not see\n \n #define VXWORKS_KIND VXWORKS_KIND_AE\n \n+/* Both kernels and RTPs have the facilities required by this macro.  */\n+#define TARGET_POSIX_IO\n+\n /* A VxWorks 653 implementation of TARGET_OS_CPP_BUILTINS.  */\n #define VXWORKS_OS_CPP_BUILTINS()                                       \\\n   do                                                                    \\"}]}