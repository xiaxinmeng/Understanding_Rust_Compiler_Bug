{"sha": "6491eb15e1824b543f60a7ba391f9ac497accbce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ5MWViMTVlMTgyNGI1NDNmNjBhN2JhMzkxZjlhYzQ5N2FjY2JjZQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2005-03-31T18:34:19Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2005-03-31T18:34:19Z"}, "message": "nothrow1.C: Use cleanup-tree-dump.\n\n\t* g++.dg/opt/nothrow1.C: Use cleanup-tree-dump.\n\tg++.dg/tree-ssa/empty-1.C, g++.dg/tree-ssa/nothrow-1.C,\n\tg++.dg/tree-ssa/pointer-reference-alias.C,\n\tg++.dg/tree-ssa/pr15791-3.C, g++.dg/tree-ssa/pr15791-4.C,\n\tg++.dg/tree-ssa/pr15791-5.C, g++.dg/tree-ssa/ssa-cast-1.C\n\tg++.dg/tree-ssa/ssa-sra-1.C, g++.dg/tree-ssa/ssa-sra-2.C: Ditto\n\tg++.dg/vect/pr19951.cc: Ditto.\n\t* gcc.dg/builtins-43.c, gcc.dg/builtins-44.c, gcc.dg/builtins-45.c,\n\tgcc.dg/builtins-47.c: Ditto.\n\t* gcc.dg/pr15784-1.c, gcc.dg/pr15784-2.c, gcc.dg/pr15784-3.c,\n\tgcc.dg/pr20115-1.c: Ditto.\n\t* gcc.dg/tree-ssa/20030530-2.c,\n\tgcc.dg/tree-ssa/20030611-1.c, gcc.dg/tree-ssa/20030703-1.c,\n\tgcc.dg/tree-ssa/20030703-2.c, gcc.dg/tree-ssa/20030708-1.c,\n\tgcc.dg/tree-ssa/20030709-1.c, gcc.dg/tree-ssa/20030709-2.c,\n\tgcc.dg/tree-ssa/20030709-3.c, gcc.dg/tree-ssa/20030710-1.c,\n\tgcc.dg/tree-ssa/20030711-1.c, gcc.dg/tree-ssa/20030711-2.c,\n\tgcc.dg/tree-ssa/20030711-3.c, gcc.dg/tree-ssa/20030714-1.c,\n\tgcc.dg/tree-ssa/20030714-2.c, gcc.dg/tree-ssa/20030728-1.c,\n\tgcc.dg/tree-ssa/20030729-1.c, gcc.dg/tree-ssa/20030730-1.c,\n\tgcc.dg/tree-ssa/20030730-2.c, gcc.dg/tree-ssa/20030731-1.c,\n\tgcc.dg/tree-ssa/20030731-2.c, gcc.dg/tree-ssa/20030807-1.c,\n\tgcc.dg/tree-ssa/20030807-10.c, gcc.dg/tree-ssa/20030807-11.c,\n\tgcc.dg/tree-ssa/20030807-2.c, gcc.dg/tree-ssa/20030807-3.c,\n\tgcc.dg/tree-ssa/20030807-5.c, gcc.dg/tree-ssa/20030807-6.c,\n\tgcc.dg/tree-ssa/20030807-7.c, gcc.dg/tree-ssa/20030807-8.c,\n\tgcc.dg/tree-ssa/20030807-9.c, gcc.dg/tree-ssa/20030808-1.c,\n\tgcc.dg/tree-ssa/20030814-1.c, gcc.dg/tree-ssa/20030814-2.c,\n\tgcc.dg/tree-ssa/20030814-3.c, gcc.dg/tree-ssa/20030814-4.c,\n\tgcc.dg/tree-ssa/20030814-5.c, gcc.dg/tree-ssa/20030814-6.c,\n\tgcc.dg/tree-ssa/20030814-7.c, gcc.dg/tree-ssa/20030815-1.c,\n\tgcc.dg/tree-ssa/20030824-1.c,\n\tgcc.dg/tree-ssa/20030824-2.c, gcc.dg/tree-ssa/20030825-1.c,\n\tgcc.dg/tree-ssa/20030907-1.c, gcc.dg/tree-ssa/20030917-1.c,\n\tgcc.dg/tree-ssa/20030917-3.c, gcc.dg/tree-ssa/20030922-1.c,\n\tgcc.dg/tree-ssa/20030922-2.c, gcc.dg/tree-ssa/20031015-1.c,\n\tgcc.dg/tree-ssa/20031021-1.c, gcc.dg/tree-ssa/20031022-1.c,\n\tgcc.dg/tree-ssa/20031106-1.c, gcc.dg/tree-ssa/20031106-2.c,\n\tgcc.dg/tree-ssa/20031106-3.c, gcc.dg/tree-ssa/20031106-4.c,\n\tgcc.dg/tree-ssa/20031106-5.c, gcc.dg/tree-ssa/20031106-6.c,\n\tgcc.dg/tree-ssa/20031216-1.c, gcc.dg/tree-ssa/20040204-1.c,\n\tgcc.dg/tree-ssa/20040210-1.c, gcc.dg/tree-ssa/20040211-1.c,\n\tgcc.dg/tree-ssa/20040216-1.c, gcc.dg/tree-ssa/20040305-1.c,\n\tgcc.dg/tree-ssa/20040430-1.c, gcc.dg/tree-ssa/20040513-1.c,\n\tgcc.dg/tree-ssa/20040513-2.c, gcc.dg/tree-ssa/20040514-1.c,\n\tgcc.dg/tree-ssa/20040514-2.c, gcc.dg/tree-ssa/20040517-1.c,\n\tgcc.dg/tree-ssa/20040518-1.c, gcc.dg/tree-ssa/20040518-2.c,\n\tgcc.dg/tree-ssa/20040615-1.c, gcc.dg/tree-ssa/20040624-1.c,\n\tgcc.dg/tree-ssa/20040703-1.c, gcc.dg/tree-ssa/20040721-1.c,\n\tgcc.dg/tree-ssa/20040729-1.c, gcc.dg/tree-ssa/20040911-1.c,\n\tgcc.dg/tree-ssa/20041002-1.c, gcc.dg/tree-ssa/20041122-1.c,\n\tgcc.dg/tree-ssa/20050128-1.c, gcc.dg/tree-ssa/20050215-1.c,\n\tgcc.dg/tree-ssa/asm-1.c, gcc.dg/tree-ssa/asm-2.c,\n\tgcc.dg/tree-ssa/asm-3.c, gcc.dg/tree-ssa/cfgcleanup-1.c,\n\tgcc.dg/tree-ssa/complex-1.c, gcc.dg/tree-ssa/complex-2.c,\n\tgcc.dg/tree-ssa/copy-headers.c, gcc.dg/tree-ssa/ifc-20040816-1.c,\n\tgcc.dg/tree-ssa/ifc-20040816-2.c, gcc.dg/tree-ssa/inline_asm-1.c,\n\tgcc.dg/tree-ssa/inline_asm-2.c, gcc.dg/tree-ssa/loop-1.c,\n\tgcc.dg/tree-ssa/loop-2.c, gcc.dg/tree-ssa/loop-3.c,\n\tgcc.dg/tree-ssa/loop-4.c, gcc.dg/tree-ssa/loop-5.c,\n\tgcc.dg/tree-ssa/loop-6.c, gcc.dg/tree-ssa/loop-7.c,\n\tgcc.dg/tree-ssa/ltrans-1.c, gcc.dg/tree-ssa/ltrans-2.c,\n\tgcc.dg/tree-ssa/ltrans-3.c, gcc.dg/tree-ssa/ltrans-4.c,\n\tgcc.dg/tree-ssa/ltrans-5.c, gcc.dg/tree-ssa/pr15349.c,\n\tgcc.dg/tree-ssa/pr15791-3.c, gcc.dg/tree-ssa/pr15791-4.c,\n\tgcc.dg/tree-ssa/pr15791-5.c, gcc.dg/tree-ssa/pr16721.c,\n\tgcc.dg/tree-ssa/pr19633.c, gcc.dg/tree-ssa/sra-1.c,\n\tgcc.dg/tree-ssa/sra-2.c, gcc.dg/tree-ssa/sra-3.c,\n\tgcc.dg/tree-ssa/ssa-ccp-1.c, gcc.dg/tree-ssa/ssa-ccp-10.c,\n\tgcc.dg/tree-ssa/ssa-ccp-11.c, gcc.dg/tree-ssa/ssa-ccp-2.c,\n\tgcc.dg/tree-ssa/ssa-ccp-3.c, gcc.dg/tree-ssa/ssa-ccp-7.c,\n\tgcc.dg/tree-ssa/ssa-ccp-9.c, gcc.dg/tree-ssa/ssa-dce-1.c,\n\tgcc.dg/tree-ssa/ssa-dce-2.c, gcc.dg/tree-ssa/ssa-dce-3.c,\n\tgcc.dg/tree-ssa/ssa-dom-ccp-1.c, gcc.dg/tree-ssa/ssa-dom-cse-1.c,\n\tgcc.dg/tree-ssa/ssa-dom-thread-1.c, gcc.dg/tree-ssa/ssa-pre-1.c,\n\tgcc.dg/tree-ssa/ssa-pre-2.c, gcc.dg/tree-ssa/ssa-pre-3.c,\n\tgcc.dg/tree-ssa/ssa-pre-4.c, gcc.dg/tree-ssa/ssa-pre-5.c,\n\tgcc.dg/tree-ssa/ssa-pre-6.c, gcc.dg/tree-ssa/ssa-sink-1.c,\n\tgcc.dg/tree-ssa/ssa-sink-2.c, gcc.dg/tree-ssa/ssa-sink-3.c,\n\tgcc.dg/tree-ssa/ssa-sink-4.c, gcc.dg/tree-ssa/tailcall-1.c,\n\tgcc.dg/tree-ssa/tailcall-2.c, gcc.dg/tree-ssa/tailrecursion-1.c,\n\tgcc.dg/tree-ssa/tailrecursion-2.c, gcc.dg/tree-ssa/tailrecursion-3.c,\n\tgcc.dg/tree-ssa/tailrecursion-4.c, gcc.dg/tree-ssa/tailrecursion-5.c,\n\tgcc.dg/tree-ssa/useless-1.c: Ditto.\n\tgcc.dg/vect/pr16105.c, gcc.dg/vect/pr18308.c, gcc.dg/vect/pr18400.c,\n\tgcc.dg/vect/pr18425.c, gcc.dg/vect/pr18536.c, gcc.dg/vect/vect-1.c,\n\tgcc.dg/vect/vect-10.c, gcc.dg/vect/vect-11.c, gcc.dg/vect/vect-12.c,\n\tgcc.dg/vect/vect-13.c, gcc.dg/vect/vect-14.c, gcc.dg/vect/vect-15.c,\n\tgcc.dg/vect/vect-16.c, gcc.dg/vect/vect-17.c, gcc.dg/vect/vect-18.c,\n\tgcc.dg/vect/vect-19.c, gcc.dg/vect/vect-2.c, gcc.dg/vect/vect-20.c,\n\tgcc.dg/vect/vect-21.c, gcc.dg/vect/vect-22.c, gcc.dg/vect/vect-23.c,\n\tgcc.dg/vect/vect-24.c, gcc.dg/vect/vect-25.c, gcc.dg/vect/vect-26.c,\n\tgcc.dg/vect/vect-27.c, gcc.dg/vect/vect-28.c, gcc.dg/vect/vect-29.c,\n\tgcc.dg/vect/vect-3.c, gcc.dg/vect/vect-30.c, gcc.dg/vect/vect-31.c,\n\tgcc.dg/vect/vect-32.c, gcc.dg/vect/vect-33.c, gcc.dg/vect/vect-34.c,\n\tgcc.dg/vect/vect-35.c, gcc.dg/vect/vect-36.c, gcc.dg/vect/vect-37.c,\n\tgcc.dg/vect/vect-38.c, gcc.dg/vect/vect-4.c, gcc.dg/vect/vect-40.c,\n\tgcc.dg/vect/vect-41.c, gcc.dg/vect/vect-42.c, gcc.dg/vect/vect-43.c,\n\tgcc.dg/vect/vect-44.c, gcc.dg/vect/vect-45.c, gcc.dg/vect/vect-46.c,\n\tgcc.dg/vect/vect-47.c, gcc.dg/vect/vect-48.c, gcc.dg/vect/vect-49.c,\n\tgcc.dg/vect/vect-5.c, gcc.dg/vect/vect-50.c, gcc.dg/vect/vect-51.c,\n\tgcc.dg/vect/vect-52.c, gcc.dg/vect/vect-53.c, gcc.dg/vect/vect-54.c,\n\tgcc.dg/vect/vect-55.c, gcc.dg/vect/vect-56.c, gcc.dg/vect/vect-57.c,\n\tgcc.dg/vect/vect-58.c, gcc.dg/vect/vect-59.c, gcc.dg/vect/vect-6.c,\n\tgcc.dg/vect/vect-60.c, gcc.dg/vect/vect-61.c, gcc.dg/vect/vect-62.c,\n\tgcc.dg/vect/vect-63.c, gcc.dg/vect/vect-64.c, gcc.dg/vect/vect-65.c,\n\tgcc.dg/vect/vect-66.c, gcc.dg/vect/vect-67.c, gcc.dg/vect/vect-68.c,\n\tgcc.dg/vect/vect-69.c, gcc.dg/vect/vect-7.c, gcc.dg/vect/vect-70.c,\n\tgcc.dg/vect/vect-71.c, gcc.dg/vect/vect-72.c, gcc.dg/vect/vect-73.c,\n\tgcc.dg/vect/vect-74.c, gcc.dg/vect/vect-75.c, gcc.dg/vect/vect-76.c,\n\tgcc.dg/vect/vect-77.c, gcc.dg/vect/vect-78.c, gcc.dg/vect/vect-79.c,\n\tgcc.dg/vect/vect-8.c, gcc.dg/vect/vect-80.c, gcc.dg/vect/vect-82.c,\n\tgcc.dg/vect/vect-82_64.c, gcc.dg/vect/vect-83.c,\n\tgcc.dg/vect/vect-83_64.c, gcc.dg/vect/vect-85.c,\n\tgcc.dg/vect/vect-86.c, gcc.dg/vect/vect-87.c, gcc.dg/vect/vect-88.c,\n\tgcc.dg/vect/vect-89.c, gcc.dg/vect/vect-9.c, gcc.dg/vect/vect-96.c,\n\tgcc.dg/vect/vect-97.c, gcc.dg/vect/vect-98.c, gcc.dg/vect/vect-all.c,\n\tgcc.dg/vect/vect-none.c: Ditto.\n\t* treelang/compile/extrafunc.tree, treelang/compile/extravar.tree,\n\ttreelang/compile/unsigned.tree: Ditto.\n\nFrom-SVN: r97342", "tree": {"sha": "78bc3bfe21a5de11382eb7041e939633e0a13528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78bc3bfe21a5de11382eb7041e939633e0a13528"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6491eb15e1824b543f60a7ba391f9ac497accbce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6491eb15e1824b543f60a7ba391f9ac497accbce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6491eb15e1824b543f60a7ba391f9ac497accbce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6491eb15e1824b543f60a7ba391f9ac497accbce/comments", "author": null, "committer": null, "parents": [{"sha": "515e6cd000ff755de244656e8992af37ce12fe49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515e6cd000ff755de244656e8992af37ce12fe49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/515e6cd000ff755de244656e8992af37ce12fe49"}], "stats": {"total": 470, "additions": 412, "deletions": 58}, "files": [{"sha": "2b5f2d0de8b49a0497f902a421a72d3b769ee9a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -1,5 +1,126 @@\n 2005-03-31  Janis Johnson  <janis187@us.ibm.com>\n \n+\t* g++.dg/opt/nothrow1.C: Use cleanup-tree-dump.\n+\tg++.dg/tree-ssa/empty-1.C, g++.dg/tree-ssa/nothrow-1.C,\n+\tg++.dg/tree-ssa/pointer-reference-alias.C,\n+\tg++.dg/tree-ssa/pr15791-3.C, g++.dg/tree-ssa/pr15791-4.C,\n+\tg++.dg/tree-ssa/pr15791-5.C, g++.dg/tree-ssa/ssa-cast-1.C\n+\tg++.dg/tree-ssa/ssa-sra-1.C, g++.dg/tree-ssa/ssa-sra-2.C: Ditto\n+\tg++.dg/vect/pr19951.cc: Ditto.\n+\t* gcc.dg/builtins-43.c, gcc.dg/builtins-44.c, gcc.dg/builtins-45.c,\n+\tgcc.dg/builtins-47.c: Ditto.\n+\t* gcc.dg/pr15784-1.c, gcc.dg/pr15784-2.c, gcc.dg/pr15784-3.c,\n+\tgcc.dg/pr20115-1.c: Ditto.\n+\t* gcc.dg/tree-ssa/20030530-2.c,\n+\tgcc.dg/tree-ssa/20030611-1.c, gcc.dg/tree-ssa/20030703-1.c,\n+\tgcc.dg/tree-ssa/20030703-2.c, gcc.dg/tree-ssa/20030708-1.c,\n+\tgcc.dg/tree-ssa/20030709-1.c, gcc.dg/tree-ssa/20030709-2.c,\n+\tgcc.dg/tree-ssa/20030709-3.c, gcc.dg/tree-ssa/20030710-1.c,\n+\tgcc.dg/tree-ssa/20030711-1.c, gcc.dg/tree-ssa/20030711-2.c,\n+\tgcc.dg/tree-ssa/20030711-3.c, gcc.dg/tree-ssa/20030714-1.c,\n+\tgcc.dg/tree-ssa/20030714-2.c, gcc.dg/tree-ssa/20030728-1.c,\n+\tgcc.dg/tree-ssa/20030729-1.c, gcc.dg/tree-ssa/20030730-1.c,\n+\tgcc.dg/tree-ssa/20030730-2.c, gcc.dg/tree-ssa/20030731-1.c,\n+\tgcc.dg/tree-ssa/20030731-2.c, gcc.dg/tree-ssa/20030807-1.c,\n+\tgcc.dg/tree-ssa/20030807-10.c, gcc.dg/tree-ssa/20030807-11.c,\n+\tgcc.dg/tree-ssa/20030807-2.c, gcc.dg/tree-ssa/20030807-3.c,\n+\tgcc.dg/tree-ssa/20030807-5.c, gcc.dg/tree-ssa/20030807-6.c,\n+\tgcc.dg/tree-ssa/20030807-7.c, gcc.dg/tree-ssa/20030807-8.c,\n+\tgcc.dg/tree-ssa/20030807-9.c, gcc.dg/tree-ssa/20030808-1.c,\n+\tgcc.dg/tree-ssa/20030814-1.c, gcc.dg/tree-ssa/20030814-2.c,\n+\tgcc.dg/tree-ssa/20030814-3.c, gcc.dg/tree-ssa/20030814-4.c,\n+\tgcc.dg/tree-ssa/20030814-5.c, gcc.dg/tree-ssa/20030814-6.c,\n+\tgcc.dg/tree-ssa/20030814-7.c, gcc.dg/tree-ssa/20030815-1.c,\n+\tgcc.dg/tree-ssa/20030824-1.c,\n+\tgcc.dg/tree-ssa/20030824-2.c, gcc.dg/tree-ssa/20030825-1.c,\n+\tgcc.dg/tree-ssa/20030907-1.c, gcc.dg/tree-ssa/20030917-1.c,\n+\tgcc.dg/tree-ssa/20030917-3.c, gcc.dg/tree-ssa/20030922-1.c,\n+\tgcc.dg/tree-ssa/20030922-2.c, gcc.dg/tree-ssa/20031015-1.c,\n+\tgcc.dg/tree-ssa/20031021-1.c, gcc.dg/tree-ssa/20031022-1.c,\n+\tgcc.dg/tree-ssa/20031106-1.c, gcc.dg/tree-ssa/20031106-2.c,\n+\tgcc.dg/tree-ssa/20031106-3.c, gcc.dg/tree-ssa/20031106-4.c,\n+\tgcc.dg/tree-ssa/20031106-5.c, gcc.dg/tree-ssa/20031106-6.c,\n+\tgcc.dg/tree-ssa/20031216-1.c, gcc.dg/tree-ssa/20040204-1.c,\n+\tgcc.dg/tree-ssa/20040210-1.c, gcc.dg/tree-ssa/20040211-1.c,\n+\tgcc.dg/tree-ssa/20040216-1.c, gcc.dg/tree-ssa/20040305-1.c,\n+\tgcc.dg/tree-ssa/20040430-1.c, gcc.dg/tree-ssa/20040513-1.c,\n+\tgcc.dg/tree-ssa/20040513-2.c, gcc.dg/tree-ssa/20040514-1.c,\n+\tgcc.dg/tree-ssa/20040514-2.c, gcc.dg/tree-ssa/20040517-1.c,\n+\tgcc.dg/tree-ssa/20040518-1.c, gcc.dg/tree-ssa/20040518-2.c,\n+\tgcc.dg/tree-ssa/20040615-1.c, gcc.dg/tree-ssa/20040624-1.c,\n+\tgcc.dg/tree-ssa/20040703-1.c, gcc.dg/tree-ssa/20040721-1.c,\n+\tgcc.dg/tree-ssa/20040729-1.c, gcc.dg/tree-ssa/20040911-1.c,\n+\tgcc.dg/tree-ssa/20041002-1.c, gcc.dg/tree-ssa/20041122-1.c,\n+\tgcc.dg/tree-ssa/20050128-1.c, gcc.dg/tree-ssa/20050215-1.c,\n+\tgcc.dg/tree-ssa/asm-1.c, gcc.dg/tree-ssa/asm-2.c,\n+\tgcc.dg/tree-ssa/asm-3.c, gcc.dg/tree-ssa/cfgcleanup-1.c,\n+\tgcc.dg/tree-ssa/complex-1.c, gcc.dg/tree-ssa/complex-2.c,\n+\tgcc.dg/tree-ssa/copy-headers.c, gcc.dg/tree-ssa/ifc-20040816-1.c,\n+\tgcc.dg/tree-ssa/ifc-20040816-2.c, gcc.dg/tree-ssa/inline_asm-1.c,\n+\tgcc.dg/tree-ssa/inline_asm-2.c, gcc.dg/tree-ssa/loop-1.c,\n+\tgcc.dg/tree-ssa/loop-2.c, gcc.dg/tree-ssa/loop-3.c,\n+\tgcc.dg/tree-ssa/loop-4.c, gcc.dg/tree-ssa/loop-5.c,\n+\tgcc.dg/tree-ssa/loop-6.c, gcc.dg/tree-ssa/loop-7.c,\n+\tgcc.dg/tree-ssa/ltrans-1.c, gcc.dg/tree-ssa/ltrans-2.c,\n+\tgcc.dg/tree-ssa/ltrans-3.c, gcc.dg/tree-ssa/ltrans-4.c,\n+\tgcc.dg/tree-ssa/ltrans-5.c, gcc.dg/tree-ssa/pr15349.c,\n+\tgcc.dg/tree-ssa/pr15791-3.c, gcc.dg/tree-ssa/pr15791-4.c,\n+\tgcc.dg/tree-ssa/pr15791-5.c, gcc.dg/tree-ssa/pr16721.c,\n+\tgcc.dg/tree-ssa/pr19633.c, gcc.dg/tree-ssa/sra-1.c,\n+\tgcc.dg/tree-ssa/sra-2.c, gcc.dg/tree-ssa/sra-3.c,\n+\tgcc.dg/tree-ssa/ssa-ccp-1.c, gcc.dg/tree-ssa/ssa-ccp-10.c,\n+\tgcc.dg/tree-ssa/ssa-ccp-11.c, gcc.dg/tree-ssa/ssa-ccp-2.c,\n+\tgcc.dg/tree-ssa/ssa-ccp-3.c, gcc.dg/tree-ssa/ssa-ccp-7.c,\n+\tgcc.dg/tree-ssa/ssa-ccp-9.c, gcc.dg/tree-ssa/ssa-dce-1.c,\n+\tgcc.dg/tree-ssa/ssa-dce-2.c, gcc.dg/tree-ssa/ssa-dce-3.c,\n+\tgcc.dg/tree-ssa/ssa-dom-ccp-1.c, gcc.dg/tree-ssa/ssa-dom-cse-1.c,\n+\tgcc.dg/tree-ssa/ssa-dom-thread-1.c, gcc.dg/tree-ssa/ssa-pre-1.c,\n+\tgcc.dg/tree-ssa/ssa-pre-2.c, gcc.dg/tree-ssa/ssa-pre-3.c,\n+\tgcc.dg/tree-ssa/ssa-pre-4.c, gcc.dg/tree-ssa/ssa-pre-5.c,\n+\tgcc.dg/tree-ssa/ssa-pre-6.c, gcc.dg/tree-ssa/ssa-sink-1.c,\n+\tgcc.dg/tree-ssa/ssa-sink-2.c, gcc.dg/tree-ssa/ssa-sink-3.c,\n+\tgcc.dg/tree-ssa/ssa-sink-4.c, gcc.dg/tree-ssa/tailcall-1.c,\n+\tgcc.dg/tree-ssa/tailcall-2.c, gcc.dg/tree-ssa/tailrecursion-1.c,\n+\tgcc.dg/tree-ssa/tailrecursion-2.c, gcc.dg/tree-ssa/tailrecursion-3.c,\n+\tgcc.dg/tree-ssa/tailrecursion-4.c, gcc.dg/tree-ssa/tailrecursion-5.c,\n+\tgcc.dg/tree-ssa/useless-1.c: Ditto.\n+\tgcc.dg/vect/pr16105.c, gcc.dg/vect/pr18308.c, gcc.dg/vect/pr18400.c,\n+\tgcc.dg/vect/pr18425.c, gcc.dg/vect/pr18536.c, gcc.dg/vect/vect-1.c,\n+\tgcc.dg/vect/vect-10.c, gcc.dg/vect/vect-11.c, gcc.dg/vect/vect-12.c,\n+\tgcc.dg/vect/vect-13.c, gcc.dg/vect/vect-14.c, gcc.dg/vect/vect-15.c,\n+\tgcc.dg/vect/vect-16.c, gcc.dg/vect/vect-17.c, gcc.dg/vect/vect-18.c,\n+\tgcc.dg/vect/vect-19.c, gcc.dg/vect/vect-2.c, gcc.dg/vect/vect-20.c,\n+\tgcc.dg/vect/vect-21.c, gcc.dg/vect/vect-22.c, gcc.dg/vect/vect-23.c,\n+\tgcc.dg/vect/vect-24.c, gcc.dg/vect/vect-25.c, gcc.dg/vect/vect-26.c,\n+\tgcc.dg/vect/vect-27.c, gcc.dg/vect/vect-28.c, gcc.dg/vect/vect-29.c,\n+\tgcc.dg/vect/vect-3.c, gcc.dg/vect/vect-30.c, gcc.dg/vect/vect-31.c,\n+\tgcc.dg/vect/vect-32.c, gcc.dg/vect/vect-33.c, gcc.dg/vect/vect-34.c,\n+\tgcc.dg/vect/vect-35.c, gcc.dg/vect/vect-36.c, gcc.dg/vect/vect-37.c,\n+\tgcc.dg/vect/vect-38.c, gcc.dg/vect/vect-4.c, gcc.dg/vect/vect-40.c,\n+\tgcc.dg/vect/vect-41.c, gcc.dg/vect/vect-42.c, gcc.dg/vect/vect-43.c,\n+\tgcc.dg/vect/vect-44.c, gcc.dg/vect/vect-45.c, gcc.dg/vect/vect-46.c,\n+\tgcc.dg/vect/vect-47.c, gcc.dg/vect/vect-48.c, gcc.dg/vect/vect-49.c,\n+\tgcc.dg/vect/vect-5.c, gcc.dg/vect/vect-50.c, gcc.dg/vect/vect-51.c,\n+\tgcc.dg/vect/vect-52.c, gcc.dg/vect/vect-53.c, gcc.dg/vect/vect-54.c,\n+\tgcc.dg/vect/vect-55.c, gcc.dg/vect/vect-56.c, gcc.dg/vect/vect-57.c,\n+\tgcc.dg/vect/vect-58.c, gcc.dg/vect/vect-59.c, gcc.dg/vect/vect-6.c,\n+\tgcc.dg/vect/vect-60.c, gcc.dg/vect/vect-61.c, gcc.dg/vect/vect-62.c,\n+\tgcc.dg/vect/vect-63.c, gcc.dg/vect/vect-64.c, gcc.dg/vect/vect-65.c,\n+\tgcc.dg/vect/vect-66.c, gcc.dg/vect/vect-67.c, gcc.dg/vect/vect-68.c,\n+\tgcc.dg/vect/vect-69.c, gcc.dg/vect/vect-7.c, gcc.dg/vect/vect-70.c,\n+\tgcc.dg/vect/vect-71.c, gcc.dg/vect/vect-72.c, gcc.dg/vect/vect-73.c,\n+\tgcc.dg/vect/vect-74.c, gcc.dg/vect/vect-75.c, gcc.dg/vect/vect-76.c,\n+\tgcc.dg/vect/vect-77.c, gcc.dg/vect/vect-78.c, gcc.dg/vect/vect-79.c,\n+\tgcc.dg/vect/vect-8.c, gcc.dg/vect/vect-80.c, gcc.dg/vect/vect-82.c,\n+\tgcc.dg/vect/vect-82_64.c, gcc.dg/vect/vect-83.c,\n+\tgcc.dg/vect/vect-83_64.c, gcc.dg/vect/vect-85.c,\n+\tgcc.dg/vect/vect-86.c, gcc.dg/vect/vect-87.c, gcc.dg/vect/vect-88.c,\n+\tgcc.dg/vect/vect-89.c, gcc.dg/vect/vect-9.c, gcc.dg/vect/vect-96.c,\n+\tgcc.dg/vect/vect-97.c, gcc.dg/vect/vect-98.c, gcc.dg/vect/vect-all.c,\n+\tgcc.dg/vect/vect-none.c: Ditto.\n+\t* treelang/compile/extrafunc.tree, treelang/compile/extravar.tree,\n+\ttreelang/compile/unsigned.tree: Ditto.\n+\n \t* gcc.dg/altivec-16.c: Use cleanup-saved-temps.\n \t* gcc.dg/cpp/direct2s.c: Ditto.\n \t* gcc.dg/cpp/paste4.c: Ditto."}, {"sha": "c1a80822be956db4c0c349cd14e81d639867872a", "filename": "gcc/testsuite/g++.dg/opt/nothrow1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnothrow1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnothrow1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnothrow1.C?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -22,3 +22,4 @@ int main()\n \n // The catch block should be optimized away.\n // { dg-final { scan-tree-dump-times \"-42\" 0 \"optimized\" } }\n+// { dg-final { cleanup-tree-dump \"optimized\" } }"}, {"sha": "6a6e452be24c2979fdc013fbdd2444fcfcc2315e", "filename": "gcc/testsuite/g++.dg/tree-ssa/empty-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fempty-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fempty-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fempty-1.C?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -11,3 +11,4 @@ S bar (const S &a)\n \n /* Test whether memcpy call has been optimized out.  */\n /* { dg-final { scan-tree-dump-times \"memcpy\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "6dbf1393a39bebf77d364c83d3f4ecfe3a077236", "filename": "gcc/testsuite/g++.dg/tree-ssa/nothrow-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fnothrow-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fnothrow-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fnothrow-1.C?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -17,3 +17,4 @@ void q()\n }\n /* We shouldnotice nothrow attribute.  */\n /* { dg-final { scan-tree-dump-times \"exception\" 0 \"cfg\"} } */\n+/* { dg-final { cleanup-tree-dump \"cfg\" } } */"}, {"sha": "c58495f5225f654b82d018e8931804833c420368", "filename": "gcc/testsuite/g++.dg/tree-ssa/pointer-reference-alias.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpointer-reference-alias.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpointer-reference-alias.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpointer-reference-alias.C?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -9,5 +9,5 @@ int f(int *a)\n }\n \n /* There should be only one dereferencing of a. */\n-/* { dg-final { scan-tree-dump-times \"\\\\*a\" 1 \"vars\"} } */\n-\n+/* { dg-final { scan-tree-dump-times \"\\\\*a\" 1 \"vars\" } } */\n+/* { dg-final { cleanup-tree-dump \"vars\" } } */"}, {"sha": "2fd03e2e0cb288a00983a25e78d1df93bd8cc5ff", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr15791-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr15791-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr15791-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr15791-3.C?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -10,4 +10,4 @@ int f(int i, unsigned j)\n }\n \n /* { dg-final { scan-tree-dump-times \"i == j\" 0 \"gimple\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"gimple\" } } */"}, {"sha": "82be2e33a9a320efaa48b2c9e1fcc259a55366a3", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr15791-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr15791-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr15791-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr15791-4.C?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -10,4 +10,4 @@ int f(int i, int j)\n }\n \n /* { dg-final { scan-tree-dump-times \"i == j\" 0 \"gimple\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"gimple\" } } */"}, {"sha": "06ce523a7ae6ed2452d65c8c5cc777699cb14b9e", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr15791-5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr15791-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr15791-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr15791-5.C?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -10,4 +10,4 @@ int foo(int i, int j)\n }\n \n /* { dg-final { scan-tree-dump-times \"i == j\" 1 \"gimple\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"gimple\" } } */"}, {"sha": "e65a88b7c914f96c84e4c9f6b94aba90c4ce55d4", "filename": "gcc/testsuite/g++.dg/tree-ssa/ssa-cast-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-cast-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-cast-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-cast-1.C?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -9,4 +9,4 @@ int &f(int *a)\n /* There should be no cast as pointer and references are\n    considered the same type. */\n /* { dg-final { scan-tree-dump-times \"\\\\(int &\\\\)\" 0 \"vars\"} } */\n-\n+/* { dg-final { cleanup-tree-dump \"vars\" } } */"}, {"sha": "a0cb41e52d6cefecee7b2977b6dece6780293db5", "filename": "gcc/testsuite/g++.dg/tree-ssa/ssa-sra-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-sra-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-sra-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-sra-1.C?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -58,3 +58,4 @@ void temp()\n /* We should have removed the casts from pointers to references and caused SRA to happen.  */\n \n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"vars\"} } */\n+/* { dg-final { cleanup-tree-dump \"vars\" } } */"}, {"sha": "d90e8d612d76ff6bb87ba47b9b73ca99c1e5734f", "filename": "gcc/testsuite/g++.dg/tree-ssa/ssa-sra-2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-sra-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-sra-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-sra-2.C?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -49,3 +49,4 @@ void test()\n \n /* We should have removed the casts from pointers to references and caused SRA to happen.  */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"vars\"} } */\n+/* { dg-final { cleanup-tree-dump \"vars\" } } */"}, {"sha": "a6acf99ff94d3b479823466aed1a559908306353", "filename": "gcc/testsuite/g++.dg/vect/pr19951.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr19951.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr19951.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr19951.cc?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -15,3 +15,5 @@ void bar()\n     for (;;)\n         foo();\n }\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "3043d5a96c2f5de914711d3fc6442b66b518c6da", "filename": "gcc/testsuite/gcc.dg/builtins-43.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-43.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-43.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-43.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -47,7 +47,8 @@ main ()\n \n /* Check that all instances of __builtin_isnan were folded.  */\n /* { dg-final { scan-tree-dump-times \"isnan\" 0 \"generic\" } } */\n+/* { dg-final { cleanup-tree-dump \"generic\" } } */\n \n /* Check that all instances of link_error were subject to DCE.  */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "5229652b0bb62ef7ca4c42917bb525a7784483ab", "filename": "gcc/testsuite/gcc.dg/builtins-44.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-44.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -52,4 +52,4 @@ main ()\n \n /* Check that all instances of link_error were subject to DCE.  */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "d138b8112510e26adda02a5b46fd075f0bb328a1", "filename": "gcc/testsuite/gcc.dg/builtins-45.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-45.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-45.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-45.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -44,4 +44,4 @@ main ()\n \n /* Check that all instances of link_error were subject to DCE.  */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "b25ee1b9958911deaa0231842859294ba9feb027", "filename": "gcc/testsuite/gcc.dg/builtins-47.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-47.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-47.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-47.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -17,4 +17,4 @@ int main ()\n \n /* { dg-final { scan-tree-dump-times \"sqrt\" 0 \"gimple\" } } */\n /* { dg-final { scan-tree-dump-times \"pow\" 0 \"gimple\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"gimple\" } } */"}, {"sha": "fea85568f3597581622058483616fad1894f270a", "filename": "gcc/testsuite/gcc.dg/pr15784-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15784-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15784-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15784-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -40,3 +40,4 @@ int i (float x) {\n \treturn fabs(x) == -0.0;\n }\n /* { dg-final { scan-tree-dump-times \"ABS_EXPR\" 0 \"generic\" } } */\n+/* { dg-final { cleanup-tree-dump \"generic\" } } */"}, {"sha": "2cd2de5e0f70139f98e5d159070e9642b668145f", "filename": "gcc/testsuite/gcc.dg/pr15784-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15784-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15784-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15784-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -9,3 +9,4 @@ int a (float x) {\n }\n \n /* { dg-final { scan-tree-dump-times \"ABS_EXPR\" 0 \"generic\" } } */\n+/* { dg-final { cleanup-tree-dump \"generic\" } } */"}, {"sha": "b233eff0751cd80af05094af47b7105f5e269ad6", "filename": "gcc/testsuite/gcc.dg/pr15784-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15784-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15784-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15784-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -9,3 +9,4 @@ int a (float x) {\n }\n \n /* { dg-final { scan-tree-dump-times \"ABS_EXPR\" 1 \"generic\" } } */\n+/* { dg-final { cleanup-tree-dump \"generic\" } } */"}, {"sha": "60313cd53d0ce1e9755ad7b4a241b60bae35d625", "filename": "gcc/testsuite/gcc.dg/pr20115-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20115-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20115-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20115-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -12,3 +12,4 @@ int bar()\n \n /* Check that we only have one call to foo.  */\n /* { dg-final { scan-tree-dump-times \"foo\" 1 \"dom1\" } } */\n+/* { dg-final { cleanup-tree-dump \"dom1\" } } */"}, {"sha": "fc5a1c8fae1ee39700201bbc9505b8c0069408c6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030530-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030530-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030530-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030530-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -23,4 +23,5 @@ rs6000_emit_prologue (int i, rs6000_stack_t *info)\n    commutative operands correctly.  */\n /* { dg-final { scan-tree-dump-times \"\\\\+\" 1 \"dom3\"} } */\n  \n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */\n "}, {"sha": "87c4e47487c2f1f415864ae4a1eca15c92d00eac", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030611-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030611-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030611-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030611-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -11,3 +11,4 @@ shit(int a)\n /* There should be precisely one call to square.   If there is more than one,\n    then the dominator optimizations failed to remove the redundant call.  */\n /* { dg-final { scan-tree-dump-times \"square\" 1 \"dom3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "1ba57daa6682dacd88e156d1fca6ec8e0b674604", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030703-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -19,3 +19,4 @@ foo(int index)\n /* There should be exactly one IF conditional.  */\n /* { dg-final { scan-tree-dump-times \"if \" 1 \"dom3\"} } */\n \n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "c2873acc1d055cc752d568b825ab5acc054fd724", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030703-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -41,3 +41,4 @@ get_alias_set (t)\n    if() to disappear.  */\n /* { dg-final { scan-tree-dump-times \"if \" 1 \"dom3\"} } */\n \n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "cff5efa45e17dfe59fe02705d0852b89a271f015", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030708-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030708-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030708-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030708-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -40,4 +40,4 @@ nonlocal_mentioned_p (x)\n /* There should be no IF conditionals.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"dom3\"} } */\n                                                                                 \n-\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "028e45e190cd77aa76515d61d3fa83fa9b23e313", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030709-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -13,3 +13,4 @@ foo ()\n \n /* There should be no IF conditionals.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "4712a3b9fb3e62d32863a0c0fbe117cbc547439b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030709-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -51,3 +51,4 @@ get_alias_set (t)\n    collapse down to a simple return 0 without any conditionals).  */\n /* { dg-final { scan-tree-dump-times \"if \" 1 \"cddce\"} } */\n \n+/* { dg-final { cleanup-tree-dump \"cddce\" } } */"}, {"sha": "1d69e5c59774d4e6d01fd7f3b331b781155e4f01", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030709-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -44,3 +44,5 @@ record_component_aliases (type)\n  \n /* There should be one IF conditional.  */\n /* { dg-final { scan-tree-dump-times \"if \" 1 \"dom3\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "8ed9b4c3df7ae111ab9b6d39b0fa95eb2fcdeeb0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030710-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030710-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030710-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030710-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -52,3 +52,4 @@ record_component_aliases (type)\n /* There should be two loads of vec.length.  */\n /* { dg-final { scan-tree-dump-times \"vec.length\" 2 \"dom3\"} } */\n \n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "13b919f5cbff31c4f34f1c0e17a4455bba291326", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030711-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -52,3 +52,4 @@ record_component_aliases (type)\n /* There should be four loads of vec.length.  */\n /* { dg-final { scan-tree-dump-times \"vec.length\" 4 \"dom3\"} } */\n \n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "c5840a39665278da81c4f492d30c7e331964c23c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030711-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -65,3 +65,5 @@ get_alias_set (t,z)\n \n /* There should be one load of alias.  */\n /* { dg-final { scan-tree-dump-times \"->alias\" 1 \"dom3\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "ea6d5a4122c93251f16c7f11f74f8b78cd9100cb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030711-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -57,3 +57,5 @@ get_alias_set (t)\n \n /* There should be one load of alias.  */\n /* { dg-final { scan-tree-dump-times \"->alias\" 1 \"dom3\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "63acaaf1ca8754f30aa9b6b5dae5edf647042ab0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030714-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030714-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030714-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030714-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -41,3 +41,5 @@ find_base_value (src)\n \n /* There should be three loads of ->code.  */\n /* { dg-final { scan-tree-dump-times \"->code\" 3 \"dom3\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "42f3a38d0518e7782c4e98d7f4906896a40bf7a0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030714-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030714-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030714-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030714-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -36,4 +36,4 @@ get_alias_set (t)\n    properly.  */\n /* { dg-final { scan-tree-dump-times \"if \" 3 \"dom3\"} } */\n  \n-\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "3b1ace80f39b0891f0970351e65aa583da7500c6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030728-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030728-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030728-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030728-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -44,4 +44,4 @@ objects_must_conflict_p (t1, t2)\n /* There should be two assignments of variables to the value zero.  */\n /* { dg-final { scan-tree-dump-times \" = 0\" 2 \"optimized\"} } */\n  \n-\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "dc581715bb3a1626a3f5e5f500848e7fb85f011b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030729-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030729-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030729-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030729-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -50,3 +50,5 @@ readonly_fields_p (type)\n /* There should be one load of ->common.code.  We currently fail this\n    because we load from ->common.code using different types.  */\n /* { dg-final { scan-tree-dump-times \"common\\.code\" 1 \"dom3\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "115324adf5fbfdd109f3ab98695b26d0ccf8ce4f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030730-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030730-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030730-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030730-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -21,4 +21,4 @@ foo (int attr_kind, unsigned long offset)\n /* There should be no IF conditionals.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"dom3\"} } */\n                                                                                 \n-\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "3b1262f946bb2ccfcb103a7b14c0fa60cef8b97c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030730-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030730-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030730-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030730-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -21,3 +21,4 @@ foo (int attr_kind, unsigned long offset)\n /* There should be no IF conditionals.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"dom3\"} } */\n \n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "1eb1617162a5813a5aad8ca0cd6c5d9d3dc5eb37", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030731-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -64,3 +64,4 @@ store_expr (exp, target, want_value)\n    immediately dominates the comparison in question.  We need something\n    stronger.  */\n /* { dg-final { scan-tree-dump-times \"target.*!= 0\" 0 \"dom3\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "885bca11771e30f7062b9ccf1ba63ec04d744df7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030731-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -14,3 +14,4 @@ bar (int i, int partial, int args_addr)\n /* There should be only one IF conditional since the first does nothing\n    useful.  */\n /* { dg-final { scan-tree-dump-times \"if \" 1 \"ccp\"} } */\n+/* { dg-final { cleanup-tree-dump \"ccp\" } } */"}, {"sha": "196589903e2e36b42b1b2323a5f35c6370cbae35", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -42,5 +42,4 @@ bar (rtx r)\n    which combines the result of those two tests into a new test\n    must always be true and it is optimized appropriately.  */\n /* { dg-final { scan-tree-dump-times \"if \" 2 \"dom3\"} } */\n- \n-\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "5865543a5a6bb574d4c26eb2afb64285489deb28", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-10.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -23,3 +23,4 @@ subreg_highpart_offset (outermode, innermode)\n /* There should be one right shift by 2 places.  */\n /* { dg-final { scan-tree-dump-times \" >> 2\" 1 \"dom3\"} } */\n \n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "b6603338dd7c944180d971d53aa7888a520252d1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-11.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -18,3 +18,4 @@ foo (reg)\n                                                                                 \n /* There should be no IF conditionals.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"dom3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "956010b9f8d8219e629dca696d220ddbf637bf8e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -25,3 +25,4 @@ foo(int n)\n                                                                                \n /* There should be no IF conditionals.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"dom3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "8255b581aee8ab4d0376e99bf8ecf70e670d28f5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -24,4 +24,4 @@ cpp_parse_escape (pstr, limit, wide)\n /* There should be precisely three IF statements.  If there is\n    more than two, then the dominator optimizations failed.  */\n /* { dg-final { scan-tree-dump-times \"if \" 3 \"dom3\"} } */\n-\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "2a0a84cadbe5403ca7cbb1c4a2a0e9af9c642814", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-5.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-5.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -35,3 +35,5 @@ foo ()\n /* There should be two IF statements.  One for 'current_sym_addr->code == 42'.\n    The other one for '(EXPR)->unchanging'.  */\n /* { dg-final { scan-tree-dump-times \"if \" 2 \"dom3\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "e01c43876a0dd1884a3c2d2763e3e84cb6bbd9f0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-6.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-6.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -40,5 +40,4 @@ foo4 (distance, i, j)\n \n /* There should be no ABS_EXPR.  */\n /* { dg-final { scan-tree-dump-times \"ABS_EXPR \" 0 \"dom3\"} } */\n-  \n-\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "2dc208327fb0c7af95f6f2be3408b1f031ed2a83", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-7.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -35,3 +35,4 @@ simplify_condition (cond_p)\n /* There should be exactly one IF conditional.  TBAA is not able to \n    determine that 'decl' and 'cond' can't alias.  */\n /* { dg-final { scan-tree-dump-times \"if \" 1 \"dom3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "70af6cc49f5bb574faad47a6f9201c7ea56578a9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-8.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -50,3 +50,4 @@ output_location_lists (die)\n \n /* There should be exactly one IF conditional, in output_location_lists.  */\n /* { dg-final { scan-tree-dump-times \"if \" 1 \"dom3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "b2c3c890a33222679a1b92949a50db74fb8778fb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-9.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -17,3 +17,4 @@ ooof ()\n \n /* There should be no IF conditionals.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"dom3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "f7057bfe822b0cbc8c8c1bf9ee220287c5c701c9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030808-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030808-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030808-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030808-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -38,3 +38,4 @@ delete_dead_jumptables ()\n /* There should be no IF statements.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"cddce\"} } */\n \n+/* { dg-final { cleanup-tree-dump \"cddce\" } } */"}, {"sha": "d7b44a64bef3ca4123b30d053d48ba2c811d8f0c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -18,4 +18,4 @@ com(int *blah)\n    more than one, then the dominator optimizations failed.  */\n /* { dg-final { scan-tree-dump-times \"\\\\*blah\" 1 \"dom3\"} } */\n   \n-\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "1e65ffadece40c38d10b287c3ede969f6de5130c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -19,4 +19,4 @@ foo (int value)\n /* There should be no IF conditionals.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"dom3\"} } */\n  \n-\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "852b43823fbcf9ec93bfb5b2976bca9f09523d84", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -20,4 +20,4 @@ foo (int value)\n /* There should be one IF conditional.  */\n /* { dg-final { scan-tree-dump-times \"if \" 1 \"dom3\"} } */\n  \n-\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "e04a668f7ee7b2b91c460c275fccd6d3e01bd1cc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-4.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -35,7 +35,9 @@ blah (decl, set)\n /* There should be precisely one reference to pointer_alias_set.  If there is\n    more than one, then the dominator optimizations failed.  */\n /* { dg-final { scan-tree-dump-times \"pointer_alias_set\" 1 \"dom3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */\n \n /* The assignment set = -1 in the ELSE clause of the last IF\n    statement should be removed by the final cleanup phase.  */\n /* { dg-final { scan-tree-dump-times \"set = -1\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "8335239d92652b38ef9d72a220f4d33fe09ad070", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-5.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-5.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -35,7 +35,9 @@ blah (decl, set)\n /* There should be precisely one reference to pointer_alias_set.  If there is\n    more than one, then the dominator optimizations failed.  */\n /* { dg-final { scan-tree-dump-times \"pointer_alias_set\" 1 \"dom3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */\n \n /* The assignment set = -1 in the ELSE clause of the last IF\n    statement should be removed by the final cleanup phase.  */\n /* { dg-final { scan-tree-dump-times \"set = -1\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "1c2995ed6d71a76c4eb5233ca4e6b4420410f25b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-6.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -42,3 +42,4 @@ foo (t, set)\n /* ??? Will fail until we properly distinguish member stores.  At\n    present the write to type.alias_set kills the previous load.  */\n /* { dg-final { scan-tree-dump-times \"common.code\" 1 \"dom3\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "fce0e2af3373f2701c14053cab5f21de4c03fb9c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-7.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -39,3 +39,4 @@ mark_constant_function (void)\n    This if we find current_function_decl used as an argument, then\n    we have failed.  */\n /* { dg-final { scan-tree-dump-times \"\\\\(current_function_decl\\\\)\" 0 \"dom3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "45ee755deb13c0da47f4e061377d66d3bd9dc432", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030815-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030815-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030815-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030815-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -39,5 +39,4 @@ blah (unsigned int regno)\n    eliminate some useless typecasting.  The first type cast is needed\n    to convert the unsigned int regno parameter into a struct rtx_def **.  */\n /* { dg-final { scan-tree-dump-times \"\\\\(struct rtx_def \\\\* \\\\*\\\\)\" 1 \"dom3\"} } */\n-                                                                                \n-\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "da1389e916c804294b6043428a1b93e903773de6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030824-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030824-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030824-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030824-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -20,3 +20,4 @@ int foo (int x, int y)\n \n /* The addition should be optimized into 'y+x'.  */\n /* { dg-final { scan-tree-dump-times \"\\[xy\\] \\\\+ \\[xy]\" 1 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "1b8bc48147f91d03c0de11407bb98af79bece186", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030824-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030824-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030824-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030824-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -20,3 +20,4 @@ int foo (int x, int y)\n \n /* This function should be optimized into 'return y+x'.  */\n /* { dg-final { scan-tree-dump-times \"return \\[xy\\] \\\\+ \\[xy\\]\" 1 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "de34acaec4ada054bf70c9d6e212c576469cabf8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030825-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030825-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030825-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030825-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -26,3 +26,4 @@ xxx:;\n \n /* Bla should not be optimized away.  */\n /* { dg-final { scan-tree-dump-times \"bla\" 1 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "a36472d39b6f3969e11663eacf924fb0f61dff0c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030907-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030907-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030907-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030907-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -27,3 +27,4 @@ int main()\n \n /* The abort() call clearly is unreachable.  */\n /* { dg-final { scan-tree-dump-times \"abort\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "62f5b2497cc4abfd8a7918c0109de1fe483322ba", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030917-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -16,5 +16,4 @@ findbestextension (int blah, int blah2)\n \n /* The argument to \"foo\" should be a variable, not a constant.  */\n /* { dg-final { scan-tree-dump-times \"foo .defval\" 1 \"ccp\"} } */\n- \n-\n+/* { dg-final { cleanup-tree-dump \"ccp\" } } */"}, {"sha": "bfa2f8a7379b3df6bd3714b113e78da8e411b46b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030917-3.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -21,5 +21,4 @@ main ()\n \n /* The argument to \"printf\" should be a constant, not a variable.  */\n /* { dg-final { scan-tree-dump-times \"printf.*, 0\" 1 \"ccp\"} } */\n-  \n-\n+/* { dg-final { cleanup-tree-dump \"ccp\" } } */"}, {"sha": "b3663572a673adb03c6b3445f59c09093be1d808", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030922-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030922-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030922-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030922-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -31,3 +31,4 @@ voidify_wrapper_expr (tree wrapper)\n \n /* There should be no IF conditionals.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"dom3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "7bb28199489fe5663a9f69cb20c3f962b190dfb0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030922-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030922-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030922-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030922-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -20,3 +20,4 @@ rgn_rank (rtx insn1, rtx insn2)\n \n /* There should be two IF conditionals.  */\n /* { dg-final { scan-tree-dump-times \"if \" 2 \"dom1\" } } */\n+/* { dg-final { cleanup-tree-dump \"dom1\" } } */"}, {"sha": "0bfef45fcfc57241fa4dc3051314989c0605768b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031015-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031015-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031015-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031015-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -14,3 +14,4 @@ main(void)\n }\n \n /* { dg-final { scan-tree-dump-times \"V_MAY_DEF\" 2 \"alias1\" } } */\n+/* { dg-final { cleanup-tree-dump \"alias1\" } } */"}, {"sha": "117cddf12a799d6a4126ad2fbb690cc34f4206cb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031021-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031021-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031021-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031021-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -18,3 +18,4 @@ int main()\n \n /* We should only store to a.i, not load from it.  */\n /* { dg-final { scan-tree-dump-times \"a.i\" 1 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "27de6e90e9c65a45f881241afc4aec41399913fe", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031022-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031022-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031022-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031022-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -25,3 +25,4 @@ blah (int arf)\n \n /* There should be one load from entry_exit_blocks[1].pred.  */\n /* { dg-final { scan-tree-dump-times \"entry_exit_blocks.1..pred\" 1 \"dom1\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom1\" } } */"}, {"sha": "791e0f21ee79686fb37cb5624b486eb9dc7d7e09", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031106-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -18,3 +18,4 @@ void foo (int testarray[])\n \n /* There should be no link_error calls.  */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "2354c14b902c85b6a5df97f08ef0825fd61ed51e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031106-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -25,3 +25,5 @@ void foo (struct s* teststruct)\n \n /* There should be no link_error calls.  */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "4d1919a6e1e246d02b8cd6db6758b889085992c2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031106-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -19,3 +19,4 @@ void foo (int testarray[])\n \n /* There should be no link_error calls.  */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "369b7b3c043fb6fc3cfd2c4d84d871566d739212", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031106-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-4.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -27,3 +27,4 @@ void foo (struct s*  r)\n \n /* There should be no link_error calls.  */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "b066ab6cac0b889148a1fb13604209e612403142", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031106-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-5.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -26,3 +26,4 @@ void foo2 (struct s*  r, struct s*  p)\n \n /* There should be no link_error calls.  */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "6d15c7b50530c844ea7e5b273d1dea54411302c9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031106-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031106-6.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -26,3 +26,4 @@ struct s foo (struct s r)\n /* There should be no references to any of \"temp_struct*\"\n    temporaries.  */\n /* { dg-final { scan-tree-dump-times \"temp_struct\" 0 \"optimized\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "0e97833fea0c003cf4eaca506ce3a3e03344088b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031216-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031216-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031216-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031216-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -17,3 +17,4 @@ foo (int b)\n /* The comparison should be eliminated, there should be no reference\n    to link_error.  */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "fe2945cbc7fe79465c2c65fa4961142277e39564", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040204-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040204-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040204-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040204-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -34,3 +34,4 @@ void test55 (int x, int y)\n    by teaching dom to look through && and register all components\n    as true.  */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\" { xfail { ! powerpc*-*-* } } } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "5ba4d84569445c6b350ca944bfaecc1a6237daef", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040210-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040210-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040210-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040210-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -30,3 +30,4 @@ main(){\n \n /* Should have no more than two ifs left after straightening.  */\n /* { dg-final { scan-tree-dump-times \"if \" 2 \"phiopt1\"} } */\n+/* { dg-final { cleanup-tree-dump \"phiopt1\" } } */"}, {"sha": "aaeab53a2cfc820c1ea7d8cf401cf8ea0e12e063", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040211-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040211-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040211-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040211-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -38,3 +38,4 @@ com (rtx insn, int blah)\n /* Cddce cannot remove possibly infinite loops and there is no way how to\n    determine whether the loop in can_move_up ends.  */\n /* { dg-final { scan-tree-dump \"if \" \"cddce\"} } */\n+/* { dg-final { cleanup-tree-dump \"cddce\" } } */"}, {"sha": "c770340a7672d1b5540df4885206c965364afcee", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040216-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040216-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040216-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040216-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -15,4 +15,4 @@ foo(int *z, int *y, int xx)\n \n /* We should convert two COND_EXPRs into straightline code.  */\n /* { dg-final { scan-tree-dump-times \"Deleted dead store\" 2 \"dse1\"} } */\n-\n+/* { dg-final { cleanup-tree-dump \"dse1\" } } */"}, {"sha": "acde4b3116cc8dd295c00257b9e75d0a96cabeee", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040305-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040305-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040305-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040305-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -24,7 +24,9 @@ void foo(int edx, int eax)\n \n /* Verify that we did a forward propagation.  */\n /* { dg-final { scan-tree-dump-times \"Replaced\" 1 \"forwprop1\"} } */\n+/* { dg-final { cleanup-tree-dump \"forwprop1\" } } */\n \n /* After cddce we should have two IF statements remaining as the other\n    two tests can be threaded.  */\n /* { dg-final { scan-tree-dump-times \"if \" 2 \"cddce\"} } */\n+/* { dg-final { cleanup-tree-dump \"cddce\" } } */"}, {"sha": "4bc1f85ae94d563a2830ae85919521472db98df8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040430-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040430-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040430-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040430-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -23,3 +23,4 @@ int main()\n }\n \n /* { dg-final { scan-tree-dump-times \"if \" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "bc65b979dd9316a0d4839465685d39d1d7040894", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040513-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040513-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040513-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040513-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -14,5 +14,4 @@ foo (unsigned int a)\n /* There should be no casts to a _Bool since we can use the temporary\n    holding (a>>5)&1 directly.  */\n /* { dg-final { scan-tree-dump-times \"\\\\(_Bool\\\\)\" 0 \"forwprop1\"} } */\n-                                                                                \n-\n+/* { dg-final { cleanup-tree-dump \"forwprop1\" } } */"}, {"sha": "a3edf9b8040b55a7eaec9095fc8f5915a1526dc1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040513-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040513-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040513-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040513-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -22,3 +22,4 @@ int t(int i)\n /* There should be no link_error calls, if there is any, the\n    optimization has failed */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"dom2\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom2\" } } */"}, {"sha": "4c283507598d5f34a3a4eba97d376f5b68b84390", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040514-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040514-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040514-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040514-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -16,3 +16,4 @@ int t( int i)\n \n /* Should have no ifs left after straightening.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"phiopt1\"} } */\n+/* { dg-final { cleanup-tree-dump \"phiopt1\" } } */"}, {"sha": "98cf3a283bae9ef07d252ea72329a7a43e1eece5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040514-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040514-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040514-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040514-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -15,3 +15,4 @@ foo2 (distance, i, j)\n /* { dg-final { scan-tree-dump-times \"ABS_EXPR \" 1 \"dom3\"} } */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"dom3\"} } */\n \n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "3f3ec1a3572842d3654692d14ba911d087f7fad0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040517-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040517-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040517-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040517-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -18,3 +18,4 @@ void bar (void)\n    does not alias any other pointer.\n    Hence, we must have a VDEF for a before and after the call to foo().  */\n /* { dg-final { scan-tree-dump-times \"V_MAY_DEF\" 1 \"alias1\"} } */\n+/* { dg-final { cleanup-tree-dump \"alias1\" } } */"}, {"sha": "315a5ebf8d1541c5cbb89f6e5768cd3482583306", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040518-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040518-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040518-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040518-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -10,3 +10,4 @@ int f(int a, int b)\n \n /* Should have no ifs left after straightening.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"phiopt1\"} } */\n+/* { dg-final { cleanup-tree-dump \"phiopt1\" } } */"}, {"sha": "62f66232dc51f2100d1d011a5c29c31d038b7a71", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040518-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040518-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040518-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040518-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -14,3 +14,4 @@ int t( int i)\n /* We should convert one COND_EXPRs into straightline code with ABS.  */\n /* { dg-final { scan-tree-dump-times \"straightline\" 1 \"phiopt1\"} } */\n /* { dg-final { scan-tree-dump-times \"ABS_EXPR\" 1 \"phiopt1\"} } */\n+/* { dg-final { cleanup-tree-dump \"phiopt1\" } } */"}, {"sha": "5bb7a4d7faba8092a5d5e19895e50e82c88e1c65", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040615-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040615-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040615-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040615-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -14,3 +14,4 @@ foo (unsigned int a, unsigned int b)\n }\n \n /* { dg-final { scan-tree-dump-times \"bar2\" 0 \"dom1\" } } */\n+/* { dg-final { cleanup-tree-dump \"dom1\" } } */"}, {"sha": "eb8e210951c89141c29d2bef930ed3a1c77d8975", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040624-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040624-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040624-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040624-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -18,4 +18,4 @@ foo (unsigned int a, unsigned int b)\n    conditional.  */\n \n /* { dg-final { scan-tree-dump-times \"if \" 1 \"dom1\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"dom1\" } } */"}, {"sha": "ad96198a4e131b09739f74cf04cc4d98bce97dc4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040703-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040703-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040703-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040703-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -10,3 +10,4 @@ float foo(float x)\n \n /* We should *not* fold the arithmetic.  */\n /* { dg-final { scan-tree-dump-times \"0\\\\.0\" 0 \"dom2\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom2\" } } */"}, {"sha": "44dacef0d9cbf17d7eb04a54f66bf7834b148c61", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040721-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040721-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040721-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040721-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -25,3 +25,4 @@ main ()\n \n /* There should be no G on the RHS of an assignment. */\n /* { dg-final { scan-tree-dump-times \"= G;\" 0 \"ccp\"} } */\n+/* { dg-final { cleanup-tree-dump \"ccp\" } } */"}, {"sha": "e8674e4bc7654627ab9d34b635873a64a6f89d9f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040729-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040729-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040729-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040729-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -16,3 +16,4 @@ foo ()\n    operands.  But 'p' itself is not volatile and taking the address of\n    a volatile does not constitute a volatile operand.  */\n /* { dg-final { scan-tree-dump-times \"&x\" 0 \"dce3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dce3\" } } */"}, {"sha": "3ddef717d8d87a54a0eb0aeceec62314c53e7de4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040911-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040911-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040911-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040911-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -19,3 +19,4 @@ int foo (int i)\n }\n \n /* { dg-final { scan-tree-dump-not \"VUSE <c\" \"alias1\" } } */\n+/* { dg-final { cleanup-tree-dump \"alias1\" } } */"}, {"sha": "9a07877fb1ae2e5bfd7175c7ca637e4e51cc008c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20041002-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20041002-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20041002-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20041002-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -21,3 +21,4 @@ bar (int i)\n }\n \n /* { dg-final { scan-tree-dump-times \"if\" 0 \"ssa\" } } */\n+/* { dg-final { cleanup-tree-dump \"ssa\" } } */"}, {"sha": "ea0fb7ef1bf651d64420dd09b3957918725bed87", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20041122-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20041122-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20041122-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20041122-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -35,5 +35,4 @@ find_unreachable_blocks (int frobit)\n    modify e or e->dest.  The net result is that we only need one\n    load of e->dest.  */\n /* { dg-final { scan-tree-dump-times \"->dest\" 1 \"dom3\" { xfail *-*-* } } } */\n-\n-\n+/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}, {"sha": "aef40005604384ef26e43a5ec39f52899ce75fdf", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20050128-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050128-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050128-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050128-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -11,3 +11,4 @@ foo (int align)\n /* We should have optimized away the mod operator before we genericized\n    the code.  */\n /* { dg-final { scan-tree-dump-times \"%\" 0 \"generic\"} } */\n+/* { dg-final { cleanup-tree-dump \"generic\" } } */"}, {"sha": "b9bb3a749e63fc97441edafc7a53c86a9d812e55", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20050215-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050215-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050215-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050215-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -11,3 +11,4 @@ int foo (void)\n /* Make sure the optimizers don't introduce overflow where one\n    did not exist in the original.  */\n /* { dg-final { scan-tree-dump-times \"-0+4\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "64026287cb4e7a706eb1f4673760bee72a734591", "filename": "gcc/testsuite/gcc.dg/tree-ssa/asm-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -14,3 +14,4 @@ void f()\n \n /* { dg-final { scan-tree-dump-times \"42\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"63\" 1 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "c67b9b53f8d663851851a5918461d288a14976cd", "filename": "gcc/testsuite/gcc.dg/tree-ssa/asm-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -14,3 +14,4 @@ void baz(void)\n }\n \n /* { dg-final { scan-tree-dump-times \"asm\\[^\\\\r\\\\n\\]*xyzzy\" 1 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "fdcddb7a5fab2a4d3718d5be69c39c2a023c063c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/asm-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -28,3 +28,5 @@ void test(void)\n \n /* In particular, hardreg should *not* appear in the call to bar.  */\n /* { dg-final { scan-tree-dump-times \"bar \\[(\\]t\\[)\\]\" 1 \"optimized\" } } */\n+\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "e86a6484e3726b01ea03c3ba08d5bcf614497a23", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cfgcleanup-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcfgcleanup-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcfgcleanup-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcfgcleanup-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -16,3 +16,4 @@ cleanup (int a, int b)\n }\n /* Dce should get rid of the initializers and cfgcleanup should elliminate ifs  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"dce1\"} } */\n+/* { dg-final { cleanup-tree-dump \"dce1\" } } */"}, {"sha": "7c76467f4d73db9efa3ebff55ac4d6bcf3a3af28", "filename": "gcc/testsuite/gcc.dg/tree-ssa/complex-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcomplex-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcomplex-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcomplex-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -10,3 +10,4 @@ C foo(C x, float y)\n }\n \n /* { dg-final { scan-tree-dump-times \"__mul\" 0 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "d2d42b93de2fe3b9a71e54b1245f92e8b6403334", "filename": "gcc/testsuite/gcc.dg/tree-ssa/complex-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcomplex-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcomplex-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcomplex-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -10,3 +10,4 @@ C foo(C x, float y)\n }\n \n /* { dg-final { scan-tree-dump-times \"__div\" 0 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "474633eab651696f9c97f2662791293a2e0986fa", "filename": "gcc/testsuite/gcc.dg/tree-ssa/copy-headers.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcopy-headers.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcopy-headers.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcopy-headers.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -13,3 +13,4 @@ void bla (void)\n \n /* There should be a header duplicated.  */\n /* { dg-final { scan-tree-dump-times \"Duplicating header\" 1 \"ch\"} } */\n+/* { dg-final { cleanup-tree-dump \"ch\" } } */"}, {"sha": "9f8491f1dbf4d058466d1ac1992bf69349ac6f8a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ifc-20040816-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-20040816-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-20040816-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-20040816-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -34,3 +34,4 @@ int main1 ()\n \n \n /* { dg-final { scan-tree-dump-times \"Applying if-conversion\" 1 \"ifcvt\" } } */\n+/* { dg-final { cleanup-tree-dump \"ifcvt\" } } */"}, {"sha": "49cca20857dc16dcf921074cd4b44eab1b57c38a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ifc-20040816-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-20040816-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-20040816-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-20040816-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -33,4 +33,4 @@ void foo(const int * __restrict__ zr_in,\n \n \n /* { dg-final { scan-tree-dump-times \"Applying if-conversion\" 1 \"ifcvt\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"ifcvt\" } } */"}, {"sha": "a08f2abefdcd0ac2bb4174cb6903eb364d41e0b0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/inline_asm-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline_asm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline_asm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline_asm-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -13,6 +13,8 @@ char f(char *a)\n \n /* test_function should be called twice as the inline-asm changes memory. */\n /* { dg-final { scan-tree-dump-times \"test_function\" 2 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */\n \n /* There should a V_MAY_DEF for the inline-asm.  */\n /* { dg-final { scan-tree-dump-times \"V_MAY_DEF\" 1 \"alias1\"} } */\n+/* { dg-final { cleanup-tree-dump \"alias1\" } } */"}, {"sha": "eff5c9985ec1040b228e23f6bd1ab2e5ac108765", "filename": "gcc/testsuite/gcc.dg/tree-ssa/inline_asm-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline_asm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline_asm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline_asm-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -15,3 +15,4 @@ void f(char *a)\n \n /* There should a V_MAY_DEF for the inline-asm and one for the link_error.  */\n /* { dg-final { scan-tree-dump-times \"V_MAY_DEF\" 2 \"alias1\"} } */\n+/* { dg-final { cleanup-tree-dump \"alias1\" } } */"}, {"sha": "87d94918f8254d2d80d4d331b10a3470c60638ab", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -22,8 +22,11 @@ void xxx(void)\n /* We should be able to find out that the loop iterates four times and unroll it completely.  */\n \n /* { dg-final { scan-tree-dump-times \"Added canonical iv to loop 1, 4 iterations\" 1 \"ivcanon\"} } */\n+/* { dg-final { cleanup-tree-dump \"ivcanon\" } } */\n /* { dg-final { scan-tree-dump-times \"Unrolled loop 1 completely\" 1 \"cunroll\"} } */\n+/* { dg-final { cleanup-tree-dump \"cunroll\" } } */\n /* { dg-final { scan-tree-dump-times \"foo\" 5 \"vars\"} } */\n+/* { dg-final { cleanup-tree-dump \"vars\" } } */\n \n /* Because hppa and ia64 targets include an external declaration for foo as\n    well as the calls we need to look for something more specific then just"}, {"sha": "381e34e08f9b6f55f24920e71b9e7f009bbbd543", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -35,3 +35,5 @@ void xxx(void)\n \n /* { dg-final { scan-tree-dump-times \"1700\" 1 \"vars\" } } */\n /* { dg-final { scan-tree-dump-times \"iter\" 0 \"vars\" } } */\n+\n+/* { dg-final { cleanup-tree-dump \"vars\" } } */"}, {"sha": "35f127e14adcbe296e113092cf99856155e5e1cc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -25,3 +25,5 @@ void xxx(void)\n /* And original induction variable should be preserved.  */\n \n /* { dg-final { scan-tree-dump-times \"int iter\" 1 \"vars\" } } */\n+\n+/* { dg-final { cleanup-tree-dump \"vars\" } } */"}, {"sha": "147a343eff0d97d47a8a690636680459a7522b1f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-4.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -39,3 +39,5 @@ void xxx(void)\n /* And the original induction variable should be eliminated.  */\n \n /* { dg-final { scan-tree-dump-times \"iter\" 0 \"vars\" } } */\n+\n+/* { dg-final { cleanup-tree-dump \"vars\" } } */"}, {"sha": "c797cd176fbf17114e2657e1d71c91789d325ca3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-5.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-5.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -24,3 +24,5 @@ void xxx(void)\n /* And the use of jter should be replaced by iter + 2 */\n \n /* { dg-final { scan-tree-dump-times \" \\\\+ 2\" 1 \"vars\" } } */\n+\n+/* { dg-final { cleanup-tree-dump \"vars\" } } */"}, {"sha": "f46b8462076cc45db7ecb04d4d4eab5896dbc3fe", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-6.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-6.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -20,7 +20,9 @@ void xxx(void)\n /* Loop should be unswitched.  */\n \n /* { dg-final { scan-tree-dump-times \"Unswitching loop\" 1 \"unswitch\" } } */\n+/* { dg-final { cleanup-tree-dump \"unswitch\" } } */\n \n /* In effect there should be exactly three conditional jumps in the final program.  */\n \n /* { dg-final { scan-tree-dump-times \"else\" 3 \"vars\" } } */\n+/* { dg-final { cleanup-tree-dump \"vars\" } } */"}, {"sha": "462df8c90bde4a374fc3ab3d989ffca54ec8cd25", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-7.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -32,3 +32,4 @@ int xxx (void)\n    with k = 0 may be invalid.  */\n \n /* { dg-final { scan-tree-dump-times \"Moving statement\" 2 \"lim\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim\" } } */"}, {"sha": "33b82cbb7460136083d6659988722f10f8bb45ab", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ltrans-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -20,3 +20,4 @@ int foo(int N, int *res)\n /* { dg-final { scan-tree-dump-times \"converted loop nest to perfect\n    loop nest\" 1 \"ltrans\"} } */ \n /* { dg-final { scan-tree-dump-times \"transformed loop\" 1 \"ltrans\"} } */ \n+/* { dg-final { cleanup-tree-dump \"ltrans\" } } */"}, {"sha": "9cfa60d2d9967426552ceeef630c7d6a629d8868", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ltrans-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -22,3 +22,4 @@ int foo(int N, int *res)\n }\n /* { dg-final { scan-tree-dump-times \"transformed loop\" 1 \"ltrans\"} {\n    xfail *-*-*} } */ \n+/* { dg-final { cleanup-tree-dump \"ltrans\" } } */"}, {"sha": "0cb266f4cc49615fc16432deb807afb4a4791fe8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ltrans-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -17,3 +17,4 @@ int foo(int N, int *res)\n }\n \n /* { dg-final { scan-tree-dump-times \"transformed loop\" 1 \"ltrans\"} } */ \n+/* { dg-final { cleanup-tree-dump \"ltrans\" } } */"}, {"sha": "06a4bc2cf68a5a3f9fd516854e236106d02bb7bc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ltrans-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-4.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -16,3 +16,4 @@ int foo(int N, int *res)\n }\n \n /* { dg-final { scan-tree-dump-times \"transformed loop\" 1 \"ltrans\"} } */ \n+/* { dg-final { cleanup-tree-dump \"ltrans\" } } */"}, {"sha": "c55fec3f09d743981e692d4c8346265653212150", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ltrans-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fltrans-5.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -16,3 +16,4 @@ int main(void)\n \n /* { dg-final { scan-tree-dump-times \"Linear expression:  constant: 1   invariants:   denominator: 1\" 1 \"ltrans\" } } */\n /* { dg-final { scan-tree-dump-times \"transformed loop\" 1 \"ltrans\"} } */ \n+/* { dg-final { cleanup-tree-dump \"ltrans\" } } */"}, {"sha": "5c440e60775117b4107b28f089a4f3a9dc37137c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr15349.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15349.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15349.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15349.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -23,3 +23,4 @@ foo (int a, int b)\n }\n \n /* { dg-final { scan-tree-dump-times \"PHI\" 1 \"mergephi\"} } */\n+/* { dg-final { cleanup-tree-dump \"mergephi\" } } */"}, {"sha": "2fd03e2e0cb288a00983a25e78d1df93bd8cc5ff", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr15791-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15791-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15791-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15791-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -10,4 +10,4 @@ int f(int i, unsigned j)\n }\n \n /* { dg-final { scan-tree-dump-times \"i == j\" 0 \"gimple\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"gimple\" } } */"}, {"sha": "82be2e33a9a320efaa48b2c9e1fcc259a55366a3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr15791-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15791-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15791-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15791-4.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -10,4 +10,4 @@ int f(int i, int j)\n }\n \n /* { dg-final { scan-tree-dump-times \"i == j\" 0 \"gimple\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"gimple\" } } */"}, {"sha": "06ce523a7ae6ed2452d65c8c5cc777699cb14b9e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr15791-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15791-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15791-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15791-5.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -10,4 +10,4 @@ int foo(int i, int j)\n }\n \n /* { dg-final { scan-tree-dump-times \"i == j\" 1 \"gimple\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"gimple\" } } */"}, {"sha": "eec753405c773f9e237f51c4eb7b8d41d1512992", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr16721.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr16721.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr16721.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr16721.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -13,3 +13,4 @@ int test()\n \n /* The load from p->addr should not disappear.  */\n /* { dg-final { scan-tree-dump-times \"\\->addr\" 1 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "01c7eec312922d45f7534c4f137b737064f52e05", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr19633.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr19633.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr19633.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr19633.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -23,3 +23,4 @@ foo (int a, struct T b)\n /* Make sure that .GLOBAL_VAR is not created when there are no\n    clobbering calls.  */\n /* { dg-final { scan-tree-dump-times \"GLOBAL_VAR\" 0 \"ssa\"} } */\n+/* { dg-final { cleanup-tree-dump \"ssa\" } } */"}, {"sha": "c2e45eb1f84874776545050786559e79a60a9acd", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -70,3 +70,4 @@ copystruct111111 (teststruct param)\n \n /* There should be no referenc to link_error. */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "ac4c1c61c6b20367b1f7b0288de12e905f0f7cd7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -23,3 +23,4 @@ copystruct11 (teststruct *param)\n \n /* There should be no reference to link_error. */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "1f6adcf5876bbab1f960a5753fd77c7ff2fbf430", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -25,3 +25,4 @@ copystruct1 (void)\n \n /* There should be no reference to link_error. */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "a7d5cd82a50eb0eafef979852f145d440300920c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -72,3 +72,4 @@ void test11111 (int p, int q, int r)\n /* There should be not link_error calls, if there is any the\n    optimization has failed */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"ccp\"} } */\n+/* { dg-final { cleanup-tree-dump \"ccp\" } } */"}, {"sha": "7177d991e24dd99d8fbc21af2f2d0a55ddebf743", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-10.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -31,3 +31,4 @@ void foo(int i)\n \n /* There should be no calls to strlen.  */\n /* { dg-final { scan-tree-dump-times \"strlen\" 0 \"fab\"} } */\n+/* { dg-final { cleanup-tree-dump \"fab\" } } */"}, {"sha": "5d774f8b4526302c7be6d7ca2de1afcf408991c1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-11.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -39,3 +39,4 @@ int test1111 (int param)\n \n /* All ifs should be eliminated. */\n /* { dg-final { scan-tree-dump-times \"if\" 0 \"optimized\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "aad1a3f3cc4d4cab05051ee4c68bf67a66808e3e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -169,3 +169,4 @@ int test99999 (void)\n /* There should be not link_error calls, if there is any the\n    optimization has failed */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"ccp\"} } */\n+/* { dg-final { cleanup-tree-dump \"ccp\" } } */"}, {"sha": "f15ba1ee113f8b1d2c73c69851f6db19c7678f84", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -132,3 +132,4 @@ int* test666 (int * __restrict__ rp1, int * __restrict__ rp2, int *p1)\n /* ??? While we indeed don't handle some of these, a couple of the\n    restrict tests are incorrect.  */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"ccp\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"ccp\" } } */"}, {"sha": "bd97b897c3ed62d9c455e9993530f933f3fcedce", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-7.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -24,4 +24,4 @@ int test7 (int a)\n /* There should be not link_error calls, if there is any the\n    optimization has failed */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"ccp\"} } */\n-\n+/* { dg-final { cleanup-tree-dump \"ccp\" } } */"}, {"sha": "db19b00d14518087cb34f0e3d63bf989004e75fa", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-9.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -52,3 +52,4 @@ test99999 (int *arr, int j)\n /* There should be no link_error calls, if there is any, the\n    optimization has failed */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"ccp\"} } */\n+/* { dg-final { cleanup-tree-dump \"ccp\" } } */"}, {"sha": "3a1cad1b8bcb7552262bc3220170aeb2b1c34e03", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dce-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -10,3 +10,4 @@ q()\n }\n /* There should be no IF conditionals.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"dce3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dce3\" } } */"}, {"sha": "213c521d8a32c422659de86b13054fc2798f2c72", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dce-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -14,3 +14,4 @@ q()\n }\n /* There should be no IF conditionals.  */\n /* { dg-final { scan-tree-dump-times \"if \" 0 \"dce3\"} } */\n+/* { dg-final { cleanup-tree-dump \"dce3\" } } */"}, {"sha": "847d4209b58e217c6223f138ab64cac09769593a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dce-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -27,3 +27,5 @@ int main(void)\n \n /* And one if (for the exit condition of the loop):  */\n /* { dg-final { scan-tree-dump-times \"if \" 1 \"cddce\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"cddce\" } } */"}, {"sha": "9aacbcb27466ddce0b257d3e2c76b9d1c2bf3792", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dom-ccp-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-ccp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-ccp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-ccp-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -15,3 +15,4 @@ ccp(int b)\n }\n /* We should propagate constant 4 into return.  */\n /* { dg-final { scan-tree-dump-times \"Replaced.*with constant '4'\" 1 \"dom1\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom1\" } } */"}, {"sha": "82687d71913d925674837a9c4b9103fcc47ecd1f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dom-cse-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-cse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-cse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-cse-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -13,3 +13,4 @@ threading(int a,int b)\n }\n /* We should thread the jump twice and eliminate it.  */\n /* { dg-final { scan-tree-dump-times \"Replaced.* t \" 1 \"dom1\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom1\" } } */"}, {"sha": "d89394a2698a43ceefa957a5a34e4e4eda9ee2b6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dom-thread-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -15,3 +15,4 @@ threading(int a,int b)\n }\n /* We should thread the jump twice and elliminate it.  */\n /* { dg-final { scan-tree-dump-times \"Threaded\" 2 \"dom1\"} } */\n+/* { dg-final { cleanup-tree-dump \"dom1\" } } */"}, {"sha": "a2fc435e3ec5af79951897961ce8f96263502b6c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -18,3 +18,4 @@ int main(int argc, char **argv)\n /* We should eliminate one evaluation of b + c along the main path, \n    causing one reload. */\n /* { dg-final { scan-tree-dump-times \"Eliminated:1\" 1 \"pre\"} } */\n+/* { dg-final { cleanup-tree-dump \"pre\" } } */"}, {"sha": "3a110783013b025c64c47f99285e30566d855a36", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -18,3 +18,4 @@ int motion_test1(int data, int data_0, int data_3, int v)\n /* We should eliminate one computation of data_0 + data_3 along the \n    main path, causing one reload. */\n /* { dg-final { scan-tree-dump-times \"Eliminated:1\" 1 \"pre\"} } */\n+/* { dg-final { cleanup-tree-dump \"pre\" } } */"}, {"sha": "6952bc6f3d9cb8381581fdfa81b3f9d52a46dc12", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -12,3 +12,4 @@ unsigned foo1 (unsigned a, unsigned b)\n }\n /* We should eliminate both 4*b and 4*a from the main body of the loop */\n /* { dg-final { scan-tree-dump-times \"Eliminated:2\" 1 \"pre\"} } */\n+/* { dg-final { cleanup-tree-dump \"pre\" } } */"}, {"sha": "acb7f5ae28ab3404da778eded43b5f3ad2bf972b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-4.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -12,3 +12,4 @@ int main(void)\n /* We should eliminate the x+1 computation from this routine, replacing\n    it with a phi of 3, 4 */\n /* { dg-final { scan-tree-dump-times \"Eliminated:1\" 1 \"pre\"} } */\n+/* { dg-final { cleanup-tree-dump \"pre\" } } */"}, {"sha": "c3f79c2999b740a345dc1d82239c666e3bbb5dc5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-5.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -13,3 +13,4 @@ foo (int i)\n /* We should detect that a+b is the same along both edges, and replace it with\n    5  */\n /* { dg-final { scan-tree-dump-times \"Constified:1\" 1 \"pre\"} } */\n+/* { dg-final { cleanup-tree-dump \"pre\" } } */"}, {"sha": "39b0e8350080cde8c2733580fa65b5f2c8009e3b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-6.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -11,3 +11,4 @@ int main(int x)\n /* We should eliminate one evaluation of x + 1 along the x = 2 path,\n    causing one elimination.  */\n /* { dg-final { scan-tree-dump-times \"Eliminated:1\" 1 \"pre\"} } */\n+/* { dg-final { cleanup-tree-dump \"pre\" } } */"}, {"sha": "4dc415d438e235d1d8de07f0e8d50801c88273b1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sink-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -7,4 +7,5 @@ foo (int a, int b, int c)\n   return c ? x : a;\n }\n /* We should sink the x = a * b calculation into the branch that returns x. */\n-/* { dg-final { scan-tree-dump-times \"Sunk statements:1\" 1 \"sink\"} } */\n+/* { dg-final { scan-tree-dump-times \"Sunk statements:1\" 1 \"sink\" } } */\n+/* { dg-final { cleanup-tree-dump \"sink\" } } */"}, {"sha": "259a11a34d14ea4e17c8528916e9071b84336774", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sink-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -9,4 +9,5 @@ bar (int a, int b, int c)\n   return y;\n }\n /* We should sink the x = a * b calculation into the else branch  */\n-/* { dg-final { scan-tree-dump-times \"Sunk statements:1\" 1 \"sink\"} } */\n+/* { dg-final { scan-tree-dump-times \"Sunk statements:1\" 1 \"sink\" } } */\n+/* { dg-final { cleanup-tree-dump \"sink\" } } */"}, {"sha": "50efa339f5e3595f34521108daa032c8002f9ce8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sink-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -12,4 +12,5 @@ main (int argc)\n     }\n }\n /* We should sink the a = argc + 1 calculation into the if branch  */\n-/* { dg-final { scan-tree-dump-times \"Sunk statements:1\" 1 \"sink\"} } */\n+/* { dg-final { scan-tree-dump-times \"Sunk statements:1\" 1 \"sink\" } } */\n+/* { dg-final { cleanup-tree-dump \"sink\" } } */"}, {"sha": "c49c4f8d00647963fd2301c65d4fe4244855fa0f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sink-4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-4.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -17,4 +17,5 @@ main (int argc)\n   foo2 (a);\n }\n /* We should sink the first a = b + c calculation into the else branch  */\n-/* { dg-final { scan-tree-dump-times \"Sunk statements:1\" 1 \"sink\"} } */\n+/* { dg-final { scan-tree-dump-times \"Sunk statements:1\" 1 \"sink\" } } */\n+/* { dg-final { cleanup-tree-dump \"sink\" } } */"}, {"sha": "422ee2d7baebd8f1bea69221721988c797a6d4ba", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailcall-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailcall-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailcall-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailcall-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -17,3 +17,4 @@ t(int a)\n \treturn r;\n }\n /* { dg-final { scan-tree-dump-times \"Found tail call\" 1 \"tailc\"} } */\n+/* { dg-final { cleanup-tree-dump \"tailc\" } } */"}, {"sha": "bd9a853546103b5b976fd699cc80ab01f423b901", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailcall-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailcall-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailcall-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailcall-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -21,3 +21,4 @@ foo (int *x)\n    variables, they ought to be ignored.  There should be two tail\n    calls here.  */\n /* { dg-final { scan-tree-dump-times \"Found tail call\" 2 \"tailc\"} } */\n+/* { dg-final { cleanup-tree-dump \"tailc\" } } */"}, {"sha": "af65736661fbfd50ea97f0c99ff584f441263303", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailrecursion-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -9,3 +9,4 @@ t(int a)\n \t\treturn 0;\n }\n /* { dg-final { scan-tree-dump-times \"Eliminated tail recursion\" 1 \"tailr\"} } */\n+/* { dg-final { cleanup-tree-dump \"tailr\" } } */"}, {"sha": "d0bc8b9c23083d9c25ba8fbe1b4fd1130642f2b3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailrecursion-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -10,3 +10,4 @@ t(char *a)\n \t\treturn 0;\n }\n /* { dg-final { scan-tree-dump-times \"Eliminated tail recursion\" 1 \"tailr\"} } */\n+/* { dg-final { cleanup-tree-dump \"tailr\" } } */"}, {"sha": "4e0ca133e5db8cff7c974774cb21f3f541e6df10", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailrecursion-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -13,3 +13,4 @@ t(int a)\n \treturn r;\n }\n /* { dg-final { scan-tree-dump-times \"Eliminated tail recursion\" 1 \"tailr\"} } */\n+/* { dg-final { cleanup-tree-dump \"tailr\" } } */"}, {"sha": "edab9833f0ffcb97f7160229ccbed32d1b45f677", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailrecursion-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-4.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -15,3 +15,4 @@ t(int a)\n \treturn r;\n }\n /* { dg-final { scan-tree-dump-times \"Eliminated tail recursion\" 2 \"tailr\"} } */\n+/* { dg-final { cleanup-tree-dump \"tailr\" } } */"}, {"sha": "2a0af0a714bd2a8da32c06c49a0647d0e7babd01", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailrecursion-5.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-5.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -73,3 +73,5 @@ int main(void)\n \n /* There is one recursive call to fib.  */\n /* { dg-final { scan-tree-dump-times \"\\\\mfib\\\\M\" 5 \"optimized\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "9170b7ca4de56092b640c50a477e49d3158db938", "filename": "gcc/testsuite/gcc.dg/tree-ssa/useless-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fuseless-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fuseless-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fuseless-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -14,3 +14,4 @@ foo (void)\n    GIMPLE lowering, at the cost of an extra statement, label,\n    and basic block.  */\n /* { dg-final { scan-tree-dump-times \"goto\" 3 \"useless\"} } */ \n+/* { dg-final { cleanup-tree-dump \"useless\" } } */"}, {"sha": "d413c61abd7899251056cd1818c8b06dda811343", "filename": "gcc/testsuite/gcc.dg/vect/pr16105.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr16105.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr16105.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr16105.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -19,3 +19,4 @@ void square(const afloat * __restrict__ a,\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"} } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "02aaed2f864e1f3b5826ee9a8b4f4b8e166511c9", "filename": "gcc/testsuite/gcc.dg/vect/pr18308.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18308.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18308.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18308.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -11,3 +11,4 @@ void bar(int j)\n   if (k) foo();\n }\n \n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e2ad18cec7dda410693ab3cd2575f9942df5a2f0", "filename": "gcc/testsuite/gcc.dg/vect/pr18400.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18400.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18400.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18400.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -34,3 +34,4 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "08f7b65cc49a8db7358c0c58851f417e1d46fa7b", "filename": "gcc/testsuite/gcc.dg/vect/pr18425.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18425.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18425.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18425.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -14,3 +14,4 @@ _M_fill_insert(unsigned int __n)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "4bf41bec40151cd573742816ad7321dd69479210", "filename": "gcc/testsuite/gcc.dg/vect/pr18536.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18536.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18536.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18536.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -32,3 +32,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "938a7b3d1814ba98f414cbda82bab6795ef35b99", "filename": "gcc/testsuite/gcc.dg/vect/vect-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -100,3 +100,4 @@ foo (int n)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "903db3e2475089014c853642621dde6dc8db90f2", "filename": "gcc/testsuite/gcc.dg/vect/vect-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-10.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -24,3 +24,4 @@ int foo ()\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "2e0723333c1a2a8d2bdf2361fb5ffa15ad256e42", "filename": "gcc/testsuite/gcc.dg/vect/vect-11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -36,3 +36,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "c697064586c6ed0c8c319ef400ad7b67b24425ea", "filename": "gcc/testsuite/gcc.dg/vect/vect-12.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-12.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -40,3 +40,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "9e6f4f92511b2b3a2afafb3e65de750a9794ee02", "filename": "gcc/testsuite/gcc.dg/vect/vect-13.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-13.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -38,3 +38,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_max } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "250788418c3018f1b81c9db623eeaf6eed284a37", "filename": "gcc/testsuite/gcc.dg/vect/vect-14.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-14.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -34,3 +34,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "37e6b06766d15bbfe334905a539bb7ae9f5435e7", "filename": "gcc/testsuite/gcc.dg/vect/vect-15.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-15.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -35,3 +35,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "d5b60deb2a7754798b29504b70b3dc5672c2b23a", "filename": "gcc/testsuite/gcc.dg/vect/vect-16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-16.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -34,3 +34,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "347b9a1a511587d5dc9ced3fcecc1587d27f3e18", "filename": "gcc/testsuite/gcc.dg/vect/vect-17.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-17.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -126,3 +126,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_bitwise } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "eab298a845b86824a353df271cd01006617ab381", "filename": "gcc/testsuite/gcc.dg/vect/vect-18.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-18.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -125,3 +125,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_bitwise } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "6d3ea7325b20bed4bd017d525c78ea0482558917", "filename": "gcc/testsuite/gcc.dg/vect/vect-19.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-19.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -125,3 +125,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_bitwise } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "2bf5ba71b154e5dbf59dfdd74dc66c688a41f0c8", "filename": "gcc/testsuite/gcc.dg/vect/vect-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-2.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -35,3 +35,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "aa27285227b13419facde62fc825040fd88177b6", "filename": "gcc/testsuite/gcc.dg/vect/vect-20.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-20.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -97,3 +97,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_bitwise } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "904a4ab6aa98a4450b06675a12be97fdbe589dcc", "filename": "gcc/testsuite/gcc.dg/vect/vect-21.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-21.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -126,3 +126,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n \n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "f15a4ff50fcf4775e9878d20b9cd24e41cbab5ac", "filename": "gcc/testsuite/gcc.dg/vect/vect-22.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-22.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -97,3 +97,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n \n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "3185fdb2cae25ca443a5b922719bdebc4c8d9763", "filename": "gcc/testsuite/gcc.dg/vect/vect-23.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-23.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -125,4 +125,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "1d87f0e204a02a0fb99b773c232946de72d1ca79", "filename": "gcc/testsuite/gcc.dg/vect/vect-24.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-24.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -125,4 +125,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "092cadce79e8d6d59350e943f7ba91d785605237", "filename": "gcc/testsuite/gcc.dg/vect/vect-25.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-25.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -51,3 +51,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "2ee995897a1d9d2786709138d84a52a91abbd084", "filename": "gcc/testsuite/gcc.dg/vect/vect-26.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-26.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -37,4 +37,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "2f75e09867c6e008806e6b3ec522386c42fd6eb1", "filename": "gcc/testsuite/gcc.dg/vect/vect-27.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -43,3 +43,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "511089b17da9a06f3bec01669a25530b7b31fea2", "filename": "gcc/testsuite/gcc.dg/vect/vect-28.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-28.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -40,4 +40,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "77d1737c37f71f38e03411296db35cd0f265de68", "filename": "gcc/testsuite/gcc.dg/vect/vect-29.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -46,4 +46,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "cb1daebdfaaa332c723a991c52b2572689fc332f", "filename": "gcc/testsuite/gcc.dg/vect/vect-3.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-3.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -47,6 +47,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n-\n-\n-\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e56326ae965162e406e79d1d8b11d9401b51640e", "filename": "gcc/testsuite/gcc.dg/vect/vect-30.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-30.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -62,3 +62,4 @@ int main (void)\n /* Need misalignment support, or cgraph to delay emitting the arrays until\n    after vectorization can force-align them.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "44a10f6ebd31508f772bd0cf2fda29db584507ae", "filename": "gcc/testsuite/gcc.dg/vect/vect-31.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-31.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -88,3 +88,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "2c4a663c7dfd5c9d9296668222b6efaea6ac9469", "filename": "gcc/testsuite/gcc.dg/vect/vect-32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-32.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -36,3 +36,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "40383cf8b78ce5634fe8a388c87311d38dadf036", "filename": "gcc/testsuite/gcc.dg/vect/vect-33.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-33.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -39,3 +39,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "f83d4142bbc6ea00fbbab729bd8f3a59292164f0", "filename": "gcc/testsuite/gcc.dg/vect/vect-34.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -37,3 +37,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "897868daedac25dfcd331866dc68961715c47f4f", "filename": "gcc/testsuite/gcc.dg/vect/vect-35.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -46,3 +46,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "deaf729a3ce30ee2bf1bcbaa90094c30c7c9b2d6", "filename": "gcc/testsuite/gcc.dg/vect/vect-36.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -43,3 +43,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "1a5a1003cf81d789978af2b3475c7fa4c3d039f3", "filename": "gcc/testsuite/gcc.dg/vect/vect-37.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-37.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-37.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-37.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -57,3 +57,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "331cfe3d59b31e172a7b70267a4c5e7314c08490", "filename": "gcc/testsuite/gcc.dg/vect/vect-38.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-38.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -36,3 +36,4 @@ int main (void)\n \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "05c0b363a45a865ebef5fd407ad77c64e9ce116c", "filename": "gcc/testsuite/gcc.dg/vect/vect-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-4.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -37,3 +37,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "89fc88e28797c819beb0d0a825830a32bd035887", "filename": "gcc/testsuite/gcc.dg/vect/vect-40.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-40.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-40.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-40.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -51,3 +51,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"} } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "21591b6af611541a5581c14894cba5bbc6a669db", "filename": "gcc/testsuite/gcc.dg/vect/vect-41.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-41.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-41.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-41.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -52,3 +52,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "4cab6311314ed1ae3e7ec8e0e7311a08ebb2c3a4", "filename": "gcc/testsuite/gcc.dg/vect/vect-42.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -54,3 +54,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"} } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "6cea83206f92069cf23e95a5c858f0444e53e9db", "filename": "gcc/testsuite/gcc.dg/vect/vect-43.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-43.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-43.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-43.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -55,3 +55,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "46eb2a6d0e9bfed9f7c76fdd71a36e06d7bab774", "filename": "gcc/testsuite/gcc.dg/vect/vect-44.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -57,3 +57,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "05925090ceee9e94594eaacfaa7ef8ace1d7f5e2", "filename": "gcc/testsuite/gcc.dg/vect/vect-45.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-45.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-45.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-45.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -50,3 +50,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "4ced75a46428f1cb43e42d620ec8eb1e25d6495a", "filename": "gcc/testsuite/gcc.dg/vect/vect-46.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-46.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-46.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-46.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -52,3 +52,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "12a7a5afb8c128a5aa5df4e54140a0920beac522", "filename": "gcc/testsuite/gcc.dg/vect/vect-47.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-47.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-47.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-47.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -53,3 +53,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "b4da6d01f4772eb0b596a2d54be3148e65c264db", "filename": "gcc/testsuite/gcc.dg/vect/vect-48.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -55,3 +55,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "fda45952a727eaa66938ec99f0becba172fc61fb", "filename": "gcc/testsuite/gcc.dg/vect/vect-49.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-49.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-49.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-49.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -51,3 +51,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "5ecf4e7da0af35163b30b0019ea7e6ae7523c431", "filename": "gcc/testsuite/gcc.dg/vect/vect-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-5.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -53,3 +53,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "af808e85b463f3389043f4540104991d3f2cb7fb", "filename": "gcc/testsuite/gcc.dg/vect/vect-50.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -52,3 +52,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "f29af132a1faa06201d855a1261b2fbdd36349b9", "filename": "gcc/testsuite/gcc.dg/vect/vect-51.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-51.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-51.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-51.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -50,3 +50,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "d321dcfdee66c56f95ccf8105d215a6af1f26844", "filename": "gcc/testsuite/gcc.dg/vect/vect-52.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -54,3 +54,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "ff3c103746737c9445ce03d3136853c2facca589", "filename": "gcc/testsuite/gcc.dg/vect/vect-53.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-53.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-53.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-53.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -52,3 +52,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "b68c61badc37d57af6e74ed49d55c4489937e150", "filename": "gcc/testsuite/gcc.dg/vect/vect-54.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -53,3 +53,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "6d130df0c5cf65e199c798cb86ac0c4f1ffd66c7", "filename": "gcc/testsuite/gcc.dg/vect/vect-55.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-55.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-55.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-55.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -51,3 +51,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "de53a2ad595aabf791ed29d46a30ea44023e0e9e", "filename": "gcc/testsuite/gcc.dg/vect/vect-56.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -53,3 +53,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "950cdaeb13b84832fddc22c807dfeee1a3004c67", "filename": "gcc/testsuite/gcc.dg/vect/vect-57.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-57.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-57.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-57.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -51,3 +51,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "5d282d47f411c7c0c299567ddde583044d1fdbfb", "filename": "gcc/testsuite/gcc.dg/vect/vect-58.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -54,3 +54,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "568dc0e662cc221d5399566e2c7b16925c7ccfb9", "filename": "gcc/testsuite/gcc.dg/vect/vect-59.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-59.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-59.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-59.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -52,3 +52,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "1b3383a47c879f18465bd0baa2cd5a2708184938", "filename": "gcc/testsuite/gcc.dg/vect/vect-6.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-6.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -54,5 +54,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n-\n-\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "188fa15aeba6887f05ad819fa21baec8c5269c54", "filename": "gcc/testsuite/gcc.dg/vect/vect-60.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -54,3 +54,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "2911048f723b78918cfa92b6c51b188fdde3e3a2", "filename": "gcc/testsuite/gcc.dg/vect/vect-61.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-61.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-61.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-61.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -53,3 +53,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "f696aa355b859e9af26de7dea41a874a185a79b5", "filename": "gcc/testsuite/gcc.dg/vect/vect-62.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-62.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-62.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-62.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -64,3 +64,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "2bffa2b60c0d434cbe92ff56eeb12a783cd10784", "filename": "gcc/testsuite/gcc.dg/vect/vect-63.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-63.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-63.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-63.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -42,3 +42,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e63f93e8b5179216165ab522ef97f70591e7ec44", "filename": "gcc/testsuite/gcc.dg/vect/vect-64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-64.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -83,3 +83,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "4215441cee85428ab66f762828a54002d4e851c2", "filename": "gcc/testsuite/gcc.dg/vect/vect-65.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-65.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-65.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-65.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -80,3 +80,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "683cd7378cd20180a4ef3e62bac0a480abd5141b", "filename": "gcc/testsuite/gcc.dg/vect/vect-66.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-66.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-66.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-66.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -79,3 +79,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "2ad072a88182cf3632a15933fec1073d0a4a82c0", "filename": "gcc/testsuite/gcc.dg/vect/vect-67.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-67.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-67.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-67.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -43,3 +43,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "05ab1ddc94b0b2c9b45bf88e8cd8df3cc87b694d", "filename": "gcc/testsuite/gcc.dg/vect/vect-68.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-68.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-68.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-68.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -87,3 +87,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "6da9bfbfdcc1a698241151ef732484c68ecfaa7d", "filename": "gcc/testsuite/gcc.dg/vect/vect-69.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-69.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-69.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-69.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -114,3 +114,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "c753de8cd8179a92752178db5e7a613493d5723c", "filename": "gcc/testsuite/gcc.dg/vect/vect-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -48,3 +48,4 @@ int main (void)\n /* Fails for targets that don't vectorize PLUS.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { xfail alpha*-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "cc2e4bd7fe3dcafea1b73e0253ca8874245d1212", "filename": "gcc/testsuite/gcc.dg/vect/vect-70.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-70.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-70.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-70.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -64,4 +64,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n-  \n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "d88bddea36e9bebdec16239f4f2ed22a17a750df", "filename": "gcc/testsuite/gcc.dg/vect/vect-71.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-71.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-71.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-71.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -36,4 +36,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { xfail *-*-* } } } */\n-\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "d6f0fe4e6b3c309fc1c8c2e810e4d80a4191dfbd", "filename": "gcc/testsuite/gcc.dg/vect/vect-72.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -43,4 +43,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "d4dd077ca4bcf135b5bddc7e96d3767ba31f540d", "filename": "gcc/testsuite/gcc.dg/vect/vect-73.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-73.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-73.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-73.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -38,3 +38,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "86e09c9098d1168a4c112f40ab809879ee91b6e9", "filename": "gcc/testsuite/gcc.dg/vect/vect-74.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-74.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-74.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-74.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -42,3 +42,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "121eddd54dc1d53da580690d775fa10b88d38e3d", "filename": "gcc/testsuite/gcc.dg/vect/vect-75.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-75.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-75.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-75.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -42,4 +42,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "1c3eba95a58f370af493424c6bbde3f487608163", "filename": "gcc/testsuite/gcc.dg/vect/vect-76.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-76.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-76.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-76.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -69,4 +69,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "14da163a778b40e0756dd9c2d922b487a92b4efa", "filename": "gcc/testsuite/gcc.dg/vect/vect-77.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -42,3 +42,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail { lp64 || vect_no_align } } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { lp64 || vect_no_align } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e22efcac7c6b7cb896b465300e2ebfe4995bb6e4", "filename": "gcc/testsuite/gcc.dg/vect/vect-78.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -43,3 +43,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail { lp64 || vect_no_align } } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { lp64 || vect_no_align } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "ffe101d5b3a590e15a993330e4acfc08017ded69", "filename": "gcc/testsuite/gcc.dg/vect/vect-79.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-79.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-79.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-79.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -43,3 +43,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "450d85bee78a390bcb0c5530b13fa1952d25831d", "filename": "gcc/testsuite/gcc.dg/vect/vect-8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-8.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -37,3 +37,4 @@ int main (void)\n /* Need misalignment support, or cgraph to delay emitting the arrays until\n    after vectorization can force-align them.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e05ff04fb52e733c588edd377dc7fc30b72eb1ae", "filename": "gcc/testsuite/gcc.dg/vect/vect-80.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -45,3 +45,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "ac682c7997b11e84788d28841e57985199266ad4", "filename": "gcc/testsuite/gcc.dg/vect/vect-82.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-82.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-82.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-82.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -33,3 +33,4 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "d6e97523695673eca4833e88d17c8fe0698310d5", "filename": "gcc/testsuite/gcc.dg/vect/vect-82_64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-82_64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-82_64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-82_64.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -34,3 +34,4 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "7a23f5b4908c9997bdea332a7958e4802f9b093d", "filename": "gcc/testsuite/gcc.dg/vect/vect-83.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-83.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-83.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-83.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -33,3 +33,4 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "ea99a9e21be55defc7aaf665c93a56d65844e2b3", "filename": "gcc/testsuite/gcc.dg/vect/vect-83_64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-83_64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-83_64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-83_64.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -34,3 +34,4 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "cb4b31ae015ef360276576bbda91638b4eb38a09", "filename": "gcc/testsuite/gcc.dg/vect/vect-85.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-85.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-85.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-85.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -47,3 +47,4 @@ int main (void)\n \n /* Fails for targets that don't vectorize PLUS (e.g alpha).  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail alpha*-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "a945787f91cdea6f16917e758c6bbb69823f1484", "filename": "gcc/testsuite/gcc.dg/vect/vect-86.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-86.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-86.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-86.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -49,3 +49,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail alpha*-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "f18fe689ea3fcb5a821035f74ef820c573d644f2", "filename": "gcc/testsuite/gcc.dg/vect/vect-87.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -53,3 +53,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail alpha*-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail alpha*-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e12332e6eb01935f0db577c005c0afad0dac1b85", "filename": "gcc/testsuite/gcc.dg/vect/vect-88.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -53,3 +53,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail alpha*-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail alpha*-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "f86b28fed2e7852be9beeaa61398dcb9907c9a0a", "filename": "gcc/testsuite/gcc.dg/vect/vect-89.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-89.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-89.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-89.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -46,3 +46,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "76638d0df76d58bb5c819950e7b11b506f2466be", "filename": "gcc/testsuite/gcc.dg/vect/vect-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-9.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -35,3 +35,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "78b2fa4ac990a1f471d2f62b8a7a476987896cc6", "filename": "gcc/testsuite/gcc.dg/vect/vect-96.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-96.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-96.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-96.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -40,3 +40,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "5bb7a485f16269fc8c22b80767d8ff4bf8b882ce", "filename": "gcc/testsuite/gcc.dg/vect/vect-97.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-97.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-97.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-97.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -56,3 +56,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e1548bbc73b943b5f6be56163a5546541d890366", "filename": "gcc/testsuite/gcc.dg/vect/vect-98.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-98.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-98.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-98.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -38,3 +38,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"not vectorized: complicated access pattern\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "2f4429b649cac3d365174f9211370ae860c5dd09", "filename": "gcc/testsuite/gcc.dg/vect/vect-all.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-all.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-all.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-all.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -215,3 +215,4 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 10 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "4cc8e0b2b179e0778cc60f8357a3a1c8e8f94016", "filename": "gcc/testsuite/gcc.dg/vect/vect-none.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-none.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-none.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-none.c?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -182,3 +182,4 @@ foo (int n)\n \n /* { dg-final { scan-tree-dump-times \"vectorized \" 3 \"vect\"} } */\n /* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 3 \"vect\"} } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "30827a79dacfabdeab77f745836f05b26abbd12e", "filename": "gcc/testsuite/treelang/compile/extrafunc.tree", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Ftreelang%2Fcompile%2Fextrafunc.tree", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Ftreelang%2Fcompile%2Fextrafunc.tree", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Ftreelang%2Fcompile%2Fextrafunc.tree?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -22,3 +22,4 @@ ext\n }\n \n // { dg-final { scan-tree-dump-not \"baz\" \"optimized\" } }\n+// { dg-final { cleanup-tree-dump \"optimized\" } }"}, {"sha": "4e4c7b078fbfc8976e26f8537769ac412a90b0ab", "filename": "gcc/testsuite/treelang/compile/extravar.tree", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Ftreelang%2Fcompile%2Fextravar.tree", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Ftreelang%2Fcompile%2Fextravar.tree", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Ftreelang%2Fcompile%2Fextravar.tree?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -11,3 +11,4 @@ bar\n \treturn aaa + ddd + +3;\n }\n // { dg-final { scan-tree-dump-not \"ccc\" \"vars\" } }\n+// { dg-final { cleanup-tree-dump \"vars\" } }"}, {"sha": "03e7a2a0038bd85c72446b412483815919109248", "filename": "gcc/testsuite/treelang/compile/unsigned.tree", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Ftreelang%2Fcompile%2Funsigned.tree", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6491eb15e1824b543f60a7ba391f9ac497accbce/gcc%2Ftestsuite%2Ftreelang%2Fcompile%2Funsigned.tree", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Ftreelang%2Fcompile%2Funsigned.tree?ref=6491eb15e1824b543f60a7ba391f9ac497accbce", "patch": "@@ -17,3 +17,4 @@ main\n \treturn +1;\n }\n // { dg-final { scan-tree-dump-not \"\\\\\\(int\\\\\\)\" \"generic\" } }\n+// { dg-final { cleanup-tree-dump \"generic\" } }"}]}