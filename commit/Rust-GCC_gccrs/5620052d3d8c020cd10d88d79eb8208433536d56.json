{"sha": "5620052d3d8c020cd10d88d79eb8208433536d56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYyMDA1MmQzZDhjMDIwY2QxMGQ4OGQ3OWViODIwODQzMzUzNmQ1Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-11-19T09:49:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-11-19T09:49:18Z"}, "message": "re PR sanitizer/63520 (ICE: in get_biv_step, at loop-iv.c:824 with -fsanitize=undefined on ppc64)\n\n\tPR sanitizer/63520\n\t* internal-fn.c (expand_ubsan_result_store): New function.\n\t(expand_addsub_overflow, expand_neg_overflow, expand_mul_overflow):\n\tUse it instead of just emit_move_insn.\n\n\t* c-c++-common/ubsan/pr63520.c: New test.\n\nFrom-SVN: r217758", "tree": {"sha": "979c09b8ed38c5c7392a99152555b651831af48a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/979c09b8ed38c5c7392a99152555b651831af48a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5620052d3d8c020cd10d88d79eb8208433536d56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5620052d3d8c020cd10d88d79eb8208433536d56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5620052d3d8c020cd10d88d79eb8208433536d56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5620052d3d8c020cd10d88d79eb8208433536d56/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2a2fe4bfaff0a8e97698b92296ca760222d2605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a2fe4bfaff0a8e97698b92296ca760222d2605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2a2fe4bfaff0a8e97698b92296ca760222d2605"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "eeae399a676bc2cbc5d689a536ec83d5afc8bd59", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5620052d3d8c020cd10d88d79eb8208433536d56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5620052d3d8c020cd10d88d79eb8208433536d56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5620052d3d8c020cd10d88d79eb8208433536d56", "patch": "@@ -1,3 +1,10 @@\n+2014-11-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/63520\n+\t* internal-fn.c (expand_ubsan_result_store): New function.\n+\t(expand_addsub_overflow, expand_neg_overflow, expand_mul_overflow):\n+\tUse it instead of just emit_move_insn.\n+\n 2014-11-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/63844"}, {"sha": "0cb15b23ff19f22bd5bed5dbbe645afce253f58b", "filename": "gcc/internal-fn.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5620052d3d8c020cd10d88d79eb8208433536d56/gcc%2Finternal-fn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5620052d3d8c020cd10d88d79eb8208433536d56/gcc%2Finternal-fn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.c?ref=5620052d3d8c020cd10d88d79eb8208433536d56", "patch": "@@ -395,6 +395,21 @@ expand_arith_overflow_result_store (tree lhs, rtx target,\n   write_complex_part (target, lres, false);\n }\n \n+/* Helper for expand_*_overflow.  Store RES into TARGET.  */\n+\n+static void\n+expand_ubsan_result_store (rtx target, rtx res)\n+{\n+  if (GET_CODE (target) == SUBREG && SUBREG_PROMOTED_VAR_P (target))\n+    /* If this is a scalar in a register that is stored in a wider mode   \n+       than the declared mode, compute the result into its declared mode\n+       and then convert to the wider mode.  Our value is the computed\n+       expression.  */\n+    convert_move (SUBREG_REG (target), res, SUBREG_PROMOTED_SIGN (target));\n+  else\n+    emit_move_insn (target, res);\n+}\n+\n /* Add sub/add overflow checking to the statement STMT.\n    CODE says whether the operation is +, or -.  */\n \n@@ -809,7 +824,7 @@ expand_addsub_overflow (location_t loc, tree_code code, tree lhs,\n   if (lhs)\n     {\n       if (is_ubsan)\n-\temit_move_insn (target, res);\n+\texpand_ubsan_result_store (target, res);\n       else\n \t{\n \t  if (do_xor)\n@@ -904,7 +919,7 @@ expand_neg_overflow (location_t loc, tree lhs, tree arg1, bool is_ubsan)\n   if (lhs)\n     {\n       if (is_ubsan)\n-\temit_move_insn (target, res);\n+\texpand_ubsan_result_store (target, res);\n       else\n \texpand_arith_overflow_result_store (lhs, target, mode, res);\n     }\n@@ -1590,7 +1605,7 @@ expand_mul_overflow (location_t loc, tree lhs, tree arg0, tree arg1,\n   if (lhs)\n     {\n       if (is_ubsan)\n-\temit_move_insn (target, res);\n+\texpand_ubsan_result_store (target, res);\n       else\n \texpand_arith_overflow_result_store (lhs, target, mode, res);\n     }"}, {"sha": "c69393c9e9213ec2dcad95826bc749cf3deed1d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5620052d3d8c020cd10d88d79eb8208433536d56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5620052d3d8c020cd10d88d79eb8208433536d56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5620052d3d8c020cd10d88d79eb8208433536d56", "patch": "@@ -1,3 +1,8 @@\n+2014-11-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/63520\n+\t* c-c++-common/ubsan/pr63520.c: New test.\n+\n 2014-11-19  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/57654"}, {"sha": "66da668dbb8366f76ae79710128ff262ef8d82c8", "filename": "gcc/testsuite/c-c++-common/ubsan/pr63520.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5620052d3d8c020cd10d88d79eb8208433536d56/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr63520.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5620052d3d8c020cd10d88d79eb8208433536d56/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr63520.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr63520.c?ref=5620052d3d8c020cd10d88d79eb8208433536d56", "patch": "@@ -0,0 +1,16 @@\n+/* PR sanitizer/63520 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=undefined\" } */\n+\n+int a;\n+\n+void\n+foo (void)\n+{\n+  while (1)\n+    {\n+      if (a == 1)\n+\tbreak;\n+      a -= 1;\n+    }\n+}"}]}