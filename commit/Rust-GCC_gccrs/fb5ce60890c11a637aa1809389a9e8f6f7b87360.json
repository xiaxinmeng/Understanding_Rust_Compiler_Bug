{"sha": "fb5ce60890c11a637aa1809389a9e8f6f7b87360", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI1Y2U2MDg5MGMxMWE2MzdhYTE4MDkzODlhOWU4ZjZmN2I4NzM2MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-03-03T07:31:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-03-03T07:31:54Z"}, "message": "Update overload resolution with deduction guides.\n\n\t* pt.c (do_class_deduction): Always build the copy guide.\n\t(copy_guide_p, template_guide_p): New.\n\t(build_deduction_guide): Remember the original constructor.\n\t* call.c (joust): Prefer the copy guide and non-template guides.\n\nFrom-SVN: r245859", "tree": {"sha": "e6eefc85ee94c7cd7955656f0a9ac5d017180d41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6eefc85ee94c7cd7955656f0a9ac5d017180d41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb5ce60890c11a637aa1809389a9e8f6f7b87360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5ce60890c11a637aa1809389a9e8f6f7b87360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5ce60890c11a637aa1809389a9e8f6f7b87360", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5ce60890c11a637aa1809389a9e8f6f7b87360/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de35db4271bdfc6a648a5c5f504308c84ecb639b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de35db4271bdfc6a648a5c5f504308c84ecb639b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de35db4271bdfc6a648a5c5f504308c84ecb639b"}], "stats": {"total": 110, "additions": 98, "deletions": 12}, "files": [{"sha": "be98880c96389e18821c1b6fcc8b1ed1fd50624c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5ce60890c11a637aa1809389a9e8f6f7b87360/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5ce60890c11a637aa1809389a9e8f6f7b87360/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fb5ce60890c11a637aa1809389a9e8f6f7b87360", "patch": "@@ -1,5 +1,11 @@\n 2017-03-02  Jason Merrill  <jason@redhat.com>\n \n+\tUpdate overload resolution with deduction guides.\n+\t* pt.c (do_class_deduction): Always build the copy guide.\n+\t(copy_guide_p, template_guide_p): New.\n+\t(build_deduction_guide): Remember the original constructor.\n+\t* call.c (joust): Prefer the copy guide and non-template guides.\n+\n \tAllow deduction guides to look into primary template.\n \t* cp-tree.h (struct saved_scope): Add deduction_guide_type.\n \t(struct cp_decl_specifier_seq): Add constructor_p."}, {"sha": "dc629b96bb707a2df4b9e6e7ca7073bbbb4ff196", "filename": "gcc/cp/call.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5ce60890c11a637aa1809389a9e8f6f7b87360/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5ce60890c11a637aa1809389a9e8f6f7b87360/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=fb5ce60890c11a637aa1809389a9e8f6f7b87360", "patch": "@@ -9717,6 +9717,22 @@ joust (struct z_candidate *cand1, struct z_candidate *cand2, bool warn,\n       int art2 = DECL_ARTIFICIAL (cand2->fn);\n       if (art1 != art2)\n \treturn art2 - art1;\n+\n+      if (art1)\n+\t{\n+\t  /* Prefer the special copy guide over a declared copy/move\n+\t     constructor.  */\n+\t  if (copy_guide_p (cand1->fn))\n+\t    return 1;\n+\t  if (copy_guide_p (cand2->fn))\n+\t    return -1;\n+\n+\t  /* Prefer a candidate generated from a non-template constructor.  */\n+\t  int tg1 = template_guide_p (cand1->fn);\n+\t  int tg2 = template_guide_p (cand2->fn);\n+\t  if (tg1 != tg2)\n+\t    return tg2 - tg1;\n+\t}\n     }\n \n   /* or, if not that, F2 is from a using-declaration, F1 is not, and the"}, {"sha": "75836727d804b6288331a10bc8708f5f77a74f6d", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5ce60890c11a637aa1809389a9e8f6f7b87360/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5ce60890c11a637aa1809389a9e8f6f7b87360/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=fb5ce60890c11a637aa1809389a9e8f6f7b87360", "patch": "@@ -6288,6 +6288,8 @@ extern tree template_parm_to_arg                (tree);\n extern tree dguide_name\t\t\t\t(tree);\n extern bool dguide_name_p\t\t\t(tree);\n extern bool deduction_guide_p\t\t\t(const_tree);\n+extern bool copy_guide_p\t\t\t(const_tree);\n+extern bool template_guide_p\t\t\t(const_tree);\n \n /* in repo.c */\n extern void init_repo\t\t\t\t(void);"}, {"sha": "13293ebd557a3d7a24a7ecd1300af77765ad802e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 32, "deletions": 12, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5ce60890c11a637aa1809389a9e8f6f7b87360/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5ce60890c11a637aa1809389a9e8f6f7b87360/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=fb5ce60890c11a637aa1809389a9e8f6f7b87360", "patch": "@@ -24852,6 +24852,35 @@ deduction_guide_p (const_tree fn)\n   return false;\n }\n \n+/* True if FN is the copy deduction guide, i.e. A(A)->A.  */\n+\n+bool\n+copy_guide_p (const_tree fn)\n+{\n+  gcc_assert (deduction_guide_p (fn));\n+  if (!DECL_ARTIFICIAL (fn))\n+    return false;\n+  tree parms = FUNCTION_FIRST_USER_PARMTYPE (DECL_TI_TEMPLATE (fn));\n+  return (TREE_CHAIN (parms) == void_list_node\n+\t  && same_type_p (TREE_VALUE (parms), TREE_TYPE (DECL_NAME (fn))));\n+}\n+\n+/* True if FN is a guide generated from a constructor template.  */\n+\n+bool\n+template_guide_p (const_tree fn)\n+{\n+  gcc_assert (deduction_guide_p (fn));\n+  if (!DECL_ARTIFICIAL (fn))\n+    return false;\n+  if (tree ctor = DECL_ABSTRACT_ORIGIN (fn))\n+    {\n+      tree tmpl = DECL_TI_TEMPLATE (ctor);\n+      return PRIMARY_TEMPLATE_P (tmpl);\n+    }\n+  return false;\n+}\n+\n /* OLDDECL is a _DECL for a template parameter.  Return a similar parameter at\n    LEVEL:INDEX, using tsubst_args and complain for substitution into non-type\n    template parameter types.  Note that the handling of template template\n@@ -25100,6 +25129,8 @@ build_deduction_guide (tree ctor, tree outer_args, tsubst_flags_t complain)\n   TREE_TYPE (ded_tmpl) = TREE_TYPE (ded_fn);\n   DECL_TEMPLATE_INFO (ded_fn) = build_template_info (ded_tmpl, targs);\n   DECL_PRIMARY_TEMPLATE (ded_tmpl) = ded_tmpl;\n+  if (DECL_P (ctor))\n+    DECL_ABSTRACT_ORIGIN (ded_fn) = ctor;\n   if (ci)\n     set_constraints (ded_tmpl, ci);\n \n@@ -25153,7 +25184,6 @@ do_class_deduction (tree ptype, tree tmpl, tree init, int flags,\n     }\n \n   bool saw_ctor = false;\n-  bool saw_copy = false;\n   if (CLASSTYPE_METHOD_VEC (type))\n     // FIXME cache artificial deduction guides\n     for (tree fns = CLASSTYPE_CONSTRUCTORS (type); fns; fns = OVL_NEXT (fns))\n@@ -25163,24 +25193,14 @@ do_class_deduction (tree ptype, tree tmpl, tree init, int flags,\n \tcands = ovl_cons (guide, cands);\n \n \tsaw_ctor = true;\n-\n-\ttree parms = FUNCTION_FIRST_USER_PARMTYPE (fn);\n-\tif (parms && sufficient_parms_p (TREE_CHAIN (parms)))\n-\t  {\n-\t    tree pt = TREE_VALUE (parms);\n-\t    if (TREE_CODE (pt) == REFERENCE_TYPE\n-\t\t&& (same_type_ignoring_top_level_qualifiers_p\n-\t\t    (TREE_TYPE (pt), type)))\n-\t      saw_copy = true;\n-\t  }\n       }\n \n   if (!saw_ctor && args->length() == 0)\n     {\n       tree guide = build_deduction_guide (type, outer_args, complain);\n       cands = ovl_cons (guide, cands);\n     }\n-  if (!saw_copy && args->length() == 1)\n+  if (args->length() == 1)\n     {\n       tree guide = build_deduction_guide (build_reference_type (type),\n \t\t\t\t\t  outer_args, complain);"}, {"sha": "129e29ec131de96ad11e14b13fef1943798fdc56", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction36.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5ce60890c11a637aa1809389a9e8f6f7b87360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5ce60890c11a637aa1809389a9e8f6f7b87360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction36.C?ref=fb5ce60890c11a637aa1809389a9e8f6f7b87360", "patch": "@@ -0,0 +1,15 @@\n+// { dg-options -std=c++1z }\n+\n+template <class T> struct A {\n+  A(T&);\n+  A(const A&);\n+};\n+\n+int i;\n+A a = i;\n+A a2 = a;\n+\n+template <class,class> struct same;\n+template <class T> struct same<T,T> {};\n+same<decltype(a),A<int>> s1;\n+same<decltype(a2),A<int>> s2;"}, {"sha": "fe6c20012aabf088ceb28c4753407ca5653f4b48", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction38.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5ce60890c11a637aa1809389a9e8f6f7b87360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5ce60890c11a637aa1809389a9e8f6f7b87360/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction38.C?ref=fb5ce60890c11a637aa1809389a9e8f6f7b87360", "patch": "@@ -0,0 +1,27 @@\n+// { dg-options -std=c++1z }\n+\n+template <class T> struct A {\n+  using value_type = T;\n+  A(value_type); // #1\n+  A(const A&); // #2\n+  A(T, T, int); // #3\n+  template<class U> A(int, T, U); // #4\n+}; // A(A); #5, the copy deduction candidate\n+\n+A x (1, 2, 3); // uses #3, generated from a non-template constructor\n+\n+template <class T> A(T) -> A<T>;  // #6, less specialized than #5\n+\n+A a (42); // uses #6 to deduce A<int> and #1 to initialize\n+A b = a;  // uses #5 to deduce A<int> and #2 to initialize\n+\n+template <class T> A(A<T>) -> A<A<T>>;  // #7, as specialized as #5\n+\n+A b2 = a;  // uses #7 to deduce A<A<int>> and #1 to initialize\n+\n+template <class,class> struct same;\n+template <class T> struct same<T,T> {};\n+\n+same<decltype(a),A<int>> s1;\n+same<decltype(b),A<int>> s2;\n+same<decltype(b2),A<A<int>>> s3;"}]}