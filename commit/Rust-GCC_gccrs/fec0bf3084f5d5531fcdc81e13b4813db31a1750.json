{"sha": "fec0bf3084f5d5531fcdc81e13b4813db31a1750", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVjMGJmMzA4NGY1ZDU1MzFmY2RjODFlMTNiNDgxM2RiMzFhMTc1MA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-05-29T14:35:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-05-29T14:35:28Z"}, "message": "tree-vect-data-refs.c (vect_preserves_scalar_order_p): Make sure to use non-pattern stmts for get_earlier_stmt arguments.\n\n2018-05-29  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-data-refs.c (vect_preserves_scalar_order_p): Make\n\tsure to use non-pattern stmts for get_earlier_stmt arguments.\n\t* tree-vectorizer.h (get_earlier_stmt): Assert we do not get\n\tcalled on pattern stmts.\n\t(get_later_stmt): Likewise.\n\nFrom-SVN: r260896", "tree": {"sha": "00d922f4541d8d4d91852cf85ae0d6e88d15c9f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00d922f4541d8d4d91852cf85ae0d6e88d15c9f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fec0bf3084f5d5531fcdc81e13b4813db31a1750", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fec0bf3084f5d5531fcdc81e13b4813db31a1750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fec0bf3084f5d5531fcdc81e13b4813db31a1750", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fec0bf3084f5d5531fcdc81e13b4813db31a1750/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e8f29daae817560fa28935f23150307abee8f43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e8f29daae817560fa28935f23150307abee8f43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e8f29daae817560fa28935f23150307abee8f43"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "ccf3b28d275cd8d4f049ee8f3b3aee374f910b19", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fec0bf3084f5d5531fcdc81e13b4813db31a1750/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fec0bf3084f5d5531fcdc81e13b4813db31a1750/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fec0bf3084f5d5531fcdc81e13b4813db31a1750", "patch": "@@ -1,3 +1,11 @@\n+2018-05-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-data-refs.c (vect_preserves_scalar_order_p): Make\n+\tsure to use non-pattern stmts for get_earlier_stmt arguments.\n+\t* tree-vectorizer.h (get_earlier_stmt): Assert we do not get\n+\tcalled on pattern stmts.\n+\t(get_later_stmt): Likewise.\n+\n 2018-05-29  Martin Liska  <mliska@suse.cz>\n \n         PR gcov-profile/85759"}, {"sha": "9255c53189de62c4cd2614021cd1463a48634acc", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fec0bf3084f5d5531fcdc81e13b4813db31a1750/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fec0bf3084f5d5531fcdc81e13b4813db31a1750/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=fec0bf3084f5d5531fcdc81e13b4813db31a1750", "patch": "@@ -212,6 +212,10 @@ vect_preserves_scalar_order_p (gimple *stmt_a, gimple *stmt_b)\n      (but could happen later) while reads will happen no later than their\n      current position (but could happen earlier).  Reordering is therefore\n      only possible if the first access is a write.  */\n+  if (is_pattern_stmt_p (stmtinfo_a))\n+    stmt_a = STMT_VINFO_RELATED_STMT (stmtinfo_a);\n+  if (is_pattern_stmt_p (stmtinfo_b))\n+    stmt_b = STMT_VINFO_RELATED_STMT (stmtinfo_b);\n   gimple *earlier_stmt = get_earlier_stmt (stmt_a, stmt_b);\n   return !DR_IS_WRITE (STMT_VINFO_DATA_REF (vinfo_for_stmt (earlier_stmt)));\n }"}, {"sha": "25d0aae8eaa419f7d4160c1015c6d2d143b66ab2", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fec0bf3084f5d5531fcdc81e13b4813db31a1750/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fec0bf3084f5d5531fcdc81e13b4813db31a1750/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=fec0bf3084f5d5531fcdc81e13b4813db31a1750", "patch": "@@ -1068,8 +1068,12 @@ get_earlier_stmt (gimple *stmt1, gimple *stmt2)\n   if (uid1 == 0 || uid2 == 0)\n     return NULL;\n \n-  gcc_checking_assert (uid1 <= stmt_vec_info_vec->length ()\n-\t\t       && uid2 <= stmt_vec_info_vec->length ());\n+  gcc_assert (uid1 <= stmt_vec_info_vec->length ()\n+\t      && uid2 <= stmt_vec_info_vec->length ());\n+  gcc_checking_assert ((STMT_VINFO_IN_PATTERN_P (vinfo_for_stmt (stmt1))\n+\t\t\t|| !STMT_VINFO_RELATED_STMT (vinfo_for_stmt (stmt1)))\n+\t\t       && (STMT_VINFO_IN_PATTERN_P (vinfo_for_stmt (stmt2))\n+\t\t\t   || !STMT_VINFO_RELATED_STMT (vinfo_for_stmt (stmt2))));\n \n   if (uid1 < uid2)\n     return stmt1;\n@@ -1096,8 +1100,12 @@ get_later_stmt (gimple *stmt1, gimple *stmt2)\n   if (uid1 == 0 || uid2 == 0)\n     return NULL;\n \n-  gcc_assert (uid1 <= stmt_vec_info_vec->length ());\n-  gcc_assert (uid2 <= stmt_vec_info_vec->length ());\n+  gcc_assert (uid1 <= stmt_vec_info_vec->length ()\n+\t      && uid2 <= stmt_vec_info_vec->length ());\n+  gcc_checking_assert ((STMT_VINFO_IN_PATTERN_P (vinfo_for_stmt (stmt1))\n+\t\t\t|| !STMT_VINFO_RELATED_STMT (vinfo_for_stmt (stmt1)))\n+\t\t       && (STMT_VINFO_IN_PATTERN_P (vinfo_for_stmt (stmt2))\n+\t\t\t   || !STMT_VINFO_RELATED_STMT (vinfo_for_stmt (stmt2))));\n \n   if (uid1 > uid2)\n     return stmt1;"}]}