{"sha": "756f76d0d2ad3b7d99e335d40bf17749550da45d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU2Zjc2ZDBkMmFkM2I3ZDk5ZTMzNWQ0MGJmMTc3NDk1NTBkYTQ1ZA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2004-02-09T17:54:47Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2004-02-09T17:54:47Z"}, "message": "iris5.h (BSS_SECTION_ASM_OP): Define.\n\n\t* config/mips/iris5.h (BSS_SECTION_ASM_OP): Define.\n\t* config/mips/iris6.h (BSS_SECTION_ASM_OP): Undef.\n\n\t* config/mips/iris6.h (TARGET_ASM_NAMED_SECTION): Moved ...\n\t* config/mips/iris5.h: ... here.\n\t* config/mips/iris5gas.h (TARGET_ASM_NAMED_SECTION): Remove.\n\n\t* config/mips/iris6.h (EXTRA_SECTION_FUNCTIONS): Move ...\n\t* config/mips/iris5.h: ... here.\n\nFrom-SVN: r77546", "tree": {"sha": "446aa43002183f3fef3fffc64af084a8b66c04d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/446aa43002183f3fef3fffc64af084a8b66c04d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/756f76d0d2ad3b7d99e335d40bf17749550da45d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756f76d0d2ad3b7d99e335d40bf17749550da45d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/756f76d0d2ad3b7d99e335d40bf17749550da45d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756f76d0d2ad3b7d99e335d40bf17749550da45d/comments", "author": null, "committer": null, "parents": [{"sha": "426ca3cab011d9ac7d02cec499902f4470aacd93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426ca3cab011d9ac7d02cec499902f4470aacd93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/426ca3cab011d9ac7d02cec499902f4470aacd93"}], "stats": {"total": 109, "additions": 61, "deletions": 48}, "files": [{"sha": "699d1695732e4964f77abde8a3cdf2d1d214b30c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756f76d0d2ad3b7d99e335d40bf17749550da45d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756f76d0d2ad3b7d99e335d40bf17749550da45d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=756f76d0d2ad3b7d99e335d40bf17749550da45d", "patch": "@@ -1,3 +1,15 @@\n+2004-02-09  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* config/mips/iris5.h (BSS_SECTION_ASM_OP): Define.\n+\t* config/mips/iris6.h (BSS_SECTION_ASM_OP): Undef.\n+\n+\t* config/mips/iris6.h (TARGET_ASM_NAMED_SECTION): Moved ...\n+\t* config/mips/iris5.h: ... here.\n+\t* config/mips/iris5gas.h (TARGET_ASM_NAMED_SECTION): Remove.\n+\n+\t* config/mips/iris6.h (EXTRA_SECTION_FUNCTIONS): Move ...\n+\t* config/mips/iris5.h: ... here.\n+\n 2004-02-09  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* configure.ac: Remove default executable files before AC_PROG_CC."}, {"sha": "a172986310870e06d3a67b6e11e162ad768b66f5", "filename": "gcc/config/mips/iris5.h", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756f76d0d2ad3b7d99e335d40bf17749550da45d/gcc%2Fconfig%2Fmips%2Firis5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756f76d0d2ad3b7d99e335d40bf17749550da45d/gcc%2Fconfig%2Fmips%2Firis5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis5.h?ref=756f76d0d2ad3b7d99e335d40bf17749550da45d", "patch": "@@ -29,6 +29,10 @@ Boston, MA 02111-1307, USA.  */\n \n #define ABICALLS_ASM_OP \"\\t.option pic2\"\n \n+/* Dummy definition which allows EXTRA_SECTION_FUNCTIONS to be the same\n+   for IRIX 5 and 6.  */\n+#define BSS_SECTION_ASM_OP \"\\t.data\"\n+\n /* ??? This is correct, but not very useful, because there is no file that\n    uses this macro.  */\n /* ??? The best way to handle global constructors under ELF is to use .init\n@@ -190,6 +194,50 @@ Boston, MA 02111-1307, USA.  */\n #undef MIPS_DEFAULT_GVALUE\n #define MIPS_DEFAULT_GVALUE 0\n \n+/* Switch into a generic section.  */\n+#undef TARGET_ASM_NAMED_SECTION\n+#define TARGET_ASM_NAMED_SECTION  irix_asm_named_section\n+\n+/* Define functions to read the name and flags of the current section.\n+   They are used by irix_asm_output_align.  */\n+\n+#undef EXTRA_SECTION_FUNCTIONS\n+#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n+const char *\t\t\t\t\t\t\t\t\\\n+current_section_name (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  switch (in_section)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+    case no_section:\treturn NULL;\t\t\t\t\t\\\n+    case in_text:\treturn \".text\";\t\t\t\t\t\\\n+    case in_data:\treturn \".data\";\t\t\t\t\t\\\n+    case in_bss:\treturn \".bss\";\t\t\t\t\t\\\n+    case in_readonly_data:\t\t\t\t\t\t\\\n+      if (mips_abi != ABI_32 && mips_abi != ABI_O64)\t\t\t\\\n+\treturn \".rodata\";\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+\treturn \".rdata\";\t\t\t\t\t\t\\\n+    case in_named:\t\t\t\t\t\t\t\\\n+      return in_named_name;\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  abort ();\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+unsigned int\t\t\t\t\t\t\t\t\\\n+current_section_flags (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  switch (in_section)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+    case no_section:\treturn 0;\t\t\t\t\t\\\n+    case in_text:\treturn SECTION_CODE;\t\t\t\t\\\n+    case in_data:\treturn SECTION_WRITE;\t\t\t\t\\\n+    case in_bss:\treturn SECTION_WRITE | SECTION_BSS;\t\t\\\n+    case in_readonly_data: return 0;\t\t\t\t\t\\\n+    case in_named:\treturn get_named_section_flags (in_named_name);\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  abort ();\t\t\t\t\t\t\t\t\\\n+}\n+\n /* Some assemblers have a bug that causes backslash escaped chars in .ascii\n    to be misassembled, so avoid it by using .byte instead.  Write the original\n    string in a comment, partly to improve readability and partly for the sake"}, {"sha": "f79bf3dd9d867f2be9b1b4a2d996e4eb114918d0", "filename": "gcc/config/mips/iris5gas.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756f76d0d2ad3b7d99e335d40bf17749550da45d/gcc%2Fconfig%2Fmips%2Firis5gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756f76d0d2ad3b7d99e335d40bf17749550da45d/gcc%2Fconfig%2Fmips%2Firis5gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis5gas.h?ref=756f76d0d2ad3b7d99e335d40bf17749550da45d", "patch": "@@ -77,10 +77,6 @@ do {\t\t\t\t\t\t\t\\\n   fprintf (asm_out_file, \"\\t.etype\\t0x%x;\", (a));\t\\\n } while (0)\n \n-/* Switch into a generic section.  */\n-#undef TARGET_ASM_NAMED_SECTION\n-#define TARGET_ASM_NAMED_SECTION  default_elf_asm_named_section\n-\n /* Add -g to mips.h default to avoid confusing gas with local symbols\n    generated from stabs info.  */\n #undef NM_FLAGS"}, {"sha": "b2bcb1a00c2d5cdb5b945622f70d223e24a787eb", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 1, "deletions": 44, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756f76d0d2ad3b7d99e335d40bf17749550da45d/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756f76d0d2ad3b7d99e335d40bf17749550da45d/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=756f76d0d2ad3b7d99e335d40bf17749550da45d", "patch": "@@ -288,6 +288,7 @@ Boston, MA 02111-1307, USA.  */\n    and dtor lists this way, so we use -init and -fini to invoke the\n    do_global_* functions instead of running collect2.  */\n \n+#undef BSS_SECTION_ASM_OP\n #define BSS_SECTION_ASM_OP_32\t\"\\t.data\"\n #define BSS_SECTION_ASM_OP_64\t\"\\t.section\\t.bss\"\n #define BSS_SECTION_ASM_OP\t\t\t\\\n@@ -303,10 +304,6 @@ Boston, MA 02111-1307, USA.  */\n    ? READONLY_DATA_SECTION_ASM_OP_64\t\t\\\n    : READONLY_DATA_SECTION_ASM_OP_32)\n \n-/* Switch into a generic section.  */\n-#undef TARGET_ASM_NAMED_SECTION\n-#define TARGET_ASM_NAMED_SECTION  irix_asm_named_section\n-\n /* The default definition in defaults.h cannot cope with the runtime-variable\n    definition of DWARF2_UNWIND_INFO above, so define here explicitly.  */\n #define EH_FRAME_SECTION_NAME \".eh_frame\"\n@@ -336,46 +333,6 @@ Boston, MA 02111-1307, USA.  */\n \n #endif /* _MIPS_SIM == _ABIO32 && !GAS */\n \n-/* Define functions to read the name and flags of the current section.\n-   They are used by irix_asm_output_align.  */\n-\n-#undef EXTRA_SECTION_FUNCTIONS\n-#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n-const char *\t\t\t\t\t\t\t\t\\\n-current_section_name (void)\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  switch (in_section)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-    case no_section:\treturn NULL;\t\t\t\t\t\\\n-    case in_text:\treturn \".text\";\t\t\t\t\t\\\n-    case in_data:\treturn \".data\";\t\t\t\t\t\\\n-    case in_bss:\treturn \".bss\";\t\t\t\t\t\\\n-    case in_readonly_data:\t\t\t\t\t\t\\\n-      if (mips_abi != ABI_32 && mips_abi != ABI_O64)\t\t\t\\\n-\treturn \".rodata\";\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\treturn \".rdata\";\t\t\t\t\t\t\\\n-    case in_named:\t\t\t\t\t\t\t\\\n-      return in_named_name;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  abort ();\t\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-unsigned int\t\t\t\t\t\t\t\t\\\n-current_section_flags (void)\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  switch (in_section)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-    case no_section:\treturn 0;\t\t\t\t\t\\\n-    case in_text:\treturn SECTION_CODE;\t\t\t\t\\\n-    case in_data:\treturn SECTION_WRITE;\t\t\t\t\\\n-    case in_bss:\treturn SECTION_WRITE | SECTION_BSS;\t\t\\\n-    case in_readonly_data: return 0;\t\t\t\t\t\\\n-    case in_named:\treturn get_named_section_flags (in_named_name);\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  abort ();\t\t\t\t\t\t\t\t\\\n-}\n-\n /* SGI assembler needs all sorts of extra help to do alignment properly.  */\n #undef ASM_OUTPUT_ALIGN\n #define ASM_OUTPUT_ALIGN irix_asm_output_align"}]}