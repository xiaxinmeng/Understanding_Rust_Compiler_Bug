{"sha": "9d04a3af4c6491536badf6bde9707c907e4d196b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQwNGEzYWY0YzY0OTE1MzZiYWRmNmJkZTk3MDdjOTA3ZTRkMTk2Yg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2016-07-22T16:16:17Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2016-07-22T16:16:17Z"}, "message": "extend.texi (Compound Literals): Add '@' missed in last commit.\n\ngcc/ChangeLog:\n\t* doc/extend.texi (Compound Literals): Add '@' missed in last commit.\n\nFrom-SVN: r238652", "tree": {"sha": "bb7ee0552ed21dac899a9599dbc8c044529f0408", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb7ee0552ed21dac899a9599dbc8c044529f0408"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d04a3af4c6491536badf6bde9707c907e4d196b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d04a3af4c6491536badf6bde9707c907e4d196b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d04a3af4c6491536badf6bde9707c907e4d196b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d04a3af4c6491536badf6bde9707c907e4d196b/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e040f9bd4b37dfffcb5197c0b6307313846d9e6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e040f9bd4b37dfffcb5197c0b6307313846d9e6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e040f9bd4b37dfffcb5197c0b6307313846d9e6b"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "45554aebae626853b2ea6bd1f90deb370b465c67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d04a3af4c6491536badf6bde9707c907e4d196b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d04a3af4c6491536badf6bde9707c907e4d196b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d04a3af4c6491536badf6bde9707c907e4d196b", "patch": "@@ -1,3 +1,7 @@\n+2016-07-22 Martin Sebor  <msebor@redhat.com>\n+\n+\t* doc/extend.texi (Compound Literals): Add '@' missed in last commit.\n+\n 2016-07-22 Martin Sebor  <msebor@redhat.com>\n \n \tPR c/71560"}, {"sha": "ad8898c44853fbdc4cd5eaa4292beba73f90777e", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d04a3af4c6491536badf6bde9707c907e4d196b/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d04a3af4c6491536badf6bde9707c907e4d196b/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=9d04a3af4c6491536badf6bde9707c907e4d196b", "patch": "@@ -1956,7 +1956,7 @@ because the lifetime of the array ends after the declaration of @code{foo}.\n As an optimization, G++ sometimes gives array compound literals longer\n lifetimes: when the array either appears outside a function or has\n a @code{const}-qualified type.  If @code{foo} and its initializer had\n-elements of type @code{char *const} rather than code{char *}, or if\n+elements of type @code{char *const} rather than @code{char *}, or if\n @code{foo} were a global variable, the array would have static storage\n duration.  But it is probably safest just to avoid the use of array\n compound literals in C++ code."}]}