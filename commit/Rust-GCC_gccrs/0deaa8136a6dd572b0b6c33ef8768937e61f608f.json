{"sha": "0deaa8136a6dd572b0b6c33ef8768937e61f608f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRlYWE4MTM2YTZkZDU3MmIwYjZjMzNlZjg3Njg5MzdlNjFmNjA4Zg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2001-06-26T07:53:50Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2001-06-26T07:53:50Z"}, "message": "diagnostic.h (diagnostic_prefixing_rule_t): New enum type.\n\n\t* diagnostic.h (diagnostic_prefixing_rule_t): New enum type.\n\t(set_message_prefixing_rule): Adjust prototype.\n\t* diagnostic.c (current_prefixing_rule): Adjust type.\n\nFrom-SVN: r43573", "tree": {"sha": "f402715cf6e905d4e2a636c581c6ec5b784d5748", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f402715cf6e905d4e2a636c581c6ec5b784d5748"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0deaa8136a6dd572b0b6c33ef8768937e61f608f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0deaa8136a6dd572b0b6c33ef8768937e61f608f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0deaa8136a6dd572b0b6c33ef8768937e61f608f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0deaa8136a6dd572b0b6c33ef8768937e61f608f/comments", "author": null, "committer": null, "parents": [{"sha": "4b76a1e3e511fdd30bd1fc7276cf404eff42c0d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b76a1e3e511fdd30bd1fc7276cf404eff42c0d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b76a1e3e511fdd30bd1fc7276cf404eff42c0d2"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "2c2b29b565132ef0b68f95f4246b908117076cfe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0deaa8136a6dd572b0b6c33ef8768937e61f608f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0deaa8136a6dd572b0b6c33ef8768937e61f608f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0deaa8136a6dd572b0b6c33ef8768937e61f608f", "patch": "@@ -1,3 +1,9 @@\n+2001-06-26  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* diagnostic.h (diagnostic_prefixing_rule_t): New enum type.\n+\t(set_message_prefixing_rule): Adjust prototype.\n+\t* diagnostic.c (current_prefixing_rule): Adjust type.\n+\n 2001-06-26  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* defaults.h: Default escape sequences to ASCII."}, {"sha": "cf78b206ffdea1b39f8d8e65ab193c19a30ce038", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0deaa8136a6dd572b0b6c33ef8768937e61f608f/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0deaa8136a6dd572b0b6c33ef8768937e61f608f/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=0deaa8136a6dd572b0b6c33ef8768937e61f608f", "patch": "@@ -137,7 +137,7 @@ int diagnostic_message_length_per_line;\n \n /* Used to control every diagnostic message formatting.  Front-ends should\n    call set_message_prefixing_rule to set up their policies.  */\n-static int current_prefixing_rule;\n+static diagnostic_prefixing_rule_t current_prefixing_rule;\n \n /* Prevent recursion into the error handler.  */\n static int diagnostic_lock;\n@@ -195,7 +195,7 @@ initialize_diagnostics ()\n \n void\n set_message_prefixing_rule (rule)\n-     int rule;\n+     diagnostic_prefixing_rule_t rule;\n {\n   current_prefixing_rule = rule;\n }"}, {"sha": "fd3c92dfb39c8ce6f023a228635654fe81d6c3e9", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0deaa8136a6dd572b0b6c33ef8768937e61f608f/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0deaa8136a6dd572b0b6c33ef8768937e61f608f/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=0deaa8136a6dd572b0b6c33ef8768937e61f608f", "patch": "@@ -41,9 +41,17 @@ typedef enum\n \n #define pedantic_error_kind() (flag_pedantic_errors ? DK_ERROR : DK_WARNING)\n \n-#define DIAGNOSTICS_SHOW_PREFIX_ONCE       0x0\n-#define DIAGNOSTICS_SHOW_PREFIX_NEVER      0x1\n-#define DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE 0x2\n+/* How often diagnostics are prefixed by their locations:\n+   o DIAGNOSTICS_SHOW_PREFIX_NEVER: never - not yet supported;\n+   o DIAGNOSTICS_SHOW_PREFIX_ONCE: emit only once;\n+   o DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE: emit each time a physical\n+   line is started.  */\n+typedef enum\n+{\n+  DIAGNOSTICS_SHOW_PREFIX_ONCE       = 0x0,\n+  DIAGNOSTICS_SHOW_PREFIX_NEVER      = 0x1,\n+  DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE = 0x2\n+} diagnostic_prefixing_rule_t;\n \n /* The type of front-end specific hook that formats trees into an\n    output_buffer.  A language specific printer returns a truth value if\n@@ -73,12 +81,8 @@ typedef struct\n   /* Nonzero means one should emit a newline before outputing anything.  */\n   int need_newline_p;\n \n-  /* Tells how often current PREFIX should be emitted:\n-     o DIAGNOSTICS_SHOW_PREFIX_NEVER: never - not yet supported;\n-     o DIAGNOSTICS_SHOW_PREFIX_ONCE: emit current PREFIX only once;\n-     o DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE: emit current PREFIX each time\n-       a physical line is started.  */\n-  int prefixing_rule;\n+  /* Current prefixing rule.  */\n+  diagnostic_prefixing_rule_t prefixing_rule;\n \n   /* The current char to output.  Updated by front-end (*format_map) when\n      it is called to report front-end printer for a specified format.  */  \n@@ -246,7 +250,7 @@ extern void output_clear_message_text\tPARAMS ((output_buffer *));\n extern void output_printf\t\tPARAMS ((output_buffer *, const char *,\n \t\t\t\t\t\t ...)) ATTRIBUTE_PRINTF_2;\n extern int output_is_line_wrapping\tPARAMS ((output_buffer *));\n-extern void set_message_prefixing_rule\tPARAMS ((int));\n+extern void set_message_prefixing_rule\tPARAMS ((diagnostic_prefixing_rule_t));\n extern void output_verbatim\t\tPARAMS ((output_buffer *, const char *,\n \t\t\t\t\t\t ...)) ATTRIBUTE_PRINTF_2;\n extern void verbatim\t\t\tPARAMS ((const char *, ...))"}]}