{"sha": "04864ec855832e92a6be3b0686fdb8b621276e67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ4NjRlYzg1NTgzMmU5MmE2YmUzYjA2ODZmZGI4YjYyMTI3NmU2Nw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-11-28T23:04:09Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-11-28T23:04:09Z"}, "message": "PR c/88065 - ICE in -Wsizeof-pointer-memaccess on an invalid strncpy\n\nPR c/88065 - ICE in -Wsizeof-pointer-memaccess on an invalid strncpy\nPR c/87297 - ICE on strncpy with an undeclared argument\n\ngcc/c-family/ChangeLog:\n\n\tPR c/88065\n\tPR c/87297\n\t* c-warn.c (sizeof_pointer_memaccess_warning): Bail if source\n\tor destination is an error.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/88065\n\tPR c/87297\n\t* c-c++-common/Wsizeof-pointer-memaccess4.c: New test.\n\nFrom-SVN: r266594", "tree": {"sha": "86c31dd4e824dcb05e04d8850dd75321d515e2a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86c31dd4e824dcb05e04d8850dd75321d515e2a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04864ec855832e92a6be3b0686fdb8b621276e67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04864ec855832e92a6be3b0686fdb8b621276e67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04864ec855832e92a6be3b0686fdb8b621276e67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04864ec855832e92a6be3b0686fdb8b621276e67/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15684250225252a6ef74a7c3779294ca5aa0c16c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15684250225252a6ef74a7c3779294ca5aa0c16c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15684250225252a6ef74a7c3779294ca5aa0c16c"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "ee193d950817dd57a11183b3e5d8f46358e8d19f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04864ec855832e92a6be3b0686fdb8b621276e67/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04864ec855832e92a6be3b0686fdb8b621276e67/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=04864ec855832e92a6be3b0686fdb8b621276e67", "patch": "@@ -1,3 +1,10 @@\n+2018-11-28  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/88065\n+\tPR c/87297\n+\t* c-warn.c (sizeof_pointer_memaccess_warning): Bail if source\n+\tor destination is an error.\n+\n 2018-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/88215"}, {"sha": "798ad1bcb399fd30969d879bc2247305bc156797", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04864ec855832e92a6be3b0686fdb8b621276e67/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04864ec855832e92a6be3b0686fdb8b621276e67/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=04864ec855832e92a6be3b0686fdb8b621276e67", "patch": "@@ -784,7 +784,12 @@ sizeof_pointer_memaccess_warning (location_t *sizeof_arg_loc, tree callee,\n   if (idx >= 3)\n     return;\n \n-  if (sizeof_arg[idx] == NULL || sizeof_arg[idx] == error_mark_node)\n+  /* Use error_operand_p to detect non-error arguments with an error\n+     type that the C++ front-end constructs.  */\n+  if (error_operand_p (src)\n+      || error_operand_p (dest)\n+      || !sizeof_arg[idx]\n+      || error_operand_p (sizeof_arg[idx]))\n     return;\n \n   type = TYPE_P (sizeof_arg[idx])"}, {"sha": "07b8e8447d90c0e12e38a98215536689fd58f083", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04864ec855832e92a6be3b0686fdb8b621276e67/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04864ec855832e92a6be3b0686fdb8b621276e67/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=04864ec855832e92a6be3b0686fdb8b621276e67", "patch": "@@ -1,3 +1,9 @@\n+2018-11-28  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/88065\n+\tPR c/87297\n+\t* c-c++-common/Wsizeof-pointer-memaccess4.c: New test.\n+\n 2018-11-28  Marek Polacek  <polacek@redhat.com>\n \n \tImplement P1094R2, Nested inline namespaces."}, {"sha": "b2052f32e9d2a94ee40779d2c247ad69ebc0dc7d", "filename": "gcc/testsuite/c-c++-common/Wsizeof-pointer-memaccess4.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04864ec855832e92a6be3b0686fdb8b621276e67/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWsizeof-pointer-memaccess4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04864ec855832e92a6be3b0686fdb8b621276e67/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWsizeof-pointer-memaccess4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWsizeof-pointer-memaccess4.c?ref=04864ec855832e92a6be3b0686fdb8b621276e67", "patch": "@@ -0,0 +1,36 @@\n+/* PR c/88065 - ICE in -Wsizeof-pointer-memaccess on an invalid strncpy\n+   PR c/87297 - ICE on strncpy with an undeclared argument\n+   { dg-do compile }\n+   { dg-options \"-Wall -Wsizeof-pointer-memaccess\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+char* strncpy (char*, const char*, size_t);\n+\n+struct A { char a[4], b[6]; };\n+\n+void test_invalid_dst (struct A *p)\n+{\n+  strncpy (q->a, p->b, sizeof p->b);    /* { dg-error \".q. undeclared|not declared\" } */\n+}\n+\n+void test_invalid_src (struct A *p)\n+{\n+  strncpy (p->a, q->b, sizeof p->b);    /* { dg-error \".q. undeclared|not declared\" } */\n+}\n+\n+void test_invalid_bound (struct A *p)\n+{\n+  strncpy (p->a, p->b, sizeof q->b);    /* { dg-error \".q. undeclared|not declared\" } */\n+}\n+\n+/* Verify the C++ front end doesn't ICE (the verifies that the fix\n+   for PR c/87297 uses error_operand_p to detect the invalid source\n+   argument rather than just checking its equality to error_mark_node.  */\n+struct B { char a[4]; };\n+\n+void test_cxx_invalid_dst (struct B *p, const char *s)\n+{\n+  struct T x;\t                        /* { dg-error \"storage size|incomplete type|unused\" } */\n+  __builtin_strncpy (x, s, sizeof p->a);\n+}"}]}