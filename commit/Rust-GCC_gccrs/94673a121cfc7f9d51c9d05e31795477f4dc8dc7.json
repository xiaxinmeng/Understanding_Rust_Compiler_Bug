{"sha": "94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "node_id": "C_kwDOANBUbNoAKDk0NjczYTEyMWNmYzdmOWQ1MWM5ZDA1ZTMxNzk1NDc3ZjRkYzhkYzc", "commit": {"author": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-01-26T21:43:22Z"}, "committer": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-01-26T21:43:22Z"}, "message": "PR-108551 gcc/m2/gm2-libs-pim/Termbase.mod:128:1 error end of non-void\n\ncc1gm2 generates an error: control reaches end of non-void function when\ncompiling Termbase.mod if -Werror=return-type is present.\n\n../gcc/m2/gm2-libs-pim/Termbase.mod: In function 'Termbase_KeyPressed':\n../gcc/m2/gm2-libs-pim/Termbase.mod:128:1: error: control reaches end\n\tof non-void function [-Werror=return-type]\n   128 | END KeyPressed ;\n       | ^~~\n\nThis occurs as cc1gm2 does skips over the <* noreturn *> attribute.  This\npatch records the <* noreturn *> attribute in the m2 symbol table and\nlater on sets TREE_THIS_VOLATILE when creating the function decl.\nThe patch also contains a fix for the main scaffold which also omitted\na return 0 after the exception handler code.\n\ngcc/m2/ChangeLog:\n\n\t* gm2-compiler/M2GCCDeclare.mod: Import IsProcedureNoReturn.\n\t(DeclareProcedureToGccWholeProgram): New variable declared and set\n\treturnType.  Pass returnType to BuildEndFunctionDeclaration.\n\tExtra parameter IsProcedureNoReturn passed to\n\tBuildEndFunctionDeclaration.\n\t* gm2-compiler/M2Quads.mod (BuildM2MainFunction): Correct\n\tscaffold comment and add extra return 0.\n\t* gm2-compiler/P2Build.bnf: Import BuildNoReturnAttribute.\n\t(ProcedureHeading): Process EndBuildFormalParameters before\n\tparsing AttributeNoReturn.\n\t(DefProcedureHeading): Process EndBuildFormalParameters before\n\tparsing AttributeNoReturn.\n\t(AttributeNoReturn): Call BuildNoReturnAttribute.\n\t* gm2-compiler/P2SymBuild.def (BuildNoReturnAttribute): New\n\tprocedure.\n\t* gm2-compiler/P2SymBuild.mod (BuildNoReturnAttribute): New\n\tprocedure.\n\t* gm2-compiler/SymbolTable.def (PutProcedureInline): Corrected\n\tcomment.\n\t(PutProcedureNoReturn): New procedure.\n\t(IsProcedureNoReturn): New procedure function.\n\t* gm2-compiler/SymbolTable.mod (SymProcedure): IsNoReturn\n\tnew field.\n\t(MakeProcedure): Initialize IsNoReturn to FALSE.\n\t(PutProcedureNoReturn): New procedure.\n\t(IsProcedureNoReturn): New procedure function.\n\t* gm2-gcc/m2decl.cc (m2decl_BuildEndFunctionDeclaration):\n\tAdd extra parameter isnoreturn.  Set TREE_THIS_VOLATILE\n\tto isnoreturn.\n\t* gm2-gcc/m2decl.def (BuildEndFunctionDeclaration): Add\n\textra parameter isnoreturn.\n\t* gm2-gcc/m2decl.h (m2decl_BuildEndFunctionDeclaration): Add\n\textra parameter isnoreturn.\n\t* gm2-gcc/m2except.cc (m2except_InitExceptions): Change all\n\tfunction decl to pass an extra parameter isnoreturn.\n\ngcc/testsuite/ChangeLog:\n\n\t* gm2/warnings/returntype/fail/badreturn.mod: New test.\n\t* gm2/warnings/returntype/fail/warnings-returntype-fail.exp:\n\tNew test.\n\t* gm2/warnings/returntype/pass/Termbase.mod: New test.\n\t* gm2/warnings/returntype/pass/goodreturn.mod: New test.\n\t* gm2/warnings/returntype/pass/keypressedsimple.mod: New test.\n\t* gm2/warnings/returntype/pass/warnings-returntype-pass.exp:\n\tNew test.\n\nSigned-off-by: Gaius Mulley <gaiusmod2@gmail.com>", "tree": {"sha": "4c9f12b0bfba33a7fd1c51afe648ba9a927b3fbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c9f12b0bfba33a7fd1c51afe648ba9a927b3fbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/comments", "author": null, "committer": null, "parents": [{"sha": "67bcd1c5ed4d966a91b49b8a7da7c1ca3289c2ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67bcd1c5ed4d966a91b49b8a7da7c1ca3289c2ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67bcd1c5ed4d966a91b49b8a7da7c1ca3289c2ce"}], "stats": {"total": 493, "additions": 463, "deletions": 30}, "files": [{"sha": "445c039a0c24c892b0bebe5b633912b04241077b", "filename": "gcc/m2/gm2-compiler/M2GCCDeclare.mod", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.mod?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -105,7 +105,7 @@ FROM SymbolTable IMPORT NulSym,\n                         IsAModula2Type, UsesVarArgs,\n                         GetSymName, GetParent,\n                         GetDeclaredMod, GetVarBackEndType,\n-                        GetProcedureBeginEnd,\n+                        GetProcedureBeginEnd, IsProcedureNoReturn,\n                         GetString, GetStringLength, IsConstString,\n                         IsConstStringM2, IsConstStringC, IsConstStringM2nul, IsConstStringCnul,\n                         GetAlignment, IsDeclaredPacked, PutDeclaredPacked,\n@@ -2347,6 +2347,7 @@ END IsExternalToWholeProgram ;\n \n PROCEDURE DeclareProcedureToGccWholeProgram (Sym: CARDINAL) ;\n VAR\n+   returnType,\n    GccParam  : Tree ;\n    scope,\n    Son,\n@@ -2391,20 +2392,17 @@ BEGIN\n       PushBinding(scope) ;\n       IF GetSType(Sym)=NulSym\n       THEN\n-         PreAddModGcc(Sym, BuildEndFunctionDeclaration(begin, end,\n-                                                       KeyToCharStar(GetFullSymName(Sym)),\n-                                                       NIL,\n-                                                       IsExternalToWholeProgram(Sym),\n-                                                       IsProcedureGccNested(Sym),\n-                                                       IsExported(GetModuleWhereDeclared(Sym), Sym)))\n+         returnType := NIL\n       ELSE\n-         PreAddModGcc(Sym, BuildEndFunctionDeclaration(begin, end,\n-                                                       KeyToCharStar(GetFullSymName(Sym)),\n-                                                       Mod2Gcc(GetSType(Sym)),\n-                                                       IsExternalToWholeProgram(Sym),\n-                                                       IsProcedureGccNested(Sym),\n-                                                       IsExported(GetModuleWhereDeclared(Sym), Sym)))\n+         returnType := Mod2Gcc(GetSType(Sym))\n       END ;\n+      PreAddModGcc(Sym, BuildEndFunctionDeclaration(begin, end,\n+                                                    KeyToCharStar(GetFullSymName(Sym)),\n+                                                    returnType,\n+                                                    IsExternalToWholeProgram(Sym),\n+                                                    IsProcedureGccNested(Sym),\n+                                                    IsExported(GetModuleWhereDeclared(Sym), Sym),\n+                                                    IsProcedureNoReturn(Sym))) ;\n       PopBinding(scope) ;\n       WatchRemoveList(Sym, todolist) ;\n       WatchIncludeList(Sym, fullydeclared)\n@@ -2481,7 +2479,8 @@ BEGIN\n                                                       IsExternal (Sym),  (* Extern relative to the main module.  *)\n                                                       IsProcedureGccNested (Sym),\n                                                       (* Exported from the module where it was declared.  *)\n-                                                      IsExported (GetModuleWhereDeclared (Sym), Sym) OR IsExtern (Sym))) ;\n+                                                      IsExported (GetModuleWhereDeclared (Sym), Sym) OR IsExtern (Sym),\n+                                                      IsProcedureNoReturn(Sym))) ;\n       PopBinding(scope) ;\n       WatchRemoveList(Sym, todolist) ;\n       WatchIncludeList(Sym, fullydeclared)"}, {"sha": "3b6ed4531e9d97ec1681f796824921fc61ca712a", "filename": "gcc/m2/gm2-compiler/M2Quads.mod", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -2469,6 +2469,7 @@ BEGIN\n             }\n             catch (...) {\n                RTExceptions_DefaultErrorCatch ();\n+               return 0;\n             }\n          }\n       *)\n@@ -2492,10 +2493,11 @@ BEGIN\n       PushTtok (RequestSym (tokno, MakeKey (\"envp\")), tokno) ;\n       PushT (3) ;\n       BuildProcedureCall (tokno) ;\n-\n       PushZero (tokno, Integer) ;\n       BuildReturn (tokno) ;\n       BuildExcept (tokno) ;\n+      PushZero (tokno, Integer) ;\n+      BuildReturn (tokno) ;\n       EndScope ;\n       BuildProcedureEnd ;\n       PopN (1)"}, {"sha": "ea5cfe73a5d0d730319eda80cb754e745a9acc1c", "filename": "gcc/m2/gm2-compiler/P2Build.bnf", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FP2Build.bnf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FP2Build.bnf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP2Build.bnf?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -97,6 +97,7 @@ FROM P2SymBuild IMPORT P2StartBuildProgramModule,\n                        StartBuildProcedure,\n                        EndBuildProcedure,\n                        BuildFunction, BuildOptFunction,\n+                       BuildNoReturnAttribute,\n \n                        BuildPointerType,\n                        BuildRecord, BuildFieldRecord,\n@@ -1025,8 +1026,8 @@ ProcedureHeading := \"PROCEDURE\"                                            % M2E\n                                                                            % StartBuildProcedure %\n                                                                            % Assert(IsProcedure(OperandT(1))) %\n                                                                            % StartBuildFormalParameters  %\n-                       [ FormalParameters ] AttributeNoReturn\n-                                                                           % EndBuildFormalParameters %\n+                       [ FormalParameters ]                                % EndBuildFormalParameters %\n+                                            AttributeNoReturn\n                                                                            % BuildProcedureHeading %\n                      )\n                      =:\n@@ -1039,15 +1040,17 @@ DefProcedureHeading := \"PROCEDURE\"                                         % M2E\n                                                                            % StartBuildProcedure %\n                                                                            % Assert(IsProcedure(OperandT(1))) %\n                                                                            % StartBuildFormalParameters  %\n-                          [ DefFormalParameters ] AttributeNoReturn\n-                                                                           % EndBuildFormalParameters %\n+                          [ DefFormalParameters ]                          % EndBuildFormalParameters %\n+                                                  AttributeNoReturn\n                                                                            % BuildProcedureHeading %\n                         )                                                  % M2Error.LeaveErrorScope %\n                     =:\n \n AttributeNoReturn := [ \"<*\"                                                % PushAutoOn %\n                             Ident                                          % PopAuto %\n                                                                            % checkReturnAttribute %\n+                                                                           % Assert(IsProcedure(OperandT(1))) %\n+                                                                           % BuildNoReturnAttribute (OperandT(1)) %\n                                    \"*>\" ] =:\n \n AttributeUnused := [ \"<*\"                                                  % PushAutoOn %"}, {"sha": "b377011c54afc4a29c24fe8b07c075474dd48ffd", "filename": "gcc/m2/gm2-compiler/P2SymBuild.def", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FP2SymBuild.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FP2SymBuild.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP2SymBuild.def?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -863,6 +863,13 @@ PROCEDURE StartBuildProcedure ;\n PROCEDURE EndBuildProcedure ;\n \n \n+(*\n+   BuildNoReturnAttribute - provide an interface to the symbol table module.\n+*)\n+\n+PROCEDURE BuildNoReturnAttribute (procedureSym: CARDINAL) ;\n+\n+\n (*\n    BuildPointerType - builds a pointer type.\n                       The Stack:"}, {"sha": "de56cc46c5c6b7525b9901c02ad74777b1d56ccf", "filename": "gcc/m2/gm2-compiler/P2SymBuild.mod", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FP2SymBuild.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FP2SymBuild.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP2SymBuild.mod?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -108,6 +108,7 @@ FROM SymbolTable IMPORT NulSym,\n                         ParametersDefinedInDefinition,\n                         ParametersDefinedInImplementation,\n                         ProcedureParametersDefined,\n+                        PutProcedureNoReturn,\n                         CheckForUnImplementedExports,\n                         CheckForUndeclaredExports,\n                         IsHiddenTypeDeclared,\n@@ -2098,6 +2099,17 @@ BEGIN\n END BuildOptFunction ;\n \n \n+(*\n+   BuildNoReturnAttribute - provide an interface to the symbol table module.\n+*)\n+\n+PROCEDURE BuildNoReturnAttribute (procedureSym: CARDINAL) ;\n+BEGIN\n+   Assert (IsProcedure (procedureSym)) ;\n+   PutProcedureNoReturn (procedureSym, TRUE)\n+END BuildNoReturnAttribute ;\n+\n+\n (*\n    BuildPointerType - builds a pointer type.\n                       The Stack:"}, {"sha": "c6c39d929621b46985b3ea360bf04a4ee8622248", "filename": "gcc/m2/gm2-compiler/SymbolTable.def", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FSymbolTable.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FSymbolTable.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FSymbolTable.def?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -191,6 +191,7 @@ EXPORT QUALIFIED NulSym,\n                  PutProcedureEndQuad,\n                  PutProcedureScopeQuad,\n                  PutProcedureReachable,\n+                 PutProcedureNoReturn, IsProcedureNoReturn,\n                  PutReadQuad, RemoveReadQuad,\n                  PutWriteQuad, RemoveWriteQuad,\n                  PutGnuAsm, PutGnuAsmOutput, PutGnuAsmInput, PutGnuAsmTrash,\n@@ -1274,7 +1275,7 @@ PROCEDURE PutProcedureInline (Sym: CARDINAL) ;\n \n \n (*\n-   IsProcedureBuiltin - returns TRUE if this procedure was declared as inlined.\n+   IsProcedureInline - returns TRUE if this procedure was declared as inlined.\n *)\n \n PROCEDURE IsProcedureInline (Sym: CARDINAL) : BOOLEAN ;\n@@ -1636,6 +1637,21 @@ PROCEDURE PutProcedureReachable (Sym: CARDINAL) ;\n PROCEDURE IsProcedureReachable (Sym: CARDINAL) : BOOLEAN ;\n \n \n+(*\n+   PutProcedureNoReturn - places value into the no return attribute\n+                          field of procedure sym.\n+*)\n+\n+PROCEDURE PutProcedureNoReturn (Sym: CARDINAL; value: BOOLEAN) ;\n+\n+\n+(*\n+   IsProcedureNoReturn - returns TRUE if this procedure never returns.\n+*)\n+\n+PROCEDURE IsProcedureNoReturn (Sym: CARDINAL) : BOOLEAN ;\n+\n+\n (*\n    PutModuleStartQuad - Places QuadNumber into the Module symbol, Sym.\n                         QuadNumber is the start quad of Module,"}, {"sha": "cc1a874b7913adca52ca85faa3321c5985ca30b5", "filename": "gcc/m2/gm2-compiler/SymbolTable.mod", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FSymbolTable.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-compiler%2FSymbolTable.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FSymbolTable.mod?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -360,6 +360,7 @@ TYPE\n                IsBuiltin     : BOOLEAN ;    (* Was it declared __BUILTIN__ ? *)\n                BuiltinName   : Name ;       (* name of equivalent builtin    *)\n                IsInline      : BOOLEAN ;    (* Was it declared __INLINE__ ?  *)\n+               IsNoReturn    : BOOLEAN ;    (* Attribute noreturn ?          *)\n                ReturnOptional: BOOLEAN ;    (* Is the return value optional? *)\n                IsExtern      : BOOLEAN ;    (* Make this procedure extern.   *)\n                IsPublic      : BOOLEAN ;    (* Make this procedure visible.  *)\n@@ -3775,6 +3776,7 @@ BEGIN\n             IsBuiltin := FALSE ;         (* Was it declared __BUILTIN__ ? *)\n             BuiltinName := NulName ;     (* name of equivalent builtin    *)\n             IsInline := FALSE ;          (* Was is declared __INLINE__ ?  *)\n+            IsNoReturn := FALSE ;        (* Declared attribute noreturn ? *)\n             ReturnOptional := FALSE ;    (* Is the return value optional? *)\n             IsExtern := FALSE ;          (* Make this procedure external. *)\n             IsPublic := FALSE ;          (* Make this procedure visible.  *)\n@@ -3824,6 +3826,49 @@ BEGIN\n END MakeProcedure ;\n \n \n+(*\n+   PutProcedureNoReturn - places value into the no return attribute\n+                          field of procedure sym.\n+*)\n+\n+PROCEDURE PutProcedureNoReturn (Sym: CARDINAL; value: BOOLEAN) ;\n+VAR\n+   pSym: PtrToSymbol ;\n+BEGIN\n+   pSym := GetPsym (Sym) ;\n+   WITH pSym^ DO\n+      CASE SymbolType OF\n+\n+      ProcedureSym: Procedure.IsNoReturn := value\n+\n+      ELSE\n+         InternalError ('expecting ProcedureSym symbol')\n+      END\n+   END\n+END PutProcedureNoReturn ;\n+\n+\n+(*\n+   IsProcedureNoReturn - returns TRUE if this procedure never returns.\n+*)\n+\n+PROCEDURE IsProcedureNoReturn (Sym: CARDINAL) : BOOLEAN ;\n+VAR\n+   pSym: PtrToSymbol ;\n+BEGIN\n+   pSym := GetPsym (Sym) ;\n+   WITH pSym^ DO\n+      CASE SymbolType OF\n+\n+      ProcedureSym: RETURN Procedure.IsNoReturn\n+\n+      ELSE\n+         InternalError ('expecting ProcedureSym symbol')\n+      END\n+   END\n+END IsProcedureNoReturn ;\n+\n+\n (*\n    PutMonoName - changes the IsMonoName boolean inside the procedure.\n *)"}, {"sha": "ab409378673f566decb518ff74073920d2edd0d6", "filename": "gcc/m2/gm2-gcc/m2decl.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.cc?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -211,7 +211,7 @@ tree\n m2decl_BuildEndFunctionDeclaration (location_t location_begin,\n                                     location_t location_end, const char *name,\n                                     tree returntype, int isexternal,\n-                                    int isnested, int ispublic)\n+                                    int isnested, int ispublic, int isnoreturn)\n {\n   tree fntype;\n   tree fndecl;\n@@ -244,6 +244,7 @@ m2decl_BuildEndFunctionDeclaration (location_t location_begin,\n       = build_decl (location_end, RESULT_DECL, NULL_TREE, returntype);\n   DECL_CONTEXT (DECL_RESULT (fndecl)) = fndecl;\n   TREE_TYPE (fndecl) = fntype;\n+  TREE_THIS_VOLATILE (fndecl) = isnoreturn;\n \n   DECL_SOURCE_LOCATION (fndecl) = location_begin;\n "}, {"sha": "6a1969336a20604decf84ea4c8029963bc47a5cb", "filename": "gcc/m2/gm2-gcc/m2decl.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.def?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -149,7 +149,8 @@ PROCEDURE BuildStartFunctionDeclaration (uses_varargs: BOOLEAN) ;\n \n PROCEDURE BuildEndFunctionDeclaration (location_begin, location_end: location_t;\n                                        name: ADDRESS; returntype: Tree;\n-                                       isexternal, isnested, ispublic: BOOLEAN) : Tree ;\n+                                       isexternal, isnested, ispublic,\n+                                       isnoreturn: BOOLEAN) : Tree ;\n \n \n (*"}, {"sha": "19dbb7be4e172f944e29fce33b030a5db1c683fc", "filename": "gcc/m2/gm2-gcc/m2decl.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.h?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -58,7 +58,8 @@ EXTERN void m2decl_RememberVariables (tree l);\n \n EXTERN tree m2decl_BuildEndFunctionDeclaration (\n     location_t location_begin, location_t location_end, const char *name,\n-    tree returntype, int isexternal, int isnested, int ispublic);\n+    tree returntype, int isexternal, int isnested, int ispublic,\n+    int isnoreturn);\n EXTERN void m2decl_BuildStartFunctionDeclaration (int uses_varargs);\n EXTERN tree m2decl_BuildParameterDeclaration (location_t location, char *name,\n                                               tree type, int isreference);"}, {"sha": "ab7df80455898a1af74961fb430adb9fb2b06662", "filename": "gcc/m2/gm2-gcc/m2except.cc", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-gcc%2Fm2except.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Fm2%2Fgm2-gcc%2Fm2except.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2except.cc?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -103,18 +103,19 @@ m2except_InitExceptions (location_t location)\n \n   m2decl_BuildStartFunctionDeclaration (FALSE);\n   fn_rethrow_tree = m2decl_BuildEndFunctionDeclaration (\n-      location, location, \"__cxa_rethrow\", void_type_node, TRUE, FALSE, TRUE);\n+     location, location, \"__cxa_rethrow\", void_type_node, TRUE, FALSE,\n+     TRUE, FALSE);\n   TREE_NOTHROW (fn_rethrow_tree) = 0;\n \n   m2decl_BuildStartFunctionDeclaration (FALSE);\n   m2decl_BuildParameterDeclaration (location, NULL, ptr_type_node, FALSE);\n   fn_begin_catch_tree = m2decl_BuildEndFunctionDeclaration (\n       location, location, \"__cxa_begin_catch\", ptr_type_node, TRUE, FALSE,\n-      TRUE);\n+      TRUE, FALSE);\n   m2decl_BuildStartFunctionDeclaration (FALSE);\n   fn_end_catch_tree = m2decl_BuildEndFunctionDeclaration (\n       location, location, \"__cxa_end_catch\", void_type_node, TRUE, FALSE,\n-      TRUE);\n+      TRUE, FALSE);\n   /* This can throw if the destructor for the exception throws.  */\n   TREE_NOTHROW (fn_end_catch_tree) = 0;\n \n@@ -130,26 +131,28 @@ m2except_InitExceptions (location_t location)\n   m2decl_BuildParameterDeclaration (location, NULL, ptr_type_node, FALSE);\n   m2decl_BuildParameterDeclaration (location, NULL, ptr_type_node, FALSE);\n   fn_throw_tree = m2decl_BuildEndFunctionDeclaration (\n-      location, location, \"__cxa_throw\", void_type_node, TRUE, FALSE, TRUE);\n+      location, location, \"__cxa_throw\", void_type_node, TRUE, FALSE, TRUE,\n+      FALSE);\n \n   /* Declare void __cxa_rethrow (void).  */\n   m2decl_BuildStartFunctionDeclaration (FALSE);\n   fn_rethrow_tree = m2decl_BuildEndFunctionDeclaration (\n-      location, location, \"__cxa_rethrow\", void_type_node, TRUE, FALSE, TRUE);\n+     location, location, \"__cxa_rethrow\", void_type_node, TRUE, FALSE, TRUE,\n+     FALSE);\n \n   /* Declare void *__cxa_allocate_exception (size_t).  */\n   m2decl_BuildStartFunctionDeclaration (FALSE);\n   m2decl_BuildParameterDeclaration (location, NULL, size_type_node, FALSE);\n   fn_allocate_exception_tree = m2decl_BuildEndFunctionDeclaration (\n       location, location, \"__cxa_allocate_exception\", ptr_type_node, TRUE,\n-      FALSE, TRUE);\n+      FALSE, TRUE, FALSE);\n \n   /* Declare void *__cxa_free_exception (void *).  */\n   m2decl_BuildStartFunctionDeclaration (FALSE);\n   m2decl_BuildParameterDeclaration (location, NULL, ptr_type_node, FALSE);\n   fn_free_exception_tree = m2decl_BuildEndFunctionDeclaration (\n       location, location, \"__cxa_free_exception\", ptr_type_node, TRUE, FALSE,\n-      TRUE);\n+      TRUE, FALSE);\n \n   /* Define integer type exception type which will match C++ int type\n      in the C++ runtime library.  */"}, {"sha": "af7fd81cba2842b33919149aaa88497e30a20117", "filename": "gcc/testsuite/gm2/warnings/returntype/fail/badreturn.mod", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Ffail%2Fbadreturn.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Ffail%2Fbadreturn.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Ffail%2Fbadreturn.mod?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -0,0 +1,11 @@\n+MODULE badreturn ;\n+\n+PROCEDURE X (VAR Y : BOOLEAN) : BOOLEAN;\n+BEGIN\n+  IF Y\n+  THEN\n+    RETURN FALSE\n+  END\n+END X ;\n+\n+END badreturn."}, {"sha": "aaebe1f07ddd45177ee1b7ba8a1d834079e8b45f", "filename": "gcc/testsuite/gm2/warnings/returntype/fail/warnings-returntype-fail.exp", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Ffail%2Fwarnings-returntype-fail.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Ffail%2Fwarnings-returntype-fail.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Ffail%2Fwarnings-returntype-fail.exp?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -0,0 +1,40 @@\n+# Expect driver script for GCC Regression Tests\n+# Copyright (C) 2003-2023 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# This file was written by Gaius Mulley (gaius.mulley@southwales.ac.uk)\n+# for GNU Modula-2.\n+\n+if $tracelevel then {\n+    strace $tracelevel\n+}\n+\n+# load support procs\n+load_lib gm2-torture.exp\n+\n+gm2_init_pim \"${srcdir}/gm2/warnings/returntype/fail\"\n+\n+global TORTURE_OPTIONS\n+set TORTURE_OPTIONS { { -O0 -g -Werror=return-type } }\n+\n+foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $testcase] then {\n+\tcontinue\n+    }\n+\n+    gm2-torture-fail $testcase\n+}"}, {"sha": "0b47826321b4e7e8d7e2305dea9c4e1e74da651d", "filename": "gcc/testsuite/gm2/warnings/returntype/pass/Termbase.mod", "status": "added", "additions": 220, "deletions": 0, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2FTermbase.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2FTermbase.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2FTermbase.mod?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -0,0 +1,220 @@\n+(* Termbase.mod provides GNU Modula-2 with a PIM 234 compatible Termbase.\n+\n+Copyright (C) 2004-2023 Free Software Foundation, Inc.\n+Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n+\n+This file is part of GNU Modula-2.\n+\n+GNU Modula-2 is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GNU Modula-2 is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  *)\n+\n+IMPLEMENTATION MODULE Termbase ;\n+\n+FROM Storage IMPORT ALLOCATE, DEALLOCATE ;\n+FROM M2RTS IMPORT Halt ;\n+IMPORT Display, Keyboard ;\n+\n+TYPE\n+   ReadMethods = POINTER TO RECORD\n+                               r   : ReadProcedure ;\n+                               s   : StatusProcedure ;\n+                               next: ReadMethods ;\n+                            END ;\n+\n+   WriteMethod = POINTER TO RECORD\n+                               w   : WriteProcedure ;\n+                               next: WriteMethod ;\n+                            END ;\n+\n+VAR\n+   rStack: ReadMethods ;\n+   wStack: WriteMethod ;\n+\n+\n+(*\n+   AssignRead - assigns a read procedure and status procedure for terminal\n+                input. Done is set to TRUE if successful. Subsequent\n+                Read and KeyPressed calls are mapped onto the user supplied\n+                procedures. The previous read and status procedures are\n+                uncovered and reused after UnAssignRead is called.\n+*)\n+\n+PROCEDURE AssignRead (rp: ReadProcedure; sp: StatusProcedure;\n+                      VAR Done: BOOLEAN) ;\n+VAR\n+   t: ReadMethods ;\n+BEGIN\n+   t := rStack ;\n+   NEW(rStack) ;\n+   IF rStack=NIL\n+   THEN\n+      Done := FALSE\n+   ELSE\n+      WITH rStack^ DO\n+         r := rp ;\n+         s := sp ;\n+         next := t\n+      END ;\n+      Done := TRUE\n+   END\n+END AssignRead ;\n+\n+\n+(*\n+   UnAssignRead - undo the last call to AssignRead and set Done to TRUE\n+                  on success.\n+*)\n+\n+PROCEDURE UnAssignRead (VAR Done: BOOLEAN) ;\n+VAR\n+   t: ReadMethods ;\n+BEGIN\n+   IF rStack=NIL\n+   THEN\n+      Done := FALSE\n+   ELSE\n+      Done := TRUE\n+   END ;\n+   t := rStack ;\n+   rStack := rStack^.next ;\n+   DISPOSE(t)\n+END UnAssignRead ;\n+\n+\n+(*\n+   Read - reads a single character using the currently active read\n+          procedure.\n+*)\n+\n+PROCEDURE Read (VAR ch: CHAR) ;\n+BEGIN\n+   IF rStack=NIL\n+   THEN\n+      Halt(__FILE__, __LINE__, __FUNCTION__, 'no active read procedure')\n+   ELSE\n+      rStack^.r(ch)\n+   END\n+END Read ;\n+\n+\n+(*\n+   KeyPressed - returns TRUE if a character is available to be read.\n+*)\n+\n+PROCEDURE KeyPressed () : BOOLEAN ;\n+BEGIN\n+   IF rStack=NIL\n+   THEN\n+      Halt(__FILE__, __LINE__, __FUNCTION__, 'no active status procedure')\n+   ELSE\n+      RETURN( rStack^.s() )\n+   END\n+END KeyPressed ;\n+\n+\n+(*\n+   AssignWrite - assigns a write procedure for terminal output.\n+                 Done is set to TRUE if successful. Subsequent\n+                 Write calls are mapped onto the user supplied\n+                 procedure. The previous write procedure is\n+                 uncovered and reused after UnAssignWrite is called.\n+*)\n+\n+PROCEDURE AssignWrite (wp: WriteProcedure; VAR Done: BOOLEAN) ;\n+VAR\n+   t: WriteMethod ;\n+BEGIN\n+   t := wStack ;\n+   NEW(wStack) ;\n+   IF wStack=NIL\n+   THEN\n+      Done := FALSE\n+   ELSE\n+      WITH wStack^ DO\n+         w := wp ;\n+         next := t\n+      END ;\n+      Done := TRUE\n+   END\n+END AssignWrite ;\n+\n+\n+(*\n+   UnAssignWrite - undo the last call to AssignWrite and set Done to TRUE\n+                   on success.\n+*)\n+\n+PROCEDURE UnAssignWrite (VAR Done: BOOLEAN) ;\n+VAR\n+   t: WriteMethod ;\n+BEGIN\n+   IF wStack=NIL\n+   THEN\n+      Done := FALSE\n+   ELSE\n+      Done := TRUE\n+   END ;\n+   t := wStack ;\n+   wStack := wStack^.next ;\n+   DISPOSE(t)\n+END UnAssignWrite ;\n+\n+\n+(*\n+   Write - writes a single character using the currently active write\n+           procedure.\n+*)\n+\n+PROCEDURE Write (VAR ch: CHAR) ;\n+BEGIN\n+   IF wStack=NIL\n+   THEN\n+      Halt(__FILE__, __LINE__, __FUNCTION__, 'no active write procedure')\n+   ELSE\n+      wStack^.w(ch)\n+   END\n+END Write ;\n+\n+\n+(*\n+   Init -\n+*)\n+\n+PROCEDURE Init ;\n+VAR\n+   Done: BOOLEAN ;\n+BEGIN\n+   rStack := NIL ;\n+   wStack := NIL ;\n+   AssignRead(Keyboard.Read, Keyboard.KeyPressed, Done) ;\n+   IF NOT Done\n+   THEN\n+      Halt(__FILE__, __LINE__, __FUNCTION__, 'failed to assign read routines from module Keyboard')\n+   END ;\n+   AssignWrite(Display.Write, Done) ;\n+   IF NOT Done\n+   THEN\n+      Halt(__FILE__, __LINE__, __FUNCTION__, 'failed to assign write routine from module Display')\n+   END\n+END Init ;\n+\n+\n+BEGIN\n+   Init\n+END Termbase."}, {"sha": "7b27949d40316353e9e998da282d74c75ba5f486", "filename": "gcc/testsuite/gm2/warnings/returntype/pass/goodreturn.mod", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2Fgoodreturn.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2Fgoodreturn.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2Fgoodreturn.mod?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -0,0 +1,13 @@\n+MODULE goodreturn ;\n+\n+PROCEDURE X (VAR Y : BOOLEAN) : BOOLEAN;\n+BEGIN\n+  IF Y\n+  THEN\n+    RETURN FALSE\n+  ELSE\n+    RETURN TRUE\n+  END\n+END X ;\n+\n+END goodreturn."}, {"sha": "30d5347796201f28a40608c68ff9cfbf1e11dcaa", "filename": "gcc/testsuite/gm2/warnings/returntype/pass/keypressedsimple.mod", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2Fkeypressedsimple.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2Fkeypressedsimple.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2Fkeypressedsimple.mod?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -0,0 +1,21 @@\n+MODULE keypressedsimple ;\n+\n+FROM M2RTS IMPORT Halt ;\n+FROM Args IMPORT Narg ;\n+\n+PROCEDURE KeyPressed () : BOOLEAN ;\n+BEGIN\n+   IF Narg () < 0\n+   THEN\n+      Halt(__FILE__, __LINE__, __FUNCTION__, 'no active status procedure')\n+   ELSE\n+      RETURN FALSE\n+   END\n+END KeyPressed ;\n+\n+\n+BEGIN\n+   IF KeyPressed ()\n+   THEN\n+   END\n+END keypressedsimple."}, {"sha": "1cde1ae544039aefac14c44197480b7e99816867", "filename": "gcc/testsuite/gm2/warnings/returntype/pass/warnings-returntype-pass.exp", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2Fwarnings-returntype-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94673a121cfc7f9d51c9d05e31795477f4dc8dc7/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2Fwarnings-returntype-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fwarnings%2Freturntype%2Fpass%2Fwarnings-returntype-pass.exp?ref=94673a121cfc7f9d51c9d05e31795477f4dc8dc7", "patch": "@@ -0,0 +1,38 @@\n+# Copyright (C) 2003-2023 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# This file was written by Gaius Mulley (gaiusmod2@gmail.com)\n+# for GNU Modula-2.\n+\n+if $tracelevel then {\n+    strace $tracelevel\n+}\n+\n+# load support procs\n+load_lib gm2-torture.exp\n+\n+set gm2src ${srcdir}/../m2\n+\n+gm2_init_pim \"${srcdir}/gm2/warnings/returntype/pass\" -Werror=return-type\n+\n+foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $testcase] then {\n+\tcontinue\n+    }\n+\n+    gm2-torture $testcase\n+}"}]}