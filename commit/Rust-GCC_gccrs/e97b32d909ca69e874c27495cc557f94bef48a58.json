{"sha": "e97b32d909ca69e874c27495cc557f94bef48a58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk3YjMyZDkwOWNhNjllODc0YzI3NDk1Y2M1NTdmOTRiZWY0OGE1OA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-12-21T19:18:52Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-12-21T19:18:52Z"}, "message": "reverted erroneous checking -- sorry about that\n\nFrom-SVN: r48250", "tree": {"sha": "0dfde0176cfef4e0c3e293ad70883b0599ecb578", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dfde0176cfef4e0c3e293ad70883b0599ecb578"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e97b32d909ca69e874c27495cc557f94bef48a58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97b32d909ca69e874c27495cc557f94bef48a58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e97b32d909ca69e874c27495cc557f94bef48a58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97b32d909ca69e874c27495cc557f94bef48a58/comments", "author": null, "committer": null, "parents": [{"sha": "82712f8b746a5ba02aeab77deb4a437cf8604b0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82712f8b746a5ba02aeab77deb4a437cf8604b0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82712f8b746a5ba02aeab77deb4a437cf8604b0e"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "7c50c971a3439837d54c3b5f5c7a8cac64ee67b1", "filename": "gcc/java/parse.y", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97b32d909ca69e874c27495cc557f94bef48a58/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97b32d909ca69e874c27495cc557f94bef48a58/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=e97b32d909ca69e874c27495cc557f94bef48a58", "patch": "@@ -5232,23 +5232,14 @@ check_inner_circular_reference (source, target)\n \n   if (!basetype_vec)\n     return NULL_TREE;\n-\n+  \n   for (i = 0; i < TREE_VEC_LENGTH (basetype_vec); i++)\n     {\n-      tree su;\n-\n-      /* We can end up with a NULL_TREE or an incomplete type here if\n-\t we are compiling multiple files at once.  It's safe to simply\n-\t ignore these cases.  */\n-      if (TREE_VEC_ELT (basetype_vec, i) == NULL_TREE)\n-\tcontinue;\n-      su = BINFO_TYPE (TREE_VEC_ELT (basetype_vec, i));\n-      if (INCOMPLETE_TYPE_P (su))\n-\tcontinue;\n+      tree su = BINFO_TYPE (TREE_VEC_ELT (basetype_vec, i));\n \n       if (inherits_from_p (su, target))\n \treturn lookup_cl (TYPE_NAME (su));\n-\n+      \n       for (ctx = DECL_CONTEXT (TYPE_NAME (su)); ctx; ctx = DECL_CONTEXT (ctx))\n \t{\n \t  /* An enclosing context shouldn't be TARGET */"}]}