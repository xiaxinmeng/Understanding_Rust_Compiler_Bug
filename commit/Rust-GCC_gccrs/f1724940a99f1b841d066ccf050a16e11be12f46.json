{"sha": "f1724940a99f1b841d066ccf050a16e11be12f46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE3MjQ5NDBhOTlmMWI4NDFkMDY2Y2NmMDUwYTE2ZTExYmUxMmY0Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2011-06-10T13:24:30Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2011-06-10T13:24:30Z"}, "message": "ipa-cp.c (ipcp_process_devirtualization_opportunities): Update call of gimple_get_virt_method_for_binfo.\n\n\t* ipa-cp.c (ipcp_process_devirtualization_opportunities):\n\tUpdate call of gimple_get_virt_method_for_binfo.\n\t* gimple-fold.c (gimple_get_virt_method_for_binfo): Remove\n\trefuse_thunks parameter.\n\t(gimple_fold_call): Update.\n\t* ipa-prop.c (try_make_edge_direct_virtual_call): Update.\n\nFrom-SVN: r174905", "tree": {"sha": "5a3afdf91d3d3953bbd03b79c2e0d857d968bf70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a3afdf91d3d3953bbd03b79c2e0d857d968bf70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1724940a99f1b841d066ccf050a16e11be12f46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1724940a99f1b841d066ccf050a16e11be12f46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1724940a99f1b841d066ccf050a16e11be12f46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1724940a99f1b841d066ccf050a16e11be12f46/comments", "author": null, "committer": null, "parents": [{"sha": "a6f834c5a87c1ac42f1c842bba34d84740218d77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6f834c5a87c1ac42f1c842bba34d84740218d77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6f834c5a87c1ac42f1c842bba34d84740218d77"}], "stats": {"total": 35, "additions": 15, "deletions": 20}, "files": [{"sha": "09d9d1c4872c08cd74410ecb837ceecf24cd55d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1724940a99f1b841d066ccf050a16e11be12f46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1724940a99f1b841d066ccf050a16e11be12f46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1724940a99f1b841d066ccf050a16e11be12f46", "patch": "@@ -1,3 +1,12 @@\n+2011-06-10  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-cp.c (ipcp_process_devirtualization_opportunities):\n+\tUpdate call of gimple_get_virt_method_for_binfo.\n+\t* gimple-fold.c (gimple_get_virt_method_for_binfo): Remove\n+\trefuse_thunks parameter.\n+\t(gimple_fold_call): Update.\n+\t* ipa-prop.c (try_make_edge_direct_virtual_call): Update.\n+\n 2011-06-10  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-sra.c (all_callers_have_enough_arguments_p): Rename to ..."}, {"sha": "6b3b275eeee652a25277a609424712f8a12f1b3f", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1724940a99f1b841d066ccf050a16e11be12f46/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1724940a99f1b841d066ccf050a16e11be12f46/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=f1724940a99f1b841d066ccf050a16e11be12f46", "patch": "@@ -1373,11 +1373,10 @@ gimple_fold_builtin (gimple stmt)\n \n tree\n gimple_get_virt_method_for_binfo (HOST_WIDE_INT token, tree known_binfo,\n-\t\t\t\t  tree *delta, bool refuse_thunks)\n+\t\t\t\t  tree *delta)\n {\n   HOST_WIDE_INT i;\n   tree v, fndecl;\n-  struct cgraph_node *node;\n \n   v = BINFO_VIRTUALS (known_binfo);\n   /* If there is no virtual methods leave the OBJ_TYPE_REF alone.  */\n@@ -1396,18 +1395,6 @@ gimple_get_virt_method_for_binfo (HOST_WIDE_INT token, tree known_binfo,\n     return NULL_TREE;\n \n   fndecl = TREE_VALUE (v);\n-  node = cgraph_get_node_or_alias (fndecl);\n-  if (refuse_thunks\n-      && (!node\n-    /* Bail out if it is a thunk declaration.  Since simple this_adjusting\n-       thunks are represented by a constant in TREE_PURPOSE of items in\n-       BINFO_VIRTUALS, this is a more complicate type which we cannot handle as\n-       yet.\n-\n-       FIXME: Remove the following condition once we are able to represent\n-       thunk information on call graph edges.  */\n-\t  || (node->same_body_alias && node->thunk.thunk_p)))\n-    return NULL_TREE;\n \n   /* When cgraph node is missing and function is not public, we cannot\n      devirtualize.  This can happen in WHOPR when the actual method\n@@ -1557,7 +1544,7 @@ gimple_fold_call (gimple_stmt_iterator *gsi, bool inplace)\n       if (!binfo)\n \treturn false;\n       token = TREE_INT_CST_LOW (OBJ_TYPE_REF_TOKEN (callee));\n-      fndecl = gimple_get_virt_method_for_binfo (token, binfo, &delta, false);\n+      fndecl = gimple_get_virt_method_for_binfo (token, binfo, &delta);\n       if (!fndecl)\n \treturn false;\n       gcc_assert (integer_zerop (delta));"}, {"sha": "7d97adbe7adfcc0e00221c6b6c994183f04acf8b", "filename": "gcc/gimple.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1724940a99f1b841d066ccf050a16e11be12f46/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1724940a99f1b841d066ccf050a16e11be12f46/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=f1724940a99f1b841d066ccf050a16e11be12f46", "patch": "@@ -904,7 +904,7 @@ unsigned get_gimple_rhs_num_ops (enum tree_code);\n gimple gimple_alloc_stat (enum gimple_code, unsigned MEM_STAT_DECL);\n const char *gimple_decl_printable_name (tree, int);\n bool gimple_fold_call (gimple_stmt_iterator *gsi, bool inplace);\n-tree gimple_get_virt_method_for_binfo (HOST_WIDE_INT, tree, tree *, bool);\n+tree gimple_get_virt_method_for_binfo (HOST_WIDE_INT, tree, tree *);\n void gimple_adjust_this_by_delta (gimple_stmt_iterator *, tree);\n tree gimple_extract_devirt_binfo_from_cst (tree);\n /* Returns true iff T is a valid GIMPLE statement.  */"}, {"sha": "992f1858983850b8faf6729bd2cd9fadf11b1c14", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1724940a99f1b841d066ccf050a16e11be12f46/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1724940a99f1b841d066ccf050a16e11be12f46/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=f1724940a99f1b841d066ccf050a16e11be12f46", "patch": "@@ -1190,8 +1190,7 @@ ipcp_process_devirtualization_opportunities (struct cgraph_node *node)\n \t  binfo = get_binfo_at_offset (binfo, anc_offset, otr_type);\n \t  if (!binfo)\n \t    continue;\n-\t  target = gimple_get_virt_method_for_binfo (token, binfo, &delta,\n-\t\t\t\t\t\t     false);\n+\t  target = gimple_get_virt_method_for_binfo (token, binfo, &delta);\n \t}\n       else\n \t{\n@@ -1214,7 +1213,7 @@ ipcp_process_devirtualization_opportunities (struct cgraph_node *node)\n \t\t  break;\n \t\t}\n \n-\t      t = gimple_get_virt_method_for_binfo (token, binfo, &d, true);\n+\t      t = gimple_get_virt_method_for_binfo (token, binfo, &d);\n \t      if (!t)\n \t\t{\n \t\t  target = NULL_TREE;"}, {"sha": "7e74ac8b7d6251cc3eb0fea71153040e0a545b85", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1724940a99f1b841d066ccf050a16e11be12f46/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1724940a99f1b841d066ccf050a16e11be12f46/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=f1724940a99f1b841d066ccf050a16e11be12f46", "patch": "@@ -1771,7 +1771,7 @@ try_make_edge_direct_virtual_call (struct cgraph_edge *ie,\n   type = ie->indirect_info->otr_type;\n   binfo = get_binfo_at_offset (binfo, ie->indirect_info->anc_offset, type);\n   if (binfo)\n-    target = gimple_get_virt_method_for_binfo (token, binfo, &delta, true);\n+    target = gimple_get_virt_method_for_binfo (token, binfo, &delta);\n   else\n     return NULL;\n "}]}