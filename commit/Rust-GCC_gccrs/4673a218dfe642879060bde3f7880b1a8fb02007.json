{"sha": "4673a218dfe642879060bde3f7880b1a8fb02007", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY3M2EyMThkZmU2NDI4NzkwNjBiZGUzZjc4ODBiMWE4ZmIwMjAwNw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-04-08T22:52:24Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-04-08T22:52:24Z"}, "message": "re PR rtl-optimization/65693 (ICE in assign_by_spills, at lra-assigns.c:1419)\n\n\tPR rtl-optimization/65693\n\t* combine.c (is_parallel_of_n_reg_sets): Change first argument\n\tfrom an rtx_insn * to an rtx.\n\t(try_combine): Adjust both callers.  Use it once more.\n\nFrom-SVN: r221937", "tree": {"sha": "df44cad531a1ebe974d2645445b6b0ef26dcfd8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df44cad531a1ebe974d2645445b6b0ef26dcfd8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4673a218dfe642879060bde3f7880b1a8fb02007", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4673a218dfe642879060bde3f7880b1a8fb02007", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4673a218dfe642879060bde3f7880b1a8fb02007", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4673a218dfe642879060bde3f7880b1a8fb02007/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "466df27b94978d9323033d4d1e6a90708c493640", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/466df27b94978d9323033d4d1e6a90708c493640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/466df27b94978d9323033d4d1e6a90708c493640"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "e246510b3f61c1ff5a9b702e51e0c7320ce179ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4673a218dfe642879060bde3f7880b1a8fb02007/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4673a218dfe642879060bde3f7880b1a8fb02007/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4673a218dfe642879060bde3f7880b1a8fb02007", "patch": "@@ -1,3 +1,10 @@\n+2015-04-08  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/65693\n+\t* combine.c (is_parallel_of_n_reg_sets): Change first argument\n+\tfrom an rtx_insn * to an rtx.\n+\t(try_combine): Adjust both callers.  Use it once more.\n+\n 2015-04-08  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \t* tree-chkp.c (chkp_find_const_bounds_var): Remove."}, {"sha": "6f4a8da97618edef16df3fabb214e6e251a54865", "filename": "gcc/combine.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4673a218dfe642879060bde3f7880b1a8fb02007/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4673a218dfe642879060bde3f7880b1a8fb02007/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=4673a218dfe642879060bde3f7880b1a8fb02007", "patch": "@@ -2493,13 +2493,11 @@ update_cfg_for_uncondjump (rtx_insn *insn)\n }\n \n #ifndef HAVE_cc0\n-/* Return whether INSN is a PARALLEL of exactly N register SETs followed\n+/* Return whether PAT is a PARALLEL of exactly N register SETs followed\n    by an arbitrary number of CLOBBERs.  */\n static bool\n-is_parallel_of_n_reg_sets (rtx_insn *insn, int n)\n+is_parallel_of_n_reg_sets (rtx pat, int n)\n {\n-  rtx pat = PATTERN (insn);\n-\n   if (GET_CODE (pat) != PARALLEL)\n     return false;\n \n@@ -2907,7 +2905,7 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n      decrement insn.  */\n \n   if (i1 == 0\n-      && is_parallel_of_n_reg_sets (i2, 2)\n+      && is_parallel_of_n_reg_sets (PATTERN (i2), 2)\n       && (GET_MODE_CLASS (GET_MODE (SET_DEST (XVECEXP (PATTERN (i2), 0, 0))))\n \t  == MODE_CC)\n       && GET_CODE (SET_SRC (XVECEXP (PATTERN (i2), 0, 0))) == COMPARE\n@@ -2939,7 +2937,7 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n      make those two SETs separate I1 and I2 insns, and make an I0 that is\n      the original I1.  */\n   if (i0 == 0\n-      && is_parallel_of_n_reg_sets (i2, 2)\n+      && is_parallel_of_n_reg_sets (PATTERN (i2), 2)\n       && can_split_parallel_of_n_reg_sets (i2, 2)\n       && !reg_used_between_p (SET_DEST (XVECEXP (PATTERN (i2), 0, 0)), i2, i3)\n       && !reg_used_between_p (SET_DEST (XVECEXP (PATTERN (i2), 0, 1)), i2, i3))\n@@ -3460,10 +3458,7 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n      debug info less accurate.  */\n \n   if (!(added_sets_2 && i1 == 0)\n-      && GET_CODE (newpat) == PARALLEL\n-      && XVECLEN (newpat, 0) == 2\n-      && GET_CODE (XVECEXP (newpat, 0, 0)) == SET\n-      && GET_CODE (XVECEXP (newpat, 0, 1)) == SET\n+      && is_parallel_of_n_reg_sets (newpat, 2)\n       && asm_noperands (newpat) < 0)\n     {\n       rtx set0 = XVECEXP (newpat, 0, 0);"}]}