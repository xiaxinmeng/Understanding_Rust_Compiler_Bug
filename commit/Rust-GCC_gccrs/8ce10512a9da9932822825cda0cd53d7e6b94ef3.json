{"sha": "8ce10512a9da9932822825cda0cd53d7e6b94ef3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNlMTA1MTJhOWRhOTkzMjgyMjgyNWNkYTBjZDUzZDdlNmI5NGVmMw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2000-11-28T09:34:08Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-11-28T09:34:08Z"}, "message": "tests_flags.in (LTCXX): Change CXX_FLAG to CXXFLAGS.\n\n\n2000-11-27  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* tests_flags.in (LTCXX): Change CXX_FLAG to CXXFLAGS.\n\n\t* testsuite/22_locale/ctor_copy_dtor.cc: Adjust formatting.\n\t* testsuite/27_io/istream_extractor_arith.cc (test11): New\n\ttestcase, based on libstdc++/90.\n\nFrom-SVN: r37813", "tree": {"sha": "f2da843b36389ec3a8ce89629295f4fbbe8b2576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2da843b36389ec3a8ce89629295f4fbbe8b2576"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ce10512a9da9932822825cda0cd53d7e6b94ef3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce10512a9da9932822825cda0cd53d7e6b94ef3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ce10512a9da9932822825cda0cd53d7e6b94ef3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce10512a9da9932822825cda0cd53d7e6b94ef3/comments", "author": null, "committer": null, "parents": [{"sha": "dd80b90606a2efb80383202304806971bdaa3476", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd80b90606a2efb80383202304806971bdaa3476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd80b90606a2efb80383202304806971bdaa3476"}], "stats": {"total": 48, "additions": 40, "deletions": 8}, "files": [{"sha": "74f92f154332cbef5921ba7a676051c34aa2b137", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce10512a9da9932822825cda0cd53d7e6b94ef3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce10512a9da9932822825cda0cd53d7e6b94ef3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8ce10512a9da9932822825cda0cd53d7e6b94ef3", "patch": "@@ -1,3 +1,11 @@\n+2000-11-27  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* tests_flags.in (LTCXX): Change CXX_FLAG to CXXFLAGS.\n+\n+\t* testsuite/22_locale/ctor_copy_dtor.cc: Adjust formatting.\n+\t* testsuite/27_io/istream_extractor_arith.cc (test11): New\n+\ttestcase, based on libstdc++/90.\n+\t\n 2000-11-27  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n         * config/cpu/arm/bits/atomicity.h (__exchange_and_add): Add"}, {"sha": "b44bb8c90d9458fa74048a6579f9074bd09e2c47", "filename": "libstdc++-v3/tests_flags.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce10512a9da9932822825cda0cd53d7e6b94ef3/libstdc%2B%2B-v3%2Ftests_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce10512a9da9932822825cda0cd53d7e6b94ef3/libstdc%2B%2B-v3%2Ftests_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftests_flags.in?ref=8ce10512a9da9932822825cda0cd53d7e6b94ef3", "patch": "@@ -157,7 +157,7 @@ ST_FLAGS=\"-static\"\n # LIBS == any extra needed -l switches, etc (may need more libs, lose lose)\n case ${query} in\n     --built-library)\n-    LTCXX=\"${LIBTOOL} --tag=CXX --mode=link ${CXX} ${CXX_FLAG} ${INC_PATH} \n+    LTCXX=\"${LIBTOOL} --tag=CXX --mode=link ${CXX} ${CXXFLAGS} ${INC_PATH} \n \t   ${LIB_PATH}/../libsupc++/libsupc++.la  ${LIB_PATH}/libstdc++.la\n \t   -no-install\"\n     LTEXE=\"${LIBTOOL} --mode=execute\"\n@@ -166,7 +166,7 @@ case ${query} in\n     --installed-library)\n     # For the installed version, we really only need to use libtool and\n     # the .la file to get correct rpaths.\n-    LTCXX=\"${LIBTOOL} --tag=CXX --mode=link ${CXX} ${CXX_FLAG} ${INC_PATH}\n+    LTCXX=\"${LIBTOOL} --tag=CXX --mode=link ${CXX} ${CXXFLAGS} ${INC_PATH}\n \t   -L${LIB_PATH} ${LIB_PATH}/libstdc++.la -no-install \n \t   -rpath ${LIB_PATH}\"\n     LTEXE=\"${LIBTOOL} --mode=execute\""}, {"sha": "7bdd44223397da1fcd7c03ee93feaef88cc6e1d8", "filename": "libstdc++-v3/testsuite/22_locale/ctor_copy_dtor.cc", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce10512a9da9932822825cda0cd53d7e6b94ef3/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctor_copy_dtor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce10512a9da9932822825cda0cd53d7e6b94ef3/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctor_copy_dtor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctor_copy_dtor.cc?ref=8ce10512a9da9932822825cda0cd53d7e6b94ef3", "patch": "@@ -26,11 +26,10 @@\n #include <debug_assert.h>\n \n #if _GLIBCPP_USE_WCHAR_T\n-\n-typedef std::codecvt<char, char, std::mbstate_t> \t\tc_codecvt;\n-typedef std::codecvt_byname<char, char, std::mbstate_t> \tc_codecvt_byname;\n-typedef std::codecvt<wchar_t, char, std::mbstate_t>\t\tw_codecvt;\n-typedef std::codecvt_byname<wchar_t, char, std::mbstate_t>\tw_codecvt_byname;\n+typedef std::codecvt<char, char, std::mbstate_t> \t      c_codecvt;\n+typedef std::codecvt_byname<char, char, std::mbstate_t>       c_codecvt_byname;\n+typedef std::codecvt<wchar_t, char, std::mbstate_t>\t      w_codecvt;\n+typedef std::codecvt_byname<wchar_t, char, std::mbstate_t>    w_codecvt_byname;\n \n class gnu_codecvt: public c_codecvt { }; \n \n@@ -168,7 +167,7 @@ int main ()\n {\n #if _GLIBCPP_USE_WCHAR_T\n   test01();\n-#endif /* !defined(_GLIBCPP_USE_WCHAR_T) */\n+#endif \n \n   return 0;\n }"}, {"sha": "219cd35f5ad1acb6ebbc998f9bfe8810009e5a6c", "filename": "libstdc++-v3/testsuite/27_io/istream_extractor_arith.cc", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce10512a9da9932822825cda0cd53d7e6b94ef3/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_arith.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce10512a9da9932822825cda0cd53d7e6b94ef3/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_arith.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_arith.cc?ref=8ce10512a9da9932822825cda0cd53d7e6b94ef3", "patch": "@@ -490,6 +490,29 @@ bool test10() {\n   return test;\n }\n \n+// In the presence of no fmtflags, the input operator should behave\n+// like strtol(x, y, 0)\n+// libstdc++/90\n+bool test11()\n+{\n+  bool test = true;\n+  const char* cstrlit = \"0x2a\";\n+\n+  // sanity check via 'C' library call\n+  char* err;\n+  long l = strtol(cstrlit, &err, 0);\n+\n+  std::istringstream iss(cstrlit);\n+  iss.setf(std::ios::fmtflags(0), std::ios::basefield);\n+  int i;\n+  iss >> i;\n+\n+  VERIFY (!iss.fail());\n+  VERIFY (l == i);\n+\n+  return test;\n+}\n+\n int main()\n {\n   test01();\n@@ -501,6 +524,8 @@ int main()\n   test08();\n   test09();\n   test10();\n+  \n+  test11();\n   return 0;\n }\n "}]}