{"sha": "4c445590e158cf39a9ca00fa1586b25c0851bd72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM0NDU1OTBlMTU4Y2YzOWE5Y2EwMGZhMTU4NmIyNWMwODUxYmQ3Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-04-18T07:54:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-04-18T07:54:58Z"}, "message": "re PR tree-optimization/56984 (ICE in tree_vrp.c)\n\n\tPR tree-optimization/56984\n\t* tree-vrp.c (register_edge_assert_for_2): For (x >> M) < N\n\tand (x >> M) >= N don't register any assertion if N << M is the\n\tminimum value.\n\n\t* gcc.c-torture/compile/pr56984.c: New test.\n\nFrom-SVN: r198051", "tree": {"sha": "4808210d675a550453f4f3c95620b9cd502a1771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4808210d675a550453f4f3c95620b9cd502a1771"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c445590e158cf39a9ca00fa1586b25c0851bd72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c445590e158cf39a9ca00fa1586b25c0851bd72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c445590e158cf39a9ca00fa1586b25c0851bd72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c445590e158cf39a9ca00fa1586b25c0851bd72/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae1e2600eb59a0df56f81402228efb0e64ab47c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1e2600eb59a0df56f81402228efb0e64ab47c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae1e2600eb59a0df56f81402228efb0e64ab47c6"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "fd7d6efc8fa3d7eabfc9fe72289408eba9fe6bd6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c445590e158cf39a9ca00fa1586b25c0851bd72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c445590e158cf39a9ca00fa1586b25c0851bd72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c445590e158cf39a9ca00fa1586b25c0851bd72", "patch": "@@ -1,3 +1,10 @@\n+2013-04-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56984\n+\t* tree-vrp.c (register_edge_assert_for_2): For (x >> M) < N\n+\tand (x >> M) >= N don't register any assertion if N << M is the\n+\tminimum value.\n+\n 2013-04-18  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* lower-subreg.c (resolve_simple_move): If called self-recursive,"}, {"sha": "64ffe8f4a7e569a2eb52d6d34fe7d1d9645f36b3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c445590e158cf39a9ca00fa1586b25c0851bd72/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c445590e158cf39a9ca00fa1586b25c0851bd72/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c445590e158cf39a9ca00fa1586b25c0851bd72", "patch": "@@ -1,5 +1,8 @@\n 2013-04-18  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/56984\n+\t* gcc.c-torture/compile/pr56984.c: New test.\n+\n \tPR rtl-optimization/56992\n \t* gcc.dg/pr56992.c: New test.\n "}, {"sha": "bd00bee88eec260b75173b4f912e82ccbc6d5925", "filename": "gcc/testsuite/gcc.c-torture/compile/pr56984.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c445590e158cf39a9ca00fa1586b25c0851bd72/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr56984.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c445590e158cf39a9ca00fa1586b25c0851bd72/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr56984.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr56984.c?ref=4c445590e158cf39a9ca00fa1586b25c0851bd72", "patch": "@@ -0,0 +1,9 @@\n+/* PR tree-optimization/56984 */\n+\n+int\n+foo (int x)\n+{\n+  if ((x >> 31) < -1)\n+    x++;\n+  return x;\n+}"}, {"sha": "5b4321a3a27d3286c2a445122f5bf1d2d46997c7", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c445590e158cf39a9ca00fa1586b25c0851bd72/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c445590e158cf39a9ca00fa1586b25c0851bd72/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=4c445590e158cf39a9ca00fa1586b25c0851bd72", "patch": "@@ -4895,7 +4895,13 @@ register_edge_assert_for_2 (tree name, edge e, gimple_stmt_iterator bsi,\n \t      new_comp_code = comp_code == EQ_EXPR ? LE_EXPR : GT_EXPR;\n \t    }\n \t  else if (comp_code == LT_EXPR || comp_code == GE_EXPR)\n-\t    new_val = val2;\n+\t    {\n+\t      double_int minval\n+\t\t= double_int::min_value (prec, TYPE_UNSIGNED (TREE_TYPE (val)));\n+\t      new_val = val2;\n+\t      if (minval == tree_to_double_int (new_val))\n+\t\tnew_val = NULL_TREE;\n+\t    }\n \t  else\n \t    {\n \t      double_int maxval"}]}