{"sha": "5773afc5b5b659bc20842e72627b492023d65cb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc3M2FmYzViNWI2NTliYzIwODQyZTcyNjI3YjQ5MjAyM2Q2NWNiNQ==", "commit": {"author": {"name": "Dorit Nuzman", "email": "dorit@il.ibm.com", "date": "2007-03-25T11:08:29Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2007-03-25T11:08:29Z"}, "message": "re PR middle-end/30784 (ICE on loop vectorization (-O1 -march=athlon-xp -ftree-vectorize))\n\n        PR tree-optimization/30784\n        * fold-const.c (fold_ternary): Handle CONSTRUCTOR in case\n        BIT_FIELD_REF.\n\nFrom-SVN: r123197", "tree": {"sha": "7b5379e8c48e4e39c5a32337205ad98c5b5e7d24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b5379e8c48e4e39c5a32337205ad98c5b5e7d24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5773afc5b5b659bc20842e72627b492023d65cb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5773afc5b5b659bc20842e72627b492023d65cb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5773afc5b5b659bc20842e72627b492023d65cb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5773afc5b5b659bc20842e72627b492023d65cb5/comments", "author": null, "committer": null, "parents": [{"sha": "271892929a448a2bad2fa83e5652958d1af3f1a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/271892929a448a2bad2fa83e5652958d1af3f1a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/271892929a448a2bad2fa83e5652958d1af3f1a4"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "fa1e4b3ad2128680971e3728e101b9c24b4d3df2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773afc5b5b659bc20842e72627b492023d65cb5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773afc5b5b659bc20842e72627b492023d65cb5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5773afc5b5b659bc20842e72627b492023d65cb5", "patch": "@@ -1,3 +1,9 @@\n+2007-03-25  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\tPR tree-optimization/30784\n+\t* fold-const.c (fold_ternary): Handle CONSTRUCTOR in case\n+\tBIT_FIELD_REF.\n+\n 2007-03-25  Revital Eres  <eres@il.ibm.com>\n \n         * tree-if-conv.c (if_convertible_gimple_modify_stmt_p):"}, {"sha": "66bcbbcd3620bc4d01013c63d88fef277f6b444c", "filename": "gcc/fold-const.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773afc5b5b659bc20842e72627b492023d65cb5/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773afc5b5b659bc20842e72627b492023d65cb5/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=5773afc5b5b659bc20842e72627b492023d65cb5", "patch": "@@ -12470,7 +12470,8 @@ fold_ternary (enum tree_code code, tree type, tree op0, tree op1, tree op2)\n       gcc_unreachable ();\n \n     case BIT_FIELD_REF:\n-      if (TREE_CODE (arg0) == VECTOR_CST\n+      if ((TREE_CODE (arg0) == VECTOR_CST\n+\t   || (TREE_CODE (arg0) == CONSTRUCTOR && TREE_CONSTANT (arg0)))\n \t  && type == TREE_TYPE (TREE_TYPE (arg0))\n \t  && host_integerp (arg1, 1)\n \t  && host_integerp (op2, 1))\n@@ -12484,7 +12485,18 @@ fold_ternary (enum tree_code code, tree type, tree op0, tree op1, tree op2)\n \t      && (idx = idx / width)\n \t\t < TYPE_VECTOR_SUBPARTS (TREE_TYPE (arg0)))\n \t    {\n-\t      tree elements = TREE_VECTOR_CST_ELTS (arg0);\n+\t      tree elements = NULL_TREE;\n+\n+\t      if (TREE_CODE (arg0) == VECTOR_CST)\n+\t\telements = TREE_VECTOR_CST_ELTS (arg0);\n+\t      else\n+\t\t{\n+\t\t  unsigned HOST_WIDE_INT idx;\n+\t\t  tree value;\n+\n+\t\t  FOR_EACH_CONSTRUCTOR_VALUE (CONSTRUCTOR_ELTS (arg0), idx, value)\n+\t\t    elements = tree_cons (NULL_TREE, value, elements);\n+\t\t}\n \t      while (idx-- > 0 && elements)\n \t\telements = TREE_CHAIN (elements);\n \t      if (elements)"}, {"sha": "d8b23d858002e539d3ac993a704ced1901e61cfd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773afc5b5b659bc20842e72627b492023d65cb5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773afc5b5b659bc20842e72627b492023d65cb5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5773afc5b5b659bc20842e72627b492023d65cb5", "patch": "@@ -1,3 +1,8 @@\n+2007-03-25  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\tPR tree-optimization/30784\n+        * gcc.dg/vect/pr30784.c: New test.\n+\n 2007-03-25  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/30877"}, {"sha": "3df9afe3bbdc2d41998a995722c7c1bdddd7e5d7", "filename": "gcc/testsuite/gcc.dg/vect/pr30784.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5773afc5b5b659bc20842e72627b492023d65cb5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr30784.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5773afc5b5b659bc20842e72627b492023d65cb5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr30784.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr30784.c?ref=5773afc5b5b659bc20842e72627b492023d65cb5", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include <stdarg.h>\n+#include \"tree-vect.h\"\n+\n+long stack_vars_sorted[32];\n+\n+int\n+main1 (long n)\n+{\n+  long si;\n+\n+  for (si = 0; si < n; ++si)\n+    stack_vars_sorted[si] = si;\n+}\n+\n+int main ()\n+{\n+  long si;\n+\n+  check_vect ();\n+  main1 (32);\n+\n+  for (si = 0; si < 32; ++si)\n+    if (stack_vars_sorted[si] != si)\n+      abort ();\n+\n+  return 0;\n+}\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}]}