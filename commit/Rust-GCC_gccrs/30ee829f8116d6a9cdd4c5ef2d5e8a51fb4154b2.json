{"sha": "30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBlZTgyOWY4MTE2ZDZhOWNkZDRjNWVmMmQ1ZThhNTFmYjQxNTRiMg==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2005-04-19T19:53:26Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2005-04-19T19:53:26Z"}, "message": "Makefile.in (libgcc.mk): Pass GCC_FOR_TARGET.\n\n\t* Makefile.in (libgcc.mk): Pass GCC_FOR_TARGET.\n\t* mklibgcc.in: Use $GCC_FOR_TARGET instead of ./xgcc.\n\nFrom-SVN: r98420", "tree": {"sha": "3f4c6d9e04e1d7553b72f75b16e65f4cd0577790", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f4c6d9e04e1d7553b72f75b16e65f4cd0577790"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2/comments", "author": null, "committer": null, "parents": [{"sha": "0a0179a92f68b342a348b70ef4aa20cf35dc01f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a0179a92f68b342a348b70ef4aa20cf35dc01f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a0179a92f68b342a348b70ef4aa20cf35dc01f7"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "1e6eca8f4f48adb0e56f7173b68baa7d0f762d1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2", "patch": "@@ -1,3 +1,8 @@\n+2005-04-19  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* Makefile.in (libgcc.mk): Pass GCC_FOR_TARGET.\n+\t* mklibgcc.in: Use $GCC_FOR_TARGET instead of ./xgcc.\n+\n 2005-04-19  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm.c (arm_init_libfuncs): Clear mod optabs. "}, {"sha": "5e2e9c6cebb8e32680124321492c1fb3f95c4055", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2", "patch": "@@ -1262,6 +1262,7 @@ libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD) $(LIB2ADD_ST) xgcc$(exeext\n \tSHLIB_NM_FLAGS='$(SHLIB_NM_FLAGS)' \\\n \tMULTILIB_OSDIRNAMES='$(MULTILIB_OSDIRNAMES)' \\\n \tASM_HIDDEN_OP='$(ASM_HIDDEN_OP)' \\\n+\tGCC_FOR_TARGET='$(GCC_FOR_TARGET)' \\\n \tmkinstalldirs='$(mkinstalldirs)' \\\n \t  $(SHELL) mklibgcc > tmp-libgcc.mk\n \tmv tmp-libgcc.mk libgcc.mk"}, {"sha": "aa61d41f4339a6f7394d74ddc04f7f8b1ef25744", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=30ee829f8116d6a9cdd4c5ef2d5e8a51fb4154b2", "patch": "@@ -40,6 +40,7 @@\n # SHLIB_INSTALL\n # MULTILIB_OSDIRNAMES\n # ASM_HIDDEN_OP\n+# GCC_FOR_TARGET\n \n # Make needs VPATH to be literal.\n echo 'srcdir = @srcdir@'\n@@ -178,7 +179,7 @@ for ml in $MULTILIBS; do\n     if [ \"$LIBUNWIND\" ]; then\n       libunwind_so=$dir/libunwind${SHLIB_EXT}\n     fi\n-    os_multilib_dir=`./xgcc -B./ $flags --print-multi-os-directory`\n+    os_multilib_dir=`$GCC_FOR_TARGET $flags --print-multi-os-directory`\n     if [ \"$os_multilib_dir\" != . ]; then\n       shlib_slibdir_qual=\"/$os_multilib_dir\"\n     fi\n@@ -804,7 +805,7 @@ for ml in $MULTILIBS; do\n     echo '\t$(RANLIB_FOR_TARGET)' ${ldir}/libgcc_eh.a\n \n     shlib_slibdir_qual=\n-    os_multilib_dir=`./xgcc -B./ $flags --print-multi-os-directory`\n+    os_multilib_dir=`$GCC_FOR_TARGET $flags --print-multi-os-directory`\n     if [ \"$os_multilib_dir\" != . ]; then\n       shlib_slibdir_qual=\"/$os_multilib_dir\"\n     fi"}]}