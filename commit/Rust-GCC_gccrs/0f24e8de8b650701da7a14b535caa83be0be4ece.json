{"sha": "0f24e8de8b650701da7a14b535caa83be0be4ece", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYyNGU4ZGU4YjY1MDcwMWRhN2ExNGI1MzVjYWE4M2JlMGJlNGVjZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-08-12T10:41:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-08-12T10:41:26Z"}, "message": "configure.ac: Run unconditionally GLIBCXX_CHECK_INT64_T and GLIBCXX_CHECK_C99_TR1...\n\n2008-08-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* configure.ac: Run unconditionally GLIBCXX_CHECK_INT64_T and\n\tGLIBCXX_CHECK_C99_TR1; remove sigsetjmp and mmap checks (unused).\n\t* crossconfig.m4: Adjust; remove HAVE_GETPAGESIZE defines (unused).\n\t* configure: Regenerate.\n\t* config.h.in: Likewise.\n\n\t* acinclude.m4: Minor formatting fixes.\n\nFrom-SVN: r139008", "tree": {"sha": "a1538a40d9d76b39f3d037f1671a4271c923907c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1538a40d9d76b39f3d037f1671a4271c923907c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f24e8de8b650701da7a14b535caa83be0be4ece", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f24e8de8b650701da7a14b535caa83be0be4ece", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f24e8de8b650701da7a14b535caa83be0be4ece", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f24e8de8b650701da7a14b535caa83be0be4ece/comments", "author": null, "committer": null, "parents": [{"sha": "5408498e8390e077104ef2d52f062fb32e0a49ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5408498e8390e077104ef2d52f062fb32e0a49ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5408498e8390e077104ef2d52f062fb32e0a49ff"}], "stats": {"total": 12445, "additions": 5348, "deletions": 7097}, "files": [{"sha": "a57584726e4ab68c10afc7a49da82a331e4a4345", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f24e8de8b650701da7a14b535caa83be0be4ece/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f24e8de8b650701da7a14b535caa83be0be4ece/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0f24e8de8b650701da7a14b535caa83be0be4ece", "patch": "@@ -1,3 +1,13 @@\n+2008-08-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* configure.ac: Run unconditionally GLIBCXX_CHECK_INT64_T and\n+\tGLIBCXX_CHECK_C99_TR1; remove sigsetjmp and mmap checks (unused).\n+\t* crossconfig.m4: Adjust; remove HAVE_GETPAGESIZE defines (unused).\n+\t* configure: Regenerate.\n+\t* config.h.in: Likewise.\n+\n+\t* acinclude.m4: Minor formatting fixes.\n+\n 2008-08-11  Stephen M. Webb  <stephenw@xandros.com>\n \n \t* include/tr1_impl/regex: Formatting fixes."}, {"sha": "5c98ebd6bb150631d2b22b9ea287840c7c58622e", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f24e8de8b650701da7a14b535caa83be0be4ece/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f24e8de8b650701da7a14b535caa83be0be4ece/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=0f24e8de8b650701da7a14b535caa83be0be4ece", "patch": "@@ -1204,7 +1204,8 @@ AC_DEFUN([GLIBCXX_CHECK_C99_TR1], [\n \t         [int ch;\n \t          int ret;\n \t          ret = isblank(ch);\n-\t\t ],[glibcxx_cv_c99_ctype_tr1=yes], [glibcxx_cv_c99_ctype_tr1=no])\n+\t\t ],[glibcxx_cv_c99_ctype_tr1=yes],\n+\t\t   [glibcxx_cv_c99_ctype_tr1=no])\n   ])\n   AC_MSG_RESULT($glibcxx_cv_c99_ctype_tr1)\n   if test x\"$glibcxx_cv_c99_ctype_tr1\" = x\"yes\"; then\n@@ -1275,7 +1276,8 @@ AC_DEFUN([GLIBCXX_CHECK_C99_TR1], [\n \t          typedef uint_least64_t  my_uint_least64_t;\n \t\t  typedef uintmax_t       my_uintmax_t;\n \t\t  typedef uintptr_t       my_uintptr_t;\n-\t\t ],[glibcxx_cv_c99_stdint_tr1=yes], [glibcxx_cv_c99_stdint_tr1=no])\n+\t\t ],[glibcxx_cv_c99_stdint_tr1=yes],\n+\t\t   [glibcxx_cv_c99_stdint_tr1=no])\n   ])\n   AC_MSG_RESULT($glibcxx_cv_c99_stdint_tr1)\n   if test x\"$glibcxx_cv_c99_stdint_tr1\" = x\"yes\"; then"}, {"sha": "20f298df6d7d63989c521a754f6d75376a8f1d89", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f24e8de8b650701da7a14b535caa83be0be4ece/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f24e8de8b650701da7a14b535caa83be0be4ece/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=0f24e8de8b650701da7a14b535caa83be0be4ece", "patch": "@@ -159,9 +159,6 @@\n /* Define if _Unwind_GetIPInfo is available. */\n #undef HAVE_GETIPINFO\n \n-/* Define to 1 if you have the `getpagesize' function. */\n-#undef HAVE_GETPAGESIZE\n-\n /* Define if gthr-default.h exists (meaning that threading support is\n    enabled). */\n #undef HAVE_GTHR_DEFAULT\n@@ -274,9 +271,6 @@\n /* Define to 1 if you have the <memory.h> header file. */\n #undef HAVE_MEMORY_H\n \n-/* Define to 1 if you have a working `mmap' system call. */\n-#undef HAVE_MMAP\n-\n /* Define to 1 if you have the `modf' function. */\n #undef HAVE_MODF\n \n@@ -304,9 +298,6 @@\n /* Define to 1 if you have the `setenv' function. */\n #undef HAVE_SETENV\n \n-/* Define if sigsetjmp is available. */\n-#undef HAVE_SIGSETJMP\n-\n /* Define to 1 if you have the `sincos' function. */\n #undef HAVE_SINCOS\n "}, {"sha": "08b7139c2f71b07596b4df7ca554e0cef31dd309", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 5328, "deletions": 7032, "changes": 12360, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f24e8de8b650701da7a14b535caa83be0be4ece/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f24e8de8b650701da7a14b535caa83be0be4ece/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=0f24e8de8b650701da7a14b535caa83be0be4ece"}, {"sha": "8f984349292590fa71f1b1c32c70a3d6630d9c9b", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f24e8de8b650701da7a14b535caa83be0be4ece/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f24e8de8b650701da7a14b535caa83be0be4ece/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=0f24e8de8b650701da7a14b535caa83be0be4ece", "patch": "@@ -122,6 +122,12 @@ GLIBCXX_ENABLE_FULLY_DYNAMIC_STRING([no])\n # Checks for operating systems support that don't require linking.\n GLIBCXX_CHECK_SYSTEM_ERROR\n \n+# For the streamoff typedef.\n+GLIBCXX_CHECK_INT64_T\n+\n+# For C99 support to TR1.\n+GLIBCXX_CHECK_C99_TR1\n+\n # For common values of EOF, SEEK_CUR, SEEK_END.\n GLIBCXX_CHECK_STDIO_MACROS\n \n@@ -151,15 +157,9 @@ if $GLIBCXX_IS_NATIVE; then\n   AC_CHECK_HEADERS(sys/uio.h)\n   GLIBCXX_CHECK_WRITEV\n \n-  # For the __streamoff_base_type typedef.\n-  GLIBCXX_CHECK_INT64_T\n-\n   # For LFS support.\n   GLIBCXX_CHECK_LFS\n \n-  # For C99 support to TR1.\n-  GLIBCXX_CHECK_C99_TR1\n-\n   # For dev/random and dev/urandom for TR1.\n   GLIBCXX_CHECK_RANDOM_TR1\n \n@@ -177,16 +177,6 @@ if $GLIBCXX_IS_NATIVE; then\n \n   AC_LC_MESSAGES\n \n-  AC_TRY_COMPILE(\n-    [#include <setjmp.h>],\n-    [sigjmp_buf env;\n-     while (! sigsetjmp (env, 1))\n-       siglongjmp (env, 1);\n-    ],\n-    [AC_DEFINE(HAVE_SIGSETJMP, 1, [Define if sigsetjmp is available.])])\n-\n-  AC_FUNC_MMAP\n-\n   # For iconv support.\n   AM_ICONV\n \n@@ -229,8 +219,6 @@ else\n \n     # GLIBCXX_CHECK_STDLIB_SUPPORT\n     AC_DEFINE(HAVE_STRTOF)        \n-    # AC_FUNC_MMAP\n-    AC_DEFINE(HAVE_MMAP)\n \n     AC_DEFINE(HAVE_ACOSF)\n     AC_DEFINE(HAVE_ASINF)"}, {"sha": "a38a4c306a10a186a2f3c3d0a201ef99b178d164", "filename": "libstdc++-v3/crossconfig.m4", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f24e8de8b650701da7a14b535caa83be0be4ece/libstdc%2B%2B-v3%2Fcrossconfig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f24e8de8b650701da7a14b535caa83be0be4ece/libstdc%2B%2B-v3%2Fcrossconfig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fcrossconfig.m4?ref=0f24e8de8b650701da7a14b535caa83be0be4ece", "patch": "@@ -24,10 +24,7 @@ case \"${host}\" in\n     GLIBCXX_CHECK_COMPLEX_MATH_SUPPORT\n     GLIBCXX_CHECK_STDLIB_SUPPORT\n     GLIBCXX_CHECK_S_ISREG_OR_S_IFREG\n-    AC_DEFINE(HAVE_SIGSETJMP)\n-    AC_DEFINE(HAVE_GETPAGESIZE)\n     AC_DEFINE(HAVE_WRITEV)\n-    AC_DEFINE(HAVE_INT64_T)\n \n     AC_DEFINE(HAVE_LIBM)\n     AC_DEFINE(HAVE_COPYSIGN)\n@@ -65,16 +62,6 @@ case \"${host}\" in\n     GLIBCXX_CHECK_WRITEV\n \n     AC_DEFINE(HAVE_LC_MESSAGES)\n-\n-    AC_TRY_COMPILE(\n-      [#include <setjmp.h>],\n-      [sigjmp_buf env;\n-       while (! sigsetjmp (env, 1))\n-         siglongjmp (env, 1);\n-    ],\n-    [AC_DEFINE(HAVE_SIGSETJMP, 1, [Define if sigsetjmp is available.])])\n-\n-    AC_DEFINE(HAVE_MMAP)\n     ;;\n \n   *djgpp)\n@@ -125,9 +112,7 @@ case \"${host}\" in\n     GLIBCXX_CHECK_LINKER_FEATURES\n     GLIBCXX_CHECK_COMPLEX_MATH_SUPPORT\n     AC_DEFINE(HAVE_LC_MESSAGES)\n-    AC_DEFINE(HAVE_GETPAGESIZE)\n     AC_DEFINE(HAVE_SETENV)\n-    AC_DEFINE(HAVE_SIGSETJMP)\n     AC_DEFINE(HAVE_COPYSIGN)\n     AC_DEFINE(HAVE_COPYSIGNF)\n     AC_DEFINE(HAVE_FINITEF)\n@@ -139,7 +124,6 @@ case \"${host}\" in\n     AC_DEFINE(HAVE_ISNAN)\n     AC_DEFINE(HAVE_ISNANF)\n \n-    AC_DEFINE(HAVE_MMAP)\n     AC_DEFINE(HAVE_ACOSF)\n     AC_DEFINE(HAVE_ASINF)\n     AC_DEFINE(HAVE_ATAN2F)\n@@ -208,7 +192,6 @@ case \"${host}\" in\n     GLIBCXX_CHECK_STDLIB_SUPPORT\n \n     # For LFS.\n-    AC_DEFINE(HAVE_INT64_T)\n     GLIBCXX_CHECK_LFS\n \n     # For showmanyc_helper().\n@@ -220,24 +203,10 @@ case \"${host}\" in\n     AC_CHECK_HEADERS(sys/uio.h)\n     GLIBCXX_CHECK_WRITEV\n \n-    # For C99 support to TR1.\n-    GLIBCXX_CHECK_C99_TR1\n-\n     AC_DEFINE(_GLIBCXX_USE_RANDOM_TR1)\n \n     AC_LC_MESSAGES\n \n-    # Check for sigsetjmp\n-    AC_TRY_COMPILE(\n-      [#include <setjmp.h>],\n-      [sigjmp_buf env;\n-       while (! sigsetjmp (env, 1))\n-         siglongjmp (env, 1);\n-      ],\n-      [AC_DEFINE(HAVE_SIGSETJMP, 1, [Define if sigsetjmp is available.])])\n-\n-    AC_DEFINE(HAVE_MMAP) \n-\n     # For iconv support.\n     AM_ICONV\n     ;;\n@@ -314,15 +283,12 @@ case \"${host}\" in\n     case \"$target\" in\n       *-solaris2.7 | *-solaris2.8 | *-solaris2.9 | *-solaris2.10)\n          GLIBCXX_CHECK_LINKER_FEATURES\n-         AC_DEFINE(HAVE_GETPAGESIZE)\n-         AC_DEFINE(HAVE_SIGSETJMP)\n          AC_DEFINE(HAVE_MBSTATE_T)\n          AC_DEFINE(HAVE_POLL)\n          AC_DEFINE(HAVE_S_ISREG)\n          AC_DEFINE(HAVE_LC_MESSAGES)\n          AC_DEFINE(HAVE_FINITE)\n          AC_DEFINE(HAVE_FPCLASS)\n-         AC_DEFINE(HAVE_GETPAGESIZE)\n          # All of the dependencies for wide character support are here, so\n          # turn it on. \n          AC_DEFINE(_GLIBCXX_USE_WCHAR_T) \n@@ -365,7 +331,6 @@ case \"${host}\" in\n       AC_DEFINE(HAVE_STRTOLD)\n      ;;\n     esac\n-    AC_DEFINE(HAVE_MMAP) \n     AC_DEFINE(HAVE_COPYSIGN)\n     AC_DEFINE(HAVE_ISNAN)\n     AC_DEFINE(HAVE_ISNANF)\n@@ -399,7 +364,6 @@ case \"${host}\" in\n     fi\n     ;;\n   *-vxworks)\n-    AC_DEFINE(HAVE_MMAP)\n     AC_DEFINE(HAVE_ACOSF)\n     AC_DEFINE(HAVE_ASINF)\n     AC_DEFINE(HAVE_ATAN2F)"}]}