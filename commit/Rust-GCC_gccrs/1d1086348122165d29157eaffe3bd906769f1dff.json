{"sha": "1d1086348122165d29157eaffe3bd906769f1dff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQxMDg2MzQ4MTIyMTY1ZDI5MTU3ZWFmZmUzYmQ5MDY3NjlmMWRmZg==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2016-02-04T14:49:02Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2016-02-04T14:49:02Z"}, "message": "[ARM] Remove neon_reinterpret, use casts\n\n\t* config/arm/arm-protos.h (neon_reinterpret): Remove.\n\t* config/arm/arm.c (neon_reinterpret): Remove.\n\t* config/arm/arm_neon_builtins.def (vreinterpretv8qi, vreinterpretv4hi,\n\tvreinterpretv2si, vreinterpretv2sf, vreinterpretdi, vreinterpretv16qi,\n\tvreinterpretv8hi, vreinterpretv4si, vreinterpretv4sf, vreinterpretv2di,\n\tvreinterpretti): Remove.\n\t* config/arm/neon.md (neon_vreinterpretv8qi<mode>,\n\tneon_vreinterpretv4hi<mode>, neon_vreinterpretv2si<mode>,\n\tneon_vreinterpretv2sf<mode>, neon_vreinterpretdi<mode>,\n\tneon_vreinterpretti<mode>, neon_vreinterpretv16qi<mode>,\n\tneon_vreinterpretv8hi<mode>, neon_vreinterpretv4si<mode>,\n\tneon_vreinterpretv4sf<mode>, neon_vreinterpretv2di<mode>): Remove.\n\t* config/arm/arm_neon.h (vreinterpret_p8_p16, vreinterpret_p8_f32,\n\tvreinterpret_p8_p64, vreinterpret_p8_s64, vreinterpret_p8_u64,\n\tvreinterpret_p8_s8, vreinterpret_p8_s16, vreinterpret_p8_s32,\n\tvreinterpret_p8_u8, vreinterpret_p8_u16, vreinterpret_p8_u32,\n\tvreinterpret_p16_p8, vreinterpret_p16_f32, vreinterpret_p16_p64,\n\tvreinterpret_p16_s64, vreinterpret_p16_u64, vreinterpret_p16_s8,\n\tvreinterpret_p16_s16, vreinterpret_p16_s32, vreinterpret_p16_u8,\n\tvreinterpret_p16_u16, vreinterpret_p16_u32, vreinterpret_f32_p8,\n\tvreinterpret_f32_p16, vreinterpret_f32_p64, vreinterpret_f32_s64,\n\tvreinterpret_f32_u64, vreinterpret_f32_s8, vreinterpret_f32_s16,\n\tvreinterpret_f32_s32, vreinterpret_f32_u8, vreinterpret_f32_u16,\n\tvreinterpret_f32_u32, vreinterpret_p64_p8, vreinterpret_p64_p16,\n\tvreinterpret_p64_f32, vreinterpret_p64_s64, vreinterpret_p64_u64,\n\tvreinterpret_p64_s8, vreinterpret_p64_s16, vreinterpret_p64_s32,\n\tvreinterpret_p64_u8, vreinterpret_p64_u16, vreinterpret_p64_u32,\n\tvreinterpret_s64_p8, vreinterpret_s64_p16, vreinterpret_s64_f32,\n\tvreinterpret_s64_p64, vreinterpret_s64_u64, vreinterpret_s64_s8,\n\tvreinterpret_s64_s16, vreinterpret_s64_s32, vreinterpret_s64_u8,\n\tvreinterpret_s64_u16, vreinterpret_s64_u32, vreinterpret_u64_p8,\n\tvreinterpret_u64_p16, vreinterpret_u64_f32, vreinterpret_u64_p64,\n\tvreinterpret_u64_s64, vreinterpret_u64_s8, vreinterpret_u64_s16,\n\tvreinterpret_u64_s32, vreinterpret_u64_u8, vreinterpret_u64_u16,\n\tvreinterpret_u64_u32, vreinterpret_s8_p8, vreinterpret_s8_p16,\n\tvreinterpret_s8_f32, vreinterpret_s8_p64, vreinterpret_s8_s64,\n\tvreinterpret_s8_u64, vreinterpret_s8_s16, vreinterpret_s8_s32,\n\tvreinterpret_s8_u8, vreinterpret_s8_u16, vreinterpret_s8_u32,\n\tvreinterpret_s16_p8, vreinterpret_s16_p16, vreinterpret_s16_f32,\n\tvreinterpret_s16_p64, vreinterpret_s16_s64, vreinterpret_s16_u64,\n\tvreinterpret_s16_s8, vreinterpret_s16_s32, vreinterpret_s16_u8,\n\tvreinterpret_s16_u16, vreinterpret_s16_u32, vreinterpret_s32_p8,\n\tvreinterpret_s32_p16, vreinterpret_s32_f32, vreinterpret_s32_p64,\n\tvreinterpret_s32_s64, vreinterpret_s32_u64, vreinterpret_s32_s8,\n\tvreinterpret_s32_s16, vreinterpret_s32_u8, vreinterpret_s32_u16,\n\tvreinterpret_s32_u32, vreinterpret_u8_p8, vreinterpret_u8_p16,\n\tvreinterpret_u8_f32, vreinterpret_u8_p64, vreinterpret_u8_s64,\n\tvreinterpret_u8_u64, vreinterpret_u8_s8, vreinterpret_u8_s16,\n\tvreinterpret_u8_s32, vreinterpret_u8_u16, vreinterpret_u8_u32,\n\tvreinterpret_u16_p8, vreinterpret_u16_p16, vreinterpret_u16_f32,\n\tvreinterpret_u16_p64, vreinterpret_u16_s64, vreinterpret_u16_u64,\n\tvreinterpret_u16_s8, vreinterpret_u16_s16, vreinterpret_u16_s32,\n\tvreinterpret_u16_u8, vreinterpret_u16_u32, vreinterpret_u32_p8,\n\tvreinterpret_u32_p16, vreinterpret_u32_f32, vreinterpret_u32_p64,\n\tvreinterpret_u32_s64, vreinterpret_u32_u64, vreinterpret_u32_s8,\n\tvreinterpret_u32_s16, vreinterpret_u32_s32, vreinterpret_u32_u8,\n\tvreinterpret_u32_u16, vreinterpretq_p8_p16, vreinterpretq_p8_f32,\n\tvreinterpretq_p8_p64, vreinterpretq_p8_p128, vreinterpretq_p8_s64,\n\tvreinterpretq_p8_u64, vreinterpretq_p8_s8, vreinterpretq_p8_s16,\n\tvreinterpretq_p8_s32, vreinterpretq_p8_u8, vreinterpretq_p8_u16,\n\tvreinterpretq_p8_u32, vreinterpretq_p16_p8, vreinterpretq_p16_f32,\n\tvreinterpretq_p16_p64, vreinterpretq_p16_p128, vreinterpretq_p16_s64,\n\tvreinterpretq_p16_u64, vreinterpretq_p16_s8, vreinterpretq_p16_s16,\n\tvreinterpretq_p16_s32, vreinterpretq_p16_u8, vreinterpretq_p16_u16,\n\tvreinterpretq_p16_u32, vreinterpretq_f32_p8, vreinterpretq_f32_p16,\n\tvreinterpretq_f32_p64, vreinterpretq_f32_p128, vreinterpretq_f32_s64,\n\tvreinterpretq_f32_u64, vreinterpretq_f32_s8, vreinterpretq_f32_s16,\n\tvreinterpretq_f32_s32, vreinterpretq_f32_u8, vreinterpretq_f32_u16,\n\tvreinterpretq_f32_u32, vreinterpretq_p64_p8, vreinterpretq_p64_p16,\n\tvreinterpretq_p64_f32, vreinterpretq_p64_p128, vreinterpretq_p64_s64,\n\tvreinterpretq_p64_u64, vreinterpretq_p64_s8, vreinterpretq_p64_s16,\n\tvreinterpretq_p64_s32, vreinterpretq_p64_u8, vreinterpretq_p64_u16,\n\tvreinterpretq_p64_u32, vreinterpretq_p128_p8, vreinterpretq_p128_p16,\n\tvreinterpretq_p128_f32, vreinterpretq_p128_p64, vreinterpretq_p128_s64,\n\tvreinterpretq_p128_u64, vreinterpretq_p128_s8, vreinterpretq_p128_s16,\n\tvreinterpretq_p128_s32, vreinterpretq_p128_u8, vreinterpretq_p128_u16,\n\tvreinterpretq_p128_u32, vreinterpretq_s64_p8, vreinterpretq_s64_p16,\n\tvreinterpretq_s64_f32, vreinterpretq_s64_p64, vreinterpretq_s64_p128,\n\tvreinterpretq_s64_u64, vreinterpretq_s64_s8, vreinterpretq_s64_s16,\n\tvreinterpretq_s64_s32, vreinterpretq_s64_u8, vreinterpretq_s64_u16,\n\tvreinterpretq_s64_u32, vreinterpretq_u64_p8, vreinterpretq_u64_p16,\n\tvreinterpretq_u64_f32, vreinterpretq_u64_p64, vreinterpretq_u64_p128,\n\tvreinterpretq_u64_s64, vreinterpretq_u64_s8, vreinterpretq_u64_s16,\n\tvreinterpretq_u64_s32, vreinterpretq_u64_u8, vreinterpretq_u64_u16,\n\tvreinterpretq_u64_u32, vreinterpretq_s8_p8, vreinterpretq_s8_p16,\n\tvreinterpretq_s8_f32, vreinterpretq_s8_p64, vreinterpretq_s8_p128,\n\tvreinterpretq_s8_s64, vreinterpretq_s8_u64, vreinterpretq_s8_s16,\n\tvreinterpretq_s8_s32, vreinterpretq_s8_u8, vreinterpretq_s8_u16,\n\tvreinterpretq_s8_u32, vreinterpretq_s16_p8, vreinterpretq_s16_p16,\n\tvreinterpretq_s16_f32, vreinterpretq_s16_p64, vreinterpretq_s16_p128,\n\tvreinterpretq_s16_s64, vreinterpretq_s16_u64, vreinterpretq_s16_s8,\n\tvreinterpretq_s16_s32, vreinterpretq_s16_u8, vreinterpretq_s16_u16,\n\tvreinterpretq_s16_u32, vreinterpretq_s32_p8, vreinterpretq_s32_p16,\n\tvreinterpretq_s32_f16, vreinterpretq_s32_f32, vreinterpretq_s32_p64,\n\tvreinterpretq_s32_p128, vreinterpretq_s32_s64, vreinterpretq_s32_u64,\n\tvreinterpretq_s32_s8, vreinterpretq_s32_s16, vreinterpretq_s32_u8,\n\tvreinterpretq_s32_u16, vreinterpretq_s32_u32, vreinterpretq_u8_p8,\n\tvreinterpretq_u8_p16, vreinterpretq_u8_f32, vreinterpretq_u8_p64,\n\tvreinterpretq_u8_p128, vreinterpretq_u8_s64, vreinterpretq_u8_u64,\n\tvreinterpretq_u8_s8, vreinterpretq_u8_s16, vreinterpretq_u8_s32,\n\tvreinterpretq_u8_u16, vreinterpretq_u8_u32, vreinterpretq_u16_p8,\n\tvreinterpretq_u16_p16, vreinterpretq_u16_f32, vreinterpretq_u16_p64,\n\tvreinterpretq_u16_p128, vreinterpretq_u16_s64, vreinterpretq_u16_u64,\n\tvreinterpretq_u16_s8, vreinterpretq_u16_s16, vreinterpretq_u16_s32,\n\tvreinterpretq_u16_u8, vreinterpretq_u16_u32, vreinterpretq_u32_p8,\n\tvreinterpretq_u32_p16, vreinterpretq_u32_f32, vreinterpretq_u32_p64,\n\tvreinterpretq_u32_p128, vreinterpretq_u32_s64, vreinterpretq_u32_u64,\n\tvreinterpretq_u32_s8, vreinterpretq_u32_s16, vreinterpretq_u32_s32,\n\tvreinterpretq_u32_u8, vreinterpretq_u32_u16): Rewrite using casts.\n\nFrom-SVN: r233142", "tree": {"sha": "3a58b72d637f09c32ef86168d4fc3fbc07820661", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a58b72d637f09c32ef86168d4fc3fbc07820661"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d1086348122165d29157eaffe3bd906769f1dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d1086348122165d29157eaffe3bd906769f1dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d1086348122165d29157eaffe3bd906769f1dff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d1086348122165d29157eaffe3bd906769f1dff/comments", "author": null, "committer": null, "parents": [{"sha": "d44cb386b89d88d35516bc877361e1a2953c493c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d44cb386b89d88d35516bc877361e1a2953c493c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d44cb386b89d88d35516bc877361e1a2953c493c"}], "stats": {"total": 809, "additions": 401, "deletions": 408}, "files": [{"sha": "ccad37874bc6c2aef7663bd9228ddc4e6e892582", "filename": "gcc/ChangeLog", "status": "modified", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1086348122165d29157eaffe3bd906769f1dff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1086348122165d29157eaffe3bd906769f1dff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d1086348122165d29157eaffe3bd906769f1dff", "patch": "@@ -1,3 +1,115 @@\n+2016-02-04  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/arm/arm-protos.h (neon_reinterpret): Remove.\n+\t* config/arm/arm.c (neon_reinterpret): Remove.\n+\t* config/arm/arm_neon_builtins.def (vreinterpretv8qi, vreinterpretv4hi,\n+\tvreinterpretv2si, vreinterpretv2sf, vreinterpretdi, vreinterpretv16qi,\n+\tvreinterpretv8hi, vreinterpretv4si, vreinterpretv4sf, vreinterpretv2di,\n+\tvreinterpretti): Remove.\n+\t* config/arm/neon.md (neon_vreinterpretv8qi<mode>,\n+\tneon_vreinterpretv4hi<mode>, neon_vreinterpretv2si<mode>,\n+\tneon_vreinterpretv2sf<mode>, neon_vreinterpretdi<mode>,\n+\tneon_vreinterpretti<mode>, neon_vreinterpretv16qi<mode>,\n+\tneon_vreinterpretv8hi<mode>, neon_vreinterpretv4si<mode>,\n+\tneon_vreinterpretv4sf<mode>, neon_vreinterpretv2di<mode>): Remove.\n+\t* config/arm/arm_neon.h (vreinterpret_p8_p16, vreinterpret_p8_f32,\n+\tvreinterpret_p8_p64, vreinterpret_p8_s64, vreinterpret_p8_u64,\n+\tvreinterpret_p8_s8, vreinterpret_p8_s16, vreinterpret_p8_s32,\n+\tvreinterpret_p8_u8, vreinterpret_p8_u16, vreinterpret_p8_u32,\n+\tvreinterpret_p16_p8, vreinterpret_p16_f32, vreinterpret_p16_p64,\n+\tvreinterpret_p16_s64, vreinterpret_p16_u64, vreinterpret_p16_s8,\n+\tvreinterpret_p16_s16, vreinterpret_p16_s32, vreinterpret_p16_u8,\n+\tvreinterpret_p16_u16, vreinterpret_p16_u32, vreinterpret_f32_p8,\n+\tvreinterpret_f32_p16, vreinterpret_f32_p64, vreinterpret_f32_s64,\n+\tvreinterpret_f32_u64, vreinterpret_f32_s8, vreinterpret_f32_s16,\n+\tvreinterpret_f32_s32, vreinterpret_f32_u8, vreinterpret_f32_u16,\n+\tvreinterpret_f32_u32, vreinterpret_p64_p8, vreinterpret_p64_p16,\n+\tvreinterpret_p64_f32, vreinterpret_p64_s64, vreinterpret_p64_u64,\n+\tvreinterpret_p64_s8, vreinterpret_p64_s16, vreinterpret_p64_s32,\n+\tvreinterpret_p64_u8, vreinterpret_p64_u16, vreinterpret_p64_u32,\n+\tvreinterpret_s64_p8, vreinterpret_s64_p16, vreinterpret_s64_f32,\n+\tvreinterpret_s64_p64, vreinterpret_s64_u64, vreinterpret_s64_s8,\n+\tvreinterpret_s64_s16, vreinterpret_s64_s32, vreinterpret_s64_u8,\n+\tvreinterpret_s64_u16, vreinterpret_s64_u32, vreinterpret_u64_p8,\n+\tvreinterpret_u64_p16, vreinterpret_u64_f32, vreinterpret_u64_p64,\n+\tvreinterpret_u64_s64, vreinterpret_u64_s8, vreinterpret_u64_s16,\n+\tvreinterpret_u64_s32, vreinterpret_u64_u8, vreinterpret_u64_u16,\n+\tvreinterpret_u64_u32, vreinterpret_s8_p8, vreinterpret_s8_p16,\n+\tvreinterpret_s8_f32, vreinterpret_s8_p64, vreinterpret_s8_s64,\n+\tvreinterpret_s8_u64, vreinterpret_s8_s16, vreinterpret_s8_s32,\n+\tvreinterpret_s8_u8, vreinterpret_s8_u16, vreinterpret_s8_u32,\n+\tvreinterpret_s16_p8, vreinterpret_s16_p16, vreinterpret_s16_f32,\n+\tvreinterpret_s16_p64, vreinterpret_s16_s64, vreinterpret_s16_u64,\n+\tvreinterpret_s16_s8, vreinterpret_s16_s32, vreinterpret_s16_u8,\n+\tvreinterpret_s16_u16, vreinterpret_s16_u32, vreinterpret_s32_p8,\n+\tvreinterpret_s32_p16, vreinterpret_s32_f32, vreinterpret_s32_p64,\n+\tvreinterpret_s32_s64, vreinterpret_s32_u64, vreinterpret_s32_s8,\n+\tvreinterpret_s32_s16, vreinterpret_s32_u8, vreinterpret_s32_u16,\n+\tvreinterpret_s32_u32, vreinterpret_u8_p8, vreinterpret_u8_p16,\n+\tvreinterpret_u8_f32, vreinterpret_u8_p64, vreinterpret_u8_s64,\n+\tvreinterpret_u8_u64, vreinterpret_u8_s8, vreinterpret_u8_s16,\n+\tvreinterpret_u8_s32, vreinterpret_u8_u16, vreinterpret_u8_u32,\n+\tvreinterpret_u16_p8, vreinterpret_u16_p16, vreinterpret_u16_f32,\n+\tvreinterpret_u16_p64, vreinterpret_u16_s64, vreinterpret_u16_u64,\n+\tvreinterpret_u16_s8, vreinterpret_u16_s16, vreinterpret_u16_s32,\n+\tvreinterpret_u16_u8, vreinterpret_u16_u32, vreinterpret_u32_p8,\n+\tvreinterpret_u32_p16, vreinterpret_u32_f32, vreinterpret_u32_p64,\n+\tvreinterpret_u32_s64, vreinterpret_u32_u64, vreinterpret_u32_s8,\n+\tvreinterpret_u32_s16, vreinterpret_u32_s32, vreinterpret_u32_u8,\n+\tvreinterpret_u32_u16, vreinterpretq_p8_p16, vreinterpretq_p8_f32,\n+\tvreinterpretq_p8_p64, vreinterpretq_p8_p128, vreinterpretq_p8_s64,\n+\tvreinterpretq_p8_u64, vreinterpretq_p8_s8, vreinterpretq_p8_s16,\n+\tvreinterpretq_p8_s32, vreinterpretq_p8_u8, vreinterpretq_p8_u16,\n+\tvreinterpretq_p8_u32, vreinterpretq_p16_p8, vreinterpretq_p16_f32,\n+\tvreinterpretq_p16_p64, vreinterpretq_p16_p128, vreinterpretq_p16_s64,\n+\tvreinterpretq_p16_u64, vreinterpretq_p16_s8, vreinterpretq_p16_s16,\n+\tvreinterpretq_p16_s32, vreinterpretq_p16_u8, vreinterpretq_p16_u16,\n+\tvreinterpretq_p16_u32, vreinterpretq_f32_p8, vreinterpretq_f32_p16,\n+\tvreinterpretq_f32_p64, vreinterpretq_f32_p128, vreinterpretq_f32_s64,\n+\tvreinterpretq_f32_u64, vreinterpretq_f32_s8, vreinterpretq_f32_s16,\n+\tvreinterpretq_f32_s32, vreinterpretq_f32_u8, vreinterpretq_f32_u16,\n+\tvreinterpretq_f32_u32, vreinterpretq_p64_p8, vreinterpretq_p64_p16,\n+\tvreinterpretq_p64_f32, vreinterpretq_p64_p128, vreinterpretq_p64_s64,\n+\tvreinterpretq_p64_u64, vreinterpretq_p64_s8, vreinterpretq_p64_s16,\n+\tvreinterpretq_p64_s32, vreinterpretq_p64_u8, vreinterpretq_p64_u16,\n+\tvreinterpretq_p64_u32, vreinterpretq_p128_p8, vreinterpretq_p128_p16,\n+\tvreinterpretq_p128_f32, vreinterpretq_p128_p64, vreinterpretq_p128_s64,\n+\tvreinterpretq_p128_u64, vreinterpretq_p128_s8, vreinterpretq_p128_s16,\n+\tvreinterpretq_p128_s32, vreinterpretq_p128_u8, vreinterpretq_p128_u16,\n+\tvreinterpretq_p128_u32, vreinterpretq_s64_p8, vreinterpretq_s64_p16,\n+\tvreinterpretq_s64_f32, vreinterpretq_s64_p64, vreinterpretq_s64_p128,\n+\tvreinterpretq_s64_u64, vreinterpretq_s64_s8, vreinterpretq_s64_s16,\n+\tvreinterpretq_s64_s32, vreinterpretq_s64_u8, vreinterpretq_s64_u16,\n+\tvreinterpretq_s64_u32, vreinterpretq_u64_p8, vreinterpretq_u64_p16,\n+\tvreinterpretq_u64_f32, vreinterpretq_u64_p64, vreinterpretq_u64_p128,\n+\tvreinterpretq_u64_s64, vreinterpretq_u64_s8, vreinterpretq_u64_s16,\n+\tvreinterpretq_u64_s32, vreinterpretq_u64_u8, vreinterpretq_u64_u16,\n+\tvreinterpretq_u64_u32, vreinterpretq_s8_p8, vreinterpretq_s8_p16,\n+\tvreinterpretq_s8_f32, vreinterpretq_s8_p64, vreinterpretq_s8_p128,\n+\tvreinterpretq_s8_s64, vreinterpretq_s8_u64, vreinterpretq_s8_s16,\n+\tvreinterpretq_s8_s32, vreinterpretq_s8_u8, vreinterpretq_s8_u16,\n+\tvreinterpretq_s8_u32, vreinterpretq_s16_p8, vreinterpretq_s16_p16,\n+\tvreinterpretq_s16_f32, vreinterpretq_s16_p64, vreinterpretq_s16_p128,\n+\tvreinterpretq_s16_s64, vreinterpretq_s16_u64, vreinterpretq_s16_s8,\n+\tvreinterpretq_s16_s32, vreinterpretq_s16_u8, vreinterpretq_s16_u16,\n+\tvreinterpretq_s16_u32, vreinterpretq_s32_p8, vreinterpretq_s32_p16,\n+\tvreinterpretq_s32_f16, vreinterpretq_s32_f32, vreinterpretq_s32_p64,\n+\tvreinterpretq_s32_p128, vreinterpretq_s32_s64, vreinterpretq_s32_u64,\n+\tvreinterpretq_s32_s8, vreinterpretq_s32_s16, vreinterpretq_s32_u8,\n+\tvreinterpretq_s32_u16, vreinterpretq_s32_u32, vreinterpretq_u8_p8,\n+\tvreinterpretq_u8_p16, vreinterpretq_u8_f32, vreinterpretq_u8_p64,\n+\tvreinterpretq_u8_p128, vreinterpretq_u8_s64, vreinterpretq_u8_u64,\n+\tvreinterpretq_u8_s8, vreinterpretq_u8_s16, vreinterpretq_u8_s32,\n+\tvreinterpretq_u8_u16, vreinterpretq_u8_u32, vreinterpretq_u16_p8,\n+\tvreinterpretq_u16_p16, vreinterpretq_u16_f32, vreinterpretq_u16_p64,\n+\tvreinterpretq_u16_p128, vreinterpretq_u16_s64, vreinterpretq_u16_u64,\n+\tvreinterpretq_u16_s8, vreinterpretq_u16_s16, vreinterpretq_u16_s32,\n+\tvreinterpretq_u16_u8, vreinterpretq_u16_u32, vreinterpretq_u32_p8,\n+\tvreinterpretq_u32_p16, vreinterpretq_u32_f32, vreinterpretq_u32_p64,\n+\tvreinterpretq_u32_p128, vreinterpretq_u32_s64, vreinterpretq_u32_u64,\n+\tvreinterpretq_u32_s8, vreinterpretq_u32_s16, vreinterpretq_u32_s32,\n+\tvreinterpretq_u32_u8, vreinterpretq_u32_u16): Rewrite using casts.\n+\n 2016-02-04  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitizer/69276"}, {"sha": "e051d3b03ecb4325c50ff2909f7229da9339b6b7", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1086348122165d29157eaffe3bd906769f1dff/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1086348122165d29157eaffe3bd906769f1dff/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=1d1086348122165d29157eaffe3bd906769f1dff", "patch": "@@ -89,7 +89,6 @@ extern void neon_expand_vector_init (rtx, rtx);\n extern void neon_lane_bounds (rtx, HOST_WIDE_INT, HOST_WIDE_INT, const_tree);\n extern void neon_const_bounds (rtx, HOST_WIDE_INT, HOST_WIDE_INT);\n extern HOST_WIDE_INT neon_element_bits (machine_mode);\n-extern void neon_reinterpret (rtx, rtx);\n extern void neon_emit_pair_result_insn (machine_mode,\n \t\t\t\t\trtx (*) (rtx, rtx, rtx, rtx),\n \t\t\t\t\trtx, rtx, rtx);"}, {"sha": "2b82e13513279cea8cae6c3ccc3cd29b08ae72e0", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1086348122165d29157eaffe3bd906769f1dff/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1086348122165d29157eaffe3bd906769f1dff/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=1d1086348122165d29157eaffe3bd906769f1dff", "patch": "@@ -23605,13 +23605,6 @@ arm_scalar_mode_supported_p (machine_mode mode)\n     return default_scalar_mode_supported_p (mode);\n }\n \n-/* Emit code to reinterpret one Neon type as another, without altering bits.  */\n-void\n-neon_reinterpret (rtx dest, rtx src)\n-{\n-  emit_move_insn (dest, gen_lowpart (GET_MODE (dest), src));\n-}\n-\n /* Set up OPERANDS for a register copy from SRC to DEST, taking care\n    not to early-clobber SRC registers in the process.\n "}, {"sha": "41e23476ad00859f16e46f2333ad15b31e211a20", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 289, "deletions": 289, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1086348122165d29157eaffe3bd906769f1dff/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1086348122165d29157eaffe3bd906769f1dff/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=1d1086348122165d29157eaffe3bd906769f1dff", "patch": "@@ -12446,7 +12446,7 @@ vornq_u64 (uint64x2_t __a, uint64x2_t __b)\n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vreinterpret_p8_p16 (poly16x4_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vreinterpretv8qiv4hi ((int16x4_t) __a);\n+  return (poly8x8_t) __a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -12460,70 +12460,70 @@ vreinterpret_p8_f16 (float16x4_t __a)\n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vreinterpret_p8_f32 (float32x2_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vreinterpretv8qiv2sf (__a);\n+  return (poly8x8_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vreinterpret_p8_p64 (poly64x1_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vreinterpretv8qidi (__a);\n+  return (poly8x8_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vreinterpret_p8_s64 (int64x1_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vreinterpretv8qidi (__a);\n+  return (poly8x8_t)__a;\n }\n \n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vreinterpret_p8_u64 (uint64x1_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vreinterpretv8qidi ((int64x1_t) __a);\n+  return (poly8x8_t)__a;\n }\n \n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vreinterpret_p8_s8 (int8x8_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vreinterpretv8qiv8qi (__a);\n+  return (poly8x8_t)__a;\n }\n \n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vreinterpret_p8_s16 (int16x4_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vreinterpretv8qiv4hi (__a);\n+  return (poly8x8_t)__a;\n }\n \n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vreinterpret_p8_s32 (int32x2_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vreinterpretv8qiv2si (__a);\n+  return (poly8x8_t)__a;\n }\n \n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vreinterpret_p8_u8 (uint8x8_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vreinterpretv8qiv8qi ((int8x8_t) __a);\n+  return (poly8x8_t)__a;\n }\n \n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vreinterpret_p8_u16 (uint16x4_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vreinterpretv8qiv4hi ((int16x4_t) __a);\n+  return (poly8x8_t)__a;\n }\n \n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vreinterpret_p8_u32 (uint32x2_t __a)\n {\n-  return (poly8x8_t)__builtin_neon_vreinterpretv8qiv2si ((int32x2_t) __a);\n+  return (poly8x8_t)__a;\n }\n \n __extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n vreinterpret_p16_p8 (poly8x8_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vreinterpretv4hiv8qi ((int8x8_t) __a);\n+  return (poly16x4_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -12537,64 +12537,64 @@ vreinterpret_p16_f16 (float16x4_t __a)\n __extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n vreinterpret_p16_f32 (float32x2_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vreinterpretv4hiv2sf (__a);\n+  return (poly16x4_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n vreinterpret_p16_p64 (poly64x1_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vreinterpretv4hidi (__a);\n+  return (poly16x4_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n vreinterpret_p16_s64 (int64x1_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vreinterpretv4hidi (__a);\n+  return (poly16x4_t)__a;\n }\n \n __extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n vreinterpret_p16_u64 (uint64x1_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vreinterpretv4hidi ((int64x1_t) __a);\n+  return (poly16x4_t)__a;\n }\n \n __extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n vreinterpret_p16_s8 (int8x8_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vreinterpretv4hiv8qi (__a);\n+  return (poly16x4_t)__a;\n }\n \n __extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n vreinterpret_p16_s16 (int16x4_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vreinterpretv4hiv4hi (__a);\n+  return (poly16x4_t)__a;\n }\n \n __extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n vreinterpret_p16_s32 (int32x2_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vreinterpretv4hiv2si (__a);\n+  return (poly16x4_t)__a;\n }\n \n __extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n vreinterpret_p16_u8 (uint8x8_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vreinterpretv4hiv8qi ((int8x8_t) __a);\n+  return (poly16x4_t)__a;\n }\n \n __extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n vreinterpret_p16_u16 (uint16x4_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vreinterpretv4hiv4hi ((int16x4_t) __a);\n+  return (poly16x4_t)__a;\n }\n \n __extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n vreinterpret_p16_u32 (uint32x2_t __a)\n {\n-  return (poly16x4_t)__builtin_neon_vreinterpretv4hiv2si ((int32x2_t) __a);\n+  return (poly16x4_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -12699,13 +12699,13 @@ vreinterpret_f16_u32 (uint32x2_t __a)\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vreinterpret_f32_p8 (poly8x8_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vreinterpretv2sfv8qi ((int8x8_t) __a);\n+  return (float32x2_t)__a;\n }\n \n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vreinterpret_f32_p16 (poly16x4_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vreinterpretv2sfv4hi ((int16x4_t) __a);\n+  return (float32x2_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -12721,70 +12721,70 @@ vreinterpret_f32_f16 (float16x4_t __a)\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vreinterpret_f32_p64 (poly64x1_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vreinterpretv2sfdi (__a);\n+  return (float32x2_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vreinterpret_f32_s64 (int64x1_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vreinterpretv2sfdi (__a);\n+  return (float32x2_t)__a;\n }\n \n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vreinterpret_f32_u64 (uint64x1_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vreinterpretv2sfdi ((int64x1_t) __a);\n+  return (float32x2_t)__a;\n }\n \n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vreinterpret_f32_s8 (int8x8_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vreinterpretv2sfv8qi (__a);\n+  return (float32x2_t)__a;\n }\n \n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vreinterpret_f32_s16 (int16x4_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vreinterpretv2sfv4hi (__a);\n+  return (float32x2_t)__a;\n }\n \n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vreinterpret_f32_s32 (int32x2_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vreinterpretv2sfv2si (__a);\n+  return (float32x2_t)__a;\n }\n \n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vreinterpret_f32_u8 (uint8x8_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vreinterpretv2sfv8qi ((int8x8_t) __a);\n+  return (float32x2_t)__a;\n }\n \n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vreinterpret_f32_u16 (uint16x4_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vreinterpretv2sfv4hi ((int16x4_t) __a);\n+  return (float32x2_t)__a;\n }\n \n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vreinterpret_f32_u32 (uint32x2_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vreinterpretv2sfv2si ((int32x2_t) __a);\n+  return (float32x2_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline poly64x1_t __attribute__ ((__always_inline__))\n vreinterpret_p64_p8 (poly8x8_t __a)\n {\n-  return (poly64x1_t)__builtin_neon_vreinterpretdiv8qi ((int8x8_t) __a);\n+  return (poly64x1_t)__a;\n }\n \n __extension__ static __inline poly64x1_t __attribute__ ((__always_inline__))\n vreinterpret_p64_p16 (poly16x4_t __a)\n {\n-  return (poly64x1_t)__builtin_neon_vreinterpretdiv4hi ((int16x4_t) __a);\n+  return (poly64x1_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -12798,68 +12798,68 @@ vreinterpret_p64_f16 (float16x4_t __a)\n __extension__ static __inline poly64x1_t __attribute__ ((__always_inline__))\n vreinterpret_p64_f32 (float32x2_t __a)\n {\n-  return (poly64x1_t)__builtin_neon_vreinterpretdiv2sf (__a);\n+  return (poly64x1_t)__a;\n }\n \n __extension__ static __inline poly64x1_t __attribute__ ((__always_inline__))\n vreinterpret_p64_s64 (int64x1_t __a)\n {\n-  return (poly64x1_t)__builtin_neon_vreinterpretdidi (__a);\n+  return (poly64x1_t)__a;\n }\n \n __extension__ static __inline poly64x1_t __attribute__ ((__always_inline__))\n vreinterpret_p64_u64 (uint64x1_t __a)\n {\n-  return (poly64x1_t)__builtin_neon_vreinterpretdidi ((int64x1_t) __a);\n+  return (poly64x1_t)__a;\n }\n \n __extension__ static __inline poly64x1_t __attribute__ ((__always_inline__))\n vreinterpret_p64_s8 (int8x8_t __a)\n {\n-  return (poly64x1_t)__builtin_neon_vreinterpretdiv8qi (__a);\n+  return (poly64x1_t)__a;\n }\n \n __extension__ static __inline poly64x1_t __attribute__ ((__always_inline__))\n vreinterpret_p64_s16 (int16x4_t __a)\n {\n-  return (poly64x1_t)__builtin_neon_vreinterpretdiv4hi (__a);\n+  return (poly64x1_t)__a;\n }\n \n __extension__ static __inline poly64x1_t __attribute__ ((__always_inline__))\n vreinterpret_p64_s32 (int32x2_t __a)\n {\n-  return (poly64x1_t)__builtin_neon_vreinterpretdiv2si (__a);\n+  return (poly64x1_t)__a;\n }\n \n __extension__ static __inline poly64x1_t __attribute__ ((__always_inline__))\n vreinterpret_p64_u8 (uint8x8_t __a)\n {\n-  return (poly64x1_t)__builtin_neon_vreinterpretdiv8qi ((int8x8_t) __a);\n+  return (poly64x1_t)__a;\n }\n \n __extension__ static __inline poly64x1_t __attribute__ ((__always_inline__))\n vreinterpret_p64_u16 (uint16x4_t __a)\n {\n-  return (poly64x1_t)__builtin_neon_vreinterpretdiv4hi ((int16x4_t) __a);\n+  return (poly64x1_t)__a;\n }\n \n __extension__ static __inline poly64x1_t __attribute__ ((__always_inline__))\n vreinterpret_p64_u32 (uint32x2_t __a)\n {\n-  return (poly64x1_t)__builtin_neon_vreinterpretdiv2si ((int32x2_t) __a);\n+  return (poly64x1_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vreinterpret_s64_p8 (poly8x8_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vreinterpretdiv8qi ((int8x8_t) __a);\n+  return (int64x1_t)__a;\n }\n \n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vreinterpret_s64_p16 (poly16x4_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vreinterpretdiv4hi ((int16x4_t) __a);\n+  return (int64x1_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -12873,70 +12873,70 @@ vreinterpret_s64_f16 (float16x4_t __a)\n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vreinterpret_s64_f32 (float32x2_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vreinterpretdiv2sf (__a);\n+  return (int64x1_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vreinterpret_s64_p64 (poly64x1_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vreinterpretdidi (__a);\n+  return (int64x1_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vreinterpret_s64_u64 (uint64x1_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vreinterpretdidi ((int64x1_t) __a);\n+  return (int64x1_t)__a;\n }\n \n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vreinterpret_s64_s8 (int8x8_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vreinterpretdiv8qi (__a);\n+  return (int64x1_t)__a;\n }\n \n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vreinterpret_s64_s16 (int16x4_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vreinterpretdiv4hi (__a);\n+  return (int64x1_t)__a;\n }\n \n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vreinterpret_s64_s32 (int32x2_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vreinterpretdiv2si (__a);\n+  return (int64x1_t)__a;\n }\n \n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vreinterpret_s64_u8 (uint8x8_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vreinterpretdiv8qi ((int8x8_t) __a);\n+  return (int64x1_t)__a;\n }\n \n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vreinterpret_s64_u16 (uint16x4_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vreinterpretdiv4hi ((int16x4_t) __a);\n+  return (int64x1_t)__a;\n }\n \n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vreinterpret_s64_u32 (uint32x2_t __a)\n {\n-  return (int64x1_t)__builtin_neon_vreinterpretdiv2si ((int32x2_t) __a);\n+  return (int64x1_t)__a;\n }\n \n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vreinterpret_u64_p8 (poly8x8_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vreinterpretdiv8qi ((int8x8_t) __a);\n+  return (uint64x1_t)__a;\n }\n \n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vreinterpret_u64_p16 (poly16x4_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vreinterpretdiv4hi ((int16x4_t) __a);\n+  return (uint64x1_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -12950,70 +12950,70 @@ vreinterpret_u64_f16 (float16x4_t __a)\n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vreinterpret_u64_f32 (float32x2_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vreinterpretdiv2sf (__a);\n+  return (uint64x1_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vreinterpret_u64_p64 (poly64x1_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vreinterpretdidi (__a);\n+  return (uint64x1_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vreinterpret_u64_s64 (int64x1_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vreinterpretdidi (__a);\n+  return (uint64x1_t)__a;\n }\n \n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vreinterpret_u64_s8 (int8x8_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vreinterpretdiv8qi (__a);\n+  return (uint64x1_t)__a;\n }\n \n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vreinterpret_u64_s16 (int16x4_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vreinterpretdiv4hi (__a);\n+  return (uint64x1_t)__a;\n }\n \n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vreinterpret_u64_s32 (int32x2_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vreinterpretdiv2si (__a);\n+  return (uint64x1_t)__a;\n }\n \n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vreinterpret_u64_u8 (uint8x8_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vreinterpretdiv8qi ((int8x8_t) __a);\n+  return (uint64x1_t)__a;\n }\n \n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vreinterpret_u64_u16 (uint16x4_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vreinterpretdiv4hi ((int16x4_t) __a);\n+  return (uint64x1_t)__a;\n }\n \n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vreinterpret_u64_u32 (uint32x2_t __a)\n {\n-  return (uint64x1_t)__builtin_neon_vreinterpretdiv2si ((int32x2_t) __a);\n+  return (uint64x1_t)__a;\n }\n \n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vreinterpret_s8_p8 (poly8x8_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vreinterpretv8qiv8qi ((int8x8_t) __a);\n+  return (int8x8_t)__a;\n }\n \n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vreinterpret_s8_p16 (poly16x4_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vreinterpretv8qiv4hi ((int16x4_t) __a);\n+  return (int8x8_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -13027,70 +13027,70 @@ vreinterpret_s8_f16 (float16x4_t __a)\n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vreinterpret_s8_f32 (float32x2_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vreinterpretv8qiv2sf (__a);\n+  return (int8x8_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vreinterpret_s8_p64 (poly64x1_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vreinterpretv8qidi (__a);\n+  return (int8x8_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vreinterpret_s8_s64 (int64x1_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vreinterpretv8qidi (__a);\n+  return (int8x8_t)__a;\n }\n \n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vreinterpret_s8_u64 (uint64x1_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vreinterpretv8qidi ((int64x1_t) __a);\n+  return (int8x8_t)__a;\n }\n \n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vreinterpret_s8_s16 (int16x4_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vreinterpretv8qiv4hi (__a);\n+  return (int8x8_t)__a;\n }\n \n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vreinterpret_s8_s32 (int32x2_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vreinterpretv8qiv2si (__a);\n+  return (int8x8_t)__a;\n }\n \n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vreinterpret_s8_u8 (uint8x8_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vreinterpretv8qiv8qi ((int8x8_t) __a);\n+  return (int8x8_t)__a;\n }\n \n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vreinterpret_s8_u16 (uint16x4_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vreinterpretv8qiv4hi ((int16x4_t) __a);\n+  return (int8x8_t)__a;\n }\n \n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vreinterpret_s8_u32 (uint32x2_t __a)\n {\n-  return (int8x8_t)__builtin_neon_vreinterpretv8qiv2si ((int32x2_t) __a);\n+  return (int8x8_t)__a;\n }\n \n __extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n vreinterpret_s16_p8 (poly8x8_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vreinterpretv4hiv8qi ((int8x8_t) __a);\n+  return (int16x4_t)__a;\n }\n \n __extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n vreinterpret_s16_p16 (poly16x4_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vreinterpretv4hiv4hi ((int16x4_t) __a);\n+  return (int16x4_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -13104,70 +13104,70 @@ vreinterpret_s16_f16 (float16x4_t __a)\n __extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n vreinterpret_s16_f32 (float32x2_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vreinterpretv4hiv2sf (__a);\n+  return (int16x4_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n vreinterpret_s16_p64 (poly64x1_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vreinterpretv4hidi (__a);\n+  return (int16x4_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n vreinterpret_s16_s64 (int64x1_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vreinterpretv4hidi (__a);\n+  return (int16x4_t)__a;\n }\n \n __extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n vreinterpret_s16_u64 (uint64x1_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vreinterpretv4hidi ((int64x1_t) __a);\n+  return (int16x4_t)__a;\n }\n \n __extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n vreinterpret_s16_s8 (int8x8_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vreinterpretv4hiv8qi (__a);\n+  return (int16x4_t)__a;\n }\n \n __extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n vreinterpret_s16_s32 (int32x2_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vreinterpretv4hiv2si (__a);\n+  return (int16x4_t)__a;\n }\n \n __extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n vreinterpret_s16_u8 (uint8x8_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vreinterpretv4hiv8qi ((int8x8_t) __a);\n+  return (int16x4_t)__a;\n }\n \n __extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n vreinterpret_s16_u16 (uint16x4_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vreinterpretv4hiv4hi ((int16x4_t) __a);\n+  return (int16x4_t)__a;\n }\n \n __extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n vreinterpret_s16_u32 (uint32x2_t __a)\n {\n-  return (int16x4_t)__builtin_neon_vreinterpretv4hiv2si ((int32x2_t) __a);\n+  return (int16x4_t)__a;\n }\n \n __extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n vreinterpret_s32_p8 (poly8x8_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vreinterpretv2siv8qi ((int8x8_t) __a);\n+  return (int32x2_t)__a;\n }\n \n __extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n vreinterpret_s32_p16 (poly16x4_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vreinterpretv2siv4hi ((int16x4_t) __a);\n+  return (int32x2_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -13181,70 +13181,70 @@ vreinterpret_s32_f16 (float16x4_t __a)\n __extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n vreinterpret_s32_f32 (float32x2_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vreinterpretv2siv2sf (__a);\n+  return (int32x2_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n vreinterpret_s32_p64 (poly64x1_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vreinterpretv2sidi (__a);\n+  return (int32x2_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n vreinterpret_s32_s64 (int64x1_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vreinterpretv2sidi (__a);\n+  return (int32x2_t)__a;\n }\n \n __extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n vreinterpret_s32_u64 (uint64x1_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vreinterpretv2sidi ((int64x1_t) __a);\n+  return (int32x2_t)__a;\n }\n \n __extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n vreinterpret_s32_s8 (int8x8_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vreinterpretv2siv8qi (__a);\n+  return (int32x2_t)__a;\n }\n \n __extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n vreinterpret_s32_s16 (int16x4_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vreinterpretv2siv4hi (__a);\n+  return (int32x2_t)__a;\n }\n \n __extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n vreinterpret_s32_u8 (uint8x8_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vreinterpretv2siv8qi ((int8x8_t) __a);\n+  return (int32x2_t)__a;\n }\n \n __extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n vreinterpret_s32_u16 (uint16x4_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vreinterpretv2siv4hi ((int16x4_t) __a);\n+  return (int32x2_t)__a;\n }\n \n __extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n vreinterpret_s32_u32 (uint32x2_t __a)\n {\n-  return (int32x2_t)__builtin_neon_vreinterpretv2siv2si ((int32x2_t) __a);\n+  return (int32x2_t)__a;\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vreinterpret_u8_p8 (poly8x8_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vreinterpretv8qiv8qi ((int8x8_t) __a);\n+  return (uint8x8_t)__a;\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vreinterpret_u8_p16 (poly16x4_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vreinterpretv8qiv4hi ((int16x4_t) __a);\n+  return (uint8x8_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -13258,70 +13258,70 @@ vreinterpret_u8_f16 (float16x4_t __a)\n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vreinterpret_u8_f32 (float32x2_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vreinterpretv8qiv2sf (__a);\n+  return (uint8x8_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vreinterpret_u8_p64 (poly64x1_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vreinterpretv8qidi (__a);\n+  return (uint8x8_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vreinterpret_u8_s64 (int64x1_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vreinterpretv8qidi (__a);\n+  return (uint8x8_t)__a;\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vreinterpret_u8_u64 (uint64x1_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vreinterpretv8qidi ((int64x1_t) __a);\n+  return (uint8x8_t)__a;\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vreinterpret_u8_s8 (int8x8_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vreinterpretv8qiv8qi (__a);\n+  return (uint8x8_t)__a;\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vreinterpret_u8_s16 (int16x4_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vreinterpretv8qiv4hi (__a);\n+  return (uint8x8_t)__a;\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vreinterpret_u8_s32 (int32x2_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vreinterpretv8qiv2si (__a);\n+  return (uint8x8_t)__a;\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vreinterpret_u8_u16 (uint16x4_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vreinterpretv8qiv4hi ((int16x4_t) __a);\n+  return (uint8x8_t)__a;\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vreinterpret_u8_u32 (uint32x2_t __a)\n {\n-  return (uint8x8_t)__builtin_neon_vreinterpretv8qiv2si ((int32x2_t) __a);\n+  return (uint8x8_t)__a;\n }\n \n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n vreinterpret_u16_p8 (poly8x8_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vreinterpretv4hiv8qi ((int8x8_t) __a);\n+  return (uint16x4_t)__a;\n }\n \n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n vreinterpret_u16_p16 (poly16x4_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vreinterpretv4hiv4hi ((int16x4_t) __a);\n+  return (uint16x4_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -13335,70 +13335,70 @@ vreinterpret_u16_f16 (float16x4_t __a)\n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n vreinterpret_u16_f32 (float32x2_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vreinterpretv4hiv2sf (__a);\n+  return (uint16x4_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n vreinterpret_u16_p64 (poly64x1_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vreinterpretv4hidi (__a);\n+  return (uint16x4_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n vreinterpret_u16_s64 (int64x1_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vreinterpretv4hidi (__a);\n+  return (uint16x4_t)__a;\n }\n \n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n vreinterpret_u16_u64 (uint64x1_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vreinterpretv4hidi ((int64x1_t) __a);\n+  return (uint16x4_t)__a;\n }\n \n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n vreinterpret_u16_s8 (int8x8_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vreinterpretv4hiv8qi (__a);\n+  return (uint16x4_t)__a;\n }\n \n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n vreinterpret_u16_s16 (int16x4_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vreinterpretv4hiv4hi (__a);\n+  return (uint16x4_t)__a;\n }\n \n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n vreinterpret_u16_s32 (int32x2_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vreinterpretv4hiv2si (__a);\n+  return (uint16x4_t)__a;\n }\n \n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n vreinterpret_u16_u8 (uint8x8_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vreinterpretv4hiv8qi ((int8x8_t) __a);\n+  return (uint16x4_t)__a;\n }\n \n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n vreinterpret_u16_u32 (uint32x2_t __a)\n {\n-  return (uint16x4_t)__builtin_neon_vreinterpretv4hiv2si ((int32x2_t) __a);\n+  return (uint16x4_t)__a;\n }\n \n __extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n vreinterpret_u32_p8 (poly8x8_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vreinterpretv2siv8qi ((int8x8_t) __a);\n+  return (uint32x2_t)__a;\n }\n \n __extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n vreinterpret_u32_p16 (poly16x4_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vreinterpretv2siv4hi ((int16x4_t) __a);\n+  return (uint32x2_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -13412,64 +13412,64 @@ vreinterpret_u32_f16 (float16x4_t __a)\n __extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n vreinterpret_u32_f32 (float32x2_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vreinterpretv2siv2sf (__a);\n+  return (uint32x2_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n vreinterpret_u32_p64 (poly64x1_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vreinterpretv2sidi (__a);\n+  return (uint32x2_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n vreinterpret_u32_s64 (int64x1_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vreinterpretv2sidi (__a);\n+  return (uint32x2_t)__a;\n }\n \n __extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n vreinterpret_u32_u64 (uint64x1_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vreinterpretv2sidi ((int64x1_t) __a);\n+  return (uint32x2_t)__a;\n }\n \n __extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n vreinterpret_u32_s8 (int8x8_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vreinterpretv2siv8qi (__a);\n+  return (uint32x2_t)__a;\n }\n \n __extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n vreinterpret_u32_s16 (int16x4_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vreinterpretv2siv4hi (__a);\n+  return (uint32x2_t)__a;\n }\n \n __extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n vreinterpret_u32_s32 (int32x2_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vreinterpretv2siv2si (__a);\n+  return (uint32x2_t)__a;\n }\n \n __extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n vreinterpret_u32_u8 (uint8x8_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vreinterpretv2siv8qi ((int8x8_t) __a);\n+  return (uint32x2_t)__a;\n }\n \n __extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n vreinterpret_u32_u16 (uint16x4_t __a)\n {\n-  return (uint32x2_t)__builtin_neon_vreinterpretv2siv4hi ((int16x4_t) __a);\n+  return (uint32x2_t)__a;\n }\n \n __extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_p8_p16 (poly16x8_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vreinterpretv16qiv8hi ((int16x8_t) __a);\n+  return (poly8x16_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -13483,77 +13483,77 @@ vreinterpretq_p8_f16 (float16x8_t __a)\n __extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_p8_f32 (float32x4_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vreinterpretv16qiv4sf (__a);\n+  return (poly8x16_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_p8_p64 (poly64x2_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vreinterpretv16qiv2di ((int64x2_t) __a);\n+  return (poly8x16_t)__a;\n }\n \n \n __extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_p8_p128 (poly128_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vreinterpretv16qiti ((__builtin_neon_ti) __a);\n+  return (poly8x16_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_p8_s64 (int64x2_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vreinterpretv16qiv2di (__a);\n+  return (poly8x16_t)__a;\n }\n \n __extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_p8_u64 (uint64x2_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vreinterpretv16qiv2di ((int64x2_t) __a);\n+  return (poly8x16_t)__a;\n }\n \n __extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_p8_s8 (int8x16_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vreinterpretv16qiv16qi (__a);\n+  return (poly8x16_t)__a;\n }\n \n __extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_p8_s16 (int16x8_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vreinterpretv16qiv8hi (__a);\n+  return (poly8x16_t)__a;\n }\n \n __extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_p8_s32 (int32x4_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vreinterpretv16qiv4si (__a);\n+  return (poly8x16_t)__a;\n }\n \n __extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_p8_u8 (uint8x16_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vreinterpretv16qiv16qi ((int8x16_t) __a);\n+  return (poly8x16_t)__a;\n }\n \n __extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_p8_u16 (uint16x8_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vreinterpretv16qiv8hi ((int16x8_t) __a);\n+  return (poly8x16_t)__a;\n }\n \n __extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_p8_u32 (uint32x4_t __a)\n {\n-  return (poly8x16_t)__builtin_neon_vreinterpretv16qiv4si ((int32x4_t) __a);\n+  return (poly8x16_t)__a;\n }\n \n __extension__ static __inline poly16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_p16_p8 (poly8x16_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vreinterpretv8hiv16qi ((int8x16_t) __a);\n+  return (poly16x8_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -13567,70 +13567,70 @@ vreinterpretq_p16_f16 (float16x8_t __a)\n __extension__ static __inline poly16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_p16_f32 (float32x4_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vreinterpretv8hiv4sf (__a);\n+  return (poly16x8_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline poly16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_p16_p64 (poly64x2_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vreinterpretv8hiv2di ((int64x2_t) __a);\n+  return (poly16x8_t)__a;\n }\n \n __extension__ static __inline poly16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_p16_p128 (poly128_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vreinterpretv8hiti ((__builtin_neon_ti) __a);\n+  return (poly16x8_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline poly16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_p16_s64 (int64x2_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vreinterpretv8hiv2di (__a);\n+  return (poly16x8_t)__a;\n }\n \n __extension__ static __inline poly16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_p16_u64 (uint64x2_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vreinterpretv8hiv2di ((int64x2_t) __a);\n+  return (poly16x8_t)__a;\n }\n \n __extension__ static __inline poly16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_p16_s8 (int8x16_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vreinterpretv8hiv16qi (__a);\n+  return (poly16x8_t)__a;\n }\n \n __extension__ static __inline poly16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_p16_s16 (int16x8_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vreinterpretv8hiv8hi (__a);\n+  return (poly16x8_t)__a;\n }\n \n __extension__ static __inline poly16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_p16_s32 (int32x4_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vreinterpretv8hiv4si (__a);\n+  return (poly16x8_t)__a;\n }\n \n __extension__ static __inline poly16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_p16_u8 (uint8x16_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vreinterpretv8hiv16qi ((int8x16_t) __a);\n+  return (poly16x8_t)__a;\n }\n \n __extension__ static __inline poly16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_p16_u16 (uint16x8_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vreinterpretv8hiv8hi ((int16x8_t) __a);\n+  return (poly16x8_t)__a;\n }\n \n __extension__ static __inline poly16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_p16_u32 (uint32x4_t __a)\n {\n-  return (poly16x8_t)__builtin_neon_vreinterpretv8hiv4si ((int32x4_t) __a);\n+  return (poly16x8_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -13745,13 +13745,13 @@ vreinterpretq_f16_u32 (uint32x4_t __a)\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_f32_p8 (poly8x16_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vreinterpretv4sfv16qi ((int8x16_t) __a);\n+  return (float32x4_t)__a;\n }\n \n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_f32_p16 (poly16x8_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vreinterpretv4sfv8hi ((int16x8_t) __a);\n+  return (float32x4_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -13767,76 +13767,76 @@ vreinterpretq_f32_f16 (float16x8_t __a)\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_f32_p64 (poly64x2_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vreinterpretv4sfv2di ((int64x2_t) __a);\n+  return (float32x4_t)__a;\n }\n \n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_f32_p128 (poly128_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vreinterpretv4sfti ((__builtin_neon_ti) __a);\n+  return (float32x4_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_f32_s64 (int64x2_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vreinterpretv4sfv2di (__a);\n+  return (float32x4_t)__a;\n }\n \n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_f32_u64 (uint64x2_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vreinterpretv4sfv2di ((int64x2_t) __a);\n+  return (float32x4_t)__a;\n }\n \n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_f32_s8 (int8x16_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vreinterpretv4sfv16qi (__a);\n+  return (float32x4_t)__a;\n }\n \n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_f32_s16 (int16x8_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vreinterpretv4sfv8hi (__a);\n+  return (float32x4_t)__a;\n }\n \n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_f32_s32 (int32x4_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vreinterpretv4sfv4si (__a);\n+  return (float32x4_t)__a;\n }\n \n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_f32_u8 (uint8x16_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vreinterpretv4sfv16qi ((int8x16_t) __a);\n+  return (float32x4_t)__a;\n }\n \n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_f32_u16 (uint16x8_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vreinterpretv4sfv8hi ((int16x8_t) __a);\n+  return (float32x4_t)__a;\n }\n \n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_f32_u32 (uint32x4_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vreinterpretv4sfv4si ((int32x4_t) __a);\n+  return (float32x4_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline poly64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_p64_p8 (poly8x16_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vreinterpretv2div16qi ((int8x16_t) __a);\n+  return (poly64x2_t)__a;\n }\n \n __extension__ static __inline poly64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_p64_p16 (poly16x8_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vreinterpretv2div8hi ((int16x8_t) __a);\n+  return (poly64x2_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -13850,73 +13850,73 @@ vreinterpretq_p64_f16 (float16x8_t __a)\n __extension__ static __inline poly64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_p64_f32 (float32x4_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vreinterpretv2div4sf (__a);\n+  return (poly64x2_t)__a;\n }\n \n __extension__ static __inline poly64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_p64_p128 (poly128_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vreinterpretv2diti ((__builtin_neon_ti) __a);\n+  return (poly64x2_t)__a;\n }\n \n __extension__ static __inline poly64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_p64_s64 (int64x2_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vreinterpretv2div2di (__a);\n+  return (poly64x2_t)__a;\n }\n \n __extension__ static __inline poly64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_p64_u64 (uint64x2_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vreinterpretv2div2di ((int64x2_t) __a);\n+  return (poly64x2_t)__a;\n }\n \n __extension__ static __inline poly64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_p64_s8 (int8x16_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vreinterpretv2div16qi (__a);\n+  return (poly64x2_t)__a;\n }\n \n __extension__ static __inline poly64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_p64_s16 (int16x8_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vreinterpretv2div8hi (__a);\n+  return (poly64x2_t)__a;\n }\n \n __extension__ static __inline poly64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_p64_s32 (int32x4_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vreinterpretv2div4si (__a);\n+  return (poly64x2_t)__a;\n }\n \n __extension__ static __inline poly64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_p64_u8 (uint8x16_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vreinterpretv2div16qi ((int8x16_t) __a);\n+  return (poly64x2_t)__a;\n }\n \n __extension__ static __inline poly64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_p64_u16 (uint16x8_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vreinterpretv2div8hi ((int16x8_t) __a);\n+  return (poly64x2_t)__a;\n }\n \n __extension__ static __inline poly64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_p64_u32 (uint32x4_t __a)\n {\n-  return (poly64x2_t)__builtin_neon_vreinterpretv2div4si ((int32x4_t) __a);\n+  return (poly64x2_t)__a;\n }\n \n __extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vreinterpretq_p128_p8 (poly8x16_t __a)\n {\n-  return (poly128_t)__builtin_neon_vreinterprettiv16qi ((int8x16_t) __a);\n+  return (poly128_t)__a;\n }\n \n __extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vreinterpretq_p128_p16 (poly16x8_t __a)\n {\n-  return (poly128_t)__builtin_neon_vreinterprettiv8hi ((int16x8_t) __a);\n+  return (poly128_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -13930,74 +13930,74 @@ vreinterpretq_p128_f16 (float16x8_t __a)\n __extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vreinterpretq_p128_f32 (float32x4_t __a)\n {\n-  return (poly128_t)__builtin_neon_vreinterprettiv4sf (__a);\n+  return (poly128_t)__a;\n }\n \n __extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vreinterpretq_p128_p64 (poly64x2_t __a)\n {\n-  return (poly128_t)__builtin_neon_vreinterprettiv2di ((int64x2_t) __a);\n+  return (poly128_t)__a;\n }\n \n __extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vreinterpretq_p128_s64 (int64x2_t __a)\n {\n-  return (poly128_t)__builtin_neon_vreinterprettiv2di (__a);\n+  return (poly128_t)__a;\n }\n \n __extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vreinterpretq_p128_u64 (uint64x2_t __a)\n {\n-  return (poly128_t)__builtin_neon_vreinterprettiv2di ((int64x2_t) __a);\n+  return (poly128_t)__a;\n }\n \n __extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vreinterpretq_p128_s8 (int8x16_t __a)\n {\n-  return (poly128_t)__builtin_neon_vreinterprettiv16qi (__a);\n+  return (poly128_t)__a;\n }\n \n __extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vreinterpretq_p128_s16 (int16x8_t __a)\n {\n-  return (poly128_t)__builtin_neon_vreinterprettiv8hi (__a);\n+  return (poly128_t)__a;\n }\n \n __extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vreinterpretq_p128_s32 (int32x4_t __a)\n {\n-  return (poly128_t)__builtin_neon_vreinterprettiv4si (__a);\n+  return (poly128_t)__a;\n }\n \n __extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vreinterpretq_p128_u8 (uint8x16_t __a)\n {\n-  return (poly128_t)__builtin_neon_vreinterprettiv16qi ((int8x16_t) __a);\n+  return (poly128_t)__a;\n }\n \n __extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vreinterpretq_p128_u16 (uint16x8_t __a)\n {\n-  return (poly128_t)__builtin_neon_vreinterprettiv8hi ((int16x8_t) __a);\n+  return (poly128_t)__a;\n }\n \n __extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vreinterpretq_p128_u32 (uint32x4_t __a)\n {\n-  return (poly128_t)__builtin_neon_vreinterprettiv4si ((int32x4_t) __a);\n+  return (poly128_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_s64_p8 (poly8x16_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vreinterpretv2div16qi ((int8x16_t) __a);\n+  return (int64x2_t)__a;\n }\n \n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_s64_p16 (poly16x8_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vreinterpretv2div8hi ((int16x8_t) __a);\n+  return (int64x2_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -14011,76 +14011,76 @@ vreinterpretq_s64_f16 (float16x8_t __a)\n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_s64_f32 (float32x4_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vreinterpretv2div4sf (__a);\n+  return (int64x2_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_s64_p64 (poly64x2_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vreinterpretv2div2di ((int64x2_t) __a);\n+  return (int64x2_t)__a;\n }\n \n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_s64_p128 (poly128_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vreinterpretv2diti ((__builtin_neon_ti) __a);\n+  return (int64x2_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_s64_u64 (uint64x2_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vreinterpretv2div2di ((int64x2_t) __a);\n+  return (int64x2_t)__a;\n }\n \n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_s64_s8 (int8x16_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vreinterpretv2div16qi (__a);\n+  return (int64x2_t)__a;\n }\n \n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_s64_s16 (int16x8_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vreinterpretv2div8hi (__a);\n+  return (int64x2_t)__a;\n }\n \n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_s64_s32 (int32x4_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vreinterpretv2div4si (__a);\n+  return (int64x2_t)__a;\n }\n \n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_s64_u8 (uint8x16_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vreinterpretv2div16qi ((int8x16_t) __a);\n+  return (int64x2_t)__a;\n }\n \n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_s64_u16 (uint16x8_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vreinterpretv2div8hi ((int16x8_t) __a);\n+  return (int64x2_t)__a;\n }\n \n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_s64_u32 (uint32x4_t __a)\n {\n-  return (int64x2_t)__builtin_neon_vreinterpretv2div4si ((int32x4_t) __a);\n+  return (int64x2_t)__a;\n }\n \n __extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_u64_p8 (poly8x16_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vreinterpretv2div16qi ((int8x16_t) __a);\n+  return (uint64x2_t)__a;\n }\n \n __extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_u64_p16 (poly16x8_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vreinterpretv2div8hi ((int16x8_t) __a);\n+  return (uint64x2_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -14094,76 +14094,76 @@ vreinterpretq_u64_f16 (float16x8_t __a)\n __extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_u64_f32 (float32x4_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vreinterpretv2div4sf (__a);\n+  return (uint64x2_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_u64_p64 (poly64x2_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vreinterpretv2div2di ((int64x2_t) __a);\n+  return (uint64x2_t)__a;\n }\n \n __extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_u64_p128 (poly128_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vreinterpretv2diti ((__builtin_neon_ti) __a);\n+  return (uint64x2_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_u64_s64 (int64x2_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vreinterpretv2div2di (__a);\n+  return (uint64x2_t)__a;\n }\n \n __extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_u64_s8 (int8x16_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vreinterpretv2div16qi (__a);\n+  return (uint64x2_t)__a;\n }\n \n __extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_u64_s16 (int16x8_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vreinterpretv2div8hi (__a);\n+  return (uint64x2_t)__a;\n }\n \n __extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_u64_s32 (int32x4_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vreinterpretv2div4si (__a);\n+  return (uint64x2_t)__a;\n }\n \n __extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_u64_u8 (uint8x16_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vreinterpretv2div16qi ((int8x16_t) __a);\n+  return (uint64x2_t)__a;\n }\n \n __extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_u64_u16 (uint16x8_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vreinterpretv2div8hi ((int16x8_t) __a);\n+  return (uint64x2_t)__a;\n }\n \n __extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n vreinterpretq_u64_u32 (uint32x4_t __a)\n {\n-  return (uint64x2_t)__builtin_neon_vreinterpretv2div4si ((int32x4_t) __a);\n+  return (uint64x2_t)__a;\n }\n \n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_s8_p8 (poly8x16_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vreinterpretv16qiv16qi ((int8x16_t) __a);\n+  return (int8x16_t)__a;\n }\n \n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_s8_p16 (poly16x8_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vreinterpretv16qiv8hi ((int16x8_t) __a);\n+  return (int8x16_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -14177,76 +14177,76 @@ vreinterpretq_s8_f16 (float16x8_t __a)\n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_s8_f32 (float32x4_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vreinterpretv16qiv4sf (__a);\n+  return (int8x16_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_s8_p64 (poly64x2_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vreinterpretv16qiv2di ((int64x2_t) __a);\n+  return (int8x16_t)__a;\n }\n \n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_s8_p128 (poly128_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vreinterpretv16qiti ((__builtin_neon_ti) __a);\n+  return (int8x16_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_s8_s64 (int64x2_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vreinterpretv16qiv2di (__a);\n+  return (int8x16_t)__a;\n }\n \n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_s8_u64 (uint64x2_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vreinterpretv16qiv2di ((int64x2_t) __a);\n+  return (int8x16_t)__a;\n }\n \n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_s8_s16 (int16x8_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vreinterpretv16qiv8hi (__a);\n+  return (int8x16_t)__a;\n }\n \n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_s8_s32 (int32x4_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vreinterpretv16qiv4si (__a);\n+  return (int8x16_t)__a;\n }\n \n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_s8_u8 (uint8x16_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vreinterpretv16qiv16qi ((int8x16_t) __a);\n+  return (int8x16_t)__a;\n }\n \n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_s8_u16 (uint16x8_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vreinterpretv16qiv8hi ((int16x8_t) __a);\n+  return (int8x16_t)__a;\n }\n \n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_s8_u32 (uint32x4_t __a)\n {\n-  return (int8x16_t)__builtin_neon_vreinterpretv16qiv4si ((int32x4_t) __a);\n+  return (int8x16_t)__a;\n }\n \n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_s16_p8 (poly8x16_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vreinterpretv8hiv16qi ((int8x16_t) __a);\n+  return (int16x8_t)__a;\n }\n \n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_s16_p16 (poly16x8_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vreinterpretv8hiv8hi ((int16x8_t) __a);\n+  return (int16x8_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -14260,159 +14260,159 @@ vreinterpretq_s16_f16 (float16x8_t __a)\n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_s16_f32 (float32x4_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vreinterpretv8hiv4sf (__a);\n+  return (int16x8_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_s16_p64 (poly64x2_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vreinterpretv8hiv2di ((int64x2_t) __a);\n+  return (int16x8_t)__a;\n }\n \n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_s16_p128 (poly128_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vreinterpretv8hiti ((__builtin_neon_ti) __a);\n+  return (int16x8_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_s16_s64 (int64x2_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vreinterpretv8hiv2di (__a);\n+  return (int16x8_t)__a;\n }\n \n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_s16_u64 (uint64x2_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vreinterpretv8hiv2di ((int64x2_t) __a);\n+  return (int16x8_t)__a;\n }\n \n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_s16_s8 (int8x16_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vreinterpretv8hiv16qi (__a);\n+  return (int16x8_t)__a;\n }\n \n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_s16_s32 (int32x4_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vreinterpretv8hiv4si (__a);\n+  return (int16x8_t)__a;\n }\n \n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_s16_u8 (uint8x16_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vreinterpretv8hiv16qi ((int8x16_t) __a);\n+  return (int16x8_t)__a;\n }\n \n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_s16_u16 (uint16x8_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vreinterpretv8hiv8hi ((int16x8_t) __a);\n+  return (int16x8_t)__a;\n }\n \n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_s16_u32 (uint32x4_t __a)\n {\n-  return (int16x8_t)__builtin_neon_vreinterpretv8hiv4si ((int32x4_t) __a);\n+  return (int16x8_t)__a;\n }\n \n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_p8 (poly8x16_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siv16qi ((int8x16_t) __a);\n+  return (int32x4_t)__a;\n }\n \n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_p16 (poly16x8_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siv8hi ((int16x8_t) __a);\n+  return (int32x4_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_f16 (float16x8_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siv8hi ((int16x8_t) __a);\n+  return (int32x4_t)__a;\n }\n #endif\n \n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_f32 (float32x4_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siv4sf (__a);\n+  return (int32x4_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_p64 (poly64x2_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siv2di ((int64x2_t) __a);\n+  return (int32x4_t)__a;\n }\n \n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_p128 (poly128_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siti ((__builtin_neon_ti) __a);\n+  return (int32x4_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_s64 (int64x2_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siv2di (__a);\n+  return (int32x4_t)__a;\n }\n \n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_u64 (uint64x2_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siv2di ((int64x2_t) __a);\n+  return (int32x4_t)__a;\n }\n \n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_s8 (int8x16_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siv16qi (__a);\n+  return (int32x4_t)__a;\n }\n \n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_s16 (int16x8_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siv8hi (__a);\n+  return (int32x4_t)__a;\n }\n \n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_u8 (uint8x16_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siv16qi ((int8x16_t) __a);\n+  return (int32x4_t)__a;\n }\n \n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_u16 (uint16x8_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siv8hi ((int16x8_t) __a);\n+  return (int32x4_t)__a;\n }\n \n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_s32_u32 (uint32x4_t __a)\n {\n-  return (int32x4_t)__builtin_neon_vreinterpretv4siv4si ((int32x4_t) __a);\n+  return (int32x4_t)__a;\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_u8_p8 (poly8x16_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vreinterpretv16qiv16qi ((int8x16_t) __a);\n+  return (uint8x16_t)__a;\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_u8_p16 (poly16x8_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vreinterpretv16qiv8hi ((int16x8_t) __a);\n+  return (uint8x16_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -14426,76 +14426,76 @@ vreinterpretq_u8_f16 (float16x8_t __a)\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_u8_f32 (float32x4_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vreinterpretv16qiv4sf (__a);\n+  return (uint8x16_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_u8_p64 (poly64x2_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vreinterpretv16qiv2di ((int64x2_t) __a);\n+  return (uint8x16_t)__a;\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_u8_p128 (poly128_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vreinterpretv16qiti ((__builtin_neon_ti) __a);\n+  return (uint8x16_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_u8_s64 (int64x2_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vreinterpretv16qiv2di (__a);\n+  return (uint8x16_t)__a;\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_u8_u64 (uint64x2_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vreinterpretv16qiv2di ((int64x2_t) __a);\n+  return (uint8x16_t)__a;\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_u8_s8 (int8x16_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vreinterpretv16qiv16qi (__a);\n+  return (uint8x16_t)__a;\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_u8_s16 (int16x8_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vreinterpretv16qiv8hi (__a);\n+  return (uint8x16_t)__a;\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_u8_s32 (int32x4_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vreinterpretv16qiv4si (__a);\n+  return (uint8x16_t)__a;\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_u8_u16 (uint16x8_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vreinterpretv16qiv8hi ((int16x8_t) __a);\n+  return (uint8x16_t)__a;\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vreinterpretq_u8_u32 (uint32x4_t __a)\n {\n-  return (uint8x16_t)__builtin_neon_vreinterpretv16qiv4si ((int32x4_t) __a);\n+  return (uint8x16_t)__a;\n }\n \n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_u16_p8 (poly8x16_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vreinterpretv8hiv16qi ((int8x16_t) __a);\n+  return (uint16x8_t)__a;\n }\n \n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_u16_p16 (poly16x8_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vreinterpretv8hiv8hi ((int16x8_t) __a);\n+  return (uint16x8_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -14509,76 +14509,76 @@ vreinterpretq_u16_f16 (float16x8_t __a)\n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_u16_f32 (float32x4_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vreinterpretv8hiv4sf (__a);\n+  return (uint16x8_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_u16_p64 (poly64x2_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vreinterpretv8hiv2di ((int64x2_t) __a);\n+  return (uint16x8_t)__a;\n }\n \n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_u16_p128 (poly128_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vreinterpretv8hiti ((__builtin_neon_ti) __a);\n+  return (uint16x8_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_u16_s64 (int64x2_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vreinterpretv8hiv2di (__a);\n+  return (uint16x8_t)__a;\n }\n \n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_u16_u64 (uint64x2_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vreinterpretv8hiv2di ((int64x2_t) __a);\n+  return (uint16x8_t)__a;\n }\n \n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_u16_s8 (int8x16_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vreinterpretv8hiv16qi (__a);\n+  return (uint16x8_t)__a;\n }\n \n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_u16_s16 (int16x8_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vreinterpretv8hiv8hi (__a);\n+  return (uint16x8_t)__a;\n }\n \n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_u16_s32 (int32x4_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vreinterpretv8hiv4si (__a);\n+  return (uint16x8_t)__a;\n }\n \n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_u16_u8 (uint8x16_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vreinterpretv8hiv16qi ((int8x16_t) __a);\n+  return (uint16x8_t)__a;\n }\n \n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vreinterpretq_u16_u32 (uint32x4_t __a)\n {\n-  return (uint16x8_t)__builtin_neon_vreinterpretv8hiv4si ((int32x4_t) __a);\n+  return (uint16x8_t)__a;\n }\n \n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_u32_p8 (poly8x16_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vreinterpretv4siv16qi ((int8x16_t) __a);\n+  return (uint32x4_t)__a;\n }\n \n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_u32_p16 (poly16x8_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vreinterpretv4siv8hi ((int16x8_t) __a);\n+  return (uint32x4_t)__a;\n }\n \n #if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n@@ -14592,64 +14592,64 @@ vreinterpretq_u32_f16 (float16x8_t __a)\n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_u32_f32 (float32x4_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vreinterpretv4siv4sf (__a);\n+  return (uint32x4_t)__a;\n }\n \n #pragma GCC push_options\n #pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_u32_p64 (poly64x2_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vreinterpretv4siv2di ((int64x2_t) __a);\n+  return (uint32x4_t)__a;\n }\n \n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_u32_p128 (poly128_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vreinterpretv4siti ((__builtin_neon_ti) __a);\n+  return (uint32x4_t)__a;\n }\n \n #pragma GCC pop_options\n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_u32_s64 (int64x2_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vreinterpretv4siv2di (__a);\n+  return (uint32x4_t)__a;\n }\n \n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_u32_u64 (uint64x2_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vreinterpretv4siv2di ((int64x2_t) __a);\n+  return (uint32x4_t)__a;\n }\n \n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_u32_s8 (int8x16_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vreinterpretv4siv16qi (__a);\n+  return (uint32x4_t)__a;\n }\n \n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_u32_s16 (int16x8_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vreinterpretv4siv8hi (__a);\n+  return (uint32x4_t)__a;\n }\n \n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_u32_s32 (int32x4_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vreinterpretv4siv4si (__a);\n+  return (uint32x4_t)__a;\n }\n \n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_u32_u8 (uint8x16_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vreinterpretv4siv16qi ((int8x16_t) __a);\n+  return (uint32x4_t)__a;\n }\n \n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vreinterpretq_u32_u16 (uint16x8_t __a)\n {\n-  return (uint32x4_t)__builtin_neon_vreinterpretv4siv8hi ((int16x8_t) __a);\n+  return (uint32x4_t)__a;\n }\n \n "}, {"sha": "d9fac7847704f8558ec11e0438b5d81d16e5833b", "filename": "gcc/config/arm/arm_neon_builtins.def", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1086348122165d29157eaffe3bd906769f1dff/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1086348122165d29157eaffe3bd906769f1dff/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def?ref=1d1086348122165d29157eaffe3bd906769f1dff", "patch": "@@ -235,17 +235,6 @@ VAR1 (TERNOP, vtbx1, v8qi)\n VAR1 (TERNOP, vtbx2, v8qi)\n VAR1 (TERNOP, vtbx3, v8qi)\n VAR1 (TERNOP, vtbx4, v8qi)\n-VAR5 (UNOP, vreinterpretv8qi, v8qi, v4hi, v2si, v2sf, di)\n-VAR5 (UNOP, vreinterpretv4hi, v8qi, v4hi, v2si, v2sf, di)\n-VAR5 (UNOP, vreinterpretv2si, v8qi, v4hi, v2si, v2sf, di)\n-VAR5 (UNOP, vreinterpretv2sf, v8qi, v4hi, v2si, v2sf, di)\n-VAR5 (UNOP, vreinterpretdi, v8qi, v4hi, v2si, v2sf, di)\n-VAR6 (UNOP, vreinterpretv16qi, v16qi, v8hi, v4si, v4sf, v2di, ti)\n-VAR6 (UNOP, vreinterpretv8hi, v16qi, v8hi, v4si, v4sf, v2di, ti)\n-VAR6 (UNOP, vreinterpretv4si, v16qi, v8hi, v4si, v4sf, v2di, ti)\n-VAR6 (UNOP, vreinterpretv4sf, v16qi, v8hi, v4si, v4sf, v2di, ti)\n-VAR6 (UNOP, vreinterpretv2di, v16qi, v8hi, v4si, v4sf, v2di, ti)\n-VAR6 (UNOP, vreinterpretti, v16qi, v8hi, v4si, v4sf, v2di, ti)\n VAR12 (LOAD1, vld1,\n         v8qi, v4hi, v4hf, v2si, v2sf, di, v16qi, v8hi, v8hf, v4si, v4sf, v2di)\n VAR10 (LOAD1LANE, vld1_lane,"}, {"sha": "f495d40ae1669435cf7637d3e10972e1d102b0a1", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 0, "deletions": 100, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1086348122165d29157eaffe3bd906769f1dff/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1086348122165d29157eaffe3bd906769f1dff/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=1d1086348122165d29157eaffe3bd906769f1dff", "patch": "@@ -4240,106 +4240,6 @@ if (BYTES_BIG_ENDIAN)\n   [(set_attr \"type\" \"neon_zip<q>\")]\n )\n \n-(define_expand \"neon_vreinterpretv8qi<mode>\"\n-  [(match_operand:V8QI 0 \"s_register_operand\" \"\")\n-   (match_operand:VD_RE 1 \"s_register_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_reinterpret (operands[0], operands[1]);\n-  DONE;\n-})\n-\n-(define_expand \"neon_vreinterpretv4hi<mode>\"\n-  [(match_operand:V4HI 0 \"s_register_operand\" \"\")\n-   (match_operand:VD_RE 1 \"s_register_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_reinterpret (operands[0], operands[1]);\n-  DONE;\n-})\n-\n-(define_expand \"neon_vreinterpretv2si<mode>\"\n-  [(match_operand:V2SI 0 \"s_register_operand\" \"\")\n-   (match_operand:VD_RE 1 \"s_register_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_reinterpret (operands[0], operands[1]);\n-  DONE;\n-})\n-\n-(define_expand \"neon_vreinterpretv2sf<mode>\"\n-  [(match_operand:V2SF 0 \"s_register_operand\" \"\")\n-   (match_operand:VD_RE 1 \"s_register_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_reinterpret (operands[0], operands[1]);\n-  DONE;\n-})\n-\n-(define_expand \"neon_vreinterpretdi<mode>\"\n-  [(match_operand:DI 0 \"s_register_operand\" \"\")\n-   (match_operand:VD_RE 1 \"s_register_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_reinterpret (operands[0], operands[1]);\n-  DONE;\n-})\n-\n-(define_expand \"neon_vreinterpretti<mode>\"\n-  [(match_operand:TI 0 \"s_register_operand\" \"\")\n-   (match_operand:VQXMOV 1 \"s_register_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_reinterpret (operands[0], operands[1]);\n-  DONE;\n-})\n-\n-\n-(define_expand \"neon_vreinterpretv16qi<mode>\"\n-  [(match_operand:V16QI 0 \"s_register_operand\" \"\")\n-   (match_operand:VQXMOV 1 \"s_register_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_reinterpret (operands[0], operands[1]);\n-  DONE;\n-})\n-\n-(define_expand \"neon_vreinterpretv8hi<mode>\"\n-  [(match_operand:V8HI 0 \"s_register_operand\" \"\")\n-   (match_operand:VQXMOV 1 \"s_register_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_reinterpret (operands[0], operands[1]);\n-  DONE;\n-})\n-\n-(define_expand \"neon_vreinterpretv4si<mode>\"\n-  [(match_operand:V4SI 0 \"s_register_operand\" \"\")\n-   (match_operand:VQXMOV 1 \"s_register_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_reinterpret (operands[0], operands[1]);\n-  DONE;\n-})\n-\n-(define_expand \"neon_vreinterpretv4sf<mode>\"\n-  [(match_operand:V4SF 0 \"s_register_operand\" \"\")\n-   (match_operand:VQXMOV 1 \"s_register_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_reinterpret (operands[0], operands[1]);\n-  DONE;\n-})\n-\n-(define_expand \"neon_vreinterpretv2di<mode>\"\n-  [(match_operand:V2DI 0 \"s_register_operand\" \"\")\n-   (match_operand:VQXMOV 1 \"s_register_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  neon_reinterpret (operands[0], operands[1]);\n-  DONE;\n-})\n-\n (define_expand \"vec_load_lanes<mode><mode>\"\n   [(set (match_operand:VDQX 0 \"s_register_operand\")\n         (unspec:VDQX [(match_operand:VDQX 1 \"neon_struct_operand\")]"}]}