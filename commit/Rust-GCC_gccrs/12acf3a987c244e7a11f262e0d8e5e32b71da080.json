{"sha": "12acf3a987c244e7a11f262e0d8e5e32b71da080", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJhY2YzYTk4N2MyNDRlN2ExMWYyNjJlMGQ4ZTVlMzJiNzFkYTA4MA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2000-09-16T12:14:12Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2000-09-16T12:14:12Z"}, "message": "gcc_update: Remove gcc/c-parse.gperf.\n\n2000-09-16  Andreas Jaeger  <aj@suse.de>\n\n\t* gcc_update: Remove gcc/c-parse.gperf.\n\nFrom-SVN: r36454", "tree": {"sha": "4d85773b49ad0b5ce4ef4e66f5de7f590a7efee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d85773b49ad0b5ce4ef4e66f5de7f590a7efee7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12acf3a987c244e7a11f262e0d8e5e32b71da080", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12acf3a987c244e7a11f262e0d8e5e32b71da080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12acf3a987c244e7a11f262e0d8e5e32b71da080", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12acf3a987c244e7a11f262e0d8e5e32b71da080/comments", "author": null, "committer": null, "parents": [{"sha": "52e055e4aed3cb7f037453682bc1d3f057319785", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52e055e4aed3cb7f037453682bc1d3f057319785", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52e055e4aed3cb7f037453682bc1d3f057319785"}], "stats": {"total": 71, "additions": 37, "deletions": 34}, "files": [{"sha": "e2fefa46e55cc846f1bb5a7ad28f0542dd949c5b", "filename": "contrib/ChangeLog", "status": "modified", "additions": 31, "deletions": 27, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12acf3a987c244e7a11f262e0d8e5e32b71da080/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12acf3a987c244e7a11f262e0d8e5e32b71da080/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=12acf3a987c244e7a11f262e0d8e5e32b71da080", "patch": "@@ -1,3 +1,7 @@\n+2000-09-16  Andreas Jaeger  <aj@suse.de>\n+\n+\t* gcc_update: Remove gcc/c-parse.gperf.\n+\n 2000-08-30  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>,\n \t    Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -55,7 +59,7 @@ Sun Jul 16 12:04:33 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-04-27  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* gcc_update: Refer to GCC and gcc_update instead of egcs and\n- \tegcs_update.\n+\tegcs_update.\n \n 2000-04-26  Jonathan Larmour  <jlarmour@redhat.co.uk>\n \n@@ -107,7 +111,7 @@ Sun Nov 28 00:41:44 1999  William Bader (william@nscs.fast.net)\n \tpre-update step.\n \n 1999-07-17  Alexandre Oliva  <oliva@dcc.unicamp.br>\n-        \n+\n \t* test_summary: Replace egcs with gcc.  Update e-mail address.\n \n 1999-07-05  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n@@ -119,7 +123,7 @@ Sun Nov 28 00:41:44 1999  William Bader (william@nscs.fast.net)\n \n 1999-07-03  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n-\t* test_summary: If Target is `unix{*}', append the Target variants \n+\t* test_summary: If Target is `unix{*}', append the Target variants\n \tto Host.\n \n 1999-06-12  Alexandre Oliva  <oliva@dcc.unicamp.br>\n@@ -134,13 +138,13 @@ Fri Apr  2 16:09:02 1999  Jeffrey A Law  (law@cygnus.com)\n \n 1999-02-04  Robert Lipe  <robertlipe@usa.net>\n \n-\t* egcs_update: Test return values of 'cvs update'.  Propogate \n-\tto caller as exit values.     \n+\t* egcs_update: Test return values of 'cvs update'.  Propogate\n+\tto caller as exit values.\n \n 1999-01-25  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* egcs_update: Use \"if\" instead of \"&&\".  Touch generated files\n- \tonly after the corresponding *.y files.\n+\tonly after the corresponding *.y files.\n \n 1999-01-19  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n@@ -177,26 +181,26 @@ Fri Apr  2 16:09:02 1999  Jeffrey A Law  (law@cygnus.com)\n Sat Oct 31 10:53:40 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* warn_summary (longLineFilter): New shell function to encapsulate\n- \tthis functionality.  It is off by default, only active if -llf\n- \tflag is specified.\n-  \t(subdirectoryFilter): Fix bug in filtering which made some\n- \tsubdirectory warnings erroneously appear in the toplevel set.\n-  \t(stageNfilter): Renamed from `stageNwarns'.  Updated to collect\n- \twarnings from stage1 as well as stage0, which means warnings from\n- \toutside the bootstrap directory.  Eg, the libraries, etc.\n-  \t(warningFilter): New shell function to encapsulate this\n- \tfunctionality.\n+\tthis functionality.  It is off by default, only active if -llf\n+\tflag is specified.\n+\t(subdirectoryFilter): Fix bug in filtering which made some\n+\tsubdirectory warnings erroneously appear in the toplevel set.\n+\t(stageNfilter): Renamed from `stageNwarns'.  Updated to collect\n+\twarnings from stage1 as well as stage0, which means warnings from\n+\toutside the bootstrap directory.  Eg, the libraries, etc.\n+\t(warningFilter): New shell function to encapsulate this\n+\tfunctionality.\n \t(keywordFilter): New shell function to encapsulate this\n- \tfunctionality.\n+\tfunctionality.\n \n \tStore data in a temp file rather than calculating it 3x.  Arrange\n \tto remove it on exit and signals.\n \n \tAdd -pass/-wpass flags to do \"pass through\" (i.e. manual\n- \tinspection) of bootstrap output from a particular stageN as well\n- \tas language subdirs.\n+\tinspection) of bootstrap output from a particular stageN as well\n+\tas language subdirs.\n \n-\tAdd better comments/documentation.\t\n+\tAdd better comments/documentation.\n \n Sat Oct 31 16:39:31 1998  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n@@ -223,12 +227,12 @@ Wed Oct  7 13:00:40 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n Mon Oct  5 14:19:48 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* warn_summary (subdirectoryFilter): New shell function to\n- \toptionally filter in/out gcc subdirectories when summarizing\n- \twarnings.  Add new flags to support subdirectory filtering.\n-\t\n+\toptionally filter in/out gcc subdirectories when summarizing\n+\twarnings.  Add new flags to support subdirectory filtering.\n+\n \tAlso, ensure the bootstrap stage is a number.  Add some more C\n- \tkeywords that are preserved in the \"warning type\" summary and\n- \ttighten up the \"arg ???\" regexp.\n+\tkeywords that are preserved in the \"warning type\" summary and\n+\ttighten up the \"arg ???\" regexp.\n \n Tue Sep 22 07:30 Bruce Korb <korb@datadesign.com>\n \n@@ -245,7 +249,7 @@ Wed Sep 16 16:06:51 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t* egcs_update: Additionally touch gcc/java/parse.[ch].\n \n Thu Sep  9 16:48 Bruce Korb <korb@datadesign.com>\n-\t\n+\n \t* fixinc/inclhack.def:  Added two files required by\n \tSCO's Open Server 5's avoid_bool fix.\n \tRegenerated fixinc.x and inclhack.sh to incorporate\n@@ -254,12 +258,12 @@ Thu Sep  9 16:48 Bruce Korb <korb@datadesign.com>\n Thu Sep  3 10:11:32 1998  Robert Lipe   <robertl@dgii.com>\n \n \t* egcs_update: Do the pass 1 CVS update only for files that\n-\tmay reasonably be under CVS control. \n+\tmay reasonably be under CVS control.\n \n 1998-08-14  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* test_installed: New script for testing already-installed\n- \tgcc/g++/g77.\n+\tgcc/g++/g77.\n \n Wed Aug 12 19:59:36 1998  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n "}, {"sha": "b0f00f469b0087cea237ef5b89b08db20ac337ce", "filename": "contrib/gcc_update", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12acf3a987c244e7a11f262e0d8e5e32b71da080/contrib%2Fgcc_update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12acf3a987c244e7a11f262e0d8e5e32b71da080/contrib%2Fgcc_update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_update?ref=12acf3a987c244e7a11f262e0d8e5e32b71da080", "patch": "@@ -7,11 +7,11 @@\n # By default all command-line options are passed to `cvs update` in\n # addition to $UPDATE_OPTIONS (defined below). If the first parameter\n # reads --nostdflags, $UPDATE_OPTIONS as well as this parameter itself\n-# are omitted. \n-# \n+# are omitted.\n+#\n # If the first parameter reads --patch, the second parameter is considered\n # a patch file.\n-# \n+#\n # If the first parameter is --touch, no cvs operation will be performed,\n # only generated files that appear to be out of date in the local tree\n # will be touched.\n@@ -65,7 +65,6 @@ texinfo/util/Makefile.in: texinfo/util/Makefile.am texinfo/configure.in texinfo/\n gcc/configure: gcc/configure.in\n gcc/cstamp-h.in: gcc/configure.in gcc/acconfig.h\n gcc/config.in: gcc/cstamp-h.in\n-gcc/c-gperf.h: gcc/c-parse.gperf\n gcc/fixinc/fixincl.x: gcc/fixinc/fixincl.tpl gcc/fixinc/inclhack.def\n gcc/tradcif.c: gcc/tradcif.y\n # And then, language-specific files\n@@ -112,7 +111,7 @@ touch_files () {\n touch_files_reexec () {\n     echo \"Adjusting file timestamps\"\n     exec ${CONFIG_SHELL-/bin/sh} $self --touch\n-}    \n+}\n \n # This functions applies a patch to an existing tree.\n apply_patch () {\n@@ -138,7 +137,7 @@ fi\n \n case \"$1\" in\n # First of all, check whether we are going to process a patch.\n---patch) \n+--patch)\n     if test \"$#\" != 2; then\n         echo \"$1\" expects only one argument >&2\n \texit 1\n@@ -192,7 +191,7 @@ fi\n \n echo \"Updating CVS tree\"\n cvs -q update ${1+\"$@\"}\n-if [ $? -ne 0 ]; then \n+if [ $? -ne 0 ]; then\n     (touch_files_reexec)\n     echo \"CVS update of full tree failed.\" >&2\n     exit 1"}]}