{"sha": "36f48ebd016d4ace605a864c7f7303dbc281748d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZmNDhlYmQwMTZkNGFjZTYwNWE4NjRjN2Y3MzAzZGJjMjgxNzQ4ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-06-28T19:41:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-06-28T19:41:43Z"}, "message": "PR c++/45976 - error with ::template in declarator.\n\n\t* pt.c (resolve_typename_type): Fix TEMPLATE_ID_EXPR handling.\n\nFrom-SVN: r249753", "tree": {"sha": "23314e421c96fcafc0a55196f4681e1873a3f9e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23314e421c96fcafc0a55196f4681e1873a3f9e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36f48ebd016d4ace605a864c7f7303dbc281748d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f48ebd016d4ace605a864c7f7303dbc281748d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36f48ebd016d4ace605a864c7f7303dbc281748d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f48ebd016d4ace605a864c7f7303dbc281748d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e5f79b61994f8ffccad62a58031f5937aa16ae3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e5f79b61994f8ffccad62a58031f5937aa16ae3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e5f79b61994f8ffccad62a58031f5937aa16ae3"}], "stats": {"total": 44, "additions": 37, "deletions": 7}, "files": [{"sha": "7b7070adf9c5ad9892d2d953448ba9d5d9619ee4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f48ebd016d4ace605a864c7f7303dbc281748d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f48ebd016d4ace605a864c7f7303dbc281748d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=36f48ebd016d4ace605a864c7f7303dbc281748d", "patch": "@@ -1,5 +1,8 @@\n 2017-06-28  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/45976 - error with ::template in declarator.\n+\t* pt.c (resolve_typename_type): Fix TEMPLATE_ID_EXPR handling.\n+\n \tPR c++/54769 - wrong lookup of dependent template-name.\n \t* parser.c (cp_parser_template_name): Handle dependent object type.\n \t(cp_parser_nested_name_specifier_opt): Make template_keyword_p a"}, {"sha": "b060a19094677fb374ab244d28c32bd368691dd2", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f48ebd016d4ace605a864c7f7303dbc281748d/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f48ebd016d4ace605a864c7f7303dbc281748d/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=36f48ebd016d4ace605a864c7f7303dbc281748d", "patch": "@@ -24624,26 +24624,38 @@ resolve_typename_type (tree type, bool only_current_p)\n   \n   /* For a TYPENAME_TYPE like \"typename X::template Y<T>\", we want to\n      find a TEMPLATE_DECL.  Otherwise, we want to find a TYPE_DECL.  */\n+  tree fullname = TYPENAME_TYPE_FULLNAME (type);\n   if (!decl)\n     /*nop*/;\n-  else if (identifier_p (TYPENAME_TYPE_FULLNAME (type))\n+  else if (identifier_p (fullname)\n \t   && TREE_CODE (decl) == TYPE_DECL)\n     {\n       result = TREE_TYPE (decl);\n       if (result == error_mark_node)\n \tresult = NULL_TREE;\n     }\n-  else if (TREE_CODE (TYPENAME_TYPE_FULLNAME (type)) == TEMPLATE_ID_EXPR\n+  else if (TREE_CODE (fullname) == TEMPLATE_ID_EXPR\n \t   && DECL_CLASS_TEMPLATE_P (decl))\n     {\n-      tree tmpl;\n-      tree args;\n       /* Obtain the template and the arguments.  */\n-      tmpl = TREE_OPERAND (TYPENAME_TYPE_FULLNAME (type), 0);\n-      args = TREE_OPERAND (TYPENAME_TYPE_FULLNAME (type), 1);\n+      tree tmpl = TREE_OPERAND (fullname, 0);\n+      if (TREE_CODE (tmpl) == IDENTIFIER_NODE)\n+\t{\n+\t  /* We get here with a plain identifier because a previous tentative\n+\t     parse of the nested-name-specifier as part of a ptr-operator saw\n+\t     ::template X<A>.  The use of ::template is necessary in a\n+\t     ptr-operator, but wrong in a declarator-id.\n+\n+\t     [temp.names]: In a qualified-id of a declarator-id, the keyword\n+\t     template shall not appear at the top level.  */\n+\t  pedwarn (EXPR_LOC_OR_LOC (fullname, input_location), OPT_Wpedantic,\n+\t\t   \"keyword %<template%> not allowed in declarator-id\");\n+\t  tmpl = decl;\n+\t}\n+      tree args = TREE_OPERAND (fullname, 1);\n       /* Instantiate the template.  */\n       result = lookup_template_class (tmpl, args, NULL_TREE, NULL_TREE,\n-\t\t\t\t      /*entering_scope=*/0,\n+\t\t\t\t      /*entering_scope=*/true,\n \t\t\t\t      tf_error | tf_user);\n       if (result == error_mark_node)\n \tresult = NULL_TREE;"}, {"sha": "0f928a8523e829029e86285b505b86d3a2d165c3", "filename": "gcc/testsuite/g++.dg/template/template-keyword1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f48ebd016d4ace605a864c7f7303dbc281748d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftemplate-keyword1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f48ebd016d4ace605a864c7f7303dbc281748d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftemplate-keyword1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftemplate-keyword1.C?ref=36f48ebd016d4ace605a864c7f7303dbc281748d", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/45976\n+\n+template<int a>\n+struct A {\n+    static const int value;\n+   \n+    template<int b>\n+    struct B {\n+        static const int value;\n+    };\n+};\n+\n+template<int a>\n+template<int b>\n+const int A<a>::template B<b>::value = 0; // { dg-error \"keyword .template\" }"}]}