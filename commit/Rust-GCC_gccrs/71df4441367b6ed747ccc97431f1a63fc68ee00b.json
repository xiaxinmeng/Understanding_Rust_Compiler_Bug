{"sha": "71df4441367b6ed747ccc97431f1a63fc68ee00b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFkZjQ0NDEzNjdiNmVkNzQ3Y2NjOTc0MzFmMWE2M2ZjNjhlZTAwYg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-01T14:13:20Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-01T14:13:20Z"}, "message": "treelang.texi: Fix typos.\n\n\t* treelang/treelang.texi: Fix typos.\n\t* treelang/treetree.c: Fix comment typos.\n\nFrom-SVN: r97393", "tree": {"sha": "ec06d854ebf1f6081d1984798b24cfa8d6634cb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec06d854ebf1f6081d1984798b24cfa8d6634cb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71df4441367b6ed747ccc97431f1a63fc68ee00b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71df4441367b6ed747ccc97431f1a63fc68ee00b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71df4441367b6ed747ccc97431f1a63fc68ee00b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71df4441367b6ed747ccc97431f1a63fc68ee00b/comments", "author": null, "committer": null, "parents": [{"sha": "cccd217d2bb66bb1a4386615a27105a2021ea53f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cccd217d2bb66bb1a4386615a27105a2021ea53f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cccd217d2bb66bb1a4386615a27105a2021ea53f"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "07dc65b0330561fed82a072f56e1bce077f42e1a", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71df4441367b6ed747ccc97431f1a63fc68ee00b/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71df4441367b6ed747ccc97431f1a63fc68ee00b/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=71df4441367b6ed747ccc97431f1a63fc68ee00b", "patch": "@@ -1,3 +1,8 @@\n+2005-04-01  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* treelang/treelang.texi: Fix typos.\n+\t* treelang/treetree.c: Fix comment typos.\n+\n 2005-03-23  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* treetree.c (LANG_HOOKS_TRUTHVALUE_CONVERSION,"}, {"sha": "1f55c4c07c97dd9f48a9e65e3aca6c0b0f42cace", "filename": "gcc/treelang/treelang.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71df4441367b6ed747ccc97431f1a63fc68ee00b/gcc%2Ftreelang%2Ftreelang.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71df4441367b6ed747ccc97431f1a63fc68ee00b/gcc%2Ftreelang%2Ftreelang.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftreelang.texi?ref=71df4441367b6ed747ccc97431f1a63fc68ee00b", "patch": "@@ -294,7 +294,7 @@ and @samp{GNU Compiler Collection (GCC) Internals}.\n \n To install treelang, follow the GCC installation instructions, \n taking care to ensure you specify treelang in the configure step by adding\n-treelang to the list of languages specified by @option{--enable-langauges}, \n+treelang to the list of languages specified by @option{--enable-languages}, \n e.g.@: @samp{--enable-languages=all,treelang}.\n \n If you're generally curious about the future of\n@@ -619,7 +619,7 @@ OR variable = expression OR function_call\n An expression can be a constant or a variable reference or a\n function_call.  Expressions can be combined as a sum of two expressions\n or the difference of two expressions, or an equality test of two\n-expresions.  An assignment is also an expression.  Expresions and operator\n+expressions.  An assignment is also an expression.  Expressions and operator\n precedence work as in C.\n \n @item\n@@ -947,7 +947,7 @@ The files are:\n \n @item\n COPYING.  This is the copyright file, assuming you are going to use the\n-GNU General Public Licence.  You probably need to use the GPL because if\n+GNU General Public License.  You probably need to use the GPL because if\n you use the GCC back end your program and the back end are one program,\n and the back end is GPLed.\n \n@@ -957,7 +957,7 @@ GCC tree, as the main GCC directory has this file.\n @item\n COPYING.LIB.  This is the copyright file for those parts of your program\n that are not to be covered by the GPL, but are instead to be covered by\n-the LGPL (Library or Lesser GPL).  This licence may be appropriate for\n+the LGPL (Library or Lesser GPL).  This license may be appropriate for\n the library routines associated with your compiler. These are the\n routines that are linked with the @emph{output} of the compiler.  Using\n the LGPL for these programs allows programs written using your compiler\n@@ -1006,7 +1006,7 @@ directory.\n @item\n config-lang.in.  This file is read by the configuration progress and must\n be present. You specify the name of your language, the name(s) of the\n-compiler(s) incouding preprocessors you are going to build, whether any,\n+compiler(s) including preprocessors you are going to build, whether any,\n usually generated, files should be excluded from diffs (ie when making\n diff files to send in patches).  Whether the equate 'stagestuff' is used\n is unknown (???).\n@@ -1167,7 +1167,7 @@ to mark it.\n Note that you can also call ggc_mark_tree to mark any of the back end\n internal 'tree' nodes. This routine will follow the branches of the\n trees and mark all the subordinate structures. This is useful for\n-example when you have created a variable declaaration that will be used\n+example when you have created a variable declaration that will be used\n across multiple functions, or for a function declaration (from a\n prototype) that may be used later on. See the next item for more on the\n tree nodes. "}, {"sha": "0a17d548897e60d153023694236bb4cea84a20c5", "filename": "gcc/treelang/treetree.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71df4441367b6ed747ccc97431f1a63fc68ee00b/gcc%2Ftreelang%2Ftreetree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71df4441367b6ed747ccc97431f1a63fc68ee00b/gcc%2Ftreelang%2Ftreetree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftreetree.c?ref=71df4441367b6ed747ccc97431f1a63fc68ee00b", "patch": "@@ -642,7 +642,7 @@ tree_code_get_integer_value (unsigned char* chars, unsigned int length)\n \t\t\t     val & 0xffffffff, (val >> 32) & 0xffffffff);\n }\n \n-/* Return the tree for an expresssion, type EXP_TYPE (see treetree.h)\n+/* Return the tree for an expression, type EXP_TYPE (see treetree.h)\n    with tree type TYPE and with operands1 OP1, OP2 (maybe), OP3 (maybe).  */\n tree\n tree_code_get_expression (unsigned int exp_type,\n@@ -1004,7 +1004,7 @@ pushlevel (int ignore ATTRIBUTE_UNUSED)\n static tree\n poplevel (int keep, int reverse, int functionbody)\n {\n-  /* Points to a BLOCK tree node. This is the BLOCK node construted for the\n+  /* Points to a BLOCK tree node. This is the BLOCK node constructed for the\n      binding level that we are about to exit and which is returned by this\n      routine.  */\n   tree block_node = NULL_TREE;\n@@ -1014,7 +1014,7 @@ poplevel (int keep, int reverse, int functionbody)\n \n   /* Reverse the list of *_DECL nodes if desired.  Note that the ..._DECL\n      nodes chained through the `names' field of current_binding_level are in\n-     reverse order except for PARM_DECL node, which are explicitely stored in\n+     reverse order except for PARM_DECL node, which are explicitly stored in\n      the right order.  */\n   decl_chain = (reverse) ? nreverse (current_binding_level->names)\n \t\t\t : current_binding_level->names;\n@@ -1103,7 +1103,7 @@ pushdecl (tree decl)\n   TREE_CHAIN (decl) = current_binding_level->names;\n   current_binding_level->names = decl;\n \n-  /* For the declartion of a type, set its name if it is not already set. */\n+  /* For the declaration of a type, set its name if it is not already set. */\n \n   if (TREE_CODE (decl) == TYPE_DECL\n       && TYPE_NAME (TREE_TYPE (decl)) == 0)"}]}