{"sha": "887fb69bbc1c7d283aeec2a4e430e02065b6d33b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg3ZmI2OWJiYzFjN2QyODNhZWVjMmE0ZTQzMGUwMjA2NWI2ZDMzYg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-04T06:03:00Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-04T06:03:00Z"}, "message": "dwarf2out.c (incomplete_types, [...]): Use VEC instead of VARRAY.\n\n\t* dwarf2out.c (incomplete_types, retry_incomplete_types,\n\tgen_struct_or_union_type_die, dwarf2out_init): Use VEC instead\n\tof VARRAY.\n\nFrom-SVN: r99210", "tree": {"sha": "5c25f360c55dcf5e37f410f0a3dfa4011e6ae0e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c25f360c55dcf5e37f410f0a3dfa4011e6ae0e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/887fb69bbc1c7d283aeec2a4e430e02065b6d33b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/887fb69bbc1c7d283aeec2a4e430e02065b6d33b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/887fb69bbc1c7d283aeec2a4e430e02065b6d33b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/887fb69bbc1c7d283aeec2a4e430e02065b6d33b/comments", "author": null, "committer": null, "parents": [{"sha": "9acaf84abb649b3300f0c369f37be3b2804c5ee2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9acaf84abb649b3300f0c369f37be3b2804c5ee2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9acaf84abb649b3300f0c369f37be3b2804c5ee2"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "a9350682c072ef8cc0c7061b2ba5720842375ef6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/887fb69bbc1c7d283aeec2a4e430e02065b6d33b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/887fb69bbc1c7d283aeec2a4e430e02065b6d33b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=887fb69bbc1c7d283aeec2a4e430e02065b6d33b", "patch": "@@ -1,3 +1,9 @@\n+2005-05-04  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* dwarf2out.c (incomplete_types, retry_incomplete_types,\n+\tgen_struct_or_union_type_die, dwarf2out_init): Use VEC instead\n+\tof VARRAY.\n+\n 2004-05-03  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/15618"}, {"sha": "f78f86043f1f7ac020561b00b88fe2709a451c66", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/887fb69bbc1c7d283aeec2a4e430e02065b6d33b/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/887fb69bbc1c7d283aeec2a4e430e02065b6d33b/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=887fb69bbc1c7d283aeec2a4e430e02065b6d33b", "patch": "@@ -175,9 +175,10 @@ default_eh_frame_section (void)\n static GTY(()) varray_type used_rtx_varray;\n \n /* A pointer to the base of a list of incomplete types which might be\n-   completed at some later time.  incomplete_types_list needs to be a VARRAY\n-   because we want to tell the garbage collector about it.  */\n-static GTY(()) varray_type incomplete_types;\n+   completed at some later time.  incomplete_types_list needs to be a\n+   VEC(tree,gc) because we want to tell the garbage collector about\n+   it.  */\n+static GTY(()) VEC(tree,gc) *incomplete_types;\n \n /* A pointer to the base of a table of references to declaration\n    scopes.  This table is a display which tracks the nesting\n@@ -10975,8 +10976,8 @@ retry_incomplete_types (void)\n {\n   int i;\n \n-  for (i = VARRAY_ACTIVE_SIZE (incomplete_types) - 1; i >= 0; i--)\n-    gen_type_die (VARRAY_TREE (incomplete_types, i), comp_unit_die);\n+  for (i = VEC_length (tree, incomplete_types) - 1; i >= 0; i--)\n+    gen_type_die (VEC_index (tree, incomplete_types, i), comp_unit_die);\n }\n \n /* Generate a DIE to represent an inlined instance of an enumeration type.  */\n@@ -12122,7 +12123,7 @@ gen_struct_or_union_type_die (tree type, dw_die_ref context_die)\n       /* We don't need to do this for function-local types.  */\n       if (TYPE_STUB_DECL (type)\n \t  && ! decl_function_context (TYPE_STUB_DECL (type)))\n-\tVARRAY_PUSH_TREE (incomplete_types, type);\n+\tVEC_safe_push (tree, gc, incomplete_types, type);\n     }\n }\n \n@@ -13501,7 +13502,7 @@ dwarf2out_init (const char *filename ATTRIBUTE_UNUSED)\n      in this value in dwarf2out_finish.  */\n   comp_unit_die = gen_compile_unit_die (NULL);\n \n-  VARRAY_TREE_INIT (incomplete_types, 64, \"incomplete_types\");\n+  incomplete_types = VEC_alloc (tree, gc, 64);\n \n   VARRAY_RTX_INIT (used_rtx_varray, 32, \"used_rtx_varray\");\n "}]}