{"sha": "054d6b836f08882538082f76547c4414cb52e0ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU0ZDZiODM2ZjA4ODgyNTM4MDgyZjc2NTQ3YzQ0MTRjYjUyZTBiYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-11-10T11:56:14Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-11-10T11:56:14Z"}, "message": "trans.c (lvalue_required_p) <N_Type_Conversion>): Look through it for elementary types as well.\n\n\t* gcc-interface/trans.c (lvalue_required_p) <N_Type_Conversion>): Look\n\tthrough it for elementary types as well.\n\t<N_Unchecked_Type_Conversion>: Adjust to above change.\n\t<N_Allocator>: Likewise.\n\t(gnat_to_gnu): Do not attempt to rewrite boolean literals.\n\nFrom-SVN: r166532", "tree": {"sha": "1a825cfc7c0ddbe33d8a235f9c004fd1fb7fe2f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a825cfc7c0ddbe33d8a235f9c004fd1fb7fe2f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/054d6b836f08882538082f76547c4414cb52e0ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/054d6b836f08882538082f76547c4414cb52e0ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/054d6b836f08882538082f76547c4414cb52e0ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/054d6b836f08882538082f76547c4414cb52e0ba/comments", "author": null, "committer": null, "parents": [{"sha": "5c779305f6a063aed81e1e7025e1a609de83b1d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c779305f6a063aed81e1e7025e1a609de83b1d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c779305f6a063aed81e1e7025e1a609de83b1d9"}], "stats": {"total": 79, "additions": 61, "deletions": 18}, "files": [{"sha": "477aa984e2bfb97669ddf9de4337f0f12cb93436", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/054d6b836f08882538082f76547c4414cb52e0ba/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/054d6b836f08882538082f76547c4414cb52e0ba/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=054d6b836f08882538082f76547c4414cb52e0ba", "patch": "@@ -1,3 +1,11 @@\n+2010-11-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (lvalue_required_p) <N_Type_Conversion>): Look\n+\tthrough it for elementary types as well.\n+\t<N_Unchecked_Type_Conversion>: Adjust to above change.\n+\t<N_Allocator>: Likewise.\n+\t(gnat_to_gnu): Do not attempt to rewrite boolean literals.\n+\n 2010-11-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity): Do not set DECL_ARTIFICIAL"}, {"sha": "5d36595a7d1a31a888e7c4945172ccb200c862d1", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/054d6b836f08882538082f76547c4414cb52e0ba/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/054d6b836f08882538082f76547c4414cb52e0ba/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=054d6b836f08882538082f76547c4414cb52e0ba", "patch": "@@ -829,29 +829,25 @@ lvalue_required_p (Node_Id gnat_node, tree gnu_type, bool constant,\n \t      || (Is_Composite_Type (Underlying_Type (Etype (gnat_node)))\n \t\t  && Is_Atomic (Entity (Name (gnat_parent)))));\n \n-    case N_Type_Conversion:\n-    case N_Qualified_Expression:\n-      /* We must look through all conversions for composite types because we\n-\t may need to bypass an intermediate conversion to a narrower record\n-\t type that is generated for a formal conversion, e.g. the conversion\n-\t to the root type of a hierarchy of tagged types generated for the\n-\t formal conversion to the class-wide type.  */\n-      if (!Is_Composite_Type (Underlying_Type (Etype (gnat_node))))\n-\treturn 0;\n+    case N_Unchecked_Type_Conversion:\n+\tif (!constant)\n+\t  return 1;\n \n       /* ... fall through ... */\n \n-    case N_Unchecked_Type_Conversion:\n-      return (!constant\n-\t      || lvalue_required_p (gnat_parent,\n-\t\t\t\t    get_unpadded_type (Etype (gnat_parent)),\n-\t\t\t\t    constant, address_of_constant, aliased));\n+    case N_Type_Conversion:\n+    case N_Qualified_Expression:\n+      /* We must look through all conversions because we may need to bypass\n+\t an intermediate conversion that is meant to be purely formal.  */\n+     return lvalue_required_p (gnat_parent,\n+\t\t\t       get_unpadded_type (Etype (gnat_parent)),\n+\t\t\t       constant, address_of_constant, aliased);\n \n     case N_Allocator:\n-      /* We should only reach here through the N_Qualified_Expression case\n-\t and, therefore, only for composite types.  Force an lvalue since\n-\t a block-copy to the newly allocated area of memory is made.  */\n-      return 1;\n+      /* We should only reach here through the N_Qualified_Expression case.\n+\t Force an lvalue for composite types since a block-copy to the newly\n+\t allocated area of memory is made.  */\n+      return Is_Composite_Type (Underlying_Type (Etype (gnat_node)));\n \n    case N_Explicit_Dereference:\n       /* We look through dereferences for address of constant because we need\n@@ -5781,6 +5777,7 @@ gnat_to_gnu (Node_Id gnat_node)\n      so that the code just below can put the location information of the\n      reference to B on the inequality operator for better debug info.  */\n   if (!optimize\n+      && TREE_CODE (gnu_result) != INTEGER_CST\n       && (kind == N_Identifier\n \t  || kind == N_Expanded_Name\n \t  || kind == N_Explicit_Dereference"}, {"sha": "f3a0b1258d9072694ed9039414c6e5b8a56ed42e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/054d6b836f08882538082f76547c4414cb52e0ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/054d6b836f08882538082f76547c4414cb52e0ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=054d6b836f08882538082f76547c4414cb52e0ba", "patch": "@@ -1,3 +1,7 @@\n+2010-11-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/boolean_conv.adb: New test.\n+\n 2010-11-10  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* gcc.dg/stack-usage-1.c: Define SIZE for s390 and s390x."}, {"sha": "7a9b4f3e87a291e8db2364caf9a18131f2f0804a", "filename": "gcc/testsuite/gnat.dg/boolean_conv.adb", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/054d6b836f08882538082f76547c4414cb52e0ba/gcc%2Ftestsuite%2Fgnat.dg%2Fboolean_conv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/054d6b836f08882538082f76547c4414cb52e0ba/gcc%2Ftestsuite%2Fgnat.dg%2Fboolean_conv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fboolean_conv.adb?ref=054d6b836f08882538082f76547c4414cb52e0ba", "patch": "@@ -0,0 +1,34 @@\n+-- { dg-do run }\n+\n+with System; use System;\n+\n+procedure Boolean_Conv is\n+  subtype B1 is Boolean;\n+  subtype B2 is Boolean;\n+  A0, A1, A2 : Address;\n+\n+  B : aliased B1;\n+\n+  procedure P2 (X2 : access B2) is\n+  begin\n+     A2 := X2.all'Address;\n+  end P2;\n+\n+  procedure P1 (X1 : access B1) is\n+  begin\n+     A1 := X1.all'Address;\n+     P2 (B2 (X1.all)'Unrestricted_Access);\n+  end P1;\n+\n+begin\n+   A0 := B'Address;\n+   P1 (B'Access);\n+\n+   if A1 /= A0 then\n+      raise Program_Error;\n+   end if;\n+\n+   if A2 /= A0 then\n+      raise Program_Error;\n+   end if;\n+end;"}]}