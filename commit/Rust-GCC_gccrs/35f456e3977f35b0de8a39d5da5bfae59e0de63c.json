{"sha": "35f456e3977f35b0de8a39d5da5bfae59e0de63c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVmNDU2ZTM5NzdmMzViMGRlOGEzOWQ1ZGE1YmZhZTU5ZTBkZTYzYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-01T00:44:10Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-01T00:44:10Z"}, "message": "(one_cmpldi2): New pattern.\n\n({a,l}shrdi{3,_const}): Allow 63 as shift count.\n\nFrom-SVN: r9854", "tree": {"sha": "b4f654b5fc9a8540f3443e3e5040dcdbe7010639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4f654b5fc9a8540f3443e3e5040dcdbe7010639"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35f456e3977f35b0de8a39d5da5bfae59e0de63c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f456e3977f35b0de8a39d5da5bfae59e0de63c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f456e3977f35b0de8a39d5da5bfae59e0de63c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f456e3977f35b0de8a39d5da5bfae59e0de63c/comments", "author": null, "committer": null, "parents": [{"sha": "e65886db7dfb5cd98b806945386a2e294074e234", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e65886db7dfb5cd98b806945386a2e294074e234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e65886db7dfb5cd98b806945386a2e294074e234"}], "stats": {"total": 50, "additions": 37, "deletions": 13}, "files": [{"sha": "fab11593df0865f25625915766cf93b51f744ab3", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 37, "deletions": 13, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f456e3977f35b0de8a39d5da5bfae59e0de63c/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f456e3977f35b0de8a39d5da5bfae59e0de63c/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=35f456e3977f35b0de8a39d5da5bfae59e0de63c", "patch": "@@ -4009,6 +4009,24 @@\n \f\n ;; one complement instructions\n \n+;; \"one_cmpldi2\" is only here to help combine().\n+(define_insn \"one_cmpldi2\"\n+  [(set (match_operand:DI 0 \"general_operand\" \"=dm\")\n+\t(not:DI (match_operand:DI 1 \"general_operand\" \"0\")))]\n+  \"\"\n+  \"*\n+{\n+  CC_STATUS_INIT;\n+  if (GET_CODE (operands[0]) == REG)\n+    operands[2] = gen_rtx (REG, SImode, REGNO (operands[0]) + 1);\n+  else if (GET_CODE (XEXP (operands[0], 0)) == POST_INC\n+        || GET_CODE (XEXP (operands[0], 0)) == PRE_DEC)\n+    operands[1] = operands[0];\n+  else\n+    operands[1] = adj_offsettable_operand (operands[0], 4);\n+  return \\\"not%.l %1\\;not%.l %0\\\";\n+}\")\n+\n (define_insn \"one_cmplsi2\"\n   [(set (match_operand:SI 0 \"general_operand\" \"=dm\")\n \t(not:SI (match_operand:SI 1 \"general_operand\" \"0\")))]\n@@ -4293,12 +4311,14 @@\n   [(set (match_operand:DI 0 \"general_operand\" \"=d\")\n \t(ashiftrt:DI (match_operand:DI 1 \"general_operand\" \"0\")\n \t\t     (match_operand 2 \"const_int_operand\" \"n\")))]\n-  \"(INTVAL (operands[2]) == 1\n-    || INTVAL (operands[2]) == 8 || INTVAL (operands[2]) == 16\n-  || INTVAL (operands[2]) == 2 || INTVAL (operands[2]) == 3)\"\n+  \"(INTVAL (operands[2]) == 1 || INTVAL (operands[2]) == 2\n+    || INTVAL (operands[2]) == 3 || INTVAL (operands[2]) == 8\n+    || INTVAL (operands[2]) == 16 || INTVAL (operands[2]) == 63)\"\n   \"*\n {\n   operands[1] = gen_rtx (REG, SImode, REGNO (operands[0]) + 1);\n+  if (INTVAL (operands[2]) == 63)\n+    return \\\"add%.l %0,%0\\;subx%.l %0,%0\\;move%.l %0,%1\\\";\n   CC_STATUS_INIT;\n   if (INTVAL (operands[2]) == 1)\n     return \\\"asr%.l %#1,%0\\;roxr%.l %#1,%1\\\";\n@@ -4320,9 +4340,10 @@\n   \"\n {\n   if (GET_CODE (operands[2]) != CONST_INT\n-  || (INTVAL (operands[2]) != 1 && INTVAL (operands[2]) != 32\n-     && INTVAL (operands[2]) != 8 && INTVAL (operands[2]) != 16\n-     && INTVAL (operands[2]) != 2 && INTVAL (operands[2]) != 3))\n+  || (INTVAL (operands[2]) != 1 && INTVAL (operands[2]) != 2\n+     && INTVAL (operands[2]) != 3 && INTVAL (operands[2]) != 8\n+     && INTVAL (operands[2]) != 16 && INTVAL (operands[2]) != 32\n+     && INTVAL (operands[2]) != 63))\n     FAIL;\n } \")\n \n@@ -4434,13 +4455,15 @@\n   [(set (match_operand:DI 0 \"general_operand\" \"=d\")\n \t(lshiftrt:DI (match_operand:DI 1 \"general_operand\" \"0\")\n \t\t     (match_operand 2 \"const_int_operand\" \"n\")))]\n-  \"(INTVAL (operands[2]) == 1 \n-    || INTVAL (operands[2]) == 8 || INTVAL (operands[2]) == 16\n-    || INTVAL (operands[2]) == 2 || INTVAL (operands[2]) == 3)\"\n+  \"(INTVAL (operands[2]) == 1 || INTVAL (operands[2]) == 2\n+    || INTVAL (operands[2]) == 3 || INTVAL (operands[2]) == 8\n+    || INTVAL (operands[2]) == 16 || INTVAL (operands[2]) == 63)\"\n   \"*\n {\n-  CC_STATUS_INIT;\n   operands[1] = gen_rtx (REG, SImode, REGNO (operands[0]) + 1);\n+  if (INTVAL (operands[2]) == 63)\n+    return \\\"add%.l %0,%0\\;clr%.l %0\\;clr%.l %1\\;addx%.l %1,%1\\\";\n+  CC_STATUS_INIT;\n   if (INTVAL (operands[2]) == 1)\n     return \\\"lsr%.l %#1,%0\\;roxr%.l %#1,%1\\\";\n   else if (INTVAL (operands[2]) == 8)\n@@ -4461,9 +4484,10 @@\n   \"\n {\n   if (GET_CODE (operands[2]) != CONST_INT\n-  || (INTVAL (operands[2]) != 1 && INTVAL (operands[2]) != 32\n-     && INTVAL (operands[2]) != 8 && INTVAL (operands[2]) != 16\n-      && INTVAL (operands[2]) != 2 && INTVAL (operands[2]) != 3))\n+  || (INTVAL (operands[2]) != 1 && INTVAL (operands[2]) != 2\n+     && INTVAL (operands[2]) != 3 && INTVAL (operands[2]) != 8\n+     && INTVAL (operands[2]) != 16 && INTVAL (operands[2]) != 32\n+     && INTVAL (operands[2]) != 63))\n     FAIL;\n } \")\n "}]}