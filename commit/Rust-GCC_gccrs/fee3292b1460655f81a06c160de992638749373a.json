{"sha": "fee3292b1460655f81a06c160de992638749373a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVlMzI5MmIxNDYwNjU1ZjgxYTA2YzE2MGRlOTkyNjM4NzQ5MzczYQ==", "commit": {"author": {"name": "Daniel Kraft", "email": "d@domob.eu", "date": "2008-08-22T20:36:12Z"}, "committer": {"name": "Daniel Kraft", "email": "domob@gcc.gnu.org", "date": "2008-08-22T20:36:12Z"}, "message": "re PR fortran/30239 (duplicate data type assignment not detected)\n\n2008-08-22  Daniel Kraft  <d@domob.eu>\n\n\tPR fortran/30239\n\t* symbol.c (gfc_add_type): Warn on -Wsurprising if a function-result\n\ttype is re-declared but neither -pedantic nor -std=f* is given and so\n\tthis is no error.\n\t* invoke.texi (-Wsurprising): Document this new behaviour.\n\nFrom-SVN: r139499", "tree": {"sha": "c47e4e93dbfac7b1bb17ee74e10bfa450db5d256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c47e4e93dbfac7b1bb17ee74e10bfa450db5d256"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fee3292b1460655f81a06c160de992638749373a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee3292b1460655f81a06c160de992638749373a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fee3292b1460655f81a06c160de992638749373a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee3292b1460655f81a06c160de992638749373a/comments", "author": {"login": "domob1812", "id": 4943644, "node_id": "MDQ6VXNlcjQ5NDM2NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domob1812", "html_url": "https://github.com/domob1812", "followers_url": "https://api.github.com/users/domob1812/followers", "following_url": "https://api.github.com/users/domob1812/following{/other_user}", "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}", "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions", "organizations_url": "https://api.github.com/users/domob1812/orgs", "repos_url": "https://api.github.com/users/domob1812/repos", "events_url": "https://api.github.com/users/domob1812/events{/privacy}", "received_events_url": "https://api.github.com/users/domob1812/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b410dd0ecd3b952c53d2a201756efb7dc24f8b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b410dd0ecd3b952c53d2a201756efb7dc24f8b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b410dd0ecd3b952c53d2a201756efb7dc24f8b4"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "67c1facb17af92b0c38c14d36e1bee32def82472", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee3292b1460655f81a06c160de992638749373a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee3292b1460655f81a06c160de992638749373a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fee3292b1460655f81a06c160de992638749373a", "patch": "@@ -1,3 +1,11 @@\n+2008-08-22  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/30239\n+\t* symbol.c (gfc_add_type): Warn on -Wsurprising if a function-result\n+\ttype is re-declared but neither -pedantic nor -std=f* is given and so\n+\tthis is no error.\n+\t* invoke.texi (-Wsurprising): Document this new behaviour.\n+\n 2008-08-22  Daniel Kraft  <d@domob.eu>\n \n \t* gfortran.h (in_prefix): Removed from this header."}, {"sha": "b854ce4b3b88e749c238d99e2a949a92762a8478", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee3292b1460655f81a06c160de992638749373a/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee3292b1460655f81a06c160de992638749373a/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=fee3292b1460655f81a06c160de992638749373a", "patch": "@@ -757,6 +757,10 @@ A LOGICAL SELECT construct has three CASE statements.\n \n @item\n A TRANSFER specifies a source that is shorter than the destination.\n+\n+@item\n+The type of a function result is declared more than once with the same type.  If\n+@option{-pedantic} or standard-conforming mode is enabled, this is an error.\n @end itemize\n \n @item -Wtabs"}, {"sha": "e16406d471694b2968c5a796f13b6c8b7c53eedc", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee3292b1460655f81a06c160de992638749373a/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee3292b1460655f81a06c160de992638749373a/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=fee3292b1460655f81a06c160de992638749373a", "patch": "@@ -1540,9 +1540,11 @@ gfc_add_type (gfc_symbol *sym, gfc_typespec *ts, locus *where)\n \t  gfc_error (msg, sym->name, where, gfc_basic_typename (sym->ts.type));\n \t  return FAILURE;\n \t}\n-      else if (gfc_notify_std (GFC_STD_GNU, msg, sym->name, where,\n-\t\t\t       gfc_basic_typename (sym->ts.type)) == FAILURE)\n+      if (gfc_notify_std (GFC_STD_GNU, msg, sym->name, where,\n+\t      \t\t  gfc_basic_typename (sym->ts.type)) == FAILURE)\n \treturn FAILURE;\n+      if (gfc_option.warn_surprising)\n+\tgfc_warning (msg, sym->name, where, gfc_basic_typename (sym->ts.type));\n     }\n \n   flavor = sym->attr.flavor;"}, {"sha": "4ee805b5b4eeb5d1b8f2102076ee87913ed6ddb4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee3292b1460655f81a06c160de992638749373a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee3292b1460655f81a06c160de992638749373a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fee3292b1460655f81a06c160de992638749373a", "patch": "@@ -1,3 +1,9 @@\n+2008-08-22  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/30239\n+\t* gfortran.dg/duplicate_type_1.f90: New test.\n+\t* gfortran.dg/duplicate_type_2.f90: New test.\n+\n 2008-08-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/tree-ssa/pr21658.c (dg-options): Use -fdump-tree-ccp1-details."}, {"sha": "c76c45d18e08b0811d3d322cc643a7501971023c", "filename": "gcc/testsuite/gfortran.dg/duplicate_type_1.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee3292b1460655f81a06c160de992638749373a/gcc%2Ftestsuite%2Fgfortran.dg%2Fduplicate_type_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee3292b1460655f81a06c160de992638749373a/gcc%2Ftestsuite%2Fgfortran.dg%2Fduplicate_type_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fduplicate_type_1.f90?ref=fee3292b1460655f81a06c160de992638749373a", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f95\" }\n+\n+! PR fortran/30239\n+! Check for errors when a symbol gets declared a type twice, even if it\n+! is the same.\n+\n+INTEGER FUNCTION foo ()\n+  IMPLICIT NONE\n+  INTEGER :: foo ! { dg-error \"basic type of\" }\n+  INTEGER :: foo ! { dg-error \"basic type of\" }\n+  foo = 42\n+END FUNCTION foo\n+\n+INTEGER FUNCTION bar () RESULT (x)\n+  IMPLICIT NONE\n+  INTEGER :: x ! { dg-error \"basic type of\" }\n+\n+  INTEGER :: y\n+  INTEGER :: y ! { dg-error \"basic type of\" }\n+\n+  x = 42\n+END FUNCTION bar"}, {"sha": "5b86dc6e775bc060a86db47beedbc1dd05e5fd90", "filename": "gcc/testsuite/gfortran.dg/duplicate_type_2.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee3292b1460655f81a06c160de992638749373a/gcc%2Ftestsuite%2Fgfortran.dg%2Fduplicate_type_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee3292b1460655f81a06c160de992638749373a/gcc%2Ftestsuite%2Fgfortran.dg%2Fduplicate_type_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fduplicate_type_2.f90?ref=fee3292b1460655f81a06c160de992638749373a", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do compile }\n+! { dg-options \"-std=gnu -Wsurprising\" }\n+\n+! PR fortran/30239\n+! Check for errors when a symbol gets declared a type twice, even if it\n+! is the same.\n+\n+INTEGER FUNCTION foo ()\n+  IMPLICIT NONE\n+  INTEGER :: foo ! { dg-warning \"basic type of\" }\n+  INTEGER :: foo ! { dg-warning \"basic type of\" }\n+  foo = 42\n+END FUNCTION foo\n+\n+INTEGER FUNCTION bar () RESULT (x)\n+  IMPLICIT NONE\n+  INTEGER :: x ! { dg-warning \"basic type of\" }\n+\n+  INTEGER :: y\n+  INTEGER :: y ! { dg-error \"basic type of\" }\n+\n+  x = 42\n+END FUNCTION bar"}]}