{"sha": "9da99f7d83904a9b4b3e4479c54ecf2934f9281e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRhOTlmN2Q4MzkwNGE5YjRiM2U0NDc5YzU0ZWNmMjkzNGY5MjgxZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-05-01T12:56:12Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-05-01T12:56:12Z"}, "message": "cp-tree.def (USING_STMT): New statement node.\n\ncp:\n\t* cp-tree.def (USING_STMT): New statement node.\n\t* cp-tree.h (USING_STMT_NAMESPACE): New macro.\n\t* decl2.c (do_using_directive): Add USING_STMT to statement\n\ttree. Don't emit errors when processing template decl.\n\t* pt.c (tsubst_expr, USING_STMT case): New case.\n\t* semantics.c (cp_expand_stmt, USING_STMT case): New case.\ntestsuite:\n\t* g++.old-deja/g++.ns/template17.C: New test.\n\nFrom-SVN: r41724", "tree": {"sha": "ff484f8e23f30657ae172dcf3632428050102832", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff484f8e23f30657ae172dcf3632428050102832"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9da99f7d83904a9b4b3e4479c54ecf2934f9281e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9da99f7d83904a9b4b3e4479c54ecf2934f9281e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9da99f7d83904a9b4b3e4479c54ecf2934f9281e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/comments", "author": null, "committer": null, "parents": [{"sha": "6496a589dfe14041da10691b70be2e1825829c2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6496a589dfe14041da10691b70be2e1825829c2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6496a589dfe14041da10691b70be2e1825829c2b"}], "stats": {"total": 76, "additions": 72, "deletions": 4}, "files": [{"sha": "c3b8cf0267d4ea9be5207287685fe6fa82bf9c13", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9da99f7d83904a9b4b3e4479c54ecf2934f9281e", "patch": "@@ -1,3 +1,12 @@\n+2001-05-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* cp-tree.def (USING_STMT): New statement node.\n+\t* cp-tree.h (USING_STMT_NAMESPACE): New macro.\n+\t* decl2.c (do_using_directive): Add USING_STMT to statement\n+\ttree. Don't emit errors when processing template decl.\n+\t* pt.c (tsubst_expr, USING_STMT case): New case.\n+\t* semantics.c (cp_expand_stmt, USING_STMT case): New case.\n+\n 2001-05-01  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* call.c (build_new_op): Convert args from reference here."}, {"sha": "ee104f57b0cb12276ef1194afe94858b17db2dd1", "filename": "gcc/cp/cp-tree.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Fcp%2Fcp-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Fcp%2Fcp-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.def?ref=9da99f7d83904a9b4b3e4479c54ecf2934f9281e", "patch": "@@ -171,6 +171,9 @@ DEFTREECODE (TYPEOF_TYPE, \"typeof_type\", 't', 0)\n    This is not an alias, but is later expanded into multiple aliases.  */\n DEFTREECODE (USING_DECL, \"using_decl\", 'd', 0)\n \n+/* A using directive. The operand is USING_STMT_NAMESPACE. */     \n+DEFTREECODE (USING_STMT, \"using_directive\", 'e', 1)\n+\n /* An un-parsed default argument.  Looks like an IDENTIFIER_NODE.  */\n DEFTREECODE (DEFAULT_ARG, \"default_arg\", 'x', 2)\n "}, {"sha": "69623fbc335ae0b6997ab4c0dcd0443856db7465", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=9da99f7d83904a9b4b3e4479c54ecf2934f9281e", "patch": "@@ -3051,14 +3051,15 @@ extern int flag_new_for_scope;\n #define EH_SPEC_STMTS(NODE)     TREE_OPERAND (EH_SPEC_BLOCK_CHECK (NODE), 0)\n #define EH_SPEC_RAISES(NODE)    TREE_OPERAND (EH_SPEC_BLOCK_CHECK (NODE), 1)\n \n+#define USING_STMT_NAMESPACE(NODE) TREE_OPERAND (USING_STMT_CHECK (NODE), 0)\n+\n /* Nonzero if this try block is a function try block.  */\n #define FN_TRY_BLOCK_P(NODE)    TREE_LANG_FLAG_3 (TRY_BLOCK_CHECK (NODE))\n #define HANDLER_PARMS(NODE)     TREE_OPERAND (HANDLER_CHECK (NODE), 0)\n #define HANDLER_BODY(NODE)      TREE_OPERAND (HANDLER_CHECK (NODE), 1)\n #define SUBOBJECT_CLEANUP(NODE) TREE_OPERAND (SUBOBJECT_CHECK (NODE), 0)\n #define START_CATCH_TYPE(NODE)  TREE_TYPE (START_CATCH_STMT_CHECK (NODE))\n \n-\n /* Nonzero if this CTOR_STMT is for the beginning of a constructor.  */\n #define CTOR_BEGIN_P(NODE) \\\n   (TREE_LANG_FLAG_0 (CTOR_STMT_CHECK (NODE)))"}, {"sha": "bc6a989746712854ac39ff237b75326f53b78d29", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=9da99f7d83904a9b4b3e4479c54ecf2934f9281e", "patch": "@@ -5204,18 +5204,23 @@ do_using_directive (namespace)\n {\n   if (namespace == fake_std_node)\n     return;\n+  if (building_stmt_tree ())\n+    add_stmt (build_stmt (USING_STMT, namespace));\n+  \n   /* using namespace A::B::C; */\n   if (TREE_CODE (namespace) == SCOPE_REF)\n       namespace = TREE_OPERAND (namespace, 1);\n   if (TREE_CODE (namespace) == IDENTIFIER_NODE)\n     {\n       /* Lookup in lexer did not find a namespace. */\n-      cp_error (\"namespace `%T' undeclared\", namespace);\n+      if (!processing_template_decl)\n+\tcp_error (\"namespace `%T' undeclared\", namespace);\n       return;\n     }\n   if (TREE_CODE (namespace) != NAMESPACE_DECL)\n     {\n-      cp_error (\"`%T' is not a namespace\", namespace);\n+      if (!processing_template_decl)\n+\tcp_error (\"`%T' is not a namespace\", namespace);\n       return;\n     }\n   namespace = ORIGINAL_NAMESPACE (namespace);"}, {"sha": "c0cd2ebc42dafd3827dc548a6441fc7b0d9bbb83", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=9da99f7d83904a9b4b3e4479c54ecf2934f9281e", "patch": "@@ -6886,7 +6886,7 @@ tsubst_copy (t, args, complain, in_decl)\n \n     case LOOKUP_EXPR:\n       {\n-\t/* We must tsbust into a LOOKUP_EXPR in case the names to\n+\t/* We must tsubst into a LOOKUP_EXPR in case the names to\n \t   which it refers is a conversion operator; in that case the\n \t   name will change.  We avoid making unnecessary copies,\n \t   however.  */\n@@ -7211,6 +7211,12 @@ tsubst_expr (t, args, complain, in_decl)\n \t\t\t\t     args, complain, in_decl));\n       break;\n \n+    case USING_STMT:\n+      prep_stmt (t);\n+      do_using_directive (tsubst_expr (USING_STMT_NAMESPACE (t),\n+\t\t\t\t       args, complain, in_decl));\n+      break;\n+      \n     case DECL_STMT:\n       {\n \ttree decl;"}, {"sha": "8b7e99bef2cb0d8be02df673033c66ab2fb8ae32", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=9da99f7d83904a9b4b3e4479c54ecf2934f9281e", "patch": "@@ -2220,6 +2220,9 @@ cp_expand_stmt (t)\n       genrtl_named_return_value ();\n       break;\n \n+    case USING_STMT:\n+      break;\n+    \n     default:\n       my_friendly_abort (19990810);\n       break;"}, {"sha": "33106b4009d4b83878e7b6d6823edcd0b36e3717", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9da99f7d83904a9b4b3e4479c54ecf2934f9281e", "patch": "@@ -1,3 +1,7 @@\n+2001-05-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.ns/template17.C: New test.\n+\n 2001-05-01  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.pt/ref4.C: New test."}, {"sha": "11f21c921e109a6ea1ce9807058ee9cbb30317f2", "filename": "gcc/testsuite/g++.old-deja/g++.ns/template17.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da99f7d83904a9b4b3e4479c54ecf2934f9281e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate17.C?ref=9da99f7d83904a9b4b3e4479c54ecf2934f9281e", "patch": "@@ -0,0 +1,37 @@\n+// Build don't link:\n+// \n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 29 Apr 2001 <nathan@codesourcery.com>\n+\n+// Bug 2258. We failed to implement using directives inside template\n+// functions. This makes us regress now that ::std is real.\n+\n+namespace thing\n+{\n+  template <typename T> T end2 (T);\n+}\n+namespace whatever \n+{\n+}\n+\n+template <typename T> void fn (T, T (*)(T));\n+\n+template <class T> void mycout(const T& data)\n+{\n+  using namespace thing;\n+  using namespace whatever;\n+  \n+  fn (data, end2);\n+  fn (data, end3);\n+}\n+\n+namespace whatever\n+{\n+  template <typename T> T end3 (T);\n+}\n+\n+int main()\n+{\n+  double data = 5.0;\n+  mycout(data);\n+}"}]}