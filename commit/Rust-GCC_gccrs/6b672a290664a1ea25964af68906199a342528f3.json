{"sha": "6b672a290664a1ea25964af68906199a342528f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI2NzJhMjkwNjY0YTFlYTI1OTY0YWY2ODkwNjE5OWEzNDI1MjhmMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-09-10T08:00:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-09-10T08:00:40Z"}, "message": "re PR tree-optimization/37353 (ICE: vector VEC(gimple,base) push domain error, in tree_call_cdce at tree-call-cdce.c:890)\n\n\tPR tree-optimization/37353\n\t* tree-call-cdce.c (cond_dead_built_in_calls): Remove.\n\t(shrink_wrap_conditional_dead_built_in_calls): Add calls argument, use\n\tcalls instead of cond_dead_built_in_calls.\n\t(tree_call_cdce): Add cond_dead_built_in_calls automatic variable,\n\tinitalize the vector only before adding first entry.  Use VEC_safe_push\n\tinstead of VEC_quick_push.  Pass cond_dead_built_in_calls to\n\tshrink_wrap_conditional_dead_built_in_calls call.\n\n\t* gcc.dg/pr37353.c: New test.\n\nFrom-SVN: r140208", "tree": {"sha": "e64e8401f364f5c34df73d5e3bc338cfbb095f89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e64e8401f364f5c34df73d5e3bc338cfbb095f89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b672a290664a1ea25964af68906199a342528f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b672a290664a1ea25964af68906199a342528f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b672a290664a1ea25964af68906199a342528f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b672a290664a1ea25964af68906199a342528f3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5392e447a273eca3e6f9a7b9e73c528f42c60a6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5392e447a273eca3e6f9a7b9e73c528f42c60a6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5392e447a273eca3e6f9a7b9e73c528f42c60a6e"}], "stats": {"total": 52, "additions": 43, "deletions": 9}, "files": [{"sha": "8c231a2b2e5949a3db87b576171055d051996fb3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b672a290664a1ea25964af68906199a342528f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b672a290664a1ea25964af68906199a342528f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b672a290664a1ea25964af68906199a342528f3", "patch": "@@ -1,3 +1,14 @@\n+2008-09-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/37353\n+\t* tree-call-cdce.c (cond_dead_built_in_calls): Remove.\n+\t(shrink_wrap_conditional_dead_built_in_calls): Add calls argument, use\n+\tcalls instead of cond_dead_built_in_calls.\n+\t(tree_call_cdce): Add cond_dead_built_in_calls automatic variable,\n+\tinitalize the vector only before adding first entry.  Use VEC_safe_push\n+\tinstead of VEC_quick_push.  Pass cond_dead_built_in_calls to\n+\tshrink_wrap_conditional_dead_built_in_calls call.\n+\n 2008-09-10  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/37385"}, {"sha": "51332f366d3c98b8c46323127e1bdf56fb258b8d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b672a290664a1ea25964af68906199a342528f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b672a290664a1ea25964af68906199a342528f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b672a290664a1ea25964af68906199a342528f3", "patch": "@@ -1,3 +1,8 @@\n+2008-09-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/37353\n+\t* gcc.dg/pr37353.c: New test.\n+\n 2008-09-10  Martin Michlmayr <tbm@cyrius.com>\n \t    Ira Rosen  <irar@il.ibm.com>\n "}, {"sha": "07d73d0ebe7b33f9d5b5af97838af01ff5797009", "filename": "gcc/testsuite/gcc.dg/pr37353.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b672a290664a1ea25964af68906199a342528f3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37353.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b672a290664a1ea25964af68906199a342528f3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37353.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37353.c?ref=6b672a290664a1ea25964af68906199a342528f3", "patch": "@@ -0,0 +1,15 @@\n+/* PR tree-optimization/37353 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+extern double exp (double);\n+\n+#define A exp (arg);\n+#define B A A A A A A A A A A\n+#define C B B B B B B B B B B\n+\n+void\n+foo (double arg)\n+{\n+  C\n+}"}, {"sha": "da66138a466d46ee7af6418ee8d8c0b0ef6581de", "filename": "gcc/tree-call-cdce.c", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b672a290664a1ea25964af68906199a342528f3/gcc%2Ftree-call-cdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b672a290664a1ea25964af68906199a342528f3/gcc%2Ftree-call-cdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-call-cdce.c?ref=6b672a290664a1ea25964af68906199a342528f3", "patch": "@@ -99,8 +99,6 @@ typedef struct input_domain\n   bool is_ub_inclusive;\n } inp_domain;\n \n-static VEC (gimple, heap) *cond_dead_built_in_calls;\n-\n /* A helper function to construct and return an input\n    domain object.  LB is the lower bound, HAS_LB is \n    a boolean flag indicating if the lower bound exists,\n@@ -844,18 +842,18 @@ shrink_wrap_one_built_in_call (gimple bi_call)\n    wrapping transformation.  */\n \n static bool\n-shrink_wrap_conditional_dead_built_in_calls (void)\n+shrink_wrap_conditional_dead_built_in_calls (VEC (gimple, heap) *calls)\n {\n   bool changed = false;\n   unsigned i = 0;\n \n-  unsigned n = VEC_length (gimple, cond_dead_built_in_calls);\n+  unsigned n = VEC_length (gimple, calls);\n   if (n == 0) \n     return false;\n \n   for (; i < n ; i++)\n     {\n-      gimple bi_call = VEC_index (gimple, cond_dead_built_in_calls, i);\n+      gimple bi_call = VEC_index (gimple, calls, i);\n       changed |= shrink_wrap_one_built_in_call (bi_call);\n     }\n \n@@ -870,8 +868,7 @@ tree_call_cdce (void)\n   basic_block bb;\n   gimple_stmt_iterator i;\n   bool something_changed = false;\n-  cond_dead_built_in_calls = VEC_alloc (gimple, heap, 64);\n-\n+  VEC (gimple, heap) *cond_dead_built_in_calls = NULL;\n   FOR_EACH_BB (bb)\n     {\n       /* Collect dead call candidates.  */\n@@ -887,12 +884,18 @@ tree_call_cdce (void)\n                   print_gimple_stmt (dump_file, stmt, 0, TDF_SLIM);\n                   fprintf (dump_file, \"\\n\");\n                 }\n-              VEC_quick_push (gimple, cond_dead_built_in_calls, stmt);\n+\t      if (cond_dead_built_in_calls == NULL)\n+\t\tcond_dead_built_in_calls = VEC_alloc (gimple, heap, 64);\n+\t      VEC_safe_push (gimple, heap, cond_dead_built_in_calls, stmt);\n             }\n \t}\n     }\n \n-  something_changed = shrink_wrap_conditional_dead_built_in_calls ();\n+  if (cond_dead_built_in_calls == NULL)\n+    return 0;\n+\n+  something_changed\n+    = shrink_wrap_conditional_dead_built_in_calls (cond_dead_built_in_calls);\n \n   VEC_free (gimple, heap, cond_dead_built_in_calls);\n "}]}