{"sha": "4484e9b6a8f4845884ceb40453280596b9ad6bf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ4NGU5YjZhOGY0ODQ1ODg0Y2ViNDA0NTMyODA1OTZiOWFkNmJmNQ==", "commit": {"author": {"name": "Markus F.X.J. Oberhumer", "email": "markus@oberhumer.com", "date": "2005-04-24T17:35:34Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-04-24T17:35:34Z"}, "message": "mangle.c (write_builtin_type): Handle integer types which are not one of the shared integer type nodes and...\n\n\t* mangle.c (write_builtin_type): Handle integer types which are\n\tnot one of the shared integer type nodes and emit a \"vendor\n\textended builtin type\" with an encoding in the form of \"u5int96\".\n\nFrom-SVN: r98665", "tree": {"sha": "bb1fb372faf60da153d48910bcde48e7db0a990a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb1fb372faf60da153d48910bcde48e7db0a990a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4484e9b6a8f4845884ceb40453280596b9ad6bf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4484e9b6a8f4845884ceb40453280596b9ad6bf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4484e9b6a8f4845884ceb40453280596b9ad6bf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4484e9b6a8f4845884ceb40453280596b9ad6bf5/comments", "author": {"login": "markus-oberhumer", "id": 2130496, "node_id": "MDQ6VXNlcjIxMzA0OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/2130496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markus-oberhumer", "html_url": "https://github.com/markus-oberhumer", "followers_url": "https://api.github.com/users/markus-oberhumer/followers", "following_url": "https://api.github.com/users/markus-oberhumer/following{/other_user}", "gists_url": "https://api.github.com/users/markus-oberhumer/gists{/gist_id}", "starred_url": "https://api.github.com/users/markus-oberhumer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markus-oberhumer/subscriptions", "organizations_url": "https://api.github.com/users/markus-oberhumer/orgs", "repos_url": "https://api.github.com/users/markus-oberhumer/repos", "events_url": "https://api.github.com/users/markus-oberhumer/events{/privacy}", "received_events_url": "https://api.github.com/users/markus-oberhumer/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7da4bf7dd7624094cd3422246af9f10c8538eb51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da4bf7dd7624094cd3422246af9f10c8538eb51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7da4bf7dd7624094cd3422246af9f10c8538eb51"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "a0ebc891a55b0e5042a1e33381a9da08728858c0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4484e9b6a8f4845884ceb40453280596b9ad6bf5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4484e9b6a8f4845884ceb40453280596b9ad6bf5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4484e9b6a8f4845884ceb40453280596b9ad6bf5", "patch": "@@ -1,3 +1,9 @@\n+2005-04-12  Markus F.X.J. Oberhumer  <markus@oberhumer.com>\n+\n+\t* mangle.c (write_builtin_type): Handle integer types which are\n+\tnot one of the shared integer type nodes and emit a \"vendor\n+\textended builtin type\" with an encoding in the form of \"u5int96\".\n+\n 2005-04-24  Ian Lance Taylor  <ian@airs.com>\n \n \t* cp-tree.def (USING_STMT): Change class to tcc_statement."}, {"sha": "20be571408b6bf904feb59a2641c37e092950807", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4484e9b6a8f4845884ceb40453280596b9ad6bf5/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4484e9b6a8f4845884ceb40453280596b9ad6bf5/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=4484e9b6a8f4845884ceb40453280596b9ad6bf5", "patch": "@@ -1757,15 +1757,35 @@ write_builtin_type (tree type)\n \t    {\n \t      tree t = c_common_type_for_mode (TYPE_MODE (type),\n \t\t\t\t\t       TYPE_UNSIGNED (type));\n-\t      if (type == t)\n+\t      if (type != t)\n \t\t{\n-\t\t  gcc_assert (TYPE_PRECISION (type) == 128);\n-\t\t  write_char (TYPE_UNSIGNED (type) ? 'o' : 'n');\n+\t\t  type = t;\n+\t\t  goto iagain;\n \t\t}\n+\n+\t      if (TYPE_PRECISION (type) == 128)\n+\t\twrite_char (TYPE_UNSIGNED (type) ? 'o' : 'n');\n \t      else\n \t\t{\n-\t\t  type = t;\n-\t\t  goto iagain;\n+\t\t  /* Allow for cases where TYPE is not one of the shared\n+\t\t     integer type nodes and write a \"vendor extended builtin\n+\t\t     type\" with a name the form intN or uintN, respectively.\n+\t\t     Situations like this can happen if you have an\n+\t\t     __attribute__((__mode__(__SI__))) type and use exotic\n+\t\t     switches like '-mint64' on MIPS or '-mint8' on AVR.\n+\t\t     Of course, this is undefined by the C++ ABI (and\n+\t\t     '-mint8' is not even Standard C conforming), but when\n+\t\t     using such special options you're pretty much in nowhere\n+\t\t     land anyway.  */\n+\t\t  const char *prefix;\n+\t\t  char prec[11];\t/* up to ten digits for an unsigned */\n+\n+\t\t  prefix = TYPE_UNSIGNED (type) ? \"uint\" : \"int\";\n+\t\t  sprintf (prec, \"%u\", (unsigned) TYPE_PRECISION (type));\n+\t\t  write_char ('u');\t/* \"vendor extended builtin type\" */\n+\t\t  write_unsigned_number (strlen (prefix) + strlen (prec));\n+\t\t  write_string (prefix);\n+\t\t  write_string (prec);\n \t\t}\n \t    }\n \t}"}]}