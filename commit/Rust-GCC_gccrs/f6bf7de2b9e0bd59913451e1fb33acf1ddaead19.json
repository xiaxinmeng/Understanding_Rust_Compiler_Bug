{"sha": "f6bf7de2b9e0bd59913451e1fb33acf1ddaead19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZiZjdkZTJiOWUwYmQ1OTkxMzQ1MWUxZmIzM2FjZjFkZGFlYWQxOQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2000-06-12T19:58:57Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2000-06-12T19:58:57Z"}, "message": "aix41.h (SUBTARGET_SWITCHES): Delete threads.\n\n\t* aix41.h (SUBTARGET_SWITCHES): Delete threads.\n\t(CPP_SPEC): Change mthreads to pthread.\n\t(LIB_SPEC): Likewise.\n\t(STARTFILE_SPEC): Likewise.\n\t* aix43.h (SUBTARGET_SWITCHES): Delete thread.\n\t(CPP_SPEC): Change mthreads to pthread.\n\t(LIB_SPEC): Likewise.\n\t(STARTFILE_SPEC): Likewise.\n\t* rs6000-protos.h (reg_or_arith_cint_operand): New.\n\t* rs6000.c (reg_or_arith_cint_operand): New.\n\t(num_insns_constant_wide): Decorate unsigned constant.\n\t* rs6000.h (PREDICATE_CODES): Add reg_or_arith_cint_operand.\n\t* rs6000.md (addsi3): Use new predicate.\n\t(subsi3, adddi3, subdi3): Likewise.\n\nFrom-SVN: r34502", "tree": {"sha": "90052b5c81f337c468e03a0b53b51b527364fb53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90052b5c81f337c468e03a0b53b51b527364fb53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/comments", "author": null, "committer": null, "parents": [{"sha": "071f9809f9eb3c218470691a8f04776af73c7988", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/071f9809f9eb3c218470691a8f04776af73c7988", "html_url": "https://github.com/Rust-GCC/gccrs/commit/071f9809f9eb3c218470691a8f04776af73c7988"}], "stats": {"total": 75, "additions": 53, "deletions": 22}, "files": [{"sha": "c83f2d861fef96bd1377a55f4e61f0bea9624923", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6bf7de2b9e0bd59913451e1fb33acf1ddaead19", "patch": "@@ -1,3 +1,20 @@\n+2000-06-12  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* aix41.h (SUBTARGET_SWITCHES): Delete threads.\n+\t(CPP_SPEC): Change mthreads to pthread.\n+\t(LIB_SPEC): Likewise.\n+\t(STARTFILE_SPEC): Likewise.\n+\t* aix43.h (SUBTARGET_SWITCHES): Delete thread.\n+\t(CPP_SPEC): Change mthreads to pthread.\n+\t(LIB_SPEC): Likewise.\n+\t(STARTFILE_SPEC): Likewise.\n+\t* rs6000-protos.h (reg_or_arith_cint_operand): New.\n+\t* rs6000.c (reg_or_arith_cint_operand): New.\n+\t(num_insns_constant_wide): Decorate unsigned constant.\n+\t* rs6000.h (PREDICATE_CODES): Add reg_or_arith_cint_operand.\n+\t* rs6000.md (addsi3): Use new predicate.\n+\t(subsi3, adddi3, subdi3): Likewise.\n+\n 2000-06-12  Mark Mitchell  <mark@codesourcery.com>\n \n \t* c-common.c (lang_get_alias_set): Fix typo."}, {"sha": "a884c7e0b6c355b15aa1b74919c11c8a69617da8", "filename": "gcc/config/rs6000/aix41.h", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2Fconfig%2Frs6000%2Faix41.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2Fconfig%2Frs6000%2Faix41.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix41.h?ref=f6bf7de2b9e0bd59913451e1fb33acf1ddaead19", "patch": "@@ -27,9 +27,7 @@ Boston, MA 02111-1307, USA.  */\n \n #undef  SUBSUBTARGET_SWITCHES\n #define SUBSUBTARGET_SWITCHES\t\t\\\n-  {\"threads\",\t\t0,\t\t\t\t\t\t\\\n-   \"Use the thread library and reentrant C library\" },\t\t\t\\\n-  {\"pe\",\t\t0,\t\t\t\t\t\t\\\n+  {\"pe\",\t\t0,\t\t\t\t\t\\\n    \"Support message passing with the Parallel Environment\" },\n \n #undef ASM_SPEC\n@@ -46,7 +44,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_SPEC \"%{posix: -D_POSIX_SOURCE}\\\n    %{ansi: -D_ANSI_C_SOURCE}\\\n    %{mpe: -I/usr/lpp/ppe.poe/include}\\\n-   %{mthreads: -D_THREAD_SAFE}\\\n+   %{pthread: -D_THREAD_SAFE}\\\n    %(cpp_cpu)\"\n \n #undef\tCPP_DEFAULT_SPEC\n@@ -74,8 +72,8 @@ Boston, MA 02111-1307, USA.  */\n #define LIB_SPEC \"%{pg:-L/lib/profiled -L/usr/lib/profiled}\\\n    %{p:-L/lib/profiled -L/usr/lib/profiled} %{!shared:%{g*:-lg}}\\\n    %{mpe:-L/usr/lpp/ppe.poe/lib -lmpi -lvtd}\\\n-   %{mthreads: -L/usr/lib/threads -lpthreads -lc_r /usr/lib/libc.a}\\\n-   %{!mthreads: -lc}\"\n+   %{pthread: -L/usr/lib/threads -lpthreads -lc_r /usr/lib/libc.a}\\\n+   %{!pthread: -lc}\"\n \n #undef LINK_SPEC\n #define LINK_SPEC \"-bpT:0x10000000 -bpD:0x20000000 %{!r:-btextro} -bnodelcsect\\\n@@ -88,8 +86,8 @@ Boston, MA 02111-1307, USA.  */\n          %{!pg:%{p:/usr/lpp/ppe.poe/lib/mcrt0.o}\\\n                %{!p:/usr/lpp/ppe.poe/lib/crt0.o}}}\\\n    %{!mpe:\\\n-     %{mthreads:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n-     %{!mthreads:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}\"\n+     %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n+     %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}\"\n \n /* AIX 4 uses PowerPC nop (ori 0,0,0) instruction as call glue for PowerPC\n    and \"cror 31,31,31\" for POWER architecture.  */"}, {"sha": "b939bed0a6df6241f7f4382aebabf0782f540e1d", "filename": "gcc/config/rs6000/aix43.h", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2Fconfig%2Frs6000%2Faix43.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2Fconfig%2Frs6000%2Faix43.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix43.h?ref=f6bf7de2b9e0bd59913451e1fb33acf1ddaead19", "patch": "@@ -31,8 +31,6 @@ Boston, MA 02111-1307, USA.  */\n    \"Compile for 64-bit pointers\" },\t\t\t\t\t\\\n   {\"aix32\",\t\t- (MASK_64BIT | MASK_POWERPC64),\t\t\\\n    \"Compile for 32-bit pointers\" },\t\t\t\t\t\\\n-  {\"threads\",\t\t0,\t\t\t\t\t\t\\\n-   \"Use the thread library and reentrant C library\" },\t\t\t\\\n   {\"pe\",\t\t0,\t\t\t\t\t\t\\\n    \"Support message passing with the Parallel Environment\" },\n \n@@ -112,7 +110,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    %{ansi: -D_ANSI_C_SOURCE}\\\n    %{maix64: -D__64BIT__ -D_ARCH_PPC}\\\n    %{mpe: -I/usr/lpp/ppe.poe/include}\\\n-   %{mthreads: -D_THREAD_SAFE}\\\n+   %{pthread: -D_THREAD_SAFE}\\\n    %(cpp_cpu)\"\n \n /* Common CPP definitions used by CPP_SPEC among the various targets\n@@ -172,8 +170,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n    %{p:-L/lib/profiled -L/usr/lib/profiled}\\\n    %{!maix64:%{!shared:%{g*:-lg}}}\\\n    %{mpe:-L/usr/lpp/ppe.poe/lib -lmpi -lvtd}\\\n-   %{mthreads:-L/usr/lib/threads -lpthreads -lc_r /usr/lib/libc.a}\\\n-   %{!mthreads:-lc}\"\n+   %{pthread:-L/usr/lib/threads -lpthreads -lc_r /usr/lib/libc.a}\\\n+   %{!pthread:-lc}\"\n \n #undef LINK_SPEC\n #define LINK_SPEC \"-bpT:0x10000000 -bpD:0x20000000 %{!r:-btextro} -bnodelcsect\\\n@@ -188,8 +186,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n    %{!mpe:\\\n      %{maix64:%{pg:gcrt0_64%O%s}%{!pg:%{p:mcrt0_64%O%s}%{!p:crt0_64%O%s}}}\\\n      %{!maix64:\\\n-       %{mthreads:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n-       %{!mthreads:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}}\"\n+       %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n+       %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}}\"\n \n /* AIX 4.3 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n "}, {"sha": "691dfa935a8369281a66981173c2228c6234438a", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=f6bf7de2b9e0bd59913451e1fb33acf1ddaead19", "patch": "@@ -41,6 +41,7 @@ extern int reg_or_short_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_or_neg_short_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_or_u_short_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_or_cint_operand PARAMS ((rtx, enum machine_mode));\n+extern int reg_or_arith_cint_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_or_logical_cint_operand PARAMS ((rtx, enum machine_mode));\n extern int got_operand PARAMS ((rtx, enum machine_mode));\n extern int got_no_const_operand PARAMS ((rtx, enum machine_mode));"}, {"sha": "37d91564fd00e31a196e4a4364e60afc1b56d948", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f6bf7de2b9e0bd59913451e1fb33acf1ddaead19", "patch": "@@ -650,8 +650,24 @@ reg_or_cint_operand (op, mode)\n     register rtx op;\n     enum machine_mode mode;\n {\n-     return (GET_CODE (op) == CONST_INT\n-\t     || gpc_reg_operand (op, mode));\n+     return (GET_CODE (op) == CONST_INT || gpc_reg_operand (op, mode));\n+}\n+\n+/* Return 1 is the operand is either a non-special register or ANY\n+   32-bit signed constant integer.  */\n+\n+int\n+reg_or_arith_cint_operand (op, mode)\n+    register rtx op;\n+    enum machine_mode mode;\n+{\n+     return (gpc_reg_operand (op, mode)\n+\t     || (GET_CODE (op) == CONST_INT\n+#if HOST_BITS_PER_WIDE_INT != 32\n+\t\t && ((unsigned HOST_WIDE_INT) (INTVAL (op) + 0x80000000)\n+\t\t     < 0x100000000u)\n+#endif\n+\t\t ));\n }\n \n /* Return 1 is the operand is either a non-special register or ANY\n@@ -729,7 +745,7 @@ num_insns_constant_wide (value)\n #if HOST_BITS_PER_WIDE_INT == 64\n   else if (TARGET_POWERPC64)\n     {\n-      HOST_WIDE_INT low  = value & 0xffffffff;\n+      unsigned HOST_WIDE_INT low  = value & 0xffffffffu;\n       HOST_WIDE_INT high = value >> 32;\n \n       if (high == 0 && (low & 0x80000000u) == 0)"}, {"sha": "94f6c10fa680ac8766f42d18542cb3150624a280", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=f6bf7de2b9e0bd59913451e1fb33acf1ddaead19", "patch": "@@ -2713,6 +2713,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n   {\"reg_or_neg_short_operand\", {SUBREG, REG, CONST_INT}},\t\\\n   {\"reg_or_u_short_operand\", {SUBREG, REG, CONST_INT}}, \t\\\n   {\"reg_or_cint_operand\", {SUBREG, REG, CONST_INT}}, \t\t\\\n+  {\"reg_or_arith_cint_operand\", {SUBREG, REG, CONST_INT}}, \t\\\n   {\"reg_or_logical_cint_operand\", {SUBREG, REG, CONST_INT, CONST_DOUBLE}}, \\\n   {\"got_operand\", {SYMBOL_REF, CONST, LABEL_REF}},\t\t\\\n   {\"got_no_const_operand\", {SYMBOL_REF, LABEL_REF}},\t\t\\"}, {"sha": "a839971a196c88d61e574385ba4c72025ed0e47b", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bf7de2b9e0bd59913451e1fb33acf1ddaead19/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f6bf7de2b9e0bd59913451e1fb33acf1ddaead19", "patch": "@@ -1386,7 +1386,7 @@\n (define_expand \"addsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\")))]\n+\t\t (match_operand:SI 2 \"reg_or_arith_cint_operand\" \"\")))]\n   \"\"\n   \"\n {\n@@ -1673,7 +1673,7 @@\n (define_expand \"subsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(minus:SI (match_operand:SI 1 \"reg_or_short_operand\" \"\")\n-\t\t  (match_operand:SI 2 \"reg_or_cint_operand\" \"\")))]\n+\t\t  (match_operand:SI 2 \"reg_or_arith_cint_operand\" \"\")))]\n   \"\"\n   \"\n {\n@@ -5765,7 +5765,7 @@\n (define_expand \"adddi3\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n \t(plus:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n-\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"\")))]\n+\t\t (match_operand:DI 2 \"reg_or_arith_cint_operand\" \"\")))]\n   \"\"\n   \"\n {\n@@ -6016,7 +6016,7 @@\n (define_expand \"subdi3\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n \t(minus:DI (match_operand:DI 1 \"reg_or_short_operand\" \"\")\n-\t\t  (match_operand:DI 2 \"reg_or_cint_operand\" \"\")))]\n+\t\t  (match_operand:DI 2 \"reg_or_arith_cint_operand\" \"\")))]\n   \"\"\n   \"\n {"}]}