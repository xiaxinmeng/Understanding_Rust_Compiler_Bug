{"sha": "2d42e8812ef4954cd42ac861090c16ac27c3ac7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ0MmU4ODEyZWY0OTU0Y2Q0MmFjODYxMDkwYzE2YWMyN2MzYWM3ZQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2011-09-01T10:33:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-01T10:33:43Z"}, "message": "exp_attr.adb, [...]: Implementation of attributes Same_Storage and Overlaps_Storage.\n\n2011-09-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_attr.adb, sem_attr.adb, snames.ads-tmpl: Implementation of\n\tattributes Same_Storage and Overlaps_Storage.\n\nFrom-SVN: r178399", "tree": {"sha": "ecfd49e301aeb1419dd49c032fea861907681a5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecfd49e301aeb1419dd49c032fea861907681a5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d42e8812ef4954cd42ac861090c16ac27c3ac7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d42e8812ef4954cd42ac861090c16ac27c3ac7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d42e8812ef4954cd42ac861090c16ac27c3ac7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d42e8812ef4954cd42ac861090c16ac27c3ac7e/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "579fda569ddfa62b27e417f1fe7c2c64c292d49c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/579fda569ddfa62b27e417f1fe7c2c64c292d49c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/579fda569ddfa62b27e417f1fe7c2c64c292d49c"}], "stats": {"total": 214, "additions": 214, "deletions": 0}, "files": [{"sha": "936a2090649e81779fe10b9f4bd7519c5a894e87", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d42e8812ef4954cd42ac861090c16ac27c3ac7e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d42e8812ef4954cd42ac861090c16ac27c3ac7e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2d42e8812ef4954cd42ac861090c16ac27c3ac7e", "patch": "@@ -1,3 +1,8 @@\n+2011-09-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_attr.adb, sem_attr.adb, snames.ads-tmpl: Implementation of\n+\tattributes Same_Storage and Overlaps_Storage.\n+\n 2011-09-01  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_strm.adb: Remove with and use clause for Opt."}, {"sha": "c38a3844a78b35806ad378e699f64a6e797e8e58", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 161, "deletions": 0, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d42e8812ef4954cd42ac861090c16ac27c3ac7e/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d42e8812ef4954cd42ac861090c16ac27c3ac7e/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=2d42e8812ef4954cd42ac861090c16ac27c3ac7e", "patch": "@@ -3091,6 +3091,100 @@ package body Exp_Attr is\n          Rewrite (N, New_Occurrence_Of (Tnn, Loc));\n       end Old;\n \n+      ----------------------\n+      -- Overlaps_Storage --\n+      ----------------------\n+\n+      when Attribute_Overlaps_Storage => Overlaps_Storage : declare\n+         Loc : constant Source_Ptr := Sloc (N);\n+\n+         X   : constant Node_Id := Prefix (N);\n+         Y   : constant Node_Id := First (Expressions (N));\n+         --  The argumens\n+\n+         X_Addr, Y_Addr : Node_Id;\n+         --  the expressions for their integer addresses\n+\n+         X_Size, Y_Size : Node_Id;\n+         --  the expressions for their sizes\n+\n+         Cond : Node_Id;\n+\n+      begin\n+         --  Attribute expands into:\n+\n+         --    if X'Address < Y'address then\n+         --      (X'address + X'Size - 1) >= Y'address\n+         --    else\n+         --      (Y'address + Y'size - 1) >= X'Address\n+         --    end if;\n+\n+         --  with the proper address operations. We convert addresses to\n+         --  integer addresses to use predefined arithmetic. The size is\n+         --  expressed in storage units.\n+\n+         X_Addr :=\n+           Unchecked_Convert_To (RTE (RE_Integer_Address),\n+             Make_Attribute_Reference (Loc,\n+               Attribute_Name => Name_Address,\n+               Prefix         => New_Copy_Tree (X)));\n+\n+         Y_Addr :=\n+           Unchecked_Convert_To (RTE (RE_Integer_Address),\n+             Make_Attribute_Reference (Loc,\n+               Attribute_Name => Name_Address,\n+               Prefix         => New_Copy_Tree (Y)));\n+\n+         X_Size :=\n+           Make_Op_Divide (Loc,\n+             Left_Opnd  =>\n+               Make_Attribute_Reference (Loc,\n+                 Attribute_Name => Name_Size,\n+                 Prefix         => New_Copy_Tree (X)),\n+             Right_Opnd =>\n+               Make_Integer_Literal (Loc, System_Storage_Unit));\n+\n+         Y_Size :=\n+           Make_Op_Divide (Loc,\n+             Left_Opnd  =>\n+               Make_Attribute_Reference (Loc,\n+                 Attribute_Name => Name_Size,\n+                 Prefix         => New_Copy_Tree (Y)),\n+             Right_Opnd =>\n+               Make_Integer_Literal (Loc, System_Storage_Unit));\n+\n+         Cond :=\n+            Make_Op_Le (Loc,\n+              Left_Opnd  => X_Addr,\n+              Right_Opnd => Y_Addr);\n+\n+         Rewrite (N,\n+           Make_Conditional_Expression (Loc,\n+             New_List (\n+               Cond,\n+\n+               Make_Op_Ge (Loc,\n+                  Left_Opnd   =>\n+                   Make_Op_Add (Loc,\n+                     Left_Opnd  => X_Addr,\n+                     Right_Opnd =>\n+                       Make_Op_Subtract (Loc,\n+                         Left_Opnd  => X_Size,\n+                         Right_Opnd => Make_Integer_Literal (Loc, 1))),\n+                  Right_Opnd => Y_Addr),\n+\n+               Make_Op_Ge (Loc,\n+                   Make_Op_Add (Loc,\n+                     Left_Opnd  => Y_Addr,\n+                     Right_Opnd =>\n+                       Make_Op_Subtract (Loc,\n+                         Left_Opnd  => Y_Size,\n+                         Right_Opnd => Make_Integer_Literal (Loc, 1))),\n+                  Right_Opnd => X_Addr))));\n+\n+         Analyze_And_Resolve (N, Standard_Boolean);\n+      end Overlaps_Storage;\n+\n       ------------\n       -- Output --\n       ------------\n@@ -3916,6 +4010,73 @@ package body Exp_Attr is\n       when Attribute_Rounding =>\n          Expand_Fpt_Attribute_R (N);\n \n+      ------------------\n+      -- Same_Storage --\n+      ------------------\n+\n+      when Attribute_Same_Storage => Same_Storage : declare\n+         Loc : constant Source_Ptr := Sloc (N);\n+\n+         X   : constant Node_Id := Prefix (N);\n+         Y   : constant Node_Id := First (Expressions (N));\n+         --  The argumens\n+\n+         X_Addr, Y_Addr : Node_Id;\n+         --  the expressions for their addresses\n+\n+         X_Size, Y_Size : Node_Id;\n+         --  the expressions for their sizes\n+\n+      begin\n+         --  The attribute is expanded as:\n+\n+         --    (X'address = Y'address)\n+         --      and then (X'Size = Y'Size)\n+\n+         --  If both arguments have the same Etype the second conjunct can be\n+         --  omitted.\n+\n+         X_Addr :=\n+           Make_Attribute_Reference (Loc,\n+             Attribute_Name => Name_Address,\n+             Prefix         => New_Copy_Tree (X));\n+\n+         Y_Addr :=\n+           Make_Attribute_Reference (Loc,\n+             Attribute_Name => Name_Address,\n+             Prefix         => New_Copy_Tree (Y));\n+\n+         X_Size :=\n+           Make_Attribute_Reference (Loc,\n+             Attribute_Name => Name_Size,\n+             Prefix         => New_Copy_Tree (X));\n+\n+         Y_Size :=\n+           Make_Attribute_Reference (Loc,\n+             Attribute_Name => Name_Size,\n+             Prefix         => New_Copy_Tree (Y));\n+\n+         if Etype (X) = Etype (Y) then\n+            Rewrite (N,\n+              (Make_Op_Eq (Loc,\n+                 Left_Opnd  => X_Addr,\n+                 Right_Opnd => Y_Addr)));\n+         else\n+            Rewrite (N,\n+              Make_Op_And (Loc,\n+                Left_Opnd  =>\n+                  Make_Op_Eq (Loc,\n+                    Left_Opnd  => X_Addr,\n+                    Right_Opnd => Y_Addr),\n+                Right_Opnd =>\n+                  Make_Op_Eq (Loc,\n+                    Left_Opnd  => X_Size,\n+                    Right_Opnd => Y_Size)));\n+         end if;\n+\n+         Analyze_And_Resolve (N, Standard_Boolean);\n+      end Same_Storage;\n+\n       -------------\n       -- Scaling --\n       -------------"}, {"sha": "119f6df3e0de808edf7641b69cc26d8cd046a15b", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d42e8812ef4954cd42ac861090c16ac27c3ac7e/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d42e8812ef4954cd42ac861090c16ac27c3ac7e/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=2d42e8812ef4954cd42ac861090c16ac27c3ac7e", "patch": "@@ -3878,6 +3878,21 @@ package body Sem_Attr is\n             Expand (N);\n          end if;\n \n+      ----------------------\n+      -- Overlaps_Storage --\n+      ----------------------\n+\n+      when Attribute_Overlaps_Storage =>\n+         Check_E1;\n+\n+         --  Both arguments must be objects of any type\n+\n+         Analyze_And_Resolve (P);\n+         Analyze_And_Resolve (E1);\n+         Check_Object_Reference (P);\n+         Check_Object_Reference (E1);\n+         Set_Etype (N, Standard_Boolean);\n+\n       ------------\n       -- Output --\n       ------------\n@@ -4354,6 +4369,21 @@ package body Sem_Attr is\n          Check_Real_Type;\n          Set_Etype (N, Universal_Real);\n \n+      ------------------\n+      -- Same_Storage --\n+      ------------------\n+\n+      when Attribute_Same_Storage =>\n+         Check_E1;\n+\n+         --  The arguments must be objects of any type\n+\n+         Analyze_And_Resolve (P);\n+         Analyze_And_Resolve (E1);\n+         Check_Object_Reference (P);\n+         Check_Object_Reference (E1);\n+         Set_Etype (N, Standard_Boolean);\n+\n       -----------\n       -- Scale --\n       -----------\n@@ -6911,6 +6941,13 @@ package body Sem_Attr is\n          end if;\n       end Object_Size;\n \n+      ----------------------\n+      -- Overlaps_Storage --\n+      ----------------------\n+\n+      when Attribute_Overlaps_Storage =>\n+         null;\n+\n       -------------------------\n       -- Passed_By_Reference --\n       -------------------------\n@@ -7140,6 +7177,13 @@ package body Sem_Attr is\n             Fold_Ureal (N, Model_Small_Value (P_Type), Static);\n          end if;\n \n+      ------------------\n+      -- Same_Storage --\n+      ------------------\n+\n+      when Attribute_Same_Storage =>\n+         null;\n+\n       -----------\n       -- Scale --\n       -----------"}, {"sha": "3fa0166b66d351e0eef1af4e2dfd7344c513c77c", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d42e8812ef4954cd42ac861090c16ac27c3ac7e/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d42e8812ef4954cd42ac861090c16ac27c3ac7e/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=2d42e8812ef4954cd42ac861090c16ac27c3ac7e", "patch": "@@ -792,6 +792,7 @@ package Snames is\n    Name_Null_Parameter                 : constant Name_Id := N + $; -- GNAT\n    Name_Object_Size                    : constant Name_Id := N + $; -- GNAT\n    Name_Old                            : constant Name_Id := N + $; -- GNAT\n+   Name_Overlaps_Storage               : constant Name_Id := N + $; -- GNAT\n    Name_Partition_ID                   : constant Name_Id := N + $;\n    Name_Passed_By_Reference            : constant Name_Id := N + $; -- GNAT\n    Name_Pool_Address                   : constant Name_Id := N + $;\n@@ -808,6 +809,7 @@ package Snames is\n    Name_Safe_Large                     : constant Name_Id := N + $; -- Ada 83\n    Name_Safe_Last                      : constant Name_Id := N + $;\n    Name_Safe_Small                     : constant Name_Id := N + $; -- Ada 83\n+   Name_Same_Storage                   : constant Name_Id := N + $; -- Ada 12\n    Name_Scale                          : constant Name_Id := N + $;\n    Name_Scaling                        : constant Name_Id := N + $;\n    Name_Signed_Zeros                   : constant Name_Id := N + $;\n@@ -1344,6 +1346,7 @@ package Snames is\n       Attribute_Null_Parameter,\n       Attribute_Object_Size,\n       Attribute_Old,\n+      Attribute_Overlaps_Storage,\n       Attribute_Partition_ID,\n       Attribute_Passed_By_Reference,\n       Attribute_Pool_Address,\n@@ -1360,6 +1363,7 @@ package Snames is\n       Attribute_Safe_Large,\n       Attribute_Safe_Last,\n       Attribute_Safe_Small,\n+      Attribute_Same_Storage,\n       Attribute_Scale,\n       Attribute_Scaling,\n       Attribute_Signed_Zeros,"}]}