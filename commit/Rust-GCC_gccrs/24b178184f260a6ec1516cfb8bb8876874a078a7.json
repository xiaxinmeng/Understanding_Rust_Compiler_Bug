{"sha": "24b178184f260a6ec1516cfb8bb8876874a078a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRiMTc4MTg0ZjI2MGE2ZWMxNTE2Y2ZiOGJiODg3Njg3NGEwNzhhNw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2020-01-20T10:37:29Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2020-01-20T10:37:29Z"}, "message": "contrib: New remotes structure for vendor and personal refs\n\nThe initial structure for vendor and personal branches makes use of\nthe default remote (normally origin) for the upstream\nrepository).  Unfortunately, this causes some confusion, especially for\npersonal branches because a push will not push to the correct upstream\nlocation.  This can be 'fixed' by adding a push refspec for the remote,\nbut that has the unfortunate consequence of breaking the push.default\nbehaviour for git push, and it becomes too easy to accidentally commit\nsomething unintended to the main parts of the repository.\n\nTo work around this, this patch changes the configuration to use\nseparate 'remotes' for these additional refs, with one remote for the\npersonal space and another remote for each vendor's space.  The\npersonal space is called after the user's preferred branch-space\nprefix (default 'me'), the vendor spaces are called\nvendors/<vendor-name>.\n\nAs far as possible, I've made the script automatically restructure any\nexisting fetch or push lines that earlier versions of the scripts may\nhave created - the gcc-git-customization.sh script will convert all\nvendor refs that it can find, so it is not necessary to re-add any\nvendors you've already added.\n\nYou might, however, want to run\n  git remote prune <origin>\nafter running to clean up any stale upstream-refs that might still be\nin your local repo, and then\n  git fetch vendors/<vendor>\nor\n  git fetch <me>\nto re-populate the remotes/ structures.\n\nAlso, for any branch you already have that tracks a personal or vendor\nbranch upstream, you might need to run\n  git config branch.<name>.remote <new-remote>\n\nso that merges and pushes go to the right place (I haven't attempted\nto automate this last part).\n\nFor vendors, the new structure means that\n\n  git checkout -b <vendor>/<branch> remotes/vendors/<vendor>/<branch>\n\nwill correctly set up a remote tracking branch.\n\nPlease be aware that if you have multiple personal branches set up, then\n\n  git push <me>\n\nwill still consider all of them for pushing.  If you only want to push\none branch, then either write\n  git push <me> HEAD\nor\n  git push <me> <me>/branch\nas appropriate.\n\nAnd don't forget '-n' (--dry-run) to see what would be done if this\nwere not a dry run.\n\nFinally, now that the vendors spaces are isolated from each other and\nfrom the other spaces, I've added an option \"--enable-push\" to\ngit-fetch-vendor.sh.  If passed, then a \"push\" spec will be added for\nthat vendor to enable pushing to the upstream.  If you re-run the\nscript for the same vendor without the option, the push spec will be\nremoved.\n\n\t* gcc-git-customization.sh: Check that user-supplied remote\n\tname exists before continuting.  Use a separate remotes for the\n\tpersonal commit area.  Convert existing personal and vendor\n\tfetch rules to new layout.\n\t* git-fetch-vendor.sh: New vendor layout.  Add --enable-push\n\toption.", "tree": {"sha": "2ad276e7a75d463622b58e01a8bc3ee2ac7b6b2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ad276e7a75d463622b58e01a8bc3ee2ac7b6b2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24b178184f260a6ec1516cfb8bb8876874a078a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b178184f260a6ec1516cfb8bb8876874a078a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24b178184f260a6ec1516cfb8bb8876874a078a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b178184f260a6ec1516cfb8bb8876874a078a7/comments", "author": null, "committer": null, "parents": [{"sha": "0757f0bbf3edf43a27ec3f7d2c33ab56f26eb15a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0757f0bbf3edf43a27ec3f7d2c33ab56f26eb15a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0757f0bbf3edf43a27ec3f7d2c33ab56f26eb15a"}], "stats": {"total": 130, "additions": 105, "deletions": 25}, "files": [{"sha": "8f112af56917f1f8b09f98c783d8ca367e61476f", "filename": "contrib/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b178184f260a6ec1516cfb8bb8876874a078a7/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b178184f260a6ec1516cfb8bb8876874a078a7/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=24b178184f260a6ec1516cfb8bb8876874a078a7", "patch": "@@ -1,3 +1,12 @@\n+2020-01-20  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* gcc-git-customization.sh: Check that user-supplied remote\n+\tname exists before continuting.  Use a separate remotes for the\n+\tpersonal commit area.  Convert existing personal and vendor\n+\tfetch rules to new layout.\n+\t* git-fetch-vendor.sh: New vendor layout.  Add --enable-push\n+\toption.\n+\n 2020-01-17  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* gcc_update <git revision>: Use git log \"--pretty=tformat:%p:%t:%H\","}, {"sha": "c16db74750301a28deb2e2d496efe3c6fc835115", "filename": "contrib/gcc-git-customization.sh", "status": "modified", "additions": 41, "deletions": 16, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b178184f260a6ec1516cfb8bb8876874a078a7/contrib%2Fgcc-git-customization.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b178184f260a6ec1516cfb8bb8876874a078a7/contrib%2Fgcc-git-customization.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-git-customization.sh?ref=24b178184f260a6ec1516cfb8bb8876874a078a7", "patch": "@@ -81,6 +81,13 @@ then\n     upstream=\"origin\"\n fi\n ask \"Local name for upstream repository\" \"origin\" upstream\n+\n+v=$(git config --get-all \"remote.${upstream}.fetch\")\n+if [ \"x$v\" = \"x\" ]\n+then\n+    echo \"Remote $upstream does not seem to exist as a remote\"\n+    exit 1\n+fi\n git config \"gcc-config.upstream\" \"$upstream\"\n \n remote_id=$(git config --get \"gcc-config.user\")\n@@ -100,6 +107,7 @@ then\n \tfi\n     fi\n fi\n+\n ask \"Account name on gcc.gnu.org (for your personal branches area)\" $remote_id remote_id\n git config \"gcc-config.user\" \"$remote_id\"\n \n@@ -108,27 +116,44 @@ if [ \"x$old_pfx\" = \"x\" ]\n then\n     old_pfx=\"me\"\n fi\n+echo\n echo \"Local branch prefix for personal branches you want to share\"\n echo \"(local branches starting <prefix>/ can be pushed directly to your\"\n ask \"personal area on the gcc server)\" $old_pfx new_pfx\n git config \"gcc-config.userpfx\" \"$new_pfx\"\n \n-echo \"Setting up tracking for personal namespace $remote_id in remotes/$upstream/${new_pfx}\"\n-git config --replace-all \"remote.${upstream}.fetch\" \"+refs/users/${remote_id}/heads/*:refs/remotes/${upstream}/${new_pfx}/*\" \":refs/remotes/${upstream}/${old_pfx}/\"\n-git config --replace-all \"remote.${upstream}.fetch\" \"+refs/users/${remote_id}/tags/*:refs/tags/${new_pfx}/*\" \":refs/tags/${old_pfx}/\"\n+# Scan the existing settings to see if there are any we need to rewrite.\n+vendors=$(git config --get-all \"remote.${upstream}.fetch\" \"refs/vendors/\" | sed -r \"s:.*refs/vendors/([^/]+)/.*:\\1:\" | sort | uniq)\n+url=$(git config --get \"remote.${upstream}.url\")\n+pushurl=$(git config --get \"remote.${upstream}.pushurl\")\n+for v in $vendors\n+do\n+    echo \"Migrating vendor $v to new remote vendors/$v\"\n+    git config --unset-all \"remote.${upstream}.fetch\" \"refs/vendors/$v/\"\n+    git config --unset-all \"remote.${upstream}.push\" \"refs/vendors/$v/\"\n+    git config \"remote.vendors/${v}.url\" \"${url}\"\n+    if [ \"x$pushurl\" != \"x\" ]\n+    then\n+\tgit config \"remote.vendors/${v}.pushurl\" \"${pushurl}\"\n+    fi\n+    git config --add \"remote.vendors/${v}.fetch\" \"+refs/vendors/$v/heads/*:refs/remotes/vendors/${v}/*\"\n+    git config --add \"remote.vendors/${v}.fetch\" \"+refs/vendors/$v/tags/*:refs/tags/vendors/${v}/*\"\n+done\n \n-push_rule=$(git config --get \"remote.${upstream}.push\")\n-if [ \"x$push_rule\" != \"x\" ]\n+echo \"Setting up tracking for personal namespace $remote_id in remotes/${new_pfx}\"\n+git config \"remote.${new_pfx}.url\" \"${url}\"\n+if [ \"x$pushurl\" != \"x\" ]\n then\n-    echo \"***********************************************\"\n-    echo \"                  Warning\"\n-    echo \"***********************************************\"\n-    echo\n-    echo \"Old versions of this script used to add custom push\"\n-    echo \"rules to simplify pushing to personal branches.\"\n-    echo \"Your configuration contains such rules, but we no-longer\"\n-    echo \"recommend doing this.\"\n-    echo\n-    echo \"To delete these rules run:\"\n-    echo \"  git config --unset-all \\\"remote.${upstream}.push\\\"\"\n+    git config \"remote.${new_pfx}.pushurl\" \"${pushurl}\"\n fi\n+git config --replace-all \"remote.${new_pfx}.fetch\" \"+refs/users/${remote_id}/heads/*:refs/remotes/${new_pfx}/*\" \":refs/remotes/${old_pfx}/\"\n+git config --replace-all \"remote.${new_pfx}.fetch\" \"+refs/users/${remote_id}/tags/*:refs/tags/${new_pfx}/*\" \":refs/tags/${old_pfx}/\"\n+git config --replace-all \"remote.${new_pfx}.push\" \"refs/heads/${new_pfx}/*:refs/users/${remote_id}/heads/*\" \":refs/users/${remote_id}\"\n+\n+if [ \"$old_pfx\" != \"$new_pfx\" -a \"$old_pfx\" != \"${upstream}\" ]\n+then\n+    git config --remove-section \"remote.${old_pfx}\"\n+fi\n+\n+git config --unset-all \"remote.${upstream}.fetch\" \"refs/users/${remote_id}/\"\n+git config --unset-all \"remote.${upstream}.push\" \"refs/users/${remote_id}/\""}, {"sha": "15303629b5c34125805db1f94eeec886aba1aa8f", "filename": "contrib/git-fetch-vendor.sh", "status": "modified", "additions": 55, "deletions": 9, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b178184f260a6ec1516cfb8bb8876874a078a7/contrib%2Fgit-fetch-vendor.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b178184f260a6ec1516cfb8bb8876874a078a7/contrib%2Fgit-fetch-vendor.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgit-fetch-vendor.sh?ref=24b178184f260a6ec1516cfb8bb8876874a078a7", "patch": "@@ -1,20 +1,66 @@\n #!/bin/sh\n \n-if [ $# != 1 ]\n-then\n-    echo \"Usage: $0 <vendor>\"\n+usage ()\n+{\n+    echo \"Usage: $0 [--enable-push] <vendor>\"\n+    echo \"The following vendors are already known:\"\n+    git ls-remote ${upstream} \"*/vendors/*\" | sed -r \"s:.*/vendors/([^/]+)/.*:\\1:\"|sort|uniq\n     exit 1\n-fi\n+}\n+\n+# Should we insert a \"push\" refspec to enable pushing to the vendor branch?\n+enable_push=no\n \n-vendor=$1\n upstream=`git config --get \"gcc-config.upstream\"`\n if [ x\"$upstream\" = x ]\n then\n     echo \"Config gcc-config.upstream not set, run contrib/gcc-git-customization\"\n     exit 1\n fi\n \n-echo \"setting up git to fetch vendor ${vendor} to remotes/${upstream}/${vendor}\"\n-git config --replace-all \"remote.${upstream}.fetch\" \"+refs/vendors/${vendor}/heads/*:refs/remotes/${upstream}/${vendor}/*\" \":refs/remotes/${upstream}/${vendor}/\"\n-git config --replace-all \"remote.${upstream}.fetch\" \"+refs/vendors/${vendor}/tags/*:refs/tags/${vendor}/*\" \":refs/tags/${vendor}/\"\n-git fetch\n+case $# in\n+    1)\n+\t# vendor names never start with -, so catch this in case user wrote something like --help.\n+\tcase \"$1\" in\n+\t    -*)\n+\t\tusage\n+\t\t;;\n+\t    *)\n+\t\tvendor=$1\n+\t\t;;\n+\tesac\n+\t;;\n+    2)\n+\tvendor=$2\n+\tif [ \"$1\" = \"--enable-push\" ]\n+\tthen\n+\t    enable_push=yes\n+\telse\n+\t    usage\n+\tfi\n+\t;;\n+    *)\n+\tusage\n+\t;;\n+esac\n+\n+\n+echo \"setting up git to fetch vendor ${vendor} to remotes/vendors/${vendor}\"\n+url=$(git config --get \"remote.${upstream}.url\")\n+pushurl=$(git config --get \"remote.${upstream}.pushurl\")\n+git config \"remote.vendors/${vendor}.url\" \"${url}\"\n+if [ \"x$pushurl\" != \"x\" ]\n+then\n+    git config \"remote.vendors/${vendor}.pushurl\" \"${pushurl}\"\n+fi\n+git config --replace-all \"remote.vendors/${vendor}.fetch\" \"+refs/vendors/${vendor}/heads/*:refs/remotes/vendors/${vendor}/*\" \"refs/vendors/${vendor}/heads\"\n+git config --replace-all \"remote.vendors/${vendor}.fetch\" \"+refs/vendors/${vendor}/tags/*:refs/tags/vendors/${vendor}/*\" \"refs/vendors/${vendor}/tags\"\n+if [ \"$enable_push\" = \"yes\" ]\n+then\n+    echo \"Warning: take care when pushing that you only push the changes you intend.\"\n+    echo \"E.g. use \\\"git push vendors/${vendor} HEAD\\\" to push the current branch\"\n+    git config --replace-all \"remote.vendors/${vendor}.push\" \"refs/heads/${vendor}/*:refs/vendors/${vendor}/heads/*\"\n+else\n+    git config --unset-all \"remote.vendors/${vendor}.push\"\n+fi\n+git fetch vendors/${vendor}"}]}