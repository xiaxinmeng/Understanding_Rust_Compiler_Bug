{"sha": "d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBiOGI2ZmJmNmU5NjFiMDFiMTNjMGIzYWFjYjkyMDJjYTIwOWMxYg==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2003-08-05T18:04:09Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2003-08-05T18:04:09Z"}, "message": "GtkComponentPeer.java (postKeyEvent): Add keyLocation parameter.\n\n2003-08-05  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java (postKeyEvent):\n\tAdd keyLocation parameter.\n\t* java/awt/event/KeyEvent.java (getKeyText): Fix \"NumPad-\"\n\tstring.\n\t(paramString): Generate keyChar string according to keyChar, not\n\tkeyCode.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n\t(state_to_awt_mods): Handle ALT key.\n\t(keyevent_state_to_awt_mods): New function.\n\t(get_first_keyval_from_keymap): New function.\n\t(keysym_to_awt_keycode): Get virtual key code from keymap.\n\tHandle missing VK_ values.\n\t(keysym_to_awt_keylocation): New function.\n\t(keyevent_to_awt_keychar): New function.\n\t(generates_key_typed_event): Handle non-text-component case.\n\tHandle GDK_KP_Delete and GDK_KP_Enter.\n\t(awt_event_handler): Call new functions to get postKeyEvent\n\tparameters.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c (gtkInit):\n\tUpdate postKeyEvent method signature.\n\t* jni/gtk-peer/gtkpeer.h: Add KEY_LOCATION defines.  Add missing\n\tVK_ defines.\n\nFrom-SVN: r70178", "tree": {"sha": "cbcff4299691a1f97a60baf437371dc24fdd7022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbcff4299691a1f97a60baf437371dc24fdd7022"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/comments", "author": null, "committer": null, "parents": [{"sha": "b3c3af2f63dac9ca424ea3c1a456ef689159d3ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3c3af2f63dac9ca424ea3c1a456ef689159d3ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3c3af2f63dac9ca424ea3c1a456ef689159d3ae"}], "stats": {"total": 1192, "additions": 934, "deletions": 258}, "files": [{"sha": "4c80d2008361a85c1c906eb2f52349bc333e6538", "filename": "libjava/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "patch": "@@ -1,3 +1,28 @@\n+2003-08-05  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java (postKeyEvent):\n+\tAdd keyLocation parameter.\n+\t* java/awt/event/KeyEvent.java (getKeyText): Fix \"NumPad-\"\n+\tstring.\n+\t(paramString): Generate keyChar string according to keyChar, not\n+\tkeyCode.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n+\t(state_to_awt_mods): Handle ALT key.\n+\t(keyevent_state_to_awt_mods): New function.\n+\t(get_first_keyval_from_keymap): New function.\n+\t(keysym_to_awt_keycode): Get virtual key code from keymap.\n+\tHandle missing VK_ values.\n+\t(keysym_to_awt_keylocation): New function.\n+\t(keyevent_to_awt_keychar): New function.\n+\t(generates_key_typed_event): Handle non-text-component case.\n+\tHandle GDK_KP_Delete and GDK_KP_Enter.\n+\t(awt_event_handler): Call new functions to get postKeyEvent\n+\tparameters.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c (gtkInit):\n+\tUpdate postKeyEvent method signature.\n+\t* jni/gtk-peer/gtkpeer.h: Add KEY_LOCATION defines.  Add missing\n+\tVK_ defines.\n+\n 2003-08-05  Matthias Klose  <doko@debian.org>\n \n \t* aclocal.m4: check for libart-config binary"}, {"sha": "ac092c8f4d152bf69cbb213d7193f5d5058c15f8", "filename": "libjava/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "patch": "@@ -350,13 +350,13 @@ protected void postExposeEvent (int x, int y, int width, int height)\n \t\t\t\t new Rectangle (x, y, width, height)));\n   }\n \n-  protected void postKeyEvent (int id, long when, int mods, \n-\t\t\t       int keyCode, char keyChar)\n+  protected void postKeyEvent (int id, long when, int mods,\n+\t\t\t       int keyCode, char keyChar, int keyLocation)\n   {\n-    q.postEvent (new KeyEvent (awtComponent, id, when, mods, \n-\t\t\t       keyCode, keyChar));\n+    q.postEvent (new KeyEvent (awtComponent, id, when, mods,\n+\t\t\t       keyCode, keyChar, keyLocation));\n   }\n-  \n+\n   protected void postFocusEvent (int id, boolean temporary)\n   {\n     q.postEvent (new FocusEvent (awtComponent, id, temporary));"}, {"sha": "b3199d87c9a775557de73e8410086ad8dd51facf", "filename": "libjava/gnu/java/awt/peer/gtk/GtkTextComponentPeer.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextComponentPeer.java?ref=d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "patch": "@@ -55,8 +55,9 @@ public class GtkTextComponentPeer extends GtkComponentPeer\n \n     setText (tc.getText ());\n   }\n-  \n+\n   public native void connectHooks ();\n+\n   public native int getCaretPosition ();\n   public native void setCaretPosition (int pos);\n   public native int getSelectionStart ();"}, {"sha": "455d7ee526654bfd2fdb50daf970d6a3ab2700e7", "filename": "libjava/java/awt/event/KeyEvent.java", "status": "modified", "additions": 37, "deletions": 35, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java?ref=d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "patch": "@@ -1503,7 +1503,7 @@ public static String getKeyText(int keyCode)\n       case VK_NUMPAD7:\n       case VK_NUMPAD8:\n       case VK_NUMPAD9:\n-        return \"NumPad-\" + (char) (keyCode - VK_NUMPAD0);\n+        return \"NumPad-\" + (keyCode - VK_NUMPAD0);\n       case VK_F1:\n       case VK_F2:\n       case VK_F3:\n@@ -1642,63 +1642,64 @@ public boolean isActionKey()\n   }\n \n   /**\n-   * Returns a string identifying the event. This is formatted as the field\n-   * name of the id type, followed by the keyCode, then the keyChar (if\n-   * available), modifiers (if any), extModifiers (if any), and keyLocation.\n-   * The keyChar is available unless the keyCode is Backspace, Tab, Enter,\n-   * Escape, Numpad-[0-9], Delete, or a keyCode which is an action.\n+   * Returns a string identifying the event.  This is formatted as the\n+   * field name of the id type, followed by the keyCode, then the\n+   * keyChar, modifiers (if any), extModifiers (if any), and\n+   * keyLocation.\n    *\n    * @return a string identifying the event\n    */\n   public String paramString()\n   {\n     StringBuffer s = new StringBuffer();\n+\n     switch (id)\n       {\n       case KEY_PRESSED:\n-        s.append(\"KEY_PRESSED,keyCode=\");\n+        s.append(\"KEY_PRESSED\");\n         break;\n       case KEY_RELEASED:\n-        s.append(\"KEY_RELEASED,keyCode=\");\n+        s.append(\"KEY_RELEASED\");\n         break;\n       case KEY_TYPED:\n-        s.append(\"KEY_TYPED,keyCode=\");\n+        s.append(\"KEY_TYPED\");\n         break;\n       default:\n-        s.append(\"unknown type,keyCode=\");\n+        s.append(\"unknown type\");\n       }\n-    s.append(keyCode);\n-    switch (keyCode)\n+\n+    s.append(\",keyCode=\").append(keyCode);\n+\n+    s.append(\",keyText=\").append(getKeyText(keyCode));\n+\n+    s.append(\",keyChar=\");\n+    if (isActionKey()\n+        || keyCode == VK_SHIFT\n+        || keyCode == VK_CONTROL\n+        || keyCode == VK_ALT)\n+      s.append(\"Undefined keyChar\");\n+    else\n       {\n-      default:\n-        if (! isActionKey())\n-          {\n-            s.append(\",keyChar='\").append(keyChar).append('\\'');\n-            break;\n-          }\n-        // Fallthrough.\n-      case VK_BACK_SPACE:\n-      case VK_TAB:\n-      case VK_ENTER:\n-      case VK_ESCAPE:\n-      case VK_NUMPAD0:\n-      case VK_NUMPAD1:\n-      case VK_NUMPAD2:\n-      case VK_NUMPAD3:\n-      case VK_NUMPAD4:\n-      case VK_NUMPAD5:\n-      case VK_NUMPAD6:\n-      case VK_NUMPAD7:\n-      case VK_NUMPAD8:\n-      case VK_NUMPAD9:\n-      case VK_DELETE:\n-        s.append(',').append(getKeyText(keyCode));\n+        /* This output string must be selected by examining keyChar\n+         * rather than keyCode, because key code information is not\n+         * included in KEY_TYPED events.\n+         */\n+        if (keyChar == VK_BACK_SPACE\n+            || keyChar == VK_TAB\n+            || keyChar == VK_ENTER\n+            || keyChar == VK_ESCAPE\n+            || keyChar == VK_DELETE)\n+          s.append(getKeyText(keyChar));\n+        else\n+          s.append(\"'\").append(keyChar).append(\"'\");\n       }\n+\n     if ((modifiers & CONVERT_MASK) != 0)\n       s.append(\",modifiers=\").append(getModifiersExText(modifiers\n                                                         & CONVERT_MASK));\n     if (modifiers != 0)\n       s.append(\",extModifiers=\").append(getModifiersExText(modifiers));\n+\n     s.append(\",keyLocation=KEY_LOCATION_\");\n     switch (keyLocation)\n       {\n@@ -1717,6 +1718,7 @@ public String paramString()\n       case KEY_LOCATION_NUMPAD:\n         s.append(\"NUMPAD\");\n       }\n+\n     return s.toString();\n   }\n "}, {"sha": "46cd64fca1bf4063e088620dfb4b9610aaafd506", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c?ref=d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "patch": "@@ -503,7 +503,7 @@ Java_gnu_java_awt_peer_gtk_GtkComponentPeer_set__Ljava_lang_String_2Ljava_lang_S\n   arg.type = GTK_TYPE_STRING;\n   arg.name = (char *) name;\n   GTK_VALUE_STRING (arg) = (char *) value;\n-  gdk_threads_enter();                          \n+  gdk_threads_enter();\n   g_object_set(ptr, name, value, NULL);\n   gdk_threads_leave();\n \n@@ -618,9 +618,10 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_connectHooks\n \n   gdk_threads_enter ();\n   gtk_widget_realize (GTK_WIDGET (ptr));\n+\n   if(GTK_IS_BUTTON(ptr))\n-      connect_awt_hook (env, obj, 1, GTK_BUTTON(ptr)->event_window);\n+    connect_awt_hook (env, obj, 1, GTK_BUTTON(ptr)->event_window);\n   else\n-  connect_awt_hook (env, obj, 1, GTK_WIDGET (ptr)->window);\n+    connect_awt_hook (env, obj, 1, GTK_WIDGET (ptr)->window);\n   gdk_threads_leave ();\n }"}, {"sha": "cdcd72e187cbc08e2ff29fb7b358d09169942f9e", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c", "status": "modified", "additions": 674, "deletions": 115, "changes": 789, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c?ref=d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "patch": "@@ -48,7 +48,8 @@ struct event_hook_info\n {\n   jobject *peer_obj;\n   int nwindows;\n-  GdkWindow ***windows;\t\t/* array of pointers to (GdkWindow *) */\n+  /* array of pointers to (GdkWindow *) */\n+  GdkWindow ***windows;\n };\n \n static jint\n@@ -68,68 +69,317 @@ button_to_awt_mods (int button)\n }\n \n static jint\n-state_to_awt_mods (int mods)\n+state_to_awt_mods (guint state)\n {\n   jint result = 0;\n \n-  if (mods & (GDK_SHIFT_MASK | GDK_LOCK_MASK))\n+  if (state & GDK_SHIFT_MASK)\n     result |= AWT_SHIFT_MASK;\n-  if (mods & GDK_CONTROL_MASK)\n+  if (state & GDK_CONTROL_MASK)\n     result |= AWT_CTRL_MASK;\n-  \n+  if (state & GDK_MOD1_MASK)\n+    result |= AWT_ALT_MASK;\n+\n   return result;\n }\n \n+/* Modifier key events need special treatment.  In Sun's peer\n+   implementation, when a modifier key is pressed, the KEY_PRESSED\n+   event has that modifier in its modifiers list.  The corresponding\n+   KEY_RELEASED event's modifier list does not contain the modifier.\n+   For example, pressing and releasing the shift key will produce a\n+   key press event with modifiers=Shift, and a key release event with\n+   no modifiers.  GDK's key events behave in the exact opposite way,\n+   so this translation code is needed. */\n+static jint\n+keyevent_state_to_awt_mods (GdkEvent *event)\n+{\n+  jint result = 0;\n+  guint state;\n+\n+  if (event->type == GDK_KEY_PRESS)\n+    {\n+      state = event->key.state;\n+\n+      if (event->key.keyval == GDK_Shift_L\n+          || event->key.keyval == GDK_Shift_R)\n+        result |= AWT_SHIFT_MASK;\n+      else\n+        {\n+          if (state & GDK_SHIFT_MASK)\n+            result |= AWT_SHIFT_MASK;\n+        }\n+\n+      if (event->key.keyval == GDK_Control_L\n+          || event->key.keyval == GDK_Control_R)\n+        result |= AWT_CTRL_MASK;\n+      else\n+        {\n+          if (state & GDK_CONTROL_MASK)\n+            result |= AWT_CTRL_MASK;\n+        }\n+\n+      if (event->key.keyval == GDK_Alt_L\n+          || event->key.keyval == GDK_Alt_R)\n+        result |= AWT_ALT_MASK;\n+      else\n+        {\n+          if (state & GDK_MOD1_MASK)\n+            result |= AWT_ALT_MASK;\n+        }\n+    }\n+  else if (event->type == GDK_KEY_RELEASE)\n+    {\n+      state = event->key.state;\n+\n+      if (event->key.keyval != GDK_Shift_L\n+          && event->key.keyval != GDK_Shift_R)\n+        {\n+          if (state & GDK_SHIFT_MASK)\n+            result |= AWT_SHIFT_MASK;\n+        }\n+      if (event->key.keyval != GDK_Control_L\n+          && event->key.keyval != GDK_Control_R)\n+        {\n+          if (state & GDK_CONTROL_MASK)\n+            result |= AWT_CTRL_MASK;\n+        }\n+\n+      if (event->key.keyval != GDK_Alt_L\n+          && event->key.keyval != GDK_Alt_R)\n+        {\n+          if (state & GDK_MOD1_MASK)\n+            result |= AWT_ALT_MASK;\n+        }\n+    }\n+\n+  return result;\n+}\n+\n+/* Get the first keyval in the keymap for this event's keycode.  The\n+   first keyval corresponds roughly to Java's notion of a virtual\n+   key.  Returns the uppercase version of the first keyval. */\n+static guint\n+get_first_keyval_from_keymap (GdkEvent *event)\n+{\n+  guint keyval;\n+  guint *keyvals;\n+  gint n_entries;\n+\n+  if (!gdk_keymap_get_entries_for_keycode (NULL,\n+                                           event->key.hardware_keycode,\n+                                           NULL,\n+                                           &keyvals,\n+                                           &n_entries))\n+    {\n+      g_warning (\"No keyval found for hardware keycode %d\\n\",\n+                 event->key.hardware_keycode);\n+      /* Try to recover by using the keyval in the event structure. */\n+      keyvals = &(event->key.keyval);\n+    }\n+  keyval = keyvals[0];\n+  g_free (keyvals);\n+\n+  return gdk_keyval_to_upper (keyval);\n+}\n+\n #ifdef __GNUC__\n __inline\n #endif\n static jint\n-keysym_to_awt_keycode (guint keyval)\n+keysym_to_awt_keycode (GdkEvent *event)\n {\n-  guint vk;\n+  guint ukeyval;\n+  guint state;\n \n-  vk = gdk_keyval_to_upper (keyval);\n+  ukeyval = get_first_keyval_from_keymap (event);\n+  state = event->key.state;\n \n-  if (vk >= 0x41 && vk <= 0x5A)\t/* VK_A through VK_Z */\n-    return vk;\n+  /* VK_A through VK_Z */\n+  if (ukeyval >= GDK_A && ukeyval <= GDK_Z)\n+    return ukeyval;\n \n-  if (vk >= 0x30 && vk <= 0x39)\t/* VK_0 through VK_9 */\n-    return vk;\n+  /* VK_0 through VK_9 */\n+  if (ukeyval >= GDK_0 && ukeyval <= GDK_9)\n+    return ukeyval;\n \n-  switch (vk)\n+  switch (ukeyval)\n     {\n-    case GDK_Alt_L:\n-    case GDK_Alt_R:\n-      return VK_ALT;\n+    case GDK_Return:\n+    case GDK_KP_Enter:\n+      return VK_ENTER;\n     case GDK_BackSpace:\n       return VK_BACK_SPACE;\n+    case GDK_Tab:\n+      return VK_TAB;\n     case GDK_Cancel:\n       return VK_CANCEL;\n-    case GDK_Caps_Lock:\n-      return VK_CAPS_LOCK;\n     case GDK_Clear:\n       return VK_CLEAR;\n-    case GDK_bracketright:\n-      return VK_CLOSE_BRACKET;\n-    case GDK_comma:\n-      return VK_COMMA;\n+    case GDK_Shift_L:\n+    case GDK_Shift_R:\n+      return VK_SHIFT;\n     case GDK_Control_L:\n     case GDK_Control_R:\n       return VK_CONTROL;\n+    case GDK_Alt_L:\n+    case GDK_Alt_R:\n+      return VK_ALT;\n+    case GDK_Pause:\n+      return VK_PAUSE;\n+    case GDK_Caps_Lock:\n+      return VK_CAPS_LOCK;\n+    case GDK_Escape:\n+      return VK_ESCAPE;\n+    case GDK_space:\n+      return VK_SPACE;\n+    case GDK_KP_Page_Up:\n+      /* For keys on the numeric keypad, the JVM produces one of two\n+         virtual keys, depending on the num lock state. */\n+      if (state & GDK_MOD2_MASK)\n+        return VK_NUMPAD9;\n+      else\n+        return VK_PAGE_UP;\n+    case GDK_Page_Up:\n+      return VK_PAGE_UP;\n+    case GDK_KP_Page_Down:\n+      if (state & GDK_MOD2_MASK)\n+        return VK_NUMPAD3;\n+      else\n+        return VK_PAGE_DOWN;\n+    case GDK_Page_Down:\n+      return VK_PAGE_DOWN;\n+    case GDK_KP_End:\n+      if (state & GDK_MOD2_MASK)\n+        return VK_NUMPAD1;\n+      else\n+        return VK_END;\n+    case GDK_End:\n+      return VK_END;\n+    case GDK_KP_Home:\n+      if (state & GDK_MOD2_MASK)\n+        return VK_NUMPAD7;\n+      else\n+        return VK_HOME;\n+    case GDK_Home:\n+      return VK_HOME;\n+    case GDK_KP_Begin:\n+      if (state & GDK_MOD2_MASK)\n+        return VK_NUMPAD5;\n+      else\n+        return VK_UNDEFINED;\n+    case GDK_Left:\n+      return VK_LEFT;\n+    case GDK_Up:\n+      return VK_UP;\n+    case GDK_Right:\n+      return VK_RIGHT;\n+    case GDK_Down:\n+      return VK_DOWN;\n+    case GDK_comma:\n+      return VK_COMMA;\n+    case GDK_minus:\n+      return VK_MINUS;\n+    case GDK_period:\n+      return VK_PERIOD;\n+    case GDK_slash:\n+      return VK_SLASH;\n+      /*\n+      return VK_0;\n+      return VK_1;\n+      return VK_2;\n+      return VK_3;\n+      return VK_4;\n+      return VK_5;\n+      return VK_6;\n+      return VK_7;\n+      return VK_8;\n+      return VK_9;\n+      */\n+    case GDK_semicolon:\n+      return VK_SEMICOLON;\n+    case GDK_equal:\n+      return VK_EQUALS;\n+      /*\n+      return VK_A;\n+      return VK_B;\n+      return VK_C;\n+      return VK_D;\n+      return VK_E;\n+      return VK_F;\n+      return VK_G;\n+      return VK_H;\n+      return VK_I;\n+      return VK_J;\n+      return VK_K;\n+      return VK_L;\n+      return VK_M;\n+      return VK_N;\n+      return VK_O;\n+      return VK_P;\n+      return VK_Q;\n+      return VK_R;\n+      return VK_S;\n+      return VK_T;\n+      return VK_U;\n+      return VK_V;\n+      return VK_W;\n+      return VK_X;\n+      return VK_Y;\n+      return VK_Z;\n+      */\n+    case GDK_bracketleft:\n+      return VK_OPEN_BRACKET;\n+    case GDK_backslash:\n+      return VK_BACK_SLASH;\n+    case GDK_bracketright:\n+      return VK_CLOSE_BRACKET;\n+    case GDK_KP_0:\n+      return VK_NUMPAD0;\n+    case GDK_KP_1:\n+      return VK_NUMPAD1;\n+    case GDK_KP_2:\n+      return VK_NUMPAD2;\n+    case GDK_KP_3:\n+      return VK_NUMPAD3;\n+    case GDK_KP_4:\n+      return VK_NUMPAD4;\n+    case GDK_KP_5:\n+      return VK_NUMPAD5;\n+    case GDK_KP_6:\n+      return VK_NUMPAD6;\n+    case GDK_KP_7:\n+      return VK_NUMPAD7;\n+    case GDK_KP_8:\n+      return VK_NUMPAD8;\n+    case GDK_KP_9:\n+      return VK_NUMPAD9;\n+    case GDK_KP_Multiply:\n+      return VK_MULTIPLY;\n+    case GDK_KP_Add:\n+      return VK_ADD;\n+      /*\n+      return VK_SEPARATER;\n+      */\n+    case GDK_KP_Separator:\n+      return VK_SEPARATOR;\n+    case GDK_KP_Subtract:\n+      return VK_SUBTRACT;\n     case GDK_KP_Decimal:\n       return VK_DECIMAL;\n-    case GDK_Delete:\n-      return VK_DELETE;\n     case GDK_KP_Divide:\n       return VK_DIVIDE;\n-    case GDK_Down:\n-      return VK_DOWN;\n-    case GDK_End:\n-      return VK_END;\n-    case GDK_Return:\n-      return VK_ENTER;\n-    case GDK_Escape:\n-      return VK_ESCAPE;\n+    case GDK_KP_Delete:\n+      if (state & GDK_MOD2_MASK)\n+        return VK_DECIMAL;\n+      else\n+        return VK_DELETE;\n+    case GDK_Delete:\n+      return VK_DELETE;\n+    case GDK_Num_Lock:\n+      return VK_NUM_LOCK;\n+    case GDK_Scroll_Lock:\n+      return VK_SCROLL_LOCK;\n     case GDK_F1:\n       return VK_F1;\n     case GDK_F2:\n@@ -154,81 +404,384 @@ keysym_to_awt_keycode (guint keyval)\n       return VK_F11;\n     case GDK_F12:\n       return VK_F12;\n-    case GDK_Help:\n-      return VK_HELP;\n-    case GDK_Home:\n-      return VK_HOME;\n+    case GDK_F13:\n+      return VK_F13;\n+    case GDK_F14:\n+      return VK_F14;\n+    case GDK_F15:\n+      return VK_F15;\n+    case GDK_F16:\n+      return VK_F16;\n+    case GDK_F17:\n+      return VK_F17;\n+    case GDK_F18:\n+      return VK_F18;\n+    case GDK_F19:\n+      return VK_F19;\n+    case GDK_F20:\n+      return VK_F20;\n+    case GDK_F21:\n+      return VK_F21;\n+    case GDK_F22:\n+      return VK_F22;\n+    case GDK_F23:\n+      return VK_F23;\n+    case GDK_F24:\n+      return VK_F24;\n+    case GDK_Print:\n+      return VK_PRINTSCREEN;\n+    case GDK_KP_Insert:\n+      if (state & GDK_MOD2_MASK)\n+        return VK_NUMPAD0;\n+      else\n+        return VK_INSERT;\n     case GDK_Insert:\n       return VK_INSERT;\n+    case GDK_Help:\n+      return VK_HELP;\n+    case GDK_Meta_L:\n+    case GDK_Meta_R:\n+      return VK_META;\n+    case GDK_grave:\n+      return VK_BACK_QUOTE;\n+    case GDK_apostrophe:\n+      return VK_QUOTE;\n+    case GDK_KP_Up:\n+      if (state & GDK_MOD2_MASK)\n+        return VK_NUMPAD8;\n+      else\n+        return VK_KP_UP;\n+    case GDK_KP_Down:\n+      if (state & GDK_MOD2_MASK)\n+        return VK_NUMPAD2;\n+      else\n+        return VK_KP_DOWN;\n+    case GDK_KP_Left:\n+      if (state & GDK_MOD2_MASK)\n+        return VK_NUMPAD4;\n+      else\n+        return VK_KP_LEFT;\n+    case GDK_KP_Right:\n+      if (state & GDK_MOD2_MASK)\n+        return VK_NUMPAD6;\n+      else\n+        return VK_KP_RIGHT;\n+    case GDK_dead_grave:\n+      return VK_DEAD_GRAVE;\n+    case GDK_dead_acute:\n+      return VK_DEAD_ACUTE;\n+    case GDK_dead_circumflex:\n+      return VK_DEAD_CIRCUMFLEX;\n+    case GDK_dead_tilde:\n+      return VK_DEAD_TILDE;\n+    case GDK_dead_macron:\n+      return VK_DEAD_MACRON;\n+    case GDK_dead_breve:\n+      return VK_DEAD_BREVE;\n+    case GDK_dead_abovedot:\n+      return VK_DEAD_ABOVEDOT;\n+    case GDK_dead_diaeresis:\n+      return VK_DEAD_DIAERESIS;\n+    case GDK_dead_abovering:\n+      return VK_DEAD_ABOVERING;\n+    case GDK_dead_doubleacute:\n+      return VK_DEAD_DOUBLEACUTE;\n+    case GDK_dead_caron:\n+      return VK_DEAD_CARON;\n+    case GDK_dead_cedilla:\n+      return VK_DEAD_CEDILLA;\n+    case GDK_dead_ogonek:\n+      return VK_DEAD_OGONEK;\n+    case GDK_dead_iota:\n+      return VK_DEAD_IOTA;\n+    case GDK_dead_voiced_sound:\n+      return VK_DEAD_VOICED_SOUND;\n+    case GDK_dead_semivoiced_sound:\n+      return VK_DEAD_SEMIVOICED_SOUND;\n+    case GDK_ampersand:\n+      return VK_AMPERSAND;\n+    case GDK_asterisk:\n+      return VK_ASTERISK;\n+    case GDK_quotedbl:\n+      return VK_QUOTEDBL;\n+    case GDK_less:\n+      return VK_LESS;\n+    case GDK_greater:\n+      return VK_GREATER;\n+    case GDK_braceleft:\n+      return VK_BRACELEFT;\n+    case GDK_braceright:\n+      return VK_BRACERIGHT;\n+    case GDK_at:\n+      return VK_AT;\n+    case GDK_colon:\n+      return VK_COLON;\n+    case GDK_asciicircum:\n+      return VK_CIRCUMFLEX;\n+    case GDK_dollar:\n+      return VK_DOLLAR;\n+    case GDK_EuroSign:\n+      return VK_EURO_SIGN;\n+    case GDK_exclam:\n+      return VK_EXCLAMATION_MARK;\n+    case GDK_exclamdown:\n+      return VK_INVERTED_EXCLAMATION_MARK;\n+    case GDK_parenleft:\n+      return VK_LEFT_PARENTHESIS;\n+    case GDK_numbersign:\n+      return VK_NUMBER_SIGN;\n+    case GDK_plus:\n+      return VK_PLUS;\n+    case GDK_parenright:\n+      return VK_RIGHT_PARENTHESIS;\n+    case GDK_underscore:\n+      return VK_UNDERSCORE;\n+      /*\n+      return VK_FINAL;\n+      return VK_CONVERT;\n+      return VK_NONCONVERT;\n+      return VK_ACCEPT;\n+      */\n+    case GDK_Mode_switch:\n+      return VK_MODECHANGE;\n+      /*\n+      return VK_KANA;\n+      */\n     case GDK_Kanji:\n       return VK_KANJI;\n-    case GDK_Left:\n-      return VK_LEFT;\n+      /*\n+      return VK_ALPHANUMERIC;\n+      */\n+    case GDK_Katakana:\n+      return VK_KATAKANA;\n+    case GDK_Hiragana:\n+      return VK_HIRAGANA;\n+      /*\n+      return VK_FULL_WIDTH;\n+      return VK_HALF_WIDTH;\n+      return VK_ROMAN_CHARACTERS;\n+      return VK_ALL_CANDIDATES;\n+      */\n+    case GDK_PreviousCandidate:\n+      return VK_PREVIOUS_CANDIDATE;\n+    case GDK_Codeinput:\n+      return VK_CODE_INPUT;\n+      /*\n+      return VK_JAPANESE_KATAKANA;\n+      return VK_JAPANESE_HIRAGANA;\n+      return VK_JAPANESE_ROMAN;\n+      */\n+    case GDK_Kana_Lock:\n+      return VK_KANA_LOCK;\n+      /*\n+      return VK_INPUT_METHOD_ON_OFF;\n+      return VK_CUT;\n+      return VK_COPY;\n+      return VK_PASTE;\n+      return VK_UNDO;\n+      return VK_AGAIN;\n+      return VK_FIND;\n+      return VK_PROPS;\n+      return VK_STOP;\n+      return VK_COMPOSE;\n+      return VK_ALT_GRAPH;\n+      */\n+    default:\n+      return VK_UNDEFINED;\n+    }\n+}\n+\n+static jint\n+keysym_to_awt_keylocation (GdkEvent *event)\n+{\n+  guint ukeyval;\n+\n+  ukeyval = get_first_keyval_from_keymap (event);\n+\n+  /* VK_A through VK_Z */\n+  if (ukeyval >= GDK_A && ukeyval <= GDK_Z)\n+    return AWT_KEY_LOCATION_STANDARD;\n+\n+  /* VK_0 through VK_9 */\n+  if (ukeyval >= GDK_0 && ukeyval <= GDK_9)\n+    return AWT_KEY_LOCATION_STANDARD;\n+\n+  switch (ukeyval)\n+    {\n+    case GDK_Shift_L:\n+    case GDK_Control_L:\n+    case GDK_Alt_L:\n     case GDK_Meta_L:\n+      return AWT_KEY_LOCATION_LEFT;\n+\n+    case GDK_Shift_R:\n+    case GDK_Control_R:\n+    case GDK_Alt_R:\n     case GDK_Meta_R:\n-      return VK_META;\n-    case GDK_KP_Multiply:\n-      return VK_MULTIPLY;\n-    case GDK_Num_Lock:\n-      return VK_NUM_LOCK;\n+      return AWT_KEY_LOCATION_RIGHT;\n+\n+    case GDK_Return:\n+    case GDK_BackSpace:\n+    case GDK_Tab:\n+    case GDK_Cancel:\n+    case GDK_Clear:\n+    case GDK_Pause:\n+    case GDK_Caps_Lock:\n+    case GDK_Escape:\n+    case GDK_space:\n+    case GDK_Page_Up:\n+    case GDK_Page_Down:\n+    case GDK_End:\n+    case GDK_Home:\n+    case GDK_Left:\n+    case GDK_Up:\n+    case GDK_Right:\n+    case GDK_Down:\n+    case GDK_comma:\n+    case GDK_minus:\n+    case GDK_period:\n+    case GDK_slash:\n+    case GDK_semicolon:\n+    case GDK_equal:\n+    case GDK_bracketleft:\n+    case GDK_backslash:\n+    case GDK_bracketright:\n+    case GDK_Delete:\n+    case GDK_Scroll_Lock:\n+    case GDK_F1:\n+    case GDK_F2:\n+    case GDK_F3:\n+    case GDK_F4:\n+    case GDK_F5:\n+    case GDK_F6:\n+    case GDK_F7:\n+    case GDK_F8:\n+    case GDK_F9:\n+    case GDK_F10:\n+    case GDK_F11:\n+    case GDK_F12:\n+    case GDK_F13:\n+    case GDK_F14:\n+    case GDK_F15:\n+    case GDK_F16:\n+    case GDK_F17:\n+    case GDK_F18:\n+    case GDK_F19:\n+    case GDK_F20:\n+    case GDK_F21:\n+    case GDK_F22:\n+    case GDK_F23:\n+    case GDK_F24:\n+    case GDK_Print:\n+    case GDK_Insert:\n+    case GDK_Help:\n+    case GDK_grave:\n+    case GDK_apostrophe:\n+    case GDK_dead_grave:\n+    case GDK_dead_acute:\n+    case GDK_dead_circumflex:\n+    case GDK_dead_tilde:\n+    case GDK_dead_macron:\n+    case GDK_dead_breve:\n+    case GDK_dead_abovedot:\n+    case GDK_dead_diaeresis:\n+    case GDK_dead_abovering:\n+    case GDK_dead_doubleacute:\n+    case GDK_dead_caron:\n+    case GDK_dead_cedilla:\n+    case GDK_dead_ogonek:\n+    case GDK_dead_iota:\n+    case GDK_dead_voiced_sound:\n+    case GDK_dead_semivoiced_sound:\n+    case GDK_ampersand:\n+    case GDK_asterisk:\n+    case GDK_quotedbl:\n+    case GDK_less:\n+    case GDK_greater:\n+    case GDK_braceleft:\n+    case GDK_braceright:\n+    case GDK_at:\n+    case GDK_colon:\n+    case GDK_asciicircum:\n+    case GDK_dollar:\n+    case GDK_EuroSign:\n+    case GDK_exclam:\n+    case GDK_exclamdown:\n+    case GDK_parenleft:\n+    case GDK_numbersign:\n+    case GDK_plus:\n+    case GDK_parenright:\n+    case GDK_underscore:\n+    case GDK_Mode_switch:\n+    case GDK_Kanji:\n+    case GDK_Katakana:\n+    case GDK_Hiragana:\n+    case GDK_PreviousCandidate:\n+    case GDK_Codeinput:\n+    case GDK_Kana_Lock:\n+      return AWT_KEY_LOCATION_STANDARD;\n+\n+    case GDK_KP_Enter:\n+    case GDK_KP_Page_Up:\n+    case GDK_KP_Page_Down:\n+    case GDK_KP_End:\n+    case GDK_KP_Home:\n+    case GDK_KP_Begin:\n     case GDK_KP_0:\n-      return VK_NUMPAD0;\n     case GDK_KP_1:\n-      return VK_NUMPAD1;\n     case GDK_KP_2:\n-      return VK_NUMPAD2;\n     case GDK_KP_3:\n-      return VK_NUMPAD3;\n     case GDK_KP_4:\n-      return VK_NUMPAD4;\n     case GDK_KP_5:\n-      return VK_NUMPAD5;\n     case GDK_KP_6:\n-      return VK_NUMPAD6;\n     case GDK_KP_7:\n-      return VK_NUMPAD7;\n     case GDK_KP_8:\n-      return VK_NUMPAD8;\n     case GDK_KP_9:\n-      return VK_NUMPAD9;\n-    case GDK_bracketleft:\n-      return VK_OPEN_BRACKET;\n-    case GDK_Page_Down:\n-      return VK_PAGE_DOWN;\n-    case GDK_Page_Up:\n-      return VK_PAGE_UP;\n-    case GDK_Pause:\n-      return VK_PAUSE;\n-    case GDK_period:\n-      return VK_PERIOD;\n-    case GDK_Print:\n-      return VK_PRINTSCREEN;\n-    case GDK_quoteright:\n-      return VK_QUOTE;\n-    case GDK_Right:\n-      return VK_RIGHT;\n-    case GDK_Scroll_Lock:\n-      return VK_SCROLL_LOCK;\n-    case GDK_semicolon:\n-      return VK_SEMICOLON;\n+    case GDK_KP_Multiply:\n+    case GDK_KP_Add:\n     case GDK_KP_Separator:\n-      return VK_SEPARATOR;\n-    case GDK_Shift_L:\n-    case GDK_Shift_R:\n-      return VK_SHIFT;\n-    case GDK_slash:\n-      return VK_SLASH;\n-    case GDK_space:\n-      return VK_SPACE;\n     case GDK_KP_Subtract:\n-      return VK_SUBTRACT;\n-    case GDK_Tab:\n-      return VK_TAB;\n-    case GDK_Up:\n-      return VK_UP;\n+    case GDK_KP_Decimal:\n+    case GDK_KP_Divide:\n+    case GDK_KP_Delete:\n+    case GDK_Num_Lock:\n+    case GDK_KP_Insert:\n+    case GDK_KP_Up:\n+    case GDK_KP_Down:\n+    case GDK_KP_Left:\n+    case GDK_KP_Right:\n+      return AWT_KEY_LOCATION_NUMPAD;\n \n     default:\n-      return VK_UNDEFINED;\n+      return AWT_KEY_LOCATION_UNKNOWN;\n+    }\n+}\n+\n+static jchar\n+keyevent_to_awt_keychar (GdkEvent *event)\n+{\n+  if (event->key.length > 0)\n+    {\n+      /* Translate GDK carriage return to Java linefeed. */\n+      if (event->key.string[0] == 13)\n+        return VK_ENTER;\n+      else\n+        return event->key.string[0];\n+    }\n+  else\n+    {\n+      switch (event->key.keyval)\n+        {\n+        case GDK_BackSpace:\n+          return VK_BACK_SPACE;\n+        case GDK_Tab:\n+          return VK_TAB;\n+        case GDK_Delete:\n+        case GDK_KP_Delete:\n+          return VK_DELETE;\n+        default:\n+          return AWT_KEY_CHAR_UNDEFINED;\n+        }\n     }\n }\n \n@@ -237,11 +790,22 @@ keysym_to_awt_keycode (guint keyval)\n    GtkIMContext \"commit\" signals, but that do trigger Java KEY_TYPED\n    events. */\n static int\n-generates_key_typed_event (guint keyval, GtkWidget *source)\n+generates_key_typed_event (GdkEvent *event, GtkWidget *source)\n {\n-  return (keyval == GDK_BackSpace\n+  guint keyval;\n+\n+  if (!GTK_IS_ENTRY (source)\n+      && !GTK_IS_TEXT_VIEW (source))\n+    return event->key.length ? 1 : 0;\n+\n+  keyval = event->key.keyval;\n+\n+  return (keyval == GDK_Escape\n+          || keyval == GDK_BackSpace\n           || keyval == GDK_Delete\n+          || keyval == GDK_KP_Delete\n           || keyval == GDK_Return\n+          || keyval == GDK_KP_Enter\n           || (keyval == GDK_Tab\n               && GTK_IS_TEXT_VIEW(source))) ? 1 : 0;\n }\n@@ -469,7 +1033,7 @@ awt_event_handler (GdkEvent *event)\n \t    window = GTK_WINDOW (gtk_widget_get_ancestor (widget, \n \t\t\t\t\t\t\t  GTK_TYPE_WINDOW));\n \t    if (window\n-\t\t&& GTK_WIDGET_IS_SENSITIVE (window) \n+\t\t&& GTK_WIDGET_IS_SENSITIVE (window)\n \t\t&& window->focus_widget\n \t\t&& GTK_WIDGET_IS_SENSITIVE (window->focus_widget)\n \t\t&& window->focus_widget->window)\n@@ -495,28 +1059,24 @@ awt_event_handler (GdkEvent *event)\n \t\t\t\t  NULL,\n \t\t\t\t  (guchar **)&obj_ptr);\n \n-\t\t/*  \t    if (grab  && GTK_WIDGET_HAS_DEFAULT (widget) ) */\n-\t\t/*  \t      { */\n \t\t(*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr,\n \t\t\t\t\t    postKeyEventID,\n \t\t\t\t\t    (jint) AWT_KEY_PRESSED,\n \t\t\t\t\t    (jlong) event->key.time,\n-                                            state_to_awt_mods (event->key.state),\n-                                            keysym_to_awt_keycode (event->key.keyval),\n-\t\t\t\t\t    (jchar) (event->key.length) ? \n-\t\t\t\t\t    event->key.string[0] : \n-\t\t\t\t\t    AWT_KEY_CHAR_UNDEFINED);\n-\n-                if (generates_key_typed_event (event->key.keyval, window->focus_widget))\n-\t\t  (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr,\n-\t\t\t\t\t      postKeyEventID,\n-\t\t\t\t\t      (jint) AWT_KEY_TYPED,\n-\t\t\t\t\t      (jlong) event->key.time,\n+                             keyevent_state_to_awt_mods (event),\n+                             keysym_to_awt_keycode (event),\n+                             keyevent_to_awt_keychar (event),\n+                             keysym_to_awt_keylocation (event));\n+\n+                if (generates_key_typed_event (event, window->focus_widget))\n+                  (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr,\n+                                              postKeyEventID,\n+                                              (jint) AWT_KEY_TYPED,\n+                                              (jlong) event->key.time,\n                                               state_to_awt_mods (event->key.state),\n-\t\t\t\t\t      VK_UNDEFINED,\n-                                              (jchar) (event->key.length) ?\n-                                              event->key.string[0] :\n-                                              AWT_KEY_CHAR_UNDEFINED);\n+                                              VK_UNDEFINED,\n+                                              keyevent_to_awt_keychar (event),\n+                                              AWT_KEY_LOCATION_UNKNOWN);\n \t      }\n \t  }\n \t  break;\n@@ -558,11 +1118,10 @@ awt_event_handler (GdkEvent *event)\n \t\t\t\t\t    postKeyEventID,\n \t\t\t\t\t    (jint) AWT_KEY_RELEASED,\n \t\t\t\t\t    (jlong) event->key.time,\n-\t\t\t\t\t  state_to_awt_mods (event->key.state),\n-\t\t\t\t     keysym_to_awt_keycode (event->key.keyval),\n-\t\t\t\t\t    (jchar) (event->key.length) ? \n-\t\t\t\t\t    event->key.string[0] : \n-\t\t\t\t\t    AWT_KEY_CHAR_UNDEFINED);\n+\t\t\t     keyevent_state_to_awt_mods (event),\n+\t\t\t     keysym_to_awt_keycode (event),\n+                             keyevent_to_awt_keychar (event),\n+                             keysym_to_awt_keylocation (event));\n               }\n           }\n           break;\n@@ -573,11 +1132,11 @@ awt_event_handler (GdkEvent *event)\n \t\t\t\t      AWT_FOCUS_GAINED : AWT_FOCUS_LOST,\n \t\t\t\t      JNI_FALSE);\n \t  break;\n-\tdefault:\n+        default:\n \t}\n       g_free (obj_ptr);\n-    } \n-  \n+    }\n+\n   gtk_main_do_event (event);\n }\n "}, {"sha": "7bddc330ddbfe0da24564f6c0ef7237e1ceda9f0", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkLabelPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkLabelPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkLabelPeer.c?ref=d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "patch": "@@ -39,7 +39,7 @@ exception statement from your version. */\n #include \"gtkpeer.h\"\n #include \"gnu_java_awt_peer_gtk_GtkLabelPeer.h\"\n \n-JNIEXPORT void JNICALL \n+JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkLabelPeer_create\n   (JNIEnv *env, jobject obj)\n {"}, {"sha": "f67845a794fe8983496dbff76fdaa1a06e57eec3", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c?ref=d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "patch": "@@ -155,7 +155,7 @@ Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit (JNIEnv *env, jclass clazz)\n   postExposeEventID = (*env)->GetMethodID (env, gtkcomponentpeer, \n \t\t\t\t\t  \"postExposeEvent\", \"(IIII)V\");\n   postKeyEventID = (*env)->GetMethodID (env, gtkcomponentpeer,\n-\t\t\t\t\t\"postKeyEvent\", \"(IJIIC)V\");\n+\t\t\t\t\t\"postKeyEvent\", \"(IJIICI)V\");\n   postFocusEventID = (*env)->GetMethodID (env, gtkcomponentpeer,\n \t\t\t\t\t  \"postFocusEvent\", \"(IZ)V\");\n   postAdjustmentEventID = (*env)->GetMethodID (env, gtkscrollbarpeer,"}, {"sha": "9a62c1a5a364dad001b5b3c8a11e361c77624e2c", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextAreaPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextAreaPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextAreaPeer.c?ref=d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "patch": "@@ -47,6 +47,7 @@ Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_create\n   GtkWidget *text, *sw;\n \n   gdk_threads_enter ();\n+\n   text = gtk_text_view_new ();\n   gtk_widget_show (text);\n \n@@ -159,7 +160,7 @@ Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_replaceRange\n   (*env)->ReleaseStringUTFChars (env, contents, str);\n }\n \n-JNIEXPORT void JNICALL \n+JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_gtkSetFont\n   (JNIEnv *env, jobject obj, jstring jname, jint size)\n {\n@@ -169,6 +170,7 @@ Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_gtkSetFont\n   PangoFontDescription *font_desc;\n \n   ptr = NSA_GET_PTR (env, obj);\n+\n   text = GTK_WIDGET (TEXT_FROM_SW (ptr));\n \n   font_name = (*env)->GetStringUTFChars (env, jname, NULL);"}, {"sha": "29689fb8c005286d3a3354c8da0b18d1b0fd6cc1", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c?ref=d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "patch": "@@ -456,8 +456,6 @@ textcomponent_commit_cb (GtkIMContext *context,\n                          const gchar  *str,\n                          jobject peer)\n {\n-  void *ptr;\n-\n   /* str is a \\0-terminated UTF-8 encoded character. */\n   gunichar2 *jc = g_utf8_to_utf16 (str, -1, NULL, NULL, NULL);\n \n@@ -473,7 +471,8 @@ textcomponent_commit_cb (GtkIMContext *context,\n                                 /* ... and assume no modifiers. */\n                                 0,\n                                 VK_UNDEFINED,\n-                                (jchar) jc[0]);\n+                                (jchar) jc[0],\n+                                AWT_KEY_LOCATION_UNKNOWN);\n   g_free (jc);\n }\n "}, {"sha": "ee6132ddeeae400d9d6504d38418b68edc960738", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c?ref=d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "patch": "@@ -52,7 +52,7 @@ Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_create\n   NSA_SET_PTR (env, obj, widget);\n }\n \n-JNIEXPORT void JNICALL \n+JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_gtkEntryGetSize\n   (JNIEnv *env, jobject obj, jint cols, jintArray jdims)\n {\n@@ -100,7 +100,7 @@ Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_setEchoChar\n   gdk_threads_leave ();\n }\n \n-JNIEXPORT void JNICALL \n+JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_gtkSetFont\n   (JNIEnv *env, jobject obj, jstring jname, jint size)\n {"}, {"sha": "2aa7109725a40c4fac773b1889ecfca97924a758", "filename": "libjava/jni/gtk-peer/gtkpeer.h", "status": "modified", "additions": 178, "deletions": 91, "changes": 269, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h?ref=d0b8b6fbf6e961b01b13c0b3aacb9202ca209c1b", "patch": "@@ -142,77 +142,82 @@ struct graphics\n #define AWT_KEY_PRESSED  401\n #define AWT_KEY_RELEASED 402\n \n-#define VK_UNDEFINED   0\n #define AWT_KEY_CHAR_UNDEFINED 0\n \n-#define VK_0 48\n-#define VK_1 49\n-#define VK_2 50\n-#define VK_3 51\n-#define VK_4 52\n-#define VK_5 53\n-#define VK_6 54\n-#define VK_7 55\n-#define VK_8 56\n-#define VK_9 57\n-#define VK_A 65\n-#define VK_ACCEPT 30\n-#define VK_ADD 107\n-#define VK_ALT 18\n-#define VK_B 66\n-#define VK_BACK_QUOTE 192\n-#define VK_BACK_SLASH 92\n-#define VK_BACK_SPACE 8\n-#define VK_C 67\n+#define AWT_KEY_LOCATION_UNKNOWN 0\n+#define AWT_KEY_LOCATION_STANDARD 1\n+#define AWT_KEY_LOCATION_LEFT 2\n+#define AWT_KEY_LOCATION_RIGHT 3\n+#define AWT_KEY_LOCATION_NUMPAD 4\n+\n+/* Virtual Keys */\n+/* This list should be kept in the same order as the VK_ field\n+   declarations in KeyEvent.java. */\n+#define VK_ENTER '\\n'\n+#define VK_BACK_SPACE '\\b'\n+#define VK_TAB '\\t'\n #define VK_CANCEL 3\n-#define VK_CAPS_LOCK 20\n-#define VK_CLEAR 12 \n-#define VK_CLOSE_BRACKET 93\n-#define VK_COMMA 44\n+#define VK_CLEAR 12\n+#define VK_SHIFT 16\n #define VK_CONTROL 17\n-#define VK_CONVERT 28\n-#define VK_D 68\n-#define VK_DECIMAL 110\n-#define VK_DELETE 127\n-#define VK_DIVIDE 111\n-#define VK_DOWN 40\n-#define VK_E 69\n-#define VK_END 35\n-#define VK_ENTER 10\n+#define VK_ALT 18\n+#define VK_PAUSE 19\n+#define VK_CAPS_LOCK 20\n #define VK_ESCAPE 27\n-#define VK_F 70\n-#define VK_F1 112\n-#define VK_F10 121\n-#define VK_F11 122\n-#define VK_F12 123\n-#define VK_F2 113\n-#define VK_F3 114\n-#define VK_F4 115\n-#define VK_F5 116\n-#define VK_F6 117\n-#define VK_F7 118\n-#define VK_F8 119\n-#define VK_F9 120\n-#define VK_FINAL 24\n-#define VK_G 71\n-#define VK_H 72\n-#define VK_HELP 156\n+#define VK_SPACE ' '\n+#define VK_PAGE_UP 33\n+#define VK_PAGE_DOWN 34\n+#define VK_END 35\n #define VK_HOME 36\n-#define VK_I 73\n-#define VK_INSERT 155\n-#define VK_J 74\n-#define VK_K 75\n-#define VK_KANA 21\n-#define VK_KANJI 25\n-#define VK_L 76\n #define VK_LEFT 37\n-#define VK_M 77\n-#define VK_META 157\n-#define VK_MODECHANGE 31\n-#define VK_MULTIPLY 106\n-#define VK_N 78\n-#define VK_NONCONVERT 29\n-#define VK_NUM_LOCK 144\n+#define VK_UP 38\n+#define VK_RIGHT 39\n+#define VK_DOWN 40\n+#define VK_COMMA ','\n+#define VK_MINUS '-'\n+#define VK_PERIOD '.'\n+#define VK_SLASH '/'\n+#define VK_0 '0'\n+#define VK_1 '1'\n+#define VK_2 '2'\n+#define VK_3 '3'\n+#define VK_4 '4'\n+#define VK_5 '5'\n+#define VK_6 '6'\n+#define VK_7 '7'\n+#define VK_8 '8'\n+#define VK_9 '9'\n+#define VK_SEMICOLON ';'\n+#define VK_EQUALS '='\n+#define VK_A 'A'\n+#define VK_B 'B'\n+#define VK_C 'C'\n+#define VK_D 'D'\n+#define VK_E 'E'\n+#define VK_F 'F'\n+#define VK_G 'G'\n+#define VK_H 'H'\n+#define VK_I 'I'\n+#define VK_J 'J'\n+#define VK_K 'K'\n+#define VK_L 'L'\n+#define VK_M 'M'\n+#define VK_N 'N'\n+#define VK_O 'O'\n+#define VK_P 'P'\n+#define VK_Q 'Q'\n+#define VK_R 'R'\n+#define VK_S 'S'\n+#define VK_T 'T'\n+#define VK_U 'U'\n+#define VK_V 'V'\n+#define VK_W 'W'\n+#define VK_X 'X'\n+#define VK_Y 'Y'\n+#define VK_Z 'Z'\n+#define VK_OPEN_BRACKET '['\n+#define VK_BACK_SLASH '\\\\'\n+#define VK_CLOSE_BRACKET ']'\n #define VK_NUMPAD0 96\n #define VK_NUMPAD1 97\n #define VK_NUMPAD2 98\n@@ -223,35 +228,117 @@ struct graphics\n #define VK_NUMPAD7 103\n #define VK_NUMPAD8 104\n #define VK_NUMPAD9 105\n-#define VK_O 79\n-#define VK_OPEN_BRACKET 91\n-#define VK_P 80\n-#define VK_PAGE_DOWN 34\n-#define VK_PAGE_UP 33\n-#define VK_PAUSE 19\n-#define VK_PERIOD 46\n-#define VK_PRINTSCREEN 154\n-#define VK_Q 81\n-#define VK_QUOTE 222\n-#define VK_R 82\n-#define VK_RIGHT 39\n-#define VK_S 83\n-#define VK_SCROLL_LOCK 145\n-#define VK_SEMICOLON 59\n+#define VK_MULTIPLY 106\n+#define VK_ADD 107\n+#define VK_SEPARATER 108\n #define VK_SEPARATOR 108\n-#define VK_SHIFT 16\n-#define VK_SLASH 47\n-#define VK_SPACE 32\n #define VK_SUBTRACT 109\n-#define VK_T 84\n-#define VK_TAB 9\n-#define VK_U 85\n-#define VK_UP 38\n-#define VK_V 86\n-#define VK_W 87\n-#define VK_X 88\n-#define VK_Y 89\n-#define VK_Z 90\n+#define VK_DECIMAL 110\n+#define VK_DIVIDE 111\n+#define VK_DELETE 127\n+#define VK_NUM_LOCK 144\n+#define VK_SCROLL_LOCK 145\n+#define VK_F1 112\n+#define VK_F2 113\n+#define VK_F3 114\n+#define VK_F4 115\n+#define VK_F5 116\n+#define VK_F6 117\n+#define VK_F7 118\n+#define VK_F8 119\n+#define VK_F9 120\n+#define VK_F10 121\n+#define VK_F11 122\n+#define VK_F12 123\n+#define VK_F13 61440\n+#define VK_F14 61441\n+#define VK_F15 61442\n+#define VK_F16 61443\n+#define VK_F17 61444\n+#define VK_F18 61445\n+#define VK_F19 61446\n+#define VK_F20 61447\n+#define VK_F21 61448\n+#define VK_F22 61449\n+#define VK_F23 61450\n+#define VK_F24 61451\n+#define VK_PRINTSCREEN 154\n+#define VK_INSERT 155\n+#define VK_HELP 156\n+#define VK_META 157\n+#define VK_BACK_QUOTE 192\n+#define VK_QUOTE 222\n+#define VK_KP_UP 224\n+#define VK_KP_DOWN 225\n+#define VK_KP_LEFT 226\n+#define VK_KP_RIGHT 227\n+#define VK_DEAD_GRAVE 128\n+#define VK_DEAD_ACUTE 129\n+#define VK_DEAD_CIRCUMFLEX 130\n+#define VK_DEAD_TILDE 131\n+#define VK_DEAD_MACRON 132\n+#define VK_DEAD_BREVE 133\n+#define VK_DEAD_ABOVEDOT 134\n+#define VK_DEAD_DIAERESIS 135\n+#define VK_DEAD_ABOVERING 136\n+#define VK_DEAD_DOUBLEACUTE 137\n+#define VK_DEAD_CARON 138\n+#define VK_DEAD_CEDILLA 139\n+#define VK_DEAD_OGONEK 140\n+#define VK_DEAD_IOTA 141\n+#define VK_DEAD_VOICED_SOUND 142\n+#define VK_DEAD_SEMIVOICED_SOUND 143\n+#define VK_AMPERSAND 150\n+#define VK_ASTERISK 151\n+#define VK_QUOTEDBL 152\n+#define VK_LESS 153\n+#define VK_GREATER 160\n+#define VK_BRACELEFT 161\n+#define VK_BRACERIGHT 162\n+#define VK_AT 512\n+#define VK_COLON 513\n+#define VK_CIRCUMFLEX 514\n+#define VK_DOLLAR 515\n+#define VK_EURO_SIGN 516\n+#define VK_EXCLAMATION_MARK 517\n+#define VK_INVERTED_EXCLAMATION_MARK 518\n+#define VK_LEFT_PARENTHESIS 519\n+#define VK_NUMBER_SIGN 520\n+#define VK_PLUS 521\n+#define VK_RIGHT_PARENTHESIS 522\n+#define VK_UNDERSCORE 523\n+#define VK_FINAL 24\n+#define VK_CONVERT 28\n+#define VK_NONCONVERT 29\n+#define VK_ACCEPT 30\n+#define VK_MODECHANGE 31\n+#define VK_KANA 21\n+#define VK_KANJI 25\n+#define VK_ALPHANUMERIC 240\n+#define VK_KATAKANA 241\n+#define VK_HIRAGANA 242\n+#define VK_FULL_WIDTH 243\n+#define VK_HALF_WIDTH 244\n+#define VK_ROMAN_CHARACTERS 245\n+#define VK_ALL_CANDIDATES 256\n+#define VK_PREVIOUS_CANDIDATE 257\n+#define VK_CODE_INPUT 258\n+#define VK_JAPANESE_KATAKANA 259\n+#define VK_JAPANESE_HIRAGANA 260\n+#define VK_JAPANESE_ROMAN 261\n+#define VK_KANA_LOCK 262\n+#define VK_INPUT_METHOD_ON_OFF 263\n+#define VK_CUT 65489\n+#define VK_COPY 65485\n+#define VK_PASTE 65487\n+#define VK_UNDO 65483\n+#define VK_AGAIN 65481\n+#define VK_FIND 65488\n+#define VK_PROPS 65482\n+#define VK_STOP 65480\n+#define VK_COMPOSE 65312\n+#define VK_ALT_GRAPH 65406\n+#define VK_UNDEFINED 0\n \n #define AWT_FOCUS_LOST 1004\n #define AWT_FOCUS_GAINED 1005"}]}