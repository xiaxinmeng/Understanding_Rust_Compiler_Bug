{"sha": "94b94c0bb1ca52f2b6912852cb40240efe72e82b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRiOTRjMGJiMWNhNTJmMmI2OTEyODUyY2I0MDI0MGVmZTcyZTgyYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-06-17T20:23:35Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-06-17T20:23:35Z"}, "message": "libstdc++: Fix tests for uninitialized_value_construct_n\n\nIn my recent r11-1460 commit the tests had been \"improved\" before\ncommit, and no longer exercised the code paths changed by the patch.\n\nThis restores what I originally tested, so that the tests fail before\nthe r11-1460 change and pass after it.\n\n\t* testsuite/20_util/specialized_algorithms/uninitialized_default_n/sizes.cc:\n\tReplace Value type with int so trivial code path is used.\n\t* testsuite/20_util/specialized_algorithms/uninitialized_value_construct_n/sizes.cc:\n\tLikewise.", "tree": {"sha": "21d80f23a5820568e017e3b26fa8bac36dfbc153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21d80f23a5820568e017e3b26fa8bac36dfbc153"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94b94c0bb1ca52f2b6912852cb40240efe72e82b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b94c0bb1ca52f2b6912852cb40240efe72e82b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94b94c0bb1ca52f2b6912852cb40240efe72e82b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b94c0bb1ca52f2b6912852cb40240efe72e82b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9dce3b15e89e851f59ebe9e8879c8f3a620311a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9dce3b15e89e851f59ebe9e8879c8f3a620311a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9dce3b15e89e851f59ebe9e8879c8f3a620311a"}], "stats": {"total": 58, "additions": 12, "deletions": 46}, "files": [{"sha": "6842c76df07828ad1936ef2f412d4c3caf61a47d", "filename": "libstdc++-v3/testsuite/20_util/specialized_algorithms/uninitialized_default_n/sizes.cc", "status": "modified", "additions": 6, "deletions": 23, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b94c0bb1ca52f2b6912852cb40240efe72e82b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_default_n%2Fsizes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b94c0bb1ca52f2b6912852cb40240efe72e82b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_default_n%2Fsizes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_default_n%2Fsizes.cc?ref=94b94c0bb1ca52f2b6912852cb40240efe72e82b", "patch": "@@ -18,25 +18,14 @@\n // { dg-do run { target c++11 } }\n \n #include <memory>\n-#include <algorithm>\n #include <testsuite_hooks.h>\n \n-struct Value\n-{\n-  int value = 0x1234;\n-};\n-\n void\n test01()\n {\n-  alignas(Value) unsigned char buf[3 * sizeof(Value) + 1];\n-  std::fill(std::begin(buf), std::end(buf), 0xff);\n-  const auto p = reinterpret_cast<Value*>(buf);\n-  std::__uninitialized_default_n(p, 2.0001);\n-  VERIFY( p[0].value == 0x1234 );\n-  VERIFY( p[1].value == 0x1234 );\n-  VERIFY( p[2].value == 0x1234 );\n-  VERIFY( *std::prev(std::end(buf)) == 0xff );\n+  int i[3];\n+  auto j = std::__uninitialized_default_n(i, 2.0001);\n+  VERIFY( j == (i + 3) );\n }\n \n void\n@@ -52,16 +41,10 @@ test02()\n     int operator>(void*) { return value != 0; }\n   };\n \n-  alignas(Value) unsigned char buf[4 * sizeof(Value) + 1];\n-  std::fill(std::begin(buf), std::end(buf), 0xff);\n-  const auto p = reinterpret_cast<Value*>(buf);\n+  int i[3];\n   Size n = {4};\n-  std::__uninitialized_default_n(p, n);\n-  VERIFY( p[0].value == 0x1234 );\n-  VERIFY( p[1].value == 0x1234 );\n-  VERIFY( p[2].value == 0x1234 );\n-  VERIFY( p[3].value == 0x1234 );\n-  VERIFY( *std::prev(std::end(buf)) == 0xff );\n+  auto j = std::__uninitialized_default_n(i, n);\n+  VERIFY( j == (i + 4) );\n }\n \n int"}, {"sha": "7ad55e0115702cf8b49fb11f9fb48f13bdd057f9", "filename": "libstdc++-v3/testsuite/20_util/specialized_algorithms/uninitialized_value_construct_n/sizes.cc", "status": "modified", "additions": 6, "deletions": 23, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b94c0bb1ca52f2b6912852cb40240efe72e82b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_value_construct_n%2Fsizes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b94c0bb1ca52f2b6912852cb40240efe72e82b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_value_construct_n%2Fsizes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_value_construct_n%2Fsizes.cc?ref=94b94c0bb1ca52f2b6912852cb40240efe72e82b", "patch": "@@ -19,25 +19,14 @@\n // { dg-do run { target c++17 } }\n \n #include <memory>\n-#include <algorithm>\n #include <testsuite_hooks.h>\n \n-struct Value\n-{\n-  int value = 0x1234;\n-};\n-\n void\n test01()\n {\n-  alignas(Value) unsigned char buf[3 * sizeof(Value) + 1];\n-  std::fill(std::begin(buf), std::end(buf), 0xff);\n-  const auto p = reinterpret_cast<Value*>(buf);\n-  std::uninitialized_value_construct_n(p, 2.0001);\n-  VERIFY( p[0].value == 0x1234 );\n-  VERIFY( p[1].value == 0x1234 );\n-  VERIFY( p[2].value == 0x1234 );\n-  VERIFY( *std::prev(std::end(buf)) == 0xff );\n+  int i[3];\n+  auto j = std::uninitialized_value_construct_n(i, 2.0001);\n+  VERIFY( j == (i + 3) );\n }\n \n void\n@@ -53,16 +42,10 @@ test02()\n     int operator>(void*) { return value != 0; }\n   };\n \n-  alignas(Value) unsigned char buf[4 * sizeof(Value) + 1];\n-  std::fill(std::begin(buf), std::end(buf), 0xff);\n-  const auto p = reinterpret_cast<Value*>(buf);\n+  int i[3];\n   Size n = {4};\n-  std::uninitialized_value_construct_n(p, n);\n-  VERIFY( p[0].value == 0x1234 );\n-  VERIFY( p[1].value == 0x1234 );\n-  VERIFY( p[2].value == 0x1234 );\n-  VERIFY( p[3].value == 0x1234 );\n-  VERIFY( *std::prev(std::end(buf)) == 0xff );\n+  auto j = std::__uninitialized_default_n(i, n);\n+  VERIFY( j == (i + 4) );\n }\n \n int"}]}